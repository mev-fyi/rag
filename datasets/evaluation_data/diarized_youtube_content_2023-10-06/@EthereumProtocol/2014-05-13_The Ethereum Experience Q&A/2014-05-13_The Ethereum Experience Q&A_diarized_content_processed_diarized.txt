00:01:03.850 - 00:01:06.480, Speaker A: So we're going to do a quick q and a.
00:01:07.250 - 00:01:14.346, Speaker B: How would you verify or how would the escrow service verify that the cup was delivered? That's the tricky.
00:01:14.378 - 00:01:14.574, Speaker A: Right?
00:01:14.612 - 00:01:36.282, Speaker B: Because it's a physical thing and it doesn't just plug into anything online. And the more general question I have is to do with your reputation system. I see you're going to use some sort of web of trust based thing, but is it a little similar to the kind of thing that namecoin has been fiddling with? Is it quite different? Could you just give a general sketch of the kind of system you're going to go for?
00:01:36.416 - 00:02:14.578, Speaker A: Yeah, both good questions. So the first one, nobody knows that the cup has been delivered. Alice. Alice is selling the cup. When Bob receives the cup, he has two options, assuming Alice has sent it. The first is to not accept it, not inform the blockchain that the cup has been delivered. And the second is to inform the blockchain.
00:02:14.578 - 00:03:02.920, Speaker A: If he doesn't inform the blockchain that the cup has been delivered, then what happens? And what happens depends entirely on the escrow contract. First thing that we know is he won't get any extra reputation. And the second thing is that he probably won't get his money back, or at least not all of it. Again, that depends on the escrow contract. One escrow contract would be, if it cannot be agreed, Alice, the sender gets, say, 50%, 25% of her money back, some proportion, and the rest goes to charity. What about collusion with Alice? Yeah, that's a reasonable thing. The thing is, with this sort of attack, which is effectively a civil attack, there's really no prevention against that.
00:03:02.920 - 00:03:49.750, Speaker A: One possibility of prevention could be to implement a proof of work so that all people who want to conduct transactions need to do some baseline amount of computation which could help protect against civil. But again, for a sufficiently determined attacker, you can't protect yourself. But that's the case with all encryption, all security. You cannot protect yourself, protect yourself against the sufficiently determined attacker, a stacker with sufficient amount of resources. The question is trying to get to that sweet point where it's just not worth it. I see. So the second question, refresh my memory.
00:03:50.890 - 00:03:54.200, Speaker B: I wanted just a brief sketch of your reputation system.
00:03:54.650 - 00:04:55.820, Speaker A: Yes. I mean, these are early days for the reputation system. We don't have anything particularly concrete, but yeah, it would based around an idea of a web of trust. So I would commit to the blockchain if I knew you or didn't like you, or didn't know you or didn't trust you. For whatever reason, some transaction, and my friends would then effectively be able to pull me and pull my friends further still as to what they believed. Each time you would go down a leg, a sort of degree of separation, you would probably reduce how much you cared about their opinion. But the idea is that you have a basic circle of friends whose opinion you trust, their friends you trust less, and so on and so on, and you just want to encode that and access that data without any necessity to trust in any third party to collate it.
00:04:55.820 - 00:04:58.380, Speaker A: Great, thank you.
00:05:03.810 - 00:05:04.990, Speaker C: Hi Gavin.
00:05:08.130 - 00:05:08.954, Speaker A: Hi Gavin.
00:05:09.002 - 00:06:13.730, Speaker C: So you mentioned that the more decentralized the system is or platform is. Okay, thank you. Then it's obviously more difficult to hack or break. And of course it's true, except that in the case of Ethereum, the whole platform or the technology that kind of implements this is in a sense single point of failure in some way, even though there might not be a cooperation or organization behind it. My question to you is, how do you envisage the development, maybe kind of on a long term future plan for the development of Ethereum or the whole infrastructure? And maybe I would ask you to go a little bit beyond just answering, hey, just an open source project assurance or opinion, or like roadmap planning.
00:06:14.150 - 00:06:55.358, Speaker A: Okay, so it's important to split this into two distinct things. The first thing is the protocol, and the second thing are the implementations of the protocol. I do say implementations. If you only have one implementation, then suddenly you've only got one thing to attack. And if there's an issue with that implementation, then hey, it's attackable. If you got two or three implementations, ideally, the more the better. It's much harder to attack because it's unlikely that they'll be all wrong in the same way, because if they are all wrong in the same way, the chances are it's already in the protocol.
00:06:55.358 - 00:07:57.670, Speaker A: So then you say, right, well, what if the protocol is compromised? And that is a big issue. It's a very big issue. It's probably the biggest issue. So then what you need to do is make the protocol as simple and transparent as possible, as concise as possible, and get it checked by as many people as possible beforehand in terms of the actual methods of quality assurance. The protocol will be looked over by some of the sort of brightest minds in the world to make sure that it's not eminently, I mean, I count yourself as one, obviously victor, to make sure it's not eminently exploitable. The software quality assurance matters considerably less if you have multiple implementations, again, for the same reason, that they're all unlikely to be wrong in the same way. Different ways of developing software, especially done in different clean room implementations, if they are broken, they'll be broken in different ways, and thus it won't critically affect the network security because the consensus will still be with the majority.
00:07:57.670 - 00:08:51.190, Speaker A: So that's one thing we're doing. But of course other things we're doing to minimize the chances of a critical failure will be to put bounties up on final implementations, a really quite long period of time for those implementations to be checked and rechecked by people who are external actors to the project. So you're right in that it's a very important thing to get right, and there are a couple of points of failure that really need to be sorted. But we have an idea, and certainly it's open to the floor for anyone who wants to contribute, and open to the world, it is open source for anyone who wants to contribute ideas as to how to make it more secure.
00:08:55.130 - 00:10:04.640, Speaker D: Yeah, I'm really impressed with what you've shown us today. It's quite a comprehensive set of tools to address a lot of different problems. In fact, one of my biggest concerns though, as I look at it, is how comprehensive it is. When you talk about whisper and swarm and these other aspects to it that sort of we didn't know about very much. I guess we thought this was just Turing complete language on top of a distributed ledger, right? So the concern then becomes like you're almost reimplementing the entire web, right? And you're a team of a few people, and of course it's open source software. But I'm interested in hearing your perspective on what you're going to do to avoid rewriting Firefox, rewriting Chrome, rewriting a bunch of other tools that are now being developed by teams of hundreds and thousands of people. How are you going to distribute the development of the Ethereum platform so that you're not left just dividing up spreading yourselves too thin, basically.
00:10:07.010 - 00:11:21.378, Speaker A: So in my experience, and I have a little bit, the costs of writing software are considerably less than the costs of maintaining and altering and augmenting software. So personally, I don't think it's such a bad plan for there to be multiple routes to web, three of which the Ethereum software stack as I presented is one. I don't see that as being necessarily spreading as too thin. But if push comes to shove and we need to deliver something, then we deliver the true and complete blockchain, the Ethereum component. However, personally I don't think that's going to be an issue. The notion of Whisper was something that I had like over a year ago, and it seemed like an obvious, an obvious friend to the bitcoin protocol at the time. And now I realize it's a more obvious friend to the Ethereum protocol, and it was something that I estimated would probably take three to six months to implement.
00:11:21.378 - 00:12:04.580, Speaker A: I suspect it probably still the case. As far as the swarm goes, I mean, it's basically bittorrent. If we need to release Ethereum in the next, say, four or five months, we could do, and we could just use Bittorrent where swarm would be. It wouldn't be as secure, it wouldn't be as nice, it wouldn't be as clean, but it would be sufficiently effective. So exactly when those two get delivered depends on the resources we have and precisely how accurate my estimate is as to how much work they're going to take. But I reckon it'll be fine, to be honest.
00:12:07.130 - 00:13:01.240, Speaker E: Hi, Gavin, brilliant presentation, thanks very much. Good overview. There is a couple of things that I think I maybe missed, which was the value of ether, and whether or not it pays for the contracts and how you plan to regulate the value of that, and what the distribution model for those ether would be. I think that's a question that most people are interested in. The other thing that I know you may not have straight answers for that, but the other thing that I sense a slight reticence at the end of the presentation. And I just wondered how you thought Ethereum might interface with the safecoin project or how it relates to that, because that's a slightly different model of web three, and how an encrypted distributed Internet might work. And I just wondered whether you had any kind of thoughts on that, whether you wanted to make a comment on that.
00:13:02.010 - 00:13:50.790, Speaker A: Okay, so I'll take the first thing first, the value of ether. Yeah, see, that's kind of a hard one, because first and foremost, we're not pushing it as a, dare I say it, as a currency. It's a fuel, it's a token that we need to use in order to work around the halting problem. So the point is that the computation that the network does is a scarce resource. It's a very scarce resource because everybody has to do it. And so we need a way of policing that scarce resource and modeling it. And that scarcity, therefore, is modeled in tokens, and the tokens we just happen to call ether.
00:13:50.790 - 00:14:46.120, Speaker A: As far as where the value goes, that's pure economics, is supply and demand. The supply, if it isn't already made clear will be made clear before. Well, in the coming weeks. The demand is anybody's guess, but we've made very clear what that demand will be for. It's for a system Turing complete, consensus based blockchain technology. So if you reckon that a Turing complete blockchain, consensus based technology is going to be useful in the future, hey, maybe the demand will go up, but that's entirely, entirely the opinion of the individual.
00:14:47.390 - 00:14:53.740, Speaker E: But my question is more to do with the limitation of an issuance model of that.
00:14:56.110 - 00:15:41.734, Speaker A: The issuance model. It will be mineable and there'll be a genesis block that will have ether already in existence, and it will be attributed in part to the founders in order to help develop things on the system, not to mention to pay for their cavalier risk taking. But also it will be to those people who want to invest early on. Invest? I don't know. That's probably a wrong word. Stefan's going to tell me off now. Those people who want to participate.
00:15:41.734 - 00:15:44.138, Speaker A: Yes, develop on the system.
00:15:44.224 - 00:15:58.110, Speaker E: And the reason I'm asking it is because it seems to me that this system would kind of. You would have to buy into it if you wanted to use it, right. You'd have to buy e three in order to make contracts on this new network.
00:15:59.410 - 00:15:59.982, Speaker A: Quite true.
00:16:00.036 - 00:16:17.320, Speaker E: Which is something that you don't really have to do in the current model. A lot of the current Internet is kind of free to use, or free at the point of use, is it? So it seems almost like this is like a pay to use Internet and in a different way.
00:16:17.850 - 00:17:24.202, Speaker A: So you're right in a way. So the question is, how much does it cost? And is the current Internet actually any freer? How much does it cost? Well, assume that ether is worth about a dollar, more or less. That's what it's been touted at. Then the amount that you're going to need for a marketplace transaction is going to be of the order of a millionth or a 10th of a millionth of a dollar, not that much. So yes, you do have to pay, but in reality, you don't have to pay all that much because the computation to do that escrow transaction is actually minimal, really minimal, like considerably less than what you currently have to pay for a bitcoin transaction. And yet bitcoin is still considered free. The second thing is, you say that the current Internet is free, and I suppose in a way it sort of is.
00:17:24.202 - 00:18:00.040, Speaker A: But you do still pay, don't you? You pay in terms of your freedom. You pay in terms of your data Google doesn't offer Google Mail out of the kindness of its heart. It offers Google Mail because it wants to know all about you. Similarly with its search, similarly with Facebook, similarly with any Internet site at the moment that has adverts or has cookies or retains your information or collects your data, which is pretty much all of the useful ones. And of course you have ISP. But the thing is, that doesn't change. You still have to pay to access the Internet with this system too.
00:18:00.040 - 00:18:30.720, Speaker A: So, yeah, I'm not convinced that it is truly free, the model at the moment. And in comparison, at least we're being honest with web three. We're saying, yeah, you have to pay a bit, but the payment is necessary. And I'm sure that you'll end up with services that will say, hey, if you trust your data to us, if you give us some reputation, we'll pay for your transactions. But at least then we're still being honest. And honesty is the thing that we really want web three to bring.
00:18:37.430 - 00:18:42.390, Speaker E: Do you see it as being interoperable with safecoin and the safe network?
00:18:42.890 - 00:19:25.080, Speaker A: Yeah, I'm in touch with the safecoin guys. They're really nice guys. I think it's to some degree, interoperability may well be possible down the road at the moment. It's early days and we're two different groups with sort of visions that are kind of similar, but two different ways of doing it. It may well evolve that we end up using some of the same protocols and there will be interoperability. That's a hard question to answer because it's some time off yet, but by and large I'm really happy that there's competition. I think competition a, keeps us honest and b, drives us to make something that's actually really good.
00:19:25.080 - 00:19:27.320, Speaker A: There's cross pollination as well.
00:19:28.890 - 00:20:11.090, Speaker F: I have a question, so if you have a contract, and in the contract I heard you can put some data in the contract. Let's say you put a small MP3 file or a book, pdf file. What happened if someone will chase you for copyright reasons, as in if a lot of people will start using this Ethereum to sell MP3 files, videos, for example, for tokens, for ether, they will make money. The press will start write bad articles about Ethereum eventually.
00:20:11.910 - 00:20:54.258, Speaker A: Yeah. So there's a bit of a huge can of worms regarding data sharing, and it's a hard question to answer, but the blockchain likely won't be used because it's too expensive. If you want to even put a small MP3 file on there, it'll cost you too much. And then you say, right, well, who do they arrest? Well, transactions on the blockchain are pseudonymous. There's no IP address associated, so you can't really track it down. 1st, 2nd, everybody has a copy of the blockchain, or at least all the people are running full.
00:20:54.344 - 00:21:01.278, Speaker F: The book is encrypted, so you have to pay in order to receive the Pdf file or the MP3 song.
00:21:01.374 - 00:21:28.426, Speaker A: Well, the encrypted data in and of itself isn't distributing data that nobody has a key for is just random data. So the data distribution itself is fine. The question is, if you provide a key that then unlocks that data, that may well come under the bad side of the law. You're committing a law.
00:21:28.448 - 00:21:41.770, Speaker F: So the press will start write bad articles about this project like they did with bitcoin. Well, Hollywood will say bad thing, like don't use Ethereum. There are some pirates there selling videos.
00:21:41.860 - 00:21:44.180, Speaker A: Yeah, you're right.
00:21:44.710 - 00:21:51.860, Speaker F: And they will start chasing people like do you have Ethereum on your computer? Yes, you are arrested or something like that.
00:21:53.590 - 00:22:49.206, Speaker A: So this is one of the reasons that we want to make sure it's used for legitimate applications, because how do you make sure we want to make sure that the press and indeed the public understand that this is something that's in the public good? And they could say the same exact argument for bitcoin, for the Internet, for probably most technologies when they're in their early days, they're used by all sectors of society and there's not a lot that we can do against that. It is a powerful technology and it's not going away. The best that we can do is to shepherd it into good uses and hope that the press will give a balanced view on it. Really hope.
00:22:49.308 - 00:22:50.520, Speaker F: Let's hope so.
00:22:53.850 - 00:22:54.630, Speaker C: Nick.
00:22:56.490 - 00:23:42.760, Speaker G: So I think Turing, complete extensions of scripting language of blockchain is potentially a good idea. But what concerns me is that this is effectively a pre mined currency with a genesis block creating a larger number of ether for the original creators. There's been, I don't know if you're aware of it, a fork of the Ethereum source guide. I think you pronounce it Ethereum, which distributes coins to the existing bitcoin holders. So my question is, do you really think that giving bitcoins or monetary incentives to developers is necessary considering the success that open source has had without monetary incentives in the past?
00:23:46.250 - 00:24:50.330, Speaker A: Yeah, that's an interesting question. So I suppose the question that you have to ask really is, will Ethereum be developed if you don't and will it be developed to the same degree and will we have the same mainstream adoption which protects all of us if it's not funded and well, everyone's got their own opinion, right? But I think a reasonable answer would be no it will not. Now they say, well, there's open source, but yeah, sure. Was Linux all that good in the early days? Has it not got an awful lot better since cash was poured into it? Since professional programmers work on it in not just their spare time? What open source projects can you name that are purely, purely spare time? Volunteer projects that have no economic incentive and yet are still on par with professional software?
00:24:51.310 - 00:25:07.982, Speaker G: Well, I know it's not a particularly good example recently, but the OpenSSL project received less than $2,000 a year in donations and that did power. What does power most of the web? The Ganu project doesn't receive a huge amount of money, and yet that still powers pretty much every Unix basis.
00:25:08.046 - 00:25:13.986, Speaker A: The GNU project actually receives fair amount of cash, which is fair enough, but.
00:25:14.008 - 00:25:29.900, Speaker G: Nonetheless another concern I have is that yes, so say, even assuming that a huge amount of money is needed to sponsor the development of Ethereum, it's not the community that gets to decide who spends that money and where that money goes, it's you.
00:25:30.990 - 00:25:46.830, Speaker A: Sure though at least personally I consider myself responsible to the community. I mean if I didn't, I wouldn't get up here and talk to the community. I won't look the community in the eye and say this is what I want to do.
00:25:46.980 - 00:25:51.760, Speaker G: But if we're arguing against centralization, wouldn't you see this as an issue?
00:25:54.050 - 00:26:39.134, Speaker A: Hey, you're not funding it by one person. But yeah, sure, you have to flow through a certain number of people. But if you want to give a management strategy or a way of funding the money in a decentralized fashion in order to get the job done, then come along with it. I'm completely open to it. We're trying to work that out right now. We want to turn Ethereum into a distributed autonomous organization. Ultimately the question isn't would we do it? The question is more can we do it? And at the moment I'm not aware of any way of taking funds that can pay for things like travel, getting to conferences, getting organizing this event.
00:26:39.134 - 00:27:29.310, Speaker A: This doesn't just grow on trees. The methods of setting up communication are not free. The methods of doing development are not free, and the methods of feeding clothing are not free. If we can set that up in a fair and decentralized fashion, then I'm in the queue. But right now the obvious way of getting the job done is to do it in a least semi centralized way. And hopefully in the future we can turn that into something a bit more, I don't know, democratic or whatever, but right now we just want to get it done. Could Ethereum work as a bitcoin side chain? Potentially.
00:27:29.310 - 00:29:05.120, Speaker A: Well, firstly, side chains have not been implemented yet, so it's not clear that they're actually possible or workable or engineerable or efficient. But let's assume that they are all those things and that they can pull it off potentially is probably the best answer. Then the question is, well, do you really want it as a bitcoin blockchain along with all of the bitcoin hubri? Now, bitcoin based on Shah. Three, if bitcoin were to become super huge, handling tens, hundreds of trillions of dollars worth of transactions, suddenly it becomes really, really attackable, because a company like intel just produces a really, really fast sha, two, five, six chip. It doesn't tell anybody about it, and then it just has 51% of the mining and it can get rid of transactions as it wants. Personally, I would prefer to leave bitcoin. If I were the rule of the world, I would prefer to leave bitcoin to what it does and what it's doing, and would prefer to reengineer a situation, a solution from the ground up, and make a relatively clean break.
00:29:05.120 - 00:29:39.900, Speaker A: And I foresee this with Ethereum as well. Ethereum, at least sort of 1.0 Ethereum, that we're presenting the Ethereum in the formal specification. The Ethereum, that is a white paper that Vitalik has already written, is a first version. And when we move on to the second version, I would like to see a break with the first version almost as much as there is a break with bitcoin. Now, the one thing I would keep is the existing stakes. So distribution of ether, I would move into bitcoin, into Ethereum too.
00:29:39.900 - 00:30:08.900, Speaker A: But by and large, the protocol should be a break. And the engineer inside me wants to do the same thing with bitcoin. Isn't the 51% attack issue the same for any mining? Well, it is, but the difference is that the proof of work that Ethereum is pursuing would not be asicable, and as such, would be considerably mitigated against.
00:30:14.950 - 00:30:16.738, Speaker G: What's the proof of work that allows.
00:30:16.754 - 00:31:17.020, Speaker A: You to get around that litecoin used to not be asymmetable? Yeah, litecoin is still based on a cryptographic hash, which is a trivial algorithm. The proof of work that we're pursuing would be both memory hard and a Turing complete instruction set would be required in order to compute any given nonce. And so when looking for the new nonce, when doing the proof of work, the hardware that you'd require would be general purpose. And so if you made an ASIC, which may well be possible, I don't doubt it. But the ASIC would simply have the Ethereum virtual machines instruction set. And as such, if it was significantly faster than a modern cpu, you would just use it as a modern cpu. Any more questions?
00:31:19.170 - 00:31:32.914, Speaker H: Hey, we all know that your average Bob doesn't really give a damn about security or privacy. Probably security is less so. Nobody likes getting hacked. But privacy and a safe node, and.
00:31:32.952 - 00:31:34.180, Speaker A: Who the fuck are they?
00:31:35.350 - 00:31:47.910, Speaker H: So how would you sell the concept of distributed decentralized apps to Bob? The fact that you should buy things of Alice, not eBay?
00:31:49.930 - 00:33:05.390, Speaker A: Yeah, I thought about it myself. I think basically the answer lies in the honesty. This is the correct engineering solution to the problem. It's not that it's a set of technologies in order to address one thing, it's simply that it's the way that technology should be. It's beneficial to everybody, it's more efficient, it's more effective. It just so happens, unsurprisingly, that when we implement things in this way, certain abuses and corruptions become harder, certain failures become harder. To give a more concrete example, because information is flowing through each participant, the sort of things that you want to see, that you want to keep updated on, can be implemented in a much more efficient manner.
00:33:05.390 - 00:33:09.390, Speaker A: The information is already there for you to pluck out from the stream.
00:33:11.350 - 00:33:11.666, Speaker C: In.
00:33:11.688 - 00:34:19.990, Speaker A: Terms of getting the data. Whereas before, you have to rely on data centers on single points of failure using a decentralized system, things like denial of service attacks, where lots of computers all pummel a single computer in order to slow it down and potentially disrupt what it's doing, become really quite hard. A distributed system, when all the computers are serving out all the data, you can't denial of service all of them at the same time. There's no single point to attack. And so when selling it to. I mean, I don't know if it's really easy to sell it in the language that the average Joe might understand, but certainly when selling it to companies, to people who want to put on services and sell their service, you say, right, well, it's actually dos resistant, just out of the box dos resistant.
00:34:21.050 - 00:34:29.770, Speaker H: Would you say the services and goods sold provided through this system will be cheaper because you essentially remove the middleman.
00:34:30.350 - 00:34:46.990, Speaker A: The transaction fees and so on, quite in terms of the engineering, it's more efficient and as such, we would expect it to be more economic. All right, that's the last two questions. Yeah.
00:34:47.140 - 00:35:34.718, Speaker D: So you showed us a view where you said that lots of things would be updated in the interface automatically, and there'd be kind of a steady flow of information coming to each ethereum client. And I'm wondering at some point or how you're addressing scalability. Right. Because how do I know that some other person, of the 10 billion people on the earth, whenever 10 billion, when we reach that, how do I know that one of those persons wants to whisper to me? And if we're getting random transactions from lots of different people, how can we ensure that someone's even online at the time that you want to get the whisper? That kind of thing? That makes sense, sort of, yeah.
00:35:34.884 - 00:36:08.778, Speaker A: To some degree, the notion of the whisper protocol is not synchronous or asynchronous at the moment. When we send a message, we expect either it not to go through or it to be stored ready for the person to read when they come back. So email, for instance. We send an email. If they're not online at the time, then it just waits for them. And then when they come online, they can read their accumulated emails. A phone call, if they're not right by the phone at the time, then it doesn't go through and we know it.
00:36:08.778 - 00:36:53.286, Speaker A: In both situations, that's great for understanding, but it's not great in terms of the technological implementation. So we make something that's more honest in terms of how it's implemented. We say, build upon this. You can send a message, and if the person that you are wanting to address is not online, doesn't receive the message, then you wait a while and you send it again in the same way that with a phone call you kind of keep ringing back, but it's done automatically, so you don't realize that that's what's happening. But how do you scale to have.
00:36:53.308 - 00:36:56.050, Speaker D: The blockchain on all of the computers in the world?
00:36:56.220 - 00:37:47.670, Speaker A: So specifically for Ethereum, the architecture that we've given is a first version? I think it's really important to press that point. It's, as it stands, not going to scale to the whole world. Doing all their lives on the blockchain won't work. But over time, with sufficient resources, we do hope. We have a few ideas already, and we do hope to get some of the best minds in the world working on that as a research problem. And with a bit of luck. In one to two years we'll have a pretty good idea as to how to make a technology that really does scale.
00:37:47.670 - 00:38:00.862, Speaker A: So in effect, sort of trying to divide and conquer on the blockchain, having multiple shards of the chain and having each shard cooperate only when necessary. It's a work in progress. We don't have all the answers yet.
00:38:00.916 - 00:38:25.890, Speaker I: So my question is about the URLs that you display in the presentation URLs, or let's call them those domains to access the contracts. Right. So can I register one of those if I don't have a contract? And if I register that, like, can I, I don't know. Ethgoogle.
00:38:28.570 - 00:39:00.382, Speaker A: Yeah, that's nice. One to finish on. We're not really sure how we're going to give out the names. Probably a few will be reserved. I don't know. Does anyone here have a great idea as how to sort of re bestow all of the use what, sorry, use existing bonus. Okay, so offer all of the companies that already have a.com.
00:39:00.436 - 00:39:08.270, Speaker G: Hey, use what Namecoin is and have the price of registering an exponential decay. So registering domains initially and.
00:39:15.710 - 00:39:16.460, Speaker D: Everyone.
00:39:17.950 - 00:39:58.920, Speaker A: So that's reasonable. An auction is also, is also reasonable. The key issues with those are that what do you do for renewal? Is it a lifetime registration? Do you have to do it in a year? If you do it in a year, do you get first refusal? It's a complicated question and one that we will be looking into and discussing. Say again, create a dow that issues then. Yeah, but how does a Dow issue then could you, sorry, what happens is the funds receive go to the funded development of blockchain. Yeah, it would be nice to take money and use it for the. But again, then people say, oh, well, this should be fair.
00:39:58.920 - 00:40:01.980, Speaker A: It doesn't cost anything, so why should we pay anything?
00:40:02.670 - 00:40:09.886, Speaker G: Could you very briefly comment on what you're doing with the work with open transactions and if that's going to allow us to build some kind of bitcoin bridge to the system.
00:40:09.988 - 00:41:14.670, Speaker A: As it stands, we're not doing any work with open transactions. Open transactions are a company in the same sphere and we're friendly with them, but there is no partnership as it stands. One thing that we could collaborate with them on in the future are off chain Ethereum transactions. So the case where, well, we got all this stuff to do, we basically trust each other and we kind of trust this third party open transactions. So what we do is we each sign and we get them to sign and then they sort of bundle it all up and put it as a single transaction on the Ethereum blockchain so that later on it's still archived. But because we all basically trusted each other, we didn't need to use the actual blockchain in order to arbitrate. So that's something opentransactions may well be able to help us with, but at this point, there's no partnership.
00:41:15.810 - 00:41:18.640, Speaker H: All right, guys, so that's it for the Q A.
00:41:19.490 - 00:41:20.490, Speaker D: Thank you, Gavin.
00:41:20.570 - 00:41:32.290, Speaker A: Thank you. So I think the guys who still sell the drinks outside. Simon.
