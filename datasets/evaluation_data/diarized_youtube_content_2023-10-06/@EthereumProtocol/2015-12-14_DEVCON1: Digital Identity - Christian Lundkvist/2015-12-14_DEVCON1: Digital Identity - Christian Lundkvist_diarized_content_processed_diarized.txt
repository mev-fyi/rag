00:00:16.250 - 00:01:05.694, Speaker A: Okay, thank you, Ming, and thank you for having me. I'm going to talk about digital identity. The. My original topic was to talk about digital identity and public key infrastructure, but there's only 20 minutes, and who am I kidding? So let's launch right in it. So what is digital identity? So, conceptually, it's a digital object that maps onto a physical entity. Normally, when we talk about this stuff, we're talking about people, but it can also mean a company, a corporation, or a device. So the common saying is that on the blockchain, nobody knows you're a fridge.
00:01:05.694 - 00:02:20.890, Speaker A: And so they're talking about digital identity. Why do we want digital identity? So we want to tie actors in the physical world to the digital world. So this is, for instance, good, because it allows actors with some authority in the physical world to express that authority on the blockchain. So you can imagine a form of proof of birth or proof of death as a digital attestation or signature by a doctor. Also, digital KYC is a common use case where a bank attests that they've done certain checks and now that at the station can be used on a blockchain in a smart contract doing crowdfunding or what have you, it also allows mapping of social structures into the digital realm and kind of enhancing social structures through smart contracts. So this is, for instance, community formation. We have a DaP called inflect that uses this.
00:02:20.890 - 00:03:25.482, Speaker A: Also, reputation systems are anchored in this notion of digital identity because digital identities say stuff about each other, and that forms reputation. There's also the humanitarian side. A lot of refugees or victims of human trafficking often lack paper documentation altogether. And if we can have a system where you have digital identity system, maybe coupled with biometrics run by ngos, et cetera, this might help a lot of people. How do we map from digital to physical? The most common form is by using a secret that only the physical entity knows. So, for instance, on Ethereum, you have an ethereum account or an address that has an associated private key. And anyone who has that private key can send transactions, interact with contracts, et cetera.
00:03:25.482 - 00:04:32.446, Speaker A: And so the assumption is there that the holder of the private key is the physical entity, and it maps onto the blockchain. Another example is Facebook. If someone has my password to Facebook, they can post on my wall, and they can kind of act as me in the context of the Facebook platform. So lastly here, a digital signature is proof of knowledge of a secret without revealing the secret. So this is why digital signatures are so important for blockchains, because it authenticates that you know the secret and that creates the mapping to the physical entity. So the most common form of digital identity today is what we call federated identity. So this means that you have a third party identity provider that handles this mapping from the digital to the physical.
00:04:32.446 - 00:05:49.858, Speaker A: And so whenever you act as your digital identity on a blockchain or in a digital space, you do so through this centralized intermediary. So I'm sure you all have seen login with Facebook, login with Google. This is Facebook acting, or you are acting through Facebook as a digital identity. So what we want to try and move towards is this notion of self sovereign identity. So this image came up when I googled self sovereign and isn't it so empowering? So this is the idea of having the user actually be in control of their own identity. If we use a platform like Ethereum, then smart contracts can do a lot of what the central identity provider like Facebook does while being a shared resource owned by no one and everyone. The idea here is that the user controls their private keys when interacting with the blockchain.
00:05:49.858 - 00:07:02.500, Speaker A: But critically, the user can also choose to let a third party control the keys for them. So we can have all the benefits of the federated identity model in the self sovereign identity model. So how do we build a digital identity system with self sovereignty at the core? So the starting point is the notion of a public key. So with every public key comes an associated private key, and the public key then becomes this digital object that is mapped to the private key holder, which lives in the physical realm. So examples is an ethereum address, a bitcoin address. It's something like a mini lock id if anyone has used or heard of minilock. This is like a very one dimensional atomic object.
00:07:02.500 - 00:07:58.130, Speaker A: But sometimes this is enough. Like if I go on UJo music, for instance, and I want to buy Imogen Heap's latest song, imogen might not even care who I am. She only cares that she gets paid. And so the only information she needs is that there is some kind of identity here and I got paid by that identity. So sometimes this is all that's needed. Most of the time, though, you want some more information. So what we want to try and do is tie some data cryptographically to this key and we can do so using smart contracts or in other systems.
00:07:58.130 - 00:08:38.830, Speaker A: You might be able to do it using digital signatures. So some basic stuff we can attribute to the key is name, maybe a profile picture, email, et cetera. In cases of corporations, you might have some tax information, et cetera. Or for the balance three triple entry accounting system. You have an accounting ledger that's attached to your digital identity here. We could also bootstrap other services. So you can have an attribute.
00:08:38.830 - 00:09:05.290, Speaker A: Attribute? Attribute, yeah, that's. You can have an attribute which is your Twitter account, your Facebook account, GitHub, et cetera. So here is kind of what it can look like. Do we have a laser thing? Is this. No. Anyway, I'll just point. So we have this public key, which is kind of the core of the identity.
00:09:05.290 - 00:10:02.170, Speaker A: The corresponding private key can create and control a smart contract that contains the attributes. So the attributes could be stored on the blockchain. But normally we use a system like ipfs that Juan mentioned, and we can have hashes that corresponds to objects stored in ipfs. A second thing that we want to have is attestations. So what this is that we can let other identities attest to the validity of the attributes that you connected to your public key. This can lend credibility to the attributes, while at the same time letting the user have control of their own identities. So this could be, for instance, a government verifying your date of birth.
00:10:02.170 - 00:11:10.930, Speaker A: So you yourself claim that your date of birth is January 1, 1980, and the government can come in and say, yes, we verify that this is true because we saw the birth record or something, and they can do a digital signature. And now you have on the blockchain a very strong, very strong certificate, if you will, that this is correct, at least according to this government. Another one is in the banks. They can verify that you have an accredited investor status. And so this means you have to have more than $250,000 in an account or something like this. More advanced is reputational attestations, which we'll hear more about later by Andre. So this would be not just saying that this information is correct or not, but kind of like more fussy things like, I bought socks from this person and it was good, so I give five stars.
00:11:10.930 - 00:12:13.960, Speaker A: So this is what it can look like. In that case, you have two of these identities, and this one has two attributes. The other one has one attribute, and one can do an attestation of the other. So it's a very abstract concept, but in general, you get things like certified things by authorities, but you also have the notion of web of trust, where you can build reputation, et cetera, from the attestation of your friends. So this sounds pretty good. There is a big problem though, and it's the following that Vitalik brought up during the web of trust conference in Francisco. The thing is, what if you lose your private key.
00:12:13.960 - 00:13:52.614, Speaker A: And you kind of don't want a system where if you lose your private key, which people do all the time, you don't want to lose your identity because that's too much power to put in this one thing. So we need to be able to recover from key loss, which is I have my key on my phone, I lose my phone, what do I do? And key compromise, which is some attacker gets my key and starts acting in my name. So how do we do this? Well, the way that we've approached it is we won't allow the user to revoke and replace a key that they suspect might be compromised. So let's say I lose my phone, but I have a backup, okay, someone could maybe find my phone and get that key. So I want to make sure I replace that key so they can't start acting in my name. And then if I lose complete control, I could have a smart contract that I delegate the authority to regain control for the user. So a specific case of this is that you can have a multi sig setup where you have three of your friends and then two of them are needed to regain control for me.
00:13:52.614 - 00:15:08.750, Speaker A: So they would basically be able to override the current key and say, here is another key that is now in control of this smart contract. So let me talk about what we've been doing at consensus with the uport initiative. So this is basically trying to take these ideas and make a functioning product out of it. So currently the current status is the following. We have this kind of core identity model where you have a controlling key that controls your identity, which is attached to attributes. We use iPFs to store these attributes. We have a registry where you can look up, you can look up the key in a registry and get the corresponding attributes.
00:15:08.750 - 00:16:47.530, Speaker A: This is currently used in house in a number of other consensus projects. So balance three, the triple Entry accounting system, the registry Builder I mentioned inflect the event and community management tool, and the Reddit like discussion platform nonsense. So here is kind of like a screenshot from bottom three where we see in the top right corner kind of a very familiar user badge thing. And that information is stored in ipfs and retrieved via this smart contract system. Future directions instead of having it be tied to a single private key, we want to tie the identity to a unique identifier so that we can have the type of key rotation, key revocation features that we talk about and also key recovery. We want to be able to have the attributes encrypted so that you can have private attributes and to be able to selectively disclose those to your friends or whoever. Also, integrating our reputation system is also on the roadmap.
00:16:47.530 - 00:17:05.780, Speaker A: So this is the team for uport and that's it. I don't know if I have time for questions. Sorry, I shouldn't have written that. But anyway, thank you so much.
