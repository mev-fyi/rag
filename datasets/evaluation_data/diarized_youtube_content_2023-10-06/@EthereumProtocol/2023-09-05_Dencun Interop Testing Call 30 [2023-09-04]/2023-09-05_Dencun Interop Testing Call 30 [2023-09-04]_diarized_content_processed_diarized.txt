00:04:33.660 - 00:05:02.030, Speaker A: Thanks, Pooja. Hey, guys. Tim is off today, so unfortunately, I'm the host of this call. Welcome to the Dancoon interop testing, call number 30. Let hopefully Teb will be back next week for you. Barnabas agenda looks pretty light, but I would like to hear what's going on with Devnet eight. Does anybody want to share an update? I noticed there's been some chatter in the interop channel.
00:05:06.180 - 00:05:36.840, Speaker B: Yeah, I can give a quick update. So this morning we saw some Bezu issues and Ethereum JS issues. So both of these clients had some issues syncing up to head. Bezu had some trouble with the blob hashes and transaction hashes, where it could not propose a block because they had some mismatched hash. Maybe someone from Bezu can give an update. I'm not sure. Is anyone here from Bezu?
00:05:42.330 - 00:05:43.606, Speaker A: Yeah, it doesn't seem like.
00:05:43.708 - 00:05:53.420, Speaker B: No, no. But they pushed out an update and it seemed to have fixed the issue. So now they are up to head and also they seem to be able to propose again.
00:05:55.570 - 00:06:02.270, Speaker A: Great. And the ETH JS issue, is that still being investigated?
00:06:03.570 - 00:07:12.822, Speaker C: This issue was mostly related to sync. And basically, generally what really happens is that EJS sync is not really production quality, and we are working on it, but sometimes gets stuck and one needs to sort of restart the client or resync the client, and that gets its resolved. That was the main problem. But the other problem that I noticed was with regard to Forkmon, because Forkmon, for example, at certain blocks, shows that EJS has a different block hash than the other clients. And when I sort of did get blocked by number on each JS as well as other clients. So that hash was matching. So there is another issue that we discovered in Forkmon with Barnabas is that the hashes that Forkmon is showing does not correspond to the actual block hash that is over there.
00:07:12.822 - 00:07:40.960, Speaker C: So there is a variance in what Forkmon is showing, as well as what the actual block hashes are, as well as the second issue with Forkmon is that for the same block for each JS, if you do get blocked by number, then the hash is correct and is matching with what other clients do get blocked by number. But somehow I'm not sure how Forkmon is collecting that data and where the issue is.
00:07:46.570 - 00:07:52.490, Speaker A: Okay, got it. Yeah. You reported these issues to forkbond?
00:07:54.030 - 00:07:55.066, Speaker B: Not yet.
00:07:55.248 - 00:07:55.980, Speaker A: Okay.
00:07:59.310 - 00:08:12.430, Speaker B: Maybe this week it's not really urgent because in general, it still shows if there's a mismatch, but just showing the wrong hash.
00:08:13.170 - 00:08:34.520, Speaker A: Yes. Got it. Cool. How did the Devnet look, last week I noticed there was somebody had posted an image of the Beacon chain website and there was a period where we were missing a lot of blocks. Is that the same issue that has sort of been resolved, or that was a different thing.
00:08:36.730 - 00:08:41.500, Speaker B: Last week? We did have issues. I don't think we had issues last week.
00:08:44.750 - 00:08:52.560, Speaker A: Sorry. I thought that someone had posted an image of the Devnet aid beacon chain missing like 50% of blocks for a period of time.
00:08:53.090 - 00:09:11.922, Speaker B: No, it was a specific client. It wasn't like it was one specific pair. That was not. Yeah, I think it was Bezu. So the Bezu fix is sort of resolved. Lighthouse still has some issues proposing blocks, but we'll see.
00:09:12.056 - 00:09:12.978, Speaker A: Makes sense.
00:09:13.144 - 00:09:17.190, Speaker B: I'm trying to get someone into the call from Bezu right now.
00:09:17.340 - 00:09:18.040, Speaker D: Okay.
00:09:19.770 - 00:10:01.620, Speaker A: Let'S circle back to that. If somebody pops into the call, there's another issue with pool transaction message RLP encoding. Is this similar to what we discussed a while back with the e 68 release and changing it for the future, or is this a different transaction? Do you know which clients are sending? Which ones? Is it a list versus wrapped issue?
00:10:03.830 - 00:10:18.550, Speaker D: Maybe we have different encodings. Nethermind and bathroom and I saw similar issue in factors for gas.
00:10:21.880 - 00:10:25.830, Speaker E: So all three clients have different encoding here.
00:10:27.480 - 00:10:36.330, Speaker D: Maybe Bessel copied from gas or something. Maybe we have three versions, maybe two. Sure.
00:10:37.500 - 00:11:01.360, Speaker A: Are you just referring to the test that's failing on Hive cancun? Or are you talking about something you're seeing specifically? Because I know the test that's failing for us on Hive Cancun is due to fork id mismatch, which. Yeah, that's something that there's a pr to fix right now. I don't think it has to do with the RLP encoding.
00:11:03.140 - 00:11:09.730, Speaker D: Let me find and post. And as for bettermind, we see it from the box.
00:11:10.520 - 00:11:42.620, Speaker A: Okay. I think Barnabas or Mario, your audio is really low. Oh, it looks like, yeah, I can't hear you very well. Good morning, Terrence.
00:11:44.240 - 00:11:44.956, Speaker B: Good morning.
00:11:45.058 - 00:11:48.030, Speaker F: Sorry I'm late. I almost forgot there's a meeting today.
00:11:49.040 - 00:12:20.970, Speaker A: It's a holiday. Yeah, you're forgiven. Okay, so there is. The rop was not part of the last pra. Just post on interop. If there's something specific we want to continue discussing about that. Was there any other Devnet eight related things that people wanted to discuss?
00:12:24.300 - 00:12:35.230, Speaker B: Could we merge three, nine, eight? It's been open for quite a while.
00:12:36.400 - 00:12:42.930, Speaker A: It would be nice to merge that. Yeah, I'll look into that today.
00:12:47.540 - 00:12:52.790, Speaker B: And is there any timeline for dead net nine that clients would like to.
00:12:54.280 - 00:13:10.184, Speaker A: Yeah, that's what I was also kind of curious about. I mean, just from guests perspective, I feel maybe next week we could have everything ready for Devnet nine. But. Yeah. Merrick. Yeah.
00:13:10.222 - 00:13:35.010, Speaker E: So we want to test syncing with all different client pairs, not only netherminds and it is currently running. So expect that we will share some results. But before we finish those testing, maybe it will better to not stop Devnet a. I'm not sure it should be anytime soon.
00:13:37.780 - 00:13:45.270, Speaker A: Got it. What is the eta of completion? Sometime this week?
00:13:46.120 - 00:13:55.220, Speaker E: Yeah, I think so. Basically we are running all client pairs right now and we are waiting for syncing.
00:13:56.940 - 00:14:21.490, Speaker A: Got it. Yeah, I think maybe shooting for September twelveth seems like a reasonable goal. What do people think? I know. Terrence, you were questioning the timeline that Dancrad was talking about on all core devs. I don't know what you think about Devnet nine next week.
00:14:22.180 - 00:14:49.688, Speaker F: Yeah, for local Devnet I don't really have much input. I think next week is fine. My feedback was more on my overall timeline, whether it's at 2023 or early 2024. But yeah, we don't have to get into this meeting. But I guess I want to confirm on the consensus layer side for that day nine. I don't think there's any change. Can anyone confirm this with me? That.
00:14:49.688 - 00:14:53.850, Speaker F: Is there any consensusary client team? I just want to make sure I'm not running here.
00:14:59.030 - 00:15:08.050, Speaker A: Yeah, that's my understanding. Also it seems like the big difference between eight to nine is that we'll not enshrine 4788 system contract.
00:15:11.910 - 00:15:22.040, Speaker F: Then from us. We just have one or two bot fixes. We can easily get in by the end of the week. So yeah, next week sounds good to me.
00:15:25.390 - 00:15:43.390, Speaker B: I know it's quite unrelated, but it would also be cool to have the Holosky releases by that day. Latest from each client team. Because we would want to make sure that Holosky is ready to go by the 15th.
00:15:46.850 - 00:15:47.600, Speaker A: Right?
00:15:48.370 - 00:15:55.138, Speaker B: Maybe even sooner would be probably better. It's quite unrelated though, to nine.
00:15:55.304 - 00:16:23.340, Speaker A: Yeah. So definitely need to have the Huluski releases out probably by the end of this week. Yeah, preferably. How about we post on discord saying that we'll try and target September twelveth for a Devnet nine launch and see if there's any feedback on that date. And if not, we just try and go for that.
00:16:23.950 - 00:16:29.550, Speaker B: Yeah, I think that's good. And I think we should push for September 7 for client releases.
00:16:32.210 - 00:16:40.830, Speaker A: Sounds good. I'll post a message here right after this call and get some feedback.
00:16:41.410 - 00:16:59.874, Speaker B: Any preferences for validator sizes for Devnote nine, by the way, because on Dev note eight we run a very low number of validators just so it's easy to add new ones and remove ones. But I'm just curious if we want to do a bigger test or if we're just going to leave the bigger test for forking.
00:16:59.922 - 00:17:04.870, Speaker A: Holosky did you just say fucking up, Holesky?
00:17:05.790 - 00:17:13.658, Speaker B: Not fucking up, just checking if everything works.
00:17:13.824 - 00:17:22.960, Speaker A: Just kidding. Yeah, I don't have a preference. I don't have any preference. Does anyone have a preference on this?
00:17:23.570 - 00:17:51.270, Speaker F: I do have a preference on like we use some sort of builder and relayer for definite night before using a testnet. Just because I feel like everything will break. I'd rather it break on definite not during testnet. So the question is the builder and the relayer readiness? I'm not so sure about that. I think host key is the first testnet and whether there will be builder and relayer at Hosky.
00:17:53.690 - 00:18:31.570, Speaker B: We are currently doing builder testing on kryptosis, so hopefully it's going to be ready by next week. I cannot promise it. What we're going to be trying to push for is a capella starting for Devnet nine. So we're going to be starting Shanghai and Genesis time is going to be the same. And this is also not something that the MeV software supports right now. So this is going to be a breaking change for them also. But yeah, I totally agree that we would want to onboard mev before we fork any testnets.
00:18:31.570 - 00:18:38.790, Speaker B: We need to make sure Mev works before we start messing around with Holoski.
00:18:40.890 - 00:19:53.070, Speaker G: Mario yeah, one thing that I noticed is that I was testing the mock builder in the kurtosis setup and the problem there was that the Meb boost that sits in between the CL client and the mock builder and the builder I was writing it was not ready for DNAP, at least as last checked last week. And what was happening was that my builder was building DnAP payloads for the CL and then when it sent them to the Meb boost and then the mev boost relate to the CL client, it stripped out all the nap related fields. So basically what was ending up in the CL was just the Shanghai payload instead of the Kangkong one. So that's a problem I don't think we can, I mean, unless we remove mev boost from kertosis and from the devnets, which I don't think it's really good idea anyway to properly test. We cannot test unless MeV Boost is updated.
00:19:56.130 - 00:20:07.730, Speaker B: Yeah, I assume we want to get mev boost updated though. That's the whole point that they need to support the nap. Otherwise we are kind of altered.
00:20:14.990 - 00:20:29.540, Speaker A: Who's the main people that we need to talk to about getting them to support the NaB? This seems like it needs to be kind of their number one priority. Is it just Metacris or is there anybody else that would be working on this?
00:20:34.550 - 00:20:52.520, Speaker B: We do have a channel for bots and MeV Boost and people are just quite unresponsive. So we've been trying to push for this in the past two months and yeah, we haven't got as much support as we were hoping for.
00:20:53.690 - 00:20:58.490, Speaker A: I see. But it's mostly just like the ball is in their court at this point and we're asking them.
00:20:58.640 - 00:21:00.300, Speaker B: Okay, exactly.
00:21:01.550 - 00:21:04.540, Speaker A: Let me make a note to follow up again with them.
00:21:10.910 - 00:21:11.478, Speaker B: It.
00:21:11.584 - 00:21:39.670, Speaker A: All right. Yeah, I guess that was kind of the last item. Also on the agenda was just talking about builder testing readiness. It seems like we're doing some testing in kurtosis. I mean, I guess I don't really understand. Like if Mfboost doesn't support the NEB, then what exactly are we testing with kratosis?
00:21:40.010 - 00:22:00.240, Speaker B: Well, the fleshbot guys are using kratosis to test the mev boost itself. So they are the ones that are pushing for this. So they can easily spin up a new Devnet locally on their machine and see if they can make mev compatible with.
00:22:03.570 - 00:22:08.240, Speaker A: The NEB. Work is ongoing for them and they're testing. Okay, I see.
00:22:08.950 - 00:22:11.940, Speaker B: So there's an open pr regarding this.
00:22:21.770 - 00:22:26.070, Speaker A: I think this one add the neb types in slow.
00:22:28.970 - 00:22:42.620, Speaker B: Wait, it's for kutosis though. I see. Once we manage to get it working in kutosis, then we can be quite confident that it's going to be supported also for Devnet nine.
00:22:46.350 - 00:23:05.170, Speaker A: Got it. Okay, let's follow up again with them, try and add a little bit of pressure and. Yeah, they need to be on Devnet nine. I don't think I agree. We need to not move to a public test before we're running the builder on the devnet. Mario?
00:23:07.030 - 00:23:50.240, Speaker G: Yeah, so another update is that we are currently working on supporting the mock builder, at least on Hive. So we can have regression testing there too. Basically just sort of sanity testing where we verify all the signatures that the Cl sends back to the builder and all of that stuff. Also including bad payloads built by the builder and those kind of sanity tests and sanity checks in the form of regression tests in Hive. So there's that too. We can have that in parallel to cortosis. And in parallel to.
00:23:53.190 - 00:23:59.506, Speaker A: Makes sense, this is testing specifically the builder API of the CLS, right?
00:23:59.608 - 00:24:38.160, Speaker G: Yeah. So the approach has been to have only the builder API interface tested in Hive. I don't know if anyone wants to chime in and let us know if we should include Muost, but I think this is another approach to testing without me boost just to test the interface builder API, the errors that can happen from the builder. Also, that's sort of the mentality that we are going with Hive testing for the builder right now.
00:24:39.250 - 00:25:08.650, Speaker A: Yeah, we've talked about this a couple of times and I do think this is the right approach for Hive. I don't think should be doing integration testing on every piece of the MeV stack in Hive. So yeah, if we have that implemented in Hive and then we're able to run some of this builder Mevboo software on the devnets and maybe in kurtosis, that seems like the right amount of coverage that we should be providing for that software.
00:25:10.990 - 00:25:40.530, Speaker G: Yeah, another good thing is that it's a little bit more robust right now, the mock builder as compared when it was testing in Shanghai. We are now verifying every single signature. This is related to the issue that was last found with MEb boost and one of the seal clients. So right now we are trying to enforce checking every single thing that we can on the mock builder to make sure that nothing slips.
00:25:43.400 - 00:26:00.900, Speaker A: Great. Okay. That's most of the agenda that was set on the issue. Is there any other topics that people are hoping to discuss today?
00:26:04.100 - 00:26:40.190, Speaker G: Maybe just to point out some existing openprs for Hive. One of them is the interrupt builder we're working on, and the other one is just to improve the execution. Client engine API coverage some of the clients have pointed out some coverage that is missing. So we are including more tests in these two prs that I submitted in the PM issue. Also, we're working on Python. Spencer pointed out some of the prs we're working on. I don't know if you want to just mention.
00:26:45.840 - 00:27:43.680, Speaker H: From the execution spec test side, Dan's been working on the transient storage tests for EIP 1158. This should hopefully add some more coverage. In addition to tests that I believe Dimitri added in the original theorem test repo, we've also been working on updating the framework to generate invalid field tests for the engine API payload fields. So currently when we generate tests, we don't have a way of generating them with fields that are deemed invalid by transaction tools, for example an overflow un 64 field. So we've been working on generating these types of tests specifically for the Dankoon fields. And then ideally once we get these working, we'll run these in the. I think Mario also added a test for beacon route deployment.
00:27:43.680 - 00:28:17.660, Speaker H: So this will be good for Devnet nine. Essentially tests that the expected beacon route contract is not present in the state before the Cancun fork and checks that the storage is not updated. And then. Yeah, just to kind of, I guess, orchestrate with when everyone wants to change the devnet nine. We have tests ready for it. So if September 7 is good, we can start running the hive Cancun tests this Thursday.
00:28:18.480 - 00:28:27.960, Speaker A: Yeah, awesome. Thanks for those updates, guys.
00:28:32.090 - 00:28:50.750, Speaker C: I have a question with regard to how the 4788 contract will be deployed. We at ethereum js are not clear about it because the sender that is there, do we have the credentials for it or will we deploy it using some sort of a system transaction?
00:28:52.770 - 00:29:51.060, Speaker A: Yeah, in the EIP, there is actually a complete transaction body there. So you can see that the signature is included in that JSON. So if you're able to read the JSON value and encode it into RLP, it can actually just be sent over the network and it will be included in a block once the sender account is funded with ETH. So it's not a transaction that we have the private key or it's not from an account that we have a private key for. It's more that the signature was chosen and then obviously using the EC recovery, able to figure out who the sender would be. So it's kind of a one time signature to send this transaction. Cool.
00:29:51.060 - 00:30:39.890, Speaker A: Any last comments or questions on Denkun? Okay, let's call it. I will post this message on all court devs. Just mentioning the request for a September 7 client. I think it was September 7. Yeah, September 7 client release for Heleshki. Sorry, September eigth date for client releases for Heleshki and targeting a September 12 launch of Devnet Nine. And we'll see if there's any feedback on those dates.
00:30:39.890 - 00:30:48.482, Speaker A: Thanks a lot for joining. We'll talk to you all next week. Thanks. Bye bye, guys.
00:30:48.616 - 00:30:49.120, Speaker H: Cheers, guys.
