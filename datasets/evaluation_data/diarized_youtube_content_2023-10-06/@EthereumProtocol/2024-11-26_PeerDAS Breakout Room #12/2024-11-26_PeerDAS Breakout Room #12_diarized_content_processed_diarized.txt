00:00:42.130 - 00:00:42.626, Speaker A: Hello.
00:00:42.738 - 00:00:43.430, Speaker B: Hello.
00:00:50.980 - 00:03:25.060, Speaker C: It everyone. I hope you have recovered well after DEFCON. Welcome to the peer test breakout room number 12. So let's start with the client update. Anyone want to start recent?
00:03:26.650 - 00:04:23.498, Speaker D: Yeah, hi. Yes. So right now we have the peerless branch which is on top of the develop branch and develop branch contains all the Electra changes. However, there is a lot of line of code, something like 20k line of code to merge. And so what we are doing right now is to slowly create some small pull request from the PR branch to develop branch reviewed by people in the Prism team which are not involved in pure DAs basically. And so yeah, we are slowly merging every change into the develop branch directly. And yeah, and so what I want to test now is to run to run peer DAS on top of Pectra.
00:04:23.498 - 00:04:45.194, Speaker D: I know we are not going to do that in the Devnet, but before running paradise on top of Fulu, I want to test it on Petra and when it's okay, I will try to implement Pactra on top of Fudu. That's all for me, thank you.
00:04:45.282 - 00:04:52.670, Speaker A: You mean full on top of Vector, right? Sorry, you meant the other way around.
00:04:53.290 - 00:05:08.786, Speaker D: Yeah, maybe. I'm sorry, maybe I mixed. Sorry. Maybe. Yeah.
00:05:08.978 - 00:05:33.490, Speaker E: We are revising to both Electra and Full. We will be able to start everywhere in Electro Full as soft forking in the at the start of the fork or everywhere in the middle. We will finish it at the end of this week, I hope. Already testing Already. Good, that's all.
00:05:42.350 - 00:05:49.540, Speaker C: Thank you. And next Lighthouse.
00:05:52.280 - 00:06:35.430, Speaker F: Yeah, so we have not started the rebase effort but it should be pretty painless due to the way we have architected it. We are currently focused on a V6 release in Lighthouse but we will wrap this up this week and focus on this PS F of map. I think no substantial updates. We have still pending refactoring sync to make it more resilient and I think some other bugs and improvements from previous tests. That's all.
00:06:40.880 - 00:06:56.700, Speaker C: Thank you. And anyone from Low Star? Anyone from Grantian?
00:06:57.440 - 00:07:28.810, Speaker B: Yes, hello. So handling from Fellowship program. He seems that they're basing on the on the develop branch. I think it's at this moment likely it's not clear. Is it. Is everything working all right? But I think once we once we will have a test net it will be much more clear of that. But yeah, essentially a large portion of rebasing is done.
00:07:36.640 - 00:08:23.410, Speaker C: Thank you. Do I have anyone from Nimbus? Okay. Anyone else I missed? I guess be more productive to talk about Devnet first. Like could you give an update about to Sync with everyone about the current plan.
00:08:24.590 - 00:09:33.940, Speaker A: Yeah, so the current plan is to launch the devnet on top of Spectra and not not to do another devnet with the previous spec because everyone is already working heavily on the rebase. So I think it would be just duplicated efforts to do another devnet now. So the plan is to have petrodivent five packs finalized by end of this week. Hopefully we're gonna be discussing this on Thursday on ACD call regarding 7742. Then hopefully we can launch Petrodevent 5 next week or maybe the week after that. And then we would probably want to have at least a week of civil finality before we can rebase on top of that spec all the peer deck changes and then we could activate Peer desk as fulu or as VIP 7594 fork version and fork epoch. It depends on the client implementation, whichever is easier for them.
00:09:33.940 - 00:09:44.780, Speaker A: But you can just define both of them and whoever wants to ignore Fulu can ignore Fulu and whoever wants to ignore EIP 7594 can ignore that.
00:09:51.320 - 00:11:06.140, Speaker C: Thank you Barnabas. Does anyone have concern or question about this guideline or print? Okay, I guess the the TBD is if we can launch pictures we expected. Right. Then any other question about definite Otherwise we will jump to the spec discussion. Any spec items we'd like to discuss today I saw agenda that population posted the cargo network one.
00:11:07.160 - 00:11:28.840, Speaker D: Yeah. I would like to ask for a last call in this meeting because it has been open for a long time already. So yeah, is there any objection or is any recommendation to postword it or if not I think like yeah, we should modify now.
00:11:46.340 - 00:11:46.748, Speaker F: Okay.
00:11:46.764 - 00:11:51.520, Speaker D: I think yeah. So. So I think we can watch it now, right? Yeah.
00:11:54.090 - 00:12:23.436, Speaker C: I guess the maybe mild questions we waited to include it to the definite. The incoming definite. Yeah. For the decouple.
00:12:23.628 - 00:12:24.400, Speaker D: Yeah.
00:12:26.820 - 00:12:33.600, Speaker C: Maybe can the client give us some up about definite ready readiness?
00:12:41.220 - 00:13:27.450, Speaker D: I mean right now we struggle to have a devnet running with finality for more than one week. I'm not against this spec change, but I think I would like to see before merging it before implementing it in the next devnet. So before implementing it I would like to see at least one DevNet running correctly for at least one week without losing finality. And yeah, that's why I think maybe it's not worth it to merge it right away and to integrate it for the next for the next devnet.
00:13:36.680 - 00:13:44.060, Speaker C: Thank you manu. A new one has 10 or different opinion here.
00:14:14.050 - 00:14:47.340, Speaker D: And I saw Francesco ask a question about validator custody I would or the same before adding new stuff a part of you know running as follow Yes I think we would like we would need to be as conservative as possible in order to be sure to have a finalizing devnet at least once.
00:15:03.570 - 00:16:58.030, Speaker C: I mean I tend to agree just wonder how how much change it would be for the client it yeah Any other feedback on the decoupled softening one those like no nice to have and like two weeks later is is it a nice is a I mean do we have this bandwidth to include this nice to have then I think we could go but I mean at the moment for the stick I mean can we can the clienting signal more ball should we go or not here I mean I think things prison will signal it but how about other things.
00:17:08.100 - 00:17:09.640, Speaker D: What do you think about it?
00:17:15.060 - 00:17:46.290, Speaker E: I don't know we spent a lot of time of merging both branches Master Electra and Perdas in in the fork and I would like to end with soon but if I agree with you that current vector net is not yet stable and if we add to this our not very stable Perdas it could be a mess so I think I could agree on both.
00:17:53.240 - 00:17:55.380, Speaker C: About Lighthouse.
00:18:00.680 - 00:18:02.380, Speaker F: Either way it's fine for me.
00:18:16.770 - 00:18:18.830, Speaker C: How about gradient.
00:18:24.210 - 00:18:28.310, Speaker B: Same I think it's okay both for us.
00:18:41.420 - 00:19:32.570, Speaker C: If so I say that merged okay thank you. And the next item probably the one that Francesco posted in the chat about the vendettor custody. It's been a while anyone wants to give an overview of any concerns or any support of SPR or it's just good to merge right now.
00:19:39.200 - 00:20:13.940, Speaker D: I would say the same thing than for the previous spec change. I mean right now we didn't have any finalizing devnet so I would like to before introducing new changes I would like to see at least once finalizing DevNet. I'm not against if every other client wants to merge this pull request it's okay to me but I just feel it will introduce more an additional complexity and without this complexity we already struggle to have something working right now.
00:20:35.290 - 00:21:31.400, Speaker G: So I mean depending on how many validators are what what is the distribution of validators on nodes in a devnet then it should make it easier but on the other end you could just do the same thing by just having more super nodes or more nodes that do more than the minimum custody. So it doesn't really help in that sense. Like maybe if anything it could even make it slightly less flexible. Like maybe now you need to pay attention to the validator distribution to figure out the distribution of casualty Requirements instead of just setting whatever you like. So yeah, I don't know. I can see an argument for just not doing this and just more ad hoc. Just continuing to set a certain number of super nodes until we can get something that works.
00:21:31.400 - 00:21:41.720, Speaker G: I feel like this would be very helpful on mainnet. I don't know how helpful it is on. In actually getting to work on devnets.
00:21:45.340 - 00:21:51.040, Speaker H: Yeah, that's fair. We could also, I guess achieve the same thing by just doing a super node only network.
00:21:52.670 - 00:22:13.450, Speaker D: Maybe I'm wrong, but if we do this validator custody on DevNet, I guess all nodes will become super nodes because basically every client, every node has a lot of validator attached. So if you do it, yes, every node will become supernode by default.
00:22:18.280 - 00:22:38.820, Speaker G: Yeah, if it's like I guess If I think 128 is the number after which everyone endnote starts becoming a super node. So yeah, I feel like maybe it's a reason not to merge it. And yeah, like it might actually make things harder on devnets and less flexible.
00:22:58.450 - 00:23:21.320, Speaker C: I mean these PR just look like they are more. There's more design space for things to think about. So probably not for the next definite. But that's target on the next next definitely. Does that make sense?
00:23:22.380 - 00:23:50.020, Speaker G: I guess one question is, even if we're not gonna do this now, we should eventually figure out if we do want to do it at all. How do we, how do we deal with devnets? Like, we don't want to just test all super nodes. So I mean, I guess you could just sprinkle in some. Some nodes that have smaller numbers of validators. But yeah, I guess so something like that would need to be done.
00:23:51.600 - 00:24:16.290, Speaker A: I think first we should have a happy case scenario where we do most super nodes and see if we can even get that working and then move on to the next test. It can be iterative as well, so it doesn't need to be running for two weeks. But at least we should have like, I don't know, five to five to ten days of finalization with all supernodes and then we can move on to the next one.
00:24:16.750 - 00:24:29.840, Speaker G: Yeah, I really meant like eventually. Like if you eventually want to merge this and still be able to test it in like a somewhat realistic scenario. But yeah, in general I. Right now I agree. I think we should just try to get something that works with all supernodes.
00:24:52.590 - 00:24:54.090, Speaker C: Any feedback?
00:25:18.280 - 00:25:43.220, Speaker I: I was just wondering what would be the right timing or process for merging these. So is it like we have first a devnet which is working with the current Spec and then we feel confident to merge these two. For example, like for me they seem to be things that we want to merge. It's just not the right timing and I'm just wondering how we see the pluses.
00:25:47.970 - 00:26:20.460, Speaker H: I think usually we just try to minimize the number of variables. So if the devnet was already looking great, then there would have been absolutely no objection to merge it. But the main reason the there's hesitance is because we already are having a lot of issues with status quo. Do we want to add more changes? Because that's not going to make things easier. But yeah, in the happy case, for example in Petra, the moment we have something working, we tend to start introducing more edge cases, more changes and so on.
00:26:21.640 - 00:26:59.630, Speaker I: Thanks. Maybe a bit of another question, another direction, but other changes, outstanding PRs or something that we would need to merge or specify better to make the devnet more stable or is it more really making the implementations interoperate?
00:27:03.020 - 00:27:27.044, Speaker D: We had a discussion during the DEFCON about reconstruction timing. Okay. Right now. Yes, I know at least Prism and Lighthouse do the thing differently. So both, if I'm not wrong, reconstruct as soon as I have 50% of the column. But Lighthouse received all the missing colors immediately. Prism wides from three seconds into the slot.
00:27:27.044 - 00:27:46.800, Speaker D: It's a arbitrary value and unless I'm mistaken, there is no spec about no specification about the timing of reseed. If we should randomize a little bit the timing of reseed, maybe it could help to have this timing specified.
00:27:50.980 - 00:28:09.000, Speaker I: Yeah, I think in the specification at the moment it's just saying that you can delay it if, if you want. Basically. Was it identified as something creating issues or it's more of a fairness type of problem?
00:28:10.500 - 00:28:33.570, Speaker D: No, I think there is and I didn't have any issue with that, but just. Yes. Talking with different talent team, I realized that everybody did things differently. Maybe it's not an issue, maybe it's okay.
00:28:58.240 - 00:28:58.568, Speaker C: Yeah.
00:28:58.584 - 00:29:23.230, Speaker I: So it's also under different scenarios, which we are absolutely not trying now. I suppose different strategies make more or less sense and having the diversity might actually help make the network more resilient. So I'm at the moment, I'm not sure specifying some behavior, delay, whatever would make it better.
00:29:26.250 - 00:29:27.190, Speaker D: Okay.
00:29:35.050 - 00:29:52.220, Speaker I: Like it's so much intertwined also with the local resource decisions, what's prioritized, what's on a single thread, what's on multiple threads, et cetera, et cetera. That. Yeah, I'm just not sure what would be the optimal strategy under what conditions.
00:29:53.920 - 00:29:56.260, Speaker D: Yeah, I see, I understand.
00:30:30.490 - 00:32:14.910, Speaker C: Well, So I suppose we still have question to the PR itself. So just for the incoming release next week, we will probably. I mean suspend this and then see if we can get it back on next step night. Okay. For the S3A71. Okay. And do we have any other open discussion topic? No, again other things we could help with the thinking logic to be moved smoothly.
00:32:14.910 - 00:33:15.340, Speaker C: Any updates of the distributed block building after defcon? Oh, an example to. Oh God, Ginger is in the chat. Do we have the new proposal reading somewhere?
00:33:17.920 - 00:34:13.560, Speaker J: Yeah. So I think tomorrow we are going on Thursday we are going to decide whether we will include the change that I proposed in 7742 with regard to pushing the target to 4 as well as changing. Changing the computations for the base fee normalize. Basically normalizing the excess gas as well as pushing the main base fee to 2 to the power 25. So we'll discuss and take a call on this and decide whether we want 7742 with this change or just include 7742 as is. Which basically means that the block target and MAX doesn't change. There is no actual computation change on EL as well because the current computation is also with regard to.
00:34:13.560 - 00:34:38.310, Speaker J: With regard to 3 and 6. So, so, so that. So nothing. Nothing really changes. And only engine API now provides provides the target as well as in the block production max so that EL can do the corresponding block building.
00:34:50.530 - 00:35:39.040, Speaker C: Thank you, Matrinder. So suppose we will make decision on Thursday and if you have people here have time, can please view the EIP proposal. Anything else for today? No. No. Okay. Thank you for your attending. Have a nice day.
00:35:39.500 - 00:35:40.480, Speaker A: Thank you.
00:35:41.180 - 00:35:42.160, Speaker E: Thank you.
00:35:42.460 - 00:35:43.360, Speaker B: Thank you.
00:35:43.740 - 00:35:44.212, Speaker C: Thanks.
00:35:44.276 - 00:35:44.996, Speaker B: Bye.
00:35:45.188 - 00:35:45.700, Speaker D: Thank you.
00:35:45.740 - 00:35:45.860, Speaker B: Bye.
