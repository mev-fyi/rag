00:00:02.200 - 00:00:42.505, Speaker A: Hello and welcome to Sequencing and preconfirmation. Call number 15. Today's call was meant to be a presentation regarding the incentive alignment of delaying precoms or not delaying precoms. But there was a last minute change of plans. There's two pieces of good news. A good piece of good news, number one is that the punchline of the talk was that it's actually incentive aligned to not delay precomps, which is what we all want to hear, which was a very surprising potential result. But I guess we'll have to wait to have the presentation.
00:00:42.505 - 00:01:43.205, Speaker A: The other piece of good news is that now we have a whole hour to give updates on the projects that we've been working on. And so in the last few minutes I've been scrambling to ask people if they'd like to present. And we have many, many speakers lined up. So what I'll do is I'll just list off some of the presenters who will be giving very quick updates on the projects that they've been working on. And then if you'd like to present, either dm me or you could present at the very end when everyone else has gone through. And one very quick update from me, a bit of a shill. There will be sequencing day on November 15th and I think we already have over 500 applicants, which is pretty insane.
00:01:43.205 - 00:02:07.495, Speaker A: I think the venue is limited to, I mean you might know like to 600 people or something like that. So yeah, it might be a very, very packed and exciting event. Okay, let's get started with the presentations and the quick updates from folks. So number one, I guess. Yeah, perfect. Amir from Puffer.
00:02:08.955 - 00:02:30.393, Speaker B: Great. Yeah, so yeah, quick. Also like a side update on the sequencing there. Yes, we've been planning a lot around it and right now we're doing the lineups and the speakers. But yeah, it's going to be very exciting. Like Justin mentioned, there's going to be like 600 capacity. We expect like a lot of people are going to show up.
00:02:30.393 - 00:03:20.385, Speaker B: We just open registrations for it. So looking forward to seeing you all there. Now on puffer side, not sure how many of you have been following up on Twitter or other places, but we were working on actually two things regarding sequencing and precomps aside from the LRT that we have. But on this precomps, we're working on this like L2 execution precomps. The registry went two weeks ago and you can find the registry on Ion layer here. We have about like a little north of 20,000 Ethereum validators opted into this registry right now. I Think that's like already probably a decent number to have good guarantees.
00:03:20.385 - 00:04:12.061, Speaker B: We also went live on Devnet with Unifi Stack so we're calling our base rollup Stack Puffer Unify and Puffer Unify Rollup is live on Devnet with execution precomps. So that was like very exciting for us. We were hoping to actually prepare more documents, prepare more presentations once it's officially live with all the docs. But this is actually a good opportunity to prepare everyone and hopefully we can like have something to show for it very soon in terms of like more public facing. We're going to onboard like some of the protocols that are already interested to building on it to start trying it out with the execution precomps. So yeah, that's basically the TLDR on the two things that we are shipping in the past I guess months.
00:04:12.173 - 00:04:13.105, Speaker C: Thank you all.
00:04:15.245 - 00:04:34.705, Speaker A: Amazing. Thanks Amir. Do we have one or two questions for Amir? Yeah, feel free to just raise your hand, otherwise we can move on. So next up in the alphabetically sorted list is Anil from Rome.
00:04:35.695 - 00:05:22.965, Speaker D: Hey guys, Co Founder, CEO Roam Protocol if you don't know what we are building, we are building a shared sequencer for Ethereum Altus and we are building it on Solana. So it's a little bit of an off. If you feel Solana then basically what we have done so far we have taken an Ethereum go client, specifically OP get client and we have put it on top of Solana. So Solana is the shared sequencer for OP get type of L2s. If you are using an OP geth you can use the plain vanilla though we have changed a little bit. So what we have done is basically taken out the Gasometer rules. You still have EIP 1559 and all the other EIPs that op gat support.
00:05:22.965 - 00:06:00.391, Speaker D: But underneath Gasometer rules are based on Solana's GAS calculations. So basically your transactions are going to Solana. There is an EVM running on Solana that processes your transaction. EM is loaded and transaction processed and the state is stored on Solana. And on the backend we have changed the fork choice rule so it uses Solana's consensus in the order the transaction came on Solana and it got processed on Solana and that is what it uses for the fork choice rule to execute the payload back to the OP Geth client. So basically your consensus is coming for the L2 from Solana. Solana's all validator participate.
00:06:00.391 - 00:06:45.255, Speaker D: It is a plain vanilla Solana integration. So what you get and then the state is created for a rollup and the sequencer and the commitment is provided on Ethereum and the data is posted on ethereum for Ethereum L2s. So basically what we have done is converted Solana as a shared Sequencer for Ethereum L2. Today we support Op get, we are in Devnet so if you want to try out, you can try it out. We will be in public Testnet in a couple of weeks and next step we are looking to do is integrate Orbit from Arbitrum, that client on Solana which would allow any rollup that are using Orbit as their client. They can use Solana as a consensus layer as a shared sequencer. So these are the couple of things we do.
00:06:45.255 - 00:07:38.649, Speaker D: What do we get from this? Right, so we get atomic composability between L2 transaction. So we are able to compose transaction between different L2 atomically. That means as a single Solana transaction, what happens? Like any arbitrage opportunity, any event where you are or RWA transaction between different L2s, you are creating, you can create them atomically as a single transaction. So you do not have to wait for one confirmation on one chain and on another chain. Because this is all happening in a single smart contract on Solana. So this is what we have been working on for past eight, nine months and we are very excited to share this with you all. But we also have as part of this interop layer where SDK allows you L2s to compose their transaction atomically with Solana itself.
00:07:38.649 - 00:08:08.065, Speaker D: So you have access to Solana liquidity, you are interoper with Solana and you can compose atomic transactions. So if you have an arbitrage opportunity between Solana and L2 you can do that in a single Solana transaction. So on one side you have in your Ethereum transaction or Ethereum like transaction from your L2 and then Solana transaction and you can atomically compose this transaction to take basically make efficient market, take opportunities within the market. So. So this is what we're working on.
00:08:10.765 - 00:08:14.345, Speaker A: Amazing. Thank you Anil. Any questions for Anil?
00:08:17.365 - 00:08:24.655, Speaker E: Oh yeah, I have one. Are you guys using like Neon for this EVM stuff or did you implement it yourself or.
00:08:25.035 - 00:08:54.845, Speaker D: Yeah, so we built our own evm. So we looked at the Neon EVM and there were a lot of drawbacks. Firstly it only supported legacy transaction, it did not support EIP 1559. Also the front end was based on Python makeshift client Ethereum client. What we are doing is we are taking standard Ethereum client op Gethsemane Orbit and integrating that with Solana So it is not neon, it is our own built ROM EVM we call it.
00:08:55.865 - 00:09:07.925, Speaker E: Cool. And then how are you thinking about like the whole congestion for the space on Solana right now? Would it impact like the quality of like the sequencing that's happening on there?
00:09:08.465 - 00:09:40.295, Speaker D: Yes, so that is. I think hopefully those things would resolve as Solana improves the Fire with the Fire Dancer and others technologies that they are bringing in. But yes, that is something we would have to live with in terms of congestion transaction, not lending because these are part of the Solana transaction that are going to send to. That are being sent to Solana. So you are correct on that front that. Okay, congestion and when you have lending problem with the transaction on Solana, these problems do exist.
00:09:41.515 - 00:09:45.763, Speaker E: Okay, cool. Are you guys open source? Is there a chance I can take a look at?
00:09:45.819 - 00:09:59.615, Speaker D: Yeah, yeah. Source is all open, but it is not that. And you can start your L2s if you want to. You can use our smart contract, you can use our code. So all that is out there.
00:10:00.595 - 00:10:03.899, Speaker E: Okay, cool. If you could post the link that would be really helpful.
00:10:04.067 - 00:10:07.535, Speaker A: Sure, we'll do Dono.
00:10:10.525 - 00:10:24.985, Speaker F: How do you make sure that the ordering that is the final Solana is the one that is then used on Ethereum? Is there some sort of like clients Solana like clients with some economic security or.
00:10:25.925 - 00:11:04.589, Speaker D: Right. So basically your transactions when they're processed. So we have a Solana node that are providing the transaction and you build the canonical state based on the order of transaction that has been executed on Solana. So there is a light client that helps you build that with the Geyser plugin and that is canonical state that is posted to basically Ethereum smart contract, the rollup Smart contract. So we leave that up to the rollup to create that canonical state. Because the ordering ordered transaction they can get. They know the order in which the Solana slots are there and those slots can be reconstructed.
00:11:04.589 - 00:11:09.037, Speaker D: The transaction from these slots can be reconstructed to create your A state anytime.
00:11:09.181 - 00:11:15.865, Speaker F: So yeah, but like what happens if Solana equip creates like analyzes to.
00:11:19.005 - 00:11:55.647, Speaker D: So Solana finality comes within 32 slots which is about 12 second. So on Solana there are two places. One is confirmed transaction which happens within like three slots and the finality within 32 slot. So far on Solana no confirmed transaction has been reverted though they can end up on a different fork. So on Solana is a forking chain. So your transaction may not remain on the fork on which it was executed, but it is it still remain executed state. It has not so Far it can theoretically revert but your finality will come within 32 slots.
00:11:55.647 - 00:12:16.655, Speaker D: So basically after 32 slots. So if you can wait for 12 second or you can use the confirmed transaction and based on that you can create the canonical state if you need the faster confirmation. And what we plan to have, as you suggested, an AVS that would guarantee these transaction, the confirmed transaction as a finalized transaction.
00:12:18.595 - 00:12:44.121, Speaker F: Yeah, but the thing is that I'm not sure that this can be considered preconfirmations. Like to me this sounds as if you're using Solana for like ultimate ordering. So like to me it sounds more like a sidechain type of thing, maybe more similar to Polygon pedal stake but also there are some nuances for control stake.
00:12:44.153 - 00:12:44.321, Speaker A: So.
00:12:44.353 - 00:12:45.633, Speaker F: Okay, I will read.
00:12:45.689 - 00:13:17.225, Speaker D: No, I think I understand where you're coming from. So from deposit and withdrawal that are happening on the roll of Smart contract. So those messages will get to the Solana smart contract and they would preempt any other transaction that are ongoing. So they will interact with the smart contract rol smart contract on Solana and stop any withdrawal or any other transaction till the withdrawal on the parent chain which is Ethereum L1 smart contract are completed. So yes, so that is part of the design.
00:13:20.525 - 00:13:25.985, Speaker A: Okay, thank you Anil. Next up we have Bowen from Fairblock.
00:13:30.415 - 00:14:32.245, Speaker E: Yeah, hey guys. Yeah. One of the co founders at Fairblock. We mainly focus on threshold cryptography and various MPC sort of stuff. Progress has mainly just been on the ideation slash like slightly starting to build phase. So we had some ideas around using threshold encryption along with precomps to guarantee some like censorship resistance as well as like front running or sandwiching protection for users. Idea would just be by using encrypting the pre confirmation or transaction, getting some commitment from the person offering the pre configuration that it's placed somewhere like all at the bottom of the block and then once that's committed within like some certain window we release the key and they're able to release the entire block.
00:14:32.245 - 00:15:40.545, Speaker E: We chatted with like the chain bound folks about possibly modifying or like adding this onto Bolt as a way for implementing this. Yeah, things are still I would say past like the ideation phase, but not quite at like the full building stage yet. Oh yeah, I guess like we should mention like what threshold cryptography we're using. So we're using like a form of identity based encryption where only one single decryption key is needed to decrypt all the transactions in a certain block. That way it's like slightly more bandwidth efficient. We have Our own proof of stake network that's generating these decryption keys. But in this latency sensitive pre confirmation use case, I think maybe some of the builders could all interact with each other and each hold a portion of the key or something like that.
00:15:40.545 - 00:15:55.945, Speaker E: Like we, we probably wouldn't be the ones that are giving the decryption key to the person decrypting the transactions. It would some probably come on like the people running this infra in the first place.
00:16:00.165 - 00:16:10.415, Speaker A: Thank you. Bowen. Is the encryption similar to the Internet computer kind of threshold, like BLS based identity encryption?
00:16:10.915 - 00:16:35.855, Speaker E: Yes, exactly. Yeah. So I think there was also some research about the silent encryption or whatever that Charlie from Paradigm released. We haven't looked too much into that, but I think it's probably not super feasible to use that. They would probably need to use some other key or there needs to be some DKG happening ahead of time to make it work.
00:16:40.715 - 00:16:53.215, Speaker A: Thank you Bo and any questions? Okay, next up we have Brecht from Tyco.
00:16:58.755 - 00:18:06.481, Speaker C: So yeah we're currently we're doing well we're trying to upgrade our base roll up to base roll up with pre confirmations which I guess is the point of a lot of these calls. So yeah, trying to like yeah, bring to mainnet as soon as possible. So currently working closely with especially like Gadaga and nanomind to make it possible. So yeah like the last two weeks and I guess a couple of next weeks mostly like in like a supporting the sequencer registry contract at Narrow Mind created and also like working with Garaca to kind of like also upgrade to our new protocol with like preconfirmation support and also like an audit for the new protocol that supports this. So yeah, I guess like trying to combine all the pieces so we can actually start using pre confirmations first on our testnet hopefully in next couple of weeks and then also like on mainnet. Yeah, depending on how good, well how well the testnet goes I guess depends like when we actually launch on mainnet. But yeah, hopefully testnet come like next couple of weeks and then if everything goes well may not end of this year, beginning of next year.
00:18:06.481 - 00:18:43.455, Speaker C: I think that's kind of like the current planning that we are currently seeing. But yeah, I guess like it's mostly just on readiness of the, of the software because we don't also kind of like we discussed this with like Cupy and we also see like yeah, no reasons to delay or things like no slashing available or for example like no actually opt in from the L1 validators and always Using the powerback path. So yeah, I guess we'll just try to get it working as soon as possible even without some shortcuts or some kind of like less than ideal kind of like environment. But yeah, that's mostly it.
00:18:46.595 - 00:19:15.065, Speaker A: Wow. Thank you Brest. Great, great to hear that. Pre conf coming to mainnet pretty soon. Any questions for Brett? So next up actually I'll invite Lynn from Nevermind and Switchboards because I believe you guys have been collaborating so maybe a good time to have Lynn speak.
00:19:15.535 - 00:19:17.555, Speaker G: Yes. Can you hear me?
00:19:19.255 - 00:19:19.995, Speaker A: Yes.
00:19:20.335 - 00:19:41.505, Speaker G: Okay, cool. Actually I have some slides so let me share screen. Oh wait, I don't. Can you see my slide?
00:19:42.005 - 00:19:42.837, Speaker A: Yes.
00:19:43.021 - 00:19:44.301, Speaker G: Okay, can you see my slides?
00:19:44.493 - 00:19:46.085, Speaker A: Yeah, now we can see your slides. Yes.
00:19:46.205 - 00:20:32.795, Speaker G: Okay, cool. Okay, so let me quickly go through. Yeah, this is the confirmation POC progress report for the collaboration we're doing with Tyco. So we implement the PoC for their pre confirmation solutions. There's a whole team like huge shout out to everyone. They're doing all the heavy lifting. So the design we have is we split 12 second Elven slot into three sub second sub slots and at the end of each of these sub slots so every three seconds we elect the elected preconf will build, sign and publish a Tyco to block and the Taiko users can listen to these preconf, tail two blocks and know the state of the preconf state.
00:20:32.795 - 00:22:02.765, Speaker G: So it looks like this. So the AVS node that is running alongside the proposer it will register to AVS contract and the AVS contract will have so this first this registration we introduced a validator BLS key to ECDSA key mapping scheme which reduces the gas cost for L2 blockable by 1/3 compared to design that only use BLS key. So like the identity of the validators will not be used in the BLS key but we'll map it to ECDSC and use ECDSA which reduce gas costs a lot. We also have a look ahead submission scheme because we need this because the EVM does not have the concept of look ahead so you need to give the visibility of the look ahead to the contract and we use you do this using optimistic fraud pro mechanism. So the first preconfer in a epoch will submit the look ahead of the next epoch and if they equivocate on it they'll be slashed and like this is a whole preconf loop that's going to happen and all the transactions they will be sent through the Tyco public mempool. So no need for complex RPC discovery in the wallet and also makes self building of these L2 pre conf like somewhat viable. And what happens is that either this AVS node that's running alongside a preconfer or the proposer it will check the look ahead if it's their turn to preconf this will be done automatically.
00:22:02.765 - 00:23:12.195, Speaker G: Then we fetch the preconf or fetch the transactions from the public mempool, build a lto block, sign auto block and submit and sign delto block to the B2P. And we have a custom DTP for preconf. And then like all the full nodes that are listening to these preconf lto blocks, they can progress their head and provide the latest preconf state to the user. Yes, and the nice thing is that because we're operating through the L2 block level like L2 execution, wallets, indexer et cetera, work mostly out of the box because they all operate against these L2 block. And then in the end of the proposer slot we have full integration with Bolt SMEV boost inclusion list for force inclusion. And we also utilize a one public mempool when it's not a preconf. And yeah, and we also have a fraud proof mechanism that if like this, the preconf L2 block submitted here does not match the preconf L2 blocks submitted here.
00:23:12.195 - 00:24:22.525, Speaker G: You can slice them. And this is also automated so the AVS nodes can detect this and axi slash and yeah, the flashing supports any restaking protocol that follows Eigen layer interfaces. So let me quickly show you a demo here. Okay, so here you see like what's happening here is like we have the whole AVS software and everything working and this is an indexer and we have spamming the pycometl with transactions and you can see that every two or three seconds. I think you can see these L2 blocks being picked up by indexer and you can see them. And also let's try using MetaMask. With MetaMask you do a transaction and try to submit something and yeah, you should get results like the metamasks.
00:24:22.525 - 00:24:45.425, Speaker G: Yeah, they pull infrequently. Okay. But yes, you see it confirmed. Okay, that's it. Quick current status. As we're working towards continuing the collaboration with Tycoon to bring Preconf to mainnet. We're finalizing the funding with PBSF foundation for researching fair exchange and future proofing preconf.
00:24:45.425 - 00:24:54.605, Speaker G: We also submitted a LIDO grant proposal for viability and security of preconf. That's it.
00:24:59.785 - 00:25:04.315, Speaker A: Thank you, Len. Matt, Sorry Christian, you have a question?
00:25:05.015 - 00:25:15.795, Speaker F: Yeah, so the question about kind of the fee. So is the user supposed to pay some pre conf tip or would this be taken out of the gas or how would this work?
00:25:16.815 - 00:25:33.775, Speaker G: Yeah, so it's using the usual priority fee. That's like the priority fee of the transactions at this point it's not like. And the priority fee at this point is not conditioned to being preconf. So that's something that in the future we can do. But at this point it's not. We're just taking the priority fee.
00:25:34.875 - 00:25:36.375, Speaker C: Okay, thanks.
00:25:41.195 - 00:25:44.775, Speaker A: Jason in the chat asks, is this using Commit Boost?
00:25:46.675 - 00:25:59.345, Speaker G: Right now we are just directly calling Alts Nav Boost but I believe you can switch to and yeah, but right now we're just calling like Bolt directly.
00:26:09.205 - 00:26:14.865, Speaker H: Do you guys know how far out you are from trying it out on Commit Boost or just not in the plans?
00:26:15.925 - 00:26:25.615, Speaker G: Yeah, I just haven't looked into it yet. So yeah, we'll have to have that conversation, but haven't looked into it yet.
00:26:32.635 - 00:26:36.935, Speaker A: Okay, thank you, Lynn. Talking about Commit Boost. Next up we have Drew.
00:26:38.195 - 00:27:26.355, Speaker H: Yeah, just a quick update on our side offered to. Maybe some people aren't in the chat or on the calls, but yeah, I've got the code into audits. I don't know what is and isn't public, but Sigma prime is going to be doing that. They were nice enough to give us a great deal on that. And it's also great because the Lighthouse client side of things, which is fantastic, everything seems good so far. We do have some validators we're working with that are about to start running in prod as well in small clusters and then once the audit is completed in larger size. So hopefully teams will be backwards compatible with PBS and then setting themselves up for Hulesky testing for other commitments that will be out there and then a more seamless switch into prod, ideally maybe for year end on that front.
00:27:26.355 - 00:28:20.915, Speaker H: So that's the big push on the, on the tech side. Sort of the last piece of the technical puzzle is just figuring out for non external signers how and where people are going to store the keys for other commitments which we've been meeting with a couple experts across the industry and hopefully the next community call will discuss a bit more. But actually had some calls this morning that were quite promising on that side of things and some no, no complications with using things like ecdsa. So pretty excited. And then the funding side of things and all this is public now but we yeah, got a grant from Lido, the Ethereum foundation, the PBS foundation and Eigenlayer. So we're pretty much in a place to have the nonprofit set up, which papers have been filed, plus the legal stuff that's required with that and the audit paid for. So I appreciate all the teams that helped with that side of things.
00:28:20.915 - 00:28:57.355, Speaker H: But overall, continue to drive forward and reception from validators has been quite positive across both sophisticated actors, but also home stakers spending quite a bit of time with some of the hardware providers and people that make home staking seamless and just making sure those integrations happen. Hopefully we'll have inclusion lists ready soon for them to start testing as well. So that's if there's any questions. But that's what's been happening on Commit Boost, and we're really excited to see the first preconf land, hopefully over devcon or before year end in prod.
00:29:03.575 - 00:29:10.435, Speaker A: Yeah, preconf at defcon. That sounds great. Any questions for Drew?
00:29:14.425 - 00:29:25.325, Speaker B: Yeah, I just wanted to say I forgot to add our Pre conf. Our L2 executionPre conf. Actually using commitments as well. So yeah.
00:29:29.185 - 00:29:40.805, Speaker H: I'd love to work with others who aren't Lyn, but give it some time. I guess. We're happy to help if there are teams too that want to explore this. But yeah, I don't mean to publicly pressure you.
00:29:45.345 - 00:29:48.485, Speaker A: Do you know when the next community call will be for Commit Boost?
00:29:50.105 - 00:30:12.855, Speaker H: Maybe before devcon. The week. The biggest thing we wanted to get is, was a framework around how to store these external keys based on we. We were probably being too cautious around you. You learn how people store their keys is a bit funny for the validator. So maybe the bar isn't as high as we thought it was going to be for these proxy keys. So hopefully before devcon.
00:30:16.475 - 00:30:22.695, Speaker A: Okay, thank you for the update, Drew. Next up, we have Ellie from Espresso.
00:30:23.755 - 00:30:42.965, Speaker I: Yeah. Hey, everybody. So two big updates from Espresso. So the first one is from the R and D side. Espresso has been working on a composability protocol. So the ultimate goal of Espresso is to enable composability between all of these chains. So we'll have a pretty detailed blog post coming out about that soon.
00:30:42.965 - 00:31:54.691, Speaker I: But the quick overview of the protocol is that it's, you know, each chain has these mailboxes, so each chain has an outbox and an inbox. The outbox is messages that the chain is writing to other chains, and then the inbox is the messages that are incoming. And using this design, we can allow chains to have synchronous composability without having to know anything about any of the other chains. So the way it works is that these mailbox are populated by a shared sequencer or by a coordinator and then at settlement time you have an aggregated settlement layer, something like AG layer maybe that checks the consistency between these mailboxes to ensure that synchronous composability is held and that the state is not inconsistent. And the really cool thing about it is that it works best if you have a shared sequencer to populate these inboxes because they're already doing that work anyway. But we can actually get it to work if you don't have a shared sequencer. So chains with two separate sequencers can actually still get synchronous composability in this design, which is very, very neat.
00:31:54.691 - 00:32:09.015, Speaker I: So yeah, that's our biggest kind of like R and D project that we're working on right now. And then the second big announcement is that Espresso mainnet is coming incredibly, incredibly soon. So yeah, watch out for that.
00:32:12.235 - 00:32:37.085, Speaker A: Okay, another exciting update. Thank you Ellie, Any questions? So this whole inbox and outbox design that's not coming for the mainnet release, right, that's something that requires a zero knowledge proof for consistency, is that correct?
00:32:37.905 - 00:32:43.045, Speaker I: Yes, it won't be coming in the imminent main net, but we are actively developing it right now.
00:32:45.875 - 00:32:50.455, Speaker A: Okay, and does it require like relatively fast zero knowledge proofs?
00:32:51.595 - 00:33:21.475, Speaker I: No, it does not. So yeah, it doesn't. The proofs don't need to need to be fast, they just need to be generated by settlement time which does not need to be fast. You can use this. So Espresso is also this global confirmation layer which can be used to get a fast confirmation of the state of the roll ups before the proof is generated. Fast zero knowledge proofs, however, once we get there will, it will improve the protocol quite a bit. So yeah.
00:33:35.335 - 00:33:45.625, Speaker A: Okay, well that was the. Thank you Eddie. That was the last presenter I had on my list. If anyone else wants to give an update on their project, they're more than welcome to just jump in.
00:33:46.725 - 00:34:49.085, Speaker J: I can give one everyone. We've generally been stability testing as we kind of move towards the mainnet. As many people on this call know, we've been building, you know, a lot of infrastructure that allow things like pre confirmations and two particulars on that is, you know, the privacy of the mempool on map commit and the fact that the chain is able to handle kind of millisecond basis, you know, attestations to some degree. So we're working with two different pre confirmation teams who are interested in leveraging that for their own gateway design. Basically it allows them to just launch a contract and, you know, make their own commitments and do their own pre confirmations and they can kind of leverage all of this. So they're using it for, you know, regular like leader based pre confirmations, which is great. But yeah, we're interested in more people who have different requirements for setting up their own, you know, pre confirmation logic or, you know, protocols.
00:34:49.085 - 00:35:09.985, Speaker J: So if you're interested in this, and particularly, you know, we have decay mechanisms, et cetera, that solve the fair exchange problem. So if you're interested in that, would love to talk to you more and understand, you know, your requirements and enable that. So, yeah, we're hoping to kind of go to mainnet with a few of these folks, kind of leveraging the chain for its benefits.
00:35:13.765 - 00:36:14.883, Speaker A: Okay, thanks, Murat. Any questions for Murat? Okay. In which case, if anyone else wants to jump in with a quick update, now's a good time. Okay, well, apologies again for the last minute change of schedule, but thanks everyone who gave an update and looking forward to seeing many of you in Thailand very, very shortly. It's possible there will be another sequencing call next week. Yeah, stay, stay tuned. That's the end of the public call.
00:36:14.883 - 00:36:15.907, Speaker A: Thanks guys.
00:36:16.091 - 00:36:16.779, Speaker C: Thank you.
00:36:16.867 - 00:36:17.475, Speaker D: Thank.
