00:00:18.970 - 00:00:56.910, Speaker A: This is the middleware and on chain services panel. We've got a great sort of brain trust on the panel today. Christian Lundkest is a crypto financial engineer and decentralization generalist at consensus. We've got Roman Mandiel, founder and lead developer of Ethercamp and also lead developer of the Ethereum Java client. We've got Joseph Chow, who is the lead developer of the BTC relay, which we had from earlier yesterday. And Nikolai Mushegian. Oh, sorry, no, Piper Merriam, senior software developer at Quickleft and the developer of the Ethereum alarm clock, which many of you may have used.
00:00:56.910 - 00:01:16.360, Speaker A: And finally, Nikolai Mushegian, who is the lead developer at Makerdao and also CEO of Nexus developments. So first of all, I've given you a very brief introduction, but if you could maybe go from starting with Chris, give a bit more in depth information about what you're working on Ethereum and what you do.
00:01:17.450 - 00:01:46.602, Speaker B: Thank you, George. Yeah, so my name is Christian Longquist. I work at consensus on various projects. So one project is of course uport, the digital identity project that I presented about. And some other projects include balance three. This is a triple entry accounting system. Also have been working on lower level component like the light wallet.
00:01:46.602 - 00:02:14.200, Speaker B: It's an hierarchical deterministic wallet that can be used in the browser, also transactive grid. It's an energy related project where participants in an energy grid can transmit energy tokens between each other. So yeah, lots of cool stuff.
00:02:16.970 - 00:03:12.362, Speaker C: My name is Roman Mandele. I implemented the Java implementation of Ethereum and now we're working in Ethercamp on the tools for developers to make Ethereum development easy, smart contracts easy, more understandable. And it was actually the talk I did in the morning and what I didn't have time to announce, and I have time now. You remember this and yeah, it's kind of important. It's hug Ether cam. I think you should try it and check what we are trying to do there because this kind of thing connects the idea of points that you get on the blockchain and also a connection between developers that doing stuff. So we believe it's important.
00:03:12.362 - 00:03:23.370, Speaker C: And I guess I will have more time to comment on different stuff on this panel.
00:03:24.110 - 00:04:03.420, Speaker D: I'm Joseph Chow. I implemented BTC relay I gave a talk about yesterday. But basically it's a smaller version of the bitcoin blockchain in an Ethereum contract that can be used to verify bitcoin transactions. And it's a key part to being able to build a trustless way to get bitcoin and ether swap. So if someone wants to buy some ether just using bitcoins, it's a trustless way to do that. So BTC relay is a first part to it.
00:04:05.150 - 00:04:25.150, Speaker E: My name is Piper Merriam and I am the author of the Ethereum Alarm Clock. It is a marketplace for contracts or people to schedule contract function calls at a specified time in the future. Aims to be a trustless service on the blockchain.
00:04:26.310 - 00:04:50.390, Speaker F: My name is Nikolai. Most of you probably know me as the lead developer of maker. I was also introduced the CEO of Nexus. What that is, is we basically started creating enough valuable stuff that we wanted to capitalize on it sooner so that we can get done sooner. And to do that, we needed to create a traditional company so that we could interface with the real world. But that's still separate from maker, which is its own independent, decentralized organization.
00:04:51.210 - 00:05:22.450, Speaker A: Great. And yeah, I'm the external relations director at Ethereum. I work very closely with a lot of the community. I've met a lot of you before online, and it's great to see you all here. So to start with the questions of the panel, I think a good one. We've talked a lot today about sort of the technical side of Ethereum. So what I'd like to ask is, what are the non technical challenges associated with building on chain services on top of Ethereum, beyond the technology itself? Start with maybe, Chris?
00:05:23.590 - 00:06:33.180, Speaker B: Sure. So I think one of the interesting things about the blockchain is that in order to have a public blockchain, you have to have kind of an economic protection. This also relates to what Vlad was talking about when he described Casper. So you often have systems where you want it to be up and running, but you need an economic incentive for people to use. Both Joseph and Piper's projects are examples of this, where you have a system that you need to design technically, but then you also need to design the economic models that will cause that system to work as. So maybe Joseph can follow up?
00:06:33.630 - 00:07:26.860, Speaker D: Sure. Yeah. One of the main challenges, less of a technical nature, is the crypto economics of the system and being able to incentivize the community to do certain things, because this code is trustless and fully decentralized. So it's just out there and it can't operate on its own without outside interaction. So you have to be able to find a reasonable way to incentivize the community. And it's a tricky challenge, and it's part of the overall Ethereum experiment that we'll have to see how well we can create plans for incentives to use the actual system.
00:07:28.910 - 00:08:10.220, Speaker E: I think I can actually add to that a little bit. One of the tricky parts is currently is coming up with a fee schedule, or whatever you want to call it, that incentive that motivates the outside actor to do the thing you want them to. And I don't think anybody in this room can say with any certainty what one ether is actually going to be worth in a year or ten years. And so coming up with reasonable prices that will stand the test of time is nontrivial right now.
00:08:11.070 - 00:08:21.660, Speaker B: So, Piper, maybe you can describe your alarm clock service and how this economic considerations fit into that.
00:08:23.890 - 00:09:40.520, Speaker E: It's an interesting problem, and I do not claim to have it fully solved, but that's why I'm iterating on it. So essentially, any person or contract can essentially schedule a function call that is actually created as its own standalone contract. And then what the alarm service does is it essentially sets up a marketplace where somebody on the outside of the network can monitor and see that there is a call scheduled that wants to be executed soon. And when the time comes, initiate that transaction, it flows through the alarm service, executes the call, and they get paid some amount. And essentially it's figuring out what is that amount that makes sense for them to get paid. Is it one ether? Is it a percentage of the gas costs? Is it an open marketplace that allows people to specify whatever prices they would like? So some of those economic incentives, I don't want to say unsolved problems, but I don't think we'll know if they're solved until we start seeing a lot of traction and usership on these sort of services.
00:09:41.930 - 00:09:43.960, Speaker D: One thing I'd like to add.
00:09:44.570 - 00:09:45.382, Speaker A: Go ahead.
00:09:45.516 - 00:10:34.934, Speaker D: Okay. Yes, so the previous talk, one of the earlier talks was just with Simon, and he was mentioning about tokens. So definitely tokens is going to be interesting in this part. Right now, neither of us are implementing tokens, but tokens was one of the plans that we did consider. And just to throw out this idea out there, there's two variations. So one is that, let's say the one who helps the service gets, gets some tokens, and then the one who uses the service, they would get charged those tokens. That's a basic system.
00:10:34.934 - 00:11:41.226, Speaker D: So people who help the alarm clock, they'll get alarm clock tokens. And if you want to use the alarm clock, you have to spend alarm clock tokens. That's a simple one, but one interesting idea that I do want to mention out there, though, because other people might have ideas as well, is. So you still give out your contract tokens for the people who help the service, but then for the people who use it, you may be able to charge them actual ether. And then that actual ether just goes into a pool. And then all the people who have your contract tokens, they can cash out and then get a percentage of those actual ether that's in that pool. So right now, if there's only like two people who are helping the alarm clock service or something, and they both own 50% of the tokens, then whenever fees are starting to be generated, once one of them catches out, they'll get 50% of the ether fees at that time.
00:11:41.226 - 00:12:09.320, Speaker D: But maybe if they think things are going to still grow in the future, they might actually just hold onto those tokens. It gets a little similar to bitcoin, and I think it's quite an interesting idea because it rewards the early users quite a bit. It might be very easy right now to get those contract tokens. And in the future, if the middleware service gets used a lot, then there could be a lot of fees generated to reward the early helpers of the community.
00:12:10.330 - 00:13:19.890, Speaker C: I think this is a general question of what gives a value to any token. And maybe I want to add that we see in the old altcoin market that only speculation does not give value for a long term, right? Because you remember this time when there was thousands of altcoins coming out each day and nobody from them survived. So in Ethereum we have very easy way now to create a decentralized token, right? We just need to find a good way to tie it to a service that's going to be valuable for user. And this will give, I believe in this model that this will give value to a token. And it does not matter how the token is going to be distributed. It maybe can help or harm a little bit, but this is not the main value giver here. I think Ogur is the only one who did it by now to give a value for real token on Ethereum chain.
00:13:19.890 - 00:13:40.498, Speaker C: And I do believe we are going to see very soon, in close months, more services like this. I don't know if I mentioned hack eater.com, so it can be an option for this service. Okay, cool.
00:13:40.664 - 00:14:05.414, Speaker A: Brilliant. So let's move on to another question. There are some concerns about centralization risk with middleware and with onchain services. What are your thoughts as individuals in terms know, mitigating those issues? Sure, there might be some instances where we need centralization. There's no other way. But what are your thoughts on mitigating that. Start with Joseph.
00:14:05.414 - 00:14:06.220, Speaker A: Sorry.
00:14:06.590 - 00:14:07.340, Speaker C: Yeah.
00:14:08.910 - 00:14:10.370, Speaker D: About centralization.
00:14:10.550 - 00:14:13.118, Speaker A: Yeah. How we can mitigate it.
00:14:13.284 - 00:14:55.706, Speaker D: Yeah, I saw the question, and to me, it seems a little less of an issue with these fully decentralized middleware services, because they're trustless. So if they're trustless, then you don't really mind if everyone is using the same contract, let's say, get. In my case, I provide like bitcoin block headers and proofs that bitcoin transactions. So to me, it doesn't seem that of an issue.
00:14:55.808 - 00:14:57.050, Speaker A: Sure. Piper.
00:14:58.190 - 00:16:05.730, Speaker E: I think that there's kind of a line that falls between the services that we can use the term trustless for, and services that are not necessarily entirely trustless. I've thought about my service a lot, and the conclusion that I come to repeatedly is that whether or not it's alarm clock or something else, if it's an onchain service for doing the thing that alarm clock does, it is more powerful and more secure the more people who are using it. I don't think that that rule applies for everything out there. I think there will be things that function very well with many little individual pods doing them. I think the risk comes when there is a very fundamental service on chain that is not open, that is not trustless, and that does grant the power to some for profit entity to make arbitrary changes to it. At which point we have rebuilt the current model of the Internet.
00:16:08.070 - 00:17:36.254, Speaker B: I think it's important to note that on Ethereum, you have the ability to create the whole spectrum of applications from fully trustless, which is what Joseph Piper and also parts of Maker has, this property, but also you can have a fully administered smart contract that's controlled by a central party. And it's interesting because you can have a continuum of this. So you can have, let's say, a smart contract that needs, say, a quorum of voters to vote on changes. So that's not really fully trusted, but still community based. Or you can have something like a centrally controlled contract where you have a time limit, so that if I say I control it, I can say I'm going to make a change. It's written in the contract that this change is going to take two weeks, and if any of the users don't like it, they can move, they can take their ether out. And so that leaves me still in control.
00:17:36.254 - 00:17:38.430, Speaker B: But there are limits.
00:17:40.290 - 00:18:32.094, Speaker F: I just want to say a practical example of this is maker is going to depend heavily on price feeds, which are a great example of something that pretty much has to be centralized for now, there's no fast decentralized oracle solutions that exist, but we use the same strategy. It's like the maker coin or shareholders are like the admins, they have full admin rights, but they have a time delay and it's in their best interest to get the best new feeds into their system. No one's going to abandon the system when they see a positive change like that. And then if there's a negative change where, suppose they wanted to replace it with only one price feed that they controlled, that gives everyone time to exit the system. And so I think, yeah, we're going to see this pattern where, oh, there's no trustless solution yet. So we're not trustless, but then we can plug it in and lock ourselves out and then we're fully trustless also.
00:18:32.292 - 00:18:38.098, Speaker B: Yeah, it's a great example. And roman, you also have a price feed during.
00:18:38.264 - 00:19:38.470, Speaker C: We've done the price feed as an example of what possible to be done. But I want to touch this question very general form, because we have this decentralization movement for good reasons, because we have seen a lot of damage done by central government, central finance institutions, and I believe we will see more damage over next time. But there is people that kind of losing the point and trying to eliminate the entrepreneurs from his idea because you need somebody to develop the service, you want somebody to deliver more features, right? So it's kind of your interest, not every service. If somebody standing in the middle and care to develop more about his service, he's evil, right? Sometimes I see that people don't see this difference. This was my point to contribute.
00:19:41.210 - 00:20:24.100, Speaker E: I think that I completely agree. Nobody's going to build these things for free, or at least nobody's going to build all of them for free. Alarm clock pays me when you use it. You can kind of now choose what you want to pay me. So it's not like these things get developed for free. What I hope is that we land in a world where one, we still don't have to explicitly trust that under the hood it does what we want it to. We can look and see that there's a built in time delay, that you can't just pull it out from under me, that I at least get to see it coming and bail if I don't want to be part of it.
00:20:24.100 - 00:20:51.530, Speaker E: And similarly, the model of sort of delegating the, okay, I'm going to maybe put a name registration in front of my contract so that people can upgrade, but I'm going to not give myself any control over that I'm going to let a multi sig of like seven trusted community members be the voting body for that. So it's a spectrum and there's intermediate steps.
00:20:52.050 - 00:21:31.020, Speaker C: I think the solution, if you're talking about solutions, I do think the rules should be set up front, right? So if I build a service and you step into my shop, right, virtually speaking, and I say no, I control everything, I should tell it, right? And I should tell, you have right to do this, this and that. And, okay, we are on blockchain. Everything is transparent. And I'm not saying that I'm doing this business, but maybe somebody will. But these rules should be set and should be very clear, and it can be done. It's not evil, right? It's not evil. It's just transparency and mutual agreement between people.
00:21:31.630 - 00:21:56.318, Speaker E: Which potentially brings up the point that we can choose to not use services who won't post their source code. That I would encourage everybody in this room to rigorously advocate for. Open your source and show us what it does. Because without that, you're just operating the same model that when you log into Facebook, you don't know if they're showing you negative things to see how it affects your mood.
00:21:56.494 - 00:22:21.740, Speaker A: So, yeah, I guess that's a really interesting point, actually. You're seeing a lot of new services being developed on top of ethereum. It's very difficult to know whether you can trust that service. What do you think the community, or several perhaps groups together could do to help users understand as to whether or not a smart contract or an on chain service will do what it says on the tin? Has anyone got any answers for that?
00:22:22.910 - 00:23:49.350, Speaker B: So I think what Piper was saying is vitally important to have the source code available. And I think we can utilize on chain services like registries and DAP stores, perhaps that can bundle together everything related to the DAP and perhaps tie the source code and also the front end code, maybe put it on a content addressed storage system like ipfs or swarm, and then anchor that hash in the blockchain. So I think it's extremely powerful in terms of a secure delivery system for not just apps, but applications in general, to have this trusted database, the blockchain, all the updates from the developer is automatically signed because it is on the blockchain. And we also have the hash of everything in the DAP checked automatically.
00:23:53.530 - 00:24:56.838, Speaker E: To add to that. We don't have all of the tools right now to have the entire thing packaged up, but we've heard multiple talks this week so far already on those things are coming so we're going to have immutable applications or fully verifiable applications, but that doesn't actually immediately help the end user. And I think that you're going to see a business model show up here where right now the Internet is full of little stamps that people put on their websites that say how secure they are, and they're all utterly meaningless, or at least almost all of them are. And those don't have to be meaningless. In the ethereum world, there will be trusted verifiers that do truly audit and check and see that things do what they say they do. And I can absolutely see companies paying for that service and those things actually having meaning rather than being empty.
00:24:56.934 - 00:25:13.280, Speaker F: Yeah, I think this might actually be an opportunity for people who are making mist or a competitor to mist is if you also maintain a database of formally verified contracts and the uis that go with them. I think maybe the browser or the wallet browser creators are the people who are going to push that forward.
00:25:14.850 - 00:25:48.758, Speaker A: I think one of Alex van der Sande's early demonstrations of what he was looking to do with mist, I think he had a traffic light system. So in the top left corner there would be sort of a red, orange green color associated with the application, dependent on maybe different groups have audited it. Those groups themselves could have reputation and dependent on their reputation in the community could give different weight to how those applications are sort of viewed. And it makes it very easy for average users to be able to understand as to whether or not a smart contract is safe or not. Yeah, go ahead roman.
00:25:48.934 - 00:27:28.794, Speaker C: I think you are talking most of the time about technological progress, but there should be some moral and political progress because we didn't see it yet. We don't have enough experience about totally free market, not uncontrolled, and cannot be controlled and decentralized without any central authority. It kind of looked like a mess, but it will be worked out because we are talking about mutual agreements, right? So we just need to study how the disputes are solved, maybe with arbitrage set upfront or something like this, but we just really didn't see enough legitimate markets coming out in this space and operating over time and building value to see how decentralized we just wish, right, this movement of decentralization, always talking about, okay, how this should work, how this is the only way it should work, but we just don't have experience yet to say, okay, in this case you do this and that, and in this case you take a lawyer and you do this and that, and how the contract I'm talking about contract between people, not the blockchain contract. Right. How this contract should be set without central authority. Because if you're looking now on the jurisdiction system, any contract somehow assume that you are going to court when the problem arrives. So we are not working this way.
00:27:28.794 - 00:27:42.734, Speaker C: Right. We want something else, and we just need to. It's not a technological problem, it's more a philosophical, political problem that I believe the community will work it out. It needs some time.
00:27:42.932 - 00:28:13.020, Speaker A: Sure. Anything else you guys would like to add on that? So another interesting thing. I guess Vitalik's definition of a blockchain goes something along the lines of, you'll always be able to view the currents in all previous states of the blockchain itself. Now that comes with some really positive attributes, but also, as well, there could be potentially an impact on privacy. Do you see privacy as a challenge when you are building Ethereum on chain services? Chris, go first.
00:28:13.870 - 00:28:20.640, Speaker B: Yes, very much so. It is currently very hard.
00:28:23.730 - 00:28:24.382, Speaker C: To have.
00:28:24.436 - 00:29:33.490, Speaker B: Private transactions on any current blockchain. So from what I hear, zero cash is soon coming out, and that will kind of be the high watermark for private transactions. But unless we have that level of CK snarks and advanced math, this remains a big problem. And it's come up in a lot of the discussions that consensus has with people who say, this blockchain stuff is great, I really want to use it, but all my competitors can see my transactions and what are we going to do about that? So I think it's a challenge. There might be ways of obfuscating transactions, but that is often a trade off that the user has to do work, et cetera. So, yeah, I think this is one of the big challenges.
00:29:36.390 - 00:29:37.226, Speaker A: Piper.
00:29:37.358 - 00:30:47.430, Speaker E: I'm really hoping to see. It's something that I've put a lot of thought into, but just don't have the bandwidth to start into. I'm really hoping to see transaction obfuscation with very low overhead show up as an on chain service in an utterly trusted manner. The ability to send transactions anonymously effectively on Ethereum would be a pretty powerful tool to handle one type of privacy, which is, I don't want Amazon tracking everything that I buy, but the other type of privacy obfuscating we want to do on chain identity. But I don't necessarily want to put my email address on there in the public because of whatever privacy reasons. And there's a lot of hand waving about encrypted blobs of data, and we put them on ipfs and we let so and so read them. But there's a lot of unsolved problems there and it is not a trivial problem to solve.
00:30:47.430 - 00:30:52.960, Speaker E: I think we're totally up for it. But there's things you can't build right now.
00:30:54.930 - 00:30:56.880, Speaker A: Anyone else got anything to add on that?
00:30:57.250 - 00:31:49.198, Speaker C: Yeah, well, I was talking about decentralization. Always when touching privacy, I always trying to say that the privacy should be by choice because user definitely have something to be rewarded by putting his identity out there. Because we want to get to this world. When your reputation from Airbnb can be moved to Uber, can be used in taking a loan, taking credit and something like this. So we need to find a way, like not radically that nobody knows what's going on. It's completely how you said there is no people there. I feel sometimes people talking about this and they just want to eliminate the people completely.
00:31:49.198 - 00:32:33.062, Speaker C: So I don't think we really want this. We want people to make their choices. And I think in some way in bitcoin world it is possible, right? Because if you don't want people to know about your account, that it is your account, you can do it. And now many people say, yeah, but we can track you and we can do it. But there is way to go around this, right? And we know this. So also on Ethereum, but we are talking about next wave of blockchain applications and their identity and reputation is going to be very valuable. So what is a reputation? Reputation is historical tracking of value trading.
00:32:33.062 - 00:32:48.820, Speaker C: This is the exact definition of reputation. Right. This is what give you the reputation and you want tracking. So if you say no, I don't want to put my identity there. So how we track your reputation, how you gain your reputation. So we need to remember this trade off here. It's there.
00:32:52.470 - 00:33:21.774, Speaker B: There's also a case of selective disclosure. So maybe my whole history is not on the blockchain, but it can be, yeah. I can use anonymous identifiers at each trade and then when I want to select, selectively disclose to someone, I can tie those together through digital signatures. So that might be another way.
00:33:21.812 - 00:33:32.766, Speaker C: Example, security number on your credit card. You choose security, you should not give it to anybody, but you give it to everybody. Right. Something like this for sure.
00:33:32.868 - 00:33:58.600, Speaker A: So this is a really interesting topic in itself. And I think definitely something worth discussing is there isn't really. I mean, I think consensus is looking at some interesting things in terms of reputation. But perhaps what are your ideas and what reputation should look like on the Ethereum blockchain? How do you think that will change the way that your services, that you've created. How will people interact with that once reputation is sold? Who wants to start?
00:34:00.010 - 00:34:01.480, Speaker C: I think that the.
00:34:03.530 - 00:34:04.806, Speaker A: Nikolai, you want to go first?
00:34:04.908 - 00:34:05.560, Speaker C: Okay.
00:34:06.190 - 00:34:26.660, Speaker F: What I was going to say is I thought about this a lot. And the conclusion I keep coming to is that talking about reputation like a metric with one number just doesn't make sense. It's too contextual. And you can't just one number, your reputation is 100. That doesn't make sense. You have to have. Okay, that's all I wanted to say.
00:34:28.230 - 00:34:57.622, Speaker E: Yeah. For anybody who doesn't follow exactly what that means right now, when you look around at things like reputations and ratings, each movie has a single number associated with it. All of those things. There's this global number that we pretend that we can prescribe to, how good a movie is, or whatever else we want to rate. And I completely agree with this. That rating does not. It's contextual.
00:34:57.622 - 00:35:37.090, Speaker E: It's contextual about who your friends are, who your social community is, where you live. All of those things can play into the context of determining how trustable you are. Because trust is not a global trust. Reputation, whatever you want to call it, all these different metrics, but there's no single number. Because my friends can trust me more than utter strangers in all kinds of things. Because the chances that I'll misbehave with utter strangers are higher than with people that are in my close community. So trust is very much a function of context.
00:35:37.250 - 00:35:57.086, Speaker C: Yeah, that's right. I absolutely agree with this. It's not a number, it's a set of numbers. So it's a set of numbers. And everybody reacts differently to the set of numbers. Like, if I have, I don't know, I save five kitties, so I have five in my reputation in the kitty section. So somebody will say, hey, this is great guy.
00:35:57.086 - 00:36:12.770, Speaker C: He saved kitty, said, no, I hate cats. Right? So maybe he's not so good. So this is the idea. The idea is you keep the history of doing value in some way, but people really take it differently.
00:36:14.870 - 00:36:24.386, Speaker F: There will be like, popular reputation functions. So each individual user chooses how they interpret the data, but there's a couple of ones that are pretty good for many cases.
00:36:24.498 - 00:36:32.870, Speaker C: Simon was touching this on the previous talk standards. We need to see how the cputation moves between the Dapps.
00:36:33.030 - 00:37:09.430, Speaker E: It's also theoretically too complex for the current limits of the blockchain. Right now I'm speaking outside of my level of expertise, but the math involved in doing those contextual computations is likely above the PI million gas limit that we're currently limited by. So chances are this is something that's going to have to evolve over time as the network speeds up and hopefully we achieve that scaling promise.
00:37:11.850 - 00:37:48.274, Speaker C: Maybe the problem is that we don't have enough services that really operates over time, and know that it's kind of agreement between services and the people using the services, how they want to move recognition from place to place. It's also touching the question of agreements between the service and the guy who get the service. We just need time to see these services being mature, operate over time, and then sharing this information because the infrastructure is there. Right. But we need just to study how it operates for real.
00:37:48.392 - 00:37:54.542, Speaker F: This actually makes me think of an interesting point, which is that the more trustless stuff we build, the less data we have for reputation.
00:37:54.686 - 00:37:57.700, Speaker C: Oh yes, it will affect data price.
00:38:00.890 - 00:38:24.670, Speaker D: It's possible definitely that we'll have middleware services that are trustless and they don't care on the input side who sends it input. So right now, I think at least with BTC relay, doesn't care who sends it headers, and probably same thing with alarm clock, doesn't care whoever is triggering calls for other contracts.
00:38:25.330 - 00:39:40.694, Speaker B: So there's also an interesting aspect of crypto economics, which is how to build system that is independent of reputation. And so I think reputation will play, play a huge role, but there's also mechanisms like security, bonds, et cetera, that can give a rational incentive to some unknown individual to act in a certain way. So that's kind of how to deal with entities without reputation. But yeah, I agree that reputation is a big thing. And I think, I believe Christopher Allen said that we want to own our own identities, but we don't necessarily own our reputation. It's given to us in, in the context that we exist in. And so that also relates to moving reputation from one service to another.
00:39:40.694 - 00:39:51.178, Speaker B: And that probably makes sense for similar services, but others might be too far away to move.
00:39:51.264 - 00:40:34.520, Speaker A: I guess it gets interesting as well. If reputation has a value, can you buy and sell a reputation? Things like that. I think I like the idea of you having many, many metrics which will contribute to a reputation score. And depending on the environment or the situation, the metrics have different weights that can work pretty well. So we talked a lot yesterday about scalability, working towards greater transactional volume, that sort of thing. We talked about Vitalik's sharding and then how Ethereum is going to grow in the future. Have you guys put thought into how your services that you've created, how they will change, what they will become as Ethereum begins to start scaling in a big way.
00:40:34.520 - 00:40:37.750, Speaker A: Do you want to take that first, Roman?
00:40:38.910 - 00:41:41.018, Speaker C: I think Ethereum was developed in a very interesting way. It was nine poc, it was nine proof of concept, who was following. So all the ideas and all what you see now came out from the field, from going and trying and going back to the blueprints and see how we can change it. So I think this is the best way to do stuff to go and iterate and iterate. I believe it's not new, it's already been proven by people doing successful startups. So I think all these ideas that Vitalik and Vlad and Greg are talking about, we need simulations, we need proof of concepts, we need to see how it works and then see if it really proven mathematically. So it's the only way we can really see this stuff works and can be adapted, because now it works.
00:41:41.018 - 00:41:51.680, Speaker C: We don't want to harm it, right. We want to see how we move from point a, from point to point b safely. Right? So maybe this is my answer.
00:41:54.550 - 00:41:54.866, Speaker D: But.
00:41:54.888 - 00:42:52.018, Speaker E: The current gas limit is sort of a good metric for where that limit shows itself. It's really easy to write a contract that takes up 3 million gas just to deploy it. It's a big contract, but it's an easy limit to hit. And similarly, it limits how much you can do in one step. So a lot of those scaling issues are theoretically going to open up, increase that ceiling by some amount, which will increase the overall ceiling for how big apps can be on some level. Right now, there is an artificial ceiling that you can actually hit pretty easily. Even when you divide most of your code out into libraries and deploy your code separately, and essentially deploy a shell contract that calls library functions, you can still hit that pimillion gas limit pretty quickly.
00:42:52.018 - 00:43:13.180, Speaker E: So companies and entities who are building middle, they're not that complex, but they're complex in terms of the example contracts that we see all the time and that sort of thing. So it's very easy to find your way to that PI million gas limit right now. And that's one of the ways that the scaling problem shows itself.
00:43:14.270 - 00:43:51.126, Speaker F: I think that right now, there's not really any way to deliberately make your contracts future proof against design decisions related to scaling. So they're either going to do it in a way where it's perfectly seamless and the sharding works really well, and all your current contracts can keep running with no problem, in which case no one is affected, or it looks sort of more like a main chain, side chain type deal. Even though you have shards, in which case you better hope your profit per transaction is very high or else you're going to be squeezed out. I think the biggest risk there is data feeds. Like, how are we going to pay to get continuous data onto the blockchain once the cost per transaction is really high?
00:43:51.228 - 00:44:17.214, Speaker C: Yeah, but by the way, one interest per day and we update the price each ten minutes. So it gives you sort of estimation. I don't remember. It's around 15 assets there, if I remember. Correct. So this gives you sort of estimation. How much does it cost? We're okay with this.
00:44:17.214 - 00:44:49.594, Speaker C: We can hold it for some time until we have mechanism to decide about the block size of the intensive gas. Nobody's trying to change this, right? We can vote on this. It's a minor vote to increase or decrease this limit. And I do agree I can use bigger, larger gas limit per block. We were hitting this limit with some of our contracts and did some restructuring. So if this is kind of issue, let's do it. Let's vote on this.
00:44:49.594 - 00:45:01.760, Speaker C: Like people who has miners who mine stuff, maybe we should talk about this and try to see if this mechanism really works, because it's built in into the system.
00:45:03.730 - 00:46:09.780, Speaker D: Joseph, another point about the scaling issue is really upgradability of contracts. So again, since these are fully decentralized, once we've deployed it, even the original developers don't even have ability to change it. So if there are issues, we really have to design it in certain ways so that we can have a new contract that will still implement what we want. But there's a lot of challenges with this future proofing and upgradability of contracts. One of the best practices we heard in the morning earlier was exposing your data so that you could definitely have contracts that you can create and in a way provide an upgrade for that. And definitely, I think, for something like alarm clock, that could work very well. With the relay that I've been building, it's less clear because the data itself is what you can charge people for.
00:46:09.780 - 00:46:25.000, Speaker D: And in a way, you need to charge people something so that you can give the community some reward for helping the service. So upgradability and future proofing is quite hard. Does anyone have any other ideas about it?
00:46:25.610 - 00:47:33.770, Speaker B: I think it's important to remember that Ethereum right now is very small. I mean, Roman, you had the statistics where it's like 3500 contracts right now. And so when I think about something like digital identity, if we want to create digital identities for a billion people, which is what Facebook has right now, that amount of data on the blockchain and having them all send transactions between each other, it's totally unfeasible without the scalability. So I think we should keep this in mind, but at the same time, design things that work in the small scale to begin with, but still have an eye towards that. This is going to have to scale.
00:47:34.110 - 00:48:03.750, Speaker A: Sure. So I think we're running out of time. It's almost finished. I think maybe one more question with an answer reach, and then maybe take some questions from the audience. So the final one was you have things like oracle eyes, which allow the Ethereum blockchain to effectively talk to the real world. What do you think that we could be doing better to allow the Ethereum blockchain to communicate with the real world and for the real world to communicate with the Ethereum blockchain. Do you want to start with that? Nikolai?
00:48:04.090 - 00:48:32.670, Speaker F: There's two ways. One way is we need a very good data feed infrastructure, and the other way is we need a framework for people to be able to define things legally in terms of smart contracts. So, like right now, slockit works because it's a physical device. You don't need a law, but there's many similar things where you are only reading data off the blockchain, but you're supposed to interpret that as meaningful. And so we need, like, a legal framework.
00:48:34.610 - 00:48:35.550, Speaker C: Piper?
00:48:36.550 - 00:49:20.160, Speaker E: I think that there are going to be many bridges that will get built, but haven't get built, haven't been built yet. That bridge, the real world and the blockchain, it's data feeds, it's oracle eyes, letting you pull data in from the Internet. Each of these adds another layer to the foundation, and they'll come slowly and they'll show up over time. But there's a lot of them still to be built, and before they're built, and many of them rely on others to be built first. So we're going to have to build that foundation up a little bit at a time.
00:49:22.470 - 00:49:53.434, Speaker D: I think crypto economics is with the incentives that we've been discussing, that's one key thing that will really help as we learn about that more. So, in bitcoin, it start out right at 50 bitcoins in the first four years, and then 25, it decreases by half every four years. So it's like that formula right now seems to be working for bitcoin, but it's these kinds of things that would be good to try to see if we can understand more.
00:49:53.552 - 00:49:55.290, Speaker A: Sure. Ruben?
00:49:55.710 - 00:50:29.650, Speaker C: Yeah, wow. I just got new mic, so maybe I should repeat all the comments that I said before. Yeah, now you can hear me. Okay, cool. Okay, I'll be serious and I'll say this is exactly why we're constructing this hug eater camp. And no, this time for serious. And the point is this, we are talking all the time about the same ideas in the decentralization world, like reputation tokens and identity.
00:50:29.650 - 00:51:15.782, Speaker C: And it's kind of, okay, we kind of understand how it should work, but we want people to move forward and we want place and stage for people to communicate their ideas much better in the development stage. And this is exactly what we're trying to do. We're trying to put developers in some place. We want them to get rewarded. We also invited judges from the community to watch after them doing stuff and comment and give them likes and kudos for good ideas. And this way we believe that ideas that we don't even think about them will pop up on the surface. This is exactly why I'm trying to market it so bad.
00:51:15.782 - 00:51:19.154, Speaker C: Okay, thank you, Chris.
00:51:19.282 - 00:52:12.998, Speaker B: Yeah, well, I guess getting data into the blockchain is all about oracles. And I think Nikolai had a good point about how do we incentivize oracles. Like, if Bloomberg provides an oracle feed, for instance. A data feed, is there a business model around that maybe you can charge contracts for getting this data, et Cetera? So that's an interesting discussion. And the other way, I think slocket is an interesting example where you have autonomous devices reading the blockchain and changing state. I'd like to see that explored more. Yeah.
00:52:13.164 - 00:52:17.762, Speaker A: Okay, cool. So, yeah, go ahead, Piper.
00:52:17.906 - 00:52:53.634, Speaker E: Sometime soon we're going to see a trustless service of some kind that somebody built that gets filthy rich on accident and has just tons of money locked up in it that nobody can get at. And that thing is going to stand there as like a beacon to people who want to make money making these kind of things. And once we see that happen, it's going to provide some huge motivation for entrepreneurs, investors, people who make things, to make more of those, but not in a way that accidentally locks all the money away.
00:52:53.752 - 00:53:20.620, Speaker A: Yeah, for sure. I think looking back to maybe some older programs that were used on computers 2015 years ago, that could be a good place to start. They're very simple, but very useful. That's when that'll be a good place to look. So I think we've sacrificed the other microphone. But does anyone have any questions? Perhaps, can anyone. Lisa, could you take this to the gentleman over there? Sorry.
00:53:20.620 - 00:53:24.620, Speaker A: We'll take one question. I think we've run out of time. But yeah.
00:53:26.130 - 00:53:47.426, Speaker G: My question is that, does this decentralized nature of Ethereum mean that any business that stood up with a business model to facilitate the interaction between two parties will eventually be driven by competitive forces to a point where essentially the profits approach zero over time, raised to zero?
00:53:47.528 - 00:53:48.730, Speaker A: Go ahead, Nicola.
00:53:48.830 - 00:54:04.986, Speaker F: So the response I give to this usually is that there's like two types of middlemen, and one of them, basically, they can either be contributing value by basically doing research. So a good example is how credit works. I don't think normal credit, like an uncollateralized credit, is going.
00:54:05.008 - 00:54:15.934, Speaker G: I would add to that the fact that the code, for example, if you have an algorithm or anything that is powering your contract, is open. So reality, someone can take whatever it is that you came up with.
00:54:16.052 - 00:54:26.960, Speaker F: So it just depends on whether the middleman is a real middleman or if he's actually contributing some value. And you'd be surprised by how many just middlemen are actually making your transactions more efficient by being there.
00:54:28.050 - 00:54:32.402, Speaker G: I guess I would like the feedback of each individual team member, if you don't mind.
00:54:32.456 - 00:54:33.058, Speaker E: Sure.
00:54:33.224 - 00:54:37.814, Speaker C: So I need to understand question better if you can explain it.
00:54:38.012 - 00:54:55.286, Speaker G: I guess what I said is that because Ethereum is decentralized over time, as you build services that merely facilitate the interaction between two parties, that over time other people would join in to provide that same service, people will clone you. This is the question essentially.
00:54:55.398 - 00:54:57.546, Speaker C: Okay, you start to answer, I don't.
00:54:57.568 - 00:55:42.934, Speaker E: Think it takes as many people to run. It doesn't mean that companies go out of business, because there's like lower and lower transaction costs. It just means that it takes fewer and fewer people to run giant, giant things. I don't know if you think of a company as a pyramid, and the more area under it, the more people there are built up in there, is that in Ethereum that can get like a lot lower and lot fewer people involved. And so while the transaction costs go lower and lower and lower, there's still some level of I will pull in enough off of the service to pay for the continued development and improvement of it. So it doesn't mean it goes out of business. It might mean that we see much smaller entities.
00:55:42.934 - 00:55:48.538, Speaker E: Despite doing huge things, Jason, you'll see.
00:55:48.704 - 00:55:52.030, Speaker F: More companies choosing to become more profitable by shrinking.
00:55:53.250 - 00:56:48.160, Speaker D: So, building upon two points that Nikolai and Piper mentioned, I think my economic intuition is that if you want a single number, it's not going to be zero. I think the number that it's going to reach is going to be like the gas cost times the gas price and the gas cost is of the person who is helping the blockchain service. So in the case of the alarm clock, so whoever triggers the alarm call, they have a certain gas cost and the gas price. And so unless they're really providing any value in the Middle, things look like they're going to drive to that limit. And in the relay case, that is going to be the cost of submitting a blockheader to BTC relay. So I think there's always a cost to it, but it'll come down to that.
00:56:50.370 - 00:56:50.782, Speaker E: Yeah.
00:56:50.836 - 00:57:01.314, Speaker C: So I just want to be sure. The question was, if I'm going to be successful on the blockchain, somebody will come and clone it because it's all open and will try to kick me out of the business. Right.
00:57:01.352 - 00:57:03.186, Speaker E: This is the question, I guess what.
00:57:03.208 - 00:57:28.330, Speaker G: It is, is if somebody puts in the time to come up with some sort of mechanism to facilitate a service. Like, think of example, risk. If I want to have a model to assess risk, and I put that model on how to assess risk on the blockchain, and that is my competitive offering, quote, unquote, in the case of example, of a bank or some sort of a creditor. And that exposure in itself means that my value add is that algorithm.
00:57:30.510 - 00:57:34.470, Speaker C: Yeah. I think there is more than just a code.
00:57:34.560 - 00:57:37.758, Speaker A: Last sentence, we got to finish after this. Sorry to cut you off again.
00:57:37.844 - 00:58:03.974, Speaker C: I think there is more than one than the code part of the business. I think over time, you build your name. So it's kind of what's proven on the Internet. Right? People trying to copy Uber, people trying to copy Airbnb. Actually, every successful service, the success wasn't so big. So it's much more than just a contract. Just more than transparent contract, because you kind of build trust with your customer.
00:58:03.974 - 00:58:09.080, Speaker C: So I believe in this model. This is like, okay, try to compete now.
00:58:10.570 - 00:58:11.126, Speaker E: Great.
00:58:11.228 - 00:58:14.578, Speaker A: I think we have to leave it there. Unfortunately, the builders.
00:58:14.674 - 00:58:19.966, Speaker B: Yes. Here's one thing. Go to hack.edu. Com. Okay?
00:58:20.028 - 00:58:20.940, Speaker C: Oh, yeah. We love boot camp.
