00:00:02.760 - 00:00:05.870, Speaker A: You okay?
00:00:07.920 - 00:00:50.200, Speaker B: I guess. Let's get started. So there were three things today. So one, I just wanted to check in, see if there were any updates on Devnet Eleven or any client issues people wanted to bring up. Two, talking about the launch of Devnet twelve, which we said we're going to try to do before Alcor devs this week, even if it's only with a subset of clients. And then three, Mario wanted to talk about some of the tests running on Hive interop now, but yeah, maybe to start on Devnet Eleven. Any updates from any teams or clients?
00:00:58.880 - 00:01:24.710, Speaker C: Yeah, I can give a brief prism related update. So we're still working towards the latest back, which is the blob inclusion format changes, but I think my estimate is probably 53 weeks on that. I think in terms of net twelve, if there's enough consensus client ready this week, feel free to start. Don't wait for us. We will join when we're ready.
00:01:25.320 - 00:01:26.310, Speaker B: Got it.
00:01:28.360 - 00:01:41.050, Speaker D: For Lighthouse, we've got all the changes implemented. I just put a link in the chat to the branch where we have all the changes we're going through like a final review now, but should be good to go.
00:01:49.920 - 00:01:56.640, Speaker E: Quick question about Lighthouse. Do you guys want us to still continue using quick or is that not included in this branch?
00:01:58.420 - 00:02:11.590, Speaker D: Quick will also be there. I guess it's fine to use, I'm not sure. I haven't personally been looking into analysis around it, but I guess might as well use it.
00:02:23.360 - 00:02:32.320, Speaker B: Any other, any other client team want to share an update?
00:02:33.620 - 00:03:44.630, Speaker F: In nethermind we have two nodes from the branch which is supporting blob transactions, Reorg like storing them until there is a finalization on the chain to be able to react them in case of Reorg. And it would be really great if we would be able to have some reorgs on Devnet Eleven. Like probably trigger it somehow artistically. And it's, I think, important part which is not yet tested on Devnets. Like the scenario of Reorgs is not covered and because of this re adding of block transactions, which there wasn't something like that before, and would be great to trigger some reorgan on Devnet Eleven or twelve.
00:03:49.170 - 00:03:51.520, Speaker B: Is there a way to easily do that?
00:03:53.650 - 00:03:56.400, Speaker E: Yeah, I think we can do some non finality stuff.
00:03:58.850 - 00:04:12.690, Speaker G: Non finality and reorgs are quite a bit different though. Like we would need to maybe skew the clocks on some of the nodes manually to trigger actual reorgs.
00:04:15.370 - 00:04:34.380, Speaker E: Not necessarily sure if that would even do it. We should try to do this with the chaos testing tool. Realistically. But yeah, otherwise I think we can just do either a combination of clock and non finality and then try and get it done in Devnet twelve.
00:04:37.850 - 00:04:38.166, Speaker A: Or.
00:04:38.188 - 00:04:44.060, Speaker G: Yeah, we can run multiple validators on different machines. That's also a good idea.
00:04:46.270 - 00:04:55.280, Speaker E: Yeah, but that's also not going to guarantee, especially on a small network, it won't guarantee that the blocks being caused are different from each other.
00:04:58.360 - 00:05:06.810, Speaker B: Right, because what you want to see is the blob transaction being included in block a and then re included in block b.
00:05:07.180 - 00:05:16.650, Speaker E: Exactly. They might both just include the same ones, but realistically, I remember that Hive had a lot of re op tests, right?
00:05:17.020 - 00:05:21.420, Speaker H: Yeah. So used to do it in the past. Yeah. Can you guys hear me?
00:05:21.570 - 00:05:22.124, Speaker A: Yes.
00:05:22.242 - 00:06:15.740, Speaker H: Okay, so the way that hive does it is basically just starts from genesis on two different subnets. So half of the validators on one subnet, half of the validators on the other one. Then we wait for a couple of epochs, and then we just connect everything, everyone together. So by the time they are reconnected, we have two different chains built by each of the half of the validators, and they will try to reorg, at least one half will try to reorg to the other half optimally. But I'm not sure how easy to do this on adapt. It's easy on Hive because you simply start disconnected and then you connect at some point. So it's fairly straightforward, but I'm not sure how easy it is to on adapnet.
00:06:16.400 - 00:06:38.660, Speaker B: But on Hive, could we do that and then force include a different blob transaction on each side, on each subset of the validators? So then you're sort of guaranteed that at least one of those blob transactions would be reorgan and then checking for inclusion.
00:06:39.960 - 00:07:03.740, Speaker H: Yeah, absolutely. So I don't think we select transactions on Hive, but we can definitely do it. So we could, for example, set Blob A to subnet a, and then blob b to subnet b and just verify that they are all included on the chain that is eventually become the canonical chain.
00:07:12.320 - 00:07:12.732, Speaker A: Yeah.
00:07:12.786 - 00:07:38.150, Speaker B: Any other thoughts on testing reorgs? Okay, so let's maybe have a look at what we can do on Hive and potentially on either the chaos testing or devnets. But yeah, we should definitely start testing that at this point.
00:07:41.680 - 00:07:42.460, Speaker F: Um.
00:07:44.800 - 00:07:50.060, Speaker B: Anything else on Devnet Eleven or the current implementations.
00:07:53.450 - 00:08:30.440, Speaker I: On Loadstar side? I can share an update. Earlier, Loadstar was sort of waiting for all the blobs and then importing the block. Now we basically start importing the block as soon as we see it and basically then in parallel we wait for blob availability now. And we also have some matrices added to it regarding to whatever is the additional delay, which I'll try to analyze this week. But yeah, this particular change has been running on Devnet eleven for some time now. So with respect to load Star.
00:08:32.250 - 00:08:32.566, Speaker A: We.
00:08:32.588 - 00:08:35.160, Speaker I: Have sort of settled on our final architecture as well.
00:08:37.130 - 00:08:37.880, Speaker A: Nice.
00:08:48.000 - 00:09:16.456, Speaker B: Any other team? Okay, if not so, I guess so. For Devnet twelve, I believe on the awkward devs last week we had KCU and was load Star or Nimbus, the other client that was already ready, Lodestar and Lighthouse and.
00:09:16.558 - 00:09:17.690, Speaker A: Oh, okay.
00:09:19.820 - 00:09:28.156, Speaker B: And then on the el side, do we have all els ready? I guess so, because there's no changes.
00:09:28.258 - 00:09:41.920, Speaker G: Yeah, there's no changes. So it should be the same. The only thing that might have changed is which branch we need to use or whether they have moved something into upstream into their master branch or something.
00:09:42.070 - 00:09:42.770, Speaker A: Yeah.
00:09:47.830 - 00:09:56.950, Speaker G: I would be actually curious to know is anyone else is already following their latest master other than guest.
00:09:59.050 - 00:10:01.442, Speaker I: Ethereum? JS is also latest master.
00:10:01.506 - 00:10:12.140, Speaker A: Only master for Nether might only like one pr is not merged, but probably we will merge it.
00:10:14.960 - 00:10:21.600, Speaker I: For Eragon. Everything is merged, though the branch is called Develle instead of master.
00:10:31.080 - 00:10:31.830, Speaker H: Okay.
00:10:33.000 - 00:10:38.810, Speaker B: And then we should still be able to get this launched before awkward after Thursday, right?
00:10:41.020 - 00:10:59.112, Speaker G: Yeah, I did an initial test last week already on Friday and everything looked pretty okay. So I don't think there would be any blockers. It would be good to have still Nimbus or Prism already at Genesis, but if not, then it's not going to be a blocker.
00:10:59.256 - 00:10:59.564, Speaker A: Yeah.
00:10:59.602 - 00:11:06.130, Speaker G: And I guess a very big network anyway, so we can just quickly make some deposits and include those also.
00:11:07.380 - 00:11:58.544, Speaker B: Yeah, and I guess based on what Terrence was saying, like, prism won't be ready for another couple of weeks, so we clearly won't have them at Genesis. Do we know if Nimbus is like almost there or is it because if they also still need a couple of weeks, then in that case we basically have all the clients ready today and then obviously the editors will join later. But are we waiting on any last minute client? I don't think there's anyone from Nimbus here, but yeah, I guess we'll just.
00:11:58.582 - 00:12:14.950, Speaker E: Follow up with them afterwards. But I don't think we've heard anything about their status right now. And I would just guess that we wait until all clients are ready before we do a big shadow fork because we wanted to do one that's a couple hundred nodes at least.
00:12:15.480 - 00:12:16.470, Speaker B: Got it.
00:12:17.160 - 00:12:17.524, Speaker A: Yeah.
00:12:17.562 - 00:12:58.970, Speaker B: So I guess as soon as we hear from Nimbus, if they're ready soon, we can wait for them to launch the Devnet. As long as it doesn't happen after Wednesday. And then if not, then I guess we're pretty much ready to launch Devnet twelve. Any other thoughts? Comments on Devnet twelve? Okay, if not. Mario, you had some hive interop updates, right?
00:12:59.340 - 00:13:01.688, Speaker H: Yes. Can I share my screen?
00:13:01.854 - 00:13:13.970, Speaker B: Yes, please do. You don't see your screen yet?
00:13:14.040 - 00:13:17.970, Speaker H: Yeah, let me see.
00:13:18.040 - 00:13:20.050, Speaker B: Okay, we do now.
00:13:20.120 - 00:13:20.450, Speaker A: Yeah.
00:13:20.520 - 00:13:57.418, Speaker H: Oh perfect. Yeah, just a quick update on the things that we are running currently on the hive interrupt. This was just updated. It contains the latest to Dankun branch which already contains the new consensus spec updates for Hive. Basically you can come here and just take a look at all the suites. Currently we only have Lighthouse, Techu and Lodestar running on this all in pair with Nethermind and I think go Ethereum also, but I'm not seeing it here. Maybe that's a mistake.
00:13:57.418 - 00:14:44.174, Speaker H: But yeah, Nethermind is the main client we're using to run and you can see there are basically four test suites we are running currently. So the first and the most important one is just a testnet. Basically we have two test cases here. And if you come here into the loath of the test cases, you can see we revamped a little bit the description of the test cases. So if you come here, you can see the configuration for the testnet, you can see the verifications that are done. And this is done for every single test case. But yeah, basically these two test cases here is just basically starting from Capella and then starting for the nap also.
00:14:44.174 - 00:15:47.730, Speaker H: And you can see that this is passing with the latest consensus spec version. But we also have test with for the builder which also uses the new builder API updates for the consensus spec. And I've tested most of this locally with the sanity test and they are all passing. So the errors that we are seeing here are probably isolated errors or I have to double check on exactly what's failing to really know what's happening. But if anything is found, I will just address this with each of the clients. Yes, and also we have the test suite for sync and we have the test suite for blobs gossiping. So this blobs gossiping is using the updated blobber test tool that we are using that we used last time to generate the equivocation blobs.
00:15:47.730 - 00:16:42.126, Speaker H: We are doing a very similar thing here and this is not updated to use the updated sign header on the blobs so you can go here and just click any of the test cases and you can basically see what's the blobber doing in each of the test cases. You can see, for example here is creating just a kiwiki thing block and just signing it and doing some stuff. And this is done for every single test case. So if you see your client here and it's failing some of the tests, you can easily just come here and see what the blobber is doing. At the moment, to be honest, there might be some test issues still. But again, I tested the sanity test cases on each of the suites and each of the clients, and they are all passing. So this is some test cases that are failing.
00:16:42.126 - 00:17:42.200, Speaker H: But I will double check this and then just go to each client to just see if there are some issues that need taken care of. The description here is not visually the best, but if you want, you can also go here. I will share this link, which is basically just a branch that we are using. And you can see every single test suite that we have here. You can just click on each of the test suites and see every single test case and what's the verifications, what's the configuration and everything for every single test case and also how to run it locally if you so wish to do so. Yeah, that's basically the status right now. If you have any test case that you want me to run or double check, just please let me know and I'll share the links of this in a bit.
00:17:42.200 - 00:17:47.650, Speaker H: Are there any questions?
00:17:59.460 - 00:18:08.770, Speaker B: No questions. It seems lots of clapping hands. Yeah, this is very cool.
00:18:16.740 - 00:18:50.250, Speaker H: I just shared the links on both the Hive interrupt site and also the description of test cases. I think I shared just one. Let me share the complete set. Yeah, and please take a look if there's any test case missing. Obviously we're iterating and making more regression tests for hive, but if you see anything that is obviously missing, just let me know and we can just implement some new test cases if necessary. Yeah, that's basically it.
00:18:51.660 - 00:19:26.260, Speaker B: Thanks, Mario. Yeah, that's the last thing we had on the agenda for today. Was there anything else people wanted to bring up or discuss before we wrap up? Okay, well, yeah, happy to close off here, so, yeah, thanks, everyone. Talk to you all on ACDC this Thursday, and by then, let's try and get Devnet twelve up.
00:19:26.790 - 00:19:30.730, Speaker A: Bye you. Thanks. Thank you.
00:19:30.880 - 00:19:31.402, Speaker F: Thank you.
00:19:31.456 - 00:19:34.390, Speaker A: Bye. Thank you. Bye.
