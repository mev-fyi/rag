00:00:45.970 - 00:01:14.370, Speaker A: Good evening, everyone. I'm Stefan chill. I'm the CTO for a area as well as the person responsible for pretty well populated London hub, as you can see tonight. First, a few things I want to say thank you to the Barclays accelerator. Barclays accelerator is this building and they kindly allowed us to use it tonight. As you can see, it's gorgeous. We can have expected, for a better environment, a few things about health and safety.
00:01:14.370 - 00:01:48.186, Speaker A: The emergency exit is at the back. That's also where you'll find the restrooms. We're also filming this event, so if you mind turning off your cell phones or putting them on silence. We appreciate that, thank you. So I'll start with a few things before Gavin speaks. I was thinking, what's a better argument for decentralization than looking at what happened to empty Glox, or empty Glox, really? You're looking at a situation whereby we got this beautiful cryptocurrency bitcoin. That's yours to keep, that's yours to keep safe.
00:01:48.186 - 00:02:35.038, Speaker A: You do not have to trust a third party entity in order to keep it safe. And yet people have been trusting decentralized exchange with their money and now several million, I think, dollars are gone. So that's exactly actually what we all do when we use a bank, an exchange or even social networks, you may think doesn't apply to you because you're very careful with your personal information. But in reality, I suppose most of you might not admit it, but you probably have a Facebook account. So you trust Facebook with your personal information, your kids picture and so on. You trust a company that put 5000 programmers somewhere in San Diego with your personal information. You make sure that you have to trust that somehow nobody is ever going to make a mistake, nobody's ever going to be malicious, nobody's ever going to wake up on the wrong side of the bed, introduce a bug, mess up the access control system.
00:02:35.038 - 00:03:17.660, Speaker A: And you're also trusting that somehow they have an independent entity, a third party entity to run regular audits. And you probably never check those audits, but you did the same thing when you use Dropbox, you get probably a lot of files on Dropbox. What tells you that these files aren't potentially compromised by the NSA, for example? So one thing that also really got my attention recently was this new initiative by the chat from John McAfee. John McAfee himself created a new secure chat service called chatter. I don't know if you've seen that. That's an interesting one to me because if you look at their explainer video. The first thing that they say is the data goes to them, but you can trust them because they're not the government.
00:03:17.660 - 00:03:35.490, Speaker A: The message from all centralized entities trust us. And tonight Gavin is going to show us that zero trust system are potentially going to revolutionize the web and solid web 3.0. So without further ado, please welcome Gavin Wood.
00:03:41.590 - 00:04:36.600, Speaker B: Thank you, Stefan. Yeah, two or three parts. Basically the first bit I want to do a bit of updates as to where we are on the project and explain for those who don't already, does everyone here know what ethereum is? Am I just going to be explaining what it is for nobody's benefit? Anyone here not acquainted with a basic idea of what it is we're trying to do? No. All right, in that case I can do that reasonably quickly. And then the second part is going to be a bit more about the sort of experience that we're trying to bring to the world. What is Ethereum? Universal transaction ledger. So the idea is that we take transactions, all of us together, and we come to a consensus about what order they're done in and what they mean.
00:04:36.600 - 00:05:20.178, Speaker B: The key thing that makes Ethereum different to other systems that do sort of similar stuff is that it's much more generalized. We can store an awful lot more information between them. Well, we can store arbitrary amounts of information between the transaction, and we can do arbitrary. We can make them mean arbitrary things. So what that allows us to do is to make agreements between entities, individuals in general, but also organizations. In a way, this can be viewed as a social contract, but a social contract that is digitally enforced. Like all social contracts, you don't need to be a part of it.
00:05:20.178 - 00:05:50.922, Speaker B: So you can even in society sort of wander off to the side and say, I won't take any part of this. You go off and do your stuff and I'm going to ignore you and just do my thing. But the idea is to make it a system that people actually want to join for everyone's benefit. And it is all or nothing. There's no sort of I'll be part of this bit of it, but that bit, those taxes, I'm not going to do that bit. Can't choose. Can't pick and choose, all or nothing in the same way that the law is kind of all or nothing.
00:05:50.922 - 00:07:02.242, Speaker B: You can't choose which laws you want to abide by and which laws you don't want to abide by. So it is sort of with Ethereum, you're in or you're out, and we want to make it worth your while to be in. So the Ethereum project, where are we? Where are we in the project at the moment? We've been doing a proof of concept development series, so this isn't what you're eventually going to use, but we want to make some software that will show you the sort of things, the sort of technology that we want to bring about. So don't expect it to be super secure, don't expect it to be particularly well polished. The interface isn't going to be great, but it will give the technical minded of you an idea of what sort of things are possible. We've also had a few significant changes to the protocol that I'll go into just in a second and I'll give you a really quick update on where we are with the ether sale. So the latest proof of concept release is four, but we're coming up with five.
00:07:02.242 - 00:07:26.006, Speaker B: It's going to be ready for release probably over the next week or two. Key sort of changes are the we've introduced. Well, firstly, we've got a bunch of languages. We've got mutan, we've got serpent, which is a bit like Python. You see the name there? Serpent, Python. And we've got the language I made just very quickly ll we've got a debugger. It's really good debugger.
00:07:26.006 - 00:07:57.640, Speaker B: So if you're into sort of coding, don't hold back. There's a debugger. You can work out where your program's going wrong. But also the key sort of things that we've delivered is this webtech API. So we can now use HTML, JavaScript, CSS. We have JavaScript bindings so that you can interface with Ethereum directly from your javascript and you have it run right there sort of in the interface. So this allows you to do a complete front end, back end for whatever it is that you want to try out.
00:07:57.640 - 00:08:36.580, Speaker B: We've got a gambling app already sort of going, so you can choose what you want to bet on and click bet and it will do a provably random gambling outcome. But we also got a couple of other things. We've got a name registration web front end, and we've also got a coin front end, the first coin, in fact, to be implemented in Ethereum. There it is. It's gavcoin. There's Vitalik in one of his more sociable t shirts, sporting a background. The changes that we've made, I won't go into too much detail.
00:08:36.580 - 00:09:12.830, Speaker B: Suppose you really mind too much. First one is that originally the contract was meant to pay for all the computation it does, we've changed that now. So now it's whenever the contract is invoked, it's the person doing the transaction that pays. This allows us to do a few other things, but it's worth knowing. Another one is like renting. Contracts may now need to rent their existence, so if they run out of funds, they suddenly get sort of thrown off the blockchain. A couple of the more important ones that I will go a bit further into are the contracts are now objects.
00:09:12.830 - 00:10:20.350, Speaker B: And I'll tell you a little bit about the directions that we're taking for the proof of work. So regarding the contracts being objects, it used to be the case that if you wanted two contracts to cooperate with each other, you would take the contract that wanted to use the other contract and it would sort of just peek into its state, into its storage, see what it was doing that wasn't very clean, it was a bit horrible. So what we have introduced is something a bit more, well, something that my university teachers would be happier with. So we now have sort of contracts can provide APIs and other contracts. Rather than sort of peeking into what they're doing, they can ask them in a nice, friendly, formal manner, a manner with a bit of protocol behind it. What this allows us to do is for contracts to sort of within Ethereum, sell themselves, sell what they know. So certain contracts that this makes possible are things like data feeds.
00:10:20.350 - 00:11:04.190, Speaker B: See, the problem is, if you are, I don't know, someone who knows things about the world and you want to tell all of Ethereum, all the Ethereum contracts about these things in the old system, as soon as you put it into Ethereum, well, they didn't need to pay your contract to see what that knowledge is. They could just look at it and it was right there. In the new system, you can sort of gain a bit of money. You can offer this as a service. If they want to do it themselves, then they're free to do it themselves. Of course, they don't have to use your service, but if they want to use a service, you are then free to say, well, maybe you should give me a small payment for that service. The proof of work is an ongoing challenge.
00:11:04.190 - 00:11:51.466, Speaker B: It's not something we're concentrating on, especially at the moment. We really want to get the other things sorted first. But the direction that we're going to take it in is one where we want to empower people with commodity hardware as much as possible. So you've probably heard a bit about memory hard and ASIC resistance. So it's kind of along this general path, but there's a new sort of component to it now, and the component is general purpose computation. The one thing that you can count on from commodity hardware is that it will be reasonably general purpose, because everybody has a different thing that they want to use their hardware for. So the hardware, in order to be useful for everybody, must, of course, be general purpose.
00:11:51.466 - 00:12:36.526, Speaker B: So if we can make a sort of a proof of work that requires general purpose hardware, what we can do is we can empower all the people in the world, which is a lot with General. The people that own general purpose hardware. We can empower them in order to be able to mine ether at no greater cost to themselves than large organizations that want to invest in mining operations. And this is the problem with bitcoin. As it stands. Of course, the reward curve is super linear. If you want to invest a lot, then you design a new ASIC, you have it produced, so you sync all this money, and then you produce a lot of them, and you use them all for yourself.
00:12:36.526 - 00:12:49.602, Speaker B: And so the curve sort of runs. I'll do it mirrored. The curve sort of runs. Not very much. Not very much. Profit suddenly skyrockets in terms of profit. And this is no good, because for everybody else, they're stuck at the low end.
00:12:49.602 - 00:13:15.866, Speaker B: They don't make any money. But for the very large institutional investors, they make a lot of money, and they get a lot of power. And if you have sufficient money, then you can really actually do a 51% attack. It just kind of makes it insecure. So we're sort of moving down the road in order to try and mitigate that. Finally, the ether sale. Yeah.
00:13:15.866 - 00:13:38.340, Speaker B: How many people here are interested in knowing where we are with the ether sale? One or two. Okay. It's coming along. We are making progress. Our main issues are not technological, of course. They're legal. We want to make sure that everyone's on the same page.
00:13:38.340 - 00:14:21.040, Speaker B: We want to make sure that people understand that ether is a sort of a crypto fuel. It's a token that will be used for using a computational system. And so we don't want any misunderstanding that we're trying to sell anything else. So, while the lawyers get their shit together, patience is needed. There's a reasonable chance it'll happen in the next month. We've been told it's two weeks out by the lawyers. We get told it's two weeks out by the lawyers roughly every two weeks.
00:14:21.040 - 00:16:11.080, Speaker B: Okay, that was act one. This is act two, the web, and to a large degree, the Internet as it stands is designed around centralized systems and authorities. When you download a web page, when you use a web app or a web service, the first thing that you do is you type in a company's name. And the next thing that happens is that your computer asks an authority what that company's computer is, what the address of that computer is. The next thing that happens is that you go to that company's computer and you ask them to please log you into your account with your data and tell you what's going on with your friends. To take Facebook as an example that's susceptible to bad things. The worst thing is, of course, that when you're communicating with this company, a lot of the time you'll do it in plain text, in open communication, even though it's a private conversation between you and the company.
00:16:11.080 - 00:17:13.024, Speaker B: But let's ignore that for now. Even though that's a private conversation, you will still do it in the open. The only thing that happens on the hardware that you can trust, which is to say on your hardware, is it being displayed to you? That's not very much so. We have the database that contains all our data with them, the code that operates on that data, and says how things should change with them. We even have the communication mechanisms. If you read any of the Guardian or despiel or any of Snowden's revelations then you'll realize that really the bit between us and them is them as well. This isn't the way it should be.
00:17:13.024 - 00:18:00.892, Speaker B: There should really be an arrow going between those red boxes there. This is a fundamentally broken architecture. The problems are in the necessity for trust. Why do I need to trust people in order to talk to my friends? And in centralization and what I've called specificity, I don't think that's actually a real word. But what I mean by that is that everything is identifiable to people, to geographical locations. When we communicate with people, it happens by IP addresses. When I look at the Google server, I get an IP address.
00:18:00.892 - 00:18:56.260, Speaker B: I know that it's situated, I don't know, somewhere near San Francisco, I guess. When Google replies back to me they know exactly where I am to the point of knowing the street, perhaps even roughly where on the street. This is not necessarily a good thing. The way the system is set up at the moment is that the cost of anyone that wants to abuse that trust is almost nothing. It's roughly nothing. An employee of Facebook, if they wanted to, can go into the Facebook database and read any messages that I have sent. The cost of attacking it or the marginal cost at least for sufficiently large and powerful organizations is nothing.
00:18:56.260 - 00:19:25.850, Speaker B: It's already there, the infrastructure is there. What do they do? They go to Facebook. They say, hey, we need access. Facebook, go, oh yeah, sure, it costs nothing. Trusting organizations has been shown time and time again throughout history not to be a good plan. If you need to trust anyone, then you want to trust individuals that you know, do not want to trust faceless. And they are faceless, no matter how much they try and tell us they're not.
00:19:25.850 - 00:20:02.130, Speaker B: They really are organizations. And the problem with centralization is that it's, well, the good thing about centralization is that it's easy, it's easy to make it work. This is the reason that we started off with centralized. You remember back in the 90s if you wanted to download an illegal mp3 from the Internet, you went to Yahoo. MP3 search, right? You download, it was centralized. You downloaded it from a centralized point. And then it's like, oh, actually time goes on and Napster comes out decentralized.
00:20:02.130 - 00:20:51.530, Speaker B: Well actually it was only semi decentralized, still went through the central Napster servers in order to find the peers. So then it's decentralized even further. We get Bittorrent. Problem with centralization is that it's easily broken. And again, as some of the revelations of late have shown us, it's easily broken into, it's easily corruptible, and this does not bode well for society. So we've got this web, can we sort of patch it? Is there some way we can fix it? No, we must be honest with ourselves. We must be honest with everybody, but first and foremost ourselves.
00:20:51.530 - 00:21:30.630, Speaker B: We really shouldn't kid ourselves into trusting roughly the same organizations and roughly the same structures that will tell us time and time again, oh, it was a one off. It wasn't meant that way. We'll behave now. We'll pass some new laws. That's right. No, we've been given mathematics to protect ourselves and we should use it. We should use it to guarantee our rights.
00:21:30.630 - 00:22:12.870, Speaker B: The problem is maths is a bit hard to use sometimes. You don't want to really have to have a degree in maths or computer science in order to use the rights to take those rights that have been given to you. We really want tools that we can use that are easy to use but that we can trust. So we trust in the tools. We don't trust in the organization. We trust in the maths, in the nature, not the organizations. So that's the first step.
00:22:12.870 - 00:23:19.770, Speaker B: So how do we do this? We have a problem. We like Facebook, we like all of our applications that go on the web, and we want more. So we take what we need to do and we split it into the bits that are different, and we conquer each in turn, and we be honest about what those bits need to do. Sometimes we need to make publications about what it is that we think or what it is that we want. If that's the case, then we just spread far and wide, and we make a system that is designed to spread it far and wide. Sometimes we want to speak in private, and we don't want anybody else listening to you. Think of those times as the times where you want to go into a park and make sure there's nobody around, or there's no drones or satellites above you listening to what you might be saying, and you have a one to one with a friend or a loved one.
00:23:19.770 - 00:23:47.376, Speaker B: In that case. We do not trust it to Facebook or any other organization or entity or the public wires in order to protect. What we do is we trust maths, we trust nature, and we encrypt it. And if they want to know it's from us, we sign it, too. And then, guess what? We can spread it far and wide as well. There's nothing stopping us because we've already sorted it with the encryption. That's not how the Internet works at the moment.
00:23:47.376 - 00:24:50.770, Speaker B: At the moment, we tend not to encrypt, and what we tend to do is just trust that the routing will deliver it to that person and not to anybody else. But again, if you read revelations, then you'll realize that's not quite true anymore. If it's something that we've agreed upon, well, then we sign it and we form a consensus that everybody agrees that I've signed it. And then we spread it far and wide, too, always automatically and without any third parties, any organizations do it between ourselves. There were three sentences there, three statements. And thus it seems reasonable that there are three different technologies for doing this. The first would be for publication and distribution, second, messaging and bulletins, and the third for the agreements and relationships that we want to encode.
00:24:50.770 - 00:25:34.964, Speaker B: Can you guess which one ethereum is? The agreements and relationships. Okay, so those are the precursors. Act three, web three, the new order. So we have three projects for web three. Three pieces to the puzzle. I'll go from bottom up, because you already know Ethereum, agreements and relationships. And we have two more things that we need to do.
00:25:34.964 - 00:26:20.824, Speaker B: First, whisper for messages and bulletins. This is so that we can speak to each other, tell each other things, give shouts, without fear of people that we don't want listening, listening. And the third thing is swarm. Swarm is for publication, telling people, here's a big chunk of stuff, I want it to be free. Everybody should share. Now to some degree, there are already technologies that provide these. Not so much for the Ethereum thing, for whisper, there's already things like bit message, for swarm, there's bittorrent.
00:26:20.824 - 00:26:53.836, Speaker B: But we really want to do something a bit better. We want to push the boat, make it proper. So for swarm, peer to peer, obviously don't need to go into any centralized authorities and say, hey, I'd quite like to publish this. It's a bit like Bittorrent. So it's data sharing. And the idea is that it's semi permanent, so the data sticks around for as long as anybody wants it. If you really want to make sure that the data is around, then you keep seeding it.
00:26:53.836 - 00:27:47.150, Speaker B: If you like, you keep maintaining it. The idea is that it's any size of data, it's not just for gigabytes, it's for kilobytes, megabytes too. And the basic premise is that you have a hash, so you have an address of some data and you use this swarm in order to get what that hash, what that address represents. The full thing, the file, the archive, the chunk. Compared to existing technologies, it will be more agile. The network will adapt in order to optimize for exactly what needs to be communicated. More secure, potentially onion routing there.
00:27:47.150 - 00:28:43.676, Speaker B: But first and foremost, encryption. Everything is encrypted, and thirdly, a better incentivization framework. We want to make sure that people who put a lot in get a lot out. This can be used to potentially sell bandwidth, but in the early days we really just want to make it fair. For those of you that are not particularly familiar with how Bittorrent works, we have a bunch of potential users have three files, a, B and c, and as you can see, they form networks between them in order to make sure each other gets the whole data. So the next piece of the puzzle is whisper. So whisper.
00:28:43.676 - 00:29:18.508, Speaker B: Like I said before, this is the messaging system. So for those of you who are very technical, think UDP. We want to take a small message and send it to someone, but we don't want to identify them with an IP address which instantly gives away their geographic location. And we don't want to be dependent on things like Tor in order to hide that location. We want this to be a low level protocol in order that all applications built on this web, three on this system, always use it. It's for transient publication as well as messaging. So how do you distinguish between the two? It's really easy.
00:29:18.508 - 00:29:54.020, Speaker B: Transient publication isn't encrypted. You send it out, the network distributes it to everybody. Everybody can read it. Messaging, you encrypt it with the recipient's public key and you send it out to the network. Everybody redistributes it. Only the recipient can read it. We can actually optimize it a bit further, but for now it's also got a configurable time to live, so we can distinguish between messages that we want to stick around so that people can read it into the future.
00:29:54.020 - 00:30:26.288, Speaker B: Maybe they're not online at this point. Maybe they're going to come online in a few hours. We want the message still to be there, and those messages where maybe we already know that the recipient's around and we want it to get there as fast as possible. In this way, it doesn't really conform to async or sync messaging. It's kind of somewhere between the two with a slider bar. The basic idea behind the implementation is that all message data is spread throughout all peers. Now of course, you say it's not scalable, and you'd be right, it's not.
00:30:26.288 - 00:31:21.190, Speaker B: So what we do is we optimize it so that the peers tend to provide the messages to their peers that they think are going to be useful. And we do this in a probabilistic routing mechanism. We then have each peer optimize who they talk to, throw off the ones that aren't so useful, randomly choose ones that might be useful, or even route through the network. Find your peers, peers, connect to them directly. Using this, we can actually be quite a resilient peer network against considerable attacks. Private content, as I said before, is always encrypted, but also the content going between the peers is encrypted as well. So even a third party who was able to access all of the communication lines still couldn't really tell what was going on.
00:31:21.190 - 00:32:46.130, Speaker B: Network is dark, which means we can't necessarily tell which peer is communicating with which other peer. What we do is we give messages attributes, maybe it's something like the public key of the recipient. And then what we do is we broadcast in a probabilistic fashion, so no one can really tell what's going on, the sort of attributes that we're interested in in order to allow the network and the peers on the network to optimize which packets are passed where. And finally, there's a fast, durable trade off, as I mentioned before, so shorter lived messages will be rooted ahead of those that are meant to stick around for a bit longer. So if we're publishing, it's not encrypted, everybody reads it. If it is, if it's private, only a can read it, the others cannot. Similarly, if we sort of take this idea of color as being a proxy for the attributes, each of the peers can select ahead of time, which messages are most likely to be useful to some other peer that they want to communicate with.
00:32:46.130 - 00:33:33.308, Speaker B: And finally, if we have a longer time to live, it's lower priority, takes longer to get to people, and then it doesn't spread as fast. If we have a shorter time to live, it's a higher priority, spreads very fast. The final piece to the puzzle, ethereum. What does Ethereum do? It remembers the state of the world of affairs, count, balances, reputation, whatever else. How things are now, everyone agrees on it. Consensus. Also things like unfinished business, what's currently happening.
00:33:33.308 - 00:34:16.088, Speaker B: And how do changes, how do transactions, how do events that people instigate alter the ending, just in the same way that with a legal contract. How specifies potential different ramifications under different circumstances. And finally, it's a blockchain that stores everything. And so it can be used as an effective archive, although a rather expensive one. You don't really want to store everything on it, but hashes is a reasonable thing, and of course you can combine that with the other parts of the system in order to make something that's really useful. So if we combine them, what does it sort of look like? A schematic. There it is.
00:34:16.088 - 00:34:49.824, Speaker B: Lovely. What a diagram. The green circles are your local computers. There you are, you're the user. And we can see there's this new thing where there used to be a website, there is now an Eth app. If you didn't know the D with a little line through it, is the old english letter for eTh. On our side there's the user interface stuff, HTML, CSS, whatever it will be.
00:34:49.824 - 00:35:35.492, Speaker B: And on the back end, but still on our computer, is the JavaScript. Similarly, in the back end is Ethereum. And you see they're all blue and they're all the same size and shape, because we all agree on it, it's the blockchain. And we have a local store as well, to store things that might be useful to us, that we don't need anybody else to know, private keys maybe. And then we have the communication mechanisms that are not the blockchain, swarm and whisper, and it goes around and we can, if we imagine a lot of these, and they're all sort of interconnected. We'll start to imagine really what the vision is for web three. So slightly more in terms of the browser.
00:35:35.492 - 00:36:00.480, Speaker B: We have many different ETH apps. Some use maybe the HTML CSS existing web tech in order to deliver the front end. Some use some new stuff that we're developing as well. Qt quick QML that it's based on. I don't know if any of you know that. Probably not, doesn't matter. And there are three services that I've already been over, Ethereum, Swarm and whisper.
00:36:00.480 - 00:37:07.930, Speaker B: So how does this compare to what is currently in existence? For logic currently in existence, we really have databases and server codes that lives on the side of them. For web three that will live on our side. If it's a contract, if it's something that everybody needs to agree on, then we all agree on it, and we do it in a fair, consensual, consensus based fashion. If it's not something that everyone needs to agree on, then it just happens in the Javascript and that's fine, that's all local. If it's something we want to archive, then we put it on the blockchain, or if it's something only we need to know about on the local store currently, that has to happen on the database that's on their side. Presentation, more or less the same. And then we get for the static data, static data, things like big web pages, templates, images, sound effects, whatever it will be.
00:37:07.930 - 00:37:52.160, Speaker B: We use Swarm for that. Currently, that has to go over the wire, HTTP centralized, trusted, and for dynamic updates we use Whisper. Communicate between ourselves currently. Well, we have a whole slew of technologies, but basically it involves having to go to a trusted entity and ask them, please tell us the data that we're interested in. So I want to give you an example of how all of these components can be put together and make something that you might have some interest. Who's interested in a decentralized marketplace? Okay, some of you are, right? Good. It's a good crowd.
00:37:52.160 - 00:38:40.260, Speaker B: Who's interested in turning up the fun? Stefan, you gotta get a coat. So here's a mock up of a potential Ethereum browser, web three browser marketplace on blockchain. I know it's a bit, it's a bit bare at the moment. Don't worry, it will get less bare as the time goes on. First thing you do is you type it in. Notice that there's no.com or anything like that.
00:38:40.260 - 00:39:25.138, Speaker B: The reason there's no.com is because it doesn't use the existing infrastructure of the Internet. It uses something that we all have an equal part in because it's all based on a consensus mechanism. Uses the blockchain, uses the blockchain to work out what the hash is for this particular web app, ethapp, and it grabs it from the swarm network, downloads it and opens it. And so we end up with a basic template for a marketplace. Now, the problem is, because it's come from swarm, of course, it's just the static data. It's the stuff that doesn't change.
00:39:25.138 - 00:39:52.462, Speaker B: And the stuff that doesn't change is sort of the template. All the bits that do change, well, it can't provide those. The reason it can't provide those, of course, is because the hash doesn't change. The hash is just something that carries on over time in the same way that in Bittorrent. If you download, I don't know, the Ubuntu distribution, with a particular hash, you want the latest one. You can't use the same hash. You have to work out what the new hash is.
00:39:52.462 - 00:40:24.430, Speaker B: Hash is only for one particular set of data. In this case, it's the template for the marketplace application. Yeah, we're coming to that. So the next thing that happens is we have some people here. We have Alice, Bob, Charlie, and Dave. And some of these people want to sell things. Alice is selling a Cup, for instance.
00:40:24.430 - 00:40:51.058, Speaker B: Dave's more into his football, so he's selling a ball. And at this point, we use a different technology because these are transient messages. They're things that do change over time. We're using Whisper publishing data now. Bob isn't selling anything. Bob is our example. Bob wants to know what's for sale, and through Whisper, he realizes that Alice is selling a cup.
00:40:51.058 - 00:41:30.658, Speaker B: Charlie is selling a kite, and Dave's selling a ball. This is all, of course, open because they want to publish it. It's not encrypted, and so it populates the marketplace. The marketplace, of course, contains client side information to tell it what to do, how to collect this information, and how to display it, how to build up its template from the basic static information, and of course, the current dynamic information. So we realize that Alice wants to sell her cup. Well, says Bob, he's running this web three browser. Bob says, that cup looks awfully nice.
00:41:30.658 - 00:41:55.766, Speaker B: I think I want to buy it. Ooh, says Bob, a cup for sale. And so Bob clicks the buy button, which sends a message for Alice through the whisper system, of course. So it's encrypted, so only Alice can read it. Nobody knows that Bob has told Alice that he wants to buy her cup. Alice congratulates herself. She advertised her cup.
00:41:55.766 - 00:42:27.480, Speaker B: Well, Bob wants to buy it. So she opens an escrow service on the blockchain. So now she uses ethereum and she sends a link to that escrow service that she's opened that account, says to Bob, look, there you go. Pop it into this escrow service, which we both know and trust because we can read how it works. This isn't a third party organization. This is actually just a bit of code, but it's a bit of code that's executed with everybody's consensus. Everybody can agree on what it's supposed to do.
00:42:27.480 - 00:43:08.100, Speaker B: Bob realizes that this is a trustworthy service, and so he pays the ten eth into that service for Alice and sends Alice a link saying, hey, look, I did it. It's there. Alice realizes, of course, that it's there and she can trust it because she has the same blockchain that Bob does and she reads the same code, looks at the same state. So of course, within the application, it says to, yeah, yeah, Bob's put the money in. You can send it now. Alice then mails the cup, which Bob eventually receives and releases the money. The money goes to Alice, and Alice is happy, Bob's happy.
00:43:08.100 - 00:44:03.390, Speaker B: And from a happy transaction, we can also interface with a reputation system that lives on the blockchain. And it all happens automatically to increase Alice and Bob's reputation by about ten e a cup's worth. Throughout all of this, unlike what happens at the moment, there are no authorities that need to be trusted and there's no centralization of the system that could fail or be corrupted. All we have are individuals cooperating for their benefit. This is how technology should be and we're honest. The advert, which we wanted everybody to see is public. The transaction, which we wanted to do in private, is private, and the payment, which we want to agree with each other is agreed.
00:44:03.390 - 00:44:53.940, Speaker B: In real life, it's very similar. If we want to sell something, we put an advert in the paper. When we want to do the transaction, we go around, we go to some private abode and we do the transaction. And if we want to agree the payment, we use a system of payment that we can both, indeed, anyone that we want to then use the payment for agrees on things like legal tender. It's just like real life. It's how it should be. So what will it look like? What's the actual final experience going to be? Um, one of the things I worked on a lot a few years ago was usability, did some research into it.
00:44:53.940 - 00:45:37.162, Speaker B: Usable interfaces are very important. Information needs to be clear, concise and appropriate. And of course, the interaction needs to be streamlined, easy. What have we got to work with? Yeah, well, it's all right. It just about does the job and we've got some people who took it a bit further, so we got multi bit complicated. But the thing is, it's still just one app. We really want to bring it together so we can look at app platforms.
00:45:37.162 - 00:45:52.450, Speaker B: Microsoft's latest offering, of course, are tiles. Tiles are not a bad idea. It sort. It does show us information brings it all together. Relatively concise. Styling might not be to everyone's taste, it's not to mine. Apple.
00:45:52.450 - 00:46:33.600, Speaker B: We have the idea of a set of icons and then the dock where things sort of live. We can start things easily from it. The doc also does give some information as to what's going on currently. It doesn't give very much information, but it's sometimes, if you've got some males waiting, it'll tell you, hey, you got four males waiting there. Bit of information Google's offering, which these days, browsers and operating systems starting to sort of be in the same sphere. Icons, I never got tabs. You can do multiple things at once, which is a bit like the doc, but slightly different.
00:46:33.600 - 00:47:10.542, Speaker B: So where are we going, lucky people? You're going to find out. Little viewers, to what some of our designers have. They wanted to get rid of the URL. No, the URL is good. Okay, so basic browser. But then we've also got the side pane. Side pane functions effectively as a bit of a doc.
00:47:10.542 - 00:47:33.754, Speaker B: But then we've also got the Uri. And switch between Uris. Uri, for those that don't know, is a bit. This bit here, we might have an app, an App Store page, things like. We get the reputation. That's cool. Reputation.
00:47:33.754 - 00:48:18.360, Speaker B: Of course, we don't go to an authority for the reputation. We work it out ourselves because we can. We might have a contacts page. Wow, there's a handsome fella there. We can work out who we trust from this and potentially we can work out how much we trust people that we don't know. Facebook is doing this a little bit, you know, whether they're friends or friends, but it's not really a quantitative thing. We really want to take it to the next level and we don't want to have to trust a third party organization to tell us whether we trust somebody and a wallet so we can see what's going on.
00:48:18.360 - 00:48:56.702, Speaker B: Yeah, that's a good question. So the yellow thing is where. So the idea is, currently, browsers have plugins, right, extensions. So if you install the ad block extension, you get a little icon in the top, right, and it sort of blocks all the adverts, changes how the browser works. Well, the idea is that that's no different here. If you install, for instance, the gold coin extension, then next to the ether that you own, you're also told how much gold coin you own. So the yellows are actually meant to be gold.
00:48:56.702 - 00:50:07.200, Speaker B: It looks a bit darker on here. The idea is to try and make it so you can change what the web three is into what you want the web three to be, so you're not stuck with one currency, one way of doing things. It's quite pretty. May not be all that useful, but it's quite pretty. Shows you where your peers may be. Sort of a visualization of the world, what's going on on the blockchain, what's going on on the peer network. We also have our idea of tiles, each of these being small eth apps, contract backed applications with a pane to the, to the right side when you select one to tell you a little bit more information, maybe even do some interaction with it, some of these ideas are pretty good.
00:50:07.200 - 00:50:42.034, Speaker B: This is by a guy called Alex van der sand. He's been working with us. So you can see here he's got an ether application for the San Francisco, there being an earthquake in San Francisco. So this is two things. In one, this is both a gambling application and an insurance application. And if you think about it, they're kind of the same thing. They're the two sides of the same coin, because insurance companies just really gamble that we're not going to have our camera nicked when we're going on holiday, and we don't want to take that risk.
00:50:42.034 - 00:51:53.360, Speaker B: So we get insured and let them take it. Oh, of course, they work out how much it's going to cost them. By and large, they don't take the risk without any information beforehand, but nonetheless, it's a risk that they do take, and sometimes it really doesn't pay off. The banking cris might be a pertinent one indeed. I don't play the lottery. And the nice things are that we have this idea of, well, there's an insurance prize, so if the earthquake doesn't happen, this is the sort of thing that you get. And of course we get a bunch of other information, but it demonstrates to us that we don't need the third party entity to trust in order to bring together people that want to bet on the both sides of the same coin, that would be a problem, realistically, it'd be a basket of data leads.
00:51:53.360 - 00:52:47.380, Speaker B: So you would have a bunch of people that each of whom you trusted a little bit, and you'd take what their consensus was. But then really what we want to do is have a system where we're provided. So the key thing about this is that the system is always on the blockchain is always being updated, whisper is always receiving and transmitting communications. And so we have this huge sort of torrent of information coming. Why not just pluck out the bits that we're interested in and keep it displayed? We can't really do that with web two, because with web two we have servers and we actually have to keep bothering the server. With web three, it flows through us because we are just a member of the entire system, as it should be. And so what we get is the idea where we can have a pane down the left that's constantly updating with information.
00:52:47.380 - 00:53:52.468, Speaker B: Now, it's not necessarily sort of bring your pop ups, hey, this number's changed. But it is information, when you look at it, is going to be recent, it's going to be up to date, and it's going to be the sort of thing that you want to know. And if it's not, then you throw it away and you put something else in that you do want to know. And similarly, we can get reasonably good visualizations of information as well, and we can make it look crazy, nice and useful, currency markets, pretty reasonable things to want to know. And it's not, we don't want to limit things, limit how things are presented. We do want this to be a web where people can put out what they want to put out. If they want to put out something that's styled in their way, that has, that behaves in a certain way, then there should be absolutely no reason they can't do that.
00:53:52.468 - 00:55:20.320, Speaker B: So the technologies that they'll use to do that will be the same technologies that we use at the moment to build web two in terms of the front end, HTML, JavaScript, CSS, simply that the back end will be different, back end will be local, and it will use things that you don't need to trust. Here we got an example of the we have an ETH app, a voting ethap, and we can see that what our trust rating is of this thing, not because some authority has told us whether we should trust it or not, or at least not only because a single authority has trusted us, but rather because people that we have decided we want to trust have rated it for us, and we can take those and amalgamate them and put them together. And potentially these don't have to be organizations, these can be people, these can be people that we've met in real life, people that we do trust and we trust their opinion, and it can be their friends and their friends friends. Hence the web of trust. Now, the apps themselves, in order to be secure and easily comprehensible about what's going on, will be self contained, just in the same way that websites are self contained. This website is different to this website. It's not going to be sort of some big horrible mess and extensible and kind of lightweight.
00:55:20.320 - 00:56:09.120, Speaker B: We want to empower people. We want this to be mobile as much as anything else, and we don't want to move too far away from the existing user interface paradigms. So it needs to be familiar. So there it is. It's a web that doesn't revolve around authority, a web that provides us with certain benefits that we wouldn't get otherwise. And in a way, it's sort of a vision as to what things could be in the future. And in a way, that's what we're kind of trying to do with Ethereum.
00:56:09.120 - 00:57:09.876, Speaker B: We don't just want to implement a basic protocol, we want to deliver a vision, a vision of how things could be when we remove the need for trust and the need for authorities, or at least a lot of the need for trust and a lot of the need for authorities. And we want to take this and we want to give it to everybody, bring it to the mainstream. So what are the kind of social ramifications? Diffusion of trust necessarily means a radical increase in the difficulty to attack things. Things, as I said before, that we trust, are easily attackable because you only have to corrupt one particular point. You only have to break one particular point, or you only have to know that one particular point is broken in a certain way. The more that we decentralize things, the harder things cost to break. There will also be a freer flow of information.
00:57:09.876 - 00:57:45.452, Speaker B: Information, as it stands, flows between certain nodes of control. If we decentralize everything, information will flow between everything. There'll be a much clearer demarcation of what is public and what is private. There will be no, well, we only collected this data because we kind of think it's all in the public sphere. No, we encrypt data that we don't want to be read. And then there's no point of collecting it. And so it empowers.
00:57:45.452 - 00:58:21.130, Speaker B: It empowers the individuals, it empowers the operators. And with that, there's some responsibility. But it's important that the possibility exists of that empowerment. We can only provide the opportunity. It's up to people to use it and help themselves. Thank you. It.
