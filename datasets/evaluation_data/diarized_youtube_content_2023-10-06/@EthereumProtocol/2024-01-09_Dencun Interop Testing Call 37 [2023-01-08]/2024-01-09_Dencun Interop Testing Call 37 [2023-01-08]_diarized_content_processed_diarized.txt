00:00:25.410 - 00:03:58.374, Speaker A: Sa it Naomi a testing call. I posted the Shinda on alcordez, but here's the link as well. So I just caught up with the last Cordes. I think probably the most important thing to check in on right now is how are teams looking with regards to client releases for Gordy? Then Mario has some testing updates as well. And finally, I know from all core devs there was some conversation about coupling Sepolia and Holski or not. If people want to talk about that today we can as well, but otherwise we can also push that to the ACD call later this week. But yeah, I guess maybe to kick things off, is there a team who thinks they can't get a gorely release or pre release out this week and then otherwise? Yeah, it'd be good to hear when teams expect to have yeah, Terrence, when.
00:03:58.412 - 00:04:07.114, Speaker B: You say this week, is there like a specific date? Because we can make this week, but it will probably be later in the week if that's okay.
00:04:07.232 - 00:04:53.580, Speaker A: So I would personally prefer the blog post to go up with all the client teams like Wednesday morning around this time because this gives a week before the fourth. Anytime after that I think we'd have to make a call about whether we want to just have the blog post. Like if say all the teams except one have things by Wednesday, then it probably makes sense to have a blog post with all the other client teams and then have like a TBD for one of them and update the post. Obviously if no one is ready by Wednesday, then it's not much use to put the blog post up and hopefully at the laylist on Friday we can have an updated post with everybody's releases in.
00:04:54.030 - 00:05:00.890, Speaker B: Okay, sounds good. Yeah, we will try to push for Wednesday. We will keep you updated.
00:05:01.710 - 00:05:02.700, Speaker A: Got it.
00:05:05.330 - 00:05:17.040, Speaker C: I was going to say for Lighthouse we're planning to do a pre release by Wednesday, so that should work with the blog post timeline you were thinking.
00:05:18.770 - 00:05:22.580, Speaker A: Cool. And then to cover it by Lodestar as well.
00:05:25.030 - 00:05:50.540, Speaker D: Yep, same goes for Lodestar. We'll also be able to do our release by Wednesday. Tech will start release tomorrow morning australian time and we should be able to have the release by this time Wednesday. Maybe not exactly, but should be okay.
00:05:53.150 - 00:06:16.770, Speaker A: And then get in the chat as well. Is there anyone from nimbus on on the Cl side? It doesn't seem like it. So follow up with them and then besu yeah, we're good. Nevermind.
00:06:18.950 - 00:06:56.218, Speaker E: We are testing our release candidates versions. We have some issues with block production, but probably it will not be a blocker for release we are planning to do a release most likely tomorrow, and it's likely that we will release once more before Gurley, but we are still testing so we will know more tomorrow, but for sure before Wednesday. There will be some version supporting the reform from the domain.
00:06:56.394 - 00:07:23.040, Speaker A: Awesome, thanks. And anyone from Aragon or ret on the call? Okay, I'll follow up with those two. Guess. Okay, so Gordy, releases aside, were there any issues that any of the client teams wanted to bring up to discuss here?
00:07:25.890 - 00:07:58.060, Speaker C: So I did have one thing we were not totally sure about. It's related to this change. I think I referenced the Lighthouse PR, not the spec PR, the fork choice filtering change. I was wondering what the status to that was for client teams. Do clients have this for choice change implemented for Gurley, or are we waiting for mainnet client releases to add this? Or have clients already added this.
00:08:00.110 - 00:08:00.934, Speaker F: For Prism?
00:08:00.982 - 00:08:09.120, Speaker B: We have already added it and it's running on the production node. I think it was like a few months ago already.
00:08:11.650 - 00:08:15.920, Speaker C: Okay, gotcha. Does anyone else know about their client team?
00:08:16.370 - 00:08:20.340, Speaker D: Teku is not yet added this at the moment.
00:08:22.870 - 00:08:33.480, Speaker C: Okay, I think for us it'll be unlikely to be in our Goreli release, but I think in our Holski Sapoli release we might include it.
00:08:37.320 - 00:08:44.550, Speaker A: Got it. And should we put this on the agenda for Thursday so that all the Cl teams can at least have a look and chime in?
00:08:45.800 - 00:08:47.512, Speaker C: Yeah, that sounds like a good idea.
00:08:47.646 - 00:09:09.500, Speaker A: Okay, I'll make a note here. Actually, Sean, do you mind posting it on the agenda? I have so many tabs open because it's my first day back. Thanks. Sweet. Any other issue that client teams want to bring up? Matt, I see you have the ETH blob gas price in the chat.
00:09:12.660 - 00:09:29.300, Speaker B: Yeah, I was just curious, have any client teams run into rpcs that we feel like we need, or we just kind of have some tooling set up that doesn't use them and we're only going to find out when wallets start sending blob transactions.
00:09:37.210 - 00:09:40.360, Speaker A: I guess. Has anyone implemented each blob gas price?
00:09:42.110 - 00:09:48.890, Speaker B: I think it's still just a proposal on the execution APIs, but there hasn't been much chatter on it. I left a comment back in November.
00:09:51.790 - 00:09:57.280, Speaker A: And I assume it just mimics the other gas price APIs we have.
00:09:57.650 - 00:10:20.342, Speaker B: Yeah, exactly. I'll post this PR, but there was a pr to add this method to the spec and to add blobs to e fee history as well as another method, and there hasn't been much discussion around that. So if we could get a bit more clarity on which direction we wanted to go with then that would be great.
00:10:20.476 - 00:11:22.552, Speaker A: Yeah. So clearly we won't have this for Gordy, but it feels like something we should at least get people to agree on, hopefully by the next Acde. So that for the potentially last set of testnets we have it. Or in the worst case that we have it for mainnet because. Yeah, I assume at some point wallets will want to start testing. Okay, so yeah, let's follow up on that one with teams and I'll make sure that it's at least flagged on the HD agenda, which gives us basically two weeks to get some feedback on it and hopefully we can agree to a final proposal then I guess. Actually we do have Roberto on the call, right? Yeah.
00:11:22.552 - 00:11:30.910, Speaker A: From basis perspective, is this urgent or are y'all able to work around it?
00:11:32.240 - 00:11:56.150, Speaker G: Yeah, this hasn't come up in. Yeah, because we have hooks directly into gath, at least on the op stack side where the blob gas price gets fed in directly through these deposit attributes in every block. So we don't need the API method, but I'm not sure if other l two s how they work and how they get that information.
00:11:58.120 - 00:11:59.350, Speaker A: Got it. Thanks.
00:12:00.680 - 00:12:11.320, Speaker B: So when you send a blob transaction, how do you compute what to make the blob gas price? Do you just directly calculate it with the geth API? Like the go API.
00:12:14.620 - 00:12:21.550, Speaker G: For the gas price of the blob transaction, the batchroom, trying to think through that particular case.
00:12:24.160 - 00:12:30.220, Speaker B: Because without the API method you could just look at the parent header and compute the price from the excess.
00:12:30.640 - 00:12:36.256, Speaker G: Yeah, that's what's happening. Getting the excess blob gas and directly computing the blob price from it.
00:12:36.358 - 00:12:37.650, Speaker B: Okay, sounds good.
00:12:45.530 - 00:13:02.700, Speaker A: Okay. Any other spec or client issue people want to bring up? Okay then. Mario, you had some updates on the el testing side?
00:13:04.270 - 00:13:05.738, Speaker F: Yes. Can you guys hear?
00:13:05.824 - 00:13:06.460, Speaker A: Yes.
00:13:07.010 - 00:13:50.006, Speaker F: Oh great. So yeah, two things I would like to mention. I think the most important one is that the testing team has been working on supporting the state test format for the last month. This is on the execution spec tests and we are close to making a release probably this week. So we wanted to do just like a heads up to the execution clients that we will change the folder structure of the tests in the releases that we do in this Instreppo to account for these new tests. So we will make a proper description when we make the release of what changes. Basically just adding a new folder in there just to account for the other test format.
00:13:50.006 - 00:15:00.674, Speaker F: It should be super easy to fix in the CIS or wherever you are using our tests. And the other thing is that we want to include simple error parsing in hive for the invalid execution test. So, for example, the tests in hive that have an invalid block, we want to check the error that you guys return on the engine new payload, just to do simple checking that the client is actually failing. I'm sorry, invalidating the block because of the correct reasons. And I've checked, and most clients do return some important, some information in this error string, but Nethermind and ergon don't seem to return any meaningful information here. So I will reach out individually to each of the teams to just explain a little bit further of what information we do need in this field. But the other clients are okay.
00:15:00.674 - 00:15:03.780, Speaker F: So, yeah, that's about it.
00:15:07.750 - 00:16:04.720, Speaker A: Awesome. Thanks. Any question? Comments? Okay, anything else people wanted to discuss? Okay, yeah. Happy to wrap things up early then. I know there was some discussion around the dates and whatnot on awkward devs last week that seemed. We seem to have settled back to keeping the original dates we have, and having just a release for Gordy this week and then potentially a combined release for the other two testnets, assuming things go well. But, yeah, I think should be good to go for Gordy, at least.
00:16:04.720 - 00:16:28.296, Speaker A: And then if we want to maybe tweak things for the other testnets, it probably makes more sense to discuss it on awkward devs than here. But, yeah, aside from that, I think we're good to move forward with Gordy. Oh, yeah. Mini Shadow forks. That's a good point. Yeah.
00:16:28.318 - 00:16:40.830, Speaker H: I brought this up in discord. I haven't followed up on it, but the idea was just to do a small scale shadow fork ahead of the big fork, and Perry and Barnabas said that that would be possible.
00:16:43.120 - 00:16:43.772, Speaker A: Yeah.
00:16:43.906 - 00:16:52.380, Speaker I: Do we want to just cope it out? We can do one of each node. And do we want to do it before Curly with production releases?
00:16:52.460 - 00:16:55.410, Speaker A: I guess, yeah.
00:16:55.960 - 00:17:05.840, Speaker H: I think you said it would take a couple of days to get the nodes synced up ahead of time. So does that mean that we would be able to do it Monday?
00:17:06.000 - 00:17:15.800, Speaker I: Yeah, we'd start probably syncing the node sometime tomorrow, and then they should be ready by Monday. And I'm assuming every client would have a release by Monday.
00:17:17.020 - 00:17:20.990, Speaker H: Okay, yeah, I think that would be just a nice little extra sanity check.
00:17:21.680 - 00:17:23.070, Speaker I: We'd plan that then.
00:17:24.960 - 00:17:29.068, Speaker A: It doesn't need to be nowhere near the scale that we did last time, right?
00:17:29.234 - 00:17:33.090, Speaker I: Yeah, we'd probably just do one of every node or something of that line.
00:17:33.780 - 00:18:12.378, Speaker A: Yeah. And using the different client releases. I think if we can get it done, if we can have the fork and Denkun activate Monday european time, then Monday american time, we would know that Denkun activated successfully or not on the Shadowfork. And then if we have to pull the testnet because we found some crazy issue, then we have some time on Monday and then out of Tuesday to do that. Yes, sounds good. Awesome. Anything.
00:18:12.378 - 00:18:37.360, Speaker A: Do we also want to do shadow forking for the other business? I don't see a reason why we wouldn't at the very least like a small fork. Like all the basically when the blog post goes out, whatever the versions are in that. Yeah. If it's not too complicated to set up, I feel like it's probably worth doing.
00:18:37.970 - 00:18:43.058, Speaker I: Yeah, I think we can just keep it timed such that when the blog post is out we just use the versions there.
00:18:43.144 - 00:18:52.310, Speaker A: Yeah, and we usually try to have the blog post out midweek. So that usually means by the week after the Monday after we should be in a good spot to Shadow Fork.
00:18:55.920 - 00:19:15.120, Speaker H: And presumably if we do find an issue after the blog post, we'll use our normal release channels to let our go. Early users know about that. But then if we have an updated binary, hopefully that's what we'll want to test on top of whatever we post in the blog, correct?
00:19:15.190 - 00:20:01.744, Speaker A: Yeah. And then obviously it's always a matter is like an issue with the client team or with the spec and the fork themselves. If it's just a small bug in the client, we can just update the client version and move forward. And if we find something that affects everybody, then in the worst case we can always pull the fork. Sweet. Anything else anyone wanted to bring up? Okay, well, yeah, that was short and sweet for the Gordy releases. I'll keep an eye on every team's repo and just like their release page there.
00:20:01.744 - 00:20:30.146, Speaker A: If for whatever reason your team's release shows up somewhere different or there's a better place to look, just ping me and I'll link that. But by default I'll just link the GitHub release for everyone and follow up with the teams who didn't have someone here to get their releases. Sweet. Yeah. Let's wrap up then. Thanks everyone and talk to you all soon. Thank you.
00:20:30.146 - 00:20:33.760, Speaker A: Bye. Thank you. Bye you. Bye. Thanks.
