00:00:00.490 - 00:00:13.920, Speaker A: You. Hey everyone, welcome to the EOS implementers call number 19. Let's just go ahead and get started with some client updates. Does anybody have anything that they want to share?
00:00:22.610 - 00:00:58.560, Speaker B: Well, I can share EvM one update. We've implemented non returning function and their implications on Jumpf. This is implemented and under review now. And another thing, we've implemented EVM Max primitives. This is not instructions themselves yet, but the underlying library that does all these modular operations that EVM Max instructions will do in the end. And this is under review too.
00:00:58.930 - 00:01:02.400, Speaker A: Oh nice. Thanks.
00:01:04.610 - 00:01:13.010, Speaker B: Yeah, and there are some in progress implementations of four, eight four and blob hash and of transient storage. Those are still in progress.
00:01:15.350 - 00:01:25.766, Speaker A: Sweetman from nether by the way.
00:01:25.788 - 00:01:26.920, Speaker C: Can you hear me guys?
00:01:27.850 - 00:01:29.000, Speaker A: Loud and clear.
00:01:29.930 - 00:01:30.678, Speaker D: Perfect.
00:01:30.844 - 00:01:54.430, Speaker C: From Nethermind side, we are doing major refactors to our prs, mainly eofprs, and we kind of were focused a lot on our cancun implementation since I'm kind of taking care of both, at least partially the Cancun eips. So yeah, that's our updates.
00:01:55.970 - 00:02:10.486, Speaker A: Cool. I guess that's probably all of our client updates without Dano. So let's jump to compiler updates. Anything?
00:02:10.668 - 00:02:35.120, Speaker D: There's not too many updates on my end. I was talking with Pavel, but we haven't gotten anything conclusive. But we should still be considering. Call Fi and jump fi.
00:02:37.160 - 00:03:00.770, Speaker A: Got it. Anything to discuss in terms of spec updates? Spec questions, then testing.
00:03:04.810 - 00:03:06.870, Speaker E: I would be interested in testing.
00:03:08.010 - 00:03:14.600, Speaker A: You would be interested in doing testing or updates for testing. Okay.
00:03:16.430 - 00:03:24.380, Speaker E: But we would need some kind of specification, some kind of list of specs that we would want to start.
00:03:25.710 - 00:03:34.960, Speaker A: I mean, isn't the spec kind of just a mega EOf spec? Is that final spec for all the EOF proposals still?
00:03:36.210 - 00:03:38.590, Speaker E: Order was finalized somewhat.
00:03:39.170 - 00:03:45.250, Speaker A: Well, I thought it was frozen. I don't know, Andre, or if anyone else knows.
00:03:48.150 - 00:03:49.300, Speaker E: For me please.
00:03:51.190 - 00:03:56.050, Speaker A: It's in this one, the mega.
00:04:00.550 - 00:04:08.620, Speaker E: So it's pretty much all or nothing, right? There's no possibilities to have something part of it, something not part of it.
00:04:13.630 - 00:04:34.210, Speaker B: Well, the plan is to roll out everything altogether, but in principle, slope end and dot pen instructions are kind of separate. And Max is not in it. Yeah, we want to have all of it all together. I think testing wise it doesn't make sense to test separately.
00:04:39.750 - 00:04:59.960, Speaker A: I don't know if clients, if you have any ideas of when, if, do you want to be ready soon to do testnets like this? Are you already ready? I'm not sure.
00:05:03.130 - 00:05:04.620, Speaker E: Would gaff be ready?
00:05:05.230 - 00:05:14.570, Speaker A: Definitely not. I don't know if Hugo is still working on a pr on Geth, but I haven't worked on EOf in a while. On Geth.
00:05:15.410 - 00:05:17.310, Speaker E: Is there a UF champion?
00:05:19.490 - 00:05:23.680, Speaker A: Not really, unless Hugo is still championing it.
00:05:25.250 - 00:05:29.170, Speaker E: If there's no champion, I don't think it's going to happen before Oracle.
00:05:34.590 - 00:05:38.970, Speaker A: Yeah, I mean we need to figure out what the priorities are for the next fork on all core devs.
00:05:40.830 - 00:05:41.580, Speaker D: Yeah.
00:05:49.280 - 00:06:16.660, Speaker A: So I don't know. It seems like you're still a little early for test nuts. That was the whole agenda. Any other questions, comments?
00:06:23.020 - 00:06:34.220, Speaker B: Had like spec related questions to discuss but we would need him. I guess. He posted on discord earlier.
00:06:38.150 - 00:08:02.830, Speaker A: Let me tag him. We were just on the EIP IP meeting, debating splitting the Eaps and Ercs out and I said I had to leave to come to this meeting and he was still debating, so he might be locked into a battle of the ages. It's ad. So we've gone through the whole agenda in 10 minutes or really 5 minutes. But I think you had a few questions. Mike Walton.
00:08:13.820 - 00:08:21.720, Speaker C: What about those stuff that Viper was talking about? The new opcodes? Conditional opcodes?
00:08:23.180 - 00:08:27.500, Speaker A: I'm not sure. Do you know, Charles?
00:08:28.080 - 00:09:07.210, Speaker D: I mean, I can go over that. Basically because of the stack validation rules, we can't use our jumpy in places where we used to use jumpy and so we have to introduce kind of branching guards around every single. So a lot of things that look like push to jump, I in current EVM turn into like is zero r jump. I call f.
00:09:09.260 - 00:09:10.010, Speaker F: Hello?
00:09:11.340 - 00:09:12.090, Speaker D: Something.
00:09:18.320 - 00:09:19.790, Speaker F: Can anyone hear me?
00:09:20.800 - 00:09:21.550, Speaker B: Yes.
00:09:26.900 - 00:09:31.120, Speaker F: So I'm on my phone. So where are we at? Basis status?
00:09:32.740 - 00:09:48.170, Speaker A: Yeah, if you want to just share what basis has been up to and then we've kind of already went through the whole agenda. Nobody had a whole lot of things to talk about. But I think that you had a couple of questions, also some spec related, so you can just give the whole floor to you.
00:09:48.780 - 00:10:30.910, Speaker F: Beisu hasn't been doing too much on EOF right now because we're busy working on Cancun self destruct and other items distracting me there. But I did have three questions, one about the ext data load. We had discussed that on the last meeting. Is that something we can add to the spec or is that something we need to tell the groups that they need to learn to work without? Hello?
00:10:32.320 - 00:10:47.056, Speaker B: Yeah, I don't think we have any progress on this decision. To me personally it seems like it might be useful, but it doesn't necessarily have to be in the initial rollout of UF. So we could live without it for.
00:10:47.078 - 00:11:29.196, Speaker F: Sure, so we could live without it. But I'm concerned if we don't have it that we're going to get a lot of pushback from the community. As we're trying to serve the data in smart contract communities, it's very important for them to be able to, in their contracts, get data from external contracts. While we can do these methods where you call in, they become more expensive and more difficult to use and more friction based. So my concern with leaving it to the second version of EOF is that's going to prevent uptake of EOF. I mean, it's a pretty big change as it is. So I think we should strongly consider putting it in now rather than the second, because it's not too much of a spec bump above what we already have.
00:11:29.196 - 00:12:09.950, Speaker F: So we don't have the people on this call to resolve it. But I think that we really need to strongly consider getting it in the first pass rather than putting off to the second pass or giving clarity that it's not going to come in at all on the first pass. So deferring the decision, I think, is something that I don't necessarily think will be good for adoption. But since we got key people out and it's kind of the week after ECC, I don't expect we'll have any resolution on that. My second question was about jump fi qualify. Was there discussion on that?
00:12:13.620 - 00:12:20.224, Speaker D: I think I was in the middle of explaining about that to Andre when you jumped on. Should I continue?
00:12:20.422 - 00:12:21.490, Speaker F: Yes, please.
00:12:24.600 - 00:13:19.190, Speaker D: Yeah, so like I was saying, where was I? Yeah, so because of the stack validate the new stack validation rules. Unless we're able to relax the stack validation rules, we can't use r jump I in places where we used to use jump I, we must use the sequence which is like, is zero something, something r jumpy, call f. And that's such a common sequence, that EOF code actually ends up being larger than current eVM code. Probably not more expensive, but it's more expensive than if we could use r jumpy. So that's the overview. I don't know if you have some questions about that.
00:13:19.960 - 00:13:33.480, Speaker B: Yeah, you say that it's related to stack validation. It's because of how stack validation works. I'm not sure what's the relation there and how the loosening of stack addition rules will help the same problem somehow.
00:13:33.980 - 00:14:20.840, Speaker D: Sure. It has to do with code sharing. So we're trying to r jumpy to a shared code section. And because that code section doesn't expect, doesn't have, I mean typically there's like a shared revert sequence and it doesn't have any restrictions on where it can be called from. So we have no kind of invariance on how this section is jumped to. Does the solidity team face the same problem? I don't really know. I don't know if they take the same optimization, but anyways.
00:14:20.840 - 00:14:52.450, Speaker D: Right, so you have to use call f to the shared code section instead of r jump by. And I think there's a general issue actually with stack validation which is that it inhibits code sharing. But I mean we've talked about it on several calls so far and call fi would solve this particular problem.
00:15:16.980 - 00:15:23.360, Speaker A: Did that answer the question? Those ops?
00:15:25.940 - 00:15:44.650, Speaker F: That answers my question. I just looking at now that I'm on my computer and can see who's on the participants, we don't think we have the people to get by and put it into the spec. I like the rationale, I think it's compelling, but we don't have enough people for consensus to come to conclusion. Any of my questions?
00:15:46.060 - 00:16:05.440, Speaker D: Yeah, and I've been talking with Pavel about how we could relax the stack validation. You know probably we have to wait for Pavel to come back but that's kind of another possibility. Instead of adding new opcodes.
00:16:06.020 - 00:16:06.816, Speaker F: Okay.
00:16:06.998 - 00:16:12.530, Speaker D: I was also thinking about the issue of opcode space and since.
00:16:15.460 - 00:16:16.220, Speaker A: In EIP.
00:16:16.300 - 00:16:39.620, Speaker D: Six six three we've got new larger dupe n opcode and potentially some new swap opcodes, so we could maybe start shaving off some of the deeper ones like Dupe nine and up think are super useful.
00:16:41.320 - 00:17:00.850, Speaker F: You it so yeah, I viewed Dupe and swap as rich places to shave off some of the higher ones. I don't think we're at opcode exhaustion yet. I think those are my preference would be that we go down that path when we're at app code's action exhaustion and I don't think we'll be there at EOSV one.
00:17:04.820 - 00:17:07.590, Speaker D: By the way. Amen. Did that answer your question?
00:17:23.120 - 00:17:24.670, Speaker A: I don't know if you caught that.
00:17:26.160 - 00:17:41.010, Speaker D: He says which rules exactly are causing this problem? I'm going to take that as resolved then. Unless somebody voices another issue.
00:17:50.040 - 00:17:58.170, Speaker A: No worries. Yeah. Any other questions or updates that people wanted to go over?
00:18:01.180 - 00:19:06.332, Speaker F: Kind of a meta question. We're targeting Prague with this right. As our current next update. My question is what sort of pace and deadlines and goals should we be setting to get to be in a position where we can be the headliner for Prague before that happens? I mean right now certainly we can't do too much until Cancun is at least hitting testnet and some of that design effort slows down, because I think that's what's slowing down some of the teams is it's all hands on deck to get Devnet eight ready up and running for Cancun. But beyond that, when do we think we need to have a lockdown spec ready? Do we think we're talking with enough community members? We got the data contract, people who are interested in talking here. We have viper and solidity. I guess the second question is there, are there other groups we should be group.
00:19:06.332 - 00:19:34.980, Speaker F: The third question, I think is a sub point or the first thing to get to the final spec. What are the remaining issues, the remaining areas we need to work on? And I don't think we can answer that until we feel like we have all of the feedback from the downstream users of this. And I think that's where the Shanghai version of this needed to be pulled off the shelf because we ran into problems with the solidity needed out of the process. So I guess those are three meta questions. I don't expect them to be answered now, but those are questions I think we should think about for the next meeting.
00:19:38.380 - 00:20:03.880, Speaker A: Yeah, those are good questions. Just to chime in on. Maybe the first question. I think if we're targeting Prague and we're targeting Cancun for sometime in October, maybe early, then, you know, add six, eight months to that. We're looking at sometime around probably may next year for Prague. Hard fork. So I don't know.
00:20:03.880 - 00:21:04.150, Speaker A: I mean, it's hard because I think that we're getting close to started debating what should go into Prague or what we should be thinking about putting into Prague. And it would behoove us a lot to have a pretty solid spec, which I think we kind of do at this point. It's more just that we need to make sure that we're keeping up with these debates and not letting other things bubble to the surface that might be less ready. I don't know. If we start talking about this, I could imagine that this happens the next couple, all core devs, where it gets raised and we definitely want to have something, it doesn't have to be absolutely final, but we definitely want to have something that we could be sharing. Probably this mega spec is going to be good and then probably like January ish, really need to be pretty much frozen at that point.
00:21:04.760 - 00:21:21.368, Speaker F: Okay. That's kind of in line with what I was thinking. Whenever they actually start seriously discussing Prague, be able to bring forth a basically complete but still room for fixes specification and then lock it down in January. That kind of aligns with what my thought is.
00:21:21.534 - 00:21:22.250, Speaker A: Okay.
00:21:31.600 - 00:22:05.320, Speaker D: Just to speak up, I think from the viper team side, there's still enough open questions that I don't think that the spec should be locked down yet. Also around the global code section versus code sections. Yeah, basically that creates semantics and the stack validation or our jump by issue I think are questions that need to be resolved before the spec is finalized.
00:22:07.180 - 00:22:23.470, Speaker F: Yeah, I don't think the spec is in case we finalized, but I think it is advanced enough that we should identify the areas that will be worked on. And I think those ones that you enumerated are ones we are working on and we need to keep a list of things we're actively working on at some point. It's basically the agenda items right now.
00:22:26.180 - 00:22:28.850, Speaker D: All right, thanks. Sounds like we're on the same page.
00:22:36.150 - 00:23:16.310, Speaker A: Cool. I guess we can contemplate the other questions about what do we need to do to get there to discuss for next time. Okay, unless there's any last comments, I guess we can go ahead and close this one off early today. Thanks a lot for coming. Feel free to discuss other things in the EVM channel on discord. Cheers.
00:23:17.290 - 00:23:17.700, Speaker B: Thank you.
