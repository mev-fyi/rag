00:00:20.250 - 00:00:59.914, Speaker A: Thank you, Jesse and Matt. Very excited to be here. Me and Christian to my right, famous for uport and a lot of other contributions to things that we're building at consensus and for the Ethereum ecosystem, is working with me. On balance, the smart, contract powered triple entry accounting system, it's mostly a proof of concept, but I think the implications are pretty powerful. So dive right in. Oh, yeah, but a little bit of history. Christian used to be quant at Bloomberg and has a PhD in algebraic geometry.
00:00:59.914 - 00:01:14.686, Speaker A: I used to work at the New York Stock Exchange and a bitcoin trading firm and do a lot of the evangelism for front end and the Web 3.0 ecosystem. And let Christian talk a little bit more specifically about accounting.
00:01:14.798 - 00:01:53.534, Speaker B: Thank you, Jeff. Okay, so balance is about triple entry accounting. And in order to understand that, we first have to look at what is double entry accounting. So double entry accounting is a relatively recent phenomenon in accounting. It was invented about 600 years ago. And the idea is you want to minimize the errors on your books. So what you do is that for each transaction, you do two entries in your books.
00:01:53.534 - 00:02:39.550, Speaker B: One entry is called a debit, and one entry is called a credit. So if we see a transaction here where Alice purchases a hamburger from law, she's paying ten ether, and you can see that Alice has an addition to her expense account. So this is a debit of ten ether. She has a credit of ten ether for her assets. And then Bob, on the other hand, he receives ten ether. So that's a debit for his cash register, and he has a credit for the income. And as you see here, the debits equal the credits, so the books are balanced.
00:02:39.550 - 00:03:58.614, Speaker B: The thing here is that there is not really any connection between these two sets of books. Each firm has their books, and the connection is that they did the transaction, but the books are themselves separate. So if Bob wants to cheat a little bit, he can say that, oh, maybe this transaction was only eight ether and he doesn't have to pay as much taxes or whatever. Okay, so let's move on to triple entry accounting. This is an even more recent accounting idea, and it was proposed by Ian Grigg, I believe, in the maybe early ninety S. And the idea about triple entry accounting is that instead of each firm having their own books, you have the contract mediated by the transaction goes through an Ethereum contract, a smart contract. And this contract includes everything about the transaction.
00:03:58.614 - 00:04:48.330, Speaker B: So what the product is, what the price is, who's the seller, who's the buyer? It's digitally signed, it can have an IPFS hash that links to further documentation. So here we see an XBRL document, which Jeff is going to talk a little bit more about later. And we see instead of having the double entries in their books, they now just have a link to the address of this Ethereum contract. And you see they both have the same link, and so their books are now linked together via this third entry, the triple entry. So this is the main idea, to connect the firm's accounting books via a smart contract.
00:04:49.630 - 00:05:42.234, Speaker A: And yeah, a little bit more about XBRL. I did some digging recently and found that there is in fact a conocial universal standard for accounting practices. So you can imagine not having to reinvent every Excel spreadsheet or reinterpret one for every organization that you're looking at. So what is it? It's the extensible business reporting standard, or language, which is based on XML, close cousin to HTML, which makes it machine readable. So the obvious benefits would be that you don't have to create your own schema, you can just leverage right off of the specs that are provided to you. There's lots of companies out there that have some translation tools to help you with that. And auditors can get data and ingest it easily, which is obviously a big win.
00:05:42.234 - 00:07:13.186, Speaker A: And as you can see, the SEC even requires this outright for large institutions to provide transparency where they can. And with 15 2nd block times for Ethereum, you now have sort of an end to end data, machine readable, distributed storage and cryptographic sign off all in one with 15 2nd block times. So something actually that just popped up on my newsfeed just this morning, actually, is that the SEC commissioner, Kara Stein, is now taking a look at this, or not specifically our balance application, but the blockchain in general. And given the relationship to XBRL and the SEC, I would kindly request maybe that we could talk some more. But moving towards the technical implementation, you can think of this as a business process assembly line. So for every little change that you make, whether it's a spreadsheet or it's like within the interface, that it's standards compliance, that you're committing it to a distributed system. So the unsilowing of data, which sort of maybe equates to a one world financial auditing repository.
00:07:13.186 - 00:08:13.734, Speaker A: And as Christian was demoing the security and sign off of different counterparty signatures. So yes, this is a demo time. And if anyone's interested, the developers, I'm building a new react framework based on reflox called acid reflux, which aims to simplify the store and action and view layers more into almost a two step or single process. So onto the demo. I wish this was a little bit bigger, but anyways, so, yeah, we have Kobe, Shaq, and LeBron as personas in this system. There's supposed to be some kind of funny story, but we'll just go with, I guess, Kobe being a freelance consultant on the side doing coding. So choosing between the different personas.
00:08:13.734 - 00:08:48.246, Speaker A: Oh, and LeBron's in there too. Yeah, he's hanging out. So we would choose Kobe. And we were just skipping right to the sent invoices that Kobe has for sake of the demo. So you see the contract id, you see the creation date, deadline, receiver signature, sender signature date, payment date, and then the addresses for both of the personas, at which point we can create an invoice. And this is pretty standard, fair accounting software kind of stuff. You've probably seen this done over and over and over again.
00:08:48.246 - 00:09:33.330, Speaker A: It's almost the hello world of accounting, I guess you could think of. We hopefully in the future would opt to allow for different currency choices, whether that's a token or it's a peg or whatever the case may be. Fill in a little bit of text for general invoicing, and we will select Shaq from the drop down some more product specific description. Kobe's a software engineer, so he's billing him for software engineering, a lot of it, and a little bit of tax. So he'll submit it. And you will see some pop ups come up. So it's been created and signed.
00:09:33.330 - 00:10:26.562, Speaker A: Signed being know, Kobe is the one submitting it, so he know attest that this is cool and it's what I want to see. In other cases, you might have a process before that, but here we have the invoice id or the contract id and bare bones information about the due dates and such and the price and the quantity. And you can see that he's shipped it to Shaq. Quantity, price, and that he is awaiting sign off and payment because he's already given his okay. So we'll head over to Shaq now, and you will see received invoices list, and you will see the unsigned and unpaid invoice that's sitting there waiting for him. Click into that. And there we go.
00:10:26.562 - 00:11:03.298, Speaker A: You have the same exact invoice from Kobe with that contract id, and we can go ahead and sign and say that it's all right. So we get a pop up saying that this contract has been signed from Shaq's end. Then we can just pay automatically. No more t three, this is pure t zero. And it will say that he has paid this exorbitant fee. And that is pretty much end to end, really simple proof of concepts for invoicing. And there's a screen coming up that I will let Christian show off.
00:11:03.298 - 00:11:04.020, Speaker A: Yeah.
00:11:04.630 - 00:12:40.430, Speaker B: So the idea here is that each of the firms have this invoicing in between them, and the invoice acts as not just an invoice, but the payment mechanism as well as the digital receipt once the invoice has been made. And so you can imagine an auditing firm looking at various businesses and checking on the blockchain, what kind of transactions have gone on between them. And you could take that and use data visualization tools to have a view of that particular segment of the economy and maybe infer that everything looks good. Maybe a financial regulator could look at that and see various systemic risks in the economy, that certain businesses have a lot of liabilities to each other, et cetera. So this technology can bring a lot of benefits for transparency for regulators and for businesses themselves, which has this basically in this data store that cannot be altered.
00:12:42.790 - 00:13:09.818, Speaker A: And also to mention, under the hood, it uses esign, the smart contract and document management system. So this really is sort of a conglomerate of abstracted technologies, like, altogether, hoping to build something that is accessible anywhere and by anyone. And I think that about covers it. Thank you.
00:13:09.904 - 00:13:20.460, Speaker B: Thank you. Question.
00:13:24.850 - 00:13:46.514, Speaker C: So, as far as I understand, all this information is on ipfs, unencrypted, linked into the blockchain through hashes. Is that true? Or do you have any privacy facilities whereby, for example, my competitor wouldn't see my entire supply chain?
00:13:46.642 - 00:14:55.766, Speaker B: So right now, since this is a proof of concept, everything is fully transparent. But you could imagine taking some of the information, putting it encrypted on ipfs, for instance, you could also imagine combining it with Heco's hydro chains so that some of the information could be on private chains, and you could kind of take digest or hashes of the information and map it onto the public chain. Privacy is, of course, a big aspect. And one use case that is immediate is for companies that want complete transparency, like nonprofits, et cetera. And so that could be one where they want this transparency. But you're right, more privacy protections need to be built in for the general use case. Great.
00:14:55.766 - 00:15:00.360, Speaker B: Thank you, guys. Thank you. You.
