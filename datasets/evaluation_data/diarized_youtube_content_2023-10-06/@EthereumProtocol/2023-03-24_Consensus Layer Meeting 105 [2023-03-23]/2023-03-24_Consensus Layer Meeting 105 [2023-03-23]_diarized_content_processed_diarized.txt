00:04:50.230 - 00:05:01.010, Speaker A: Your Facebook.
00:08:04.460 - 00:08:05.690, Speaker B: We are live.
00:08:08.780 - 00:08:28.960, Speaker A: Great everyone. I'll be taking over for Danny today. This is consensus layer, call 105. The agenda doesn't look too packed, which is good. Let's see. There's one in the chat for people on the call. It's issue seven four seven on the PM repo.
00:08:28.960 - 00:09:04.350, Speaker A: So let's see here. What have we got today? I think I'll go a little out of order here. And first let's talk about client releases. The first thing is that we have, because this is a specs release. The latest one here is version one 30 rc five. Lionel and I think the main thing this does is it sets the actual Capella fork epoch that we've agreed to for Mainnet. And there's some stuff for Daneb and we'll get to that in a bit.
00:09:04.350 - 00:09:24.704, Speaker A: Yeah. Do any of the client teams want to go around and just speak to their readiness? I think some people have releases. Maybe everyone has releases out now. Prism will release early next week. That's the plan. Great. Done in a few hours, certainly by.
00:09:24.742 - 00:09:29.030, Speaker C: Tomorrow Nevermind will be released today.
00:09:31.240 - 00:09:34.870, Speaker D: Guest has released yesterday or the day before.
00:09:38.040 - 00:09:39.780, Speaker E: Name was also yesterday.
00:09:41.720 - 00:09:43.750, Speaker F: Early next week for Lone Star.
00:09:46.940 - 00:10:18.240, Speaker A: So we released for Lighthouse, but we're releasing a hot fix for that release tomorrow, I think. Okay, great. So I think that was everyone on the call. I can't see the fullest, but yeah. So people either have released or they will in the next couple of days it sounds like. So if you're listening, be aware, follow the usual distribution channels and update your notes.
00:10:18.980 - 00:10:27.940, Speaker B: Yeah, and we should have the blog post up, hopefully Tuesday ish, Wednesday at the latest for people listening.
00:10:30.680 - 00:10:53.710, Speaker A: Okay, great. And that gives us a bit more than two weeks, something like that. So should be plenty of time. And everyone keep an eye out for the blog post and yeah, nice work everyone. So that's it for, I mean that might be it for Capella. Is there anything else anyone wants to discuss about Capella at the moment? Then we'll move on to 400 and up stuff.
00:10:58.000 - 00:11:12.210, Speaker C: Just one thing. We started syncing some main net nodes and once all the releases are done, we'd have a main net shadow fork. And I guess that would be the last attempt of the transition publicly before we hit it on main net.
00:11:14.440 - 00:11:33.370, Speaker A: Okay, great. Thanks Perry. So one more mainnet shadow fork with the final releases. That'll be nice just to give us one more go at things. Not expecting any issues, but that'll be good to confirm. And yeah, any other capella things while we're here?
00:11:36.300 - 00:11:38.200, Speaker B: Frederick, do you want to mention the bug.
00:11:42.000 - 00:11:47.630, Speaker F: Yeah, sure. Sorry, can you hear me now?
00:11:49.700 - 00:11:51.168, Speaker A: Yes, we can hear you.
00:11:51.334 - 00:12:26.490, Speaker F: Okay, cool. Yeah, sorry, I was unmuted. Yeah, so the bug bounty for any chapela specific issues has been increased by two x. So there's a two x multiplier for any vulnerabilities that affects the Chapella code paths. So, yeah, go ahead and stop looking for more vulnerabilities as the max bounty payout for Chappella specific issues is now up to half million dollars.
00:12:32.500 - 00:12:35.250, Speaker B: Is there a tweet about this that we can share?
00:12:38.420 - 00:13:04.010, Speaker F: I'm still waiting for the. Let's see, bounty. I don't think the banner has gone live yet. No, it hasn't. So the banner will be updated on bounty ethereum.org soon, and then I will make a post about it or a tweet about it.
00:13:09.390 - 00:13:36.190, Speaker A: Okay, great. Yeah, that's exciting. And anyone listening, get to bug hunting. So, Terrence, thank you for bringing up the Medboost community call. I'll just plug this while we're here. The main thing will be to discuss capella readiness for Medboost. Operators, relays, builders, that whole cast and crew.
00:13:36.190 - 00:14:12.194, Speaker A: The next call for this will be March 30 at 16 utc, 1600 utc. So, 04:00 p.m., and, yeah, maybe I'll just toss this link in here. Let me grab that. And yeah, please attend if you can. Especially if you're listening and you operate a relay builder, something like this. Okay, I think we can move on to Danev now.
00:14:12.194 - 00:14:22.680, Speaker A: There's not too much on the agenda. The one thing is this pr and execution API is three nine two. Is g eleven tech on the call?
00:14:24.650 - 00:14:25.800, Speaker G: Yes. Hi.
00:14:26.650 - 00:14:37.594, Speaker A: Okay, do you want to give us a little summary about this? It looks like we want to at least suggest adding proofs to the skip Bob's engine API. Right.
00:14:37.792 - 00:15:17.450, Speaker G: So with basically Bob's now decoupled, the network wrapper for the blob transaction for El will now also include blobs. And there is a PR for that on EIP 6610. So now since the EL has the proofs, it can just pass on the proofs to the CL using get blobs bundle. And Cl just needs to verify to batch verify whether the KZgs, blobs and proofs, they all match. And basically then the block production can follow the normal path.
00:15:28.610 - 00:15:56.390, Speaker A: Okay, so this is just saying because we now have the proofs available with the El, we can just pass them along to the engine API, to the Cl, and do the verification there at a high level. That sounds reasonable. Has anyone else had a chance to look at this pr, I haven't been able to look in depth yet. Does anyone have a rough number on how long does the compute proof take? I guess this is mainly for optimization.
00:15:59.560 - 00:16:03.210, Speaker G: Yeah, it should be something like 14 milliseconds or so.
00:16:16.350 - 00:16:26.160, Speaker A: It. But if I'm looking at this correctly, this is work that would already need to be done, right? This is just kind of moving around where it happens. So it's not that we're adding extra latency or something like that.
00:16:30.130 - 00:16:34.014, Speaker H: No, the work doesn't need to be done because proofs are already in the transactions.
00:16:34.142 - 00:16:34.674, Speaker A: Right.
00:16:34.792 - 00:16:40.050, Speaker H: So producing building a blob now does not require computing any proofs.
00:16:41.590 - 00:17:03.260, Speaker G: Right. So proofs are already in the transaction, so El just needs to pass it along. And with respect to Cl, basically, it is sort of a very keen thing that Cl only needs to verify whatever it gets from El and not really generate any proofs or commitments on its own.
00:17:13.230 - 00:17:33.186, Speaker A: Okay. Yeah, again, makes sense at a high level. Everyone please take a look and take any review to the PR. Marius had a question in the chat to discuss KZG library startup times, so I guess some of them might be slow. Marius, do you want to say more?
00:17:33.368 - 00:18:02.860, Speaker D: Yes. So something that Mario discovered during testing for void for four is that now every test execution on the four eight four branch takes a couple of seconds. And this is because of the startup time of the EVM binary, which has to initialize the KZG library. And I think he said that.
00:18:06.130 - 00:18:06.494, Speaker A: This.
00:18:06.532 - 00:18:19.220, Speaker D: Is going to be fixed by the KZG library that is used in void for four at the moment. But it's just something KZG. I think it's CKZG. I'm not sure.
00:18:19.990 - 00:18:20.740, Speaker A: Okay.
00:18:26.950 - 00:19:24.600, Speaker D: And yeah, so, but this is something that we should really discuss. I know that in order to load the data, there have to be like, in order to initialize the library, there has to be a bunch of curve operations in order to uncompress the points. And yeah, I'm not sure how long that should take, but just I want to remind the writers of the KCG libraries that we will have to pay this initialization cost for every test, basically, and for everything. So it makes sense to optimize it. Even if it is in the normal node, it is only done once, but during tests it's done over and over again.
00:19:25.050 - 00:19:59.570, Speaker H: So I believe there are two things that happen actually on startup. One is the uncompressing, but I think the long time that takes several seconds is because we currently transform to Lagrange form on startup and actually both of these could be changed in principle. We could store the whole setup in Lagrange form, uncompressed and then it should literally just be reading it from this. So I think that could be changed. It could take milliseconds.
00:20:02.630 - 00:20:04.500, Speaker D: Yeah, that would be really good.
00:20:13.190 - 00:20:37.390, Speaker A: Okay. Yeah, that sounds good. We can talk to the CKDG containers and anyone else working on those libraries to look at that. And yeah, if it improves startup times, then sounds like we'll get around that issue. So I think that's all we had on the agenda today for Dineb. Anything else on anyone's mind?
00:20:41.200 - 00:20:57.120, Speaker E: I mean the SSE stuff is still kind of ongoing. Question is if we want to move some parts of it into the net, like the withdrawals or this signature scheme for the SSE transactions.
00:21:01.210 - 00:21:11.690, Speaker A: Right. So I believe there was a four breakout on Monday. Maybe someone here attended and could give a little summary. I believe this was discussed there at least briefly.
00:21:13.710 - 00:21:56.246, Speaker B: I think the decision we made is just to wait until all core devs makes a decision. It seems like there's a lot of stuff to discuss around SSZ and in the meantime we're just going to keep the spec as is, and if there are changes that happens we'll obviously retrofit four to support to support that or be forward compatible with whatever design we'd like to go forward with. But yeah, we didn't specifically come up to a solution on that or anything. It's not clear what.
00:21:56.268 - 00:21:57.478, Speaker A: Yeah, I think that makes.
00:21:57.564 - 00:22:16.270, Speaker B: Yeah, and it's not clear how much time clients have had to properly dig into SSD given we're shipping Chappella right now. So yeah, it seems like there needs to be more conversation and kind of, I guess, diligence done on it by different kind teams.
00:22:18.290 - 00:22:49.420, Speaker A: Yeah, I think that makes a lot of sense. I know it's a pretty big change, especially like the long tail of everything we could try to do in terms of converting these different accumulators and things, different serializations and yeah, at that point it becomes much bigger than just changing a few routes. But yeah, I think that makes sense just to keep port four as it is now. And yeah, definitely something we could change down the line if needed. And I suppose that's on the Acde process to resolve that.
00:22:50.110 - 00:22:51.420, Speaker B: Yeah, I think so.
00:22:58.960 - 00:23:52.096, Speaker A: Okay, thanks for calling it out, Etan. Anything else for dineb that anyone wants to discuss right now? I'll take that as a no. So the only other thing we really have on the agenda, it's sort of moving down to either different research questions, discussions open discussions. One thing that was called out was the name for the upgrade after Denab. There's an ETh magicians post here brainstorming e names. Anyone have a favorite here they want to chime in? Let's see. Looks like some leading ones are electra.
00:23:52.096 - 00:24:11.688, Speaker A: Ebla Enif. We got an electra in the chat. Either way, more electras. Okay, everyone seems like Electra. Yeah. So I think the Eth magicians post is the place to chime in if you want to participate in that conversation. Definitely.
00:24:11.688 - 00:24:40.320, Speaker A: Also, anyone listening in the community, take a look if you want to be part of the naming process. And yeah, although I can just say here, looking at the chat, there's a very broad support for. Oh yeah. And then we'll need some fusion name. Tim calls out Proletra, which is pretty funny. Yeah. Okay.
00:24:40.320 - 00:24:45.330, Speaker A: I think that's probably, that didn't seem to be too much discussion.
00:24:49.190 - 00:24:51.140, Speaker D: If we don't have anything to discuss.
00:24:51.590 - 00:24:54.500, Speaker A: Yeah, I think it's pretty much open discussion now.
00:24:57.350 - 00:26:03.580, Speaker D: I would really like to drop the El name, and I think the combined names are kind of horrible. I know that some people don't like this because of the possibility of a hard fork happening on one but not the other layer. But I think we can kind of burn this bridge if we get there. So yeah, I would really like to drop the El names just because it makes everything so confusing. And it makes it not only confusing for us, but it also makes it confusing for the community because they now have to. Basically, they see three names, right? They see Shanghai, they see Capella, and they see Chappella. And they have to understand that all of these three names are the same thing.
00:26:07.390 - 00:26:15.120, Speaker A: Also, I would say that dropping one doesn't actually preclude only having a fork on one side. You just give it one name.
00:26:18.440 - 00:26:20.964, Speaker D: Could you repeat that? You kind of dropped off.
00:26:21.002 - 00:26:22.310, Speaker A: That didn't quite come through.
00:26:23.260 - 00:26:25.050, Speaker B: Your concern was that.
00:26:27.580 - 00:26:33.930, Speaker A: People don't like this because we might have a fork on just one side, but you can still do that and just have one name.
00:26:35.980 - 00:26:44.300, Speaker B: Right now it's just the name. Looking at the name tells you whether it's one side or two sides. But arguably that's a small benefit.
00:26:49.490 - 00:27:26.826, Speaker A: Yeah. The way I see it is like having the greater resolution is good for people who are working on clients, things like this, where it's like having that extra technical resolution is really helpful. At least it can be. But yeah, I agree with what people are saying, that it is really confusing. Sometimes I'll even get tongue tied talking about them and say some weird other name trying to refer to one and a half at a time. I don't think it would be crazy to just move to one name, if.
00:27:26.848 - 00:27:27.962, Speaker I: I may chime in.
00:27:28.016 - 00:27:30.940, Speaker A: That being said. Yeah, go ahead.
00:27:31.390 - 00:28:11.818, Speaker I: I think this is a good opportunity for Ethereum developers to kind of educate Ethereum community to learn all about Ethereum. Like till date there are people who thinks that it is Eth two. And I have read articles in reputed news websites saying that Ethereum has moved its consensus to ETh two. It's now Eth two. So if we are having this two layer concept, we are trying to educate them in terms of suggesting that Ethereum works on two layers and these are the changes. If people interested in learning more about execution layer, they should follow the execution repository and learn more about that. And definitely execution development team has their name.
00:28:11.818 - 00:28:28.160, Speaker I: So I kind of support these two names. It's just that we need to start talking about it early on like we did it for dinner. I don't think Dhener will have that kind of problem that Shanghai and Shapela had similarly. Yeah, that's my.
00:28:41.350 - 00:29:08.960, Speaker A: You know, to be respectful of everyone's time. I don't think we're going to solve this right now on this call. Maybe it warrants an additions post or something. If you feel strongly and we can move the conversation there. I think we'd also probably want to bring this to all core devs and get that take how much looks. Sorry, what was that? It was a little burbled. Sorry, I haven't muted myself.
00:29:08.960 - 00:29:19.660, Speaker A: Okay, Tim, what's the one combined name?
00:29:22.290 - 00:29:23.040, Speaker D: Why?
00:29:23.490 - 00:29:55.894, Speaker B: It's so much more fun. It's less better SEO as well, you know, how many hits do you get for Chappella outside of Ethereum versus Prague? I like, yeah, not a hill I will die on, but yeah, if the concern is technical, if the concern is actually like we should just tell the community one thing and they should only understand one name. I'd much rather it's like a fun new name than like Prague. We can find some random stars nobody's heard about.
00:29:56.012 - 00:29:57.000, Speaker D: But yeah.
00:29:59.870 - 00:30:07.130, Speaker B: Ideally two or three syllables, putas. Anyways.
00:30:19.030 - 00:31:07.380, Speaker A: I think if you care about this, anyone listening, someone should make an ETH conditions post and we can move the conversation there. Otherwise we'll just talk in circles about bike shedding names for the next hour. And that being said, anything else anyone has, I think otherwise we could just call it an early call today. I'll take the silence as no. So yeah, thanks everyone. And yeah, I think the main thing if you're listening is just to look out for the client release blog post. Something like two weeks from now.
00:31:07.380 - 00:31:26.418, Speaker A: I think that was right. Wait, was that one week? Yeah, sorry, more like one week from now. That's important to get right. So keep an eyes on the blog and yeah, otherwise. Thanks everyone, and I'll talk to you all later. Thanks for hosting.
00:31:26.594 - 00:31:27.560, Speaker F: Thank you.
00:31:29.450 - 00:31:29.926, Speaker D: Thank you.
00:31:29.948 - 00:31:30.620, Speaker A: Thanks, Alex. That.
