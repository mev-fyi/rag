00:00:24.910 - 00:00:31.142, Speaker A: With Gavin, with today. You're one of the core developers of Ethereum, and we're going to talk about Ethereum.
00:00:31.206 - 00:00:32.794, Speaker B: We're going to talk about a whole bunch of things.
00:00:32.912 - 00:00:38.618, Speaker A: How did you first get involved in the Ethereum project? What is so alluring about Ethereum to you?
00:00:38.784 - 00:01:01.986, Speaker B: Well, I was given the link to the Whitenik by a friend of mine who was also a mutual friend of Vitalik and the guy who wrote Whitenik in the first place. So having read it, I thought, yeah, this is pretty interesting sort of proposal. I saw a few rough edges, but I thought it'd be really a really cool idea to try and implement, just to test it out and see what's possible.
00:01:02.168 - 00:01:22.140, Speaker A: Yeah. One of the things that's interesting about Ethereum is that it's the first, not the first. There have been metal layer protocols like things like Mastercline and things like bitshares and proto shares and all of that, but Ethereum takes a different approach in its Turing completeness. What has that been like for you? Because there's a certain amount of sandboxing that needs to be done.
00:01:22.590 - 00:02:06.310, Speaker B: Yeah, I mean, the Turing completeness can be viewed as a bit of a red herring, actually. With Ethereum, one of the most important things, probably the most important thing, more so than the Turing completeness, is the fact that you can have arbitrary storage store arbitrary states, remember, arbitrary things between transactions, the same account. So whereas with bitcoin, basically that state is whether it's spent or expect kind of a bullion thing. With Ethereum it's basically as arbitrary as what you want to pay for. Of course, you can change the state in arbitrary way better where the Turing completeness comes in. But really, if you have to get rid of either Turing completeness or arbitrary state, probably get rid of the Turing completeness and have a limited set of programs that you can run, but still be able to store anything you want between the transactions. Got you.
00:02:06.380 - 00:02:09.126, Speaker A: And what kind of variables would be stored in between transactions?
00:02:09.158 - 00:02:35.906, Speaker B: Absolutely. Anything that can go into the computer's memory to take the obvious thing amounts in accounts. So you've got this much gold coin. I've got this much gold coin, whatever. But really we're talking at such low levels in the same way that you sort of talk about computing programs where the computer program store all sorts of things. It's entirely application specific. Okay, cool.
00:02:36.088 - 00:02:38.334, Speaker A: Now you're doing the c plus plus side of the development.
00:02:38.382 - 00:02:38.930, Speaker B: Yeah.
00:02:39.080 - 00:02:50.070, Speaker A: Okay, cool. How's that been going? What's the progress? Because I've been using Alepp Zero for a little while now, and I think it's pretty cool. It's got some neat little features and whatnot. How's it been for development?
00:02:50.410 - 00:03:26.900, Speaker B: Yeah, we've been progressing at quite a pace. We've had contracted, been using it for a while. We've had it for about a month and a half now. So you can write your own contracts, blockchains got networking, so you can do pretty much everything that you can do with bitcoin, but you've got additional sort of ability to sort of stake. That's cool. We've just put in things like a debugger that we're getting in a new high level language. So no writing in the language that computer science students get taught in their first year.
00:03:26.900 - 00:03:55.082, Speaker B: Something that will blow your mind at all the parenthes and very difficult sometimes. But yeah, we're really sort of pushing it along, trying to flesh out all of the key components of proposal and at the same time refine the protocol in order to make it increasingly harder to build first version before we sort of bring in more of the sort of esoteric things that we're looking into or hoping to at least over the next years.
00:03:55.216 - 00:04:02.320, Speaker A: So what kind of contracts are available now or what are things that you're seeing people starting to gravitate towards design?
00:04:03.650 - 00:04:44.906, Speaker B: The one thing that seems so I personally wanted to launch a currency and I wanted to see the sort of name registration stuff. So that was the first thing I did. Relatively bigger, right? Exactly. It's going to be big. But one of the things that I've noticed recently, so two of the projects we had at the hackathon, one of them is this sort of satoshi dice style thing. So a gambling thing based on provable randomness, pseudo randomness, and the blockchain. The other is a more interesting thing where we can take use the blockchain in order to arbitrate whether a door lock should work or not.
00:04:44.906 - 00:05:14.226, Speaker B: So what we can do is we can automate the notion of a key card remotely. So maybe there's contract on the blockchain that determines, hey, if you pay money to meet some set amount, I will take your public identity and I will make sure that lock on that door. Maybe it's an Airbnb that you'renting, or maybe it's an office space. I'll make sure that that unlocks for you, provide you that can also be.
00:05:14.248 - 00:05:19.254, Speaker A: Used for things like zip car or for little car rentals where you go up with the phone and you can access.
00:05:19.372 - 00:05:20.440, Speaker B: That's very cool.
00:05:21.130 - 00:05:30.810, Speaker A: From the perspective of somebody who's designing be designed. How is that structure set up?
00:05:30.880 - 00:06:10.982, Speaker B: Yeah, so in the same way that with bitcoin, you have to pay some relatively small amounts in order to have the network, you're paying the network to take notice of your transactions to store it. So it's the same with. So depending on how much computation your transaction takes, in order to change the previous state, to change the door from being locked, that is how much that you must pay the miner, the network, in effect, in order to compute that and to record the rap connections. Got you.
00:06:11.036 - 00:06:12.710, Speaker A: And how do you handle loops?
00:06:14.410 - 00:07:04.658, Speaker B: So, although the language, in a sense, is during complete, in that there can be loops that can be sort of wild. True. Just carry on going and goes forever. Actually, it's not during complete, it's quasi during. The reason it's only quasi during complete is because we insist that the fee must be paid for each computational step. And so we sort of built into the formal protocol the requirement that it hold, and it's an absolute requirement, there is no way that you can change the amount of computational steps that it's allowed to do after the fact that it starts executing. And so this is the key sort of silver bullet that we have to get rid of the problem, I'm sure, in terms of the issue of indefinite execution.
00:07:04.658 - 00:07:05.014, Speaker B: Yeah.
00:07:05.052 - 00:07:09.414, Speaker A: So basically, it would execute so long as there's funds to carry it, in effect.
00:07:09.532 - 00:07:36.258, Speaker B: And the key thing is as well, that rather than. Well, then you've got the thing of, well, what if I can somehow make a program that keeps getting me more funds? Then surely I can execute to an extended stage. And of course, what we say is, well, no, because you must pay for the amount that execute, the amount of computation you want to do that upfront. Got you. And so it's very much bounded on that value set initially. Okay, cool. So tell me about some of the.
00:07:36.264 - 00:07:56.150, Speaker A: Ecosystem ideas that are being fleshed out. Because one of the things that's interesting about Ethereum and because of the way that the launch is being done, the idea is to launch with a few different platforms. So, I mean, we've all heard decentralized storage, we've heard decentralized exchange. How do those or even other ideas factor into the launch of Ethereum?
00:07:56.650 - 00:08:33.960, Speaker B: Well, I guess launching Ethereum, it'd be fair to say, is a bit like the launch of any software platform. So whether you take the iPhone, which if you remember, actually launched without an App Store, it was just a bunch of apps, Apple in August, in the App Store later on, or the launch of a console PlayStation. And yeah, they come with launch titles. Really, what is a console without the launch titles? If it launches with no real games to play them, it's a useless bit of electronics. So we don't want to fall into that trap. Ethereum. We don't want to sort of launch and say, oh, this is potentially brilliant, but we can't actually show you anything.
00:08:33.960 - 00:08:56.300, Speaker B: So yeah, we're going to be working with, we're going to obviously develop our own launch applications, but we're also going to be working and encourage others to develop their launch applications. And we want to try and sort of support that and bolster that. We wanted to make, when we do launch, a big thing, hey look, you can do this and this and this and this. Now you just can't do.
00:08:56.830 - 00:09:21.698, Speaker A: One of the things that I'm excited to see is decentralized exchange. I almost feel like we've gotten too far into the bitcoin lifecycle or the cryptocurrency lifecycle to not have those, especially when they're charging fees and we see funds go missing and all sorts of things. How do you envision decentralized exchange in the future? Are you going to have a wallet that supports multiple coins and you can exchange between your wallet or what is.
00:09:21.704 - 00:10:35.434, Speaker B: The best protocol for that? Decentralized exchange is an interesting one. My own personal feelings on this is that it's going to be handled by a mixture of technologies, which Ethereum will want, I expect. But one of the other things that I want to see, and it may well be its own project, it may well become part of Ethereum, is a decentralized, anonymous, identity based message pack communication system. So the idea would be that you have a network of peer to peers, and each peer would encrypt, they would encrypt it with the receiver's and then potentially encrypt it with sign. So just sort of fairly standard. And then what they do is they pass it onto the network via an encrypted connection to a bunch of peers and thus preventing a news driver from. And then they would, through a self organizing adaptive network infrastructure, network infrastructure would pass the message on until they got to appear that they had the identity code.
00:10:35.434 - 00:11:15.830, Speaker B: It, of course they'd know it, and then they'd be able to read it and they'd be able to pass it back again and through. The idea is that the peer network would readjust in order to, so each node would find the peers most likely to give it messages that were interested. And so with this, you kind of got this kind of idea of the Internet. But if the Internet within the Internet, that would be secure and it would be anonymous and it would be encrypted in a useful sense. So you'd be able to talk to people without knowing that you're being possibly.
00:11:16.410 - 00:11:23.500, Speaker A: Now, how do you feel about the recent security SSL heart lead situation? What are your thoughts on that?
00:11:25.550 - 00:11:45.330, Speaker B: Yeah, what is that about? I guess it was big news. I think it took most people by surprising. Yeah, it didn't. And wow, their icon. I mean, they couldn't have marketed that better if they'd have tried it. It really got my attention.
00:11:46.390 - 00:12:10.650, Speaker A: Yeah, no, I think that it's excellent that speaking of bitcoin, they patched it up. The exchanges have seemed to be patching things up, in fact, it's nice to see that such fast, rapid changes can occur when you have a community based system like that. Is that going forward? I mean, are there any considerations for Ethereum? Has that changed anything from your perspective?
00:12:14.030 - 00:13:10.780, Speaker B: I suspect that errors such as the heartbeat bug are going to be very difficult to detect. The fact that OpensSL has had it in how many, one and a half, two years with it being detected is evidence of that. So I'm not sure really how that can be addressed upfront except value processes, like you say, the community processes that were there that address it as soon as possible and kind of keep it under wraps for the, whatever, two, three, 5 hours that it takes to actually deliver a decent bug fix and blast it out to all and thunder in order to get everybody to upgrade and really sort of propel the importance of this. I was slightly surprised that the national press didn't make a bigger thing of it when it came out. I don't think there's any problem with that at all. This is something that affects the entire Internet, the secrecy and security.
00:13:12.210 - 00:13:40.390, Speaker A: Yeah, I agree. So let's change pace. Let's talk about the Ethereum product sale or the rollout, whatever we want to term it. How is that going to work? I mean, it's going to happen soon. So people are going to be able to, using specific wallets, buy ether. Is this correct? And how does that process take place? Because Ethereum hasn't launched yet. And so the ether that they're buying will be kind of like standing ether, if you will.
00:13:40.390 - 00:13:42.326, Speaker A: Can you walk us through that process?
00:13:42.508 - 00:14:32.406, Speaker B: Sure. So basically we're going to launch the ether sale. So this will be effectively a currency swap for promises to pay ether launch for bitcoin now. And the bitcoins are basically just going to be used to pay for the development of the platform and to put some aside for future investment in later versions of Ethereum and also cryptocurrency in general. The purchase of Ether will take place through the website. We're sort of working on getting a really nice sort of experience for that. And initially, there'll be a preferential rate in terms of what the exchange between bitcoin and ethereum will be.
00:14:32.406 - 00:14:57.758, Speaker B: That will, as time goes on, sort of go down. So early adopters will be accordingly compensated. Yeah. In terms of what you get now, what do you effect? What you get is a promise. What you get is a receipt that basically says, yeah, when Ethereum launches in the Genesis block, you will get your key, will actually unlock this amount of ether, and you'll be free to spend. Got you.
00:14:57.844 - 00:15:04.222, Speaker A: Okay, and what exchanges are you planning? I mean, is it going to be launched on exchanges? Do you know which exchanges?
00:15:04.286 - 00:15:10.900, Speaker B: Yeah, we'll have at least one major exchange launch. We're still in talk, so we can't really. Yeah.
00:15:12.070 - 00:15:18.982, Speaker A: Okay, cool. We're going to open it up to questions as well. If people have questions, by all means, you can just raise your hand.
00:15:19.116 - 00:15:20.086, Speaker B: Go ahead.
00:15:20.268 - 00:15:22.790, Speaker C: What's the difference in gas and ether?
00:15:24.570 - 00:16:34.862, Speaker B: Gas is effectively an internal term used by the protocol in order to abstract the idea of this computational unit. Before, in the original white paper, there was notion of the base fee, which was the amount of ether. It's actually a denomination of ether, but an amount of ether that you had to pay to do the one computational step. There are a number of other pieces of computation that were multiples of that, and that's why it was the base. Well, what we did for the latest idea of the protocol is to sort of get rid of the notion of a multiplier and just say, right, well, there is this thing called gas. It only lives within the execution environment, so you never trade it, you never own it, or anything like that. But what you do is at the beginning, when you want to transact with the network, you offer a price that you're willing to pay in terms of ether for a unit of gas, and the gas is what you buy at the beginning of the execution in order to power your program.
00:16:34.862 - 00:16:47.860, Speaker B: So it's effectively the number of steps that you buy and any gas that isn't used. So any steps that aren't taken by the time of this transaction. So, in effect, all you do is reconverted back to the amount according to the price computation you want to pay for.
00:16:50.070 - 00:16:55.678, Speaker C: Does it have a parallel in bitcoin some analog, and bitcoin, what would it be analogous to?
00:16:55.784 - 00:17:40.930, Speaker B: So gas itself is the closest analog is the transaction fee, but it's not an especially good one, because in bitcoin it's not a multiple sort of scale. In Ethereum, that's precisely the gas price, if you like, is the transaction fee that you offer. And then it's a bit of a better analogy because miners are free too. If the transaction fee is ignore them for whatever reason they want. But if the transaction fee is too low, then that's guaranteed worth of getting a minor to it. So it's the same, the gas price is too low. It's just not worth their effort to do that computation of the transaction.
00:17:42.310 - 00:18:05.580, Speaker D: Got a question about data storage. So it seems that with Ethereum you have the ability to store arbitrary data as contracts, more so than what I've seen in bitcoin. And that led me to wonder, will nodes who want to participate in the Ethereum network, will they have to.
00:18:08.270 - 00:18:08.586, Speaker B: Be.
00:18:08.608 - 00:18:30.610, Speaker D: Responsible for storing all the data in the Ethereum network? I think with bitcoin, if you're a fully owned blockchain, you have to have all of the data, and it seems that that's an inherently non scalable model. And so are there any mechanisms to shard data throughout the network, like a consistent hashing or something to that effect?
00:18:30.760 - 00:19:16.130, Speaker B: There won't be anything built into the protocol. However, contracts will be able to have their own off chain storage protocols that they can effectively police within. So for the example, the decentralized Dropbox is not going to store all the data on chain. We said it would be far too expensive for a start, because I think around 32 bytes of storage costs around 100 gas, which will be hundred execution, not something you want to pay for if you're doing megabytes. So the contract, it would be up to the contract to basically arbitrate that off chain storage through its own logic.
00:19:18.870 - 00:19:27.298, Speaker D: In practical terms, what does that mean? How does it use store pointers, URLs, references? How do you connect those contracts to.
00:19:27.304 - 00:19:40.314, Speaker B: The external data source? Realistically, it would be a hash. So you restore a hash that says I want the data that hashes to this value, and you store a hash on the blockchain. And that's how you know that when you go into the external source, you got the windows. I see.
00:19:40.352 - 00:20:00.366, Speaker D: So client programs that are responsible for reading transactions and using that hash to somehow locate the data themselves using protocols like file access or HTTP or whatever. What's your team's thoughts on the two.
00:20:00.388 - 00:20:50.670, Speaker B: Way pegs bitcoin, and sort of thoughts of the side chain. It's an interesting proposal. I mean, we're still sort of chatting about at the moment, relatively sort of new thing, but we've kind of had talks about similar mechanisms in the past. And although for Ethereum one, it's probably not likely to be something that we're going to explore too much. We really want to sort of have an expedited release for Ethereum two, though, we're probably going to be looking into this sort of thing, and it's something that we're going to pay for research in as well. I mean, as it stands, it's probably not immediately usable with Ethereum simply because the state transition function is so complex. But into the future, there may well be ways around ways around ways of addressing it in order to get the scalability.
00:20:50.670 - 00:20:55.220, Speaker B: Yeah, I would imagine that it wouldn't be too hard to print back over in a two one.
00:20:59.990 - 00:21:34.762, Speaker D: Since you're paying for every computational step, would make sense to store the most results of the most frequently used steps for large data sets. If you have encrypted data stored in, say, storage, wouldn't you have to have another storage that is unencrypted, where the data gets decrypted so that a computation can be performed on it and then needs to be communicated with back and forth? How do you keep end to end encryption going with that setup where you're needing to have stored computation and your data set that you're performing a computation on unencrypted during computation?
00:21:34.826 - 00:22:24.510, Speaker B: Oh, I see. So for the data storage, you wouldn't do the computation on that data, so the data storage would be pure case of storage, it would happen off chain, and you wouldn't use the Ethereum network's power in order to do computation. For a start, it would be far too expensive. The Ethereum network we used for a transaction logic that is incredibly sensitive in terms of the notion of consensus. So it's the logic that needs to happen in order that we agree on the ramifications, but it's not for general computing. You never ever use it for general. So you would never do any computation on a large data set using the additional network thing? Kind of trying to use a toolless drill in order to drill for holes.
00:22:24.510 - 00:23:10.102, Speaker B: It's the wrong sort of thing. Amen. Is this different to proveable computation? You said consensus computation. Yeah, well, if we can get proof of computation. So this isn't something that we're going to get in the next three to four months, which is our release really kind of what we're aiming for with version one. But yeah, going into the future, if it can be made to work and if we can get, if it's open source, we can build it into the project, it's going to change a lot of things. Cool.
00:23:10.176 - 00:23:11.086, Speaker A: Any other questions?
00:23:11.188 - 00:23:11.614, Speaker B: Go ahead.
00:23:11.652 - 00:23:34.290, Speaker C: Again, would you mind elaborating a little? You mentioned in the white paper three approaches. Building a new blockchain using scripting on top of bitcoin and building a meta protocol on top of bitcoin. And could you add maybe the side chain possibilities and sort of elaborate on the advantages and disadvantages of those different categories?
00:23:36.230 - 00:24:33.440, Speaker B: That's quite a complex answer. So again, side chain proposal, relatively short. I mean, for a start, there's no concrete code that has been submitted yet, so we still really need to sort of discuss. But I can see at the moment for Ethereum, for version one, we really just want to get ahead and implement the protocols that stand and then looking forward into two. So in the next sort of maybe twelve to 18 months, which should be roughly a sort of time spot for building a second version. It may well, it may well form, but maybe it won't close.
