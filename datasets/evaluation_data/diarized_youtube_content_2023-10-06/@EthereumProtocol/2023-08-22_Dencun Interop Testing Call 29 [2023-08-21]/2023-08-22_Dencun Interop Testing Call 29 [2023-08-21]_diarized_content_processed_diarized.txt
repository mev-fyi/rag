00:00:00.330 - 00:02:34.960, Speaker A: Sa okay, we are live. This is the 29th Dencoon testing call. I guess the two main things to cover were any concerns or updates on Devnet eight. That are things people feel we need to discuss. Then Mario had some updates on builder testing. And if there's any updates there as well, it might be worth touching on. Just the transaction pool stuff on the el side.
00:02:34.960 - 00:02:46.500, Speaker A: Yeah, but I guess maybe to start with the Devnet, is there anything people feel we should be discussing or that they want to bring up?
00:02:52.420 - 00:02:54.620, Speaker B: I can begin with Devnote.
00:02:54.780 - 00:02:55.890, Speaker A: Yeah, please.
00:02:57.080 - 00:03:04.596, Speaker B: So we currently have most of the clients working, which is very good, but we also have a few of the.
00:03:04.618 - 00:03:06.470, Speaker C: Clients that are not working.
00:03:08.200 - 00:03:16.728, Speaker B: Our primary suspect is Prism and nimbus on the CS side and Eragon and Bezel on the ES side.
00:03:16.894 - 00:03:19.690, Speaker C: Those are the clients that are not currently working.
00:03:20.700 - 00:03:34.744, Speaker B: So the problem with Bezu is proposals are not coming through just yet. I haven't tested their latest, latest, but based on their latest main, I wasn't.
00:03:34.792 - 00:03:40.780, Speaker C: Able to make blocks after Dunab.
00:03:41.540 - 00:03:45.360, Speaker B: And regarding Prism and the nimbus bugs.
00:03:45.940 - 00:03:48.180, Speaker C: The client teams are working on FX.
00:03:48.600 - 00:03:51.236, Speaker B: And I'm currently taking a look at.
00:03:51.258 - 00:03:55.270, Speaker C: Eragon and seeing what's wrong right there.
00:03:59.900 - 00:04:12.750, Speaker A: Got it. So for the clients you mentioned, they're not working. Is it that they're not ready yet or that they tried to join a testnet and had issues?
00:04:14.320 - 00:04:23.820, Speaker B: All the clients have now machine on the Devnet, so everyone should be able to log in and check their own node.
00:04:24.160 - 00:04:24.910, Speaker A: Nice.
00:04:28.900 - 00:04:32.464, Speaker B: Maybe the client teams can comment on.
00:04:32.502 - 00:04:34.850, Speaker C: It more in detail.
00:04:35.700 - 00:04:36.448, Speaker D: Sure.
00:04:36.614 - 00:04:38.130, Speaker A: Can you guys hear me?
00:04:40.020 - 00:04:41.216, Speaker E: Test. Test.
00:04:41.398 - 00:04:42.224, Speaker B: Yeah.
00:04:42.422 - 00:04:42.976, Speaker A: Okay.
00:04:43.078 - 00:04:43.769, Speaker D: Sorry, I.
00:04:43.769 - 00:04:43.924, Speaker E: Just.
00:04:43.962 - 00:04:44.644, Speaker D: Making sure it's working.
00:04:44.682 - 00:04:44.836, Speaker E: Yeah.
00:04:44.858 - 00:05:11.310, Speaker D: So from the prism side, we implemented everything, and of course we found some bugs, and that's why it's not working. So the issue that we're seeing is that when we're syncing that, somehow the node gets stocked or basically stopped. And, yeah, we're trying to figure out what's going on. So we suspect a deadlock with the blood processing, but, yeah, we should have more update in the next hour.
00:05:14.500 - 00:05:22.560, Speaker A: Got it. Anyone else want to share updates from the client teams?
00:05:22.900 - 00:05:39.620, Speaker F: Sure. Basically real quick. We're not quite sure yet what's going on with proposals, and we're still looking into it. So between that and we have our 4788 implementation just about ready to go, and we kind of need to get that all merged into main. So investigation is still pending.
00:05:40.540 - 00:05:41.530, Speaker A: Got it.
00:05:43.980 - 00:06:22.230, Speaker G: For Aragon. I haven't checked what exactly. I know that some Aragon thinks some blocks are bad. I'm not sure, exactly why I haven't looked into it yet, but that's just my thinking off the top of my head. It might be related to which kind of it's not merged yet because we are still waiting for it to be finalized, but later this week we will take a look whether it's due to that or something else, and hopefully fix the problem.
00:06:24.200 - 00:06:25.190, Speaker A: Got it.
00:06:27.640 - 00:06:36.890, Speaker E: On teco side, we had an issue with the blobs pruning, but we already merged the fixed and yeah, it's supposed to be working now.
00:06:48.810 - 00:06:51.930, Speaker A: Okay, any other client want to share updates.
00:07:03.210 - 00:07:29.440, Speaker H: I can share basically Mario came up with the new checks for the Hive, which Ethereum js. We did a pr and we pass. And thanks to Mario we also uncovered a logical bug in which when requesting the already built payload, we were not passing back the blobs burnell on that. So thanks Mario for that.
00:07:32.370 - 00:08:13.280, Speaker E: Thanks. I shared the pr on the chat for everyone to see. There are quite a few just new tests, basically just testing the versions. So that's what covered the block. So everybody, if you guys want to run I haven't updated high income page with this yet, but I'll do it as soon as the clients tell me that it's safe to go because I would like for clients to run this test locally and fix the issues before updating anything. Just to not break the hacker web page for everyone.
00:08:20.130 - 00:08:46.280, Speaker I: On Nethermind side, we need to fix a couple of responses from James Sonar PC and we want to start testing new text pool during this Devnet lifespan. Thanks.
00:08:55.690 - 00:09:15.900, Speaker A: Anyone else? Okay, if not, then I think the next thing. Mario, you had some updates on the builder testing that you wanted to share?
00:09:17.070 - 00:10:16.014, Speaker E: Yes, just very quickly. So we are using this mock builder on the devnets and on kertosis on frost. So I'm currently updating this for DNS to build the payloads. Basically this is just like a server, a mock server that it has a rest API endpoint that basically just tells it when to corrupt some builder payload and send it to the consensus client to test failures from the builder side. And this was last updated for Shanghai and we're currently just preparing the updates for DNS. So it should build payloads with blocks. It still requires the execution client because it requests the payload from the execution client and then it relays it to the consensus client with any corruption that the tester wants to do.
00:10:16.014 - 00:10:28.450, Speaker E: And once the update is done, I think we're going to update cortosis images hive and also testnets to introduce some builder testing.
00:10:37.430 - 00:11:15.694, Speaker A: Got it? Any thoughts, questions on. That's. Okay. So, Barnabas, you posted there's a couple open prs still in the Devnet eight spec. So the only one I see now is the receipts pr. Is that the only one that's not closed yet? Sorry. There's another one.
00:11:15.892 - 00:11:21.940, Speaker B: Yeah, we have two. We have one execution APIs or engine APIs, and one in the.
00:11:24.070 - 00:11:33.220, Speaker A: Okay, so it seems like. Yeah, the execution API one, we should probably just merge if people are happy with.
00:11:37.530 - 00:11:57.980, Speaker G: It should be a different one. It's like. Because in Devnet eight, it lists like one old PR 7431, which is this update nons of beacon route. Yeah, but now a new one for seven eight eight version two. What was.
00:11:59.310 - 00:12:07.360, Speaker A: Yeah, so that one I wanted to skip to after, but just the first one. So the execution API is pr. This seems non contentious. We should merge this one, right?
00:12:07.730 - 00:12:15.810, Speaker G: No, but it's irrelevant. With seven eight eight V two, it's like this one becomes irrelevant.
00:12:16.150 - 00:12:37.258, Speaker A: Yeah, sorry. So there's two prs. So there's a pr on 4788, which I agree becomes irrelevant. And we don't have in scope the new 4788 as part of Devnet eight. So maybe for that one we should just remove it from the list. Do people agree with this? Basically, yeah. Let's start with that one.
00:12:37.258 - 00:13:02.530, Speaker A: So this is the 4788 PR by Martin, which deals with the nonce. This one is obsolete, given the changes we've made to 4788 to just use a regular contract rather than a pre compile. So does it make sense to just remove that one from the Devnet eight spec altogether?
00:13:05.430 - 00:13:19.800, Speaker G: Yes, it does, but I think also Devnet eight, it includes bits and pieces for seven eight eight v two, which is not finalized yet.
00:13:20.250 - 00:13:30.540, Speaker A: Right. Yeah. So maybe what we should do is plan to have 4788 v two as part of Devnet nine. Right. Like a full implementation. Does that make sense?
00:13:34.930 - 00:14:10.440, Speaker G: Yeah, probably, because also about that one, I wanted to check whether we want to make the address of that smart contract or the beacon root smart contract configurable or like currently in Aragon, for instance. It's not configurable. And so we are waiting for the final address to be ready. But we could make it configurable. We just have to agree whether we need to do that or not.
00:14:15.150 - 00:14:36.890, Speaker A: Yeah, and I feel like that's probably just a bigger discussion around 4788 that we need to have, which is basically what we were talking about in all core devs. And do we want. Sorry, are you saying making the address configurable?
00:14:39.630 - 00:14:40.426, Speaker G: Okay, yeah, sorry.
00:14:40.448 - 00:14:52.190, Speaker A: Let me just take a step back. So, as I understood it, it's like we want to potentially have the same address on every chain. So I don't understand the link between that and making it configurable.
00:14:52.790 - 00:15:31.200, Speaker G: Well, because I think in current Devnet eight, their assumption is that we kind of have this for seven eight v two, but with the address zero xb. So like the old pre compiled address. Right. Probably for Devnet nine, we should have the kind of the final address.
00:15:31.730 - 00:15:32.480, Speaker A: Okay.
00:15:33.970 - 00:15:36.590, Speaker G: Not zero xB.
00:15:37.570 - 00:15:43.380, Speaker A: Okay. Does that make sense to everyone?
00:15:47.070 - 00:15:59.200, Speaker E: I think the address depends on the finalized calls. So if we have finalized goals for them tonight, I guess, I think, yeah.
00:15:59.810 - 00:17:13.640, Speaker A: My hope, or my assumption is that we would. Yeah, okay, that sounds good. Then for the other PR that partner vest had. So this is execution APIs, PR three, nine, eight, add blob gas use and blob gas price to receipts. So is there a reason to not just go ahead and merge this? I'll post it again in the that. Okay, so no oppositions to merging yet. Let's try and get this merged today, tomorrow, so that we can have like a finalized spec.
00:17:13.640 - 00:18:32.700, Speaker A: Um, sweet. And I guess the last thing I wanted to bring up is the transaction pool on the El. So I know we discussed this a while back, and Roberto had written a doc trying to document different approaches, but I'm just curious to hear from the different teams. Do you feel like you have a good approach to deal with the transaction pool? Is there anything there we should be looking into? Yeah, maybe. Okay, this is a better way to frame this. Assuming that no one seems to have concerns about it, what's the best way we should go about testing the transaction pool? So I assume we have plans to do things like Reorgs and whatnot, and obviously testing things through external builders, but other things that we should be doing to make sure people are confident in their transaction pool implementations.
00:18:44.760 - 00:19:06.460, Speaker E: I guess I can start by saying that probably we should reinforce the transaction pool tests on hive. It's very small set of tests at the moment, but we can start by including more transaction pool and reorg based tests on hive. It's not that difficult. It should be doable quite easily.
00:19:13.920 - 00:20:07.340, Speaker A: Any other thoughts on that? Okay, anything else? Anyone wanted to discuss it? Okay, in that case, we can wrap up. And I guess maybe I would keep this call in the next few weeks, but we can see if they start to feel, like, superfluous. Maybe sunsetting them and just having Acve and ACVC will be enough. But let's keep at least another one to see if we have more stuff to talk about in two weeks and otherwise we might be able to just move to the regular cordeps calls.
00:20:09.120 - 00:20:09.816, Speaker E: Sweet.
00:20:09.928 - 00:20:12.110, Speaker A: Thanks everyone. Talk to you all soon.
00:20:13.360 - 00:20:19.130, Speaker E: Thanks, mate. Thank you. Thanks, mate. Thanks so much.
