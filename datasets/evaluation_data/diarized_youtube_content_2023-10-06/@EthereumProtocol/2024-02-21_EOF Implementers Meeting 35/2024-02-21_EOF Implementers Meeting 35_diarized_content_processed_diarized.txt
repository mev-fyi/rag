00:00:00.330 - 00:00:53.390, Speaker A: All right, so this is the 21st February EOf implementers progress call. I guess the standard agenda is we get client updates and then we talk about spec updates and we open the floor to other issues. If you have open issues that are not spec updates or client updates, please put them in chat and then we'll come to them in order. So first on client updates, I Beisu is in the process of rewriting its stack validator to comply with the new stack validator changes with the variable stack height. That was the stuff put in to make solidity more efficient in handling its reverts and some of its returns. So that is basis progress there. And we're running through a lot of the, running a lot of the tests that were mentioned last week, reference tests, those are great tests.
00:00:53.390 - 00:01:21.400, Speaker A: I'm able to shift my mindset from spec implementation to test driven development and looking at what the tests are telling me is wrong, which I think is a more productive development cycle than trying to decipher the spec and figure out all the places in the code it goes. So thank you for all the tests. Those are awesome. Yeah, that's it for Basu. Next up I see next person. My line would be evm one.
00:01:26.810 - 00:01:49.274, Speaker B: We have merged relaxed stack validation and so create three and create four. And x code logic for legacy is mostly waiting for tests update to be merged and we are still working on new calls.
00:01:49.322 - 00:01:52.494, Speaker C: I think that's it.
00:01:52.612 - 00:02:13.940, Speaker A: Okay. We don't have anyone from Nethermind or GEF or Reth or Aragon. Charles, anything from Viper you posted a bit. No updates from Viper Zen, is that correct?
00:02:16.390 - 00:02:17.170, Speaker C: Yep.
00:02:18.550 - 00:02:52.516, Speaker A: Okay, and the one from solidity, any other spec updates? I think I covered everyone I see on the call. Jesse, RC, are you presenting an implementer? I'm just here, just here. Okay, cool. Want to make sure everyone that's here gets represented have things to say. So that's it for client updates. Kind of a slow week. Next week is east Denver, so I will probably miss this call.
00:02:52.516 - 00:03:01.130, Speaker A: I'll probably be on a bus somewhere because I live in Denver. Of course I'm going to go to the conference, don't have to travel.
00:03:03.420 - 00:03:03.736, Speaker C: So.
00:03:03.758 - 00:03:23.872, Speaker A: I don't know if I'll have the updates next week. And next week is another all core devs call. I don't know what the agenda is yet. I'll have to look it up. Spec updates are there any spec updates? EIP six six three is ready. Six six three that has push in, not push in, swap end, dupe in as well as exchange at the moment.
00:03:23.926 - 00:03:31.010, Speaker D: Right charles yeah, that's correct. I think there's like a couple off by ones and then there's some wording changes.
00:03:31.860 - 00:03:50.730, Speaker A: Okay, good. So I guess we just need to get ASIC or one of the ASIC doesn't want to review his own pr, so he's waiting for another EIP editor to admit it through. You came off mute. I was wondering if you had something to add.
00:03:51.420 - 00:03:52.570, Speaker C: No, actually.
00:03:52.940 - 00:04:09.120, Speaker A: Okay, cool. Any other spec updates? Any other changes, any other issues people found out while testing. Okay.
00:04:11.250 - 00:04:12.590, Speaker C: Has changed.
00:04:14.870 - 00:04:16.274, Speaker E: The AP process.
00:04:16.472 - 00:04:22.420, Speaker C: We cannot hear you. Very quiet. Okay. Turn up your mic or something.
00:04:36.570 - 00:04:37.880, Speaker A: Comfortable now.
00:04:42.730 - 00:04:48.280, Speaker C: Bit robotic, but maybe it's too much volume now.
00:04:52.190 - 00:04:53.420, Speaker E: How about now?
00:04:54.110 - 00:04:57.260, Speaker A: Better. We can understand you go ahead.
00:04:58.190 - 00:05:25.060, Speaker E: Yeah, I just wanted to say that nothing really has changed so much in the spec, but the documents in the EAP are being slowly updated. The process is rather slow because cross dependencies and we need some editors to make a decision about some stuff and so on.
00:05:27.030 - 00:05:33.160, Speaker A: What are those open issues? We need to have decisions made. Are they things that implementers can do or is that EIP editor issues?
00:05:35.610 - 00:06:17.200, Speaker C: I think the off by ones in six, six three that came up need to be looked at. And we also got the create EIP merged, but it's in draft and now 35, 40 depends on it. And the updates cannot be merged because create EIP is in draft. So you might want to get some initial feedback on the EIP for create and then push it to review, I guess. And that would unblock the other stuff. So it's a mix of.
00:06:18.130 - 00:06:21.860, Speaker A: So it's all EIP stuff, all process problems?
00:06:23.670 - 00:06:30.450, Speaker C: Yeah, except for the off by one that Andre brought up. But I need to look at this because this is like a recurring subject.
00:06:31.110 - 00:06:34.630, Speaker A: Okay. Yeah. Okay. It's understandable.
00:06:59.340 - 00:07:00.970, Speaker C: Thank you very much for this.
00:07:04.260 - 00:07:44.630, Speaker A: Cool. So I guess if that is status and spec updates, I guess it's any other issues that anyone's having or experiencing with their eoF. Any other questions? Well, if there's no questions and we're just waiting for implementations and specs, I guess we could shorten the call. I no need to make people stay.
00:07:44.780 - 00:08:00.380, Speaker E: Paul, only this one we discussed, I think today. I mean, I didn't participate. It's about this create reinstruction name. Is this something we should pay attention already or it's something for later?
00:08:01.230 - 00:08:04.700, Speaker A: We can discuss it now. You want to give background on what the issue is?
00:08:06.190 - 00:08:09.200, Speaker E: I think PIot would be better to explain it.
00:08:11.010 - 00:08:15.840, Speaker C: Sorry, I missed a tiny bit. Can you repeat the issue which we want to discuss?
00:08:16.850 - 00:08:17.614, Speaker A: What is the issue?
00:08:17.652 - 00:08:20.370, Speaker E: Of the create three naming.
00:08:22.870 - 00:09:23.400, Speaker C: So first we found naming suboptimal and temporary a while ago, but this topic kind of died out. And now someone brought up the issue that create free has at one point been considered as I didn't look at the details very closely. It's like a different operation altogether. There was an AIP proposal, but it didn't get merged, I think, and there are some stack overflow threads about that and they refer to create free to something completely different than what we describe. And someone brought it up on our ethmag thread. So yeah, I guess the question is whether or not we want to rename create free and create four. Also calls 2.0
00:09:23.400 - 00:09:27.670, Speaker C: could be renamed.
00:09:29.930 - 00:09:44.540, Speaker A: Okay, so I found the issue with, let me see if I can share this, the create three in EIP. Let me get my window to not be so obnoxiously large before I share it.
00:09:54.740 - 00:09:55.650, Speaker C: All right.
00:09:56.100 - 00:10:18.650, Speaker A: Yeah, so I think this was what you're referencing. There is a proposal in 21 to do create three. It's like create two except it's got some variation on the address name. Yeah, and there's also I think a community library called create three. Right, so it's kind of an overloaded name. Yeah.
00:10:21.260 - 00:10:44.290, Speaker C: Go ahead. Create free was a temporary name, I guess, because it continues a bad precedent of just doing sequels one to three, four and push two and push three are not sequels of push, so it's kind of bad.
00:10:45.060 - 00:11:04.410, Speaker A: And there's also an s store two community which is doing contract based storage. So that's another example of using the SQL names for non opcode items. So what were some of the alternative names that were proposed?
00:11:07.550 - 00:11:20.946, Speaker C: I think it would be ideal if I could share screen with some hack MD quickly. But ASIC just posted another alternative. I just want to put it in and I'll make go ahead and share.
00:11:20.968 - 00:11:22.622, Speaker A: I think everyone's got share rights.
00:11:22.766 - 00:12:19.130, Speaker C: Yeah, hold on a second, I just need 1 minute. I just done because we had a thread on discord. Almost there, almost there. How do you share screen with this thing here?
00:12:20.060 - 00:12:21.450, Speaker A: Should be a green button.
00:12:21.820 - 00:12:24.570, Speaker C: A green button. I always miss it because it's green.
00:12:42.450 - 00:12:44.080, Speaker A: Just seeing black right now.
00:12:45.490 - 00:12:56.520, Speaker C: Okay, interesting. Should be sharing AKMD. It's all black.
00:13:00.330 - 00:13:03.560, Speaker A: For me. Just says.
00:13:06.330 - 00:13:45.790, Speaker C: Black. Okay, so I cannot, my screen share is loading. That's what it's telling me. I'm not sure what that means. Hold on, do you see the whiteboard?
00:13:46.290 - 00:13:47.514, Speaker A: Yes, I see the whiteboard.
00:13:47.562 - 00:14:32.130, Speaker C: Now going to do this awkward way, but maybe it will work. It's not working, sorry.
00:14:34.440 - 00:14:37.270, Speaker A: Is the URL public. I could try sharing it.
00:14:38.600 - 00:15:07.746, Speaker C: Probably not, because for some reason I'll just paste it. Maybe someone from Ipsilan can set the visibility to something sensible. Can you open it? I posted it in the chat.
00:15:07.938 - 00:15:10.538, Speaker A: Yeah, I can't open it. Not ethereum.org.
00:15:10.634 - 00:15:16.430, Speaker C: Yeah, exactly. Andre, can you modify it?
00:15:16.580 - 00:15:19.200, Speaker B: Probably can't modify, but I can share the screen.
00:15:20.050 - 00:15:22.900, Speaker C: Okay, try. Maybe also work.
00:15:26.410 - 00:15:28.578, Speaker A: So I think you'll need to close the whiteboard.
00:15:28.754 - 00:15:31.240, Speaker C: Yeah, I'm trying to look.
00:15:33.130 - 00:15:34.566, Speaker A: Yeah, I think I closed it.
00:15:34.668 - 00:15:45.220, Speaker C: Okay, thanks. There we go, 10 minutes. Thanks, Andre.
00:15:46.840 - 00:15:51.270, Speaker A: Okay, so I guess these are the options for create three and create four, it looks like.
00:15:52.840 - 00:16:19.170, Speaker C: Yeah, the first five are for create three and four, and the next one are for call. These were, which I have seen being tossed around and I collected them over some time and. Yeah, so I don't know any. I'll give you a moment to moment to look through them and then let me know what you think.
00:16:25.480 - 00:16:28.310, Speaker A: I know my favorites, but I'm not tied to them.
00:16:30.040 - 00:16:36.824, Speaker C: I remember you liked ext create. Was that the one?
00:16:36.862 - 00:17:03.890, Speaker A: Yeah, external create and factory create. So that way external create could be triggered off of more than just what's in the transaction. A L2, for example, could have a set of predefined contracts that you can build from, and maybe those are the only ones you can build from. So thinking from L2, extensibility is what I think. External create object instead of create is an interesting twist I hadn't thought of before.
00:17:12.020 - 00:17:13.650, Speaker C: Could be also anyone else.
00:17:14.420 - 00:17:16.452, Speaker A: Yeah, go ahead.
00:17:16.586 - 00:17:27.240, Speaker C: I modified the file, but you can see it for some reason. So x create would be accompanied by factory create, correct?
00:17:27.610 - 00:17:44.430, Speaker A: That would be, yeah, I think that's better than the other three options. Or the two options, actually. So I think in the opcode it communicates what the intent is. It's intended for factory contracts.
00:17:47.090 - 00:17:57.650, Speaker E: Yeah, I think we have to stick to the create name, so I would eliminate the last two names.
00:17:59.910 - 00:18:09.810, Speaker C: Yeah, I think it's a benefit of being familiar. Fundamentally.
00:18:12.330 - 00:18:20.200, Speaker E: I think it doesn't have to be very beautiful, but I think we need to stick with the create somewhere in the name.
00:18:23.220 - 00:18:45.050, Speaker C: Yeah, I agree. Factory create is a bit long, and it also can imply that the factory is created, which is not the case, but I think it's good enough. I'm fine with either tx create or ext create.
00:18:46.480 - 00:18:49.390, Speaker A: What about int create, internal create.
00:18:51.120 - 00:18:52.750, Speaker C: Instead of factory create.
00:18:53.120 - 00:18:53.628, Speaker A: Right.
00:18:53.714 - 00:18:56.220, Speaker D: It sounds like integer.
00:18:56.880 - 00:18:58.260, Speaker A: It does look like integer.
00:18:58.440 - 00:19:30.080, Speaker C: It does. Okay, so I guess the first two are the short list. Okay, right.
00:19:30.150 - 00:19:34.850, Speaker A: And then call two in that series, I guess, is the next question.
00:19:35.620 - 00:20:27.044, Speaker C: Yeah, if we can handle both when we are added for this, I have slight preference against the second one, which is the very abbreviated one. It's just too abbreviated. And it also doesn't have the familiarity of delegate call and static call spelled out. And the last one kind of looks ecstatic call. It just sounds like some pagan ritual thing. So yeah, static, I would ecstatic call. I would default the third one, I guess.
00:20:27.162 - 00:20:29.590, Speaker B: Yeah, I like the third one too. Most of them.
00:20:30.200 - 00:20:31.830, Speaker C: Blue square one.
00:20:34.520 - 00:20:36.660, Speaker A: Yeah. Third one is relatively inoffensive.
00:20:51.670 - 00:21:02.680, Speaker C: Was there some feedback that elco means something in some convention somewhere? Light recollection, someone. Pavel, was that you?
00:21:06.100 - 00:21:07.632, Speaker E: No, definitely not.
00:21:07.766 - 00:21:31.090, Speaker C: Okay, sorry. Okay, I guess we have some candidates and we can. Then we are slightly in favor of the ext create rather than TX create because it's more generic.
00:21:31.450 - 00:21:38.440, Speaker D: I'm in favor of lower names. Sorry, shorter. So this l call, LD call. Ls call.
00:21:38.970 - 00:21:39.720, Speaker C: Okay.
00:21:46.660 - 00:21:47.308, Speaker D: It's.
00:21:47.404 - 00:21:53.330, Speaker A: I'm fine with that too. Two or three are my favorite in that list. I think one's too long.
00:21:54.660 - 00:22:33.280, Speaker C: Yeah, it's too long. It's very long. And v two is just a less obnoxious version of call two, which is also quite subopsimal, I think. So it's either l call or, sorry, LD call or l delegate call. Okay, any more voices or any more pros and cons of the TX create? Txt create to voice now?
00:22:39.490 - 00:22:52.450, Speaker E: Yeah, kind of also like this. Single letter prefixes including D and s, relatively easy to read and more or less the same length.
00:22:55.990 - 00:22:58.100, Speaker A: Compile it and have an LSD call.
00:23:02.890 - 00:23:15.850, Speaker D: Maybe TX create and VM create, because create or factory create can only be or what is this? We don't even know what we're talking about, but factory create, rename to VM create because you can only do it from inside the EVM.
00:23:24.090 - 00:23:25.880, Speaker C: Yeah, this is also interesting.
00:23:26.650 - 00:23:32.220, Speaker A: Yeah, my concern is it is implying we're creating the VM itself, not necessarily where it can only get from within.
00:23:32.910 - 00:23:35.340, Speaker D: How about create three and TX create.
00:23:37.470 - 00:23:39.740, Speaker C: Three is the contentious one.
00:23:40.990 - 00:23:53.280, Speaker A: And we'll just claim victory. That's an option. Ignoring the collision is always an option. Maybe not the best one.
00:23:54.390 - 00:23:59.140, Speaker D: You could also call it container create.
00:24:02.760 - 00:24:33.470, Speaker C: Yeah, but it's always the same case that it's implying that you're creating containers. And with factories, kind of. The word factory is slightly less. More like this. This is just my very subjective sense, just because factories factory. I'll just make the note of the vm create one.
00:24:38.050 - 00:24:49.330, Speaker A: EOF create is not actually a bad idea because it's clear that we only created from within EOF and it's coming from the object format.
00:24:53.790 - 00:24:58.160, Speaker C: You mean EOF create? Yeah, like this.
00:25:04.920 - 00:25:07.190, Speaker A: EOf create and external create.
00:25:12.370 - 00:25:14.080, Speaker D: I like TX create.
00:25:18.230 - 00:25:22.434, Speaker A: Okay. EOF create and TX create. I'm fine with that.
00:25:22.472 - 00:25:35.400, Speaker D: Yeah, because it says where you're creating them from. One is doing it from an EOF container object and the other is from transaction data. Maybe TX data create, but that's maybe.
00:25:44.390 - 00:26:05.036, Speaker C: The. I'm making notes here, but for some reason they do not show up in Andre's screen. He's sharing. There you go. And what was the other one? EOF create. And mean we can have EOF and.
00:26:05.058 - 00:26:21.410, Speaker A: TX, I think, are very direct in saying where they're from, even though it doesn't preserve space for future development. That's a hypothetical, and I see the advantage of keeping it just as what it is. So there's a strong argument for that. I think that's the best one that resonates the most.
00:26:31.310 - 00:26:34.720, Speaker C: This one. And this one leads to.
00:26:39.100 - 00:26:50.948, Speaker A: Yeah, cool. Drop that into the discord chat. Let that marinate for a week and then lock it in.
00:26:51.114 - 00:26:53.524, Speaker C: Yeah. We can also make a pr right away.
00:26:53.722 - 00:26:54.948, Speaker A: Yeah, make a pr.
00:26:55.114 - 00:26:58.710, Speaker C: We see it as it presents itself in the spec.
00:26:59.880 - 00:27:10.152, Speaker A: Yes. Let's lock it in and wait for cries of objection. And if there are no cries of objection, then we lock it in in a week. I'm cool with that.
00:27:10.286 - 00:27:15.130, Speaker C: Okay, cool. Great. Thank you.
00:27:15.500 - 00:27:35.260, Speaker A: Okay, anything else people want to discuss? If there is none, I guess we could end the meeting early and give everyone 28 minutes back. Thanks for attending.
00:27:36.160 - 00:27:39.640, Speaker C: Thank you very much. Bye.
