00:00:19.130 - 00:00:45.814, Speaker A: So I'm going to be talking about something a little bit different today. As Jesse mentioned, my name is Taylor Gering. I've been working with the Ethereum project for about two years now. Quite a long time in this space, I suppose. I've been doing a variety of things from server administration to working on the website. I've helped with the go client on Jeffrey Wilkie's team. I've written some blog posts.
00:00:45.814 - 00:01:55.758, Speaker A: I'm active on Reddit, so you might have seen my name around there a bit. But I'm not going to talk about what we've worked on to date so far. I want to talk about the future and where Ethereum could bring us in two 4510 years. There's a lot of interest from enterprises out there. And although the public blockchain gets a lot of the spotlight and the limelight, I think there is a case to be made that Ethereum can be used in an enterprise environment, and not just for removing trust and removing intermediaries, but I think in a general sense as technology stack, Ethereum is really powerful. So the things I think that it can bring to your environment, if you're an it manager or an executive, basically my sell to you is that Ethereum can increase agility, reduce risk and lower costs. So really the first question is, do blockchains have a role in the private environment? To answer this, we really need to understand a little bit more about what is a blockchain, where it came from, how we got here.
00:01:55.758 - 00:02:38.638, Speaker A: And to do that, we need to know that blockchains are really a culmination of prior work. Satoshi didn't just come up with this randomly one day, all this magic boom, there it is. No, it goes back to the 70s. Ralph Merkel inventing Merkel hash trees, patenting that in 1979. We also have distributed hash tables became really popular in the 90s. Napster was a big way that this kind of made it into the public mind share and eventually we had the proof of work system, which as I read, was first kind of developed around 93 and then finally formalized in 1999. And these three components are kind of interesting, in particular in certain ways.
00:02:38.638 - 00:03:17.050, Speaker A: The way I look at it, the hash trees are effectively this data structure that the blockchain is built on. The distributed hash tables, or dhts, is kind of this networking component. And finally we have this proof of work thing. And this seems to be the most confusing part of it all. What are miners? What are they doing? People kind of call it validators sometimes. In some circles this seems to be a huge point of contention that only proof of work can exist. But even within Ethereum, we're trying to look at solutions of proof of stake and Casper and so forth.
00:03:17.050 - 00:04:03.500, Speaker A: So that's great. You've told me what blockchains are made of, but what do they really do? Now, when I started thinking about this, it kind of reminded me about this scene from this movie, idiocracy. Really fantastic movie, if you haven't seen it. Wasn't terribly popular, but hilarious in its own right. And just to set up this scene for you a little bit, the main character is kind of trying to explain to his colleagues that putting sports drink on plants will not help them grow. And they don't quite seem to understand why. So let me just let you watch this and maybe you'll get the idea.
00:04:04.270 - 00:04:11.366, Speaker B: I'm pretty sure what's killing the crops is this Brondo stuff. The Brondo's got what plants crave. It's got electrolytes.
00:04:11.478 - 00:04:17.562, Speaker C: So wait a minute. What you're saying is that you want us to put water on the crops?
00:04:17.626 - 00:04:18.190, Speaker B: Yes.
00:04:18.340 - 00:04:20.618, Speaker C: Water. Like out the toilet?
00:04:20.714 - 00:04:26.542, Speaker B: Well, I mean, it doesn't have to be out of the toilet, but, yeah, that's the idea. But Brondo's got what plants crave.
00:04:26.606 - 00:04:28.210, Speaker C: It's got electrolytes.
00:04:28.950 - 00:04:38.482, Speaker B: Okay, look, the plants aren't growing, so I'm pretty sure that the Brondo's not working. Now, I'm no botanist, but I do know that if you put water on plants, they grow.
00:04:38.616 - 00:04:42.062, Speaker C: Well, I've never seen no plants grow out of no toilet.
00:04:42.206 - 00:04:54.170, Speaker B: That's good. You sure you ain't the smartest guy in the world? Yeah. Okay, look, you want to solve this problem? I want to get my pardon. So why don't we just try it, okay, and not worry about what plants crave?
00:04:54.590 - 00:04:58.918, Speaker C: Brenda's got what plants crave. Yeah, it's got electrolytes.
00:04:59.014 - 00:05:01.680, Speaker B: What are electrolytes? Do you even know?
00:05:03.810 - 00:05:34.678, Speaker A: So what are blockchains? Do we even know? That's when I want to ask these people who don't seem to understand what I understand. They seem to have a slightly different perspective on the view than I do. For me, blockchains are a tool. They're a really wonderful tool. But they're not going to replace all other tools. They'll hopefully, maybe join an arsenal of other solutions that are out there. But really, the properties of the blockchain dictate the use case.
00:05:34.678 - 00:06:00.110, Speaker A: My opinion is bitcoins are really good at value transfer. Ethereum is really good at trusted computation. Both can probably do the other thing. But really they have their niche and it makes sense. We see software serves different roles and for different needs. It shouldn't really surprise anybody. So I would say really, blockchains excel at coordination.
00:06:00.110 - 00:06:36.778, Speaker A: But it's not just about the blockchain. Ethereum's written about more components than just this distributed shared ledger idea. We've written about the idea of swarm, and we're not the only company or organization out there trying to tackle this. There are lots of companies trying to do distributed storage. Bittorrent is obvious, kind of predecessor to all of this. We've also talked about whisper for dynamic comms, messaging, et cetera. And this is kind of important because it goes back to this properties idea.
00:06:36.778 - 00:07:19.238, Speaker A: Blockchains are really good at coordination. They can do storage for very, very expensive costs. They can do messaging for very, very slow block times. So if we kind of build in a couple extra components, we can actually have a more diverse ecosystem of tools. And when we start looking at it in this way, we can kind of see it as perhaps a network database, something that Vinay Gupta has written about a few times, done some speeches on. This is basically the scenario where code is data. They're kind of both first class citizens in this environment, which I think is a hugely powerful idea that we don't fully yet appreciate.
00:07:19.238 - 00:08:08.858, Speaker A: You get automatic synchronization, fault tolerance, identity for free, and it's all cryptographically secured and validated. To me, as an IT person who might be implementing a project in an organization, these are really great things. Makes my life much easier, and I'd like to bring it into my organization. Why? Well, cryptography gives us nice properties, data confidentiality, data integrity authentication, nonrepudiation. But it's kind of complicated. If you've ever tried to develop on bitcoin, it's not the easiest platform. If you've ever tried to extend the idea of value transfer and do multisig or arbitrary computation, maybe you can get away with a few things.
00:08:08.858 - 00:08:38.230, Speaker A: But really it excels at value transfer and storage. What we really need for blockchains to take off is for it to be as easy as web development. Right? Javascript. Almost every developer can program in JavaScript. If we can make blockchains as easy as JavaScript, everybody can use blockchains. In addition to that, we've got organizations building other tools, services, frameworks, toolkits. Consensus is building lots of tools and frameworks.
00:08:38.230 - 00:09:35.160, Speaker A: We now have Ethereum blockchain as a service on Azure. So you don't even have to care about setting up, you can just spin up a vm in the cloud, start playing with it, testing it, figuring out the ways in which Ethereum or blockchains can help you. So the benefits that I would say you want to take away with this, take back to your organization, your it managers, your executives, is that shared code in this distributed EVM means consistent and predictable execution. An appendonly database that's cryptographically verified, it cannot be tampered with even by system administrators. That's huge for regulators. Anybody that's in the business of auditing accounting, they're going to love this. And finally, automatic and low cost distribution using peer to peer technology.
00:09:35.160 - 00:10:39.980, Speaker A: And this is where the other components like Swarm and Whisper will come in. If you couple a blockchain as a coordination mechanism with something like BitTorrent as a data distribution mechanism, and then use something like telehash for messaging, you have a really diverse set of tools, all interlinked, knowing about each other, cooperating with each other, and giving you this kind of mesh distributed type network that when an office goes down or you have a mobile client that is only partially connected, having to deal with these kinds of problems goes away. You don't have to set up database replication, it's given to you for free. So these are the reasons that I think Ethereum really beneficial for the enterprise environment and why you should want to investigate this. Not because blockchains just can remove trust or can remove intermediaries. Yes, they can do those things, but is in a general sense they're a coordination mechanism. And having this code and data coupled together is a really powerful idea.
00:10:39.980 - 00:11:21.862, Speaker A: I've talked to a few of you throughout the week. I've been working on a project in my spare time. It's got this really awful name, but essentially it's adapt generator. If you've started working on adapt at all, you'll know that you have to write some Javascript, put some HTML elements in front of it to give it a UI. I found that a bit annoying, and I tend to find myself, as a general programmer know, abstracting, making things more generic. So I wrote an interface to generate interfaces. Basically you can just give it the ABI generated from the contract and it will give you a free HTML interface which you can just tweak with some css.
00:11:21.862 - 00:11:55.320, Speaker A: You don't have to tell it anything about the contract, just figures it out, it knows what events to watch for. It's really, really nice. So I think as tools like this are built up, we can really see more proliferation of this. I tried to record this as a movie to save me the headache of having to do this live. But my tools refused to export and put it in the presentation. So I'm going to try to do it live here locally just to kind of show you the idea. I'm running this on my local machine, so hopefully I won't have too many network problems.
00:11:55.320 - 00:12:17.542, Speaker A: But we'll see. Right. Just going to start my miner. So I've just loaded a page here. It's connected to our geth instance. We're watching for new incoming blocks. And when blocks are mined we should see a little update here at the top here we have our contract.
00:12:17.542 - 00:12:38.500, Speaker A: This is just a wallet written in solidity. We can compile this. It gives us this Abi here. And from this Abi we get this kind of free interface down here. I've made it look like this tabbed kind of interface. But really this is just css making it look like that. You can do anything you want to it.
00:12:38.500 - 00:12:52.278, Speaker A: This is all for free. I didn't have to write any of this custom. It's really nice. I can deploy a contract. Let's see if I can do that now. Okay, so I've deployed the contract. I'm going to wait for it to mine here.
00:12:52.278 - 00:13:16.686, Speaker A: There we go. So it's been mined in block 7226. I have the address there, which I can see has been set in the two field here. Making it convenient for me to interact with it. Let me just grab my address here. I want to check and verify that I'm actually the owner of this. So go down to is owner paste in my address.
00:13:16.686 - 00:13:33.700, Speaker A: You can see it's pulling the fields together from the actual contract fields. Hit call returns. True. Nice. Can check our daily limit. So for multisig we have no limit. We want to kind of raise that a little bit.
00:13:33.700 - 00:14:01.382, Speaker A: So come down here, set it, send the transaction, wait for a block to be mined or two. There we go. We have our confirmation. Really nice. We can go back to check the daily limit. Hit call returns 100 as we'd expect. It's really neat.
00:14:01.382 - 00:14:29.170, Speaker A: I can even go into the logs and check for my confirmation. So I see it was in block 7234. Get logs. There's my confirmation information. What transaction, where exactly chain had occurred, the block height, the transaction index and even the log index, the gas used and this particular fields on this. Now I haven't done anything to tell it about these contracts or the functions or methods. It's been all automatically generated from this Abi.
00:14:29.170 - 00:14:53.338, Speaker A: And this is really where this value comes in. Of having code adds data, having it in the shared location. Right. We have it in this one spot. We are given an interface on how to interact with it, and no matter who you are or where you are, you can interact with it in the same way. If you were to run this here on your machine, you would get the same exact results. I think as we push forward these kind of tools, more and more we'll see more adoption of this in the enterprise.
00:14:53.338 - 00:15:28.570, Speaker A: And for me, that's where the huge adoption comes, beyond the cryptographic space. Thank you very much. That's all I have today. Time for questions. If anybody has any minute or two. Yes, where can we get your code? This is on GitHub. My GitHub name is Tgaring.
00:15:28.570 - 00:15:54.910, Speaker A: I have it running also on the GitHub pages, but due to the limitations of browsers between HTTPs and HTTP, it doesn't really work so well. But all you have to do is git clone and open up, index HTML and it's there. I will warn you, it is under heavy development and not perfect, but the code's on GitHub. Any other questions? Thank you, Taylor.
