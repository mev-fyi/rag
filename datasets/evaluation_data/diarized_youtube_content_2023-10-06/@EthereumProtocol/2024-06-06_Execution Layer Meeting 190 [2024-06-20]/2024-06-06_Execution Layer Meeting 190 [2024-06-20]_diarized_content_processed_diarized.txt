00:00:28.795 - 00:02:51.361, Speaker A: SA and we are live. Welcome everyone to ACDE number 190. Pretty light agenda for today. Yeah, so some petra, devnet and 7702 discussions and then two quick shout outs or three quick shout outs and that should be it. Yeah. So I guess most important thing Today, Petra and DevNet1. I guess first off maybe Barnabas or Perry.
00:02:51.361 - 00:03:00.885, Speaker A: Do either of you want to give an update on the spec and infra side of devnet1 and then we can chat with different teams about their specific progress.
00:03:02.385 - 00:03:43.215, Speaker B: Yeah, I'll talk about Petra and then Barnabas can do EOF and or pr. So Petra I can share the link to the spec but the decision last week was that we would basically do the same as DevNet Zero with the main change being EIP SAN02. There's a thread in the interop chat where we're collecting status as well as which branches to use. I think some CL devs have already posted their branches and EL have mainly indicated that it's a work in progress. So there's no, there's nothing to really use right now. So that's the current status. We're just waiting on ready branches to start with.
00:03:44.515 - 00:04:31.555, Speaker A: Thank you. And yeah, so There was the 7702 change and I think we had a couple PRs mostly in the execution API and a few on the engine API. Anything else on the specs for the pectoral devnet one and maybe. Yeah, before we do EOF and Peerdes, I guess on the EL side, do any teams want to share specific updates about where they're at? Yeah, how the work in progress is going. If not, I will call on you and Basu. I see a lot of basic people on the screen.
00:04:34.895 - 00:05:08.003, Speaker C: I can give an Update. So regarding 7702 we have like a first version implemented. We had some questions regarding the GAS pricing of the operation, but I think it makes more sense to discuss this offline. But yeah, we have like the first version that's some tests are missing but otherwise I think we are more or less good to go.
00:05:08.139 - 00:05:12.655, Speaker A: Got it. And 7702 was the last blocker like the last thing you needed?
00:05:14.315 - 00:05:20.227, Speaker C: Yes, because the other stuff should be ready for definite one.
00:05:20.371 - 00:05:22.015, Speaker A: Awesome, thank you.
00:05:23.835 - 00:05:36.979, Speaker D: Yeah, so nevermind, we have draft PR so all the changes needed for Vectra DevNet one in branches. Now we need a little bit more time to review them, merge them together.
00:05:37.067 - 00:05:39.947, Speaker E: And write some unit tests.
00:05:40.091 - 00:05:42.055, Speaker B: Yeah, but that's it.
00:05:42.675 - 00:05:43.615, Speaker A: Got it.
00:05:50.155 - 00:06:04.557, Speaker F: I have more of a question if you don't yeah. So my question is the EOF testing. I mean devnet one is going to be separate from the devnet one for a picture, right?
00:06:04.691 - 00:06:05.865, Speaker A: Yes, it's.
00:06:06.025 - 00:06:08.325, Speaker F: Okay, got it. Thank you.
00:06:13.985 - 00:06:34.735, Speaker G: As in what the idea is that we're going to be having on top of Prague, so we would need to most likely have to rebase on Prague. On top of Prague. That's what we agreed on yesterday on the EUF call.
00:06:43.915 - 00:06:58.805, Speaker A: Yes. So we have. Yeah. So we have EOF specced on top of Prague and that feels like the right thing because there's no world in which we do EOF before Prague.
00:07:05.265 - 00:07:16.725, Speaker G: The only issue that can be is that you will have a harder time debugging EOF bugs if there's still some pro box present. So.
00:07:20.585 - 00:07:38.445, Speaker A: Yeah. And I guess I don't. It. Even if that's true, it still feels like the right approach in a way because like we want teams working on the core of Spectra. Yeah. And you know, fixing those bugs. So I.
00:07:38.445 - 00:08:21.733, Speaker A: Yeah, it seems more reasonable than like basing it on top of the previous fork and then having to potentially like rebase it on Prague really late in the process and then also finding all those bugs. But this is. Yeah. I don't know if someone has a strong opinion against this. Okay. And we get. Yeah, we can go back to the EOS devnet discussions a bit after but I'd be curious to hear from other teams just on the like Pectra DevNet1.
00:08:21.733 - 00:08:27.009, Speaker A: Yeah. How things are going. Andrew. Right.
00:08:27.160 - 00:09:40.039, Speaker D: So about DevNet1. We have a draft implementation of 7702 but I haven't reviewed it yet, so I'm not sure like how far it is from version. I don't think we have tackled the changes to the engine API, but I don't know, I haven't looked at them. Hopefully they are not that major. And I have a question about an update to 7:2:51 because it seems that like the increase the max effective balance because previously it was a purely CL change, now it has an EL component so we haven't implemented that yet. But I'd like to just double check. That means that for Devnet One we effectively have 7251 on the El side, right?
00:09:40.167 - 00:09:50.475, Speaker A: Yes, that's correct. So is it PR you're talking about? The one I just posted in the chat? The EL consolidations? Yeah. Yes. So yeah, we agreed to include that in NET one.
00:09:51.095 - 00:09:54.035, Speaker D: Okay. So yeah, we have to implement that as well.
00:09:54.335 - 00:10:12.765, Speaker A: Got it. Okay, thank you. Anyone from Rest or guests or Ethereum JS. Yeah. Oh, sorry.
00:10:14.025 - 00:10:21.817, Speaker D: From Red Side we started implementing 7702. It's only missing a IP and it.
00:10:21.841 - 00:10:24.645, Speaker A: Should be like finished like week or something like that.
00:10:26.305 - 00:10:29.485, Speaker D: Yes, basically before the next ACD.
00:10:31.595 - 00:10:33.611, Speaker A: Sounds good. Yeah.
00:10:33.643 - 00:10:38.651, Speaker G: Ethereum JS also has the similar update we are working on 7702 and maybe.
00:10:38.683 - 00:10:40.163, Speaker H: In a week or so we'll also.
00:10:40.219 - 00:11:13.825, Speaker A: Be ready with it. Sweet. Anyone from Gethsemane? Okay, no one from Guest it seems. Okay. So clearly. Yeah, there's still some work to do on the EL side here. We can check in on the next call.
00:11:13.825 - 00:11:19.745, Speaker A: The one thing, I guess this is a bit out of scope. Oh, Marius is here.
00:11:21.095 - 00:11:44.875, Speaker G: Yes, there's no one else from Guest speaking so. Okay, I can, I can do it. We still missing 7702 I think and yeah, we should implement this this week and be ready for definite one soon as.
00:11:46.145 - 00:12:16.495, Speaker A: Awesome. I guess on the 7702 front I think we should leave the spec as is for Devnet1 but if we look in the future for Devnet2 we still didn't quite find a revocation mechanism we were super happy with I guess. Has anyone looked into this? Are there. Yeah. Are there updates just on the spec side for 7702?
00:12:20.675 - 00:12:42.295, Speaker E: I've got an update that I wanted to share but first I've been offline for the last couple of weeks. I wanted to hear if there were any updates not related to this new revocation idea that I opened a draft PR for yesterday. Maybe if Aragon that's something that they found during the last couple weeks looking into the revocation mechanisms.
00:12:44.955 - 00:12:46.651, Speaker D: Is Sudeep on the call?
00:12:46.803 - 00:12:55.735, Speaker A: Yeah, yeah. There was a comment from Frangio in the Ethereum Magicians which discussed about account.
00:12:56.075 - 00:13:10.285, Speaker G: Based provocations and yeah, I think that's the best solution that I can put forward right now. So maybe Light client can look at that later on.
00:13:11.785 - 00:13:54.115, Speaker A: What was the idea of the account based application? It was basically keeping track of the template addresses that you revoked in either a system contract or or the EOA's storage itself. And when a 770 transaction arrives the execution layer will basically check if the template address is already revoked and if it is then it fails. Any thoughts?
00:13:54.155 - 00:14:03.235, Speaker E: Yeah, I responded to this on Neath Magicians and I as I said we can implement this as an erc. I really see no reason to implement this in the protocol.
00:14:07.735 - 00:14:15.635, Speaker D: I think there was another idea with max norms but I'm not sure about what's the current thinking about that.
00:14:22.905 - 00:14:55.849, Speaker E: If it's the same mechanism with MaxNots that we had previously approved in 3074. I think it works okay, but I didn't get the impression that most clients like the idea of having some way of bumping the nonce in larger increments than just one. So that wasn't a super nice aspect of it. I don't know, maybe it's worth me just mentioning this other revocation idea that.
00:14:55.937 - 00:14:59.177, Speaker A: Yeah, yeah, please come up with, because.
00:14:59.201 - 00:15:45.415, Speaker E: I do think it's a little bit similar to what Sudeep is asking for. The proposal by Fengio on Eth Magicians was basically trying to address the fact that it's not as easy to see what types of authorizations you have in the air at any given moment. And it's difficult to know like what has been revoked and what's not been revoked. There's design patterns that avoid these types of scenarios. But the reality is that maybe we won't know how wallets are going to use this and to have a more defensive mechanism. An idea. I think Vitalik mentioned it on the last call, or maybe it was in a breakout room.
00:15:45.415 - 00:17:07.469, Speaker E: But instead of having the authorizations be these temporary things that must be included with the transaction to set the code in the account, we can instead save the authorizations so that in the account you can actually look to see what code the account is delegated to at any given moment. And this definitely changes how we think about 7702 and 3074, because now you know, we're not providing signatures every time, you know, once you've authorized the delegation, the delegation is there and if you want to revoke the delegation, you could send another authorization to change the code to something else. Even the zero address maybe. So it is changing how we think about the authorizations in a lot of ways, but ultimately it feels very similar. It feels like it provides the same functionality while also avoiding these issues of having the outstanding auths that users and wallets might not remember. And it feels like it resolves this discussion that has been ongoing for a long time about how to do revocation because. Because the auths are no longer required every time you use the account.
00:17:07.469 - 00:17:50.045, Speaker E: They are just single use authorizations. Now once you delegate to an address of code with an authorization, your nonsense bumped that invalidates that authorization, that authorization is no longer valid. So that's the idea. It feels pretty good to me in general so far. If anyone has concerns, would love to hear them. The one thing that has come up in my mind is it's starting to look like a protocol level proxy. And if we do that, we need to be very cognizant that this doesn't become a way which smart contract developers use for applications.
00:17:50.045 - 00:18:09.595, Speaker E: So I could imagine if this was like a really cheap type of thing to do, it might be better for say Uniswap to deploy pool contracts using this like EOA proxy method. And I think that that is something to avoid. But in general it doesn't feel like there's many other major concerns with this approach.
00:18:12.935 - 00:18:13.715, Speaker A: Eric?
00:18:16.015 - 00:18:57.755, Speaker H: Hi. Yeah, so obviously just getting into this because it's a new suggestion, but I voiced some concerns in the mafia chat. I think that this actually doesn't provide the same capabilities as before. So I think it actually does limit the usage in a pretty meaningful way. Which is instead of having a recommendation of generally using sort of like a single smart contract or even just to use something that looks like a 4337 contract, here we're basically saying you can only do one thing. You can only use one contract at any given time. You're committed to that contract.
00:18:57.755 - 00:19:35.785, Speaker H: That's a big change because both 3074 and 7702, all of the versions until now basically allowed you to have a design space of how you leverage this capability. And this is a new design space. It hasn't been resolved what's the right way to use this. And this literally puts the limitation and says there's only one way and it has to be a single account that's connected to a single account forever. Not forever because you can change to another single account. I think it's a pretty big change.
00:19:36.165 - 00:19:42.345, Speaker A: Can you go into maybe a bit more detail into what's a use case that would have been possible before? That's not anywhere.
00:19:43.525 - 00:19:59.341, Speaker H: Yeah, so I thought about an example again. Like it's a very preliminary example and I think it's worth differentiating between use case capability. There's definitely less capability here. We'll over time understand what are the use cases, right?
00:19:59.453 - 00:19:59.845, Speaker A: Yes.
00:19:59.925 - 00:20:48.215, Speaker H: But I think just a simple idea of a use case could be I might have an account that I have for very long term things like key backup. Right now EOA has like the backup problem. What if I have some long term account that's very optimized for security that helps me avoid like you know, not having access to a keys or handling will and inheritance and things like that. And on the other side I would have like more short term account that is for example delegated access to a private key that is less permissioned in my account or batching or gasless operations or things like that that are more day to day. I could do that with the previous version. I cannot do this with this new version. I'm not saying it's a great idea.
00:20:48.215 - 00:20:48.927, Speaker H: Maybe not.
00:20:48.991 - 00:20:49.839, Speaker E: That's not correct.
00:20:49.967 - 00:20:51.311, Speaker A: Yeah. Why can't you do this?
00:20:51.383 - 00:20:52.635, Speaker E: That's just not correct.
00:20:54.255 - 00:21:05.307, Speaker H: Unless if I understood incorrectly, once they have 17702 delegation active, I cannot do other 7702s at the same time that use different code.
00:21:05.471 - 00:21:34.865, Speaker E: You're over indexing on a very specific design pattern that was coming about from 3,074 from the last design of 7702. What you can do is you can delegate to a smart account that has a plugin system that allows you to add other plugins that do exactly what you're saying. But it's not even functionality is retained. It's just in a different mechanism. A mechanism that's actually much more forward compatible with the future of having everyone using smart accounts.
00:21:36.405 - 00:21:42.757, Speaker H: I agree that there's other ways of implementing this, but it's a different thing. You're basically saying you can design a.
00:21:42.781 - 00:21:48.545, Speaker E: Different thing, it's a different thing, but the ultimate functionality is the same. What you're saying is the functionality is different and it's not.
00:21:49.005 - 00:21:49.845, Speaker H: Well, the functionality.
00:21:49.885 - 00:21:55.305, Speaker E: The way that we get to the functionality is different. But the end result for the user is identical.
00:21:55.925 - 00:22:11.833, Speaker H: Not exactly. Because if the user installs a malicious plugin for some reason your plugin system is not perfect, then in this situation that malicious plugin will have access to much higher permission actions or like to.
00:22:11.849 - 00:22:36.401, Speaker E: A different every 7702 message you sign has root access to the account. If you sign a delegation to a hot wallet that is insecure for some reason, even though you had an ultra super secure backup recovery mechanism, that hot wallet 7702 invoker thing that you signed to has root control of the account could steal all your funds. So it's not a reasonable argument.
00:22:36.593 - 00:22:47.925, Speaker H: I agree to that. But again you're saying basically that that system that has two wallets is not a valid design by anybody ever. I'm not sure that's a statement. I would.
00:22:48.225 - 00:24:10.053, Speaker A: I don't think that's the argument though. The argument is can we find something that we're comfortable shipping the L1 that introduces a lot of value to users and has minimal side effects in terms of the design restrictions. Obviously there's a trade off where the most permissive thing you could ever do will have the most security Risks. I think we've heard from many client developers that they're uncomfortable if, say, there's just no revocation or optional revocation doesn't get used a lot. So it's not about like, can you enable every possible use case? But like, can we find some set of use cases that are valuable for users that we think leave the protocol, you know, secure? Or at least that the trade off we're making in terms of the risks we add, you know, are like sound. And yeah, it is very possible that like, at least the first version can't accommodate every possible use case. But it's like, is that still a net improvement on today? And I will highlight Marius has this comment saying we can always ship nothing, but we should see this as the status quo in a way where people have been asking for something like 3074 or similar for many years.
00:24:10.053 - 00:24:39.655, Speaker A: And the status quo for the past five, six years is we've shipped nothing because we haven't found anything that satisfies the constraints around security and expressibility. Just want to say that's the angle through which I would look at. I wouldn't compare against the perfect alternative, but against we ship nothing. And is this something that gets us closer to shipping something that's valuable to a large set of users?
00:24:40.555 - 00:25:06.975, Speaker H: So I think just my point of view on this is I think the current version is better than the new suggested version. Definitely not saying we shouldn't ship anything. Definitely should have revocation in the protocol. We were proponents for that from when it was introduced. But I think the new version is just not an improvement on the previous one. I think the previous, the existing version actually that the one that has been merged in the last one, we think it's just better.
00:25:07.595 - 00:25:10.375, Speaker A: But I think that concern there is just not better.
00:25:12.445 - 00:25:54.155, Speaker E: You should come up with something that's possible in the old version that's not possible in the new version, because the new version actually provides more value. In the two points I mentioned about resolving the outstanding auths that we don't know about because it's recorded on chain and resolves the revocation debate that we haven't resolved still, those aren't fixed in the current version of 7702 or in 3074. So the old version is not an acceptable solution yet. And this one is something that is potentially acceptable. Everything that's possible in the old 7702 and 3074 is possible in the new 7702. I want to be very clear about that.
00:25:56.255 - 00:25:59.155, Speaker A: I see Frangio has his hand up.
00:26:01.215 - 00:26:34.035, Speaker I: Yeah. So I was just looking at this proposal. Haven't seen it before. Can you comment, Matt, on how this interacts with cross chain replayability? It sounds like because the nonce is incremented, unless you broadcast and actually publish the auth to all the chains you want at the same time, you would have to regenerate the auth later if you want to submit it to a new chain. Is that right?
00:26:35.615 - 00:26:49.875, Speaker E: The auth should allow for being, you know, having valuable chain ID. If you use chain ID 0, it should be replayable on other chains. If you do not and you use a specific chain id, then it's only valid on that chain.
00:26:50.735 - 00:26:57.955, Speaker I: But by being tied to the nonce, it seems to be tied to one chain anyway. Am I, am I getting that correctly?
00:27:00.345 - 00:27:12.725, Speaker E: If you have a new account with non zero everywhere, then there's no problem. But yeah, if you have already utilized your account in other chains and the nonce is different, then you would have to individually sign messages.
00:27:13.065 - 00:27:39.765, Speaker I: Right. So I feel like this is one place where it diverges from the current spec and you have some patterns that are definitely not doable. In particular, maybe when you combine using AS AA and EOA at the same time, which a lot of people have raised and I don't think there's like a clear understanding whether that's a clear consensus on whether we think that's what's going to happen.
00:27:47.825 - 00:27:48.605, Speaker J: Eric?
00:27:49.915 - 00:28:21.935, Speaker H: Yeah, Just as a thought, why not have the new version where that's how we handle long term withstanding delegation, but still at the same time allow 7702 calls that have a signature in them execute the code they sign. So do you still have the way to do like the ad hoc quick thing that like the specific delegation in a separate process without changing your long term delegation, but then you have a long term delegation active. Maybe that's the solution that gives us both options.
00:28:29.635 - 00:28:59.545, Speaker A: I guess the one immediate thing I can see is just you're effectively creating two features that do pretty much the same thing. Yeah. Richard has a question around like how this impacts the mob codes and whether it was. Yeah. Whether it makes things more complex.
00:29:01.605 - 00:29:02.093, Speaker E: I don't know.
00:29:02.109 - 00:29:03.625, Speaker A: Like you have thoughts on that?
00:29:09.495 - 00:29:53.705, Speaker E: Yeah, it's definitely more complex. All op codes that interact with the account, with the account's code in some way would need to be modified. We're basically creating a new or creating a kind of a pointer in the protocol to say if I loaded some code and it was of this pointer type, then actually you need to follow the pointer to load to continue loading the code and this is going to be more complicated or making things more complicated as we go. But I think it it's not too too horrible and we need to resolve the questions around revocation and around perpetually valid authorizations and this feels like a good path to doing so.
00:29:56.285 - 00:29:59.425, Speaker A: I guess. Okay. Ansgar oh sorry, that's you Richard.
00:30:02.815 - 00:31:27.937, Speaker J: Yes, I just wanted to follow up. I was not on the same question. I want to have another comment in general but as a comment on this topic of complexity first I would first send it but if not for me it was the general first of all I do like the new proposal but I'm biased here primarily because for me this proposal is closer towards also as Matt said it sit on the way towards this upgradability real AA pass but in general I'm fine with versions but I like this proposal. The downside of this proposal is for me is what was mentioned earlier in the shed that you cannot basically just deprecate it again right like because they are potentially the current version of 7702 is very very nice since it has no on chain impact can just deprecate it a lot easier at least in general. I still think for me the worst outcome would be to have both at the same time the current version and the proposed version because this feels like we going into a scope creep which and then we have to have why we have the advantages of both. We also get the worst of both. So I'm not sure if this is really the preferred outcome and I would rather say either we say hey we you know revocation is how it is and we don't go with expensive schemes or complex schemes where you can bump nonsense than it is how it currently is.
00:31:27.937 - 00:32:28.825, Speaker J: It's optional and people can opt out which is the current version and I think there are quite some advocates for this also happy with that or we say we go with other one where we say hey okay we limited where you can get certain functionality only if you bake it into the account that you get to but then you have a strong replay protection because they can always only basically have upgradable accounts and protocol for UAS But I think having both feels very dangerous also when it comes to specifying it and here generally I agree with Matt that I think the new proposal solves a lot of questions with maybe some drawbacks but it solves this biggest question right now around this revocability which or like with yeah if that is the biggest question and if I think also here it would Be interesting to hear. Also the Aragon team, I know it's short term, so maybe not in this call, but what they think about this because they were the most vocal ones around the revocation at least, so they're probably not the only ones.
00:32:33.565 - 00:32:39.545, Speaker D: Yeah, I need to look more into it, but on the surface of it the new proposal looks good.
00:32:41.565 - 00:32:43.757, Speaker A: So I guess, yeah, and I agree.
00:32:43.821 - 00:33:01.655, Speaker D: That we should like we shouldn't make 7702 super generic and have different, various different flavors all available at once. That will be horrible.
00:33:05.635 - 00:33:46.485, Speaker A: So I guess, yeah, it does feel like people need time to review this more thoroughly and to be fair, the PR has only been out for 17 hours right now, so it's not like people have had a ton of time to do it. Do we feel like it's worth scheduling a separate breakout on this or do we want to just review it async and discuss it on the next awkwardev yeah, it would be nice if by the next call we had something that people were generally happy with and that we could use whatever new version, whether it's this one or a tweak of it, as part of DEFNET 2 or something like that. Daniel?
00:33:48.345 - 00:34:31.561, Speaker C: Yeah, just to clarify something, I mean it comes a bit what you said right now about definite two for definite one, would we then implement the current version? Yes, because I mean but the proposals are quite different so we might implement something that afterwards we have to throw away after a few. I mean not everything but part of it, of the code we have to throw away after a few weeks because 7702 is changing again. So I don't know how much sense it makes if we are very sure that we will change it to continue working on the, on the current specific.
00:34:31.663 - 00:35:25.885, Speaker A: I guess my understanding from like what teams previously shared is it's like probably less than a week of work to finish 7702 for most El teams. If that's the case, it feels like that's still the quickest path forward. But the other, the other approach is we just removed 7702 from the next devnet altogether. The one thing I would want to avoid is blocking the launch of 7702 based on like this draft PR. Yeah, so I, yeah, I know that yeah, last time it felt like there was still some value in having the old spec, the pr, even though we knew it would change. But I don't know if we thought it would change less that it's currently changing. But I, yeah, I know.
00:35:26.005 - 00:35:50.053, Speaker C: Yeah. At least my impression the last Time was that there were discussions around the nonce handling and the revocation but nothing else which seemed rather small. But the current spec is a completely different approach to how we do the count abstraction in this case. So I would say it's very, very different.
00:35:50.109 - 00:36:01.765, Speaker A: Yeah, the teams feel like it is generally if we feel like it's I think the alternatives is we just do The DevNet without 7702. The people feel like that's a better path forward.
00:36:07.065 - 00:36:40.245, Speaker J: On this one. Personally, as more on the wallet side dev for us it's super helpful to even with the current version, not with updated version to play around with it and get a feeling for it where we can obviously try to set up local testnets but if it's nowhere implemented then it will be also harder to get up the local testnets. This is where possible. I know the Ultem team doing an awesome job. They're pushing stuff for this. Even for 3074 having something like this would be super helpful and they're having it as part of the defnet would make this a lot easier.
00:36:47.995 - 00:37:37.425, Speaker A: I don't know any other EL teams feel like we should either keep it in or take it out. If there's no other strong objections, I think I would just default to leaving it in because yeah, there is value in having it and there's also some risk of issues when we take stuff out of devnets as we've seen time and time again I would keep the devnet spec as is and obviously when we test Devnet one it's probably not the most valuable use of our time to test all the different parts of 7702 but it doesn't seem like it's going to delay us a ton.
00:37:38.795 - 00:37:39.083, Speaker E: So.
00:37:39.099 - 00:38:42.017, Speaker A: Okay, so let's keep it as it is we can. I'll post after this call in the discord to schedule another 7702 breakout before the next ACDE. I'll look at all the dates that don't have a 14 UTC call in them already. But yeah, let's try and have another 7702 breakout by the next ACDC and hopefully by then we have a final spec that we're happy with. Anything else on the topic? Okay, thanks everyone. Yeah, I think this is, this is good progress. This was kind of a long detour but we were going to talk about EOF and peerdos devnets but before we go there anything else on just Spectra Devnet one stuff aside from EOF and.
00:38:42.041 - 00:38:46.765, Speaker E: Peerdes, do we have a rough target date?
00:38:47.665 - 00:39:14.677, Speaker A: So it seems like there's at least a couple EL teams that should be ready within the next week. So it would be kind of neat if, even if it's not all the. All the teams. If we could get DevNet1 stood up with a subset of clients before ACDC, that'd be really cool. My sense is we can get at least a couple els. And on the CL side, it seems like things are ready as well. So let's try.
00:39:14.677 - 00:39:44.645, Speaker A: Yeah, let's try to get a partial DevNet one set up by ACDC and see how we do on that front. Anything else on Pectora? DevNet1. Okay. EOF Barnabas, you started talking about the EOF DevNet about half an hour ago. Do you want to give us a status update there? Yes.
00:39:44.685 - 00:40:10.785, Speaker G: We had the EOF call yesterday and we have agreed that we're going to be testing EOF after Pector. So after prog, which means that each client team will have to rebase their UF code over their PROC code. And we have the Ethereum package already updated with eof, so client teams should be able to test on that already.
00:40:12.445 - 00:40:17.085, Speaker A: Awesome, thanks. Any team updates on eof?
00:40:20.665 - 00:40:23.685, Speaker D: Yeah, I know that nethermind implementation is.
00:40:24.305 - 00:40:26.153, Speaker A: Kind of ready, but we are still.
00:40:26.209 - 00:40:31.085, Speaker D: Failing some tests, so it's not ready. We are working on it.
00:40:33.745 - 00:40:34.525, Speaker A: Thanks.
00:40:36.305 - 00:40:55.993, Speaker F: At Aragon we are passing all the validation tests and it would be. It's just a suggestion. It would be nice to have actual blocks so we can execute them and test it as well. Yeah, thanks.
00:40:56.129 - 00:41:05.725, Speaker A: So when you say actual blocks, you mean just like some blocks creating EOF contracts and like calling various opcodes and stuff like that?
00:41:06.115 - 00:41:39.995, Speaker F: Yes, yes. It would be nice to actually test the behavior of the software if we hid an actual blocks with the transactions in them. I mean EOS transactions with them. Yep. Oh yeah, one more thing is that we are not fully ready yet since some instructions are not implemented yet. But validation tests, I mean validations steps already done. I mean so far the latest execution spec test passing.
00:41:39.995 - 00:41:42.115, Speaker F: Yep. Thank you.
00:41:44.695 - 00:42:15.131, Speaker A: And then there's an updater from Ref in the chat saying they're passing state invalidation test. Work has begun integrating EOF into Foundry. Anyone from the base U or get side. I pasted the readiness matrix in the chat that shows the implementation status. Besu has them all implemented. I'll let Geth speak for them. But the readiness matrix we should.
00:42:15.131 - 00:42:18.895, Speaker A: When you have your updates, please update this spec file.
00:42:20.635 - 00:42:21.415, Speaker H: Cool.
00:42:25.405 - 00:42:26.985, Speaker A: Yeah. Any guest updates?
00:42:32.445 - 00:42:59.285, Speaker G: Sure. We are passing all except for one test from the stack validation and I'm Currently trying to make the status work but they are based on proc so I need to revise first to get everything to prod and make the actual functionality work.
00:43:01.185 - 00:43:28.267, Speaker A: Got it. Thanks. So I guess next steps, obviously getting the rebates is done, finishing these implementations and if someone has the bandwidth, maybe adding some full block tests. Yeah, does that seem reasonable? No objection. Anything else on EOF people wanted to discuss? EOF is going to move to the.
00:43:28.291 - 00:43:29.323, Speaker D: Implementer call is going to move to.
00:43:29.339 - 00:44:14.421, Speaker A: Biweekly, we'll have a meeting next week and then we'll move to weeks off of acd. We went to weekly when we had a lot of spec updates, but now that spec updates has gone to basically none. Now it's mostly a testing and implementation call so we can do a lot of that async. Awesome. Yeah, that's a good sign. Sweet. Anything else on eof? And then yeah, I know we might not have everyone to discuss this here, but any updates on the peer DAs, Devnets or implementation? I guess I doubt we're at Devnets yet.
00:44:14.554 - 00:44:25.875, Speaker G: Devnet 1 will be based on Alpha 3 as well, so each client team suggested that that would be the easiest to do.
00:44:26.215 - 00:44:26.599, Speaker A: Cool.
00:44:26.647 - 00:44:42.205, Speaker G: So the ENR change would need to be applied. I'm not sure if any CL people are here, but the idea would be to be up and running also within the next week or two. Maybe it could have Net one.
00:44:46.625 - 00:45:01.685, Speaker A: Awesome. Any other comments thoughts on the pure DAS work? Okay. Anything else on Petra at all?
00:45:05.795 - 00:45:06.179, Speaker E: Nice.
00:45:06.227 - 00:46:11.181, Speaker A: Well, okay, great then it seems like things are moving along. Just three quick updates then. First off, we discussed in the past a couple times wanting to have a formal place for people to leave. High quality reviews on eips. After some back and forth, it seems like something that's hard to standardize. Some eips will get audits, some eips will get a really good comment on the pr, some eips will get a great comment on ETH Magicians and so some an idea that we came up with to address this and track it is that when EIPs have their discussion threads and ETH magicians, we can basically make it the job of the EIP author to keep track of all these reviews alongside with updates to their EIPs and potentially open issues or questions that still need to be resolved. So I posted this draft in the chat, but the idea is that when you open an ETH Magician thread for an eip, you would get this as a default template to fill out.
00:46:11.181 - 00:46:56.825, Speaker A: We obviously can't force people to use it, but it's kind of a nudge towards doing that. And because client teams are the ones who end up reviewing these EIPs and making decisions for them. If anyone has feedback on stuff that should be in this template or stuff that should be framed differently either, we can discuss this quickly here. If someone has something they wanted to share, but otherwise I would just move the conversation to Eat Magicians. But yeah, that should hopefully give us an easy way to keep track of these are. If solidity leaves some significant comments on an EIP and they don't want to show up every two weeks to say them over and over, then it should be basically tracked in the first post of the Eth Magician thread on the eep. Yeah.
00:46:56.825 - 00:47:08.905, Speaker A: Any thoughts, comments? If not. Okay, next announcement. Perry the Eth Clients repo.
00:47:11.125 - 00:47:56.133, Speaker B: Yeah, so to introduce the organization to EL devs, there's this GitHub. Org, it's called Eth Clients and it contains the, at least from the CL view, the canonical configs for Sepolia Holski as well as mainnet. It also contains all the checkpoint sync endpoints and potentially, I think Yasek was mentioning potentially in the future, also sources to get error files and stuff like that. The idea is that there's at least one admin from each client team. So it's a joint resource that's maintained by every single client team and we can use that how we see fit. Right now there's just admins from CL teams and. And almost every CL team is represented there.
00:47:56.133 - 00:48:20.705, Speaker B: So we wanted to start adding the EL teams in there as well so that we round out all the client team admins there. There's a thread on all core devs. I can just share the link to the thread. If someone from each team mentions who they want me to add, then I can just validate that and go ahead and add them.
00:48:21.595 - 00:48:49.395, Speaker A: Thanks. Thanks. Okay. Yeah. Any questions? Comments? Okay. And Light Client has an unrelated question, but we have some time. So what's the latest on dropping pre merge history for Petra? Any updates there?
00:48:51.055 - 00:48:51.679, Speaker E: We.
00:48:51.807 - 00:49:20.605, Speaker A: I don't think we've discussed it here. So. Okay, last call if anyone has updates. Okay, so no updates on that and then. Okay, last thing I asked in the discord if people wanted to have an ACDE on July 4th. Everybody wanted to. No one said they would be celebrating and missing this.
00:49:20.605 - 00:49:44.845, Speaker A: I'll be out but Alex Stokes will be there running the next acde so we'll have it at the same time two weeks from now. Anything else that we want to discuss before we wrap up okay. If not. Well, thanks, everyone. I'll post a recap on the R and D discord and. Yeah, talk to you all soon.
00:49:47.825 - 00:49:48.605, Speaker G: Bye.
00:49:50.105 - 00:49:51.005, Speaker A: Thank you.
00:49:55.065 - 00:49:55.545, Speaker G: Thank you.
00:49:55.585 - 00:49:56.165, Speaker A: Bye.
00:49:56.825 - 00:49:57.281, Speaker D: Thank you.
00:49:57.313 - 00:49:57.457, Speaker A: Bye.
