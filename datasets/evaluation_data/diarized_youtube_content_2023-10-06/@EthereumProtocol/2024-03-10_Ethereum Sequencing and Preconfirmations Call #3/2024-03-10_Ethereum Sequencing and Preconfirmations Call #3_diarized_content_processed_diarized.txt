00:00:06.600 - 00:00:49.352, Speaker A: Okay, welcome everyone to the Ethereum sequencing and pre confirmation call number three. I guess this is our fourth call. Now the agenda for today is going to be in three parts. So we're going to have a quick update from my side in terms of the, the base ecosystem. So builders that are trying to leverage base sequencing and base pre confirmations, I have some exciting updates. I'll try to keep it very brief. And then we have Alex Kuchowski from Zksync, who will be presenting his concern with base sequencing that we don't have the time to present.
00:00:49.352 - 00:01:57.440, Speaker A: Last time, actually, he was on a flight, which is why he couldn't present. And I think I want to give him a bit more than ten minutes because he's representing a roll up. And I think there could be some interesting discussion from the points that he bring up. And then in the last 25 minutes or so, I want to give an opportunity for some of the various projects that have been building cool stuff and doing cool research to do very small presentations or small teasers on what they've been working on. So without further ado, I'm going to share the presentation. Okay, so I kind of want to give you a quick overview of what I think the base ecosystem has grown to in 2024. So at the very beginning of 2024, there was, what I can tell, just one project in the base ecosystem, it was Tyco.
00:01:57.440 - 00:02:57.488, Speaker A: And in the last few weeks we've had ten more projects. Look at it. So one which I learned about very recently, I think last week, is this project called Rise. And they gave me a small blurb, I couldn't make it to the call. So basically they're building a based roll up, which is a high performance rust based parallel evm roll up built on top of ref. So this would be like after Tyco, the second publicly announced based rollup. Another really exciting development is that the founder of one of the very top roll ups in production today told me a couple of days ago that they will be pushing to make their roll up based.
00:02:57.488 - 00:03:48.720, Speaker A: So this is a very surprising development to me that it happened so quickly. But there we go. We also have in the base ecosystem at least two entities doing research. So these are consultancies that are doing research internally, but also for the various projects. So I believe lime chain is doing a lot of great research. And actually there will be a presentation towards the end of this call by George on what he calls base ticketing, which is a new design. And we also have, nevermind has been pushing some fantastic research on base sequencing and also working with various partners in the ecosystem.
00:03:48.720 - 00:04:32.304, Speaker A: We also have infrastructure providers that seem to have pivoted in some sense to base sequencing. And we're going to have various presentations and teasers from some of these teams. So, for example, Espresso is now building a based shared sequencer. We have Sorella, which I think is more discreet about what exactly is building. But it seems that the company has pivoted in some sense to base sequencing. Same thing with chainbound. Very, very excited with base sequencing, and I think also still under wraps in terms of what exactly they're building.
00:04:32.304 - 00:05:43.400, Speaker A: And then there's spire, which hasn't yet pivoted to base sequencing, but they're basically considering building this base roll up app chain framework, something analogous to the op stack for the super chain. And that native framework would basically integrate base pre confirmations and base sequencing to make it very easy for base rollup to be. Yeah, and then there's a final group of infrastructure players, which are the relays. And we have Gatacad, the team behind the Titan relay. Sorry, the Titan builder, which is one of the largest builders. They recently released the Titan relay and they're very much excited to provide additional services in addition to relaying and pre confirmations is one of the base pre confirmations is one of the services that they're very excited to provide. And similarly with the ultrasound relay, currently the most popular relay, and looking to expand beyond just relaying and provide pre confirmations.
00:05:43.400 - 00:06:02.220, Speaker A: So that's it from me. And then I guess I'll hand it over to Alex to present his concern and ensuring discussion around base sequencing.
00:06:03.360 - 00:06:09.090, Speaker B: Sure. Thank you, Justin. Let me check that. We have also comment from our team here.
00:06:10.260 - 00:06:11.250, Speaker C: I'm here.
00:06:12.580 - 00:06:21.670, Speaker B: Okay. So I will just share a couple of usually and then common, you can present the presentation. It's fine.
00:06:22.840 - 00:06:23.830, Speaker C: That's great.
00:06:24.680 - 00:07:09.284, Speaker B: So I just want to say I'm very impressed how far the progress is going. And it's very cool. It's very interesting development. As a builder of Zksync, our mission is shared with everyone. We want to scale Ethereum while preserving the properties that make Ethereum really valuable. Like what made Ethereum valuable in the first place. And the history shows that if the community does not call ESC around certain values and pushes for them, they can deteriorate with time.
00:07:09.284 - 00:08:24.924, Speaker B: And so one big thing which we discussed with Justin throughout the last two years, but in discussion also based sequencing, is that it might lead to a bit more of centralization, because you create an infrastructure that makes centralization easier if you make infrastructure, it makes it harder. Then, for example, you can make design choices that favor solar stakers, or you can make design choices that don't favor them and make it very easy to delegate and restake. And then you will end up in a situation where a lot of stake is governed centrally. So if you make base sequencing, let's imagine base sequencing wins, it would be very important to make sure that the builders cannot be evil. Because if builders can be evil, and all of the roll ups are sharing the same building infrastructure and effectively acting as one huge sharded roll up, we might end up in a situation.
00:08:25.122 - 00:08:25.870, Speaker D: Yeah.
00:08:30.800 - 00:08:32.856, Speaker A: Sorry about that. The present has been muted.
00:08:32.888 - 00:10:00.452, Speaker B: Now I see the way we see it, if you have shared sequencing, if everyone is using shared sequencing infrastructure, that effectively means you have one huge system that is sharded and that is operated essentially by a few big entities. And there is a really big risk that an Ethereum turns into big tech chain where those guys have a lot of subtle power. If they process all of the transactions from the users, they could be censoring users, they could be doing a lot of bad things, right? We know that there are tendencies towards this. We know that most of the bots in Ethereum are being processed by entities that are, for example, OFAC compliant, right? And then today it's just tornado cash, but tomorrow it can be anything and the list can grow, and then it can be real time and specific users can be targeted for political reasons, or maybe just because it already happened, that OFAC compliance leads to using of certain companies that provide this. And then those companies can have false positive and false negatives, and they can exclude your users without them actually doing anything illegal. And then those companies get a lot of power all of a sudden because they start to dictate and they can subtly tweak the parameters in certain way which will favor certain players over the other players.
00:10:00.516 - 00:10:01.032, Speaker E: Right?
00:10:01.166 - 00:11:43.600, Speaker B: So my first concern or proposal would be, if this is the route to which Ethereum is going, then it would be really important to focus on first making sequencing trustless, like work on the mechanisms that would make it impossible for sequencers to be evil, meaning some form of embedded censorship resistance, either through cryptography or through some mechanisms, but that are working at the sequencer layer. I think it's not enough to say censorship resistance is going to be solved by extra mechanisms where if you're being censored, you can send this transaction to the validators. Because if shared sequencing becomes, or shared sequencing with based roll ups, with pre confirmations becomes ubiquitous, then most wallets will switch to this, most payment providers will switch to this, and then users who cannot participate in this 1 second confirmation thing will be essentially excluded from the economy. It's a very general concern. I just want to kind of leave it open for discussion and see what you guys think. But I feel that it's very important to first focus on those with roll ups. We have this experience where roll up space started as something very focused on preserving the security and decentralization properties of Ethereum.
00:11:43.600 - 00:12:33.624, Speaker B: And then the first roll ups started, essentially some roll ups started in a way that did not really work, like roll ups, right? Did not have fraud proofs, for example. And then everyone said, sure, well, it's just going to be implemented in a very short time. It's okay, let's just build fast, iterate, build mvp and try things. But it gets sticky, right? And some of the roll ups still don't have fraud proofs. I think most of the big optimistic roll ups still don't have permissionless fraud proofs, which makes them essentially very similar to side chains with very high threshold of operation. And this puts a lot of pressure on everyone. This puts a lot of pressure on us.
00:12:33.624 - 00:13:58.420, Speaker B: Like when we have to prioritize our roadmap, we have to choose between transitioning to stage one, stage two roll up and making sure that it's properly decentralized or building something that will have the space is very competitive and building features that will create some interesting advantages for the product, for the platform, for the network. And I think it's not in our power to change this. It's in the power of the community to create pressure on everyone to comply with certain values of Ethereum to comply with this decentralization approaches. Having gone through this with roll ups, I really want to make sure from my side I will be doing everything to coordinate community, push community to actually enforce those values before they actually get implemented. So that's one concern. And the other concern is when we build this system, I would love to understand what's the end game. Is the end game that everyone switches to base roll ups or is the end game that Ethereum is a plurality network where the original idea of roll up centric world where roll ups can permissionlessly innovate and go in different directions is still valued by the community and embraced.
00:13:58.420 - 00:14:44.624, Speaker B: And if that's the case, then the second big thing that would be very important to preserve is connectivity between the different systems and the ability like the right to exit. The way you can think of blockchains, like why blockchains are great as network states with all the onchain governance, is that you can always exit. When layer one, your exit strategy is a fork like, you don't like what the validators of bitcoin are doing, they start censoring users or on ethereum, they do something bad. You can always say, you know what, I don't like these rules. I'm excluded here. I can fork a system, change the set of validators and continue there. Roll ups, it's even easier.
00:14:44.624 - 00:15:40.230, Speaker B: You just withdraw to layer one and you withdraw to other roll ups. Ideally, we build a system that is much more interoperable between the roll ups, but in a way that does not force everyone to go and become essentially one single system. Like embrace completely the same architecture, the same approach to sequencing. It would be great to have alternative approaches like alternative systems, alternative sequencing methods that are still interoperable with whatever mainstream movement is. And here we have an idea to propose. But maybe it's worth to first open the floor for questions discuss. Generally, like the general concerns, I think there are lots of people who want to share.
00:15:40.620 - 00:15:42.330, Speaker A: Noah, you have your hand up.
00:15:43.260 - 00:16:05.260, Speaker F: Yeah. So one of the things that I wanted to bring up with the censorship resistance around shared sequencing and pbs in particular, Alex's concerns is I do think adding sensor resistance at the rule of level is something that's really interesting. One of the things, I know Alex didn't bring it up, but one of the things that I've seen recently.
00:16:14.480 - 00:16:14.796, Speaker G: I.
00:16:14.818 - 00:16:19.910, Speaker F: Think that adding additional features like that could be, be less and less.
00:16:22.040 - 00:16:26.244, Speaker H: It might be nice if you slow down a little bit because your audio is cutting out in and out a little bit.
00:16:26.362 - 00:16:29.430, Speaker A: The audio is not good. Can you use a different microphone? Maybe.
00:16:41.020 - 00:16:42.056, Speaker F: Working better.
00:16:42.238 - 00:16:43.320, Speaker A: So much better.
00:16:43.470 - 00:17:30.296, Speaker F: Okay, great. Sorry about that. So, to go back, to start, the concerns about PBS, I believe are completely valid. And I think that one of the things I've seen recently is CK synchronous collaborated for a rollup called CK Lighter, which has sensor persistence built into their own AmM with CK circuits. I think additional features like that could be a great way of essentially having better sensory resistance, but it also comes around the rollup's block building rules at the end of the day. So I think a lot of these systems that we're building, whether it's espresso, shared sequence, or node shared sequence, or any of these other options on the market, mes really want to be maximally lazy, in a sense. So we don't want to have too many things enshrined and too many things added onto the system itself.
00:17:30.296 - 00:18:25.530, Speaker F: So I think a lot of these primitives for better sensory resistance can be added on and you can still fork away, at least for our system. You can use Altea and you can fork away from our system. So I believe that those will help out with the century persistence and being able to say like, hey, I don't like this, I want to leave. But I do think they're valid concerns. I do think that over time there will be better systems that get developed and the best way for a shared sequencer, or a base sequencer in this case, to really function is to be maximally lazy in a lot of these things and not tell the roll ups, hey, this is the way you have to do things forever. And you can never fork away because just like with any of these things, with these large decentralized systems, like just how ethereum operates today, getting everybody to agree on one thing will be next to impossible. So I think that having maximal have optionality makes a ton of sense and will really help every roll up be happy with the solution that they choose instead of all going with one or the other.
00:18:27.980 - 00:18:41.410, Speaker A: I guess what you're saying, Nora, is that it would be nice if the shared sequencers or sequences be minimally opinionated, so it leaves as much room as possible for each individual roll up to come up with their own encrypted mempool or their own inclusion list strategy or whatever it is.
00:18:41.780 - 00:18:42.530, Speaker F: Exactly.
00:18:43.860 - 00:18:45.552, Speaker A: Ben, you have your hand up.
00:18:45.686 - 00:20:13.704, Speaker G: Yes, thank you. And Alex, thanks very much for coming here and presenting. I think that the concerns that you're sharing are something that we all share too, and I think it's very important that we're having this discussion. I think that one thing to consider is if every rollup is anyways going to decentralize its sequencing, then, Alex, I think you and I maybe discussed this before at some point, but it creates pressure anyways for builders to try to build for multiple ecosystems at the same time. And in fact, if you're looking at builders who are going to try to participate and win slots for multiple roll ups that have decentralized sequencing at the same time, it's going to narrow the builder set even more because the builders that are most well capitalized and most able to simultaneously win these different sequencing slots at the same time are going to be just an even smaller set. And because there's going to be market pressure on builders to do this, because they can offer these additional benefits to users when they're producing roll up blocks from multiple roll ups at the same time, it's going to happen. And so in some ways, what I view as shared sequencing is some kind of coordination to allow more participation in this marketplace.
00:20:13.704 - 00:21:59.272, Speaker G: Which brings me to the second point. I think we have sort of made a mistake as a community in calling this a shared sequencer, and in fact, espresso is moving away from the term shared sequencer. What espresso is really doing is building a marketplace for shared sequencing, and this is compatible as well with the idea of based rollups, maybe not as the original way it was described, but if you think about any of this infrastructure as creating a marketplace where sovereign roll ups have autonomy over their own block space and can sell block proposal rights to third parties, including the L one proposer, that is really what shared sequencing is. So roll ups that are participating in such a marketplace can produce blocks on their own sometime, and if it suits them for synchronous composability or other reasons, they can sell block proposal slots to other common proposers. Some roll ups may choose to sell this all the time, right? And be like the most based if they're selling it. By the way, the difference between a base roll up and a non based roll up is really mostly about whether you'reorgang with the l one or not. So if roll ups are building off an older l one state for the benefits of stronger finality, then the l one proposer is not able to construct even to buy the rights to propose for them at the same time, because the l one is ahead of the roll up in some sense, whereas roll ups that reorg with the l one and sacrifice this faster finality, they can sell block proposal slots to the l one proposer.
00:21:59.272 - 00:22:26.090, Speaker G: So anyways, I know that's not necessarily how everyone is thinking about this, but that's how I'm thinking about this. And I think I'm coming from the very same place as you are, Alex, in the sense that I think enshrining one infrastructure to control all roll ups is definitely concerning. And you bring up a very good point, but I don't think that's the direction the industry needs to go in. It can be in this more ad hoc shared sequencing model that I'm describing here.
00:22:27.420 - 00:23:04.340, Speaker A: So if I were to summarize one of your key points, Ben, you're saying that if there is demand for synchronous composability, there is going to be demand for shared sequencing, and that's going to happen no matter what. And the question is, is this going to happen through extreme sophistication with people building additional layers and extreme centralization? Or can we build this coordination infrastructure that actually dramatically lowers the barrier to entry to facilitate this shed sequencing? In some sense we're removing complexity and reducing the barrier to entry.
00:23:05.160 - 00:23:26.444, Speaker G: Yeah, that's point number one. And I think point number two is that shared sequence. It's not shared sequencers as one infrastructure. Even base roll ups don't need to be enshrining the l one as the sequencer for all roll ups. It's more that sovereign roll ups can sell proposal slots dynamically. And if they'reorgang with the l one, they can even sell it to the l one.
00:23:26.482 - 00:23:27.340, Speaker B: Professor.
00:23:28.960 - 00:23:47.570, Speaker A: Got you. So you're saying basic, one thing is not all or nothing. You don't have to always be based. You can choose when you want to be based and you can open it up to the market to decide where to allocate these resources as optimally as possible. George, you have your hand up?
00:23:49.240 - 00:23:49.652, Speaker B: Yeah.
00:23:49.706 - 00:23:50.036, Speaker D: Thank you.
00:23:50.058 - 00:23:50.576, Speaker A: Justin.
00:23:50.688 - 00:24:58.280, Speaker D: Hey, Alex, nice to meet you. I'll actually go on the other direction and approach this from engineering standpoint. And I'm not totally sold on your point where you say, well, once we are figuring out how to do base sequencing or whatever is sequencing, let's figure out also censorship resistance. So for the past, I don't know, weeks or months, we've been trying to figure out how to do just sequencing that is possibly enabling universal synchronous composability and is possibly decentralized or at least has minimal training wheels. And I am very skeptical that if we also tag along the requirement for base sequencing to be completely censorship resistance, we are not going to be super overcomplicating the whole thing. So from engineering standpoint, I'm not totally sold that we can actually do this without hampering the rest of the requirements that we have for sequencing.
00:25:00.700 - 00:25:15.420, Speaker B: As an engineer, I have to agree with you. As someone who cares about Ethereum, this is exactly my concern. To put it, turn Ethereum into a KYC chain.
00:25:17.120 - 00:25:20.224, Speaker D: I wonder whether these can be sequentially addressed, though.
00:25:20.342 - 00:25:49.210, Speaker B: It can't. Once you do something that is easy to do and takes traction. Basically, today Ethereum is decentralized, right? You have validators. Everyone is building something in a decentralized manner. You have some people who follow the censorship, some people who don't. The tornado cash blocks. I'm not advocating for tornado cash for the record, but just using them as an example.
00:25:49.210 - 00:26:25.616, Speaker B: Right? In a world where the Ethereum is essentially sequenced by a few big tech providers, there will be zero blocks with tornado cash and with whoever those three guys don't like, or whoever their bosses don't like. This is just reality. This is what's going to happen. Take me on record. This is what's going to happen. If this is the future, we're going down without first building something that makes the sequencer not able to be evil, they will become evil. We've been there with the Internet.
00:26:25.616 - 00:27:34.830, Speaker B: We've been there with blockchains here as well. So this is precisely the concern. This is why Ethereum has spent so much time bitcoin. I mean, the entire bitcoin philosophy is based on this, like cypherpunk, in and out above everything else, right? Ethereum initially has spent a lot of time on thinking about this specific problem. How do we prevent censorship? How do we prevent capture by big tech, by centralizing forces? Why not just increase the block space as much as you want so that you have a few entities? You could do the same thing as bitcoin cash. Right? That was specifically deliberately not done in order to keep Ethereum, cypherpunk, or sovereign decentralized. This development for the reasons, George, which you mentioned, is exactly what I'm concerned about, because we tend to go down the road, which is easier, in which market forces are pushing us, and if there is no pushback from the community, this is exactly what's going to happen.
00:27:34.830 - 00:27:37.390, Speaker B: Okay, makes sense.
00:27:38.160 - 00:28:26.060, Speaker A: So, Alex, I guess what you're saying is that there's path dependency here. So either we figure out censorship first or we risk, like, never figuring it. Mean, from my perspective, I think we already have a censorship problem at layer one with the builders. But that leads to what I call weak censorship, where basically transactions have delayed inclusion, but they're not completely censored from the chain. And I don't think we'll ever have strong censorship. Now, weak censorship, even though the name has the word weak in it, is still extremely important to tackle. And I think the two best technologies that we have are, number one, inclusion lists, and number two, encrypted memp pools.
00:28:26.060 - 00:29:22.200, Speaker A: And I think these are being worked on and also prioritized. So, for example, Mike nuder is really making a big push towards inclusion lists. Now, inclusion lists, admittedly, does require some sort of special path, some sort of mechanism whereby transactions can be gossiped to a public mempool and then picked up by the proposers, as opposed to the pre confirmation system, which is more of a peer to peer, end to end encrypted connection with a well defined entity. And so I think you're right. We need to be building both paths in parallel and not just one. Otherwise we risk ending up with just the one path, which, as you said, there's the power of the default, where wallets will just bother integrating the simplest one, which covers 99% of users, and then a minority risk getting censored.
00:29:22.360 - 00:29:59.620, Speaker B: Yeah. So I think the inclusion lists work for specialized players, like for roll ups who want to submit transaction. Like, if a roll up is being censored, fusion list is probably a good way to enforce that this doesn't happen, but not for the end users. And so it's even more important to make sure that if the market forces are pushing us down this route, let's just make sure that there are alternative ways to build roll ups, and people who want to build them are not excluded completely from this economy. And there are ways to interoperate.
00:29:59.780 - 00:30:23.730, Speaker A: Right. I mean, I guess one observation is that this concern around censorship applies generally to decentralized sequencing, not just to shared sequencing. If you have a decentralized sequencer with PBS, you want to have censorship resistance baked. That's. I think there's consensus that we want to have decentralized sequences. And so as a community, we definitely need to solve this.
00:30:25.780 - 00:30:43.960, Speaker B: We have spent some time thinking about this problem, and we came to conclusion that you can't really decouple censorship resistance from the protocol itself. So you cannot build a sequencing layer which is completely agnostic towards the fact whether it must be part of the protocol.
00:30:45.180 - 00:30:46.840, Speaker A: Murat, you have your hand up?
00:30:46.990 - 00:30:47.304, Speaker G: Yeah.
00:30:47.342 - 00:31:48.440, Speaker I: Thank you. So we've been thinking about this particular issue as we had applied for the tyco grant for the pre confirmations on l one, and based on some of the discussions that came out of this group, actually, we positioned those to be a potential relay, providing these pre confirmations, and then creating, essentially a constraint for the builders that the relay is working with. So that's kind of the basis of our proposal there, that tyco transactions would essentially go to a relay, which would then create some constraints on the builders that it's working with. And this sort of works as a minimum viable inclusion list, if you will. So I'm wondering if there's a line where we can draw somewhere saying, hey, look, this path is satisfactorily kind of censorship resistance enough to move forward. And the question is to Alex, do you think that falls under the same kind of path dependency, where it all breaks down because it's not fully censorship resistance path?
00:31:48.600 - 00:31:54.284, Speaker B: I don't quite yet understand the idea. I would love to learn more. Okay.
00:31:54.322 - 00:32:22.600, Speaker I: Yeah, maybe we can do that offline then. But yeah, for the community. There's active work in this area where we're talking to relays to figure out if we can enforce some rules from the relay to the builder, perhaps in a less kind of profit decaying way with l two sequencing and other kind of less DFI or Mevi constraints.
00:32:25.580 - 00:32:29.210, Speaker A: Carmen, did you say you had a presentation ready?
00:32:29.580 - 00:32:30.376, Speaker C: Yes.
00:32:30.558 - 00:32:35.070, Speaker A: If you want, you can have five minutes if you can fit it in.
00:32:37.600 - 00:32:39.404, Speaker C: Can you see the screen?
00:32:39.522 - 00:32:40.652, Speaker A: Yes, we can see the screen.
00:32:40.706 - 00:32:41.020, Speaker C: Yes.
00:32:41.090 - 00:32:41.752, Speaker E: The presentation.
00:32:41.816 - 00:32:42.430, Speaker C: Right.
00:32:43.120 - 00:32:44.700, Speaker A: We can see your calendar.
00:32:45.120 - 00:32:54.930, Speaker C: Okay, just a second. How about now?
00:32:56.340 - 00:32:59.924, Speaker A: It's loading? Yes.
00:33:00.122 - 00:33:56.992, Speaker C: Okay, so I'll try to be very brief. So a prerequisite for universal synchronous composability is layer two interoperability. And tying into the previous conversation, we have to create this shared sequencing interoperability standards in a way that not everybody has to participate in base sequencing, but we have to let every flower boom, basically. So interoperability is making about layer two sport or less, and layer two standards and interoperability fit into our previous conversation based on this diagram. So it's kind of adjacent to it. It's not directly the same topic as sequencing. And I want to present the deposit sharing idea today, which would allow interoperability between different layer twos.
00:33:56.992 - 00:34:50.768, Speaker C: But just this ties into our previous conversation with universal synchronous composability, because universal synchronous composability is only possible in the intersection of the two topics. So we need both based sequencing for universal synchronous composability and l two standards, and interoperability. And l two standards would allow asynchronous interoperability between different chains, which would already be a huge benefit for them. So let's look at the basic problem in this area. The biggest problem is liquidity fragmentation. If you have two different chains, then they will have two different bridges on layer one. And if you are transferring value between one rule up to another, then you have to transfer it on the bridges as well.
00:34:50.768 - 00:35:46.228, Speaker C: This problem has to be solved. And the biggest question when it comes to layer two interoperability is how do you solve this layer one transaction problem? So for a single ecosystem, just to get everyone up to speed inside a single ecosystem, inside a single governance and trust zone, you can use a shared layer one, shared bridge, and shared transaction route. This transaction route commits to all the transactions happening inside the ecosystem. And using this, you can do what we call hyperbridging. Other ecosystems call it lxly bridging, but it allows cheap and trustless transactions to go from one roll up to another. So this is possible inside a single ecosystem. The big question is how to do it between different ecosystems.
00:35:46.228 - 00:37:17.952, Speaker C: Our solution for this is a shared bridge coupled with an asset verifier. This is Alex's idea, and basically what this would allow is permissionless VM verifiers on layer one, which would be decoupled from verifying the fact that each chain will have its balances verified together in the shared bridge. In using this system, the VM verifier can be permissionlessly deployed and arbitrary. The transaction route would still commit to this transaction inside the whole ecosystem, and the bridging process between the different roll ups would still be the same. So this is the first idea, and there's another idea, and this is Jordy's idea, which is to have mass deposits between different bridges. Basically, in this idea, a roll up would commit to its transactions in the transaction route, and then there would be a mass transfer from one bridge, and it would go into a mass deposit handler contract on layer one. And the destination roll up could then withdraw these mass deposits and could then receive the transactions from this mass deposit handler.
00:37:17.952 - 00:38:10.004, Speaker C: So, basically, I wanted to show these two ideas to get this conversation started and to have people understand the two basic options that will be necessary. That are the two options for universal synchronous composability. We think that asset verifiers are better than mass deposits. They do require a bit more coordination, because the asset verifier, which is a proof verifier contract, has to be standardized. This could be a multi verifier situation, making it easier to coordinate, but it has multiple advantages. And basically, the next steps are to decide on how to solve this liquidity fragmentation problem. So I think this is the first step.
00:38:10.004 - 00:38:19.370, Speaker C: We should discuss it, go over it, and then there are further steps. But because of the shortness of time, I will skip these. So thank you very much.
00:38:21.020 - 00:39:09.770, Speaker A: Thank you, Carmen. So I guess what you're saying is that in order for universal synchronous composability to really be practical in terms of transfer assets in and out of these rollout ecosystems, we need the asset transfers to be much more efficient. If you go through the l one every single time, it becomes extremely expensive. And there's basically two solutions. We can either do batching, you have these mass deposits, or we can have some sort of shared deposit layer with a minimal verifier who only is responsible for the assets and not the rest of the logic. Thank you so much. I think this could be a great discussion starter for offline discussions or future discussions on these.
00:39:11.020 - 00:39:27.630, Speaker B: I created the group. I will share a link in this chat here, and then can guys add anyone else who is not participating in call and maybe we can start discussing there? I think this would be an important addition to the work in parallel to shared sequencing to make sure that we're making.
00:39:30.500 - 00:39:57.030, Speaker A: Okay, perfect. Thank you Alex. We'll make sure to include those in the PM notes on GitHub. I guess now is the time for some announcements and updates and teasers from various teams doing cool stuff. So I guess I'd like to invite Espresso first to give a three minute pitch on what they've been working on.
00:39:58.520 - 00:41:01.500, Speaker G: Sure, Justin, I don't think I really need three minutes, but I and I was able to highlight this a bit in the context of Alex's presentation as well. But what espresso is creating here is more of a marketplace for roll ups, sovereign roll ups, to be able to participate in what I call ad hoc shared sequencing. And I know that there's been different debates on is there going to be value in shared proposers proposing for multiple roll ups at the same time? Maybe there's no value. I mean, this is something that Yi brought up in the chat as well. Maybe there isn't cross domain MeV I think the value in being a shared proposer for two roll ups goes beyond MeV. It goes to everything that has to do with pre confirmations, as we've been talking about. And maybe between some roll ups there won't be value in having a shared proposal.
00:41:01.500 - 00:42:22.848, Speaker G: A marketplace is something that can determine this, right? You may have roll ups that are not selling block proposal rights because nobody is bidding on them and they're just producing their own blocks. You may have other roll ups which are selling their block proposal rights to common third parties that end up proposing for multiple roll ups at the same time. And this is the framework through which I view based sequencing as well, because base sequencing is a special case where the l one proposer is able to create surplus value for roll ups by being able to simultaneously construct l one blocks and roll up blocks at the same time. You might have some roll ups that don't benefit from that right? You might have roll ups that really don't benefit from synchronous composability with l one contracts, in which case those roll ups may not end up selling their proposal rights to the l one proposer. And you know what? Maybe those roll ups will at some point find that there is a reason in some slot to do this, and that may dynamically happen. So, all in all, espresso is really viewing this as, let's just create a marketplace. What does a marketplace require? Well, it requires coordination at the level of we can advertise our block space.
00:42:22.848 - 00:43:09.030, Speaker G: And if some common proposer is able to buy block space from multiple roll ups at the same time to become a shared proposer, then that needs to be recognized. So we need some kind of finality over that. What enables the l one proposer to be able to participate? Well, the one tricky thing is that if you run this marketplace too far in advance, then the l one proposals aren't known, right? So on the other hand, if you don't run the marketplace too far in advance, then pre confirmations a, you have less time to run kind of this sale process, and so that you might run into efficiency issues. And also you give less.
00:43:10.760 - 00:43:11.188, Speaker E: Of a.
00:43:11.194 - 00:44:31.360, Speaker G: Look ahead time for parties to start giving out pre confirmations of what they're going to do during their turn. So if you want to run pre confirmations further than, say, if you want to run this proposer marketplace further than 32 slots in advance, then you can always just give the l one proposer what we call a right of first refusal, which is the ability to buy any proposal rights from any other player when it becomes known that this will be the L one proposal. And so finally, what makes a roll up, a base roll up versus a non base roll up within this marketplace is simply their decision on whether they are going to reorg with the l one. So allow the latest l one block to have an impact on the roll up versus not reorgang on the l one. If you don't reorg on the l one, you could still sell your block proposal rights to the l one proposer, but it would not allow for synchronous composability with the l one. The synchronous composability only comes from the ability of the l one proposer to simultaneously construct the l one block and the l two block in such a way that actions it takes in the l one block can actually have an impact directly on the roll up. You can do a deposit and withdrawal, let's say, from the roll up in the same block.
00:44:31.360 - 00:45:06.270, Speaker G: It also relies on real time proving, or perhaps something like proof aggregation, as long as we can get it down to less than 12 seconds. So that's a quick summary, and I'll be posting. I've shared the preliminary version of a hack MD post that describes this idea in this channel multiple times, but we're actually just publishing a blog on this today. It should have already gone out, in fact, and I'll send the link towards the end.
00:45:07.760 - 00:45:20.930, Speaker A: Perfect. Very exciting. Looking forward to read the blog post and we'll add it in the show notes links, I guess. Next up for real quick teaser is Alex from the ultrasound team.
00:45:22.100 - 00:46:12.096, Speaker H: Yeah, hi, yeah, I'll keep it really short and just share what we as ultrasound see for areas where we can contribute. I'd say we're very much like in the exploring phase for how to contribute to this and interested in building or helping build an mvp of doing this. So I'd say like pre confirmations where they sit really close to the block building and pricing, especially the tips. It'll require a lot of hardware, a lot of specialization, and that's not something that all proposers will have equal access to. And as a proposer, you'll have to pick a party that you're doing these pre confirmations with. And then even if you only know relays for how we're trusting them, and that's what you don't like them if you want to minimize trust. Relays are already this party that many proposers are looking at closely to decide whether they trust them.
00:46:12.096 - 00:46:55.032, Speaker H: And then this is a role that a relay could fulfill as well. And then, second, of course, is reliability, especially if on the user side, we get very used to having these very quick pre confirmations, but also just for the MeV to arrive uninterrupted, to make sure that block builders are informed on what transactions are pre confirmed. And then finally, of course, this product that they build together that lands on chain. This is all stuff that you want to be done very reliably. I think we recently hit like a million blocks, landed so very happy with that. Reliability seems to be important. I also imagine I heard censorship resistance came up in protocol much nicer.
00:46:55.032 - 00:47:41.564, Speaker H: But it would of course be very unfortunate if one of the most successful, one of the most liked pre confirming parties is also the one that likes the censor a lot. So I think that's another area that we take very seriously and where we might be able to contribute by following the Ethereum ethos of doing something about censorship. Also the pricing of pre confirmation tips, the rebates that people might get. Relays are maybe not the party to do this, but we're already connected to the parties that might be really good at this, the block builders. So I see that as a benefit, and maybe relays might even be able to facilitate a sort of neutral tip rebate auction mechanism. I think that could be really cool.
00:47:41.762 - 00:47:42.124, Speaker B: Yeah.
00:47:42.162 - 00:48:09.030, Speaker H: Finally, if you, as a proposer, want to unlock these things for the Ethereum network, the virtually instant transaction pre confirmations, the better composability, the better atomicity, and then you're going to need some infrastructure to do that. And then if you want that to be infrastructure that you can trust, minimally, we want to at least allow proposers to be able to do that with us. I think that summarizes it.
00:48:10.040 - 00:48:36.796, Speaker A: Perfect. Thank you, Alex. Next up, I want to give you a quick announcement on some of the events happening in London in the next few days. So on the twelveth, 13th, 14th, and 15th, there's four different MeV events. So it's going to be a packed week ahead of east London. So if you are in east London, please send me a DM. The one on the twelveth is MeV market.
00:48:36.796 - 00:49:28.360, Speaker A: On the 13th, there's an event that's kind of tailored for the roll up project. So if you're part of a roll up team, there will be a whole day of workshops dedicated to base sequencing and based pre confirmations. And we have most roll up projects represented, most of them actually, with their founders coming. So if you're part of a roll up team, but not yet coming, and you are in London, please send me a DM. And then next up, we have George from Lime chain, who will be talking about his new design. Teasing based tickets. George, I think you're muted.
00:49:33.500 - 00:49:33.924, Speaker B: Sorry.
00:49:33.982 - 00:49:35.310, Speaker D: Yeah, you see my screen?
00:49:36.640 - 00:49:38.030, Speaker A: Yes, we see it.
00:49:38.400 - 00:50:32.472, Speaker D: All right, we'll try to fit in in five minutes. So, for over the last couple of weeks, we've been working on an idea that we call the base ticketing roll up. It came out of several realizations. First of all is that we like a lot based sequencing roll ups. However, as we were exploring more and more about pre confirmations, we figured out that there are certain pieces of the concept that make it hard to start with this concept and also make it a little bit hard to actually adopt this concept. One of these things is, for example, the gap between l one proposers that are actually going to be l two proposers. And with the help from the folks from Skull named Lee Mo, we were able to come up with a concept that's called base ticketing.
00:50:32.472 - 00:51:20.552, Speaker D: And I'm going to give you the TLDR of this concept. It is essentially combining the base roll up with execution tickets concept. Any roll up can decide to offer two types of tickets. One type of ticket is called the proposal tickets. The other types of tickets are called the enforcement tickets. So the proposal tickets, the parties that hold the proposal tickets actually eligible to be drawn to be the next proposer of this roll up, the basic link roll up, and they can essentially propose the transactions list. The enforcement ticket holders actually have the rights to constraint the block that the block that the proposal ticket holder is going to propose.
00:51:20.552 - 00:52:35.216, Speaker D: So the enforcement ticket holders, the enforcers, can actually provide various UX services like pre confirmations, but not just regular inclusion pre confirmations. But they can now start constraining the upcoming block to things like post state commitments and even to stuff like universal synchronous composability. So if there are multiple roll ups that are based ticketing roll ups, if a single entity actually holds the proposal and or enforcement tickets of these roll ups at the same slots, they can actually ensure atomicity of both roll ups, and they can ensure the atomic execution and messaging between these roll ups. So this concept essentially tries to leverage the best from both base sequencing and execution tickets. Obviously there is much more than this. I'll throw the link to the first draft. We are currently supported by Ethereum foundation for this research, so all of our research is going to go live quite soon, even this draft.
00:52:35.216 - 00:52:53.500, Speaker D: We are pretty much halfway there in defining the various flows that are there and also exploring the various mechanistical infrastructure that is needed in order for this to happen and the changes around the MV pipeline. So yeah, stay tuned.
00:52:56.160 - 00:53:15.410, Speaker A: Perfect. Thank you. George. I guess we have a couple minutes either for questions or for another project. Who's been doing based sequencing stuff. Who wants to have an opportunity to present their work?
00:53:16.600 - 00:54:45.916, Speaker E: Mohammed, I just want to ask a few questions from the audience. So one is, when we talk about synchronous composability, are we talking about different rollups being able to synchronously read and write to the estate of the other roll up? Or are we just talking about this specific type of estate manipulation? That's sharing liquidity and transferring assets, which is only possible if we put that subset of state in very specific location. Because from the presentation of the Kalman and some thoughts shared by Alex, I'm not sure which direction we are going. And that's one. And second, it seems like there is some discussions in the chat around whether mev is the biggest thing we want to get out of this shared sequencing like crosschain meV, or whether market forces that are forcing us to do this shared sequencing are cross chain mevs and so on. I want to put this thought out that if we enable synchronous composability in the sense that we could manipulate the other chain state. Then we enable a new market force that makes shared sequencing very sexy.
00:54:45.916 - 00:55:27.390, Speaker E: And without that, it's quite kind of useless in my opinion. And it boils down to figuring out if we want this strong notion of synchronous composability or not, and whether this is in conflict with other. It was like censorship resistance and so on. I guess focusing on some layer for shared assets or easier transfer of assets is like missing the bigger point. I'm not sure. What are your thoughts about it?
00:55:29.760 - 00:56:24.796, Speaker A: Right, okay, let me try and answer those questions. So I guess the first one is, what is the definition of synchronous composability? And for me, it's the ability, as you said, for one roll up to have access to the state of another roll up to either read the state or to write the state. But this is not done explicitly in the sense that there isn't like one transaction that will. It can't have roll up a within its own roll up a transaction read and write state to roll up b. Instead, you have this notion of a supertransaction, which is the concatenation of subtransactions. And each subtransaction is specific to one single roll up. And the synchronous composability is basically simulated or emulated or given to you by the shared sequencer, because they have monopoly rights to sequence on all the roll ups.
00:56:24.796 - 00:57:21.280, Speaker A: And so they can make sure that these subtransactions within a supertransaction are all as they should be. Now, in terms of reading the state of another roll up, this is done trustlessly using snocs. So when you have real time settlements, you can pass the state route plus a stock, proving that it's correct. Now, in terms of, I think the second question, which is, are we going for just simple asset transfers, or are we going for something much more expressive? We're going for the thing that's maximally expressive. So you can do arbitrary calls from arbitrary contracts between arbitrary roll ups. So it's a little bit like today where you could have any contract called uniswap or AAVE and have an immediate and synchronous response. But all of that is simulated economically.
00:57:21.280 - 00:58:06.320, Speaker A: And so users have to pay for the overhead of synchronous composability, which could involve adding locks. So if you have a super transaction over roll ups a and b, that is blocking both roll ups simultaneously while the user is going to have to pay gas on both roll ups while that super transaction is being executed. Even though internally to the super roll up, there's only one transaction that's executed at a time. And so that's going to lead to a market where basically you have the sequences selling synchronous composable locking mechanisms, and you have arbitragers and users and whoever it is who will be buying those virtual locks.
00:58:08.740 - 00:58:51.576, Speaker E: Just one more thing. I want to also say that it's not necessary that we have this super transaction kind of design necessary. From my perspective, there is like this strawman construction, I call it intermittent fusion. Like say all the roll ups agree on some very simple VM, and this VM is some extension to their VM rules, or some subset of them. VM rules, all of them agree with. And every ten blocks, or every 100 block, or every once in a while that somebody is able to pay off all these roll ups. This small VM comes into play and manipulates the estate with some values written somewhere.
00:58:51.576 - 00:59:07.910, Speaker E: And they all finalize on this intermittent, fused, like a small VM. I'm not saying that this is a perfect design, but I'm just saying you could have a design without super transactions per se that does this, I guess.
00:59:09.240 - 00:59:39.640, Speaker A: Yeah, I mean, I think this is what the asset verifier is all about. You have like a minimal VM which only handles asset deposits. I think that's the Zksync idea. One of the downsides of sharing vms is now suddenly you share bugs, you share security assumptions. And so really what you want is have very clean boundaries between the roll ups, so that each roll up has different security assumptions and has its own independent governance and whatnot.
00:59:41.260 - 00:59:42.200, Speaker D: Excellent.
00:59:43.300 - 00:59:44.050, Speaker B: You?
00:59:45.460 - 01:00:02.130, Speaker A: Perfect. I think we're at the hour. So the public call is finishing now, but we have half an hour of after discussion. So I guess I'll open it up to the floor to whoever wants to bring a topic up.
