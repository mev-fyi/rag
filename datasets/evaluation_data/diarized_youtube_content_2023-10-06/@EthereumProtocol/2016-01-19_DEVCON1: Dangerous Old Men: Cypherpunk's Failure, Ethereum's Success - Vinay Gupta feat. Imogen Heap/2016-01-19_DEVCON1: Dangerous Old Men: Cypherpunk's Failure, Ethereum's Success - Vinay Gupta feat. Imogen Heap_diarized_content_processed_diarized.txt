00:00:18.500 - 00:01:10.716, Speaker A: Hi everybody. So I'm going to try and do a summary of basically my entire adult life as it's related to cryptography. So I was the kind of archetypal teenage cypherpunk in the 1990s. I was tangentially, very quietly involved with an organization called Crypto Rights, which was doing software to get human rights abuse date out of China around 1997 or 1998. Heavily involved in the egold economy. Once upon a time, I had a bearer share append only general ledger based stock market, which was all done by Perl scripts that would shell out to GPG to do the actual encryption, multiparty computation kind of stuff. But in those days, there was no decentralized hash table, so you really couldn't push it the rest of the way.
00:01:10.716 - 00:02:32.200, Speaker A: I think even hash cash hadn't been invented at that point. There was a period of my life when the same kind of optimism and forward thrust that you now associate with the blockchain was associated with just private key cryptography. We really thought that asymmetric key in the form of HTTPs and GPG was going to provide us with all the tools that we needed to completely change the world. And we were entirely confident of this, and we were absolutely sure that it was a dead cert that you were going to see this spread of civilian cryptography, and that you were going to see the kind of cipher nomicon vision of the fading away of the state and the replacement of the sort of government run domain with a citizen run domain as a historical inevitability. And that period of certainty ran right up until about 911, at which point people began to seriously question viability of that vision. And then everything had a ground to a halt, really, until bitcoin. So what I want to talk about a little is what went right and what went wrong in the 90s crypto era in terms of the psychology and the politics of the crypto community and what we can learn from that about what's working with Ethereum and the process that restarted with bitcoin.
00:02:32.200 - 00:03:34.828, Speaker A: So the first thing that I'd like to do is the traditional evil show of hands. How many people encrypt 100% of their email? Okay? How many people could encrypt five or 10% of their email? Right. Thank you for helping traffic analysis. So the fact that even at this point in history, 25 years after the invention or the weaking of these codes, we still have a position in which even the technically elite don't encrypt all of their communications, tells us that there's a fundamental problem getting things encrypted. And if you're not getting the stuff encrypted, given that everything we know from Snowden, you're in a very direct sense feeding the beast in a manner that's as direct as taxation is. We're in a position where we failed to deploy even the first run of technical measures because we say it's usability issues, we say it's a software this, that, and the next thing. But the bottom line is it's lack of investment in public goods.
00:03:34.828 - 00:05:09.436, Speaker A: And this is the first kind of platform problem that 90s vintage cypherpunk hit, which is we had no really clear model of how one would do investment in public goods inside of a cryptographic sort of community worldview. If you think of there as being an us, and that us was the cypherpunk movement. The cypherpunks had no model of how you funded public works, because the only thing that you could really do at the limit of possibility was put all of your money into an e gold account and trust the person running the egold account not to emigrate to Bolivia with the proceeds. So if you can't fund public works in a collaborative way, it's almost impossible to build infrastructure because you just can't pool enough money. And if you've got to rely on state functions like charity to build something that has the ability to accept those funds, you wind up inside of a regulatory environment that can be very hostile to the kinds of things that people want to build and the sort of platform nature of large scale software engineering where you need a lot of people working together for a long time before you could get the kind of breakthroughs in usability or security or convenience that result in kind of step function jumps in adoption. The inability to get those step function jumps in adoption comes from the inability to keep teams in the field long enough to finish jobs. You all saw the stuff recently about was it openssl that had been on half a programmer for years and was riddled with bugs, and GPG was in roughly the same condition.
00:05:09.436 - 00:05:58.144, Speaker A: This is what I mean about the failure to be able to do public works, because you just can't get enough people together to work on it for long enough. Mailpile was the most recent major effort to get a shot at long term sustainable creation of an email client that would be able to make everything easy to use so we could get mass adoption of encryption. Didn't manage to get that done because they could raise money at the beginning of a project in a spike. But then after that, you get a kind of asymptotic decay of the donations. And if that long tail doesn't happen, if you hit the long tail on donations at the point where you no longer have full heavy engineering to do, you could go into maintenance mode. But if the heavy engineering isn't finished, then the project stalls. How many half complete, really clever crypto projects are there in the world? 60.
00:05:58.144 - 00:07:37.890, Speaker A: If you talk to the redescentralized people, they have an enormously long list of half complete cryptography projects that they're trying to figure out how to get finished. So this is the first large failure of cipherpunk that we didn't manage to sort out, which was we didn't manage to do sufficiently heavyweight funding of public works, and we didn't keep the money flowing in after the initial push was made, which results in projects going into maintenance mode and then getting locked into this kind of long, slow decline as the donations begin to decrease. Now, of course, the classical way that governments solve that problem is through taxation, but for us it has to be solved through ongoing donation. So projects like Ethereum, we've already established a pretty good model for the initial cash dump that gets the project started, but you'll always have this problem that continuing to raise funds is difficult. So one of the things that I want to suggest as a key challenge is how do we make sure that you have an ongoing funding stream which is funneled into a variety of projects, some as maintenance modes, some of creation of new systems, but with the perspective that what we're doing is funding public works to create a new world. And what I'm suggesting here is essentially that for the cyberpunk movement to succeed, what we needed was voluntarious taxation. We needed people to put a tithe of their income, maybe 10%, as an allocated preordained amount that would be spent building a future in which people had liberty, and that if you don't make those kind of long term structural funding decisions, you wind up in a position where the tools get built and then they don't get maintained, and if there's a bit of an overrun, you end up without the tools at all.
00:07:37.890 - 00:08:38.492, Speaker A: Obviously, Ethereum is in a position where we did a very large rage initially and have shipped an enormous number of tools. But you note that the business plan was that we would spend the money to build the stuff. And then after that there were a series of large question marks about how we would sustain the foundation. And that is an example of a situation where we've got the social fabric required to do large spontaneous raises, but we don't yet have the institutional consciousness among ordinary people that they have to continue to donate if they're going to continue to innovate. So this is the first major challenge, funding of public works. And it's obvious that what I'm really discussing here is DAP based donation systems, where you can subscribe to a set of projects and can continue to inject money into those projects in an ongoing way. I'm also talking about dao based governance of those public works infrastructures, because how else are you going to stop know? Chief programmer departing for Bolivia with the eagold.
00:08:38.492 - 00:09:20.240, Speaker A: Not that that ever actually happened, but the kind of thing that could. Does this all make sense as a kind of starting piece? This is the first of three ideas that I'm going to outline in checking the time. Yeah, we're okay. This will still work. So second piece I want to talk about is the great devil, which is identity infrastructure. Could anybody raise their hands if they're working on an identity project? Right. How many of you knew that the other people that you were saw raising their hands are currently working on identity projects? Okay, everybody who's working on an identity project, come and meet me at the podium at the end of this talk and say hello to all of your compatriots.
00:09:20.240 - 00:10:22.064, Speaker A: The idea that identity is going to turn out to be a simple problem where a small team can write a bunch of code and have a bunch of breakthroughs, and at the end of that process we'll have fixed identity is so far an unproven hypothesis. What I do know is that there must have been 60 or 100 teams that tried that, and we still have only two pieces of globally deployed non state or parastate identity infrastructure, maybe three. So the first is the GPG web of trust. Does anybody feel really confident they understand everything to do with the GPG web of trust? Right? Point is a good one. So at that point, if in a room like this, nobody's 100% on how the web of trust works, including me? I'm not sure. Well, because there's all this fussy stuff about validity of revocation certificates and multiple levels of signatures. How do you set the parameters for tertiary? It's nightmare.
00:10:22.064 - 00:11:02.208, Speaker A: Right? So the fact that nobody understands GPG web of trust well enough to stick their hand up in the air and say, I can explain it, tells you that it just didn't work for people. So we've got key servers with enormous numbers of keys just piled up in them and very little verification of those keys. People do key signing parties at hacker conventions even now. But this is almost entirely a cargo cult activity. We get together, we look at each other's passports, we sign each other's keys. The keys go into the key servers. But because the trust model is so poorly understood, all that really happens is that people go to the key server, download the key that has the most signatures, decide it's valid, if they even do that right.
00:11:02.208 - 00:11:37.020, Speaker A: Most of the time you actually get the key by taking a look at the fingerprint on somebody's business card. And that's just about all we do. The other one of these is the X 509 infrastructure. X 500 was a telephony standard. X 509, I think originally was a certificate structure for secure telephony, something like that, hierarchical certificate chains where everything is signed by everything else down these pyramids currently instantiated is HTTPs. So everybody is using websites with HTTPs to verify their digital signatures all the time. For all the credit card transactions.
00:11:37.020 - 00:12:39.692, Speaker A: 1500 certificate authorities recognized by the major browsers. Last time I checked, lots of fake certificates that have been issued because of people spoofing identities when they went to a registrar in a small country. Or they got a Unicode, a certificate where you've got a Unicode letter, so you got a Microsoft domain that looks like Microsoft, but one of the characters is Unicode. All of these kind of things, that infrastructure is rotting out to the point where somebody sneezes hard, it will completely collapse. And as a result, we might be left in a situation where you can no longer give credit cards to anybody on the Internet. Not that you really feel like doing that anyway, because what we've discovered so far about security on the other side of the net means that generally speaking, I at least am very reluctant to give a credit card to anything which is not Amazon, right? Because we've got such problems with security on the processor side, on the e commerce side, we're getting into a position where we're trusting the large brands again, essentially like a cargo culp. Well, these guys are so big, there's no way they could get hacked.
00:12:39.692 - 00:13:22.460, Speaker A: Amazon is not going to wind up at Ashley Madison, is it? But at that point, we no longer have a technical trust infrastructure. What we've got is a brand trust infrastructure which is completely cargo cult, right? We're trusting the big guys to be competent, and therefore the big guys will continue to win. It kills innovation. Stone cold dead. You just wind up with monopoly platforms, processing payments because they're security monopolies. Does that sound a bit like a state to you? Right, a security monopoly which exists as a brand because you don't trust anything else to process your payments. That's essentially the core functions of the state, reinstantiated as a technology company that processes credit cards securitization.
00:13:22.460 - 00:14:26.604, Speaker A: So how did we get into that situation? Bunch of cipherpunks in the late 1990s, the one that I knew personally was a guy called Samir Parquet, who later on became a marine, or at least tried, sat down and decided that they were going to build a certificate processing web server that would take advantage of all this new technology called HTPs. They started a tech company that was going to revolutionize payments on the Internet, and they were one of a few companies that succeeded in producing secure web servers. The certificate authorities stood up, and 15 years later, one generation later, that entire system has essentially become bankrupt. We just can't trust the certificates, and we can't really trust the browsers because they've become so complex that you can poke holes in them really easily. And we're in a constant cycle of playing catch up with people, producing zero days. So what went wrong? Right, two things. First thing is, we wound up in a position where when the trust systems began to corrode, we didn't build new trust systems.
00:14:26.604 - 00:15:33.944, Speaker A: So the first time we began to see actual use of fake certificates in the wild was a position where we should have stood up and done something about it and built a second version of the certificate infrastructure that didn't have those problems. And there were plenty of proposals for things like pinned certificates and other things along these lines, but we didn't actually get much of a push behind that, even in the technology community. And as a result, we just allowed the certificate authority infrastructure to degrade over time and to result in a position where you cannot rationally trust HTTPs anymore, except on large sites with big security infrastructure behind them. The second thing that goes wrong is that we provide a solution to the corporate world in the form of HTTPs, but we never build a solution for individuals. So what happens is you get this kind of pyramidal certificate deployment structure, which in theory was going to support a whole bunch of stuff around what they call client signed certificates, which would have extended that privacy to us. So I hold up my certificate and I show it to the web server and say, I want you to encrypt your communication with me with this key. And that tells you who I am.
00:15:33.944 - 00:16:15.460, Speaker A: And if you poke around in your browsers, you will find that almost all the major browsers still have this legacy support for client side HTTPs certificates, client side X 509 that nobody ever uses for anything, even though it's actually really powerful stuff. Why? Usability issues, essentially. So over and over and over again, you'll see this pattern repeat. A bunch of guys hack together a solution. It's good enough for industrial use. It doesn't have the right set of business models to be able to sustain itself. So it goes through a spike of initial capital investment, and then as the capital spending begins to slow down, you wind up with the base infrastructure corroding.
00:16:15.460 - 00:17:06.804, Speaker A: HTTPs is an example of that. Not so much because they ran out of money, but because they ran out of smart people just stopped caring and paying attention because it was a technology that worked and everybody stopped being worried about it. Can you see the parallels to what we're building now? Sure you can. How do we make sure that you continue to get ongoing investment in the fundamental security work underlying Ethereum, such that we don't wind up in a position where the system becomes insecure and kind of rots out because all of the attention is going into something else? Right. Spike of funding at the beginning, long term maintenance problem. GPG, openssl, question mark, question mark, question mark. Could Ethereum go the same way? The hope is that a technology that's being used by hundreds of millions of people every day would be in a position where it wouldn't rot out.
00:17:06.804 - 00:18:01.716, Speaker A: But OpenSSL is an extremely strong indication that a security technology without an ongoing business model that generates support ceases to be a security technology. Because without a constant injection of the entire lives of very smart people, security technologies degrade. You don't just get them right and walk away. You need constant innovation and constant watchfulness for them to work. And we're in a position right now where we need to structure the Ethereum effort in such a way as we avoid this core lesson of the cipher Pankira, which is if you don't figure out how to pay for the maintenance and the continual reinvention of your tools, eventually your tools are no longer trusted. Right. We must secure the base, and that means public works style spending going into the core understructures that pay for the ongoing development, but especially the maintenance of the core technologies.
00:18:01.716 - 00:18:39.220, Speaker A: This is the core lesson. I'm going to talk very briefly about user interface, and then I'm going to come to the third hypothesis. So everybody knows that user interface on security sucks. However, the problem with user interface on security is usually that the security model sucks. And there's no way to take a security model that sucks and then put your layer user interface over the top of it and make it not suck. So in GPG, the suck is produced by the fact that you cannot directly attribute a key to a person. You have to go person to email address, email address to key.
00:18:39.220 - 00:19:11.310, Speaker A: So you have a two step mapping problem. And building a user interface for a two step mapping problem is a nightmare. What you actually wanted was a simple mechanism, human being, to key. And then I take the key and I look up a server, and the server tells me what the delivery mechanism is that is attached to that key. So you have essentially a key server. I sign an instruction that says, send all the messages to this key that are in email format to this address, and all messages for this key, which are in trap format to that address. Does anybody know about a thing called.
00:19:11.310 - 00:19:50.890, Speaker A: It's a thing invented by a guy called Blaine Cook, who was, I think, the first CTO for Twitter. He certainly wrote a lot of the early Twitter stuff. And Blaine has a technology called Webfinger, which basically is a method of finding all of the entry points for communicating with somebody using a simple protocol. And something like Webfinger for crypto would allow you to do this kind of very elegant management of, I want to talk to this person. This is the key. I then identify all the different methods, the endpoints for communicating them automatically. Then you could continue to innovate from technology to technology for communication, but keep the same identities in the key space.
00:19:50.890 - 00:20:55.756, Speaker A: All of these usability problems, when you drill all the way down, turn out to be conceptual problems, viciously complicated methods of thinking about the security problem that result in terrible, decadent user interfaces. You have to get back to the absolute, primal fundamentals of security design if you're going to build toolkits that ordinary people could use. How many people want to see a world with mass adoption of cryptography by civilians because they're using smart contracts and dapps? If so, you've got to nail down exactly what you're trying to build, because you cannot fix the conceptual problems in security at the user interface level. They have to be fixed at the fundamental level, simple queer thinking about the core idea resulted, simple queen interfaces. The way, the truth and the light on this is a standard called SPKI, simple public key infrastructure, but lost out to both the GPG web of trust and the X 509 infrastructure. But it could have fixed both problems. Now, the final principle that I want to talk about is generative complexity.
00:20:55.756 - 00:21:57.700, Speaker A: And this is quite slippery and hard to describe, but I think it is a fundamental analytical tool for framing the difference between systems that live and systems that stall. So the cipherpunk vision was essentially that individual to individual communication was going to result in the magical ability to construct increasingly complex social structures that would eventually rise to the point of being institutions. And the problem with this approach is that it just doesn't work. It ain't that way at all. Anytime you want to build an institution, anytime you want to build a game with rules, if there's any degree of complexity, you wind up building things which are meta structures on top of your initial core structure. So a typical meta structure would be a game of soccer in which you have a referee. Refugee, sorry, game of soccer in which you have a referee, right? If you're playing cards, you might have a dealer.
00:21:57.700 - 00:22:54.464, Speaker A: If you are playing chess, you would typically have adjudicators and guys that manage the clock timers and all the rest of this sort of stuff. Those kind of functions, if you're dealing with software, are played by software. So if you've got mailing list, the mailing list is a peer structure, but you also have this meta structure which is automated, which is the list manager software, and that handles subscribe, unsubscribe, ban, spam catching and a bunch of other stuff. The Cipherpunk vision succeeded in building point to point communication tools that were theoretically effective, but practically speaking, awful for all the aforesaid mentions. But what they never built was any good tools for handling metacomplexity. So one of the big questions used to kick around in the late 90s was where is the encrypted mailing list manager and how will it work? I got 50 people on a mailing list. I want the mailing list to be fully encrypted.
00:22:54.464 - 00:23:54.904, Speaker A: Do I encrypt a message to the mailing list, which then decrypts it and recrypts it to those 50 people? Or do I encrypt it to all 50 people, client side, and then send it to the mailing list manager and it sends it back out again, right? And I don't remember that anybody ever wrote an encrypted mailing list manager that worked in either direction, right? There were some little fiddly problems, like you had to get the mailing list with all of the keys sent to the person that wanted to send the message in such a way that their mail client was able to interpret it correctly to do the key management for sending all the stuff back out again. And that sounds like a trivial little problem, but it was a trivial little problem that meant that we never got an encrypted mailing list manager that worked. Can somebody find me some water just. Oh, here we are. Found it. It's here. So you get into this position where you have an encrypted mailing list manager problem that stands for year after year after year after year because it's got hard user interface problems, because it's encrypted email.
00:23:54.904 - 00:24:49.960, Speaker A: It's a public works issue that nobody cares enough about the problem to sit down and solve it because it's actually quite tricky. And nobody's pooling money in a way that will allow them to gather the funds to get at that problem. And as a result, you wind up with this entire kind of cypherpunk fantasy world being run on unencrypted email, over mailing lists that always had terrible problems with things like civil attacks, sock puppets. Now, what we have in Ethereum is frankly a staggeringly good, like by far the world's best set of mechanisms for building metastructures. It's like an endless swiss army chainsaw for building metastructures. And all the indications are that it's only going to get better at that job, right? You've got a whole bunch of people just wait, you think it's a swiss army chainsaw. Now, once we get blockchain scaling, it's going to be a swiss army lightsaber.
00:24:49.960 - 00:26:49.980, Speaker A: So we've got the ability to generate complex social machinery in the form of metastructures, and that complex social machinery in the form of metastructures should pay for the public works necessary to build the rest of the machinery. That all seems fairly simple, right? But this is what I mean by generative complexity, right? If you've got a set of systems that allow you to organize money, and you can then organize to spend money to do essentially tax like or type like payments into a set of pools, which are then managed by some appropriate set of structures, which then put the money into the hands of people that will spend their lives building more of those tools, then you've got the potential for an ongoing ecosystem which gradually grows in complexity. And I think that it's quite important to differentiate between DAP development in either a commercial sector or a charity sector, with DAP development, which is essentially public works, because public works money looks really different from investment. It looks really different, because what supports it is a different social contract between the people building the public works infrastructure and the people that are actually doing the support of the core structures. So in the future, it would be very interesting to see if we could create a situation in which much of the utility stuff that we need every day to operate in this set of systems was simply maintained by a public works process. And I think that that might be one way of squaring the circle, because we're in a position where very few of the funding mechanisms we've got access to really suit the public works use case, which was at the heart of the cyberfunk vision, and I think is still at the heart of the Ethereum vision. We would all be deeply uncomfortable if the core of Ethereum was actually commercial, proprietary software.
00:26:49.980 - 00:27:38.748, Speaker A: And the only reason it's not is because we raised enough money to get that core built while we were still on the spike fund. But in the long run, what we'd like is the ability to chip away at these problems over time and build more and more interesting things. And I think that's only going to happen if we can figure out how to keep the people that want to do public works building doing public works. Does this make any kind of sense at all as a system? And we've got this fantastic set of architectures for doing public works systems. So what I'd like to suggest is that as we kind of move forward in this, we pay attention to these core lessons. Right? We understand that keeping these systems running is as much about social compact and social contract theory as about a given piece of technology. It's about ongoing, continual innovation.
00:27:38.748 - 00:28:29.584, Speaker A: It's about cooperation between open source, between commercial enterprises, between charities, individual activists and everybody else. But if we're going to build this kind of, kind of road to the future stuff, you wind up needing systems which look a lot like local government. We have a bug in this piece of software. Who has assigned this bug? 38 million people are using this piece of software. How do we make sure that the core team are appropriately paid? If it is something that inherently doesn't have a business model that will allow you to raise a bunch of money and then spend it carefully, how do you get into position where you can keep this kind of stuff running? And this is the kind of core message at the heart of what I'm saying. The cipherpunks had nothing between open source and proprietary. And as a result, they took on the challenges which would have made them kind of sort of peer to government, but didn't have the staying power to finish the job.
00:28:29.584 - 00:30:01.420, Speaker A: Which is why there was a ten year dead period from 911 until bitcoin. And what bitcoin created, because it put an enormous injection of capital into this space where people write in code to ensure human freedom was it created this enormous spike of innovation, and we're in the middle of the ongoing boom period produced by that spike. The fortunes made in bitcoin turn into the basic core infrastructure funding for Ethereum, and we continue to roll that forward. The stuff is becoming more sustainable as dapps become businesses, and hopefully those businesses will reinject some portion of their proceeds into the maintenance and the ongoing work on the infrastructure. But if we can use this wonderful metamachinery that we have to build a social contract that allows us to continue to put funding in at the core, this is how we generate the staying power to get right the way down the rest of the path and build what we all want, which is essentially a world in which we've got non state public goods which cover the needs that humanity has, that the states have never been able to fulfill. And maybe in the long run we find more efficient ways of doing a lot of the jobs that the state currently does, so that we can leave the state to do the hard work that nobody else seems to know how to do, like running public health systems efficiently, but get it out of the areas where it consistently underperforms, which is pretty much everything else. So I think I have two more little points, and then we should stop and take a couple of questions, and fingers crossed, somebody very special should arrive in a taxi immediately thereafter.
00:30:01.420 - 00:30:52.972, Speaker A: The two little details I want to refine are this. When I say social contract, I don't necessarily mean smart contract. What I mean is the willingness of ordinary individuals who are making a good living out of these ecosystems, to invest their money, some of their discretionary spending, in supporting the people that are dedicating their lives, to keeping the platform infrastructure healthy and existent. Right. There's a real need for people to continue to plow into that work, a lot of which is frankly quite dull and very, very difficult. And on the other side, the innovation work associated is often quite obstruse and highly technical, and you never know whether you're going down a rabbit hole or a vein of gold. So it's about a creation of a conscious willingness to put back our winnings from these extraordinary games that we play into the machinery that allows those games to exist in the first place.
00:30:52.972 - 00:32:02.640, Speaker A: Right? How do we make sure that Vitalik always has a team of guys and girls to get to the bottom of the questions that he's interested in that day? It's a pretty simple question, let me tell you. The people that have been trying to answer that question are having a hard time with it. Second piece of this, how do we get into a position where people understand that although we are extremely diverse in our politics and everything else, there is a fundamental sense that we know that a better world is possible and that these tools are in some sense common human assets, in the same way that Wikipedia is. I'd really like us to see a firming up of our relationship with the other great public works, global public works processes that the Internet has produced, so that people understand that Ethereum is a project like Wikipedia. It's a global public work, it's a global public good. And language like the world computer language is excellent for communicating the idea that it's a single global system. What I'd like us to do is build out the rest of the story so that five years from now, or three years from now, when you ask an ordinary person, what is Ethereum? They frame it as being something like Wikipedia rather than something like oracle.
00:32:02.640 - 00:32:42.428, Speaker A: So that's it. That's what I had to say. Thank you. Before we totally conclude, does anyone have a question or two for Vinay? Hey, Ian, where'd you go? Find a question. Ian, can you find out when she's arriving? Come on, somebody has a question. Don't be afraid. I won't bite.
00:32:42.428 - 00:33:41.644, Speaker A: Hard. How do you drive global adoption? How do you get the people using Ethereum? Okay, so question is, how do we drive global adoption? I think the answer to that, frankly, is that if we knew how many people were using Ethereum right now, we'd probably observe that it's doubling something like once every three months, right? I suspect that if we had actual numbers and we were measuring the right things, so it might be the number of people that are sitting in their bedrooms hacking away on a chunk of solidity code that they're running on a test net. I suspect that that number is doubling every three months. If it's spending in the space by larger institutions, it could well be doubling every three weeks. I mean, it's just crazy how fast people are pouring into the space trying to buy knowledge and expertise. I think we're worrying a little bit too much about adoption. Oh, fantastic.
00:33:41.644 - 00:34:12.664, Speaker A: Come on, they're mic in there. So I think we're worrying too much about adoption and not enough about fundamental value. Once we get dapps that people can use, the real adoption questions will be about getting people to use the Dapps. But right now, I think in terms of adoption of the technology, we're basically getting adoption like a house that is burning. The thing is just covered in fire right now. Everywhere you look, something goes. So I don't think getting people to use the technology or invest in the technology is the hard part.
00:34:12.664 - 00:35:07.864, Speaker A: Once there are usable daps that we want people to get using, I think all of that will change. Yeah. Okay, one more short question, and then we shall do the fun thing. So who's going to set up the target? The place where we tithe 1% of our wallet spending or whatever? Where does that go? And who's going to tell us where to point that? Well, okay, so question is, how do we know who gets to direct where the 1% is gathered and what it's done with it? So we have a very fortunate thing, which is that Vitalik acts as a center of political legitimacy for the entire show. So. Right, she's here. So one possibility is that Vitalik basically gives some kind of a steer in that direction as people get their acts together and sort it out.
00:35:07.864 - 00:35:47.568, Speaker A: On the other hand, Vitalik generally hates politics. So maybe somebody needs to come up with a solid proposal, and then he can basically choose not to turn it down. But this is the core question, right? Are we a democracy? Are we a monarchy? Are we ruled by a theocrat? First church of Vitalik veteran so that's a question of fundamental politics, and I think that's a question for us to have a bit of a think about. How do we want to do these things right now? Special guest. Come on in. How are you? How are you doing? I hope you don't look too bad. Fabulous.
00:35:47.568 - 00:35:56.424, Speaker A: Hi. So how do we want to do this? Do you want to talk to us in slides, or should we do a little Q A or do you want to talk to the people? What do you like to do?
00:35:56.542 - 00:36:03.390, Speaker B: I don't know. I've literally just walked in from another event, so I have no idea what just was said. I hope it was good.
00:36:04.160 - 00:36:05.964, Speaker A: We just finished up, so your timing is perfect.
00:36:06.002 - 00:36:12.972, Speaker B: Okay, cool. So, yeah, Vinay, actually, I've known Vinay for a few years, actually. What's that?
00:36:13.026 - 00:36:14.088, Speaker A: Early days of Twitter.
00:36:14.184 - 00:36:15.700, Speaker B: Every days of Twitter. Early days of Twitter.
00:36:15.720 - 00:36:17.490, Speaker A: The early Twitter parties who did here.
00:36:19.940 - 00:37:20.064, Speaker B: Yeah. And it's only just in the last few months that I've been back in touch with Vinay on a more daily basis because of this sharing. This idea called mycelia. It was inspired by lots of different people over the know having conversations about, wouldn't it be nice if the music industry was like this or like this? And then kind of in the last few months, becoming aware, really, or the last half a year, becoming aware of blockchain technology? And really when I realized that the technology was here to enable music to be played and kind of verified and that that moment of play can come directly into a digital wallet of an artist was kind of mind blowing for me. I was like, wow. I didn't have to worry about banks, don't have to worry about record labels, don't worry about publishers. All of these problems that we have in the music industry of who owns what, who owns the copyright, the licensing, who was the writer of that song.
00:37:20.064 - 00:38:15.110, Speaker B: All of that stuff is like, one of the biggest problems in the music industry, because it's so complex over so many years of old technology, what new technology built on top of old technology, and again and again and again. So we're kind of left with this really messy business. And when I receive a statement, for instance, of some songs that I may have written a while ago that may have been on the radio once upon a time, I get that many, many, like, months and months later, and often have to get bank loans to kind of take me through the years sometimes, when actually it would have been very nice to get that money instantly. So I was also thinking that, obviously, we know there's lots and lots of music being made. Many millions of tracks in the world, 30 million apparently, online, even just on Spotify or iTunes. But we have to think about the next 70 million that are going to come just in the next ten years. Hello.
00:38:15.110 - 00:38:55.250, Speaker B: And that's a really amazing thing to think about, that there are all these legacy artists and tracks that the industry is built on currently. But what about all the amazing new music of the future? How can we help sustain the artists of the future to not have to have the problems that we're living in as a new artist? I don't know how they do it. It's so complicated. Even just as a kind of middle class artist, as I say, as Zoe kind of put it, Zoe Keating put it once the artist is not like the top 1%, but we're not starting off, we're somewhere in the middle. It's becoming increasingly harder to make a living from making just music.
00:38:56.100 - 00:38:58.644, Speaker A: If you like your slides, they're right here.
00:38:58.682 - 00:39:38.320, Speaker B: Thank you. So this concept by Celia. Yeah, it's not very new, I suppose, to many of you, this idea. So here we are. At the bottom, we've got Vijay, Afan, Sarah Michael, video director, Senheiser Audio company. So at the base layer, this is what I see as Mycelia, the artists, the content, the people that drive the creative content of the music industry underneath the hidden layer that actually, at the moment, we're kind of right at the end of the food chain, the artists and the musicians are the last people to get paid, and we are the people that most need the money because we're there. We're the musicians.
00:39:38.320 - 00:40:11.796, Speaker B: So it's imagining a very exciting world where here is my song, perhaps. So I call this Mycelia, like the system beneath our feet, these tens of kilometers of organic ecosystems, systems where mushrooms pop out of the ground. And obviously it works across great networks. So that's why I like the idea. My Celia. So here is a spore, and in this spore is what I now realize is a smart contract. But at the time, I didn't know that that existed.
00:40:11.796 - 00:40:59.944, Speaker B: So I was like, wouldn't it be amazing to be able to put up your music? And then in that, to be able to say, I want to pay this percent to this person, this percent to this person, and also in that information, I want to put, what was my inspiration? What are the lyrics? What's the music? What's the music video? All the people that were involved, because our listening experience, well, our experience with music in the days now is reduced to an mp3 squashed music file with no idea of the artwork or anyone who was involved in musicians. There's no way to look through that information. It is there somewhere in the world, but it's not on a database. It's gone to sleep. Hopefully you haven't either. Thank you. So these are the spores, and this is like my mycelium.
00:40:59.944 - 00:41:21.120, Speaker B: So these are all my different songs. And these are the people that enable these songs to get above ground. So here we have clicker. I've got a clicker. Have I got a clicker? Oh, do I not use that? No, just use that. Okay, so here we have mushrooms. So here we have Ujo.
00:41:21.120 - 00:41:54.680, Speaker B: We have Ujo here. And then YouTube, Spotify. So these are, I imagine, the services that live upon the nutrients of the music that we create. And so every time you, as the user, would like to find out about what's exciting, musically curated, ujo might find you some music, and you might discover Imogen heaps got a new track out. So all these know the people of the planet who like listening to music. We might have Johnny there. So he's like, oh, I'm going to listen to image.
00:41:54.680 - 00:42:25.204, Speaker B: And heaps new song. They play it through Ujo, but Ujo is going directly onto a kind of bass layer. So this is, as an artist, it's stopping me from having to go through. It's just really annoying to have to upload to or to give, to put it up onto YouTube, iTunes, Ujo, streamliner, all these different. All these Spotify, all these different places where I have each individual identities. I have a different biography, different press picture. It's often out of date.
00:42:25.204 - 00:42:46.652, Speaker B: It's often misrepresenting me. This way I could have all of my information, my current press pictures. It's like beaming out as a beacon, going, this is it. I'm Imogen heap, and here's my new information. And then all of these services could go, oh, thank you very much. I'll take the new biography and the new picture from Imogen. And rather than me have to put it into multiple different places, I put it into one place.
00:42:46.652 - 00:43:17.620, Speaker B: I put it into one place as the artist that's looked after and tended over by other artists and fans. It's a foundation, perhaps. Maybe it's somewhere that has bodies of people that really, really know what they're talking about. Like the featured artist coalition, who represent featured artists, kind of government level, fighting for our rights the different ways. So this is who I see as the kind of mercelial level. And then we've got the mushrooms and then the people. So then there we go.
00:43:17.620 - 00:43:38.360, Speaker B: I mean, I'm speaking to the converted here, right? Because you know all about this, but I did this for some other conference. So here we go. Writer, image, and heat, percussion scout. That's my young little one year old daughter. She played some little scrunchie things on the song. Cello. Might have been Zoe, trombone Simon and I can pay each one of these individually.
00:43:38.360 - 00:44:07.270, Speaker B: That's never been able to happen before, to be able to not have to write out checks, know, pay in advance, because that's often not possible when you're a musician. You don't have the money in advance. It means that people can be invested in you. Like, video director can say, I really love your work. And ordinarily, they might take five grand or 50 grand for a video, but if they really, really believe in you, they invest in you, so they take percent. So this kind of model, as you know, would help that. So here they go.
00:44:07.270 - 00:44:50.164, Speaker B: Somebody pays for something. And then I go to Sarah, and maybe Sarah is a fan and she's hosting the music, so she gets a piece of it as well. And then the video director, Michael, would get some of that. And maybe Andy, who's done the front cover design or all of the internal artwork, because you could do that in this lovely digital world that we live in. And then up it goes, the music and the pictures. And then, Billy, this is something I can't do at the moment, I'd love to be able to do it. I'd love to be able to say, anyone under 16 can have our music entirely free on all platforms, because that's what I would like as the artist and the services that don't allow that, then I just don't let my music on there.
00:44:50.164 - 00:45:16.172, Speaker B: So say, if I want to have Billy, he's under 16. Yeah, I want him to have my music for free because he's probably going to take it for free anyway. But I'd like to just give him it because why not? He hasn't got a job, so that's fair enough. So there we go. The hosting comes from Sarah and me, and maybe I give Sarah free tickets for concerts in thanks for hosting it, even though she doesn't get a payment out of that. And there we go. And then the next person might be Mary, who's over 60.
00:45:16.172 - 00:45:37.510, Speaker B: That's why she's gray. And maybe I would like her to have free music because she's worked hard enough as it is. And so I want to thank her and give her some free music. There we go. And that is basically the idea. And there you can see, I wrote a song with Taylor Swift that was very nice. She is one of the 1% that does make money, so therefore I actually can make some money this year.
00:45:37.510 - 00:46:26.752, Speaker B: And so she would then be connected to my mycelium because she would then divide up her payments from that song directly to me across the network. So that's basically it. It's just like, I know that we're at this really amazing time now. I know you guys have known about blockchain for eons, but I know that it's a real massive point in the industry, and music and technology are always, like, hand in hand, like, moving to the future. And each time the music industry adopts a piece of new technology, something incredible happens. And that's what's happening now. The blockchain and music are going to mesh together in beautiful harmony, but I just want to make sure from the artist perspective that what are kind of our concerns about the music industry are being heard at the time of developing these new tools.
00:46:26.752 - 00:47:05.070, Speaker B: So it's really amazing to be able to share this idea. So people are, if they're thinking about developing these technologies, maybe they could think from the artist perspective also that, wouldn't it be nice just to have one place we can just get on with writing music and just deal with all of these things so that we don't have to deal with them all? Yeah. And massive thank you to Vinay and the guys at Ethereum for helping me flesh out ideas and kind of opening their arms up to me with these ideas. And I look forward to working in the future with some of you.
00:47:18.920 - 00:47:21.556, Speaker A: Word from Vitalik before we end.
00:47:21.658 - 00:47:57.648, Speaker C: Thank you, Imogen heap, again, I definitely just want to thank everyone for coming for this entire week. I think it's been a great conference. I think it's particularly showed just how far the ecosystem has. The Ethereum ecosystem has come ever since last year's Defcon zero. Back when we were still about 30 people huddled up in this tiny little office that's 37 Voldemort in Berlin. And I think it's clearly showed that the Ethereum community has grown. It's attracted people from all parts of the world.
00:47:57.648 - 00:48:49.550, Speaker C: And one of my favorite parts about the space is just the sheer diversity, the quality, the different kinds of people that we've attracted. This isn't just about a currency. This isn't just about even one particular platform. This is a movement. It's a movement of software developers, of mathematicians, of political activists, entrepreneurs, social entrepreneurs, banking executives, and I think this week we've seen just about everyone represented. And the community, to me, is, I think, probably my favorite part of this whole thing. So thank you all and hope to see you next year.
00:48:51.440 - 00:48:52.720, Speaker A: Bye. Christmas.
