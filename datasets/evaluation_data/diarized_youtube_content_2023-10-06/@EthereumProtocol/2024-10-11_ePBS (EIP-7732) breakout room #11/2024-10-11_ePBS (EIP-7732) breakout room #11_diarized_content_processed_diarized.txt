00:00:00.360 - 00:00:36.343, Speaker A: Welcome to, I believe is the breakout. Room number 11 for EIP 7732. We have nothing on the agenda. I'll just quickly do our update on Prism. I opened the first PR for For Choice and it turns out that it's actually very hard. Not because of the logic in Fort Choice being hard, but the problem is that since it changes the way that we call head, it changes the way that we insert nodes into fork choice to make it compatible with previous forks. It's complicated.
00:00:36.343 - 00:01:12.241, Speaker A: We need to make two different calls. Even within say the Nav fork or Electra fork, we need to make two calls to Fort Choice when we are syncing a block. One's for the block and the other one for the payload. And doing this has made it very hard to implement because the PR becomes very large. You not only need to change the for choice logic, but in the same PR need to change the blockchain logic. And so this is making it into a monster of a pr even without changing the adding this slot, block, slot and company. So that's as a heads up for you guys.
00:01:12.241 - 00:01:15.045, Speaker A: If you're implementing For Choice, it's non trivial.
00:01:17.345 - 00:01:23.313, Speaker B: Oh, so when you said you implemented the first pr, you didn't mean to the spec, you meant to Prism.
00:01:23.489 - 00:01:34.565, Speaker A: To Prism. Yeah, to Prism. No, the spec is. I think it's close. As far as I know, there's. I don't know if Francesca is no Franciscan outcome. Francisco is working on alternatives that are actually very good.
00:01:34.565 - 00:01:57.969, Speaker A: There are trade offs. I'm investigating those trade offs to see which one, but. So Francesco's PR for Francesco CIP would not change portraits, which is a big plus. On the other hand, it changes blockchain for to deal with payments in a different way. So yeah, I don't know. We're analyzing. Since this spec is finished, I'm implementing this spec.
00:01:57.969 - 00:02:05.765, Speaker A: It shouldn't be a much of a change. We could just drop the fortress changes if we go with Francesco's approach. It's very similar.
00:02:07.225 - 00:02:10.193, Speaker B: Yeah, I'm a little unfamiliar with Francesco's approach.
00:02:10.369 - 00:02:18.737, Speaker A: Oh, he hasn't posted. I think they're still like cooking on security. I'm hoping that he's going to come here and describe.
00:02:18.761 - 00:02:19.325, Speaker B: It.
00:02:22.385 - 00:02:30.833, Speaker C: Would be nice because we haven't started on For Choice yet. So if becomes viable, we could save some time.
00:02:31.009 - 00:03:09.165, Speaker A: Yeah. So the trick is that instead of like relying, the fortress that we have now relies on the builder sending a message saying I want to withhold and then triggering block slot voting to reorg the block. Francesco's PR relies on something different. Relies on. If the block hasn't been voted enough, then the builder does not get paid, does not need to pay the bid.
00:03:10.945 - 00:03:15.165, Speaker C: I see. Doesn't even require votes on empty slot.
00:03:15.815 - 00:03:25.863, Speaker A: It doesn't even require. So. Well, I mean, when you vote, when you attest, if you haven't seen the block on time, you will attest for the parent.
00:03:25.999 - 00:03:28.887, Speaker C: Yeah. Indirect. Yeah, yeah, yeah.
00:03:29.071 - 00:04:08.965, Speaker A: That way you don't count this. Yeah. But the problem with that approach is that it complicates a lot the logic on blockchain, because now you cannot, you cannot deduct the payment when you see the block because you do not know who's going to earn the payment. So you need to only fulfill that payment later on, let's say at epoch transition or something like that. And then accounting for this becomes problematic. So I'm evaluating what is worse, either our fort choice or that since I'm more familiar, I'm happier with dealing, tinkering with Fortress, but. Yeah, but it's a trade.
00:04:08.965 - 00:04:55.645, Speaker A: Yeah. So if you want to know, his approach is the builder counts attestations. If he sees less than 40% of attestations, he just withholds. And then he knows that he doesn't need to pay because. Because it's less than a certain threshold, which is going to be 60%. And also if he sees more than 40%, then he reveals and he knows that he cannot be reorged because of proposal boost. Proposal boost stays at 40%.
00:04:55.645 - 00:05:23.745, Speaker A: So for the builder, the best that can happen is that he reveals with 50%. Well, anyways, so that's it. And then there's a rule that says the builder only pays the bid if the block is either canonical or if the block was reordered, the payload. But the block had more than 60% of votes, so enforcing this becomes problematic.
00:05:26.895 - 00:05:34.287, Speaker B: So that last part needs a little more. I need to say that statement slower again about that rule.
00:05:34.311 - 00:05:46.031, Speaker A: Yeah. So there. Let's go over the scenarios. I. The builder sees very little attestations for the block, less than 40%. The builder just doesn't even reveal.
00:05:46.223 - 00:06:03.131, Speaker B: Okay, well, we already have. We already have like fork choice in the existing or. I'm sorry, we already have proposal boost in the existing fork choice spec. So first of all, are you describing the existing spec or are you describing Francesca?
00:06:03.243 - 00:06:14.939, Speaker A: I'm describing an alternative that Francesca's proposing for aps, which is. Let's just keep the same for choice. So no changes on for choice. And that's a big plus.
00:06:15.107 - 00:06:15.731, Speaker B: Okay.
00:06:15.843 - 00:06:29.025, Speaker A: And I'm Describing how it would work on the mechanics. Okay, so you. The builder sees less than 40% attestations for the block, then he doesn't reveal.
00:06:30.285 - 00:06:32.865, Speaker B: And then boost wouldn't even be enough.
00:06:33.885 - 00:06:45.025, Speaker A: Well, because the block is just too weak. And then he feels I'm risking revealing the block. And then he says that he's not going to be charged.
00:06:46.515 - 00:06:53.375, Speaker B: Okay. And he'd be. Oh, so yeah, so if there's less than 40%, he can be sure that he won't be charged.
00:06:55.515 - 00:07:25.365, Speaker A: Because if, because if the. If someone, if this. He's under an attack of someone actually withholding attestations. We assume that this attacker has less than 20% of the stake. So the maximum. So that you know, under these conditions, the block had less than 40% and the attacker has maximum of 20% stake, then the block will not achieve 60% of votes and that is the threshold to charge the builder.
00:07:25.665 - 00:07:26.925, Speaker B: Right. Okay.
00:07:27.425 - 00:08:03.137, Speaker A: So less than 40% the builder doesn't reveal. And since we assuming an attacker with maximum 20%, that's fine. If there's more than 40%, then the builder will reveal and then he knows that his payload is canonical and moreover that the next proposer cannot reorgan because proposer boost is not good enough. Now what can happen is that he reveals the next proposer. Let's say that he reveals with 50%.
00:08:03.268 - 00:08:03.792, Speaker B: Yep.
00:08:03.923 - 00:08:30.633, Speaker A: The next proposer with 40% plus 20% or 19% of us of an attacker stake, he can try to reorg the block. But since the block had less than 60% of votes, even if the builder gets reorg, he will not pay the bill. So that's, that's the, that's the idea, that last part.
00:08:30.689 - 00:08:43.325, Speaker B: Even if he gets reorged, he would not pay the bid. So. Oh, so you're saying that the attacker would be. Would have the next block and he would build on the bid not being revealed. Exactly.
00:08:43.945 - 00:08:53.245, Speaker A: He will build his block on empty and then try to grieve the builder into actually paying even though it was. He did reveal.
00:08:54.025 - 00:09:17.701, Speaker B: Right. And then even if. Okay, and so then, even if the, Even if his block becomes canonical, the previous block does his. Oh, and his block contains attestations for the previous block, but he can't achieve more than exactly how much.
00:09:17.813 - 00:09:20.411, Speaker A: Okay, so there was 60 is the threshold.
00:09:20.533 - 00:09:26.515, Speaker B: Okay, so yeah, so he won't be able to achieve more than 60%. And so there's a rule. Okay, that's interesting.
00:09:26.815 - 00:10:03.847, Speaker A: Yeah. So I think it's great in that it doesn't change fortress. So if it does work, I Think it's something we should consider seriously. I also think it's easy for us, even if we implement fortress, to roll it back, because it's just rolled back fortress to whatever we had before. So it's an easy thing to continue working and then have a devnet and then go back if this mechanism becomes safe. The only problem is that there's a lot of uncertainty on how to deal with the auction itself, how to deal with the payment itself. So I'm hoping that Francesca work out all of this and then present it.
00:10:03.847 - 00:10:04.647, Speaker A: Yeah.
00:10:04.751 - 00:10:22.067, Speaker B: And the problem with the, you know, just having the. Basically like what is the problem with having the payment applied? Just like even in the best case, it doesn't apply until N blocks later. Two blocks.
00:10:22.171 - 00:10:32.899, Speaker A: Well, because then if you do it later, then you need to keep accounting. Right. So now accounting of how many attestations a block had has to be done on chain. It cannot be off chain as we do it today.
00:10:33.067 - 00:10:34.747, Speaker B: That has to be in the state, you're saying.
00:10:34.811 - 00:11:00.075, Speaker A: Exactly. And then this. I know, I decided a system that looks, well, that looks fine, but it's still. It's a complication. It's a non trivial change on the state logic, which might be just as complicated as the four choice changes. It's just that typically four choice changes are much more dangerous than state changes. Yeah, that's why I like Francesca ideas better than our idea.
00:11:02.775 - 00:11:14.595, Speaker B: Right. I mean the actual number of votes is technically on chain.
00:11:15.685 - 00:11:55.327, Speaker A: Yeah. You could get it from bits, but then it becomes really complicated. I think it's easier just to keep the tally on the state. So you have a list of bits that were unfulfilled, and in those bits, whenever you see an attestation, you just add to those bits the effective balance of the Valdev. Because if you want to exploit the fact that you already have the bids. So that's what I assume that you're thinking. Like look at the participation bits from the previous box.
00:11:55.327 - 00:12:03.071, Speaker A: The problem is that you only have the bits and then you need to go and look for the effective balance of the validators and that might have changed. And a bunch of other things.
00:12:03.183 - 00:12:09.635, Speaker B: Well, so this payment, unless I'm missing something, can be applied the next block.
00:12:09.775 - 00:12:11.563, Speaker A: Like no.
00:12:11.659 - 00:12:16.411, Speaker B: Next block proposer. The no. The attacker's block. No. My message.
00:12:16.483 - 00:12:23.115, Speaker A: No, no. Because the attackers, for example, might not include attestations that will become later available.
00:12:23.235 - 00:12:27.443, Speaker B: Or things like this, because attestations can be included multiple blocks later. Right.
00:12:27.579 - 00:12:41.171, Speaker A: So you need to wait until at least two epochs and a lot of things can happen within those epochs. The builder for example could just transfer the money to another person. So you need to at least escrow that money. Like it's. It's a non trivial change. It's. It's not.
00:12:41.171 - 00:12:47.619, Speaker A: If you give it like 5 minutes thought you're going to realize that you need to like put a lot of safety mechanism in places to deal with this.
00:12:47.747 - 00:12:52.935, Speaker B: Okay. That doesn't bad. Yeah.
00:12:55.475 - 00:13:10.305, Speaker A: All right. So that's. That was our update on purchase in prison and a sneak peek on Francesco's work. Don't know if anyone wants to give an update we can actually finish early today.
00:13:13.885 - 00:13:43.343, Speaker B: I start. I. I basically spent the last while just familiarizing myself with vanilla fork choice because I never really did that much. Never really did a. A deep dive. And then I started to like contrast it with the changes that were proposed but that's basically where I am. And then we have implemented in Lighthouse the changes for Devnet 4 and so I can rebase those pretty soon.
00:13:43.519 - 00:13:56.955, Speaker A: Oh nice. Good. And I'm looking forward for reviews on For Choice because that I'm sure is broken even at the Python level. So I'm looking for reviews on the current status of Fortunes.
00:14:00.295 - 00:14:36.463, Speaker C: On techo side. Yeah, lately. Well essentially one of the latest things that's been done is block the production things and spent Stefan spent a lot of time rebasing everything over Current Master which is toward being compatible with DevNet 4. Not yet. So if I had to summarize, most probably what has been done is a lot of time on rebasing.
00:14:36.639 - 00:14:41.343, Speaker A: Yeah, I can relate to that. That Lucas PR was a nightmare.
00:14:41.519 - 00:14:50.535, Speaker C: Yes, exactly. So not For Choice changes yet on our site.
00:14:54.795 - 00:15:08.415, Speaker A: I'm convinced that we will have this ready completely by next Meet Next breakout in two weeks. So that's going to be still before defcon. So I'm hoping that Prism will be able to do a single client Devnet by two weeks from now.
00:15:14.925 - 00:15:50.373, Speaker B: You got me thinking about that update. Seems either way anyway. I'm just thinking about the new fork choice but it seems either way you would have to rely on the fact that you have the votes on Chain because if you kept it in the state you'd still have to verify that those were in the block. So yeah, you either like you can have the proposer do that accounting when they propose the block or whatever but you're still going to have to verify that accounting. So either way you're going to count what's in the blocks.
00:15:50.509 - 00:16:21.785, Speaker A: Yeah. All right. And I don't think we have Lighthouse. We don't have a load start today. I don't know if Terrence wants to say something. James, Anyone else? All right, I'll call it at once. Call it twice.
00:16:21.785 - 00:16:45.135, Speaker A: All right, so if there's no more comments, we are finishing early today and we actually gave a sneak peek into an interesting work of Francesco, so it was good. All right, guys, I'll see you in two weeks. And hopefully we'll have a devnet by then. Well, not a deaf net, but at least an interrupt by then. See you guys.
00:16:45.295 - 00:16:46.159, Speaker B: See you.
00:16:46.327 - 00:16:47.055, Speaker A: Bye.
