00:00:00.090 - 00:00:16.080, Speaker A: Eof call. Let's see what happened in the past week and where we go next. So as usual, probably should start with some updates. And I think I always start with Dano, who's on the top of the list. So Dano, please go ahead.
00:00:16.610 - 00:01:13.278, Speaker B: Sure. So for the Beisu mega EOF implementation, we took the existing EOF tests, which are our container validation tests that are in the current reference tests and wired them in so our eVM tool can run them via CLI and also put in the hook so it can be run as part of our standard CI if we turn CI on on that branch, or if we merge it into main so the reference tests and they all pass for container validation for the base of implementation. I also started bringing in some of the bits I was working on for create three and return contract. Not done with that. Trying to get some good test cases to run with that. A couple of the things that I ran into there, some of the old test cases I had were before we had the rule that all subcontainers must validate. So like a subcontainer holding just obviously doesn't validate because it's not eoF.
00:01:13.278 - 00:01:52.294, Speaker B: So I had to update my tests for that. And I think some of the other reference tests I was using have a similar situation where the subcontainers don't validate. And just as far as implementation of create three and return contract, I need to go through the spec again and line by line to make sure that I have all the particulars implemented and then we can start writing test cases. Another side distraction I have is attempting to get retesteth to compile under Mac. I'm giving up on that. I'm going to just get an old laptop. I have put a current version of Ubuntu on there and just run retest that generation there and just copy between the systems.
00:01:52.294 - 00:02:01.810, Speaker B: It's either that or get a cloud instance and the laptop is free. So that's my plan there. And that's the status of basic.
00:02:05.550 - 00:02:16.560, Speaker A: Awesome. Yeah, always compilation on Mac. It always comes up. All right, let's move on to Dragan if you want to go next.
00:02:17.890 - 00:02:37.960, Speaker C: I have a lot to report. Basically I started checking out how the implementation is going to look like I didn't spend a lot of time on it, but from today I'll be basically working full time on it. So next week I hope that we have a little bit of progress there.
00:02:42.300 - 00:03:05.250, Speaker A: Awesome. That's really great to hear. Let us know. On a side note, we did had some plans to experiment implementing some of the EVM Max instructions in ReVM for some tests, but that is certainly easier if uf is there. So at this point, I'm going to wait for you to get the baseline uf work done.
00:03:05.940 - 00:03:07.280, Speaker D: Nice. Thank you.
00:03:07.430 - 00:03:33.650, Speaker A: Yeah. Side note, finished. But yeah, let us know whatever you find out as you keep going next week. All right, Charles, do you want to go next? From Viper? Charles, can you hear us?
00:03:37.070 - 00:03:38.460, Speaker C: He sent a message.
00:03:40.350 - 00:03:41.786, Speaker D: Yeah, he can talk.
00:03:41.968 - 00:04:12.400, Speaker A: Okay. Oh, that's set to hear with Devette. I hope everything is good. All right, let's move on to ipsilon first on implementation updates, if anyone volunteers? Oh, yeah, Charles said no updates, but some people are waiting for spec updates from Charles. Yeah, please confirm if anybody is waiting for that.
00:04:14.610 - 00:04:26.660, Speaker D: Yeah, there's an exchange of code pr pending, addressing the feedback. And this is to the EIP 666 63.
00:04:31.120 - 00:04:43.280, Speaker A: All right. Yeah, you were unmuted. You could just give the update on the spec and then we can finish with the implementation update.
00:04:43.620 - 00:05:33.420, Speaker D: Okay, so I think EIP 74 80, which is data instructions, and 70 69, which is revised. Call instructions are updated and match with the Megaspec and Eap 35 40. The base eap for EOf needs some sections. The ones towards the end of the AAP template needs work on. I'm not sure what to put there, to be honest. Sorry, I got confused. So 35 40, I think is blocked on reviews.
00:05:33.420 - 00:06:00.250, Speaker D: I have updated it according to the feedback from Andre, and it was the create EIP that I need help with. The last sections like security, backwards compatibility and whatnot. And also it's up for review. I don't think it's public yet, but if anyone wants to review, just let us know.
00:06:03.180 - 00:06:06.728, Speaker A: Yeah, sorry, go ahead.
00:06:06.894 - 00:06:22.560, Speaker D: I just want to mention that there's also a few editorial changes done to the megaspec. So I would suggest that you just go through the last commits on the EOf repo and see what has been updated.
00:06:26.430 - 00:06:50.462, Speaker A: Sounds good. I wanted to mention these security considerations in the eips. There's always like this problematic section which gets filled out last and nobody knows what to fill out because it hasn't been analyzed yet by the time people try to track. But maybe that's something, especially the fact of the create EIP. Maybe we should come back to that during the discussion section.
00:06:50.606 - 00:07:00.370, Speaker D: Yeah, I think so. That's a special case because it's like the entry points to the whole thing. So I think it deserves some discussion.
00:07:02.710 - 00:07:05.220, Speaker A: Sounds good. Any more spec updates from you?
00:07:06.710 - 00:07:08.920, Speaker D: Oh, I don't think so. That's all.
00:07:09.530 - 00:07:16.010, Speaker A: Thank you. Andre or Pavel, do you want to talk about implementation updates.
00:07:22.110 - 00:07:57.000, Speaker E: To think validation and creation implementations? Mostly working on that. But also we started to finish up the logic of xcode copy xcode hash when called from legacy to eof, because that was one piece that's not implemented yet. Also, I expect this to be finished soon. It's not too complicated. That's all I think.
00:08:02.660 - 00:08:51.200, Speaker A: Thank you. It was a bit hard to hear. All right, before we get into the spec discussions last week we agreed to try out a focus week, and we said that we wanted to focus on validation, validation tests. So maybe it's time to take a review what kind of progress we made. Regarding those, I think from Ipso's side we wanted to look into the test suite if anything needs to be updated. And Daniel, from your side you wanted to confirm, just run the test and see if anything is missing or failing. Did we made any progress on the validation?
00:08:53.540 - 00:09:14.680, Speaker B: So a lot of the work that I did for that is reflected on the readiness page I enumerated for the eips that I knew we had tests for. And there's a lot of eips we don't have tests for. And I assessed Besu's readiness to those eips. I didn't have time to check into the ones. We failed to figure out if it's a Besu issue or if the test does not actually reflect the EIP.
00:09:19.420 - 00:09:19.784, Speaker D: Because.
00:09:19.822 - 00:09:46.944, Speaker B: That involves going back to. And that's where I'm stuck with the retest app to reassess those. I would need to be able to regenerate the tests with the correct values if I did come to that conclusion. So I'm a bit backed up on getting the testing infrastructure. That's kind of the obstacle there. But the existing EOF container validation tests appear to be correct. They do need to be extended to cover subcontainers.
00:09:46.944 - 00:10:30.480, Speaker B: And also I think we need to develop some tests that address worst case scenarios. For example, maximum containers of maximum size, maximum container depth, those sorts of things where we would want to test the edges of our implementations and make sure that they function correctly, they function efficiently, and if they break, they break consistently in the same way perspect. So that's where I've got on the validation front right there. I did need to take some time off to finish implementing some of the features that weren't done yet. Create three, create four, and return data contract. And I still haven't gotten exchanged because I'm still waiting on the spec. But that's the progress I got on validation.
00:10:37.580 - 00:10:57.032, Speaker A: Yeah, I see the list and the readiness matrix, and there you say for each of them, like execution validation, 558 tests. Container validation, 54 tests. This is just the sum of the tests. Or the test basu is passing. It's just the sum of the tests.
00:10:57.176 - 00:11:10.790, Speaker B: This is the sum of the tests. And then in the readiness, the number of tests that Beisu passes. So in the chart, it's passing total. Oh, I see. Underneath it, it gives an enumeration of where the tests are at that constitute it.
00:11:14.200 - 00:11:14.564, Speaker D: Okay.
00:11:14.602 - 00:11:24.650, Speaker A: For the container, it seems like 35 40. It seems to be like a significant number of them are not passing yet.
00:11:26.860 - 00:11:56.790, Speaker B: Let me bring up that. Got so many tabs open. Epsilon EoF. Are you talking about the container? 35, 40. Yeah. I haven't had a chance to dive into which ones are failing there and figure out which ones are because of spec changing underneath it, because I think some of those are old.
00:12:01.240 - 00:12:03.270, Speaker A: Andre, you want to chime in?
00:12:12.380 - 00:12:13.640, Speaker D: You're muted.
00:12:17.420 - 00:12:18.170, Speaker E: So.
00:12:21.900 - 00:12:32.000, Speaker A: 50 pests. So it's really hard to hear you. Yeah, the sound is robotic. Maybe reconnect.
00:12:35.010 - 00:12:54.450, Speaker B: So looking at some of the tests, I think some of them have to do with being out of spec, because we got create two and create tests and create one and create two don't work for EOF. We have other plans for that. So I think that's where some of these errors are coming in from. But again, I haven't looked at the tests and the failure cases.
00:12:57.750 - 00:13:37.266, Speaker F: Yeah, there is some work in progress to change this because the previous test was relaying this legacy creates. But yeah, yesterday I submitted a pull request changing the test in order to do a different kind of validation test instead of trying to use create. So, yeah, this pull request is already there. Just, we need some reviews. And I think also Andre had some.
00:13:37.288 - 00:13:37.860, Speaker A: Other.
00:13:39.990 - 00:13:51.560, Speaker F: Pull requests I want to check before trying to measure mine. But, yeah, it is already being worked on.
00:13:56.310 - 00:13:57.060, Speaker B: Cool.
00:13:57.510 - 00:14:32.800, Speaker A: Yeah. Andre posted the link of his change, which is titled update for relaxed stack validation. I suppose that may be like an easier pr to merge. And then if you go, your pr probably will be much bigger because it changes the creation tests. What is our expectation on getting these merged? And should we wait for it to be merged, or should deno be able to try the pr on basic to see what it changes?
00:14:44.800 - 00:15:00.160, Speaker F: I think this couple of prs can be merged during this following week, I guess. But yes, it's also possible that Dano can test using these prs directly.
00:15:01.380 - 00:15:37.180, Speaker B: Yeah, I could load those in. So I'm looking at, like, this 1337 pr we're moving some of the validation. Is that the one you were talking about, Mario? Move creation tests to validation tests. I think too many of the tests are being deleted because some of them do provide functional testing, like the 4200, our jump IMAX offset. So I think we need to consider some we get rid of and some we keep if they're just testing the container, because if it's testing execution, we need those tests in the execution.
00:15:40.400 - 00:16:13.640, Speaker F: Yeah, currently a lot of them are being removed because it is only moved to check validation. But yeah, also Andre commented about, for example, our jumps. There are some of the tests that were testing validation, but also execution. So yeah, maybe it will be good to have a second look there to which one requires execution testing.
00:16:14.240 - 00:16:18.780, Speaker B: Okay, I'll take a look at these. I'll look at all the eofPrs.
00:16:27.550 - 00:16:53.170, Speaker A: All right, let's see next week how we make progress on the validation changes. Hopefully the easier one is going to be merged. But yeah, probably the bigger pr from you, Hugo, going to be more challenging to merge. Meanwhile, Aiman has also joined the call. So maybe we should ask Iman to give an update from Nethermind.
00:16:54.390 - 00:17:47.422, Speaker G: Hi, is my microphone working? I think it is, yeah. For Nethermind, we actually found some bugs in our implementations and fixed them and kind of completed, in a way, our implementation of create three and create four. And we have some questions. One question regarding code section validation. So, in the previous example that was given in EOF, eips like 4750, we were iterating over each code section and validating its opcodes and stack. Right. And we were discussing yesterday in the team if code sections that are unreachable.
00:17:47.422 - 00:17:52.200, Speaker G: So code sections that are never called, are they considered dead code as well?
00:18:03.120 - 00:18:06.110, Speaker B: I would like to say yes, but I don't know what the current spec says.
00:18:09.560 - 00:18:29.150, Speaker G: So the consensus we reach is that they are considered dead code and our implementation reflects that. But I checked, I think, Bessel's implementation and they still iterate over each code section. So we were just wanting to clarify which is the case.
00:18:30.480 - 00:18:35.710, Speaker B: And yeah, that's it sounds like base is wrong there.
00:18:38.880 - 00:19:07.850, Speaker G: Okay, perfect. And that's most of the updates for us. We're still migrating our old tests to the new implementation, and it's taken longer than expected, because technically I am the one implementing EOf and I have also eips, six other eips to deal with. So yeah, time management has to be done better for my side and, yeah, that's it.
00:19:13.260 - 00:19:19.950, Speaker A: Are we missing test cases to catch this in base or they just weren't executed yet.
00:19:29.770 - 00:19:31.960, Speaker G: Is that a question for me?
00:19:34.090 - 00:19:42.378, Speaker A: I'm not sure who actually it could be to anyone. Basically, I think where there is a.
00:19:42.384 - 00:19:48.570, Speaker B: Difference between clients, we should get a test case to represent that difference and put it into the standard tests.
00:19:49.390 - 00:19:49.754, Speaker G: Yeah.
00:19:49.792 - 00:19:50.380, Speaker A: Okay.
00:19:50.830 - 00:20:15.250, Speaker G: Because ideally we can have code sections that are never called in the bytecode and they should be considered that code because they are just there and never reached. Since Colaf has the immediate embedded in the bytecode, so we can be sure that if it's not code at validate, it's not called at validation, it will never be called at runtime.
00:20:17.850 - 00:20:22.600, Speaker B: Yeah, it should be easy to fix. I can write up a patch for that by the end of the week.
00:20:24.170 - 00:20:24.920, Speaker G: Perfect.
00:20:27.290 - 00:20:39.660, Speaker H: So from our side, what I remember is that we have implemented this change fairly recent, and maybe that's why the test doesn't reflect that yet.
00:20:45.070 - 00:20:55.600, Speaker A: But this Pru linked actually updates the test comment. So I suppose it does have a test.
00:20:58.790 - 00:21:10.600, Speaker H: Maybe it's not like I was directly working on this, but I think the test might have been updated. But maybe they don't end up the main branch. I don't know.
00:21:17.280 - 00:21:18.910, Speaker E: Is both sound any better?
00:21:23.630 - 00:22:07.480, Speaker A: Say it again or write it down because the sound is really bad. In any case, Andre, I did point out in the megaspec where this rule is introduced, so as an action point, let's make sure that we do get a test case of this, or at least confirm it if it exists. I suppose maybe Andre or Hugo, you were the most involved with this side of testing. Can one of you take up this action point for next week?
00:22:11.560 - 00:22:13.990, Speaker F: Yeah, sure, I can take a look.
00:22:15.740 - 00:22:43.900, Speaker A: Thank you. All right, we also have a new joiner door. I'm not sure which team you are with. If you want to do a very quick 32nd intro. All right, that's fine. All right then. I think we did had all the updates.
00:22:43.900 - 00:23:14.120, Speaker A: I guess we should move on to the spec discussion at this point. Unless there's any other implementation or testing related question we want to answer right now. All right, Peter, do you want to take it off related to the create the ip, maybe? That's the biggest discussion to be had.
00:23:16.590 - 00:23:49.874, Speaker D: Okay, I can sure. So I don't know where to begin. So there's three sections which I'm not sure how to proceed in this specific case, which are test cases, reference implementation, and security considerations. I think. Yeah, those three are the main pain points for me. I don't know if reference implementation. Can we get rid of this point quickly because we won't have something like.
00:23:49.912 - 00:23:50.500, Speaker A: That.
00:23:52.710 - 00:23:53.780, Speaker D: In the AP.
00:23:54.250 - 00:23:56.914, Speaker A: I think that's an optional section.
00:23:56.962 - 00:24:00.774, Speaker D: No, it is. Do we want to have this?
00:24:00.972 - 00:24:01.842, Speaker A: Yeah, just remove.
00:24:01.906 - 00:24:41.850, Speaker D: We don't. Okay, remove, fine. Easy. Then remove it. And then security considerations. So I suppose we should have something here. We didn't have much in the other eips on the topic, so maybe a question to begin with is whether anything has been written down already on this topic.
00:24:48.500 - 00:25:13.850, Speaker A: I don't think so. So we used to put TBD to be defined at some point. The EIF editors were really strict in not letting that to be merged as a trust. If that's the case, we could just put the alters are not aware of any risk, but it has to be thoroughly reviewed. Something like that.
00:25:15.660 - 00:25:21.916, Speaker D: Okay. But nothing has been really discussed before.
00:25:22.098 - 00:25:27.630, Speaker A: Not yet. So if you do have concerns now about certain aspects, there is something.
00:25:28.320 - 00:26:07.990, Speaker D: I had one actually, which is that since create free and Ford introduced validation of UF at deploy time, my thought is that if there's some validation missing and some invalid goes through, it will stay on chain. Like a recurring worry from my side. I don't know if we have considered this ever. And I also don't know if it fits.
00:26:08.070 - 00:26:39.410, Speaker H: Yeah, I think we have. Just like looking from all the ips actually, because I think it's specific to the code validation one. However, the security considerations there refers back to the 35 40. But I think you can note it somewhere.
00:26:40.730 - 00:26:42.120, Speaker D: There isn't much there.
00:26:43.050 - 00:27:37.320, Speaker H: It mostly fits into the main two aps. I don't think it needs to be kind of. It's not so much related to the create instructions. Yeah, I don't know. I think we can add another action item to check if that has been written anywhere. I think in the end this is not so much different that some other consensus issues in the same fashion. You can anticipate that if balance computation is wrong and later on balance will end up in the state.
00:27:37.320 - 00:27:51.770, Speaker H: So I think it's not so much different than this, although it's some kind of a new door to kind of break. Yeah, we can definitely note this somewhere.
00:27:55.870 - 00:28:09.620, Speaker D: I think the we validate on create four only and then create free can make more copies of potentially invalid EOF. Right.
00:28:14.790 - 00:28:21.750, Speaker B: If create three validates all the subcontainers infinitely deep, then there shouldn't be invalid EOF in any valid EwEF container.
00:28:24.250 - 00:28:41.180, Speaker D: Right. But if there's some validation rule that has a bug and makes great for let it slip through and then create free can spawn more of these contracts. Is this.
00:28:42.110 - 00:29:13.718, Speaker H: Yeah, I think the question is more or less that how much. Are we confident that the spec doesn't have any backdoor where you can somehow sneak in the EOF container that will be invalid, and I think we can put it up to the point to kind of prove some of the properties. But yeah, that's mostly the concern, right? To make sure there's no way to somehow put it there.
00:29:13.804 - 00:30:09.140, Speaker D: No, maybe I misphhrase the problem. Let's imagine that we have a create four contract that we make the deployment with create four, and the contract that's being deployed has a create free, and it has some UF container that has a problem. In general, it's invalid, but create four didn't pick it up. And then in order to rectify this, we can fix create four, but we also need to make the create free somehow to make it right. Moving forward, the create free cannot ever deploy those contracts. Do we need to somehow reintroduce validation on create free or something like that?
00:30:18.000 - 00:30:31.280, Speaker B: If we were to do validation on create threes, suppose that could be covered by the per byte in Nitco charge that was introduced for Shanghai.
00:30:34.760 - 00:30:42.150, Speaker D: You mean the EAP 338 60, not the one?
00:30:43.800 - 00:31:06.600, Speaker B: Yeah, the one that shut down an itcode to also introduced a per byte charge for create and create two, which I don't think we reflect in create three and create four. Right. Now, I haven't been that deep in the spec recently.
00:31:06.760 - 00:31:08.190, Speaker D: We do, but I'm not sure.
00:31:10.640 - 00:31:21.010, Speaker B: So if we do do it for create three, if we do charge per byte for create three, then doing the validation isn't going to cause any performance issues.
00:31:22.980 - 00:32:26.280, Speaker D: Right. Okay. Anyway, that was my only thought that I had in this area, so thanks for the input. And then the test cases. Would anyone care to assist? Can I have posted this document in one of the EOF channels and just take a look and review it? I guess that's the easier part than going for this on the call. Test cases are optional. Yeah, but I think we usually had them in other eips.
00:32:29.500 - 00:32:34.936, Speaker B: Well, the test cases in the eips are just notional. I mean, there's way more tests than you should enumerate in an EIP.
00:32:35.128 - 00:33:23.430, Speaker D: Exactly, that was my point. Yeah. So they shouldn't be like exhaustive because they would basically be reiterating all the rules that we have enumerated in the spec. Okay, I think you get the point. So, yeah. Anyhow, with this draft, I would appreciate review. I don't know, what else do we want to do before we open a pr to add it?
00:33:33.710 - 00:33:53.426, Speaker A: Yeah, maybe we could consider targeting opening the pr on Friday or so. I think by the goal should be that we have the draft merged by the next call so that we can start referring to it by number and we can always update it with changes. Yeah.
00:33:53.448 - 00:34:10.070, Speaker D: So it doesn't need to be super polished, right? It can be, yeah, exactly. Okay, I'm open Friday, but yeah, we can open the pr on Monday.
00:34:15.950 - 00:34:44.558, Speaker A: Yeah, we can also open it tomorrow, maybe to the group here. If you have a chance, just review it tonight. But there's always a chance to review it on the IP's request as well. All right, Peter, do you have any other spec questions you wanted to discuss, not to create?
00:34:44.724 - 00:34:46.160, Speaker D: I think I'm good.
00:34:49.030 - 00:35:54.530, Speaker A: Okay, anybody else has any spec questions we should discuss now? Okay, good. Then I think what's important to discuss, however, is I think we don't even have data yet, you know, whether this weekly focus works or not. So we should definitely try it again for next week and then decide. It feels like the validation had like a good start. Just looking at what needs to be fixed, what passes. I would suggest that we keep validation as the next weekly focus again with aim to get much closer to completion. Are there any other suggestions or are we good with this? Yeah, Andre.
00:35:54.530 - 00:36:54.960, Speaker A: Okay, just thumbs up. All right. Any other comments? Because otherwise I think we can take it a short call and by next week, as we discussed in the last few minutes, we should have the last remaining EIP as a draft ready and hopefully make good progress and validation. So maybe next week going to be, and hopefully as Dragon said, you are going to work like crazy on implementing it. So I think next week it may be a good time to discuss some of the potential future testing ideas. Maybe having some kind of a plan for the interop which was brought up before, but yeah, let's see how we get there by next week. And Pavel, you have your hands up.
00:36:55.810 - 00:37:18.600, Speaker H: Yeah, just want to kind of have a summary of their relaxed tag validation to my understanding, but I might be wrong. This has been merged in EVM one and in the spec and only tests are not. Tests are in progress. Right. Or I'm missing something.
00:37:20.010 - 00:37:21.880, Speaker A: Not merged in the VM one.
00:37:22.730 - 00:37:24.310, Speaker H: Okay, not merged.
00:37:26.730 - 00:37:36.940, Speaker B: I didn't have a chance to dive into the EVM one code. But isn't there a way to take some of your existing tests and spit out reference test outputs from them.
00:37:40.990 - 00:37:44.080, Speaker E: Very soon? I have an idea for this.
00:37:47.090 - 00:38:30.558, Speaker H: So I think the current status is more or less, you can spin out the JSOn test out of it, but they are in this final state format. So I think what you were complaining about. There's no way to figure out what's in the test. Exactly, because you only get the state hash. This is not like production ready feature, but I think we might use that. And there are some adjustments to this. So, yeah, that's the current status, but we can work on improvement if there's anything needed.
00:38:30.558 - 00:38:35.840, Speaker H: Or I guess Andre mentioned that he has some idea how to improve that.
00:38:40.050 - 00:39:13.382, Speaker B: Yeah. I would table the filler generation because I've figured out how to get traces out of EVM one now. So I can just do a trace differential, which answers most of the questions. It's only if we get some of the intrinsic cost differences that will matter. And I think there's a way to dump the final state from an EVM one trace, but I think I have enough. With just the final hash, I can generate what I need in the middle. And typically, especially when it comes to getting an operation wrong, that's going to come out in bright orange on the tests.
00:39:13.382 - 00:39:15.980, Speaker B: If I get an operation wrong and we're doing stuff different.
00:39:24.530 - 00:39:38.770, Speaker H: Okay. But I'm always for improving testing experience, so if any ideas how to exactly do it long term, I'm open to listening.
00:39:59.310 - 00:40:00.540, Speaker A: Just go ahead.
00:40:09.850 - 00:40:10.390, Speaker D: All right.
00:40:10.460 - 00:40:29.360, Speaker A: If not, our comments. Do we agree with the focus of still the validation tests and the creation aip for next week and then we can see where we are? Or is there anything else we also should focus on?
00:40:34.130 - 00:40:57.190, Speaker B: That sounds good. Yeah, because my plan is to get more tests generating from the reference tests, look through these prs, get my creates working, and try and get it closer to parity with EVM one and Nethermind. Eamon, can you share what fork the Nethermind stuff is on in the discord? So I could add that to my differential testing.
00:40:59.310 - 00:41:03.094, Speaker G: Can I share what exactly what branch.
00:41:03.142 - 00:41:06.170, Speaker B: Is the current EOF implementation on Nethermindin?
00:41:07.310 - 00:41:14.634, Speaker G: Okay, I will share it in the discord.
00:41:14.762 - 00:41:20.000, Speaker B: Yeah, share in discord. And I'll see if I can get that building and differential testing between what we have.
00:41:21.490 - 00:41:22.240, Speaker G: Sure.
00:41:24.690 - 00:41:33.860, Speaker D: Aman, also, maybe you can update the readiness matrix for Nethermind because you guys seem to have a lot of stuff nailed down already.
00:41:43.550 - 00:41:45.850, Speaker A: Sounds good. He confirmed in chat.
00:41:46.910 - 00:41:51.100, Speaker D: Oh, I didn't. It's not scrolling. Thanks.
00:41:52.190 - 00:42:10.862, Speaker A: Okay, great. All right, I think we can call it a short meeting today and, yeah, let's get on with these new focus areas. It was a great call. Thank you, everyone, and see you next week. Bye bye.
00:42:11.006 - 00:42:13.760, Speaker D: Bye bye. Record.
