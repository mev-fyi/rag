00:00:03.840 - 00:01:16.074, Speaker A: Hello and welcome everyone to the pre confirmation and sequencing core number nine. Today we have an exciting topic which is credibly neutral collateral for the pre confers. As you know, if you have a decentralized sequencing mechanism with preconfirmation, there needs to be some sort of collateral so that if the pre confer decides to renege on their preconfirmations, they get financially slashed. And that then begs the question, what collateral do we want? And in order to achieve credible neutrality and for everyone to agree on collateral, really there's only one option, which is to use if unfortunately ETH is not super collateral efficient necessarily there's other options. There's lrts, there's lsts, there's also reputation. Some people might want to put forward their reputation. There's all sorts of things other than eve that can be pledged.
00:01:16.074 - 00:01:38.824, Speaker A: Last week I was talking with Matthew and we came up with this pretty simple but neat idea of an underwriter, and Matthew has prepared a write up and a presentation. And so Matthew, the floor is yours to present all the details.
00:01:39.444 - 00:02:13.270, Speaker B: Thanks Joseph. I'm going to share my slides real quick and then I'm going to post in the zoom chat and on Telegram all of the links to the full write up. All right? So yeah, well let's start with a quick personal intro. So I'm m team. I've been a searcher for a few years in the mev boost ecosystem. Now I'm researching Ethereum. I recently joined as a co founder as Spire Labs and I'm working as the chief product officer.
00:02:13.270 - 00:02:41.746, Speaker B: Currently we're building a base app chain framework to enable developers to create base roll ups. And we are planning to have native support for base preconformations. We're also hiring, so reach out if you're looking for a job. That's not what we're here for. We are for credibly neutral pre conformation collateral. So this idea that Justin gave a great intro is just a smart contract that can be deployed on chain to facilitate the hosting of collateral from pre conference. So first, a quick background.
00:02:41.746 - 00:03:13.318, Speaker B: The fundamental constraint of proposal commitments is that proposers need to post some collateral. And this is before we have execution tickets or AP's burn or something like that. And the reason for that is that proposers always have the option to self build, which could mean they reneg on their commitments. So we make some assumptions for this post, which I think are reasonable to the base pre conformations landscape right now. The first one is that only the proposer is making commitments for a given slot. No one else is involved. This is a kind of simplifying assumption, but should extend to like delegated preconformations like that.
00:03:13.318 - 00:03:44.518, Speaker B: And of course, there's only one proposer, and then all faults are attributable. So if the proposal does something wrong, then we know that they did something wrong, and that can be verified on chain for slashing or penalizing purposes. So here's, here's kind of the problem. And Justin gave a great overview. We need credibly neutral and safe and dynamic collateral. So when I say dynamic here, I mean collateral that is capital efficient and works well with large operators and solo stakers. So there's a bunch of very large node operators on Ethereum who run many, many validators.
00:03:44.518 - 00:04:14.294, Speaker B: We want this to work for them, be capital efficient, but we also want to look out for the little guy, the solo staker, who may have one or two validators, but still wants to provide pre conforming services. Now, doing this is pretty straightforward. We also need to be capital efficient and easy to use. And that's kind of how we're looking at this problem right now. So here's our solution is we call it the confirmation registry. Like I said before, it's a layer one smart contract that handles three functionalities. These are registration, delegation, and penalties.
00:04:14.294 - 00:04:47.498, Speaker B: We have this role called a registrant, who posts pure eth collateral to the smart contract. Registrants can be anyone, and they're just an ethereum address, and then delegation. So this allows registrants to delegate collateral that they have posted to proposers. So a registrant could delegate to many proposers, and then their collateral would be shared across all those proposers. And we also have the registry handling penalties. This can be done in like a modular, agnostic way. So you choose like another slashing contract that can handle when to freeze, when to slash, etcetera.
00:04:47.498 - 00:05:32.146, Speaker B: And then we have this kind of conditional. If the total unpenalized collateral backing a proposal is greater than a parameter, minimum collateral, then a proposer is considered a pre conference or a sequencer. So this is like our minimum bar that you need to arrive at. We've discussed this number being a very, very high number of ETH, so maybe 1000 ETH even more than that. And kind of the idea here is that registrants can share collateral across all delegates. So if I am a registrant and I put up 1000 eth, I can share this collateral across my 100 proposers, and each of them has a collateral balance of 1000 ETH individually, and they can all become pre conference. So I have this little picture here, and this kind of shows how this on chain design works.
00:05:32.146 - 00:06:17.394, Speaker B: We have the registrants submitting ETH to contract and then choosing some delegates. And then those delegates become free confers, and everyone else who does not receive delegation is just an includer in the base. Free conf model can keep going. So like I said before, the on chain construction is simple, but the off chain construction, which is what just mentioned, the underwriter, is very important to this design and ultimately is going to be what really makes this capital efficient for users and gets us some of our adoption. So the underwriter is a market maker, and it's their job to convert impure collateral to pristine eth. So like Justin mentioned, we can take collateral from any form from proposers. So think eth, think LSTs or LRt's equity, even reputation.
00:06:17.394 - 00:07:06.650, Speaker B: There's a lot of things that could be collateral. The underwriter is not opinionated over what type of collateral they're receiving, and then they submit pure ETH to the smart contract and delegate to proposers that had given them collateral. So if a group of proposers, let's say of a very large node operator, sent maybe an LST to an underwriter, the underwriter would convert this into ETH internally, and then submit that ETH to the smart contract is collateral, and then delegate it to the proposers involved. So we think it's pretty cool. The underwriter acts as a registrant when acting with, interacting with the on chain contract. So they're this registrant role that we talked about earlier. And then what I think the most interesting part of this is, is that the underwriter could be a trustless defi application, an off chain market maker, or even LSD or LRT.
00:07:06.650 - 00:07:43.352, Speaker B: So there's a lot of options for how to implement an underwriter. You can do this in a completely trustless way with some signature exchange protocols, and then you can also do this in like a off chain way. There's, there's a lot of design space for here, and this is definitely something we're, we're thinking about. The next concept that we introduce for specifically solo stickers is this, proposer pools. So proposer pools are formed from a trusting collection proposer. So all the proposers trust all the other proposers in the pool, and then all resticking their eth. So they restake to a underwriter or a smart contract, and that registers for them on the pre conformation registry.
00:07:43.352 - 00:08:38.132, Speaker B: And then that gets them up to a minimum collateral balance, converting them all into pre coffers so this essentially allows a group of proposers to team up to reach the collateral balance that is required to become a pre coffer. Now, of course, there's a problem where if one pre coffer defects and does like a griefing attack and renegs on pre conformations, then everyone is penalized for this. Everyone's collateral is penalized. So as a proposer, if I join a pool, I need to trust everyone else there. The way we can disincentivize this behavior and make that trust not such a high requirement, then we can have proposal pools also act as smoothing pools, which haven't seen a lot of adoption so far, but the code is out there for that. And that just means redistributing all rewards to every proposal in the pool. So if there's an execution layer, rewards, or a very high mev block that would occur because someone reneged on pre conformations, then the rewards from reneging would be redistributed to all proposers.
00:08:38.132 - 00:09:33.708, Speaker B: So instead of one proposer having the rights to renege and then keeping all the profit for themselves, we just allow any proposal to make that choice on behalf of the entire pool. So this is kind of like the short term thing, but once we have DVT, um, matured, and a max EB increase, then we can have all proposers just become one validator with DBT, and then combine their eth together through the max effective balance change to something more than minimum collateral. So if Max EB is changed to 2056 eth, then proposers could just become a single validator and just do a single registration there. It's kind of a natural evolution and very compatible with the rest of the system. So here's kind of the picture for this set of things. Our job operators submit their non ETH collateral, so. Well, it could be, I guess, but it doesn't have to be.
00:09:33.708 - 00:10:10.658, Speaker B: It could be, like I said, an LSD reputation, things like that. Underwriter converses to ETH and sends it back up to the pre conformation registry. The proposer pool has a group of proposers all restaking their ETH, so they have this like form of collateral called restaked ETH, which is not quite as pure as ETH, but it's getting there. And this can be converted to ETH through an underwriter, which can also be done like a smart contract on Ethereum. So here's our number one parameter, and I talked about this before, but it's this minimum collateral thing. So Jonah had a great post about setting honest user set like requirements for pre conformations. This, we kind of want to extend this idea.
00:10:10.658 - 00:11:06.826, Speaker B: So setting minimum collateral ex ante. So before we know what pre conformations are going to look like may lead to inefficiency. Because, for example, a very small user who just wants to send some ETH to their friend doesn't have to have thousands of ETH backing their pre conformation. They don't need that and quite frankly, they shouldn't have to pay for that. So the idea here is we allow users to define what penalties they actually need for their collateral and we go from there. Now, the caveat to that is that if we set minimum collateral to something low, then there can kind of be this choice where a proposal with very little collateral may become a pre conference, but there's still a proposal with a lot of collateral later in the look ahead. So you have this problem where even though there's a lot of collateral available later in the look ahead, and a proposer who has less collateral will still get sequencing rights and therefore that collateral that is available will not be used.
00:11:06.826 - 00:11:28.574, Speaker B: This is also kind of inefficient, especially for people who need a lot of collateral. So this is an open question and we're definitely accepting input on this message beyond telegram. We can chat about this. All right, that's it. It's pretty simple. Like I said, spire is working on this stuff. We plan to play a big role in the implementation and further research on the subject.
00:11:28.574 - 00:11:40.264, Speaker B: We want to look into being an underwriter, into playing some of these other roles in the ecosystem. And that's it. Yeah, so you can contact me at MTM space and my Twitter is Mt msl. Thank you.
00:11:42.684 - 00:11:47.904, Speaker A: Amazing. Thank you, Matthew. I guess we can open up for questions.
00:11:50.404 - 00:12:29.520, Speaker C: Yeah, I have a quick question. This kind of touches on like restaking in general, but if you have an underwriter and they have like 1000 ETH and they're underwriting say 100 different parties, I guess, how do we envision like the slashing happening? Or like when does the slashing happen? Because I guess I could envision if you have like 100 pre conferred that are being underwrited, underwritten, and the first one reneged on their pre confirmation, but the slashing doesn't occur until like several pre confers later and the pre conferred later in the line basically say like, oh, well, the first one is going to get flashed. So I can kind of do whatever I want without any penalties. So I don't know if you've given any thoughts that.
00:12:29.712 - 00:12:56.380, Speaker B: Yep, thank you. So you can find the answer to this question in the, in the full. Okay, that has a thing at the bottom that has like, considerations and we touched on there. So we actually call this problem like forced ejection. If there's a proposal like in the look ahead later than a current one, then we kind of have a liveness failure. So if you get slashed early and then your collateral is also backing future pre confers and, you know, there's obviously that collateral is no longer there. It's already been penalized.
00:12:56.380 - 00:13:23.124, Speaker B: And so that those pre conformations are no longer valid, we're hoping that slashing events are very rare. But in the case that that does happen, then obviously there'd be a problem. This goes back to kind of our initial assumption that there's only one active pre conference at a time. And so we're hoping that we can notice that there's been a fault and then we can giving out confirmations before that's like understood and have a force rejection there. Oh, that answers your question.
00:13:25.304 - 00:13:26.324, Speaker C: Yeah, thanks.
00:13:26.944 - 00:14:04.004, Speaker A: I mean, in some sense there's two layers to the slashing. There's the on chain slashing that might happen with some amount of delay, which is not great. But what is a slashing? Basically it's acting upon a fraud proof. And this fraud proof can be gossiped with extremely low latency in the peer to peer network. And so if I'm a wallet and I'm listening to this peer to peer network for thought proofs, I can just preemptively slash and just not send my user flow to the next proposal. Look ahead if that proposal happens to be about to be slashed on j.
00:14:07.424 - 00:14:08.724, Speaker C: Yeah, that makes sense.
00:14:15.764 - 00:14:17.184, Speaker A: Any other question?
00:14:18.004 - 00:14:45.804, Speaker C: I have another question. Sorry, going to the underwriter, could you kind of explain, like, it makes sense that someone wants to stake their reputation like that? Totally makes sense. I guess I'm a little bit unclear about how the underwriter would take that reputation and turn it into ETH. So like, I guess they would then just have to front the ETH and then they would have some smart contract that says like, oh, this reputable person is staking their reputation, I guess. Is that the correct understanding of how like, the reputation turns into pure eth?
00:14:46.344 - 00:15:14.914, Speaker B: Yep, exactly. So the underwriter in this case would, let's say, be an off chain market maker, and they would convert reputation to eth on behalf of a maybe a large staking protocol or something like that. It's definitely, it's like a trust, very trusted relationship because obviously there's a lot of collateral online here. I don't know how like how widespread reputation will be used as collateral, especially in the end game, but it can be used as a bootstrapping mechanism to get us 90% of the way there.
00:15:22.734 - 00:15:53.054, Speaker A: One concrete example could be for example Ladislaus, who's on this call, his reputation is probably worth more than 1000 if someone could be willing to put forward a thousand if and trust ladies allows to not cause a fault. It could also be like contract based, like the collateral could be a house or something and then you can make use of the legal system.
00:16:12.054 - 00:16:40.254, Speaker D: Maybe this is beyond the scope and maybe I'm just not understanding fully, but how do you guys sort of size the amount slashed or is it just there's an amount and it doesn't matter what the impact is. Is there a dynamic function of, let's say it impacts, how do you measure the impact? But let's say theoretically you could, and it had an impact of 1000 eth. Let's say I was liquidating someone, I couldn't get my transaction. Does it take into account any of that or is it just this is what we're going to slash?
00:16:41.834 - 00:16:56.404, Speaker B: Yeah, so this is generic way to put up collateral, but the actual slashing mechanism. So how much you're going to slash, where you're going to slash if you're going to freeze it or whatever can be done by another smart contract. It's not part of the great question though.
00:17:00.144 - 00:17:21.204, Speaker A: Right? In some sense the amount that's slashed is a bilateral agreement between the user and the sequencer. But the minimum balance to register, that is something that we want to have a very clear shelling point so that all the roll ups use the same number, so that all the roll ups agree on who the next pre confer is and we can have shed sequencing.
00:17:23.093 - 00:17:32.685, Speaker D: Okay, so the standard is on the minimum required and then the maximum is sort of like an agreed relationship between the two parties in some form, yes.
00:17:32.829 - 00:17:46.033, Speaker A: But even if the minimum is, let's say 100 or 1000, the amount that is actually slashed if there is a fault doesn't have to be 100, it could be just one if, if that's agreed with the user. Connor.
00:17:47.274 - 00:18:26.864, Speaker E: Yeah, I guess the, like all of this and all the assumptions here is based around your, I guess maybe your original assumption that it has to be a thousand ether hundred, there has to be some collateral on the line. Like is there any consideration for like no collateral? Because obviously if we're talking about reputation then like that's what roll ups are basically doing now, right? So like with the system, you obviously think this system wouldn't function with just pure reputation. But is that possible? It has to be a unified interface for all sequencers, I guess.
00:18:27.524 - 00:19:10.854, Speaker B: Yeah, I think Justin can answer this question, but I just want to say like the proposer always has, can always renege on their pre conformations. And because proposers are such like decentralized, so that's like any, if we make it permissionless to become a pre confer and therefore anyone can do it, then pre conformations essentially have like very little value. And it's very easy for an egg, especially because, you know, it's all permissionless and very distributed as a part of like Ethereum's proposal set. And of course the, I guess the underlying assumption of all of this is that pre conformations are going to end up securing like a lot of value if that becomes, you know, increases in the future. We also want to have like a robust framework in place to do that. I don't know if that answers your question.
00:19:11.594 - 00:19:57.734, Speaker E: Yeah, I guess, like, so you're saying that we, we need to have like a standard framework for slashing. But like in the case where like let's say you're the person that doesn't have, doesn't have enough collateral, you're obviously a highly reputable person so that probably should be enough for most people to trust you to bring information anyway. In the case that you're like a pool, you can do the same thing. You can just say, oh, we're actually just going to, in this case we're going to put up staked eth. The thing that you're slashing, the reputation or the tokens doesn't necessarily feel like a fundamental thing is in a fundamental thing to pre conformations. We're just putting something in the middle here to standardize the interface, but I'm not sure if that's actually necessary.
00:19:59.374 - 00:20:41.118, Speaker A: So in terms of the bilateral agreements between the user and the pre confer, you're right, it could be like totally arbitrary. Like a pre confer could put forward that punk for example, as collateral. But from the point of view of the roll ups, there needs to be a canonical registry so that all the roll ups agree on who the next pre confer is. So there needs to be a standardized registration process. It's almost like an anti Sybil mechanism. But if, let's say it's 100 Eth or 1000 eth, that doesn't mean this thousand Eth is going to be the thing that gets slashed. It could be side collateral or it could be, as you said, just pure reputation.
00:20:41.118 - 00:21:09.404, Speaker A: So Coinbase for example, could register with 1000 etH. So now we all have an understanding as to who the next preconfer is. And when the pre converter happens to be Coinbase, Coinbase can say just trust me and tough luck if you don't trust me. I don't want to be exposed to any slashing risk. But they do need to put forward 1000 if just to start playing the game so that we know who is playing the game.
00:21:10.944 - 00:21:22.544, Speaker F: Why is that acceptable? I think the reputation side of this is I'm getting a little lost with.
00:21:23.724 - 00:21:47.824, Speaker B: Yeah, I mean, from the perspective of users and roll ups, there's always collateral and whatever this minimum collateral parameter is, there's always that much collateral backing a given pre conformation, unless there's like slashing event that happened in the past. So it's not reputation based on like the, I guess the slashing side. I think what Justin's trying to say is that there's like this reputation applies to like roll ups specifically. Can you expand on that a little bit?
00:21:50.124 - 00:22:34.408, Speaker A: Right. So in order to register, you need to put forward like the strongest form of asset which is eth. And this is from the point of view of infrastructure that is enshrined on chain, which is the roll up smart contracts and the registry that determines who the next pre confer is. But then there's basically a dynamic which is fundamentally off chain. So once the pre confer has been selected, now the users and the pre confers have this fundamentally off chain bilateral agreement and they can do whatever they want. It's totally permissionless. And if they want to use some other asset other than EFS collateral, that's fine.
00:22:34.408 - 00:22:35.672, Speaker A: I mean it's not something that we.
00:22:35.688 - 00:22:45.134, Speaker B: Can prevent, but it's built into this registry contract to have slashing. If you have a unified way to do slashing for your roll up. Right?
00:22:45.674 - 00:23:13.474, Speaker A: Yeah, I mean, from the point of view of avoiding fragmentation and having a standard, yes. It would be very nice if every single pre confer used the exact same slashing format and slashing conditions, but it's just like paying tips and paying fees. Like in theory, it is always possible to have a separate agreement that doesn't go through the standardized rails.
00:23:14.654 - 00:23:15.714, Speaker B: All right, cool.
00:23:18.734 - 00:23:19.594, Speaker A: Connor.
00:23:20.454 - 00:24:02.454, Speaker E: Yeah, so like I guess you mentioned that the roll ups need to have some sort of something put up by the preconfirmer to show that the main business or their series effectively, like if they pay for the right, let's say for example, there's some base fee that's required to be like you must pay this to become a pre confirmer. I'm sure that's a lot less than 100 etH, or even 32 eth. Like a roll up will be happy enough to let someone pre confirm for the next 12 seconds if they pay one. Either two, either. That's it. Like paying upfront or paying a fee should possibly be enough, right?
00:24:07.754 - 00:24:26.324, Speaker A: Yeah, that's interesting. Maybe instead of paying with the cost of money, you mean you just pay upfront with actual money. So you just burn one Eth and there you go, you're registered, you're taking.
00:24:26.364 - 00:24:39.264, Speaker E: The risk that people won't send you pre confirmations, but I guess you would probably only pay in the long term if you are. It's a bit like execution tickets, but potentially without needing execution tickets.
00:24:40.564 - 00:25:20.334, Speaker A: I mean, the nice thing of having, let's say 1000 Neph, is that if we can have a shelling point that everyone should not only use the thousand NEF for the registration process, but also for the bilateral agreements with users, then they kind of dual purposes this, and it's actually maybe more efficient, right, because you don't burn the one eth. So in some sense the files, and if is quote fundamental, and so you might as well dual purpose it as both registration anti Sybil mechanism, but also as slashing collateral in the case of a fault.
00:25:20.814 - 00:25:52.764, Speaker F: Let me ask you a question. I was thinking about this because I think this is one of the most important things that should come up in every conversation, is trying to make these systems as censorship resistant as well as possible. And I'm just wondering if the reputation side lends itself as credibly neutral from a censorship assistance standpoint, or if that's the purpose of having decentralized, permissionless collateral.
00:25:54.064 - 00:26:40.454, Speaker B: Right. That's the whole point of the underwriter is that there's, from the perspective of the on chain system, there's always 1000 ETH or whatever minimum collateral is for every proposal, right? So there's always this kind of collateral, pristine collateral backing it. The underwriter has to take that like reputational risk off chain. If we do something like Justin's suggested, where there's like these um, almost out of protocol agreements for reputation after the registration, and then like selection phase is over, uh, then yeah, that would be, that wouldn't be maximally incredibly neutral. But there's ultimately nothing that the users can do to um, you know, if they want to pre confer, then they have to go to the pre conference. So the pre conference um, is enforcing that, then it's just social consensus to avoid that. But there's no uh, there's always, there's always a thousand eth on chain backing your pre conformations.
00:26:40.454 - 00:26:41.154, Speaker B: Anyway.
00:26:49.934 - 00:26:51.634, Speaker A: Connor, you have your hand up.
00:26:56.574 - 00:26:59.234, Speaker E: So I guess. I guess that's probably the legacy hand. Sorry.
00:27:03.094 - 00:27:51.404, Speaker A: Sam, did that answer your question? In some sense? For censorship resistance, we want to have a very diverse set of pre confers. Now if the barrier to entry to becoming a preconfer is 1000 actual pristine ETH, then that might artificially increase the barrier to entry. But then we have this idea of using underwriters that can do the translation between non pristine ETH and pristine ETH so that if, for example, Ladislas comes forward and he doesn't have a thousand neph, but his reputation is worth 1000 neph, then now he can become a pre confer. And so Ladislaus is adding to the decentralization of the set of pre confers and it's improving sensory persistence.
00:27:52.504 - 00:28:04.704, Speaker B: Yeah, thanks, Justin. The other side of this is the proposal rules. So if there's a solo staker who doesn't have a lot of reputation, but they still have, they're 32 eth they can use, they can also get their team up with other proposers.
00:28:06.324 - 00:28:34.604, Speaker F: Yeah, I just figured that. I mean, in a sense, like it's a little bit like with the hedge fund or a mutual fund, right? Like you want to invest money because you have this great idea, but you don't have the assets. So you go out and say, hey, give me your assets and I'll go and do this work for you. Right. And then I'll return you the returns. Like, my guess is that you will have lot of cooling that will lower that threshold such that you don't need to have reputation. But I could be wrong.
00:28:40.704 - 00:29:14.814, Speaker A: Yeah. One of the issues with pooling, by the way, a lot of these issues just go away completely once we have execution tickets or execution auctions because now the validators don't have to put forward collateral. So it is a temporary problem. And once we do have these execution auctions, then the only entities that do need collateral are the sophisticated gateways or whatever you want to call them. And realistically there's going to be a small number of those. Yeah, I forgot what. Yeah.
00:29:14.814 - 00:30:16.134, Speaker A: Oh yeah. The problem with pooling is that it requires maximum trust. So it requires every user in the pool to trust every other user in the pool to not get them slashed. I mean, one thing that you can do, for example, is if you have 30 validators each putting forward 32 eth, and there is a slashing that happens more likely than not the slashing that does happen will be less than 32 eth, because almost all the time the value of the block is less than 32 eth. But there is technically these really long tail edge case events where really a full thousand eth gets slashed, and now everyone in the pool gets slashed. This becomes a little bit better with DVT. With DVT, instead of having to trust everyone, you only have to trust two thirds, which is so much better, but it's still an honest majority assumption.
00:30:24.574 - 00:30:48.824, Speaker C: Speaking of execution tickets, I was actually thinking kind of differently. So instead of this kind of problem going away with execution tickets, I could almost see a similar paradigm arriving with execution tickets, where you have these underwriters and these pools that allow solo stakers to pool together to purchase an execution ticket. I don't know what your thoughts are about that.
00:30:50.524 - 00:31:18.514, Speaker A: So the value of one execution ticket will be the expected value of one slot, and that's on the order of 0.1 eth, at least today. And it should go well. It's hard to predict if it will go up or down, but my guess is they will go down for various reasons. And so purchasing a ticket is, is, you know, 10,000 times easier, I guess, than putting forward the files in.
00:31:28.534 - 00:31:34.790, Speaker D: Sorry, maybe I missed this. Does the underwriter post any collateral themselves?
00:31:34.862 - 00:31:39.904, Speaker A: Yes. So they are actually the. The one posting the collateral for the pool, though.
00:31:39.944 - 00:31:48.152, Speaker D: So, like, let's say I trust Justin to manage it, or he's like the manager of the pool. I put my 30 tooth in. Everyone does. You now manage 1000.
00:31:48.208 - 00:31:48.568, Speaker B: Are you.
00:31:48.616 - 00:32:14.642, Speaker D: Is it between us whether I require you, because it's off chain. I was just thinking like, puffer's model. Like, could. We don't want to overcomplicate this, but could the underwriter have to buy an execution ticket? So, like, you know, I guarantee there's not a principal agent problem where if the underwriter fails at his job, I actually don't have much of an impact. I was thinking through, like, rocket pool. Is this similar? Or like, how did Puffer address this to get the alignment right? I don't want to over complicate it. I was thinking through.
00:32:14.642 - 00:32:17.170, Speaker D: Is that a potential idea?
00:32:17.362 - 00:32:51.500, Speaker B: Yeah. So, like I said before, the underwriter is like a trusted entity and has to be trusted by the proposers that they're not going to scan with their ETh. It's also possible to write in underwriter as a trustless defi application. So you could do a smart contract on Ethereum as well. And then you, like I said, use signature exchange protocols to just have this your EtH escrow. So you can essentially say, you can write a smart contract that says, as soon as I have 30 proposers opted in and they all restake to me, then I will register with the pre conformation registry and delegate to all these proposers. You can just write that into the code.
00:32:51.500 - 00:33:02.964, Speaker B: So there doesn't necessarily have to be a trusted relationship in the proposer pool example. But obviously, if the underwriter is off chain, then you do need trust to, um, for them to, like, handle that eth responsibly.
00:33:06.464 - 00:33:13.004, Speaker A: Sorry, I'm a little confused. Um, the underwriter is the one that provides eth. It's not the one that receives eth from another entity.
00:33:14.664 - 00:33:23.648, Speaker B: Right. I I'm saying, in this example, the underwriter could receive ETh in the form of restatement. So another form of. Yeah, right.
00:33:23.696 - 00:33:29.524, Speaker A: But if, if it's an on chain form of collateral, then that can just be made trustless with a smart contract.
00:33:29.864 - 00:33:30.964, Speaker B: Exactly. Yep.
00:33:42.384 - 00:34:44.326, Speaker A: So I guess one example could be like, I have a punk, which is worth 1000 if, more than 1000 if, and I'll have a smart contract whereby if the underwriter gets slashed, I lose my punk. Basically, the punk goes to the underwriter because I caused the underwriter to get slashed. And so now the underwriter, who's lost a thousand neve, they can take my punk, sell it, and recover their thousand neve. And all of that is trustless. So in some sense, you can think of the underwriter as just being an over collateralized, like, loan thing. Like, I have some form of collateral which is worth more than the minimum amount of collateral to become a registrant. And, yeah, the underwriter is providing the eth based liquidity and taking in as collateral other forms of reputation.
00:34:44.326 - 00:35:07.973, Speaker A: So in the case of Steve, maybe you could use this, I don't know, Ave or something. You don't necessarily have to go through the underwriter, but if you're dealing with reputation or punks or whatever, some, whatever market is not liquid enough for these over collateralized loans. Yeah, you can go through the underwriter.
00:35:15.273 - 00:36:12.684, Speaker G: Matthew, you mentioned that the registrant can delegate to many proposals. So you highlighted this one too many, just as an example in my head. So I would have thought maybe we have a proposal pool, let's say, in just as examples, 30 solo stakers putting up 32 eth collateral through the, by the means of an underwriter. So they become a registrant as a pool. That's my current understanding. But, but let's say they operate 60 validators in terms of proposals so they would, so they would have, they would delegate, in my understanding, the one registrant to 60 proposals. Is that sort of right in this one too many what you're thinking, or am I in there like a larger design space?
00:36:13.104 - 00:36:42.700, Speaker B: Yep, exactly. So the registrant can delegate it to as many proposals as they'd like. It's just any proposal that they delegate to. If that proposer does a fault and ends up getting penalized or slashed, then the registrants collateral would be slashed as well. So I think the registrant is easiest to think about, is like kind of the manager of a pool of proposers, and they just are kind of like a logical entity to think about this collateral here. I will note that kind of delegation mechanics are very flexible. You can do delegation off chain through signatures.
00:36:42.700 - 00:37:02.224, Speaker B: You can do delegation through, like, you can change your delegation over time. So if I wanted to add a proposer after a certain amount of time, I can use a smart contract to like, have a release of a transaction in the future. There's a whole bunch of things you can do to make the delegation, like, pretty smooth and straightforward, just kind of built on top of this base layer.
00:37:06.204 - 00:38:23.004, Speaker A: Matthew, you mentioned that the exact slashing conditions can be programmable when you can use a small contract. But we do need to make sure that there isn't basically an attack vector where a registrant just delegates to every single proposer and configures their slashing contract to be the never slashable contract. Because then basically now you have a bunch of proposers who don't even know that they're proposers pre conferred, that don't even know they're pre confrs and, and you defeat the anti Sibyl mechanism. So I think maybe one possible solution here is that there's always at least some default or standardized way to slash if you do delegate. And my favorite approach for this is just to use EVM bytecode as the language to. No, maybe I will track that. But do you see the problem, Matthew, that we need to make sure there's at least one default way to slash if you do delegate?
00:38:23.744 - 00:39:30.662, Speaker B: So I think this is where our models differ a little bit. I'm imagining that the registrant would choose what slashing contracts they are willing to accept slashing from this is similar to opting into an AbS. You're choosing what slashing contracts and therefore what slashing conditions you're enabling your purposes to be slashed on this is you're going back to saying my model has all of this slashing and penalization happening through this collateral smart contract. So I think for you, you're imagining this registration and I'm taking this a step further and saying what if we just do all of the slashing and all of the penalization through this eth that we already have. I want to say if we do this model where there's a slashing contract for each roll up and then register can choose what roll ups they want their proposers to be involved in, this is be the way to opt into new roll ups. Because obviously you can't make permissionless slashing. So you can't require a pre confer to, to set up their slashing in a permissionless way.
00:39:30.662 - 00:39:42.074, Speaker B: Or else you could get into slashing conditions that you're not aware of. So I don't know if that makes sense and we can discuss this in the future offline if you want. I guess that's how I think about it.
00:39:49.894 - 00:40:21.364, Speaker A: Right. So you're thinking of having the, the slashing and the registration would be all in one place. And I think that makes sense. But we want to make sure that if I'm a registrant and I delegate to someone, the person that you've delegated to can actually slash the registrant. Because if they can't, then now the registrant can just dos the system by delegating to everybody, none of which are actually slashable.
00:40:23.944 - 00:40:58.254, Speaker B: Right. So I guess what you're saying is you can get to minimum collateral without choosing any slashing conditions. And this means that you have gadget collaterals, but the collateral doesn't actually mean anything. This is where I think, I disagree. I think minimum collateral is like, I determine what a precaution is, but it's up to every roll up to know if a proposal or a precoffer has opted into their slashing conditions. So let's say you can have a proposer that has a collateral balance of more than minimum collateral. If they are not opted into the slashing conditions of the roll up, then from the perspective of the roll up, they're not actually, they don't actually have any collateral.
00:40:58.254 - 00:41:31.084, Speaker B: So I guess minimum collateral is like a shelling point and in practice should be, you know, if you have more than minimum collateral and you're opted into a roll of slashing conditions, then that should be enough. Then hopefully all pre conferences are off like almost all slashing contracts, whatever they feel comfortable with. So there's this like a dynamic of are you a pre confer for roll up? And the goal of this is to coordinate that all proposers are pre conferenced like or the same. And of course, of course across multiple levels. Did I answer your question?
00:41:34.504 - 00:41:47.344, Speaker A: I mean, one thing that we do want to make sure is that every single roll up agrees on who the next precontor is. So that we have this notion of a shared sequencer. And.
00:41:50.364 - 00:42:16.096, Speaker B: This can be permissionless. It can't be permissionless for a new roll up to opt into having third leader done by this program. Or else they could have their own slashing editions and then there would be like, their pre conformations wouldn't mean anything. They could of course still use a leader, but they wouldn't be able to offer basic pre conformations. Right.
00:42:16.120 - 00:42:38.184, Speaker A: So it's permissionless for a roll up to do whatever they want. But presumably there will be some shutting point, some standard. And we do want to make sure that this standard is reasonable. And I think it would be an unreasonable standard if it was possible to register and delegate and not be slashable in any way.
00:42:38.724 - 00:43:46.294, Speaker B: Right. What I'm saying is that even if you do that, then the delegates that you have, let's say you have a delegate to Justin, then Justin would have a lot of collateral, but from the perspective of the roll up, he would not be eligible to be elected. So the leader for each roll up might differ based on that, but of course that's an edge case and something that should be able to, if my roll ups are all, let's say I have all of the optimism roll ups, they all agree that you need to be opted into the op stack slashing conditions, then those can be the requirement to interop with b stacks. I guess the registrants can choose who they're going to delegate to. And then based on how they choose, this is what determines like the, I would go this and then there can of course be a minimum. So if you do want to opt into the slashing conditions of a roll up or you want to reach minimum collateral, then you also have to meet some like minimum requirements. But I don't think the pre conformation registry should be like opinionated or permissioned on like what slashing contract you can use.
00:43:46.294 - 00:43:47.962, Speaker B: So that is it.
00:43:47.978 - 00:43:59.124, Speaker A: That is, it shouldn't be permissioned, but there should be at least one slashing conditions. So the set of slashing conditions that come by default should be non empty.
00:44:01.304 - 00:44:07.888, Speaker B: I don't see why. I mean, it's okay if you have more than 1000 eth of collateral. If it's just doing nothing, you wouldn't be.
00:44:07.936 - 00:44:17.724, Speaker A: Well, no, because if you can literally delegate to all the validators, all million of them, with just 1000 eth, then you've just completely lost the system.
00:44:18.724 - 00:44:40.052, Speaker B: Except that even though your delegation exists and is on chain, and the collateral balance of these roll ups is greater than 1000 e, so they would be considered pre offers in the strictest sense of the term. Every roll up that's actually achieving interoperability and being based and having the shared sequencer effect that you're mentioning wouldn't elect these proposers.
00:44:40.228 - 00:44:50.394, Speaker A: Right. But that requires social agreements amongst the roll ups. But yeah, I agree that can be done, but it's kind of a higher lift from a coordination standpoint.
00:44:50.514 - 00:44:53.054, Speaker B: How do you mean? Why do we need social coordination from rollups?
00:44:53.514 - 00:45:08.266, Speaker A: Because they all need to agree on what is an acceptable slashing condition to be considered to be registered as a pre confer for that roll up.
00:45:08.450 - 00:45:42.260, Speaker B: Right. So, yeah. Okay, so let's say roll up a and roll up b both have their own different slashing conditions. If rollup a set slashing conditions to a smart contract for rollup a, and then roll up b sets it to a smart contract for roll up b. In order for these to elect the same leader and kind of be like, form this coordination, then a registrant would need to delegate while saying that these two smart contracts are both allowed. And this is very easy to do if you just have the registrant choose those two. But if the registrant doesn't, then neither of these roll ups, like, consider those, I guess.
00:45:42.260 - 00:45:43.788, Speaker B: Does that answer your question? I might have said in a kind.
00:45:43.796 - 00:46:19.284, Speaker A: Of a complicated way, I think we need to have a conversation offline. Yeah. Any other questions before we move on to the private part of the conversation and close this public presentation? Okay, thanks.
00:46:19.824 - 00:46:25.964, Speaker D: There was a question in chat, I was kind of wondering. Same thing. Someone asked about the risk to the underwriter. I don't know if we covered that.
00:46:27.424 - 00:46:50.386, Speaker B: Yeah, I was just typing response. So the underwriter actually has very little risks. Um, we talked about like, collateral defect risk, but they only have like, long term collateral defect risk. So let's use a LST example. An underwriter accepts an LST from a large node operator, and then they, they convert this to ethns and register. So they have kind of this, this dependence on their collateral. It's a LST.
00:46:50.386 - 00:47:31.606, Speaker B: If this LST de pegs, goes through some sort of DPG event, maybe a bug, then the 1000 ETH would still exist on chain, but the underwriter obviously wouldn't have access to the off chain collateral, or, excuse me, on chain collateral that they would hold. So the problem with that is that the underwriter is then, in the whole duties, doesn't have enough value to fulfill those commitments. But it's only temporary. There's no liquidations. The underwriter can't be liquidated. They're just taking a short term, excuse me, long term risk. If there's a short term TPEG and an LSTD pegs, you know, 50% for 20 minutes, then they wouldn't be liquidated.
00:47:31.606 - 00:47:55.854, Speaker B: There's no problem. They just have to hope that the collateral goes back up to cross the threshold again. So kind of the solution that we think about for this is just have the underwriters be opinionated about what they. What collateral they accept. So don't accept some LSD that has a high deeping risk and you do your kind of due diligence on that. But, yeah, it's a risk to the underwriter and not to the pre conformation collateral protocol.
00:48:08.074 - 00:48:25.294, Speaker A: Right. Thank you. Any other questions before we close? Amazing. So that's the end of the public part of the conversation. Opening it up to the off the record part of the conversation.
