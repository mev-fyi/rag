00:00:00.410 - 00:00:33.238, Speaker A: Yeah. All right. So we've deployed finally a version that is free from the bugs that plagued us for kind of long time. Very much thanks to Lukash and his reviews and help and effort. He helped quite a lot to find what was. Was actually bugging us there. So finally, as I understand currently, we are doing much better.
00:00:33.238 - 00:00:48.860, Speaker A: But hopefully Killary will tell us more and soon we'll fix the new things that Killari found and will be perfect. I think that's it with us.
00:00:49.870 - 00:01:15.960, Speaker B: Yeah, I got now the netramide working with the interceptor, so it's kind of producing good results. There's still a couple small issues, but like the one I shared in the telegram about that natural mite is missing. Those two fields that are missing from the. They were also missing for the spec, but we discussed about them before of adding them. But I don't think adding them is that difficult because they're kind of almost already there.
00:01:16.490 - 00:01:24.600, Speaker A: Yeah, we'll update it today, later today and we'll see if it will all be up to spec.
00:01:25.210 - 00:01:47.280, Speaker B: But yeah, I continued testing the nether might more. It's now very nice because now it's kind of functioning everywhere where I have been tested so far. So it's going to be easier to test and I can start test the differences between get and nethermite easier. I'm not just getting the same error that I used to get. Very cool.
00:01:50.920 - 00:01:54.340, Speaker C: Have you actually been able to test the blobs?
00:01:56.380 - 00:02:36.300, Speaker B: Those are something I haven't tested yet, but yeah, I should try to test those. It's because I need to set up the network and I hate setuping stuff. So it's always more difficult for me to kind of get into that, to set up some network that has forked already, then test them. But I guess I cannot test them in the gurley or somewhere else. But I guess. Are you expecting them work or do you feel that they shouldn't work yet in the Netherlands?
00:02:36.460 - 00:02:37.490, Speaker C: We'll see.
00:02:44.160 - 00:03:42.850, Speaker D: Yeah. So as for me, I pushed some changes that I had locally and updated some images. Basically it has the newest version of Geth. So I updated my branch and I had some merge conflicts to work through and also updated the base. Sorry, blob gas price field to blob base fee as it is now in the spec. Yeah, I also made some other change that I kind of posted in the chat. Basically I removed some of the early validations that we do in get.
00:03:42.850 - 00:03:57.060, Speaker D: I felt like it was not super necessary because those errors will be caught by the EVM. So it's just that they will be returned at a later point during execution.
00:03:59.960 - 00:04:01.460, Speaker B: Validation checks.
00:04:03.320 - 00:04:07.770, Speaker D: It's things like checking that.
00:04:09.660 - 00:04:10.068, Speaker B: I don't.
00:04:10.084 - 00:04:21.032, Speaker D: Know when you're creating a contract that you have some code for it or just some checks that will be done by the EVM anyway.
00:04:21.166 - 00:04:21.850, Speaker B: But.
00:04:23.600 - 00:04:41.410, Speaker D: For some reason I had also added them prior to execution. But I feel like that's not really necessary. And it was creating a lot of hassle for me too, because that code changed quite a lot recently in Geth. It was a pain to just keep it up to date.
00:04:45.060 - 00:04:51.350, Speaker B: Yeah, that's kind of like to make you simplify that pull request to make it smaller as well.
00:04:52.040 - 00:05:28.432, Speaker D: Yeah, it was more of simplification to the pull. You, Hillary, you ran the test and there was no changes as I expected. So I feel like this should not affect the results in any meaningful way. Yeah. Right now I'm working on something that might be useful for you. Basically we have the dev mode in Geth. You can spin up a network very easily to test stuff.
00:05:28.432 - 00:05:52.010, Speaker D: So if you want to test blobs in geth, that would make it so much easier. But right now they are not working. Blobs are not working for dev mode, so you cannot send blob transactions. But that should be fixed by tomorrow. And then if anybody wanted to test, then that's one way of doing it.
00:05:52.620 - 00:06:04.030, Speaker B: Can I somehow easily set up the test RPC to be kind of in the fork network already? Shouldn't that be easy in a way that I should be able to say some conflict that it has forked already?
00:06:05.040 - 00:06:17.280, Speaker D: Yeah. So it is like in this dev mode that I'm talking about, you can just provide a flag to override the cancun block number and then you basically.
00:06:17.350 - 00:06:25.600, Speaker B: Can say that the dev mode is in test RPC. Sorry, the dev mode is in the test RPC setup.
00:06:28.520 - 00:06:30.688, Speaker D: What do you mean by test RPC?
00:06:30.864 - 00:06:38.840, Speaker B: I would run the hive test and for there I would want to run the hive test in the kind of the upgraded network and not in the kind of old network.
00:06:42.620 - 00:07:00.108, Speaker D: No, that's a bit different. That's a bit different for that. In hive we have the chain config. So like the Hive simulator. Do you have a fork of hive? I think you.
00:07:00.274 - 00:07:00.990, Speaker B: Yeah.
00:07:01.920 - 00:07:10.770, Speaker D: So we just have to change one line there. I will send you later today. I'm outside at the moment.
00:07:11.780 - 00:07:24.580, Speaker B: I wonder if that's something that should be done in the hive or I don't know how the hive is going to be operate. Is the hive going to kind of fork at the same time? After ethereum or how it's supposed to be working, like the default config.
00:07:25.160 - 00:07:35.290, Speaker D: Yeah, that's a good question. I guess we should change it at some.
00:07:38.300 - 00:07:38.712, Speaker B: Mean.
00:07:38.766 - 00:07:52.880, Speaker D: I think it depends on the other. Do I think something I can try just to update to Cancun and see if anything starts breaking because we don't want to break existing tests.
00:07:55.140 - 00:08:09.460, Speaker B: Yeah, but if some of the tests are breaking for Cancun, then I feel that there's something wrong that we should be fixing. Everything going to work in the cancun.
00:08:12.840 - 00:08:15.190, Speaker D: Yes. So things should work.
00:08:20.060 - 00:08:20.424, Speaker B: Yeah.
00:08:20.462 - 00:08:38.300, Speaker D: I mean if something breaks, it's probably just because of it expects a different number of bugs in the chain or something like that. Something in the test suit itself. So nothing should break because we don't have a backwards incompatible change in Cancun.
00:08:39.840 - 00:08:40.590, Speaker B: Yeah.
00:08:42.720 - 00:08:45.570, Speaker D: But it would be interesting to try. Yes.
00:08:47.060 - 00:08:56.096, Speaker B: Yeah, I think we should test setting the plot transaction it simulates as well, even though they resimple. But it should be still tested.
00:08:56.288 - 00:09:02.950, Speaker D: Yes, sure. Anyway, so that was it for me.
00:09:07.720 - 00:09:10.810, Speaker B: Does Lucas have had time to update us?
00:09:13.180 - 00:09:38.130, Speaker E: Not that much. So, still working a bit with Oleg on stabilizing and reviewing stuff. But the thing that was quite visible for me is that maybe Olek can comment more. Is validations around balance I think. Right?
00:09:39.060 - 00:09:39.810, Speaker A: Yes.
00:09:43.780 - 00:09:46.370, Speaker E: Can you tell more? Because maybe.
00:09:48.680 - 00:10:21.150, Speaker C: One of the probably most special things about what our client currently consumes is the fact that to do actual transactions we take from you not only the amount of guests that you need to do to have to pay the transaction, but there is some extra fees relayed on top of that that are based on minimal minor fees that are required. And I don't think we have it currently anywhere in the spec.
00:10:22.000 - 00:11:30.310, Speaker E: Well that's normal execution in evm that you charge the maximum fees for transaction, right? Based on the things like max maximum priority fee. That was the one I was looking for. And then you potentially refound it, right? Yes. Also like intrinsic gas, et cetera, all those things are taken, deducted and I'm not sure how GEF works here. Does it have a different mode in ETH call and ETH simulate in terms of checking balances for being able to pay for this gas Sina, do you know about it?
00:11:31.240 - 00:11:48.280, Speaker D: So what I can say is that by default when you do east call or e simulate, we set the gas prices to zero so that those validation checks will always pass and basically nothing will be deducted and refunded.
00:11:49.020 - 00:12:02.430, Speaker B: Okay, what about. Intriguing. Sorry, user takes them out and not going to define them, then I guess they are set to zero. But if the user defines them, then they are what they are.
00:12:03.440 - 00:12:19.490, Speaker D: Yes. And if the user sets any gas price field, then it will be like normal main net. So we will check and we will reduce the max fee at the beginning and then refund anything that is left at the end.
00:12:20.360 - 00:12:26.390, Speaker E: Okay, so it's pretty simple solution. I think we can try to replicate it.
00:12:26.840 - 00:12:31.050, Speaker C: My question would be what do you do, Sina, when the validation is on.
00:12:33.420 - 00:12:42.110, Speaker D: I feel like gas price. It's not any different when validation is on versus when it's off.
00:12:43.760 - 00:12:45.390, Speaker C: So we keep it at zero.
00:12:47.840 - 00:13:02.080, Speaker D: Okay, so that's what you mean. So if validation is on, do we default to gas price zero still? Yeah, that's a good question. I should look that up potentially.
00:13:03.060 - 00:13:14.070, Speaker E: We shouldn't go with zero because that's not realistic. Right. We should probably check the gas price on the current chain and go with something there.
00:13:14.680 - 00:13:20.340, Speaker B: Well, I think we differ to zero and it will just fail.
00:13:26.180 - 00:13:27.920, Speaker C: Could you repeat Kilari?
00:13:29.380 - 00:13:33.060, Speaker B: I think we'll defer to the zero there and it will just fail.
00:13:33.880 - 00:13:38.330, Speaker E: Well, it won't fail with zero, right? Or why would it fail with zero?
00:13:39.660 - 00:13:43.464, Speaker B: If you have the validation mode, then it should check that in.
00:13:43.502 - 00:13:55.500, Speaker C: Never mind in validation mode, you, I think won't be able to set it to zero because there is this minimal amount that is required.
00:13:56.640 - 00:14:06.770, Speaker D: Wait, but I have a question on Mainnet. If a miner were to include a transaction that has zero gas price, will that work?
00:14:07.380 - 00:14:14.710, Speaker E: No, because there's a base fee. It needs to pay the base fee, right?
00:14:15.320 - 00:14:16.070, Speaker D: Yeah.
00:14:21.520 - 00:14:27.020, Speaker E: It would have worked prior to 1559, but now it doesn't.
00:14:27.440 - 00:14:58.000, Speaker D: Okay. Yeah, I mean this is something that I should definitely look at. But do you guys also do any coinbase transfer for the simulated block?
00:15:01.470 - 00:15:07.850, Speaker E: Yeah, I think it should be. It's a block. Right. So if there are priority fees, it should go to the coinbase.
00:15:08.530 - 00:15:14.800, Speaker D: Yeah, but there's no mining reward, right?
00:15:16.130 - 00:15:23.390, Speaker E: You mean. No, there's no mining reward.
00:15:23.470 - 00:15:24.340, Speaker D: Yeah. Okay.
00:15:27.430 - 00:15:28.926, Speaker E: There's no mining reward.
00:15:29.038 - 00:15:30.180, Speaker A: I'm not sure.
00:15:31.910 - 00:15:34.920, Speaker D: Because post merge there is nothing.
00:15:35.930 - 00:15:51.530, Speaker E: Mining rewards are on Cl site. It's not. Mining validator rewards are on the Cl site. We only have fees on the el site, which I think should still go. Correct.
00:15:51.600 - 00:15:52.220, Speaker D: Yeah.
00:15:54.830 - 00:16:17.780, Speaker E: So what we can potentially do in the validating mode, we can get gas price. Right. Directly from how we do it in the RPC and set it as default. What would be my.
00:16:20.710 - 00:16:21.074, Speaker B: Mean?
00:16:21.112 - 00:16:27.910, Speaker D: That would mean that we will produce inconsistent results. Because gas price is an estimate.
00:16:28.890 - 00:16:29.640, Speaker E: Yes.
00:16:31.930 - 00:16:47.078, Speaker B: How it's in the spec at the moment is that the gas price is always set to zero if it's missing. And if you're in the validation mode, then transaction will fail. And the idea there is that if you are setting the validation mode, then you should also provide the proper gas pricing.
00:16:47.254 - 00:16:55.520, Speaker E: Okay. Or we can just fail the transaction if it's not supplied. Okay, if that's fine to fail it, then it's fine.
00:16:56.690 - 00:17:11.460, Speaker B: Of course the error is not the best complaining about the gas price. The best error would be saying that the gas price is missing and you should provide it on the validation mode. That's up to the client to decide on what kind of error you give for that.
00:17:17.570 - 00:17:24.778, Speaker C: We basically want to have this always if the client tries to run us in validation mode.
00:17:24.794 - 00:17:25.360, Speaker E: Yeah.
00:17:28.690 - 00:17:29.920, Speaker C: We can check.
00:17:35.590 - 00:18:17.470, Speaker B: Yeah, I think the best day would be that you fail the simulation and you will give a user a good error saying about that the gas price is missing. But I'm also fine with that. It will fail to the gas price error as well, but it's not as nice. Will be anything else to discuss? I think we are getting quite close already.
00:18:21.520 - 00:18:22.300, Speaker C: Yep.
00:18:25.280 - 00:18:28.620, Speaker B: Have you been running the hive, Olek?
00:18:29.860 - 00:18:43.460, Speaker C: Yes, I'm able to run Hive and I was currently working on integrating it better into our client base so that we won't kill all the good stuff we've introduced.
00:18:44.520 - 00:18:50.676, Speaker B: Have you been running so that you will generate the test with gets and then you compare it results then at.
00:18:50.698 - 00:19:14.590, Speaker C: Her mind, well, I was running it like I took your repo and I was able to run them and debug them. And as I understand your code basically compares whatever never mind outputted to whatever geth outputted at that time when you ran it.
00:19:19.040 - 00:19:44.950, Speaker B: You can run it both ways with the generate with Nethermind and then you test to get or the other way around. I think I have been running it generate with the get and then I compare those to netterminds. Results are a bit different depending how you do it, but they should work. Have you been getting the same block hash? That's one thing I'm worried about the most.
00:19:48.420 - 00:19:50.130, Speaker C: I think not yet.
00:19:51.620 - 00:20:20.182, Speaker B: Yeah, debugging that is going to be a bit difficult, but hopefully would get it. I guess this is for today. Yeah. Thank you guys. Thank you. Thank you.
00:20:20.236 - 00:20:20.898, Speaker D: Bye.
00:20:21.074 - 00:20:21.890, Speaker B: See you. Bye.
