00:00:06.970 - 00:00:48.570, Speaker A: Hi everyone. Thanks for coming to the first talk of the third day. Today I'm going to present some work I've been doing with Faye Stefanos and Calvin from King's College London. And it's called bidding walls in onchain auctions. So, yeah, a quick outline. I'm just going to talk a bit about some background on the block production process today and map boost auctions. I'm going to present the model, some variables and parameters, just like overall, some of the strategies we thought of and we implemented in the model, and then some simulation results and some takeaways.
00:00:48.570 - 00:01:34.810, Speaker A: Okay, so for those who are not super familiar with it, this is an illustration of what the block production process on Ethereum today looks like. We are going to focus on the builders part quite a bit here, but basically to build a block for slot n. There is an auction that started at the beginning of slot n minus one. And during slot n minus one, builders compete by submitting bids. We'll see what the bids mean and they submit bids alongside block headers. And basically the goal is to submit the highest bid before the end of the auction. That happens around the slot boundary.
00:01:34.810 - 00:02:29.900, Speaker A: And so you have the relays that receive the builder bids over time, make them available to the proposer. And all the proposers has to do is just to call, get header to get the highest bid around the slot boundary, commit to it, sign it, return that signature to the relay, and then the payload is revealed, the block is published and propagated to the rest of the peertopian network. So that's like the overall very quick overview of the process. But as I said, we are going to focus a bit more on what happens during the auction. So during slot n minus one. And so the bids submitted by the builders actually represent the value. It's kind of like the cumulative value from all the transactions that are contained in a block at a given point in time.
00:02:29.900 - 00:03:50.274, Speaker A: And this value comes from priority fees and from transactions that are broadcasting in the public mempool, but the value can also come from MeV. So block builders basically have these transactions in the public mempool that's available to everyone and they also can combine this and build defection blocks from bundles that come from searchers. And searchers are those sophisticated entities who are like, basically their whole goal is to spot mvv opportunities, construct bundles, atomic bundles of transactions, and submit it sometimes directly to the builders. So the builders have both bundles and the transactions, and they just try to pack efficiently and build blocks that are valuable, bid that value and try to win the block here is what it looks like in the data. It's just like for one slot. So it looks quite similar to the model I presented. I guess you have each color is a builder, and you can see in this particular example, the value increases quite linearly over time until one bid is chosen by the proposer.
00:03:50.274 - 00:04:35.330, Speaker A: In this case, it's the green dot. So that's what it looks like in the data, and that's what we were trying to model. So I guess here is the one simulation run. So, in our work, we use a game theoretic agent based framework. We use a common python toolbox that's called mesa to model this map boost option. I didn't really want to get into the mat here, so instead I'll just illustrate the main parameters of the model, and I hope it will give a more intuitive understanding of what we did. So, yeah, you have this single simulation run.
00:04:35.330 - 00:05:06.560, Speaker A: Each color represents a different builder. Each dot is a single bid. And we see like, builders increase their bids over time based on the value they get until the winning bid in green is chosen, kind of just like in the data. And I also plotted what we actually modeled as a public signal, PT and a private signal. So the public signal is common knowledge. It's available to everyone, so all the builders actually have access to it. The private signal is a bit different.
00:05:06.560 - 00:05:43.146, Speaker A: It's a signal, but each builder has a different probability of accessing that signal. And we use this to model like exclusive or private order flow. So you'll have one builder that will have 98% of the chances to access that signal when it's updated, and the other ones have different percentages. And so we can model the differences in total signal that you get. And the total signal is just the sum of the public plus private. You also have different latency parameters. So you have a global network latency that affects everyone the same.
00:05:43.146 - 00:06:32.998, Speaker A: You have individual player latencies, because we know builders don't have the same latency, and some are more performant than others. And then you have this parameter that's like the individual profit margin, because usually builders don't want to beat their whole value, they want to keep some profit. And this we can model as well. Not that in practice, it's kind of funny because that parameter can actually go negative quite a bit because builders will want to subsidize blocks. And. Yeah, so for all the parameter here, we just used some historical data fitted in the model and tried to see what it gives. And the auction, as I said, it goes from zero to t.
00:06:32.998 - 00:07:03.122, Speaker A: T actually denotes the time at which the winning bid is selected by the proposer. And we modeled it as like a normal distribution around 12 seconds, or like the slot boundary. We have some results in the paper. I'm not going to go into it here, but it's kind of interesting how that variable slot boundary actually affects some of the strategies you can play during the auction. Okay, let me go into some of the strategies. We have four. The first one is very, very simple.
00:07:03.122 - 00:07:34.490, Speaker A: It's like the naive strategy. So every time you get an update on your total signal, you aggressively bid it. But of course there is going to be a delay between when you get the signal and when you actually are able to submit it and for it to be available to the proposer. You have a bit of a trickier one. It's called the adaptive strategy. And in here you call get header. As like another builder, you observe the highest bid and you bid what you saw plus epsilon.
00:07:34.490 - 00:08:15.846, Speaker A: So this is quite effective when you have low latency because you're just able to try to outbid, but keep quite a big profit margin eventually. And you do this, but you only do this when the bid you observed is lower than your actual total value. Otherwise you just bid your own value. You have a last minute strategy. We actually see that this is played way more in the past month. Before. Builders will just bid from the beginning and not really care, but now they wait a bit more and they hide their value and they just bid at the last minute.
00:08:15.846 - 00:08:51.374, Speaker A: But of course you have to time it well because since there is variability in when the proposer will actually select the bid. So you want to have a safe margin and the other one is extremely similar, but it's a bit more risky. I've not seen it played much, but it's kind of fun to think about. It's like the bluff strategy. So you always outbid everyone for the whole auction. And this has like an impact on the adaptive strategy because it forces them to reveal their true value. Because you can't outbid the blood strategy, it's always going to be higher, and at the last minute you cancel your bid.
00:08:51.374 - 00:09:03.660, Speaker A: We had a post with Mike on this, and you go back to your true value, but it's risky because if you actually reveal too late, then you're going to lose a lot of money because you have outbid it.
00:09:06.750 - 00:09:18.094, Speaker B: If I understand correctly, you have this kind of structure or model for these different types of strategies, and then you fit them to the actual data.
00:09:18.292 - 00:09:36.562, Speaker A: No. So we use the data just to fit the parameters of the model and then the strategies are explicitly implemented. So agents one will play the narrative strategy, agent two will play the adaptive strategies. And we have four agents of each strategies in most of online issues. I see.
00:09:36.696 - 00:09:42.118, Speaker B: And have you look at detecting what type of strategies are being played in the data?
00:09:42.204 - 00:10:11.658, Speaker A: Yeah, no, we haven't, but that would be pretty cool. Just very observational. Bluff doesn't seem to be like a big, big thing. You can see people can sell their bid, but I don't think it's like an explicit bluff strategy. Last minute seems more common and naive is still a very strong strategy. It's very simple, but it's very effective, or last minute, I guess, but it's like naive, a bit delayed. Okay, so I'm going to get into some of the results.
00:10:11.658 - 00:10:54.460, Speaker A: Those are very intuitive results. I think we can do much more than this. But let's see, first you can look at the global delay and the impact it has on auction efficiency. Auction efficiency is like the ratio of the winning bid value to the total signal. And you can see intuitively that the more global delay you have, the less efficient the auction is, because I think it actually quite fits quite nicely to some of what we saw with the relays that implemented like optimistic relaying, for example. Can you guys hear me? Hello? Good. Okay.
00:10:54.460 - 00:11:43.802, Speaker A: And yeah, well, when you reduce the latency at the relay level, and it's like the same for everyone, you allow bids to be a bit higher. So we saw the person relay gain quite a lot of market shares and we can see this in our simulation results as well. So that makes sense. You can also look at individual delay and the impact it has. So you can see it doesn't really change anything in terms of profit per win, but it does have an impact on the win rate. So the more delay you have, or like the more latency you have, the less like you actually have to win the block, which also makes quite a lot of sense. And in our model, based on the parameters we set, we saw that the ten millisecond latency improvement leads to like 2.63
00:11:43.802 - 00:12:42.142, Speaker A: increase in average profit, which is kind of nice. Of course, I'm just going to skip over this, but you can look per strategy, which is a bit more informative, because here you see that the profit per win for the adaptive strategy actually matters because it's a very sensitive latency sensitive strategy compared to the other ones. And then we looked at order flow. So we looked at how the probability of accessing private signal actually impacts your win rate and your profit per win again, not much difference in profit, but what's interesting, I think, is to see how crazy a small percent of order flow or more exclusive order flow leads to huge gaps and huge differences in your win rate. So I think, I don't know. There is a meme of order flow is king. And I think it's very true in this model design.
00:12:42.142 - 00:13:40.414, Speaker A: Like if you had to spend money on either improving your latency or getting some order flow from our simulation, it's pretty clear that you should invest heavily in order flow because a small percentage more will lead to a lot more win rate. Okay, so some quick takeaways. We are releasing the Python toolbox open source very soon. We were submitting the paper and we haven't had time, but it's actually really soon. I think I'm less excited by the results we got than the possible things we can actually do with it. We can simulate different network conditions, different bidding strategies, can actually simulate what upcoming upgrades will have the effect of upcoming upgrades on the actual biding strategies and outcomes and auction efficiency. I'm quite excited by this.
00:13:40.414 - 00:14:56.906, Speaker A: Some open questions that we haven't approached yet, but maybe that could also be approached this during the sessions, in the afternoons, like when we design the auction and play with the parameters, what do we actually want to incentivize? Do you want to incentivize people to have good latency or order flow? Both are like centralizing forces. So it's not really clear. Do we want auction design that incentivize people to play very naive strategies? Or are we okay with builders being very sophisticated in the strategies they come up with? Can we measure some kind of notion of fairness or transparency? Or do we care about censorship resistance in the auction design when we design it? All those are open questions that are interesting to me. Yeah. Is there anything we can do specifically in the auction design to prevent, to limit, I guess, vertical integration between the searchers, builders and relays? And I guess we've seen a lot of centralization and vertical integration in the past few months in the builder market. So the design is, I guess, a bit flawed. I didn't come up with a better one, so I don't know.
00:14:56.906 - 00:15:20.770, Speaker A: But if we know this is leading to quite a lot of sensorization between the builders, is that like a limit to enshrining it in the protocol? I think that's also like an open question. Thanks. It. Do we have time for questions? Okay, does anyone have any? Yes.
00:15:20.840 - 00:15:22.690, Speaker C: Did you jerk the municipality?
00:15:25.830 - 00:16:04.560, Speaker A: So you mean you bid more than you should? Yeah. Well, in the model, like the signal is always kind of increasing. That's something we could set differently to actually observe this. But in the model, no, the only huge winner curse you observe is like when you bluff and you don't reveal on time, and this is really bad, but since, no, the model was set up to actually only increase, so you don't really observe. This could be interesting to actually have some kind of varying signal and see how that affects it.
00:16:06.130 - 00:16:07.760, Speaker C: What is the signal now?
00:16:08.550 - 00:16:32.150, Speaker A: So the signal captures the cumulative sum of the value that are in the transactions in a given block. So you have a block at the given point that's made of bundles and transactions, and those transactions have value, and that's the signal. And then the bid reflects the signal minus a profit margin.
00:16:32.230 - 00:16:37.260, Speaker C: When you see one of the rivals move in the auction, it makes sense for you to move.
00:16:42.110 - 00:17:23.350, Speaker A: Sorry, can you repeat it? When you see one of the rivals, your rivals in the auction, and they raise the bid, would that make sense for you to react to that? Yeah, that's a good question. It's really the adaptive strategy. The whole point of the adaptive strategy is to observe the highest bid and try to outbid it by epsilon all the time. And that's all you do. And you do this. So that's explicitly what you said, but you do this. No, because in the strategy, how the strategy was implemented is like, you do this unless that value actually outweighs the total signal you have.
00:17:23.350 - 00:17:30.970, Speaker A: So when you observe a bid that's higher than your total value that you actually observe, you just bid your true value.
00:17:31.120 - 00:17:43.802, Speaker C: Maybe to phrase it differently, I think the private signal is private valuation. Like, you have transactions other people don't have. You don't make inference from other people's.
00:17:43.866 - 00:18:19.740, Speaker A: Bid, you do until the point where another people bid is just higher than your true valuation, then you will just not bid higher than this. Don't say anything about no, because you don't actually know it. I mean, you have the common value, everyone knows it, but then you don't know everyone's private valuation, so it's hard to. But what you can do as a rule, and that's what we implement, is if it actually outbids the actual value I have right now, I'm just not going to do it because it's too risky for me.
00:18:22.590 - 00:18:54.502, Speaker D: It may be interesting to see to what extent those results depend on the specific processes between where the value always increases, because some of the intuition you gave seems to rely exclusively on the strategic interaction of multiple people doing this auction over time. So perhaps the value is fixed and then I want to hide and then be at the last moment, or I want to start high and then perhaps some of those things seems intuitively independent of having this value that trends up and maybe good to split it into what depends on that and what does not depend on that.
00:18:54.556 - 00:19:19.680, Speaker A: Yeah, no, that's a good point. I think the intuition in the first place was to say, I guess the more transactions coming, you can only have more value come into the auction. It's difficult to imagine something that will, but it's not really true because, for example, with sexx arbitrage, you can actually want to cancel your bid because the opportunity is gone and everything. So it will be good to delineate the two for sure.
00:19:23.330 - 00:19:41.860, Speaker C: Are you looking or is there, including the model, the time that it takes for the builder to process incoming transaction and build? Because many times I've seen that builders that are actually winning, there's a hyperlation between the time it takes to process incoming transactional bundles and.
00:19:42.410 - 00:20:04.620, Speaker A: Yeah, for sure. And this is like the individual delay parameter. That's like everyone. There is a global delay that affects everyone the same way, but each builder has a different delay or latency and that's supposed to reflect the time between they receive the signal and the time they are able to bid it and actually make it available for the proposer to. Yeah.
00:20:06.510 - 00:20:44.250, Speaker E: Great stuff. And Matt from Block native, we might have been one of the data points up there. We used to be a builder and what we wound up doing in this problem, and I can say this because we don't do it anymore, is we built ML models to both project what we thought our block value would be and what we anticipated other builders bids to be, because they're predictable and projectable. And oftentimes the winning margin is very slight. And so to have builder relevance, you would sometimes subsidize. So it is worth potentially considering modeling when subsidies might make sense and who might be subsidies for what reason, which is completely independent from Sextex ARB. So just food for thought.
00:20:44.320 - 00:21:12.222, Speaker A: Yeah, for sure. That's a really good point. By default, since we based our parameter on the historical data, the margin, the profit margin could actually be negative in the model, but we haven't looked at the impact. Why will people do this? Because it's a bit like meta. It's like you're going to win market share and people are going to notice you and then trust you more and everything. So this is not in the model at all, but it's why they do it.
00:21:12.276 - 00:21:20.146, Speaker E: Well, very important on the private signal. The only reason why someone's going to send you private bundles is if they think you have a chance to win. So if you're not winning, you don't get private bond.
00:21:20.178 - 00:21:20.374, Speaker A: Exactly.
00:21:20.412 - 00:21:21.206, Speaker E: Which means you can't win.
00:21:21.228 - 00:21:21.574, Speaker B: Yeah, right.
00:21:21.612 - 00:21:24.038, Speaker A: That's why people subsidize one of the.
00:21:24.044 - 00:21:25.910, Speaker E: Many motivations for subsidization.
00:21:27.530 - 00:21:31.320, Speaker A: With that, that's all the time we have questions for. Thank you.
