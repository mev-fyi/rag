00:00:07.240 - 00:00:07.790, Speaker A: You.
00:00:09.920 - 00:00:29.884, Speaker B: Great. Hey, everyone, thanks for coming to session two. We have two very exciting talks coming up. Each will have 45 minutes slots as the first session. So 30 minutes about for the talk and then 15 minutes of Q and A. So, yeah, I guess we'll just get started with Sam Hart. Sam's joining us.
00:00:29.884 - 00:00:38.790, Speaker B: He's the head of strategy and product at Skip, and he's going to be talking about fee markets in an appchain context. So everyone give a warm welcome for.
00:00:48.510 - 00:01:33.114, Speaker A: Hello. Hello, can you hear me? Great. Yeah. Thank you for the invitation. Barnaby actually invited me, and I'm sad to hear that he couldn't attend, but he kind of asked me to come to represent the Cosmos view here. Skip does a lot of work in and around the cosmos ecosystem, and I've done a whole bunch of work at the Interchain foundation, which is the kind of Cosmo centric foundation for a number of years. So maybe in contrast to the previous talks, I'll be talking a little bit about Skip's products.
00:01:33.114 - 00:02:53.800, Speaker A: But I also was kind of asked to talk about the wide diversity of things that are happening in cosmos regarding fee markets and block space in general. So just quick background on some past work around fee markets. Specifically, I actually worked very briefly on EIP 1559 with a company of vulcanize that did kind of prior to the robust incentives group taking on that work, there was like, a small group that was just doing some very initial prototype validation. So did a little bit of work on that. I started working in the Cosmos ecosystem, and I kind of did, like, product work for the whole Cosmos stack, kind of how all the pieces are glued together, a lot of personality management of different people, and just kind of a wayfinding between a very complex ecosystem. I did drill down into some specific product work around what we call the fee grant system. And I ran a fee market working group for a little while.
00:02:53.800 - 00:03:55.880, Speaker A: And now I work at Skip, which really started out as an mev focused company. But we do a lot of things now. Really what we found is that there's a lot of pain points in cosmos just to kind of figure out how to get from chain a to chain b, how to kind of harmonize a very heterogeneous and kind of uncoordinated ecosystem. So we try to provide that kind of, like, unifying force, but it also makes it a little bit hard to describe what skip does sometimes. And, yeah, we're thinking a lot about fee markets, maybe from a slightly different context, or the objectives that we want out of this are a little bit different. And we have a kind of variant of EIP one five f nine. We've appended the plus plus moniker as we do.
00:03:55.880 - 00:04:37.830, Speaker A: I think this is mostly an ethereum back crowd, so I just wanted to do like very brief. What is Cosmos? So it's a network of sovereign app chains. There is a shared, general authenticated messaging standard, IBC, that's really widely adopted in the ecosystem. Everyone uses this out of the. The. If Cosmos is standardized on one thing, it is IBC. So you can almost think about it as the EVM of our ecosystem.
00:04:37.830 - 00:05:19.630, Speaker A: It has a heterogeneous security architecture, so there's no singular security source. And this means that tokens have non fungible paths. So there's no canonical bridge. That is not a thing that exists in cosmos. Basically, these paths are, there's kind of a market for traversal, like token traversal. And that is what determines the canonical bridge liquidity. Effectively, most chains use a self issued currency or fees.
00:05:19.630 - 00:06:21.510, Speaker A: So there's no unified token that is used for fees. Atom is not used for fees in most places, although there are a few projects that are starting to add secondary tokens or kind of enshrine specific fees, fee tokens. But this obviously creates like a ton of complexity. Every single chain is using a different denomination and pricing their fee markets quite differently. This kind of looks like a hayekian system of competitive monies. It's like wild and complicated, and you have to be a little bit masochistic to work here, but it is a lot of fun. So I'm going to give a little bit of a history of cosmos fee market.
00:06:21.510 - 00:07:28.970, Speaker A: So when the network launched, there were a lot of kind of open problems, and the initial fee market was incredibly simple. Basically, individual validators have a kind of local configuration file that they would use to set both the token denom that they accept and the min price for that token denom. And there could be multiple token denoms. And the main considerations here are just simplicity, given a lot of these unknowns and cross chain ux. So if everybody is paying different fees, you spin up a new network, you need to connect to another chain. You don't have the token of the other chain until you connect to the network. So there's this kind of like chicken and egg problem to even bootstrapping the system.
00:07:28.970 - 00:08:21.564, Speaker A: Kind of. In practice, what we've seen is it actually works okay, particularly in periods of like, low demand, which cosmos tends to have. But some of the issues is when there are kind of spikes in demand, validators aren't typically very reactive to changing their configurations. And so people have to kind of round up validators and say, hey, you should probably look at this. There's also relatively poor fee discovery. So wallets or client integrators can't really be querying individual validators to ask them what their fees are. And a lot of validators don't kind of expose that information.
00:08:21.564 - 00:09:20.620, Speaker A: So what ends up happening is clients end up kind of like setting defaults, and there's a bit of like a rough consensus on default fee pricing. And this is actually pretty widely deployed today. A number of chains have kind of upgraded their fee system, but about half of them use this very rudimentary system. So the kind of next phase was some work around basically small augmentations to the existing fee market. One was just literally setting a kind of hard constant for a global min fee. And yeah, this is just like, okay, we are going to pay 0.1 atom minimum and this is going to be in protocol.
00:09:20.620 - 00:10:40.868, Speaker A: Beyond that, validators could still set their own min fee for when they were constructing blocks. So there's like two or three chains that have that kind of system. I worked on a project that we called fee grant, and this is a kind of delegation system where I could elect to pay fees on behalf of another account if I wanted to, and I could set some limits and that could be kind of like a recurring thing. So every week this account is able to draw down this amount in fees, and that could only be used for fees. It can be for spending elsewhere in the system. And then a big kind of ecosystem wide initiative was changing the consensus algorithm, tenerbent, now called Comet BFT, to enable a mem pool that lived within the application. So there's a separation between the kind of consensus machinery and the state machine.
00:10:40.868 - 00:11:30.250, Speaker A: And Abci gives you the ability to kind of bring your own mempool. And so that's where a lot of the experimentation lives today right now. And that's some of the things that we're working on, is a kind of different flavored mempool. So yeah, cross chain, multi currency fee markets, this is a real headache. But one thing is this is as hard mode as it gets. So we are making good progress on this. But once we figure it out, I feel like there's, yeah, it opens up a lot of different possibilities for.
00:11:32.620 - 00:11:32.936, Speaker C: How.
00:11:32.958 - 00:12:19.210, Speaker A: To build a new application. There's some unsettled questions about fees in the cosmos ecosystem. Generally, there is not a lot of consensus. So I just asked online, what fee denom do people want to pay in and there are 340 responses and there's no agreement. So if you're trying to build for this user base, it's really confusing what's going on. I'll list some of these out. So how many currencies will ultimately serve as a medium of exchange? Like, don't know.
00:12:19.210 - 00:14:04.360, Speaker A: If it's just a few currencies, what kind of currencies are these? Is it the staking token? Is it a liquid staked version of this? Are they stable coins? Are we just going to default to bitcoin? A lot of people love bitcoin and cosmos, and I've worked on the liquid staking system as well. We were very kind of early to that concept because cosmos has kind of targets a very high staking ratio. We just kind of assumed that a lot of that would be liquid staked. So, yeah, it's kind of unclear because there are non fungible paths. Are chains going to accept, like, kind assets and then kind of convert them later? Like, how is that going to work? And then for transacting across different chains, are users going to relay their own packets across chains? Are they going to rely on third parties who should be paying for relaying? What does that market end up looking like? And what is the kind of market microstructure there? Is it a subscription? Is it like per packet relaying? Could you just pay for relaying, kind of using Mev? So, yeah, I mean, we don't know. We got a bunch of requests. Skip works on basically transaction supply chain.
00:14:04.360 - 00:15:06.700, Speaker A: We were doing a bunch of stuff in MEb and basically the teams that we're talking to, can you please help us with this problem? And we were kind of like, okay, well, we don't really know how to solve this problem. So what we're going to do is just build some kind of substrate here where we can run some experiments. And we created this thing called the block SDK, which is kind of a scaffold for new fee mechanisms, allocation schemes. So the block SDK introduces this lane primitive. And a lane is basically a portion of the block that's delimited by a gas and size limit. And you can kind of play with those two variables. Transactions come into the mem pool, they're matched, and then they're placed in a lane that has the highest score.
00:15:06.700 - 00:15:59.100, Speaker A: And you can do a lot with lanes. So you can reserve lanes for specific transaction types. You can match on the sender, you can match on specific fee denoms. It's fully programmable here. So you can do kind of a speculative execution and then look at results. This gets kind of into local block building, or at least some limited form of local block building, which we've also done. And yeah, basically, once you've kind of allotted these transactions into lanes, there's a kind of global check on, or you verify each portion of the block, and then there's a global check that the block is valid.
00:15:59.100 - 00:17:27.220, Speaker A: And this lane structure, one it's relatively easy to think about from an application developer's perspective. And yeah, it's good for these kind of sub processes within the application that have disjoint resource allocation requirements or time preferences. So this is maybe like a more nuanced view on what an app chain is. There are always going to be these subroutines within the application that just need to utilize resources differently. You don't necessarily want all of that mixed into a kind of like generalized transaction model, so you can kind of segment that out in an interesting way. Um, so one of the first things that we, or one of the things that we're working on now is a kind of standard fee market for cosmos, and we're going to be rolling this out relatively soon. And one of the constraints that we had is that we really do want an in protocol fee oracle, kind of for different reasons, that Ethereum wanted an in protocol fee oracle.
00:17:27.220 - 00:18:46.660, Speaker A: So it kind of turns out that a lot of the Ethereum transaction supply chain is kind of being intermediated through various kind of actors that are doing bundling or third party payment. But we are interested in an in protocol oracle because we need to kind of like, reason about the cost model of doing multi chain transaction sequences. And one thing that's worth kind of noting is that it is very common in cosmos to combine a transfer, a swap, a transfer, and another action that is like a relatively kind of like the core user flow in cosmos. And this is something that we haven't quite seen in Ethereum yet. I think it will happen. But yeah, this kind of like five hop execution sequence is something that we are trying to make as seamless and responsive as possible. So yeah, having that in protocol fioracle, very helpful.
00:18:46.660 - 00:19:31.330, Speaker A: Eip one five of nine is a great resource. It's incredibly well studied, validated. There's a couple kind of modifications that we wanted to make in the context that we're working in. One is we wanted to use our lane system. So skip started out building this mev auction. We wanted to just kind of segment that out and allow the application to define a specific region for EAP one five nine transactions. And really, I think it's just much easier to kind of reason about.
00:19:31.330 - 00:21:11.872, Speaker A: Instead of an auction to get into the block and then an auction to get at the top of the block, you can kind of like unify these as a single MEB auction. And then typically these like EIP 1559 transactions can be a little bit more generic. And then we work very closely with the osmosis team and Dave from osmosis, Dave Woja was particularly interested in this paper that is indicated below the transaction fees on a honeymoon, which is basically takes empirical data from the first month of Ethereum transactions and just kind of tries to understand the allocation efficiency and how well EIP 159559 is doing. And they kind of suggest one change, which in speaking with some of the Ethereum foundation folks are also kind of considering, which is this adaptive learning approach. And the intuition here is EIP 1559 tries to look at the utilization of resources in block n in order to price the resources in block n plus one. This is the in protocol oracle. And what the adaptive learning rate does is it basically checks how well you're doing.
00:21:11.872 - 00:22:13.300, Speaker A: So it compares the difference between this kind of predicted baseline and the realized demand in block n plus one. And then that term, how well you're doing is fed back into the system to adjust the rate of repricing. So we've done some other experiments with our lanes and one thing that we're kind of finding is that you really want very different fee models for these. Oftentimes you want them to be free. And in both of these cases you kind of want transactions to be free. So maybe you want to onboard users that have never touched crypto before. That would be a huge unlock if you didn't have to own Osmo token or atom or whatever, or figure out what token you need, just give them a free transaction.
00:22:13.300 - 00:23:23.580, Speaker A: We have, I think a nice solution for this, which is you can just allocate a very small portion of the block specifically for this onboarding experience. You can constrain the transaction type there to a single, make an account or stake tokens or whatever. The initial experience is like that is a free transaction, but you can't do anything else. You can limit the number of transactions that that account can submit to the network and then if something is going wrong, you can basically flip a switch and turn on a fee for that lane. So really you're kind of like limiting damage and what any kind of adversary could do with this lane. It's literally like all you can do is onboard into the system. The other thing is we are doing a bunch of work with in protocol oracles.
00:23:23.580 - 00:24:26.512, Speaker A: And the idea here is that the validators are actually submitting price updates to the network. This is consensed upon so you can have a very strong guarantee that there will be a price update. In fact, it's like in protocol consensus enforced guarantee that there will be a price update or the network won't advance. And in this case, you don't really want validators to be paying for these fees. Like this should just be a free thing and they should only be allowed to submit one transaction per block. Again, you can kind of constrain that behavior and provide a kind of negative, positive reinforcement to make sure that validators are submitting that transaction. Okay, so I'm going to talk a little bit about abstraction of various forms here.
00:24:26.512 - 00:26:03.680, Speaker A: Some of this we are doing or working on, some of this we're collaborating with others. So start with single fee transaction, single chain fee transaction, just to be illustrative here. So if I have Tia, the native token of celestia on neutron, which is another cosmos chain, and I want to send it to my friend's address on neutron, but I don't have Tia, sorry, but I don't have the native token used to pay fees, what do I do? This is problem that's also common to. So you could just use a local dex on neutron. You can kind of like vertically integrate into that system and say okay, well I know the exchange rate from TIA to NTRN and then I can do kind of a speculative execution to see if the fee is sufficient to pay for the transaction in TIA. So that could work if you do not have a local dex on your chain or if the token that you're trying to pay in know there isn't sufficient liquidity, you could also do this. Osmosis has developed this fee abstraction module that basically allows the osmosis chain to stream a Twap price for TIA to a remote chain.
00:26:03.680 - 00:27:24.970, Speaker A: They can, yeah, so neutron will price their tokens in NTRN, their native token, and then you can multiply the NtRN fee by the exchange rate in order to accept TIA token and then you end up with TIA. So now what do you do with that? It doesn't really make sense to burn TIa because that's not your native token anymore. So you can either store it, you can just put it in the treasury, or you could batch swap it back 5 minutes. Okay, I will need to accelerate through this. So we also have an account abstraction module that looks a little bit similar to 4337. So there is a work being done on a fee credit system that looks quite different from a lot of what we're seeing in ethereum. And basically the idea here is you can obtain these credits by performing useful functions or functions that are native to the application.
00:27:24.970 - 00:28:49.430, Speaker A: These credits are non transferable. So the general idea here is like you're trying to make a kind of self contained system where you can earn tokens by using the application up to some limit that kind of replenishes your balance so that you can continue using the network. So this has a kind of virtuous cycle where you want to keep using the app. We already have a form of cross chain fee abstraction. IBC does this to some extent when you use third party relayers, there are some issues with incentivization of those relayers, and so that's something that we're working on right now. One of the main questions is kind of like, should you pay, who should pay, and what is the market structure of that payment? So do you want a subscription or per transaction fees, you can kind of generalize and combine some of these systems into like a cross chain fee credit. This does not exist today, but it's something that we're thinking about.
00:28:49.430 - 00:30:00.776, Speaker A: So where you can kind of track behavior on a set of chains. And the U here is kind of a third party that specifically deals with this credit system. And then chains can opt into their credit network. They can allocate that network some block space, a lane, and then the third party can do this authentication. If the third party is kind of corrupted in some way, then the chains can just withdraw from the network. We can take this even further. So if chains are giving some band of block space to a third party kind of coordinator, to kind of fix fees and incentivize this user base, then one of the things that a lot of chains want to do, while a lot of applications want to do, is they actually want to transact themselves like they are a user.
00:30:00.776 - 00:31:33.060, Speaker A: So how can we allow a chain to autonomously purchase tokens and initiate transactions? Can you form kind of like a trade agreement between different chains? So, like, okay, I will allocate some portion of my block space to this other chain's users transacting from this other chain, or specific transaction types, specific economic flows that are coming from this chain. I'm incredibly nerd sniped by this concept. It looks a lot like the atom two scheduler system that I worked on, except it's kind of directed towards a much more focused problem, which is ux, and perhaps not like a top of block auction, it would actually just be allocation for solving cross chain fees. And yeah, I'm kind of looking at broadband allocation for kind of inspiration here. So if anybody knows about that in this crowd, I would love to talk to you. So, big takeaways. If applications and users are kind of able to independently transact in whatever currency they prefer, you're creating this two sided market for monies, which I find quite fascinating.
00:31:33.060 - 00:32:37.660, Speaker A: That doesn't mean that there will be a million monies out there, but it means that you may see kind of like a market based emergence of dominant forms of money. And if done well, a much tighter integration between the fee system and the application can actually have this reinforcing loop that I don't think we've quite seen before. So we're very excited to kind of experiment with that. This full infrastructural economic abstraction allows for new types of bundled services that are much more legible to specific actors. So you can just pay a subscription or something as a user, like something that you understand and makes sense. An infrastructure provider or a chain can just. Can have a kind of package service that's like, okay, there's regular costs here, they're priced in things that I understand or the token that I prefer.
00:32:37.660 - 00:33:20.892, Speaker A: Yeah. And then this kind of like, cross chain resource allocation can potentially unlock a bunch of efficiency between different applications, between different state machines. And this is like super early research, so I'm very open to comments and ideas about where to take. Yeah, thank you. I'm very sad that Barnaby couldn't make it. I think Chris goes was also asked to give this talk, so I'm very happy to kind of fill his shoes here. And to Dave, who we work very, very closely with.
00:33:20.892 - 00:33:22.190, Speaker A: Thank you very much.
00:33:40.770 - 00:33:44.160, Speaker B: Yeah, we have, like, ten to 15 minutes of questions now.
00:33:49.190 - 00:34:16.306, Speaker A: Test. You can also just ask me, like, super general Cosmos questions. I spend a lot of my time explaining the absolute fundamentals of cosmos. Okay, I have a not super well formed question, but we have time for questions, so I'll throw it out there. Wondering if you've paid any attention to what's going on in Solana. So they don't call them lanes, but I think they call them local fee markets.
00:34:16.338 - 00:34:16.486, Speaker C: Right.
00:34:16.508 - 00:34:46.580, Speaker A: So they do have parallelization of transactions. I think there's like four of them right now. Feels like there's a little bit of overlap with some of the stuff you're proposing here. So just wondering if it's at all inspired by out or if there's stuff that they could take from what you're working on. Yeah. So this is stuff that we've been talking about for several years in cosmos. I agree that there is some kind of design convergence there.
00:34:46.580 - 00:35:37.780, Speaker A: I'm super interested in Solana fee markets. I feel like I mostly understand the mechanism, but it's actually extremely difficult to find any information about how the Solana fee market works. So my understanding is that there's, like, specific state that is touched, that's tracked, and you kind of express what state you're trying to interact with, and then there's a similar kind of, like, controller mechanism that either increases or decreases the fee depending on block by block demand. So super interesting. I'm trying to keep an eye on it, and I think that there's a lot that we can learn from one another. So yes and no, I guess, is the answer.
00:35:40.230 - 00:35:40.738, Speaker C: Yeah.
00:35:40.824 - 00:36:16.720, Speaker D: On a similar note, I was wondering whether kind of, if we think about other blockchains outside of the cosmos ecosystem, whether kind of know, maybe this is a bit too early because you still have problems to solve within the cosmos ecosystem. But if we think about expanding beyond IBC or expanding IBC to blockchains that are not built from the ground up to be adaptable to it, are there applications for these cross chain fee markets, for example, when we're trying to interact between Cosmos and Solana, or Cosmos and Ethereum? And are there any ideas there?
00:36:17.590 - 00:37:33.450, Speaker A: Yeah, there's a number of teams that are working on IBC integrations into Ethereum. So there's kind of proving the Ethereum like client, the kind of pseudo like client that Ethereum has. And, yeah, I expect to see know within the next six months. I don't really think that, like, this is a little bit of a controversial view coming from Cosmos, but I don't really think that IBC is going to be the de facto solution in Ethereum. There's a lot of really strong players that are very kind of embedded in the Ethereum ecosystem. However, there's a lot that some of these protocols can learn from IBC, and I think that there's probably going to be adoption of some of the application standards that we've built on IBC. So just as an example, IBC allows you, it has a callback system, like an acknowledgement and callback system, so you can execute an action on one chain.
00:37:33.450 - 00:38:43.200, Speaker A: If it arrives on the other chain, you get an acknowledgment like, yes, it arrived. So there's a message passed back to the origin, and then you can additionally have a callback that's like, okay, well, if success, then execute some message on the origin, and if failure or timeout, then I also get some kind of indication on the origin that that's what happened. So, yeah, that's like a really powerful tool. And we've done a lot of work with these kind of middlewares where like, okay, you've landed on one chain, and then you want to execute something depending on the conditions of whether execution succeeded or not. That's a super hard problem domain that we like. I spend a lot of my time working on, and, yeah, haven't seen a lot of that in Ethereum, but I expect that that will happen more and more. And if anybody wants to talk to me about that, I'm happy to kind of dig into it more.
00:38:46.450 - 00:39:10.150, Speaker D: For Cosmos and also for all these L2s, like the ZK L2s, like spro alo, et cetera. Do you think the trend is going towards having a public mempool, or do you think in the future it's going to be normal for every cosmo wallet to be connected to a private relay?
00:39:11.790 - 00:40:02.694, Speaker A: Yeah, I think it depends on the application. I don't know that a game needs to have a whole. You could maybe get away with not really caring about what's happening in the mempool at all. When you're talking about a kind of highly utilized Dex that has a lot of volume, this is going to become increasingly important. So I feel like there's probably going to be differentiation in the market. Those kind of projects are going to want to vertically integrate the system. So that may ultimately end up vertically integrating into the kind of off chain supply chain.
00:40:02.694 - 00:40:24.880, Speaker A: They may end up having their own order flow system. Or, I mean, this is already happening with uniswap. Right? They vertically integrated into the wallet. So, yeah, I could see that happening more for applications that are successful and want to recapture some of that value.
00:40:25.730 - 00:40:32.450, Speaker D: So you're basically saying you think it's going to favor privacy over a public mem pool.
00:40:35.750 - 00:41:46.134, Speaker A: So I guess I typically think about this from the perspective of the application. And the application wants to optimize two things, like the amount of utilization of the network and the revenue that's generated by the app. And if you start from that perspective, you can do a, like, the absolute extreme here is like penumbra, which is a cosmos chain, and they have full integration, full cryptographic privacy from the moment of transaction origination to execution, and even post execution. It's like an entirely private system. So you can go that far. And I guess you're asking a question about where's the equilibrium? I'm not totally sure. The volumes in cosmos are dwarfed by the volumes in ethereum.
00:41:46.134 - 00:41:52.380, Speaker A: So I feel like I need to kind of rely on you guys to tell me where a lot of the competitive pressures are.
00:41:54.110 - 00:41:54.582, Speaker C: Okay.
00:41:54.656 - 00:41:55.440, Speaker A: Thank you.
00:41:57.570 - 00:42:00.334, Speaker B: Yeah. Should we go to the next one?
00:42:00.532 - 00:42:00.846, Speaker C: Yeah.
00:42:00.868 - 00:42:17.778, Speaker B: I just had one quick technical question. If you think about splitting a block into two lanes and you have an auction for the top half, the block, and the bottom half, how do you go about deduping the second half and making sure that the transactions are valid given the precondition of the first half?
00:42:17.864 - 00:42:18.258, Speaker C: Thanks.
00:42:18.344 - 00:42:38.898, Speaker A: Totally. This is a tricky problem. And the. So, first of all, it kind of presumes, like, we're talking about a Dex already just. Or like a liquidation protocol. Again, if you're. If you.
00:42:38.898 - 00:43:47.540, Speaker A: If you're like, a truly application specific chain and you're just building, I don't know, like a decentralized file sharing thing, none of this matters. But, yeah, for the DDup problem, the first thing you can do is the user can express which lane they have preference for. So you can actually incorporate that explicit user information. If you are trying to bid for the top of the block and the bottom of the block at the same time, or your system allows for that, then you just need some kind of execution rule there. So we have a kind of general scoring system. You can kind of bring your own scoring rules. And the problem that actually Barnaby and I have spoken about a bunch is like, okay, well, that maybe isn't enough.
00:43:47.540 - 00:44:34.320, Speaker A: There's instances where there's kind of second order state that's modified, that's going to interact with. It's going to have this second order impact on the state that's modified. Again, our kind of solution is to give flexibility because there's a lot of different ways that you could treat that. It's probably not the answer that you wanted, but this is kind of a theme here. There's a lot of really hard, open problems that we have to have to address, and we kind of just create some templates that people can experiment with. Sorry.
00:44:35.170 - 00:44:37.310, Speaker B: One more round of applause for Sam.
00:44:44.400 - 00:44:44.956, Speaker C: Yeah.
00:44:45.058 - 00:45:01.584, Speaker B: Cool. Now we have our second talk of the session. We're joined by Dr. Urban German. He is a professor of finance at Wharton School of Business at University of Pennsylvania. And he will be talking about macro finance model for Ethereum, proof of stake. So welcome, Dr.
00:45:01.584 - 00:45:02.480, Speaker B: Urban.
00:45:19.230 - 00:45:21.540, Speaker C: To go back. Go back.
00:45:22.950 - 00:45:23.874, Speaker A: All right.
00:45:24.072 - 00:45:25.060, Speaker E: Thank you.
00:45:28.790 - 00:45:49.400, Speaker C: Thanks for having me. Thanks for coming. I look forward to your comments. I presented this a few times at finance departments on business schools. And I usually start with telling people about proof of stake and Ethereum. And I think I'll skip that here, guys. Don't have to listen to that.
00:45:49.400 - 00:46:29.490, Speaker C: There is another word. I'll just briefly give you some background. What's a macro finance model? Macro finance models are also known as DSGE models. There sort of tells you what it is. So these are dynamic stochastic general equilibrium model. So the models where you have time is explicitly taken account uncertainty, and then it's general equilibrium in the sense that the model aims at explaining prices and quantities at the same time, as opposed to, let's say partial equilibrium, where you take prices as given. Models like this, they seek to be quantitative theory.
00:46:29.490 - 00:47:30.250, Speaker C: I guess it's theory when I get predictions, but it's not just qualitative, but it aims to be grounded in the data. And so what that means is there's always some sort of estimation involved. And models like this have been used by macroeconomists or in finance for studying business cycles, prices, and monetary and fiscal policies. Central banks, all the central banks I know use models of this type. And so the idea here is to use the tools that have been developed for these type of models. Okay, these models, there's tools of how these models are put together, how the models are solved and how they're estimated. And so the idea is to use these tools to apply them to what you can call the Ethereum macroeconomy.
00:47:30.250 - 00:48:48.286, Speaker C: And so some of the questions that I think we can learn something about from this type of models are monetary and fee policies. So Ethereum, as you know, has made major changes over the last two years in monetary policy and fee policies. A tool like this, we can use that to better understand what to expect, how money behaves, how much money we will have, how that interacts with prices, with proof of stake. Think of this. There's like an asset class we now have. What are the returns are going to look like in this type of investment? And of course, an important question, I think, for the Ethereum itself is how much will be staked and how is staking behaving over business cycles and over time? There's also the whole issue of policy or optimal policy here. These policies, some choices were made, some parameters were chosen.
00:48:48.286 - 00:49:45.266, Speaker C: And so there's a question to what extent we can study these and see what extent are they optimal? Is there ways to make improvements? There will be choices that will have to be made in the future. Tools like this could sort of guide us and help how to do that. So this is the, if you want the core of the model, you can figure the model is built around this. This is the way I see it. It's just the money supply as defined by the Ethereum protocol. Money is increasing by rewards that are paid out to validators. So this is the senior rich that's used to pay for services that are provided to the network if you want.
00:49:45.266 - 00:50:12.400, Speaker C: And the money supply declines through the burn fees. And that of course makes it that. The fee income benefits the token holders, all the token holders. And so in the model, just to get started with how this is going to look in the model, this equation is going to look like this. So m m is going to be money. So I'm going to use that and it changes over time. This is a discrete time model.
00:50:12.400 - 00:50:50.060, Speaker C: Think of a period here of a month. Okay? So we can make that shorter or longer, but that seems to be, given where we are, it seems to be a good choice. The right hand side, the validator rewards, as you know. So it's a function of the aggregate amount that's staked or deposit. So Ms for staked money, staked. And there is this coefficient. You can think of this as this is like a parameter of the system, more or less.
00:50:50.060 - 00:51:13.940, Speaker C: Not exactly, but we take it as such. Here in the model, the amount staked is going to be determined. It's endogenous. It's by agents that are forward looking agents that have required returns. They care about the time value of money, they care about risk. They want compensation for these.
00:51:15.750 - 00:51:16.226, Speaker D: If they.
00:51:16.248 - 00:51:32.422, Speaker C: Hold any asset over time. The second part. So this shows you how the burnt fees are going to look. The most important is f. Okay, I use f. It may not be the best choice is a fee rate. The fee rate, I guess it's a gas price.
00:51:32.422 - 00:52:09.938, Speaker C: Okay. It's very unit cost of fees. Again, in the model that's determined to equalize demand and supply. There's demand for gas if you want, or I guess it's block space that's going to equalize supplies and it's going to determine the price. Okay? So that's sort of, the model gets built around that. These variables, they're determined in the model together with a bunch of other variables. This is sort of inverts the ingredients that we have.
00:52:09.938 - 00:52:33.738, Speaker C: So there's agents in this model, they buy ethereum, they can do two things with it. They can either use it, get some services, they get some utility out of this, or they can stake it. If they stake it. Again, this is of course, abstractions here. Simplification. The only thing that matters, they get financial rewards. It's an investment agents.
00:52:33.738 - 00:53:03.058, Speaker C: They get utility from the stock of money, of eth. They're using it, and they also get utility from gas. So these are the two goods they care about here. There's two prices that are determined. The price of eth, the token ether, and they get the gas price to clear markets. And then we have that money supply equation we've seen. And then this is a stochastic model.
00:53:03.058 - 00:53:32.320, Speaker C: So this economy is going to be driven or hit by shocks that they go through the economy. And so the shocks that chosen here, that I think can capture quite a bit of what happenings. One, we call it productivity or adoption shock. And so that's the stochastic part that determines the utility value that's produced. It's clear in the model here. So these shocks, these are exogenous processes. They're sort of fed into the model.
00:53:32.320 - 00:54:00.420, Speaker C: This is reduced form. You could make this richer. You can have a process through which there is resources, there is investment, and that builds up productivity. That's something that could be added here. It's not done just for now, just to keep it relatively simple. The second type of shock is. Sorry.
00:54:00.420 - 00:54:26.814, Speaker C: Okay. Second type of shock are the discount factor shocks. Okay, discount factor shocks. Think of this as interest rates, or think of this as the. That's the market. So that's sort of the outside economy through stocks, through bonds. They affect or they reflect the required returns that ethereum, in some sense has to offer, too.
00:54:26.814 - 00:55:03.434, Speaker C: So that's that shock there. And then the last shock is the priority fee share. So the way the model is set up, there is a market for gas, and that just determines gas price. The split between priority fee and base fee, which is important, that's taken as exogenous. Okay, again, that's a shortcut because there's a whole, I apologize for a lot of people working on this. There's, of course, a whole microeconomic part that's important for that. So for now, that's just abstracted from.
00:55:03.434 - 00:55:32.836, Speaker C: And it's just a stochastic process. And the good thing about that is there's data. You can just sort of fit this pretty well. This is some of the equations here, okay? So we can see, this is what we call a representative agent model. So there's this. Agents in this model, they're atomistic, they're taking. Everything else is given.
00:55:32.836 - 00:55:50.548, Speaker C: They're optimizing. And this is the objective. They're optimizing. It's the lifetime utility here they choose four things they care about. C is consumption. That's only in all these models we care about consumption, most important. But here it doesn't play much of a role.
00:55:50.548 - 00:56:10.256, Speaker C: Okay. The things that matter is this. So we can call that this is the money and utility. We directly say there is utility produced by Ethereum. We're holding money. That's sort of a standard specification here. The choice is to have it.
00:56:10.256 - 00:56:41.340, Speaker C: So mu. Again, that's ether. That's money used. It's the real balances, the value of this in the numerator. The numerator is the dollar here. So I assume that most people still have the large majority of their expenses in dollars. This utility function, of course, the more money an agent holds, the higher the utility.
00:56:41.340 - 00:57:06.484, Speaker C: The other element that enters is gas. So you can think, this is a utility function for two goods. One is the stock, the stock of money. The other is a service flow. And then the other thing that enters is the productivity level. That just scales it up or down, that moves it around. And then also what's important is this.
00:57:06.484 - 00:57:37.068, Speaker C: This is the discounting, okay? So that's the channel through which interest rates and risk pricing enters the model. Okay? So that's the first part. That's the objective. And then there's a budget constraint every period. That's just to keep track of everything. These agents, they enter the period with money. The two types, the eth holdings here, of course, when they've staked it, they get a return.
00:57:37.068 - 00:58:05.780, Speaker C: That's the two components, the reward and the fee part, priority fee part. And then they make choices again for next period. So the timing here, we start at t, and then we pick for next period. We pick money because the price is here. They have to pay for the, pay the gas, that's the price. And again, it's in the numerator. Everything is in dollars here in the budget constraint.
00:58:05.780 - 00:58:44.604, Speaker C: And then there's the money supply equation. And then the two markets clear supply, equal demand for money and for gas. That's the basic sort of structure of the model. We need some additional details. Put this on a computer when you specify a function. So here, this money and utility function I use is sort of the type of function that people have used in macroeconomic models. They have some richness, some flexibility, but they're also parsimonious.
00:58:44.604 - 00:59:16.072, Speaker C: Okay, so here you just two parameters. The most important one you'll see in a moment is this data parameter is the power of the. Here. That's basically easy. This is the utility value share. It tells you in relative term which one of the two things we care about, the stock of money we're holding or the sort of services we get, the gas, how they're weighted in terms of utility. The rest is the requirements.
00:59:16.072 - 00:59:51.524, Speaker C: There's also some, you want this to have some homogeneity properties so things can grow in a way so that it doesn't explode right away. And then the shocks. Okay, so this is the productivity shocks. Again, it's the underlying sort of usefulness of the network that's growing over time. That's the first parameter. And then the rest is, you could see this is a non stationary process. So this can go anywhere.
00:59:51.524 - 01:00:29.936, Speaker C: This is like a random walk with a drift. Okay? So go to infinity and go to zero. And that's just sort of capture, I guess, the significant sort of risk or what can happen here. Then we have the discount factor. That's pretty rich specification. And what this does, it's sort of inspired in the way people price bonds, interest rates, interest rate derivatives, too. So do you call it term structure model? This is the interest rate, the short rate, and then there is a risk price for interest rate risk.
01:00:29.936 - 01:01:01.840, Speaker C: So together, this is going to give you a whole term structure of interest rates. Match, long term interest rates, short term interest rates, and then there's some more. So these are risk factors. Again, there's the other risk factor here is you think about the sort of market risk. So the assumption here that I'm making is that the participants in the network and people that hold this, the risk factor they care most about is the productivity here. So that the idea is they're exposed to that. You could add other things here.
01:01:01.840 - 01:01:41.564, Speaker C: You can add the stock market. Just the regular stock market is another risk factor. Then the last thing is this is the priority fee share. So this is relatively straightforward, just sort of process that moves around the numbers we can see, okay, the system that comes out of this, when you do the maximization, you take derivative, first order conditions, you get these conditions. There's two pricing, pricing equations. Okay? P is the price, it's the scaled price. Okay, what happens in this model is that.
01:01:41.564 - 01:02:17.990, Speaker C: We'll see in a moment. Let me back off on that. The price here, there's two pricing equations that in equilibrium, these represented the uses of ease. In both cases, the price is the expected value of next period's price appropriately discounted. Okay? That's going to compensate for risk. And then the difference between the two is, depending on which use we look at, is the yield that you get. If you're using ethereum, then this is the marginal utility of using it.
01:02:17.990 - 01:02:43.308, Speaker C: That part here. And if it's staking, this is the yield from staking. And so, in equilibrium, these equations have to hold at the same time. The model is going to solve for that. Then this is the equilibrium in the gas market. This is just marginal utility equal to marginal cost. And then this is the equation again, the money equation.
01:02:43.308 - 01:03:31.940, Speaker C: So, if you want, it's just a four equation model. So, this is the model that we can solve. The one thing you can do is, before really solving it, just to illustrate things, you can turn off the shocks, and then you can solve what you call a steady state. Steady state is if there is one, if there's a stationary point, the model goes if it doesn't get hit by shocks. And what's nice about this is how you can solve it by hand. Okay? And so we can sort of see how the different sort of factors that we put in the model, how they determine these quantities. Let me just highlight two of the predictions we get from here.
01:03:31.940 - 01:04:13.424, Speaker C: So, one is the staking share. Now, just to be clear that the steady state is not what happens in the model, the steady state, you can think of this as it's an approximation of what happens when you simulate the stochastic model. There is nonlinearities and then of course have to average things, but it gets roughly right, it gets the level roughly right. And of course it's nice, it's one parameter as opposed to computer program. And so what this says is that the MS, remember, that's just the amount staked, money staked over the total money supply. That's just equal to this one parameter. So this parameter, remember, that's the utility parameter.
01:04:13.424 - 01:05:08.368, Speaker C: It tells you how much we value gas relative to using eth. Okay? So the intuition why this matters, you can see it up here. If gas is relatively more useful than holding ETh using the token, then we're not going to hold as much and the staking share is going to go up. Another way of saying is that if a lot is staked, then it means that the token isn't that useful for utility and vice versa. So ultimately, you expect something like this to show up when you sort of dig deep. What's maybe more surprising is that that's the only thing that matters here. You might think that what should matter is just how much rewards are paid out to stakers.
01:05:08.368 - 01:05:32.220, Speaker C: Okay? That k, that's the reward factor. It doesn't matter anymore. Once you sort of look at the long run, why is that? What's going to happen here? It's clear. Paying out more rewards. Again, that's the factor that just tells you how much we pay per unit. Paying more is making staking more attractive. Okay, that's not surprising.
01:05:32.220 - 01:06:02.516, Speaker C: But in equilibrium, once everything is sort of said and done, the amount that's used is also increasing. You see, it goes up by the same amount. That's why it doesn't affect the share anymore. And how does that happen? Well, in the model, it's an equilibrium effect. You issue more money to pay for staking, it lowers the price. And the users, their margin, utility goes up, and so they want to hold more too. Now, of course, this is a result.
01:06:02.516 - 01:06:39.616, Speaker C: It's a nice sharp result. That depends on the assumptions. So you put in the right, particularly, you need the homogeneity for this to work. But I think there is a lesson here that's deeper, and it's that once you start to think seriously about sort of equilibrium, what can happen? Even sort of most obvious things that you would expect to see, they may not happen anymore. They may just be washed out by other things. Um, this is, this is another thing you can compute. Okay, based on what we just seen, you can just figure out what the money supply is going to be.
01:06:39.616 - 01:07:06.988, Speaker C: Again, this is the steady state. So this is if there's no more shocks, where would the system rest? And of course, one thing to do what you get here is it actually rests somewhere. Okay, it's not obvious that that would happen. This system, money can go anywhere, but it does here, by the way, not everything. Let me go back. This is something I didn't talk about. Not everything goes to a stationary point in this model.
01:07:06.988 - 01:07:25.440, Speaker C: The price doesn't. Maybe that's good news. Price is not just going to stay fixed. Price continues to. This is a scaled price. It's scaled by productivity. So in the long run, the price is going to go up at the level productivity is going up.
01:07:25.440 - 01:08:06.700, Speaker C: Then again, it can go and go anywhere. This is the money supply, and that's going to be stable. Even if there's an underlying process that can go anywhere, money is going to go around some stationary point in this setup, you can see that the parameters that matter. I can use this to sort of illustrate what you get, or what I get when I estimate the whole model. So it's the back of the envelope. Again, the model, when you estimate it, is not just this. There's risk adjustments, there's nonlinearities, but this sort of captures roughly the order of magnitudes.
01:08:06.700 - 01:08:41.876, Speaker C: And you can see the numbers you get. Okay, it's a pretty low number relative to where we are, about 120,000,000 at this point. That's, that's the current outstanding amount. And here it says it should go down to about half or even less than half. You can see what matters. What matters a lot is this part here. Now, what this is, this is the price to dividend ratio, if you want to think about ether as a stock.
01:08:41.876 - 01:09:28.532, Speaker C: And to get that right, of course, you need a model with the risk adjustments, right? Of course. Maybe at least to get a good estimate or an estimate that has some factor in it, you need some risk adjustment. And this equation, of course, doesn't do it. This just tells you what you get from that equation. We can compare this to other, there's other estimates. Maybe people here are familiar with how money supply was estimated. The supply model that's been used in this note is the steady state.
01:09:28.532 - 01:10:12.020, Speaker C: Okay. It's sort of equivalent to the steady state of this model. But for now, of course, we're adding some things around it, and the method is different, but in some sense, the conclusion in terms of the money supply is more or less the same. Okay, so this is ether, is ultrasound money? If ultrasound is the idea that the money supply is likely to go down for a while, then that's consistent with what I found here, too. Let me just summarize a bit. What happens when you want to estimate this. So, challenges are that, of course, this is a new young system.
01:10:12.020 - 01:10:59.268, Speaker C: There's not a lot of data. We have 5 minutes. We have two years worth of data, at least from ethereum. That's usually like to have a lot more. And of course, as you know, it's less than that because the system was only sort of completed the way it was in the model a few months ago. Okay, so that staking withdrawal, if you don't have that, there would be an additional constraint in a model, which again, that's possible, but then you'd have to take it out again. And so for estimation, what I end up doing to deal with that, I sort of estimate this one parameter separately by basically, I cannot use data from staked amounts because those were constrained up to not that long ago.
01:10:59.268 - 01:11:29.328, Speaker C: So I use equations of the models that are not affected by that. So it's a limited information estimation, and then the rest of the model is estimated together. And so that's going to be used. What's used for the estimation is you match us term structure. Because I match a number of properties of us long term real interest rates. I found that that's an important driver of a number of asset prices, as you probably know. Okay, see what recently happened.
01:11:29.328 - 01:12:05.610, Speaker C: And then the other thing is some of the key sort of properties of volatilities, of fees and prices. 5 minutes. Once you've estimated a model, you can do a bunch of things. So, one thing we can do is just see how shocks gets propagated and how things transmit sort of through the model. In the interest of time, let me skip that. There's a paper, by the way. So if you want to see more details, you can go on my web page.
01:12:05.610 - 01:12:21.964, Speaker C: This is something else you can do. These are projections. Money supply. You could see that one of the striking things of this type of model is that it takes. I've never dealt with models like this. It takes a long time for things to get stationary. But that is pretty robust.
01:12:21.964 - 01:12:43.190, Speaker C: Okay, you can do whatever you want. That's just what you find. The other thing below that, I found that interesting. So, this picture initially was initialized in April. In April, a staking share was 15%. And then you start the estimated model with 15%. What happens in the model, it sort of jumps up.
01:12:43.190 - 01:13:07.230, Speaker C: And I guess it's more or less what we saw. Okay. It sort of moved up very quickly. Now it looks like it could be stabilizing for a while. Of course, the level now is no longer right. Because, again, to estimate this in the model, data on staking isn't directly used. Okay, so this indirectly gets the level, gets it pretty close.
01:13:07.230 - 01:13:42.116, Speaker C: Another, of course, things now you could do with this is we could do policy experiments. So this is sort of like using this for a number of number of things. So, one, one policy experiment I look at is that staking yield, it's defined as. It's just the square root of. That's how the yield is scaled. Okay? So if there's a lot of staking, the yield goes down to discourage further staking. Vice versa.
01:13:42.116 - 01:14:21.392, Speaker C: And the sensitivity of that. That was a choice to use the square root. You can check other choices, more generalized. Okay, you can go to one, you can go to zero. The more sensitive you make it, if you move to one, then the staking share becomes more stable. Because the returns are less new, money is drawn in and pushed out. The issue, though, is that even in this model, it's not necessarily welfare improving.
01:14:21.392 - 01:14:50.156, Speaker C: And don't necessarily want to stabilize the staking share. What's going to happen in this model is that the prices and the money supply then become more volatile. If you then use the welfare criterion, that's the natural one in this model. Which is just sort of lifetime utility, then that's actually going to go down. If you want to stabilize the staking, share more. There's other things you could do. You could do something like a state dependent reward factor.
01:14:50.156 - 01:15:19.530, Speaker C: This is a bit like a Taylor rule people do for monetary policy. Again, that has a very similar sort of consequence than this. This is a conclusion, not going to repeat it. Of course. The thing that you wonder is, this is a very simple model. So at this point, this is really the, if you want, it's sort of the most parsimonious setup you can think of. It's just the ingredients that I sort of thought we really wanted.
01:15:19.530 - 01:16:04.116, Speaker C: This type of approach is scalable. We can add other things that can still solve it pretty much doesn't make it a lot harder. And so obvious extensions, I guess, would be to introduce liquid staking. Okay, the way staking is sort of introduced now is that all staking is pooled. And there's no distinction between liquid staking and non liquid staking. And so having two types of pooled staking, liquid and a non liquid, okay, that would be sort of a straightforward extension. We just have this additional liquidity sort of value from having a liquid staking.
01:16:04.116 - 01:16:36.720, Speaker C: And then you can see, of course, for this to work, you need some sort of additional risk or cost for liquid staking as opposed to sort of pool staking. So from a modeling perspective, this is straightforward to put in. I guess there's probably more sort of a deeper question of what are the risks, the additional risks or costs. And again, here, this is from an individual's investor's perspective. That's the way it's set up. Is that enough to stop liquid staking from taking over? It's not clear.
01:16:36.790 - 01:16:37.410, Speaker A: Okay.
01:16:38.500 - 01:17:09.384, Speaker C: The other thing you could do, of course, you could add L2s. Okay, that's just another use. Other tokens that provide utility that interact with this one here, you can have that. Fees. Fees would be, there would be a larger supply of block space. Fees will be lower, but the L2s will be, they would have to pay fees to the layer one. You can then study things like, of course, the L2 takeaway.
01:17:09.384 - 01:17:25.250, Speaker C: They take away fee income from the layer one, but they help it, help it grow. Okay, which one is going to win or under what conditions? That's something we could study in this type of setting. Let me leave it at that.
01:17:39.320 - 01:18:07.436, Speaker D: Hi, thanks for the talk. I really enjoyed the talk and also the paper. Just one question. So in practice, people can generate returns from naked eth outside of the protocol, for example, by providing it as collateral in defi. I wonder if you thought about how would that enter the decision problem of the agents, the utility function.
01:18:07.618 - 01:18:40.564, Speaker C: Yeah, that's a great point. So for now, of course, the way I think of it now is just the way it's set up. It's just utility. We don't see the flows, but the way we'd introduce that. We need another sort of technology. So we need explicitly then borrowing on lending, that produces some value. And that then you could sort of add it to collateral.
01:18:40.564 - 01:19:08.000, Speaker C: That's something that's pretty straightforward to model, but that's sort of the way to go. Okay, I agree. In some sense, the money in utility, that's a very reduced form way of putting things up. Okay. Monetary theorists, they don't like this very much. They want to see the actual uses of money. Money used to pay for goods, money used as collateral.
01:19:08.000 - 01:19:25.290, Speaker C: Of course, that makes a lot of sense to do that here. That was just sort of the first starting point not to put in explicitly because it's going to add things. It's going to add quite a bit, but of course, at some point we want to do that. Thanks.
01:19:26.060 - 01:20:15.190, Speaker E: So since I already stood up, my question was similar as I was just thinking of introducing us another money that for which your services are substitutable, like the dollar denominated. And maybe what would be the implications for the stake share and money supply? I mean, probably doable because here you have a large precautionary kind of you want whenever you have a bad shock in the future of having high fees to be able to pay gas. But what if your demand just drops? You go to the dollar. It's similar question. I wondered. That's something you can capture here, like a substitutable other currency for which there is substitution. So I wonder if it's just equivalent to a lower teta, which is how much you value the g or something else.
01:20:15.960 - 01:20:56.630, Speaker C: Yeah, I guess enriching the model, there's sort of two ways you could do it. And then depending on how you do it, the predictions here would pretty much sort of go through, and otherwise it would change things dramatically. Okay, so if we're just sort of splitting things, let's say the staking, there's different ways of doing it, then we wouldn't really change the aggregate much, but there would be switches. If there's other money, of course, then things could change dramatically depending on what you want to focus on.
01:21:00.760 - 01:21:11.720, Speaker A: Yeah, I'm curious how the models would change when you account for restaking where the same stake could be used to stake on exogenous systems.
01:21:15.020 - 01:21:23.470, Speaker C: You want to restake the. Yeah. So I guess that's sort of a way of making the staking more liquid in some sense.
01:21:24.320 - 01:21:34.320, Speaker A: Or rather than staking, let's say, for the Ethereum protocol, you can stake for another exogenous. There's like an opportunity cost there, or you can get leverage on the initial.
01:21:34.980 - 01:22:14.764, Speaker C: I think, of course, the staking here, it's a use of ethereum, but it also feeds back in the money supply. Okay, so that has sort of this particular, the two channels sort of interact. If it's just another use of ethereum to surface as collateral somewhere else, then what would happen? This is sort of similar point from before. It would split the uses. Instead of just having this sort of one simple nice thing where it uses, then we have a different use. And then the question is always, simplicity is good, because then you need to make additional assumptions. Okay.
01:22:14.764 - 01:22:44.440, Speaker C: If you want to have now an additional sort of use for that, then you need to specify how much of a return do you get? How does it behave? Okay, here with this, you don't need to do that. It all gets sort of solved together. But if you have good ideas and good data, then you could add in some sense, anything you can add like this. But then, yeah, you need additional input if you want to bring it to the data. That's one of the constraints.
01:22:44.940 - 01:22:45.640, Speaker A: Thank you.
01:22:45.710 - 01:22:46.570, Speaker C: Thank you.
01:22:47.260 - 01:23:29.412, Speaker D: Hi, thank you for the talk. I have two questions about the model. The first one is that you are using a representative agent. So in some sense, when he used the ethereum, it's actually a way to give it back to himself the next period. But getting a utility. What happens if actually you split, you don't have like one agent, but one which is really maintainers, which actually does job and do things for the blockchain and like really users, would it change anything? And the second question is that in your model, there is no security concern and staking is used for that. And so at any moment, actually the blockchain could actually collapse because there's not enough staking or anything like that.
01:23:29.412 - 01:23:47.512, Speaker D: So what about that? What about that? Okay, it's a security alert. I don't know why, but typically security. So yeah, what about that? Can you put that actually in the model? And what would it change actually, the security concern?
01:23:47.656 - 01:24:19.696, Speaker C: Yeah. Heterogeneous agents, representative agents versus multiple agents. The setup here would be pretty straightforward to have. And actually that's how I started it. I started with two type of, there's users and stakers, and they're separate. The way it's now, the only thing it would change is that there's different discount factors in the two equations. And so then of course then you'd have to make some decisions.
01:24:19.696 - 01:25:15.876, Speaker C: So the view now, and that matters for pricing, is that the typical sort of holder of eth here is somebody that's exposed to us interest rates and that's exposed to the overall productivity risk of the network, assuming that many are holding a significant sort of part of their wealth in the system. And now when you split, the assumption is just everybody's the same and has these properties. Now when you have two agents, then you just have to decide how you have sort of additional degrees of freedoms. Who is behind this? Okay? And you could play with that. You could say basically the stakers, maybe those are, again, that's just hypothetical. I don't think that's necessarily true, but those are investors that also have significant share of their wealth in the stock market. And then you would have that discount factor.
01:25:15.876 - 01:25:49.010, Speaker C: You have stock market in there and the users, maybe not maybe the users, they're more concentrated in ethereum. So that would be one thing that you can get out of that sort of different risk exposures, different alternative portfolios. But the way it's set up now is relatively straightforward to put that in. And again, it's just a challenge of deciding what story you want to want to put into and how you want to sort of bring this to the data.
01:25:50.100 - 01:25:50.816, Speaker D: Thank you.
01:25:50.918 - 01:26:47.590, Speaker C: And the security? Yes, security, of course, there are models with this so called, they have this sort of security function, and you can make sort of security of the network a function of certain parameters. I mean, that's a possibility, maybe, but it's some sort of a low, it's a low risk at this point, but it's something you could put in. But I don't think it's going to really change. You're just going to have a probability that something really bad can happen. There's a lot of asset pricing model that have this type of feature that could explain some, because then you have sort of a big risk that has low probability. So you can explain certain things. So that's possible.
01:26:47.590 - 01:27:37.590, Speaker C: I haven't done it here again, because maybe, I think as we develop models like this and we see what they can roughly match and whatnot, we learn from what is really important if we need to put something like this in the model or not. For now, I didn't put it in at the beginning, but maybe this is something that would be needed if we look at this in more detail and we look at the data. Of course, that's one of the issues here. Data is just ethereum specific. Data is very short. So to really discipline the model, we need more. Thank you.
01:27:39.800 - 01:28:38.244, Speaker A: Thanks for the talk. The intuition that you gave for the kind of role of ETH versus staked EtH is Eth kind of represents the organic utility of the network. However, liquid staking kind of potentially changes this core intuitive property. So you could imagine, notionally, ETH being extremely high utility. However, most people are kind of storing that ETH as a liquid staked asset. I'm just curious how you would approach the model generally. Does it really change the intuition of what the role of ETH is? Yeah, I mean, at the extreme, you could imagine basically everything being liquid staked.
01:28:38.244 - 01:28:47.420, Speaker A: There's only a sufficient supply of ETH to perform, to basically make a market between liquid staked ETH and ETH.
01:28:48.000 - 01:29:37.672, Speaker C: No, absolutely. I think that's one of the. So if you put that extension in the liquid staking, depending on how substitutable the liquid staking is to the other uses of eth, that's going to eat away on that utility. At the limit, if the utility is the same, then it's going to displace it. That would happen in this model, and then I guess there would still be some residual demand for the non staked token to pay for fees. And so there's ways of introducing that model. But definitely that's a key question.
01:29:37.672 - 01:30:07.536, Speaker C: I guess that's what I said. That's something that, in the model, it looks like that has good chance of happening, because if you just look at individual investors here, the choices is you either get the utility or you get the financial returns. If you can get both, then that looks pretty good. Okay.
01:30:07.638 - 01:30:13.780, Speaker B: Yeah. The last few questions, hopefully you can catch them after the talk. But let's give one more warm welcome or one round of applause.
01:30:14.520 - 01:30:15.750, Speaker A: Thank you very much.
01:30:16.920 - 01:30:18.870, Speaker B: I'll pass it back off to Tim.
01:30:19.960 - 01:30:21.456, Speaker C: All right, thanks, Mike.
01:30:21.648 - 01:30:23.780, Speaker D: It's time for the group photo, everybody.
01:30:23.930 - 01:30:29.068, Speaker C: So I've been asked to request everybody actually move inward to the extent possible.
01:30:29.154 - 01:30:31.116, Speaker D: Within your row so we can get.
01:30:31.138 - 01:30:31.960, Speaker C: A nice sort of slice.
