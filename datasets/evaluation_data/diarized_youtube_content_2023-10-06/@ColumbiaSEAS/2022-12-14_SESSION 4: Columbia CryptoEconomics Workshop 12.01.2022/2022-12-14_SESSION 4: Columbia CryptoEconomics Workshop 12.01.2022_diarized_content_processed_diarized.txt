00:00:00.250 - 00:00:41.594, Speaker A: Welcome to the afternoon session here at the Crypto Economics workshop. My name is Cmak Molemi and I am one of the organizers. And to start off, it is my pleasure to introduce Dean Costis McGlaris. He is the dean of the business school here at Columbia University. He is also my colleague as a professor in the decision, risk and operations group. In terms, aside from his administrative responsibilities, in terms of his research, he's an expert in the areas of stochastic analysis, in queuing theory, and also in market microstructure. And I'm hoping one of these days to get him into decentralized finance and blockchain, but we'll see about that.
00:00:41.594 - 00:00:44.490, Speaker A: But with that note, let's all welcome costis.
00:00:48.590 - 00:02:16.022, Speaker B: Okay, thank you all. It's fantastic to be joined by such a great group, and I feel underprivileged for not being able to actually participate to the full day of what's going on here. But I wanted to make three comments, primarily to say how committed we are in this area of work, how interesting, we think sort of this effort to explore how blockchain technology can actually disrupt or change things that we do, and how technology has been changing pretty much everything and disrupting pretty much everything in all aspects of our lives for the last sort of half a century or so, and that's poised to continue. At the business school, we just launched an effort, we call it the Digital Future initiative. Under that effort, we have, through a gift from Peter Brigger, we launched the Brigger Family Lab on digital finance. And that will host a lot of the activity that we do in that space for research, for curriculum development, and for events like this, for outreach with industry and practitioners. And we hope to continue to expand everything that we do there.
00:02:16.022 - 00:03:13.514, Speaker B: The third thing that I want to say is that the degree of student interest that exists in engineering at the business school and throughout the university, about blockchain, broadly, about the applications, about Web 3.0, and about all the things that you guys are talking about. We are 100% capacity constrained in our ability to satisfy student demand and through events like this, through the ability for us to sort of bring people like you here together to explore interesting questions. In the future of this space, we hope to be able to also move the needle in that area. Now we have an exciting talk to come, so I'm going to stop talking. It's exciting to have you all here. Next time we'll have to host you in our new campus a few blocks north of here.
00:03:13.514 - 00:03:24.880, Speaker B: And I will pass it back to my good friend, what Siamak didn't mention is that apart from being his colleague, I'm also his co author. So, my good friend, Siamak. Okay, thank you.
00:03:30.450 - 00:03:57.560, Speaker A: All right, so next we're going to have a keynote presentation, and that is going to be from my colleague, Tim Roughgarden. Tim really doesn't need an introduction, but for those of you who must know, he is a professor in the computer science department here at Columbia. He's also head of research at a 16 z crypto. And among his many academic accomplishments, one fact that you may not know about him is that he does not like long introductions. So I'll leave it at that.
00:03:58.510 - 00:05:01.130, Speaker C: All right, so thanks, everyone, very much for coming. Good to see everybody. So, when you study a field deeply, maybe it's a branch of math, maybe it's algorithms, maybe it's mechanism design. A superpower you sort of get when you get that deep understanding, is you learn to recognize problems that come up in the real world, and applications recognize them as thinly disguised versions of, or minor variations on problems that are well solved in your field. So when a mechanism designer who's sort of not familiar with the crypto space comes and starts learning about some of the game theory and incentive issues that come up, a very appropriate, very natural first response is, oh, okay, let me map this onto a field I already know well, traditional mechanism design and copy and paste solutions for these problems from there. Or maybe I need to do some minor tweaks to adapt them to the blockchain setting. It's a very natural first thing to think as a sort of non crypto mechanism designer.
00:05:01.130 - 00:05:30.114, Speaker C: And turns out that really does not work. And it doesn't work for a lot of reasons. And that's what I want to talk about today. Eight reasons why mechanism design for blockchain protocols is hard and not unrelatedly, scientifically, deeply fascinating. A few caveats. First of all, the list of eight that's not intended necessarily be comprehensive. I'm not saying there aren't still more.
00:05:30.114 - 00:06:18.242, Speaker C: These are ones I decided to focus on. Some of the eight, you could say, overlap in various ways, but I thought it was conceptually cleanest to separate it out into these eight distinct things. Final caveat for those of you that are truly sort of crypto native in the room, I think most of these will feel familiar. Some have been alluded to already in the morning, even for you, even for the crypto natives, I hope it's kind of helpful to see them all here in the same place. And then for the more kind of academic audience amongst you, I hope this gives you a sense of why, really, sort of the scale of the challenges and opportunities in this area in cryptoeconomics. So just so we're all on the same page, like, what do I mean by mechanism design? Well, one description I often like to say is this, quote, unquote, inverse game theory. So what then, is game theory? Usually in game theory, a game kind of falls from the sky.
00:06:18.242 - 00:07:09.874, Speaker C: You're given a strategic environment and you sort of investigate, do players have dominant strategies? What are the Nash equilibria? Et cetera? So, given a game, what are the most plausible outcomes of that game? That's traditional game theory, mechanism design. You start not with the game. You start with an outcome, an outcome generally that you would like to see happen, and you try to reverse engineer a game of some form so that that desired outcome is, in fact, an equilibrium. Okay, so one classic example of this would be maybe you have sort of scarce resources. You'd like to allocate them in the most efficient way that would be a desired outcome. And then you want to set up some game so that you can elicit accurate information from participants so that you can actually make that efficient allocation decision. Mechanism design is a beautiful, deep topic.
00:07:09.874 - 00:08:11.542, Speaker C: The vic re auction, for example, I believe, is 1961. So we're talking 60 years in lots of amazing textbooks from which you can learn about this field in a blockchain context. Where would mechanism design style problems come up? Where would you have a desired outcome that you want to incentivize all the time? For example, if you have a blockchain protocol, the outcome you have in mind is the participants running your protocol are doing so honestly, meaning in the way that you intended. And you would like to set up a game, maybe sort of incentives, rewards, so that that is in fact an outcome. Or maybe you have a scarce resource like block space on Ethereum, and you'd like to allocate that in the most efficient way to the most valuable transactions. So these kinds of questions come up all the time when you're thinking about the design of blockchain protocols and all of the layers of the stack. So why can't we just look up, I don't know, chapter two of the textbook, and apply those solutions here? So let's start talking about the reasons.
00:08:11.542 - 00:08:59.602, Speaker C: First, two reasons if you were at elaine, she's talk this morning, you already got sort of a preview of these two. Reason number one, lack of trust. Problems with trust. If you think about it, there's actually sort of, kind of a funny irony here, because blockchain's claim to fame decentralization, it's actually kind of a trust minimization assumption. The whole point of using a blockchain is there's no one entity or individual that you have to trust. You have to be willing to make a kind of on average trust assumption that of this big pool of hash rate, of this big pool of stake, some suitable constant fraction of that is running the protocol correctly. You don't need to make any assumptions about any particular individual, and it seems like that should actually make mechanism design easier.
00:08:59.602 - 00:10:04.160, Speaker C: Right? You have this computer in the sky, you have this blockchain that's just guaranteed under the usual kind of constant fraction honest assumptions, guaranteed to execute its code as is intended. It sounds like it should make things easier. Actually, in some levels it does, for better, for worse, as we'll talk about on the next slide. But kind of the irony of many blockchain architectures is that when you're actually talking about transactions getting added to the history, transactions getting chosen for execution by the virtual machine, that decision is actually unilateral for a brief moment in time, call it 12 seconds, maybe. A single node running the protocol chosen at random, in effect, has unilateral control over which transactions get included in that batch and which ones don't, as well as on the ordering of the transactions within that batch. Okay? And so that is who you cannot trust at the point at which a batch of new transactions is being added. That actually is a single individual who may or may not be interested in sort of carrying out what you had in mind.
00:10:04.160 - 00:11:23.190, Speaker C: So it's very rare that you hear about second price auctions in a blockchain context. Although just recently, using ZK technology, there's been some really cool implementations. But setting that aside, if you try to do it very naively, a second price auction on a blockchain, you very quickly run into problems with manipulation by untrusted block producers, right? So if you're producing a block, that block includes a second price auction, and you're getting the revenue from that second price auction, then as the block producer, you can just manufacture a shill bid. So a fake bid whose bid is slightly under what's going to be the winning bid, thereby forcing the winner to pay actually pretty much their full bid, as opposed to the second highest bid, as is expected in a second price auction. So shill bids by untrusted block producers make second price auctions devolve into first price auctions, which is why at least initially in blockchains, people just fast forwarded to using first price auctions in the first place. There is a branch, a recent branch, the traditional mechanism design literature, credible mechanisms, which is related to this, which is again motivated by situations where you can't necessarily trust the auctioneer. But it's not a perfect fit for the blockchain context, in part because there's different sets of manipulations that are possible in the credible mechanism context than in blockchains.
00:11:23.190 - 00:12:00.914, Speaker C: Reason number two also featured heavily in elaine's talk. Collusion. Collusion among who? Let's start with collusion just among the different users of a protocol. Let's start there. So let's even assume, ignoring reason number one, let's assume for the moment we actually do have a trusted auctioneer, like a trusted person carrying out an auction or producing a block. Even then, second price auctions, kind of like Elaine said, the poster child of mechanism design, is vulnerable to collusion, assuming you have side payments. Intuition is very simple.
00:12:00.914 - 00:12:40.906, Speaker C: If you're going to be the winning bidder, you're going to have to pay the second highest bid. So you just bribe what would be the second highest bidder into biding much lower. So you will pay much less and then basically that second highest bidder will just get a kickback. So that's a manipulation of the vicary auction, even when you're not worrying about this untrusted auctioneer. So second price auctions are used in real life, like eBay, auctions are more or less equivalent to second price auctions. So you might know to what extent is this happening? I'm sure it happens some, but they don't worry about it that much in many traditional mechanism design applications. Two reasons, one on this slide, one on the next slide.
00:12:40.906 - 00:13:37.246, Speaker C: The reason on this slide is just that collusion, especially with side payments, it's not impossible to pull off in practice, but it's not necessarily easy either. Right? So it's hard to just have credible side payments that are going to be carried out after the conclusion of some collusive action. Okay, now in a blockchain context, this doesn't apply for exactly the reasons we were talking about at the last slide, okay? Right. So there is no trust assumption necessary for computation that's carried out on the blockchain. So that means would be colluders can actually commit credibly to the side payments that they need to make each other, they need to make to each other in order for the collusion to work. So you could commit on chain to getting this kind of kickback if someone bidded as was agreed upon. So it's actually much easier to collude in this sense in a blockchain environment than in a traditional environment.
00:13:37.246 - 00:15:11.934, Speaker C: So using EIP 1559, Ethereum's current transaction fee mechanism as an example, which you've already heard about many times today, the goal to have this type of collusion resistance that you can't have a bunch of users kind of jointly manipulating a transaction fee mechanism that actually forces the hand of the transaction fee mechanism designer. You are basically stuck using a posted price style mechanism. Once you insist on within the mechanism itself being robust to this form of collusion, it gets worse, because not only can different users of a protocol collude with each other, now, again, remember, we can fold back in reason number one, the block producer is also untrusted. So you could have a cartel that includes both a block producer and end users. And the robustness to that style of a collusion forced a further design decision on the EIP 1559 transaction fee mechanism, namely that a portion of the transaction fees needed to be burned, okay, eth taken permanently out of circulation, okay, it doesn't have to be burned, but you have to do something with the base, the revenues, other than the obvious thing of giving it to the block producer and sort of the simplest thing, and the thing which is done in Ethereum's EIP 1559 is that is burned, okay? And the reason is because if you don't do that, then a block producer and end users can collude to evade whatever reserve price you're trying to impose, again, through these kind of side payments. Reason number three, rule of law will not help you, at least will not help you much. Okay? So collusion is obviously not a new thing.
00:15:11.934 - 00:15:31.862, Speaker C: It's been a concern. It's sort of plagued various mechanisms in real life for centuries. So obviously people have thought about it some. Honestly, if you look at the mechanism design literature, you'll be surprised. It's not to say that none of it handles collusion. You'll be surprised how little it is. I would say at least 90% of the academic literature is simply silent on the issue.
00:15:31.862 - 00:16:09.022, Speaker C: They list their incentive compatibility notions. They're all about unilateral deviations. They'll have a notion like dominance strategy, incentive compatible truthfulness. They'll only talk about people being better off doing what they're supposed to be doing, as opposed to how well they would do under a unilateral deviation. So if you go past the literature and you ask practitioners, if you ask people who really build kind of important mechanisms in the wild, they're not just writing a paper. They have to worry about collusion. One of the reasons that they don't take care of that within the mechanism itself is the one we mentioned on the last slide.
00:16:09.022 - 00:16:53.322, Speaker C: Maybe just it's too hard in real life to pull off collusion, especially the type with side payments. But honestly, when I've pressed practitioners on this point outside of the blockchain space, the answer I consistently get is, look, we're happy to handle as much as we can with our mechanism design, okay? And so like we can handle sort of these dsick truthful unilateral deviations and still have a really rich useful mechanism design space to play with. So we're willing to do that inside the mechanism. But handling collusion inside the mechanism, that just ties our hands so tightly. So we're just going to sort of resort to a legal channel to deter collusive behavior. So what does that mean? That means participants in the mechanism are going to sign a legal contract. That contract will specify that they are not permitted to collude.
00:16:53.322 - 00:17:26.902, Speaker C: You design the mechanism, perhaps so that collusion is relatively easy to detect. And then if it's detected, then you hand it off to a legal channel. So this is kind of an unspoken secret. I think in a lot of the mechanism design literature the paper will tell you about sort of the part that's handled by the economics. And then there's this other unspoken part which is handled by the rule of law. It's probably be an exaggeration to say there's literally no rule of law around permissionless blockchain protocols. Right? We do see law enforcement successfully prosecute criminal behavior on permissionless blockchains pretty frequently.
00:17:26.902 - 00:18:21.942, Speaker C: Safe to say you have a lot less of it than you do kind of in traditional mechanism design applications. So this is again a force that kind of pushes you as a mechanism to design it, to say, well, if I can't punt this to something outside the mechanism, I guess I have to handle it inside the mechanism. And you see this pervade mechanism design decisions that we've seen in the blockchain space. We talked about EIP 1559, the burning of the base fee revenues being one example, slashing an ETH two, that's another example. That's basically a way of having programmatic rule of law within the Ethereum protocol itself. Okay? If you have a bunch of stake colluding, double signing, you design things so it's detectable by looking for double voting. The rule of law is in effect, the slashing rule that you then resort to reason number four, unlike the first few, this is actually something that works in our advantage.
00:18:21.942 - 00:19:07.018, Speaker C: Okay, so here the challenge is just that the design space is bigger in a particular dimension than we're accustomed to, which is a good thing, but it means we have to think about the problem anew. Traditional mechanism design. Like, you know, you figure out the outcome you want, you design a game so that that outcome arises at an equilibrium. Often. Not always, but often. Like in the vic re auction, the VCG mechanism, the game that you design, will include payments between the participants or between the mechanism and the participants, right? Like in a second price auction, the winner has to pay something to the person running the auction, and you don't really worry about what that money is. When you're studying second price auctions, presumably it's like us dollars, whatever the local currency is.
00:19:07.018 - 00:19:58.966, Speaker C: And you don't really think much about it when you're talking about layer one mechanism design. So when you're talking about mechanism design on a blockchain that has a native currency, like most of the major ones do, there's actually a part of the design space which we can explore that we never had before, which is access and ability to manipulate a native currency. Like, imagine if you tried to write a traditional mechanism design paper, and you describe the mechanism, and at some point in the mechanism, you say, oh, and by the way, print a bunch of new money and give that to a bunch of the participants, it would look ridiculous outside of a blockchain context. It would do crazy. Okay? But you can do exactly that when you're talking about layer one mechanism design. You can print new money or you can burn money. Conversely, and again, this is a positive.
00:19:58.966 - 00:20:35.000, Speaker C: The design space is larger. So it could be that things that are impossible without access to a native currency do indeed become possible. Okay. And indeed, if you just think about a simple problem as like, how do you incentivize, say, bitcoin miners to carry out the protocol? How is that done? In reality, it's done through inflationary rewards. It's done through printing new bitcoins to motivate these block producers. How would you motivate them if you did not have access to a native currency, especially, let's say, in the early days of the protocol? I'm not sure that's a solved problem without access to a native currency. So it enlarges the space of things you can do.
00:20:35.000 - 00:21:21.862, Speaker C: All right, so that's the midway point. So I thought maybe it'd be worth reflecting a little bit, because I really think for mechanism designers like myself and some other people in the room. It's worth just taking in kind of what an opportunity all of this is. Because when I talk to my friends from the EC community, economics and computation, when I talk to other algorithmic game theorists, I say I'm looking for opportunities in the blockchain space. They tend to immediately think about the application layer because they're reasoning by analogy with web two. So in web two, obviously a two sided market like Lyft or something like that, obviously needs people with my kind of expertise. Computer science, economics, both, right.
00:21:21.862 - 00:22:03.230, Speaker C: Lots of other examples at the application layer of the Internet. So analogously, to the extent that you think blockchains are going to enable the next generation of the Internet like a web three, obviously you would expect applications. Again, for mechanism designers, people who think about incentives in computer science contexts. This entire day, this entire workshop isn't touching the application layer at all. We're talking about mechanism design and incentives in the infrastructure layer. So for the Internet, right, this would be like, imagine if. So, back in, I think it was the mid to late 70s when they were deciding upon BGP routing.
00:22:03.230 - 00:22:27.386, Speaker C: You could imagine a world where there was someone with a seat at that table who was thinking about incentives. As far as I know, there wasn't. You could imagine a world where there was TCP congestion control. I think that was the late eighty s. You could imagine a world where there was someone who was thinking about incentives at the table, informing the design. As far as I know, there was not. In fairness, the Internet was only commercialized sort of 25 years in.
00:22:27.386 - 00:23:06.290, Speaker C: It was just being run kind of by universities and sort of government agencies for quite a while there. So it was maybe natural to not think about incentives. Of course, from 2022, in hindsight, we now realize it would have been really nice if there had been some thinking about incentives from day one as far as the design of the Internet. But the opportunity was not there. But that is exactly what this workshop is all about. And the opportunity is being highlighted today. They are all about sort of designing incentives into what's going to be the eventually somewhat stable and ossified infrastructure of web three, of blockchains of what I believe will be the next generation of the Internet.
00:23:06.290 - 00:24:00.460, Speaker C: So it's a pretty remarkable opportunity. So in reason four, I highlighted the power of giving a mechanism access to a native currency in particular. Maybe there's other things you could do too, but the obvious things you could do then is you could mint. So the way the blitcoin protocol mints new bitcoins to incentivize miners. Or you could burn the way Ethereum's EIP 1559 transaction fee mechanism burns eth to have good incentive properties. However, the flip side of that, with that power of being able to manipulate a native currency, comes responsibility, and that your mechanism may, in fact, have macroeconomic consequences. Look, when you're in the real world and you're running like a second price auction, you are not thinking about the consequences of your auction on the US monetary supply or the inflation rate.
00:24:00.460 - 00:24:37.270, Speaker C: It never enters your mind. I've actually never seen a paper in mechanism design that seemed concerned with any kind of macroeconomic effects of the mechanism. As far as I know, this is just utterly new to this new part of the design space where you're manipulating a native currency. Okay. All right, so what could go wrong? Well, let me talk through two examples. One about minting in bitcoin, one about burning in ethereum. So by virtue of using block rewards, by printing new money to motivate miners, bitcoin is thus forced to have inflation.
00:24:37.270 - 00:25:21.890, Speaker C: And so it's therefore forced to have a monetary policy. It has to decide on an inflation rate and how that inflation rate evolves over time. And Nakamoto was very intentional, perhaps as a response to the great Recession, who knows? But Nakamoto was very intentional in insisting on a hard supply cap, on the number of bitcoins, 21 million. It will never be more than that. So what are the microeconomic consequences of that macroeconomic policy decision? Well, if the number of bitcoins has a hard cap, it means the inflation rate must go to zero. This is using the fact that bitcoins are never taken out of circulation by the protocol. They're only created, they're never destroyed.
00:25:21.890 - 00:25:52.230, Speaker C: So the inflation rate, and therefore the block rewards have to go to zero. If they go to zero, you'd be right to ask what could possibly motivate miners then to continue running the protocol and contributing security to bitcoin. And the vision, and it's right there in Nakamoto's paper, the vision has always been, well, if bitcoin is around sort of 50 years later, presumably people are using it and it has value. And presumably the transaction fees will sort of make up for the missing block reward. Evidence so far is actually not so good about that being true. But even. Let's put that aside.
00:25:52.230 - 00:26:14.542, Speaker C: Okay. So it's always been known that if transaction fees also stay very close to zero, there's going to be big problems with bitcoin security. But actually, there's a nice paper. It's about six years old now by Carlston at all. That point out. Even setting that aside, another difference between transaction fees and block rewards is that while block rewards are fixed, they're the same for every block. Transaction fees can be varying by orders of magnitude.
00:26:14.542 - 00:27:01.806, Speaker C: And that turns out to introduce game theoretic instability into the protocol. I'm not saying you couldn't fix this, but I'm doing this to illustrate that this macroeconomic decision, which had to be made as part of the mechanism design, feeds back into the game theory of the participants using that protocol, and in this case, in a potentially quite negative way. Moving on to Ethereum. So, as we discussed, there's various reasons why the design forces you to burn part of the transaction fees, the part that's raised by the so called base fee. And so burning, taking ETH out of circulation, well, that's kind of the opposite of minting of block rewards. Block rewards are an inflationary force. Burning of base fee revenues is a deflationary force.
00:27:01.806 - 00:27:45.810, Speaker C: And so ever since EIP 1559 came along a little over a year ago, there's been this tug of war between, on the one hand, inflationary rewards being given to validators, and, on the other hand, transaction fee revenues that are getting burned. And since the merge two or three months ago, I believe EtH has been net deflationary. And I think most of us expect that to continue for the foreseeable future. So I would encourage you to think of ETH as basically a deflationary currency at this point. A natural question. And so, again, that's just like a macroeconomic consequence of the mechanism design decision. In the transaction fee mechanism, a natural question is, is that good or bad? So it's a byproduct of a mechanism design decision.
00:27:45.810 - 00:28:23.150, Speaker C: Is it a benefit or a cost? Depends who you ask. If you ask anyone who enjoys holding ETH, they tend to really be fans of EF 1559. Arguably, in the court of public opinion, this was actually the byproduct of the mechanism. That sort of was the tipping point for being accepted. If you ask any traditionally trained macroeconomist and you tell them about this, they recoil in horror and they start telling you stories about stagflation in 1990s Japan. Okay. And as far as I'm concerned, it's an open question to resolve these two answers to the question.
00:28:23.150 - 00:29:00.834, Speaker C: Right. I'm not super convinced by the macroeconomists analogizing ETH with a sovereign currency. I'm not so sure that's an accurate analogy, but it does throw the gauntlet back on us. Back on blockchain researchers to actually rigorously explain why they're not the same. Why is it okay to have a deflationary currency as a cryptocurrency when it may not be as a sort of fiat currency for a sovereign nation? All right, so macroeconomic consequences of your mechanism, that was reason number five. Reason number six. So we can talk about the stack of blockchain layers.
00:29:00.834 - 00:29:31.406, Speaker C: The blockchain stack, it's come up a couple of times, as you've already seen from the times it has come up this morning, no two people on the planet agree exactly on what the layers of the blockchain stack are. But just an analogy to the Internet stack. We're trying to visualize it that way. And in computer science, one of the things you aspire toward is modularity and clean abstraction separation. You want to take parts of your system just on faith. You sort of know the exported functionality of the rest of the system. You don't know actually the guts of how it's implemented and knowing only the functionality.
00:29:31.406 - 00:30:02.990, Speaker C: You want to, in isolation, design your part of the system. So that's the dream pipe dream, it turns out, at least at the moment, for blockchain protocols. You'd love to focus on one layer of the stack, let's say the application layer, and ignore the details of how the infrastructure layer works. Okay. You cannot do that at all. Right, so Mev, which we've heard about some this morning and we'll hear more about, is maybe my favorite exhibit a of that. I view that as an interaction, just sort of a lack of separation between the application layer and the consensus layer.
00:30:02.990 - 00:30:44.426, Speaker C: Let me just mention. So for example, if you're designing an automated market maker, you can't not think about the fact that untrusted block producers are in charge of transaction ordering. You literally just cannot not think about that if you're doing defi at the moment. Another example, there was a really good question after one of the morning talks on exactly this point. Same thing when you're thinking about transaction fee mechanism design. For example, at layer twos, right? Because as was mentioned this morning, not only do you have to pay for resource consumption at layer two, you also have to pay for the induced cost on layer one, for example, from storing call data on layer one. This is basically an open problem.
00:30:44.426 - 00:31:21.874, Speaker C: What's the best way to do this? It's actually a super interesting cost sharing problem. I think the traditional mechanism design literature actually will have a fair amount of helpful things to say on this point. Reason number seven, it is a very computation limited environment. Now, traditional mechanism design is really egregious on this. Okay? If you look at sort of like the VCG mechanism, the Vicker Clark Grove's mechanism, it will blithely just solve np hard problems without worrying about it, which is fine. I mean, just computation was not really in the minds of what they were concerned with the economic aspects. They were ignoring the computational aspects.
00:31:21.874 - 00:32:24.566, Speaker C: So when algorithmic mechanism design, first introduced by Nissan and Ronan, on the computer science side, when computer scientists started looking at mechanisms, of course they said, no, come on, we need some kind of computational tractability for these things to have any actual meaning in the real world. Now, theory, literature, so far in algorithm mechanism design, it tends to be very loose with its ambitions around computation, like polynomial time. And communication is generally viewed as good enough, and that is not good enough in a blockchain context. Certainly, blockchains tend to be very computation scarce. This is really obvious if you're thinking about the application layer, if you're thinking about virtual computation, that's carried out in the Ethereum virtual machine, which is measured by gas, 15 million gas per block on average, one block every 12 seconds. So that's extremely limited. And that, for example, is, in my view, the primary reason why automated market makers completely dominate Ethereum DFI, as opposed to more traditional solutions like limit order books, even at the consensus layer.
00:32:24.566 - 00:33:15.020, Speaker C: And this also came up, I think maybe it was in Ansgar's talk. So if you just think about the computation being run by the consensus nodes, they still have to process a block every 12 seconds, and part of that's going to be chewed up by just waiting to hear and communicate with other nodes, with other nodes that are running the protocol. So you have some time to work, but not that much. And so that's one of the reasons, for example, why you see this outsourcing a block building that Phil talked about this morning. It's almost like nodes, when the protocol have enough to do, it makes sense to offsource the non trivial problem of building a block elsewhere. Last reason, reason number eight, it's still early. Usually in this space, when people say it's still early, they're referring either to investment opportunities or to adoption numbers.
00:33:15.020 - 00:33:57.046, Speaker C: I agree with both of those sentiments, but here I mean something different. I mean, on the scientific research side, and boy, is it early on the scientific side in this space. Okay, for fun, we can compare the benefits usually taken for granted, the benefits of working in a mature research area. I don't know, computational complexity theory or even, like, machine learning. I'd mostly put in this category. At this point, you have agreed upon models and definitions. Maybe it's polynomial time Turing machines, maybe it's sort of pack learning, whatever everybody agrees on.
00:33:57.046 - 00:34:33.282, Speaker C: What are the right models? What are the most important definitions? What are the most important problems there tends to be agreement on? Maybe it's the traveling salesman problem. Maybe it's half spaces with noise. Who knows even what a solution means? If you think about it, there needs to be nontrivial coordination on just how you measure progress. You have a lot of people that have a common vocabulary. They speak the same language. They have a common knowledge base, a large common knowledge base. And moreover, if you're not one of those people, there is an on ramp to getting that shared vocabulary and knowledge base.
00:34:33.282 - 00:35:27.006, Speaker C: There are textbooks, there are moocs, et cetera. All things going for you in a mature research area, which, again, I think people working in those areas, often a little bit take for granted. If you change mature area to blockchain, the benefits turns into challenges and all of those things go away. Okay, so currently in the blockchain space, there are very little agreement. I think most of us feel like no one's actually proposed the quote unquote right model, the right definition for many things, like what's the most important notion of incentive compatibility? I think we're still exploring that on important open problems. We're seeing some things like Mev, I think I, and many people in this room would sort of agree it's a little bit ill specified, but Mev, in some sense we do think of as one of the big open problems in the space. So that's good to see some coordination around that.
00:35:27.006 - 00:36:30.950, Speaker C: I think workshops like today can actually make a measurable dent into having more coordination among the scientific community about what we should be focusing our efforts on. And obviously, there are no textbooks, there are no moocs, anything of that nature at this point. So that's reason number eight. But I also think it's good to think a little bit about the long game, because it's funny. I'll talk to students sometimes, I'll be teaching algorithms, whatever, and they come to me and they say, tim, I was born too late. I look at these guys in the 1950s, Max Flowman cut two paragraph proof and their names were immortalized. Why was I there? In the had to do to get a Turing award was prove that 23 problems were np complete using undergraduate level reductions.
00:36:30.950 - 00:37:16.578, Speaker C: All you had to do, or in the early two thousand s man, all you had to do was prove that the price of energy was four thirds, and you had a PhD thesis inside joke. But the thing I want to emphasize is that at all of those moments in time, this is what it felt like. People weren't sure what the right problems were. People weren't sure how to formulate the Max flowman cut theorem. The price of energy hadn't been defined, et cetera. Okay, so this is actually the universe telling us, giving us a clue that actually this is going to be viewed as a golden era by later generations who will wish that they were born when we were. So there may not be any textbooks, but someday there will be textbooks.
00:37:16.578 - 00:37:24.200, Speaker C: And the work that's going to be described in it is the work that many of you are doing right now. So I'll leave it there. Thanks.
00:37:43.010 - 00:38:35.600, Speaker D: I was curious, you presented all these reasons on sort of a level playing field, but do you feel like there's some sort of hierarchy? If we look at the ABv example, the reason why we say we have unfruited block producers, they can do a lap, but there are proposals to constrain the deviations that block producers can do by having sort of a large threshold required to pollute. And maybe, but it seems like we may not want that, because if we want to impose a commitment on block producers, that commitment must be sometimes default to file, whereas they might want to do some sort of like, optimization problem for which you cannot prove that you've done optimization, et cetera. Do you feel like if we solve any one of these problems, whichever one the others will sort of fall into place?
00:38:42.150 - 00:39:29.954, Speaker C: I think that's probably so. The question is to what extent? Let me know if I'm paraphrasing this correctly, but to what extent does each one of these little challenges have to be solved separately versus can we maybe find sort of core ideas that wind up solving multiple different problems? I think it's a mix. Part of it is hard to say. One thing that happens as a field matures is you just wind up having much more unified visions of what's going on. So I think it's also fairly natural that things seem not that connected right now, but perhaps they will feel a lot more connected ten years from now. That said, at the moment, it does feel like a lot of these are going to need sort of bespoke solutions, although I can think of exceptions. So, like having a really nice economic analysis, let's say, around fraud proofs, not just for optimistic roll ups, like everywhere that fraud proofs show up.
00:39:29.954 - 00:39:44.490, Speaker C: I could imagine an analysis that really helps guide, for example, how to set parameters around fraud proofs kind of in lots of different types of systems. So I think there are opportunities. I think it's a little bit early to hope to have something truly sweeping, though maybe eventually.
00:39:47.470 - 00:39:49.190, Speaker A: In the interest of time, let's thank the speaker.
