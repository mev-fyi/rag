00:05:55.550 - 00:06:53.770, Speaker A: Everybody, welcome back to another week's of Diffusion Live. This week we've got Hamin Sheikh of Fetch. We're going to be talking about the agent based web. So this is an entirely new web paradigm that's in a way an extension of web3. But I think as we begin to unpack it today, we're going to talk about its implications both to us as individuals and how we interact with the world and the web, but then increasingly for how the digital economy and then the wider global economy will function with greater levels of not just automation that we get with smart contracts, but increasing levels of autonomy. We're going to talk about how blockchains could be considered a simple form or a 1.0 of agent based systems, but how we're going to allow for greater levels of complexity and autonomy in those systems.
00:06:53.770 - 00:07:05.390, Speaker A: We're going to talk about how Fetch's recent release of main net two can kind of help us along on that pathway. So welcome to the show, Mayan.
00:07:06.770 - 00:07:13.700, Speaker B: Thank you, Jamie, it's great to see you. It's been a while. We haven't messed up, so it's a pleasure to be here.
00:07:14.230 - 00:07:36.870, Speaker A: Yeah, well, I think I shared a image that popped up, I think, on know and it gives you those. This happened last year and it was a beautiful picture of some OV people with some fetch people in a restaurant in Cambridge, I think almost a couple of years ago. Yeah, it was a year ago. Yeah. Just before lockdown.
00:07:37.030 - 00:07:38.220, Speaker B: Good old days.
00:07:38.670 - 00:07:39.786, Speaker A: That's right, yeah.
00:07:39.888 - 00:07:41.130, Speaker B: They will come again.
00:07:41.280 - 00:08:11.926, Speaker A: Let's hope so. Let's hope so. Wanted to get you on the show. Obviously, you've just released main net two and I'm sure whilst that's interesting to people, I think it's more interesting in the context of what that represents. The agent based web. I've been banging on about it for quite a while now. Of course, crypto and web3 has these memes, whether it was DFI last summer or whether it's NFTs now.
00:08:11.926 - 00:09:07.830, Speaker A: And so what that means is usually memes happen at the exclusion of other kind of trends. And so I really want to make sure that people don't lose sight of an agent based web. So I want to explain what that means in kind of real terms, really, ways that most people would understand how they currently interact with the. And like, whenever I talk about the agent based web with people, it's amazing how most people can't imagine interacting with the web any differently than they do now with like, Google or navigating this labyrinth of advertising that's thrown at them. So I really want to kind of try to bring that to life. Why don't I try and set the scene? And then it'd be great to kind of have you expand upon what we mean by the agent based web. Obviously, agent based systems aren't anything new.
00:09:07.830 - 00:10:27.114, Speaker A: They've been around for a while, a couple of decades. But I think it's going to be interesting to think of those in a web3 context. So the way that I explain the agent based web is that if you think as a web user today, hopefully this is as a byproduct, something that everybody could understand. Everything's incredibly manual, right? So we refer to the Internet and the, the web as digital. And that's primarily because we need to use these things, right, our digits to kind of type words into search engines, to kind of manually scroll through a website to try and find the product that we want. And so if you think about that in the context of a discovery process, we have a requirement as a web user and then we have to somehow navigate this maze of everything that's trying to interrupt or kind of hijack us, finding the thing that we need as quickly as possible. And the thing that we need could be, it's the cheapest thing, it's the highest quality thing, it's the thing that could be shipped to me most quickly.
00:10:27.114 - 00:11:29.220, Speaker A: It could have many different characteristics. But ultimately that process is, it largely starts with Google and then it ends up with me on a website somewhere, scrolling through prices, looking at reviews, trying to figure out, am I being scammed? Is this the best product for the best price? And maybe I get that wrong. Maybe I get that right. And then if you kind of extend that into slightly more complex transactions, often if I book a ticket, for example, on a train or an aeroplane, if something changes in that experience, I then have to manually correct, I have to book a new flight, try to get some money back for my old flight. Basically, the world is incredibly manual, inefficient and all this kind of stuff. So in that context, what does an agent based web promise to the average person?
00:11:31.210 - 00:11:56.286, Speaker B: Thank you, Jamie. That's pretty descriptive and really quite spot on. Just a slight correction I'd like to make. Mainnet release is end of the month. We haven't released it yet. We've just been testing it. So I think if you think about what you've just said, and if I go back to the website just like you portrayed it, the websites are dumb at the moment.
00:11:56.286 - 00:12:42.938, Speaker B: Now, from today's perspective and from a decade ago's perspective, they're probably a lot better, but they're still dumb because they're not active websites. They don't do active actions. They bring you in and we'll talk about how we get there. But once you're in, you still have to do quite a lot of manual inputting, decision making or searching. That's one thing which definitely needs to change now because that's the next step of evolution of websites. The other thing is how do you get to these websites now? When it first started, we talked a lot about peer to peer, we talked a lot about how you search them. We categorized it, we did all of that.
00:12:42.938 - 00:14:05.666, Speaker B: The process now is it funnels you into one place, which could be very biased, doesn't necessarily always have to be. And again, it's manual, where you have to search in a very traditional manner, the text based system, which is Google's or bing or any of the search engines. And then you get to your 10,000 pages of where do you want to go to? And then you have to choose. If you now completely forget that model and now think of something where if you're about to do an action and you have the ability to connect directly to the endpoint of that action, which is the website, and that website in itself is active, it could be autonomous, semi autonomous or not at all autonomous, and it could actually connect with you and you can search for it without a big intermediary search engine. That's obviously going to that stage, the next step in the evolution of the web, really, and what we've been doing with web3. And it's quite interesting how these two technologies are intersecting. And you said that about blockchain.
00:14:05.666 - 00:15:34.994, Speaker B: Blockchain is one of the most used and most successful multi agent system effectively, because what you're doing is you're taking multiple stakeholders whose objectives, whose incentives are different from each other, but then you can align them to deliver a task. So now if you think about how it stops people from gaming the system or cheating the system, you could do something very similar in how the search works. So if you think about how you can disincentivize people from giving you search results which are incorrect or cost you more, or advertising based, and you can actually cut all of that out and then you connect the two agents, like, let's say in our case, it's a supplier and a consumer agent, because generally you can convert every transaction into those two things and you can connect the two together the most efficient way, then you have now cut out a huge centralized mechanism in the middle, which not only takes advantage of the supplier and the consumer, but it's also, in the long run, it's very inefficient. So that's kind of just putting a slightly different tinge on it.
00:15:35.192 - 00:16:29.618, Speaker A: Yeah. Now, obviously, we're speaking about a very specific thing here, like primarily e commerce. Right? And of course, this is applicable well beyond e commerce. But I think just for context, when we're talking specifically about something like Google and how reliant we are upon that single search engine owned by a single corporation to effectively match supply and demand on the web. So you were an early investor in DeepMind. Some of the fetch team were some of the first employees there. DeepMind is now the deep learning capability of Google, used for many things well beyond search, but effectively, you guys know what you're talking about there, right? You know that world of Google.
00:16:29.618 - 00:17:58.750, Speaker A: You know the context through which they've been looking at things like deep learning to improve the experience. But I think the difference here is that rather than one central party, you end up with a marketplace of agents, whereby each agent, the supply agent, and the demand agent discover one another and they can interact and transact with one another autonomously. Now, the reality is, at least this is how I see it, the end user probably will not be aware of that, other than they will communicate a command into a mobile device, probably by voice, rather than typing something in, and its agent will then carry out a search on its behalf and a transaction. And that's presumably just one instance where the user is telling the agent to carry out an action. But as we're saying earlier, you could also have an instance where an agent predicts a requirement, so it knows that your flight has just been canceled, it books a new one for you and then just alerts you of the outcome. So I guess we can kind of shift from instructive systems to ones where they can become increasingly predictive. And I guess you could argue we're kind of already going in that direction with Siri or with Alexa.
00:17:58.750 - 00:18:24.474, Speaker A: The only problem mean, I use both, but we can't really trust Siri. And Alexa doesn't serve Uri, they serve Google or Amazon. And so I think the idea of agents in a self sovereign context are also really important, as I just.
00:18:24.592 - 00:19:08.520, Speaker B: There is a certain amount of misconception which I think I'd like to kind of focus on and get rid of. So if you look at what Siri or Alexa do, they are sitting just on the edge, and they are just converting voice into a kind of text. Based command, which then goes out and does what it needs to do. They don't effectively do the searching for you. They have to rely on something else. They have to rely on these centralized. I mean, okay, Google, for example, would go use the voice recognition and then actually will still search on the Google's technology.
00:19:08.520 - 00:20:00.120, Speaker B: What that is, is a very small part of this whole architecture, and for us, that's not even relevant. I mean, you could use Siri, you can use Alexa, and you could still connect to the agent based system. The magic starts after the voice recognition is completed, because that's when the task starts. So if you ask Alexa to book you something, Alexa can't just go and start searching other agents and starts to book something. It has to go through a particular application which is invoked and it goes and then does the task. What we're saying is the agent based system, which fetches developing, cuts out that completely. What happens is the Alexa, or whatever the voice recognition system is connects directly to the agent.
00:20:00.120 - 00:20:40.340, Speaker B: Agent directly connects to another agent. Rather than going through this big myriad of technology, which is the centralization search engine or some other database of products, it connects direct to the end product. And that's really the difference. It's not about who does the best voice recognition. It's more about how can we create this invisible change which is replacing this big one monolithic system into a multi agent system. So there is that difference.
00:20:42.410 - 00:21:15.870, Speaker A: Absolutely. So people think about AI in the context of the interface, rather than actually the agency that's carried out, the agency around the logic of the task at hand, as you said. So let's talk about the evolution. What is the pathway to an agent based web? So it's not that everything will happen on chain. So maybe, to be clear, to make the connection. The idea being, if you look at blockchains at the moment, they're pretty dumb. Smart contracts are pretty dumb.
00:21:15.870 - 00:22:08.340, Speaker A: There isn't a huge amount of complex logic that could be carried out on chain, and there still isn't really a way for blockchains to interface with complex off chain logic to then carry out, I guess, the economic transaction as an output. So I know at the moment, this is kind of like a hybrid logic, right, where with machine learning, you're kind of training agents through machine learning models, and they could be basic agents or they could be specialist agents, and maybe we'll talk about a distinction there. What is a basic agent, for example? But the idea is that they would then carry out activity on and off chain to completely execute a particular action, right?
00:22:11.190 - 00:22:47.162, Speaker B: Correct. You can look at it that way. Any user can give the agency to the agent and the agent can carry out the task. But you can also look a little bit ahead and see what's happening is we're getting more and more iot devices, we're getting more and more automated services. Let me compartmentalize it in two stages. So let's look at the first stage. So what do we need? So currently what we have is in web two, we have this centralized systems.
00:22:47.162 - 00:23:40.250, Speaker B: They have centralized machine learning and AI, because they make it more and more predictably efficient by using these machine learning models. Now, you take that away and then you start putting intelligence at the edges, like with the agents. Then you still need a machine learning model or models in the middle somewhere so that these agents can actually tap into and use. Because not every agent is able to carry this big machine learning load. So they still need these machine learning models, these AI models to use and utilize. So there are two components of this system. One, the agents, which sit on the edges, which should be very easily deployable, easily accessible, and you should be able to have drag and drop facilities for developers, like web developers could develop websites.
00:23:40.250 - 00:24:25.354, Speaker B: So you could actually develop an agent very quickly, and you could take that agent, and then that agent could have multiple skill sets. So those skills could be using these machine learning models. So we have to build two things. We have to build this agent or infrastructure framework architecture, and then you have to build this machine learning models which they can tap into to learn and get the intelligence. And these are what we're saying is a collective learning model. So all these agents and all the people can train the model and this model, then agents use that model to carry out different tasks. So those are the two components which exist in the current system in a different way.
00:24:25.354 - 00:25:03.350, Speaker B: But if you're now going to go agent based system, then that's what you need to build. So we're building both of those, and they're kind of coming about. And you asked about the main net two launch, and this is what Mainet two launch is about. We have the deployments of these collective learning models, and we have these agents which are going to be commercially deployable, and you can actually deploy them on fetchain. That doesn't mean they can't interact with other chains. So there is interoperability. We have to always have that, but they will be most efficient on the fetching services of search and discovery.
00:25:03.690 - 00:25:35.090, Speaker A: So maybe we'll come back to Mainnet 2.0 a little bit and keen to unpack a little bit what you mean when you say commercial deployments. But just before we do like to follow this kind of pathway, whether it's fetch or somebody else. Right. For an agent based web. So we're basically creating a marketplace with those two elements, as you say, the agents and then the machine learning models. Presumably you can rent out both of those.
00:25:35.090 - 00:26:18.500, Speaker A: You could sell a model. So if you manage to create a model that's very good at training a particular agent with a certain skill, presumably that model is IP on a blockchain and there's a transaction that happens. And then equally with an agent, an agent could serve me, or I could create a specialist agent and rent that out in the market. Right, on a per use basis. So if my agent needs to engage some other agents to kind of swarm around a particular activity, it will find agents with those specialist skill sets. Right. And it would effectively perform a transaction to rent out their, their support.
00:26:20.950 - 00:27:25.906, Speaker B: Yes. And that marketplace for both will be available very soon. And also not just that one other component which I think currently we get from different search engines or doing number crunching, using building databases, pricing in any of this, any commercial deployment will need kind of pricing for the market. So price discovery is quite an important aspect of it. So the third component which is also needed with these is if you kind of completely removing this middle aggregator, then you need also somehow get intelligent market intelligence. It could be price feed, it could be other information. Is it raining? Is it not raining? What's the price of the hotel? What's the price of the oil? All of that for these agents to make a decision.
00:27:25.906 - 00:28:05.330, Speaker B: So that's the third component which we were saying. So now if you take those three components, they apply in today's market in a similar way. So if the person is transacting, they will feel a very little change. But now extrapolate that five to ten years down the line where more and more iot devices, there is decentralized manufacturing, there's automated decentralized manufacturing, there's these complex supply chains which are coming about. They all need to connect, they all need to interact and find each other. That's where this is going to head to ultimately.
00:28:05.910 - 00:29:10.230, Speaker A: And I assume in the beginning when, let's say this kind of global marketplace for agents is thinly populated, the value that could be extracted from it is relatively low or let's say relatively limited. But with every new agent that populates the system, it kind of squares, right? So you end up with this kind of compounding effect where every new agent that interacts in the system can interact with every other agent, you kind of get these network effects. So how do you go about beginning to populate these marketplaces? Do you need some basic agents in there? Do you start kind of trying to populate it with more specialist ones? Is it generalizable? Or do you go after a particular market segment to solve for agent based problems within a particular niche? What's the kind of way that you populate this universe?
00:29:12.170 - 00:30:35.662, Speaker B: I think the best way is it's a new technology, it's a new way of doing things. So the best thing is to choose a vertical where you can start and then enable other people who are experts in other verticals to actually start building solutions. And the people who can see this new way of transaction, new way of doing ecommerce transactions, they can start building those solutions. So our objective really is to showcase a couple of verticals, maybe a few more, but build all the framework, the architecture itself, that includes deployment of agents, building of agents, all the SDKs and sample code, and then enabling anybody who is looking to build a solution, who thinks this could apply to their vertical, allowing them and helping them to build a solution. I think that's really how we'll get some traction, because people who are in these verticals are aware of these problems. And I can give you an example of, for example, travel is aware that there is a problem of inefficiencies. They're still in probably 20th century in some of the cases, and they need to evolve.
00:30:35.662 - 00:30:53.560, Speaker B: But rather than going to an older technology, they could take a straight jump to the new technology. So building solutions which enable those industries to deploy, this is what our objective is. And I think that's probably the way this whole thing will get into the network effect.
00:30:54.890 - 00:32:16.174, Speaker A: Jana, you mentioned travel. I guess anywhere where there's lots of complexity and lots of kind of manual adjusting for complexity, like highly dynamic markets, there's a greater requirement for agent based systems, because if you look at the way that markets function, whether that's traditional capital markets or deFi, the idea is that you've kind of got this constant matching of supply and demand. I guess one way to bring it home in the minds of all the dgens out there is it's kind of like amm, an automated market maker, right, but just with greater levels of is matching a multitude of different things rather than necessarily just cryptocurrency and what have you. So let's close off on fetch main net 2.0. I mean, firstly, congratulations on riding out the crypto winter. We've had you in our portfolio several years now since the beginning, right? Almost friends and family round, you're back at all time highs, which is great to see alongside people like Ocean protocol. I saw a stat just today by Forbes which was saying 80% of ICOs, maybe more, 90% are dead, and all that money was misallocated.
00:32:16.174 - 00:33:04.754, Speaker A: But I think you're a really good example of something good that came out of 2017. And equally, I think perhaps you're a little bit ahead of your time in this agent based web. And I still argue now, only a few people really understand that one of the most impactful things that will come out of web3 will be an agent based web where agents work for their owner and for their owner only in a self sovereign way, as opposed to what we're seeing in web two. But you've just released, or you're about to release main net 2.0. Be good to hear about what's now possible. You mentioned commercial deployments. Could you tell us specifically what commercial deployments means? And then you've also onboarded some new partners, enterprise partners, presumably as a consequence of that.
00:33:04.754 - 00:33:05.380, Speaker A: Right?
00:33:05.750 - 00:33:32.810, Speaker B: Yeah. So to deploy these solutions, you have to convince the enterprise and you have to convince the consumer. There are some key components which we need to do. So for enterprise, it's quite important sometimes to do onboarding with KYC AML. So you need to have the identity solution tied down. We did a partnership with Yoti. We built, and we showcased an agent with identity.
00:33:32.810 - 00:33:48.720, Speaker B: The code is out there, it's operational, it's running. That main net deployment will enable that kind of self sovereign identity deployments. We have some commercial, just to be clear on that.
00:33:49.270 - 00:34:09.526, Speaker A: Sorry to interrupt. So what that means is you can identify, each agent has a unique identity, but you can also know the identity of the owner, and that could either be pseudonymously or reveal much more detail around the owner of this. In a KYC AML context, yes, there.
00:34:09.548 - 00:34:57.666, Speaker B: Is full flexibility, and it's not something we have to dictate. It's something whichever the application builder or the application user will decide. But we have now the integrated facility to do that. We also then have the ability to interact with other chains because an agent based system in its own right has to interact with legacy systems. I wouldn't say we have completed the whole SDKs and the toolkits, but we are starting to now integrate with legacy systems, which is quite important. So legacy systems agents. And then another thing which is quite interesting and important is the ability to build these collective learning models where agents could dig into to actually do some of these tasks.
00:34:57.666 - 00:35:37.220, Speaker B: So some of these enterprise partners we have, they're very interested in the whole stack rather than just one part of the stack. So it's not just about, just about the blockchain itself or the consensus, it's about what you can actually achieve with the agent based framework. And it's always good to know that at the bottom layer, layer zero, we have something which is going to fulfill the requirements that they're trying to build. So that's when I say commercializable, I mean that we can now start building with confidence some of these commercial deployments which we have been talking about for the last six to eight months.
00:35:38.390 - 00:36:17.922, Speaker A: Yes. I guess that ability to have, if you think about the lifecycle or the value chain supply chain in the context of an agent, for it to truly be able to complete a task between two counterparties in an enterprise context, the transaction would need to complete in their existing financial system, their existing accounting tooling. Right. So if it didn't do that, then somebody would manually have to reconcile and you're only actually automating part of the action. Right?
00:36:18.056 - 00:37:25.286, Speaker B: Yeah, and that's not acceptable. What we have now is a fully end to end deployable solution. It might be a very simple solution at this point, but that opens up the route to starting to deploy more and more complex solutions. Obviously we are continuing to develop the tools, but ultimately what would happen is that we will partner with multiple verticals, for example, mobility for travel, for machine learning itself, and data provision, which is, again, we talked about pricing. So if you want to build a very simple Uber like model, we have showcased DDN network, which is the decentralized delivery know, a consumer needs to onboard with Kycml, a cab needs to onboard with KycML. They need to find each other, they need to complete the transaction, settle the payment. We can do that end to end now on this main net.
00:37:25.286 - 00:37:33.938, Speaker B: So I think that's what's going to unlock the potential of the multi agent systems now. Yeah.
00:37:33.964 - 00:38:35.126, Speaker A: And of course, people for as long as I've been in crypto and web3 have been talking about this idea of a decentralized Uber or a decentralized airbnb, especially in the context of a decentralized Uber, as you say, you still need this kind of routing capability, this kind of matching capability, this pricing surcharge capability. A lot of that that is done on the servers of Uber at the moment could in theory be done by agents interacting with one another in a kind of whole system. And I guess beyond that, transportation is generally multimodal. Right. So for a journey, I might use an Uber and a train or a plane. And so actually, a decentralized Uber would need to be plugged into a multimodal agent system rather than just kind of closed system. Right.
00:38:35.126 - 00:38:54.260, Speaker A: So again, it all kind of compounds as each one of these comes online. And you mentioned the interoperability piece. So, for example, this would allow for agent based systems to become interoperable alongside or on top of things like Ethereum and cosmos, right?
00:38:54.950 - 00:40:03.062, Speaker B: Yes, a couple of things. So it needs to be interoperable on different chains, but it also needs to be interoperable with the legacy systems, and it needs to be hybrid because some of the tasks cannot be done on chain that efficiently. Although, having said that, our virtual machine and our network deployment will enable you to do a lot more complex mathematical tasks as compared to, let's say, ethereum or many other EVM based VMs, which is okay and fulfills the need for the crypto market and the requirements they have there. But to do anything complex like what we're trying to do, we need to have a much more flexible system. So if we need to go into hybrid mode, we need to deploy half the solution on chain, half off chain. We need to interact with the standard legacy payment systems, converting crypto, interacting with multiple chains. All of that is possible via the multi agent system.
00:40:03.062 - 00:40:32.820, Speaker B: And that's really the strength of a multi agent system, that you can build these agents, which interact with multiple chains to do these tasks, rather than trying to do it in a very complex on chain, off chain method. A lot of it can be done just on fetchain, so it's all on chain, so people can see it, but it's still multi chain capability. So all these various solutions will become possible.
00:40:33.590 - 00:40:56.140, Speaker A: So let's look on Ethereum. Right? So obviously, ethereum, at least for now, is the home of Defi. That's where the large majority of Defi happens and probably will be true for at least this year. So can you give us some examples of agent based systems in the context of Defi on.
00:40:57.470 - 00:41:43.110, Speaker B: So I think this one is quite an interesting one. There's a lot of. Well, I mean, in Defi at the moment, the liquidity pools is the whole game at the moment. And one of the big problems where the impermanent loss issues or rug pulls are coming is, unless you are watching continuously, are you attentive all the time? You can't pull out your liquidity out of the rewards and liquidity. Now, for us, this is a very simple solution because it's an agent based solution. You can easily deploy an agent which says, okay, I'm participating in this pool. This is my wallet address.
00:41:43.110 - 00:42:11.570, Speaker B: I want to run this agent. Here's my Fet. Because it needs to have FeT sitting in the wallet to consume, to perform the task. If the price goes below X, liquidate my pool and convert that into my wallet. Right. So it's not a complex, it's a two minute job, which you could just do via multi agent system. You can launch the agent and it could be just running so you can sleep easy in Defi.
00:42:11.570 - 00:43:03.794, Speaker B: There are other solutions, of course, which could be possible. They are a lot more complex and a lot more mathematical. But what we are proposing is just as a showcase to show people what this can do. The multi agent can actually create a hybrid solution within minutes, which anybody who's providing liquidity, because if you're a programmer and you know how to write scripts and all of that, that's great. You can do all the complex tasks. But for a person who's just providing liquidity and want the safety that you could have a stop loss mechanism, deploying an agent in Defi solves that problem very easily. So we'll be showcasing that hopefully next week, and people will be able to provide liquidity and run a stop loss agent.
00:43:03.794 - 00:43:09.986, Speaker B: So that's probably a very good example of what kind of things it can do. Yeah.
00:43:10.008 - 00:43:55.406, Speaker A: And I can imagine that any dgens on here that are looking to gain advantage in the DeFi market, the idea that they can begin to leverage increasing levels of complexity in terms of bots trading algorithms, arbitrage tooling. And I was actually just thinking in the context of NFTs at the moment, incredibly inefficient market. The price differentials between various assets. For example, I just heard earlier today of what might be one of the next artists to go out on Christie's. I'm frantically trying to find some of his underpriced work, and it's a very manual process. Right. I'm having to go to Opensea and then going on other platforms like rarible, seeing something nifty.
00:43:55.406 - 00:44:18.938, Speaker A: Gateway, you could just have an agent that goes and looks for price differentials between artists, either that you manually set, or potentially just generally crawling and looking for artists whose sale price is growing and then automatically looking for price differential. Right?
00:44:19.104 - 00:44:50.418, Speaker B: Yeah. Well, what we'll do for you is probably set one up and then hand it over to. You can very quickly deploy such an agent and give the parameters which needs to apply to do your search for you. And you can actually even give it authority to buy it. So you might be asleep and China might be awake. Somebody's buying it, right? So it's like a bidding system.
00:44:50.584 - 00:44:54.674, Speaker A: It could find it. It could buy it and then it could immediately list it at the appropriate.
00:44:54.722 - 00:44:57.640, Speaker B: Price and sell it.
00:44:58.570 - 00:45:03.880, Speaker A: Okay, can you make me one of those? Make me one of those and we'll showcase it.
00:45:06.090 - 00:45:09.480, Speaker B: I'll be rich. You are the earliest supporter so you get it free.
00:45:10.030 - 00:45:15.818, Speaker A: Awesome. All right. And because I hold a lot of fat, right, so I can operate the.
00:45:15.824 - 00:45:21.470, Speaker B: Thing as well, you will need to use it to feed the agent, otherwise the agent won't.
00:45:21.890 - 00:45:46.174, Speaker A: Right. Right. Awesome. Well, look, Hamayan, thanks so much for coming on. Again, congratulations for not only surviving the winter, but thriving, coming out, getting main net two out. I think the world is going to very quickly catch on to the possibilities of the agent based web generally. And I think there are just so many use cases in the context of Defi that people could get deploying right now with agents on top of Ethereum.
00:45:46.174 - 00:45:55.770, Speaker A: Right. Leveraging fetch technology. So where can people find the tooling for agents and building these things out.
00:45:55.920 - 00:46:18.706, Speaker B: So you can find them? From our website? You can go to our GitHub. There is a discord channel. Ask the question. We're here to help, so we will point you to the right direction. We have a GitHub where you can actually access all of this. We're going to release this. Defi applications will be releasing probably next week, so you should be able to play with those as well.
00:46:18.706 - 00:46:24.574, Speaker B: So all of that is available. Tweet us. Send us fetch AI.
00:46:24.622 - 00:46:27.506, Speaker A: Right. Fetch AI is the website and the.
00:46:27.528 - 00:46:32.390, Speaker B: Twitter handle is fetch AI.
00:46:32.810 - 00:46:33.558, Speaker A: Cool.
00:46:33.724 - 00:46:34.198, Speaker B: Awesome.
00:46:34.284 - 00:46:45.134, Speaker A: All right, well, hopefully you get some more crazy Defi agents populating the system. Looking forward to see what happens. Thanks so much, Shaman.
00:46:45.282 - 00:46:47.722, Speaker B: Thank you. Take care.
00:46:47.856 - 00:47:37.530, Speaker A: So before we go, just to close out, we're outlive ventures. I'm the founder CEO of Outlive Ventures. We are an accelerator for web3 focused on the open metaverse, which includes things like NFTs and DFI. Things like fetch AI in our portfolio are about how we can allow for greater levels of automation in a trustless, self sovereign way. In the context of agent based systems, our accelerator is called Basecamp outliiveventures IO Basecamp. If you are a web3 startup looking to help find product market fit, close your large seed round, launch a token, please apply there. We've actually just closed applications for our next cohort, but we basically have continuous applications open so next cohort starts in Q two.
00:47:37.530 - 00:48:28.874, Speaker A: Applications will start for Q three. We also have something called Ascent, which is outliveventures IO ascent. This is where later stage projects have already closed several million in seed funding, subject to passing our readiness scoring can look to do a rapid token launch in anything from six to twelve weeks, and we support you with a full 60 of issuance. We kind of kick the tires on the token design think through pathway to governance, syndication, and what happens in the secondary market. And fetch is a good example of how we can help projects be evergreen basically survive irrespective of the market cycles, because they come and they go, but the best projects survive. So enough about us, thanks so much for joining us this week and hope to see you next week. Thanks.
00:48:28.874 - 00:48:29.030, Speaker A: Bye.
