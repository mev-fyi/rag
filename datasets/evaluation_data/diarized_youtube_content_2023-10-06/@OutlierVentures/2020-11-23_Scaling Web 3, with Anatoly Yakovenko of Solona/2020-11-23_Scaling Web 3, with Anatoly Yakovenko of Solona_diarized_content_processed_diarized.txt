00:00:14.010 - 00:01:00.318, Speaker A: If you're an early stage web3 founder, apply to our award winning accelerator program Basecamp. At Outliventures IO Basecamp, we write your 1st $50,000 check and give you access to 200 mentors, including many of the leading web3 founders, and a network of 1000 of the world's leading investors and exchanges. We've helped over 30 startups from 15 countries from all around the world raise $130,000,000 in growth funding, and can help you fast track product, market fit and, where relevant, the launch of your token economy today. I'm really happy to welcome on the show co founder Salana Anatole Yakovienko. I was really worried about getting that wrong. I think I just about fluked it. Welcome to the show.
00:01:00.484 - 00:01:02.606, Speaker B: Great to be here. Thank you for having me.
00:01:02.708 - 00:01:32.294, Speaker A: So I would describe Solana as web scale blockchain for fast, secure, scalable, decentralized apps and marketplaces. The pitch I've heard used a couple of times is layer one security for L2 speeds, ultimately highly performant without sacrificing security. And the claim, and I know you've been very humble about this claim, like you kind of openly said. Well, it depends. The claim is the fastest permissioned without sharding.
00:01:32.422 - 00:01:34.218, Speaker B: Oh, sorry, permissionless. Okay.
00:01:34.304 - 00:02:20.614, Speaker A: At 50,000 TPS transactions per second. So the reason why I wanted you on the show, obviously, scaling web3 is a big topic. It hasn't gone away yet. In fact, increasingly so, especially as people want to make DFI more accessible and as we're kind of looking at things like nfts, nonfungible tokens to allow us to potentially cross over into mainstream, but have a totally different requirement from volume and kind of transaction perspective. So, Solana, you've taken a particular design approach to solving for this problem at layer one, and we're going to talk about that a little bit later. The project has great backers, good friends of outliers like Multicoin block Tower, and is making really good traction. I don't know if these numbers are still relevant.
00:02:20.614 - 00:02:32.918, Speaker A: I know web3 moves quickly, but 2 billion transactions since March 2020, 4 billion now. Oh, wow. There you go. Okay. 478 global validators.
00:02:33.014 - 00:02:37.994, Speaker B: Yeah, between our testnet and Mainet, we're at about 478 validators.
00:02:38.122 - 00:02:39.658, Speaker A: Okay, wow, congratulations.
00:02:39.754 - 00:02:41.390, Speaker B: 480 or something like that.
00:02:41.540 - 00:03:10.950, Speaker A: Okay, so that's all really interesting, but equally, you personally have close to, but not quite, you're not that old. Two decades of optimizing networks. I think it's like 18 years or something like that, most notably over a decade as a senior engineer at Qualcomm, working on mobile operating systems. For those that don't know, Qualcomm is a major multi billion dollar hardware and software networking firm.
00:03:12.110 - 00:03:18.134, Speaker B: If you have a cell phone, there's some component that Qualcomm built in there, typically the most important one, the modem.
00:03:18.262 - 00:04:13.598, Speaker A: Right, exactly. But you've also worked at several other firms, including likes of Dropbox, working on distributed systems prior to Salana. And this is something I really want to go into on the podcast is for me, what's really exciting about web3 is that it continues to attract people like yourself who could be quite happy in a large corporation solving equally very complex problems. But somehow web3 has pulled you into its domain. And so I kind of want to leverage your wider view as an engineer, having built systems used by millions of people that have also had to solve for performance, scalability, security. So it's not just a blockchain, trilemma. And I want to go into different approaches, like the history of scaling, really in web3 over the last decade, seven years or so.
00:04:13.598 - 00:04:57.366, Speaker A: And I also know that you've been speaking a lot about some of the more demanding use cases. So at the moment, the use cases, while still most blockchains, struggle to kind of serve them, we're still nowhere near some of the requirements for the systems that you've built in the past. And especially as we look forward to like 5G or ubiquitous AR, the requirement is just going to be an order of magnitude more complex. And so I kind of want to look forward at scaling in that context too. So by way of contextualizing you as a guest, I'm going to do my best to describe your kind of origin story. So you said before we came online, originally born in the mother country, Russia.
00:04:57.478 - 00:04:58.118, Speaker B: Soviet.
00:04:58.214 - 00:05:07.134, Speaker A: Oh, Ukraine, sorry. Okay, there you go. During the soviet period, obviously, but moved to the US at what age?
00:05:07.332 - 00:05:17.330, Speaker B: I was eleven. So, yeah, 1992, April, sometime around there. I don't remember that. I think it was actually March 30, the day before April fool.
00:05:18.550 - 00:05:21.330, Speaker A: Was that an exciting experience or a terrifying one?
00:05:21.480 - 00:05:46.474, Speaker B: It was exciting for me, yeah. But this was like in a period where the USSR was going through some crazy transformation, right? Because when we left, it was no longer the USSR, so it was really collapsing in front of everyone's eyes. It was kind of a transformative, I think. I think it probably the reason why I'm in blockchain. There's a lot to do with living through that.
00:05:46.672 - 00:06:14.338, Speaker A: And you're not the first founder that said that actually, we've had a few who grew up in the soviet era, watched it collapse, and that really informed their view on economics and society and systems and stuff. So you studied at University of Illinois, graduate in 2003, BS in computer science. Was it your first venture? I don't even know how to pronounce this. Alesser yes.
00:06:14.424 - 00:06:47.054, Speaker B: Alessir. This was like a bunch of college kids with some help that tried to build a voiceover IP system. This is 99 to 2003 in Illinois, like outside of Silicon Valley, but in that kind of tail end of the gold rush for web two companies, and we're building something that was pretty advanced. If you look at Google voice or Grand Central dispatch, that was basically kind of what we had built in college. Right.
00:06:47.172 - 00:06:54.426, Speaker A: And that was kind of primarily targeting SMEs, as I understand it. And then you went straight from there into Qualcomm.
00:06:54.538 - 00:07:20.166, Speaker B: Yeah. So after the.com crash, that kind of scared everyone that was in computer science. And I think if I was a little smarter, I would have gone to Silicon Valley and just tried to build a company anyways. But Qualcomm was using the exact same technology and kind of hired me in the spot and flew me out to San Diego that every engineer there was wearing board shorts coming straight from the beach. It's hard to say no.
00:07:20.348 - 00:07:39.198, Speaker A: Yeah, right. Well, and it looks like it was definitely informative to a lot of the stuff you're doing now at Salana. So I'm glad you did make that choice. So maybe to kind of summarize this, as I said, you were there for over a decade, and you worked your way up from an engineer to a senior staff engineer manager. I don't know the hierarchy, but that sounds pretty important.
00:07:39.364 - 00:08:29.982, Speaker B: L six, l seven in, like, Silicon Valley speak. But yeah, I was fairly senior, basically driving major design decisions and technical specifications and kind of pushing a lot of stuff through, really focusing on performance optimization. I was in the advanced technologies group at Qualcomm working on some really cool, ahead of the curve things like, we got the first 4K video post processing running. This was five years ago. We had AR implemented. We took an AR that was running in a desktop that was overheating and got it running in a phone form factor in like a span of six months. So things like that are a ton of fun.
00:08:30.036 - 00:09:10.778, Speaker A: And so that was in the advanced technologies group. So as I understand it, you were lead architect team of ten working on high performance software, effectively a software stack that would operate on Qualcomm chipsets for next generation applications. So you mentioned AR, but there's also augmented reality. There's virtual reality, 3d camera processing, Google X's project Tango. And as part of that, you basically also had to kind of build this technology that would work in a while pretty quickly. So thousands, tens of thousands, hundreds of thousands of third party developers, including a lot of major OEMs. So Samsung, lG, Google, what have you.
00:09:10.778 - 00:09:25.710, Speaker A: And so you left there, 2016, and then you did a brief stint in relatively short term contracts or whatever as a software engineer, but really focused on distributed systems. That was Dropbox and metasphere, mesosphere.
00:09:25.790 - 00:09:26.770, Speaker B: Mesosphere.
00:09:27.190 - 00:10:04.602, Speaker A: So focus on distributed systems and compression. And you said, that's like, you're optimizing for 1%, if you're lucky, in these systems. So I guess maybe we kind of pause there, because as we kind of go into your career in web3, why would a Qualcomm engineer be bothered or interested in blockchain? Right? As I said, you're solving for problems that have very high requirements. Why be bothered with this nascent technology that has all these limitations, still has all these limitations?
00:10:04.746 - 00:10:48.540, Speaker B: I think actually the limitations are a part of the challenge. The reason I was even thinking about blockchain was because it's transformative, because it gives people access to cryptography in a very kind of simple way. You can think of me working at Qualcomm for ten years. Qualcomm would sign code like, we would generate a signature once every six months. And bitcoin users and finance and all these major financial institutions now sign a million signatures per day. It just kind of, like, went from cryptography being this weird thing it did once, twice a year, to now. It's part of every daily life.
00:10:48.540 - 00:11:23.702, Speaker B: And it's such a root power. It gives end humans so much power because it can displace all these centralized authorities, like Google, like Twitter, like Facebook. Facebook gives us a guarantee that these are my tweets, right? But cryptography should be doing that. I should actually be signing this stuff, and then this data can propagate anywhere in the world and nobody has to host it. There is no single authority in any. What is the source of my opinions, right? My opinions, not Twitter's opinions. It really transforms the world.
00:11:23.702 - 00:11:58.978, Speaker B: And to me, that was the reason why it's important for engineers to work in blockchain is because of the cryptography aspect. And I think the details of consensus and all this other stuff, these are implementation details. These are hard computer science problems, hard software problems. But the human transformative part is giving people the power of cryptography. And to me, that I think could really change the world in very dramatic ways for the good, really empower all the citizens, all the users of the web.
00:11:59.064 - 00:12:58.674, Speaker A: Yeah. So, I mean, I guess, is it fair to say that it was a kind of sociopolitical pull, and then actually, once you're drawn into it, you realize that there are some really interesting technical problems to solve for, and that kind of triggers the engineering you. So, as I said, I want to kind of, before we go into Solana and some of the design choices that you've made, perhaps trade offs, it would be good to just start at a very high level around scaling the problem of scaling web3 or the history of scaling web3. So maybe we could start with the blockchain trilemma. I'm sure a lot of guests have already heard of it, but I think just in case we've got some new people coming into it, we can start there. And then it'd be really interesting to have an engineer like you, with your background, who has this pedigree in distributed systems more generally, to kind of just walk us through the different attempts at scaling, both in the past and what we're seeing happen now at layer one. Layer two, yeah.
00:12:58.712 - 00:13:57.726, Speaker B: So the trillama is this kind of like set of trade offs between decentralization, security and performance. On the surface of it, it kind of talks about that. This is vital exposed that if you optimize for performance and you're kind of giving up either security where you have double spends or more double spends, or your users can kind of muck with the state, or you're sacrificing decentralization, which is hard to define term, but it kind of means the number of validators or participants in the network. And I think the nuance that he missed, or potentially wasn't forward thinking enough, is that performance is fundamentally tied to hardware, like bandwidth, computer CPUs. And that's an exponential curve. I got to experience that curve working on mobile. At Qualcomm, we started with like 16 bit, single core, 200 MHz ARM devices with two megabytes of RAM.
00:13:57.726 - 00:14:43.062, Speaker B: And in ten years, we got to eight core, 64 bit, four gigs of RAm doing 4K video post processing. Basically, the designs for silicon there were three dimensional, right? They were stacking silicon on top of each other, memory CPUs. It's like a cube of organized sand. Totally different kind of. You just don't envision this, right? Like, you don't think about 20 years ago, me saying that we're going to have one gigabit Internet to the home sounds crazy. Sounded crazy. As crazy as me saying today, 20 years from now, we're going to have one terabit Internet to the home, one terabit Internet in your hand, right? You're literally going to have one terabit Internet in your hand 20 years from now.
00:14:43.062 - 00:15:17.780, Speaker B: So that's basically kind of like the trailer is this idea that if you want to exceed the capacity of the network, like the bandwidth capacity, then you have to take these approaches like sharding or something like that. And sharding is trying to compromise security and decentralization. And this is where my kind of like ten years of Qualcomm brain says, don't worry about any of that, because by the time you're done with the software, hardware is going to be two, four times faster. So just bet that you're never going to run into the bottleneck there.
00:15:18.310 - 00:15:30.760, Speaker A: Is it true that you refer to this as. Well, it has been referred to as Moore's law, but a lot of people say it's coming to an end. So do you believe that it's going to continue to be exponential, or do you think that something else then takes its place?
00:15:31.450 - 00:16:04.478, Speaker B: There's totally nuanced. I mean, people have been predicting the death of Moore's law for 20 years now. The way it first ended was frequency scaling became harder. It became harder to increase, like double frequencies every two years. So now they kind of bump by 25%, but the density of the chips gets larger, the wafers themselves get bigger. So the number of transistors per dollar keeps doubling. And this is because there's just kind of like very many dimensions to optimize.
00:16:04.478 - 00:16:39.340, Speaker B: And that's not going to stop until you literally have cubes of organization that everybody carries around. It's probably 100 years of innovation there just to optimize that. So I think there's kind of just so many directions that this thing can go that it's really hard to predict how fast things are going to be when we start needing something like quantum computing. If I say 100 years, the reality is it might be like 25 or 200, right? We just don't know.
00:16:39.790 - 00:17:13.874, Speaker A: And I think what a lot of people don't understand about Moore's law, it's an economic law. So as you alluded to, it's the idea that with every dollar invested, you kind of get a certain level of return over a period of time. And so I guess the question is, could something replace Moore's law in the context of quantum computing? Ultimately, that would have to make. It's a business case, right? For every dollar invested, am I going to get a certain rate of return? And I think that's where a lot of people struggle to say, well, it's impossible at this stage to put a price on investment into something like quantum.
00:17:13.922 - 00:17:14.326, Speaker B: Right?
00:17:14.428 - 00:17:27.830, Speaker A: I've also heard a lot of people say, and I'm going well out of my comfort zone here, but because we've been getting these efficiency gains in the hardware, we've got a lot of bloat at the software layer. So there's still a load of room to optimize.
00:17:27.910 - 00:18:16.278, Speaker B: Within most software, software has become much, much harder to build because it's just much more complicated, but much harder to build it. Like people are building Atari games in the 80s. It just requires more tools, and then optimizations become harder and harder to analyze. But we do have better tools, better languages, better compilers. It's again, also a self scaling problem, because the beauty of software is that engineers typically don't solve the same problem twice. We do two to three times, but then we generalize the problem and then everyone can do it. That's kind of part of it, that there's a lot of human scalability around software development.
00:18:16.374 - 00:19:03.366, Speaker A: So I guess is what you're saying that the blockchain trilemma is a false trade off? Actually, you can solve for it in different ways. So presumably, and we're going to get to this, I guess, Eureka moment that you had that inspired Solana. But before we go into that, is the assumption that a lot of the attempts that are being made by other projects are almost pointless, right? They're kind of trying to solve a problem that doesn't really exist. So everything we're seeing at layer one, L2, or even in projects like Polkadot, where you still retain this concept of shared security, is that the premise?
00:19:03.478 - 00:20:22.286, Speaker B: There's some interesting implications of having shared security, or systems like Cosmos, where you have integrated protocols that can talk to each other that are outside of just a performance trillama. I don't want to discount that these are pointless, but for scaling something to handle more transactions per second and reducing the cost to the users, sharding isn't strictly necessary, and might actually make the system more expensive overall for the end user. So to give you an idea of why you have a slower design system that's not taking advantage of the same things we are, but is using sharding, you effectively have 1000 smaller pipes, and the price to send information depends on the capacity of that pipe in that channel. Right? If that channel fills up, price shoots up. If you don't have sharding, you have just one giant pipe, then you have more capacity, and therefore the overall prices are going to be much lower. So does that make sense? If you have 100 different markets that are not connected, then there's a lot of demand in San Francisco for avocado toast. The prices are going to go up, and that's not going to be reflected in Chicago.
00:20:22.286 - 00:20:46.266, Speaker B: But if we had one giant market for avocado toast, then you kind of have this global capacity that's fungible. Right? So that's kind of like the main, I think, unexpected. Or at least it's a trade off that folks often don't talk about, that prices for users might actually increase in a sharded system.
00:20:46.368 - 00:21:05.182, Speaker A: Yeah. And again, I think that comes back to the economics. Right. So it's easy to look at technical solutions out of the context of the economic principle. And again, alluding back to Moore's law, you need the economics to work to get that exponential gain. Cool. So let's go into Solana then.
00:21:05.182 - 00:21:15.054, Speaker A: So the story goes, there's a very specific mix. I want to make sure we get this. Was it two coffees and one beer? Two beers? One coffee.
00:21:15.182 - 00:22:07.060, Speaker B: It was two coffees, one beer. Okay. It was actually a cafe named Soleil in San Francisco with a friend of mine. We were working on this cheesy startup taking hardware design for deep learning and offsetting the capital cost of it with mining. And this is how we got, like, I started really getting into crypto is we had this idea because both of us were former Qualcomm engineers working at our separate companies now. But we wanted to kind of do more hardware stuff because that's kind of our blood, sweat and tears. And I started really getting into proof of work and why it was slow and the fundamentals of consensus, and had two coffees on beer, which kept me up the whole night, but kind of put me in this kind of alpha state, where you get idea generating state.
00:22:07.060 - 00:22:53.346, Speaker B: And I had this eureka moment that you can take shout to 56, which is the proof of work algorithm used by bitcoin, or the hash function used by bitcoin, and run it recursively in a single thread, such that when you sample this process, it generates a data structure that represents time passing for somebody somewhere. And why this was like kind of such a eureka moment for me, fundamentally outside of blockchain, is that there is no mathematical representation of time. Right. There's no math function that actually defines time. You look at a lot of physics problems that are described in math. You can run them in any direction. There's no guarantee that they can always run forward in time.
00:22:53.346 - 00:23:49.746, Speaker B: And this has been probably an unsolvable problem, right, for the world. And this thing is a mathematical implementation of the errant time running on a digital system. And it's not like I've solved an unsolvable problem. It's just, this was so cool because it actually allows you to have some way to track map. I wasn't the first one to do this. There's actually rsa accumulators that have been done in the bunch of really smart folks out of Stanford and other universities working on these things called verifiable delay functions, which are far more sophisticated than what Salana uses. But our approach, using shots of 56, is just very hardware efficient and very easy to use to actually code with without breaking cryptographic security parameters.
00:23:49.746 - 00:24:28.110, Speaker B: So this was what kind of kept me up for like a week and finally convinced my wife, who's an engineer, to listen to me like, hey. She was like, okay, this is cool. And that was really the start of it. That's what kind of pushed me over the edge to go start Solana. And the reason why time is so important in this whole thing is that if you look at how radio protocols evolved, this was one of the first optimizations people tried. Radio towers have the same problem as bitcoin or proof of work. Block producers.
00:24:28.110 - 00:24:56.170, Speaker B: Two block producers produce a block at the same time. The chain gets into this unknown state. Nobody knows what the head state of the chain is. Two radio towers transmit at the same time over the same frequency. You get noise, right? Information can pass. So in radio, they gave everybody a clock that they trusted, and they alternate by time. This is the hard part in blockchain, is that everything has to be trustless and open and permissionless to achieve the kind of goals that we want to achieve.
00:24:56.170 - 00:25:23.860, Speaker B: So once I knew that I had that piece hauled, I kind of saw the rest of the system kind of in front of me, like, okay, this is like everything that we've done at Qualcomm to optimize mobile phones, to get 4K video faster. All those memory optimizations, all those horizontal scaling techniques that modern operating systems and databases have used now that's applicable to blockchain. And that was really how we went for it.
00:25:24.390 - 00:25:59.226, Speaker A: Well, I'm going to go and immediately drink two coffees and a beer. Hopefully I don't get it wrong. So this led you to the point of being able to scale without sharding, avoiding splitting security, avoiding the problem of having to move state from one chain to the other. Could you go into a little bit about the proof of history? Proof of history is how you describe the kind of main innovation. I believe there are, like several others. But could you unpack that a little bit in a way that's accessible to a non hardcore engineer?
00:25:59.338 - 00:26:48.938, Speaker B: Yeah. So proof of history is that implementation of time. And I kind of just talked about why it's important in distributed systems and to kind of give you another take on it. Imagine you're on an island somewhere and you saw a thumb drive in a bottle, right? You can plug it in and you have this proof of history based ledger. You can examine that thing locally and determine that from the point of reference of this ledger. I see that there's a bunch of validators that have been active in the last five minutes or ten minutes that based on this thing and this point of view, I can then make assumptions about time from the rest of the network without actually talking to anyone else. So I kind of eliminate a lot of the messaging overhead of verifying the state or the network, and that's this fundamental optimization.
00:26:48.938 - 00:27:42.522, Speaker B: We're removing a ton of the work that every other design up until ours has had to do to keep track of the rest of the system, the rest of the state, and make sure that everything is synchronized and kind of in the same state machine. So that's been the main thing that allowed us to really move forward. And the hard part with other approaches is that they're trying to kind of take on two or three computer science problems. We got really lucky with the one computer science problem that we just had the right idea at the right time. And everything else after that has been hard engineering problems, but they've been solved before. So something like turbine, if you go read through that, should be very familiar to users that are aware of how bittorrent works. So it's a way to propagate data across the Internet globally in a very efficient way that actually increases the bandwidth of the network when you add more nodes.
00:27:42.522 - 00:28:26.334, Speaker B: So that's hard to implement. Hard computer science problem for streaming financial data, but hard engineering problem, but not like a brand new computer science problem. So that was like kind of one technology that we've built, the other one, cloudbreak. Again, databases have figured out how to scale across multiple hard drives and multiple machines. It's a hard engineering problem, and this allowed us to effectively kind of build our chain. So if our account size grows beyond four terabytes, we can just throw more terabytes at it. If we have 1000 transactions and need to read and write to different states, that's easily scalable as well.
00:28:26.334 - 00:29:11.934, Speaker B: So those techniques are typically called horizontal scaling. The reason it's called horizontal is that if you imagine a set of machines in a grid, you can add more machines at the same level and the capacity goes up. And if you think of it like from, if you're a radio engineer, worked with radio, this is very much like the Shannon Hartley theorem, where to increase capacity, you have to increase bandwidth. So you double the bandwidth, double the number of machines, double the number of lanes that data can propagate. And that's been kind of this foundational thing that we've been applying to blockchain. But the reason we can do all this stuff is because our nodes don't have to talk to each other to synchronize on time or events. They can kind of trust the data itself.
00:29:12.052 - 00:29:48.570, Speaker A: So as you'll well know, the best technology doesn't always win. And as we were alluding to earlier, most blockchains are more than kind of just a technology stack. They're an economic, social system. So let's say you've solved the problem. Let's say you do have the best technology. What's your go to market? Right. Is your intent to augment like fix or replace? And it'd be interesting to think through as a founder, as an entrepreneur, how you approach.
00:29:49.790 - 00:30:51.040, Speaker B: Like we've been pretty focused on from the start. If you look at our first pitch decks, the tagline was Solana blockchain at Nasdaq speed. And the idea there, if you get rid of proof of work and you have a smart contract platform, I think it no longer becomes a store value like critical use case, but it becomes a price discovery engine that if you look at Ethereum and all of these contracts, even something like cryptokitties, they're financial contracts that may be entertaining, but they're still financial contracts. And you have this massively complex exchange that everybody's evaluating and trying to discover the price of any of these things. And those things are moving through all these complicated markets like amms and other things. So from our perspective, what we were building was this really revolutionary kind of price discovery engine. It's a global price point for anything.
00:30:52.610 - 00:30:57.358, Speaker A: Presumably for compute, right? I mean, that's its main price discovery for.
00:30:57.524 - 00:32:03.106, Speaker B: It's price discovery for arbitrary things that people have markets for, even for something like. And it's applicable to an incredibly wide range of things. So because of our background, one of the first things we were focusing on was 5G, because it's really expensive to deploy. You need a ton of hardware, but you can make that problem a market problem if you have people that bring in self serve hardware and you have a Verizon or dish or whoever that's providing spectrum. And our users can dynamically bid and get the hardware that they want for the spectrum that their phone has access to. So I can use tokens and these Amms and auctions to connect 1000 different providers for hardware with a million different people in a small market like San Francisco, and do this at like 100 miles an hour as a phone is driving 65 miles an hour as a phone is driving across the five, right. And has to switch between these towers basically every second.
00:32:03.106 - 00:32:48.110, Speaker B: So that is a really cool high performance market that you don't typically think of, but actually does exist. And obviously trading and amms are a very simple version of that. But you end up with where blockchain can revolutionize is things like ads and adware and all this other stuff that we see in the Internet that's been kind of poisoning us, right? If you have a browser like brave, it can cryptographically sell ads in a privacy preserving way against people that want to provide you information that isn't like stealing your data, right? That's all now possible in open, decentralized platforms. So this is kind of how we were thinking about this problem from day one.
00:32:48.180 - 00:33:39.726, Speaker A: Is it fair to say that effectively this idea that a proof of stake network with this economic social moat, actually it's not much of a moat, because in a proof of stake network, this store of value concept is not relevant. And then also the use cases that you're targeting are use cases you are making possible for the first time with the blockchain. So in a way, you're kind of leaping over this incremental innovation of rolling out DeFi, for example, on Ethereum, where you're constantly breaking things and the testing the boundary or the limit with every iteration here, you're just kind of saying you can go straight over the top and enable use cases that you just couldn't even consider. On a proof of state network that's.
00:33:39.758 - 00:34:24.546, Speaker B: In existence, you can scale a lot of these use cases to real world user bases. So even like something like brave, like one to 2 million monthly active users, they can't really run an ad exchange on Ethereum. It's just impossible, right? But running that on Salana can scale it to 500 million users per day. So something like that, I think is a moat. It's a moat because once those markets exist, they become intertwined just simply because of finance and arbitrage. And this is what markets do. So my vision for Solana was that this thing could be the marketplace for everything.
00:34:24.546 - 00:35:24.874, Speaker B: Because if you take something like Nasdaq that promises one millisecond trading, those one millisecond high frequency trades are only trading against statistical noise in kind of the incoming order queue at Nasdaq. But reality meteor strikes a cornfield in Russia, and corn prices need to adjust. That news is going to propagate at about 80 milliseconds around the world because that's the speed of light through fiber. So Salana, by design, can propagate state transitions at the same speed that as soon as that meteor hits cornfield in Russia, somebody can take a trade and adjust the price of corn. Right? And this information propagates globally. And because we have this rudimentary PBFT system that guarantees full state propagation, everybody in the world has a guarantee that they're seeing the exact same market as it's reflected by the current set of news in the world. And that is, I think, kind of a moat.
00:35:24.874 - 00:35:42.460, Speaker B: If we accomplish this, I think there's no reason for any other markets to exist. That's the goal. There can be still local high frequency trading markets, but I think being a global price discovery engine for everything is a pretty good goal. Right.
00:35:42.990 - 00:36:30.098, Speaker A: Well, I certainly like the ambition, and I guess, coming back to this concept of the economic paradigm, the idea being that presumably, I think you referenced, I can't remember if it's on air or off air, but this idea of convergence with blockchain AI, it's something that's been very dear to, central to our thesis and close to my heart ever since we started investing in blockchain. But presumably, the idea is that you can have greater levels of complexity and automation in these markets on chain as a consequence of lowering the economic barrier, the cost of actually using the system. So let's go into some of those use cases in a little bit more detail. So you referenced the kind of the 5G use case. I know you've got wormhole, which is your hackathon. Right? You've also got an accelerator.
00:36:30.274 - 00:37:52.770, Speaker B: Yes. For use cases specifically, I think what everyone has heard of is serum, which was almost like, I met my counterpart of this idea that there's a global market that could be decentralized, which is Sam, and he's not an engineer, but he basically understands crypto and finance to, I think, the level that I understand software and operating system. And we had this week long, three hour long calls about how does this stuff work? How should it work? What can the space accomplish? And in his words, he was like, I don't know if DFI can be the entire world's finance, but it can definitely be 25% to 35% or 50%. And that is an absurd large enough opportunity. And they kind of went for it in really a crazy sprint starting knowing nothing about Salana. In about four weeks they built a demo of project serum and then two weeks later was live. So this was a fun time for both teams because I think we were handling a lot of support requests about how does this work? What are these APIs doing and things like that? But they were sprinting like mad, building this thing and pretty amazing to see them accomplish it.
00:37:52.840 - 00:38:20.314, Speaker A: Yeah. And it's interesting to hear that process of kind of collaboration with your initial use cases to kind of bring the network to live. And I know that you've also been exploring NFTs. I think the second NFT was sold on something called soluble.com on October the 25th of this year. Could you talk us through the NFT use case? I mean, NFT is obviously very broad. Yeah.
00:38:20.352 - 00:39:00.130, Speaker B: So these are like independent teams that have started building stuff on top of Salana. And the cool thing about it is that project Zoom is a protocol, like uniswap is a protocol and anybody can take those markets. The hard work that they built was implementing for the first time ever a full central limit order book that is the primary function of a matching engine like FTX or binance, but running entirely in a decentralized platform. No one has done that before. They did in four weeks. But now not only is that code shareable, the actual physical implementation that's running is reusable by anyone else. And this is the beauty of composability in DeFi.
00:39:00.130 - 00:39:16.654, Speaker B: So folks that wanted to sell NFTs, they took this very sophisticated and now battle tested marketplace and just plugged them in. And that to me was kind of like they didn't have to go do this work, right. They didn't need the expertise, but they can all reuse it instantly and for free, essentially for free.
00:39:16.772 - 00:39:21.082, Speaker A: So just a new form of collateral, basically leveraging your defi composability.
00:39:21.226 - 00:40:31.090, Speaker B: Yeah. This is, I think another transformative piece of blockchain is that it's almost like we went from analog phone lines where we have to have a direct copper line that can send voltage across between any two people in the world, to this digital packet switching approach to, I can build software and not only can you borrow my software through GitHub, you can actually take my program that's running on this decentralized platform and interface with it without talking to like, we don't need to have a business deal or a big pile of contracts and negotiation that you're going to use my server racket, Dropbox, it just automatically happens. That's kind of like the crazy cool thing about all of this, right? And I imagine this is going to be as transformative as open source was to development. We went from these box stores selling software, right, at boxes in MCDs, to open source software that anybody can remix, and now to open source or open accessible services that anybody can plug in and remix. And that's kind of insane.
00:40:31.250 - 00:41:32.810, Speaker A: Yeah, I think that's why open finance is in a way a better term, right? Because it carries through those principles. And I agree. For me, DeFi open finance is unstoppable because of this compatibility, because effectively you've got these specialized protocols that are just solving a single problem really well, but of course are interchangeable, but within this DNA of this hyper aggressive pursuit of efficiency and yield and somehow trying to find an equilibrium between those two things. So to close off, to kind of zoom back out and to kind of ask some of the bigger questions. So in a software sense, in the context of blockchain or web3, we talk about decentralization and decentralizing the web. But you're a networking guy. You've worked at the interface of hardware, the physical infrastructure of the Internet, hardware, software, networking.
00:41:32.810 - 00:42:23.990, Speaker A: How decentralized can the web be if the kind of hardware and the networking isn't also decentralized? And as a consequence, how censorship resistant can it be? So I remember, I think in the beginning part of the year, or midway through COVID, there was through Huawei, China and Russia were actually lobbying the UN to propose to break the west coast consensus on how the Internet is structured to allow for greater centricity, because their argument was, well, we need greater performance if we want economic games and innovation of VR and AR. So you're probably in a better position than most to answer that question. Is it fallacy we're ever going to have a decentralized web that's censorship resistant?
00:42:24.070 - 00:43:17.142, Speaker B: I have a hard stop in ten minutes. Right. But I can answer this question. So is a decentralized web possible? So to bring this back to kind of the first point that I made is cryptography is a crazy powerful tool with really crazy implications is that when you look at validators in our network, they're not identified by physical hardware or IP addresses, they're identified by a cryptographic key. And that key is like a small set of data that can be transferred over short wave radio, bouncing off the ionosphere, if you had to. That thing is what is creating decentralization, that key itself, and having as many of those keys that have some stake distributed to the largest number of folks out there. That is the core part of decentralization.
00:43:17.142 - 00:44:25.998, Speaker B: It's not the machines or where the actual execution happens. So from that perspective, I think the old world is operating in this physical level, and it can definitely make it hard for open access and for folks to kind of get access to the stuff. But there's enough kind of like global environments where things are free enough to. Where that access, once it exists, it becomes accessible to, like, no one in the United States is going to ban cryptography, right? They've tried, but I think that kind of cat is out of the bag, and I think that will allow these systems to be open and free, and you will end up in, I think, interesting paradigms where you can deploy all your UI on something like rweave or Filecoin that talks to Salana as its execution engine. And now you have effectively unstoppable systems, right? Like truly unstoppable systems that are indistinguishable from web two. You couldn't tell that the performance here is any worse. If you go to dexprojectserum.com,
00:44:25.998 - 00:44:29.150, Speaker B: the prices are updating as fast as finance.
00:44:30.310 - 00:44:50.630, Speaker A: Well, I think we have to leave it there, right. On that optimistic note, what a great way to end. Anatoly, thanks so much for coming on the show. Really grateful for everything you're doing. I think it's a really interesting experiment. You've definitely got me more excited by it, having spoken to you. So I wish you the best of luck and hopefully we get to speak again soon.
00:44:50.700 - 00:44:52.120, Speaker B: Awesome. Thank you so much.
00:44:53.930 - 00:45:02.220, Speaker A: If you enjoyed today's podcast, please make sure you subscribe, rate and share your feedback to help us reach as many people as possible with the important mission of web3.
