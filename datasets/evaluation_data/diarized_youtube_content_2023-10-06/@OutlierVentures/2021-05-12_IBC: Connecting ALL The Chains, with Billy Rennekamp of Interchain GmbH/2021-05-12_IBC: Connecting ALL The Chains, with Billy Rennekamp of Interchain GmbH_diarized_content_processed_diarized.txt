00:00:04.730 - 00:01:00.778, Speaker A: Hello and welcome everyone. I'm here today with Billy Rennekamp of Interchain Gilberha and the Interchain Foundation. I think both. My name is Aravanamus. I'm a CTO and founding partner of Outlier Ventures. And in these tech Tuesdays events, we invite guests from a project or a and ecosystem in the space, in the crypto space to go a bit deeper into tech. So today we'll talk about inter blockchain communication protocol.
00:01:00.778 - 00:01:25.560, Speaker A: This is the p that the government confused. So, yeah, I'll give a quick intro on what IBC is, where it's coming from, and we'll do a live demo, which will obviously work because live demos always work and I have great confidence in to show us something good. So let's hit it off.
00:01:29.070 - 00:01:30.060, Speaker B: There we go.
00:01:34.350 - 00:02:20.780, Speaker A: So, yeah, what is IBC all about? Well, connecting all the chains, starting with those in the cosmos ecosystem, obviously. So for those who didn't get the play, it's about connecting all the chains. Brief disclaimer, we'll maybe talk about tokens, maybe not. But of course, none of this is investment advice. And starting with a very brief background of outlier ventures. For those of you who don't know us or don't know us so well, we are backing web3 founders since 2013. We're doing that in over many crypto networks and blockchains, taking a really open mind from the perspective of there's no one chain to rule them all.
00:02:20.780 - 00:04:03.340, Speaker A: Our investment thesis has brought us to the open metaverse, seeing that as a combination of new data economy with data of all kinds flowing through these systems, centralized finance being the open economic networks that can unite metaverses and nfts as being the sovereign virtual goods that make a lot more possible than you would have in closed metaverses. The main form in which we do that is through the base camp accelerator, where we work with early stage founders in formats that you might know from Y combinator or Textar is quite similar to that, but entirely embedded in the web3 ecosystem and our network there. And one other thing we do is a bit later stage program focused on bringing teams who are close to launching their token to really make the most out of that by getting everything right. And what people might not know is we are also a validator on a few networks, which all happen to be cosmos, SDK based or genomin based. None of these networks are connected to IBC yet, but hopefully soon and a few more to come. So as such, we're quite familiar with the Cosmos and related IBC ecosystem. So what is MBC and where it come from? Well, it was in the very first in the white paper that they laid out a vision for the cosmos ecosystem, the cosmos network, quite literally worded as such, as kind of as has been realized today.
00:04:03.340 - 00:05:27.780, Speaker A: There is a protocol that can be used to exchange messages between chains securely and quickly and natively. And that is effectively how IBC now has been realized in of course not a question of overnight. It's been a five year process. So ultimately that's the vision. Connect all the chains and the road has passed through game of zones incentivized testnet with multiple chains and zones, Cosmos zones competing there to get hard in the implementation and do as close to the real world test as possible and well, a few iterations to get to a governance proposal that actually passed and could go live on the Cosmos hub being the central point where IBC transfers IBC messages can be interacted with, interchange with and ultimately launch and launch party. And I wasn't there, but when I reviewed the recording, I saw Billy was hosting this. So you know all about good.
00:05:29.670 - 00:05:30.420, Speaker B: And.
00:05:30.950 - 00:06:47.040, Speaker A: Yeah, to go a bit more like what is IBC? How can you see it? That has been described as a shipping container for blockchains or off blockchains. It doesn't say anything by itself on what's in the shipping container. It does say the dimensions, the rigidity, the type of material, if you're talking about the physical space. So it's really about the tau, the Tao transport, authentication and ordering of messages and what's then in those messages that there can be further variation between different applications and chains on what they want to interchange. Similarly, how you would have JSON RPC or rest APIs for exchanging data through centralized web services in IBC would describe how do we exchange messages in a highly secure way between blockchains, similar to how a shipping container would say how we exchange goods securely between countries and ships and how do they arrive. We can talk later about what's the parallel of the evergreen getting stuck in the Suez Canal of IBC. But maybe we'll get to that later.
00:06:47.040 - 00:07:36.990, Speaker A: So yeah, of course, great joy and celebration when IBC was live and then that on the cosmos hub on its own. That doesn't mean that anyone could actually interact between chains because each individual chain and zone also has to enable IBC and enable the right configuration so that the cosmos hub can actually be trusted as another party to interact with. And that has started to happen. The actual first IBC transaction formally was done by you, Billy, on the hub itself, great. But of course, that's a local one. And then the first token transfers between different zones. The first one was on Irisnet, of which we have this very glamorous terminal window capture.
00:07:36.990 - 00:08:15.622, Speaker A: Apparently it worked. Did it work? Yes, it worked. Second network was Akash Network, and now we have a few more already connected. And, well, for those of you who are not so familiar with the governance process of getting these changes in, it's not a flick of a switch by a person or a group of people. Well, it is ultimately a larger group of people. It's a validators of those networks that go through the on chain governance process of, okay, we make a proposal, we vote. There's a voting period.
00:08:15.622 - 00:08:46.094, Speaker A: There's another period for activation. So takes a bit of time for everybody to get comfortable with going ahead with these things and then actually executing it. And yeah, that's why it's not from day one to two, every chain goes on, but every individual chain goes by itself. The governance, which is a bit fluid and messy and decentralized, ultimately comes to conclusion.
00:08:46.142 - 00:08:47.378, Speaker B: Yes, we're going to activate this, we're.
00:08:47.394 - 00:09:14.974, Speaker A: Going to do this. And that's how I see these increasing amount of zones activating IBC and connecting. And this is on the map of zones. You can see very well which IBC transfers are happening have happened. This is a snapshot of the 24 hours view. So we see in the latest 24 hours, most transactions have gone through the Cosmos hub and a cash net. And you see overall, the numbers are quite low.
00:09:14.974 - 00:09:55.066, Speaker A: So quite early stage indeed. And for a longer time window, you'll see a bit more transfers going on. And there's a good site when mainnet.com, which is a crowdsourced data of when each Cosmos based chain is planning or has activated IBC. So there's now four that have actually activated, a few that come soon trademark. So, yeah, we'll see a larger and larger ecosystem of IBC connected chains being interconnected. Now, just for context, a bit of view.
00:09:55.066 - 00:10:58.400, Speaker A: I mean, IBC is obviously not the only way to connect different blockchains. There's quite a few other. Yeah, a pretty clear, comparable, one different approach, but comparable in the sense that it's also an ecosystem of blockchains. Is Polkadot's XCMP the way that pair chains in the Polkadot ecosystem communicate with each other there, it kind of comes out of the box. If you are a parachain on the Polkadot relay chain, like if your chain is a parachain in Polkadot system, then you get XCMP which then must be a parachain. There's out of the cosmos ecosystem another approach in implementation, which is gravity, which enables transfers or interpretability, bridging between cosmos based chains and ethereum based chains, championed by and largely implemented by Althea. It's also good to dive a bit deeper in.
00:10:58.400 - 00:12:15.590, Speaker A: Well, there's various approaches of bridging between Ethereum flavor chains or EVM based chains, where if you know that you have the EVM executability, so you can have EVM based smart contracts on both ends, you can make certain assumptions on how you can send messages back and forth. Usually those are based on unlocking tokens or whatever it is that you send through on each end. So I have an errand token here on chain one. It goes into lock somewhere, and that transfer means it gets minted or unlocked on the other end. And there's quite a few approaches for Ethereum and connected to different chains as well. There's the near Rainbow bridge, there's Axdai. They have their bridge with different models of technical implementation and also trust models like, is there a multisig? Who are governing this bridge? Is there a single party governing it? Who do I trust? Which technical components do I trust? Those are basically different for all of those implementations.
00:12:15.590 - 00:13:20.250, Speaker A: And compared to IBC, where the standard is the standard, you still have to trust that it's implemented correctly on either end, but you have something, at least something to sort of fall back to and compare to. And finally, for bitcoin and similar chains, Utxo based chains, there's this approaches based on multisigs and hash time locks as well. Things like atomic swaps, you could ultimately see as a way of interoperability as well. So, yeah, it's a bit of an overview compared to, for the decentralized ways in which chains can be connected. When we spoke briefly in the green room, Billy, you correctly mentioned, or I think was worthwhile mention. Ultimately, exchanges have been the bridge between chains for a long time, and they are, but in a centralized way, obviously. So, yeah, these are all ways to do this in a decentralized and open fashion.
00:13:20.250 - 00:13:49.320, Speaker A: We're going to see that this works and how this works. So you'd see that. I'll close my screen share, and we're going to go over to your screen, Billy. And yeah, it would be good to, just for audience, if you could say a bit about what you do, your background, what you have done in the cosmos ecosystem, and then dive into it.
00:13:51.690 - 00:14:22.554, Speaker B: Thanks very much. I've been working in Cosmos since around 2018 I began on the Voyager team, which later became Looney. It was mostly the premier wallet in the ecosystem. I always kept afoot in the Ethereum world. I was working on a project called Clover's Network. An NFT project took me deep into the different token design worlds of bonding curves, automatic market makers. It worked a lot with token economics, simulating systems with CadCAD, working with dow frameworks.
00:14:22.554 - 00:15:06.842, Speaker B: It worked with Gnosis and Aragon. So really it was where all the fun stuff was happening. Ethereum is where you could actually deploy something and see it running. That same day as my own projects in Ethereum ran up against the limits of gas problems and just scalability on any degree of success. I really turned my focus fully on Cosmos, started working full time there with developer relations, speaking a lot at conferences, building a lot of demo chains, started finally learning Golang and learning how to use the SDK itself. Earlier this year, I transitioned to the foundation where I run the funding program. We help coordinate across all the different projects, all the different companies, all the different code bases, and we also steward and shepherd a lot of that code ourselves.
00:15:06.842 - 00:15:49.130, Speaker B: So IBC, Tendermint and Gaia are all code bases that are maintained inside of. Yeah. And I'm excited to give a quick demo of a product called Starport. So this is a product that's started by the company Tendermint Inc. There's a little we like to reuse names in. Our product is called Starport and it's a command line tool to help you Scaffold Cosmos SDK chains operate, build, interact, and it includes scaffolding for front ends as well. So let me just figure out which is the right window.
00:15:49.130 - 00:15:50.954, Speaker B: Can you see that?
00:15:50.992 - 00:15:53.390, Speaker A: Fastest way to a production blockchain.
00:15:56.050 - 00:16:11.940, Speaker B: Yes, exactly. I can hide this message. Great. So this is just at Cosmos Networks Starport. So if you want to dig into that code base, et cetera, what I'm going to do is jump into the terminal. Can we see that?
00:16:12.470 - 00:16:18.310, Speaker A: No, we don't see the terminal. I think you shared the browser window and not thermal window.
00:16:20.250 - 00:16:21.800, Speaker B: Let me try that again.
00:16:23.290 - 00:16:32.730, Speaker A: I want to share my screen, this entire screen window. Chrome tab. Yeah, this works. Users build the GitHub.
00:16:34.670 - 00:17:06.474, Speaker B: So this is the first command that I did. I just installed Starport. I ran the Starport command to make a new project called IBC Demo and then I went inside that directory. I'm not going to run it again because it takes a minute to download. And then I opened up the config Yaml file. So here you can see on this default configuration, I'm going to create a brand new blockchain with a username Alice and a username Bob. And they're going to have some tokens.
00:17:06.474 - 00:17:44.174, Speaker B: Alice is going to act as the validator with this much stake. And the chain is called IBC demo. Let's call it outlier ventures demo. And let's add some new token. We can do 100 Aaron and let's jump back into here. So I'm going to do Starport serve reload because I ran this once right beforehand to try to make sure it works. Hopefully it does, but it's basically the default what you are given when you land.
00:17:44.174 - 00:18:23.458, Speaker B: And so while it's building this, I wanted to just talk briefly again to zoom out a second, like, why are we doing IBC? Why are we all here? And basically we're bringing the thesis of application specific blockchains as the solution to the scalability and sovereignty issues that you encounter in shared state blockchains. It's hard to get everyone to agree on things. That's where on chain governance comes in. And specialization helps with that as well. If a blockchain is just doing one very specific purpose, it's a lot easier to get everybody on the same page of making sure the blockchain serves that purpose. Oh, here we go. So we've just made a very specific blockchain with the purpose of demonstrating IBC.
00:18:23.458 - 00:18:46.386, Speaker B: You can see it created these two accounts and we've got a front end running at localhost 12345. So I'm going to click that and go into this browser. So it opens up in this browser. You can see we just launched a blockchain. Your blockchain is ready. You can see we've got this little stack of new blocks being produced. We jump over here.
00:18:46.386 - 00:19:05.900, Speaker B: We have sort of the makeshift block explorer. Very empty blocks. We're not doing anything yet. On our welcome page, you can say that we've scaffolded up a new user interface. So this is essentially a wallet here. You can see my accounts are present, et cetera, et cetera. I'm actually going to.
00:19:05.900 - 00:19:25.874, Speaker B: I shouldn't have accounts there yet. I'm going to add a new account. This is from the last time I did. I apologize. And I'm going to import an existing wallet. So I'm going to jump back in here and use this account. Alice, copy the mnemonic phrase, going to paste it in.
00:19:25.874 - 00:19:46.466, Speaker B: Let's just call it Alice two. Hyper secure password. And done. So here's Alice two. And here I have my 100 Erin stake Aaron token. I want to connect to the cosmos hub. And I'm going to send my Aaron tokens to the Cosmos hub.
00:19:46.466 - 00:20:24.386, Speaker B: And this is the real Cosmos hub, the live one. So what I want to do is start running a relayer. This is the typescript relayer, which means that it runs within the browser itself. In order to do this, I need to actually fund this same wallet with a little bit of atom to pay for the transactions that are actually hitting the cosmos hub. So I'm going to open up my Kepler wallet and I'm just going to send one atom to this account that's going to submit there, approve it. So I'm using the Kepler wallet. This is available at Kepler app.
00:20:24.386 - 00:20:34.002, Speaker B: And this is kind of like the cosmos metamask. You can see it just went through. That was quick, that was final. Now that that account is funded, I'm going to click connect. Relayer.
00:20:34.146 - 00:20:45.354, Speaker A: Now this just a very brief pause. That address that we see there, the cosmos address that was just generated here. Right. That's not an existing account.
00:20:45.552 - 00:20:50.780, Speaker B: Exactly. That's the alice two. You can see it ends with p 49 f five.
00:20:51.150 - 00:21:06.240, Speaker A: Yeah. So it's that address generated with the same mnemonic. But on the cosmos chain, your local chain wouldn't have the cosmos prefix. It would have outlier demo, blah blah blah address.
00:21:06.690 - 00:21:14.114, Speaker B: So inside of the config yaml is where you would decide if you want to use a different prefix. I just use the same one because it's right.
00:21:14.152 - 00:21:15.042, Speaker A: You could use the same.
00:21:15.096 - 00:21:37.718, Speaker B: Okay, things a little bit faster. But that's exactly right. That's just a feature of the Vec 32 encoding. So this is a check sum to address, and you get to choose your own prefix. And depending on the prefix, the checksum will resolve differently. But essentially that's like a hash of a public key that's underlying that account. So here we see setting up the relayer.
00:21:37.718 - 00:22:09.646, Speaker B: If you were looking closely there, it had basically a try. And so our local blockchain has emitted an event that says, I want to try an outgoing IBC packet. Our relayer here in the browser noticed that by watching our local endpoint for our local blockchain and says, cool, somebody's trying to create an outgoing message to open up a connection to the cosmos hub. It begins with that, like try. You submit the try to the Cosmos hub. That try is acknowledged. An event is emitted on the Cosmos hub that says it's been acknowledged.
00:22:09.646 - 00:22:25.578, Speaker B: That event gets relayed back to the local chain, says, hey, they acknowledge that you're trying, and they say, cool. Well, I'd like to proceed. They proceed by sending, hey, I am this local chain. This is my information. Cosmos Hub receives that and says, I acknowledge that you are this chain. I am this chain. Sends back that information.
00:22:25.578 - 00:23:04.278, Speaker B: And when I say, I am this chain, what I mean basically is I have this type of consensus and I have an app hash like this. My current state looks like this. This is basically all you really need to know about me in order to verify future updates that come from me, really came from me, the Cosmos hub, or came from me, this new, brand new little local chain. So this just finished and you can see it says running here and now. If I were to go back to the dashboard where I could see my tokens before, I now have the option to send to a different chain. Previously, I was just sending tokens to accounts on my local chain. Now I can send outgoing packets to the Cosmos hub four.
00:23:04.278 - 00:23:47.560, Speaker B: So that's what I want to do. I'm just going to reuse my same account here to send Erin tokens on the Cosmos hub. I'm going to send just one, make the fee into zero, just to be explicit about not wanting to pay myself any tokens at the fee. So now I start sending that transaction. You can see IBC is beginning outgoing right here. In the meantime, I'm also going to add this account to my Kepler wallet. So go up here, we add a new account.
00:23:47.560 - 00:24:10.474, Speaker B: You guys can all see my mnemonic phrase again. Alice two. Next. Great. So now I'm going to switch to my Alice two account. By default, Kepler is looking at the cosmos hub here. And so I want to scroll down here.
00:24:10.474 - 00:24:41.078, Speaker B: These messages are still being relayed between. Once they're done, you'll see an acknowledgement transaction pop in here. The Suez Canal comment earlier was funny. I was trying to think what that would actually look like. The closest thing I could think of. So there's different channel types. When you have IBC, there's ordered and there's unordered channel types and they have a time and a place for each.
00:24:41.078 - 00:25:24.226, Speaker B: An ordered channel type would be when the connection between them, any activity that takes place between theirs, you would need them to come in sequentially. So you could imagine a series of buys or sells or something like that. If those came in in the wrong order, it would have a completely different outcome than if they all came in in the same order. So that's the scenario where you want to use an ordered channel, whereas an unordered channel, everything could come through and whatever order didn't matter. I think the Suez Canal scenario would be an ordered channel in which for some reason one of those packets got hijacked or lost. It would be a very strange, weird scenario, but it would basically mean that that channel could become unusable. You'd want to open up a new channel and start routing things through it.
00:25:24.226 - 00:25:26.370, Speaker B: That might be a Suez Canal scenario.
00:25:26.730 - 00:25:31.480, Speaker A: Yeah. The solution in the actual Suez Canal was different than just opening another channel.
00:25:35.610 - 00:25:50.774, Speaker B: So here we go. We saw the IBC packets timed out. That's not what I wanted to see. When they don't get relayed in time, you would basically get notified and the attempt to make that transfer would time out. Let me just make sure that it's.
00:25:50.822 - 00:26:04.400, Speaker A: Actually relevant for a question that I wanted to ask because you started the relayer on your side, on your local testnet, your local network, in browser tenement based, et cetera, who runs the other relayers and why?
00:26:05.090 - 00:26:29.000, Speaker B: So I'm running this relayer right now. And when it comes to relays, you have a few options. The most straightforward is that you yourself run it to transfer your packets, because the same way that you would submit your own message to the blockchain you're talking to, if there's like follow up messages that you want to continue submitting, you should just continue submitting those. You're able to do that yourself.
00:26:29.310 - 00:26:34.650, Speaker A: So anyone can run a relayer that's on the Cosmos hub?
00:26:36.110 - 00:27:21.270, Speaker B: Relayer basically can be configured in many different ways for many different purposes. But the duty of a relayer for any of those is to transport IBC messages between blockchains, because networks themselves don't have a synchronous connection to each other. You have basically workers who take the output and the intention from one blockchain and submit it to the other. They have to submit those as actual messages. They're essentially the postal service. It's like the original letter was sent to blockchain a, but it was marked with international address. And so it gets put inside of an international shipping container.
00:27:21.270 - 00:28:15.660, Speaker B: This is the shipping container metaphor. And then through that standardized size frame conditions, any blockchain who understands the fact that shipping containers exist will be able to accept a shipping container. At that point it is unwrapped and the original content can be executed in that destination for that purpose. So the relayer is concerned with moving shipping containers and shipping containers just another category of message that all these different blockchains will know how to accept their IBC message types. I'm going to give it another shot. I still want to send my Aaron and I'm going to say zero fee transaction. Let's try that again.
00:28:15.660 - 00:28:19.878, Speaker B: These are the demo gods being evil.
00:28:20.054 - 00:28:38.206, Speaker A: Yeah, no, of course there's a demo effect. And just to close off on the understanding of the relayer, you're running a relayer locally, are you now independent of any other relayers or are you dependent on other relayers and is that why this might be stuck?
00:28:38.318 - 00:29:02.380, Speaker B: No, I'm completely independent. So what could happen is that original funding. So my relayer account is my Alice account. That's what we saw before, and we sent some atoms to it. Maybe I didn't send it out. Looks like we spent our Adams, they funded a little better. Go back and grab our address.
00:29:02.380 - 00:29:42.630, Speaker B: Go back into my dev account. I'm going to send maybe 0.5 atoms this time and I can jump into my Alice account and wait for that transaction to show up. That makes me think that this original IBC packet is destined to fail unless I get the funding in there fast enough. Yeah, see, there's the timeout packet. I think it's because that account was empty.
00:29:44.170 - 00:29:44.920, Speaker A: Right.
00:29:45.850 - 00:30:01.690, Speaker B: Third time is the charm. No, I did it on this chain.
00:30:03.950 - 00:30:06.810, Speaker A: That's also not easy to get, folks.
00:30:08.370 - 00:30:50.730, Speaker B: Yeah. Which has been a really exciting sort of moment for us that we actually start get to having those user experience conversations. What does it look like to start wrapping your head around interacting with multiple chains at the same time? I think that it's a lot of devs a long time to even wrap their head around the idea of a smart contract being able to talk to another smart, smart contract. Tons of ux hurdles to get over that developer experience, hurdles to get over that just paradigm to think through. Like how do you write code that actually interacts with another smart contract? We're going through that entire process again, but with the paradigm of blockchains talking to blockchains. And it's funny to see at the same time, kind of in parallel all of the different evm contracts, all EVM blockchains. Here we go.
00:30:50.730 - 00:31:23.410, Speaker B: Transfer channel happening. All the different Ethereum blockchains dealing with bridges right now. You're going to see the optimism bridge coming out soon. We've seen the XDI bridge for a while. There's matic and all of these. And it's just like each of these are very hard to create bespoke solutions to very specific sides with very specific security assumptions. And to be able to make a bridge copy and paste for any sort of side that's ready to sort of do these has been exciting.
00:31:23.410 - 00:31:55.066, Speaker B: But the actual rollout and the feeling of what it's like is just now becoming real. So if we're to go in here, we can see now we have an IBC packet. IBC token is our Aaron token on our Cosmos hub. To make that a little more real, we can jump into, say, a block explorer. We can see it here, go into our account on the Cosmos hub. We can see our atom balance there, and we can see also this IBc asset. And so even the block explorers don't even know exactly how to display this.
00:31:55.066 - 00:32:18.230, Speaker B: This is the hash of the path that it took, the channel import connection. If you were to submit this hash to a query endpoint, it would result with the chain id of our local chain and the channel which was open for that transfer packet. Kepler is doing a little bit better job unwrapping that, which is why you're able to see actually Aaron here.
00:32:18.380 - 00:32:24.230, Speaker A: But from here, that name, Aaron, is that like fetched from somewhere or is it actually somewhere in the packet?
00:32:24.390 - 00:32:40.346, Speaker B: That's in the packet. That's the name of the denomination. It's namespaced by that connection. So it doesn't matter if there's other Aaron tokens on the Cosmos hub. They're all namespaced by the way that they got there. If Aaron token got there the exact same way, you can assume it's the exact same Erin token.
00:32:40.538 - 00:32:41.710, Speaker A: Yeah, great job.
00:32:41.860 - 00:33:27.150, Speaker B: And now it's a full fledged asset on the Cosmos hub. You can start sending Erin token here. You could actually take it to the Cosmos decks, which will launch on June 15 and start selling this Erin token, which you just issued on a local machine here. So you've now created the full issuance story, which was available with deploying ERC 20s on Ethereum. Except for now, your token is a first class citizen of its own blockchain. No longer are you trying to make your smart contract adhere to the requirements of the Ethereum main net, adhere to the gas standards, and adhere to all the sharp edges of EVM development. You are your own primary first customer inside of an entirely tailor made blockchain just for your sort of purpose, which is pretty exciting.
00:33:28.450 - 00:34:30.898, Speaker A: Yeah, indeed. And the trust that other people can have in that token, or what they understand from it is then bound to that chain. Right now, you started this on your local machine. Maybe your laptop burns or whatever. It's not a very stable configuration, so people will probably not have a lot of confidence that that token will continue to exist, although they would probably be able to keep transferring it on the hub back and forth. But ultimately a more stable network, like irishnet, like Akash, like fast, like secret network, you can know, okay, that will probably stay there for a long time to come. And I know that this token that I have here that has been transferred through IBC, I know that I have full proof that it's actually that token on the other end and I could transfer it back there and I use it there with those specific application specific capabilities on that end.
00:34:31.064 - 00:35:23.966, Speaker B: Yeah, it really dissolves the distinction between a testnet and a main net because every testnet can move assets that have real world value back and forth. And so it becomes not a binary, it's this testnet or main net. It becomes a spectrum of like what assurance do I have that this network will secure the assets that are there, the assets that I move there for some period, for how long, for what reason? Things like that. Even the idea that you would purposefully burn one end of that connection is an interesting kind of poor man's token issuance. I spin up a local chain, single validator, low security. I issue 10 million of my tokens, I send all of them to the Cosmos hub. And then I let the IBC connection time out because it essentially needs a heartbeat.
00:35:23.966 - 00:36:08.138, Speaker B: And this is a parameter for the IBC connection itself is how often do you want that connection to be updated to ensure that it's still the most recent version of that chain, et cetera? There's some hard limits to that based on how often validator sets, update, et cetera. But you could purposefully let it time out and at that point for the Cosmos hub to reopen that connection. The method for doing that is governance proposal. It says, hey, whoops, I let my IBC connection channel expire. I've made up a new one, basically. But I want you to confirm that I'm the same old person, that these tokens are still connected to my old path. Or you could purposely not do that and then show the guarantee that, hey, these tokens now live natively on the hub.
00:36:08.138 - 00:36:21.154, Speaker B: They don't go anywhere else. And you have these guarantees that there's going to be no new ones minted ever again. This is like my finite distribution of a token that I'm using for whatever my community Dow or collective bargaining system.
00:36:21.352 - 00:36:29.980, Speaker A: Right. So the first case where you would want to reopen or open a new channel, that would be a governance proposal on the Cosmos hub, right?
00:36:30.990 - 00:36:38.220, Speaker B: If you're trying to get the cosmos hub to unfreeze, is the term unfreeze and client connection, then yes.
00:36:38.830 - 00:36:44.190, Speaker A: So that would be a pretty big thing like something that you rather not be dependent on. Right?
00:36:44.260 - 00:36:56.898, Speaker B: Yeah, but I mean, for a channel to expire, there has to be some pretty gross negligence happening. It has to have no activity for essentially three weeks, right?
00:36:56.984 - 00:37:09.060, Speaker A: Yeah, under normal circumstances, that would never happen for a serious chain. It would happen for the one that you just created, but, yeah, exactly. Circumstances, no.
00:37:11.050 - 00:37:38.880, Speaker B: So you can see here on the massive zones, which you were doing earlier, our chain outlier ventures demo has actually already shown up. This is now going to be recorded forever as an IBC connection to the Cosmos hub. It looks like the token transfer itself hasn't shown up yet, but as soon as it does. So where's our outlier ventures demo blockchain? Just right there. We'll start being connected to the hub and you'll see that it has performed one IBC transfer. So these are my two demos from last night.
00:37:39.650 - 00:37:40.640, Speaker A: Yeah. Cool.
00:37:41.730 - 00:37:48.958, Speaker B: That was enough. So that's the demo. We now have moved a local asset onto a live blockchain using IBC.
00:37:49.134 - 00:37:58.470, Speaker A: Awesome. Yeah. Just to close off on the map zones. The fact that it doesn't show up there is probably there on the querying and indexing end. Right. Because it has happened, but it just doesn't show yet.
00:37:58.620 - 00:37:59.366, Speaker B: Exactly.
00:37:59.548 - 00:38:43.186, Speaker A: Yeah, very cool. Yeah. Awesome. While we were talking about these interdependencies of chains and the timeouts and those kind of things, how does it work with chain upgrades on either end? So let's say your chain were a serious chain, but you're going to do a major upgrade. And the way that's done in the cosmos world is usually by having a new chain id, getting the previous state, new Genesis block, et cetera. How does IBC fit in there?
00:38:43.368 - 00:39:07.610, Speaker B: You actually don't need to change the chain id anymore for chain upgrades. And so because you can also include the previous app hash from the last produced block as part of your Genesis file, you can continue on basically seamlessly in terms of the purview of the IBC connection, so you can maintain a persistent connection through an upgrade, and those assets would be preserved.
00:39:08.990 - 00:39:16.654, Speaker A: Cool. That's cool. I didn't know that. Well, yeah, so I've mentioned in the upgrades stream, but if there was a.
00:39:16.692 - 00:39:53.770, Speaker B: Change to the consensus or something like that, then it might change which kind of a client you need to have. So I mentioned earlier, I'm this chain. This is what my consensus is like. This is what my chain idea is like. This is what my hash. If you have a new consensus, then you're essentially a different category of chain, and at that point, you would do a client update. The short term solution for that is the sort of like arduous governance proposal method of it that doesn't require process hub to do an upgrade or anything like that, but it does require a governance proposal.
00:39:53.770 - 00:40:56.590, Speaker B: The long term solution to that, though, is actually providing light clients within cosmosm, as Wasm based instances on the cosmos hub. So that as a new variety of consensus algorithms evolve, or as versions come out of different versions of Tendermint, let's say, and you've got different chains using different versions of tendermint instead of the light client of tendermint being essentially hard coded. And go on the Cosmos hub, there would be different versions of light clients implemented in WASM for all the different types of consensus mechanisms, all the different types of blockchains that exist out there. So IBC packets would be able to start targeting different WaSM endpoints as to light client categories, and you'd be able to have on chain upgrades or adjustments to the fact that know IBC connection now uses a completely different mechanism. It needs a new light client verification system. Now I'm going to start targeting know ID versus this previous one, and continue having a seamless IBC connection.
00:40:57.090 - 00:41:11.038, Speaker A: Right. And so that would effectively bring more awareness on the side of the customers hub as well of the different zones, because through this live client, it would be able to do much more interpretation than just receiving a few messages.
00:41:11.214 - 00:42:11.074, Speaker B: Exactly. And so we're set up right now to basically support the most basic user by VC, which is a Cosmos SDK user because we've implemented it ourselves, that's just available. If you make the upgrade to the latest version of the SDK and you enable it in your blockchain, is basically configuration file, the Genesis file or the app go. But the real sort of beauty of IBC, and I think what we were talking about earlier with the container ships thing, is that it's built in this extremely verbose way because it can accommodate a massive variety of blockchains and situations. And that's exactly what really differentiates itself, I think, from other interoperable protocols, is that it actually has a couple more steps required for every single interaction. It has a bit higher overhead, that channel packet acknowledgment back and forth, that's like pretty verbose. It's what TCP IP does, but it's still pretty verbose.
00:42:11.074 - 00:42:40.058, Speaker B: But the point of that is because it allows for an extremely flexible way of connecting for any kind of sort of. We don't know what's on the other side of that. We don't know what will be developed. But IBC is made in a way so that it continue to be flexible for any kind of blockchain scenario that wants to connect. It can even connect to what we call solo machines. So a solo machine would be ruby on rails, it would be WordPress. It's somebody that doesn't have a consensus algorithm, it doesn't have an app hash.
00:42:40.058 - 00:43:03.958, Speaker B: It's not a deterministic state machine, it's a central bank, it's USDC. Somebody who whatever. It's like, yeah, I'm Venmo, I'm a company. I have my own sort of legal security guarantees about the integrity of my application. I'm not trying to be a blockchain, but I do want to move my. Because Venmo in a way is like e money or something like that. It is like a know.
00:43:03.958 - 00:43:34.334, Speaker B: I'm sure that they have some degree of fractional reserve. I don't actually know that, but it's theoretically possible that a company could act that way. And so that's a token. So why not let them interact with blockchains? They can send IBC packets. They can construct a fully valid IBC packet. That's not a tendermint client IBC packet, it's a solo machine one. And it has essentially a multi sig that says, I have the authority to represent this entity, this single machine, or know Ruby on rails instance or whatever it is.
00:43:34.334 - 00:43:54.150, Speaker B: And so I can still follow the rules of IBC, send the packets back and forth and you can recognize that I exist and start accepting my token transfers and whether people think that's valuable or not, because on the other side of it was either a bank or somebody's basement computer is up to the marketplace and the actual token that gets used, et cetera, et cetera.
00:43:54.810 - 00:44:35.570, Speaker A: Yeah, that's very cool because indeed the trust model ultimately is based on what is on the other end and whoever is on the other end would need to make that believable and trustworthy, et cetera. And in the case of an Irishnet or an akash or whatever secret network, it's okay, there is a decentralized network and you can participate in it. And indeed they originate from. I mean, the US fed could say, hey, this is us. We're issuing dollars. These are real dollars. They could provide cryptographic proof that it's them who have issued those.
00:44:35.570 - 00:44:50.918, Speaker A: It's not on a blockchain on their end because they wouldn't need to. It's just their big MongodB of dollars. Whatever data that database that's sorting. And they could issue them.
00:44:51.084 - 00:45:22.046, Speaker B: Yeah, I mean, they could be a blockchain as well. They could be a single validator blockchain. Just a choice of architecture frameworks, et cetera. There's nice properties there, but it's no requirement. And I think that's why we always try to, when we talk about the Internet of blockchains, because the Internet doesn't know what kind of computer is going to show up on the other end. They don't know what programming language on there. As long as it sends TCP IP back and forth, you're going to be able to at least communicate back and forth, whereas comparing it to those other protocols we're talking about earlier, XDMP, for instance, that is more of like an intranet.
00:45:22.046 - 00:45:40.700, Speaker B: As long as you're within this network, you don't have to do these extra steps. We already know who you are. We already know that you came from this network. Just confirm that you're in our network and then we'll accept your packet without all this other overhead, which IBC includes because it wants to accommodate every possible future scenario and all the current ones.
00:45:42.270 - 00:46:29.880, Speaker A: Right? Yeah. And that's a good one for framing the difference with those other things, those other ways of interoperability, forms of bridges with axie. And B, you have more the intranet standard, because it's between those who are already in the safe place of the Polkadot VI chain with other more heterogeneous implementations. It's whatever the model for that particular bridge is. And with IBC, the protocol can extend to almost anything. It's just the trust model of whatever the specific message comes from or the token is issued from or whatever that you would need to vet and see as the receiver, if you're happy with that.
00:46:30.250 - 00:47:07.450, Speaker B: Exactly. Including Polkadot. So there's currently work underway to build an IBC packet palette, which is really exciting because substrate is a fantastic developer suite and there's plenty of exciting rust developers out there. And we love to see blockchains state machines of all shapes and sizes because that's what makes a world. But yeah, being able to make sure that they can speak IBC means that they are not going to be stuck in just the intranet. They're going to have access to all of the other bells and whistles weirdos who are connected to the broader Internet and blockchains.
00:47:07.630 - 00:47:50.820, Speaker A: Yeah. Nice. Cool. So we have one question from the audience. Baghira says that's great for anyone that needs assets for trading, like a small business or video game or whatever. But will it be that easy to add to the cosmos, Dax? Wouldn't it potentially flood the market? So I'd have to summarize that if it's very easy to create your own token and have it on the cosmos hub, for example, and on the cosmos decks, wouldn't that cause flooding of tokens? And I guess would be good to know what is needed to add to the cosmos decks. Is there more needed?
00:47:52.230 - 00:48:14.230, Speaker B: No. So it's the exact same scenario as you see on Ethereum. It's like you were saying, it's okay, anybody can issue a token, but I don't care about it unless it has a good story or it has a purpose or it's backed by a company that I can see and trust. Same with ERC 20s. How many coins are there? I can go deploy, Billy with 10 billion, nobody's going to pay attention. I can take that. Billy, ERC 20, and I can put it on uniswap.
00:48:14.230 - 00:48:46.686, Speaker B: Sure, I need to provide some of my own liquidity to give it or collateral to give it liquidity. But it's a trustless protocol. That's the point of a trustless, open, decentralized exchange, is that anybody can walk up and do that. Doesn't mean anybody's going to want that token or buy it from me. You can look through uniswap and there's thousands, if not like hundreds of thousands of shit tokens listed on there with almost no liquidity because nobody cares about them. And if we're lucky, we'll be the same on cosmos. It's a trustless, decentralized deck, so anybody can list their tokens.
00:48:46.686 - 00:49:06.970, Speaker B: That doesn't mean that it's going to have great success, because maybe that token just doesn't really have a purpose. But if it does, there's no barrier of entry there. It's just required collateral to provide liquidity. People are using it. They'll come with that. They'll also want to participate and earn the rewards that come with the liquidity provider.
00:49:07.550 - 00:49:44.534, Speaker A: Yeah, indeed. Like you say, with ERC 20s, it is already very easy to issue your own token, and it is being done with varying rates of success. And on the side of the uniswaps and the cosmos decks will have the same thing. A lot is being done on the user interface end as well to deal with that reality. Right. The user interface for uniswap says, okay, hey, you're adding a token here. Be warned, there's no guarantee that liquidity will actually stay here.
00:49:44.534 - 00:50:09.466, Speaker A: Dragons, be here. Uniswap introduced these curated token lists. There's various ways in which both the underlying protocols and the UXS, and I guess more on the UX side than on the protocol side because protocols are usually just open and free. How they can deal with that, to deal with that reality that anyone can create their own token.
00:50:09.658 - 00:50:55.326, Speaker B: Yeah, we expect to see soon this year as well the chain name service, which is essentially a registry on the Cosmos hub where chain names can be claimed. So this is a bit of a discoverability feature. So when you're navigating this Internet of blockchains and you see two chains with the same chain id, you can go to the cosmos hub and sort of ask, hey, is there one that I should trust more than the other? And this is sort of like a decentralized governed list sort of getting into TCR territory. And that registry can be reused for asset types and for the lists that maybe get curated as part of some interface. Having a public decentralized registry is useful for all sorts of things like that.
00:50:55.508 - 00:51:09.902, Speaker A: Yeah, great. And you would have some costs, be it through a fee or locking up something, so that somebody would have to have a hurdle to actually claim a name, I guess similar to ensure that.
00:51:09.956 - 00:52:04.654, Speaker B: Are still being left out. But it interfaces really well with another sort of goal of the hub itself, which is for chain launches and token issuance. We really want the Cosmos hub to be the entrance to the Internet of blockchains. So when you begin building, when you start launching, if you want to start finding validators, if you want to use shared security, we're hard at work on a protocol called cross chain validation. Another higher level term for it is interchange staking, but it's essentially a new category of shared security in which you can use the atom token as your staking token for your new chain, and you can use the cosmos hub to sort of recruit the validators in that capacity. If you decide to use your own staking token, you could use the cosmos hub to still recruit validators and make them offers in your staking token. Or maybe the validators are making offers to you like, hey, I want to be an early validator, let me in, blah, blah, blah.
00:52:04.654 - 00:52:44.234, Speaker B: And there's this possibility for negotiation exchange marketplace to be happening between new chain developers and existing validators and existing users. All of this is really sort of primed to take place on the cosmos hub itself as what's necessary to get people into this Internet of blockchains. First step, second step, third step. This is how you launch. This is where I can go to get those sort of steps and resources organized that flow. And a lot of that is really being great work coming from Tenderman, Inc. And actually focused around this command line tool, Starport.
00:52:44.234 - 00:52:56.290, Speaker B: So that's the type of interface that all this sort of revolves around. Starport Network is this idea of matchmaking validators, getting your genesis file ready. Everybody's on board to launch. Let's do it collectively, and let's do it decentralized.
00:52:57.130 - 00:53:28.622, Speaker A: Yeah, great. Makes sense. And touch upon the shared security. The path of cosmos, in that sense, summarized, is, well, hub was launched, and SDK was created for everybody to set up similar networks like that. All have the same depos, the same paradigm, the same consensus code, et cetera. Now, with ABC, those things can start to talk to each other, but there hasn't been shared security. Like, everyone has had their own security.
00:53:28.622 - 00:54:06.700, Speaker A: And with shared security, you start providing that option in a different way than, say, Polkadot does, but serving the same purpose. Whereas Polkadot started with, okay, we have the relay chain, and if you want to be formally part of this network, then you must have shared security. You must get a parachain or a parathread, like, have the economic security around that from the get go. Whereas with Cosmos, the ecosystem is already there, everybody's already running, and now, if you want, you can also have shared security.
00:54:07.070 - 00:54:24.238, Speaker B: Yeah. And even the philosophy behind shared security is quite different paradigms. Polkadot is very much like, either in or you're out. You pay the fee and you get everything. But all of the validators. If you want to be a validator, you've got to do everything I say with regard to all of these different chains. You know what I mean? You're in.
00:54:24.238 - 00:54:56.538, Speaker B: You're under the gun to do everything that we say you have to do, whereas cosmos, it's basically opt in. Same with the idea of choose your own security, et cetera. So the validators of the cosmos hub, they may opt in to risking their atoms to secure your chain. Those atoms can become slashable by this new child chain. But it's not that. Every single validator of the cosmos hub is forced to validate on every crazy new, weird chain who just shows up and says, hey, I want to be shared security. It's a negotiation, and it's a business opportunity.
00:54:56.538 - 00:55:29.320, Speaker B: It's business development. Why should I validate on your chain? What are you going to offer me? Well, on the new chain, I'm really promising, and if you risk your atoms, I'll give you some of my governance token up front. Okay, that sounds like an interesting deal. And then that way you basically are able to acquire a bunch of atom as your staking token for whatever capacity could be that you just set up. I'm going to pay you $100 a month and you're going to risk your atoms. And there's no fees on my network at all. We have a completely different deal going, but that's up to all of the different chains to be as creative and expressive as they want to their negotiation for their security.
00:55:30.810 - 00:55:46.380, Speaker A: Cool. Yeah. Looking forward to the models that start emerging there. I'm conscious of time. I want to finish in time. We have 1 minute left. We didn't get a chance to touch upon grants and funding, which is one of your day to day things.
00:55:46.380 - 00:55:55.230, Speaker A: So yeah, where can people go if they want to learn more about that, how it works? And how do people get grants? What kind of stuff gets built under grants?
00:55:56.530 - 00:56:43.120, Speaker B: GitHub.com interchainiofunding has the most up to date, like what the process is. Of course, all of those are linked and also described at Interchain IO there's interchange iofunding. If you're ready to apply, just go to apply. Interchange IO funding program is on a quarterly basis. We have a pretty rigorous process in place that's got a team of about six who are involved across the ecosystem and have really the broadest perspective on everything. We touch so many different projects, products, topics, technologies that the funding program in a lot of ways is a vehicle to support the ecosystem itself.
00:56:43.120 - 00:57:05.650, Speaker B: Oh, I know about so and so because they had a grant here. Or like, hey, that project is doing something interesting, maybe they should do a grant here, or they need to meet this team who's working on that. Or hey, there's two people working on the exact same thing. They need to meet each other. So the funding program is very much, practically speaking, a way to fund development, but it's also a way to make sure that the ecosystem itself is communicative, expressive and collaborative.
00:57:07.110 - 00:57:15.062, Speaker A: Great, thanks. Yeah, I popped the link in chat for everybody to follow if they want to. Yeah, for now.
00:57:15.116 - 00:57:15.702, Speaker B: Thanks very much.
00:57:15.756 - 00:57:34.894, Speaker A: This was super interesting. I learned a lot about IPC and I hope everybody else did too. And I am very happy that, let's say the Aaron was actually me. I mean, there's not a difference, no interpretation about that Aaron token. It was me. It was me. That I've been made.
00:57:34.894 - 00:57:40.526, Speaker A: How do you say that? Immortal on the Cosmos hub. So yeah, thanks.
00:57:40.548 - 00:57:49.760, Speaker B: Very big shout out really quick to Dennis Fadeep, the head of Starport Cli, for help with that demo. And building that product.
00:57:51.330 - 00:57:53.534, Speaker A: Great. Thanks. All right.
00:57:53.572 - 00:57:54.300, Speaker B: Thank you very much.
