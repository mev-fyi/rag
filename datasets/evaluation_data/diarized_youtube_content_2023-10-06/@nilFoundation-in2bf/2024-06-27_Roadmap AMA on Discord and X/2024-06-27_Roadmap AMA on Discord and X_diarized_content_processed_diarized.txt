00:00:00.080 - 00:00:49.340, Speaker A: Welcome to our livestream. We are today covering the recent roadmap release that covers Neal product releases, starting with the Devnet, ending with the mainnet. And we have our team here to talk about this. If you are live with us, feel free to share the link with your friends and join in. And if you're not sure what we're talking about, check out our Twitter. We have a blog post covering the roadmap that you can follow along today with us, we have Stepan Koleschnikov, head of engineering at Nil, Ilya Shirobakov, head of the architecture team, and Avi Zurlo, our chief product officer. They'll all introduce themselves briefly and then we'll jump in.
00:00:49.340 - 00:00:54.186, Speaker A: Stefan, do you want to start?
00:00:54.298 - 00:01:09.150, Speaker B: Yeah. Yeah. Thank you, Dusanka. My name is Stepan. I'm in charge of R and D at Neil. So I'm in charge of technology and planning as well. So I will present our roadmap today to you.
00:01:11.770 - 00:01:27.090, Speaker C: Yep. Hey, everyone. I'm Leah. I'm head of architect at Neil. Architect team is working on the research and actually defining how the system and the protocol should work to provide everything that we want from it.
00:01:30.990 - 00:01:32.210, Speaker A: And Avi.
00:01:32.670 - 00:01:44.050, Speaker D: Cool. Yeah, that leaves me. I'm Avi. I'm chief product officer. That means today I'm going to tell you a little story. So let's get started.
00:01:44.870 - 00:01:46.610, Speaker A: Let's get right into it.
00:01:47.460 - 00:02:35.890, Speaker D: So, what have we been up to? So, if you're on this call, or if you're listening to this live stream or whatever, you've probably heard of Nil foundation before, which means that you've probably heard of things like ZK LlvM proof market. If you've been around for a really long time, you've maybe heard of things like crypto three or placeholder or drop database or Menabridge. But today we're not here to talk about any of those things. We're here to talk about Nil and ZK sharding, which has been our team's primary focus for development, really, for the last year and a half. Why are we building another l two? Nil is an l two. It's an ethereum. L two.
00:02:35.890 - 00:03:29.636, Speaker D: There are plenty of l two s available on the market, probably too many. But we've watched this industry and technology evolve over the years, and we believe that the endgame architecture for blockchains is becoming more and more clear. And we think that endgame architecture actually lies in the past. And what we've seen is that nobody has quite cracked that egg yet. And ZK sharding, which is the architecture behind nil DL two, is largely inspired by the original work that Ethereum began around sharding many years ago. And sharding was a solution that would scale the network of Ethereum to something like the quote unquote world computer vision. Anybody globally could deploy and interact with this network permissionlessly.
00:03:29.636 - 00:04:37.058, Speaker D: All programs could seamlessly communicate with one another and it was opted for a roll up centric scaling roadmap. Now why were sharding and rollups considered for scaling? And fundamentally they both took advantage of horizontal scalability and that they distribute workloads over multiple machines. In the case of sharding, they split those workloads by state, and in the case of rollups or in modularity, they split the, split those workloads by task. And modularity was a great step for us in the right direction to unlocking horizontal scale. But it's a weaker form of horizontal scale than sharding in that we can split the state into more partitions and over more machines than we could split tasks. And this is very core to how we've designed ZK sharding. The other piece to consider here is that other ecosystem took a more aggressive approach in scaling hardware and hardware requirements like Solana.
00:04:37.058 - 00:05:24.312, Speaker D: And this is a form of vertical scale. It's a very powerful form for quick performance improvements. But we're already seeing that both frameworks, modularity and the vertically scaled sort of monolithic path, are beginning to show signs of weakness and that modularity is riddled with fragmentation between rollups, there's increasing surface area of attacks. We see Solana is already trying to go modular to a certain degree to tap into horizontal scale. And at nil foundation, we're crypto maximalists. We believe in this future that blockchains underpin a meaningful chunk of economic GDP. We believe in this cybernetic future and that automation and AI is going to play a very big role in the economies of the future and it's going to take place over blockchains.
00:05:24.312 - 00:06:09.300, Speaker D: And we believe that this all necessitates more scalable infrastructure and we need something that's going to last. And this is what and why we're building at nil. So where are we now? Obviously we're not there yet. This is, this pretty much marks or in a few weeks this is going to mark the first release of Nil and ZK sharding. It's going to be the first taste of what we envision in this end. State Devnet is the simplest v one that we could possibly build. The primary objective for us is to test the developer experience.
00:06:09.300 - 00:06:47.460, Speaker D: We're going to be launching at ECC formally in that will host an onboarding session on July 7. And it's going to be like a long, very long slog like this is. We're building everything from the ground up and that's the way that we feel we're going to be able to achieve our vision. And this is important because it marks the beginning of hopefully collaborating with many more folks who aren't necessarily employed by nil foundation and contribute alongside us. So with that, I'm going to hand it off to Stepan to actually discuss what's ahead.
00:06:51.280 - 00:06:52.460, Speaker C: You're muted.
00:06:57.560 - 00:07:26.490, Speaker B: Yeah. Thank you. Thank you for your introduction. And first of all, I want to start this short recap of the story of Neil. So we worked on shared system, on architecture of shared systems for more than a, for more than a year, for a year and a half probably. And during this period we researched a lot of approaches to build shared clarity solution. And during this period we developed several working prototypes.
00:07:26.490 - 00:08:28.730, Speaker B: And definitely we made numerous mistakes. But at the end of the day, we learned a lot, I mean a lot about sharding, about different sharded system architecture. And today I'm proud to present you our roadmap milestones and releases. We have planned to achieve our main goal, to build a sharded decay roll up to scale Ethereum. So first of all, we start this July at FCC. We will launch our devnet, as Ave already said. And what is that Devnet? What is our application would look like Devnet? In a nutshell, it's a sharded execution layer which allows developers to interact with our solution via CLI and via J's client using just normal solidity as a programming language and which is the most important thing it allows developers to try sharding.
00:08:28.730 - 00:09:35.132, Speaker B: Yeah, probably presentation is out, but. Well, let me proceed. So, well, the sharding is our major functionality here. And what is sharding and how you're going to work this sharding? So basically, the main idea here is that you can deploy different contracts on different shards and interact between this contract asynchronously. And this is the main feature which we want to present during the Divnet and during the FCC. And as Ali said, the main goal for the devnet is to get as much feedback as possible. So if you're interested in sharing, if you're interested in this kind of systems, please sign up to our Devnet and we will show you how it works during the FCC then in November this year, we are going to release Testnet.
00:09:35.132 - 00:10:23.460, Speaker B: Testnet probably in terms of functionality would be very similar to our devnet. So we're not going to add a lot of new functionality. We're not going to introduce a lot of new functionality, but we're going to take into account your feedback and make the interaction with our system more smooth. And dev experience would be more smooth. And definitely we will fix all of the bugs and maybe majority of the bugs which we will find during the devnet. Also, one important thing, one important feature we definitely want to introduce in this version, it's a shard DAC model of transaction ordering. Well, Ilya will tell a little bit more about Sharadak later.
00:10:23.460 - 00:11:45.480, Speaker B: Well, next, in the first half of 2025, we're going to deliver a version of our solution which incorporates Eke EVM. Well, and this is very important step for us because zero knowledge proofs are our main security mechanism. And well, it's very anticipated change for us. At the same time, during the first half of 2025, we're gonna expect that a lot of teams and a lot of developers would start building something, build some real applications on top of our cluster, and we will get a lot of feedback, a lot of feedback of some approach you're gonna take to develop your, to develop your applications about architecture you will use and so on, so forth. And using this, using this feedback, we're gonna make developer experience, especially asynchronous programming model, better. And let's say we want to make this asynchronous programming model as simple as is, as it could be in sharded systems. Well, at the same time, we're going to break down performance and stability.
00:11:45.480 - 00:13:11.346, Speaker B: And this is the release which marked as Destiny three. And finally, in the end of 2025, probably in Q four, we will release our mainnet. And when I say mainnet, I mean it would be the version which could be stable enough and secure enough to manage some real assets. Well, definitely to ensure security and stability of this version, we will conduct rigorous audits, we gonna test our system, and we're gonna fix all the bugs which we will found, which we'll find during the testnet. Well, I think that's a the very high level roadmap, the very high level explanation of what we're going to do and what we're going to build during the 2025 and this year as well. But if you're interested in some particular features about the technology, about some details of how all of this technology works, please join our Devnet and we can catch up at the FCC conference. And also Lia, our chief of architect, will explain you a little bit more technical details right now.
00:13:11.346 - 00:13:12.830, Speaker B: So Lia, please.
00:13:14.370 - 00:13:49.326, Speaker C: Yeah. Hey everyone. So why execution Schrader? As we know, Ethereum thought about execution Schrodinger before, but they moved to roll up centric approach and we believe it was the right decision for Ethereum at the time because, well, sharding is quite a complex technology and they have on stake as much as, well, ethereum network. You cannot take these risks. However, it doesn't mean that, well, charging doesn't make sense. In fact, charging has several key advantages that we know are starting to solve for roll ups at the moment. First one is native interoperability.
00:13:49.326 - 00:14:41.906, Speaker C: Because shards can seamlessly communicate with each other. Any smart contract on one shard can send transaction to another smart contract onto another shard via in protocol messaging. Also it shared security because all shards have the unified security model with the same security assumptions. Share the common validator set and share the common protocol, which means as developer, as user, you exactly know what expect. Then you send in cross charts transactions. And one more thing that now we hear a lot about that potentially in roll up centric approach. One application becomes one roll up, which means you need to run all infrastructure for this.
00:14:41.906 - 00:15:37.632, Speaker C: The sharding case. Sharding is able to scale enough. It's able to actually process all the transactions of your applications or your sharded application on the main network without creating additional separated roll ups. And today we have, we are working on the technology which combines zero knowledge and charging to actually overcome some of the previous flows of the sharded systems. And I can define three main directions here. First one, well, it's obviously sharding and sharding helps to scale applications and overall network throughput. The K technologies help to fix classic charging problems.
00:15:37.632 - 00:16:21.018, Speaker C: I'll talk a little bit more about that on some of the next slides and why it should be L2. Actually, because L2 mechanism helps to achieve ethereum compatibility as well as the same security level. And as I said, sharding is complex thing and that means that it has additional challenges for it. The good news, we thought about these changes and we are overcoming them. We have some solution for them. And I provide here just several examples. First, one is one of the obvious things is developing spiritual sharded system.
00:16:21.018 - 00:17:50.022, Speaker C: Because your state is partitioned between several shards, you have asynchronous communications between smart contracts on different shards. To solve this, we are working on abstraction layer design that allows you to build business logic of your application according to familiar practices and to abstract all the sharded, let's say transportation from your business logic and not to think about it. Additionally, previous charging approaches do not provide cross charging transaction or direct scalability issues. In our case, we propose Shard DAG is a mechanism based on well directly graphs that provides transaction ordering based on vector clocks and related with cross shard links. We are going to publish a blog post on this topic in the next days. One more thing is so called 1% attack and sharded system. The thing is well validator set is sharded as well, which means in theory one shard can have set of malicious validators on it, they can do something wrong and but the good news that the case state transition proofs actually allow you to verify the validity of transaction processing on the particular shot without having the state of this chart at all.
00:17:50.022 - 00:18:39.694, Speaker C: Similar how ethereum verifies roll up state. And that's mostly all from my side. And as I said, if you are interested more on these problems, if you want to want to understand more about them, how we solve them, as Stepano already mentioned, we are going to be an FCC, our researchers will be there, you can come to us ask anything regarding this. Plus again, as it was mentioned before, we are working on this developer experience and that's why we have Devnet. So please join. Please leave your feedbacks on it. I believe that's all from my side.
00:18:39.694 - 00:18:40.370, Speaker C: Thanks.
00:18:41.790 - 00:19:04.360, Speaker A: Thanks everyone. Now we're going to go for some questions. And if you're watching us on X or on Discord, feel free to drop some. For now, we have one of the main questions is how do I join future testnets and what will be the selection process? Avi, if you want to take that one, sure.
00:19:05.060 - 00:20:01.790, Speaker D: So how to join future testnets and will there be a selection process? So to start with, the second, we're being very intentional with how we distribute this technology. And when who gets access to the testnets is frankly still TBD. What we are doing is we're looking for developers and engineers who are self starters, people who are deeply technical and curious, who are mission aligned. And these are for the most part the folks that are getting access to our devnet. So if you're interested in following along and getting access to future releases, follow our socials, join our Telegram group. That's going to be where most of the comms are going to be directly communicated to the community. Follow our get in our discord.
00:20:01.790 - 00:20:26.820, Speaker D: Also reach out to myself or I, anybody else from our team who's present in those channels and just have a conversation. We're excited to have these back and forth with people who bring new perspectives to the table. And I'm all ears. You can find me on Twitter or telegram. Yeah, happy to chat.
00:20:28.440 - 00:20:36.460, Speaker A: Thanks, Avi. Question for Ilia, how does nil handle cross shard communication and ensure consistency?
00:20:37.940 - 00:21:25.772, Speaker C: Yeah, each crosshair communication creates additional transaction between the shards. And regarding the consistency, there is two parts here. First one, I said previously, we are working on this sharp DAC approach, which basically ensures that if you have this cross shard transaction, it will be included if. Well, if there is enough, let's say, fee to pay for the gas according to the original transaction. And it also ensures if something goes wrong on the other side, you will return error from another shard. And here's the second part. Well, to actually, then this handle should be, this error should be handled.
00:21:25.772 - 00:21:32.670, Speaker C: And, well, error handling here is, as I mentioned previously, part of this abstraction layer.
00:21:34.930 - 00:21:55.990, Speaker A: Thanks. And I know, Avi, you spoke a little bit about what makes no different, but to dive a bit deeper into that, and maybe you want to talk about how sharding is different to the robot centric approach and how horizontal scaling makes scalability for Ethereum a bit more advanced.
00:21:58.110 - 00:22:38.760, Speaker D: Sure. Yeah. And I think it's important to, like, it's important to start answer this question with like an asterisk, which I do believe most people are building towards the same thing. Right. And like, you know, I think a good metaphor is like, we're all building supercars, right? Like Athlon cars, and there's like a, some requirements that those f one cars can have. But we're approaching this state where improvements are becoming marginal. Now, there's a few, like step wise improvements that can be made, I think on the architecture side, which, you know, is obviously where we're putting a lot of our effort.
00:22:38.760 - 00:23:30.178, Speaker D: But I say that because roll up centric scaling, while it's very different from sharding today, I think largely they're looking for a sharding like experience, and maybe they don't just know it yet in that there's a huge movement around shared sequencers and ag layers and essentially these middle consensus layers that offer some sort of fast consensus for allowing interoperability, namely trustless interoperability between rollups. And so what we see is the industry is kind of working backwards to this sharded architecture in that you have shards plugging into this middle layer that's governing some sort of network wide protocol.
00:23:30.234 - 00:23:30.910, Speaker B: Rules.
00:23:34.050 - 00:24:34.250, Speaker D: And enabling this native interoperability. Some of them are, I think, even going as far as trying to establish some sense of shared security and really where our, if you kind of accept, okay, that's the vision. And maybe not to put words in other people's mouths, but except, okay, that's the vision. The architectures look very similar between ZK sharding and something like roll ups plus ag layer plus shared sequencer right now, where things are very clearly divergent, is that we take an opinionated view around the types of shards that can exist in that all of our execution shards is essentially a homogeneous execution environment. Everybody runs the same execution environment. What that means, and everybody is also being. Each shard is being run by a committee that is part of this shared global validator set.
00:24:34.250 - 00:26:03.370, Speaker D: Everybody's running the same validator software, and all validators are also at the same time running the main chart and running consensus for the main chart. So what this means is we control a lot of what happens in the protocol, and not we, but the protocol itself. Whereas in the alternative world of roll up centric scaling, you really do have a lot more flexibility in the types of shards that you can build. Now, the trade off is, and this has actually been discussed on crypto Twitter within the research community not too long ago, is that you trade off this sort of seamless interoperability, because when you give people sovereignty and you allow people to run whatever they want, you cannot trust them inherently. You can't trust them out of the box. And this is really where ZK sharding, I think, is going to be able to just move way faster, despite starting later than a lot of the roll up work, it's going to be able to move much faster because we're able to push these upgrades in a pretty uniform way. That homogeneous execution across shards is a huge advantage for us as we build towards this endgame architecture.
00:26:03.370 - 00:26:30.860, Speaker D: So very nuanced points and very in the weeds, but it does play a meaningful role upstream. And how you innovate, how you push upgrades where security flaws are, how interoperable is your system, and then how quickly can you build abstractions on top of that system? So, yeah, I'd say this is where things diverge.
00:26:32.280 - 00:26:54.322, Speaker A: That's great. I think we're all excited to see the Devnet launching. And there's one more question before we wrap up, which is about the Devnet program that's launching right after, etc. And if you want to say more about that and how we're, you know, building together with our community and what.
00:26:54.346 - 00:27:33.440, Speaker D: The plans are, yes, we're building everybody is welcome to build. Well, we hope everybody is interested in building. And we're rolling out a Devnet program where a select group of developers are going to get access for a six week program that we're running after ECC. ECC is like marking the beginning of that program. It'll be our first onboarding session. We'll run a virtual onboarding session the week after, and then on a weekly basis we'll be running workshops, office hours. We'll have direct developers will have direct access to the team.
00:27:33.440 - 00:28:13.450, Speaker D: And again, the focus here is for us to start collecting some valuable product feedback and working towards modifying what we can at the lower levels of the stack such that people can build their wildest dreams at the application level of the stack. And if you're interested, I think the Dushanka, I think the Twitter, I think the invite is on the Twitter, if I'm not mistaken. And maybe we could drop it in the comments here or something. But there's still time to sign up for that. And yeah, follow us on our socials. We'll be around working.
00:28:14.350 - 00:28:48.810, Speaker A: Yeah, we'll definitely post the link to sign up for the Devnet program. And if you're at ECC, make sure to come and say hi. We'll be at a couple of different events and hackathons. Also be on the lookout for the Shardag research papers, some other stuff coming out of the architecture team that's gonna shed some light on our deck and what we're building. For now, we're going to wrap up if there are no more questions. And thank you all for joining us. Excited to see what we make together.
00:28:48.810 - 00:28:49.950, Speaker A: Have a nice evening.
