00:00:00.330 - 00:00:38.758, Speaker A: You. Hi everyone, my name is junk Sagan and today I'm going to be talking about my FRP, which was about exploring the application design space on suave, with a specific emphasis on DFI. A bit about my background. I've been working on privacy and blockchain applications since 2017. I cofounded a nigma, which was an NPC based privacy project. In 2018 we started working with SGX. In 2020 we launched Secret Network, which was the first privacy preserving smart contracting platform using SGX.
00:00:38.758 - 00:01:31.010, Speaker A: And in late 2023 I started my research on swab. During my research, I spoke to a bunch of market makers, funds long holders, just to hear a bit more about their experiences with Dexes. And time after time, what I've heard is liquidity in Dexes are low. As a result you don't get good execution. The cost of trading is high and that they choose to use centralized exchanges as long as the assets they need are listed there. And when you dive into why this problem exists, you find out that lping or providing liquidity is not profitable. This is due to this phenomenon called loss versus rebalancing, which is the value that's lost to sextex arbitrage.
00:01:31.010 - 00:02:17.400, Speaker A: Right? Uniswap prices update every 12 seconds finance prices update continuously. There's a discrepancy at the end of the block and someone can just come and take ARP price difference this is impossible to avoid as long as you have time differences, but there are ways to improve it. One is to have shorter execution times, another is to run discrete auctions that settle at a discrete price or a uniform price, rather than having transactions within a block execute at different prices. And then finally you can increase taker fees. But that's bad for the swappers. If you're interested in this, there's a really good research paper that I've cited below. I suggest you take a look when you go to the swapper side.
00:02:17.400 - 00:03:05.430, Speaker A: Again, this is based by a research that I cited below. But the cost of swapping on EQSTC five bips pool, which is a relatively low fee pool, is almost twice as finance, so that's not great either. And different cost items are gas costs. You pay slippage that's due to ordering attack LP fees that are the pool fees. And then finally price impact, which is the price movement given the liquidity in a pool. So the more liquidity, the less price impact. So what I see is we have this paradoxical situation where either liquidity providers are bleeding value and swappers are swapping at two x finance prices.
00:03:05.430 - 00:04:09.882, Speaker A: We can somewhat solve this by increasing pool fees, but at that point, cost of swapping is like almost five x of finance and I don't think this works. So I think we need to go to an ideal state where the solution works for both liquidity providers and swappers. And to be honest, there have been improvements in the space. There is this solver RFQ model that protocols like cowswap one inch fusion Uniswap X are deploying right now. These models depend on accessing private market maker liquidity and provide what's called just in time liquidity. However, while these models can provide better execution for swappers, these models are very centralized and they have high entry barriers, like half a million to play as a one inch fusion swap solver and a million to play as a cow swap swapper. There's an amazing research paper that just came out, by the way, called orderflow art by the flashbot team.
00:04:09.882 - 00:05:24.100, Speaker A: So I would recommend you look into that if you like this kind of stuff. And then another problem with this kind of liquidity is if all the retail liquidity, the nontoxic flow, is satisfied by this kind of just in time liquidity, then what does that mean for passive lps? They will be eating all the toxic order flow. And I believe having this passive lp structure is important in order to ensure that we have liquidity at any given price, continuous liquidity that amms provide. So I think we can build a better world with suave. What can swab improve? The swivel RFQ model that I just described can be improved by suave, as these auctions can be run as suaps, any kind of auction protocol that can be improved by suave. We can run effective seal bid on chain auctions, which is a design people want. And then finally we can push the boundaries on Dex design.
00:05:24.100 - 00:06:12.930, Speaker A: What properties of suave allow us to do that? I think SGX is a big enabler here, programmable privacy, which is a property of the TE. You can basically prevent ordering attacks. You can run effective seal bid auctions, credible low cost computations. Again, tes are able to run expensive computations off chain and then prove them cheaply on chain, similar to how a ZK roll up works. From a mental model perspective, you obviously have to trust in the hardware, but you can have cheap on chain verifications. You have low latency with suave. Suave walks are expected to be 3 seconds, and you can even have faster execution within the Tees.
00:06:12.930 - 00:07:04.366, Speaker A: And finally MeVM. The virtual machine in suave comes with really cool pre compiles which allows you to access on chain data sources Ethereum state through a light client integration. And I believe these features can significantly improve or solve the DeX problems that we see today. First of all, we can have more profitable LP. We'll have less lvR because we can have faster execution time. If we're doing credible auctions that execute at a single price. That is helpful to lower LVR compared to the current structure we have today, where different trades of the same type in the same block execute at different prices.
00:07:04.366 - 00:08:20.410, Speaker A: And we can have automated active liquidity management capabilities through swab, which would also increase LP profitability, we can reduce the cost of swapping. The privacy aspect eliminates adverse sale ordering attacks. If we can achieve more effective concentrated liquidity through active management, we can reduce price impact based or slippage from price impact and then we'll have cheaper execution. And I believe in general, swab just gives you the ability to build better mechanism. Whether it's the trustless decentralized auctions or the tight coupling with Ethereum, some of these things I mentioned here are also possible to achieve with layer twos. However, one thing that's important is while layer twos have been great for scaling, they come at the expense of siloing liquidity, which is detrimental for DeFi. And with swab you can have cheap execution but settlement on ethereum which means you have unfragmented liquidity and therefore better execution.
00:08:20.410 - 00:09:38.242, Speaker A: And what are some next steps for me? Right now I'm exploring different network architecture models for different swap designs. Do you do single kettle, which is the TE in swab execution or multiple kettle execution? Do you use a single shared mempool? Do you send data directly to kettles? This have like latency implications. I'm exploring different execution models and how they work in the context of crypto. These are frequent batch auctions that clear the uniform price or some sort of limit order book model execution. What fair ordering algorithms implemented? I'm looking into permissions and ux like how can we improve over the bridging experience through permissions? What does that mean in the context of grieving attacks? How do we go around these things? And I'm just going to double click on this network architecture part before I end my presentation because I think it's interesting. It shows how modular suave can be based on what you need. In this I've explored two different angles.
00:09:38.242 - 00:10:42.598, Speaker A: One is execution single te versus multiple Tes replicating the execution. The other is how data is ingested, whether you send it to a single kettle or a shared mempool, or a data availability layer. Single tes or sending data directly to a kettle will have latency advantages. However, it has lower censorship resistant and liveness guarantees, whereas if you send the data to a mempool, you'll have better censorship resistant guarantees, but potentially slower. Similarly, if you're replicating executions via multiple tees, it allows you to have consensus. A second layer beyond SGX guarantees that's more like a blockchain model. This top right corner, that's how secret network works.
00:10:42.598 - 00:11:01.180, Speaker A: And then I think this quadrant will be more relevant for latent sensitive applications that can bear some centralization. But depending on what you want to build, there are a lot of options, and I think that's very cool and.
