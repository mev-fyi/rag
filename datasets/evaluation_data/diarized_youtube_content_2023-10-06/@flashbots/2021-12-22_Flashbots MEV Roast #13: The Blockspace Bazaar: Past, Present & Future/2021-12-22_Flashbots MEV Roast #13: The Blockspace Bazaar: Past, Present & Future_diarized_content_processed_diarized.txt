00:00:00.330 - 00:00:00.782, Speaker A: You.
00:00:00.916 - 00:01:03.280, Speaker B: Awesome. So let's start. Welcome everyone, to the 13th edition of the Mev Roast, where Mev, the Space and FLASHPASS, gets roasted by our roastmaster, Vitalik and everything about today's roast in the agenda. And the slides are already posted on the GitHub in the form of a GitHub issue in the Flashbuilds PM repo, and the recording will be shared after. And as many of you may know, flashbust is a research and development organization. We're here to mitigate the negative externalities posed by the existential risk posed by MEB to smart contract blockchains. And starting with Ethereum, and Flashbot's current primary focus is to enable this permissionless transparent and fair ecosystem for mev extraction and a bit of origin story.
00:01:03.280 - 00:02:24.726, Speaker B: As you see from the agenda, we are one of the key questions in today's Mev Roast is this 40 chest in the MEB Block Space Bazaar. And this is a photo from a conversation that Phil shared in September about a bustling MEB Block Space Bazaar and what it could look like. Where you see all the glass bulbs are the Oracle updates and rebases. So we have listed, but we were not going to go over a set of resources, what we call the Treasure Vault of Shara thoughts and including notes on Flashbot's research in terms of quantifying, realized, extractful value. The formal definitions and notes from the Optimism team contributed as work in progress, how they think about sequencer, MEB extraction, and notes from the Arbitram team about MEB and Arbitrum. And lastly, notes shared by the Prismatic labs with Flashbots on east two MEB and Flashbots. You can click on each of these links that takes you to the notes and please feel free to leave comments to collaborate.
00:02:24.726 - 00:02:57.490, Speaker B: Async and without further ado, let's go into the agenda for today's MEB Roast and I would love to ask vitalik you to share some thoughts on how you view the Block space Bazaar and what you would like to discuss with our fellow presenters and the 87 participants 86 other participants in today's Roast.
00:03:01.370 - 00:04:43.650, Speaker C: So the questions that I think I have and the questions that a lot of people, I think have, a lot of them are focused on this question of basically how is mev and how are blocks based markets going to end up changing over time? I think blocks based markets have become much more complex even over the past one or two years, with all of the various D Five projects and other things starting to happen on them. But there's still more things that potentially could happen. Right? So one of the ideas that I wanted to talk about was this idea that something like Flashbots could be used to basically give a backdoor to account abstraction and allow users to have smart contract wallets without the overhead of needing to have coins in some externally owned account that could pay for those transactions. And that's something that would require a lot of infrastructure. That's something that could have a lot of benefits, but it would, if at least that vision was realized, lead to an environment where potentially the majority of transactions would come through a channel where there's some kind of specialized mev system, kind of prioritizing them instead of just having the regular ethereum block space market doing that. So that's one kind of challenge that I see. Another challenge that I see is the switch to proof of stake and the switch to a world of some form of scaling.
00:04:43.650 - 00:05:21.810, Speaker C: So proof of stake, it has a few differences. Like the block times are predictable. Proposers can see when they'll be able to create blocks. A proposer can try to create blocks multiple times. So there isn't this thing where once a proposer has created a correct block, they don't have an opportunity to do anything else. They could either just publish it or not publish it. But then one good consequence of proof of stake is the block times, because they'll just conveniently happen normally once every 12 seconds, instead of just kind of happening randomly, sometimes 3 seconds apart, sometimes like 53 seconds apart.
00:05:21.810 - 00:06:08.162, Speaker C: That gives more predictability to users. But how that would change block space markets, I don't know as much yet. And then sharding and roll ups are even more challenging, right? Because in this case, I view those two technologies as being kind of in the same bucket. And the reason is that we're moving away from a world where everything happens in what I call a single domain. So a domain being where there's one proposer and where there's synchronous interaction between everything. And we're moving toward a world with lots of different domains, with different proposers in the different domains. And you could have transactions that kind of hop between the different domains and have different effects there.
00:06:08.162 - 00:06:18.760, Speaker C: So the other interesting question is just how would the mev world end up kind of surviving that and adapting to that, I guess.
00:06:23.930 - 00:06:38.860, Speaker B: Thanks for sharing your thoughts. Welcome. Any additional comments? And Phil, I know you're excited for this discussion. In particular, what are you in particular excited about? Can you share with us?
00:06:39.470 - 00:08:19.208, Speaker D: Yeah, so I think Vitalik had some great points that I'm also thinking along the lines of maybe a few other big ideas just to throw them out there to prime people since we're talking about E two and things like that. One of the things I've been talking a lot about recently and that I don't know how it will play out, but I think is extremely interesting is the political change of going from miners to staked validators. So obviously that's like a desirable change when it comes to dealing with things like 1559, because miners block things that often users or other kind of coin holders want, and validators are more kind of aligned with coin holders. But also in terms of like the mev politics and the block space landscape, you probably are going to see entities like exchanges and large whales and holders becoming more profitable and what a fuck, you more kind of influential in the system. Oh, nice. You want to turn the Zoom settings on, Alex? All right, we're back. Amazing.
00:08:19.208 - 00:09:25.840, Speaker D: It could have been porn and it wasn't porn, so that worked out well. I'm going to keep talking since I think I'm unmuted and I'll let Alex slowly sort out the Zoom bomb settings. I assume the way it's going to work is that we're going to unmute kind of everyone who's on the agenda. And also, if you want to talk and ask questions, you can always do that in the chat, which we should enable, or you can kind of ask to be unmuted in the chat, and if the chat gets bombed, we'll find some other channels. So anyway, I guess I was talking about EEP Two and how I think a lot of the relevant changes are going to be political ones in terms of the miner to the validator staker landscape. Another thing I'm very interested in in kind of how it interacts with the block space bazaar is what Vitalik was talking about, basically, which is kind of the degradation of composability. I think composability is one of the things that has really enabled mev to be different than a lot of traditional financial ARBs.
00:09:25.840 - 00:10:00.510, Speaker D: My hypothesis is that a lot of mev will still be there as composability becomes more complex with various L Two S and with Sharding and whatever other scaling changes might need to happen. And probably there will be a lot of a probabilistic element and a more kind of risk based calculation involved in that mev. But, yeah, I do think there will still be mev there. And how the landscape will be impacted exactly is something that's still up for debate, so would encourage discussion and debate on these kind of trends also.
00:10:05.280 - 00:10:49.160, Speaker B: Great. Thanks for sharing. And I'm back too, with my screen sharing Today's agenda. And I think in particular, a lot of these questions will be covered in the form of presentation, but the presentations are meant to frame the discussions. So now, since that everyone should be able to have access to the site chat, feel free to drop your questions there since that we have some interesting background bizarre like music to spice up the discussions. So feel free to use the side chat liberally. And let me check.
00:10:49.160 - 00:11:11.570, Speaker B: Liu, Zhang and Giorgios, are you guys able to unmute yourself? If yes, please answer. Alex, perhaps we need some help.
00:11:12.200 - 00:11:20.020, Speaker E: Yeah, you're the host now, so you could share your screen. So when you click on their username, you can click Ask to unmute.
00:11:23.960 - 00:12:22.824, Speaker B: Let me let me try to leo, who will be the first speaker? Apologies, this is the first time we're doing it on. We got it for Zoom bumped. So, Leo, I need actually your ID in order to unmute you. Oh, got it. Enchanted, broccoli. Well, all right. I believe you can share screen if you want, so let me know if you need help with that.
00:12:22.824 - 00:12:24.520, Speaker B: Or I can also share screen.
00:12:24.670 - 00:12:26.180, Speaker E: Oh, I'm unmuted.
00:12:26.340 - 00:12:27.050, Speaker F: Cool.
00:12:27.580 - 00:12:28.570, Speaker A: 1 second.
00:12:29.520 - 00:12:30.620, Speaker G: I can't share screen.
00:12:30.690 - 00:12:31.310, Speaker F: Sorry.
00:12:32.720 - 00:12:56.402, Speaker B: Got it. Okay, no worries. I will be the screen sharer for today. Can everyone see my screen? With Liu Zhang and Giorgio's slides on the ethereum block space. Who gets what and why.
00:12:56.536 - 00:12:57.880, Speaker C: Yep, I can.
00:12:58.490 - 00:13:03.320, Speaker B: Perfect. So Leo, please feel free to go ahead.
00:13:03.690 - 00:13:51.174, Speaker G: Hey, guys, this is Leo, and I'm presenting Ethereum blockspace. Who gets what and why. This is actually a short presentation of a paper of the same title that we just published recently. So like Vitalik said, the block space market has gotten significantly more complex and some of the considerations and incentives have gotten more convoluted over the years. So before we examine some of the more complications that reason recently, let's go back to the basics and take an overview of the block space market. So, the market design of block space market is very pervasive that it's a commodity that touches every aspect of the crypto market. But its mechanism is very simple.
00:13:51.174 - 00:14:40.818, Speaker G: So all the users are the consumers are on the demand side of the block space and they initiate transactions with a fee attached to signal their desire to purchase for a piece of block space. And these transactions are propagated in mempools in different views of mempools. And on the supply side are the miners. The entire mining ecosystem does just this one function of servicing as a decentralized clearinghouse for the block space commodity. So the mining pools, they construct the blocks with transactions that they pick up from mempools. And this process is up till this point, the process has been very simple. A recent study shows that about 75% of the transactions follow a very simple default strategy.
00:14:40.818 - 00:15:25.786, Speaker G: And that is the transactions that mining pool picks needs to have a weekly smaller fees compared to the transactions that are already included in the block without prioritizing any external wallets. So obviously that is starting to change and we'll talk about that more later. So the mining pool is responsible for transaction inclusion as well as sequencing. But so far most of the optimization are just done on the inclusion part. So that is miners mining pools focus on selecting the transactions that give them the highest fees. So Tina next. Okay, so once that part is done, these proposed blocks, they compete to get appended to the blockchain.
00:15:25.786 - 00:16:22.770, Speaker G: And this is a pretty straightforward process and I assume everyone understand this. So due to this characteristic, this gives inherent time value to block space because users don't know if the block space that they purchased is going to be included in the next block. And that is very similar to interest bearing instruments that needs to be discounted to present value. The value of transactions that gets included in blocks in the future, they may decay over time. The value of these transactions may decay over time or simply get front run by Arbitrage bots if they stay on public memposts for too long. So this is where we are pretty much today, or the mechanism so far. Miners, they seek to optimize primarily focusing on transaction inclusions and users, they express the time value in terms of fees.
00:16:22.770 - 00:16:40.060, Speaker G: So the big question is, is this mechanism for proposed So signaling fee is efficient in expressing their preference for time value of the next block and to the next page. Sorry.
00:16:42.510 - 00:16:43.260, Speaker E: Yeah.
00:16:45.310 - 00:18:09.290, Speaker G: So, block space, market design, and this is one of the most important part of the market design of blockspace. And this is core of many heated debates that haven't so far and various scaling solutions or block size war or just miners preference or not so much preference for certain EIPS, they all stem from this very market design. How do we know what are the criterions for determining if a market design is successful and does what it should be doing efficiently? So here we invoke Alvin Ross's work, who is generally considered a pioneer in the field of market design and the title of our paper as well. This presentation is respect to his work as well. So he defined that in order for a market to function properly, it needs to do at least three things. The first is market depth or thickness, as he calls it, for some reason. And because block space per second is scarce, unlike traditional commodities where the increase in supply actually reduces the fee or the cost, the increase in hash power does not increase the quantity, but in some ways it augments the hardness of the Settlement Assurance.
00:18:09.290 - 00:18:55.880, Speaker G: And one can argue that the more hash power increases the quality, but instead of the quantity of the Settlement Assurance. But the problem of that is due to a lack of a universal measure of security budget. Miners tend to security budget tend to get overalllocated or underallocated and we just don't know. Hold on. Thanks. So I think vitalik in your recent paper, you also mentioned on the paper on legitimacy, also mentioned that security budget tends to get overalllocated. And this is going to continue to be a difficult question for anything that involves contribution of hash power.
00:18:55.880 - 00:19:47.160, Speaker G: And the second most important quality is safety. And it's pretty straightforward that participants should safely act upon confidential information and transactions that have gone through should not experience so many reorgs. And this is going to become complicated with the infestations of PGAs transactions that are initiated based on the user's confidential information might get front run. And then with mev, it's also possibility of time bandit attacks. And the last part is congestion. And because blockspace has inherent time value and these are expressed in fees and a lot of the controversies are around this very specific quality. Like Phil mentioned, the recent EIP one five and I.
00:19:47.160 - 00:20:38.402, Speaker G: So yeah, miners really don't like it. For people outside of mining space, it might be strange to see that. Okay, optimizing the user's experience, optimizing fees should be something of a no brainer. But why do miners do that? Why do miners do such a thing? And of course, a lot of these politics will go or evolve to a different form with E two. But for now, I think it's valuable to discuss the very structure of ETH mining and where they are, the state of affairs and what's really important to them. Next page. Yeah, elvin Roth is really cool.
00:20:38.402 - 00:21:23.538, Speaker G: Anyways, sorry. So why do miners do certain things? First, we have to understand that the formation of ETH mining is very different from Bitcoin or even just an ASIC dominant network. And these are stem from inherent quality hardware composition. As we know that, or most people know that Ethereum is 80% to 90% of Ethereum network is contributed by GPUs. And this means that hardware owners have more optionality on their equipment. And this also means that there are more OEMs, there are more brands, there are more cart brands, despite the core components all come from Nvidia and AMD. But what this means that is the supply channels are less constrained.
00:21:23.538 - 00:22:28.618, Speaker G: So when demand is high for hash power, they don't have to go to Bitmain or Wattswiner to wait for allocation for a long period of time. The question is what's the source for 80% to 90%? So there is no authoritative source on that other than most of the Chinese miners. Quote this so I've seen this number several times from a representative from Silicon, as well as someone from SparkPool, if I remember correctly. But anyways, we can talk about this later. Where was I? Yeah, so supply becomes less constrained in times of high demand. And also a more pronounced characteristic is that fees as percentage of mining revenue is much higher in ETH comparing to Bitcoin. This means that for Bitcoin miners or ASIC dominant network miners, their primary focus is on managing expenses, keeping expense as low as possible.
00:22:28.618 - 00:23:26.698, Speaker G: But whereas in this case, because the source of revenue come from subsidy fees as well as a growing significance of mev. So with that said, the mining cycles of serum tend to be much shorter compared to ASIC dominant network. So we define these cycles by the relative rate of change of hash power to the rate of price change. So we divided these cyclic patterns into four archetypical stages with the interest of time. I won't go too much detail into this, but it's in our paper. So why do we care about mining cycles? And why do we care about and what it means that mining cycles tend to be are shorter? The biggest issue to miners is that the revenue management is much harder. So when they make decisions for hardware acquisition or even secretly developing Asics, these unpredictability tend to make their decision much harder.
00:23:26.698 - 00:23:42.340, Speaker G: And also they would have to rely more on financial instruments. Hedging instruments tend to be more expensive because the revenue is more volatile to manage their costs rather than simply just keeping expenses electricity rate as low as possible.
00:23:44.470 - 00:23:45.460, Speaker A: Next page.
00:23:46.630 - 00:25:21.086, Speaker G: So why does this market design lead to Mev from the supply or the mining industry's perspective? So like mentioned earlier, so far most of the optimization has been done on the transaction inclusion side. And now transaction sequencing, which is really just intrablock profit optimization, has grown to become more and more important and miners have more capability and better understanding to capture that. And first price auction which Georgios will talk for later, as well as the inevitability of fee as percentage of rises in mining revenue, which leads to more volatility unpredictability in managing their income. So I think Charlie from Paradigm recently wrote a paper called MVV and Me and mentioned that these MVV are really inevitable even with the presence of off chain deals and these are happening more and more frequently. So big question, what is the impact of MVV to the mining industry? And of course these are all relevant when we move to e two. But for now there is a direct impact to mining revenue as the percentage of mev as total block reward increases, the volatility also increases and miners skill set needs to evolve as well. So instead of simply as hardware operators, they need to become a minor and traders will start to blend active DeFi users.
00:25:21.086 - 00:25:33.240, Speaker G: What happened to my screen anyways? Active DeFi users will also start to.
00:25:33.850 - 00:25:38.040, Speaker E: Leo, would you mind sharing your screen again? I think it turned off.
00:25:40.010 - 00:25:40.950, Speaker F: Yep.
00:25:49.070 - 00:25:50.786, Speaker G: I'm on the last page anyways.
00:25:50.918 - 00:25:51.600, Speaker E: Cool.
00:25:52.770 - 00:25:53.582, Speaker G: Where was I?
00:25:53.636 - 00:25:53.902, Speaker A: Yeah.
00:25:53.956 - 00:26:48.410, Speaker G: So trader and miners will establish much or traders with resources will establish much tighter connections and direct connections to miners who offer such service. We're seeing a growing trend in this already an impact to mining pools. So mining pool, up till this point, mining pools have pretty much converged to roughly the same range of performances with some slightly better than the other due to business developments. But both from infrastructure and financial payout perspective, mining pools, there's not much to differentiate one from another. But of course with Mev, the capability of mining pools to capture these opportunities become incredibly important to traders. So we'll see new payout model, I think today Spider pool announced that they're going to stream 100% of the mev profits back to the miners. So I think there would be some very interesting economics there as well as private mempos.
00:26:48.410 - 00:28:07.094, Speaker G: I think we'll definitely see that more often. And as for impact to these mining cycles, I think they will become even more volatile and shorter or even harder to predict. So hash rate cycles will start to react to these large expected on chain events where people are expecting me the opportunity to grow. And this will become more pronounced when every single mining pool start offering profit switchers and that is they allow your GPU hash rate to constantly bounce on different networks and lastly is the possibility of hash power concentration both on mining pool side and mining operators who are capable enough to absorb the skill set of traders. So I think it's kind of obvious that mining pools that offer the best service will capture more shares. But a bigger issue is we'll probably see that large mining operators become sophisticated traders or sophisticated traders start to absorb large mining operations themselves. So this summarizes the MVV's impact to the supply side of block space market.
00:28:07.094 - 00:28:12.460, Speaker G: That said, I'm turning the page to Georgios who will present the demand side.
00:28:17.420 - 00:28:52.224, Speaker E: Okay, I can talk now 1 second, let me share my screen. Okay, is the slides visible? Yeah. Okay, fantastic. So thank you all. Thank you Leo. So we will now talk about the demand side of the market. Basically, so far, the amount that you pay in a block is limited by the gas limit and per transaction.
00:28:52.224 - 00:29:46.644, Speaker E: This fee that you're paying is determined by the gas price multiplied by the gas used. And basically a miner just chooses n transactions and they typically sort in a descending order so that they maximize the fees that they get. And because there is more demand than supply. Currently there is an auction procedure where all the users kind of bid to get included in the next block and optimally bidding in this fee paradigm is a bit hard due to by the nature of the auction. And this results into very volatile fees and basically users not knowing how long a transaction takes to get mined. And we can see like this from a nice chart that I took from a nice presentation that some people from the University of Athens did where the median gas price is the course of a week. You can see so this is like the median gas price.
00:29:46.644 - 00:31:12.588, Speaker E: So if you took the gas price inside the block it's even more volatile. You can see how the gas prices spike uncontrollably and basically this ideally should change and so there's a few ways we can look at making this better. So short term, 1 may argue that sure, you can make the block a bit bigger and that would be kind of like vertical scaling, although this is not an ideal solution because increasing the gas limit is. One would say it's bad for the decentralization of the system because it becomes harder to sync a node and also it becomes harder to perhaps process a proof of work block in due time. And we will see how this ties back to Vitalik's proof of stake question around increasing the gas limit due to the proof of work times. Then the medium term switch here would be the sorry, was there a question? The medium term change then would be 1559 where basically instead of having the current fee paradigm we change it to a take it or leave it price where you get quoted a price by the protocol and in most cases it would be the same price for everyone, which is great. Then this introduced predictability and predictability as a result introduces less fee overshooting by the fee estimators.
00:31:12.588 - 00:31:59.196, Speaker E: Because currently what happens is that when you try to estimate your fee your software literally looks at the mempool and says okay, this is like how much you'd pay based on the current state of the mempool. But the mempool in reality is a very dangerous place and we will expand on that in a second. And on the longer term there is nothing that you can fix in the end. Like the fee market is a scaling problem, not a mechanism design problem. And as a result, the actual solutions to this would be E 2.0 or the Scalability on layer two. And these are kind of implemented either via the popular roll ups, whether it's the Optimistic or the ZK variant.
00:31:59.196 - 00:33:36.188, Speaker E: Or you can think of Cosmos zones using IBC or Sharding. And my claim is that these are all more or less the same with some very minimal differences. Typically there is like a coordinating chain, whether it's E one, whether it is the Cosmos hub, whether it is the beacon chain and there is some communication protocol to facilitate this asynchronous communication between each individual Shard, each individual roll up, each individual zone. And in a way this on demand horizontal scaling instead of just launching with an enormous supply allows us also to maintain healthy levels compared to for example, just having an enormous supply which would create no congestion, which would mean that gas prices would be zero. And the argument here being that you don't want gas prices to be zero because gas prices are in the end like the fees are what drive a blockchain security in the absence of a block reward. As a general data point, so far we have seen that miners mostly follow the quote unquote honest strategy or the default strategy where they just sort by gas price and they just include their transactions. But this is a paper which we link to in our blog post shows that about 70% of them follow the protocol and about 30% they have bespoke prioritization strategies, whether it is just including their own transactions or including by third parties.
00:33:36.188 - 00:34:57.576, Speaker E: But basically they just don't obey the default descending gas price rule. And if there is anybody that's not familiar with modern we can do a short explainer here, otherwise we can keep going. Okay, fantastic. So currently mev is being extracted at an exponential rate. So this is data from the Flashbots Mev Explorer which basically shows that we have been seeing this huge growth in mev extraction and this trend will inevitably continue in my opinion, by virtue of the fact that the application layer is so flexible with respect to how this affects users. The intuition is very simple, or rather the intuition that I want to talk about is very simple, is that users and bots who extract mev are in the same transaction pool in the same mempool. And what this means is that the nonmev transactions kind of are in the same compete for the same block space as the mev transactions, which results in overpayment because exactly your fee estimator uses as a reference the gas price that was created due to some bot going after an mev opportunity.
00:34:57.576 - 00:35:59.900, Speaker E: Whereas if you did not have the mev opportunity, if there was no mev opportunities, the average gas price would be less. And of course, if the average gas price is less, this is quote unquote like good for the user. And so the most minimal way to introduce this kind of change is by splitting the mempool by having a specific mev transaction pool and a non mev transaction pool. And this is basically the approach that Flasbots has taken, which is basically just allow bundles to be introduced before all nonmev transactions. And the claim here being that this will reduce the similarity to how IP 1559 smooths out the gas price volatility. This would ideally also have a similar result while preserving the overall minor revenue in the same way that it was before. So in a way, you're just having a more efficient auction mechanism instead of the status quo.
00:35:59.900 - 00:37:01.344, Speaker E: And from the miner side there is something which is a bit non obvious perhaps, which has been discussed recently, which is that miners already extract mev passively, even if they don't do anything. And we have quantified this number to be about 12%. And this happens just because there is an increase in the average gas prices are higher than the normal one. So in a way, you're quantifying the fee surplus that miners get due to mev and you classify that as the money that they make from it. But you could take that a step further and a miner could either start doing in house operations or they could outsource to traders. And with respect to the in house operations, there was a heated argument on this on Twitter recently between Hassle and Phil, I believe, which basically said that due to the fact that 80 or 90% of the mev is super simple to extract, miners will start doing it in house. But the counterargument here is very simple.
00:37:01.344 - 00:37:56.960, Speaker E: I think Nathan, who did the salmonella attack, is in this call. Miners started to do in house mev extraction and they lost a lot of money. So basically, if you're doing mev stuff, ideally you want to know what you're doing. And ideally you would either need to have like a sophisticated in house trading shop or you would outsource it to the traders. And with respect to outsourcing the traders, there's either the flashbots approach literally just opening a new API and having the trader pay you directly via the fee, or you could implement an. Idea that Leo is a big fan of just having hash power derivatives, where basically you just say, here, take my hash power, you will pay me a fixed amount and you can use that in whatever way you want and you will only mine whatever transaction you want. So they're kind of similar, but they have a few low level differences.
00:37:56.960 - 00:39:07.960, Speaker E: And to kind of wrap my part, I want to talk about the vitalik questions. So mev is a transaction ordering and inclusion problem. The miners or the sequences or the proof of stake validators are the benevolent actors in this system and there is a few solutions or rather a few paths we can take which I will very shortly discuss. So firstly, if you're operating a roll up, like typically the current model is, at least they assume that there is one sequencer who's just taking transactions and they're putting them in order and they're executing them. So the simplest thing that they could do is like the second bullet here, that they could promise to include the transactions on a first come and first serve basis. So basically each time the sequencer receives a transaction, they say, yes, I will include it at the time that you submitted it to me. And they will not try to kind of mess up with a transaction ordering and presumably the sequencer would sign on this message and if they deviate from this protocol, then they would get slashed.
00:39:07.960 - 00:40:25.324, Speaker E: So that works, although it probably requires predetermined sequencer slots in the sense that if you're having a leaderless protocol, you cannot guarantee this first comfort serve property because you just don't know who will propose. So you cannot have this guarantee that your transaction will actually be included. So if you have predetermined sequencer slots, for example, if you are rotating consistently based on, let's say, how much stake is locked in by its sequencer, maybe this could work, I don't know, up for discussion then. The other part, which Surya liked from the slides is that we can separate order from execution on the protocol layer. So instead of having one sequencer, we can say, let's have ten of them or nine of them and let them play a BFT protocol, where basically you would have them on the first round of the BFT protocol, they would commit to an ordering of all the transactions. And then once that commitment has been agreed on, then on the next step of the execution, on the next step of the protocol, they would execute on this ordering. And the consensus rule would say that any block that does not respect this previously committed on ordering will be rejected.
00:40:25.324 - 00:41:11.340, Speaker E: So this is very straightforward to implement and you could perhaps implement this properly just by as an engineer, literally, you could possibly take tendermint and implement it and put it on top and this could work. But you're kind of assuming that one third of stake in this system will not be corrupted, which may or may not be okay. I'm not one to judge. And on. The third solution, which is also possible in proof of stake, would be that instead of us trying to figure out how to separate ordering from execution, let's just have users submit transactions encrypted to the users. And then once the transactions have been submitted encrypted by the users. The miners.
00:41:11.340 - 00:42:16.916, Speaker E: The miners can sort the transactions without learning ever the content of the transactions. And this can probably be implemented using Intellectgx or any kind of other kind of trusted hardware or with a verifiable delay function or with some form of multiparty computation EVM. Where basically you would execute your transaction over the encrypted data to know that it's valid. But you would also be able to sort the gas prices so that you preserve the descending gas price rules that you want to have. And the question I have here, which I don't have a clear answer to, is it seems to me that somebody could just start poking the data set of transactions, and basically they would leak information about what the structure of the data is. So it's not clear to me if this approach works 100%, but I think that this is a big part of Flashbot's focus right now, so I'm excited to see the results of that. I think that's it.
00:42:16.916 - 00:42:22.890, Speaker E: So questions? Comments, roasts? All welcome. Thank you.
00:42:31.660 - 00:42:47.820, Speaker B: So, question for our roastmaster. Do you think Leo and Giorgios sufficiently addressed the roast questions that you posed on the architecture and the evolution of east?
00:42:50.260 - 00:43:27.020, Speaker C: I think so. I feel like there's definitely a lot of good answers there. The one thing that probably hasn't been talked about enough and that could be talked about more by everyone is kind of interaction effects between mev on different systems. Like, are there benefits from whoever's doing the sequencing, say, for the ethereum base chain and for roll up A and for roll up B to kind of work together with each other? And if there is such an advantage, can we quantify it and gives it a risk?
00:43:32.400 - 00:44:16.338, Speaker B: So Giorgios, Phil, or anyone in the audience? Oh, this is the problem. When I start sharing, I need to actively host, and this is something that I will fix right now. Anyone? If you need to be unmuted, sorry about this setup. This is the first time we got Zoom bombed because usually it's a small group of can you guys hear me okay?
00:44:16.504 - 00:44:17.458, Speaker C: I can.
00:44:17.624 - 00:45:06.834, Speaker D: Amazing. Amazing presentation. Thanks, Georgios. And thanks for bearing through all our technical glitches of random noise in your ear and stuff like that. I guess my question is what I said in the chat is, like, how do you see these things evolving over time? And also yeah, I would like to talk about also the thing Vitalik brought up, maybe we can kind of continue it through the whole roast. I think the reason a lot of that isn't clear to me is that it's just not really clear how Cross l Two ARBs will work on a technical level. What will be kind of the necessary conditions for an ARB bot to want to execute a Cross l Two ARP? Or how does information in general move from one l Two domain to another? I think I still don't personally understand the answer to that.
00:45:06.834 - 00:45:19.750, Speaker D: So maybe there's some people on this call who know it better, and Giorgios really wants to talk about it, but he's muted, so if someone could unmute him, let's see who's the host.
00:45:20.410 - 00:46:04.790, Speaker E: Tina okay, we're back. Amazing. Yeah. So on the Cross l Two composability and how that interacts with mev is my understanding of the question. So let's maybe think about what is firstly a Cross l Two transaction and then we can get to or rather what's a cross chain transaction? It reader is a message that gets passed from one place to another with some latency and the latency to pass. This message is determined by the underlying protocol. If the protocol is an optimistic roll up by default, that latency is whatever the fraud proof period is.
00:46:04.790 - 00:47:17.306, Speaker E: But you can make that time less by introducing market makers such as Connext or some oracle like what maker will be doing for fast withdrawals on optimism. So the situation here is the following. When you want to make an ARB between two chains, you need to have a callback listener effectively on the sending chain that can be called by the receiving chain. So basically what you would do let's say that you want to do an atomic transaction from Georgia to Phil that only works if both transactions happen correctly. What you would do is that you would send your money into you would send your message into a box in a way, you would commit to this state transition. You would execute the message, you would transfer the message to the other chain, however long it takes. Once the message is delivered to the receiving chain, the receiving chain must make a callback to the lockbox that you put your original state in and the original thing must say if the message was successful, it must continue and finalize the execution.
00:47:17.306 - 00:47:59.930, Speaker E: Or if the original message was not correct, it should revert to the execution. So in a way, you maintain the current semantics that exist in today's system. But instead of having this sort of synchronous composability where the state transition on the sending chain happens atomically with whatever external calls that you make, you just need to wait to receive the callback from the receiving chain. So I think that executing all this from a high level looks exactly the same, but just with a different latency. Does this make sense as a response? Phil.
00:48:02.270 - 00:48:28.980, Speaker D: I think it makes some sense, but I guess I still have the question of if multiple people want to take the like if there's competition, basically, and contention between these bundles and these cross chain messages which will inevitably happen. What's the process of influence that kind of decides which message is the one that comes first, I guess is one way of putting it, if that makes sense.
00:48:29.590 - 00:48:32.680, Speaker E: I see. Yeah, please.
00:48:35.130 - 00:49:28.934, Speaker F: I understood the question slightly different. I thought the idea was what if the operator or kind of well, the miners, the validators, the operator, whatever is the same person. So then of course you could do those. Well, then they could give you the insurance or you could as a user say, well, I want this transaction here on Mainet included by buying token a and then selling token a on whatever optimism. And I have the insurance or kind of the validator gives me the insurance that either both kind of transactions are included or only one. And of course it would be useful, of course it comes with a downside kind of to some degree centralization risk. It's kind of more useful to be a validator if you are also a validator on other chains because then people will kind of value or pay you more.
00:49:28.934 - 00:49:31.302, Speaker F: So I think that was the question.
00:49:31.356 - 00:50:13.990, Speaker E: I believe I see, my bad, I may have misunderstood then. In that case, I think it's perfectly if you can, in a way, make the relayer accountable for them relaying a message even though they are like how do I say if you have a message on your local chain and you want to send it to another place. And you have a way to prove that the guy did not relay the message. I think it should be fine in the sense that you would include a timeout parameter or something, and you would slash them on your local place, on your local chain.
00:50:14.650 - 00:51:27.354, Speaker H: Yeah. So I would just like to comment a little. So I agree mean, I think Georgia's provided a very clear formal definition of what would go on. But I think practically speaking, people are just going to I think conceptually it's interesting to think about what happens when you have shared subsets of block producers, let's just call them. So if you have in the case of like an optimistic roll up, it's very straightforward, right? If the optimistic roll up operator is bribing miners via mevgeth or Archer Dao or whatever, then they can do fast exits and provide certain guarantees. That's also to some extent true of certain validators in an optimistic roll up scenario where they may be willing to basically just provide loans via a side channel via something like Connects because they actually are more aware of the state than the end user. And I think that this is sort of what I was getting at it by saying.
00:51:27.354 - 00:51:56.760, Speaker H: I think people will just yolo it like there'll just be a group of people who really are tracking the state on all of these chains or whatever chains that they're providing this fast transfer on that martin was talking. So I agree with Martin that I think that people will be bypassing a lot of the double simaphore stuff that Georgios was talking about by just using a trusted third party that is watching all the chains in question.
00:51:58.490 - 00:52:50.310, Speaker D: So I wonder if this is one way to answer, actually Vitalik's kind of maybe part of Q Two, which is that as composability breaks, the mev world starts looking a lot more like kind of traditional financial arbitrage where there's many zones and there are actors that arbitrage random subsets of these zones and make profit doing that. And users are kind of like YOLOing certain zones. Because in some ways what makes me v different, I think, is the determinism and the composability that exists in l one. So if we go to different domains, we're kind of making that determinism more probabilistic because there's a lot of failure modes in cross zone communication and we're also breaking composition a little bit because there's not as tight of a coupling. So I wonder if that's some high level way to summarize it.
00:52:50.460 - 00:52:51.800, Speaker C: Yeah, that makes sense.
00:52:57.370 - 00:53:03.100, Speaker D: It I think there are still key differences. Like we have all these cryptographic tools and audit logs at every.
00:53:06.050 - 00:53:30.690, Speaker C: Another key difference is that it's not just like financial arbitrage between two different exchanges because 5% of the time one of the arbitrage players might control who is going to the order of the transactions on exchange A and exchange B at the same time. And that's not something you really see in traditional finance.
00:53:31.830 - 00:53:52.860, Speaker D: That's true. Yeah. So I guess there is more of a probabilistic element, but like the execution of the actual strategies and the strategies themselves are still kind of unique and different sense. Any other thoughts on these questions?
00:53:57.970 - 00:54:11.080, Speaker B: We'll take one last question and if you'd like to have your question answered or addressed, feel free to share it in your chat. So we know you're not a zoom bomber who just wants to get unmuted and play bizarre music.
00:54:18.410 - 00:54:20.440, Speaker D: I guess we answered it so well.
00:54:22.590 - 00:54:54.420, Speaker B: I think people are deep in thoughts well, because the rest of the rows is all going to touch on various aspects. Well, thanks Stefan, for raising the question about ethics. Do we want to address Daniel's question? I am literally scrolling up to try to find Daniel's question.
00:54:54.870 - 00:55:15.180, Speaker D: I think it would be good. I think there are two questions here, which is like do miners deserve mev from an ethical perspective? And there was another question earlier about should l two s try to extract and allocate mev or try to minimize mev by design? And what's the tension between those things?
00:55:17.550 - 00:56:17.322, Speaker H: I'll just jump in. I mean, my personal view is mev is a sort of unintended consequence of how composability and miners interact block producers interact in Ethereum. Importantly, Ethereum has this property where it's not a single application chain, unlike Bitcoin for example, or Cosmos Hub even. I think that mev is this sort of unintended side effect. So I don't think that miners have any promise for Mev because mev was like a design wart. So I think that for me as a designer, I rather just have that be explicit in the relationship between what transactions are being sent and who's ordering those transactions.
00:56:17.386 - 00:56:17.614, Speaker F: Right.
00:56:17.652 - 00:56:23.760, Speaker H: If we're just more explicit in our design about that relationship, mev just sort of goes away.
00:56:29.910 - 00:56:36.100, Speaker D: Do you think it goes away as a quantity or as, like an ethical debate, I guess?
00:56:37.030 - 00:56:42.262, Speaker H: Yeah, we just rename it like minor reward type three.
00:56:42.316 - 00:56:42.486, Speaker E: Right.
00:56:42.508 - 00:56:53.340, Speaker H: We have transaction fees, we have block rewards, and then we would have Mev in protocol, which is basically just bad DAP designers getting punished. Right?
00:56:56.030 - 00:56:56.394, Speaker C: Yeah.
00:56:56.432 - 00:57:04.060, Speaker D: I see. So basically Mev becoming boring, I guess, would be the end state goal there.
00:57:04.610 - 00:57:06.080, Speaker H: Yeah, exactly.
00:57:07.090 - 00:57:52.522, Speaker F: Yeah. I would also say might be unpopular on this call. I'm not sure. But I think there is definitely quite a bit of space to explore how to reduce Mev patch options as well. But even stuff like just constraining the space of how miners might produce blocks, currently they have no constraints at all. They can kind of completely shuffle transactions as they want, but there would be fairly straightforward ways to say, okay, at least from the 50 or 100 transactions in a block, those need to be sorted in some way with some whatever. You take a hash of the execution of the first transaction, and then that determines the next one.
00:57:52.522 - 00:58:08.420, Speaker F: Those things will definitely not make mev go away completely. But I do think, well, it can be reduced significantly. I mean, maybe that's a meta question. If we could reduce Mev on Mainet, would we do it, or should we do it?
00:58:13.110 - 00:58:27.350, Speaker D: Curious to hear if you have any thoughts on that vitalik of, like, should we reduce Mev on main net if we could, and is that ethically worthwhile and technically feasible?
00:58:28.090 - 00:59:24.300, Speaker C: Right. I guess, let's see. I feel like the Ethereum community's general approach is that the purpose of the blockchain is to secure the blockchain. It's not to kind of give outsized revenues to miners or stakers or whoever is securing it. But at the same time, the problem with Mev as a component of security is that mev as a component of security is very volatile. And I think for security, it would be more ideal if we could have it be the same level at some consistent level, instead of it being close to zero sometimes and then really high at other times. This was kind of the same reasoning behind EIP 1559, right? Like, that the volatile component is.
00:59:26.830 - 00:59:27.194, Speaker A: Better.
00:59:27.232 - 01:00:49.560, Speaker C: For security to be stable, and so you keep the block reward, but then you take the volatile component and you just give the volatile component to basically existing ETH holders. Because at least for that kind of benefit, it doesn't really matter if it's stable or volatile because it's a long term average thing anyway. And mev feels like it's more like transaction fees in that it's very volatile. And so it feels like if we can somehow absorb more of it, then that would be better. But the challenge challenge is how to absorb it. I think if it's not possible, to the extent that it's not possible to absorb it in the protocol, it's just better to have as widely accessible means of getting it as possible, because otherwise you just create centralized intermediaries that become choke points for the system. But in terms of how to absorb it, I guess the ideas around absorbing it at layer two and kind of some of the thought from the optimism team, I think is really interesting.
01:00:49.560 - 01:01:02.540, Speaker C: But is there something equivalent at layer one? I don't see it yet, but there could be something. I don't know.
01:01:04.990 - 01:01:22.190, Speaker D: Yeah, I think that makes sense. I'm interested in seeing how the optimism folks design for things like ensuring network security with the mev and trying to accomplish regularity and things like that that seem like they're good design goals.
01:01:24.930 - 01:02:07.920, Speaker B: Well, the optimism folks shower thoughts, as I shared before, is in this slide that you guys all have access to. So feel free to leave notes and comments. And I know they have team members on this call, so leave questions for them on the side chat. I would like to give the podium to Seria, who will be presenting on Mev auction designs and will actually touch on a subset of solutions in the mev space. Seria, can you test to see if you have unmuted yourself? Clearly not.
01:02:11.410 - 01:02:12.480, Speaker A: How about now?
01:02:13.090 - 01:02:13.840, Speaker B: Great.
01:02:14.290 - 01:02:15.040, Speaker A: Perfect.
01:02:15.410 - 01:02:32.882, Speaker B: So what I'll do is that I will share screen and just let me know when you need. Yes, and also because we're running a bit overtime, so I would suggest you could keep your presentation more succinct.
01:02:33.026 - 01:02:38.520, Speaker A: Yeah, I've got a little timer going on my phone, so I'll be good on time, I think.
01:02:39.050 - 01:02:39.800, Speaker B: Amazing.
01:02:40.730 - 01:03:23.990, Speaker A: All right, cool. Hi, everybody. Yeah, so this talk really is just trying to set the stage for how to frame questions when talking about how to design an auction mechanism for Mev and just, I think, broadly trying to go over what are the relevant questions in this new domain. Next slide. So the current mempool right now really is an auction, right? So it's a combination of some kind of an English or an all pay auction where the first price, the highest one, actually wins, but everyone incurs an actual cost in terms of a transaction imagine that has actually failed. Right. So the game right now is the auctioneer, in this case is the miner.
01:03:23.990 - 01:04:30.262, Speaker A: The bidders are the bots trying to extract me, and they're really bidding for getting their transaction in the spot that's profitable for them in reference to a target transaction. Now, the issue here is that the prices are really constrained in terms of what can be actually sold right? So if you see on the right, when I'm trying to imagine backrun a transaction, I'm limited, really in how much I can bid to the gas price of my target transaction. Same with front running. I'm basically trying to guess, trying to game the system to get in the correct ordering. All right, next slide. And so really, this intros a lot of externalities in the whole system. So if I'm a miner, right, the real mev revenue I'm earning from the mempool auction is a fraction of the actual extracted values I can earn, since the pricing is severely limited in the mempool auction.
01:04:30.262 - 01:05:52.840, Speaker A: So really it becomes more profitable for miner to attempt mev extraction, which is really what we don't want. And so what we really want is to encourage Pitters, who can specialize and really optimize how to extract certain strategies and really reach this asymptotic bound of extracting the most mev that can be extracted. And so the auctions also impose these negative externalities on the actual traders themselves, right? So even though I can submit a bid in terms of the gas price, I can't really guarantee where my transaction will be placed or my target transaction will be placed. The example is whether I want to be after my target transaction. The dominant strategy is to just bid the same gas price and hope the minor orders in a way that benefits me. And lastly, I think the most important one really, is that the users themselves, who are not involved at all in mev extraction are also covering a cost here, right? Like with the transactions that succeed and fail. There's a huge bloat currently in the mempool, and this leads to increased gas prices, which are really a negative cost on everybody.
01:05:52.840 - 01:06:56.650, Speaker A: And so really, the question we have to ask is why are we even considering a superior auction mechanism, right? So the focus of this talk really is that there are protocol. I think a slide was skipped, maybe, or I might be wrong. Yeah, you're right. Sorry, I was wrong. Yeah. So really, we're trying to achieve or think about how do we achieve a superior auction mechanism that currently sits above the protocol layer. And so really the aim of this talk is talking about how do we approach the problem, how do we identify all the new constraints that mev imposes on even simple design decisions, and how can we apply existing literature to help solve this problem or at least mitigate a lot of the negative aspects of mempool auctions? Next slide.
01:06:56.650 - 01:07:53.210, Speaker A: And so here, right, we can talk about other mitigations as well. I can imagine a layer, one mitigation I can say I won't complete mem pool privacy. I can't see anything miners can't see, you know, any sort of sequencing rewards are hard to accomplish. I can think about order fairness in null one. There's a recent work by Mahimna and from Ari's Group that kind of tries to address this order fairness when you're trying to reach Byzantine agreement. And so really these layer one changes require protocol lever changes and these changes are often hard to adopt, require a lot of effort to get actually deployed, whereas an auction mechanism that sits on top of it can be deployed today and be used by miners and traders immediately. Next slide.
01:07:53.210 - 01:09:11.878, Speaker A: Right, now that we kind of have an idea that we want to achieve like a superior auction mechanism, sort of what do we have to think about? Right? So obviously we want that minor profit should be higher through an mev auction versus trying to extract themselves. Ideally, we want to make extraction by miners as unprofitable as possible. And of course we will still have miners who try to extract, but their preferred strategy in extraction should also be trying to operate within our auction mechanism itself. And finally, we want to ensure some sort of reliable winning for traders who have good extraction strategies and can really, who value like, for example, block space the most. So really we want to try to maximize bitter utility because otherwise this auction, when it becomes unreliable, there really is no incentive to strategize more to increase extraction strategy at all. And lastly, I think something new really in this area is that we have to enforce that the miners should exhibit some kind of a truth telling behavior. Like I e.
01:09:11.878 - 01:10:25.454, Speaker A: Not actually cheap the auction, right? So in most existing literature we can assume it anyway. However, like in our case, miners can conduct private deals, try to extract themselves, and we really have to develop a game that can ensure that this will not happen or at least that the auction is at least as profitable as any private action that the miner can take. Next slide. Right, so I think really to understand the existing setting and the problems, we sort of limit our discussion here to this single shot case. I think the problems and constraints are interesting enough to evaluate in this case. So really the single shot auction we have blockspace upper auction, there are a set of traders who have some private evaluations for how they view any certain transaction or extraction opportunity and there's a potentially malicious auctioneer which is the miner. Now, I will have a caveat here that there are more advanced game, more advanced game models and mechanisms like dynamic extensive games that probably better capture this sort of temporal nature of MEP auctions where preferences and strategies change over time.
01:10:25.454 - 01:11:10.060, Speaker A: Although I think for really framing the problem, they're kind of outside the scope of this talk. But we will, I think, come refer to them at the end. Yeah. And you can hit next slide. Yeah. So how do we define what a single shot auction is? Right, so really we have to answer three important questions how does somebody submit a bid? Essentially, what does it look like? And how are they submitted how do we choose then who wins? And then once we have somebody who wins, how do we choose how much they pay? And so this really defines, I think, a standard single chat auction. And we will try to evaluate all the new constraints within these three questions.
01:11:10.060 - 01:12:25.010, Speaker A: Next slide. Right, so the first constraint I think we identified in the past is we have this new concept of minor truthfulness, right? So post auction literature can assume that once we have a defined auction mechanism, at least the auctioneer, even if he tries to do something untowards, will at least even execute the auction mechanism correctly. In this setting we can't. Right? So one can imagine an untrustworthy worthy miner can make private deals, can give preferences to some traders, like in exchange for an extraction payoff. Or like even a more simple case is imagine a second price auction. The miner can just misreport the bids of other players and can arbitrarily charge whatever he wants to the winner. Right? So the issue here really comes to that high bidders cannot win with any reliably win and we still kind of end up leaving mev on the table, which is bad, right? We want to ensure that we can outsource all mev traction to these specialized traders and not the minor.
01:12:25.010 - 01:13:35.798, Speaker A: Next slide. Right, so another constraint, I think that's crucially important here is how do we deal with people who collude? I think one of our outright goals is to ensure that the minor revenue here is maximized in some way, right? So if we have collusions that can lower the actual prices that are paid, really, they end up in a case where incentives can align for miners now to leave the game altogether and attempt to extract on their own. And that again is sort of what we're trying to guard against. Right, so one can imagine in a second one can imagine in sort of a second price game strategy, right? There really is no incentive for any colluding party to deviate. I can just say that everyone will suppress their bid. The one who has the highest value can submit the highest bid. And even if I say I won't collude, I'm still competing against the exact same highest bid and I really don't gain anything from not taking part in this collusion.
01:13:35.798 - 01:14:54.674, Speaker A: And so really, when we see this case where bidders can specialize towards extracting in certain opportunities, collusion actually becomes more important when we reason about games over time, right? So if a certain opportunity will favor me, everyone helps me out next time I can help someone else out. And really we lower everyone's prices and still extract our same value, hurting the minor event in the end. Next slide. And so really the first question we have to ask ourselves in this simple single auction setting, really is how can we choose how we bid right? Now, imagine in the current setting we have everyone will submit. A submit the bids and the transaction they're trying to get placed around in the public. So now if we care about a malicious miner who can try to alter the game or manipulate bids, having everything out in the open, we can clearly see when a miner is trying to deviate from the prescribed game. Also including bidders in first price auctions, which are closely related to what happened right now.
01:14:54.674 - 01:15:38.420, Speaker A: And then menpool had really little incentive to not deviate from any kind of coalition. And the reason is that they stand to actually win an auction. Otherwise. The downside here is that the actual bots themselves, the debates and the strategies they use are really the bid. Strategies they use are important in terms of actually expressing their extraction strategies and they don't want to reveal them even to the miner because that can put negative pressure on trying to specialize and then again leaves mev on the table. And so in this case, actually end up in a case where the bots end up placing a greater emphasis on strategic biding rather than actually extraction strategies. And that can actually be a centralizing force against new bots who want to enter the market.
01:15:38.420 - 01:16:35.700, Speaker A: Next slide. Now, we can say sealed or unsealed. Fine, although that really still is not answering the question of how do we prevent coalitions, right? You also have to consider how we choose our pricing rule. Like if it happens that our pricing rule benefits coalitions, then this lower minor value really exacerbates the bad incentives for miners to extract themselves and make private deals. So, as we saw in the first price auction, really coalitions are weak and the incentives to deviate and defeat them are high because everyone lowers their bids. And so an aggressive bidder who otherwise could not win any auction now has a chance to win. And so in this second price, as in the example above, coalitions can succeed and they can lower the clearing price even when the coalition cannot control the actions of all of its members.
01:16:35.700 - 01:17:47.530, Speaker A: Next slide. And so even if we see in this first price pricing rule, we would like to have the great truth telling dominant properties of second price. So everyone is not going to waste time just computing how to bid strategically, but can actually focus on bidding or extraction strategies and always bid your real valuation. So these properties are nice, but without coalition resistance, we still risk this minor revenue and that they deviate from the auction. And we really have to ask ourselves, can we enjoy these nice properties of second pricing and still stop colluding bidders or at least try to minimize their gains? Next slide. So here we come to how do we choose who actually wins the auctions. Now, there is existing literature called a deferred acceptance auction, right, where miners kind of greedily remove the smallest sorry, the lowest actual traders and then they eventually choose, yeah, sorry, that's my internal timer for the thing.
01:17:47.530 - 01:18:59.386, Speaker A: So they use a pity algorithm to actually choose who wins. And it turns out in this case that it's still a sealed deduction. The pricing rule is the exact same as second price and coalitions are actually going to be thwarted by this greedy selection algorithm, and we still retain this truth telling dominance strategy now we still care about malicious miners. And this new deferred acceptance auctions will actually impose some extra constraints because of how preferences are exhibited. But this remains a promising direction for future research, trying to decide how selecting or what algorithms to select winners can actually root out coalitions altogether and still keep these great properties. Next slide. Right, so looking ahead, really, we've kind of gone through, right? How do we choose who wins, how do we choose the actual submission and how do we choose the pricing rule? And really how they interact with these new problems of minor manipulation, of trying to making sure that bidding strategies are not revealed to copybox who can easily start competition with the same extraction bundles.
01:18:59.386 - 01:19:49.490, Speaker A: And so really, there is new pacers coming out that sort of models games, online games, as more temporal in nature, and they do address problems like auctioneer, like malicious auctioneer and collusion resistance. However, our next challenge, now that we've kind of framed all the agents in this system, and how to really think about even simple choices of how to choose these pricing rules, winner selection. I think the next challenge is really spending our single shot game to try to evaluate dynamic games and see where we can use existing literature of DaaS of manipulation algorithms to satisfy our new mev auction constraints.
01:19:52.950 - 01:20:42.814, Speaker B: All right, I believe this is the end of Seria's presentation, and since we are running over time, we will take one question from the audience. You can type up your question, or we could pick one that's already been mentioned. So there's a comment that credible mechanism design is a good keyword. Seria, you want to share something on this? Alex, I believe you are the host, so I can't unmute anyone. Seria and Dan Morose and Rick Dudley.
01:20:42.862 - 01:20:50.706, Speaker D: Everyone should just also unmute themselves, client side with the zoom mixer, if possible, once you're unmuted.
01:20:50.818 - 01:22:03.638, Speaker A: Yeah, I saw someone talk about cuttable auctions. Actually, that's the exact paper I'm referencing here. And they sort of try to model these online games when the auctioneer is no longer considered honest. And so in their game, actually, I think they arrive at a conclusion that the first price yield bid is the only credible auction. Although I think I still have to go put in, I think, some more work in trying to evaluate exactly the assumptions in that model. I think there's a few facts of the crypto space that change what we can say about the distribution of the valuations of the bidders, right? Like when we no longer have budget constraints, for example, when anyone can use a flash flow and how does that affect what assumptions can be made and sort of that would greatly impact the results of these existing mechanisms, even credible auctions. So yeah, I think that is a very promising direction, that paper, but it requires, I think, on my side at least a little bit more research and then I think more sophisticatedly comment on exactly where it succeeds and fails in the nev setting.
01:22:03.638 - 01:22:18.900, Speaker A: Although I would recommend anybody who's interested in this research to look at credible auctions, to look at dynamic online auctions. And I think hopefully this talk helped you frame the problem and helps at least deliver some insight on where to look and how to solve these questions.
01:22:21.270 - 01:22:36.200, Speaker B: We have a comment in chat about assuming bidders to be hyper rational traders. In practice they just care about certain guarantees on UX. Would they prefer a private channel that provides these guarantees in this mev extraction, perhaps? Phil, would you like to comment on this?
01:22:49.150 - 01:22:52.780, Speaker D: I would like to, but I can't. All right, there we go. Can you guys hear me?
01:22:58.830 - 01:23:00.460, Speaker B: Yes, we can hear you.
01:23:04.690 - 01:24:08.100, Speaker D: I think we're just assuming that we have a competitive marketplace here and that there are kind of hyper rational traders and bots in terms of users. I think they care about different things and two different extents. I think they definitely care about their UX the most, but they also care about things like the price they're getting and whether they perceive the venue they're trading in as fair. So there's different levels of kind of how violated I would imagine a user feels by mev. Like if, let's say, you know, you get 5% worse execution anytime you trade a small token because some bot is going to make profit off of you, that may be kind of problematic, but not the end of the world. You may accept that and it may be a bad UX, but you might still trade there and it might still give you a lot of other UX properties you want. On the other hand, if the bots make your transactions fail, that's like another level of bad UX where it's unfair and you're not getting what you want at all.
01:24:08.100 - 01:24:25.210, Speaker D: So I think there's like a very complex kind of set of user preferences and bitter preferences and kind of managing them all seems like a very hard problem. And I know that's probably not answering the question, but those are my thoughts.
01:24:27.150 - 01:24:34.378, Speaker B: Great. So I will be the sequencer here and propose that we move to the next talk.
01:24:34.464 - 01:24:38.560, Speaker A: Yeah, I'll answer it in the chat more. I think I have some comments, although I'll include them the in chat instead.
01:24:40.290 - 01:25:24.140, Speaker B: Great, so the next talk, what we have is going to be from Robert Miller who will be presenting a seal bid mev auction on mev SGX. And I saw that there are questions in the chat about why this is relevant for anyone who is an mev searcher or a participant in the current flashbox market. Perhaps, Robert, I will first unmute you, and you could maybe just give a TLDR. There you go.
01:25:27.660 - 01:25:36.090, Speaker F: Hey. Yeah, thank you. And it would be appreciated if I could share my screen, too. Some of the animations break.
01:25:37.980 - 01:25:50.910, Speaker B: If someone can instruct me on or take away my hosting right. And then give it to Robert Miller would be great. Alex, would you be able to do that?
01:25:53.140 - 01:26:00.736, Speaker A: I think if you stop sharing, Tina. And then Alex can make Robert a co host. He can also there you go.
01:26:00.838 - 01:26:02.770, Speaker F: Can you see my screens now?
01:26:03.620 - 01:26:04.140, Speaker D: Yes.
01:26:04.230 - 01:26:04.964, Speaker B: Perfect.
01:26:05.162 - 01:26:10.150, Speaker F: And Steph, are you also here?
01:26:11.400 - 01:26:15.700, Speaker B: Yes. Stefan needs to be unmuted. Alex.
01:26:23.890 - 01:26:27.150, Speaker D: I feel like we're communicating by group phonographs.
01:26:27.890 - 01:26:36.754, Speaker B: Yeah. So, Alex, if you can unmute Stefan, the Go step would be great. If not, we can just go ahead.
01:26:36.952 - 01:26:39.620, Speaker A: Only you, Tina, can unmute right now.
01:26:40.790 - 01:27:36.114, Speaker F: Okay, well, maybe that'll happen, maybe it won't. So thanks everybody, for being here. I'm Robert Miller, co presenting with Steph. We're talking about our implementation of a sealed bid auction design for mev, and this is called Mev SGX. Today, I'll walk you through what this looks like step by step, and if you're interested in this, we'll have a spec that comes out pretty soon. And just a quick shout out to all of the people that have helped SGX to date, a couple of the names there, and then a list that's much more long than this and couldn't fit on one slide. And then a note that some of the animations I made for this presentation break on Google Slides, and they work better on PowerPoint, so if you're interested, please download it.
01:27:36.114 - 01:28:13.954, Speaker F: And you can see the animations there. And this is what the agenda looks like for today. So we'll start with the design goals of Flashbots. We will then talk about Mev SGX at a high level review ysgx, look at some of the problems being solved, and I think this will answer the question that was raised by a searcher in the chat, which is why I deferred it. And then I'll walk you through the actual implementation, step by step. We'll end with area. Somebody has a ton of background noise, so can you client side mute yourself or one of the hosts, figure that.
01:28:13.992 - 01:28:14.580, Speaker A: Out.
01:28:16.310 - 01:28:18.260, Speaker F: And then do some Q A?
01:28:21.590 - 01:28:23.250, Speaker B: All right, let's proceed.
01:28:23.590 - 01:28:55.114, Speaker F: Okay, great. So these are the high level design goals of Flashbots. Currently, we have implemented Mev guests alpha. These goals are that we want a permissionless system, so that implies there's no trusted intermediary that can censor transactions. It should be efficient such that mev extraction is performed without causing unnecessary network or chain congestion. And note that efficiency matters for everybody in the ecosystem. It's not just bots.
01:28:55.114 - 01:29:39.478, Speaker F: And the negative externalities of inefficient block space auctions are borne by users in the form of higher gas fees. We want pretrade privacy such that transactions are only publicly known after they've been included in a block. And note that this doesn't exclude privileged actors such as transaction aggregators, gateways or miners. We want failed trade privacy such that losing bids when they are included in the block and thus exposed to the public. And this is pretty tightly coupled with extraction efficiency. And three of these first four have been achieved in Mev Gath Alpha. But we're still missing permissionlessness, complete privacy, and finality.
01:29:39.478 - 01:30:42.830, Speaker F: And two of these permissionlessness and Complete privacy are going to be achieved in our implementation of Mev SGX, and in particular, moving down this list. Complete privacy means that there are no privilege actors, such as a Miner, or a relay or gateway that could observe incoming transactions. And lastly, still a lot of interesting ongoing research on this, but finality implies that it's infeasible for mev extraction to be reversed once included in a block. So that would protect against time Bannet reorg attacks. So what is Mev sux? Mev Sux is our implementation, an MVP that allows bundles that are private to the Miner until they're mined. And it's an implementation of a sealed bid auction, whereby bidders or searchers submit bids simultaneously, and no bidder knows the bid of other participants. In addition, the auctioneer or the Miner doesn't know the bids of the bidder.
01:30:42.830 - 01:31:37.618, Speaker F: And the reason why this is desirable, as I think you'll see through the presentation, is it helps us achieve the goals of a more fair ecosystem by removing trust from the extraction of mev, it makes a more efficient auction mechanism for mev extraction, and it should provide more clear guarantees on execution for searchers. And in turn, this will lower the barriers for new searchers. It should raise minor revenue and reduce negative externalities of mev extraction today. And also I'd note that this can be used for non bought purposes too. So why SGX? SGX stands for Software Guard Extensions. It's an intel product. It can be thought of for purposes as secure hardware, whereby code that is run inside of this piece of hardware is protected from processes that are outside of it.
01:31:37.618 - 01:32:52.154, Speaker F: So in other words, even if you have physical custody of an SGX, then theoretically you shouldn't be able to look inside of what's going on inside of it, and you shouldn't be able to tamper with the code that's running in an SGX too. And two super important features for us are that it's possible to verify that another party is running an SGX, or more accurately, it's possible for us to verify that intel has verified that another party is running an SGX, and we can verify that specific software is running within SGX. And because we can know that specific software is running an SGX, if all parties involved in an ecosystem agree on that implementation of the software, then you get these Verifiable compute guarantees. And coupled with privacy, that's what provides us the tools to achieve the two design goals that we reviewed of permissionlessness as well as complete privacy. And lastly, we can do this relatively soon. It doesn't require a protocol change and that's obviously very desirable. So I want to talk about what the happy path would look like in a very simple form and lay out the actors sort of what they're doing here.
01:32:52.154 - 01:33:47.706, Speaker F: This may be a review for many of you on the call. So first we have a searcher which is a user that's sending transactions through Flashpots infrastructure and we call transactions submitted to Flashpots bundles. So those include one or several transactions from the searcher or other users and other users pending transactions. And this also includes a sealed bid that is paid by the searcher to the Miner. And the searcher has some sort of opportunity and they send that on to the Miner who in an ideal state would go ahead and that into a block. And by this being included in a block, the searcher extracts some mee and the searcher pays a bid to the Miner. Everybody's happy here, but there are some problems with this.
01:33:47.706 - 01:34:50.926, Speaker F: This is obviously simplified. So today we can't let searchers directly interface with Miners because the searcher can just send a huge number of different bundles to developer spam them. Again, there's somebody typing in the background, if you don't mind, Muting. So we solved this today by introducing the Searcher and the Miner such that searchers can only send up to 60 bundles per minute and after that they're rate limited. And this is one of the ways that we're going to use SGX to enable permissionlessness by disintermediating this relay. And I would note that this is like technically permissionless on the searcher side because you only need an Ethereum private key, any ethereum private key, to start sending signals to the relay. And then two other ways in which any of the SGX is solving problems.
01:34:50.926 - 01:35:33.440, Speaker F: I'll run you through two situations here. The first problem is that the auctioneer isn't trustworthy. They also have skin in his name. So the Searcher could send a bundle to the Miner sitting in the middle here. And the Miner, since this isn't really a sealed auction, could take that searcher's bundle, open it up here inside of it and steal it for themselves, censor the searcher's transaction or simply outbid them and have the Miner's bundle included in the block. So the Miner would extract all of this mev. And obviously the Searcher is not happy about that and we aren't either.
01:35:33.440 - 01:36:57.570, Speaker F: In a second case, one set of searchers could send bundles to the Miner who establishes a backdoor communication channel with other searchers. So searcher number one's bundle here is at the Miner. And searcher number two has some sort of proprietary access for information flow. Searcher number two gets searcher number one's bundle, is able to peer inside of it and either outbid them on a different med extraction opportunity or they could do the same thing the Miner did before and replace their transaction, forward it onto the Miner and capture that mev themselves. These are a couple of different places where there are problems that we think we can address with Mev SGX. And what is that exactly? First, I'll run you through this simplified case of where there's one relay and one Miner, and the first thing that happens is the relay and the Miner need to discover each other and they perform a handshake to ensure that the relay knows the Miner is running an SGX with mev SGX inside of it. So that if it gives it a set of inputs, you should expect it to reliably perform a certain set of actions and give a certain set of outputs.
01:36:57.570 - 01:38:23.198, Speaker F: And the Miner is also checking if the relay is running SGX and Mebsgx inside of that, you start both performing this handshake and in a slight variant of this you could also have the searchers checking the Miner and the relays SGX too. And I couldn't decide which of these means to include, so you will get both of them. We'll move on to the case where a searcher is submitting bundles to a relay, and then we'll talk about the case where a searcher is submitting bundles directly to the Miner. So if a searcher is submitting bundles to the relay, their bundles go to the relay who selects the most profitable bundle. And using that most profitable bundle, they generate a block and some information about that block that is important. That block with the bundle included in it gets passed to the relays SGX where it performs this super important set of checks, that the block was constructed in a valid way, and that it is more profitable to mine this block than a vanilla get. And again, SGX gives us these guarantees as long as it hasn't been broken that code that is being run in SGX, you can verify what particular set of code is running in an SGX.
01:38:23.198 - 01:39:14.174, Speaker F: Miner knows if checks that they're getting valid and profitable. And we will implement within mev SGX that the relay will only send blocks onto the Miner if these two checks have been met. So the relay's SGX performs these checks and it takes the block with a bundle included in it, it encrypts it using the Miner's SGX's public key and it also generates this block hash. And encrypted block goes to the Miner where it's sent to the SGX. And the block hash doesn't need to go in the SGX because it doesn't reveal any information about the transactions. And note it's. At this point the Miner has no access to the underlying transactions in the block.
01:39:14.174 - 01:40:09.314, Speaker F: It's encrypted in an SGX where they can't see it. And so this is helping us achieve that design goal of complete privacy to loop back. And all they have outside of the SGX is the block hash, which very conveniently, they can use to verify that the block was constructed in a valid way. The Miner does that, ensures that the block that they have is valid, and then they send on the block hash which can be used within work. So they request proof of work from their miners, from their workers rather, and they return a proof of work solution. And with this proof of work solution, mev SGX fakes it. And only if provided that proof of work solution will it allow the Miner to decrypt the full block and export it outside of their SGX.
01:40:09.314 - 01:41:15.690, Speaker F: So at this point they've provided the proof of work solution and the Miner can take the full block with decrypted transactions and propagate it to the network. Okay, so that's how mev SGX works. In the case of searcher and relay being different, there's a variant of this where the searcher is running mev SGX themselves, and they would be doing this because they don't want to have the intermediary of a relay. And in this case the searcher is finding mev opportunities on their local infrastructure. They would be generating the block themselves and performing all the steps that the relay did before. And I would note that this is also helping us achieve that design goal of permissionlessness, because we can implement within the SGX a check for how many bundles that the searcher is sending any given time. We can do our rate limiting right here in the SGX with trust guarantees from SGX.
01:41:15.690 - 01:42:15.146, Speaker F: And the one thing that is a big difference in this case is the auction, instead of taking on the relay side box on the left, would be taking place within the miners SGX as it would need to collate. A bunch of different bundles encrypted blocks with bundles in it from different searchers and make decisions about which of those to perform proof of work on the block. Hash off. And I would note we have this flow diagram that may be helpful in thinking about these steps. I know there's not very much text on the screen and then towards the end of the deck there's a list of concrete steps with the input and the output. I won't walk through each of these steps again, it'd be very repetitive, so I'm just going to continue and you can refer to that maybe in questions. And last I want to address what happens if the SGX breaks.
01:42:15.146 - 01:43:28.870, Speaker F: And it's important to acknowledge this could happen. Vulnerabilities do exist, and theoretically there should be some sort of economic cost, some amount of money, and find a vulnerability. First thing to note is that most of the stack can be patched, including crescent enclaves in the microcode, so that's good. And then we're exploring tools that would allow us to diversify to multiple forms of secure hardware in the future. So maybe we have mev SGX and mev AMD Sev or other forms of trusted hardware and diversify in that way, and I'll walk you through what happens when the major parties breaks SVX. If it's the searcher, the threat really is that in this case where you are checking to see if someone is sending a valid bundle or like rate limiting them, they could send you invalid bundles or they could spam the minor. And the mitigation for this is that you check for block validity on the minor side and if it's a spam attack, then you could just fall back to the status quo with trusted relays or vanilla gas.
01:43:28.870 - 01:44:33.100, Speaker F: It's a little bit more tricky with the Miner. Their threat is that you are unsealing the auction in and looking at the bundles and transactions that searchers have sent you. And it's more difficult for searchers to find out if the Miner has broken their SGX than it is if the searcher has broken the SGX. So the Miner can tell if the searcher has broken into their SGX because they're submitting invalid blocks like spamming them out. But the searcher has a much more difficult time telling whether the Miner has broken the SGX. You have to infer it from actions on chain, but a potential mitigation for that would be using Threshold Encryption committees. So you give some Threshold encryption key out to a bunch of miners that are running mevsgx and only when N of M of them share their key can you decrypt a block or some scheme in this way.
01:44:33.100 - 01:44:56.340, Speaker F: So with that, we have these future areas of exploration in our treasure map, I think. Starting with the question from the roastmaster, are there alternatives to trusted hardware for ensuring privacy and fairness? I'd be really interested to hear the community's thoughts and any questions you have.
01:44:59.990 - 01:45:06.302, Speaker B: Yeah, we'd love to have the roast master vitalik. Hope you haven't fallen asleep.
01:45:06.446 - 01:45:11.046, Speaker A: I have, I'm awake to give some.
01:45:11.068 - 01:45:30.460, Speaker B: Context to this question and also the roast, if not for today's. Zoom bombing is meant to be an open forum for everyone to speak up, so there's lively discussions. So feel free to point to the discussions in the chat and as we dive into this part of the roast of Q questions.
01:45:31.090 - 01:46:49.970, Speaker C: Yeah, okay. So the idea behind the question is basically that these mechanisms squarely depend on trusted hardware pretty closely because of how the block is only decrypted once it was actually created by the Miner and it kind of passes, it basically comes with A. And so the question is, are there ways to achieve these same goals without relying on trusted hardware? And also one fine point about proof of stake, right, is that this concept of once you've created the block you can decrypt, it doesn't really work as well in a proof of state context. Because basically after you've decrypted a block in a proof of state context, if you want to go make a modification, you can. So the question is, one is how would the scheme be modified to survive that particular change? And the second is just can we use cryptography instead of trusted hardware? Like obviously we can use ZGS narcs. Are there other things that we can use? Does trusted hardware seem like necessary for this sort of thing?
01:46:53.860 - 01:47:53.830, Speaker D: So I think we did have a I want to let other people on the call speak, but just briefly, I think we did have a roast a while back where we looked at this question of kind of can we use other things? Ideally, I would love to use a magical MPC abstraction I guess is the best thing here. Or you can probably even do it with sufficiently powerful zero knowledge proofs or something like that. I haven't thought through the full design, but I assume that's powerful enough. But I think that the main fly in the Ointment is just that latency matters a lot here and so proof generation time is like an unacceptable penalty. And so I think that's one of the things we still want to research is quantify because definitely also the VM matters. So the fact that we need to do this on ETH in general for ETH l one, it makes things much harder than if it were a VM that were specially designed to have MPC or proofs over it and kind of tailored for that. Right, of course.
01:47:53.830 - 01:48:47.824, Speaker D: So I guess one question is if we build from scratch the most optimal system using only, let's say, MPC or zero knowledge proofs or whatever other primitives, what's the latency we can achieve and is that good enough? I think that's an open research question. And the other question I have is like, economic space. So I think a lot of this kind of stuff you can get around with networks of trust and bonding people to basically wager on. Like, I believe this hash is valid because I've seen it and Searcher trusts me to maintain their privacy and the Miner trusts me to wager on validity and I will be like the kind of interface, the privacy interface between these two people. That makes sense. Those designs seem are definitely possible. And I guess the question that we have is for the community and I think we somehow need to get the whole community involved.
01:48:47.824 - 01:49:07.980, Speaker D: Is that preferred? Because there's also some downsides, especially in that model. There's a little bit of a more explicit trust network which maybe could be bad for, I don't know, democratization if you need to have, let's say, huge bonds to participate in this network or like very long standing reputation.
01:49:08.320 - 01:49:58.860, Speaker C: Right. I was just actually going to mention fraud proofs as an alternative to Snarks. Like you could do something where the block is encrypted and then there's a time lock mechanism and then there's a claim that you can fraud proof against sometime after the fact. I guess my concern about whether or not trusted hardware is an okay assumption is that it's an okay assumption for environments where if it breaks, you can quickly coordinate. Away from it, but making it a kind of day quasi layer one, de facto dependency is more risky, especially since if we start going into the account abstraction discussion, then mev becomes like instead of being a niche optimization, it becomes the thing that people rely on in order to get their transactions.
01:50:03.840 - 01:51:07.296, Speaker H: I actually just a couple of days ago, based on some conversations I was having with some people in the space, drafted one of these. It sort of uses everything that Vitalik and Phil just talked about. It's an interactive protocol between a super bundler and I call them a meta bundler. I think that you can use basically like a partial block witness to provide privacy to the person. Because I think one of the essential things that's a little confusing to me about mev extraction at the moment is I believe that there's certain situations where I'm not sure about this, but I'm proposing that anytime you extract mev. Even though there's these race conditions where there's just money up for grabs and anyone could take it. You could construct your transaction such that only you could execute it.
01:51:07.296 - 01:51:38.904, Speaker H: And so if you don't reveal that transaction, if you only reveal that transaction to a bonded party, you can basically show them the partially constructed block where they get paid before you show them the transaction that they could replicate. You can basically do this interactive game to replace the ZKP. And it would potentially be actually faster depending on networking versus cryptography.
01:51:38.952 - 01:51:39.550, Speaker A: Right?
01:52:06.860 - 01:53:23.330, Speaker D: Oh, yeah, I've been unmuted great. Yeah, I think that's super interesting and I think I agree with Vitalik a lot. So I think my theory is that and maybe I'm wrong, I would love some pushback on this. But it seems like if you're willing to accept SGX and if kind of the bots and the searchers and the miners specifically are, they get all the kind of technical latency properties they want plus the privacy properties and the spam resistance properties they want. If this were to break without any kind of mitigations or fallback, let's assume that we solve the minor peaking problem because I think that's like a more specific technical problem and the consequence of it breaking is just basically flash bots goes down and gets Dos. In that scenario, is it critical infrastructure or not? If it kind of falls back to the mempool status quo past that point, I think there could be arguments on either side of the equation depending on how technically entrenched this becomes, that, yes, it is critical infrastructure because now without any mev being extracted, things become unstable and open certain new attacks. Or you could say like, no, it's not critical infrastructure because we kind of degrade to the PGA status quo and there's still infrastructure to handle that.
01:53:23.330 - 01:54:08.156, Speaker D: I think possibly one really practical thing that could be done is to just build multiple trust. So have the alternative of using SGX versus using the bond and then let certain miners decide. I want to accept bundles either that have an SGX proof or that are bonded with at least x e by this set of parties or something like that. Like a more trusted kind of network. I wonder. It seems like that is preferable for technical resilience and it seems like if SGX breaks then there's a little bit more of a backstop in this trusted network. I just worry about constructing it in a way that doesn't lead to weird oligopolies or something like that.
01:54:08.156 - 01:54:11.928, Speaker D: Especially when you have proof of stake and these massive whales.
01:54:12.104 - 01:54:20.800, Speaker C: Right. One thing to keep in mind also is that with proof of stake every validator will have a 32 weeks deposited. So you can dual use that as the bunch for a fraud proof.
01:54:24.340 - 01:54:34.260, Speaker E: I think it's the problem that's interesting SGX can fail silently though, that someone can break an SGX and be extracting this value and no one knows.
01:54:37.800 - 01:55:15.040, Speaker D: Yeah, so I'm like hand waving away that break of SGX, which is like the Miner breaks SGX and they decrypt early and only talking about the searcher breaks SGX and they dos because we probably could add more of a backstop against the Miner decrypting early by involving multiple miners or a committee or having another economic mechanism. But I think the spam control problem is fundamentally much harder to work around the break. But it is falsifiable, which is nice. If it breaks, each miner can only basically be taken advantage of for one block because afterwards they have proof that it broke.
01:55:17.700 - 01:55:25.172, Speaker E: Sorry, I actually don't understand how do we get around an SGX breaks and everything failing silently like sorry, the minor breaking SGX, I feel like that's the main threat model.
01:55:25.226 - 01:55:25.830, Speaker A: Right?
01:55:26.440 - 01:55:31.464, Speaker E: Or maybe not the main, but this is an important threat model because the cost of SGX break is probably much.
01:55:31.502 - 01:55:34.120, Speaker A: Less than maybe extractable by a minor.
01:55:35.260 - 01:56:13.510, Speaker D: Yeah, so you could get around it by having, let's say, multiple miners required to do the decryption like a committee or having a separate flashbots committee that someone who's invested in the external network or something also has to participate. I just think there's more of a design space there that the decryption hatch, we can put it in anyone's hands or any set of parties hands, that it's much more flexible than objectively the break in kind of the spam control. But maybe I'm thinking about it wrong and maybe that's not the case.
01:56:14.600 - 01:56:15.764, Speaker C: I feel like if you start doing.
01:56:15.802 - 01:56:35.800, Speaker E: Things like this where you have a threshold committee within the SGX that you encrypt to, then you start getting to latency, the trade off space becomes more notable. It's not such a clear drop in use case in the current ETH.
01:56:38.240 - 01:56:51.890, Speaker D: Yeah, I think there's definitely trade offs, but there is also, I don't know, somewhat more we can work with it seems like than the spam control. We are really kind of relying on SGX in this kind of design.
01:56:55.160 - 01:56:55.764, Speaker F: True.
01:56:55.882 - 01:57:27.914, Speaker D: Maybe that can also be layered with bonding. I don't know. Anyway, we're somewhat at time. Do we want to take more questions? What's the agenda? Tina, I guess. Nice. Tina cannot unmute herself, I fear.
01:57:27.982 - 01:57:31.510, Speaker A: Yeah, I was going to say I think she might have muted herself.
01:57:34.810 - 01:57:45.900, Speaker D: Yeah, I guess. One other thing we wanted to talk about, maybe I can touch on quickly if people are still kind of around and want to stay on the call. I know we are at time and thanks everyone.
01:57:46.590 - 01:57:48.830, Speaker E: Tina should be unmuted.
01:57:49.410 - 01:58:02.050, Speaker D: Great. I was just going to talk about account abstraction really quickly because I have a few thoughts, but feel free to drop off everyone if you have other commitments.
01:58:02.470 - 01:58:30.380, Speaker B: Yeah. Thank you guys for bearing with this Russian roulette host co host situation. And we're going to be continuing the discussion here and the next topic will be on account abstraction. And here are the slides with the links that you can find in the agenda that references in particular Vitalik's Proposal. Sorry, Phil. Go ahead.
01:58:32.350 - 01:58:32.714, Speaker E: Yeah.
01:58:32.752 - 02:00:07.560, Speaker D: So I was basically going to say my two second kind of thoughts on Vitalik's proposal, which is that I think it's a proposal that makes a lot of sense and definitely is feasible and should be pretty much feasible. With today's Flashbots infrastructure plus kind of one piece that we are working on, which really would make it kind of plug and play, which is this idea of combining multiple bundles. So I think in general, this is something we're going to probably need to even do a separate roast on. I think it's a super interesting subject, but generally the question is now that we have Flashbots, each bundle is basically a secret kind of order bid. We want to be able to include multiple of these bids that are kind of compatible with each other, which if we want to kind of use Flashbots for this use case, would be necessary to include multiple transactions in a block without kind of having it pre bundled. So that piece is the key missing component. And in general, it relates to this research question of if you have all these orders with private information and a mix of kind of private and public information, how do you optimize across kind of the secret information you have or possibly the complex kind of execution optimization environment you have? Sorry, there's like a helicopter flying over me right now.
02:00:07.560 - 02:00:47.560, Speaker D: So how do you kind of look at these bids and choose the maximum compatible set? It's kind of a generalization of the knapsack problem in a similar way to the kind of ETH mempool auction, but it's even less friendly because in many ways a lot of things are private or have no cost for failure. Those are kind of the two challenging characteristics. So I think that is a piece we need to kind of work out, but once we have that, all of this should be plug and play in the way the kind of E three search post followed up on making it happen. I don't know if that makes sense or if other people have thoughts on this.
02:00:54.740 - 02:01:00.950, Speaker A: Hold on, I'm still sort of looking through just almost done with this. The post, I haven't actually read it yet.
02:01:04.440 - 02:01:14.570, Speaker B: Well, we'd love to hear if Vitalik is still on the call in response to Phil's share of thoughts here.
02:01:16.220 - 02:01:56.564, Speaker C: I'm definitely happy that it seems possible to implement with just a little bit of extra work. No other thoughts other than just it would be nice to see it actually happen. So one thing that I wanted to briefly mention in that context is that I think maybe it will make sense to kind of at least initially approach it as a bit of just a heterogeneous kind of space where you might not kind of be necessary to mix this kind of account abstraction angle with the kind of the private information bit.
02:01:56.602 - 02:01:56.756, Speaker E: Right?
02:01:56.778 - 02:02:29.250, Speaker C: So you could kind of initially at least do this other than the public. I mean, of course, unless there's a transaction that wants to use this pseudo account abstraction but also actually extract mev in private. But otherwise I feel like because it's different from other mev, it's kind of like very predictable it's kind of like specifically kind of offering a very kind of predictable piece of mev just as a vehicle to be included. So I think it might just be simpler to kind of keep that out of the whole private information design space.
02:02:31.060 - 02:03:40.000, Speaker D: Yeah, that could be. I guess it depends how simple it becomes or exactly where the mev comes from. I do think there are a certain class of transactions where you want to bound the mev that a miner gets by kind of information asymmetry and not technologically. So one example is when you're rescuing NFTs, if you're making NFTs from a known public key that are worth a lot of money, you might want to in that case be able to bound the mev to the miner outside of just what you can do with slippage limits or something like that. So I don't know how common those cases are in the broader design space of DApps and DeFi, but there does seem to be some difference. But I do agree. I think a network and I think other services, like any dot sender and other kind of metatransaction services could play in there, like a network of kind of carriers that you could send these account abstraction orders on that would kind of automatically wrap them and pay the fee associated.
02:03:40.000 - 02:03:49.850, Speaker D: Could work. And I think you could use flashbots it's the right level of abstraction to do it. I think also but I do agree.
02:03:51.180 - 02:05:07.330, Speaker C: No, I just want to say on a meta observation here or something, I think that mev kind of just happens to be the most kind of valuable use case for, let's say, sophisticated mempool alternatives or something, right? But maybe it's actually the way to think about it could just be like once we have sophisticated mempools, what else can we do with that? And so maybe kind of this might be like a whole different class even of things potentially. And it has its own kind of trade off space where, for example, back when we did the cloud abstraction ERP to bring it natively to the protocol, we spent a lot of time thinking about how can we make it very predictable for miners? Again, those were kind of thought of as the non sophisticated participants in the network. So kind of like, how can we completely remove all the overhead of trying to understand under which conditions the transaction pays or that does not pay, and so on. So maybe basically for this use case, there's a very different trade off space because it's easier to understand those they don't have to be private and so on. I think of it more as like once we have a sophisticated mempool, what other interesting things can we do with it?
02:05:07.940 - 02:05:24.360, Speaker H: I just like to point out, while you're thinking about that, or while people are thinking about your question, that we're basically talking about separating ordering from execution in a decentralized or bottom up manner. Right, because that's effectively what's happening in these private mem pools.
02:05:30.780 - 02:06:16.128, Speaker D: Yeah, I think that makes sense. Deep things to think about. So yeah, I think from our perspective, we definitely want to pursue all this infrastructure anyway in the near term, so we should kind of close this loop. I think the front end infrastructure for gasless transactions kind of needs to happen anyway. And on the back end they'll technically work with Flashbots today. They just won't be mined very quickly because they're competing with more profitable things. And that's kind of the UX problem that we'd need to solve for this kind of auction.
02:06:16.128 - 02:06:22.820, Speaker D: But there is also a more general kind of sophisticated mempool auction space, I think that is worth exploring.
02:06:26.800 - 02:06:45.010, Speaker B: I think in this context, a couple co authors of the EIPS that are associated with account abstraction versus the Flashbots approach or it will be interesting to hear how they could coexist and what it could be like.
02:06:47.140 - 02:08:20.524, Speaker C: Yeah. So I think the goal of the EIPS is to try to make changes to the base protocol, to make it possible for the existing Mempools to be able to safely process transactions that originate from smart contracts. Whereas the flashbots approach seems to be more in the direction of have much more freedom for what transactions can do and much less structure. And just assume that there's some set of participants that have the ability to deal with that much less structured environment and come up with block proposals in a way that's resistant to them getting dos attacked. So they're working towards the same problem, but they're also kind of different approaches and there's possibly paths that are in the middle as well, right? Like there's possibly changes that the Ethereum protocol could make that would make it easier for a Flashbot like system to be able to prioritize between these transactions with less computational complexity or whatever. I think one reason why I'm interested in the Flashbots approach in addition to the Ethereum protocol approach is just that Ethereum protocol space is busy. Lots of people wants to get to the merge, lots of people wants to solve statelessness.
02:08:20.524 - 02:09:33.200, Speaker C: There's a lot of various things that are high priorities and that people wants to really get done. And so it is fair, we can't just kind of assume that, hey, this is a good idea and so we're going to get it in six months because it might end up taking two and a half years. Whereas if it's done sort of further away from ethereum core developments then a completely separate group of people from the core devs can just kind of do the work and deploy it in parallel to all the other stuff and so it might be able to actually have things like a smart contract wallets work more quickly. One question that I would tap there is I personally see two kind of approaches to bootstrap this in this specific context of account obstruction. The first one would be to kind of wait for Flashpots to kind of have a really sophisticated system in place that can deal with, as you were saying, these much less structured transactions, and then just start having rudimental. Support in smart contracts and then leave it up to the Flashbot system to figure that out. Basically so bootstrap over the sophistication that Flashbots will get from their kind of main use cases.
02:09:33.200 - 02:10:21.256, Speaker C: And I think the other approach would be to try and really focus on writing a specific class of smart contracts that try to do at least something similar that we would have done on the base protocol, right? To bring these stronger guarantees that makes them easier to understand and build this out as a whole different class of use case that is more or less independent from the MEB kind of aspect and then over time maybe start being more sophisticated there as well and remove restrictions. I'm just wondering which one you think or like anyone here thinks might be the better one here's.
02:10:21.388 - 02:10:36.890, Speaker D: I don't know, that's definitely a complicated question. I think they're definitely both. Some things we can explore in parallel and I don't know how to quantify better other than seeing which one people prefer, I guess.
02:10:37.260 - 02:11:18.550, Speaker H: Yeah, I think we should take a bottom up approach and use flashbots researchers or some other group of researchers to try to use basically these private mempool tools to get these features. And then through doing that process, those people will be able to realize value quickly. And then from there, we can sort of canonicalize those features by getting them upstreamed or getting opcode changes or whatever needs to be done. But after it's been proven that there's value there again to sort of cut through the noise of the EIP process.
02:11:23.000 - 02:11:38.910, Speaker D: Yeah, I would agree with that. And it seems like a lot of the UX work is independent enough that that approach makes sense to me. And also because this feature is not the status quo, kind of a little bit of more experimental trust model is also fine, I think.
02:11:42.450 - 02:11:54.530, Speaker C: So something that I wanted to ask, if you don't mind me jumping in here, is how does account abstractions, programmable validity kind of interact with Flash bots? Does that bring something to the table that you couldn't do without programmable validity?
02:11:57.350 - 02:12:00.980, Speaker E: Do you mean like pay gas or.
02:12:01.510 - 02:12:03.762, Speaker D: What kind of validity are we talking about this programmatic?
02:12:03.906 - 02:12:19.900, Speaker C: Yeah, I think the programmable validity is the idea that whether or not a transaction can be included into the blockchain at all depends on the results of EDM code execution. Yeah, exactly. Sorry, I muted myself there. That's exactly what I was talking about.
02:12:20.990 - 02:12:34.270, Speaker A: I feel like with flash bots, you're always at risk of if there's the opportunity to grief someone, it's possible to happen because there isn't a consensus rule that says this is invalid, it can't be included.
02:12:38.450 - 02:13:09.340, Speaker D: Right, I think that's true. I guess we have to solve this problem of programmable validity in Flashbots in general. Right, because Flashbots pays to or the flashbots network pays whenever someone puts an invalid bundle that will never be included. But there's no possible revenue from that. So that griefing cost needs to be solved at the flashbots network level as an independent problem. And it seems like the same kind of problem.
02:13:11.070 - 02:13:28.850, Speaker A: Is it a solvable problem? I feel like if there's always the desire to grief someone, I don't see without a protocol change, how you could because economically you're already spending money to include something in block space that you could have been paid for. So I don't know how you can encumber that anymore.
02:13:29.430 - 02:14:39.654, Speaker C: So I think one thing is that it should be fairly simple to make sure that the user or that the transaction sender can't be griefed. Right. Because the transaction sender's transaction can first do whatever checks they want to do and then encode and then after those checks, it would only actually make the payment to the block coinbase. So if someone just includes their transaction in some case where one of the transactions preconditions is not satisfied, then the transaction will just immediately revert and exit as soon as it does those initial checks. The party that we do need to protect from griefing is going to be the block aggregators. And in that case, yes, to some extent the block aggregators are going to have to do similar kinds of kind of things. And protocol reasoning that the miners in EIP 2938 are going to have to do.
02:14:39.654 - 02:15:01.280, Speaker C: You can probably compromise a bit more because I think the claim is that the kind of block aggregation is going to be a bit of a more specialized role than being a block producer. And so you can rely on more computing power and you can do a little bit less of Dos protection at the protocol layer, but you would still have to do something.
02:15:01.890 - 02:15:54.110, Speaker D: Yeah, I imagine that in our context, that that's actually a competitive marketplace of people who are ultra specialized in only dealing with that dos issue, and they can deal with it however they want, be it like we have. Our own internal reputation score for people who are submitting. Or we use AI. Or we have 60 data centers and we're doing this thing, or we have multiple queues based on whatever kind of spam control they might want to use. And I think there's a few status quo ones we can support that have good economic properties for the network, but it's definitely not something I would expect a normal block producer to have to do. And it's something that I would expect could fail. So I think we can expect because of the complexity of that process, it will fail sometimes, but probably also succeed most of the time.
02:15:54.110 - 02:16:30.810, Speaker D: Just like the same way. Formal verification is an impossible problem in theory, but we still get results out of it because we bound what we're doing. So I think in that context, that's actually what we want in a status quo where optimistically, most people submit things that the world knows how to deal with and can be optimized and bundled and sometimes something weird happens and that system fails. But all that does is kind of reduce the possible revenue for the one epoch because the system couldn't answer it in time. And that's fine. It's not totally critical that that be maximized.
02:16:33.230 - 02:17:01.670, Speaker A: If I can just go back to the failure case where a user can be griefed that submitted to flashbox. I think maybe I'm wrong, but this is not necessarily a problem today because you can just have a validity check in the transaction and if the gas price is zero and it's included, it's no harm. But with 1559, it's possible for the miner to just simply include this transaction, even if it doesn't pay out to them and the user will have to pay the base fee.
02:17:02.970 - 02:17:12.870, Speaker C: Yeah, but I think the whole point here is that basically the transaction would be initiated and paid for by the miner initially, right? Exactly. It's the minor that pays the base fee.
02:17:13.230 - 02:17:15.930, Speaker A: Oh, the miner is the one who's the actual sender?
02:17:17.950 - 02:17:28.350, Speaker C: Is it the minor? Is it the aggregator? I assume it's one. I guess if we do Flash bots with no base protocol changes, then it would be the aggregator.
02:17:28.930 - 02:17:43.890, Speaker A: I mean, either case, the thing is that if a small reorg happens, those transactions are out there in the clear and you've signed over the base fee. And so somewhat it is possible that the underlying transactions don't pay out anymore?
02:17:44.950 - 02:17:59.800, Speaker C: No, I think the thing should be doable in such basically in an account abstraction set up or in an account abstraction through flashbot setup, there's no such thing as signing over the base fee. There's a payment that the transaction sender makes.
02:18:03.550 - 02:18:05.302, Speaker A: Someone has to include it in the protocol.
02:18:05.366 - 02:18:08.970, Speaker C: Right, right, correct. And they would be vulnerable to being.
02:18:09.120 - 02:18:21.486, Speaker A: Yeah, but that's different. That's the slight deviation from a true account abstraction where it's impossible in a small reorg to include and have whoever signed over the base fee pay.
02:18:21.668 - 02:18:53.260, Speaker D: Right, yeah, I think that's a good point. That actually is not determined anywhere that I've heard of. Will the flashbots model translate into a proof that if the miner pays this base fee, they will make this revenue? So it's kind of conditional on the miner paying the base fee or is it like an unconditional kind of ticket? And I think the dos varies based on which type of order is supported. I think they're both valid choices that have different trade offs that we haven't explored yet.
02:18:55.310 - 02:19:33.190, Speaker C: But also I think that there are some edge cases around reocc and something where basically the party that actually initiates the transaction, be it the aggregate or the miner has to pay for a bundle that ends up not paying because in a reocc setting it's run in different contexts. I think that's just an example of one of these trade offs that just become possible by leaving it up to more sophisticated parties because then they are just willing to take on that kind of small additional risk. Right. Which is kind of like one of the beauties of having it outside of the core protocol with more specialized parties.
02:19:36.250 - 02:19:58.030, Speaker D: Yeah, I don't know exactly the technical I haven't looked at the low level details of 1559 enough to know. But it may be even possible to like if the miner has to pay the base fee to have them do it from coinbase payments or something that are dependent on them mining the block. So then that part can't be reorbed. I don't know. I think this is something we have to think about.
02:19:58.100 - 02:20:00.910, Speaker A: Is the coinbase paid out at the end of the block?
02:20:01.970 - 02:20:21.138, Speaker C: It is paid out at the end of the block. But one other thing that I think right, the other thing that you could do is just a protocol change that allows transactions to specify a strict dependency on a recent block hash, which could be the previous one.
02:20:21.304 - 02:20:32.854, Speaker D: Yeah, I think that is in general like a loaded mev change that's been floated for quite a while that would impact a lot of things and I think maybe a good thing to eventually.
02:20:32.982 - 02:20:38.810, Speaker H: Kind of consider I'm a big fan of it, have been saying it since 2016.
02:20:40.670 - 02:20:51.840, Speaker D: Yeah, I was about to say it's Frick's favorite. But I do think it's definitely worth discussing, especially because it can be done as an option.
02:20:57.110 - 02:21:04.020, Speaker H: All right, maybe we should transaction envelopes make it a lot more possible now than prior. So I'm excited about that too.
02:21:07.670 - 02:21:08.980, Speaker D: Yeah, that makes sense.
02:21:10.230 - 02:21:11.740, Speaker A: All it.
02:21:16.910 - 02:21:26.190, Speaker D: Yeah, no, I think that all gives us a lot to think about and hopefully gives you all a lot to think about too. I look forward to continuing these conversations.
02:21:29.410 - 02:22:24.558, Speaker B: Yeah, this is the most interesting, I think so far. Every time we have a roast, we say, wow, this is the best, and I think we just keep on topping it. So for the next few weeks, we are going to have research workshop that dive into some of the deeper questions that we touched on today. And we'll have community calls where you could join to see actually what Flashbots been doing. The last thing I heard is that I believe soon we're seeing over 20% of hash rate on ethereum on Flashbots, and miners are making 0.18 or one nine ETH per block in addition as a block subsidy. So if you want to learn more about how this alpha system is being used by the community and to roast us on that, join our community call please.
02:22:24.558 - 02:23:29.410, Speaker B: And lastly, we will have another Mev roast and the topics for the roast for next month will be up for grabs. So feel free to make comments under our current GitHub issues for what you would like us to roast in next month. But aside from that, I hope you all have enjoyed today's discussion and let's keep some of the discussions async on Twitter and GitHub. And you can always when it comes to mev research, just create a research proposal by forking our MEB research repo where you would like to dive deeper or invite community discussions. So with that, I will leave it to closing thoughts for Phil or whoever is unmuted here or Vitalik.
02:23:30.950 - 02:23:40.680, Speaker D: Yeah, I just wanted to say thanks everyone, especially Vitalik, for taking the time today and talking through these issues and listening to these presentations. Hope it was fun and can't wait to continue this.
02:23:42.110 - 02:23:51.980, Speaker C: Thank you to everyone, especially Tina, for organizing the thing. It's been great and I hope the quality of the Azaiki continues going up.
02:23:53.410 - 02:23:59.310, Speaker D: Yeah, we're really excited and super excited to work more with everyone in the ecosystem.
02:24:02.210 - 02:24:03.200, Speaker B: Thank you.
02:24:03.570 - 02:24:04.720, Speaker E: Thanks everyone.
02:24:05.330 - 02:24:06.266, Speaker A: Thanks all.
02:24:06.388 - 02:24:07.250, Speaker E: Have a nice day.
02:24:07.320 - 02:24:08.130, Speaker C: Thanks everyone.
02:24:08.280 - 02:24:11.460, Speaker D: Have an awesome afternoon, night, whatever it is, where you are.
02:24:14.710 - 02:24:15.860, Speaker C: Thanks all.
02:24:16.950 - 02:24:21.380, Speaker A: I don't know if anyone's still here, but I have kind of a dumb question, maybe.
02:24:23.110 - 02:24:26.840, Speaker B: Sure, shoot them away while you're still here.
02:24:28.410 - 02:24:57.440, Speaker A: So I'm trying to just understand a little bit something. I don't know if it was Vitalik or it was Phil who said, but if I am trying to send a transaction to Flashbots, they're saying that the miner would be the one who actually originates the transaction. How are my funds? Like, I assume that I have to use some funds of my. Own to extract mev. How is that held in a noncustodial way?
02:25:03.280 - 02:25:04.430, Speaker E: So I'm not sure.
02:25:04.900 - 02:25:29.160, Speaker A: I'm not sure when that point was brought up, but I don't think it's the case that in Flashbots right now, the transaction urges in the miners. That transaction originates from essentially the relayer. Right. So if I'm an Mev searcher, I'm going to send straight to a relayer, not just the miner, and then the relayer is sort of the intermediary.
02:25:32.060 - 02:25:32.472, Speaker E: Sorry.
02:25:32.526 - 02:25:34.248, Speaker A: Yeah, go ahead. No, go ahead.
02:25:34.414 - 02:26:10.084, Speaker E: No, I was going to say the mechanism here is just that you pay the fee to the miner with the block coinbase, and that tip paid to the miner. The block coinbase can be conditional on the success of your transaction. So in a way, you can pay the block coinbase with a portion of the ARB profit that you've seized. And so that's why it's conditional in that sense. And so you don't need to have funds in that EOA when you start the transaction, you can use the funds that you would have gained from that ARB to pay the minor. So you can make it conditional, basically.
02:26:10.282 - 02:26:29.150, Speaker A: Yeah, exactly. That was my understanding with 1559, this is slightly more complicated because if the ARB doesn't go through, or if a small reord makes the ARB no longer available, my transaction can be included still on chain, and the base fee will be paid.
02:26:29.840 - 02:26:30.348, Speaker F: Right.
02:26:30.434 - 02:26:57.940, Speaker E: So indeed, with 1559, for the transactions that are included, there is this base fee. And so they need to have some balance, maybe in their account. One thing that we discussed, we floated around the idea is to have some kind of base fee provider as well. So you can still have that feature of an Mteoa and you have someone kind of funding you the base fee in some sense. I don't know if Scott is still on here. No, he left. All right.
02:26:57.940 - 02:27:24.830, Speaker E: Scott from our team, scott Bigelow is the one who kind of looked at this. It does not impact the system massively, though, in the sense where the transactions that are not included and do not land on chain, they don't have to pay a base fee. So the value prop of not having to pay for failed mev transactions, as long as they don't land on chain, is still preserved in the EIP 1559 world.
02:27:26.160 - 02:28:01.560, Speaker A: Yeah, this is pretty small edge case. It's just once the block is out there and the transactions are available, it's always possible to include it on chain. Realistically, it probably won't because it's not the most economical thing to do as a minor. But that was just a discussion that we had with Scott a while back, which was why we've talked with him about 30 74, which I think alleviates that to a degree, because then anybody can originate the Flash bot transaction and you can do an Auth call. So the message that sender is then set to whoever is actually trying to extract the arbitrage.
02:28:02.460 - 02:28:11.752, Speaker E: Yeah, I think this is what Scott was talking know, that kind of basic provider was like something along those lines.
02:28:11.896 - 02:28:12.812, Speaker A: Okay, that makes sense.
02:28:12.866 - 02:28:34.228, Speaker B: All right, thanks for yeah, I'm actually curious. Thomas, if you are still on the call, Alex, maybe try unmute Thomas, who understands fundamentally how Flashbuilds currently work and where it goes, as well as he's the creator of Nethermind. So maybe thomas, do you have any thoughts on this?
02:28:34.394 - 02:28:46.136, Speaker E: Yeah, I unmuted him, but also I've changed the settings so that anyone can unmute themselves as well. But I've also clicked the button asked to unmute. So Thomas, if you look at your zoom screen, they might be oh, there you go.
02:28:46.238 - 02:29:10.050, Speaker I: Hi, can you hear me? Yes, hi. While I'm listening, it's a bit of on and off listening. So it would be great if you can actually point at this particular topic. I think that I'll be able to comment very quickly because I guess we were discussing on all the things that I've been studying for the last few days deeply. So what can I help him with?
02:29:14.100 - 02:29:16.956, Speaker A: I think I was just yeah, go ahead, Alex.
02:29:17.068 - 02:29:21.600, Speaker E: No, I was going to repeat your question, so if you don't mind repeating it for Tomas.
02:29:21.960 - 02:30:20.736, Speaker A: Yeah, I was just trying to understand because whenever 1559 goes live, it's going to create the scenario where every transaction is going to have to pay ether, whereas today Flashbots, you can set a gas price zero and it makes no economic sense for a minor to include that transaction on chain. With 1559, it doesn't really cost them that much just to include it. So if there's a small reorg that changes the arbitrage opportunity. So you no longer get paid for your arbitrage, but your transaction is still signed out in the clear, then it can just be included into a new block and you're going to pay the base fee without ether. And so I don't know if it was still or vitalik. They had said that the way around this is obviously the miner pays the base fee and that way then the Flashbot user doesn't have to pay it, but there's always going to be someone who has to pay it. It's just who is at risk of griefing, the small grief factor.
02:30:20.736 - 02:30:28.180, Speaker A: And I was just trying to understand, if someone else is paying the base fee, how do you trustlessly execute the arbitrage?
02:30:28.260 - 02:30:29.448, Speaker E: Because typically you have to have some.
02:30:29.454 - 02:30:41.470, Speaker A: Funds in the account and if you need to access those funds, there has to be some mechanism to do like an ECDSA recovery or I don't know how they would do.
02:30:43.680 - 02:31:35.356, Speaker I: Mean from the perspective of the arbitrage. I'm not necessarily saying that the base fee to fundamentally change the behavior of it. Even if you had zero gas price, from the perspective of minor, it was just minor pushing it because they didn't have to pay it. So like taking advantage of arbitrage and not having to push the gas price there or potentially opening it for the external actors to say, okay, you'll get in front of the queue and you don't have to pay the gas price because you're paying it anyways some other way. Right. If there is a base fee and it's fluctuating, you still have the control over it through the max fee on EIP 1559. And if it's burned, you just add it to the cost of the calculations are just slightly different but they don't fundamentally change the dynamics of how you construct which transactions you select.
02:31:35.356 - 02:32:48.656, Speaker I: I think there was a longer discussion on the transaction ordering in the transaction pool and whether you look at them from the perspective of the miner or from the perspective of the maybe like network when the block's base fee is fluctuating, so it changes also the order of transaction pool, which was not like this before, right? So in the past you could order transactions by the transaction price and it wouldn't change and the new transaction is coming, so then it would land in its place and maybe one transaction will be kicked out. Now, when the next block happens, depending on the previous block, you have to do the reordering. But from the way I see, Flashbirds is really just introducing the different cost, like different benefit calculation to the miner and the cost to the submitter. So on the normal transaction, the cost to the submitter will be the final gas paid, which is just capped by the max fee on the transaction in EIP 1559. And the benefit to the minor would be just the minor tip.
02:32:48.688 - 02:32:48.884, Speaker A: Right?
02:32:48.922 - 02:33:41.236, Speaker I: So it depends on the maximum between the minor tip and the difference between the max fee and the base fee. And the flashboards packages. Bundles. What you end up with is on top of the normal calculations, you also add the fee paid from the searcher to miners. It's practically this the fee paid by the submitter of transaction is just increased by whatever you decide to pay extra to the miner. From the miner's perspective, on top of what you get from the transaction fees, you subtract the base fee, what is burned and you're adding whatever you received as a payment for the bundle. But itself, base fee doesn't change that much.
02:33:41.236 - 02:33:45.850, Speaker I: It's just adding or subtracting it from the calculations. Do you see difference? I mean.
02:33:52.860 - 02:34:00.830, Speaker A: See it that definitely I agree as we just do. So in the happy case, there's really no difference. It's more in the more unhappy case where today.
02:34:19.660 - 02:34:21.624, Speaker I: I'm not sure if it's my connection.
02:34:21.672 - 02:34:28.684, Speaker A: Yeah, Flashbots, I can know unless my transaction, my arbitrary if that's really that much of a concern.
02:34:28.732 - 02:34:29.536, Speaker E: I don't know, it just depends on.
02:34:29.558 - 02:34:33.810, Speaker A: How much gas it takes to actually hello?
02:34:34.340 - 02:34:38.640, Speaker I: Yeah, I think we're losing you. I mean, now it sounds slightly better. So maybe if you shouldn't try once.
02:34:38.710 - 02:35:00.570, Speaker A: Okay, yeah, I'm kind of in the mountains right now, so service is getting worse. If you can hear me, I'll just quickly say I think the only difference is that in 59 somebody has to pay, whereas currently you could put a gas price zero and no one will pay anything. And so it's not clear if that's really that big of a concern in the long run.
02:35:01.260 - 02:35:17.680, Speaker I: It's not really, because for any Arbitrage, the thing that you're targeting is your final outcome. So the base fee is just one additional component in the calculation. It doesn't change that much whether it's zero or both participants.
02:35:19.300 - 02:35:22.400, Speaker A: Yeah, okay. Yeah, thanks for answering.
02:35:34.230 - 02:35:46.290, Speaker B: All right, well, thanks for all of us who are still here. I am actually quite amazed. Sorry, go ahead. Didn't mean to interrupt.
02:35:46.450 - 02:35:51.560, Speaker A: Oh, no, I was just chuckling. Yeah, this is a long call, but thanks for setting it up. It's been really nice.
02:35:52.650 - 02:36:24.980, Speaker B: Yeah, thank you. And I really want to get a way to stay in touch with all of us so that we can continue this discussion async so if you haven't joined our discord, maybe someone I could try to share the link so that we can sync there. Or I think simply comment under the GitHub issues would also be the other way too, for us to find you and lube you in the discussion with the rest of the community.
02:36:29.880 - 02:36:30.630, Speaker A: Awesome.
02:36:31.640 - 02:36:39.160, Speaker C: Do you have one more minute for a question on research scope? If a topic is interesting for you or should we take this offline on Discord?
02:36:40.380 - 02:36:45.290, Speaker B: Feel free to since I'll be here. So feel free to ask your question away.
02:36:45.820 - 02:36:48.764, Speaker E: Okay, so I've been working primarily for.
02:36:48.802 - 02:37:19.572, Speaker C: Now on a BFT style protocol on fairness enforcement, similar work to what Cornell did. So it's a pre protocol to the blockchain that makes sure that some policy on message ordering is enforced. So, for example, if all honest validators saw A before B, then A has to be before B in the end on the block. And one of the things I'm now doing is transferred to longest chain protocols like ethereum. And that could be a very nice.
02:37:19.626 - 02:37:22.772, Speaker E: Combination with commit and reveal scheme because.
02:37:22.826 - 02:37:45.470, Speaker C: You can reveal earlier. So it may work well with field auctions and maybe nice additional support for the Flashbots. Is this a topic you would find interesting to dive into, get a talk on, read a paper? Or what's the right approach to see if that works together?
02:37:46.560 - 02:38:29.356, Speaker B: I would love to if you could say, for example, go on our Mev research repo. And this is also for everyone who's new to the Flashbots community, everything that we do is on GitHub, in particular research related. So what you can do is perhaps create a GitHub issue there within the MEB research repo and then include some of your thoughts on questions or where you think would be interesting in terms of relevance. Well, if you think that this is a discussion that you are okay with sharing with the public or the community?
02:38:29.458 - 02:38:30.188, Speaker A: It is public.
02:38:30.274 - 02:38:42.944, Speaker C: So the two papers on this are published already. Main thing now would be, is it useful for ethereum? How does it work together with things like Flashbots? So it's nothing secret about it.
02:38:43.142 - 02:39:31.170, Speaker B: Yeah, no worries. Yeah, totally. So just post either on Mev research or the GitHub repo or the PM repo, flashbots PM repo as issues. And I'm sure our research director who coordinates all of our research effort will reach out to you. And also feel free to ask in the discord channel if you are in there and there is a MEB research channel specifically meant for more synchronous communication. Yeah, totally. Well, I think that would probably leave us to 2 hours and 41 minutes.
02:39:31.170 - 02:39:37.440, Speaker B: The longest roast ever. All right, whatever we're roasting is fully toasted.
02:39:39.380 - 02:39:40.640, Speaker E: It's crisp.
02:39:41.320 - 02:39:50.820, Speaker B: Yes, indeed. I am actually curious, Mariano, are you actually on this call or is it your bot?
02:39:54.040 - 02:39:55.270, Speaker F: I am here.
02:39:56.040 - 02:40:23.570, Speaker B: Yeah. Well, you've come to, I think, quite a few of our risks. What are some of the things how we can improve it this time? Well, clearly the Zoom bombing is something a lesson learned in production, right? In prod. But in terms of topic content, what do you enjoy the most? Because I've seen a lot of new faces today, I need help in terms of how to make this even better.
02:40:26.900 - 02:40:58.030, Speaker F: One thing that would be really good to see is a workshop of some kind. I don't know if you've thought about it or if this clashes with the Rose type of call and it would end up being a separate thing for today. For example, I mostly wanted to see what the topic of account abstraction was all about, because that is one that's very close to my heart I don't want to see implemented in any way possible.
02:40:59.040 - 02:42:06.044, Speaker B: Yeah, okay. That's super helpful. So, as I mentioned, aside from mev roast, that happens on a monthly basis at the last Thursday of each month, we have the workshops, research workshops in particular, that dive into each of the topic and goes into pretty intense, hour long discussions and potentially various formats of basically kind of co creating or like debates around certain ideas. And things get pretty interactive. So I would suggest that I would actually make that a proposal for our next research workshop, if you are interested, because I know a lot of people on this call today are also interested in that topic. So just watch out for our announcements in the discord channels as well as on Twitter when we do host that workshop. It will likely be I believe it will be actually the next research workshop, I believe is next Thursday.
02:42:06.044 - 02:42:16.900, Speaker B: So if the time works out for everyone, I would make that the research workshops topic on specifically account abstraction.
02:42:20.760 - 02:42:22.550, Speaker F: Excellent. That would be great.
02:42:23.240 - 02:42:54.590, Speaker B: Awesome. Well, thanks everyone for joining. I've said it like ten times today. So we will end it here, and we will post the recording after we edit out, potentially, the Zoom bombing. Or if you guys think we should keep them, we'll keep it in there as well, and we will share it online with all of you who would like to watch some parts of the debate and discussions that happened today. Thank you all. Have a great day.
02:42:56.800 - 02:42:57.884, Speaker A: Thanks. Nice to hear.
