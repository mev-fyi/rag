00:00:02.200 - 00:00:20.994, Speaker A: Cool. So my name is Connor, and I'm going to give a very high level talk on l superposer and builder election mechanisms. I thought this was going to be less of a technical audience, so I thought it was. I think I was promised to add five people, I guess. I don't know. I haven't seen anybody yet, but there's probably some people out there. Anyway, hopefully it's enjoyable for everyone.
00:00:20.994 - 00:01:18.724, Speaker A: Okay, so, sorry. So the talk is proposer and builder election mechanisms. So what is an election mechanism? Well, the basic election mechanism on layer one, or the basic mechanisms we've seen, the first one we've seen was proof of work, where you solve a puzzle, and if you solve the puzzle, you get the right to build a block. Since then, we've seen other things like proof of stake. So the proposer is typically elected proportional to the amount of stake that you have. Okay, so again, this proof of stake model where first there's some election based on the amount of stake you have, we've actually seen a second election mechanism happen where the proposers are actually offloading the right to build a block to somebody else. So this has been sort of become famous for me boost and in Mevboost, you have this concept of builders communicating bids to relays, and the relays are trusted to ensure that the blocks are valid.
00:01:18.724 - 00:02:01.504, Speaker A: Then the validators will look at, query all the relays, and then choose the highest value bid that they see, and the relay will send the block. So this process works because both the builder and the validator trust the relay. So we sort of, when we're looking at this sort of transition to l two s, we're gonna have to maybe address the trustedness. And adapting something like mev boost also involves some trust, so we might not be able to use it directly. So what can block builder elections unlock? So the first thing that we need from a blockbuilder election or a proposal election is civil resistance mechanism. Right? So that was what proof of work did for us, and proof of stake does a similar job. The next thing we have is validator builder separation.
00:02:01.504 - 00:02:42.740, Speaker A: So with a builder market, we can actually allow the validators to become these small nodes, as was discussed earlier on, and offload this builder at work. That's sort of computationally intensive. The next step is to actually incentivize builder innovation. So, again, we saw today that there is some specialized teams emerging as a result of this stuff. Whether for good or for bad, these guys are implementing high tech solutions to this problem. And then the final step, hopefully, I'm not sure if we're there yet, is where, with all this innovation happening, we get to a point where the users are actually maximizing their welfare. And is that possible with the current paradigm? Possibly not, but there's a potential that it might allow us to do this.
00:02:42.740 - 00:03:32.160, Speaker A: Okay, so the teams of this talk, so after this high level introduction of election mechanisms and proposer slash builder mechanisms, I want to give you a high level. So the focus is l two s. So I want to give you, impress upon you that the centralized nature of l two elections today, I'm going to define some proposal builder mechanisms that we might be able to, election mechanisms that we might be able to use. I'm going to sort of hypothesize about the decentralized l two elections of tomorrow and then talk about some solutions that will get us there. Ok, so the state of play currently today, so we have basically all of these top l two s, and they're all using trusted sequencers, the majority of them. We obviously have Tyco that's based polygon, proof of stake that's permissionless, but has other issues. Is it roll up? Is it an l two? Not necessarily sure.
00:03:32.160 - 00:04:06.994, Speaker A: And we have Aztec for net. So Aztec is obviously under construction. This Fernet proposal, potentially permissionless, but again, it's a proposal, it hasn't been implemented yet. So we're basically in this trusted environment. And the point of the talk today is to sort of maybe talk through some possibilities to decentralize these trusted players. Okay, so there's lots of different ways that we can define l two election mechanisms. I spent the last six months looking at this, and I came up with something like maybe 200,000 combinations of properties that sort of define what we want from an l two election mechanism.
00:04:06.994 - 00:04:52.694, Speaker A: Three of the main ones, the most important ones, are who are the candidates. All right, so what sort of people can we choose from? Trusted, permissionless based. These are sort of three high level categorizations. When the election happens, is it early or is it just in time? So Mev boost is a just in time auction. A proof of stake mechanism is typically early, and there's different combinations of these things that we can use, such as execution tickets, which I'll talk about in a little bit, and where the election happens. So MV boost is happening out of the protocol, while in protocol mechanisms like proof of stake or execution tickets, they're happening in protocol. And what are the benefits of each of these? And again, I'm gonna go through sort of a combination of some of these non trusted solutions and see which ones make sense and which ones don't.
00:04:52.694 - 00:05:34.696, Speaker A: Okay, so just to give, again, we talked about this today a few times. Who are the election candidates? So, trusted candidates, typically elected by protocol governance and can't be removed without some sort of governance procedure. Permissionless people, permissionless proposers, anybody can seek election. So examples include proof of stake, proof of payment, proof of work, and then based. So in the base model, we've seen a couple of people talk about base already. The LTE proposers are decided by the l one proposal mechanism, but the base roll ups decide that this is absolutely fine and this is sort of a different one that's not necessarily trusted or permissionless. Okay, so again, I mentioned that it's going to go through three different combinations.
00:05:34.696 - 00:06:22.332, Speaker A: So we had the type of candidates in the election. Now we have when the election takes place. So in this MeV boost, the picture we had from earlier on, we had two elections taking place, the validator, which was an early election mechanism, and then we had the builder, which was just in time, just before the block is propagated to the network, the auction is settled between the validator, the relay and the builder, and the block is propagated. So the builder, sorry, the builder, only finds out that they're going to build a block in the instant before the validator or the instant after the validator sends a signature to the relay. Okay, so some of the thoughts that have been generated around these, around these early versus just in time debate. So I found this really cool article online. Kinthis wrote this paper, wrote this article.
00:06:22.332 - 00:07:07.544, Speaker A: So basically, just to go through this statement, so, early auctions, this is maybe an opinionated piece, as opposed to something that was derived like mathematics, but it's based on a lot of truth. So early auctions are likely to be won by a very small set of parties who find themselves in a position of a monopolist capable of extracting rents. So once you know that you win, you can then possibly leverage that position to extract rents. Two of the main benefits of early auctions appear to be preconfirmations and rewards mooting. So we've seen a lot of people talking about preconfirmations today, a lot of hype there. But again, this is one of the two main benefits that we see. It is not clear how much more valuable these benefits are in early auctions compared to just in time, where those benefits may also be possible.
00:07:07.544 - 00:07:45.520, Speaker A: I'm not going to necessarily go into why those may also be possible in early auctions. Sorry, just in time auctions, but we have things like seer lists, inclusion lists, and potentially even forcing execution lists that may force or that may be able to allow the benefits of early auctions to also be applicable to just in time. But again, see this article for more information. And then we had this third categorization, which was in protocol versus out of protocol. So out of protocol assume. So the protocol itself assumes that X is going to be building the block, but X actually decides to delegate to y in protocol enforced by the protocol. So the protocol itself actually knows which private key is going to be producing the block.
00:07:45.520 - 00:08:32.564, Speaker A: And this election mechanism, the protocol knows who's going to be producing the block. Okay, so just going back again, maybe I've sort of, maybe derailed slightly from where I was planning to go, but just to sort of bring it back to, these are the type of election mechanisms that exist. But we've seen from the previous table that I had that all of these election mechanisms are based on this trusted assumption. So the fact that we have early versus just in time or in protocol versus out of protocol isn't necessarily important because we have a trusted entity at the center of everything. So we're seeing a lot of l two s talking about decentralizing. So if on this decentralization path, they're going to have to transition into something, some combination of these other things, and I want to talk about those now. So decentralizing the proposal role.
00:08:32.564 - 00:09:05.544, Speaker A: So this section is going to go a little bit deeper. Again, I was expecting to sort of, I wasn't expecting to go too deep, but still we're going a little bit deeper here. So we're going to go from the initial layer of builder markets to L2. That's what I'm calling it. So some decentralization questions just to warm up before we go into each combination of election that we can run. Right. So should an elected l two proposer outsource block building? So we're seeing in l one that the elected proposer is outsourcing to the mev boost market or the PBS market.
00:09:05.544 - 00:10:10.900, Speaker A: Should an l two proposal do the same thing? And another question, can we remove the need for out of protocol election mechanisms without trusted third parties? I'm going to sort of maybe propose some solutions to these things or some pros and cons and then get sort of maybe into the categorization that I built up earlier. So when I was thinking about whether or not we should run these to get trusted proposers to run these builder markets, Kinthus basically proposed, sent me this question and I was like, it's very, very resounding. So why else to proposers would outsource to a blockbuilder market must be discussed. So a reason for this, or some reasons for this. So the proposer enforce rules can provide equivalent guarantees as the proposal themselves. So we're seeing things like see our lists allowing proposers to actually, or proposes to potentially exert some influence over the blocks that get built. So in the worst case scenario, a trusted proposal, a proposal that gets elected, can basically just dictate to the builder, I have all of these conditions for the blocks.
00:10:10.900 - 00:10:51.134, Speaker A: If you don't provide these, if you don't satisfy these conditions and the block is invalid. So the proposer should see this as like a way to like get some value, additional value than the blocks that they would produce themselves. Potentially, they're getting at least the same revenue that they would if they're building the blocks themselves. Almost definitely greater because they're just accessing a decentralized market of builders. Builder markets typically adapt to meet demands. So we've seen today where the builder builders that we were talking earlier on, they're going to adapt when they see what demands actually happen, as opposed to trying to predict what's going to happen, as opposed to protocol designers or daos, which they have to predict what the community will want beforehand. So it's different way of approaching problems.
00:10:51.134 - 00:11:47.306, Speaker A: And typically, again, there's pros and cons to each. But this is sort of true generally for these builder type entities. And the meme of like why we want to outsource block building based on the discussions that are on, we want to keep the validators small nodes that the low barrier to entry and outsource this hard computation to other people or with specialized entities, reasons against this. So adding an extra layer of like protecting the proposal and the blockbuilding market introduces complexity. This added complexity introduces costs, so they're upfront cost, but costs all the same. And the meme against this, that's sort of resounding through the l, two daos is outsourced builders equals mev. Now, again, is this a sort of irrelevant comment, or is this just sort of like a higher, like a sort of a maybe a misunderstanding of what outsourcing, block builders outsourcing building does? It's not necessarily clear, but this is the view that they have.
00:11:47.306 - 00:12:21.390, Speaker A: And again, whether it's true or not, we'll see. So the complexity paradox of block building. So this was sort of a nice way of putting it from dmarts, where when considering whether or not you should outsource block building. You're sort of faced with this dilemma as a proposer. Increased complexity, but greater welfare as opposed, or less complexity, but less costs. So which one's actually better for the user? It's not necessarily clear, but again, that's up to you. This talk is not necessarily opinionated, but just to give people to sort of generate their own ideas.
00:12:21.390 - 00:13:24.194, Speaker A: And again, probably the welfare is better, but again, the cost may be significant, and again, that's up to the actual roll up themselves. Okay, so I posed two questions earlier on, maybe you don't remember, but the second one was, can we remove these out of protocol trusted third party elections? So the first talks today, if people were here, one of the things that people kept mentioning was the vertical integration, or the verticalization or something to do with the word vertical. And that basically meant that all of the entities through the MEV supply chain were becoming the same entity, or that was the path that we were on. So trusted out of protocol elections there might be the cause, it might be the effect of this process. And basically that's probably a bad thing in the tradfi market, bringing it back to the trad five people that are hopefully out there, that's equivalent to one of one co location with an exchange. And that's just basically something that we just don't want to be happening. Another reason that's sort of motivation for why we want to do this.
00:13:24.194 - 00:14:22.616, Speaker A: So what protocols can we use in protocol solutions? Probably need early auctions. So there is actually proposals for just in time auctions removing the trusted third party. But the solution that we have for this is based around this enshrined PBS concept. And then I just posed this whenever because I've seen even some of the EF guys questioning the possibility of epbs, or is epbs the way forward? Is it going to be the end solution? It's not necessarily clear to me or possibly themselves. And then that's sort of the easy way to do this. But it's possible this last point where trusted execution environments suave might offer us a workaround that may not actually involve any trusted individuals, but the trusted execution environment themselves as a separate issue. Okay, so, right, these were the warm up questions.
00:14:22.616 - 00:14:43.124, Speaker A: Hopefully you're still with me. So let's go back to that sort of the categorizations that I proposed earlier on. So we have these, we have the entities, right? So we had trusted based permissionless, we're getting rid of the trusted. So we're now we're left with base permissionless. And when it comes to based. We basically don't have too many options. We either have to choose.
00:14:43.124 - 00:15:04.096, Speaker A: So we don't have options in terms of in protocol or out of protocol. It probably has to just be in protocol. Again, there is an outer protocol option there where the proposers are running Mvboost. But let's just go with this one. So when it happens, we have early and in this early mode, we have two possible solutions. We have execution tickets, which again, espresso. We're talking about Iran.
00:15:04.096 - 00:15:31.144, Speaker A: Sorry, Ellie. And we have this value capturing base roll up idea, which I wrote an article on this a while ago, or if we do adjust in time, we have this alternative solution, which is called alternate PBS. Another article that I wrote, I was really into base roll ups for a while. Still amazing, but maybe for different reasons. Everybody else, but still, I think they're pretty cool. If we go with the permissionless route, we have these other options where we. Okay, so this is the tree going down the tree.
00:15:31.144 - 00:16:03.214, Speaker A: We can either run early or just in time. If we go early, we have in protocol solutions. We also have out of protocol solutions, but they're not so interesting in protocol solutions that we have execution tickets or proof of stake. So proof of stake is sort of the base case. And it probably isn't the best way to outsource block building if we're trying to sort of, maybe try to outsource the block building to specialize entities if we're bringing those entities back into the system. So execution tickets seem like a way that we can split up the validators and the builders. So that seems to be an execution ticket is coming up multiple times here.
00:16:03.214 - 00:16:35.964, Speaker A: If we go just in time, we can go in protocol, which is in trine PBS, or we can go out of protocol and this outer protocol. So everything in this tree is removing trusted entities. So at a protocol we can possibly use this te or swap. I didn't want to name drop suave, but again, it's a very veiled intention. Okay, so the solutions maybe just giving a high level understanding of the solutions, in case you haven't read my. If you haven't followed my blogs. Okay, so we have execution tickets, which again, wasn't my proposal to propose the whole block.
00:16:35.964 - 00:17:14.138, Speaker A: Okay, so this is maybe just two distinctions of execution tickets that I didn't get into. So I mentioned that there was originally 200,000 possible combinations of auctions. One of those other combinations that I didn't get into was whether we auction off the full block or we auction off some of the block. So again, there's a lot of people or specific people in the industry that are talking about possibly running two or n possible slots for n possible sub blocks for any given slot. But we can go a little bit further than that. We can get a bit more crazy, especially in this early stage. We can talk about auctioning off access to specific smart contracts, specific roll ups, specific accounts, specific parts of the block.
00:17:14.138 - 00:17:39.922, Speaker A: This parts of the block accounts framework is something related to the state lock auctions in Solana. It's possibly a way forward that, like you, you're not buying execution tickets for the whole slot, you're buying execution tickets that will touch only your own account. And any other account may be invalidated, but you have that unique right. Okay, this just. These are ideas. The entry PBS. So, an honest majority committee runs the permissionless auction.
00:17:39.922 - 00:18:02.910, Speaker A: So again, if. Whenever. I'm not 100% sure. And then there's some other solutions. Again, these solutions I came up with are in conjunction with flashbots and nethermine team. So, alternative PBS for base roll ups, where we have this trusted and protocol committee with a permissionless override. So the trustedness is still there, but there's permissionless override, which should keep these people honestly.
00:18:02.910 - 00:18:45.104, Speaker A: And then we have value capturing base roll ups, where we use something related to a harbinger tax, where you're basically stating the value for producing a block, and that can be bought off you, again, specifically for base roll ups, where you can actually lose your right to someone behind you. And this value should technically outsource the outsourced building. But is it removing the big nodes from the system? Again, that's a separate issue. And then don't forget your t. I actually removed the t slide because I felt like I was drinking midnight tequila last night, and I decided that it might be a bit too heavy. But the slides are available online, so people can have a look at them in their own time. That's everything.
