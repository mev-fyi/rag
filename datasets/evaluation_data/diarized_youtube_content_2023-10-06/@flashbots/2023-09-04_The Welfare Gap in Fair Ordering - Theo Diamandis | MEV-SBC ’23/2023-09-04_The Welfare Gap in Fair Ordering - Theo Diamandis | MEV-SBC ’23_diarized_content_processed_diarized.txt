00:00:03.530 - 00:00:53.078, Speaker A: Good morning to all who celebrate. My name is Theo. I'm a PhD student at MIT. I also do work with Baines research team and as you can guess from the title of this talk, I'm not a huge fan of ordering policies, and a lot of people have looked at ordering policies and kind of how to implement fair ordering, which usually means these first and first out FIFO or first come, first serve type mechanisms. And a lot of people have looked at it from the distributed systems point of view, perhaps from the economic point of view. And this talk is going to be about looking at these mechanisms from the optimization point of view. Kind of the high level idea is that I think that these policies are misguided and really what they do is they distort the market for block space in a way that forces benign users to pay for the externality.
00:00:53.078 - 00:01:34.614, Speaker A: In this talk I'm mostly going to talk about the problems. Unfortunately I'm not going to offer solutions. There's only so much that you can do in 20 minutes at 09:00 a.m.. But I'm going to point to some work from other people that are looking towards addressing solutions to this type of problem. So this talk was inspired by a number of events kind of back in February this year or some work from others and kind of I wanted to look at where these things are used in production or what's the closest things that we have to these first in, first out policies in production. One is solana. So Solana without Jeto effectively uses something like FIFO ordering and there's close to negligible fees.
00:01:34.614 - 00:02:34.990, Speaker A: So it's perhaps a good approximation. And the natural question is, well, what happens if there's say, a competitive Arbitrage opportunity? So there's something where it matters who's first. It's a very high utility transaction to be first and only one person can get it. Well, searchers are going to end up spamming the network, trying to be the first transaction in and this is going to create a very large externality that's borne by the network and the other users. Jito did some analysis on this back in, I think this is from February of this year and they found that actually a huge amount of compute on Salana so over 50% was wasted from failed Arbitrage trades and 98% of Arbitrage transactions fail. So this is because instead of being able to say bid on this type of transaction, everybody just spams the network, trying to be first. Obviously this is bad for other users that want to submit, say just simple transfers and also bad for validators who actually have to service kind of all of these failed transactions.
00:02:34.990 - 00:03:15.494, Speaker A: Another place we saw this was in Arbitrum. So there was a little bit of a controversy here back in February as well. Similar type of thing where searchers are going to spam the Arbitram sequencer to try to be kind of the early slot in the next update. But maintaining a huge number of WebSocket subscriptions isn't necessarily practical. What was the proposed solution? Something like proof of work? They did not do this. This was caused quite a stir on Twitter back in February. And then if you look at kind of where they're heading towards now, it's something that looks much more like a priority fee.
00:03:15.494 - 00:04:09.082, Speaker A: So something that looks much more like actually having people kind of moving away from that first come, first serve policy. I believe Ed is giving a talk later today, so definitely check that out if you want to know more about where they're heading. But this was what we saw back in February that inspired Guillermo and I to kind of look at this problem from the optimization perspective. And I think really the conclusion from this is we need some sort of market that isn't just a FIFO mechanism to allocate block space. So I'm going to set up a simple mathematical model of what this actually looks like, kind of what this block building problem is, and use it to try to draw some conclusions about how to come up with a good policy. Or maybe why these like I said, not really in the solution mode in this talk, but why these first and first out policies are bad. We're going to use a simple model.
00:04:09.082 - 00:04:53.270, Speaker A: This is actually a model that we looked at from kind of the multidimensional fee perspective, but it's a little bit simpler here. We're going to have some list of transactions and each transaction has some associated gas costs which we'll call AJ. Gas has some per unit cost in whatever like the numerator or the utility token is. And there's some limit per block on the gas which we'll call B. Each transaction is also going to have some associated utility which is called QJ. So for something like a liquidation, this could be the utility that you get from capturing that opportunity and being able to sell the market. This could also encode things like how much you value getting your transaction in the next block from a softer perspective.
00:04:53.270 - 00:05:42.460, Speaker A: Then we're going to introduce this vector, x, which is going to record which of N possible transactions are in the next block. So Xi or sorry, XJ is one if transaction J is included and XJ is going to be zero. Otherwise the block building problem is then just to choose a utility maximizing X. So in other words, it's to maximize Q transpose X, so that's the net utility from the block subject to the gas limit, which is a transpose X is less than or equal to B, and that X is this binary zero one vector. Of course there's a lot of other constraints that are here, but we can ignore that for the purpose of this talk and this model. And we're going to denote the optimal value of this problem by PSTAR. Again, this doesn't capture the fact that say, one person can get a liquidation opportunity, not everyone.
00:05:42.460 - 00:06:59.150, Speaker A: So this model is not totally capture reality, but for the purposes of this talk it is close enough and it actually makes our point even without kind of having these extra constraints. So this problem can be recognized as Wade Knapsack problem for which we know the greedy heuristic is approximately optimal. We can think of transactions in terms of what's called their efficiency in this literature or essentially their utility per unit gas. We sort the transactions from most efficient, so highest utility per unit gas to least efficient and then we just pack the block by taking these transactions in order of efficiency until we can no longer put anything in it. If there's no transaction that's too large in terms of gas cost, we know that this heuristic is approximately optimal. Very strictly speaking, essentially if the gas cost per unit transaction isn't too close to the limit, which is pretty reasonable, so this means that we can on average fit a lot of transactions into the block. Then we get this nice bound that the optimal value from the greedy algorithm is tightly bounds or sorry, p star is tightly bounded by a constant factor of the optimal value of the greedy algorithm.
00:06:59.150 - 00:07:51.390, Speaker A: So you can see say if like m is like ten here we're getting pretty close to the true optimal value with the greedy heuristic. So now we want to think about what does the greedy block look like. So what does the block look like when validators are kind of doing this utility maximization. We're just going to again take the highest efficiency transactions and put them into the block. The utility of this block is just going to be the sum of the utilities of these transactions and K bar here is the number of transactions that fit. So it's better to think about this in terms of the algorithm where again we just start with the highest kind of efficiency transactions and start packing this block until we can't pack anything else because of a gas limit. And this is going to allow us to define kind of like this high utility which is going to be the average utility of the transactions in the greedy block.
00:07:51.390 - 00:08:45.886, Speaker A: From this we can do a very simple bound on what the greedy algorithm would be. So we can lower bound this of what the optimal value would be by saying, okay, we'll take this average high utility and multiply that by the minimum number of transactions that we can fit in the block, assuming that there's some upper limit on the gas cost of all these transactions. So in mathematical terms, all we do is we say the upper limit is this b plus b over b plus is the minimum number of transactions we can fit in the block. So essentially if every transaction is whatever this upper limit is and then we multiply that by the average high utility. Now we're going to look at the FIFO block and the goal here is to say to upper bound this utility and then look at the difference between the lower bound and the upper bound. So the FIFO block is pretty simple. There's a lot of math on this slide.
00:08:45.886 - 00:09:36.820, Speaker A: You can essentially ignore all the math. All we're going to do is we're going to assume that X is sorted in terms of arrival time. So all this means is like we have some global ordering, assume this is possible, assume that we have these absolute timestamps and then we're going to just take the first K transactions until the block is full. If we assume these transactions arrive in a random order, we can very easily upper bound the expected utility of this block. The welfare gap then is just the optimal value minus the value from this FIFO block. And we can bound this quantity, this gap quantity, by looking at our lower bound on the greedy optimal and then an upper bound on the expected utility of the FIFO block. So again, this is just like using pretty standard results for knapsack problems.
00:09:36.820 - 00:10:00.810, Speaker A: Then there's a question of what's the gap for this. We're going to introduce a little bit of notation. Just to remind you again. We saw this thing called efficiency. The efficiency is this utility per unit gas. We already saw this high efficiency term, Q plus. And so that is the average efficiency, or sorry, the average utility of a transaction in the greedy block.
00:10:00.810 - 00:10:40.082, Speaker A: Then this Q minus is just going to be the average utility of the rest of that distribution. So all we're doing is we're taking the top of the distribution, looking at the average, so that's what we can achieve with the greedy block and then looking at the rest visually, this might look something like this. Say if we can fit ten transactions in the block, then the top of the distribution is going to be this Q plus here and then Q minus is going to be the tail. This is something that pretty quickly decays like an exponential. But you can imagine any type of distribution here. It's reasonable to probably assume that these distributions are not flat. So then the main result is this gap term.
00:10:40.082 - 00:11:42.880, Speaker A: So first we're going to bound the gas size of transactions. I already said the maximum is B plus. We're going to also introduce a B minus and this gap is bounded. So essentially the optimal value of, sorry, this should be swept p star minus p FIFO is bounded by this quantity and this quantity is positive essentially whenever Q plus is greater than Q minus times a small constant factor related to the size of the maximum transaction over the size of the minimum transaction. But very intuitively you can think of this as whenever this distribution is not flat. So whenever Q plus is quite a bit greater than Q minus, so whenever you have some number of high utility transactions, this term is going to be or this equation one is going to hold. And whenever we have this inequality holding, we're going to have a strictly positive gap on p star minus p 50.
00:11:42.880 - 00:12:26.362, Speaker A: It's simpler to kind of assume that the number of outstanding transactions is large. So this k bar over n term is small. And in that case we have this simpler bound that just says the gap is positive whenever q plus times this quantity that's related to the maximum transaction size over the minimum transaction size. So b plus over B minus times kind of the tail average utility. Whenever this is positive, or sorry, whenever this inequality holds, the gap is going to be positive. Again, this means that anytime you have a distribution that's not flat, you have a positive welfare gap. So this bound is quite loose, which we see in practice with very simple numerics, but at a high level.
00:12:26.362 - 00:13:17.290, Speaker A: All this says is using very simple results from knapsack problems, assuming that all transactions don't have the same utility, we can show that there's always going to be a social welfare gap when you're doing this first come, first serve type of ordering policy. And we plot this for two different distributions. On the left you actually have a distribution with very quickly decaying tails. So this roughly says that most transactions kind of have a pretty similar utility. And even then when we look at the, in this case, this isn't an additive gap, this is actually a multiplicative gap between p star divided by p FIFO. On average it's like over ten for small blocks and then even for large blocks it's two to three. The solid line denotes the average.
00:13:17.290 - 00:14:03.222, Speaker A: We have like the 25th to 75th percentile for the random kind of experiments that we do here. And then the dotted line or sorry, the dashed line here denotes the gap that we have. So again this gap is quite loose and in practice we actually see that the welfare gap is much worse. With this very simple type of heuristic on the right we have a heavy tailed distribution. So here we don't plot variance bars because the variance is infinite, but we plot the average and then the dotted line is going to be the median. So if you look at the y axis here, the welfare gap is something like ten to the fifth. So what does this say? This says that if your distribution of utility is heavy tailed, so that means that you have some transactions that are quite a bit higher utility.
00:14:03.222 - 00:14:52.010, Speaker A: So maybe liquidations versus lower transactions then doing this first come, first serve policy leads to an absolutely massive welfare gap in expectation and back to what we saw earlier. This causes searchers to just spam the network. So it's not like you're getting around these types of opportunities, trying being realized. You're just encouraging something like transaction spam. So this is a long talk about using tools from optimization. Even if you could implement FIFO type policies, there is going to be a welfare gap and that causes these benign users to pay for their externalities. I only outlined kind of the issue in this talk, but I wanted to point to some other folks, a lot of folks that are presenting today who are talking about solutions.
00:14:52.010 - 00:15:35.282, Speaker A: One kind of path of additional research is trying to better characterize what the value is of transaction reordering and designing mechanisms. So designing applications that minimize this cost or minimize the cost of mev so that's some work from Guillermo and Troon is presenting on that later today. Relatedly, you can make applications that are order independent. So in this case, you're only looking at the utility of transactions that get into the block. But as long as you get a slot in the block, you don't care about the reordering within the block. So applications like Penumbra use batching. Of course, we can also improve the utility elicitation mechanisms for transaction inclusion.
00:15:35.282 - 00:16:28.120, Speaker A: This is a hard problem. So there's some theoretical work for Miriam and colleagues who have looked at this problem with a recent paper that came out this summer. There's also work towards having better auction mechanisms that actually work on chain. I believe Malesh and Troon are both giving talks later today, perhaps related to this. And then a lot of people are working on implementations, as you know, shout out to the Flashbots team, the Arbitram team, and many others who are working towards implementing policies that have sensible markets for block space. And so I'd encourage you to check out a number of these talks later today with the takeaway that it does make sense to come up with ways to allocate this block space in a sensible fashion. So we want to allocate the block space according to maximizing social welfare instead of just tacking on this first come, first serve and saying that's fair.
00:16:28.120 - 00:16:35.580, Speaker A: Anyway, for more info, there's a short note that kind of goes through the mathematical proofs here and happy to answer any questions. Thank you.
00:16:45.410 - 00:16:46.510, Speaker B: Great talk.
00:16:46.580 - 00:17:33.950, Speaker C: Thank you. So I think one way I think about this sometimes is that you can sort of put batch or like blocks, block and block time and discrete time on a spectrum where on the one extreme you have first and first out, ordering with very small buckets, very short block time. And on the other extreme, you have your one block a year or something. And if you think of things in this spectrum and you interpret your results sort of without thinking about anything else, I would understand that sort of the most efficient thing you can do is have a block time as long as possible. But obviously there are other considerations, or maybe I've misunderstood. So I'm trying to sort of understand if you think of sort of first come first, the FIFO ordering as like just a very short block time. How do you determine the block time? What are the trade offs?
00:17:34.450 - 00:18:19.866, Speaker A: Yeah, I would say this work doesn't address that whatsoever and I don't think there is any immediate unfortunately, there's no immediate conclusion that you can make from this model about what's a good or what's a bad block time. Of course others have looked at this and about whether when you lengthen or shorten the block time, what types of effects that has on what types of transactions get included. But unfortunately, I can't say anything from this model. This model is purely like you have inclusion mechanism. I phrase it in terms of a block, but you could even think about this utility policy as just the top of the block. So it's like just like the few transactions that get into the top of the block or you can think about it in terms of a short block, in terms of a long block. The nice thing is kind of these results are independent of that.
00:18:19.866 - 00:18:40.274, Speaker A: So they hold regardless, which I think is good because it allows us to make a strong statement about first come, first serve for any type of kind of allocation mechanism is bad, but I don't think I can make any statement about how long a block time should be based on this. The model is unfortunately too simple.
00:18:40.472 - 00:18:42.580, Speaker C: Do you have plans to extend it?
00:18:43.350 - 00:19:03.260, Speaker A: Not really. If there's something interesting, I think with this we set out to make a statement about kind of from the optimization perspective, this first and first out mechanism doesn't make sense and so I haven't really pursued this beyond that.
00:19:03.710 - 00:19:04.426, Speaker C: Thank you.
00:19:04.528 - 00:19:05.660, Speaker A: But good question.
00:19:07.390 - 00:19:58.874, Speaker B: Thank you. Great talk. Related question. So it seems like a higher order correction to your model would be the non stationarity of the utility of the transactions, right? Like Arbitrage, for instance, the more you wait, the more value you have in the, say like arbing against an outside source or whatever. But it's hard for me to think whether this correction works in the same direction or in the opposite direction. Do you have an intuition for if this correction would make the gap larger? Because it looks appropriate, it might be actually in the same direction. Because if you have to wait more for the transaction, if first infrastruct would make Arbitrators shoot their transactions earlier and then there's less value there.
00:19:58.874 - 00:20:10.720, Speaker B: But on the other hand, that value eventually gets captured by someone, so it might happen later. So anyway, do you have an intuition for whether this correction would be yeah.
00:20:11.730 - 00:21:06.686, Speaker A: This is, I think maybe related to potential follow on work, similar to Quintess's question as well. But if you're exactly right, that if you wait longer, let's assume that there's some underlying price process and that has some variance in it, and if I wait I have a longer block time, then maybe those Arbitrages are more valuable. And so that would make the transaction utility distribution less flat. Right? So it would make that Q plus term even higher than the Q minus term with only Arbitrage transactions. While I used Arbitrage and liquidations as examples, that's not the only things that we're thinking about. But for Arbitrage, if I want to make a statement about Arbitrage here, I can probably come up with in expectation, q plus is going to be much higher with a longer block time, therefore the gap is going to be larger. So I think you're exactly right on that sense.
00:21:06.686 - 00:21:17.320, Speaker A: We haven't really thought about extending this model that much, but it would be interesting if there are, I guess, other questions that it makes sense to answer with this type of model. I think that would be interesting to do.
00:21:18.090 - 00:21:19.000, Speaker B: Thank you.
00:21:22.730 - 00:21:23.220, Speaker A: Thank you.
