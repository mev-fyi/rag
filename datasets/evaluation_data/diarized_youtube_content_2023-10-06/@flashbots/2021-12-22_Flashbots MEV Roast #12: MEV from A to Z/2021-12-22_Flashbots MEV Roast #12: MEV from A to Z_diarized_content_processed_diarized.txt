00:00:00.170 - 00:00:07.726, Speaker A: That will be the best. That's it for the roast. And let's start.
00:00:07.908 - 00:00:09.390, Speaker B: Can we do curses?
00:00:11.170 - 00:00:13.370, Speaker A: Yes. It's your personality.
00:00:13.450 - 00:00:31.750, Speaker B: Fuck yeah. Okay, great. In that case, I can roast a little bit better that way. Thank you everyone for coming to mev. Mev roast number twelve mev from A to Z. We are sponsored by Amazon. They are absolutely our sponsor, as you can tell by the little Amazon smile.
00:00:31.750 - 00:00:45.130, Speaker B: Yeah. Part zero is the intro and meme section. Do we have any memes to present today? That's okay. If we don't, we'll be getting the animal mascots later and that's going to be pretty controversial.
00:00:46.510 - 00:00:49.130, Speaker A: Having you here is having the meme.
00:00:50.430 - 00:01:16.862, Speaker B: Thank you. And I like that you use the laser eye picture. I actually just changed that back on Twitter, but it's pretty cool. So yeah. I am the meme. I'm Hudson. I am from the Ethereum Foundation and also from Zcash Grants Committee and also from Texas where we just had a big winter storm and I survived, so I now know how to handle snow.
00:01:16.862 - 00:01:29.498, Speaker B: Kind of. Let's see. I guess we can get started on the presentations. Unless there's anything else for intro. I'm kind of like stumbling through this, so anyone stop me if I need to do something different?
00:01:29.664 - 00:01:42.006, Speaker A: Oh, no, you're doing great. We're all waiting for your explanation to the last row's question that you will have this grand revelation at the end. But I do have a question for you, Hudson.
00:01:42.118 - 00:01:42.780, Speaker B: Sure.
00:01:43.650 - 00:01:45.870, Speaker A: What do you know about mev?
00:01:48.130 - 00:03:08.460, Speaker B: Okay, so I've done research in the past 24 hours, so let me tell you where I came from and where I am now. So mev, I thought, was like, when you front run a transaction or you just do stuff within rearranging or reordering transactions to make extra money, like arbitraging or doing something like that, I found out it goes a lot deeper than that. And there's a lot more ways that you can extract mev from a block or from a community ecosystem. So that's kind of where some of my roast questions are going, so y'all can see those ahead of time and start to think of some answers. Basically thinking about mevs beyond DeFi was kind of like a theme in my head because I didn't know if you can do NFT mev or maybe someone's leaking secrets and then you get the heads up on that and so you leak a different secret or stuff like that. So that's something that I was kind of thinking on a little bit in my noggin. What else is going on? Can someone give me just like 1 minute version of what was the first paper on mev? Because I don't know if I went far enough back in time.
00:03:10.270 - 00:03:13.062, Speaker C: I'm going to mention that briefly at the beginning of my presentation.
00:03:13.206 - 00:03:14.538, Speaker B: Perfect. Okay.
00:03:14.704 - 00:03:17.210, Speaker C: Including like a short definition of mev.
00:03:17.710 - 00:03:24.060, Speaker A: That's actually a great question because I think the author of the first paper is sitting here and smiling at you.
00:03:26.210 - 00:03:43.940, Speaker B: Nice. All right, so let's go ahead and get to the presentations then, and we can have a little bit extra time there, so we don't need any more intro. So quantifying on chain mev activities on ethereum presentation by Alex Obadiah. Obadiah, help me out with the last.
00:03:45.210 - 00:03:47.654, Speaker C: Whatever, however you want to say it is fine.
00:03:47.852 - 00:03:58.140, Speaker B: Alex. Oh, my God. It's Alex. All right, go right ahead. Obadiah is something that sounds really biblical. I don't know why.
00:03:59.310 - 00:04:02.220, Speaker C: There is, like, a biblical thing related to that, I think.
00:04:04.270 - 00:04:16.320, Speaker B: All right, but not to bring religion into mev. What if we did, though? Okay. Anyways, Alex, go ahead with your presentation. Feel free. I don't think I need to run the slides. I think you got.
00:04:20.370 - 00:05:20.290, Speaker A: It up. I think the structure of today's, we have two presentations. This is very different from our usual format, which is gemmed with guest speakers who are to be challenged and roasted. This time is Alex and Phil gets roasted. And so the reason for this is because we would like to do a deep dive into the Russian dolls, which has no illustration picture in your head of mev. How many layers of mev do we have in terms of what accounts for mev, and where does empirical current mev extraction activity lies? And where is the theoretical upper bound? So Alex question or Alex presentation will be focused on the existing on chain activity that we and a few other scholars are quantifying, and Phil's will be on the theoretical upper bound.
00:05:21.190 - 00:05:29.846, Speaker B: And I am downloading an air horn app so I can cut you all off with, like, two minutes left and make it really annoying. So you better be on time.
00:05:30.028 - 00:05:30.760, Speaker C: Beautiful.
00:05:31.290 - 00:05:33.480, Speaker D: I would also accept Jeopardy music.
00:05:34.330 - 00:05:39.740, Speaker B: Okay. Yeah. Or, like, what's the Academy Awards play you off. Yeah.
00:05:42.910 - 00:05:48.634, Speaker C: All right, I'm going to get started. Unless there's anything else.
00:05:48.752 - 00:05:50.698, Speaker B: No, go right ahead. Go right ahead.
00:05:50.864 - 00:06:33.074, Speaker C: Sweet, sweet. So as a quick thing, though, as Tina mentioned, I'm mentioning that for the new people that have just joined the call, the roast is open and relaxed atmosphere, and we're here to share and learn together. One thing I will say, though, is for the sake of everyone's time, we'll have a Q and A at the end of the presentation. But I do understand that your questions are going to come up as the presentation goes on, so feel free to pop them in the chat, and then at the end, we'll kind of pick from those, plus have an open forum for people to ask questions. That being said, yeah, let's get started. Also. Yeah I won't click on admit.
00:06:33.074 - 00:07:33.758, Speaker C: I trust you to do that. So the mev conversation in general is growing, and part of our mission at Flashbots is to help the community understand it better. And so this roast purpose is obviously, hopefully for you to get a better grasp on what is mev so let's get started. So what is me? So one line, one sentence definition is that mev is a metric that represents the total value that can be extracted permissionlessly from the reordering, inclusion or censoring of transactions. So let's dive a little bit deeper into what that means. Let's first start with oh, and by the way, the term mev was coined by Phil and his co authors Phil, who's going to present the second presentation in the paper called Voice 2.0. Anyway, so Ethereum is a bunch of blocks, right, that are kind of appended to each other.
00:07:33.758 - 00:08:57.080, Speaker C: And then each block contains a set of transactions from the first to the last slot of the block. And so within Ethereum the concept of time is discrete as opposed to continuous. By that I mean that time advances per block and then within each block time advances per transaction and transactions on Ethereum are executed sequentially. And so what happens when users submit transactions? And you have this little graphic here thanks to Sam from our community for sharing it is you have several senders submitted transactions and before transactions are included in a block, they're part of this pending pool, this waiting room if you will, where miners pick actions within that pool and include them in the block. The way they're going to pick these transactions usually and the way they're going to order them within the block is going to be related to the transaction fee that they pay to the miner which is a multiplication of the gas price times the gas limit. So that's the kind of conventional ordering of transactions. You'll note that the miner is the ultimate person that orders transactions and while they will traditionally order it, relate to their financial incentive by how much money they're going to make from it through the transaction fees, they could order them in any way they want.
00:08:57.080 - 00:10:22.446, Speaker C: So mev extraction on Ethereum today has been mostly by DeFi traders and bot operators. So what I mean by this is it's essentially the senders here or types of senders here that execute trading strategies where transaction ordering matters. So think of for example, price arbitrage or liquidations. So why would these strategies be dependent on transaction ordering? So taking price arbitrage, price arbitrages are ephemeral opportunities where for a moment there is a price inefficiency between different liquidity pools and you're trying to snatch that opportunity and that opportunity is going to go away either because someone else snatches it already or because there's a general rebalancing without getting into the subtleties of it. For liquidations, liquidations of loans, for example, in a lot of protocols you're going to take out a loan and you're going to collateralize it with some asset and there is a mandated collateralization ratio that you need to respect. And so if the price of the asset falls under a certain price target, then the collarization ratio of your loan is going to be below the required collateralization ratio. And so your loan is going to be able to be liquidated.
00:10:22.446 - 00:11:40.800, Speaker C: And so that price update to the protocol is usually a price Oracle update. And so as someone who wants to seize that liquidation opportunity, you want to be after that Oracle update. So again, this is where the sense of transaction ordering comes in, right? Moving on to the next slide. So there's been a bit of confusion around Mev because the term itself that was initially coined again by Phil and his collaborators was called Miner Extractable Value. And what a lot of people took from that term was that miners are extracting this value, right? But what the term minor denotes is the theoretical maximum extractable value. Because going back to these opportunities, right, the Miner could in theory put themselves basically copy these transactions that are capturing some value and capture the value themselves, right? And so what the Miner term denotes in minor extractable value is essentially the upper bound on what the most powerful entity related to transaction ordering can extract in terms of value. So the permissions that miners have are essentially the constraints on quantifying that value.
00:11:40.800 - 00:12:38.670, Speaker C: And so there is this theoretical mev that you see in the circle. And then there's this extracted Mev, which is what has been recorded on Chain and what we've tried to quantify. And as you can see on the right, there's been several efforts to quantify this that have happened relatively recently since there's Mev Explore Ezero that we released on Monday, as well as a team at Imperial College. I'm not sure if they're on the call, but if they're not, shout out to them. That released a paper in January and a paper that was released recently by investor Judic Sambu. Also trying to quantify some of that activity that I just mentioned. So it's more related to DeFi trading activity, but I hope you can see the relation between that and Mev and how they're both one and the same in some way.
00:12:38.820 - 00:12:46.786, Speaker B: Three minutes until your question time. Unless you want to move into your question time for a little bit more of this presentation, I'd be happy to.
00:12:46.808 - 00:13:15.994, Speaker C: Take maybe one or two questions just because it's important to if there's anything that was unclear that it's clarified before we dive a little bit deeper into this. But what is going to go the following that's going to happen is I'm going to talk about this gray circle, and then Phil is going to talk about this white circle, essentially. So maybe if there's any kind of confusion, I'm happy to answer a question now. If not, we can also keep it to the end.
00:13:16.192 - 00:13:19.850, Speaker A: I think, Alex, you are running out of time.
00:13:20.000 - 00:14:02.666, Speaker C: All right, sounds good. Sounds good. All right, so let's focus on Mev Explore, which we released on Monday, and our approach there. So that's the little blue circle. So we released Mev Explorer on Monday, which is a live dashboard of mev activity, as well as a transaction explorer of Mev transactions that we've included in our inspection of the Ethereum blockchain. And we found these values that you see here. So we've gone back to January 1, 2020, and since then we found about 300 plus million dollars of extracted mev and we kind of display a few numbers here.
00:14:02.666 - 00:15:26.210, Speaker C: So the last 30 days, last 24 hours, cumulative and daily extracted, we also drill down into this value and we try to look at it from the protocols these transactions interacted with, as well as the type of strategies like the ones that I mentioned before, right? Arbitrage and liquidation and arbitrage plus liquidation, as well as how that value is split between the miners mining the mev transaction and the senders. I'm going to explain all this in a little bit more detail, but kind of going through this. Finally, in the dashboard we're also quantifying the network activity from extracted Mev. So trying to understand how much gas Mev transactions took as the overall gas usage of the Ethereum network as well as some more specific network activity from what we've called failed Mev transactions which I'm going to explain as well in a second and the imply wasted Ethereum blocks related to them. In terms of the transaction explorer, which is in the leaderboard section, we put all the transactions there that are inserted into our database. And there's a little Easter egg where the ones that have a blue highlight are flashbots transactions. You can spell them particularly because they have a zero gas fee.
00:15:26.210 - 00:16:41.306, Speaker C: I won't go into the detail of how the flashbot system works. Anyway, it's important to note, and that this is what we're going to go through a little bit in more detail, is that we only cover a certain set of protocols and a certain type of transactions and we also use some data sources, not all the potential data sources we could be using, right? So we cover eight protocols mentioned here, and within these eight protocols we cover different types of strategies for each of them. More importantly, we don't cover multi transaction mev, so we only focus on single transactions and the value that they snatched or seized. So if a strategy involves multiple Ethereum transactions, that's not something we'd be able to cover currently. So one example of such strategies would be sandwich trades, where you submit a transaction before uniswap order, for example, and after it as well. We also don't cover centralized exchange to decentralized exchange arbitrage, which intuitively is a large chunk of the activity related to transaction ordering. We also don't do any address grouping.
00:16:41.306 - 00:18:17.382, Speaker C: So if someone is executing a strategy with several addresses they control, we don't currently group these addresses and try to find the ultimate owner. The type of data that we look at is mentioned here, and one thing to mention is we don't look at any mempool data. So it's hard for us to see how many transaction replacements were done in a priority gas auction or to quantify other types of network overhead, like the network overhead, for example, from these repeated transaction replacements. And so how do we calculate extracted me? So how do we calculate this number that's shown here and then the kind of breakdown by date? So we essentially look at two types of transactions, successful and failed mev transactions, and within failed, they're reverted and checked mev transactions. So, as I mentioned before, we scrape the Ethereum blockchain and we essentially look at the logic inside each transaction and we kind of do some accounting of understanding the starting balance, the ending balance, and then trying to understand how that works. I'm going to give you an example right after this to make it more concrete. But what is essentially counted and extracted mev is the successful Mev transaction value that was created from it or captured from it, plus the related gas fees, as well as the related gas fees of failed mev transactions.
00:18:17.382 - 00:19:29.710, Speaker C: Why we're counting the gas fees for failed mev transactions is because even though that transaction didn't capture any value, because if it failed to capture value, to have the privilege to go for this Mev opportunity, they still paid a transaction fee to the miner. And that's mev related value that was paid to the miner, right? Within the failed mev transactions, there are reverted transactions and checked transactions. There are two different types of failed reverted would be, for example, you ran out of gas, the transaction ran out of gas, or someone else snatched the opportunity before you. And checked is a more subtle one, where before actually firing the mev transaction and paying a lot of transaction fees, you actually first do a check of the relevant liquidity pools, for example, that you want to do a price arbitrage on, and you decide based on that check whether to fire an Mev transaction or not. Ultimately, the result is the same in terms of failed mev opportunity. So let's go through a quick example, which I'm conscious. This is a little bit theoretical and so it's nice to anchor it in something more concrete.
00:19:29.710 - 00:19:58.966, Speaker C: This is an example of a transaction that's part of our database. And this is a screenshot from Ether scan. So as you can see, I'm using the transaction action, which is not always correct, but in that case it works. If not, we should use the tokens transferred. But this particular sender started with 4.15 approximately Ether and ended with 4.24. What they did in the middle is they swapped that Ether for USDC on uniswap.
00:19:58.966 - 00:20:45.770, Speaker C: Then they swapped that USDC for Wu, which is a token I'm not aware of. And then they swapped the Wu for Ether. And so they ended up with more Ether than they started with. And this is all happening within the same transaction, right? And so if you kind of break down, if you kind of break down the extracted mev here. So you take the ending balance and you subtract the starting balance from it, and then you look at the transaction fee, which is the TX fee collected by the miner, right? Because that's damn it. Because that's part of the value from mev that was given away. And so essentially what you have from the extracted mev breakdown is you have the income from the mev transaction sender and the income from the mev transaction miner.
00:20:45.770 - 00:21:06.466, Speaker C: So this is essentially a very simplified version of the logic of what we do within Explore and what we do with transactions. We do something similar for failed and reverted. But in that case, we look at their gas fee as the only extracted mev that was created from them.
00:21:06.568 - 00:21:08.180, Speaker B: You got five minutes left.
00:21:09.110 - 00:22:09.570, Speaker C: All right, I'm going to rush. So, as I mentioned before, there are three different at least there are two other approaches that were recently released of trying to quantify that extracted mev, the one from Imperial and the one from University of Luxembourg. There are differences in them in that we cover different date ranges, we have different approaches. So we look at the transaction trace, whereas Imperial looks at event logs. And University example takes a very generic approach of looking at just trying to identify bot operators by doing some cluster grouping and then examining the transaction structure directly. We also cover different protocols, which obviously is a big difference, and relatively different transaction types, right? So in the case of De Luxembourg, they focus on front running, but essentially they also include sandwiches in that which they call insertion. Imperial focuses on sandwiches, arbitrages and liquidations.
00:22:09.570 - 00:23:02.280, Speaker C: And we focus on arbitrages and liquidations. And arbitrage and liquidations. Why I'm talking about this and why this is important is that what I want to essentially say is we're all kind of trying to do the same thing, which is trying to get closer to that gray circle and understanding that better. And these different efforts are all kind of related to doing that. How can we get closer to that gray circle, right? So we can increase our protocol coverage, cover new DeFi protocols. OG DeFi protocols can expand single transaction mev types to more, I mean, to different ones. For example, coupon, redemptions for rebasing tokens, and some of the other things mentioned here.
00:23:02.280 - 00:24:00.140, Speaker C: One of them, by the way, is adding in canceled MV transactions, which was suggested by community member Encore. And that is extremely relevant. That being said, it's not the only thing to do. It's not only about adding more, making the number bigger, it's also about cleaning the data more and making sure there is less and less misclassifications. So in the Transaction Explorer section, we have an outlier mev transaction currently in review tab, and we also have a public repo where people can open issues for misclassified transactions they found, as well as anything else that they want to improve as well as the inspectors, we're using themselves. The code is all open source and we encourage you to check it out and potentially contribute to it. Finally, we're also working closely with the Imperial Team that was mentioned before in comparing our approaches and our databases and understanding the subtleties of our methodologies better.
00:24:00.140 - 00:24:37.826, Speaker C: The last thing is also to have more discussions around mev because there are a lot of kind of broader questions. That three that I mentioned here and as part of the public repository that I mentioned before, there's a discussions tab in it where we definitely love to have you create discussions there and understand some of these questions. Is there such a thing as negative mev is mev that is not permissionlessly extractable really mev? Like that first point about Keeper dow and yeah, sorry, I rushed through the end a little bit.
00:24:38.008 - 00:24:42.642, Speaker B: You got about a minute or two left so I can throw the questions at you that were in the chat.
00:24:42.786 - 00:24:43.798, Speaker C: Yeah, please.
00:24:43.964 - 00:24:58.730, Speaker B: So this one will be a quick answer. Can you make the start date of implied wasted ethereum blocks configurable? Currently 4600 blocks out of 2.2 million mine blocks at the same time does not really convey a good picture since there's almost no activity until July.
00:25:00.050 - 00:25:36.914, Speaker C: It is something we can make configurable. So on Metabase, I believe we can add filters. I won't go into the details of Metabase itself, but it's definitely something. To be clear. This dashboard that we released, Mev Explore, is a V zero, as the name says, and we're planning to provide a lot more granularity into this data and to also provide a lot more different views. So making a lot of it configurable so you can look at the date range that matters to you, is definitely something we want to do. It's not something you can currently do with the current version of the dashboard.
00:25:36.962 - 00:25:46.700, Speaker B: No. And then what about giving up on mev transactions by replacing your transaction with a transaction of 2100 gas or higher? Are they calculated to you?
00:25:47.150 - 00:26:42.190, Speaker C: So they're not calculated, and that is what I mentioned in the canceled mev transactions here. So there are two type of canceled. The one that you just mentioned and the second one that is quote unquote canceled, where you essentially burn a bunch of gas tokens to lower your effective gas price or your gas gas spend. And the other type that you just mentioned where you kind of spot that you might have lost a PGA and you give up on that transaction. Right now we're calling them canceled mev transactions and they're not currently counted in. I will say that when they are counted in the split that is shown here, the split by role should differ significantly because this is again, no mev was seized, but a lot of gas. I mean, not a lot of gas, but some gas would have been spent maybe not necessarily by the example that was mentioned by that question, but by the second one, the gas tokens that are burned.
00:26:42.190 - 00:26:58.100, Speaker C: So I expect this to change as well as the network overhead here to change where the green are successful and red are failed. I expect the failed to be significantly higher. I hope that answers the question.
00:26:58.550 - 00:27:32.270, Speaker B: Very good presentation, Alex. And yeah, I think that did answer the question. Thank you for the questions from Marius world famous Geth developer. And we're going to go ahead and move on to Phil who's going to be talking about extractable value, a clockwork finance, a mechanized framework for economic security and smart contracts. So he'll have 15 minutes for slides and 15 minutes for questions. And I think that's it. Yeah, this is a 50 minutes thing.
00:27:32.270 - 00:27:34.830, Speaker B: Yeah. There we go. Go ahead, Phil.
00:27:37.010 - 00:27:52.690, Speaker D: Great. Hey everyone. So great to see everyone here and thanks for coming and being interested in mev and for the great questions. Let's see. So they recently upgraded Linux to make it way crappier for hangouts. Can you guys see these slides?
00:27:55.190 - 00:28:04.120, Speaker B: It is loading. It is loading. We can see them and they look great. And real quick, do you want the air horn at certain intervals or just at the very end?
00:28:05.930 - 00:28:07.400, Speaker D: What did you say? 15.
00:28:07.770 - 00:28:22.090, Speaker B: You have 15 minutes for a presentation. 15 minutes for presentation, 15 for questions is what the agenda says. If you want to go into that question time a little bit for your presentation, that's fine too. But how do you want to be rushed?
00:28:22.610 - 00:28:26.990, Speaker D: Yeah, I'll probably talk for 20. You can give me five minute air horn would be cool.
00:28:27.140 - 00:28:28.800, Speaker B: Sweet. All right, go ahead.
00:28:29.810 - 00:29:04.406, Speaker D: All right, so great to see everyone. So today we're going to talk about DFI, we're going to talk about how composability relates to mev. We're going to talk about how we define mev and how we plan on measuring it. And we're going to talk about why mev is such an important metric and how it can prevent DeFi composability from becoming compostability. So today I actually have my Cornell hat on. This is not flashbots research this time. This is Cornell research that I'm doing with co authors khushal, Babel, Mahimna, Kalkar and Ari Jules.
00:29:04.406 - 00:29:37.358, Speaker D: Although it is all open source research that of course plays into kind of the broader flashbots agenda and the research roadmap and kind of synergizes with all of that. And we do plan on probably integrating eventually into some of the products like Explore. So first we can talk about compost. It's a pretty essential to understand this, to understand my talk. So here where I am now in West Virginia. It turns out that recycling is not really that big or existent at all. So in order to reduce our waste, we have to use only materials that can compost.
00:29:37.358 - 00:30:38.690, Speaker D: And that's when you can take food scraps and other kind of degradable items, mix them together, mix them with some soil and some other kind of catalysts and you basically get a pile of worms and other biodegrading entities that give you mulch and fertilizer that you can use instead of cow manure for your garden. So why is this important to DeFi? Well, we're all here kind of talking about Mev and Alex did a great job kind of introducing Mev. So Mev was originally kind of created as this metric to study blockchain and Consensus Security. But as it turns out, I think mev is really the Holy Grail of kind of DFI metrics because it unifies all these different concepts that we kind of talk about here at Flashbots. One of them is Arbitrage and that's kind of in the style of Wall Street bots in like the High Frequency Traders. Another one is exploitation as a source of Mev. So like all these new attacks we've seen with Flash loans and things that blur the lines between Arbitrage and system hacking and compromise, also verification.
00:30:38.690 - 00:31:44.586, Speaker D: So there's a whole literature in software security of how do you make sure programs do what they want, what you want them to do, how do you check these things, how do you develop automated tools to prove to other people that programs do what they think. There's also the concept of Mev, which is minor or maximal as we just kind of went through extractable value. Again, this is kind of important because high Mev potentially could degrade Consensus Security as miners kind of fight against each other and are incentivized to behave poorly. And there's also an important concept here of composability. So like, if you're a DeFi instrument or app developer, how do you make sure your Legos are secure and that they don't affect things that are already in the system and that they're not kind of overly affected by things that other people will deploy in the future or already have deployed on the network. So we can start kind of unifying all these things and talking about how to measure this Mev and how to measure composability and arbitrage and exploitation in the theoretical bound. So how much is there in the system right now on the table? First, by defining mev.
00:31:44.586 - 00:32:36.206, Speaker D: So how do we define Mev formally? So I'm going to give you kind of a hand wavy, high level formal definition here and I expect you to pop questions in the chat if this is not clear. But basically we define mev formally as how much ETH a special Miner account can extract given a set of user transactions t an initial state s and a set of contracts c and the power a Miner has in the system, as we've mentioned, includes inserting their own transactions, censoring and reordering transactions in T. So you can think of T here as the Mempool. Basically. What are all the things people are doing now that these miners or validators or entities that we're looking at kind of have access to? What is the state of the world. These are the things that these entities kind of can't change. So maybe the state of the last block they're trying to mine on top of and what contracts are available to them.
00:32:36.206 - 00:33:22.054, Speaker D: So what code is kind of known in the universe. This is important for things like quantifying mev before and after introducing a certain contract, which is how we relate mev to composability. So we now use this definition of mev, which is how much ETH a Miner account can extract, given all these three things to define composability. Composability basically defines how well smart contracts mix together. So we basically say a set of contracts c composes with the contract C prime in initial states s star. So you'll notice that all these mev definitions are parameterized for certain states. And that's kind of fundamental for various theoretical reasons.
00:33:22.054 - 00:34:15.374, Speaker D: You can imagine a state where a Miner has like a trillion dollars, gives them access to much more mev than a state where they have $0 because they can do things like buy up all the token supply and attack governance and stuff like that. So it's important to kind of put assumptions on these states and to be aware that your contract is probably only going to be secure in certain states if it does anything that's interesting. And then you also have to be aware of what these states look like. So now that we have these kind of state conditions, we basically look at if adding C prime to the set of contracts adds mev, then more mev than having C alone for any state. So basically we're saying this set of contract C that's on the network composes with a new contract we're going to deploy. If adding this new contract doesn't increase the mev of the world substantially. Again, there's some theoretical kind of caveats here.
00:34:15.374 - 00:35:18.046, Speaker D: So we bound this by some function in kind of like a standard definitional way. And we say something composes universally if this holds for all possible contracts and all possible states. But that's going to be something that's very rare, right? You're rarely going to have a contract that's secure in every possible world generally, because we have financial instruments here, they're secure as long as people use them a certain way, or as long as other instruments behave a certain way, or as long as the world behaves a certain way. So now that we have these definitions, how do we use them? So the title today is what's called the Clockwork Finance Framework. And this is kind of an approach to defining and reasoning about smart contract security. And it starts by taking your contracts, let's say, uniswap here, and defining them in this abstract mathematical way as a simple pseudocode CS program like you've seen in all your CS textbooks, but with a universal notation for kind of state entries and things like that. So the idea here is that our goal is to create a number of these mathematical definitions for every contract on the network.
00:35:18.046 - 00:36:06.926, Speaker D: So we can then throw them at our magical math tools and ask how can these things interact and when do they fail? When they're kind of composed in what states and under what actions and strategies. And concretely we can throw the Ethereum network data at it to see how much could miners be making on chain if they were using all their powers today, rather than kind of playing this game with bots. So here's an example of the uniswap contract. This takes an in token and out token and an input amount. It looks up the balance of uniswap in each of these tokens called at x and y and it calculates basically how much the user is sent as this formula of x and y. This is the idealized like abstract x times y equals k invariant formula that's in the uniswap white paper and also the formal verification of uniswap. And then it affects all the kind of state changes required.
00:36:06.926 - 00:37:11.218, Speaker D: Otherwise it outputs this special failure case similar to throwing on Ethereum. So even just having this abstract mathematical model is already useful from a theoretical point of view. So one thing we can do with this is kind of reason about composition. So one thing that turns out to be surprising that this again is research that's not released and not peer reviewed yet, but we plan on having it out very soon and we have been giving talks about it for some time. So in some sense it's a little bit battle tested, but I don't want you to look at this as like finalized peer reviewed in any way. But once you have these kind of models you can start reasoning about them and thinking about things like how introducing multiple AMMS that operate together causes instability by increasing mev. So even if you deploy the same uniswap code twice, you have basically structural mev that exists because users are going to trade in certain ways and any kind of set of trades user makes is always going to expose some arbitrage transaction to the miner.
00:37:11.218 - 00:37:58.760, Speaker D: And that's kind of what we prove algebraically in a very simple way here. It kind of logically follows from the model. And this is interesting because we wrote this proof probably like six months ago or something and I don't think at the time there were even multiple AMMS out there. It was really only uniswap. But since then we've seen, for example, SushiSwap has come out and done exactly this of redeploying plus some token incentives that aren't modeled here but the same AMM. And we've seen these large opportunities that come when uniswap and SushiSwap pools become close in size that is predicted by the model. So that's one use of these models is for DAP devs to think about how does their DAP behave in unforeseen circumstances, how does it behave when it's composed with other DApps or even with itself.
00:37:58.760 - 00:38:07.560, Speaker D: This kind of formal framework of measuring the loss function in Mev is a way for Dapdevs to think about this.
00:38:08.810 - 00:38:09.174, Speaker C: Great.
00:38:09.212 - 00:38:54.722, Speaker D: So now that we have our paper stuff, we also have executable models. So now that we have these on paper models, we can write them down in mathematical software tools. So this is kind of the same program we had earlier written in a framework called the K framework, which you might know from smart contract and EVM verification in a very simplified modeling language. So this isn't the full EVM, it's just a very simple language that carries a little bit of state and allows for an ordered set of transactions called a block and allows kind of arithmetic operations on the state. So here you can see this model is exactly the program we had before when some address in some token wants to swap some trade amount of input for some output token with some gas fee. So it's a little bit more rich than the model we have before. It includes gas.
00:38:54.722 - 00:39:57.290, Speaker D: And what it's going to do is it's going to debit the address that's trading in the input token the amount that it's sending into the Uniswap contract. So this arrow here, Rewrites, means like this execution is going to do this whole block of operations. Then the next thing it's going to do is kind of credit the user with this x times y equals K formula. It's not exactly the formula we had earlier because Uniswap does some rounding to kind of protect its liquidity providers from drainage attacks. So we include that in this model so that it's accurate to on chain state transitions and then the Uniswap token kind of gets the opposite where it gets credited the input and debited the output and the address gets debited the gas fee. So these models are intended to be human readable by kind of anyone who has math training and modular so that each protocol dev can define their own models that are separate from each other, but that can also interoperate. On the same state and the same network S and D here, and allow us to reason about compositions between these things using these definitions that we just showed.
00:39:57.290 - 00:40:56.990, Speaker D: So one thing we do after we define the model is we then spider the blockchain and we look at every transaction, say to Uniswap and pull it out as a kind of programmatic description. And these are a little bit simplified, they don't have slippage limits and things like that that we do have in our data. But it's just intended to basically provide an English language data driven log for the models that can be used by researchers to study what would have happened in the past if these things were reordered or if they composed with something that we hadn't thought about kind of at the time. So once we have these kind of programs, we call them all these inputs that happen on the blockchain. We can ask our tool to kind of automatically find the amount of mev that could have been extracted by a miner given these transactions, and our tool will magically spit out, like, this is the best block order for the miner, and blah, blah, blah. I'm sweeping a bunch of details under the rug. There's a bunch of caveats limitations, et cetera.
00:40:56.990 - 00:42:05.150, Speaker D: So it's not quite magical, but you can stay tuned for the paper if you're more interested in those here. I really want to talk about the vision of what we want to build and kind of get roasted on that. So the vision of what we want to build is basically this definition, this set of definitions of all these DeFi protocols that we can use in existing program verification tools like K to generate things like optimal strategy finders and debuggers for our models that we can throw on chain data at Fuzzers to kind of automatically find strategies, things like that. Why K? Well, K already, like I said, it has a bunch of EVM support. It has a bunch of formalized ERC, 20 models that we can test our simplified models against, and it also has verified smart contracts like uniswap and other kind of DeFi contracts. So it's been used for ETH contracts before, which kind of is convenient, but nothing we're saying here is case specific, and neither are these models. And there are a variety of kind of formal verification tools that you can use to do this verification and use this definitional framework to reason about your contracts.
00:42:05.310 - 00:42:09.430, Speaker B: Hey, Bill, you're halfway through your time. And is there really something called cock?
00:42:10.330 - 00:42:38.574, Speaker D: Yes, there's really something called cock. It means rooster in French, and the logo is a big rooster, cock. And I'm pretty convinced that the French formal verification engineers were, by the way, cock. Like, the whole French formal verification community loves cock. Like, you've never yeah, I'm pretty sure they were trolling people, but this is not like substantiated, and they fervently deny it, as far as I know.
00:42:38.692 - 00:42:39.600, Speaker B: Got it?
00:42:39.970 - 00:43:06.242, Speaker D: Yes. So Cock is probably the biggest, the number one tool that we're looking at possibly compiling into. So we can probably automatically compile a lot of these models into Cock, and we can kind of benchmark the performance of that against K. But fundamentally, these tools are kind of all for doing the same thing, which is mathematically reasoning about these programs and these protocols. Yeah, and Casper is not ETH. Casper. It's a different Casper.
00:43:06.242 - 00:43:39.490, Speaker D: It's a very overloaded name. So, yeah, we've taken our tool and we actually ran it on every on chain uniswap transaction in our uniswap models, as well as a bunch of maker dow transactions. This graph is only for validating the uniswap models. So at the time we first validated our model, there were something like 120,000 uniswap transactions in the biggest pair. We validated only by pair because the uniswap model doesn't use state across pairs. So there's not really a point. The results are kind of path independent along different pairs.
00:43:39.490 - 00:44:30.290, Speaker D: And so we ran about 100,000 transactions through our models in about, I don't know, 500 seconds, ten minutes of wall clock time slower than executing native code by maybe an order of magnitude. But considering these are fully formal models that we can now use to reason, not too bad for validating these. The other thing is a lot of what we're doing here, so this is kind of parallelism when you're looking for the optimal order for mev, because we're looking for the optimal order of transactions. This is actually embarrassingly parallel up to a certain point. So this graph kind of sucks and is very preliminary. We're going to refine this quite a lot. But the point here is in this beginning region of like up to 20 threads, kind of, you get almost linear speed up from parallelizing and this probably holds across machines too.
00:44:30.290 - 00:45:05.902, Speaker D: So we're looking into parallelizing much more massively across various clusters and things like that. But that work is still under wraps. So we use these models to kind of measure mev in practice in various blocks. This isn't the mev that actually happened. So we're not looking back and replaying sandwiching attacks. We're not looking back and measuring what Bots did or anything like that. We're looking back at the list of transactions that happened and throwing each block of transactions into this formal model and saying like, try to reorganize these and extract as much mev as you know how to and give us the best order.
00:45:05.902 - 00:45:58.830, Speaker D: So many of these attacks may not have happened in the past in the blockchain, they're just theoretical. And there are some limitations here. Right? Our models do simplify away some details like Arbitrage Bot wrapper contracts that might make some of these attacks less practical and require an extra validation layer that's kind of beyond the scope of this talk. But the point is that you can use these models to measure and get insight as to what the optimal strategies are on chain to exploit various contracts and also what the order of magnitude of the mev problem is. So here you can see in Uniswap v one, the highest mev blocks are on the order that our tool founder on the order of like 175 ETH of mev, which is 60 times higher than the block reward. Similarly for sushi swap around 120 E. Again, these are very preliminary results.
00:45:58.830 - 00:47:01.326, Speaker D: They're not very clearly presented and that's just because this is early stages of kind of getting all this work together. The other thing we did here is we looked at two more things and I know my time is almost up, but let me just quickly talk about these. So this is an analysis using our tool of two different models that we composed together, Uniswap and MakerDAO, where we swapped out the MakerDAO Oracles for Uniswap as a MakerDAO Oracle. And we asked the question of what would the mev be if MakerDAO in the past were to be using uniswap as an oracle? Not in any smart way, not like averaging over blocks or anything. We just did it in a really stupid way of looking at the last trade price. How much can miners gain simply by manipulating transaction ordering and kind of inserting their own transactions? And we measured that using this tool, again, with some limitations that are in the paper. I don't want to oversell too much, but I think the point here is that if you're adapt dev, you can get insight onto changes like this and how they affect your protocol and your users.
00:47:01.326 - 00:48:12.374, Speaker D: The other thing we did is we looked at the number one example of sandwiching mev in the paper that Alex talked about from Imperial College, and we asked our tool, how much better could the Miner have done than the bot in that example? How much could the Miner have extracted if they were kind of pinching every penny out? And we got the kind of optimal trade insertion for the Miner. So, like, if you are a Miner, what transaction should you do? How much money should you swap in order to profit as much as possible? That's this kind of alpha parameter of what amount you use in your transaction. And this Y axis is how much mev you make if you use that amount. So here you can see our tool being used basically by a miner to solve for what their optimal strategy would have been in a certain kind of execution in the past. And because we're using a mathematical tool, our tool can straight up just give you like a formula that you can then graph on Wolfram alpha if you're a miner and get a graph like this and see how kind of the profit you're going to make varies with how much money you're going to put into the trade. Right? Okay. So I don't have to tell you guys this next part and that's that everything is mev.
00:48:12.374 - 00:48:46.590, Speaker D: Mev is super important. We really want to build tools and approaches and definitions and formal modeling and formal language to measure this in a principled and exhaustive way. Because if we don't measure mev, any mev that we don't measure becomes tail risk in these systems of someone else to find later down the line. So we need a really rigorous and formal approach and that's what we're kind of slowly building up to here. And thank you for participating. Happy to take any questions now because this was again a talk with my Cornell hat. Thank you so much to all my Cornell co authors.
00:48:46.590 - 00:48:59.170, Speaker D: A lot of this work is theirs and not mine, and especially my faculty collaborators and all the ETH community for being super receptive to this. So that's all I have to say. Happy to answer questions now.
00:48:59.340 - 00:49:10.330, Speaker B: You got seven minutes and we got a question from Marius that says, are you only replaying successful transactions or also failed transactions? This would probably skew your results, right?
00:49:10.480 - 00:49:11.374, Speaker D: That's a great question.
00:49:11.412 - 00:49:11.566, Speaker C: Yeah.
00:49:11.588 - 00:49:57.014, Speaker D: So our data right now is we're only replaying transactions that succeeded because we're using the success of the transaction as a heuristic to identify kind of which transactions were eligible to succeed. And that is a very important limitation. So our metric is in some ways a fuzzy estimate because of various subtleties of mev. There are sources of error both in the overestimating and the underestimating direction, unfortunately, and we're trying to quantify and minimize these as much as possible, but most forces are in the underestimating direction. The number is probably much higher than what we've presented. And one of the reasons is that we don't cover failed transactions at all. Another reason is because our state space search is only so powerful.
00:49:57.014 - 00:50:02.750, Speaker D: Like, we're only looking at kind of a limited subset of the state space because we only have that much computation.
00:50:04.450 - 00:50:11.310, Speaker B: All right, Alex has a question. How far are we from miners using such technology to do non transitional transaction ordering?
00:50:13.330 - 00:51:10.820, Speaker D: Yeah, so I don't know if it'll be exactly this toolkit or exactly this framework, but using kind of this approach of developing these models and doing this state space search, that's exactly kind of what I showed you. I don't know if miners themselves are going to do it or if we're going to see specialized kind of companies that specialize in this, which is kind of the flashbots states based searcher role. I don't know, but I think how far out are these tools in terms of finding mev? Hard to say. I think they can be useful today with some engineering effort. That being said, it is a decent amount of engineering effort, and it might be easier to just and more profitable since it's so early, to just encode specific strategies, which is what people do. So you'll have a bot that only does liquidations because the person saw a profitable liquidation strategy. It doesn't kind of do this general thing of looking for constant reorderings and things like that.
00:51:10.820 - 00:51:31.754, Speaker D: So that's most of what we're seeing today, and it's hard to say at what point the efficiency equilibrium will switch so that doing the general state space search is more profitable. But I do think that the technology is there, and I don't see why that wouldn't happen. At some point soon, we got a.
00:51:31.792 - 00:51:41.770, Speaker B: Couple more questions, or three more actually, and then time will probably be up. What's your intuition on how big this total extractable mev is versus extracted EVM or mev?
00:51:43.070 - 00:52:16.950, Speaker D: That's a great question. I think it's really hard to say. It depends on what you mean by extractable mev, which I know is a little bit of a cop out, but let's say you take the theoretical maximum. I think it's way higher because that would include every single exploit that hasn't been discovered yet. Every single hack that no one's known yet, every single flash loan attack that hasn't been done, every single reordering that people haven't anticipated. There's just so many different sources that I can't anticipate it. I can't see it being not being, like, 101,000 times higher or more than what people are extracting.
00:52:16.950 - 00:52:34.830, Speaker D: That being said, what we're measuring is also, like, some approximation of that. We can't account for every single hack because that would require solving the halting problem and a bunch of other things. So in terms of that estimate, I still think that's an order of magnitude higher than probably what people are extracting.
00:52:36.290 - 00:52:40.910, Speaker B: Marius asks, can your tool be extended to compute inner block reordering?
00:52:41.490 - 00:53:17.980, Speaker D: Yeah, so our tool doesn't care about blocks at all. The block concept in our tool is really just a sequence of transactions. In fact, we were even considering renaming it in the formalism. So I think the block is almost, like, at the meta gain level of what does a miner want to try to reorg? But, yes, we can kind of reason about multiple blocks by kind of compressing them into one quote unquote block. We also use kind of oracles to provide things like block number and block timestamp. So you have to kind of build in semantics for that. But that's super easy to do.
00:53:17.980 - 00:53:29.098, Speaker D: And we do look at multi block reorgs. It just turns out, in many cases, the single block case is actually most of the profit these days for subtle reasons.
00:53:29.274 - 00:53:30.560, Speaker C: Here's a good one.
00:53:31.090 - 00:53:39.570, Speaker B: Gigmo asks in the MakerDAO, using Uniswap as an Oracle simulation you did, does the 1 hour delay in MakerDAO's OSM Oracle affect your results?
00:53:43.670 - 00:54:46.562, Speaker D: Yeah, so we took the 1 hour delay out for our uniswap kind of results. I don't know how you would necessarily integrate that. So that's, like, a design question. If you have just an hour delay on the Uniswap kind of price execution, like, you use the last price, but with a delay of an hour, my guess is you'll get the percentage of mev equivalent to your hash power. So if you have 20% hash power, your mev will go to 20% of what it is in our figures. Basically, if you do something like average over that hour, mev actually goes up pretty substantially or, sorry, goes down pretty substantially because it's harder for you to manipulate that whole number, which is kind of what the Uniswap people actually propose. At the same time, I don't think that's a silver bullet, because there's still kind of attacks that bias the Oracle but don't fully extract all the mev that's on the table, but maybe make certain mev more or less likely to be extracted that are still economically rational.
00:54:46.562 - 00:54:52.620, Speaker D: So, yeah, this is a very theoretical attack with the MakerDAO Oracle. Like, no one would ever actually implement it this way, I hope.
00:54:53.390 - 00:55:01.390, Speaker B: And then final question from Makira. How were you able to use K and the Uniswap k model to check for previous mev opportunities.
00:55:02.770 - 00:55:46.710, Speaker D: Yeah, so basically what we did is we have case semantics where we feeded a block, and the case semantics can execute that block in any order it wants to, so it can choose to execute whatever order, and it can also choose to leave certain transactions out. And then we also put certain points where the Miner was able to insert a transaction. So reasoning about the generic space of minor insertions turns out to be really hard. So we just basically put a bunch of random minor transactions in points with variables in the values. So we'd have all the transactions in the block. Let's say Hudson trades three die for one ETH with slippage limits, blah, blah, blah. Tina trades two ETH for three Die with slippage limits, blah, blah, blah.
00:55:46.710 - 00:56:25.270, Speaker D: Plus we'd have like, miner trades, x ETH for die. And then you basically ask the K tool solve for X such that X is maximized, and it kind of does its magic and says, the highest X I can find is when this formula is satisfied. And here's a proof, potentially. So we use the proving capabilities of K to basically solve for the optimal amounts that a Miner could insert. And we also basically did this for every possible transaction order because there weren't actually that many transactions in the blocks, so we were able to do that exhaustively.
00:56:26.330 - 00:56:31.350, Speaker B: So what has been the most surprising result of this analysis so far? This is from Robert Miller.
00:56:32.810 - 00:57:09.960, Speaker D: Yeah, I think it's been surprising, at least for us, how efficient people are in finding, like, I think the sandwiching attacks people do on Uniswap are actually pretty good. And considering how fuzzy the bot Miner game is now, they actually capture a decent percentage of the available mev. So I was expecting the bots to be much worse at what they do and be burning more money than they are. The bots are actually, I think, the more sophisticated actors in this whole game right now, which we kind of knew, but it was surprising to see it. It's always surprising to see it kind of come out from, like, first principles. I guess.
00:57:12.970 - 00:57:14.870, Speaker B: We'Re on to the next section.
00:57:15.370 - 00:57:16.214, Speaker D: Amazing.
00:57:16.412 - 00:57:40.558, Speaker B: I wanted to use the airport so bad, and I forgot to use it during your presentation, so I just had to pull it out there. Thank you so much, Phil. All right, well, we're on to Roast Questions. This is where things can get spicy. Everyone. Throw out your hottest takes, your things that'll get you kicked out of Flashbots, maybe actually don't go that far. Let's see.
00:57:40.558 - 00:58:24.094, Speaker B: There was a few questions I had. We might not get through all these, and that's okay. But one of the things I came up with these just from looking at past roast questions and some of the stuff I looked over in the last 24 hours hastily. But can you design a program or a contract that detects bad mev is probably subjective, but stuff that is an arbitrage but that is more harmful than other types of mev and have a contract reverse the transactions and kind of punish the person extracting that mev in certain circumstances. And that's for anybody in the call. Just like unmute. Speak up.
00:58:24.094 - 00:58:25.040, Speaker B: You're good to.
00:58:30.550 - 00:58:36.680, Speaker C: Mean phil, correct me if I'm wrong, but using similar logic to what you described, someone could do that, right?
00:58:38.490 - 00:59:31.320, Speaker D: Yeah, definitely. I think it depends where you approach it from. I think defining good mev is a lot easier than defining bad mev. Just because good mev, you can specifically say this strategy is okay or something or this order is fine or this state is okay, whereas bad mev is just such a large state space of things that it's hard to categorize because it's even hard to programmatically notice and detect. Like a hack, for example. How can you tell whether a transaction is a hack or not? You might be able to look at how much money is moving around, but there are plenty of normal transactions that also move around lots of money in weird ways. So you really have to know whether it violates people's expectations outside the protocol and that's hard to do from just inside the protocol by itself.
00:59:31.320 - 01:00:46.298, Speaker D: But good mev I think is much easier. You could say yes, you can reorder uniswap transactions as long as the slippage doesn't go more than like 5% below a randomized order or 5% below the gas order or something. So that could be a programmatic check and that could potentially allow for things like that. Yeah, I think this is an open question that I think we've discussed several times on the ethical side of things. Also, like is there good and bad mev and do we want to classify it and what are the pitfalls of classifying it versus not? It's kind of maybe to give an analogy. Hudson like ETH transactions, are there good and bad ETH transactions? Is the Dow hack a bad ETH transaction? Should we try to detect it and not execute it or deprioritize it? Same with people uploading things that are bad to the like. Obviously I think there's there's wide consensus that there's certain types of maybe unethical information that we don't want to be propagating with running our nodes or maybe the information is not unethical.
01:00:46.298 - 01:01:00.180, Speaker D: I think it's a very controversial question, but I would draw that analogy to mev of like what are the unexpected uses and what's the harm and what's the harm in harm reduction and how do we balance all these different things?
01:01:01.430 - 01:01:40.720, Speaker B: Cool. I'm going to just skip some of my questions and go to Marius's Questions in Chat because I think they're more cool. Have you thought about mev from a gas token refund mechanism? And I like this question a lot because right now in the latest core developer call, there's been a push by some core devs. To get rid of the self destruct Opcode that enables gas token and would completely wreck the gas token market, pretty much, and make sure that doesn't happen, I guess, is gas token mev. And if that's so, then I guess this would be a good way to combat it, right?
01:01:43.430 - 01:02:25.070, Speaker D: Yeah. So gas token definitely exposes and is kind of mev like, let's say there's a liquid gas token uniswap market. Then the mev is from miners minting gas token and selling into it, for example. That would increase their ETH balance. There's also subtleties in the way I defined mev was like in terms of ETH, how much ETH can a miner make? You could probably reasonably define it in USD also if you want to include things like off chain systems or like minor costs. So it also depends how you define mev if you define it in USD, I think unambiguously. Yes, gas token is pretty much pure mev.
01:02:27.570 - 01:03:36.230, Speaker B: Interesting. And Marius also says, is it ethical to publish mev enabled geth that makes it easier for miners to extract value that is a little sticking your tongue out face, I believe, because I think that they're not publishing death with mev stuff right now. But my take on that personally is I think it levels the playing field so that mining pools and miners who don't have the technical expertise to go and mod geth or mod open Ethereum or whatever they're using to mine they have a level playing field or a more level playing field to actually do this. And then that pushes the responsibility onto the DAP developers to code their contracts in a way that prevents mev. So you're really pushing the responsibility to better software development practices, which is never a bad thing in my opinion. So that's kind of my take. What do other people think? And Marius, you can also speak up too, if you want, if you're on Mic, because I'm really curious what the guest team has thought about this, if you all have any public opinion.
01:03:38.250 - 01:03:46.198, Speaker C: I think the emoji that he put is also because that's essentially what Flashbots is built. So I would expect maybe that's why he asked this question.
01:03:46.284 - 01:03:46.920, Speaker B: Yeah.
01:03:48.650 - 01:05:04.100, Speaker C: I think generally we take the approach that mev is unavoidable and so in that case, you don't want it to be extracted by that. There is significant asymmetry in its extraction either because some actors have some privileged rights related to extraction or because they're kind of unilateral deals that are not transparent. So making sure that extraction is, as you mentioned, a level playing field not only on the minor side but also on the extractor side, that it's relatively permissionless, I mean, fully permissionless, of course, but there's a spectrum there and that it's transparent I think is definitely very important. Again, taking the approach that mev is unavoidable, looking at Ethereum as this kind of general purpose computing platform with unbounded complexity. And so as Phil was mentioning, as you add just like, one new smart contract, there might be new ways to extract value from transaction ordering or insertion. And so it's very hard to take the other point of view, which is we can just completely have mev gone from Ethereum. And so I think that's what I would answer.
01:05:04.100 - 01:05:09.890, Speaker C: I don't know if anyone else has something to add to that or a counterpoint.
01:05:12.310 - 01:05:15.270, Speaker D: I have a lot to say, but I want people to argue with Alex.
01:05:15.770 - 01:05:27.530, Speaker B: Yeah. Argue with Alex. Someone yell please. Yeah. I don't really have a counterpoint because I agree with you. I wish.
01:05:30.750 - 01:05:32.998, Speaker C: There have been some oh, sorry, Phil.
01:05:33.174 - 01:05:34.060, Speaker D: Go ahead.
01:05:34.930 - 01:06:24.560, Speaker C: I was going to say there have been some counterpoints in the form of talking about changes to the protocol itself that would reduce mev in some way, or citing other forms of blockchains or consensus protocols that might be leaderless, for example, where you don't have transaction ordering that is centralized for some time interval. And so I think people kind of mentioned that as alternative architectures. But I think looking at Ethereum specifically, this is the argument I'm making. So I'm not necessarily making it generally for all blockchains. I think for ones that are at a point where they're still designing some of the elements of their protocol, they can do such drastic changes. I think there may be a different answer here. Steph has raised his hand.
01:06:25.090 - 01:06:26.080, Speaker B: Get in.
01:06:27.570 - 01:07:07.260, Speaker E: Thanks. One question I have about Mev mitigation. So I tend to agree with the idea that this is the DAP developer's responsibility to minimize mev. I'm wondering, what is the sentiment on approaches that essentially give permission rights to extract it to whitelisted participants as opposed to miners? Is that better? Is that worse than having miners extract it? And why?
01:07:09.970 - 01:07:22.494, Speaker C: Purely intuitively, it does feel like when that grows big enough, then you just moved the problem from the Ethereum chain to that pool of whitelisted addresses.
01:07:22.542 - 01:07:23.138, Speaker B: Right.
01:07:23.304 - 01:07:40.280, Speaker C: So ultimately, maybe I'm missing something, but it does feel like you're just punting the problem to that whitelisted pool rather than solving for the problem, and there's like a trust element to it.
01:07:42.730 - 01:08:26.106, Speaker B: Interesting. Any other takes on that represent whitelist as NFTs? That's a cool idea that you can trade them. Well, they're kind of open, so you could replicate them so it wouldn't be an NFT. But if you kind of wrap them in something to make them like a new cipher type of deal where only certain people can see it, that would be interesting. Oh, it's an idea presented at a past roast. Okay, awesome. So something I was thinking about.
01:08:26.106 - 01:09:29.230, Speaker B: This kind of goes into question four of my roast questions. There's a lot of polarizing opinions on mining pools in general. There is the people who are like, they're profit seekers, they're only in it for the money, and we shouldn't include them in a lot of major decisions on Ethereum. They're doing this for their purposes to extract value and so we're not needing to include them on stuff. And then I come in and I'm like, well, I know Ethermine and I know Spark Pool and I know F Two pool people and they're all really nice and they seem pretty altruistic. So from a flashbots perspective, from your interactions with miners and mining pools, what has, in your opinion, been the overall sentiment, or is there like an overall flashbot sentiment about mining pools and whether or not they're willing to work on some of these research questions and solve things for the good of the ecosystem rather than just be profit seeking?
01:09:32.950 - 01:11:09.402, Speaker A: I guess on that question, I've been the one who has interfaced the most with mining pools and just like you said, most of us. I think one of the biggest issues and divide between maybe the developers users as well as like against the miners and mining pools is that they are viewed before they were viewed as an evil entity, as an assumption, before they were viewed as individuals. And so they are in some sense entities, but we sometimes forgot that they were the earliest supporters. I think Sparkful wrote a tweet yesterday about despite they were against 1559, they were the first investors, first sets of investors that invested in Ethereum and they've been there since then. And so I think a lot of them were just geeks, we forgot about that. And we view them as their corporate entity and identity way over beyond and assume the positions that they would take. So I think essentially that has been what I've observed as the biggest misunderstanding that is lacking from the other side and coupled with certain type of behaviors oftentimes associated with mining pools because of its adversarial environment, spark pool, et cetera, and every single mining pool in Bitcoin, Ethereum gets DDoS on a daily basis.
01:11:09.402 - 01:12:33.610, Speaker A: And so essentially, they try to stay low as much as possible. And so essentially by not speaking or having language barrier that would further the communication barrier and essentially the trust sometimes is necessary for the community to move forward together. So I think that's I'm commenting on an observation and to answer the question on mev extraction, the interesting observation may be surprising to many of you here. The ones that are pro and active about mev extraction are the ones who actually vocally supported East Two and EIP 1559. That is a very interesting coincidence that I've noticed recently as I've spoken to most of them. And the ones who have initial scrapples immediately upon reaction of hearing this idea are the ones who are currently vehemently opposing, for various reasons that are, I think, interesting in terms of diving into their real, how much skin in the game there is, and how diversified each mining pool as an entity is in terms of their vested interest in ETH.
01:12:35.950 - 01:13:47.434, Speaker B: Interesting. What other takes do we have on this one? Yeah, I know that there are signs that I mean, there's definitely risk because I think it was in Phil's presentation, he was saying that when you extract 60 times the block reward from mev as a mining pool, you get richer than the other mining pools. So you can buy more equipment and become bigger miners. And then that kind of cycles over itself and you basically price out other mining pools and become a major pool that could have over 51% of the network at some point or things like that, if you take that example all the way to the end. So that's a threat. But at the same time, I think Scott's in the call. And there was like a paper about the dark forest that Scott did where in order to mitigate a DeFi hack that was potentially going to be front run, they worked with a mining pool to insert the transaction anonymously, basically, or not anonymously, but without having to have it be processed through the Mempool.
01:13:47.434 - 01:14:05.300, Speaker B: And publicly available for people to front run. And I think that that kind of shows a sign that, yeah, they're not in it just for the money. They could have made a lot of money off that and instead they're helping with the ecosystem. So I don't know if you can get on Mike Scott and give any take on that.
01:14:06.150 - 01:15:00.150, Speaker F: Yeah, I think that's one interesting thing that I've learned in talking to these various mining pools is that a lot of them, because they are composed of lots of people that are volunteering their hash power to these services, that they're really concerned about the perception. I kind of assumed that it was going to be like, oh, if I can make one way extra, I would do it. And it really hasn't been the case. There has been a lot of discussion around what they can do to be perceived in the most positive light. And I think that's where things like Mev Explorer or using Flashbots in a way that has done like white hat rescues can also been really valuable in getting some of the miners on board is helping them understand what is going to be perceived in the most positive light. But yeah, you're right, it's not purely profit driven.
01:15:00.650 - 01:15:32.080, Speaker B: Interesting, Marius asked a good question. What about mev and layer two such as Censoring plasma roots? And that kind of goes into my question too, like doing side chains or separate chains or this future where we have multiple blockchains all interacting with each other. What are the opportunities for mev extraction when it comes to seeing that there's about to be a big cross chain transaction using a Dex, once those kind of become more readily available?
01:15:37.460 - 01:16:41.510, Speaker D: Yeah, I mean, I think you hit the nail on the head and so did Marius. Yeah, I think it's going to be a super interesting world because L2 is like optimism. They intend to handle mev in some way at the L two layer and they have some strategy for dealing with that. But my intuition is also that there's going to be cross l two mev and things like that. And how that world shakes out, I think, is very much depends on the implementation details of things like how do Cross l two transactions work and how do the operators kind of affect which user deposits are eligible to be censored by miners and how do things like optimistic roll up interact with ZK roll up and other kinds of protocols. Is there any weird edge cases that expose mev there? So yeah, like Alex said, we're definitely interested in that, but I don't have good answers other than things will probably be weird and depend on a lot of engineering things we don't know yet. I'm curious to hear what other people on this call think about this too.
01:16:47.120 - 01:17:47.860, Speaker B: And yeah, Alex posted some good links of examples of the cross layer two ARBs and some research topics on the topic. Does anyone have any stuff on this? If not, I think we can take more audience questions for a little bit. And I also have this what's everyone's favorite mev extraction they've seen, or the oldest one or the greatest one? Because the one that I remember really honing into that I think this might have been before mev was termed or widely known, but F, two pool censoring or reordering the status ICO transactions in 2017 was such a big deal to me at the time, but no one talked about it. There was like five tweets about it, maybe, and none of them got much coverage. And I was like, why isn't anyone talking about this? A mining pool is interfering with an ICO during network congestion. Like, what the hell?
01:17:50.570 - 01:18:01.990, Speaker D: That's a great one. Yeah, that's definitely a vintage one. I like Ether Delta ARBs because they were my first mev experiments, but that's biased.
01:18:08.560 - 01:18:32.970, Speaker F: The status ICO one. I wonder if it didn't get as much coverage because I think the way that it was implemented was just such a terrible idea with like a maximum gas price. I think it was very early on in the mev, but I think that we moved very quickly away from these ceilings on gas prices as effective ways to allow everyone in.
01:18:35.500 - 01:18:36.730, Speaker C: Yeah, it was interesting.
01:18:38.700 - 01:18:42.020, Speaker B: Do you have something, Phil, you were talking before Scott.
01:18:42.180 - 01:18:58.220, Speaker D: Yeah, I was going to say Tina, do you have a list of people's favorite mevs or any do you remember any fun ones? Because Tina always asks people what their favorite mev is when they join the pirate ship Chat, which is kind of what spawned Flashbots.
01:18:59.460 - 01:19:56.996, Speaker A: Yeah, well, I think it really depends on the person. I think a lot of the major hacks were some of the more grey hats folks favorites. I would actually think that one of the coolest way to find interesting mev is actually literally go on MEB Explorer. I know we deliberately take out some of the stuff on the leaderboard, but still there is a weird column called Outlier Transactions and you can actually find a lot of weird outlier transactions that work or do not work in that particular subset. So I think it's in everyone's game to kind of define what's your favorite, what is your favorite type, and go into the wild to see what has been done. I think that's a pretty fun thing to do. And you'll continue to have a new favorite every day.
01:19:56.996 - 01:20:22.932, Speaker A: We're having a favorite every week for Flashbots that we're looking for. Looking at MEB strategies that are creative, the MEB of the week, especially the ones that are smart and do not harm the users. Those are some of the ones that Scott has a shortlist of for Scott.
01:20:23.076 - 01:20:26.220, Speaker C: Could you explain the toast? I think that's a fine one.
01:20:26.290 - 01:20:27.900, Speaker A: Oh yeah, the toast.
01:20:29.040 - 01:20:38.448, Speaker F: Yeah, this is one that we've been seeing more and more of. The reason we call it a toast is because it's a sandwich attack, but it's like an open face sandwich attack, right?
01:20:38.454 - 01:20:40.144, Speaker C: So it's a toast where there's just.
01:20:40.262 - 01:21:04.244, Speaker F: One bit of bread and some meat. So when you submit an AMM order, even if you include like literally 0.0% slippage in the uniswap interface, if it's a large order, you're going to have some natural slippage just from the volume of your exchange and one of the hot dog a sandwich.
01:21:04.292 - 01:21:05.050, Speaker C: I'm sorry.
01:21:07.820 - 01:22:04.490, Speaker F: If you backrun this transaction, a large, large order on an AMM with zero slippage, you're not like pushing something in the wrong direction, but you can back run it and be the first to be exposed to that new price. Post that large transaction, you can instantly take large arbitrage opportunities and there's really no harmed party here. A sandwich attack, you will usually push someone's order and give them a worse price and then sell back to them on the other side. A toast is really just being the first person to get the price of a market that was going to be available to everyone after that transaction went through anyway. So it's kind of a fun way to have a half sandwich attack where there really aren't any harmed parties. The only harmed party is that somebody else wasn't going to get that new great price on this market from a large order.
01:22:06.380 - 01:22:20.610, Speaker B: Very interesting. So when you said toast, I was like, are we doing toast at this roast? And I was like, I mean, I'll do some toast. I like the people here. Steph, what's your deal?
01:22:21.380 - 01:23:55.360, Speaker E: I think the NFT ones are still very underrated. Scott had a great thread about rescuing some NFDS from compromised accounts that sort of covered know, technically the miner can transfer NFTs from compromised account even if the account doesn't have any ETH. And so there's a way to use mev for rescues. But another one that happened, I don't know if it was yesterday or the day before was crypto punk that was being sold on the auction and someone figured out that the website wasn't implemented in such a way that it securely closed the auction. When you accepted the auction result on the website, it just accepted whatever the latest bid was and it didn't specify the amount of the bid. And so someone watched the mempool for an accept transaction front, ran it to replace the bid with a different bid that essentially transferred zero to the seller and effectively buy quite a valuable NFT couple tens of thousands of dollars for zero for nothing. So people are getting pretty crafty with the way that they use mev plus NFTs.
01:23:56.660 - 01:24:22.612, Speaker B: It's crazy. We have a couple of minutes left. The only other question is what is the animal mascot for mev and why is a platypus the correct answer? We'll take a few comments on this and then probably continue it in the discord chat. But platypuses are just weird and I think Flashbots has very unique people that are just OD. You all are just OD. Especially trying to dive into something like this. That's kind of esoteric.
01:24:22.612 - 01:24:23.930, Speaker B: What do y'all think?
01:24:28.860 - 01:24:30.920, Speaker D: Yeah, I like it. I like platypus.
01:24:31.820 - 01:24:38.910, Speaker B: I mean, honey Badger is good, but I think Andrew Miller took that for a whole consensus protocol or some shit. So we can't use that one.
01:24:41.930 - 01:24:48.890, Speaker A: I thought Palatypus was neat because it swims in the pool.
01:24:49.870 - 01:24:52.250, Speaker B: Oh, yeah, maybe.
01:24:52.400 - 01:24:56.780, Speaker A: But my English was really bad so I actually had to look up the so.
01:24:58.270 - 01:25:07.998, Speaker B: Oh, beavers are good. They build dams. Mikira has a good point. Beaver's another good they can alter the.
01:25:08.004 - 01:25:10.690, Speaker F: Flow of a pool of water.
01:25:10.760 - 01:25:14.450, Speaker D: Yeah, we're damning up all the mev.
01:25:16.630 - 01:25:37.020, Speaker B: Platypus is nurse without nipples and if you take me V as nipples I don't know where I was going with that. Yeah, no. Well, cool. Is there going to be mevcon or mevcon or like big sub things that happen at conferences once we can go in person or even online.
01:25:38.670 - 01:26:37.580, Speaker A: There is a lined up mev WTF that is in store was going to be if defcon was to happen in Columbia in August, but I guess that is not then we could either make it know, have a fun and we have this thing where we haven't really started. But it would be fun to have this thing called Flashboss Olympics where instead of making gas wars, we compete on a separate fun game without hurting the users. Right. The Olympics. So I think that would go well together would be for anyone who's here down to up for the challenge or give a talk. I think that would be a great time. So just waiting for folks to make a proposal on what works, when we should do it.
01:26:39.390 - 01:27:00.802, Speaker B: Awesome. Yeah, I wish we know when DevCon is, but yeah, it's postponed for sure. Yeah. So I think that's about it for the meeting. We're just at time or even a little overtime by a minute or two. Thank you so much to the presenters. We have a link to the Discord Channel and Chat and we had Phil and Alex present.
01:27:00.802 - 01:27:14.840, Speaker B: Thank you so much. Thanks, Tina, for organizing these along with other people from the Flashbots team. And yeah, everyone have a good rest of your day. Sorry I wasn't as adversarial as potentially other roastmasters, but everyone kind of gets along.
01:27:16.830 - 01:27:31.520, Speaker D: That's exciting. And definitely looking forward to more conversations on ethics and stuff and all these issues. Favorite mevs. So hope you guys all join future Roasts and keep bringing the fire.
01:27:33.490 - 01:27:35.086, Speaker A: Yeah. Thank you.
01:27:35.108 - 01:27:35.534, Speaker B: Awesome.
01:27:35.652 - 01:27:36.414, Speaker A: You've been the best.
01:27:36.452 - 01:27:37.280, Speaker C: Thanks, everyone.
01:27:37.650 - 01:27:38.910, Speaker A: By miles.
01:27:39.650 - 01:27:40.558, Speaker B: All right.
01:27:40.724 - 01:27:57.766, Speaker A: Yeah. And for everyone here, our next thing next week will be our first ever community transparency update of the Flashbots organization, plus a searcher where workshop helped by Scott. It'll be next Thursday, same time you.
01:27:57.788 - 01:27:59.750, Speaker B: Need a Flashbots pizza party.
01:28:00.490 - 01:28:03.080, Speaker A: OOH, that sounds good.
01:28:04.010 - 01:28:08.920, Speaker B: Yeah. All right. Good night, everyone. Good morning. Whatever time it is for you.
01:28:09.690 - 01:28:10.518, Speaker A: Sounds good.
01:28:10.604 - 01:28:11.586, Speaker C: Thanks, Hudson.
01:28:11.698 - 01:28:12.370, Speaker B: Bye.
01:28:12.530 - 01:28:13.940, Speaker C: Thanks, Hudson. Thanks, everyone. Later.
