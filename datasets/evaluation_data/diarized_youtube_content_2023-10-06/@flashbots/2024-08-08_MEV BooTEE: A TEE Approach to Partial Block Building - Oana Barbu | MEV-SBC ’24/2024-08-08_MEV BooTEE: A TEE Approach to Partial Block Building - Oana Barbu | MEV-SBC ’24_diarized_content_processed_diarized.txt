00:00:02.360 - 00:01:20.798, Speaker A: Hi everyone, I'm Juana and I'm here to tell you about how to do partial block building with tes. So this talk requires basic knowledge about tes, so in case this is the first time you hear about them. Tes stand for trusted execution environments and are hardware enclaves whose memory is encrypted by the cpu. This prevents unauthorized party to pick or tamper with the execution of the applications that run inside the TE. So tes provide confidentiality and integrity of execution, and we are able to verify that the TE is indeed genuine by running this process called remote attestation. Basically, during the remote attestation we ask a Te to prove it identity that's linked all the way to the hardware manufacturer and provide some hashes over what firmware and applications is running. So I've been working with Tease for slightly more than three years at Automata, where we're working towards making it easier to build and deploy t applications.
00:01:20.798 - 00:02:20.740, Speaker A: We have teavs that brings crypto economic security to a te network. One use case for this AV's is a t multiprover, which is basically like a watchdog that ensures roll up state transitions are correct. We also have some. We have some efforts in making attestation possible on chain, and we try to make it cheaper. So we have this decapitated library and we're planning to release an attestation SDK soon. And we also do tcompile, which is a way to ensure that the software, that it's a form of reproducible build, because it's very important to ensure that what runs in the t is correct. Anyway, so about mev booty.
00:02:20.740 - 00:03:20.460, Speaker A: It's a project that started at the hacker house and it became part of the first round of projects in the Eigen layer research fellowships. And I want to give a shout out to Kaido, who supported me with this work. So in order to talk about partial block building, we have to go back to proposal builder separation, or PBS. You've heard about this before, but just a reminder, PBS is a mechanism that separates the role of proposers, those who propose the blocks, and builders, those who build them. And it creates a marketplace for blocks to be created by builders. And proposers can opt in to pick block from this marketplace instead of building one on their own. And the de facto implementation of PBS today is mafboost.
00:03:20.460 - 00:04:20.836, Speaker A: A rough description of how it works. We have this multiple builders that each build their block and send it to a relayer. In this diagram it's a single relayer, but there can be multiple relayers involved. Each relayer will pick the most profitable block based on the one submitted and will send it to the mafboost, which is a psych that the proposer will run if it wants to use Mapboost, if it wants to use PBS, instead of creating a block on their own end. One goal of PBS was to decentralize the block building. But the reality is slightly different, because proposals have the incentive to pick the most profitable blocks. And as you've seen previously as well, it's not that easy to build a profitable block.
00:04:20.836 - 00:05:27.756, Speaker A: And mostly 90% of the blocks on the map boosts market are built by two builders. This means that more than 80% of the entire Ethereum blocks are built by these two builders, which is not good for decentralization and censorship resistance. So the idea with partial block building is to involve the proposals as well in the creation of the block. So with partial block building, the builder will still create the top of the block, the TLB. But now we allow the proposals to also have an input in what gets included in the inside the block via the rob, the rest of the block. The question becomes like, how should we combine this TLB and Rob? And of course our answer is to use a te. But before that, I want to go to another factor that influenced some decisions in our designs, the relayer.
00:05:27.756 - 00:06:04.494, Speaker A: So the relayer is a yemenite trusted intermediary that facilitates the communication between the builder and the proposer. And it has to be trusted by the builder to not unbundle their block. And it has to be trusted by proposers to pick the most profitable block. That's also valid. That limits the pool of players who become relayed to only a few. And these players have to have good reputation. And this also leads to a bit of a centralization in terms of the relayer.
00:06:04.494 - 00:06:51.350, Speaker A: Like roughly 75% of the blocks are built by only are relayed by only two relayers here, green and white both correspond to blocks route. And it's also worth mentioning that this relayer does the work pro bono. There's no incentive and nothing for the relayer to be gained. So we are also thinking of whether we can remove the relay from the picture. Okay, so this is how map booty came to life. The idea is very simple. We leverage tes to receive the tob from the builders and rob from the proposers.
00:06:51.350 - 00:07:38.396, Speaker A: Then we combine this to create a block. And we have three designs which differ based on where the tea is run. The first one is tea assembler, which is basically the current math boost, just that the relayer is replaced by the tea assembler. Then we consider removing the relayer and running the tea at either the proposer or the builder. So we have the builder side t eight, and the proposer site t eight for the t assembler. Like I said, it's mostly like maf boost. If you remove the rob, it becomes Mavboost.
00:07:38.396 - 00:08:42.932, Speaker A: So the builders will send their tobs to the t assembler. The t assembler will select the most profitable tob, combine it with the rob and tadao, it produces the block. And in case that the tob and the rob have conflicting transaction, the proposal can either ask the assembler to exclude tobs that would conflict with the rob, or you can ask the assembler. Okay, you can remove the transactions from irob that conflict with the most profitable tob. Then this is the builder side, the te eight. In this case, each builder will run its own te eight and the proposal will connect directly to this te aid and provide its rob. Then each builder will combine the TLB and rob and will bid for the block.
00:08:42.932 - 00:09:54.772, Speaker A: And the proposal of course will select the most profitable one. Due to the integrity guarantees provided by the TE, we can the proposal can rest assured that the TE aid will build a block according to the specification, so the builder will not be able to do anything malicious. And then in the case of proposal side t aid, each builder connects directly to the t aid that runs on the proposal. The T aid will assemble the block using the most profitable TLB that it received. And again, due to the confidentiality guarantees of the TE, the builder can rest assured that the TE eight will not unbundle its block. And another cool thing that we can do with Mavbooti is that we can add the preconce very easily. So preconce is short for pre confirmations and they are basically credible commitments that the transaction will be included inside in a blog before the before finality happens.
00:09:54.772 - 00:10:47.570, Speaker A: Precomps are used to provide timely execution guarantees and instant confirmations and so on to improve user experience. So I'm showing here how we can add pre conf to the TA assembler. Basically, all we have to do is provide another interface that will allow users to submit their transactions. And now when the T assembler assembles a block, it will still use the most profitable T o B and Rob. But at the end it can add the precomps as well for the transactions that it preconfirmed. There are more details specifically like how we can do execution or inclusion precoms and so on. We have a blog post coming soon that elaborates more on this topic.
00:10:47.570 - 00:12:03.802, Speaker A: Okay, so to recap, current PBS is not ideal due to the centralization and censoring concerns. And basically proposers have to choose between the rewards or the ability to actually have a say in what gets included in the block. With partial block building, we aim to give some of this power back to the proposals and thus enhance the centralization and censorship resistance. And by using a te to do partial block buildings, we are able to minimize the trans assumptions and maybe even remove the relay from the picture. And if not, and we, by doing this, we promote a more inclusive and resilient ecosystem, because now anyone with a T can become a relayer. And I also showed how map booty can do pre confs. If you want to know more about what we are working on with ease, you can follow us on x.
00:12:03.802 - 00:12:07.350, Speaker A: And that's it from me. I'm happy to take any questions.
00:12:14.140 - 00:12:57.660, Speaker B: So I'm curious with the idea that the rest of block comes from the proposer, how you relate this design to the fossil proposals coming from the EF where the proposal proposes, or like some validators propose a set of inclusion lists that the builder confined to. I think the combination of fossil with some of the discussions around block builders running tees might actually naturally bring people close to your design. And so I'm curious if you have thought about the differences between a world where we have like a Te block builder and fossil versus your design. That's, I think, a bit more specific than just Te block builder in general.
00:12:58.240 - 00:13:15.056, Speaker A: I haven't really thought about this before, but I can see that it can easily be modified to allow multiple parties to input their rob, basically their own inclusion list that will be after that included in the rob.
00:13:15.208 - 00:13:24.180, Speaker B: And in your view, what is the most challenging, the biggest challenge to realizing this design that you put forward?
00:13:25.520 - 00:13:32.140, Speaker A: You mean booty itself or. I think it's mostly an implementation.
00:13:33.160 - 00:13:39.248, Speaker B: But is it just hard to do the engineering or. There's specific challenges that you have to get over in the implementation.
00:13:39.344 - 00:13:57.548, Speaker A: So the way I try to do the engineering, engineering was based on the current math boost. Because I wasn't very familiar with that, I ran into some issues, but it's mostly a skill issue on my part rather than engineering issues.
00:13:57.604 - 00:14:00.460, Speaker B: I would say that's a familiar feeling. Thank you.
