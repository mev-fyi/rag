00:00:06.520 - 00:01:10.440, Speaker A: I've been working with Andrew for six years. I'm an IC three research engineer, so since like 2000. So just to give you briefly some context before what I'm going to talk about. So in 2020, it was the summer of the pandemic, so Andrew needed some help and it seemed like they were starting to explore. So I helped, you know, with the build system and all that. And I said, okay, we need reproducible build. So I looked into that, then opted to, from my understanding at that time, okay, you cannot use Docker actually for that.
00:01:10.440 - 00:01:53.326, Speaker A: And I'm a big, big user of Docker actually. I do everything in containers for like almost ten years now. I really like. But for reproducible builds, it's not the tool of choice. So nix at the time is what I settled on. And like David talked about their skigs actually that I learned from him last summer, which is even better because you get booster about bootstrapping builds. But anyway, so I work on the root reproducible things, and at some point in learning more about SGX, I became very, very concerned about its security model, basically what we call the root of trust.
00:01:53.326 - 00:02:44.448, Speaker A: And I kept on doing the things, applications that we need to do and the research, but this thing with the root of trust increasingly was in the back of my mind all the time. I did a bit of physics in my undergrad, so from the point of view of physics. So it's like there's no way, there's no way this can work, okay? Because now this is what I'm gonna focus really deeply on right now. And what I want to do is just more give it direction and actually also to be able to think about it in such a way that you don't need even that much physics knowledge or whatever, just like some of it I think is just common sense. Then of course you need scientific, like research to validate that. But I think the intuition is valuable. Yeah.
00:02:44.448 - 00:03:33.380, Speaker A: All right, so I call this like. And the idea is like, yes, it's to motivate that we really need to work towards an open source, verifiable, what I call secretive physics chips. So that's what's the problem at hand. Okay, with, and this is from a, which is a really good paper to understand SGX, so secure with remote computation is the problem of executing software on a machine that is remote and owned and maintained by someone you don't trust. And you want that the computation has some integrity and confidentiality guarantees. Basically what ZK gives you in terms of not ZK, but ZkvM. Has a proof of execution and confidentiality or maybe FH can be.
00:03:33.380 - 00:04:03.450, Speaker A: So that's the idea. But it says own and maintained by an untrusted party. So that means that if the machine is elsewhere. So to what earlier today Rike was mentioning that. Yeah, right now we may require people to run these in the cloud, right? So if you take that to the extreme, that statement there, no, you don't trust it, you don't trust anyone. That's the problem. So, and intelligence, one attempt to solve that problem with hardware.
00:04:03.450 - 00:04:33.669, Speaker A: So there's kind of an issue. So three core challenges we could say of these right now, commercial teas that there's, we don't have a proof that the root of trust was not leaked at some point. Whether it's like pre manufacturing time, during manufacturing time, or post manufacturing time. If you have guys like this, has SGX. So there's a guy here, Torban, he's from Ucluvac and I'm pretty sure he has friends or him, we can take that to the lab and I wouldn't be surprised that we could take the key out. However, no one has done that. So it's just speculation.
00:04:33.669 - 00:05:16.286, Speaker A: There could be other people that I don't know. It's not possible. So we don't know. So the other thing is this proof of manufacturing is like, yeah, they designed custom, but that's if we have an open source design we don't even know is this chip what it claims to be. And then there's a remote attestation which is central to this whole system and there's some centralization aspect to it like it was mentioned earlier by Andrew and others. So you could say that ultimately the thieves right now, they're secretary economies and that works, it's fine. I.
00:05:16.286 - 00:06:21.354, Speaker A: Right, because if you abstract when this blockchain ecosystem and consensus protocols do use it like game theory, mechanism design, and that's a model. And why do we come in? Because the cloud, they do protect the servers, maybe it's really not in the interest that some problem happens. And this model may be totally viable, by the way, because by the way, now I'm approaching this actually more of a research question question. Because in my opinion it's actually really complicated and if we manage to pull it off, okay, to build it a tea open source in like cipher punk hard cold way, you know, I know my rough estimates is five to ten years, okay, but if you say this, oh, because I talk to vc zero, I talk even people from Secret Network, they pivoted. Okay, they do Phoenix and I talk to the CEO. He was working with Intellij before. He was like, yeah, but, man, before you get the tape out and the chip and all that, but if you think about it, here I am representing this.
00:06:21.354 - 00:06:40.640, Speaker A: It's 2024, 2014. Okay? We could have started and today, maybe it'll be a bunch of cool chips. Cypher from friendly, like. Yeah, cool, man. All this stuff you would have to have you wait. This kind of talk. So what you guys talk all this morning to now, we wouldn't have decided.
00:06:40.640 - 00:07:01.920, Speaker A: When you talk about Zka teaching 2014, when we had Pinocchio, I was the first practical kid. Right? Yeah. So that's how I look at these. Okay, so that's also the goal of this talk, is to motivate. Yeah, I have this here. Sorry. So that was just to give an example.
00:07:01.920 - 00:07:21.870, Speaker A: Right? And rightfully so. They observed that, yeah, we can run them in the cloud, and that's just to support that. It's secure to economics. And that's okay. It makes sense. That's actually smart. So now, to give you a sense, okay, why freaking out about this? That was the diagram that's haunting me.
00:07:21.870 - 00:07:46.440, Speaker A: You know, this isn't the intelligence paper. Explained paper. So you see already, by the way. Okay. Because this station, for those of you don't. So, you know, there's often this scene, you know, it could be me right now. And I go like, you know, like.
00:07:46.440 - 00:08:18.024, Speaker A: And then I'm someone else, you know? Well, this is the goal of attestation, to make sure that this legit is what it means to be, okay. Now, the problem is that if. And this is rooted in what we call the root of trust, which is intel. And that's what this diagram explained. But basically, when you get that attestation, that means, like, you look at me right now, like, whatever. It's like, yeah, yeah, we're sure it's him. But this is based on this root of trustee.
00:08:18.024 - 00:08:53.080, Speaker A: So if I can hack that, it's basically I can wear any mask, any personal. Doesn't matter. So I'll pretend I'm running this code, but actually running something totally different. And you have no clue about it. Like in the movie, it makes it impossible. Right? Always surprised you. Right? So say that you adjust that the table is code.
00:08:53.080 - 00:09:30.570, Speaker A: No, but because the idea, though, is like when we. What everyone does in the enclave, binding code, you generate a public private key pair and you put the public key in the attestation report. So now you can encrypt. So basically for ingoing messages to the enclave, you encrypt them and they can be decrypted in the enclave. And for outgoing messages coming out of the enclave you sign. So then you check with the remote attestation report that you check using the public. In the report you check the signature.
00:09:30.570 - 00:10:03.892, Speaker A: So then you can know that it's designed with the reproducible, right. The code that you have compiled and it is reproducible. And all that, you know that because there's the MRN table report. So you know because you're trusting a report in a way you're trusting the data that's in the report. But that that report, if you're trusting, is signed and it's signed with a key that's attestation key which is a derivation of this root of trust. The sales secret and provision secret, okay? So if you can hack that, you basically have the, you can be whatever you want, okay, that's the idea. Right.
00:10:03.892 - 00:11:13.082, Speaker A: So that's why we need to secure the seal secret and provisioning secret needs to be non hackable by a physical attacker or side channel attacker, okay, because, and right now with intel it's even worse, okay, because one of their keys, actually it's even up to like a month ago we had a hackathon at IC three and we shared a screenshot, something. But, so this key generation facility, okay, they generate a key and they, that's their database, they maintain this database. So one of the secrets they have in their database, the other one, they claim the seal secret is just automated, that's in the assembly line or some process that generates some random key and it's burnt into some issues. Now there's a intel, I'm not making this up, okay, exactly. There's an intel forum where you can ask questions, okay? And someone asked about this and there's this intel moderator and his name is Jesus. So then he said, he said, oh yeah, yeah. But he said intel deletes it after he has put it in the eqs.
00:11:13.082 - 00:11:39.320, Speaker A: So it contradicts what we have from what is written in this intelligence paper that they don't know about it. So it could be that they know about even both keys. So if you know about both keys, it's universal. Anyhow, I hope this materials, you know, think about that team. You're scaring us. So. Right.
00:11:39.320 - 00:12:10.736, Speaker A: By the way, intel intel's not a bad guy in Gisl because they're just upfront, they're not resistant to physical attacks and also side channel attacks. So basically their goal was not for these blockchain people like us to use it. Actually, as far as I understand, the problem is we don't have anyway, so. Right. It's like, basically it means you cannot touch it. You cannot allow any physical attacker to be around this. So if you.
00:12:10.736 - 00:12:51.134, Speaker A: Now, this is what I wanted to use this talk to, really, this was just not preliminary, but if you start thinking about this on your own, all the knowledge you have, why are we in this situation? Why is it like that? Personally, the thing I found most useful is this from Walt Mandauer. Physical nature of information. Is that. Okay, because you understand the problem is that we're trying right now, this laptop and these two, there's these secrets. They're there. So information is physical, and we want to hide it. We want to basically make it so that a physical attacker cannot extract this in any way.
00:12:51.134 - 00:13:28.918, Speaker A: So it's just not as trivial challenge, as far as I understand, because this information is actually physical. So it sounds like, okay, we're trying actually to hide atoms or photons or whatever, how you implement. Yeah, I don't have the right timing, but, yeah. How can you do that? So the best. At some point I could think about, like two years ago, I just. I thought we were at IC three. Summer again, I thought was Syria.
00:13:28.918 - 00:13:49.910, Speaker A: I'm talking with some people and it was from IC three. And I thought, hey, put in a black hole. Like, really? I thought, yeah, I would trust it. Okay, great. Okay. Now, you cannot use it, but it will be safe. I feel like, dude, that works.
00:13:49.910 - 00:14:08.048, Speaker A: So that's as far as I could get. And then I kind of went nuts with this thing. Okay. Because there's a paper that teaches 2022. Okay? It's called 2022. Share this paper with me. And I started looking at some talk.
00:14:08.048 - 00:14:35.474, Speaker A: You see, maybe that's not crazy. And this whole thing, it says there's an equivalence between quantum cryptography and black hole radiation decoding. And the high level thing is that it could be that high energy physics objects exhibit cryptographic properties. Okay. This is just fascinating work. And the thing before we do that is, at least for me, it gave me that I started to take. Okay.
00:14:35.474 - 00:14:57.346, Speaker A: Because I wanted to leave this whole tea enthusiasm that Andrew was having. I was just, nah, I'm not having it. I need to do something else. I don't want to touch this anymore. But when I came across this, I was like, okay, I can see. Maybe we can have actually teased maybe that's possible, to do that now. Until recently, though, it was just this, what I had in my mind.
00:14:57.346 - 00:15:26.020, Speaker A: And that's just like a nice idea to tell people at conferences, like talking, but that was not so useful. Plus, it wasn't so popular of an idea, so I felt like a weirdo. But now I had not looked into something called buffs. Like sometimes people tell me, oh, puffs, buffs, buffs. So it's physical and clinical functions. And that's the thing I wanted to introduce with that, because now this is the kind of most realistic thing that we have as a core building block, by the way. Right? Because it's much more complicated than that.
00:15:26.020 - 00:16:08.210, Speaker A: But if you want to at least start from the ground and then build something up that your fundamental primitives are at least kind of secure, this seems to be the best hope. So I call that the rise of crypto physics, because the work that is behind these costs, these physical and principle functions, is actually quite fascinating. It comes from a PhD thesis 2001 called physical one way function. Right? And the idea of this black hole, too, is also because the black hole is like a physical one way function. This is. You can think, right? It's like a hash. If you have something and I show you the hash, you cannot extract it out by looking at it, right? So it's the same with the black hole.
00:16:08.210 - 00:16:32.852, Speaker A: But now they did that without using quantum phenomena. And the interesting thing with this work is this thesis is fascinating to read. Okay. I didn't read the whole thing, but just even the beginning, because he mentioned that his work was inspired by quantum money and quantum cryptography and solving the double spending problem. And that's 2000. So, okay. The rough idea of what this is, and that's the experiment it does.
00:16:32.852 - 00:17:17.670, Speaker A: And this could give you the intuition with what this buff is. This physical modeling function eventually became a puff. But the thing is, like, they shoot some laser, some light, and you have this piece of material, one, and they shoot at different angles, and then it will create this interference pattern. And they like here, right, this screen here, imagine it will receive, like, spots of lights, and it will be, like, randomly distributed. And they take this distribution, this two dimensional distribution, and transform this into, like, a hash. And this, you get randomness from that, as though it's like a physical hash function. So that's what this led them to what we call now the physical and global functions.
00:17:17.670 - 00:17:54.040, Speaker A: And they realized, hey, we could do that with chips. Okay? So by exploiting the statistical variations and the delays and devices of wires, and then you see the term manufacturer resistant in this work in 2003. That's really interesting, because that's what we're all looking for. We don't want to trust, think actually intel resistant. So maybe to give you the sort of intuition, again, what the puff is. Okay. So the way I kind of personally can think about it, because I don't have that much business background.
00:17:54.040 - 00:18:37.372, Speaker A: So I have not an electronic or a computer engineer or hardware engineer. So here, right, it's like, it's like a racetrack, right? So you have one electron, let's say two electrons are going to race. And the thing is that each of these blocks can be swapped as basically the track. You can cross it, right? Let's say you have two parallel racetrack, and each of these gates, you're going to go to the left. So you feed in the challenge. Let's see if you have 128 of this. So you have many possibilities of different paths, racetracks, right? And so whatever electron makes it first, you get a zero one.
00:18:37.372 - 00:19:12.206, Speaker A: Right? So from this, you can then generate, again, a random bit string. So now this is like bait into the chip, okay. And so when the chip is like powered on, the rays begins say, okay. And then you measure the response. And the thing is like, from chip to chip, even though they have the exact same design, because of the physics of the chip, if you want the resistance in the wires, it's such that it will differ and no one can control it. The manufacturer cannot control that. So that means that each chip would yield a different result for even the same challenge.
00:19:12.206 - 00:19:47.290, Speaker A: Okay, I think it's called. I don't mean to say that, but I'll say. But inter distance in the literature and versus that when you feed the same challenge again and again on the same chip, it will give you not exactly the same response all the time because there's some noise, but they can clear that. So it's like getting. Right. It's just that my goal here was to just introduce this as like the core construct. Because I would say it's not here, but this egyptian white captain demo they did, right? Shin Shin.
00:19:47.290 - 00:20:02.186, Speaker A: Okay. I was with him in New York two, three weeks ago when I visited fast boss office paradigm. And we tried it. Actually, it's the first tweet. If you go on Twitter, the first tweet is asked. It's like it says something. Because we put the condition allow only cipher punk friendly statements, tweets.
00:20:02.186 - 00:20:15.670, Speaker A: Okay? So we put SGX is cool or something like that. It didn't go through. I'm not joking. I'm not making this up. And then we put something. SGX is not cypherpunk friendly. This was tweeted.
00:20:15.670 - 00:20:38.900, Speaker A: After that we put puffs. Puffs or cypherpunk friendly. This went through. Okay. So the goal here is, like, I feel it's really useful for this community now that we get just, like, ZK NPC, fhe puffs. Puffs has two DC's. How much money do you need, really? I'm a joker.
00:20:38.900 - 00:20:50.050, Speaker A: That's my prediction. Right? Because puffs are really freaking cool, man. So. But, of course, it is not enough. Okay, but that's the core. Core building block. That at least.
00:20:50.050 - 00:21:19.378, Speaker A: Yeah, they're, like, cypherpunk friendly, if you want. They're not quantum. So it's basically that just before the quantum realm is the way I understand it. Okay, look, this is what I was gonna. It just says what I. This is from actually Indrid, who said, ku Luben, very good hardware researcher, was at the FHC summit yesterday, and I talked with her. This is from a book I've been kind of reading to learn about these things.
00:21:19.378 - 00:21:37.436, Speaker A: But they point out that because. Okay, a puff. The idea is that you cannot write when you make two chips, versus. The idea is like, a manufacturer could, like, try to make, like, millions of chips. Millions of chips. Okay. And then it will not be able to have identical tufts.
00:21:37.436 - 00:21:56.080, Speaker A: They're unclonable. That's the idea. But this harness, if you want to cloning, cannot be considered. It's practical security here. Okay? So if you wanted to have clonability, you have to use quantum physics. So a black hole. Black hole is a quantum.
00:21:56.080 - 00:22:20.906, Speaker A: So if we go back now to the manufacturing world, where slide from a company that makes puffs of. Okay, because puffs, you can imagine, okay. There's, like, a company, the top company in an exam. They have, like, something like 600 million devices. IoT devices are deployed right now. So they're currently quite, very well studied, and there's still attacks on it. And there's, like, weak buffs and strong cost us.
00:22:20.906 - 00:22:32.122, Speaker A: We have to use weak buffs, strong buffs, apparently. It's. No, but the idea. Right. This is what intel does. It's like a key injection, right? It's what I showed earlier. So they create the key, and they inject it.
00:22:32.122 - 00:22:59.040, Speaker A: They burn it into the infusible with a tough. Here they use the term inborn. I think the technical term is intrinsic. Oh, that's what I said. So the idea is because the manufacturer doesn't control that. So that means when they make the laptop, say, the chip, it's when. Just when you power it on, because of the physical characteristics of the chip, then you will get some key generated out of it.
00:22:59.040 - 00:23:25.106, Speaker A: So it's not injected. Yeah. Discussion questions. I think this is a complicated topic. What is internal talks today? So I'm wondering about this. Okay. I don't know the most I got yesterday.
00:23:25.106 - 00:23:49.542, Speaker A: I was talking with this hardware researcher yesterday in grid. I asked her, hey, do you think intel uses props? You know, because she said no. And she said SGX is just an instruction set. So basically how it's implemented and all that. But another was a sign who told me, right? I think buffs are, but I don't know. That's a problem too. This is.
00:23:49.542 - 00:24:07.354, Speaker A: Now, I don't have an answer to that, actually, to be honest. But all I can say though, is that that's why I don't like all this. Even with software. I've worked in corporations with closed source, they're just slow to move. They're just behind the latest stuff. Okay. That was my experience with software.
00:24:07.354 - 00:24:21.810, Speaker A: And my gut feeling is the same, hard. So I don't know why they don't use puffs. And if they use. Why would not they say it? I don't. Yeah. So this is a perfect timing for a segue to Michael, who's making chips like soft chips.
