00:00:00.200 - 00:00:55.750, Speaker A: So last time we left off, we had just. So let's go look back at the results real quick before we jump in. Here we go. So we had looked at a one here. So just a general algorithm to compute the Cayley configuration space of a one DoF treaty composable graph over a base non edge f. And that was just by realizing all extreme linkages. Because if you recall, the endpoints of our oriented or unoriented Kayley configuration space correspond to realizations of these extreme linkages where triples of points corresponding to adjacent bars or implied bars, if you recall from recombination steps, are collinear.
00:00:55.750 - 00:01:40.756, Speaker A: So that means that we get a change in forward orientation. So here, for example, v two, v four and v seven, v four. We've got a implied bar v two, v four and a bar v seven, v four. And in an extreme linkage, if this were to stretch out all the way, we would have v seven, v four, v two collinear. So that was a one. We hadn't discussed a two. That's actually what we were going to, we said we would assume and we were going to show today.
00:01:40.756 - 00:02:32.930, Speaker A: So we'll discuss it a bit today. And then we had discussed a three, which was to find, to show that there are at most two continuous motion paths between realizations and to show how to find these. And this was just, I believe this is where we left off last time. And this was basically just traveling along the intervals of an oriented Cayley configuration space and switching between orientations. So you hit an interval, you jump to a new interval in a different oriented Cayley configuration space. And the important part was that the orientation only changes by one entry. So by doing this, we can just jump along these intervals from either, if we're starting at a realization p in an interval, we can either go left or right to either endpoint.
00:02:32.930 - 00:03:14.394, Speaker A: And those give us our two continuous motion paths. So that's where we left off. Today we're going to look at c one and c two here. So we're going to show first how to give a characterizations of graphs with QRS complexity and then to show that, or, sorry, pairs with qrs complexity. So g f. And then we're going to show that we don't really need to talk about the pairs, we just need to talk about the graph. So if G f has qrs complexity for one non edge f, it has them for all non edges f, such that g union f is treaty composable.
00:03:14.394 - 00:03:58.154, Speaker A: So that's what we're going to talk about today. And if we have time, we will look at this a to this algorithm, because if you recall, there was, let me see this theorem that we kind of just assumed. So this was about fixing the minimal orientation and looking at what the Cayley configuration space looked like. We said it was a single interval. And moreover, the length of any non edge is going to be a continuous monotonic function of our base non edge. So the monotonic was the new part. And in proving this theorem, we can come up with a faster algorithm.
00:03:58.154 - 00:04:38.434, Speaker A: So we're not going to go through all the details, I don't think. But I can give you kind of an overview of. It's once you see the algorithm, the proof of this theorem is very easy. Okay, so let me know if you have any questions on what we covered last time. So now we're going to focus on these two results. So we want to characterize pairs g f with qrs complexity. All right, so we had the definition from last time that a pair g f has qrs complexity.
00:04:38.434 - 00:05:56.908, Speaker A: First off, our original definition was it had qrs complexity. If the realization corresponding to an endpoint in a Cayley configuration space can be solved via a tree decomposition, then we said that that was equivalent to every extreme graph being tree decomposable. And that was because, as we said, a realization at an endpoint realizes an extreme linkage. One algorithm we have is for every vertex, possibly every vertex, every vertex corresponding to a recombination step, we're going to check if the extreme graphs are 3d composable, which takes ov squared time for each graph. By this paper here, Fudos and Hoffman 1997. So overall, you do this for every extreme graph and it will take cubic time in the number of vertices in the worst case. So we can do better, as the theorem before stated, which was we can do it in quadratic time for graphs with qrs complexity.
00:05:56.908 - 00:06:39.214, Speaker A: So that's why we're interested in characterizing qrs complexity. Okay, so I'll go back to this definition in a moment, but I'll just kind of explain, oh, sorry, what it means visually. So there's a partial order. So once you're given a pair g. So this is our graph g, and we're given this non edge f here, this dash non edge. Once you're given those two things, you've got a partial order on the recombination steps of g from f. Okay, so maybe I can zoom in real quick a little bit.
00:06:39.214 - 00:07:25.568, Speaker A: So, for example, you've got, it's a little blurry, but let me know if what I'm saying, you can see visually. So you've got v zero and you've got v prime not. And for example, we've got this v two and we get v two by doing the recombination step with clusters t three and t four. Likewise, v three can be added to the graph with a recombination step on t five and t six. But it doesn't matter the order we do these two things in. And also v one and v four also have clusters coming off of our base non edge. So t one's here and t two kind of curves around this way.
00:07:25.568 - 00:08:15.074, Speaker A: And same thing with v four over here, t eight, t seven. So those four recombination steps, it doesn't matter what order we do them in. So what we're going to say is we're going to define these sets of vertices called levels. So level not is going to just compare, contain v naught and v prime not. Level one is going to contain all vertices whose base pair is v naught, v prime not so 1234. Furthermore, it's going to contain all of the vertices in the clusters involved in these recombination steps. So it's going to, for example, v one is in level one and so are all the vertices in t one and t two.
00:08:15.074 - 00:08:58.774, Speaker A: Okay, then level I for I greater than one is going to contain the vertices whose base pair. Maybe it may be easier to just see. Let me try to. There we go. That's not what I want. Might be easier to see the definition in this case. Level I is the set of all vertices whose base pair is uw such that u is in level j and w is in level k where they don't have to be distinct, but they can be such that the maximum level of j and k is I minus one.
00:08:58.774 - 00:09:40.554, Speaker A: So it just means that your base pair comes from lower levels if you're in level I and they can come from at most level I minus one. Okay. And then a last level vertex is just going to be a vertex contained in the very last level of all your levels. Right. So if we look here, like we said, we've got v one, v two, v three and v four. In level one, v five and v six, their base pair are level one vertices. So they're going to be in level two.
00:09:40.554 - 00:10:22.918, Speaker A: V seven has level three vertices as its base pair, so it's level four. Oh, sorry, is that we got one, two. Oh, sorry. So level three and then v eight is in level four because it has a level three vertex and it's got a level one vertex, so it's in level four. Okay, so those are the levels of our graph. Hopefully that's clear. So now we're going to notice something.
00:10:22.918 - 00:11:23.534, Speaker A: Well, we're just going to define a kind of a structural component of our graph and it's going to involve four maximal clusters and it's going to be called a four cycle. So a four cycle is a set of four maximal clusters such that each one shares exactly, each pair share exactly one vertex and these four vertices that are shared are distinct. So for example down here, if this picture is big enough, you've got t one, t two, t three and t four form a four cluster with the shared vertices being v. Notice u one, v naught, prime and u two. Sorry, that's v two. Okay, the labeling is a little weird, but it's these four vertices. Okay, and then similarly, some of the ones that may be a little harder to see once you have a more complicated graph.
00:11:23.534 - 00:12:07.702, Speaker A: T six, t five, t one and t three also form a four cluster. And then you've also got t five, t six, t t seven and t eight. Those also form a four cluster. And in this case the shared vertices are u two prime, v three and v four. Right, so now we can define some of the important pairs of vertices in these four clusters. Oh, and we're also going to say that two maximal clusters are adjacent in a four cluster if they share a vertex. So down here in this obvious four cluster 1234, t two and t three are not adjacent because they don't share a vertex.
00:12:07.702 - 00:12:50.026, Speaker A: But t two and t four are. Okay, and then some important pairs of vertices in these four cycles are going to be the diagonal pairs, which down here in this example of t one, t two, t three and t four are diagonal pairs, are, we'll use the vertices not in parentheses. We've got v one and v two is a diagonal pair and then v naught and v prime not is a diagonal pair. Okay, and then we're going to define one other type of pair of vertices that we're going to care about. And those are chordal pairs. So remember within these maximal clusters we can have vertices. These are just kind of an abstract visual of them.
00:12:50.026 - 00:14:04.254, Speaker A: So a chordal pair is just going to be a pair of vertices coming from an adjacent pair of maximal clusters. So for example over here on the right, this pair, u two, u two prime, is a chordal pair in the clusters t six and t four. Now it just, it doesn't just mean that they are a chord between adjacent pair of maximal clusters. They have to be adjacent clusters in a four cycle. So in this case, the four cycle where u two and u two prime is a chordal pair is t two, t four, t five and t six that forms our four cycle and t four and t six are an adjacent pair in that four cycle. Okay, so we've got our levels which tell us about kind of the partial order of these vertices, and then we've got our four cycles. So now we're going to give this characterization of graphs of pairs gf with qrs complexity in terms of these four cycles and these levels.
00:14:04.254 - 00:15:09.594, Speaker A: So a pair g f with at least six maximal clusters, because otherwise it's kind of uninteresting, has qrs complexity if and only if. For every recombination step where v sub k is in level three or higher, there's a four cycle such that its base pair u sub k and w sub k are contained in an adjacent pair of maximal clusters. Okay, so a visual of what this means. If we take v naught, v naught prime here, this kind of vertical pair, and we visualize the construction of this graph starting from this non edge. We want to only really care about the vertices in level three or higher. So v one is in level one, v two is in level one, v three is in level two. Now we look at v four, that's in level three.
00:15:09.594 - 00:15:58.234, Speaker A: So we want to make sure that v four, its base pair, which is u two and u two prime. We want to make sure that they are contained in adjacent pair of clusters in a four cycle. So t five and t six, t two and t four form a four cycle. And the base pair come from an adjacent pair of maximal clusters in this four cycle, t five and t six. Okay, so that's going to be our characterization. So let me know if this statement isn't clear because now we're going to go ahead and prove it. So one direction is kind of easy.
00:15:58.234 - 00:17:12.384, Speaker A: So we're going to assume that our pair g f has qrs complexity and we're going to consider a recombination step where vk is in level at least three. Okay, so because our pair has qrs complexity, we know from the definition of that that the extreme graphs are all three decomposable. So it can be constructed from our construction step that we're interested in the very last one, u sub k w sub k. Right. That was because the extreme graph is tree decomposable. It can be constructed from any of its edges and in particular the last reconstruction or the last recombination step that we're interested in. Okay, now also notice that since v sub k is in at least level three, the graph that we get from performing the first k minus one recombination steps must have at least four maximal clusters.
00:17:12.384 - 00:17:56.078, Speaker A: So you can see that from here. This graph right here ignore t one and t three because we don't need these. All this is saying is to get to v four which is in a level three vertex we have to have this construction step. So here I'm taking v one and v two to be my base non edge. We have to have this construction step, t two and t four to get us a level one vertex, then t five and t six to get us a level two vertex. And finally one more to get us a level three vertex. So what this is saying is that in the graph, just by performing, in this case, we only need three construction steps to get here.
00:17:56.078 - 00:18:58.324, Speaker A: So in the graph that we get by just performing the first two construction steps, we have four clusters, which is true here. This isn't just an example. You can say this abstractly. So we know that we have at least four maximal clusters to work with. Okay? So that means in order to construct our extreme graph, we have at least two recombination steps. Because what is an extreme graph? Just to make sure we all remember an extreme graph here, the third extreme graph would be instead of adding t seven and t eight, we just add an edge between u two and u two. Okay, so we're saying that this is three decomposable if we just add u two, u two, and we can construct this extreme graph from this base pair.
00:18:58.324 - 00:20:10.924, Speaker A: And since we know that the graph g sub f of k minus one, so the one that just performs these two construction steps has four maximal clusters. We know that in order to obtain this graph, the extreme graph, we have to perform the construction, the recombination step that adds t five and t six in this case, and then the one that adds t two and t four. So we're going to have at least two recombination steps, okay? And notice that the first two recombination steps that we perform forms a four cycle. So now this picture will be more useful, right, this is g, sub f of k minus one. And then we get our extreme graph by adding an edge between u, sub k and w, sub k here. And here are our four clusters that are contained in g, sub f, k minus one. So we have to do two recombination steps that add these four clusters so the very first one has to contain u sub k and w sub k since we only have the edge u sub k, w sub k to begin with.
00:20:10.924 - 00:21:22.410, Speaker A: So that's going to add t one and t two. And then it's kind of obvious that the next one is going to create this four cycle because we're going to build something off of t one and t two. So our four cycle is going to be t one, t two, t three and t four. And p three and p four in this case could be sub k, w sub k, but it doesn't have to be. Either way we get a four cycle. It doesn't matter whether they are the same or not. Okay? So we have this extreme edge, we have this four cycle, and that almost proves it, because now if these clusters are indeed maximal clusters of f, then when we do this last construction step, the base pair u sub k and w sub k are contained in an adjacent pair of clusters in a four cycle, okay? And we know that they are maximal clusters of f actually, because they're contained in g sub f of k minus one.
00:21:22.410 - 00:21:56.154, Speaker A: So therefore this direction is done. Right. All we had to do was we took a vertex that's in level three or higher. We showed that there's a sufficient number of maximal clusters in g sub f of k minus one, meaning enough to perform two recombination steps. So four clusters and we perform those two recombination steps, we got a four cycle. And that proves it, because now we've got u sub k and w sub k in an adjacent pair in a four cycle. So that's one direction.
00:21:56.154 - 00:23:06.250, Speaker A: If our graph, or if our pair g comma f has qrs complexity, then this is true. The two conditions, or the one condition, v sub k is in a four cycle, its base pairs in a four cycle, and they're in an adjacent pair of clusters. So let me know if there's any questions about this direction. Okay, so sorry for the hand drawn sketch here. There had to be a minor change in particular before it claimed that it needed to be level two or higher, but it actually needs to be level three or higher, so I had to redraw the base case. Okay, so for the other direction, we're going to assume that for every recombination step in our graph where v sub k is in level three or higher, there is a four cycle such that the base pair of vertices are contained in an adjacent pair of maximal clusters. And we're going to show that g f then must have qrs complexity.
00:23:06.250 - 00:23:48.524, Speaker A: And we're going to do this by induction on the number n of recombination steps. All right? So, and remember, our assumption is that g has at least six clusters because otherwise it's uninteresting. So that's why the base case here is n equals three. That'll give us these six clusters. And you can just easily verify by looking at the extreme graphs that this is going to have qrs complexity. So the first, the g hat not extreme graph is just going to add an edge between v naught and v prime not. And that's obviously tree decomposable because k two is three decomposable in the base case.
00:23:48.524 - 00:24:21.600, Speaker A: The next one, we're going to have this cluster and this cluster. And then here's our next base pair. We add an edge between them that's three decomposable because we can perform the recombination step that adds this cluster and this cluster and so on and so forth. It's easy to see anything like this is going to be qrs complexity. All the extreme graphs are going to be 3d composable. Okay, so that's the base case. Okay, let me see.
00:24:21.600 - 00:25:06.976, Speaker A: Yeah. Okay, so we've got this picture. Okay. So for the induction hypothesis, we're going to assume that g f has qrs complexity when we only perform k minus one recombination steps. And we're going to show it for k recombination steps. Okay? And by the inductive hypothesis, what it means to have qrs complexity is that all the extreme graphs for recombination steps less than k are three decomposable. Okay? So we're going to consider, we're going to consider this recombination step that adds v sub k.
00:25:06.976 - 00:25:28.524, Speaker A: Oh, I see a chat. Yeah, doctor Sithram saying that the point is that the cycles are of length less than or equal to four, the four cycles, so we don't have to be careful about excluding lower levels.
00:25:31.324 - 00:25:35.764, Speaker B: That's not the point is that we don't want large cycles.
00:25:35.884 - 00:25:38.004, Speaker A: Yeah. Right. Yeah.
00:25:38.044 - 00:25:42.384, Speaker B: So exactly four is not so relevant.
00:25:44.084 - 00:25:45.196, Speaker A: Yes. Right. Right.
00:25:45.300 - 00:25:45.780, Speaker B: Okay.
00:25:45.852 - 00:26:30.084, Speaker A: Yeah. Okay. So, right, so we're going to consider this recombination step that adds the vertex v sub k and it's got the base pair u sub k, w sub k. Okay. So by assumption, because we're doing the other direction now, there is a four cycle in our graph such that u sub k and w sub k are contained in an adjacent pair of maximal clusters. And without loss of generality, we're just going to say that they're contained in t one and t two and that t one and t two are an adjacent pair. Okay, so we have something that looks like this where we've got g sub f of k minus one.
00:26:30.084 - 00:27:29.684, Speaker A: We've got our base knowledge somewhere over here and we've got this last recombination step and our four cycle of interest. Okay, so we're going to note something that's kind of obvious, but it's important. So we're going to show it real quick. During these recombination steps it must be the case. So during these recombination steps, this four cycle is going to kind of come into existence in our graph. Right? And it must be the case that for any recombination step that adds clusters to this four cycle, it must add exactly two clusters. So in particular, this four cycle is constructed using two recombination steps, right? Otherwise, if this isn't the case, then the only case to consider is four recombination steps that each add a single maximal cluster to this four cycle.
00:27:29.684 - 00:28:23.884, Speaker A: So why don't we have to consider the other cases? Well, if you add it all at once, that's not a valid recombination step just by the definition of tree decomposability. And if you add three at once, that's not a valid recombination step. So it could be the case that maybe all our recombination steps, like, you know, it's t two and some other cluster outside of the four cycle, t three and then some other cluster outside of the four cycle. That's the only case that we're considering that we continue doing that kind of recombination. Okay, well, we can add t one, t two and t three in this fashion. But then notice that when we add t four, t one, t two and t three were already in our graph. And so that means that t four shares two vertices with our previous graph.
00:28:23.884 - 00:29:39.394, Speaker A: But that's not a valid recombination step because in a recombination step, the two clusters that are added must share exactly one vertex with the rest of the graph and then one vertex with each other. Okay, so that's not allowed. So since that's a contradiction, we must add clusters two at a time to this four cycle. Okay, so now we're going to consider the recombination step that completes this four cycle. So it adds the last pair of adjacent maximal clusters and without loss of generality, let that be the clusters t three and t four. Right, so t one and t two are already in our graph, and we're saying that this recombination step completes the four cycle by adding t three and t four. Okay, so this recombination step is m is less than k, which means that by our inductive hypothesis, as we previously noted, the mf extreme graph is three decomposable.
00:29:39.394 - 00:31:14.356, Speaker A: So in particular, if we, instead of adding t three and t four and ignoring this t five and t six, which isn't in our graph, we're in a state where we just have this t one and t two, u sub m and w, sub m in this case are p three and p four. And we're saying that adding an edge between p three and p four yields a tree decomposable graph. Okay, so that means that this tree decomposable graph, this extreme graph, can be constructed from p three and p four. And in particular, the very first recombination step that we perform when we just have this edge can be t one and t two, right? Because that's going to be a level p one right here is going to be in level one, its base pair are the vertices that we start with. Moreover, once we have constructed, once we performed all the recombination steps to get this extreme graph, so the graph that has the edge p three, p four, and the first k minus one recombination steps, sorry, m minus one, because we're at step m. Once we've done that, we can remove this extreme edge, and that gives us, by definition g sub f of m minus one. Because remember, to get the extreme graph, we take this graph and we add the extreme edge.
00:31:14.356 - 00:31:56.084, Speaker A: So now we're just removing it to get this. And then, now we're just at some point in our construction of g from f, so we can continue the construction so we can perform the mth to the k minus one th recombination steps. And that will get us up to g sub f of k minus one. So the graph that we see here without t five and t six. Okay, so this will be useful that we can construct the rest of our graph once we have p three and p four. That's basically what this is saying. At any point where we have p three and p four, we can perform this process.
00:31:56.084 - 00:32:57.174, Speaker A: We can just pretend like we've removed the edge of the extreme graph and then perform the construction steps to get g sub f and then perform the rest of the construction steps to get g sub f of k minus one. Okay, so finally, starting from our base pair that we're interested in, u sub k w, sub k. We're going to first perform the two recombination steps that add t one and t two and then t three and t four. Okay? And we know that we can do this because u sub k and w sub k, by hypothesis, are contained in a four cycle, and they're contained in adjacent pairs of clusters in the four cycle. Okay, well, now the graph contains u sub m and w sub m, which were just p three and p four. And now we just do exactly what we said. We can apply the construction that we just talked about.
00:32:57.174 - 00:33:44.644, Speaker A: And the only catch here is that, remember previously, the extreme edge here was between p three and p four, where instead of adding the clusters t three and t four, we just added that extreme edge. So now we can perform the previous construction with these clusters added on t three and t four. But that doesn't prevent anything because these are just kind of tacked on. Right. So now we can perform this construction where we take p three, p four, we construct the extreme graph, we delete the edge p three, p four. Then we construct g sub f of k minus one. We're going to do all that with just this t three and t four added on.
00:33:44.644 - 00:34:40.704, Speaker A: That gets us to g sub f of k minus one union u sub kuu sub k, because we started with this edge, and that gives us the kth extreme graph. Okay, so what did we actually do? We perform two recombination steps from u sub k and w sub k. And then we kind of pretended that our base pair was p three and p four and performed the rest of the recombination steps that way. But that's the same as just saying that our base pair is actually u sub k and w sub k. So therefore, we've shown that this extreme graph is tree decomposable. And in particular, you just do t one, t two, then t three, t four, and then all the recombination steps from p three and p four to get g sub f of k minus one. Okay, so that proves the other direction by induction.
00:34:40.704 - 00:35:42.530, Speaker A: So any questions on this proof? I hope that was clear. It's, uh, it's a lot of, uh, just kind of dealing with these extreme graphs, visualizing what recombination steps you can do given the assumptions we have. Right. Like we needed to ensure that we have this four cycle here, or that we can do the recombination steps to get this four cycle. Okay, so now we've proven this for cycle theorem. So now this gives us a much better algorithm to check whether a graph a pair g comma f has qrs complexity instead of just checking every extreme graph. So the way to do that, and I won't go, it's kind of a wall of text, but I won't go over all the details.
00:35:42.530 - 00:36:39.032, Speaker A: But the point is, the overall picture that you should just take away from this is that we're going to perform the recombination steps of our graph one at a time. So that just takes ov time. And then after each recombination step, we're just going to kind of do like almost we're going to do an amount of work that is also o of v. And that work is to going to keep track of this set l. And what the set l is, is a set of adjacent pairs of clusters in four cycles. And all we have to do is ensure that at every recombination step, our base pair is taken from some pair in l. Since L is going to be our adjacent pair of clusters in four cycles, obviously our next base pair needs to come from L or it needs to be contained in clusters in L.
00:36:39.032 - 00:37:22.754, Speaker A: Otherwise it's not contained in an adjacent pair of clusters in a four cycle, which tell us by the previous theorem that it doesn't have qrs complexity. So that's all we're going to do. And you can do this very quickly. You can do it in ov time. Okay, so that's just kind of a nice algorithm that we get from the four cycle theorem. Okay. And then the one other kind of combinatorial result we want to show is that if a pair g f has qris complexity, then so does the paired g f prime for any non edge f prime.
00:37:22.754 - 00:38:35.690, Speaker A: You know, since this is a pair such that g union f prime is tree decomposable, whenever we write it in this pair, we mean one Dof tree decomposable graph and a base non edge. Okay, so what we're going to do is we're going to prove this by contradiction. Any base non edge f dash. Yes, right. So we're going to prove this by contradiction. We're going to assume that g is the graph with the minimum number of recombination steps that violates this claim. So the minimum number of recombination steps such that for one pair g comma f, such that one pair g f has qrs complexity, but another pair g comma f prime does not, where obviously these two are distinct, then what we're going to do is we're going to show that we can actually, if this is the case, we can actually just leave out one of the final recombination steps.
00:38:35.690 - 00:39:23.686, Speaker A: We're going to leave out a recombination step on a last level vertex. And this is going to give us another graph such that it has qrs complexity with f but not qrs complexity with f prime. And that's going to be a contradiction because we performed one fewer recombination steps and obtained the same graph. So it contradicts the minimality assumption on G. So that's going to be the idea. So let's go through the details here. So we're going to let f be v one and v two, and we're going to let, sorry, that should say f prime there.
00:39:23.686 - 00:40:13.506, Speaker A: F prime b v prime one, v prime two. And they are pictured down here. Right. So f is v one, v two, f prime is v prime one, v prime two right there. Okay. And like we said, we're going to assume g is the graph with the minimum number of recombination steps such that g comma f has qrs complexity, but g f prime does not. Okay, so the first thing we're going to observe is that f and f prime cannot be contained in the same adjacent pair of maximal clusters, right? Yes.
00:40:13.506 - 00:41:07.586, Speaker A: So yeah, that's important to point out the minimality statement that we're making that G has the minimum number of recombination steps. It makes sense because if you recall, these recombinations have the church Rosser property, meaning that any set of recombinations will get us our graph g. And all sequences of recombinations have the same number of recombinations. So it makes sense to make this claim on minimality. And we can compare either the number from g f or g comma f prime of recombination steps. Okay, so the first observation we're going to make is that f and f cannot be contained in the same adjacent pair of maximal clusters or even in the same four cycle. Really? Otherwise they would have the same algebraic complexity.
00:41:07.586 - 00:42:04.004, Speaker A: Why? Because all of their extreme graphs would be the same. Right. They'd basically be performing all the same recombination steps. So we'd be looking at all the same extreme graphs. And if those are three decomposable, then both f and f have qrs complexity. If any one of them is not, then neither have qrs complexity. So as the picture down here shows, they must be in different four cycles, right? So hence this means that g has at least two recombination steps from either non edge from either f, or from f dash so the picture down here shows g with the first two recombination steps from f and the first two recombination steps from f dash.
00:42:04.004 - 00:42:46.546, Speaker A: Okay, so all we've shown here is that if we assume to the contrary, you know, all this stuff, that g f has qrs complexity, but g f prime does not, then we must be in this situation pictured below. Okay, so now this four cycle, there's a base pair for. Let's consider the one at the bottom right. So we're dealing with f. We have added t one and t two. The next recombination step adds t three and t four. And the base pair is in t one and t two.
00:42:46.546 - 00:44:03.804, Speaker A: It's w one and w two. So we're just going to call this g w one, w two. Likewise, we're going to call w prime one and w prime 2G prime. Okay, so from what we just said, since f and g and respectively, f prime and g prime are contained in the same adjacent pair of maximal clusters, then g comma f and g must have the same algebra. Sorry, that should say algebraic must have the same algebraic complexity, right? Because all of their extreme graphs are going to be the same, okay? And likewise g comma f dash and g prime or g comma g dash are going to have the same algebraic complexity. Therefore, without loss of generality, we can just kind of perform this argument assuming f is equal to g and f is equal to g. Now here is an important property that's going to be true if everything we've assumed so far is true.
00:44:03.804 - 00:45:11.444, Speaker A: So if v is a last level vertex, so it's one of the last ones added, and nothing kind of depends on the vertex v. The vertex v has clusters t one and t two when it's added, and nothing is built off of t one and t two. Okay, so that means that v is a last level vertex. So if v is a last level vertex in the construction of g from f, then v must be a vertex of f dash. So what we're saying is if we start over here with f and we perform all of our construction, our recombination steps, one of the last level vertices, or all of them actually must be a vertex of f dash. Okay, so suppose, and we're going to show this, we'll prove this now. So suppose that v sub m is a last level vertex and its base pair is u, sub m, w sub m.
00:45:11.444 - 00:46:25.864, Speaker A: And suppose that it's not a vertex of f dash. Okay, so since u sub m and w sub m is a non edge, because all base pairs are non edges. The two unique maximal clusters of f containing v sub m form a one DoF treaty composable graph. So what does this mean? It means that the maximal cluster containing u sub m and the maximal cluster containing w sub m form a one dof treaty composable graph. So sorry, if we look here, let's just consider u two. All this is saying is that if I just take the graph t three, t four, then it's one do have tree decomposable because if we add the edge w one, w two, then we get a three decomposable graph. Okay, so since it's one uf treaty composable, it must, these clusters must also be maximal clusters of f dash, right? So the clusters involved in this construction step are maximal clusters of f and they are also maximal clusters of f dash.
00:46:25.864 - 00:47:48.864, Speaker A: Hence we can perform this recombination step last in the construction of g from f dash, right? Because in any construction v sub m is going to be a last level vertex. And we're just saying that we're going to consider the two maximal clusters that are involved in this recombination step and we're going to do that recombination step last when we're building g from f dash. Okay, so what does that mean? Well, that means that if we consider the graph before this last recombination step, they must be the same by the church Rosser property. So g sub f. Building g from f and performing the first k minus one recombination steps gives us the same graph as building g from f dash and performing the first k minus one recombination steps. Okay, also by assumption, the kth extreme graph, since g f has qrs complexity, the kth extreme graph is tree decomposable. But the kth extreme graph for f must then be tree decomposable because these are the same extreme graphs.
00:47:48.864 - 00:48:57.464, Speaker A: Now we know that g f dash does not have QRs complexity, which means some extreme graph is not tree decomposable. But this implies that some other extreme graph less extreme graph of less than k minus one recombination steps is not tree decomposable. Okay, well what does this mean? This means that we can just consider all the recombination steps up to that point where we reach the first extreme graph that is not tree decomposable. And that graph g has qrs complexity on f but not on f prime. So that contradicts the minimality of g. And so we're just going to get through this proof, I think, because I think I'm almost out of time. So now we know that our last level vertex has to be, if we build the graph from f, our last level vertex has to be a vertex of f dash.
00:48:57.464 - 00:49:51.652, Speaker A: Okay, so let v be a last level vertex. And the construction of d from fast by our previous claim, v is either w one dash or w two dash. Because remember we said without loss of generality, we can just let f be this non edge instead. So v is either w one or w two. So without loss of generality, let it be w one dash. Okay, so, sorry, where is u? Should that say v? Oh, oh no. Okay, we got this.
00:49:51.652 - 00:51:04.764, Speaker A: Okay, so f, note that f dash, which is w one dash, w two dash, and f, which we're going to say is this non edge. U one u two have the same algebraic complexity because they're contained in the same four cycle. Okay, so starting from f, which is this one u one, u two, we can perform the recombination step that adds t one and t three dash, which gives us w one. And then we can perform the recombination step that adds t four and t two, which gives us w two. And then the construction of g from f dash, which is this one, is the same as the construction from f. So basically, once I create this four cycle, the construction from either this non edge or this non edge is going to be the same. Okay, so since v is a last level vertex, we can just not perform w one dash.
00:51:04.764 - 00:52:22.908, Speaker A: Because remember, v equals w one dash, we cannot add w one dash to our graph. Okay, but since we said that this non edge and this non edge have the same algebraic complexity, then by not adding this vertex we get a smaller graph, fewer recombination steps such that this non edge does not have qrs complexity, but f does. And that contradicts the minimality of g. So that shows that they both must have the same qrs complexity. Okay, I'm not going to be able to get to the other stuff since I think I'm already, yeah, I'm already over time. But the basic flavor here is that once we have the four cycle theorem, we can prove some really nice things about this subclass of one Dof tree decomposable graphs that only have one last level vertex. We can come up with a fast algorithm to compute Kaylee configuration spaces of these graphs that only have one last level vertex.
00:52:22.908 - 00:52:52.094, Speaker A: And then we can put all that together to get the Kayley configuration space of any one. Do have three decomposable graph that has qrs complexity. So that's kind of where we would have gone if we had had more time. So sorry if this proof was a little hairy. There's a lot of kind of non edges and vertices to keep track of. But if you have any questions, just let me know, or I can go over it anytime. Thanks.
00:53:08.694 - 00:54:11.334, Speaker B: Are there any questions? So I have a question. You had some statement there about v cubed early on, you know, when we were talking about the QIM algorithm. What was that? Oh, this is for characterizing. Yeah, yeah. But this is sort of like the least interesting application of the four cycle theorem, though.
00:54:14.634 - 00:54:46.802, Speaker A: William, you're muted. Yeah, I didn't realize. Okay, so, no, I was just. Yeah, I was just saying that. Yeah, this is to characterize graphs with QRS complexity by just checking all of their extreme graphs to see if they're three decomposable. But yeah, this was just kind of an observation that we could do it just with the definition of all extreme graphs being treaty composable, but obviously we can do it much better. And.
00:54:46.802 - 00:54:53.394, Speaker A: Yeah, this isn't the biggest use of the four cycle theorem. It was just to kind of build up to it.
00:54:53.854 - 00:54:59.514, Speaker B: Right. So one question would be, what are the good uses of the four cycle?
00:55:01.854 - 00:55:23.444, Speaker A: Yeah, so. Well, one would be the stuff that I wasn't able to get to. So there is, we were going to discuss this, which was an algorithm to compute the Cayley configuration space for QRS complexity or for pairs with QRS complexity in quadratic time in the number of vertices.
00:55:23.744 - 00:55:26.216, Speaker B: As opposed to the ELR algorithm.
00:55:26.320 - 00:56:30.724, Speaker A: Yeah, as opposed to the LR algorithm, which could take exponential time. So the kind of nice use of the four cycle theorem is this lemma right here for special types of graphs called one path graphs, where a one path graph is just a graph, where if you construct it from f, it has exactly one last level vertex. So kind of just like easy graphs to construct. And the point is we can, using the four cycle theorem, say exactly where all of the base pairs of vertices are going to be as you construct, as you perform each recombination step. And by doing that, we can then just kind of relate distances of these four cycles. So we can talk about the distance of one diagonal pair relative to the other diagonal pair. And we can do, use this to compute the Kala configuration space for these one path graphs.
00:56:30.724 - 00:56:47.484, Speaker A: And then it's just a simple observation that a non one path graph is just the union of one path graphs subgraphs. Um, so that's kind of the more interesting application of the four cycle theorem. Yep.
00:56:51.624 - 00:57:07.244, Speaker B: Um, yeah. And I think you use it also for the characterization of low qrs. I mean, QRS complexity is depending only on giving g.
00:57:10.704 - 00:57:26.964, Speaker A: Yes, yes, we do. Yeah. It's used here because we're using the fact that these recombination steps, their base pairs have to be in adjacent pairs of clusters in four cycles. Yeah.
00:57:28.024 - 00:57:36.294, Speaker B: Yeah. So it's probably the key thing that's used for all of these properties of QRS complexity.
00:57:36.334 - 00:57:42.894, Speaker A: Graphs. Yeah, it's like the most powerful, I guess, kind of tool for these kinds of graphs.
