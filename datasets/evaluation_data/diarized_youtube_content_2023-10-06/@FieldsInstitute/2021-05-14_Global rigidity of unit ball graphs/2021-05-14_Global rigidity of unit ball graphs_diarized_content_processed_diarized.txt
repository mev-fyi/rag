00:00:00.160 - 00:01:19.264, Speaker A: It's about global rigidity of unit ball graphs and its joint work with Daniel Goron Verdi. So in this talk, I'll start with a very brief introduction to global rigidity, and then I'll show you what we could do about a new version of global rigidity that we shall call unit ball global rigidity. You know these definitions, but still, let's define frameworks first, sometimes called geometry graphs. So d dimensional framework is a pair, g is a simple graph, and p maps the vertices of g to rd. And then we think of the edges of the graph in this framework as straight line segments, and their length is just the euclidean distance between the n vertices endpoints. And we also call this a realization of G in RD. And we say that two realizations, gp and gq, are equivalent if corresponding edges have the same length and they are congruent if for all pairs we have that pu minus pv equals q u minus qv.
00:01:19.264 - 00:02:14.984, Speaker A: Okay? So for example, here you can see two planar realizations of the same graph, which are equivalent. They have the same edge length, but they are not congruent. One is obtained from the other by flipping the top vertex to the other side. Okay, and now here comes the key definition, global rigidity. So we say that GP is globally rigid in RD if every equivalent realization is actually congruent to GP. So you mentioned the distance geometry context. So if you want to use this terminology, then we can think of GP as a feasible solution for a distance geometry problem, where we are given the graph and the edge length.
00:02:14.984 - 00:03:24.948, Speaker A: So GP is a feasible solution for the corresponding edge length. And global rigidity captures the uniqueness of this realization. So it's globally rigid if and only if this particular feasible realization is unique and there is a weaker property, rigidity, so it's a kind of framework, is rigid if it's locally, globally rigid. So in this case, we look at equivalent realizations, GQ, which are close to GP. And if they are close enough within an epsilon, then they are all congruent to GP. So a more meaningful definition is that a framework is rigid if every continuous deformation, every flex that preserves the edge length, results in a congruent framework. So these are the two basic definitions that will show up many times.
00:03:24.948 - 00:04:00.964, Speaker A: So, global rigidity and rigidity standard examples. Here you can see four planar frameworks. First, one is not even rigid. You can see a continuous edge length preserving flexible if you look at the dotted edges. Now, the two frameworks in the middle, they are equivalent, but not congruent from the previous example. And then the framework on the right is globally rigid. It's not trivial, that is globally rigid, but it is globally rigid.
00:04:00.964 - 00:04:52.018, Speaker A: And it shows that if we have, say, six points in the plane, then it may be enough to fix just how many ten pairwise distances out of the 15 pairwise distances to fix actually, or all pairwise distances. So it's a globally rigid framework with ten edges. Now, minor problem with these concepts is that they are hard to test. So testing rigidity is np hard in two reals and in higher dimensions. And testing global rigidity is np hard even on the line. So in this sense, they are not very nice. So this figure is not very important.
00:04:52.018 - 00:05:37.774, Speaker A: It shows actually that testing global rigidity is np hard on the line, even for a cycle, even if the graph is a cycle. It's easy to reduce the subset sum problem to testing global rigidity on the line when the underlying graph is a cycle. But it's not important today. So one way to make some progress is to consider generic frameworks. So we say that the d dimensional framework GP is generic if the set of the coordinates. So we have d times number of vertices coordinates of this framework. So if this set is algebraically independent over the rationals, and then we have some good news.
00:05:37.774 - 00:06:59.922, Speaker A: Fundamental results in rigidity theory tell us that rigidity, and also global rigidity, they are generic properties for every fixed d, which means that if there exists a, say, rigid generic framework GP, then every generic framework, every generic realization of g is rigid. And the same holds for global rigidity. So in, yeah, so these results are due to these people. And so you can see that in this sense, if you consider only generic frameworks, then these are graph properties. For every fixed d, we can define the family of rigid graphs and also the family of globally rigid graphs. They are the graphs for which there exists a generic rigid realization or a generic globally rigid realization. One of the most exciting problems in rigidity theory or in distance geometry is to characterize rigid and globally rigid graphs, especially in higher dimensions.
00:06:59.922 - 00:07:52.994, Speaker A: For d equals one and two, we know what they are. But if d is at least three, then there is no known characterization. So, talking about. Yeah, so for general D, we have a very important, nice, necessary conditions. So we say that the graph is redundantly rigid if g minus e is rigid for every edge e in the graph. So if we remove any edge, then it stays rigid. And Hendrickson proved that if we have a globally rigid graph on at least, well, it's either a small complete graph on at most d plus one vertices, or if it has at least d plus two vertices, then it must be d plus one vertex connected and redundantly rigid.
00:07:52.994 - 00:08:50.144, Speaker A: So these are the Henriksen's necessary conditions. And it's known that these two conditions together, they are not sufficient if d is at least three, but they are actually sufficient for d equals one and two. So with Bill Jackson we proved, relying on results of Hendrickson and Bob Connelly also, that these necessary conditions are sufficient. So if a graph has at least four vertices and it is globally, then it's globally rigid in the plane if and only if it is three, connected and redundantly rigid. And these properties can be tested in polynomial time. So it gives a characterization that we want for two dimensional global rigidity. Just a note here that a corollary of this result which may be useful in certain distance geometry problems.
00:08:50.144 - 00:09:54.434, Speaker A: For example, if one considers random networks, random graphs, that if a graph is six vertex connected, then it is globally rigid. So there is a sufficient condition in terms of vertex connectivity. And for higher dimensions, there are results concerning special families of graphs. For example, there is a characterization for generic body bar frameworks which are important in rigidity theory, but actually may have also been important in other, in certain applications. I will not define them now, but if you know what they are, then for every d there is a combinatorial characterization which comes with an efficient algorithm for body bar frameworks. And there is one also for body hinge frameworks. And there is a more recent result, joint work with Shinichi tanigawa.
00:09:54.434 - 00:10:21.722, Speaker A: It's only in three dimensions. We characterize the so called globally rigid braced triangulations. So these are the graphs that contain a spanning maximal planar graph. They come from the. Yeah. Anyway, so it's another family and then there are many other partial results. So you can, you can look it up.
00:10:21.722 - 00:11:13.840, Speaker A: For example, we have a handbook chapter with Walter Whiteley about globally, globally rigid graphs. So I think it was brief enough, it was the introduction to global rigidity. And now we should go to the new stuff. So first let me mention two applications. The first one, it's a natural application in molecular conformation. So in this problem, it's also a basic problem in distance geometry. If we have the graph of a molecule, vertices correspond to the atoms and the edges correspond to the bonds, then we can construct another graph, a bar and joint framework.
00:11:13.840 - 00:12:48.444, Speaker A: Because the fixed fixed distances and angles, they give rise to a special bar and joint framework whose underlying graph is the square of this graph, the graph of the molecule. And then it's a very natural question. The global rigidity is a very natural property to investigate. If we can, if we can determine a framework which satisfies all these molecular conditions, then is there another framework or is it unique? So it's one of the important applications. And today, the second application that I want to show you is the relevant one, because in the so called localization problem for wireless sensor networks, the problem is to try to localize every sensor given a subset of the pairwise distances. So we have some sensors, say in the plane, and we have, this is the information that we have, a collection of pairwise distances, and we want to determine the exact location of all the sensors. Of course, in order to do that, we need some so called anchor vertices or special sensors for which we know the exact locations.
00:12:48.444 - 00:13:56.650, Speaker A: We need at least three in the plane and with at least three anchors and some pairwise distances. We may or may not be able to localize the whole wireless sensor network. But if we can come up with a feasible set of locations, then again a natural question to ask is whether it is unique or not. And then it is again a global rigidity question. So if we look at this framework in which the vertices correspond to the sensors, the measured or known distances correspond to the edges, and we would like to know whether this framework is globally rigid or not. And today, the motivation for this talk is that there is a special case, a very natural and well studied special case, when maybe it's on the next slide. Yeah.
00:13:56.650 - 00:15:05.764, Speaker A: When we have a so called unit disk or unit ball model, where we suppose that the distance between two sensors is known if and only if the two sensors are not very far from each other, they are within the certain sensing radius. So there is a fixed distance, and two sensors can measure by communicating, by sending radio signals, they can measure their pairwise distance. And if they are too far away, then they cannot do that. Not every sensor network has this property. But if they do, then we can model them by a special framework, and we call this a unit ball framework. So this is the definition of a unit ball framework framework. GP is unit ball if and only if we have this property that there is an edge in the graph, if and only if the distance between the endpoints is strictly less than one.
00:15:05.764 - 00:15:34.234, Speaker A: Okay, so this is the unit ball. This is the definition of a unit ball framework. And of course we should also fix the dimension. But given d, then we can define unit ball frameworks in RD. I think the standard definition would say that the distance between pu and Pv is less than or equal to one. But it's more convenient to work with this definition. And there is a result about this.
00:15:34.234 - 00:16:35.130, Speaker A: It basically says that there is no difference between the two definitions in some sense. Okay? And then we can say that a graph g is a unit ball. It's a unit ball graph in Rd, if it has a d dimensional unit ball realization. So you can see that in this sensor network context, if we have this sensing radius property, then the framework is unit ball. And of course, the graph of the known pairwise distances must be a unit ball graph. So in the plane, if d is equal to two, then the standard terminology is that then we say unit disk, and if d is equal to one, then it would be a unit interval graph. So here is the main point, the motivation of this talk.
00:16:35.130 - 00:17:39.460, Speaker A: So if we know that our framework is a unit ball framework, and we restrict ourselves to unit ball frameworks, then certain frameworks which are not globally rigid in the general sense, may become globally rigid. So I think this figure tells you everything. So if you look at this two dimensional, you look at figure a, it's a framework in the plane which is not globally rigid. It has two equivalent realizations. Say you can flip the vertex on the right to the other side, but if you do that, then you obtain the framework in figure b. But then in this framework, the two vertices which are connected by a red dotted edge, they are too close to each other. So this framework on the right is not a unit ball framework.
00:17:39.460 - 00:18:41.624, Speaker A: So here I mean that the length of this red edge is less than one. So in this sense, knowing that we are only interested in unidisc frameworks in the plane, in this sense, we already know that if we have found the realization on the left, then it is unique, then it must be the correct localization of all sensors, because for the other one on the right, we would know the distance for those two vertices connected by a red edge, but we do not. So this extra information excludes this framework. Okay. And what we wanted to do, we wanted to explore this, or we wanted to, you know. Yeah. See what we can say, what else we can say about this.
00:18:41.624 - 00:19:34.600, Speaker A: So this observation was made earlier. We have found two other papers where the authors realized that this property may be useful and they used it in some heuristic localization algorithms. But there was no other, there was no theoretical result, or maybe there was no other example shown, but this forward text graph. So today I'd like to show you what we could say about this. So this here is the formal definition. You need ball global rigidity. So we say that you need ball framework, unit ball globally rigid, or UBGR for short, if every equivalent unit ball framework, GQ, is congruent to it.
00:19:34.600 - 00:20:15.964, Speaker A: So it's the same figure again. So this framework on the left is unit ball globally rigid, although it's not globally rigid in the original sense. Now let's start with some basic observations. Let's look at figure three. So here a and b, so you can see the same figure for the third time. So here the framework on the, on the left is, as we said, is ubgr. But if you look at c and d, then you can see two realizations, two different realizations of the same graph, k four minus n h, and they are both unit ball.
00:20:15.964 - 00:21:23.184, Speaker A: So what is the conclusion here? And they may be generic frameworks, why not? So the conclusion is that unit ball global rigidity is not a generic property. So it may have that some graphs, a k four minus an edge, it may have a unit ball globally rigid realization, even a generic one, and may have another unit ball realization, which is not UbGR. So therefore we can actually define two families of graphs. We can say that a graph is unit ball globally rigid if there exists a d dimensional generic unit ball globally rigid realization, and it is strongly unit ball globally rigid if every d dimensional generic unit ball realization is unit ball globally rigid. So today we shall focus on the UbGR property. We shall just mention subgr a few times, but our main concern is the UBGR property. Okay, so it was the first basic observation.
00:21:23.184 - 00:22:12.644, Speaker A: Second observation may seem entirely obvious, but it's easy but not obvious. It says that if we have a generic UBGR unit ball realization of a graph, then it must also be rigid, and hence the underlying graph must be rigid. So generic UbGR implies rigid. It's not hard to show. This example may be interesting in general for non generic frameworks. Actually, this implication does not hold. So if you look at this figure square with unit length diagonals, it is ubgr, but it's not rigid.
00:22:12.644 - 00:23:09.206, Speaker A: But we shall consider generic frameworks. So from now on at least we know that whenever we have a UbGR unit bore graph, then it is rigid, and hence we have this chain of containment relations. Here we are within the family of unit ball graphs. Globally rigid is a subset of strongly unit bore globally rigid, which is a subset of unit bore globally rigid. And by the previous lemma, it is a subset of rigid. So somehow these new families, they are somewhere in between rigid and globally rigid. And it's a quite simple result that we can quickly see what happens on the line.
00:23:09.206 - 00:23:39.574, Speaker A: So if d is equal to one then we are lucky. So if g is a unit interval graph, so it has a unit, you need ball realization on the line. Then actually the following four properties are equivalent. G is rigid, g is connected, g is ubgr, and g is subgr. So they are all the same. But this is only for D equals one. And it's due to the fact.
00:23:39.574 - 00:24:28.210, Speaker A: No, I mean, I wanted to say that we know which graphs are unit ball graphs. On the line, there is a nice forbidden subgraph characterization, but actually for higher dimensions, we don't know. So the family of unit ball graphs is a pretty ugly family, even for d equals two. Very little is known about unit disk graphs. Maybe I have a slide somewhere which says that it's empty. Hard to test. If a graph is a unit, this graph, and here I just noted that on the line, the graph is globally rigid if and only if it is too connected.
00:24:28.210 - 00:25:23.014, Speaker A: So in this chain on the right side, we have connected, and the left side has two connected. Okay, so some natural questions. So what should we try? What should we try? So first is to find infinite families of UbgR graphs in two reals. So far, the only graph that we have is k four minus an h. So are there other families which are ubgr? Or perhaps we can find families which are ubgr and which have strictly less edges than the minimum age number in a globally rigid graph. So, for example, in the plane, we know that every globally rigid graph has at least two v minus two, two n minus two edges. Perhaps we can find ubgr graphs with even less edges, like k four minus an h.
00:25:23.014 - 00:26:08.316, Speaker A: And then we can also focus on these containment relations and see whether they are proper or not. And there are lots of other questions. Every question is new, basically. Okay, so let me introduce an interesting family of graphs, because it turns out that this is a useful family in this UBGR context. But first, we forget about the unit ball property. It's a general definition. So G is a saturated, non globally rigid graph, or simply SnGR if it's not globally rigid in RD.
00:26:08.316 - 00:27:24.574, Speaker A: But if we add, if we connect any non adjacent pair, if we add any new edge uv, then it becomes globally rigid. Okay, saturated, non globally rigid. And if you recall the definition of globally rigid, and you look at the definition of saturated non globally rigid, then you can make this observation that a graph is SnGR if and only if for all generic frameworks, gp, and for all equivalent frameworks, gq, which is not congruent to gp. Then we have that for every known edge, the corresponding distances must be different. We cannot have two equivalent realizations in which two distances are the same, because otherwise we could add this edge to g, and the same pair of realizations would certify that it's not yet globally rigid. And it's if and only if. So it's an equivalent formulation of s and gr.
00:27:24.574 - 00:28:06.084, Speaker A: Okay, so let me. Yeah, so this is perhaps the most interesting slide. So here is a strategy, an approach, one attempt. How to find generic unit ball, globally rigid realizations. So start with a generic rigid unit ball framework. So fix d. And it works for every fixed d.
00:28:06.084 - 00:28:41.184, Speaker A: Just take your favorite unit ball framework, which is rigid and generic. Now. Okay, since it's rigid, it's a folklore result. We know that it has finitely many congruence classes of equivalent frameworks. So look at all these. Pick a pick one framework from each congruence class, and now start shrinking these frameworks simultaneously. So.
00:28:41.184 - 00:29:57.514, Speaker A: Or scale them by effect of alpha alpha less than or equal to one. So if we start shrinking these frameworks simultaneously, then at certain points, non adjacent vertices will be too close to each other, the distance between them will be less than one. And if that happens, then we can throw this realization away because it's no longer a unit ball, because we have knowledges and vertices of distance less than one. If we keep shrinking and throwing away certain equivalent realizations, then it would be nice to reach a position when we have exactly one framework in our hand. And then if that happens, then it is still a unit ball. And then it is unit ball, global rigid. Because for every other equivalent realization, we have already made sure that it's not unit ball.
00:29:57.514 - 00:31:26.628, Speaker A: It's not a unit ball framework. Okay, so this is an approach which may or may not work. Question is whether it works for certain unit ball graphs. So what do we need? So in order to make it work, and to obtain a useful corollary here, or a good construction, it would be enough to show that when we shrink and throw some frameworks away, then we can do that one by one, so that it never happens, that suddenly more than one, two, or three or more frameworks become non unit ball. Okay, so what does it mean? What does it mean? What would be useful? So this property, double star, is what we need that for all equivalent frameworks, Gp and Gq. If we look at two pairs of non adjacent vertices, uv and u v, then the distances between these non adjacent pairs, they must be different. So if you can guarantee this for all pairs of equivalent frameworks, then this shrinking approach should work.
00:31:26.628 - 00:32:28.360, Speaker A: Because then indeed, exactly one framework will be thrown away every time we reach the next interesting value. Okay, so double star is what we need. And just to recall that for an s and graph, we know that we have a property star which is weaker. We know that if we have, if we, if you look at two non adjacent vertices, u and v, then the corresponding distances are different in p, in Gp and in Gq. But double star says that all these distances must be pairwise different. So why would it be true? And the interesting thing is that actually it is double. We can show that double star holds for an SNGR graph.
00:32:28.360 - 00:33:36.910, Speaker A: And why is that? And here a recent result by Gaul, Theron and Thurston can be used. So what is this? It's about unlabeled global rigidity, or in this distance geometry context, sometimes unassigned global rigidity. So let's look at the result. So if we have a generic, globally rigid framework, Gp in RD d, at least two, and there is another framework, Hq. And what we know about this pair of frameworks is that the edge length, just the numbers, the set of edge lengths, they are the same. So GP has the same set of edge length that the set of edge lengths of Hq, and that they have the same number of vertices. And what they proved is that in this case, actually g and h must be isomorphic, and the bijection between the edge length of g and h must be induced by this isomorphism.
00:33:36.910 - 00:34:52.720, Speaker A: So we can conclude that in this case, actually g is equal to h and q is congruent to p. So what it says is that if we have a generic globally rigid framework, then we don't have to know the graph, just the numbers, the list of edge length and the dimension and the number of vertices. And then we can uniquely reconstruct g and also GP. And if you think about it for a second, then this is exactly what we need. We can use this result to show that, you know, by assuming that we can, we have equal distances in two different frameworks, possibly with different vertex pairs. Then when we add this edge between u and v, then we obtain a globally rigid graph, a generic, globally rigid framework. And then from this unlabeled result, it, it is the only graph and the only framework with this edge length.
00:34:52.720 - 00:36:10.432, Speaker A: So it would contradict the effect that the other thing is equivalent but not congruent. So from this, it's not very hard to show that if we have an SNGR graph, then and double star are equivalent. So therefore this shrinking strategy works, and hence this approach. At the end, it produces a unit ball globally rigid realization. If we start with a generic realization of a unit ball saturated, non globally rigid graph, if you want to obtain, say, an infinite family of ubgr graphs, then what we need is an infinite family of unit all SNGR graphs. Because for every such graph, this method produces a unit ball realization, unit ball globally rigid realization, and hence it is UBGR. Okay, but actually we need one more step, because, because we have to argue that this last framework is generic or can be made generic.
00:36:10.432 - 00:37:02.234, Speaker A: It's just a technical difficulties. So we have a lemma. It's very similar to the, to a lemma due to Bob Connelly and Walter Whiteley about globally rigid frameworks. Basically, the proof is also similar. We have shown that it has a unit ball counterpart. So if we have an infinitesimally rigid unit ball realization, which is UBGR, then there is an open neighborhood in the realization space such that every unit ball realization in this neighborhood is also UBGR. So with this result, we have this theorem that every unit ball saturated, non globally rigid graph has a unit ball globally rigid generic realization.
00:37:02.234 - 00:38:01.018, Speaker A: So at the moment, the only example that we have seen up to this point is still this k four minus an edge, which is a saturated, non globally rigid and unit ball. So now we should start a more combinatorial investigation. Can we obtain such unit ball Sng air graphs? And here I show you some results of this type. So, first of all, now we are in the plane d is equal to two. One result. One observation is that if we have a saturated, non globally rigid graph on at least it's a d dimensional result of this result, this theorem, at least d plus two vertices, then it is rigid, which is rigid. So by adding an edge, it becomes globally rigid, and hence, by Hendrickson's theorem, it must be rigid.
00:38:01.018 - 00:39:09.032, Speaker A: So every Sng graph is rigid and it is either d plus two connected, or it can be obtained by merging or gluing to big complete graphs. More interesting, perhaps, is the following theorem that if we have a minimally rigid graph, so minimally rigid means that it's rigid, and if we remove any edge, then it is no longer rigid. So if it is minimally rigid and s. And then every proper rigid subgraph must be complete, right? So minimally rigid. And then the only, only proper rigid subgraphs are those which are, for instance, in the plane, which are just edges or possibly triangles. So every proper rigid subgraph is complete. And this, this family, this family defined by this property of, I mean minimally rigid, and every proper rigid subgraph is complete.
00:39:09.032 - 00:39:45.604, Speaker A: They are sometimes, sometimes called special graphs. Not a very clever terminology, but special graphs. And what we could show is that in the plane, it is if and only if. So g is special if and only if it is saturated, non globally rigid. So somehow, in the plane, these SNGr graphs kind of can be nicely characterized in this sense. So here, for example, you can see two special graphs in the plane, the prism k 33. They are minimally rigid.
00:39:45.604 - 00:40:49.036, Speaker A: And if you look at the prism, and the only minimally rigid prope subgraphs are the two triangles. And in case the only minimally rigid, the only rigid propes subgraphs are the edges. Okay? And now there is a set of results that I will not show you today. It's a combinatorial results. So we can construct families of special graphs by certain Henneberg extension operations. So these constructions may also be interesting in other applications of special graphs, and we can show that they contain actually infinitely many unit disk graphs. So if we put these results together, then we have infinitely many UBGR graphs in the plane with exactly two v minus three edges.
00:40:49.036 - 00:41:43.394, Speaker A: So 2 volts three is less than two v minus two. So we can indeed come up with such an infinite family of examples where the UBGR property may be interesting. Okay. And as I said, these results about extensions of special graphs may be interesting from the combinatorial viewpoint. For example, there is no known inductive construction for special graphs. Okay, so what else? Yeah, it's just some figures you can see, for example, this graph here, it's minimally rigid, saturated, non globally rigid, and also a unit ball in the plane. And by our main theorem, it is unit ball, globally rigid.
00:41:43.394 - 00:42:19.860, Speaker A: So, yeah, so this unit ball, unit disk property, as I said, it's not an easy one, so, makes life complicated. But we can show that they are unit ball graphs. Here is a different example. Okay, just to show you some, some graphs, and maybe I have time to make a. It's basically, it's a comment. It's a, it's a, it's another idea that we have not really explored. It's maybe, maybe interesting.
00:42:19.860 - 00:43:18.668, Speaker A: So it's about tense aggregative frameworks and their connections to UBGR graphs. So you could see that one method for constructing UBGR frameworks, generic UBGR frameworks, was by using this shrinking idea and using SNGR graphs, saturated, non globally rigid or special. And then here I want to suggest a completely different strategy. So it's based on, as I said, it's based on tensegrity frameworks. So tensegrity graph is a labeled graph, so the edges are labeled with bars, cables and struts. And the point is that so far we've been talking about bar and joint frameworks. Every edge was a rigid bar.
00:43:18.668 - 00:44:11.934, Speaker A: And in a tensegrity framework with a tense aggregate underlying graph, we may also have cables and struts. And the cables impose an upper bound on the distance between the endpoints, and the struts impose a lower bound. So instead of just having equalities for the edge length, we may have upper bounds or lower bounds. And the simple observation is that is the following encoded in this lemma. So, suppose that we have a unit ball framework in which pu minus pv is equal to one. So we have two vertices, two non adjacent vertices whose distance is exactly one. And then suppose that we have a.
00:44:11.934 - 00:45:46.746, Speaker A: We look at the tense degree framework tP, which is obtained from the all bar tense aggregate framework Gp, by just adding one more member, a single strut connecting u and v, the knowledge JSON pair. And now, if this tense aggregate framework, after adding this strut, is globally rigid, then GP is unit ball globally rigid because the strut imposes an upper bound. So since the tensegrity is globally rigid, we cannot have equivalent non congruent realizations in which the distance between u and v is more than one, and the other equivalent non congruent realizations in which their distance is less than one. They are not unit ball, they are not unid bowl realizations of g. So it's really a simple observation, actually, but it may be useful. For example, if you look at this graph and this tensegrity, then the first graph on the top is a tensegrity framework. It's a so called Cauchy polygon, one of the famous such polygons, the boundary edges, are cables and the diagonals are struts.
00:45:46.746 - 00:46:35.934, Speaker A: And we know that it is globally rigid in this convex position. And this implies that the graph, the framework at the bottom, is unid ball, globally rigid. It's easy to construct a realization in which the distance between x and y is equal to one. And by the previous lemma, or observation, it is unit ball, globally rigid. So this is just a different strategy. So note that this graph, this graph is very far from being special. So we may be able to use tense, tricky, globally rigid tensegrity frameworks to find more unit ball, globally rigid frameworks and graphs.
00:46:35.934 - 00:47:11.922, Speaker A: Okay, so maybe concluding remarks and open problems. So I mentioned the, these containment relations earlier, and it turns out that they are. We don't know the answers yet. So I think they are, they are in. Yeah, a bit interesting. So what does it mean? So we know, we know. By definition it's clear that within the family of unit ball graphs, globally rigid graphs form a subset of the subgraphs.
00:47:11.922 - 00:48:38.330, Speaker A: So subgr means that every generic unit ball realization is unidable globally rigid. But we don't know if this containment relation is propa or not. Even in the plane it is open. So one possible answer, potential conjecture, is that if we have a unit ball graphs for which every generic unit ball realization is globally rigid, then the graph is generically globally rigid in the usual sense, but we don't know if it's true or not. The other containment relation, again we do not have the answer is whether UBGR is a proper subset of rigid, even in the plane? Even in the plane, and even for minimally rigid graphs, it may be the case that every rigid unit ball graph has a generic unit ball global rigid realization. We don't know. And again, the main difficulty here is that all these questions are valid for unit disk graphs or unit bore graphs, but we don't know what they are.
00:48:38.330 - 00:49:58.954, Speaker A: Okay, and another question is about higher dimensions. So if we go to three reals or higher dimensions, then even the family of s and graphs is not well characterized. Globally rigid graphs are not well characterized. So it may be interesting to find sngr graphs or unit ball sngr graphs. And it is just a comment here that based on, for example with Shinichi Tanigawa, we could show in a different context that four connected triangulations, four connected maximal planar graphs, they are minimally rigid in r cubed, and actually they are SNGR saturated non globally rigid. So at least we have family of examples, and it's also possible to show that they contain infinitely many unit ball s and g graphs. Yeah, and you can see our paper about global rigidity of unit ball graphs appeared recently in Sidma.
00:49:58.954 - 00:50:00.934, Speaker A: Thank you.
