00:00:00.760 - 00:00:53.530, Speaker A: Hello. So you've already heard several people talk about this before. So I'm juliet and also Jesse. Though maybe it's going to be a little bit less obvious how what I talk about is related to what Jesse talked about until the end. So I'm going to say some of the same things over again. Kind of under the assumption that it might be good to hear them twice. Okay, so we're going to start with the same setup that we've had for a couple of talks.
00:00:53.530 - 00:01:32.504, Speaker A: Now. Um. X is going to be a smooth projective torque variety. S is going to be its total coordinate ring or cox ring. This is a graded ring, um. Over a nonstandard grading. Generally it's graded over the class group of the torque variety.
00:01:32.504 - 00:01:53.044, Speaker A: We've assumed smooth. So class and Picard are the same thing. This is just z to the r for some r. So maybe let me write that. And B is going to be the irrelevant ideal of the torque variety which is inside s. Um. And it will be monomial.
00:01:53.044 - 00:02:15.024, Speaker A: We're going to see some examples of this. I hope to live up to the claim that this is going to be very explicit. We're going to actually use um. Particular uh. Irrelevant ideals in a bit. But uh. The reason why this is the setting that we're interested in is because we're going to use the correspondence between sheaves and modules that Juliet talked about yesterday.
00:02:15.024 - 00:03:01.584, Speaker A: So one of the nice things about torque variety that Cox figured out in the nineties is that finitely generated graded s modules correspond to coherent sheaves on X. And so we're going to denote this by sending M to M Tilde. Um. This is. If you've seen this construction over projective space, it's a similar idea. You define this by taking localizations over various open sets inside the torque variety. Um.
00:03:01.584 - 00:03:35.740, Speaker A: And one thing that we're gonna use about in particular is that there are some modules that go to zero. So this is not a one to one correspondence. A module will go to zero if it is supported inside the irrelevant locus. So this irrelevant ideal is describing the points that we like remove to construct x. And so if our module only has its. Only localizations are non zero inside the part we've removed, then it just goes to zero under this correspondence. Um.
00:03:35.740 - 00:04:30.612, Speaker A: Another way of saying this that we will use is that it's annihilated by some power because it's finitely generated. It's annihilated by some power of the irrelevant ideal. Okay. So then we have seen this definition before by um. Berkash ermine. And Smith that a virtual resolution is going to be something that becomes a resolution once we use this correspondence. So it's going to be a complex, or I should say free virtual resolution.
00:04:30.612 - 00:05:56.460, Speaker A: Four m is going to be a complex of free modules. So that when you take the associated sheaves of like term by term, um, that is a resolution of M. Tilde. Uh, and in particular, because we started with a complex of free modules, this is going to be a resolution of m in terms of direct sums of line bundles. So if you like thinking on the geometric side more, you can just think of virtual resolutions as being resolutions by direct stem cells bundles. But we're going to do commutative algebra, so we're going to want the free modules. Okay, so then the question that several people have asked already is, do short virtual resolutions always exist? Um, and by short we're going to mean, um, less than or uh, length less than or equal to the dimension of the space.
00:05:56.460 - 00:06:48.702, Speaker A: And I do want to say a little bit about the naming short here is a little bit misleading because they're always going to be the length equal to the dimension of the space, the way that we're constructing them, basically. So in some sense we're trading, uh, how long they are for knowing that they're less than the dimension of X. Like for instance, in the classical case, if you start with a module, like on projector space, um, and you truncate it, this is gonna make your resolution longer in many cases, but it'll make it shorter in the case where you started with something that was, uh, too long, if that makes sense, like it's always gonna end up at dimension of x. So if you start with something that had a shorter resolution, it's gonna get longer, but it's always going to be less than the dimension of x. And we'll see more examples of this in a bit. So, sure is a little bit of a weird thing to say. Uh, but this is what we'd have to call them.
00:06:48.702 - 00:07:20.334, Speaker A: And I also want to say what I mean by length in case you're not, uh, used to working with free resolutions so much. So, um, the convention here is that we are counting the number of maps. So we want our last free modules to be at the dimension of x. It could vanish before this, but this is the last possible spot. So that's dimension of x, many maps, and not dimension of x. Many models, questions so far. Okay.
00:07:20.334 - 00:08:08.544, Speaker A: And we know that the answer to this question is yes on many counts. Many people have proved this. We've heard a lot of names before Hanlon, Hicks and Lazarev, Jesse, um, and uh, David Favreau, uh, Anderson, Brown, Ehrman, and special cases were known before that. Um. However, most of these constructions, uh, are not very easy to compute. So they generally use either derived functors or mirror functors, both of which are not known for their ease of computability, at least for derive functors. Like if you just want to compute an X module or something, you can do that, but we're going to want the actual complex that comes out in the.
00:08:08.544 - 00:08:35.564, Speaker A: Not, uh, not just the homology. And if you want the actual complex, you've got to start computing injective resolutions and stuff like that. And so this is maybe a little bit doable. And I guess this might be doable for some people. But we're going to try to do, to construct these resolutions in a way it's not doable for me. We're going to try to construct these resolutions in a way that I can explain to you in five minutes how to do it. Okay, so that's the goal.
00:08:35.564 - 00:09:15.222, Speaker A: Explicitly describe. And I'm going to stick. People can't see over here, can you? Okay, statistic. Well, that corner is good for you. I think these people may beg to disagree. So I'm going to stick to a particular proof of this. So there's several different constructions floating around of these short virtual resolutions.
00:09:15.222 - 00:10:01.804, Speaker A: Many of them are very related, but I'm just going to stick to one for now. And I'm going to call the functor Phi. So there's some functor that's going to take a module and give a short virtual resolution. And I'm going to use the one from the Hanlon Hicks and Lazarus construction. Ok, so let me say a little bit. Well, actually, first let me motivate this slightly. So why might we think that these resolutions even are describable in a nice way? And Juliet sort of gave the answer before that.
00:10:01.804 - 00:11:47.016, Speaker A: There are some cases where we know how to describe them. So somehow the motivation here for trying to figure out the answer to this question, at least for me, was coming from a theorem that I proved along with Juliet and that Anne Maharze Rafi that she talked about yesterday, that if x is a product of projected spaces, and for ease of stating this, I'm just going to assume that it's a particular product of projective spaces. You can do this generally, but the notation just gets more annoying. So let's say that we have x equals p one, cross p two, which was the example that Juliet did in this case. The total coordinate rang, you have two variables for p one and three variables for p two. And the irrelevant ideal is the intersection of the ideal generated by the x's with the ideal generated by the y's. So this is representing the fact that in, if you want to construct p one, cross p two, your points are going to have five coordinates, or.
00:11:47.016 - 00:12:43.724, Speaker A: Sorry. Yeah, five coordinates. And you need that, both of that at least one of these two is non zero, and that at least one of these three is non zero. So in this setting, we were able to show that under some regularity condition, that's not going to be super relevant here. But if our module is regular at some bi degree cd. So this is graded over z two, where the p one has one grading and the p two has the other grading, then the truncation of m at this by degree. So this is going to be component wise.
00:12:43.724 - 00:14:14.374, Speaker A: So we want to take all the elements in m that have degree greater component wise than cd. Um, sorry, this part's gonna be an if and only f. So this was that, uh, this module has this word that we haven't defined, a quasi linear, um, minimal free resolution. But then the part that we care about here is that this particular resolution is always short. And this is, this short resolution is actually an example of the type of a virtual resolution, um, for the not very intense reason that if you take the module and you mod, by this truncation, this thing, um, vanishes in like high degrees somehow, like in high degrees in both coordinates. And so in particular, if you multiply it by some high power of b, um, the elements of b have degree one, one. And so you're eventually gonna get zero if you do this.
00:14:14.374 - 00:14:50.214, Speaker A: Is this believable? So in particular, oh, in particular, these two modules define the same sheath because I said that if you are annihilated by b, then you define the zero sheets. The difference between these two things is the zero sheath. Um, so this resolution is an example of a short virtual resolution. And so this was kind of motivation for us thinking that maybe we can get short virtual resolutions that are easy to describe. Like, this is a very easy module to construct. You can get a computer to do it. The code runs very fast.
00:14:50.214 - 00:15:56.836, Speaker A: And so this was kind of why, at least I thought that maybe we could get a nice description of virtual resolution for other torque readies. Okay, so this functor here that I was talking about, that comes from this proof. I said it was a type of derived functor. I want to say a tiny bit about how they define it. This uses some machinery. It's sort of a well known construction derived algebraic geometry called a Fourier mukai transform. So, so this is a type of derived functor that's well studied and derived algebraic geometry.
00:15:56.836 - 00:16:46.474, Speaker A: It's like a class of functors, and this is going to be one of them. So what we're going to do is we're going to take our torque variety and take the product of it with itself. There's two projections, um, and sort of the, the genius of this plan is that if you want to get short virtual resolutions for all sheaves on X, it's enough to resolve one sheath on x cross x, namely the sheath of the diagonal. So we're going to have some k here. We can figure out how to write a script k that resolves a diagonal. So the diagonal meaning like X comma x. So the structure sheet of that inside here.
00:16:46.474 - 00:17:27.584, Speaker A: Um, and constructing this thing is the hard part of several of the proofs of the existence of short virtual resolutions. So if you can, if you can get a resolution of the diagonal, then getting the rest of them is just a matter of applying this type of functor. So what you do what I've been calling c here. So I'm going to have Phi take a module just so, because that's what I'm doing. So if you start with a module, really maybe it should take a sheath. But what we're going to do is we're going to pull that module back to the product. So we're going to, sorry, we're going to take its sheath and then pull that back to the product.
00:17:27.584 - 00:18:07.472, Speaker A: Then we're going to tensor that with this resolution of the diagonal. This because the projection is nice and this is a locally free, I guess I didn't say that this is going to have to also be a resolution in terms of line bundles, um, because the projection is nice and this is nice. Both of these are technically derived functors, but we don't have to do anything. We can just pretend that they're not and just do the normal functors. But then we're going to push it forward to the other factor. And now we legitimately need to use a derived factor here. So this is the hard part somehow.
00:18:07.472 - 00:19:27.736, Speaker A: And this gives some complex of sheaves. Um, and that's going to be our, so this thing is going to be the sheepification of our short virtual resolution. So this is going to be f tilde for our m and the like notable observation here is that for sufficiently high d and by this I mean sufficiently ample d. So pick some ample divisor and then take like a high enough power of that of M twisted by D will have the same length as k. I guess it, yeah. So for low d, it might even not be a resolution. It might just be a complex that goes on both sides.
00:19:27.736 - 00:19:58.762, Speaker A: Like it might go have a negative term. But if you pick high NFD, you'll get an actual virtual resolution. And if you get k to be the right length, you can get this one to be the right length too. Yes. So I'm twisting so that it's a legitimate resolution and not a monad, for instance, like, so that it doesn't, we want to have like f zero, f one and so on. Yeah. So the output exists regardless.
00:19:58.762 - 00:20:35.268, Speaker A: Um, but like we don't want an f negative one and we also want it to be the right length. But you can get an output regardless. Yeah, yeah. And you can kind of understand what the formalism might be without knowing too much. Like if you just think about, forget any of the derived stuff and think that you're starting with some uh, some like sub variety here, and you pull it back and you restrict to the diagonal and then you push it forward, you get the same thing back. Right. That's kind of the intuition behind why this get.
00:20:35.268 - 00:21:05.324, Speaker A: Yeah. So maybe I should say that here too. So this will be a virtual resolution of M and we'll have the same lengths. Okay, thank you. But somehow the fact that it gives a virtual resolution of M just comes straight out of the machinery. Like the new part is that you can get it to be short. Other question.
00:21:05.324 - 00:21:24.654, Speaker A: Yeah. Oh yeah, yeah. Thank you. But you can get that, you can just twist it back down. Yeah. No, generally you have to twist sample. Yeah.
00:21:24.654 - 00:22:07.554, Speaker A: Okay. Oh yeah. So that's what the, one of the things that the twist is doing. Yeah. Like why is it still locally free? Yeah, I guess so that comes from the projection formula. Like after we tensor with M, it's not locally free anymore upstairs. But then the projection formula says that it will be.
00:22:07.554 - 00:23:04.414, Speaker A: Okay. So my work here has been in actually describing what comes out of this, in the specific case of putting the ring into the functor. So this might seem a little bit silly, because if I asked you to give me a short virtual resolution of s, you could probably do that. You just give me s back. Right. It has a very nice short virtual resolution. And this is the sense in which we're training short for like exactly the dimension length.
00:23:04.414 - 00:23:42.322, Speaker A: So we're going to get a longer thing out of this. But the idea is that we can start with these ones and then build the other modules out of this. So, and I can just describe how you get this in a particular example. So this is like the standard example that Jesse had. And I'm going to get similar pictures to her for reasons that might not be totally clear. So I'm going to start with the Hertzberg surface two, this is a particular p one bundle over p one. Here the coordinate ring has four variables.
00:23:42.322 - 00:24:17.090, Speaker A: The irrelevant id all looks like that. So you can kind of see that this is like a twisted version of p one cross p one. Like it has the same irrelevant ideal. Um, and it's z two graded. So this is nonstandard graded. The degree of x and the degree of z are going to be 10. The degree of w is zero one, and the degree of y is a negative two one.
00:24:17.090 - 00:24:56.074, Speaker A: So this is the two. And that's like, this is sort of like the divisor that's telling you how the bundle works. Okay. And so I'm going to show you how to construct a particular form of chi transform, hopefully in a understandable way. Like, I think this construction is pretty easily computable and I have code to compute it as well. So I'm going to do, I guess I should put the actual d. I'm going to do Phi of s twisted by one one.
00:24:56.074 - 00:25:31.188, Speaker A: Okay, so what we're going to do is we're going to take, let me just make sure I get my, we're going to start with the monomials of degree one one in this ring. So this is a nonstandard graded ring. So it's not immediately obvious which monomials have degree one one. But if you're familiar with torque varieties, those monomials fit into a polytope. So I'm going to draw them in a suggestive shape. Okay. So these are all of them.
00:25:31.188 - 00:25:59.852, Speaker A: And they fit into a polytope like this. You might be able to see, even if you're not familiar with this, how you might arrange them, like this, um, based. Oh, I guess I should give you the fan of this torque. Ready? So if you think about the fan of this torque variety, it looks like this. And you might be able to see that. Like to go this way and this way, we're multiplying by monomials coming from the columns of the ray matrix, something like that. Okay.
00:25:59.852 - 00:26:38.954, Speaker A: But what I'm going to do is I'm going to start with this polytope. It's a trapezoid. And the walls of this trapezoid are normal to the vectors in this fan, and that's not a coincidence. And so what I'm going to do is I'm going to translate all of those hyperplanes into my polytope wherever they hit lattice points. So like this one, this vertical one, I'm also going to put one here and I'm going to put one here. And then this one is not going to be both for this hyperplane. I'm gonna, I already have all of them because there's no other horizontal lines between lattice points.
00:26:38.954 - 00:27:11.792, Speaker A: And then this diagonal line, there's gonna be a few more. So there's one that goes here and there's one that goes here. Does it make sense what I did? Okay, so we got three new points here and we're gonna label these as if they were in this picture, like, okay, to go from here to here, we added two z's and got rid of a w. So to get here, we're going to add a z and get rid of half a w. And then we're going to take the ceilings. So this is going to be y. Oh, sorry.
00:27:11.792 - 00:27:57.940, Speaker A: We added a y and two z's and got rid of a w. So we're going to add the whole y, add only one z and keep the wire. So this is like the ceiling of what it would be if I did the fractional version does that. Okay, and then label these other ones as well. And then the output that we want is going to be a complex that you get from this using the type of thing that Jesse just described. So we're going to get three terms like this that come from the vertices, the edges and the faces of this little picture here. And that's what comes out for this.
00:27:57.940 - 00:28:38.076, Speaker A: And again, this is not a very useful short virtual resolution, but you can build the resolutions of other modules from this one. And in particular, you can use this to see that the output of C is not always a resolution. So so far, all of our virtual resolutions have just been resolution like on its resolutions of different modules. But you can actually use this to construct a module so that, um, so a corollary of this is that phi of m is not always exact. Um, and that was a surprise to me. And something, I was excited. I was excited to find a virtual resolution that was legitimately virtual and not just a resolution of a different module.
00:28:38.076 - 00:28:38.964, Speaker A: And I will stop there.
