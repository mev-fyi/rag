00:00:00.360 - 00:01:18.504, Speaker A: I'd like to talk about the I'd like to describe the characterization of the rank function of the C twelve cofactor metroid, which is a recent result with Katie Clinch and Shinichi Tanigawa. So it sounds a bit far removed from rigidity. But as I mentioned yesterday, it's conjectured that the C twelve cofactor metroid is is the same as the generic three dimensional rigidity matrix. So any information that we have about the cofactor matriarch gives us insight into the rigidity metro. So to start off with I'll do my oh, sorry, this is my standards slide of metroid definition. So metroid is a consists of a pair which is a ground set, and family of independent sets which satisfy these three axioms. Sets which are not independent are called dependent.
00:01:18.504 - 00:02:15.486, Speaker A: A circuit is a minimal dependency. A base of a subset of the ground set is a maximal independent subset of that set. The rank of a subset of the ground set is the size of a maximal independent subset, and the closure of a subset is what we get by adding all elements from the ground set to the set set, which do not increase its rank. So one new definition is the idea of a spanning set in a metroid. So this is an extension of the idea of a base. So a set is spanning if it has a subset of the ground set is spanning if it has the same rank as the entire grand set. So it's saying it another way.
00:02:15.486 - 00:03:11.144, Speaker A: I said it's spanning if its closure is equal to the ground set, and the base is a subset which is both spanning and independent. So I'd also like to remind you of the order that we have for families of metroids, which is the same ground set. So we say two metroids, m one and m two. On the ground set, we have m one less than or equal to m two if every independent set in m one is independent in m two. Here's a new piece of terminology. Well, it's two pieces of terminology, one of which is a bit unfortunate. So the truncation of a metroid, it's a simple idea.
00:03:11.144 - 00:04:21.240, Speaker A: So we have a metroid m one of rank k, and we construct from it a new metroid of rank k minus one by deciding that all of the independent sets of size k in m one are dependent in m zero. So we strip away all of the bases of m one and just leave the smaller independent cells. So the unfortunate terminology is not Duke of May, it's due to Henry Crevo. So in 1970, he defined a metroid erection as the inverse operation to a truncation. So m one is an erection of m zero, if m zero is the truncation of m one. And for technical reasons, we also want to have the idea of a trivial erection. So, a trivial erection is the metroid.
00:04:21.240 - 00:05:08.072, Speaker A: We consider the metroid m zero to be a trivial erection of itself. And erections are more complicated than truncations. So every matrix has a unique truncation. But metroids could have several, or maybe no non trivial erections. So we'll see some more about this in a second. So, Henry considered, given metroid m zero, he considered all of its erections. And so the erection of a metroid will have the same ground set as the original metroid.
00:05:08.072 - 00:05:53.298, Speaker A: So the set of all erections, they'll all have the same ground site. So this will form a four set under the weak order. And so Henry showed that it's actually, it's a well structured corset, it's actually a lattice. And in particular, the trivial erection, the metroid m zero itself, is the unique minimal element in this forset. And more surprisingly, he showed that there is also a unique maximal element. And he called this maximal element the free direction. So the idea is that the free erection only has the minimum.
00:05:53.298 - 00:06:44.354, Speaker A: So some of the dependencies in the free erection are forced by the original metroid, and some of the dependencies in any erection are forced by the original metroid. And in the pre erection, we only take the dependencies which we have to. So Henry applied this in order to enumerate metroids. So he started off with the metroid which has rank zero for everything. Everything is dependent. And then if you successively construct erections, you construct all metroids of rank one and all metroids at rank two and all metroids at rank three. And Handy gave an algorithm for constructing these erections.
00:06:44.354 - 00:07:27.394, Speaker A: So our interests are a bit different. So the idea, our idea is that we have a complicated metroid that we don't understand. So we truncate it down to a level that we do understand. So we truncate into very low rank, and then we reconstruct it by taking erections. And actually we will take pre erections. And so incrementally, the metroid gets more complicated. And we hope that we can understand what happens with each incremental erection.
00:07:27.394 - 00:08:26.414, Speaker A: So here's an artistic impression of what's going on with truncations and erections. So it's, the idea is that we have our original metroid, m zero, which is on the left hand side, and an erection, m one. So this means that m zero is a truchen of m one. M one is an erection of m one. And let's say that the rank of m zero is k minus one, and the rank of m, oh sorry, this should be a one. So the rank of m one is k. And so what I'm trying to show is that we only have to worry about certain sets, certain subsets of the grants.
00:08:26.414 - 00:09:49.770, Speaker A: And so I'd like to concentrate on subsets which are either independent or are circuits. And amongst the circuits I'll have non spanning circuits and spanning circuits, and for the other subsets which are all dependent, but they're not circuits, I'm calling, giving them the technical term jump. So, to understand what's going on, let's start off with truncation. So we'll imagine we start with m one and truncate from rank k to rank k minus one. So we'll move from right to left. So when we do this, and what I'd like to do is I'd like to partition the subsets of the ground set into rows of size less than or equal to k minus one, rows of size k, rows of size k plus one, and then everything above this is Jung, and I'm not going to worry about it. So for the sets, the small sets, the sets of size k minus one, when I, when I make sets of size k dependent in doing the truncation, nothing is going to change for sets of size k minus one.
00:09:49.770 - 00:10:27.194, Speaker A: So the independent sets are going to stay independent and the circuits are going to stay circuits. So something interesting happens in the next level. So for sets of size care, well, we've either got BC's or circuits key elements, and if I suddenly decide that there are no independent sets of size here, then the bases are going to turn into spanning circuits. So they're going to be circuits of rank k minus one.
00:10:29.334 - 00:10:34.678, Speaker B: Sorry, Bill, is that exactly what spanning means, that they're of top rank? Can you remind me?
00:10:34.846 - 00:11:27.584, Speaker A: Yeah, so spanning a subset of a metroid is spanning if it has the same rank as the whole matrix. Excellent. And so circuits of size k which are not spanning because they've got rank k minus one and m one has rank k, they will become spanning circuits in the truncated metroid because the rank has gone down to k minus one. They have size k, but they have rank k minus one, and jungle stays junk. The only other thing that changes is that I'm picking out the circuits, so m one will have some spanning circuits. So these will be circuits of size k plus one. Rank k.
00:11:27.584 - 00:12:16.014, Speaker A: And when I do the truncation, they'll turn into junk. There won't be circuits anymore. There can't be circuits because m zero only has rank k minus one. Okay, so now let's try and go the other way around. So now I imagine I don't know what m one is and I want, I have m zero and I'd like to construct an erection of m zero. So the first thing I notice is that nothing will change with the sets of size less than or equal to k minus one. So when I construct the erection, independent sets of size less than or equal to k minus one will stay independent circuits will stay as circuits, and junk will stay as junk.
00:12:16.014 - 00:13:16.730, Speaker A: Something interesting happens with the spanning circuits, m zero. So the spanning circuits will be partitioned into two classes. The sum of the spanning circuits will become bases of m one, and other spanning circuits would become non spanning circuits of m one. And finally, some of the junk. So once I've decided, once I, once I've done this, I've decided what all the independent sets are. So the metroid is fixed once I've decided this partition, and that decision will force some of the junk to become spanning circuits, and the spanning circuits will be the dependent sets which don't contain any of the smaller circuits. So my choice of the circuits here will tell me what the spanning circuits are.
00:13:16.730 - 00:13:41.766, Speaker A: Ok, that's not so important when I'm taking one erection, but I'm going to end up taking sequences of erections. So at the next level, when I construct m two, I'm going to take a partition of b spanning circuits into bsas circuits of m two. Ok, so a question.
00:13:41.910 - 00:13:55.654, Speaker B: Are there constraints on how you choose to make the spanning circuits into bases? Do you have a free hand about which ones you choose to make bases and which are circuits?
00:13:55.814 - 00:14:39.814, Speaker A: It's not completely free. So in fact, that's a good question. It was what I was going to say. Now, so we're not completely afraid in which spanning circuits should become bersets and which spanning circuits should become circuits, because the metroid circuit axioms. But I haven't told you what these are, but we can define a metroid in terms of its circuits as well as its independent sets. So the metroid circuit axioms applied to these circuits may well imply that some of the sets of size k must be spanning circuits. So the circuit axioms applied to these circuits may give us some larger circuits.
00:14:39.814 - 00:16:03.114, Speaker A: And because these circuits, their circuits in the erection, they will still imply that some of these spanning circuits must become circuits. So we're forced, we don't have a free choice. The fact that these are circuits will force some of the sets of size k to these circuits. And so the free erection which Henry showed was the maximal element in the pore set of all erections we get by only choosing the spanning circuits which are forced by the smaller circuits as to remain as circuits in the erection. So we choose the minimum number of circuits that we have to a size k, minimum set of circuits that we have to a size k, and then we make everything else independent. So this is what pre erection is, the pre erection we get by choosing the set of circuits of m one a size here the set of all spanning circuits of m zero, which are implied by non spanning circuits of m zero.
00:16:08.974 - 00:16:16.314, Speaker C: So I just want to know. But there need not be a spanning circuit. What do you do then?
00:16:20.174 - 00:17:25.303, Speaker A: So if there's no spanning circuit, then I guess there is no erection. There's no non trivial erection. So that was the next slide. So it's a special case of the next observation that if the circuits of size k minus one imply all of the spanning circuits of m zero, in particular, if m zero has no spanning circuits, then no, sorry, that's the wrong way around. I'll go back to your question in a second. If the spanning circuit, if the circuits of size less than or equal to k minus one imply all of the spanning circuits all size kick, then we're not free to make any BSA. So everything must remain as circuits.
00:17:25.303 - 00:17:49.844, Speaker A: And that means that we cannot construct a non trivial erecheck. We cannot construct a metroid m one which has rank one bigger than m zero which truncates to m zero. Does that answer your question?
00:17:54.384 - 00:18:02.204, Speaker C: Yeah, and it's trivial. But I just wanted to point out that the spanning circuits need not exist.
00:18:02.784 - 00:18:09.444, Speaker A: Yes, yes. So if the spanning circuits don't exist, then we cannot construct the non trivial erection.
00:18:10.824 - 00:18:22.084, Speaker C: But usually one does the truncation just on the circuits in all the circuits that get truncated become circuits in the smaller matrix.
00:18:23.224 - 00:18:26.364, Speaker A: Well, I think it truncated in the independent sets, Brigadier.
00:18:27.344 - 00:18:36.586, Speaker C: Right, right. But it's the same thing. So if you take it just to be on the circuits of the matriid, the circuits define the matriidal.
00:18:36.720 - 00:18:51.914, Speaker A: Yeah, but if you don't have any spanning circuits, then, then when you truncate, nothing will change. If you don't have any spanning circuits, then, then the circuits won't change when you truncate.
00:18:54.014 - 00:19:09.414, Speaker C: Right, but the. So, but, okay, so, but your ground set doesn't change. Right? So that's the problem.
00:19:14.594 - 00:20:01.468, Speaker A: So are there any more questions? Okay, so I'll move on. So, as I mentioned on the previous slide, the game we're going to play is we're going to take sequences of erections. And I'd really like to get away from this erection terminology. So I'm going to define a sequence of erections as an elevation. So I'm going to say a partial elevation of a fixed metroid. M zero is any metroid that I can get by taking a sequence of erections. And a full elevation is a matriarch that I can get by taking, in some sense, a maximal sequence of erections.
00:20:01.468 - 00:20:49.004, Speaker A: So I keep of non trivial erections. So I keep on taking non trivial erections until I arrive at a metroid which has no non trivial erection. And this gives me a full elevation. And since I have the idea of a frail aversion. Sorry, the idea of free elevation is what I get by taking a sequence of non trivial free erections, until again, I arrive at a metroid which has no non trivial erection. I can't make it any bigger in some sense. So now, instead of this gives us a much bigger set of metroids on the same ground set.
00:20:49.004 - 00:21:52.784, Speaker A: And again, it will be a pore set under the weak order and m zero, the original metroid, will be its unique minimal element. And because the operation of constructing an erection gives us a non trivial erection, gives us a metroid which is strictly bigger than the metroid that we started with, every maximum element in this core set will have no non trivial erection. So it will be a full elevation. But the converse is not true. There may be full elevations which are not maximal elements. So given Crabl as a result, that the pore set of all erections. So this is just kind of one level of this bigger porset is a lattice.
00:21:52.784 - 00:22:38.924, Speaker A: It's tempting to conjecture that the larger pore set will also be a lattice. It has a minimal element, a unique minimal element, and that we'll get this unique maximum element by taking a sequence of free erections. So the free elevation of m zero, we would like, in an ideal world, to be the unique maximum element. In this course, life is more complicated than this. In some sense. This is good news, because it means that the topic is much more interesting. So Bilaski showed that, that this pore set is not a lattice, and it can have several maximal elements.
00:22:38.924 - 00:23:41.484, Speaker A: Burlesque gave an example in 1986. So what can we say about the crayola version? So one thing we can say that maybe the pre elevation is not the unique maximal element. But we can say that it is a maximal element. But just to give you some feeling for this topic, I'd like to prove this. So m zero is our given matrid, and we're looking at the pore set of everything that we can get by checking sequences with directions, and m is what we get by taking the longest sequence of free directions. Then I'd like to show that m is a maximum element in this for set. So the idea is to choose an arbitrary metroid in the for set.
00:23:41.484 - 00:24:36.974, Speaker A: So an arbitrary metroid which is a partial elevation of m zero. And I'd like to show that m dashed is not bigger than n. So if this falls for an arbitrary element in the for set, and it tells me that m is maximal, it might not be the unique maximum element, but it is a maximum element. So we choose, because m dashed and m are both elevations, partial elevations of m zero. I can construct m zero from m by a sequence of truncations. And similarly, M dash is a partial elevation of m zero. So if I take a sequence of truncations from n, I get back down to m zero again.
00:24:36.974 - 00:25:40.114, Speaker A: Now let's turn, turn things around and think of this sequence as sequences of erections. So both sequences of erections start at the matrix, at the metroid n zero. So the sequence is going to stay the same for a while up to the I th metroid, and then it's going to diverge. It's going to diverge because, well, without loss of generality, I show that M is different to M dash. So I is the place that diverges. So I have Mi is equal to Mi dashed, and Mi plus one is not equal to mi plus one dashed. And then we observe that Mi plus one and Mi plus one dashed are both erections of mi, and Mi plus one is the free erection of Mi.
00:25:40.114 - 00:27:25.014, Speaker A: So then we can apply KrepuA's result that locally we have a lattice, and it will tell us that the pre erection is strictly greater than this other erection. And now if we think about what this means for the post, for the definition of the wig order, this means that there is some subset of the ground set which is dependent in the smaller metroid and independent in the larger metroid. That's what this less than means. But now, if we think about what we said about truncations and erections, this set f must be a spanning circuit of the previous metroid, the mi. This is the one that we take the erections of. And when we take the free erection, when we take the free erection, this spanning circuit becomes a base in the free direction, but it's this dependent, actually becomes a non spanning circuit in the non free direction. But then if you remember, for in the previous slide, so now we take other erections in order to get Ms, Dash and Mt.
00:27:25.014 - 00:28:40.590, Speaker A: But if you remember what for the small sets, the sets which have size much smaller than the rank, nothing changes. So the fact that f is independent in mi plus one will tell us that f is independent is always independent in the sequence of erections after that. And because f is dependent in mi plus one dash, it was still dependent in the sequence of erections, the dashed metroids. So now, because f is dependent in MS and independent in Mt, m, m s dashed is not bigger than Mt and MS is our original metroid, m and m is our free elevation. So the prial aversion is air maximal. However. So what does this tell us? So this is being a bit of abstract metroid theory.
00:28:40.590 - 00:29:45.854, Speaker A: So I'd like to keep touching the cofactor metroid. So here's the result that we've just proved. So in a major corollary, using the result that we proved yesterday. So yesterday we saw that the core factor metride is the unique maximal abstract rigidity metroid. So this lemma will tell us that the cofactor metroid is the free elevation of a particular metroid, n zero. So it's going to give us a way of constructing the cofactor metroid on a large complate graph from a particular metroid, m zero. And this metroid m zero is what we get by truncating the cofactor metroid all the way down until it has rank ten.
00:29:45.854 - 00:30:39.522, Speaker A: So when it has rank ten. So in the cofactor metroid, the smallest circuit is k five. So when we, when we truncate down to rank ten, we have a rank ten metroid whose only non spanning circuits are the copies of k five. And this is a metroid, which is readily understandable. So why does that follow? Well, follow us. I'm going to cheat a little bit. So we saw yesterday that the core factor metroid was the unique maximal abstract rigidity metroid.
00:30:39.522 - 00:31:25.358, Speaker A: So it's the unique metroid in the poor set of all abstract rigidity metroids on the edge set of gang. And now we actually, we prove something a bit stronger. So we can show that this, we actually show that it's the unique maximum element in the pore set of all partial elevations of n m zero. So we truncate it all the way down to rank ten. And then we consider all the elevations, the partial elevations that we can get from the truncation. And the same result tells us that it's maximal. The same protecting tells us that it's maximum.
00:31:25.358 - 00:32:15.324, Speaker A: In this larger force, there is not so much difference between the porsets. So I guess you won't remember, but Unguyen showed that a metroid is an abstract, I guess three rigidity metroids. Three missed out here. If and only if, every copy of k five is a circuit and the rank of the metroid is given by the maximum bound. So the rank of the net, right, should be three, n minus six. So in our partial elevate elevations of NZ law, it's still true that every copy of k five is a circuit. But we allow the rank to be smaller than three, n minus six.
00:32:15.324 - 00:32:38.944, Speaker A: So it's a slightly bigger set. Slightly bigger. Poor set. I've lost my truck now. Sorry. Tell me. So the same result gives, tells us that the cofactor metroid is maximal in this larger force.
00:32:38.944 - 00:33:51.304, Speaker A: But now this lemma tells us the free elevation is a maximal element. In this forsyth, it might not be the unique maximum element, but it is a maximum element. But if we know that the cofactor mercroid is the unique maximal element, then it must be equal to the free elevation, because the free elevation is a maximal element and there's only one of them. So this gives us a way of iteratively constructing the cofactor metroid from this small metroid by taking free elevation. Free erection. So the second thing I'd like to tell you, second general observation from Metroid there, right, is how to get a bound. What I'd like to do is I'd like to get a bound on the set of all partial elevations of this, our metroid m zero.
00:33:51.304 - 00:34:45.764, Speaker A: So here is a couple of general observations about an arbitrary metroid. So this is just the rank function in an arbitrary metroid. And there's going to be no elevations, no erections. We just have a metroid. And we say a sequence of circuits in the metroid is proper if no circuit in the sequence is contained in the union of its predecessors. And now an elementary observation is that if we have a proper sequence of circuits, then the rank of the proper sequence is at most the size of the union of the circuits minus the number of circuits. And this is an easy induction on the number of circuits.
00:34:45.764 - 00:36:02.154, Speaker A: So if we just have one circuit, then it's well known that the rank of the circuit is the size of the circuit, minus one. It's a minimal dependency. So now for the inductive step, we'll suppose we have at least two circuits, and we notice that the rank of the union of the circuits is most the rank of the union of the first n minus one circuits plus the rank of the set of elements in the last circuit which don't belong to its previous assets. So this is just follows from the submodularity of the rank function. So now we can hit the first term with induction and we get this bound. And now the fact that the sequence is proper tells us that this set is non empty, and it readily gives us this what we need. So this is the first elementary lemma, the second elementary lemma about rank in a matroid.
00:36:02.154 - 00:37:25.874, Speaker A: So this is a repetition of what we just proved is that I can bound the rank function of an arbitrary set in a metroid by stripping away some subset and bounding that by the size of the subset, and then bounding the rank of what's left by a proper, by a cover of what's left with a proper sequence of circuits. So what's left is f minus s zero. And again, this just follows from submodularity. So by submit the rank of f is at most the rank of f zero plus the rank of f minus f zero, and I can bound the rank of f zero by the size of f zero, and I can bound the rank of f minus f zero by this. So the f minus f zero is contained in this union because the union covers f minus. So now let's apply that to partial, elevate to the poor set of partial elevations. So here's the result that we've just proved.
00:37:25.874 - 00:38:57.624, Speaker A: And now the observation is that. So now we have our fixed metroid of low rank n zero, and then we have a partial elevation we construct by taking a sequence of directions. And I chose some subset of the ground set and I'd like to bound the rank of this subset in the elevation using circuits in the lower rank matrix. So the idea is that I understand m zero very well, but I don't really understand n. So the bound that we get is almost the same as this bound. But instead of using an arbitrary set of circuits in n, we use a a proper sequence, sorry, instead of using a proper sequence of circuits of n, we use a proper sequence of non spanning circuits of m zero, which cover f minus f zero. And this follows immediately from the coronary, because we've already observed that every non spanning circuit of m zero remains as a circuit in all the erections.
00:38:57.624 - 00:39:29.464, Speaker A: So so these non spanning circuits of m zero, c one, c two, c m are circuits in every elevation, every partial elevation of m zero. And so we can use them to bound rank the rank in any partial other version. It's very quiet out there.
00:39:31.524 - 00:39:32.864, Speaker B: This is very nice.
00:39:33.324 - 00:40:12.174, Speaker A: Oh, okay. Thank you. So now I'd like to try to say something about the rank function of the free elevation of a nerd drive. So we have our metroid m zero, and I'm going to define. So for any subset of the ground set, I'm going to define a function. I'm going to associate a non negative integer. So I'm going to have some function rho which marks the set of all subsets to the non negative integers.
00:40:12.174 - 00:41:21.784, Speaker A: And I'm going to use the bound from the previous slide. So for any subset of the ground set, I take the minimum overall subsets of air, and then I take all proper sequences of non spanning circuits of m zero which cover air, sorry, which cover f minus f zero. And now we've seen that the quantity on, on the right hand side gives us an overbound on the rank function of any partial elevation. So in particular it gives us an upper bound on the rank in the pre elevation. So now let's suppose that, that by some lucky coincidence, this function rho happens to be submodular. Well, if it's submodular, then it will induce a metroid. And it's not difficult to say that this metroid will be an elevation of m zero.
00:41:21.784 - 00:43:26.954, Speaker A: It will truncate down to m zero. But this function is an upper bound on the rank of all elevations. So if rho is submodular, then it must be the rank function of the unique maximal elevation of m zero. And because we know that the free elevation is always a maximum elevation, we know the free elevation is always maximal in the poor set of all elevations. Then it must be the free elevation. So if this function turns out to be so modular, then the free elevation is the unique maximum element in the four set of all partial elevations, and its rank function is this. So the obvious question is when is this function submodular? And I think this is a very interesting general question, and metroid there for our application to the cofactor metroid or for abstract rigidity inertroids, I guess if we can show that this function rho is submodular in the particular case when m zero is the, how should I say, it's the truncation of the, let's say the d dimensional rigidity metroid down to the rank down to when its rank is equal to the size of its smaller circuit.
00:43:26.954 - 00:45:19.484, Speaker A: So the smallest circuit in an abstract d rigidity metroid is kir d plus two. So if we take m zero to be the rank d plus two macroid on the edge set of a large complaint graph in which all the non spanning circuits are the copies of. So then if it turns out that for this particular case roar is submodular, then it will verify the first part of Grover's conjecture that there is a unique maximal abstract a rigidity metroid, and it will tell us that this unique maximal abstract de rigidity merge is the free elevation of this metroid m zero. So it's not hard to verify that for the ks, when we know what the rank function of the rigidity metroid is, when t is equal to one and two, then this expression gives an alternative expression for the rank function of, of the one dimensional rigidity metroid cycle meteorite of the graph, and also the two dimensional rigidity metroid generic rigidity. So the answer to this question is yes, when tail. And what we're sure is we're sure that it's also true when d is equal to three. But we do that by showing that this function is the rank function of the cofactor neutron, and then because it's the rank function of a metroid, it has to be submodular.
00:45:19.484 - 00:45:44.914, Speaker A: But at least this gives a glimmer that there may be a general proof, a proof of Grover's conjecture for arbitrary data, if we ensure that this is submodular for this particular, when we take mzero to be this particular macro for arbitrary data.
00:45:47.094 - 00:46:11.714, Speaker B: Bill, can I ask a little bit about Berlinski's earlier counter example to there being a unique maximal element in the post set of extension? Because it seems like that should give an example where this row function is not submodular if it's in the same setup.
00:46:12.214 - 00:46:55.474, Speaker A: Yes, exactly. So for Prolosky's example, this function is not submodular. So thanks for pointing that out. So let's, that's all I want to say about general matrix theory. So what I'd like to do is just finish off with giving some implications for the cofactor metroid. So I'd like to state our theorem for the core factor metroid without reference to. So this is easy.
00:46:55.474 - 00:48:20.344, Speaker A: So all we need is the circuits of, just need the fact that k five is the set of minimal circuits in the core factor, electron, the smallest circuits in the core factor. So instead of talking about a proper sequence of circuits, we'll talk about a proper sequence of k five s. So in the complete graph on n vertices, a proper sequence of k five s is just a sequence of k five, so that no care five is contained in the union of its predecessors. And then our theorem for the rank function of the cofactor metroid is that the rank is determined by this, by proper Pfizer sequence. So we have our set f, we strip away our subset f zero, and then we cover everything that's left with the property of I sequence. So this gives, so here's an example which shows that it gives a good characterization of dependence in the korfactor matrix. So I'd like to show you that this graph j is dependent.
00:48:20.344 - 00:49:21.974, Speaker A: So it's, so for the Conescendi, this is a well known circuit in the rigidity network, and I've embellished it by adding, doing a zero extension. So if I've added a vertex and we're going tray. So to convince you to use our theorem to show that this is dependent, we strip away the redundant, the actual strip away the edges, e one, e two, e three. So we put them in f zero, and then we use the obvious k five sequence, which covers everything else. So if you, if you kind of squint your eyes a bit, you'll see seven k five s joined up in a cycle with some missing edges. But, but the kfis do not have to be subgraphs of j. We're allowed to use any kfis contained in the complaint graph.
00:49:21.974 - 00:49:55.554, Speaker A: And then if we work out our bounds, so f zero is tray, and we work out the number of edges in the union of the k five s, which the number of edges in here, and we subtract the number of k five s, which is seven, and we end up with 59, which is less than 60, which is the total number of edges. So because its rank is less than its size, this is a dependent set in the core factory network.
00:49:56.734 - 00:50:04.412, Speaker B: Im sorry, bill, can you say again what exactly k 15 is? I'm getting confused.
00:50:04.468 - 00:50:10.304, Speaker A: Oh, sorry. So I have seven copies of the complete graph on five vertices.
00:50:11.804 - 00:50:16.824, Speaker B: My problem is that I'm not seeing any copies of k five on.
00:50:17.804 - 00:50:35.810, Speaker A: No, but the k five s do not have to belong, they're not subgraphs of j. So I'm allowed to use any kfis in the complete graph, complete graph on the vertex ed of j. I see.
00:50:35.922 - 00:50:53.158, Speaker B: Those k 15s actually missing edge has this edge included. I'm concerned to make sure that when I count the cardinality of the union of the k five s, that I'm including that missing edge?
00:50:53.306 - 00:50:55.302, Speaker A: Yes, you're including the missing edge.
00:50:55.478 - 00:50:56.834, Speaker B: Okay, got it, thanks.
00:51:00.014 - 00:51:05.354, Speaker A: So. So when, when I take the union, I count these six edges.
00:51:06.254 - 00:51:08.022, Speaker D: So, Bill, can I ask question?
00:51:08.198 - 00:51:08.550, Speaker A: Yeah.
00:51:08.582 - 00:51:32.024, Speaker D: So does the k five. So your first k five there, can it only have one missing edge? I mean, the k five s are meant to be circuits here, right? Or can you choose any k five? You say any k five in the, in the spanning, like any k five in the, in the complete graph on the vertex set? Or does it have to be just a. You know, does it have to be just missing one edge in the graph?
00:51:32.324 - 00:51:57.324, Speaker A: No, no, it can be any k five in the complete graph. So, so what I. So the rank function is minimizing over all proper sequences of k five s. And I can take any k five and k n. So what I'm showing you here is a particular proper sequence of k five s, which happens to minimize, if I can decide it.
00:51:57.984 - 00:51:59.528, Speaker B: So the k five s aren't really.
00:51:59.576 - 00:53:01.704, Speaker A: K five s, they're just five vertex sets, is that right? Yeah, if you want to think of them like that, Bob. I prefer to think of it. Is everything taking place inside the complete graph on how many, you know, this large complete graph, and f is some subset of the edges of the complete graph, and I'm bounding it with, with these small circuits of the rigidity metroid. So I'm covering it with k five s, which I'm thinking of as circuits of the rigidity metroid. So, so I appreciate that this is different than the lower vast yemeni idea. And in fact, we have an alternative expression for the rank function, which is closer to loewars Yemeni, where we will be covering with sets of vertices. So maybe you will like that one better.
00:53:01.704 - 00:54:25.994, Speaker A: I'd just like to say that as far as we know, this is a completely new kind of rank function for a metroid. So I think it will be interesting to investigate, and in particular, we have no idea how to calculate this rank function, efficient, like polynomial time. So if we know what the certificate is, it gives us a polynomial certificate for dependence, but we don't know how to find such a certificate. So I'd like to go on to consider. So this leads on from Bob's question. So rather than covering with minimal circuits, which are kfis, I'd like to consider covers with subsets of the vertex set. So this is, as I said, this is closer to Loewa's yemeni kind of expression for the rank function.
00:54:25.994 - 00:56:14.874, Speaker A: So I imagine I have, I guess I've got my large complete graph again. And now I have a family of subsets, and I'd like all my subsets to be non trivial in the sense I'd like them to have at least what size? At least five. And now I'm going to define a hinge of this family of subsets to be any pair of vertices which belong to at least two subsets. And I'm going to let h of x be the set of all hinges in this family. And for any particular hinge, the degree of a hinge is just the number of subsets which contain that hinge. So these such covers of such families were considered by dress a long time ago in order to try to extend the lorvas gemini formula for the rank function in the toe dimension. So in particular, he looked at a family of subsets to be too thin, if any two subsets, if any two sets intersecting at most two elements, and that you find the value of this family of subsets to be what we get by summing the Maxwell bound on the Maxwell upper bound on the maximum number of independent edges induced by that, so to say.
00:56:14.874 - 00:57:23.144, Speaker A: But then there's a kind of forge factor which takes away these, the sum of the degrees of the hinges. And dress conjectured that if we minimize this overall covers over the age set of the graph, then we get the rank function of the three dimensional rigidity matrix. So in I think, 2006, Thibault, Jordan and myself showed that this was false. And the problem is that if you consider all too thin covers, or a family of all too thin covers is too wide. So we can have, in an arbitrary tooth thin cover, we can have lots of hinges, and we can have so many inches that the second term of the expression of the value is bigger than the first term. So some covers have negative value. And so if we minimize, we're going to end up with negative rank, and that's not good news.
00:57:23.144 - 00:58:44.214, Speaker A: So what we have to do is we have to restrict the kind of covers that we allow. And the idea is to look at a new concept which is not completely new. So it's the idea of a keir shallow cover, and it should recall the idea of a proper sequence of circuits. So this family of subsets is keir shallow if we can order the sets in the family in such a way that any set has at most clear vertices in common with its predecessors. Now, so I said this concept is new, but it's not completely new. So it's a special case of the idea of an iterated cover, which Tabor and myself came up with to try to give an expression for the three dimensional rank function. The rigidity may try, and it's also closely related to the idea of a generalized partial care tray, which Chen and Meyera used to get an upper bound on the rank function of three dimensional rigidity.
00:58:50.434 - 00:59:24.274, Speaker B: Could I just make a comment about shell ability? So this terminology overlaps closely with some terminology for commutative algebra, where we say that a certain simplicial complex is shall able if there's some construction like a certain kind of iterated construction. I'm curious about the relationships.
00:59:24.614 - 01:00:52.494, Speaker A: Yeah, so the concepts are. So this is intentional, maybe. It would seem it's even closer after the next slide. So our second expression for the rank function of the cofactor metride is it's again, we minimize, we strip away some set of edges which are actually core loops in some sense, and then we bound the remaining edges by a five shallow cover. So by the value of the five shellable cover, and we can give an interpretation of what the covers are that minimize the right hand side. So the way you get a cover which minimizes the right hand side is you take the closure. So for any particular set of edges f, you take the closure of f, and then you look at the maximal complete graphs in this closure, and you take the vertex sets of these maximal complete graphs to be your family of sets x.
01:00:52.494 - 01:02:25.334, Speaker A: And we can show that such a cover is five shallow, and we can ask your shorts, it's too thin. And then the set f zero is just the remaining edges. So it's all the edges in f which do not belong to a clique of size, at least five in the closure. So this expression for the rank function is. It's a special case of a less pretty expression, for it was conjectured to be the rank function of the three dimensional rigidity metroid by Tabor and myself in 2006. And this second observation that the rank is determined by the cliques in the closure goes back to a conjecture of dress in 1987, which is also a conjecture about the rank in the three dimensional rigidity metroid. So this theorem tells us that both conjectures for the three dimensional rigidity metroid are valid for the cofactor.
01:02:25.334 - 01:04:18.994, Speaker A: So here's same example where it's slightly modified to show, try and show that for some applications, the second expression for the rank is more suitable than our first formula for the rank. So in terms of finding an algorithm, I don't know which is more so to try and convince you that this set of edges is dependent I use the same set of edges, e one e two e. Right. And so this is the same example except I've done a one extension, so I've deleted this edge and I've added a vertex up to grade four and now I'm going to say that I take the obvious tooth in five shallow cover of what I get by deleting these edges. So again I take these seven blocks and now to make Bob happy, these are just vertex sets and most of the vertices, six of the vertex sets are sets of six or five vertices and this one has six vertices. And then when I work out the value I get the six six times nine six times, so six times the Maxwell bound, so six times three times five minus six. And then for this one I get three times six minus six, which is twelve.
01:04:18.994 - 01:05:51.124, Speaker A: And then I take away the number of hinges. So the number of hinges is seven and I get 59. And I guess I should, we should check that this is phi shallow. But if we take, if I take any sequence of these sets of sets of vertices, I guess if I start here then the next one will have two vertices in common and then the next one will have two vertices in common and that happens all the way until I get here and then the last one will have four vertices in common with previous things in the sequence. So this sequence, this set of seven sets is actually four shunoma and then we do the sum and it tells us that f is dependent. So another application of the second formula is that we can verify a conjecture of Loewas and Yemeni about the. We can show that a conjecture of Loewas and Yemeni about the three dimensional rigidity metroid holds for the cofactor metroid.
01:05:51.124 - 01:07:09.434, Speaker A: So we can show that every twelve connected graph is c twelve rigid, which I guess I mean has maximal rank in the. It's a b's at c twelve metronome on the appropriate complete graph. So to finish off with, again I've gone over time, sorry. So I'd like to give three open problems which I think we've seen before. So the first problem is due to t and Whiteley from 1985 and it's deciding whether x replacement operation preserves independence in the generic three dimensional rigidity metroid. So x replacement is fundamentally in what we've done for the cofactor metroid. So I think it really highlights, I think if we, if, if we could show that x replacement was true for the three dimensional rigidity metroid, then we could try to play the same game as we did for the cofactor matrix.
01:07:09.434 - 01:08:06.484, Speaker A: The second problem is to find a polynomial algorithm for determining either of our rank functions for the core function. And third problem I already mentioned. So it's trying to ensure that this function raw is submodulent. I'm taking the special case that I mentioned which is relevant to Grover's convention. So finally, the results I've been speaking about in the lectures tow and Trey are available on archive, and this is their address. So I'd like to finish that. Thank you.
01:08:09.264 - 01:08:10.324, Speaker C: Thanks, Bill.
01:08:11.144 - 01:08:13.764, Speaker A: Does anyone have any further questions for Bill?
01:08:15.074 - 01:08:24.774, Speaker B: I guess I've got one clarification. I just want to understand the status of this conjecture that c twelve is the same as r three.
01:08:31.594 - 01:08:32.974, Speaker A: I'm not sure what you make.
01:08:34.394 - 01:08:53.184, Speaker B: It's open. There we go. Yes, it's okay. I mean, it looked awfully close to being settled, but I guess it's a, the question, the sudden modularity, or what's needed to, given your results, it looks like you were very, very close to establishing that.
01:08:54.404 - 01:10:22.184, Speaker A: Well, I think it goes back to problem one. So I think if we could show that extra placement holds for the three dimensional rigidity metroid, then I think in some sense we would be close to showing that the two metroids are rate one. So we could, we could, if we had x replacement, then I think we could use x replacement and wonders other operations. So one extension, zero extension, vertex splitting, in order to ensure that, that we also have double bay replacement. And then once we have double bay replacement, we can, we can try and do an the same kind of induction to show that both these metroids are the same. And on the other hand, if x replacement doesn't hold for the three dimensional rigidity metroid, then they're not the same, because it does hold for the cofactor metroid. And so I think Brigitte had told me that Jack Graber had tried for a long time to prove that X replacement worked for the three dimensional rigidity metroid, using the kind of algebraic independence argument.
01:10:22.764 - 01:10:23.784, Speaker C: Exactly.
01:10:26.924 - 01:10:27.744, Speaker A: Sorry.
01:10:28.324 - 01:10:29.584, Speaker C: Yeah, he did.
01:10:30.084 - 01:11:19.874, Speaker A: Yeah. And so I've also tried, and I'm sure lots of other people have tried to do that, but maybe have a proof technique which uses algebraic independence, our proof technique, to show the double v replacement holds for the core factor metroid. I think it uses antebreaking dependence, but it also uses a subtle kind of induction. So at least it's given me some kind of encouragement to go back and have another try at x replacement for the three dimensional rigidity but it seems to be harder than double v for the core factor. Naturally.
01:11:24.314 - 01:12:35.602, Speaker C: Can I just make a slight remark here? I really like your approach, but what I'd like to point out for this problem three here, or for the, for your general rank functions, I think the f zero is exactly the edge set for which you reach the minimum is the edge set, that edge subset of f, that of edges that is not, that are not contained in any cycle. And so that's what I tried to do in my speed talk yesterday. So I think this f zero is really all the edges that are not contained in a cycle, and all the others are, then you're summing up and your hinge stuff is correct. So I think that's a good way to think about it. And what I'm trying to do is just characterize the cycles of these abstract rigidity matriots, which I think is very nicely equivalent to your truncation or the other way around. Right. We start with the cycle soup, that is at the lower end, all the k five s, and you can generate all the cycles with k five.
01:12:35.602 - 01:12:38.814, Speaker C: But just taking unions and throwing out one edge.
01:12:39.914 - 01:12:55.404, Speaker A: Yeah, yeah. So I agree that. So I think of f zero as being the set of. So one possibility for f zero is to take the set of edges of f which are not contained in a circuit.
01:12:57.744 - 01:13:15.204, Speaker C: Right. And so if you separate those out, then this is dependent sets. All the sets that are, which you call actually redundant, and they are not necessarily rigid, but they are redundant in the sense that all the edges are contained in a cycle.
01:13:15.704 - 01:13:40.084, Speaker A: Yeah, but, so shinichi has a slightly different, prefers a slightly different f zero. So I think the largest set, f zero is the one that I just said. But the smallest set, f zero, we could first take the closure of f and then take f zero to be the set of all edges in the closure which do not belong to circuit.
01:13:42.184 - 01:13:53.124, Speaker C: Right, but it's the same thing. No, well, but anyway, those are the two different kinds of partitions that you get.
01:13:54.504 - 01:13:55.168, Speaker A: Yeah.
01:13:55.296 - 01:13:56.484, Speaker C: So there are several.
01:13:57.424 - 01:14:02.952, Speaker A: So for example, in the cycle, the ordinary one dimensional cycle metroid of a graph.
01:14:03.088 - 01:14:03.336, Speaker C: Right?
01:14:03.360 - 01:14:11.182, Speaker A: So, but if we took a tray, then no edges would belong to circuits.
01:14:11.358 - 01:14:11.694, Speaker C: Right?
01:14:11.734 - 01:14:19.474, Speaker A: So, but then if we take the, if we take the closure, we will get a complete graph and every edge will belong to a circuit.
01:14:20.254 - 01:14:20.994, Speaker C: Right?
01:14:21.374 - 01:14:22.954, Speaker A: So it's not the same.
01:14:23.454 - 01:14:33.234, Speaker C: Well, but all I'm saying is you have different kinds of partitions. These sums will be correct.
01:14:34.024 - 01:14:40.952, Speaker A: Yes, yes. So I think, I'm just trying to say that there is not a unique f zero.
01:14:41.128 - 01:14:50.244, Speaker C: No, there's not a unique f zero, but that's what I'm saying. You can, for example, take f zero to be all the set of edges that is not contained in a cycle.
01:14:50.704 - 01:14:56.704, Speaker A: Yeah. And that would work. A cycle in f. A circuit in f. Sorry. Yeah.
