00:00:00.080 - 00:00:28.022, Speaker A: Thank you. So we'll have 320 minutes talks during this next block. Our first one will be from Daniel Hess, and they're going to be telling us about explicit two cover decept for Dina's two cover. Hi, is the mic working? Is it good? Okay, great. Yeah. So, first off, thanks so much to the organizers for giving me this opportunity to speak and for putting together this conference. It's been awesome so far.
00:00:28.022 - 00:02:14.306, Speaker A: I'm really looking forward to the rest of it, too. Um, so what I'm going to tell you about today is some sort of combination number, theoretic and geometric picture involving some recent work of mine with basically making two cover descent and some associated stuff for computing rational points on G's two curves really explicit to the point of being able to run as algorithms, and then running those algorithms on a big data set, and then seeing, well, how often do these methods work when they don't work, what's causing them not to work? And so what does that mean for the future of being able to compute rational points on lots of genus two curves in practice? And so, just to start out, here's our sort of very familiar general problem set up in arithmetic geometry. So we have a smooth projective curve of genus, at least two over a number field. And faulting's theorem tells us it has finely many rational points. But the huge open problem in arithmetic geometry is, well, given this curve, how do we actually compute this ab rational point? It's some finite set. We can start searching, maybe just by brute force, maybe by some more clever method. But how do we know when we've actually found all the points? Um, and this actually sort of breaks down to two separate problems, one part of which is, well, how do we know there is at least one point? And the second part is, if we know there's at least one point, or maybe at least a few, how do we know when we found all of them? Um, I'm not going to talk about the first problem.
00:02:14.306 - 00:03:12.038, Speaker A: Uh, all the curves in question here we already know, have at least one point and typically at least a few. And so even in the sort of first case of genus, two curves over the rational numbers. And so a genus two curve is given by an equation of the form y squared equals a degree six polynomial in x. So even here, no general method is known. And so for the rest of the talk, we're just going to work over the rationals. So one approach to this problem, that actually was the biggest step toward proving what's now Faulting's theorem, back when it was the Mordell conjecture, before Faulting's proved in general, is Shaboty's method, which works on the Jacobian. And the idea is basically you fix a prime p, and then you look inside this commutative diagram.
00:03:12.038 - 00:04:19.232, Speaker A: You consider the p adic points of the curve as like this p adic curve sitting inside the p adic points of the Jacobian, which is this g dimensional abelian variety. And then you consider the intersection of that with, well, you can take the p adic closure of the set of rational points of the Jacobian. And what Shaboty proved is, if the rank is less than the genus, then in fact this intersection is finite. And therefore this proves fineness of rational points on the curve. Um, just to give a sense of why this is true, the key idea is that the rank is actually an upper bound on the dimension of this space here, the, uh, closure of j of q, uh, the dimension as a p adic manifold. Um, and so if rank is less than genus, this is a proper p adic submanifold. And so, intuitively, just going by dimension, you would expect that the intersection of a p adic curve with a proper Pac submanifold is finite.
00:04:19.232 - 00:05:28.080, Speaker A: Shavotti showed, in fact, that is the case. So Coleman in 1985 refined this, and that's why Shavoty's method isn't just of historical interest. And so what Coleman did is use p adic integration and the theory of Newton polygons to actually extract explicit bounds from Shavoty's method. For example, if p is not too small and is a prime of good reduction for the curve, you get this very nice bound that is very often either sharp or close to sharp, much better than the bounds that you can extract by, for example, faulting's or Vojta's general method. Um, and in many cases, this method can actually be turned into an algorithm, um, for computing the set of rational points. Uh, and so, for example, Brown and stoll have implemented this in magma for, uh, curves of genus two and rank zero or one. Um, and I believe there's some implementation for higher genus hyperelliptic curves.
00:05:28.080 - 00:06:18.466, Speaker A: The obstacle there is actually, uh, the lack of an implementation of computing the Mordell weigh group in those cases. But, yeah, so this is something that can be made algorithmic. So now let's talk about big data sets of genus two curves. So, Booker, Sisling, Sutherland, Voigt and Yasaki computed what should be heuristically near complete. Like heuristically, there should probably be a few missing ones, though none are known. But this database of 66,000 something genus, two curves over q that have absolute discriminant less than or equal to 1 million. And so this is in the LMFDB, which if you don't know about the LMFdB, go to lmfdb.org,
00:06:18.466 - 00:06:51.034, Speaker A: comma check it out. It's a really cool, extensive database of all sorts of number theoretic data, l functions, modular forms, elliptic curves, higher genus curves, Galois groups. More is being added to it all the time. And these objects are also linked to each other when they're related. For example, you can go to the page for an elliptic curve, and then it links to the page for its modular form. So it's pretty great. And there's lots of precomputed data in there, including rational points.
00:06:51.034 - 00:07:26.674, Speaker A: Now, for the genus, two curves of rank zero or one. This list has been proven complete using some variant on Shabouty's method. But for the higher rank ones in the dataset, it just says known rational points. And this is because it hasn't been proven for those curves. So we'd like to fill that out and make that proven for as many as possible. This is like the sort of, you know, applied side of the whole shaboty coleman theory here. Let's actually do it for this big data set of curves.
00:07:26.674 - 00:08:47.496, Speaker A: So what's the issue with higher genus, or, excuse me, with higher rank curves? Well, the issue is that if the rank is at least as big as the genus, then this may not be a proper p adic submanifold at all. And then Chabotis method gives no information. So in this case, there's several things we can do to try to get around this problem. One thing is, well, let's suppose that the Jacobian is not simple, that we have some factor, and then we can pass to the quotient of this. And if it happens that the rank of this quotient, abelian variety is less than its dimension, then you can essentially do just a variant of Shabouty's method. But you use this map from the curve to this smaller abelian variety in place of Abel Jacobi. And one example of this, it's probably the most commonly used application of this idea, is, well, if this is a restriction of scalars of an elliptic curve, or equivalently, if you have a map from your curve to an elliptic curve defined over some extension of your base field, then this is called elliptic shavoti, and this is also implemented in magma.
00:08:47.496 - 00:09:48.438, Speaker A: Um, and so this gives you a, uh, this gives you sort of an alternate method, where sometimes you can run Shaboty's method by finding like an appropriate quotient, abelian variety. Another approach, and this line here has like more content in it than just about anything else in this talk combined. Um, aligning over a lot here. But there's this uh, method due to mignon Kim called non abelian shove o t, that replaces the Jacobian with a larger non abelian object coming from a bigger piece of the fundamental group. In many cases where the rank is equal to the genus, this is something called quadratic shaboti, sorry, the first non abelian step here, and this is a very active area of study. There's some implementations there. Um, I'm uh, currently working on another project that involves this.
00:09:48.438 - 00:10:35.374, Speaker A: Uh, but yes, there's a lot to say about this, which I won't say in this talk. Um, but there is some possibility for going beyond rank less than genus using these sort of non abelian ideas. Another idea is you can use descent, and the idea of this is use covering collections. So find some covers of your curve and use those to sort of, and then maybe take some quotients of those. And so then you have a correspondence between curves. And the idea is that you might use this to reduce the problem to finding rational points on some finite list of hopefully easier curves. And so this is the main approach that we discuss here in combination with elliptic Shavoti.
00:10:35.374 - 00:12:11.334, Speaker A: So what is descent, and more specifically, what is two cover descent? Well, the multiplication by m map, this is a degree m to the two Galois covering of the Jacobian by itself, right? And now if we think of the curve as a sub variety of the Jacobian by the Abu Jacobi map based at some rational point, well now we can take the preimage of the curve under multiplication by m and get a new curve that's a degree m to the 2g atal covering of our curve. And this is the source of many atoll coverings of curves, right. Is essentially another way of thinking of it is these are the covering spaces that come from the abelianization of the fundamental group, which is closely related to the Jacobian. And now one can compute a finite set of twists of this curve together with maps to the curve. So a finite set of twists of this covering map, such that the rational points of the curve all come from rational points of one of these covering spaces, one of these twists. And so now this reduces this problem of finding rational points on the curve to finding rational points on each of these other curves. And if we're lucky or if we've constructed things well, hopefully that'll be easier.
00:12:11.334 - 00:12:55.612, Speaker A: So that's the idea. And now, in our case, genus and m are both two. And so here, this is a genus 17 curve, which is a maximal unratified abelian two covering of our curve here. And let's consider the Jacobian of this. It turns out the Jacobian of this is isogenous over q bar to the Jacobian of the original curve, times a product of 15 elliptic curves. And so you can get this just by looking at Riemann, Hurwitz and seeing like these are all coming from a bunch of different degree two coverings. But the point is, this gives us a whole lot of potential to apply abelian Chevoti.
00:12:55.612 - 00:13:57.124, Speaker A: And so this idea here is about making this explicit. So, the particular approach that I took uses Kumar surfaces. So Brown and stoll gave an explicit description of two cover descent for hyperelliptic curves in general, what I did is a slightly different than their approach, though it's, in spirit the same basic idea. So what I did is using. So, first off, my approach is limited to genus two quintic curves, largely for some reasons of practicality. There are some reasons why the case where you don't have a rational weierstrasse point is just a lot harder computationally. So the coomer surface of the Jacobian is the k three surface that you get by blowing you quotient by the minus one map.
00:13:57.124 - 00:14:56.974, Speaker A: And then this gives you 16 nodes coming from the two torsion points, and then you blow up those, you get this k three surface. That's the Kumar surface. And Flintesta and van Luke gave explicit equations for both this and also. So it's twists, in a sense. I'm not going to define precisely, but they're the sort of twists that we need for descent. And so these are the models in which we're going to be embedding the curves that we use descent on. And so the image in the coomer variety, this is a smooth genus five curve, so a lot more tractable than genus 17, which is canonically embed by a hyperplane section, which in my paper, I give an explicit equation for in p five, where this surface exists as a complete intersection of three quadrants.
00:14:56.974 - 00:15:39.664, Speaker A: And so we sort of have a diagram showing this picture here, where on the left, you've got these different curves. So this is the genus 17, genus five. Here's the original curve. Here's like the base p one, and these are embedded in the surfaces on the right. And so one of the tasks in my paper is computing explicit formulas for the left diagram, as well as the branch locus of this map here down to p one. And in addition. Now let's bring those elliptic curves into play not just over q bar, but over over an explicit number field.
00:15:39.664 - 00:17:05.164, Speaker A: So we take another root of this quintic polynomial f, and over the number field where that's defined, we can define this elliptic curve, and there's this quartic form involved in defining it. I'm not going to write the equations here, but it's given by an explicit formula in the paper, and also all implemented in sage and magma. And this gives a factorization of this map from the previous slide, where now this factors through it like maps down to an elliptic curve, and then down to p one through this explicit map here. So this is exactly the data we need to apply elliptic shaboti to this genus five curve. And we also get a nice description of the Jacobian. In fact, the Jacobian of this genus five curve is isogenous via an explicit isogeny to the restriction of scalars from this number field, which generically is quintic, down to q of the restriction of scalars of this elliptic curve. And there's also a version for when f is reducible.
00:17:05.164 - 00:17:46.954, Speaker A: I just left the statement out here to make it simpler, but it's very similar to this. And so then I implement all this in magma. And so here's what the algorithm does. So first we compute all the constructions that I just discussed, and then we search for rational points. If we don't find any, we check if it's locally solvable, and if so, well, I haven't implemented the right version of the Mordell vasive yet. So right now, if that happens, we have to give up. But at some point in the future, once we have the Mordell vasive, we could use that to show that there aren't rational points.
00:17:46.954 - 00:18:35.894, Speaker A: And then we attempt to compute generators for the Mordell weigh group of this elliptic curve. In practice, this does require assuming GRH to make it feasible. There's some class group that you need better bounds for in order to make computing it feasible. And then we run elliptic Chevo t to compute rational points on these curves and pull back the resulting points on all these z delta to obtain the set of rational points on the curve. So then, in terms of the results. So Boston University has this thing called the shared computing cluster. It is a roughly 28,000 core Linux cluster, just a distributed computing cluster.
00:18:35.894 - 00:19:22.994, Speaker A: I ran this for all 7700 roughly genus, two quintic curves in the LMFDB of rank greater than or equal to two, which means rank two or three. And here was the outcome. So about 13.6% of the time it just worked. Some of the time there was this apparent failure of the Haasa principle where it looks like a twist, has rational points, or has no rational points, but we can't prove it. Some of the time, a mordal weill rank of one of these genus five curves was too high. Like if it's rank five and this curve is genus five, well, we're out of luck.
00:19:22.994 - 00:20:27.384, Speaker A: Sometimes we weren't able to compute the Mordell weigh group. Magma can't always compute it exactly, and sometimes it just kept running long enough that, well, I set a cutoff time past which we wouldn't keep trying to compute. And for each of these, there's detailed data recorded to allow reconstruction of the results and records what went wrong. If something went wrong, the successful results will be incorporated into the LMFDB soon. And just to give you a sense of how long it took, where the methods exceeded the medium runtime was, yeah, 529 seconds. It's sort of in a long tail distribution, didn't seem to significantly increase with the discriminant. And a big thing that would improve the success rate here is if there was an improvement to descent algorithms for elliptic curves, like implementing three or four descent over number fields.
00:20:27.384 - 00:20:44.844, Speaker A: So here's the links. You can check out the preprint, which will appear in algorithmic number theory symposium proceedings later this year. And you can also see the code and the raw data on GitHub. So I will stop there.
