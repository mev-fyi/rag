00:00:00.400 - 00:00:42.644, Speaker A: So first, I want to thank the organizers of the conference for inviting me to speak. I have to say, when my two boys found out that the conference was in Toronto, they said they wanted to come because they both play hockey and they love hockey, and so they knew that in Toronto, there's the hockey hall of Fame. So they wanted to go there, but I didn't want to tell them that. I didn't think they would have too much fun coming to my conference. And as it turned out, I wasn't able to attend in person anyway. So it was probably better this way. But I wanted to thank the organizers for allowing this online component so that I could still participate.
00:00:42.644 - 00:01:47.754, Speaker A: I also wanted to say happy birthday to Doug, and I hope that this is the best birthday present. So I'm going to start now talking about uniformly resolvable decompositions. And I just wanted to talk about some different types of graph decomposition problems, and a lot of what you heard earlier will probably be review, but hopefully you'll be able to kind of see it in a different context. So I'm going to kind of start right from the basics, starting talking about decomposing complete graphs. And one of the most basic type of decomposition would be a Hamilton decomposition. Here I give you an example of the complete graph on five vertices decomposed into two Hamilton cycles. When we talk about these problems, there are two different cases, v odd and then v even.
00:01:47.754 - 00:02:48.366, Speaker A: When v is even, every vertex actually has an odd degree, so it's impossible to decompose into cycles. Therefore, we take out the one factor, and you can see this is a very old problem going back to the 18 hundreds. Here's another kind of decomposition problem. So suppose we want to decompose the complete graph, or the complete graph, take away a one factor into cycles. Here's a very famous problem, decomposing k seven into cycles of length three. So we might choose this as a cycle, and I can keep going and choosing the rest of these cycles of length three, and that would be the decomposition. Again, we would break this into two cases, m even, and then we can further talk about resolvable decompositions.
00:02:48.366 - 00:03:36.474, Speaker A: Now. So I think of this as decomposing your decomposition. And here is a very famous example of a Kirkman triple system. We're decomposing. We can think of it, I mean, it is a combinatorial design, but we can think of it as a graph decomposition problem in that we're taking the complete graph on nine vertices here, and we're decomposing it into cycles of length three. But on top of that, we're taking all of our cycles of length three and partitioning them into these subsets where each subset will span the point set. We can think of them as Steiner triple systems with parallelism, where the triples are partitioned into spanning sets.
00:03:36.474 - 00:04:22.040, Speaker A: In this case we have four spanning sets which we call parallel classes. So this brings us to the Oberwolfoff problem, which we've already heard a lot about today. This was proposed by Ringel in 1967. It asks, can we decompose the complete graph into two factors which are spanning graphs that are all regular of degree two and which each two factors isomorphic to some given two factor q. So here's just a very basic example. We might ask to decompose the complete graph on 17 vertices into these two factors, q one through q eight. But all of them look the same.
00:04:22.040 - 00:05:29.650, Speaker A: They're all isomorphic to this picture that has a six cycle, a five cycle, and then two three cycles. And now you've heard again a couple of times already that the motivation comes from table arrangements at a conference. And we're asking if there's 17 people at the conference, can we seat the people over the course of eight nights so that every person sits next to every other person exactly once? This is. Whoops, this is my picture that shows the six, you know, the table with six people, and then you have two tables that are small and then the table with five people. So just kind of trying to give you the relationship between the graph theory and the motivation. We're decomposing k 17 into cycles that corresponds to the round tables that are, that we're seating the people around. And then the edges of the graph represent people sitting next to each other.
00:05:29.650 - 00:06:18.374, Speaker A: So if there's an edge between two vertices, that means those two people sit next to each other at dinner. And each two factor is basically a snapshot of the seating arrangement for that night. And then there are eight factors that are needed in order to decompose all of the edges that corresponds to the eight nights. And then for the spouse avoiding variant, again, we have that problem that if v is even, then every vertex has odd degree. So it would be impossible. So that's why we had to take out the one factor, just like with the Hamilton decompositions. And in this case, what that means is that everybody sits next to everybody else except one person, maybe their spouse.
00:06:18.374 - 00:07:01.534, Speaker A: Okay, that brings us to the Hamilton Waterloo problem. It's a little bit more of a generalization of the Oberwell fog problem and that you have two types of factors. So in this case, really there's two conference locations. There's a location in Hamilton and a location in Waterloo, and the conference attendees who spend our days in Hamilton and they spend s days in Waterloo. So here are the two different banquet rooms. Here's the seating arrangements. Perhaps in Hamilton you have three tables that seat four people each and one table that seats five people.
00:07:01.534 - 00:08:23.474, Speaker A: And then in Waterloo perhaps you have a table of six, a table of five, and then two tables that seat three people. So again, we're trying to decompose the complete graph into factors of cycles. In this case we have r factors of type f one and s factors of type f two, corresponding to the different days that you spend in Waterloo and the days that you spend in Hamilton. Now, in the uniform case, this corresponds to the factor types having all of the same cycle sizes. But in general, what you want to do in either, if you're talking about the uniform case or non uniform case, is that you would like to be able to find such a decomposition for all values, all possible values of r and s. So every possible case that you might come up with. Now, as Andrea talked about in her presentation, it seems like when r is equal to one or when s is equal to one, these cases seem to be the most difficult cases, or at least they need to be solved in a different way than all the other cases, is what it seems, what seems to be happening.
00:08:23.474 - 00:09:12.802, Speaker A: And I'm going to come back to that kind of that point. But I just wanted to point that out, that these cases seem to be different. But now I want to generalize to the idea of a uniformly resolvable decomposition, because the Hamilton Waterloo problem is such a decomposition. So if I'm given a set of pairwise non isomorphic graphs, then an h decomposition is a decomposition decomposition of the edges into subgraphs that are isomorphic to some element of H. So here's my example of H. Maybe h is a four cycle, a a three cycle and an edge. And then g is my complete graph on four vertices.
00:09:12.802 - 00:10:03.956, Speaker A: I might decompose this into a four cycle which is a member of h and then maybe two edges. And of course the edge is a member of h as well. Then if I talk about an h factor, that would be a spanning subgraph in which the components of that spanning subgraph are isomorphic to a member of H. So here actually I have h factors. This is an h factor because its four cycle is a member of H. And then here the components, theres only one component in this h factor, but this h factor actually has two components, but each component is isomorphic to that edge. Then we say that the h decomposition is resolvable if the blocks can be partitioned into h factors.
00:10:03.956 - 00:10:54.848, Speaker A: So we call it an h factorization. Our Oberwolf example was such an example. It is a resolvable h factorization because each factor looks like this, which is spanning, spans all 17 vertices, and every component comes from the set h, which is a six cycle, a five cycle and a three cycle. Now getting back to the uniform thing. So if x is a member of h, then an x factor is a spanning subgraph whose components are isomorphic to x, meaning everything looks the same, all of the components are isomorphic to x. That in which case we would call it uniform. Our Kts nine was such an example.
00:10:54.848 - 00:11:38.780, Speaker A: It was uniform because we were dealing with c three. Each component was a cycle of length three. So we would say that the Kts nine is an h factorization, where h consists of c three. Each factor is an x factor where x is c three. And so we say that this is a uniformly resolvable c three factorization. Let's compare that to our Oberwolf example. In the Oberwolf example, we had these eight factors of qi, which all looked like this, right? C six, a c five and two c three s.
00:11:38.780 - 00:12:30.016, Speaker A: And so because it was spanning and because it was decomposed, decompose all of the edges of the graph, it was a resolvable decomposition. But compared to the kts nine, it was not uniform. So in which case both are resolvable, but only the kts nine is uniform. So that kind of gives you the idea of uniformly resolvable decompositions. But then what about the Hamilton Waterloo problem? Where does that fit in? Well, remember, in the Hamilton water loop problem, we had r factors of type f one and s factors of type f two. So we were dealing with two different types of factors. If we further said that in our situation, we restricted that the banquet hall in Hamilton only consisted of round tables with p people.
00:12:30.016 - 00:13:19.224, Speaker A: So we're only dealing with p cycles. And then in waterloo we only had round tables seating q people, well, then we're dealing with the uniform case here. And so we come up with this new definition of a uniformly resolvable xy decomposition of the complete graph, which is an edge decomposition of kv into rx factors and sy factors. So this is how we denote it. Xy for the two different types and v standing for the number of vertices, we have r x factors and sy factors. So our Hamilton Waterloo problem, in the uniform case was an example of such a decomposition. It's where x is cp and y is cq.
00:13:19.224 - 00:14:24.494, Speaker A: Okay, so now this brings us to a new kind of uniformly resolvable decomposition, the stars and stripes problem. In this problem, I'm going to let h be defined as k two and k one n. So I can think of k one as an n star. We have these factors that look like these stars, and then we have other factors that look like stripes, in particular, r factors of stars and s factors of stripes. We can formulate that in terms of the conference problem, again, where we would say, hey, suppose our conference has v participants and we're dealing with v over n plus one parallel sessions. Those would really be a decomposition of the people at the conference into these parallel sessions would be factors of stars. And then suppose that during our breaks, the participants all pair up for one on one discussions.
00:14:24.494 - 00:15:19.674, Speaker A: Those would be the one factors or the stripes. So in the cases where n is a particular value, those cases have been looked at where when n is equal to three, when n is equal to four. But today I want to look at a different instance of the problem. And instead of fixing nice, I'm going to try to give you an idea of a method that would solve the problem when n is anything but when r is going to be fixed. So here the problem that in particular I'm going to talk about is when r is equal to one. So we have one, one factor and s factors of n stars. This is actually, in this case, it's equivalent to a decomposition of kv minus a one factor into star factors.
00:15:19.674 - 00:16:10.268, Speaker A: But remember, as in the case of the Hamilton Waterloo problem, we looked at when I mentioned that, and also Andrea did, was that when r was one or when s was one, those small cases seem to be a little bit harder or at least needed different methods. And the same thing happens here. So again, in this type of uniformly resolvable decomposition, again, when r and or s are small, it seems to be harder. So that's where we will focus in this case. Here are the admissible orders split into two cases when n is even or n is odd. And for the odd case, we have two also cases subcases. And I'm going to focus in on the bottom one here, case two.
00:16:10.268 - 00:16:45.360, Speaker A: And I just want to give you a technique for solving this case, and I'm going to do it by way of example. So here's the example that I want to talk about. We are going to decompose k 44 minus the one factor into 28, three or three star factors. Now remember, n equals three is solved. But I just wanted to give you an idea of the method. So I want to point out kind of a combination of techniques. So for this problem, and actually I have worked on the Hamilton Waterloo problem as well.
00:16:45.360 - 00:17:36.228, Speaker A: And it seems like we've tried to use the idea of using differences and we've also tried to use the idea of arranging vertices carefully. And you saw, like with Andrea, the way she had her vertices arranged carefully was helping her to understand what she needed to do and how to keep track of which edges have been covered. If I found that with this problem it was hard to do one or the other. And I'll explain about that, explain that in a little bit more detail. But the idea is really the big trick was to try to combine that technique of using differences and arranging the differences carefully. Starting with differences. K 44 has the differences plus or minus one through plus or -22 and so I'm going to deal with the difference 22 first.
00:17:36.228 - 00:18:08.904, Speaker A: And so what I'm going to do is I'm going to arrange my vertices and give the labels, give the vertices labels so that every edge has a difference of 22. And that gives us our one factor. That means that the rest of the edges have to be decomposed into star factors. And we're going to do that by keeping track of all of the edges with particular differences. Now this is what I would like to do. I like things to be neat and clean and in order. So I would like to do things in a nice clean way.
00:18:08.904 - 00:18:31.860, Speaker A: And I would like to arrange my vertices like this. We had 44 of them. So I would like to kind of arrange them in groups. So this first column here would be like my first group and then a second group, third and fourth. So I'd have four groups here or. Sorry, yes, four groups here and each group would have eleven vertices in them. So I'd like to arrange them that way.
00:18:31.860 - 00:19:06.004, Speaker A: And then I would like to consider stars that have what I call cross differences. So for instance, this edge, I would say is across difference of zero because they're, those two vertices are at the same level. You know, this edge would be across difference one because these two vertices are a level of one apart. Starting with this vertex being the center. I'd have a cross difference of zero for all of these leaves. And this vertex would have, the leaves would all have cross difference of one. And so on this one the leaves would have cross difference ten.
00:19:06.004 - 00:19:46.198, Speaker A: So I'd like to do that. And you can see I make a bunch of star factors that way and then I could kind of shift the centers over and I could get more star factors and I could really keep track of. And maybe I could use all these cross differences. Then I would like to say, okay, well, now I took care of all the cross differences. Now all I need to care about are the inside differences and what I mean are the differences that lie within these groups. But that's a problem because once I try to make one star and another star, I'm left with three vertices in, in the same group. And so at this point I can't make another three star.
00:19:46.198 - 00:20:23.274, Speaker A: I'm going to have to somehow mix with my cross differences. But if I've already used them up then I'm stuck. So I tried this, you know, okay, well maybe I can tweak this a little bit and still try to make it neat and clean and maybe just one of my factors is a little bit messy. And it turned out that every which way I tried it, I came to the same conclusion. It's going to have to be messy. I'm going to have to mix difference types. So here's the new idea.
00:20:23.274 - 00:21:05.664, Speaker A: Now we're going to arrange our vertices carefully, but we're also going to label the vertices so that we're going to use both types of differences at the same time. We're mixing our differences. So here's my new configuration and here's a couple of stars that are starting with. I labeled everything in the first group with numbers. You'll notice that are zero mod four and then one and then two and then three. And you can see that these first stars that I have here, this edge is an edge of difference four, eight and twelve and these are all the same. Okay, now I'm going to add some more stars.
00:21:05.664 - 00:22:01.184, Speaker A: So for this star I actually used different 1620 and then. Now here's this mix, right? Because I've got these inside edges and now I have a cross edge here which uses difference 21 and I didn't draw it here, but in this next I'm going to copy that same picture here and here. But over here is a little bit of a problem because I have to make this edge go back to group the first group over here and that doesn't give me an edge of difference 21, it actually gives me and edge of difference 17. So I'm going to keep track of that. And now what's left is this little rectangle in between which I haven't put any stars on those vertices. So I'm going to kind of take that over here and I'm going to put some of these stars going this way. So if you notice, if this is the center, I use difference one, two and three here.
00:22:01.184 - 00:22:35.514, Speaker A: And then from this 24 I use difference five, six and seven. And then this last star, I'm actually going to consider my differences going forward. So that's going to help me keep track of things. So 25 to 28 is a difference of three and this is two. And then 27, 28 is one. But what that allows me to do is really keep track of what differences each edge had. Because now that actually, if I put that all together, it gives me a star factor and I can kind of shift everything down one.
00:22:35.514 - 00:23:22.186, Speaker A: And I'm actually just developing it and it gives me another star factor where all of the edges have the same differences. And I can keep shifting these down all the way around. So I can get eleven star factors this way. And furthermore, now I know which difference of differences I have, I have covered. So if I look in all of these groups now, I gave those groups names, g zero through g three. They've all used differences 4812 and they've used differences 1620. But remember, in that last group it was this edge, right? This was the edge of difference 17 instead of 21.
00:23:22.186 - 00:23:56.514, Speaker A: So I kept track of that there. Then I had the one, two, three and the five, six, seven and the three and the two and the one that I showed you about. Okay, now here's the second part of the construction. In this case, I'm going to give you three more star factors and we're going to be careful how we construct these. I'm going to let one be the center of the star and I'm going to choose these three leaves all to be in different columns. And I recorded the differences here. 911 and ten.
00:23:56.514 - 00:24:41.128, Speaker A: Therefore, if I do that, when I develop this and I shift this star all the way down this column, it produces the star factor. And all the same edges are, or, sorry, every edge has the same differences. So I'll do that once with a center being in column g one. And then I'll do another one where the center is in the column, group g two. And then I'll give you one more where the center is in group g three. But it allows me to keep track of the differences again. And now what's left over is actually not very hard because we just have to use up the remaining differences evenly.
00:24:41.128 - 00:25:32.924, Speaker A: And we just use that same observation that, hey, if I choose the center to be, say, x mod four, then for the leaves I just pick everything else except for x mod four to be something from the three leaves. And I try to use up the differences in a balanced way. In this example, it gives me 14 more star factors, and I can record them in my chart. And what it actually comes down to then, is trying to produce this chart so that when I look down every group here or every column of the chart, I see every difference, one through 22. I put the one factor in as well. So all the differences, one through 22, show up now in column g zero, g one, g two and g three. That helps me to recognize that I've covered all of the edges.
00:25:32.924 - 00:26:20.124, Speaker A: And then if I count up the number of star factors, I got eleven from part one, three from part two, and 14 from part three, for a total of 28. And then that's just kind of the basic idea. It gets more complic, more complicated, as you generalize. But the idea is to generalize to n for n bigger than three, to give you this result that you have, this existence result for the decomposition that we wanted. So that was all I had, except for one more thing. I wanted to give you one last decomposition. So we talked about many kinds of decompositions, from Hamilton decompositions to the Hamilton Waterloo problem and the overworld flock problem, and the stars and stripes.
00:26:20.124 - 00:26:45.304, Speaker A: So I'm leaving you with one last decomposition. It is the decomposition of the pets in our house. So, a few weeks ago, our cat had kittens and our dog had puppies, all in the same week. So I take you from stars and stripes to puppies and kittens, and you can see they each had four. So it was very uniform. Thanks.
