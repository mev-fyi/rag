00:00:01.240 - 00:00:55.728, Speaker A: Thank you all for coming. Thank you for registering for the graduate course on geometric and combinatorial rigidity. So I can see in the participant list there's a number of people who are experts in this topic, so I apologize to you guys, but I don't think you're going to get very much. Certainly from the first few lectures, I'll hopefully say some things that are maybe interesting to you later on, but I'm going to start pretty slowly from the beginning, really at the beginning of rigidity theory, so bear with me or feel free to jump back in at the relevant point. You'll notice instantly that I'm doing what I think of as a much less high tech presentation style to what Mira did yesterday, for those of you who are at her graduate course, and you can also see the horrendous handwriting that I have. It's bad on paper, but on a tablet even worse, unfortunately. So do just shout.
00:00:55.728 - 00:01:56.194, Speaker A: I can see the chat as we go, so I'm happy to stop and read any questions in there. So do just shout if I say something that you can't read on the screen, or I don't make it clear enough verbally for you to follow what's written. So the first thing I wanted to say about the course itself is that it should be relatively self contained. So at various points, I'm not going to give details of proofs, but otherwise the course will be just one self contained block, but it will benefit from and be complementary to some of the other activities of the thematic programs in particular. Like Meera said yesterday, for those who were there, there is a winter school that starts on Monday for two weeks, and some of the lectures there will be very relevant. So I didn't want to sort of duplicate material from that at the same time. But I will go over the material that's covered in the relevant lectures in the winter school the week after and go slower because I'll have more time across, more lectures to cover some of the material.
00:01:56.194 - 00:02:41.792, Speaker A: Let me start by just going through the schedule that I've sort of mapped out at the end of this lecture. When I've told you just a little bit about rigidity theory, I'll be able to tell you a bit about what topics will be covered across the course. But for now, I'm not sure that you get much out of having names of topics without knowing, roughly, at least in a rough sense, what they are about. So obviously, and my plan is to have most of the words written in advance, like you can see, and then just highlight in yellow, the particular bits that are important as I talk. So hopefully you all saw a yellow underlining of the. Of that sentence. So today we have this introduction next week, and the week after we have the.
00:02:41.792 - 00:03:05.688, Speaker A: The winter school in particular, there is a. A sequence of free lectures by Bill Jackson on rigidity of framework. So that's directly relevant to this course. He'll cover a lot of material that I'll then go on to cover in more detail. So it will be of great benefit to you if you do attend his lectures. So I really recommend that it's not compulsory. I won't skip over stuff because it was in his lectures.
00:03:05.688 - 00:03:37.354, Speaker A: I'll go into more detail than he does, and I will remind you of it at the relevant points in my lectures. And there are also five of the courses on tropical geometry, algebraic statistics, distance geometry, and a couple of others that escape my mind immediately. But they are complementary. They're more relevant to the other graduate course that miracivorum is giving. But feel free to go along to any. You might have some fun. They are related, at least partially related.
00:03:37.354 - 00:04:40.244, Speaker A: The course by Joseph Solomosi is related to rigidity, but it's kind of a different flavor of rigidity to what you're mainly going to see in this course. But if you go to it, you might get some value out of the links between this course and his lectures, as well as an advert for the winter school on the Monday and the Tuesday afternoon we plan to have speed talks. So these are short talks, but about five minutes in length by any participant who wants to. So if you are going along and you have some research that you're doing that you want to advertise or some technique that you think is important and would be interesting to this kind of community, then please volunteer to give a talk. We want as many people as possible to give these speed talks so that to try and facilitate us all getting to know each other in the sort of virtual environment that we can't really do over coffee breaks, as we would in person. And there'd also be open problem sessions as well. If you have research problems you would like help with, or just open problems that you think would be interesting to this community.
00:04:40.244 - 00:05:25.260, Speaker A: So please do think about contributing to those two. Over the next two weeks, after the winter school finishes, we'll really begin this, this course properly. So the second lecture of this course will be on the 25 January, and we'll go on a Monday, Wednesday, Friday at 10:00 a.m. eastern Standard Time schedule. And that will continue until the 19 February, with one exception, I'm told February 15 is Family day in Canada, so it's a public holiday. So there'll be no talk then. Then we'll have a break from this course for a week and a half for the activities of the thematic program, in particular, the week starting Monday, the 22 February, there'll be a one week workshop on rigidity.
00:05:25.260 - 00:05:51.324, Speaker A: So if you've been enjoying this course, then you may well enjoy some of the talks of the latest research and rigidity you would see at that workshop. And in particular. Sorry, there's a question. Will the regular class sessions be around 2 hours? No. So every lecture will be a 1 hour lecture, so it'll be 10:00 a.m. till eleven. The standard where I lecture here in Lancaster is that lectures are 50 minutes and finish about ten two.
00:05:51.324 - 00:06:26.846, Speaker A: I'll try to roughly stick to that to give time for questions at the end. And in fact I would prefer just to stop after half an hour if I've covered all the material I want to say in that lecture. So there may be some variation in the lengths. I don't want to drag things out for the full hour just to fill it up. So imagine 50 minutes is the sort of standard, but if we finish early, we do. And if there's more time for questions, I just want to encourage you guys to give questions whenever you possibly be kind of. I'd like it to be interactive, as hard as that is to really do properly, virtually, but do speak up or put in the chat if you want to.
00:06:26.846 - 00:07:30.164, Speaker A: So, yes, so that week there will be this workshop on rigidity, and the following Monday to Wednesday there will be a mini symposium on materials and periodicity, which is very related to rigidity, slightly away from the sort of topics I'm going to cover in this course. But again, the advice is just to attend the talks that interest you. And then after that's finished, we will continue. Just before we continue, there's one part later that I think the first session back after these workshops and symposia have happened, I'll probably make it kind of a discussion session, because I think there are some of you who are taking this course for credit at your home institutions. So one way of convincing me you've done enough to get whatever credit you need would be to go to the workshop and rigidity and come back and present as part of the following lecture or two after that to the rest of us and tell us about some interesting talk. You found some interesting mathematics you learned about rigidity in the workshop. On rigidity.
00:07:30.164 - 00:08:09.080, Speaker A: Okay, so after those activities have happened, we get to about the 5 March, and then for the entirety of March, basically we'll continue on our Monday, Wednesday, Friday schedule. That will take us to where it would have been exactly 36 lectures. So I think that's roughly the standard for a one semester course, if I hadn't skipped some because of the activities. So we may stop on the 31 march if I've covered everything and everyone's tired. But if. If people are interested in the still material, I want to say I'd be happy to continue for a little while longer, maybe another week or two, depending on when your various terms end. That might cause issues.
00:08:09.080 - 00:09:00.023, Speaker A: We will see about that nearer the time, but 31 March might be the rough starting point. Okay, so as I said, some people are taking the course for credit, so please do talk to me about it. I've sprinkled exercises throughout the notes, so that would be one way to get some of the credit. My ideal, but maybe it's not realistic, is if the people who are taking it for credit wanted to take it in turns taking notes from what I present, and then I would have a nice latex document at the end of notes. That might be useful going forward, but we'll see. Do get in touch with me if you do need some kind of credit bearing work to take back to your home institution. Okay, so just, again, just on logistics, all the lectures are going to be live over Zoom.
00:09:00.023 - 00:09:29.716, Speaker A: They're all going to be recorded. I presume Christoph set off recording this one. I don't know how to tell. As far as I understand it, the lectures will be available on the fields institute YouTube channel. Typically by the next day you should expect to have it. So the hope is that if you miss, say, the Monday lecture, you'll be able to watch it in plenty of time before the Wednesday lecture, say, as we go through. But occasionally, YouTube can be slow with this, so it does take a little bit of time sometimes.
00:09:29.716 - 00:09:49.020, Speaker A: Okay, so I mentioned this. Please do interact. Make it as interactive as you want. Feel free to ask any questions, however silly you might think they are. It's better to ask. Other people will have the same issues. One important thing that I haven't organized properly yet, but I don't expect that I will give every single lecture we'll see at the end.
00:09:49.020 - 00:10:11.924, Speaker A: I've got a list of the topics and I've marked some of them that I have in mind will be given by other people. So you'll get a collection of other people who are. Who maybe are more expert in the particular kind of rigidity in those lectures. So you might get a, a better lecture than I would have provided in those. So we might have a selection of lectures from other people. Topic wise. Rigidity.
00:10:11.924 - 00:10:53.168, Speaker A: For anyone who doesn't know, you should think of this as a mix of graph theory, linear algebra and geometry. So these are the sort of three fundamental areas of mathematics you need to have a little bit of understanding of beforehand. And so I will assume some familiarity with graph theory. I'm mostly a combinatorial kind of rigidity person, so there's sort of a bias in my choice of topics towards the, the graph theoretic end. But rigidity is all about geometry and linear algebra as well, so you can't get away from having some understanding of them and certainly some understanding of proofs. We'll do a lot of proof, so a lot of proofs will omit, but we will actually work through quite a lot as well as we go. Okay, so, because I.
00:10:53.168 - 00:11:22.774, Speaker A: This is the first time I'm giving the course, I don't have like a set of lecture notes or anything to give you. I apologize for that. What I can direct you to is two particular sources. So the first one was really helpful for me as I was creating big chunks of this module. So it's a paper you can find by T Bo Jordan on. You can find the preprint version on the egres on the Egress preprint server. So this is a.
00:11:22.774 - 00:11:47.374, Speaker A: I guess it's a bit like a mini archive that's used by Thibault Jordan's university. It's called combinatorial rigidity, graphs and matriids in the theory of rigid frameworks. It was really helpful for me. And so there will be a lot of. The presentation would be familiar to you if you understood everything in that article. The second one, Meera, mentioned this yesterday. It's the handbook of geometric constraint systems principles.
00:11:47.374 - 00:12:41.846, Speaker A: The way the chapters were written in that book is different to how I would write in a, a lecture course, but it's a great reference for all the different kinds of results. So if you want to look at where some of these results came from when I'm doing it, and see what other related results there are and where to go further into the topic in various directions, this is a great book to get. I think Mira put a link to it on her webpage, so it should be able to find a copy of this, as far as I can tell. And there's also lots of papers, journal papers that I reference results from as we go. If you do want to follow up on them and are having trouble finding the particular one, all I will do to reference a paper is, say, the authors and the year. So if you can't quite find the right paper or aren't sure, feel free to just send me a note and I'll help you out with that. Okay, so I think that's all of the admin kind of logistics.
00:12:41.846 - 00:13:39.434, Speaker A: So before I start with what you can see at the bottom, I say, is a brief overview of rigidity. Does anyone have any further questions they would like to ask? If not, I hope everything was relatively clear and you're all happy on how things are going to proceed. Okay, so nobody is putting anything in the chat as far as I can tell. So where do we start? We start with graphs. So for me, a graph will always be g equals ve, so vertex set v and edge set e. I use graph in this course to denote what you might have called a simple graph. Can the lecture notes be posted somewhere? Oh, you mean these, these ones that I've been writing by hand.
00:13:39.434 - 00:14:18.872, Speaker A: These are. I've written them in one note. And so if there's some way to get one note in a sensible way, then I would be happy to put them somewhere. But I'm not 100% sure how to get one note because I think by changing the size of the screen so my handwriting seemed about the right size, it probably makes them not fit nicely on a page. But I will have a look and if I can put the PDF's of the notes somewhere, then I will. It may be that I can put them somewhere, but they're not in a great format that's particularly usable. Will, who asked that, please? Or somebody else please just shout if I've forgotten to do it.
00:14:18.872 - 00:15:05.204, Speaker A: And there's another question. How this relate to optimization? So, how does what relate to rigidity theory as a whole? So, there are types of rigidity theory that relate to, for example, to semi definite programming, to convex optimization problems. But I think I have to go a bit further before I can have a specific bit that you might think relates directly to optimization. I am not going to mention the word optimization at any point in the course. I don't think so. I hope that for now answers that question. Or did you want to follow up? That's okay, thank you.
00:15:05.204 - 00:15:32.346, Speaker A: Thanks. Okay, so, as I was saying, so, graphs, I'm going to use graph to denote what you might call a simple graph. So, graphs have no loops and they have no parallel edges. And I guess somewhat obviously, I guess. But it's important that the numbers of vertices and edges are both finite. And I'm only going to consider undirected graphs in the majority of the course. If you.
00:15:32.346 - 00:16:09.374, Speaker A: If you're really keen. And when you understand rigidity, you could relax any of these assumptions. So you could talk about infinite graphs. Typically, there would be infinite number of vertices, but bounded degree at each vertex. Or you could talk about directed constraints between vertices, so you can have directions, for example, in the control of robotic formations. But for now, we're going to have finite vertex and edge sets and undirected graphs. Can you perhaps use a more standard font? So the font is my handwriting, so I can't improve my handwriting too much.
00:16:09.374 - 00:16:35.262, Speaker A: Unfortunately, I don't think there's a way to change the handwriting. I don't think there's a button I can press to change it from the handwriting I'm given. So sorry, Olivia. I don't think I can. But as I say, this is better than a lot of handwriting. It's worse than a lot of handwriting, too. Ah, William, great.
00:16:35.262 - 00:16:53.130, Speaker A: You can take latex notes for today. That would be brilliant. Thank you. Yes. So probably we can make a. I mean, it depends if people are willing to continue taking latex notes, but if people are, we could make like an overleaf or something and have a. This continuing throughout.
00:16:53.130 - 00:17:14.294, Speaker A: But as I say, Olivia, if the handwriting is too poor at any one point, just. Just put in the chat and I'll stop and correct the relevant bit. I will probably repeat the words when it becomes important for the definitions and firms, enough that hopefully you can follow. But when it's just sentences that really. It's. I'm rephrasing anyway. Verbally, maybe it doesn't matter so much.
00:17:14.294 - 00:17:44.584, Speaker A: Okay, I think I got the. Yeah, got the questions. Good. Okay. And then we'll use multigraph, of course, just to say when you are specifically allowed loops and or parallel edges, then we'll use multigraph. Okay, so what do we want to do with our graph? We want to think of it as a physical structure, and then we want to understand if you can deform that structure. So, for example, if you have the wall of a building, you don't want that to be able to move.
00:17:44.584 - 00:18:16.954, Speaker A: But if you have a piece of paper, then obviously it can bend around and flex about. So this sort of difference, we want to make this sort of mathematical and relevant to important applications. So we start with a realization. So this is. Thanks. So a realization is a map which assigns positions in d dimensional euclidean space to the. The vertices of your graph.
00:18:16.954 - 00:18:59.780, Speaker A: And what we're really interested in are frameworks. So frameworks are pairs, an ordered pair gp, where g is a finite graph and p is the realization assigning positions to the vertices. So very simple, we can do an example. So if I take c four, so c sub n is my notation for the cycle and n vertices, I think that's standard. If I take c four and I could choose the map p which sends one of the vertices to the origin, one to put it on the axis, one to be on the y axis, and one to one one. And so I could map my c four into a square in two dimensional real space. So this is the sort of object we then want to study.
00:18:59.780 - 00:19:51.706, Speaker A: And the key thing that we want to do is that by mapping the square like this, I've given the four edges unit lengths, but in general I could give them any lengths you like, but when I've given them the graph lengths for the edges in the framework, then those edge lengths will be fixed and I want to understand how those edges constrain the way the shape of the graph can be drawn. Okay, so I guess you don't need to read this paragraph. The point is that we really want to use the sort of english definition of rigid. And is the edge length zero? Okay, yes. So in my map p, I did not make any assumption about the map being injected or anything like that. You could have had vertices in the same place. You could have had edges of the same length.
00:19:51.706 - 00:20:38.614, Speaker A: It may be that you want this for certain reasons. So there is one lecture later in the course where we will deliberately be aiming for vertices to be coincident, but in general we will not want to have this sort of problem. So I'll explain shortly about what we really want to talk about is generic frameworks, and the generic assumption will rule out zero length edges or coincident points or sort of geometric degeneracies of this kind. So in the end we won't have zero length edges, we'll have sort of generic lengths for all the edges under certain conditions. But for now the p can be absolutely anything you like. It can be zero lengths, yes. So as I was saying, we want to have the, the english definition really of the word rigid or flexible.
00:20:38.614 - 00:21:50.866, Speaker A: So it's rigid if it's like a wall that you can't change its, its shape without a huge amount of exterior force, and it's flexible. If it's like a piece of paper where you can just fold it up completely easily, it will just flop around and it really will change its shape without any difficulty. And in the case of frameworks, what I mean by without any difficulty is the graph will be preserved and the edge lengths will be preserved, but it will somehow change its shape anyway. And the reason we study rigidity is because it has a surprisingly large amount of practical applications for a pure mathematical topic. And the applications range from sort of the stability of bridges and civil engineering to understanding DNA proteins and molecules in protein structure determination. Okay, so I guess I've got a sort of haphazard sequence of thoughts about frameworks to try and build up your intuition before we have some formal definitions of rigidity. So the first one is, well, what happens if you have just a single vertex, and let's say it lives in two dimensional space, then it has two degrees of freedom.
00:21:50.866 - 00:22:29.478, Speaker A: And by degrees of freedom, I mean that vertex can move around in two independent ways. So of course it could move on a diagonal or something, but you can express that as a combination of the other two. So we can think of it as having two independent ways it can move around the space or two degrees of freedom. And so in d dimensions, does anyone have a reference for DNA protein applications? If there's someone applied and who can do a better job than me, I will let them answer in the chat. But there is. Donald Jacobs is a person to Google, I think. So, if you Google Don Jacobs.
00:22:29.478 - 00:23:18.254, Speaker A: So I'm sure you'll find some nice work. If I remember rightly, he's a biologist, but I think he's the right person I'm thinking of and has. Yeah, thanks, Sean. So Ileana Stranu has a lot of stuff on materials that will head you in this direction as well. Okay, so for example, I was saying about degrees of freedom. So if we have one vertex in d dimensions, it'll have d degrees of freedom if you have two vertices and each independently have their d degrees of freedom. But if you imagine then, that you constrain the distance between them with some edge that has to have length, say not d, that's about to be a bad choice, length, f, then these two vertices are now constrained to move together.
00:23:18.254 - 00:24:03.500, Speaker A: So in some sense, we've removed one of the degrees of freedom, which would be the two vertices moved apart. And so in some sense, rigidity is studying how many constraints and edges you need to rule out all of the different degrees of freedoms coming from the vertices. So as I say here, in some sense, we want the edge set to cancel out the degrees of freedom that you have d at each vertex. And so we're going to be looking for graphs that roughly have number of edges is about d times the number of vertices. So these are relatively sparse. The number of edges is always going to be linear in the number of vertices. But of course it can be true that imagine you have some really rigid thing that's not complete.
00:24:03.500 - 00:24:49.294, Speaker A: I haven't said what rigid is yet, but you could imagine if it's rigid but not a complete graph. Adding an extra edge in won't rule out any more degrees of freedom, because it won't be an independent constraint of what happened. So while we want e to cancel out the degrees of freedom, we also need to be careful that the constraints given by e are independent of each other as well, otherwise they don't have any more effect. And so we would need extra ones again, okay, so again, still more intuition. So what we're going to do, and we think of these frameworks GP as bar joint frameworks, like I say here. So a bar joint framework is a collection of stiff bars joined at universal joints. So each vertex is a universal joint.
00:24:49.294 - 00:25:30.154, Speaker A: So imagine it has effectively no size, but it has full rotational degrees of freedom. And so they're located at pv for vertex V, and p is our realization of v. And the edges correspond to fixed length bars. So line segments in d space joining the endpoint. So the bars are straight lines, they can't bend, they can't change their length either shorter or longer. Okay, and so these bar joint frameworks are really what we're going to study in the, what does universal imply? So I just mean by universal joints that they have the full rotational degrees of freedom. They can rotate essentially all the way around.
00:25:30.154 - 00:26:33.364, Speaker A: So the bar joint frameworks are what we're going to study in, I think, all but one lecture, but certainly the majority of them, and they're really the general model that we're interested in. So you can have special cases where you have more geometrically special things, but bar joint frameworks actually encompass really the full generality we want to study in this course. So let's go back to our example, c four, the four cycle. It is a modeling assumption, Wilson. So I don't know if there's anyone with the engineering expertise on to tell me the answer to does there exist a universal joint? But yeah, it's an assumption. So in applications you tend to see them using more things like hinges rather than the full generality. But the full generality, if you could answer it, will tell you everything you want about, say, panel and in structures or things of this type where you are doing a more applicable thing.
00:26:33.364 - 00:27:01.588, Speaker A: Okay, so stick. Yes, as I said, sticking with the example of the four cycles. C four. The question really is how else can you draw the graph with the same length? So we started with it as a square. Of course you could have coincident points like was mentioned in a question before, and just draw it very flat. But you can also do lots and lots of other things. In particular, I've tried to illustrate with the colors here, an actual motion.
00:27:01.588 - 00:27:47.836, Speaker A: So you can imagine that this, the bottom two vertices are fixed and the top left vertex, say a, is continuously moving along the sort of path to the blue, to the green, down to the red at the bottom. And the vertex b is continuously moving the other way. And so this will be a sort of example of what we will call a continuous motion, or a finite motion is sometimes called of the frame. So this is a sort of demonstration that this graph, or this framework of the graph is not rigid. But we haven't defined the these terms yet. But this is just to give you the idea, if my drawing is not good enough, they all should have the red, green, blue and black should all be unit length, edges everywhere. That's just a drawing problem.
00:27:47.836 - 00:28:46.704, Speaker A: You can actually do this, you can visualize this for yourself. I'm sure you can probably find videos on YouTube of actual structures that have been made, physical things, maybe with popsicle sticks or something, and watch it actually move. And actually, this is something that rigidity folk like to do, is actually build physical models. You can buy things like magnetics and build your structures and just check or decide just by looking, by doing the building to see if they are rigid. Of course, as will says, universal joints is maybe a slight issue for this, but you can get at least good enough approximation to see a lot of the time what's going to going to happen before you have to try and improve it. Okay, so let's get a little bit more, more formal, just with a couple of definitions. So I want to have a graph G, but I'm going to have two different maps, so two different realizations of the vertices into euclidean d space.
00:28:46.704 - 00:29:39.554, Speaker A: So I get a framework GP and I get another framework Gq. And I say that the two frameworks are equivalent if the, the lengths of the edges are the same in both. So I take the usual euclidean distance. And so for an edge vij, I want to know that the position of vi minus the position of Vj, so that line segment representing the bar from Pvi to Pvj, that length is the same as the corresponding line segment in the realization queue in the framework Gq. So these two, the edge lengths in GP and the edge lengths in Gq are the same, then the two frameworks are called equivalent. So if you like, this picture was a sequence of equivalent frameworks, starting with the black one and finishing with the red one. And you can imagine there were continuously many along the, the path between them.
00:29:39.554 - 00:30:04.808, Speaker A: Okay, Alex, there's a question here. The finite motion seems to be diffiomov to a circle for the c four. Yes, as long as I didn't put the positions in such in a horrible way. To start with. How much is known about describing the complete topology of the spaces formed by flexors of these? I don't think all that much is known. So there is a. A really nice book.
00:30:04.808 - 00:30:34.756, Speaker A: It's called something like an invitation to topological robotics by Michael Farber. So it's by Michael Farber, who's at Queen Mary in London. And so they, they do a lot of topological analysis of exactly what the configuration spaces. If you don't know what that word is, don't worry, it'll come up later. What the configuration spaces of flexible frameworks. And so they can actually do it, but they can't do it for much. Very high generality, I don't think.
00:30:34.756 - 00:31:03.664, Speaker A: I think it's for quite small graphs, and it's quite difficult even for small graphs. Obviously, a four cycle is particularly simple, but they can't get very big. Okay, so again, I have this equivalence conditions. So I have my two. My two frameworks are the same graph, GP and Gq. They're equivalent if all the edge lengths are the same. So effectively, what I'm saying here is that this gives me a system of polynomial equations, quadratic equations.
00:31:03.664 - 00:31:59.776, Speaker A: And when I say quadratic, I mean, well, why don't we put squares on to make them quadratic? So we forget about the square root in the euclidean distance, because we're always taking distances so we can move to the square without having any problems. So we get a system of quadratic equations, one for every edge. The variables of these quadratic equations are the vertex coordinates in GP, and we're interested in all the vertex coordinates. The solutions will be the vertex coordinates of the frameworks which satisfy the system of equations. But the complication is, from a sort of algebraic geometry perspective, is we're interested in the real solution set. Okay? And so, as we said before, each edge gives a constraint, and so it gives another equation that we must be satisfied. So the more and more equations we have, the harder it will be to have solutions.
00:31:59.776 - 00:32:46.904, Speaker A: And so the more likely we are to get rid of the infinitely many solutions like you had in the four cycle and move down towards a finite number or unique solutions. But there's always a problem with that. So the problem, probably a lot of you can see already know the problem is you can never get rid of translations and rotations. So there will always be the fact that I could draw my, say my four cycle here and I could also draw the same thing here just by translating all four vertices in the x direction in the plane. So we will never be able to get rid of translations and very similarly we'll never be able to get rid of rotations or reflections. So whatever we add to it will only constrain distances within the graph. We'll never be able to stop it from just moving as one whole rigid body by an isometric transformation of the space.
00:32:46.904 - 00:33:34.564, Speaker A: Okay, okay. So the, the point though is that these operations, translations, rotations and reflections, generate the, the Euclidean group, which is the, just the, simply the group of transformations of RD that preserve distances between any pair of points. And this group was going to be important for us. Mainly it's going to be important because we care about its dimension. And the dimension of the group will determine the, the count on number of edges and vertices we want to worry about in graphs because these are the degrees of freedom that we can't rule out. Remember said before that we had d mod b degrees of freedom? We can never rule out the ones coming from the, oops, that's not good. We can never rule out the ones coming from the euclidean group.
00:33:34.564 - 00:34:17.231, Speaker A: So we'll always have the dimension of this euclidean group to subtract off here. And we say the dimension in a moment, it's d plus one, choose two. So this euclidean group, of course it depends only on the dimension and it's generated by translation in each direction. So in the D coordinate directions independently generate the translations. And we have deep choose two independent rotations. So if we, on the line there aren't any, in r two, there's only rotation about the, the origin. This is to rule out congruent frameworks, correct? Yeah, I'm going to define congruent frameworks in a bit.
00:34:17.231 - 00:34:51.780, Speaker A: And yet congruent frameworks will be exactly the ones you obtain by these translations, rotations and reflections. So yes, yes. And then in three reals you could do rotations about axes, about the x, y and z axes would generate all of the three dimensional rotational group in r three. Then in r four there are six and so on. And as I said, in general, the dimension of the Euclidean group is d plus one. Choose two, and then this number is important because it tells us how many degrees of freedom of the d mod v, degrees of freedom we can't rule out. And so it will tell us the sort of count on the graphs we want.
00:34:51.780 - 00:35:43.216, Speaker A: Notice the dimension was translations plus rotations, because of course reflections are finite. They only generate discrete subgroups so they don't add to the dimension. Okay, so what happens is that in some sense, whatever complicated way you want to do it, however simple minded way you want to do it, we forget about isometries. So you can do this by quotienting by the Euclidean group and looking at quotient spaces, or you can do this by what I will do later in the course, which is called standard position, where you just forget it's possible for one vertex to move and that hence you can't translate anymore. Say, but we'll come back to that. In some sense you forget isometries exist. And then the set of real solutions to the system of edge length equations can either have a unique solution, it could have finitely many solutions, or it could have infinitely many.
00:35:43.216 - 00:36:17.748, Speaker A: Well, given that GP satisfies it, so clearly there is at least one as that GP you start with. But if there are other gqs that aren't just isometries of GP, then there are either finitely many or infinitely many. And this trichotomy into one finitely many and infinitely many is basically what we're interested in, in rigidity. So if there's a unique solution, then it'll be what I call globally rigid definition to come. If there are finitely many, but it's not. If there are finitely many, then it's rigid. And globally rigid will typically imply rigid.
00:36:17.748 - 00:36:59.412, Speaker A: But if there are finitely many, it's not one, then it's not globally rigid, and infinitely many will imply flexible. So like in our four cycle example, we could see an infinite path of motions of the four cycle so that one will be flexible. Let me continue on before I get to the formal definitions. So we had this definition of equivalence for our two frameworks on the same graph, GP and Gq. We said they were equivalent if the lengths were the same for all the edges. So let's say exactly the same thing and I'll be consistent, not have the squares in there to start with. Let's say the same thing, but instead of saying it for edges, we're going to say it for pairs of vertices instead.
00:36:59.412 - 00:37:38.648, Speaker A: So before we said that the distances must be the same for all edges. Now I'm saying the distances are the same for all pairs of vertices, whether they define an edge or not. And that if that's true, then the two frameworks are congruent. Okay, so of course, if g is the complete graph on n vertices for some n, then congruence and equivalence are the same because all pairs of vertices define edges. But if it's not, then it's strictly stronger condition to be congruent than it is to be equivalent. For example, in the four cycle, if they were congruent, they would have the same lengths for the diagonals. But what we saw was from a square to a very flat shape.
00:37:38.648 - 00:38:32.348, Speaker A: That's an incredibly bad drawing, sorry. But, but the distance here and here are obviously much different, so they would not have been congruent. Even if they were drawn well enough to be equivalent, they would still not be congruent. And so effectively, rigidity and global rigidity are studying when equivalence implies congruence. So when it's enough to say the edge lengths are fixed to force all the vertex pairs to be fixed, distances between all the vertex pairs to be fixed. Okay? And I think as William hinted at with the question, if g, Gp and Gq are congruent, this is exactly equivalent statement to saying that Gq can be obtained from GP by an isometry of RD by a composition of translations, rotations and reflections. Okay, so here's our, again, it's slightly informal still, but then more formally in a moment.
00:38:32.348 - 00:39:14.814, Speaker A: So a framework is rigid, it's important to say in RD because the dimension is important. We'll see that in a moment. In an example, the framework is rigid if every edge length preserving, so the edge lengths are fixed, continuous motion. We have to move continuously from one to another. We can't do discrete jumps, arises as an isometry of RD. So more formally, the framework is rigid if there exists some epsilon, some small epsilon, such that if Gq was equivalent to GP, and the positions of the vertices in p and u are sufficiently close together, they're within epsilon of each other. For all vertex, all vertices u, then the two frameworks are actually congruent.
00:39:14.814 - 00:39:47.380, Speaker A: So again, this maybe sounds a little bit to digest, but I just want to see examples for now, to try and get a clear, we were just already said that equivalence and congruence are the same thing for complete graphs. So it's clearly true that they're always rigid. In, let's have a non trivial example. So in two reals, let's look at this example and four vertices. It's the complete graph in four vertices minus one edge. This is actually rigid in r two. So how to see that? So let's start with the fact that a complete graph is rigid.
00:39:47.380 - 00:40:29.066, Speaker A: So the sub graph on three vertices on the left is k three. That's clearly rigid. And now imagine that this final vertex, call it v, had degree one instead of two. Then what would it do? Well, if we forget about isometries, then really you can imagine that this vertex doesn't move. And if that vertex doesn't move, then this vertex v must move on a circle centered at the squared off vertex, when the radius of the circle is the length of this edge. So you can see that this moves on a circle. So this is an even easier version of Alex's comment about the, the configuration space being diffeomorphic to a circle.
00:40:29.066 - 00:41:12.384, Speaker A: It really is just exactly a circle. But now you can imagine the, you had the other degree one option for b, it had the other neighbor here instead, and then it would move on its own circle. And you would think about how do these two circles intersect? Well, in general, if you have two circles in the plane, they will intersect twice. And if you're at this point for GP, yes, you could have a second realization at GQ, but, but you can't get between them in a continuous way. That would be a discrete jump, so it wouldn't be possible to have a continuous motion between the two. So again, this is very informal. I didn't prove anything, but this is roughly trying to convince you that adding a degree two vertex like this to a complete graph will preserve rigidity.
00:41:12.384 - 00:41:52.038, Speaker A: And it's hopefully given you a little bit of intuition for what's going on. Another kind of obvious statement, anything that's disconnected is clearly not rigid. So if it's disconnected, you can imagine it has a connected component and then the rest of the graph, however many components there are over there. But just fix this one component and continuously translate the other one away. And there, there is, it's not an isometry because it's not a translation of the entire object, because this part here was fixed, whereas the part on the right moves. So this is an easy demonstration of a not rigid graph. And we call not rigid, not rigid framework, sorry.
00:41:52.038 - 00:42:27.254, Speaker A: And we call not rigid frameworks flexible. Okay, so that's rigidity and flexibility, at least in some kind of intuition for them. Next we have the global rigidity, where we talked about unique realizations. So here the definition is that the framework is globally rigid. Again, in RD, if every equivalent framework is congruent. So if equivalence implies congruence. So the only possible way that you could redraw your graph in RD with the same edge lengths is as an isometry of the original framework.
00:42:27.254 - 00:43:14.096, Speaker A: So again, complete graphs are globally rigid because equivalence and concurrence are the same things. The graph we just talked about in two reals, this four vertex example, is not. So what you can do here, you can find a second realization, like I showed on the two circles. You can move from one to the other. Or in more elementary terms, all you need to do is take a line through these two vertices and reflect one side. So if I fix this one and reflect the other one across that line, then I get something that looks like this, where very clearly this distance between these two vertices is different to the long distance here, so they are not congruent. So these are two equivalent frameworks that are not congruent.
00:43:14.096 - 00:43:38.154, Speaker A: And so the definition of global rigidity was that every equivalent framework is congruent. And so these two demonstrate that that's not true and hence it's not globally rigid. Global rigidity is much harder to understand in general, and rigidity. So we will focus on rigidity in the first part of the course and move to global rigidity after at least a couple of weeks into the course. Okay, so more observations.
00:43:41.614 - 00:43:47.514, Speaker B: Could you just scan back up to your definition of rigidity?
00:43:47.894 - 00:43:50.574, Speaker A: Sure. Just for a second. Yeah.
00:43:50.614 - 00:44:10.826, Speaker B: The epsilon, I'm just trying to parse it. So you're asking that if P. So if the same vertex in G is close, is sufficiently close in each of the two realizations, then two realizations have to be congruent.
00:44:10.970 - 00:44:11.530, Speaker A: Yes.
00:44:11.642 - 00:44:12.458, Speaker B: I see.
00:44:12.626 - 00:44:56.708, Speaker A: Okay, so this is sufficiently close is encoding the word continuous in the moving between the two. So if we don't have, if we take away this condition, then we're really saying every equivalent framework is congruent, but that allows the sort of discrete jumps in global rigidity. So this is a way of saying sufficiently close to where you were. It's. To be honest, it's not quite obvious why all the different definitions of continuous rigidity that you might think of are all the same. There's a paper that goes through, improves all these things, and I roughly planned that to be one of the lectures later on to really go into the details of why these different kinds of rigidity all give you the same definition. So maybe it's not completely obvious at this point, but I wanted to give it formally just to, so you could see it once at this point.
00:44:56.876 - 00:44:57.624, Speaker B: Thanks.
00:45:01.964 - 00:45:16.024, Speaker A: Okay, I think I was up to you. Oh, and by the way. Thank you all for all the questions. I much prefer to be interactive than me just talking to my laptop screen for an hour. It does mean I'm going to take probably the full hour, but that's, that's fine by me. And hopefully it's good for you too.
00:45:16.964 - 00:45:33.180, Speaker C: Doctor Nixon, I had a quick question. I was copying down the definition we were just discussing. Was it? We said that they had to be equivalent. But you had the edge length. Yeah, right there. Less than epsilon. So we're not requiring that.
00:45:33.372 - 00:45:59.994, Speaker A: So this is not an edge length. No, this is pu and qu. This is saying that the points in gp, so the vertex u and gp is very close to the vertex u and gq. And so the vertex u in the two realizations are close, the vertex v and the two realizations are close, the vertex t and the two realizations are close together. So that's only a condition about vertices, they're still equivalent. So the edge lengths are still the same in both of them.
00:46:00.454 - 00:46:01.514, Speaker C: Okay, thanks.
00:46:03.454 - 00:46:24.496, Speaker A: Okay. Okay, so, yeah, I was up to here. So the dimension is important. So I kept saying it was in RD. So just a quick illustration of that. This graph, or this framework that we just showed was rigid in two reals. Notice it's very easily, you can easily see it's flexible in three reals.
00:46:24.496 - 00:47:02.644, Speaker A: So you could imagine the line here is a hinge and the two triangles share an edge and you could rotate the two about that hinge. So in three dimensional space, this would be a flexible framework, but it was rigid in r two. It would also be rigid in one dimension, but flexible in all dimensions higher than three as well. And then. So I guess this was hinted at by one of the questions, that rigidity really does depend on both the realization and the graph. So I keep saying rigid. A graph is rigid because I like to think about rigidity of graphs.
00:47:02.644 - 00:47:46.538, Speaker A: But to get there, we need to make some assumptions. So it's easy to see that rigidity depends also on p if you're allowed arbitrary realization. So for example, our four cycle example, if you realize as a square or most possible realizations, and it's flexible, but you can make it rigid by doing, for example, a silly thing. So if you put two of the adjacent vertices in the same place, then you have a zero length edge. But that zero length edge forces these two vertices to be locked in the same position. So by realizing it with a zero length edge, you effectively turn it into a free cycle instead, which is a complete graph and hence rigid. So the p really matters in the rigidity as well.
00:47:46.538 - 00:48:39.784, Speaker A: But I want to move towards where it doesn't matter so much. The reason I want to move to where it doesn't matter so much is the following two results. So this is a sort of complexity of testing rigidity. So I give you a framework, and you have to decide, is it rigid? You have to decide, is it globally rigid? So in the late seventies, SACs showed that it's NP hard to decide if a given framework in RD is globally rigid, and that's true for any dimension. And then more recently, Abbott showed that as long as it's not dimension one, where things are easier, in dimension at least two, it's still an NP hard problem to decide rigidity, the sort of easier problem of the two. But in general, computationally, it's a challenge to determine rigidity for given frameworks. And as I showed just now, the answer depends on P as well as the graph.
00:48:39.784 - 00:49:22.468, Speaker A: So I want to get rid of both of those issues. And the way we'll do it is to put a very strong assumption in the course. So we will assume that our frameworks are generic. And by generic, I'm going to take one particular meaning of generic. So typically it has standard meanings in algebraic geometry, but I'm going to take one particular meaning, which is that if you write the coordinates of all the vertices in your framework as a set, then that set of coordinates forms an algebraically independent set over the rationals. So this is really strong. So, for example, you can note that any element in an algebraically independent set is a transcendental number.
00:49:22.468 - 00:50:24.420, Speaker A: So we're automatically assuming that there's no integer coordinates, there's no rational coordinates, there's not even any algebraic coordinates in it. So if you're trying to do a computation by a computer or something, then you have to worry about up to a certain amount of precision in the decimal expansions and this sort of thing. And of course, it's probably unrealistic in most applications that we can measure the locations of things sufficiently accurately for algebraic independence to have any great meaning. But it does have some really nice properties that help us and tell us what happens almost all of the time and gives us a real understanding of the sort of general case of what happens. You can in various ways weaken the definition of genericity. Sorry? Yeah, you can weaken the definition genericity a bit. I'll show one trivial way of doing that.
00:50:24.420 - 00:51:31.170, Speaker A: But I want to have one definition of generic that really covers all the results I'll do, rather than saying in this result I can get away with something weaker, which often you can, but not always. So let's just say generic all the time, because then we don't need to worry too much about the geometric complications that can come up. Okay? So there's a nice fact is that almost all frameworks are, are generic. And so this is, in a sense, the set of generic set of algebraically independent ones are dense in all possible realizations. So choosing a p that's generic is a sort of what you're likely to get if you made a random choice of a vector in r to the d mod v. So if I pick q at random in R dv, then with high probability it will be at least one that gives the same answer as the generic case. Okay? And then the crucial thing, that if I look at generic frameworks, then rigidity and global rigidity depend only on the graph.
00:51:31.170 - 00:52:06.962, Speaker A: So there is nothing like the silly example I gave where the four cycle became rigid by having a weird realization. So if GP is rigid, then if it's rigid for any p, in fact, if it's just rigid for any p you like, then every generic framework is rigid. So all possible algebraically independent ones will be rigid too. And the same is true for globally rigid. So if you find one globally rigid framework, then all generic ones are globally rigid. But there's a catch here that none of what I just said is obvious. It's not obvious why that's true.
00:52:06.962 - 00:52:55.526, Speaker A: We will return to it later. And especially in the global rigidity case, it's a very deep result, which we won't even try to go into the proof of, but the rigidity of results, not so hard. And we'll come back and understand a bit about why they are true. And the key thing, which we haven't done any of yet in this lecture, is that the generic assumption allows us to study linear algebra and then move on to combinatorics. I said you can weaken generic slightly. So one obvious way you could do this is if you apply an isometry to a generic framework. I said every coordinate in a generic framework is a transcendental number, but clearly I could just take some x coordinate and translate it by minus whatever that coordinate is and put it at zero, and then you would have a non transcendental number in your, your set, so it wouldn't be algebraically independent anymore.
00:52:55.526 - 00:53:34.942, Speaker A: But it should be obvious, hopefully, that if you're rigid and you apply an isometry, it's still rigid. If you're globally rigid and you apply an isometry, say a translation, you're still globally rigid. So that that shouldn't really, um, cause any issues, but the definition of generic, um, could be weakened in that way. Okay, so I, I've just got up to the sketch of the, the content of the course. So that's for the last four minutes. I'd rather answer questions if people have them, but, um, I'll just keep an eye on the chat as I go to the, um, through this, this list. So my list has.
00:53:34.942 - 00:54:02.392, Speaker A: Most things are just have a dash by them, but some of them have a plus. And that plus indicates that these are the ones that are likely to have a different lecturer. But I have someone in mind who might be more appropriate than me to give the lecture. So those topics may have guest lectures. Each of these items may need more than one lecture. I'm not 100% sure yet on that. So the first thing we're going to do after the winter school is study what's called infinitesimal rigidity.
00:54:02.392 - 00:54:41.604, Speaker A: So this is where linear algebra comes in. Effectively, you differentiate the quadratic edge length equations to turn continuous motions into what are called infinitesimal motions, and you study a rigidity matrix. So it's nice linear algebra. The next thing I'll do, and this, I guess this is the thing that's key if any of you are here, because you're in Meera's course and she wanted you to come to learn certain things in my course. So I think the main thing she wants is the understanding of combinatorial characterization of generic rigidity in two dimensions. So that's the second topic in this course. It'll be relatively early after the winter school in this module.
00:54:41.604 - 00:55:39.462, Speaker A: Then we'll have some sort of pebble game algorithms and sort of combinatorial consequences or alternative characterizations of rigidity. And then we'll have what I mentioned to Will's question, that we'll talk about the equivalence between various different types of rigidity. In particular, there's a nice paper of Asimar and Roth where they prove that generically we can move from rigidity to looking at rigidity matrices and then talk about the rigidity matriid. So I'll have to introduce, I will have already before this, have introduced matriids a bit. But if you don't know, don't worry for now, they will be introduced. But looking at the rank function of the rigidity matriid, talking about rigidity and dimension greater than or equal to three, notice up here, we'll only be able to work in dimension one or two. In dimension at least three more interesting things happen and there's lots of complications and lots of special cases that we can talk in detail about over a few lectures.
00:55:39.462 - 00:56:33.924, Speaker A: One particular aspect of that will be the idea of coning, which leads us into talking about frameworks on the sphere. And then there's several more topics which, since we've only got two minutes before the hour is up, I probably won't say anything more about. You can welcome to read them. As I stop and wait for questions, maybe I can just skip past grid bracing and complete bipartite graphs, which are kind of special, so that you can see all of the topics. In particular, the last one I wasn't planning to mention, but I think Mira yesterday said that she was expecting it in my course, so it's there towards the end, if I have time. And probably I would hope that someone like Bob Connolly, who's the real expert on this topic, might be willing to volunteer to talk about prestress stability. And this is where you get towards things like universal rigidity and convex optimization kind of problems.
00:56:33.924 - 00:57:10.474, Speaker A: I think there's a. There's a. Mira's saying yes, so Mira has some, some really nice papers about the molecular kind of thing. So the question before, maybe I should have remembered to mention Mira's work. And is there a reference for more real world examples and applications? So the ones Meera has just put in would be great. There are. I think that Mira's handbook of geometric constraint systems principles that I mentioned at the start is probably a good place to start looking for applications.
00:57:10.474 - 00:58:04.024, Speaker A: There are many different types of applications, so you can look in sensor network localization problems, you can look in control of robotic formation problems. There are structural engineers who are interested in rigidity for various building applications. There's a nice thing you might do is if we do get to tensegrities, there's something called a tensegrid tree, which I don't know if I've spelt it right, but they've built on the university campus somewhere in the UK. Simon guest is the. The engineer who's led on this. They built a really like, looking like a tree built up of frameworks where tensegrity is a generalization of framework, where some edges can shorten but not lengthen, and some can lengthen but not shorten. So it's a generalization, but it leads to nice applications as well.
00:58:04.024 - 00:58:44.964, Speaker A: Here's a question. Can a generic framework have two or more coincidence points? No. So if it's generic, all the vertex locations are distinct, that's for sure. So in one of the lectures. So here I will talk about frameworks which have two coincidence points but everything else is generic. But no, no coincident points are allowed if you're generic. Is there a platform for this course for students to discuss? So I haven't made one specifically for the course, but what we have for the thematic program.
00:58:44.964 - 00:59:12.528, Speaker A: Let me just get the. For the entire thematic program we have a. Discord is discord. Yeah, discord's the right word. We have a discord channel. And so if I send the invitation in the chat now, hopefully that will work. Oh, sorry, I need to send it to all so then we can easily in discord.
00:59:12.528 - 00:59:46.264, Speaker A: I think that would be a good place for you guys to talk about it. If you mean something more than what discord can provide, then I don't know. In the UK we use Moodle, but I don't think I have this facility to set up a Moodle page and invite people who aren't at my university. Okay, so sorry for going a bit over time. If anyone has any further questions, I'm happy to hang around while you ask, but feel free to head off to your other activities if you prefer.
00:59:58.344 - 01:00:34.584, Speaker B: Hi Tony, it's Will Travis commenting. Hi, thanks for a really nice talk. I'm just starting to get interested in rigidity and combinatorial rigidity and it's very nice to see everything built up nicely and basically from the ground up. And I appreciate that. I know there's lots of experts in the audience too, but for those of us that aren't experts or claim not to be experts, then I really appreciate it.
01:00:34.744 - 01:00:45.120, Speaker A: Thanks. The experts are not my intended audience, so I sort of imagined you might be one of the ones who was a bit bored by the level I was, set it up, but I'm glad to hear it was nice.
01:00:45.312 - 01:00:46.044, Speaker B: Good.
01:00:46.984 - 01:01:15.844, Speaker A: Actually, Tony, on that note. So are you going to post? Post like a day by day schedule maybe? Like just the, like before the lectures. Just so because there's like some stuff in here that. Yeah, I don't know, I would be more interested than others just as far as like having already seen it, like. Yeah. Will there be anything like that? Yes, in theory it's sort of being created as I go. So I've now got something like twelve of the lectures I've made the notes for.
01:01:15.844 - 01:01:30.372, Speaker A: So as soon as I'm sufficiently confident I know what's going to be there. But certainly in advance of the week, I'll put a title for each of the free talks that week, which should give you a good hint as to whether it's something you already know everything about Daniel or something that you might not have seen.
01:01:30.548 - 01:01:31.164, Speaker C: Okay, perfect.
01:01:31.204 - 01:01:34.384, Speaker A: Yeah, that's plenty of advance notice. Thanks.
01:01:54.784 - 01:01:58.284, Speaker C: Doctor Nixon. Should I just email the lecture notes to you?
01:01:59.624 - 01:02:05.488, Speaker A: Oh, yes. Was that William? Yeah, yeah, yeah. Please, please do. Thank you.
01:02:05.656 - 01:02:12.218, Speaker C: Okay. I was just. Once the recording's up, I was going to go back over it to see if I missed anything, and then I'll send it over then.
01:02:12.386 - 01:02:45.906, Speaker A: Great. Yeah, yeah. In your own time, because obviously there's no lecture for two weeks, so there's plenty of time. Thank you. Is there any specific name for flexible frameworks with only one degree of freedom? So probably they're called mechanisms. Sometimes. But sometimes mechanism is used more generally than one degree of freedom.
01:02:45.906 - 01:03:01.754, Speaker A: But I would think mechanism quite often in the literature would refer to this. Yes, as Meera says, sometimes we just call them one DoF frameworks, but I think mechanism can be used as a term. It's the only one I've heard for this.
