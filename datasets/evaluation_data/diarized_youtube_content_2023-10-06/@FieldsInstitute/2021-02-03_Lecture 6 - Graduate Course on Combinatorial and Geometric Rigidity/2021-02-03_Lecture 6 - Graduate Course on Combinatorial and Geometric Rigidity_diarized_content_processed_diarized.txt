00:00:00.280 - 00:00:50.906, Speaker A: So two lectures ago I had the technical issues. And so basically I'm going to start by finishing off the things I didn't have time to mention then because of the technical issues. So it's a bit of a jump back to before lef Harris's talk. So, if you remember, we were at the point where we'd proved Leman's theorem, the polar CEC Geringer theorem. So we characterized generic rigidity in two dimensional euclidean space, and we did this by a recursive construction of two free tight graphs. And then by, and we'd already shown that the operations that we used then zero and one extensions, preserved minimal rigidity. So I did talk a little bit informally, a little bit about this, but I wanted to talk about further recursive operations to start this lecture.
00:00:50.906 - 00:01:32.110, Speaker A: So I guess what I say here is that in some sense we were lucky that zero extensions and one extensions gave us all two free tight graphs. And this is really we're going to see, but this is really one of the major problems that happens when you move to higher dimensions. So it becomes, it's no longer true that you get all the graphs that you would like from these operations. So we talked about the d dimensional versions of these operations, and we showed they preserved rigidity in dimension D. So if they got everything, we'd be really happy, because it gives us everything. But they don't. There are lots of graphs that you cannot obtain from some small base graph by these operations in dimension at least three.
00:01:32.110 - 00:02:05.494, Speaker A: So before we move on and talking about dimension three, I thought we'd talk about some further recursive operations. And then this motivates looking at planar graphs, which is what we'll spend most of this lecture doing. Okay, so the first one, I did mention it briefly, but here it is in more detail. So an x replacement operation, if you like, this is a version of two extensions. So zero extension deleted zero edges and added a new vertex. One extension deleted one edge and added a new vertex. X replacement, deletes two edges and adds a new vertex.
00:02:05.494 - 00:02:54.280, Speaker A: I say x replacement because it's specifically the case where the two edges you remove are independent. So the four end vertices of the two edges are all distinct. So if you like that, you can think of the two edges as being making a little x. Okay, so we delete two edges, v one, v two and v three, v four, and we add a new vertex v zero and d plus two incident edges. This is the d dimensional version. So for example, in the two dimensional version it would be four incident edges, and you must include the incident edges, must go to v one, to v two, to v three, and v four. So in dimension one, forget about this operation, but in dimension at least two, where it would be that to those four, in dimension three it would be to these four plus one other.
00:02:54.280 - 00:03:28.560, Speaker A: In dimension d it would be to these four plus d minus two others. So we know all these edges. Okay, so here's an exercise. If you want to have a go, consider the two dimensional versions. So I delete two independent edges and add a vertex to degree four adjacent to the four endpoints. Show that this preserves generic rigidity in two dimensions. And so the, the idea would be to, if you remember the argument we used for one extension, we made this special position with a colonier triangle.
00:03:28.560 - 00:04:14.960, Speaker A: Extend that technique, and then, then you might think about why your proof does not extend for higher dimensions. Okay. And the, this maybe makes you wonder, does it work in higher dimensions? Actually, it's a hard open problem to show that x replacement preserves rigidity when d equals free. I think some people may not even conjecture it, decide whether it does or does not preserve rigidity. I believe it's known via computations that there aren't small counterexamples to this. So if the graphs are small, then people have done some computations to show that there's no obvious counterexample. So the sort of expectation would be, I guess, that this preserves rigidity when d equals three.
00:04:14.960 - 00:05:00.952, Speaker A: However, it's not completely clear, because it's known to not preserve rigidity all the time when dimension is at least four. So there's a matroidal kind of rigidity book or combinatorial rigidity by Brigitte and Hermann Servatius and Jack Graver. And in that they, they go through in detail why it fails in dimension at least four. And then the point is, there are graphs which we know are dependent rather than independent, that can be formed by this operation. So I think k 66, the complete bipartite graph in dimension four is the smallest example. But in dimension three, in the middle, it's completely open to show it. So you'll see, if you do the exercise, it's quite relatively easy argument.
00:05:00.952 - 00:05:12.044, Speaker A: So in dimension two, and it's false in dimension four. So dimension three is right in the middle, where it seems it's too hard for us to know the answer yet, but we don't have counterexamples either.
00:05:12.384 - 00:05:16.844, Speaker B: And this would, this would be for like, general position.
00:05:17.904 - 00:05:43.504, Speaker A: Yes. So I guess I'm talking about graphs. So the X replacement would take, you can so, like I defined one extension where I defined the geometric version on the framework. You could define this special position that I'm intending here and show that it preserves rigidity at that special position. But what you really want to know is that if the first graph is generically rigid, then the result of the X replacement is generically rigid. So you really want to know about the generic framework.
00:05:44.364 - 00:05:52.544, Speaker B: Okay, thanks. And then, so if X replacement doesn't preserve rigidity in general, it's only of interest in two dimensions.
00:05:55.124 - 00:06:14.544, Speaker A: So it doesn't preserve rigidity and dimension, at least four. In dimension three, we don't know if it didn't preserve rigidity and dimension three, that would be really interesting. It would tell us something about what's hard in three dimensional space. So that would be really interesting. But dimension two, we know it works. So it's a technique you can use if you need it.
00:06:15.044 - 00:06:20.288, Speaker B: You could almost say that X replacement is only interesting in dimension three then.
00:06:20.476 - 00:06:38.304, Speaker A: Yeah, yeah. So it's easy to show rigidity in dimension two, and it's not really crucial for any of the results I mentioned in this course. In dimension two, maybe it's not interesting. In dimension four, it's false. So maybe it's not interesting yet. So that makes sense. So you might wonder.
00:06:38.304 - 00:07:14.840, Speaker A: So I said here specifically that the two edges were independent. So you can also have a version of a two extension where you delete two edges which are not independent. So you delete two adjacent edges. Here the two edges are adjacent, so you can think of them as a v. So this you can call a v replacement operation. So here you delete two adjacent edges, v one, v two, and v two, v three, say, and you add a new vertex of v zero, and again d plus two incident edges. So the incident edges must go to v one, to v two, to v three, and then to the d minus one.
00:07:14.840 - 00:07:52.652, Speaker A: Other places you want to go. So here's a picture of this operation when d is two. So say you delete the edge v one, v two, the edge v two, v three. You add a new vertex v four, and you add it to, sorry, it should be v zero. You add in a new vertex v zero, and you join it to v one, v two, v three, and to some of the vertex v four. Okay, but notice what happened here. If I look at this vertex here, it lost two edges and it only gained one.
00:07:52.652 - 00:08:29.936, Speaker A: So the degree of v two went down. So, for example, if I give you a two three tight graph g, so one that we know is minimally rigid in 2d, it's possible there's a vertex of degree two. So it's possible. I choose to do this move where v two only has two incident edges, the two you see. And then in this graph, v two has degree one, which clearly can't happen in a rigid framework in 2d. So if the graph on the left was too free tight and this vertex had degree two, then this graph would not be too free tight, it would not be minimally rigid. So this move can be more complicated.
00:08:29.936 - 00:09:14.266, Speaker A: And so that's a sort of easy illustration of what can go wrong. But it can go wrong, and it's a bit more complicated. Reasons you have to look at subgraph conditions to find a way to make this operation preserve the, the sort of tightness condition that you want. So there's a conjecture that's called the double V conjecture that sort of fixes this and conjectures it preserves rigidity in three dimensional space the same way extra placement does. But again, that's open for three dimensional rigidity. Okay, the next operation I want to, to talk about was, is the vertex splitting operation. And so this is sort of motivated by topological graphics.
00:09:14.266 - 00:10:07.506, Speaker A: If you imagine you have a triangulation of a surface, then vertex splitting is one of the major things they use in that. So in terms of rigidity, Walter Wytley introduced this operation and he showed it preserves generic rigidity. So what is it? So you pick a vertex x, and we're going to split x into two vertices. So we have to think about a partition of the edges incident to x. So you pick your x and you choose d minus one edges incident to x. And then you think about the rest of the edges incident to x and partition it into two sets. So x has some d minus one neighbors that we care about, that they'll be special, and then the rest of them are just however many there are, whatever it is.
00:10:07.506 - 00:10:30.594, Speaker A: Maybe they're none, maybe there's lots. Maybe you partition them. So n one is all of them and n two is empty, or some mix however you like. But these ones we really care about, and we're going to specifically tell you what happens to those. And these ones are sort of, okay, they sort of come along for the ride, almost. So we replace x by two vertices, x one x two. That's the split of x into two vertices.
00:10:30.594 - 00:11:15.800, Speaker A: And we replace every edge xw for some w in one of the two sets, n one or n two by an edge xi w, where xi is x one if n. If it was in xw was in n one, and it's x two w if xw was in n two. So maybe it's better just to look at the, the picture. So here's the vertex x we want to split into two. Here's the d minus one neighbors where you care about, and then the sum of the neighbors that we just partition arbitrarily into two sets, however you like. We split x into two vertices, x one and x two. And I forgot to say this bit at the end.
00:11:15.800 - 00:11:45.972, Speaker A: So the key thing is that x one, x two are adjacent and both x one and x two are adjacent to, to each of the Y's. So x one, X two and y one is a triangle. X one, x two and y two is a triangle. X one, x two and Y D minus one is a triangle. So that's what I was saying, saying here. And then n one becomes adjacent to X one and n two becomes adjacent to x two. So I think that is a bit of a mouthful, and probably I didn't explain it in an optimal way.
00:11:45.972 - 00:12:10.962, Speaker A: But just to say it again, let's take the two dimensional case here. What your D minus one for your Y's is just one. So you have x. You pick one special neighbor and then you partition the other neighbors into two sets. In some way, you split x one into two, X into two vertices x one and x two. The x one and x two are adjacent. They're both adjacent to y one.
00:12:10.962 - 00:12:33.244, Speaker A: So this edge becomes a triangle. The edge from X to y one becomes a triangle and x one, x two, y one. And then we partitioned the other neighbors of X into two sets. Some of them go to x one, some of them go to x two. And again, the sizes of those two sets is sort of irrelevant to the argument. They just have to still exist. And we go to one or the other of the two.
00:12:33.244 - 00:12:43.244, Speaker A: So this is the operation. So is it clear what the vertex splitting operation does?
00:12:47.084 - 00:13:03.304, Speaker B: So we can kind of think about it as in reverse time, like the two vertices x one and x two had come together and sat on top of each other, including their edges. And we're just reversing time, like unperturbing it away from the degeneracy.
00:13:03.844 - 00:13:38.616, Speaker A: Sure, I think that's a good way to think of it. So going in this direction, which I'll call edge contraction, I think I define that in a bit, but let's just talk about it now. So there you take two vertices that happen to be in D minus one triangles. So this edge is in one triangle, two triangles up to D minus one triangles. And if you like geometry, it's a graph, so I'm really talking just about graphs. But if you like geometrically, you just push x one and x two closer and closer together until they overlap. And then you make them just into one vertex and have all the adjacencies that you'd expect.
00:13:38.616 - 00:14:21.684, Speaker A: And all these resulting sort of double edges just become single edges up here. Yeah. Okay, so the theorem that whitely proved, I've forgotten to put a year on here, but if you want to look up the reference and you can't find it, feel free to ask me. So what he proved was that if the graph is rigid in d dimensions and G is obtained by the vertex splitting operation, then G is rigid in D dimensions. This is all. So it is true from two reals to two reals, but it's an rd to rd statement. Obviously, if you're rigid in RD, then, then when you project down, you will be rigid lower down a dimension.
00:14:21.684 - 00:15:06.540, Speaker A: So it was true with a two, but it's sort of a much stronger statement to go from D to D if D is large. Okay, so I don't want to prove this theorem to you, but to give you a bit of an idea, the idea is a little bit like what Alex just said. So you start with this graph, and you know it's rigid. You form this graph, but you choose the framework so that p of x one is equal to p of x two. And let's say it's just equal to, to p of x. So really you have on this picture, you have the two vertices on top of each other. And what this gives you is a zero length edge, which is not good.
00:15:06.540 - 00:15:50.930, Speaker A: So say you were minimally rigid before. That zero length edge will be a zero row in the rigidity matrix. So it won't be have full rank anymore. It'd have the right count to be minimally rigid, but it'll have a zero row, so it can't be. However, what Walter does is look at a different kind of matrix to a rigidity matrix called a. A direction network is one name for it, and puts a row for this zero length edge, replaces it with a direction row in some sense, and then shows that you can use this to, when you move from the coincidence to the more generic position, you will have the right rank. The complication really comes from having this zero length edge.
00:15:50.930 - 00:15:57.834, Speaker A: So in a moment, I'm going to give you a variant of this move which doesn't have that. And in that case, the proof is kind of an exercise.
00:15:59.014 - 00:16:22.374, Speaker C: Okay, so maybe, Tony, algebraic geometry probably would have called that blowing up the vertex, giving an extra piece of kind of velocity information or tangent information that indicates kind of what direction the x, uh, vertex is splitting in.
00:16:23.514 - 00:16:25.450, Speaker A: Okay, could be, thanks.
00:16:25.602 - 00:16:27.174, Speaker C: Fun to think about it that way.
00:16:31.954 - 00:17:14.154, Speaker A: Okay, so, so I mean, this again, in two dimensions we know everything. So this is a sort of an operation of the intention of being useful when we're looking in dimension at least three. But it is going to be useful for us in a moment because I want to talk about planar graphs that are too free tied. But before that, as I said, I want to just introduce this sort of the same operation, just a slight variant, and this was also introduced by Whiteley and he calls it spider splitting. So I'm using that name too. So here again you have your partition n one and n two of your vertex that you want to split. This time you have d vertices over here instead of d minus one.
00:17:14.154 - 00:18:05.536, Speaker A: And when I split into v one and v two, so some of the neighbors of v go to v one, some go to v two. All of the special ones y one up to yd become adjacent to both v one and v two. But there's no edge between v one and v two. So there was one more up here which, which allowed me to not have the edge in the middle between v one and v two. So this is, for example, that this doesn't, the previous operation introduced a triangle. So if you're interested in bipartite graphs, say for some application, then this move might be useful, whereas that one couldn't be because it introduced odd cycles. So in this case there is, and let me just say again, just to make sure, so in dimension 2D is two, so there's just a y one and a y two.
00:18:05.536 - 00:18:41.724, Speaker A: And I think it's easier to draw it looking like this. So I split v. So I did have a path of length two, y one to v to y two, and I split that into a four cycle with two new vertices, v one and v two replacing v, and the edges incident to v split among v one and v two. So this is a, I think a nice operation to show that this one preserves infinitesimal rigidity. That's this exercise that I am suggesting here. So here you can do the same thing I was just trying to explain. So you put p of v one and p of v two in the same place where v was.
00:18:41.724 - 00:19:10.630, Speaker A: And so in fact, let's just do the 2d version and I'll do it in an extra step. So I have this and I'm going to do the operation. But I'm not going to split the edges into the two parts. I'm just going to leave them all on one side. So say there was five edges incident to v here. I'm going to put them all incident to v one and just put v two there. Then that operation is easy because this is a zero extension.
00:19:10.630 - 00:20:02.100, Speaker A: And we talked about this operation as preserving rigidity, and it still preserves rigidity if you put v two, if you put p of v two on top of p of v one. So at that, and then at that coincident realization, you use the factor coincident. This I am telling you, you can use the factor coincident to pick an edge like that, delete the row for that edge from the rigidity matrix and input this row in the rigidity matrix. And you can do that by a sequence of row and column operations on the rigidity matrix. So, I mean, it's maybe not so easy, but if you, you want a challenge exercise, you could try and find that sequence of operations. But it's just gaussian elimination. So it might not be the most fun exercise if you don't sort of spot how to do it straight away.
00:20:02.100 - 00:20:35.524, Speaker A: And you can do that one by one. Start with this edge and then pick a second one up and pick a third and up and a fourth one up as many as you need, and just go one by one across. And obviously they're rank preserving operations. Okay, so that's my list of additional operations that occurred to me about d dimensional space. Maybe there are others, but I didn't think too hard. These are the ones that are well known, I think. So, as I said, I wanted to use planar graph, use the vertex splitting operation for planar graphs.
00:20:35.524 - 00:21:24.594, Speaker A: So obviously a planar graph is a graph that you can embed in the plane so that no pair of edges cross. So edges only meet each other at end vertices when the two edges are incident to the same vertex. And there's also, there's a distinction that needs to make between a planar graph, which is just a graph which is possible to embed in the plane, and a plane graphic, which is a graph, and an embedding with no crossings. So k four would be a planar graph. And this particular drawing of k four in the plane shows that it is a plane graph. Okay, so there's a bit of a distinction, but we're going to work with plane graphs. And what I want to do is look at two free tight plane graphs and generate them all by vertex splitting operations.
00:21:24.594 - 00:22:35.594, Speaker A: Okay, so the idea here is that there are times where there are problems in rigidity theory and in discrete geometry more widely, where you have to restrict to planar graphs or plane graphs and you want to stay within that class. So if I just give you zero and one extensions, then it's possible I start with a planar graph like this one. And remember in, in lecture three or four, I did a sequence of zero and one extensions that got me to k three free, which is non planar. So if you want to be careful to maintain planarity and stay within the this nice family that, then you need to think a bit harder. And so two free tight graphs or minimally rigid graphs in the plane could be planar, they could be some nice planar ones, or they could be non planar. So we want to now, rather than generate all two free tight graphs, we want to generate a subset of those, which means that when we're doing our reductions, it's harder to maintain the property of being within the class because it's more restrictive. So we have to work a little bit harder to make sure we can get them all and, but that's the sort of aim of the next, I don't know, 1015 minutes, I guess.
00:22:35.594 - 00:23:39.348, Speaker A: Okay, so as I guess I sort of hinted at, we're going to show that vertex splitting is sufficient to generate all plain, minimally rigid graphs, which are plain two free tight graphs. But the vertex splitting operation, I had this. Let's just draw the 2d picture. I had this partition of these two sets. So if I choose these in a sort of not nice way, I could break planarity. So I have to be careful to use the sort of cyclic ordering of the neighbor set of the vertex I'm splitting into x one, x two to make sure that when I, that I don't pick up, I don't have something like this and decide to move this edge over to the other vertex and hence break planarity in a bad way. Okay, so I just need to augment the definition of vertex splitting to what I call plane vertex splitting, which means exactly what I've just tried to say.
00:23:39.348 - 00:24:46.136, Speaker A: So that the partition of the two sets, so not the, don't worry about the ones up here, but the partition just of n one and n two, respects the natural cyclic ordering of the neighbor set determined by the planing embedding of the smaller graph. So the smaller graph has a plane embedding and we're going to just move the x into x one and x two. We do that close to each other so it's within some nice part of the plane embedding. And as long as we respect the ordering, when we're determining which edges are incident to x one and which are instant to x two, then we will result in a plane graph. So under this assumption, vertex splitting does take one plane graph to another plane graph. Okay? Okay, so hence it's true, because we know that vertex splitting preserves two free tightness, or minimal rigidity. By Whiteley's theorem, we know that every graph we're going to get from k two by these plane vertex splitting operations is a plain minimally rigid graph.
00:24:46.136 - 00:25:25.592, Speaker A: And what we want to do is show we get all of them. So to do that, we move from minimally rigid graphs and Whiteley's theorem to working with two free tight graphs. Okay, but the, the converse is more involved. And I decided actually not to, to go through the, the full proof. I'm just going to give one or two results and a sort of idea of the, the rest of the argument. So what is the, the converse? So remember, in two dimensions, excuse me. So in two dimensions, the converse, as we sort of said before, is we take a triangle and let's say it has an edge e between u and v.
00:25:25.592 - 00:25:46.820, Speaker A: And so there's some other vertex, I forget what I'm going to call it, maybe w for now. And I contract e down to. So u equals v is some new vertex. We give it another name. And w is here. So we need, first of all to know that there is a triangle face in our graph. We need this face, that's a triangle to have a chance of contracting.
00:25:46.820 - 00:26:29.884, Speaker A: For example, a two three type graph could be triangle free, like k three free. But the plane assumption is going to help us there. Okay, so here I just say what I would just try to do in that picture. We take an edge of a triangle face in some given plane graph. Then we talk about the contraction of this edge e, which identifies u with v, and discards the edge between u and v, which you can think of as becoming a loop. So you discard that, and you also got, you had two edges, uw and vw, which become two edges between the uv vertex and the w edge. You discard one of those and it's a contraction.
00:26:29.884 - 00:27:28.026, Speaker A: So I'm going to use g contract e to denote the result of the, if I apply a contraction of e to the graph g, then g contract e is the resulting graph. Okay, so the first thing I want to prove, and this is a very easy lemma that I guess you probably might have seen in undergraduate courses, I guess roughly if you express it in the right way. So, so every plane two three tight graph with at least four vertices contains two triangle faces. So obviously if it had less than four vertices, then my two free tight graph is either this, which only has one face, that's a triangle, I guess the outer face, but I don't really want to think about the outer face. Or you have a single edge which has no triangles, but as long as it has at least four, then this becomes true. The plane assumption is clearly necessary from k three free, as we said. And this example that I drew before.
00:27:28.026 - 00:28:01.714, Speaker A: So this is the, the triangular prism graph. It's the cartesian product of k three and k two, if you like, if you're a graph theorist. But this illustrates that two is tight because it has exactly two triangle faces. The other faces have size four, four and four. So this is, this lemma is sort of best possible. We want to find triangle faces to contract, and the most we can guarantee is there's two of them we could possibly contract in our big graph. So why is it true? Well, it's just a simple calculation.
00:28:01.714 - 00:28:46.840, Speaker A: We take Euler's formula, which applies to any connected plane graph, and tells us the number of vertices minus the number of edges plus the number of faces is equal to two. Two free tight graphs are connected and we're interested in plain two free tight graphs. So the hypothesis are fine. So let me suppose that the, the lemm is not true, which means that there exists some g, which is plain two free tight, and at most one of its faces is a triangle. Okay, so two free tight tells us e equals 2 volts minus three, which tells us two equals 4 volts six. So that's easy. So we know that twice the number of edges is at least the size of the faces.
00:28:46.840 - 00:29:22.806, Speaker A: So in general you would have free f because the faces would be at least triangles or bigger. But we know that at most one is a triangle and every other one is not. So we actually have four f because the smallest face would be size four, except for the one triangle we allow. So it's four for everything apart from one where it's free. So we get four f minus one. Okay, so now I times this thing by four and substitute it in. So I'm going to replace four f with eight -4 volts plus four e.
00:29:22.806 - 00:30:00.908, Speaker A: And the one takes the eight to a seven, and that gives us this equality. And then I can again substitute this in for e over here. And just simplify. And so now I know that 4 volts six I didn't do the calculation out, but hopefully it's not too fast. Four v minus six is greater than or equal to 4 volts five. So, which is obviously a contradiction because this thing is definitely bigger than this thing. So we've proved that we have at least two triangles in our graph, so now we know we can always find one.
00:30:00.908 - 00:30:49.704, Speaker A: The key question is when is the contraction by this edge e? When does it result in a smaller, two free tight graph? We know it will result in a smaller plane graph, so that's okay. But there are two problems that might prevent it becoming there. Is the contracted graph being two free tight. The first one is that, well, we know e is in a triangle, but what happens if it's actually in two triangles? Then when we contract, we do the sort of operation up here, and that's fine, but we have a second vertex that becomes adjacent to the contracted vertex twice. And that means we either have a multigraph, which is no good, or we have to discard an edge which froze the count off. And so we don't have e equals two, v minus three. So if your edges in two triangles, that's bad.
00:30:49.704 - 00:31:30.694, Speaker A: And the second thing that can happen is that, well, if there's not two triangles, then the edge in a triangle must be in a unique triangle, say on uvw, where the edge we wanted to contract is e equals uv and then g contract. E could contain a subgraph which fails the sparsity condition. So we could have some subgraph which has too many edges to satisfy the. For the graph to be too free tied. Since it was in a unique triangle, it's easy to see that we, we've removed one vertex and we've removed two edges. So e equals two, v minus three persists down to g contract d. So there must be some subgraph that's gone wrong.
00:31:30.694 - 00:32:20.074, Speaker A: So either we break simplicity or the top count, depending on which way you think about it, or we break sparsity. Okay, but what we're really going to do is show that these are really one case, because I'm going to express this one as this, which I'll say in a moment. But then what's happening with the second triangle was really a smaller graph which has the same property except exercise free as well. So we can deal with both of these blocks at the same time. But first of all, what's this break of sparsity? What we're going to prove is the only way this can actually happen is if there's a critical set. Remember, critical meant that I of x is two, x minus three. And so one of these sets with u and v.
00:32:20.074 - 00:32:45.098, Speaker A: So it contains u and v, but it doesn't contain the third vertex of the triangle, and it has at least four vertices. If it only had three vertices, it would be uv and something else, and hence it would be exactly the one we said for the simplicity problem. Okay, so we have, this is what we're going to prove, that the only things that can go wrong are these two. So that's what the lemma says. I take a. Tony? Yeah.
00:32:45.186 - 00:32:51.690, Speaker C: We pause for a second. Could you just scan back up a bit? Yeah, there. I'm still taking notes, if you don't mind.
00:32:51.882 - 00:32:52.442, Speaker A: Sorry.
00:32:52.538 - 00:32:58.654, Speaker C: Yeah, so u and v are in x and w is not an x.
00:33:04.354 - 00:33:38.224, Speaker A: Yeah, maybe this is a good time. Just ask if anyone has any questions. So are you saying that this critical x implies that there exists that blue triangle that you've got? No, sorry. The blue triangle is just one possibility, and that was the other thing. But. So I guess what I'm saying is, if this x exists, so a critical set with this properties, then when we do, this is, this is in the graph g. Then when we contract e, this edge uv, then x will become u and v will become identified.
00:33:38.224 - 00:34:16.964, Speaker A: So we'll lose one vertex, but an e will disappear, so we'll lose one edge. So we had, we had this, but we lose two from this side, two times one, and we lose one from this side, so we cause a problem. Okay, so minus two here and minus one here. So this becomes bigger than, and becomes a violation of the two free sparsity condition. Okay, great, thank you. Okay, so the, the lemma, so this should say let g equals v be, to be plane two free tight, and let e equals uv be an edge. Then we do the contraction.
00:34:16.964 - 00:34:33.404, Speaker A: Oh, I guess I don't come, I mean, I can put plane in on or not, I guess so. It doesn't, maybe it doesn't matter, but I really only care about it in the plain case. So either ignore or don't. The blue. I think it's probably irrelevant for this proof, but we'll see as we go. It's not. I don't think plane is particularly important for the proof.
00:34:33.404 - 00:35:29.124, Speaker A: Yeah, yeah. So we could ignore plane, but you should keep it in mind because it's what we're doing. So take a two free tight graph with an edge equals uv, then g contract e is two free tied if and only if there's a unique triangle in g containing e. So that stops us having this contraction, which would have caused an issue, as I said. And the second thing is, there is no critical set with the properties we just talked about. So there's no critical set containing the two end vertices of e, u and v not containing the third vertex in the triangle and having at least four vertices and the at least four vertices is just a kind of trivial assumption because if it had less than four vertices, it would be free vertex graph and it would be the other option. So you don't, it's not saying free vertices is somehow good, it's just saying that's in the other part of the options.
00:35:29.124 - 00:36:04.114, Speaker A: Okay, so first we're going to suppose that the graph is two free tight and we're going to show that one of these things, that neither of these problems could have happened. Okay, so since it's two free tight, this certainly didn't happen. So e belongs to a unique triangle. We've already talked about that. So for a contradiction, let's suppose the, the other thing fails. So suppose there is a critical set with uv in X, W not in x, and x at least four. And this is kind of what I just said up here, just making this, this argument formal.
00:36:04.114 - 00:36:58.430, Speaker A: Then the edge e is an edge of the subgraph x subgraph integer g induced by x, and it belongs to no triangle in this because of, of this condition. Hence G x contract e has one less vertex and one less edge. But since x is critical, this gives us that we lost one from the edge side and two from the vertex side. And hence we create a strict inequality which contradicts our sparsity assumption. Okay, so we assumed it was tight and then we found this, this bad subgraph. So that direction is the easier one. So conversely, suppose there is a, sorry, conversely, suppose there is a unique triangle containing e and there is no critical set with the stated properties.
00:36:58.430 - 00:37:46.044, Speaker A: Okay, so now if we want to suppose that g contract e is not too free tied and let, so let's let v denote the vertex of g contract e. We get by contracting e. So we contracted e equals u v into some new vertex and we call it v dash. Since g is two free tight and e is in exactly one triangle, we know that the top count is fine. So it follows that there is a some set in this not too free tight graph, g contract e. So a set called y, which has at least two elements and the number of edges in it, violates the, the two free sparsity condition. So it's at least two, y minus two.
00:37:46.044 - 00:38:32.154, Speaker A: Okay, so since uv is in a unique triangle, all the subsets containing v and w. So remember, this is, this is w. This was uv, and now it's w and v dash after the, the contraction. So all subsets containing v and w and all subsets not containing v dash satisfy the sparsity requirement, because they just, they just exist in g, or if it contains w as well. You lost two edges and one vertex, so they're all fine. So it must be that y has size at least three. It must be that v is in y and it must be that w is not in y.
00:38:32.154 - 00:39:32.484, Speaker A: So now that we know that, we take our x, which is, we take y and we subtract v dash and we add. So we subtract v dash and we add back u and v to y, and we get y minus v dash union uv, then call that x. Because of this count and the fact that x is a subgraph of g, it must have been that there was an equality here, and hence X is critical and we have the properties we want. So we finished this sort of characterization of when a contraction is too free tight. So we've shown that one of these two options are the only things that can go wrong. Okay, are there any questions about that? I think that's the only real proof I'm doing in this plain section. The rest is going to be just sort of discussion and a sort of sketchy.
00:39:32.484 - 00:40:29.734, Speaker A: Okay, so as I say, it is a bit more involved than what we did for zero and one extensions. But what can be established, and the references Fecator Jordan and Whiteley in 2004 is that a plane graph is two free tight if and only if it can be generated from k two by a sequence of these plane vertex splitting operations. See, there's an alternative reference from John Owen and Stephen Power, but they worked with free connected plane, two free tight graphs, so they were working within an even more restricted class. And so the general. Not when you allow non free connected things, this is the correct reference. But there's a second reference that does a similar thing. And obviously, because vertex splits preserve rigidity, by Walter Whiteley's argument, this tells us, I guess, if you like, another way to tell us, infinitesimal rigidity in the plane or planar case.
00:40:29.734 - 00:41:25.790, Speaker A: Okay, so I want to give you the idea of this proof, but not the, not any of the details. Okay, so I mentioned in the first lecture of this course that some of the, especially the combinatorial parts of this, I took some inspiration from the presentation in an article of Thibault Jordan's. So if you look back at that article, he goes through all the details and proves this in detail. So if you want to look at the rest of the steps, it's not particularly hard, it's just quite long and technical. So I just want to give you the idea and then we'll move on. Okay, so what I'm going to say is that a critical set x is called a blocker for a particular edge equals uv in some triangle. If uv is in x, w is not in x, and the size of x is at least three.
00:41:25.790 - 00:42:01.574, Speaker A: So if the size of x is three, that's saying that the edge in this triangle is in a second triangle. And if X is at least four, it's what we said is the, the second problem where sparsity would fail. So we want to now find, we want to choose an edge in a triangle which we know must exist. We proved that we know triangle faces exists, and if there are no blockers, we're done by the lemma we proved. So we look at a blocker must exist, and then we work with these blockers. Okay, so we know a triangle face exists. Let UVW be such a triangle.
00:42:01.574 - 00:42:44.354, Speaker A: Suppose there is a blocker so it's not contractible. Then if this particular edge uv is not contractible, then we can choose a maximal blocker where maximal means number of vertices. So X is the largest number of vertices such that it's a blocker for the edge uv, so such that it contains uv, not w, and is a critical set. So we pick a maximal blocker for this particular edge f. And our aim is to show that we can look at the subgraph induced by this blocker x. This is, by the way, is a two free tight graph. Because x was critical, we look inside that two free type graph.
00:42:44.354 - 00:43:16.788, Speaker A: It's, it's plane, because it's a subgraph of a plane graph. So this Gx is a two three type plane graph itself. It has a triangle face. And so what the aim is to show that some edge in there is face contractible, but not just face contractible in Gx, but face contractible actually in g as well. Okay, so hopefully that's clear. So we have, the blocker gives us a sub graph which is, and one of these plane two free type graphs itself. We know there's a triangle face in there.
00:43:16.788 - 00:43:47.494, Speaker A: We want to show that there's some edge in there which we can contract in the entire graph g to. So it has no blocker in the entire graph g. Okay, so I guess I said this. So since x is critical, Gx is two free tight, and we have a plane embedding of Gx. Okay. And so really, this is, this is, I guess, is all I'm saying, because the rest is just very brief. So an edge of Gx is proper if it's an edge.
00:43:47.494 - 00:44:33.420, Speaker A: E in G. X is proper if it's not equal to the one we know is non contractible because f is not contractible. So that's where we found this. Blockers we know it's an edge in the subgraph is contractable if it's distinct from f, and it's face contractible in Gx. And the triangle face in Gx is also a face in G. And if we have those three properties, it's not so hard to see that such proper edges are actually face contractable in G. So if we can show that there is an edge in Gx which is different to the edge, we can't contract f, and it's contractible itself in Gx.
00:44:33.420 - 00:45:27.664, Speaker A: And the triangle face of Gx is also a face of G, then we will be finished. And so the work is really to show that property. But as I said, I don't want to go into the details of that, or I didn't when I was writing these notes. But it occurs to me there's not long left to say the next things I wanted to say. So maybe I should have. So, I'm going to flip to a different onenote document and say a little bit about three dimensional rigidity. But does anyone want to ask any questions about plain two free tight graphs or vertex splitting before I move on? Okay, so I guess there isn't a question.
00:45:27.664 - 00:46:15.244, Speaker A: I think I have the chat available, but I don't see any questions coming in there either. So, yeah, so if I'd kept up to pace, this would have been where I'd started this lecture. But I am behind. So I want to just start to give you some hints as to what happens in higher dimensions. So remember that if you have linearly independent rows in the rigidity matrix, or if the rigidity matriarch is independent, then the rank of the rigidity matrix is at most this sort of Maxwell bound. So, D mod v minus D plus one, choose two whenever v is at least D plus two. If it's smaller, it can be a complete graph, and the count is very slightly different if we want to.
00:46:15.244 - 00:46:48.350, Speaker A: So now we want to consider rigidity in d dimensions where d is at least free. So the first thing I want to do is define the same class of graphs as two free tight graphs. So that was the case when d equals two. But I just want to do it in general. So there it was, two and three. So now our d comma d plus one choose two sparse graph is a graph such that the number of edges in any subset of the vertex that with at least d plus two vertices in it, any x of size, at least d plus two. It must be true.
00:46:48.350 - 00:47:44.020, Speaker A: The number of edges induced by x is at most dx minus d plus one, choose two and then we can, as we did for two free sparse and two free tight, we can say a graph is d comma d plus one, choose two tight. If it's sparse and has the total number of edges, is the max possible e is dv minus d one, choose two. To avoid having to keep saying d plus one, choose two. I'll probably, maybe not consistently, but I will try to be consistent in sticking to saying d sparse. Instead of this d comma d plus one, choose two sparse and saying d tight. Instead of d comma d plus one, choose two tight. So d sparse means you have this inequality for all big enough sets, and d tight means your sparse, your d sparse, and e equals dv minus d plus one, choose two.
00:47:44.212 - 00:48:01.914, Speaker C: Okay, Tony, just a quick question. If you're d tight, does that mean, does that imply anything about the tightness of the sub of the subgraphs, or just that they're sparse?
00:48:03.054 - 00:48:08.158, Speaker A: So which sub graphs? So you need the sparsity condition for all sub graphs.
00:48:08.246 - 00:48:13.210, Speaker C: You need the sparsity condition for all subgraphs. But does it imply equality for all the sub graphs?
00:48:13.342 - 00:48:49.984, Speaker A: No. So it's not. Yeah, so for example, d type graph, saying you're a dike graph is not strong enough to control the girth of the graph. So, so most of the examples you would see if I drew, say, a free six tight graph when d equals three would have triangles, but they could have, it could be arbitrarily large smaller cycles in the graph so that they don't have to have any proper sub graphs that are d type themselves necessarily. So some will and some won't. So it's a no. You don't get any information about how tight subgraphs are just from the d tight condition.
00:48:51.244 - 00:48:55.584, Speaker C: Sparsity is preserved for sub graphs.
00:48:55.964 - 00:48:58.036, Speaker A: Sparsity, yes.
00:48:58.060 - 00:48:58.904, Speaker C: Okay, great.
00:49:01.524 - 00:49:44.642, Speaker A: So remember that I'm still calling lemansfirm. The polych Geringer result said that minimally rigid in 2d was exactly two free tight, or what's now calling two tight. So the analog would say that every d tight graph is minimally rigid in RD. However, this is not true, and this is really, the main motivation in combinatorial rigidity is to try to find an analogous statement. So trying to find which d type graphs are minimally rigid in Rd, especially when d equals free. So let me just try and quickly show that the smallest example, so for all dimensions. So first of all, for d equals three.
00:49:44.642 - 00:50:17.214, Speaker A: So the smallest example of a d tight graph, which is not rigid. So a flexible d tight graph is what is commonly referred to as the double banana. It's this graph on, what's it, eight vertices. So it's the point that it's flexible. Should be easy to see that the two vertices I've highlighted, u and v, the line through those, acts as a hinge. And so you could fix the banana on the left and rotate the one around. And so this gives you a continuous deformation, infinitesimal deformation, whatever you like.
00:50:17.214 - 00:50:41.104, Speaker A: This just moves infinitesimally and continuously. So this is definitely not rigid. But if you count up, it's got the eight vertices and it's got 18 edges. So three, eight minus six is exactly right. And all the subgraphs work as well. So this is, this is free tight but not, but flexible. So it's not minimally rigid and r three.
00:50:41.104 - 00:51:24.916, Speaker A: So I say, yeah, the pair uv act is a hinge around which you can rotate one of the bananas. So that's kind of easy. But this example you can generalize. So in particular, I guess one thing it says is that free tight does not imply free connected. And if you're rigid, you certainly must be free connected because it did not matter what was this side or what was this side, all that mattered was I had these two vertices that separated things out. And so if you have such a two vertex separation, that is, you're not a free connected graph, then you can always do this rotation of one component about a hinge. Okay, so let me generalize a little bit.
00:51:24.916 - 00:52:07.358, Speaker A: So I want to define a two sum. So I give you graphs g g one and g two with the respective vertex and edge sets. Then we say that g is a two sum of g one and g two along the pair uv. If the two graphs g one and g two intersect exactly in u and v if the edge sets. So if it's a, uv is a common edge. So this shouldn't be, comma, shouldn't be there. If uv is an edge in both g one and g two, and the vertex set of g is the union of the two vertex sets and the edge set of g is the union minus uv.
00:52:07.358 - 00:53:08.946, Speaker A: So in this picture, if you can still see it I had k five is g one, k five is g two. I took the union of them and I deleted the edge between u and v. Okay, so this is a two sum operation which you can use to create lots of counter examples, lots of d type graphs which are not minimally rigid in RD. So I will, sorry for going a little bit over time, but I just want to finish with this picture basically to show this example extends to all dimensions. So I'm going to do the two sum, or, sorry, I'm going to do this summing operation, but I'm going to have more vertices in there, the intersection. So I'm going to take g one and g two instead of being k five to be kd plus two, I'm going to take the intersection to be the complete graph on d minus one vertices and I'm going to pick some edge in the intersection and I'm going to say b for bananas. I guess so, b d, comma, d minus one.
00:53:08.946 - 00:53:54.914, Speaker A: So the d is, we're in dimension d and the d minus one is the size of the intersection to be the union of the two graphs minus the edge e. So in other words, I had kd plus two, which is these d minus one plus one, two, three vertices, d plus two and on the other side again, d minus one plus one, two, three vertices for kd plus two, the d minus one vertices in the intersection and missing one edge e. So every other edge is present in here and the free vertices here adjacent to everything in the d minus one vertices here. But no edge like that. They don't exist. And these ones are adjacent to absolutely everything, the ones on the right adjacent to everything in the separating set as well. But again, no edges from the triangle on the right to the triangle on the left.
00:53:54.914 - 00:54:27.616, Speaker A: And so you can, you can do it. I don't have time to really do the details now, but it's sort of elementary just to count up the number of edges. This is d tight. And the same way you can have a hinge through two points in r three, you can have a hinge through d minus one points in Rd. And so it's still flexible. And in fact it's provably the smallest d tight but not rigid graph in any dimension. So for all d greater than equal to three, you have the smallest flexible graph that is d tight.
00:54:27.616 - 00:54:58.954, Speaker A: It's d tight but flexible on d plus five vertices. Okay, so I should stop there. Happy to take any questions. And on Friday I believe we'll have another guest lecture, but that will become clear on Friday in the talk, whether it's me continuing with 3d rigidity, or whether it's Daniel Bernstein talking about the rank function. So, as I say, any questions, please ask. Otherwise, thanks for coming, and I'll see you on Friday.
00:55:03.484 - 00:55:17.580, Speaker C: So, I've got a question about this analog of Leman's theorem that we're searching for. So, Le Mans theorem says that every d type graph is minimally rigid in.
00:55:17.612 - 00:55:24.664, Speaker A: RD, and that La man's theorem says every two type graph is minimally rigid in r two.
00:55:25.164 - 00:55:37.372, Speaker C: I see, sorry. Yeah, the analog would say that we're searching for is some characterization of minimal, minimally rigid graphs in RD. Is that the aim?
00:55:37.468 - 00:55:38.144, Speaker A: Yes.
00:55:39.444 - 00:55:52.684, Speaker C: Okay. And what we know is that rigid graphs, say, in r three, sorry. In d three is our, are in particular three connected.
00:55:54.104 - 00:56:10.844, Speaker A: So we know that minimally rigid graphs in R three must be free tied, but they also have, have extra properties. And just as one example, I said they must be free connected. There are much more complicated things would have to add to fully characterize, and we don't know what they are.
00:56:12.264 - 00:56:23.732, Speaker C: I see. So is there some result that we could use, we could cite that would. I guess maybe this isn't really a.
00:56:23.748 - 00:56:24.304, Speaker A: Well.
00:56:26.204 - 00:57:39.574, Speaker C: Defined question, but I'm wondering whether there's a finite list. Like there's a finite list of conditions, three connected, three tight. Keep adding in conditions until you get to minimally rigid. I mean, I guess the reason my question isn't even well defined, as you could add minimally rigid, it's your requirements, and then you're done. But somehow I'm thinking of this. The kind of forbidden miners approach to characterizing certain things in matriid theory says that in roughly that every matriarch result can be, can be characterized using a collection of forbidden miners. And that forbidden miners list, I think, can be, is finite in each dimension.
00:57:39.574 - 00:57:55.294, Speaker C: And so the question in some sense, is there some kind of analogous result that would allow us to say, yes, we know that there's some finite set of conditions here that would guarantee that would characterize minimal rigidity.
00:58:00.854 - 00:59:06.814, Speaker A: So it's not an answer to your question, but just to point out, for anyone who didn't know, rigidity is not minor closed. So we can't talk about forbidden miners, that's for sure. You can easily go from flexible to rigid, or rigid to flexible when you do a contraction operation, or even subgraph operations can go from rigid to flexible. So I guess what's hoped is that there is a, a combinator, purely graph theoretic characterization, which leads to a faster algorithm and how you can express that graph theoretic characterization, I really have no idea. Well, I guess there is conjectures that would lead to it having some nice closed forms. And what I will show in my next lecture or two will be special cases, classes of graphs, where it is very well understood. But most of these special cases, I'll explain are simply, oh, we've made the graphs nice enough that this d type condition does work.
00:59:06.814 - 00:59:42.934, Speaker A: And the examples like these ones that I talked about that are wrong are kind of hard to fix. So it's not as simple, say, as that's out free connected. And those examples disappear because you could just take the particular one, say in r three, and you add one vertex and join it to these three. And now the graph is free connected, but it still has the same subgraph as before, so it still has the same dependence in the rows of the rigidity matrix. So even that is not a sort of sensible, I mean, it's one step forward, I guess, but it's trivially still, the same problem exists.
