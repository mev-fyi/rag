00:00:00.320 - 00:00:39.824, Speaker A: More on the fluid side. So I'm going to be more on the solid mechanics side today. So, thanks to the organizers for this workshop. That is very interesting. So, yeah, I'm going to talk about some of my work on the efficiency of solvers for physical fracture models, which is not really the main topic of my PhD. What is some work that I had to do, as we're going to see. So, the actual objective of my PhD is to predict the fracture behavior of 3d printed composites.
00:00:39.824 - 00:01:24.654, Speaker A: But since it's a very complex problem with the structure of the composites and its anisotropic behavior, we decided to use a very powerful method, which is called the face fill method. However, it has one main drawback, which is the computational cost. And so, for example, if we look at a very simple benchmark, we have a square plate that is made of two different materials. So the bottom one is made of a soft material, and the top one is ten times stiffer. We're going to fix the left part, and we're going to pull on the right hand side. This is the crack propagation that we get, and it's the expected solution. There's no surprises there.
00:01:24.654 - 00:02:08.376, Speaker A: But the issue is to get this computation with our original method, our original solver. It used to take us 50 hours to get this solution. And it's not because our code is not efficient or anything like that. This is in the range of time that you will find in the literature. But what I'm going to show today is by simply using a better solver, we brought this down to 4 hours of computation, and so it's going to allow us to go faster in the next steps of my PhD project. So let's dive into the subject. I don't want to go too much into the details, but it's interesting to have an idea of what kind of equations we're solving here.
00:02:08.376 - 00:02:56.784, Speaker A: So, face field models for fractures stem from a reformulation of Griffith's theory. So it's a very old theory. And fracture mechanics, it's dating back from 1921. And the idea is that if you have a cracked body, you can formulate its total potential energy as its elastic energy and the energy associated to the creation of a crack. And this energy, this crack energy, is simply a material constant times the crack surface. And Griffith, at the same time, also stated that the configuration of the body, so its displacement and crack configuration that the body would adopt under loading would be the one minimizing its total potential energy. And so we can formulate this nicely as a variational problem.
00:02:56.784 - 00:03:38.878, Speaker A: Here we also introduce a constraint so that the crack doesnt heal. But its more of a detail here. And so this is a nice setting from the mathematical point of view. But numerically its very difficult to implement because of this surface integral that we have here. To track the surface with classical numerical methods like finite element methods, is very difficult. So what we do with the face field method is we introduce an auxiliary field to approximate this surface. So instead of representing the crack as a sharp discontinuity in our body, we use what we call the face field or the damage field to describe the crack.
00:03:38.878 - 00:04:17.940, Speaker A: So if the damage is word zero, it's a scatter field. So if it's word zero, well there's no damage. And if it's work one, it means that the material point is fully broken, so it's a crack. And we introduced this regularization through an elliptic functional, and so our surface integral becomes a body integral or volume integral. And so this can be seen as a density function. So we're going to integrate the density of damage over the whole body and it's going to give us an approximation of the surface. And also there's this degradation function appearing.
00:04:17.940 - 00:04:53.434, Speaker A: So if it's fully broken, it means that there's no stiffness, so there's no elastic energy. So we're using this degradation function to modulate this elastic energy. And so our variational problem can be stated now in terms of the displacement and the damage field. And so this is very powerful numerically. A lot of work has been done on that, but now we want to find the very efficient solver to solve this problem. So before we jump into the solver, I'm just going to define a benchmark model. So this is the one that we're going to use as the subject of the benchmarking.
00:04:53.434 - 00:05:34.358, Speaker A: We're going to consider only quasi static loading. So no effects of, no dynamic effects, no direct dependence of time. We're going to use the at one model, which is in the face field literature, a very basic model. And we're also going to introduce strain decomposition. Again, I won't go too much into the details, but basically it adds even more nonlinearity to the problem because we solve our energy, we split our energy in two parts. Applying the directional derivatives, we can write our erdo Lagrange equations of our problem. With our derivative towards uh, we have what we call the kinematic subproblem.
00:05:34.358 - 00:06:39.042, Speaker A: So it governs the equilibrium of the body. And with the derivative towards the damage, we have our damage sub problem, which governs the evolution of the crack and we're going to discretize our body using linear microns elements, quad elements. For the benchmarking, we're only going to study 2d domains, but it could be easily extended to 3d domains. So now let's look into the solvers that are available. So the easy idea is always to go to a Newton's method, but the issue here is that our functional is non convex. So you're going to have issues, it's going to work on some very simple tests, but generally you won't have a solution, it won't converge. And so what people have been doing since the beginning is to use decoupled schemes.
00:06:39.042 - 00:07:27.244, Speaker A: So what they do is if we come back to our two equations here, they will fix the damage and solve for you, and using their new solution for you, they will fix it and then solve for D alternatively, until global conversions. And so this is very robust, because with our two equations, if you fix one field and look at the other, both equations are convex. But due to the decoupled nature, the overall order of convergence is very slow. And so many authors have tried to accelerate it. So we see all kinds of acceleration, so we see over relaxation, we see also enders and acceleration. And a few authors have attempted to propose monolithic schemes. So where we would deal with both equations at the same time.
00:07:27.244 - 00:08:17.622, Speaker A: So, for example, what I will refer to as the quasi monolithic scheme, it's basically you apply Newton's method and you partially linearize one of the sub equation, so it's going to get rid of some of this non convexity. And also, people have tried to apply very trivial modified Newton methods and also quesen Newton method. This one is the BFGs method, is actually quite efficient, but it works only in very specific formulation of the model. But I'm not going to insist on that. So, basically, in a preliminary study, I implemented almost all of these solvers, but in the end, we chose three. So, as a reference solver, because we know it's slow, but it's robust, and it's the one that about 95% of the literature is using. So we chose the staggered solver.
00:08:17.622 - 00:09:18.704, Speaker A: So, as I was saying, you fix u, you solve further damage, and then you go to your second equation using your new damage, you solve for you and you repeat alternatively until global convergence. The second solver that we chose. And it's, it's surprising, because the, when the author presented this solver, he got really good results, but for some reasons unknown reasons, nobody in the literature except him is using it. So we decided to, after talking with this author, we decided to try it, and the idea is very simple. So it comes from the observation that our functional is non convex due to this mixed term here that we have in U and D. And so the idea is just that when you apply your Newton's method, we're going to linearize the kinematic subproblem by replacing this d by a set constant that we're going to approximate using other methods. So it can be seen as a partial linearization.
00:09:18.704 - 00:10:06.098, Speaker A: And another solver that we decided to study, which is a very well known solver and de optimization field, it's actually the solver of ipopt, if anybody is familiar with the software. It's a modified Newton method with inertia correction and aligned search. But for some reasons, it was never used in the face field literature, and so we decided to try it. So, as I was saying, it's a classical modified Newton method. We add a diagonal matrix to and we make it bigger until our modified Jacobian is positive definite. And then we use a standard armedial line search to identify our step size. So if we look at to, at the benchmarking.
00:10:06.098 - 00:10:47.622, Speaker A: So this is a very simple benchmark that is very popular in the literature. It's again a square plate. We introduce a notch in the middle, we fix the bottom, and we pull horizontally at the top, and this is the crack pad that we find. So it's just, it initiates from the end of the notch and it grows towards the lower right corner. And I'm presenting only one, since the three solvers were given the same solution. But if we look at the efficiency, there's some important differences. So the left graph is just the force displacement reaction.
00:10:47.622 - 00:11:39.870, Speaker A: So once again, the solution is identical for three solvers, but we see on the right that, well, the modified Newton solver is actually quite more efficient, and actually it requires. So this is the cumulative total iteration. So across the time step, we accumulate the number of iteration required to converge. And so we see that where we have this sudden propagation, so this drop and the force, we have this really huge instability in the solution, which creates this jump in iteration. But in the end, our modified Newton solver was ten times faster than the proposed. Well, not the proposed, but the standard staggered solver that is used in the literature. So if we look at a second benchmark, it's similar.
00:11:39.870 - 00:12:28.524, Speaker A: So we have, instead of it's an l shaped panel, it's mixed mode propagation. So we fix the bottom and we pull here, and the solutions are identical for the staggered solver and modified Newton solver. But we have a weird solution for the quasi monolithic scheme, suggesting that maybe it's not so robust. And so maybe that's some explanations for why it's not that much popular in the literature. And if we look at the efficiency again, we see that this quasimodolytic scheme is giving a different solution. But once again, our modified Newton scheme is up to twelve times faster than the standard scheme used in the literature. And finally, which is kind of interesting.
00:12:28.524 - 00:13:27.686, Speaker A: So the first benchmark that I presented is this delayer benchmark, and it's interesting because it produces an unstable solution, because the crack will propagate in the soft material from the notch, but the stiffer material will stop its propagation and the crack will split like this. But the where and when it will reinitiate in the second material is an instability. So numerically it's controlled by the quality of your mesh or the tolerance with which you solve your model. So this is the solution that I was showing at the beginning with the modified Newton solver, and we see that with the staggered solver, we have quite like the opposite solution. But what is interesting in this case is that the quasi monolithic scheme won't give you a solution. It's not robust enough, and also with the staggered scheme. So here I was solving displacement first, then damage.
00:13:27.686 - 00:14:14.174, Speaker A: But if you split it, if you flip it and you solve damage, then displacement, it won't converge. So it's not robust if you split the two, if you flip the two operations. But it gives us an int again on the robustness of the solver. And so in the end, our modified Newton algorithm that we found in the optimization literature ended up to be way more robust and up to twelve times faster in those benchmarks. So now that we have reduced this computational cost, the next step will be, well, to maybe reduce it even more by using mesh adaptation. And of course, well, the objective is to model fracture in 3d printed composites. So thank you.
00:14:14.174 - 00:14:21.314, Speaker A: Very interesting. Thank you very much. Do we have questions?
