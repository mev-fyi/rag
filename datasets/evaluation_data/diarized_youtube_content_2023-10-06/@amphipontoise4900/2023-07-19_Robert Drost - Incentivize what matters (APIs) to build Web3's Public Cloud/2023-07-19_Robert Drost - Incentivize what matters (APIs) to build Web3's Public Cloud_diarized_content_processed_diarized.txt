00:00:25.490 - 00:00:44.650, Speaker A: How are people doing? Having a good time so far? Yeah. Did everybody go to see Vitalik's talk just before this? Yeah. Okay. I missed it because I had something else to do. Was it good? It's pretty good, as usual. He's talking about account abstraction, right? Yeah. All right, look forward to seeing that tonight.
00:00:44.650 - 00:01:31.006, Speaker A: All right, well, anyway, so we're going to talk about something else, which I think is equally interesting to what Vitalik was just talking about. And hopefully by the end of me talking here, you will see why as well. I do realize that for a lot of people, I think one of the most useful things out of a presentation like this is to get an understanding of where said technologies have evolved and what are some big themes that we should know about in the space. And I'm going to be talking about one that has been around for a long time. I think it's very relevant and hopefully if I've done my job well at the end, all of you will have learned a bunch of useful things and will at least understand my point of view, even if you would disagree with it. So there's three main things. I'm just trying to cover three things in this talk.
00:01:31.006 - 00:02:36.866, Speaker A: I've got enough time that we'll probably have time hopefully at the end for Q and A if people have questions. But I'm very interested. My early career was a lot around public clouds, around infrastructure, other stuff. And there's a question that I've kind of asked myself a number of times, which is like, what is the reason why we have these centralized public clouds? How did we end up in this state where there's a couple of dominant companies and we hear a lot of times this idea that somebody's going to bring the AWS of Web Three, they're going to do this? What does that mean? What does it mean for blockchain technologies to allow us to actually have decentralized public clouds for both software vendors, for people writing software, for people consuming software and so forth. And then when I talk about the specific technologies that enable all of this, there's actually pretty good status and pretty good news that's happening in the front. So I want to make sure everybody knows the current status and what's next, especially in case you're interested in getting plugged in because there's active people working in this space. And just like regular blockchain, everybody can get involved.
00:02:36.866 - 00:03:29.000, Speaker A: So let's cover the first topic, the centralizing force. And just to set the framework of how strong the centralization has been happening here. If you look at the overall market, the big number that should stick out at the bottom of the page is the global amount of revenue in it that's being spent on infrastructure. So server storage bandwidth for platform as a service, which are OSS, load balancers database and then SaaS things like salesforce.com NetSuite, higher level things, confluent databricks so forth. All of those revenues add up to over a third of a trillion dollars and it's not distributed across the space across 100 different companies, it's not even distributed across ten different companies. It's dominantly spread across just a very small handful of companies.
00:03:29.000 - 00:04:25.702, Speaker A: And there usually is when there's this strong of a thing happening, some reason why this doesn't just happen automatically. So that's what we're going to cover here. And I do want to set the stage here that people keep in mind that when we talk about the decentralized public cloud for Web Three, just a lot of times we're in talk after talk and we're seeing protocols and we think that that is all that's needed to run software. So I just pulled up a diagram. This is one that predates blockchain. It's really showing the transition from on site hardware and software and how applications were delivered before Amazon created the public cloud and then the three categories. So later, if you haven't seen this before, it's a helpful way to think about it because each of these refers to APIs, each of these refers to software that somehow represents the thing below it and then advertises and allows it to be metered and billed and sold to people.
00:04:25.702 - 00:05:44.690, Speaker A: And that's really what the clouds have done, is allowed successive layers of stacking up packages. Kind of like how we think about DeFi as Legos, like infrastructure as Legos is what Amazon created that previously had been something you had to buy and rack and stack your own servers and storage and stuff to do. So the other thing that I think is a little bit on the background education side that I want to remind people about, which is what is decentralization and centralization anyway because it can be a very nebulous other topic. And thankfully, our spiritual leader, Vitalik, early on wrote a really good post that if you ever want to go back, if you're giving a talk, if you want to see what does Centralization Decentralization mean? It's a good three, four page article. And he really explains well this concept that there's three fundamental axes and I have them kind of written up here. This is just straight out of his talk actually, that there's architectural centralization, there's logical centralization, logical decentralization and then there is what he called political decentralization, political centralization. And two modifications I'm going to do to his talk because I think the political gets a little abstract for people in Vitalik's mind.
00:05:44.690 - 00:06:24.462, Speaker A: Everything's game theory, everything's incentives. And so it's very easy to just throw the word political. What political really means is financial. Who controls the right to be able to express your value and then who allows the capture of that value? Who's allowed to be rent seeking, take taxes out? Who's able to actually make the money in the space? That's the financial centralization that's referred to in political and it's very much politics, is about who controls resources who controls money. So that shouldn't be too surprising. The other simplification thing change that I do, which is really a simplification. And if you read his article, he'll kind of COVID this logical centralization decentralization that's not a black and white good or bad situation.
00:06:24.462 - 00:06:57.782, Speaker A: In reality there are times that logical centralization is the right kind of API, other times decentralization is the right API. So for the point of my talk, it's kind of not necessary to talk about the logical representation. And I instead collapse it down to a simpler two by two matrix, just architecturally centralized, decentralized and financially. And you can look here at the examples. Traditional corporations and direct democracy, they're both architecturally centralized. You can see that from their structure. But you see corporations are financially centralized.
00:06:57.782 - 00:07:55.098, Speaker A: There's one set of stockholders, one board. Direct democracy pushes the votes out to the edge and so we call it decentralized. And down at this bottom quadrant, this is the one where not a big surprise is where BitTorrent and Blockchains and a lot of us operate in and there's a lot of advantages to that. So where do today's public clouds fit in? And so I wrote down four categories that I think are really important here architecture, billing system, and you see the others here as well. And one thing that's sort of interesting is that when you look at public clouds right now, they feel very decentralized. The reason they feel decentralized is as a software provider or as someone using it, they physically and kind of logically spread everything around the world, have redundant zones, they have a lot of architectural decentralization. So sometimes when people say, oh, we're going to make a decentralized public cloud, they're like, we already have it, we don't need another one.
00:07:55.098 - 00:08:35.640, Speaker A: Amazon is it. But that's why I highlight these other three categories here. Because if you look at billing systems, if you look at who sets the pricing, who sets the provider, how does Amazon decide that bandwidth should be four cents a gigabyte or CPU hours should be this or that is their setting it. And that's fundamentally set by stockholders voting in a board, who votes in a CEO who hires a chief marketing and revenue officer and they figure out what they can price and so forth. So it's very centralized in that sense. And then when the earnings come in, if you're a software provider and you're selling your stuff through Amazon, amazon is the person in the middle. So no surprise they're going to be able to take a cut and dictate the terms.
00:08:35.640 - 00:09:04.998, Speaker A: That's sort of what it means. And so I don't know if this applies for everybody in the world. For people who are familiar with Sesame Street, one of my favorite characters from there was Count Dracula and I put him as a representation here. We should just think about it. That is really the reason why there's this fundamental centralization in today's public clouds. There's Count Dracula in the middle. He's able to meter all the bits that are being stored that are being sent, the CPUs that are being used and so forth.
00:09:04.998 - 00:10:11.990, Speaker A: And I just put at the bottom the one for you, ten for me, and I'll show you some numbers later. There are some parts in the public cloud where the rent seeking actually gets really high and it's actually one for you, 99 for me. But it's in a centralized system, that's what you end up having. And so just to tie it all back together from these various things, this is the end of this kind of buildup part of the presentation. If we look at that two by two centralization decentralization, our favorite Count Dracula, he's very happy where he is because it's like, hey, this is an architecturally decentralized. The technology people are happy, but I get to count everything and I love to count and that's today's public, you know, our spiritual leader Vitalik is on the other side and he's, hmm, I'd like the more public goods approach here and that's where the decentralized public cloud should be. So what would it take for us to actually be able to move those billing systems over and the metering systems over? That's the point of what we're going to get to in the second part.
00:10:11.990 - 00:11:00.806, Speaker A: And the other thing I wanted to say about this is when I talk about it, there's two sides. There's one side which is like using the SaaS and the other side is actually making the SaaS or making the things that are getting sold through the cloud. And I wanted to make a point here that there is sort of a secondary negative effect. I don't know. Did anybody here go to funding the Commons over the weekend? Juan Benet and Filecoin put that together all the time. Well, one of the questions always is know how do we actually allow the right money to go to the right people at the right times and so forth. And so open source software is one of these great comments like open source software, it's always a challenge of how do you fund it so that really good work is being done and the right people are actually getting rewarded for that work.
00:11:00.806 - 00:11:55.526, Speaker A: And I gave a couple examples of a few open source companies down here. The reason why is if you were to actually search Redis Labs, Amazon or Databricks Amazon or Confluent Amazon, you will see a fair amount of struggles between those two in terms of who gets the value out of the open core that they built. And what I mean there from an open source perspective, this is the dark underbelly of open source and the public cloud. The original vision of open source is that you build great open source. The technical team then makes a business and monetizes it. And all of the money from that monetization or significant amount goes back into the R D. And what's happened with the public cloud for open source is we've gone this fork method where the open core model as it's being delivered and shown on the clouds the cloud providers look and hmm if I just take the open core and wrap it up into Amazon Elastic, DB or Amazon this service then I can make all the money.
00:11:55.526 - 00:12:36.694, Speaker A: And so there's been a lot of open core model which is not invested in by the big three cloud providers. They utilize it, they sell a service against it and then they're competing with the actual team that you would like to be getting the value capture. And that's again where I go back to the Count Dracula. Count Dracula is very happy to be in the middle because he can insert himself uncomfortably where you would not want him to. So and I just gave an example here. If you look on Amazon or others, you'll see these long lists of all these SaaS services. If you go through these line by line, quite a few of these are actually open core open source projects that are being delivered by the vendor and sold directly and cutting out the actual team that did the work.
00:12:36.694 - 00:13:28.322, Speaker A: So for those of us who are like entrepreneurs and startups and others, this is sort of a negative effect of the centralized public cloud, which I just want to highlight to people is a really good reason for us to have a decentralized public cloud because it means that we'll put more money into the good parts of the system. The other thing, if you don't believe me in terms of the fees, I pulled up some exact kind of numbers here. It's maybe a little bit of like one of the worst parts of Amazon, but the egress bandwidth fees are one of the most ridiculously priced ones that are out there in the US or Canada. When you're paying to get your data out of Amazon, you're paying 80 times what it costs for them to actually set up and run those communication links. So there are some parts of the centralized public cloud where the pricing becomes really skewed. You will see at the bottom that there are other GEOS where it's not quite so bad. In South Korea it's only three and a half times of a premium.
00:13:28.322 - 00:14:41.434, Speaker A: But part of the reason why is this is actually a map of less mature to more mature markets. So it actually shows you the typical rent seeking behavior, which is that when you have a complete control of a market, you start off with relatively good pricing and then as you lock in the market and you sort of kill off the competition and get a dominant position, then you increase your prices to this ADX. Markup means actually 98% plus margin if you work in sales, which is, I've never been in a place where I've been able to get 98% margin on something I sell. Okay, so now let's get to the third part of the talk. And this is the one that I think is the most interesting here, because when you think about doing the meteoring and billing, what does that mean for us to actually have a decentralized public cloud? If we tried to have SaaS software that was able to sell its software, obviously there are people like Filecoin and others who have done it with a whole protocol. But I'm talking more abstractly about any general kind of software service. What would we need in order to do this right now? Because right now they're able to do thousands of API calls per second per server.
00:14:41.434 - 00:15:18.870, Speaker A: And what do these numbers add up to? And the numbers are really large. If you want to have similar metering billing infrastructure to Amazon, these are the kind of numbers you have to hit. You're not talking about going from tens to thousands or even millions. You're getting into the billions and probably even trillions of transactions per second. And the reason why is there's just so many software instances running on so many cores. I mean, think about it. 80 cores in one rack unit, 20 of those inside of a rack, plus storage, 1000 of those in a data center, hundreds of data centers around the world.
00:15:18.870 - 00:15:51.134, Speaker A: The numbers are just really huge. There's a lot of software that needs to actually be metered and build. If you wanted to have a decentralized public cloud that was running at that scale of 300 plus billion dollars worth of revenue being captured per year. And the latencies have to be in Microseconds. Obviously, if I'm in Paris and I'm doing an API call to a server in New York, microseconds doesn't matter. I've got 100 plus milliseconds transatlantic anyway. But the latencies have to be really low because a lot of software runs east west inside of one data center instance.
00:15:51.134 - 00:16:38.834, Speaker A: And fundamental networking bandwidth inside of a data center is at the scale of microseconds and Amazon and other things. When they meter the traffic between servers, they're not inserting milliseconds of delay. So the latency for these types of transactions has to be extremely low and the cost has to be really low because if the cost is cents or even MilliSense, you're not going to be able to have very fine granularity. Ideally, you would like to be able to have as small of a unit as possible. For what kind of API calls, what kind of compute transformations over data, what kind of data storage transformations, what kind of communications you would like to be able to. So in terms of blockchain technology and scaling, we know right away. Layer one blockchains aren't going to cut it.
00:16:38.834 - 00:17:23.670, Speaker A: I would argue strongly. I mean, L2 roll ups and side chains, you can get more aggressive and more aggressive with what you're wanting to do. With L2 roll ups and side chains, you can push into the thousands. If you're willing to give up more decentralized assumptions, maybe you could even get into the millions on roll ups and side chains. But fundamentally, it's not even the right technology fit. Because for doing this metering and payment, you're not needing to run full smart contracts, you're actually needing to run something that's a much smaller functionality. So here's where a lot of us, I mean, how many people have heard of state channels before? How many have heard of it being used anywhere recently? Yeah, nobody raised their hands in the room because they haven't been used anywhere.
00:17:23.670 - 00:18:04.314, Speaker A: There was a period of time we thought state channels were going to be like bitcoin lightning for Ethereum. We thought we were going to scale transactions with state channels. And that went away with roll ups because roll ups are way better for scaling transactions from layer one to L2. But as it ends up, state channels are actually exactly the right fit. I'm going to go through some of it here for what we need for payment channels. So the granddaddy of state channels are hashtime lock contracts. And hashtag lock contracts were made famous, of course, with bitcoin lightning, and they're extending them massively.
00:18:04.314 - 00:18:40.438, Speaker A: Now they're even building lightning apps and other things on top of them. So they're doing great jobs with them. But the reason I call them first generation is hash timelock contracts require pair to pair relationship between me and this dude over here in the black shirt. And if I want to communicate through the guy in the yellow shirt to somebody in the back of the room and I want to send something, I have to hop the funds to him. He hops it to that person, they hop it to there. Everybody's involved in all of the steps inside of these state channel relationships. So the reason they're first generation and they have a limitation for what we need to accomplish.
00:18:40.438 - 00:19:45.322, Speaker A: You can't have a network where you're inserting two or three or four hops worth of additional people in something that you're trying to meter, which is just a direct relationship between one piece of middleware software calling another one part of your application using one service to another service. So second generation state channels, given that people here, I'm going to spend a little bit of time on this slide, so just bear with me. But virtual channels are probably the coolest thing that happens to state channels that most people never learned about because they happened around the time that roll ups happened. And so right around the time that this great technology came around, state channels weren't needed to scale transactions in Ethereum anymore. Virtual channels are an amazing setup where you split things into two different types of channels. Ledger channels are called ledger channels because you withdraw and deposit money from the ledger like Ethereum layer one or a L2 roll up. Virtual channels are something that are set up inside of the state channels between participants.
00:19:45.322 - 00:20:35.280, Speaker A: So they would actually allow you, if you have these two green nodes in the middle, to set up a virtual channel, which is this dotted line here between the left red rectangle and the top blue circle. And once that relationship is set up between those two, there's some initial setup, like a TCP setup, or setting up a new socket or setting up an Https session or something. But once you've set that up, after that all of the communication from that point on you're able to do cryptographic token exchanges thank you, cryptographic token exchanges between those two endpoint participants directly. And those exchanges are as secure as a layer one transaction. So that's the important point. They're finalized instantly. Once you've received that packet that gave you value from the other person, you instantly know that you've gotten it from them.
00:20:35.280 - 00:20:58.022, Speaker A: Sorry, I actually just said it right there. But that's the critical point. So it's on the slide if you see it later. And I'll just kind of jump to the next picture here. And of course it gets a lot more complicated to get to that level of billions of transactions per second. Decentralized public cloud. We're going to be talking about having millions of participants here in the middle.
00:20:58.022 - 00:22:19.546, Speaker A: There's a lot of portions of it and so forth. But I hope you see just from me talking about it, both the importance of the problem and there's engineering wise and research wise, there's no fundamental vitalik has to come in and figure out execution environments or fundamental sharding or some new security model like we actually have the pieces that we need and it's more of a development and business problem. It's no longer is it possible to do or not for us to be able to get these types of performance. And the final model, I just draw it up here. But so the final end result after all of that complexity down there is the idea is that anybody who's over here on the left side who sets up an open source software project should be able to very easily download libraries that allow them to plug into this network advertise and offer services that they're doing on the computation bandwidth, doing onion routing, other stuff, storage front and then have people on the other side come in and again just link their rust library into their clients or whatever. And the users on that other side, the microservices side, are able to then go ahead and put in these micro token payments to the other parties. So just to kind of wet people's appetite, there is a team at Consensus Mesh and the Consensus Mesh R D group.
00:22:19.546 - 00:23:00.606, Speaker A: I'll just flash their pictures. So you see they are real people and they are not me. They're these five gentlemen over here. They're building out this actual infrastructure for one of the first sort of decentralized cloud services, one of the most important, which is the content delivery network that's going to sit in front of the filecoin storage network. So think of cloudflare fastly others. This is a network that allows people who have SSDs and good bandwidth servers to front the filecoin network and to make money directly by offering low, latency, high bandwidth availability of filecoin data. And this to me is sort of the first example.
00:23:00.606 - 00:23:56.654, Speaker A: I think it's like a beachhead. We're expecting, status wise, this one to be demonstrated there, but it's also getting generalized. There's some generous grants from Filecoin Foundation that's helping to support it as well. But for people who are interested either here or virtually later who are watching this one, please do reach out to us. I think there's a lot of interest here, and if you look back at the numbers, as much as it is exciting to see uniswap doing $60 billion and seeing these other numbers, but there's actually hundreds of billions of dollars of revenue going through the decentralized public cloud. And so there's a lot of money to be made in these spaces if we can actually move this architecture over and get some of these networks and other things set up. So right now, R D project, public goods funding, but there's going to be a lot of steps that we have to go through where these types of networks are more available and others, and ultimately someone doing an open core, open source model.
00:23:56.654 - 00:24:33.500, Speaker A: We want to get to the point where they say, okay, I'm going to deploy on Amazon, I'm going to deploy in Azure, and I'm also going to deploy on this payment channel system that settles onto Ethereum and that allows me to sell my software and it allows me to plug into all of these other great, decentralized core services. But I'm able to just write some additional software on top and deliver it that way. So thank you. All right, we have 1 minute, so I will just ask if somebody has a question right at their mind. I'm happy to answer one question. Okay, gentlemen, over there in the blue shirt on the right side.
00:24:36.670 - 00:24:44.334, Speaker B: Hi, thank you for the talk. I just have a quick question. Are you aware of Akash network? Have you looked at it before?
00:24:44.532 - 00:25:32.718, Speaker A: Yeah, no, there's Akash network I'm sorry, I didn't actually put up some other things that are being kind of tried here. So there's Internet computer platform, ICP Xerox Cord is another one that's doing it. There's something and I'm happy to talk with you afterwards there's kind of different approaches here, and I want all of them to be tried out. There are some that are going to be kind of more inside of particular networks and then there are others that are going to be more like the Linux Bazaar method where you just have a completely free no non. Tokenized piece of software that you download, and you then are able to use that and plug into any one of a number of different networks. So it's much more free form, self organizing. And that's what this talk is trying to address, because I feel like that one's important.
00:25:32.804 - 00:25:36.830, Speaker B: Yeah, thank you for the answer. I think it's going to be a longer conversation, so I'll find you after this.
00:25:36.900 - 00:25:43.820, Speaker A: Yes, sounds good. All right. Thank you. But yeah, thanks for pointing that out. Yes, there are some good providers. All right, I'm all done. Thank you.
