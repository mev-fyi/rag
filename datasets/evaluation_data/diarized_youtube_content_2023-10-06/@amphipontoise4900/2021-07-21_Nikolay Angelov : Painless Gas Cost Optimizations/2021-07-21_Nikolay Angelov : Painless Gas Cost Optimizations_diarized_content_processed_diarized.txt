00:00:32.420 - 00:00:55.328, Speaker A: Okay. Hello guys. I want to start by sharing you a story that happened to me and some of my friends. So we had a nice idea to start a blockchain startup and a business and it went totally good. Like we started getting some traction, some users and stuff. It was nice. We actually did the entire business plan.
00:00:55.328 - 00:02:14.020, Speaker A: Like we knew which parts we went to pay the fees for the users and we knew which parts we went to the users to pay the fees. It was awesome, it was growing. But suddenly one day we were in a big trouble just because we woke up and saw that we lost all of our profits and we actually lost some of our money. And that happened just because the gas price was raised like 30, 40, 50 times just during in a course of few hours and during a night. So we were in a big trouble and I don't know that happened to any of you just to wake up one morning and you're completely to be in trouble because the costs have risen so much that you're actually losing money, right? And you are in hurry to find a solution. Anybody happened? Okay, so why does this usually happens? Here we can see a chart which is for the last year, this is basically the gas price in wave for the last year and you can see there's many spikes just the course of few days. And the only thing we can see from this chart is that there is no stability, right? There's no point where the gas prices are stable.
00:02:14.020 - 00:03:07.816, Speaker A: So just in the course of few hours you might be paying a lot more money than you are actually expecting. And this doesn't apply only for companies, right? It applies to our entities. And here we can see that from the start of the year the average transaction fee on Ethereum was peaking at highest $45. And that's quite a lot for any entity to pay not only for users but for companies as well. And the nice thing we can see from the chart is that there in the end, like the recent months it's kind of normal, there's no such big high peaks and that's because of Ethereum improvement proposals. So we actually accepted and merged quite a few of that which improved the gas prices and costs. They're awesome.
00:03:07.816 - 00:03:51.268, Speaker A: There's one big one that is coming very soon with the London Hard fork. Hopefully it will make things better but there is quite still a problem that stays and that the gas cost is not stable. And here I want to say and emphasize that when I mention gas cost I don't mention execution costs of smart contracts. I talk in general about the cost of doing operation. Like this includes the execution gas cost, the gas price and the price of Ethereum in some cases. So because of this thing being part of three things actually it's very hard for it to be stable in general. So we need a way to actually make it stable ourselves.
00:03:51.268 - 00:04:46.250, Speaker A: And the other problem is it's very easy to hit the limits, right? So the blockchain throughput, it's quite low right now. Sadly, it's changing, of course, in the future, but we are living in today's. So when we hit the limits, the gas price just skyrockets, right? And here is a nice example. Here is a reddit post, which one user says, okay guys, the gas price is five gray today, everyone is happy, all good. But you can just see another rated post just 12 hours after the first one. The gas price is 150 and that is 30 times higher. So if you're paying the fees for the users, or if they're paying their own fees, nobody wants to see that in just in the course of 12 hours to pay 30 times more.
00:04:46.250 - 00:05:40.280, Speaker A: That's very painful. And even if they are on the wall side, you can see from the next graph that there are quite a few peaks. Even on the wall part, there's big peaks, but even when it's wall, there are some small peaks and that is not really good for the community at all and for adoption. So the question today is how we can take control over the gas costs. Is there a way to actually know what we are going to pay predicted and make the previous graph way more stable for us to be able to do business better for us and for our users? Before asking this question, I will say a few words about myself. I'm nicole angiof. I'm a blockchain developer and software engineer at Nexu.
00:05:40.280 - 00:06:35.932, Speaker A: If you don't know Nexu, we are basically providing financial services for crypto users. We do credit lines, exchanges, earn products and other products that are coming soon, like credit cards. And so besides working as software engineer, I'm a gamer and here are some ways to find me, ask a question or whatever. So let's dive in the solution. Probably the first solution that you all will be thinking of and the first thing that comes on mind is actually L2, right? So L2s are very popular. There are quite many of them recently, they are growing. And here are some examples like Polygon, which is probably the one with the biggest adoption, like Hooperang different zero knowledge proof RoPS and so on and so on.
00:06:35.932 - 00:07:14.596, Speaker A: And yeah, layer tools are actually the right direction with the AAPS. But till we get there, till we get them to be a permanent solution for everyday use, we need to figure something else. So just a quick question. How many people view actually use L2 daily or have in your solutions? Okay, quite few. Nice. So there are some problems with this approach currently and that it usually requires bridges, right? So you need to bridge the main layer and the L2 in some way. It is quite complex for normal users.
00:07:14.596 - 00:08:27.760, Speaker A: Like normal users usually use their funds on daily basis just on even having a single layer. If they need to connect to L2 and do all the bridges, all the stuff to know where exactly their money are, how to unlock them and stuff, it is actually very painful for them. It's really impossible for a normal user to do so it actually lacks adoption. So there's adoption under the tech community, more of the software people and stuff. But just for normal day to day users that we actually need, it's not really that big of adoption, it needs to grow even higher. So we are searching for some other solution. What if we just had something already but we actually do? Can somebody guess what I'm talking about? Any idea? Okay, so I'm talking about Create Two which is actually very powerful as we see today, but many, many people don't use it yet.
00:08:27.760 - 00:08:57.284, Speaker A: So yeah, the next question is do you guys use Create Two? Do you know what Create Two is first? Anybody? Okay, so seems more people using clarity Two than Create Two. How many? Use. Create two in production. Actually create two. Three, nice. Okay, so hopefully after today you'll use it more. So what Create Two does for the people that don't know, it actually gives you the ability to precompute the contract addresses.
00:08:57.284 - 00:10:00.856, Speaker A: So you don't really need to deploy the contract to actually know where it will land and actually do stuff with it. You can actually pre compute that. And this gives us some ability and room to play of exactly when are we going to pay the gas for the deployment and when we are going to skip that. So how the normal create works basically it uses hash of the sender and the nons to generate the others where the contract will be deployed. Right? And this is very, how do you say it, it tights your hands because the nodes you can use only once and you might by mistake redeploy another contract there and so on and so on. And Create Two actually gives you more power as now the others is part of two things that are actual user inputs and the first thing of the hash that generates the others is just a byte just for uniqueness. Then you have again the sender and then you have the two custom user inputs.
00:10:00.856 - 00:11:01.280, Speaker A: One is the salt which can be anything you desire. Just remember it if you want to actually deploy it there. And the fourth thing is the bytecode of the contract that you are going to deploy. And here is one big security, not security but one big mistake people do when first start using Create Two and that is actually not taking consideration too much. The bytecode part of Create Two, what does this mean is basically that if you change the bytecode at any point the others where the smart contract will be deployed will be different. So at the moment you generate others with create two with the bytecode and the salt you better not change them otherwise it won't be the same thing as what you expect. And actually seen many people do that mistake of just changing the bytecode after and hoping that it will land on the same others which actually doesn't happen.
00:11:01.280 - 00:11:51.392, Speaker A: Right, so what is create two used for? Actually many NFT places use create two to generate the NFTs. You can understand why is that? Well, many users create NFTs just for memes and other stuff you don't get the money, you don't sell it and so on and so on and if you're just going to make people to pay for every NFT that is minted it's going to be like unpleasant. So what they do is they actually create NFT. They know each other's situations, so they know the unique address of the NFT. They know all the properties, and they say, okay, this is the NFT. We will mint it when actually it's ready to be deployed. If you just sold it or not.
00:11:51.392 - 00:13:09.244, Speaker A: You decide when to pay the gas, and so on and so on. Create two applies to many factories patterns like if you have any kind of factory it might apply just you need to figure out if it's going to work for you or not. And the third thing which is the one that we will cover mostly today and maybe one of the most important ones is the custodial wallets manager management like managing user funds, like generating user addresses to deposit funds, like exchanges do, like big custodial companies do, like coinbase and stuff. It is actually very hard and it's actually very expensive in some cases. So here is how usually the normal wallet generation happen. Of course I don't have slides but usually you can just generate normal addresses for users but it comes with a lot of problems like first the normal addresses are not multi signature. The other thing is that usually if the user wants to transact only ERC 20 to withdraw the funds, from there you actually need eaters which is to pay the gas and it becomes very painful to transfer gas there and so on and so on.
00:13:09.244 - 00:14:11.496, Speaker A: So most company when they start, first thing they do is actually create with smart contracts which are multi signature contracts that manage these funds and the basic architecture looks like there's a factor which basically creates the wallet. It just deploys different smart contracts which are the user wallets and you can see they are deployed. The problem here comes when actually the user wants a wallet you basically deploy it for him, right? Let's say the first user comes today, right now the gas price is five way you pay $5 for the first wallet, all right? But like in 10 hours another user comes when it's an address you deployed but the price is 150 gray. You pay $100 for that wallet. But there's no difference between two of them and your cost of doing business is like 2030 times higher. Right. The other problem is that you don't know if this user is going to be active.
00:14:11.496 - 00:14:53.148, Speaker A: Right. You pay the actual price when the user registers and joins the system and you don't know if he's even going to deposit. So you might have just spent $100 giving him an address and he will never return back, which is very painful. So how can we use create to deploy wallets and create this stuff? Very smart. Actually, we now have another factor which has two methods now. One is to create the wallet, basically generate the wallet address with the create two function. And the other thing is to deploy it when we actually need it.
00:14:53.148 - 00:15:19.396, Speaker A: So here when the user registers, we basically create wallets with create two. We know which addresses this going to be deployed. If we need them to deploy them, we give them to the user. And after that, it's just the same thing for the user. Like the user doesn't understand anything between the other architecture and this one. And here we gave them the addresses without paying even a penny. Right.
00:15:19.396 - 00:15:59.632, Speaker A: So a user comes for the first wallet, he deposits very small amount. We don't care. The second user comes, he deposits one ether and the third one comes to deposit zero. What we going to do then? Because of the conditions, we can set any kind of condition, even for the gas price or for the user deposit, we basically deploy the wallet, which is for the second user only, because it's the only one that makes sense to deploy it for. Right. When the first one has deposit almost nothing, the money are there, they are safe. But there's no point for us to pay the fee for that small amount.
00:15:59.632 - 00:16:40.412, Speaker A: So we charge it to the user, we give it to the user, but we don't move it out of there till he deposits again. Right. So here you can see now that the second contract is deployed and the funds are moved to the main wallet, which is actually the so called sweeper when you move the funds to your custodial. Right, okay. So what does this give us? Gives us the condition deployment. We can pretty much set any kind of parameters when those contracts, when those addresses going to be deployed. Like it can be gas price, total gas cost.
00:16:40.412 - 00:17:26.476, Speaker A: It can be how much the user is depositing right now, how much the user has deposited till the start of time, how much money are already there. Maybe the guy that deposits 0.2 ethers deposit like maybe $2 today, but in five years it's let's say $2 million. You might still go back and take these eaters, so you can do that as well. So the condition department is very powerful. It gives us additional safety. Why is the additional safety because usually these wallets that are generated with Create Two can only move funds to the main wallet so that way you know that they are not going to be moved to anywhere else.
00:17:26.476 - 00:18:18.056, Speaker A: And the other thing is that you can have multiple factories so if something happens with one, let's say in the worst case it got hacked or something, you can just move on with others. You can redeploy to give new addresses to people. It's very powerful. It supports batching so you can do a single transaction which batches multiple deposits and transfers to the main wallet. And there's free ETH sweep. So usually in the normal wallets when somebody deposits ethers, you need to go there and move the funds which you pay, right? But because this smart contract and you have a fallback, you can just set up your fallback to move the ethers instantly for free. Basically it's not free for you, it's free for you, not free for the user.
00:18:18.056 - 00:18:56.164, Speaker A: He pays a bit more, but in that case it's better. So that way you don't need to take care of depositing ethers there to move that kind of stuff. It just automatically moves to your main wallet. It can move to the cold wallet or another hot wallet, whatever you desire, right? It's programmatical. So in general, pay when you want, it saves at least 80%. Like this can go even higher depending on network conditions. And of course setting the first rule pay when you went correctly.
00:18:56.164 - 00:19:54.188, Speaker A: So if you monitor this stuff, it actually makes huge difference about using one architecture over another and it's painless user experience in UI because for the main user nothing changes, right? They still get their address there, they don't need to do anything additionally for that. Basically they don't care, they don't understand anything. Right? So actually using Create Two gives you control over the gas. It gives you control when you pay the gas costs. How can you start using this if you want to start using it? Well, Openziplink has a very good tooling for that. There's quite a nice guides that are open sourced and you can use. And the thing is that for the wallets management, BitGo wallets use this system and coinbase wallets as well use this system.
00:19:54.188 - 00:20:22.790, Speaker A: I don't know for the coinbase ones, but for the BitGo you can find them on their GitHub. They are out there. There's explanation of how they do that stuff and how the user funds move and so on and so on and you'll see it's nice. So I think that's it for the 20 minutes that I had. So thank you. Do you have any questions? Hopefully yeah.
00:20:25.640 - 00:20:34.840, Speaker B: Hi, thanks for this speech. It's interesting. Are you actually reusing the wallets from those users who have zero in deposits?
00:20:35.420 - 00:20:38.136, Speaker A: Are we using the wallets from the zero deposit guys?
00:20:38.158 - 00:20:43.304, Speaker B: Yeah, using it again. I mean for different users it depends.
00:20:43.352 - 00:21:10.628, Speaker A: On your choice, you might say topic. Let's say if you have an active users, move this to another, but usually you probably don't end in this case because the zero deposits wallets you haven't paid for them. You can just generate as much as you can. Like, I can go in just a few minutes, generate a million of wallets like this, and then just deploy the ones that actually people deposit money to.
00:21:10.794 - 00:21:11.940, Speaker B: Okay. It makes sense.
00:21:12.010 - 00:22:08.290, Speaker A: Thank you. Another question. Don't be shy. Well, okay. I'm here around if you want to speak with me or anything I'm free to discuss. Thank you all for coming. Hopefully it was something to need.
00:22:08.290 - 00:22:12.270, Speaker A: Yeah, of course.
