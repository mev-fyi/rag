00:00:00.170 - 00:00:00.720, Speaker A: SA.
00:00:24.970 - 00:01:01.630, Speaker B: Evening, everyone. Thanks for sticking around for this talk. I was expecting an empty room, so I really appreciate people who are here. This is going to be a beginner level talk, so we're not going to dive deep into these kind of mitigation strategies. I would love to talk to you about them after the talk. This talk on Fort the duration doesn't allow that. But I'm going to go through some of the sort of step by step things about slashing in ethereum.
00:01:01.630 - 00:02:19.142, Speaker B: So the outline is an introduction, slow introduction for anyone who's not familiar with the topic. Some major events that happen which are not as major as DeFi hacks, some limitations of traditional It security certifications when it comes to slashing and then what node operators and stakers can do to reduce these risks. And at the end, some Q A. So as an guess, you know we're at EFCC. Everyone here knows that there's a ton of ETH being staked, right? So the blue line here, if you can see it well, shows that there's a bit over 24 million ETH staked at the moment. And you probably noticed here there's quite a spike after the Shanghai upgrade this year in April. And basically at the moment we have 45 billion worth of billion USD, worth of crypto, worth of Ether staked.
00:02:19.142 - 00:03:26.094, Speaker B: But this is at risk of being slashed because node operators might do some misconfiguration. For instance, they might by mistake, not maliciously double sign or they might suffer downtime and this could lead to slashing. There are many ways in which people could stake. Right here we see a nice picture from the Consensus blog. You could do solo staking, you could offer staking as a service or pooled staking. All of these have different advantages, disadvantages for stakers, but in the end someone's operating those validators, right? There's some machines involved in this process and if they are misconfigured, this could lead to slashing. And as you all know, as a validator in Ethereum, you need to stake at least 32 E.
00:03:26.094 - 00:04:19.246, Speaker B: And then if you misbehave, you get slashed. You could get slashed a small amount, which is like one E if it's an isolated event. But if you do something that seemingly is malicious as double signing, you could get your whole stake slashed. There are some events, neither of these events involved a total slashing, right? And they're spread across the years. We didn't want to give the exact date or any names of the node operators that were involved in order not to point any fingers, but they're pretty spread out. They're not very frequent, as they should not be. We can go briefly over them.
00:04:19.246 - 00:05:04.414, Speaker B: But if you look at this table, you can basically see that things such as the slashing prevention database persistence is very important. That is the root cause of the first event there that led to ad e and lost rewards being sort of the impact. Other things are bugs in the client software itself. Right. This is the second event which actually so a fix contained a bug. This bug led to validators getting slashed and a lot of them. So it's not necessarily always an isolated event.
00:05:04.414 - 00:06:19.906, Speaker B: Actually, if more validators are involved, the penalties are even higher. For this second one, I think the penalty was not even properly calculated, but I think there was some sort of like forgiveness there. For the third event, there was a configuration issue, right? So here every node was using a default configuration and due to a sort of deterministic scheduling or algorithm in the software, the same node was being pinged or same validator was being contacted. And this led to the entire system slowing down. The fifth event had to do with spinning up two clusters with the same key that did double signing. And then the last one, again, sort of an influx of attestations came in. And this actually led to the sort of worst case scenario, which is putting the entire network in leak mode.
00:06:19.906 - 00:06:50.206, Speaker B: So that's sort of the worst thing that could happen. And it happened recently. So it's not that these kind of things are going away this year. Right? And they were more frequent back in 2020 when things were just getting started. I didn't include all of the events here, I just wanted to include different ones so that you can see what the different reasons for slashing could be. The penalties are not extremely high. They could be much higher.
00:06:50.206 - 00:08:29.102, Speaker B: Right. And what do node operators, professional node operators, do nowadays? Many times you see them getting certifications that you often see in traditional It companies such as SoC Two or ISO 27,001. These are very well established security certifications, but they do not check for any kind of slashing prevention mechanisms. So if an Ethereum Two staker goes and gets one of these, even if they have zero slashing prevention mechanisms, they will get the stamp and they will be certified. They will have a great It operations process, for sure. They will have all the things in place for whatever those certifications check for, but they fall short of any web three specific protections. And at Quantstamp, we've started developing another type of assessment which we call an web free infrastructure audit, where we specifically check for things which are not being checked by the SoC Two or ISO 27 One certification processes, let's say.
00:08:29.102 - 00:09:43.202, Speaker B: So we're checking for having the same validator keys at the same time on two different instances. These other sort of like certification or certificates, like Sock Two and 27,001 will check that those keys are safe, no one can access them, they're managed really well, but they don't check that you don't have two instances with the same key. Again, similar thing is the deletion of the slashing protection history, that's not an item on the certification list and so on, right. They don't check for bugs in the client software. They don't check for misconfiguration of your web free signer or orchestration when it comes to web free signing because they don't have that, I mean, in other companies that do it. So there's a bunch of these kind of things that need to be checked in order to ensure that a node operator has a lower likelihood of being slashed. And even if all of this is done right, there's no guarantee.
00:09:43.202 - 00:10:40.214, Speaker B: It's just sort of a snapshot in a point of time. So you need to monitor that this sort of like, security posture of a node operator is maintained over time. So node operators, what they should do is they should also employ a strategy. And I love this blog post by Emmanuel Nalepa from Kiln. He posted this very nice strategy that involves a layered approach. But he admits that even this layered approach has holes in it, right? It's like cheese slices. So you see that every layer prevents some of the hazards, right? Like, if you have like a Git ops validator to check public key duplication, that's great, right? It's going to catch some hazards.
00:10:40.214 - 00:11:38.794, Speaker B: Then you have maybe like this validator client for the local antislashing database. You do one for an external signing authority and that's sort of like your global antislashing database. Each of these blocks some of the things even like the Doppelganger detection. But there might be others, right? The unknown. Unknowns. Or like, one of these layers might have itself a misconfiguration in it and that could lead to a slashing event, right? And in case of catastrophic events, you want your stake to be safe while you're sleeping at night, right? And institutions like pension funds really want that, right? They cannot afford to lose their principal investment because there's going to be health paid, right? There's no such thing as 100% safe and secure. Right.
00:11:38.794 - 00:12:49.710, Speaker B: I think this is something which is quoted very often in the security space, but no one knows who the author is of this quote. In case of a catastrophic event, like, you know, you need to be able to recover your stake. And think about it like this. When you're staking, would you let your node operator drive your car around Paris without knowing that they have, like, depending on what car you drive? But would you let them drive for a year in Paris without knowing that they have some kind of insurance? There's so many things that could happen, even if you put all sorts of things around your car to protect it from getting scratched or whatever, who knows what might happen, right? So trusting a node operator with your ETH is pretty similar, right? And what you can do, of course, is to buy insurance. And this is where I want to introduce Chainproof. We're, like the world's first and only regulated insurance provider that covers slashing insurance. We're licensed in Bermuda.
00:12:49.710 - 00:13:56.840, Speaker B: We're incubated by Quantstamp Reinsured by the world's largest reinsurance company, Munich re and our most notable investor is Japan's second largest insurance company. So our policies are backstopped by these traditional players. They're not sort of like unregulated crypto native solutions and they're also structured in slightly different ways. In conclusion, I just wanted to go over all of the things that we've talked before. There's a lot of ether staked, right? Validators, if they misbehave or like they get unlucky, they might get slashed and slashing could occur due to different reasons, either double signing downtime or others. And if a node validator is relying on traditional certifications like Sock Two or ISO 27,000, that is not sufficient. Something more specific to Web Three is important to do.
00:13:56.840 - 00:14:32.020, Speaker B: And not only that, they should employ antislashing strategies that have multiple layers, but in the end, there's no such thing as 100% safe and secure. So in order to sleep better at night, maybe consider insurance. That's it from my side. Thank you. Any questions? I don't know if we have time for questions. One question.
00:14:40.330 - 00:14:49.370, Speaker A: Thank you very much. I'm curious to know, is there like a set of best practice already that are being implemented within the industry around the different validators?
00:14:50.430 - 00:15:45.130, Speaker B: There are best practices in terms of what to do in order to prevent slashing but we don't see them as widely implemented. So every validator is very different in that regard. I think the drawback is that the infrastructure of a node validator is not openly visible like smart contracts on chain. So they can do whatever they want under the hood. And even when we do these engagements, they need to give us access. Right? And sometimes what we see is not so nice and we help them fix everything. But yeah, I think this lack of transparency when it comes to the staking providers is very problematic.
00:15:46.270 - 00:16:08.420, Speaker A: Yeah, it's kind of surprising because there is what I heard like 29 validators right now on Lido, for instance, and knowing the community is pretty much using a lot of open source product. I mean, everything almost but you're saying that actually in the practice and how we implement that is still like very everyone has their own silo and it's pretty close.
00:16:08.790 - 00:16:11.374, Speaker B: No, they use open source software.
00:16:11.502 - 00:16:23.270, Speaker A: Well, not the software. I mean more in terms of practice. Is there like a space where actually everyone share a little bit what they do and maybe being able to giving recommendation to each other to help each other?
00:16:23.420 - 00:16:55.600, Speaker B: There are some communities, but I'm not sure how much they actually because the problem is none of them can see what the others are doing. So even if they don't do a good job, they can say they do a good job and who's going to know? Right, but because we want to give them insurance, we need to know. And then if they want insurance, they need to show it to us. Right. Because they're very hesitant. Right. We reached out to many of them and they're like, nowhere are we going to show you what we're doing, right?
00:16:56.610 - 00:16:57.360, Speaker A: Okay.
00:16:58.610 - 00:17:04.880, Speaker B: Thanks for the question. All right. Thank you very much.
00:17:05.450 - 00:17:05.940, Speaker A: Thank you.
