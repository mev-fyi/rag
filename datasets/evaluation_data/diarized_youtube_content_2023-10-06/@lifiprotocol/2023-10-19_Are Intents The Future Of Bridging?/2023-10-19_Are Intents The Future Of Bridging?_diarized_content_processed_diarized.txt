00:00:07.560 - 00:01:02.383, Speaker A: So I'll just kind of start lay some foundation here. So the title is pretty self explanatory but we're going to be kind of talking about intents today. That's been a word that everyone is throwing around. I'm sure your favorite thread or has wrote some, you know, diatribe on thread on Intents. At some point you've probably, if you've been to a conference, someone has talked about Intents. Arjun and I have been kind of looking into Intents specifically from a LE perspective and just trying to understand Uniswap X specifically along with, you know, cow swap and a couple other solutions. What we've kind of found is that intents aren't really new and a lot of protocols that launched a while back, hint hint, across and Connext are kind of already built in this intent centric way.
00:01:02.383 - 00:01:57.545, Speaker A: I don't know if they will 100% agree with that, but it's maybe something they'll agree with 50%. So today we just wanted to have Arjun and Heart on. So Arjun is from connext, Heart is from across and we're just going to kind of have a laid back conversation about Intense will start pretty simple, you know, defining Intents. Then maybe we'll move into Uniswap X specifically talk about fillers and talk about some trade offs that Uniswap X is making and then we'll round it off with, you know, the big question are intense the future of crypto or not? I'm sure we'll come to a yes or no answer that everyone will agree with. Probably not though. But before we get started, Heart, Arjun would love if you just kind of gave a 30 second intro just because we're inviting you on Lefi's platform. So would love for you to intro yourself.
00:01:57.545 - 00:01:59.445, Speaker A: I know you've been on here before though.
00:02:00.545 - 00:02:01.241, Speaker B: Do you want to go first?
00:02:01.273 - 00:02:04.365, Speaker C: Hart no, you go Arjun, you unmuted.
00:02:06.265 - 00:02:38.923, Speaker B: Damn. I'm Arjun. I'm one of the founders of Connect. Not to be mixed up with Arjun, one of the members of LEFI. I have been building in this space since 2016 when I started working on Ethereum infrastructure. We started Connects in 2017 so we were actually a project, probably one of the oldest projects in the space at this point. Initially when we started we were largely an R and D focused organization that was just interested in figuring out how to solve Ethereum scaling and so we built actually in 2018.
00:02:38.923 - 00:03:23.025, Speaker B: One of the first L2 is really general purpose, kind of not actually tied to a specific organization Layer Twos that was like non custodial for the ecosystem. And at the time we were largely focused around payments because that was the market that we thought would like really grow very quickly. Unfortunately payments didn't really take off, Defi did. And in fact payments is only just now starting to actually become a market. That is interesting. But in the process of that experience we not only learned a ton about L2s and like scalability, but also started working with a lot of the other kind of L2 researchers who then spun off to build their own roll up ecosystems. So I included folks like Plasma Group that became Optimism, the off Chain Labs team that became Arbitrum, et cetera.
00:03:23.025 - 00:04:27.613, Speaker B: And I think that in the process of that we kind of realized in late 2020, early 2021 that there was going to be this problem that this space was going to face. And it was like the next big problem after we solved scaling, which was how do we make sure that people can get between these different scalability solutions in a way where they don't really need to know what's happening. This is the core thesis of conext. This is really what we've been working to build over the course of the last few years where we've of course started out with being a bridge initially and now have moved as of last year moved into any kind of cross chain interoperability. But the core thesis has always been that as a user today when you use YouTube, you don't need to know anything about how Google's distributed systems infrastructure, their actual sharded database behind the scene works. It's crazy to assume that users would need to know that. And I think that we're in the same place today with blockchains, where it's kind of crazy that you need users to consciously know the difference between Arbitrum 1 and Arbitrum Nova.
00:04:27.613 - 00:04:59.205, Speaker B: And it's kind of crazy that we need users to consciously have to bridge between those chains. And I think that's just sort of a testament to how early we are in this space. And so our vision at KNEXT is that we want to help create a world where the chains don't matter. Where as a user you are interacting with an application and applications that are built in the space can onboard users and tokens from any chain all at once. So basically create a world where as a user really you're using the app more than anything else.
00:05:03.235 - 00:05:39.425, Speaker C: Okay, I'll hop into. My name's Hart, I'm one of the co founders of Across. I will keep this brief. I got into crypto with a different project called UMA that is related to Across. UMA is an optimistic oracle and across actually uses it as its verification system. Across, which we'll be talking about today, is as it turns out, an intense based bridge architecture. I don't think we necessarily realize this when we built it, but it definitely is.
00:05:39.425 - 00:06:32.085, Speaker C: And we can talk about how we came to this realization and we can talk about the pros and cons of this architecture. And then I think, Mark, we will conclude that this is the future of bridging, but we'll get there at the end of the hour. The only other point that I'll highlight about my past is I did start my career, I study, I studied computer science, but I worked as a bond trader. And the reason why I'm bringing this up is I was bond trader at Goldman Sachs and I think a lot of the market making infrastructure that old school bond trading does, including like request for quotes and like principling risk, it actually translates into some of this intense based architecture in a bizarre and kind of interesting way. And maybe we can talk about that at some point too. So that's me pass back to you guys.
00:06:34.345 - 00:07:20.495, Speaker A: Beautiful. Well, I'll start off with the first question and then I'll let. I think Arjun and I from lefi will be kind of moderating here and add an opinion here or there, but we mostly want to have heart and Arjun from Connext lead the hot opinions here because they're building these systems. Arjun and I are mostly learning about them right now and so we would kind of, kind of bring the audience into our learning experience. And so I think the first question I want to ask is very simple and it's just what is an intent? How would you define that to someone who's never really come across the term before? And I think maybe I'll start with Arjun from Conext again because that's what we did for intros and we can go from there.
00:07:21.485 - 00:08:03.055, Speaker B: Yeah, that's a good question. So an intent is basically a construction where a user defines in some way on chain something that they want to do and then some counterparty does it on their behalf. And usually like the kind of complexity of the thing that they want to do is technically unbounded. Like you could say like I want somebody to go and buy this NFT and then go and use it to do xyz and there's no reason why you can't just pay somebody to do that action for you. There's certain limitations to intents and we can kind of get into those later. But that's the core construction. Now that core construction has been around for a very long time.
00:08:03.055 - 00:08:49.683, Speaker B: The first real intents were atomic swaps in bitcoin days in 2010. And there what you were doing was you were locking up your bitcoin in a contract, a hash timelock contract. And then you were locking up some tokens from another chain. So like litecoin for example, in another contract and then at a like some liquidity provider goes and does that for you and then at some predefined time the litecoin unlocks and is given to you and then the bitcoin unlocks and is given to the liquidity provider. Fundamentally that's what we're experiencing today with Uniswap X, with Next, with across really is just that model. There hasn't really been any real like changed since then. But of course intents have taken a lot of different forms.
00:08:49.683 - 00:09:31.465, Speaker B: So like state channels are a form of intent which became really, really popular with like lightning and then in the early days of scaling for Ethereum Connext when we first went live in 2021 with our like state channel based and then eventually atomic swap based cross chain system, we're using intents across like hop used basically kind of uses the kind of base knowledge behind intents to do what they do. And as I'm sure heart will expand on a bit more, across also uses intents like the kind of base, kind of locally verified mechanism of someone, some liquidity provider, some router, some filler is going to be fronting the capital to the user on the destination chain and then being repaid at some point later.
00:09:33.085 - 00:10:20.063, Speaker C: So the only thing I want to add, so I very much agree with everything Arjun said, intent specify outcomes. But the one thing I want to highlight that I think is a big point of confusion is the difference in how this works in like single chain systems versus cross chain systems. Because I think this actually makes the whole conversation quite confusing. So when you talk about a single chain system, like cow swap is an intense based architecture or single chain Uniswap X is an intense based architecture too. But those outcomes are filled atomically. So you have people compete to figure out the best way to fill your outcome on a single chain atomically. Nobody is fronting capital or cash in a cross chain context.
00:10:20.063 - 00:10:50.065, Speaker C: I think one of the defining characteristics of an intense system is that you have this third party actor called filler relayer. I think Arjun at connects calls them a router and they are fronting capital. Their own money to fill the user's intent and then they're getting repaid later. And I think that this difference between the single chain, the cross chain stuff means they're actually quite different systems with different properties. And I only wanted to highlight that.
00:10:51.445 - 00:10:53.185, Speaker B: Yeah, strongly agree with all that.
00:10:54.885 - 00:11:13.575, Speaker D: So I think like you guys mentioned, HTLC is Atomic swaps. So we've heard of these terms before as well. Right. But why do we now need a new term to define all of this? Like where is the term intents coming from? And how is an intent based application different from like a transaction based application?
00:11:14.875 - 00:11:18.415, Speaker B: There's a simple answer to this and then a complex answer. Go ahead Art.
00:11:19.035 - 00:12:26.225, Speaker C: Well, here's what I'm going to say. So I'm trying to define like let's put this now in the bridging context because we are talking about bridging for a second and like there's many ways to let's constrain this problem. And let's say we are trying to bridge canonical assets. So no like Mint and Burn Bridge, but I have like Ethereum on, on the Ethereum network and then I have Arbitrums, Ethereum on Arbitrum and I want to bridge between those two chains. The transaction based approach means there's like a pool of liquidity sitting on both sides and some message gets sent from one chain to another that says okay, user deposited on one chain and this message then gets sent that this happened and it releases funds on the destination chain. So that's like the transaction based approach, the intent based approach. I think the core difference here is there is this third party actor that is actually going to fill the user with their own money on the destination chain and then get paid back later.
00:12:26.225 - 00:13:01.105, Speaker C: And I actually think it's this concept of like off chain liquidity that really makes this architecture different and actually has a lot of really nice properties that I think both Arjun and I actually very much agree on. But I think this off chain liquidity has some really nice properties that make this a good bridging architecture. So I guess Arjun from lefi, to answer your question, why do we need this term, we need to describe this bridging architecture and I think it's a swap, this cross chain architecture in a way that differentiates it from a transaction based architecture that we actually think is inferior.
00:13:02.325 - 00:14:16.305, Speaker B: Yeah, I agree with that. I guess one kind of nit here is that the atomic swap approach was also similar in the sense that there were off chain liquidity providers and that was actually considered the drawback at Least in the early days was you have to have this off chain set of liquidity providers. Those liquidity providers could go offline, there could be issues where nobody's available. And so now you send funds into a contract on chain and nobody's available to actually complete the transaction. Things like that, which I think we can talk about some of those trade offs in the future because we have a deep, deep and very, unfortunately very firsthand information experience with dealing with a lot of that. But yeah, I mean, I think beyond that, the other, the other reason, I guess Arjun from lefi, the other reason, to answer your question, and this is really like the, this is the real reason, unfortunately, and it's just kind of a testament to how the space works is like there's been so much fud and counter narrative around atomic swaps at this point where like so much of, so much of it is like based off of like criticisms to atomic swaps that were made years ago that we've either moved past or there are like meaningful ways to kind of improve the user experience of that. The atomic swap terminology itself is now considered to be this like very outdated thing.
00:14:16.305 - 00:14:46.855, Speaker B: Now of course the domain space of intents refers to a lot of things that go beyond just like cross domain intents. But for cross domain intents it made like the reason why people are excited about cross domain intents as a concept is or at least like really talking about it and labeling it that way is just because that is the flavor of the month's term. And like, you know, even if the constructions aren't really meaningfully different, it's just a term that immediately adds like a 10x to your valuation as a product.
00:14:50.195 - 00:15:25.755, Speaker D: Okay. So I think I want to go deeper into how across and connects are intent based systems. But I want to talk more about the off chain liquidity aspect of it. Right. So I think like you mentioned, for most bridges, any off chain component, for most protocols actually like any off chain component is seen as a trade off because you're moving things away from like, I don't know, you're moving things away from on chain. So basically like since when are we okay with moving liquidity away from like the transparent blockchain and why are we okay with making this trade off now?
00:15:27.655 - 00:16:25.497, Speaker B: So this is a really, yeah, this is a really interesting question because we've we've literally with the same system, we've gotten both ends of this feedback where there have been, you know, in 2021, 2022, the big pushback that we got from a lot of People was like, you know, at the time Connects was using an intent, I mean still is using an intent based system, but it was working slightly differently at the time. We had like an RFQ system, a request for quote system where upfront the user within their browser would actually go and query the network to figure out who is going to be able to give them the best price for a cross chain transfer. That is actually the theoretically most decentralized option because there's no person, that is no entity, no roll up, no nothing that is actually responsible for matching these orders or figuring out who is the right person to actually fulfill a transaction. Instead it's the user that decides it. The challenge that we ran into was integrating into a bunch of things we found. Even for example Levi Socket and a bunch of other aggregators. We found that it was actually really difficult to do this because there were off chain dependencies.
00:16:25.497 - 00:17:02.445, Speaker B: You would need to quote a bunch of things off chain to go and get routes. You would need to then go and sign a transaction on the destination chain. And that whole flow made it just much more challenging for integrations to occur. However, there has been a bit of a shift in the space and I think that this has actually happened really only in the last year and a half to two years where folks have started moving away from on chain only systems. If you are a developer today, for instance, you used to be able to swap tokens in a purely on chain way. You used to for example, be able to go and call Uniswap V2 and swap any token for any other token. You didn't need any off chain dependencies for that.
00:17:02.445 - 00:17:58.835, Speaker B: Today that is actually not really possible anymore. And for really the vast majority of use cases you actually now do require some off chain information to be able to know like what is the best way to do something. And I think that that introduction of this off chain complexity. So for lefi, it's like going and getting quotes from one inch on multiple chains and then also getting a quote from the bridge, right? You need somebody to provide the service of routing and figuring out how best to actually make this transaction happen and then surface and do that on behalf of the user in order for the user to have a successful experience that isn't just going to cost them a ton of money. I think a big part of it is just like this space has matured, the options have increased and as a result of that there is now a need for a greater amount of off chain data. I don't think it will be this way forever, but for now this is a big part of the value that folks like lefi provide and a big reason for why intents need to exist.
00:17:59.135 - 00:18:41.303, Speaker C: Well Arjun, I'll maybe even simplify it that multi chain is the reason why you need off chain infrastructure. There needs to be things that are sending like that are. Even if you're sending messages, you're sending whatever it is between chains. Like you need off chain infrastructure that's looking at both chains and doing things. And like so we have off chain infrastructure to support this layer, to support scalability. It just exists. Even your sequencer for your L2 system is sort of a bit of off chain infrastructure that is doing this task because it's supposed to and there's a dependency on it.
00:18:41.303 - 00:18:55.555, Speaker C: So I guess like Arjun from lefi, like I think the like off chain liquidity makes total sense in this context because we already have a dependency on off chain infrastructure to do cross chain things.
00:18:57.255 - 00:19:34.193, Speaker B: Yeah, for sure. I mean this will always be the case. Like we will always, especially now. I mean this is the really the big benefit that everybody talks about with intents is like there are now like in the past it was like okay, you wanted to do a swap, all right, you routed to Uniswap or like you wanted to do xyz. All right, there was one protocol that you could work with. Now there's just so much diversity and so much competition and like that is. It makes sense that that's happening right like where the whole space is growing and as a result of that growth people are like specializing and especially because these things are like kind of race to the bottom public goods it makes sense for people to like hyper specialize into one specific use case which they're really the best for.
00:19:34.193 - 00:20:37.175, Speaker B: But you can't expect users to know what that hyper specialization is. So like you can't expect the user to know which chains is connects the Most liquid on versus which chains is across the most liquid on versus which chains is layer 0 the most liquid on. Instead the user should just be integrating or using something that just tells them that. And I think that that complexity, the increase in kind of like just like the growth of the space overall means like this problem isn't going away. We're going to have this routing issue and it's not just going to exist for like transfers and defi but it's good and swaps but it's also going to exist for like just about everything where like you're going to have to have some mechanism and it will really have to be like a network of service providers off chain that are responsible for doing all of these services, for like getting the routes for fronting liquidity, for figuring out the best pathway for doing like a rebalance or like an arbitrage that actually, you know, closes a bunch of positions all at once. And like this is really like where the AI stuff also shines, where you can just like plug all of this into GPT4 and then expect it to figure out, okay, what are the best ways to like what are the best strategies to come up with? And you don't actually have to do anything anymore on chain.
00:20:40.795 - 00:20:50.815, Speaker D: Okay, so I think like we understand the benefits of off chain liquidity now, but then what happens to bridges that have like liquidity? Yeah.
00:20:51.675 - 00:21:42.255, Speaker A: Okay, so to just kind of go a little bit deeper on off chain liquidity, something that Arjun from Lefi and I have talked about is one, this idea of fillers or quotas coming in in a cross domain intent system kills the concept of TVL for bridges, which I think is very healthy. But this begets the question, are there enough fillers or quotas in the space to create decentralized systems? And who is doing the filling or quoting or relaying here? We kind of, I've found with white papers and with Twitter spaces just kind of treat these guys like, you know, magical entities. We do this with bundlers with 4337 as well at across and at connext. Who are you seeing coming in to fill these intents and can they be decentralized?
00:21:45.395 - 00:22:29.153, Speaker C: So when you say decentralized, like the filler or relayer is a centralized entity, they're their own actor. Right? So to build a decentralized system, you just need this role to be permissionless. So anyone can be a filler or a relayer and you need to make sure, or solver, whatever. You need to make sure that anyone can do this role and that there is enough economic incentive for them to do this role that they show up. And the simple truth is that people respond to economic incentives. Like we. I'm genuinely surprised at how other people we don't know about show up to be relayers and look in across and they do a really good job.
00:22:29.153 - 00:22:49.835, Speaker C: Like all we did is we open sourced ARC our bot code that does this. We run a bot, but we don't win most of the fills now. And that's because other people are getting paid money to do this and they run that infrastructure and show up and compete. And I think that's like, that's just literally free markets at work.
00:22:50.975 - 00:23:28.109, Speaker B: Yeah, Yeah, I have. So I have some more like granular thoughts on this. I don't know if this is the best time to go into it, but I guess I can start on this. And if this like is going to head into some of the other questions you guys are asking, then I could, we could pause. So I think there's a bit of a trade off space here which is like, okay, so we know empirically that this space has a lot of people that are willing to run infrastructure and a lot of people that are willing to provide, provide liquidity. Historically the overlap between those two sets was very low, but that's really changed quite a bit. It's very easy for people that are running infrastructure go and borrow liquidity or otherwise.
00:23:28.109 - 00:24:41.125, Speaker B: As basically as businesses figure out a way to get capital if there is a sufficient return that's going to come out of it. And that's awesome because it means we have the base foundation for a lot of this. But then there is this trade off space that exists between basically specialization. So like, to what extent is a filler or router or solver able to run their own strategies and come up with their own optimized mechanisms for doing things versus to what extent is the system very, very heavily standardized? Where it's like the more you standardize the system and the more likely it is that you can get it to the point where it's just like this, like a turnkey thing where it can just run. But the flip side of that is that then you have to make kind of, you then sacrifice on like, you know, competitive pricing and you sacrifice on a few other things. So this is a trade off space that we've spent a bunch of time trying to navigate. Because in 2022 or like late 2021, 2022, when we released our like NXTP protocol, this was one of the biggest route challenges we were running into is we had, we had like 50 plus routers and like a lot of them were like sophisticated infrastructure providers or potentially liquidity providers, including market makers.
00:24:41.125 - 00:25:47.127, Speaker B: But what we found was that the way that the system was structured at the time where like, you know, similar to the way that UNISWAP experts today, like the filler would basically receive funds on like the reconciliation would happen from like destination to source. So like the filler would, the filler would send funds on the destination and then would receive funds on the source chain. So they would basically get their funds back on a different chain that they sent them. What we found was that even just that one thing really, really skewed the incentives such that the people, the routers in our ecosystem that were doing the best and performing the best were always financial actors. Now that's not necessarily always a bad thing, but of course that creates that kind of like elucidated this trade off space where it's like we since then have moved towards a model like less capital efficient, but now the router role is like completely passive. You just turn it on and you put money in it and it will just run. And we found that there's like a distinct tradeoff space between those two things where it's like we've had to give up on having the best possible pricing a little bit, which is something that we're still trying to think through and think about and work through.
00:25:47.127 - 00:25:58.975, Speaker B: But then the flip side of it is that we've now made it possible for anybody to run a router. And when we say that, we mean literally anybody. You could run one of these things on a cell phone. Like it doesn't even necessarily need to be connected to the Internet all the time.
00:26:07.835 - 00:26:09.895, Speaker C: You guys. Yeah, Mark, go.
00:26:11.075 - 00:26:53.775, Speaker A: Sweet. Well, you know, we kind of wanted to hit Uniswap X next and Arjun kind of hit that briefly. I would kind of love to hear you guys thoughts on Uniswap X in general. This was kind of the core of our conversation was how we kind of got connected is I talked to hard about Uniswap X way back in Paris. Arjun from LEFI just wrote a big deep dive on Uniswap X and I think they've been promoting the idea of intents. I would love to hear, as you know, people who have kind of built an intent based system, what you guys think about Uniswap coming into the cross chain space and kind of how Uniswap X might compare to Connext and across specifically.
00:26:54.835 - 00:27:03.043, Speaker C: Mark, can I make one clarifying question when we talk about Uniswap X here, are we talking about the cross chain Uniswap X and not the single chain version?
00:27:03.139 - 00:27:10.695, Speaker B: I can go first or both. Or wait is hard speaking because that might just be my Twitter being rude.
00:27:11.675 - 00:27:13.775, Speaker C: Did you guys hear me? Is that working?
00:27:14.505 - 00:27:15.645, Speaker A: I heard you hard.
00:27:17.025 - 00:27:18.525, Speaker B: Okay. That's just my Twitter.
00:27:18.825 - 00:27:35.649, Speaker C: Okay, Arjun, what I was asking just was whether we're talking about single chain Uniswap X or cross chain unit Swap X When we say Uniswap X I'd prefer to like there's advantages talking about both, but I'd prefer to talk about the cross chain version because it's Relevant. But Mark, you tell me what I.
00:27:35.657 - 00:27:37.765, Speaker D: Think we should go for the cross chain aspect.
00:27:39.635 - 00:27:40.283, Speaker B: Cool.
00:27:40.419 - 00:27:51.315, Speaker C: All right. Arjun, your Twitter working? You want to go? Is my Twitter working? Can you guys hear me? Because I'll go then.
00:27:51.435 - 00:27:52.495, Speaker D: You can go first.
00:27:52.795 - 00:28:12.715, Speaker C: Okay. Okay, cool. Yeah, I think Arjun is reconnecting or whatever. Cool. All right, so Uniswap X cross chain version I think is a good design. I want to go through and talk about what I think is the anatomy of an intense based bridge. Bridge architecture.
00:28:12.715 - 00:29:05.951, Speaker C: It's actually a tweet thread that I'm intending on writing, but I think there are three components to this intent based architecture. Part one is like the RFQ or order generation component. So think in your head like where the order gets created, order flow. In this case it's the Uniswap front end, right? That's creating the user order. Part two is the filler or relayer or router network. Part one and part two interact where when a user quote comes in, the filler network competes to fill it at the best price. This is similar, not exactly the same as how across works, but it's similar where there's order generation at part one and then part two, filler network to fill the user and all the user cares about are part one and part two.
00:29:05.951 - 00:29:48.525, Speaker C: Once they get filled by the filler network, they move on with their day and they're happy. The user funds though haven't actually been released yet. User funds and from their order are held in escrow until it's verified that the filler or relayer actually did fulfill their intent. And so part three, I want to label a settlement system a settlement system where user funds are escrowed until the intent is verified. And I think this three part intent based bridge architecture works extremely well. And this is very analogous to how across works. And I actually want to push across more in this direction.
00:29:48.525 - 00:30:38.255, Speaker C: And so you know what I basically think we are going to see happen is more and more sources at part one, more and more sources of order flow generation which aren't just the Uniswap X front end. There are going to be other sources like lifi, like Cow swap, like wherever else. There's going to be a more and more robust filler or relayer network that functions across all of these order generation sources. And then there's going to be this interesting settlement layer and that's actually like, I kind of think one of Cross's core functions is this cross chain settlement layer where user funds are escrowed until we verify that the intent was Fulfilled. So that's my take on how Uniswap X works from a cross chain sense. That's my kind of mental model for it. This three part system.
00:30:38.255 - 00:30:49.355, Speaker C: That's also how a cross works. And I just think it's a good architecture. Maybe I'm biased because I've built something that looks like this. I'd love to get Arjun's thoughts.
00:30:51.095 - 00:31:35.771, Speaker B: No, I agree. I think this is like if we take a step back into the bridging space and thinking about what does it look like to do cross chain communication. We've talked quite a bit about how there's different layers to the bridging stack and how there's the process of transporting messages between chains, so relaying some message from one chain to another and then the process of securing that message. But the challenge is, and this has always been the challenge, that the security piece is just expensive and it just takes time for a roll up. That security piece comes from the roll up bridge. For a light client, that security piece comes from verifying a ZK proof. But it's not like these things are cost effective at the moment or even really necessarily forever.
00:31:35.771 - 00:32:28.121, Speaker B: You need to batch a large amount of transactions to make them worthwhile to do. And right now, you know, with like in production ZK like clients that we're like working with or have worked like, are chatting with or have partnered with like it takes hours to like create and verify these proofs and it costs like on the order of hundreds of thousands of dollars a month. That's not, that's not like tenable for, you know, normal transactions. And so the way that we kind of think about it and like I think heart, you kind of hit the nail on the head here where it's like there has to be, there's an underlying setup layer and that settlement layer can be whatever, right? It can be this mechanism, like an optimistic bridge mechanism, like what Uniswap X uses and what cross and connects use. It could be like depending on the chain. It could also be like client. It could be like other kinds of mechanisms in the future like MMA or hashi.
00:32:28.121 - 00:33:14.115, Speaker B: But on top of that you need to have some way for the user to be able to do the transfer in a way where they're not paying like the full cost of a ZK proof. And that fundamentally that is like the kind of core benefit of this. And like that is fundamentally the thing that Connect has also been focused on for the past couple years and our architecture looks almost exactly the same now. The one thing I think is Important to double click on. So there's a bunch of different ways to do order generation. There's also a bunch of different ways to have like the intent fillers work. A lot of that comes down to some problems associated with sharing an intent mem pool or having better standards around how these orders are created because then it allows people to share liquidity, which is obviously the ideal outcome.
00:33:14.115 - 00:34:04.475, Speaker B: But I think one of the most important pieces and heart you touched on this is how the settlement occurs. I think that that is really how across is different from connext is different from uniswap X. And that is like for us is really like the main thing that we're working to improve on. So for uniswap X, how does settlement occurs? By a message that is sent from the destination chain back to the origin chain and then the funds are released on the origin chain. For across there is an option to do something like that. But the model that across uses. Let me know if this is incorrect heart at all, but I think that this is a brilliant model is that there's a pool of funds on Ethereum where that are, that are like user provided and those funds are used to repay the intent solvers and the user provided funds are basically just sitting there and they're like replenished from the normal like seven day bridge.
00:34:04.475 - 00:34:57.189, Speaker B: And so that makes sure that like no matter what chain you're on, you know there's a, there's a, what do we call like a forward settlement where like the across relayer basically sends money on optimism and then receives money on optimism after a few hours. And that means that they can be a lot more passive, they don't have to rebalance the liquidity or anything like that. For conext in the past we used to use backwards settlement and I mentioned why we kind of like moved away from that and now we're sort of, we're kind of on the fence. So like we currently use a forward settlement mechanism that looks a lot like hop where there's like liquidity pools on both chains and you have to like swap to the right asset. The reason we do this is because we don't want to have to have routers like deal with some other asset that they don't know how to deal with and figure out how to like swap and get liquidity for it. But you know that's, that's not very efficient. We're introducing liquidity requirements everywhere which just like makes everything a lot more expensive.
00:34:57.189 - 00:35:20.945, Speaker B: And if you, if you make the settlement more expensive then you then need to make the actual intent filling also more expensive so that all of that just drives costs up. The ideal outcome and this is, this is the trade off space that we're trying to navigate right now. The ideal outcome is one where there is no rebalancing. So you don't have you as a, as an intent solver. You get the funds. If you send funds on optimism, you receive funds on optimism. A few hours later you're just taking a lockup.
00:35:20.945 - 00:36:05.005, Speaker B: And that is the most decentralized option. It's really the most scalable option. That's one of the ideal properties you want. So there's no rebalancing and there's no additional liquidity. And what we found is that the only way to actually have both of those properties without. And then of course, I guess there's the third option which is not having to go and build liquidity pools and connect to each chain individually like across does, which is awesome and it works really well. But one of the concerns there is around how would that scale to thousands of chains? This is actually the primary reason why, or not primary, but one of the main reasons why we've been really interested in pushing forward the XCRC20 approach.
00:36:05.005 - 00:36:23.505, Speaker B: Because in that model Uniswap X across Connext, all of us are able to do settlement in a way that doesn't cost anything. And all of a sudden that means all of the intent solvers on Connext Uniswap X across now don't. Basically they're just taking pure profit and that means their fee rates can go to effectively zero.
00:36:25.605 - 00:37:18.795, Speaker C: Can I back up and actually focus on one point here, Arjun, that you made that I want to underscore? Security is expensive, like sending a message across a chain that's secure. It shouldn't be cheap, it should be expensive in some costs. Like either it's computationally expensive, there's just some cost to it. Like we all know that building blockchains is really hard. And so trying to send decentralized messages between blockchains, it's not easy and it shouldn't be cheap. And if it is cheap, you're trusting somebody, there's some vector of centralization. So the core thing that intense does really well is it realizes that sending a message in real time to bridge a user user funds, that is an expensive operation and it's going to be costly.
00:37:18.795 - 00:38:05.057, Speaker C: Instead, this third party actor makes this loan with their own money and it turns out that the cost of making that loan for like an hour or something like that is minuscule compared to the cost of sending a secure message between chains. So like back in the envelope math. I actually did this last night. If you lend money at a 10% annualized rate for an hour, that means $1,000. If you lend for an hour at a 10% annualized rate costs you 0.1 cents, a tenth of a penny. And so if you think about what we've discovered here is you're like, okay, wait, these third party relayers are willing to lend funds for an hour for a tenth of a penny, maybe a little bit more.
00:38:05.057 - 00:38:40.135, Speaker C: But it's a tiny amount of money and that delay allows the user to get filled really quickly and then allows the system to batch together and or take time and do the secure messaging thing relatively rarely. Like much, many fewer messages being sent between chains. And this is more secure and actually a cheaper product. It's like just a better set of trade offs maybe then. Arjun, I want to go back into like the liquidity stuff you're talking about too. But like do you, do you agree with that concept as well?
00:38:41.475 - 00:39:00.515, Speaker D: I think yeah. So for sure there has to be a security cost, right? But what I'm trying to understand is like is there consensus now that this model for cross chain systems is the most efficient? Because there's, there seems to be a lot of like everyone seems to be on the same page about it or is there still merit to creating liquidity pools on different chains?
00:39:01.655 - 00:39:32.969, Speaker C: Well, you're talking to two guys that are building intense based bridges. So yeah, I think we do think it's a better solution. But no, I mean guys like I think let's. The evidence out there to me is pretty strongly suggest that this is the right way to build a bridge. And you're seeing that from like right now. I'll show across for a second. Like across has cheap fees and big volumes, right.
00:39:32.969 - 00:40:16.485, Speaker C: And it's a cheap and fast bridge. We are significantly cheaper than any not intense brake based system. And that's even though relayers are lending money, they're getting paid to do so. Our actual gas costs when we go through the process of securing these messages are so much less than these message based approaches because there's so much less overhead of sending these messages. And I'd say the other evidence is still like Uniswap team is they're smart folks. They picked an intense based bridge system like this for a reason. They surveyed all the options and they were like this is the best way to do it.
00:40:16.485 - 00:40:36.725, Speaker C: So I am pretty convinced that yeah, this is the ultimate Way to build a bridge. I want to get louder on Twitter, talking, telling people why I think this is and I think we got a lot of arguments. But yeah, Arjun, I mean yeah, you tell me why you think it's not a good design and I'll try to fight you.
00:40:37.945 - 00:41:19.889, Speaker B: I mean I can't. Like we are in a similar position. Like we, we took this approach because our, the, the mental model that we walked into this with was like we should just build a cross chain clearinghouse and like that is effectively what an intense based system is. Right? You have, you, you just have like you have small amounts of lockup of liquidity but then the rest of the time you have this like freely floating capital that, that is just like being lent for a short period of time and like earning compounding returns. And like we, we saw this in e.g. 2021, 2022. Like the routers, early routers that were routing in Connext were, were getting like they were, we were charging very little fees at the time just because we still hadn't even really figured out how to charge fees.
00:41:19.889 - 00:42:28.065, Speaker B: But those routers were making like 50, 60, 70% returns without even really doing anything. And that was like, without any kind of optimization. Like we were fairly confident that if we could get to the point where we had spent more time like really deeply thinking through the trade offs and like solve the rebalancing problem, things like that, you could get to the point where like these routers are at like a 5bps fee tier, are earning hundreds of percentage a year and of course that obviously that's insane but that's also an indication that you can then bring prices down. And that's really the big piece here is it is 100% possible today for an intense based system to charge literally one basis point for cross chain transfers of highly liquid assets and the fillers that are filling those orders will still be making way, way better returns than anything else that exists in DeFi. Like 20, 25, 30% returns, fully safe. You're basically as long as you trust the protocol and as long as you trust the settlement which in our case and in across this case is going through like the actual roll up bridges through Ethereum. So you really can trust it.
00:42:28.065 - 00:42:31.005, Speaker B: As long as you trust the settlement, there's basically zero risk.
00:42:34.305 - 00:42:57.285, Speaker C: I'll underscore one point Mark, I'll make one point and then let you interrupt. So like one of the things I find funny and I'll, I'll, I'll poke fun at Brian Pellegrino at layer zero, where sometimes he posts about how many messages are going through layer zero, like the number of messages being transferred. And I look at that and I think, ha, that's bad. Like, all of those messages are expensive.
00:42:58.515 - 00:42:59.935, Speaker B: Well, they're not. This is.
00:43:00.435 - 00:43:27.115, Speaker C: Well, they're. If they're not expensive, it's because you're using like a centralized relay or whatever you're doing. But like it's bad. And they're, and they're, they're expensive and they're, they're not organic. But whatever, it's a bad thing. Like sending a message across a chain is a unsecure, scary thing to do. You want to do it as rarely as possible and you want to do it with like high security, like take time.
00:43:27.115 - 00:43:52.115, Speaker C: And we have an architecture here that lets you minimize the messages you need to send between chains and lets you take time to secure them. And that is not only cheaper, it's also more secure. And because of all this batching and stuff that Arjun and I are talking about, it's also cheaper. So, yeah, I'm pretty bullish on the architecture. Mark, I interrupted you.
00:43:55.995 - 00:44:57.513, Speaker A: Yeah. So there is one pushback against the intent system that I've read, which is that there is a rather large trust assumption that these relayer and fillers and quotas will be permissionless. You know, you see with Uniswap X specifically, they kind of have a white listing system early on and there could be some type of censorship going on from the fillers and quotas there if you're having a white listing system there. However, I think as they kind of expand Uniswap X, that whitelisting system is going to be much lessened. So I don't think that's like a long term deal, but we're kind of running up against time. And I wanted to ask kind of one big intense in the future question, and that is I saw Dan Robinson in a thread mentioned that Uniswap X could be one of the first applications to benefit from Suave. And Suave is kind of like an intense based blockchain is how I would describe it as, you know, a mid curve guy.
00:44:57.513 - 00:45:11.445, Speaker A: Could you kind of explain what you think about plugging into like intent based blockchains like Suave? Maybe Anoma are across and connext thinking about that right now or is that kind of too nebulous?
00:45:12.915 - 00:45:44.245, Speaker C: I think what Dan was referring to, if I were to guess his mind is, or what he was thinking is actually using Suave to run a decentralized RFQ system. Like run basically decentralize the RFQ process that currently is permissioned. You could do that in a swap, like a Suave app where and I think that that's probably where his mind's going is that Suave is a cool way to run a decentralized auction for filling intents.
00:45:46.225 - 00:46:12.125, Speaker B: Yeah. So maybe like a bit more kind of information there. Right. So I guess that it's important to kind of talk through like what is RFQ? What is an auction? Basically RFQs are reverse auctions. They're auctions where like the user goes and specifies that they want something and then people come and say okay, I'll do it for this price. The most decentralized way to do that is to just have the user do it inside of their browser or whatever. But it's not really very effective to be honest.
00:46:12.125 - 00:46:49.201, Speaker B: Doing that in the browser has its own trade offs. You have introduced all these off chain requirements and you also have. It somewhat centralizes the process in the sense that you have to have people communicate via messaging to the browser and there's not great browser based messaging, things like that. What connects moved towards on our end is basically an actual auction. So you know, and like similar to an rfq. But rather than having it happen in the browser, we said okay, we'll just have an actual auctioneer and we'll run the auction as a roll up. And so now what happens is like when a user sends an intent, they just basically send it directly to chain.
00:46:49.201 - 00:47:40.643, Speaker B: They don't need to go and like request a quote or anything. There is this like off chain auction that happens where like a sequencer goes and collects all the data from all the intense explanation rest on chain. And then all of our routers will just bid in that auction and then the sequencer will choose the winning router and submit that transaction to chain. This is nice because there's no kind of off chain dependencies at all from the user perspective. But there's this trade off which is like okay, now you have this sequencer and there's additional infrastructure. What is that auction? That auction is a private mempool. And this actually answers the question of why is there whitelisting? There's whitelisting because an intent and solving that intent is something is kind of like an open function and it is technically possible for that open function to get front run like by really mev bots in the mempool.
00:47:40.643 - 00:48:28.945, Speaker B: And so if you want to have a system where it's possible for people to fulfill intents in a way where they don't necessarily just get front run and then have to waste a bunch of gas. What you need to do is create a private mempool, a private auction system. A mempool really is an auction, right? So you need to create a private auction system, private mempool where everybody's posting these intents. Kinect has built our own version of this. I'm sure across has built their own version of this. Uniswap X initially is starting out with this like permission system but eventually will would end up building their own version of this. And Anoma and Suave are basically that they're a public, they're kind of a, a private in the sense of it's not like the main chain mempool but they're like a public intent mempool that has its own purpose where if you send transactions into there and they don't get selected, you're not going to burn gas.
00:48:28.945 - 00:48:40.825, Speaker B: That is really like the main, the kind of primary benefit. And then why have a shared one? Well, because then you can share your intent liquidity and your intent solvers.
00:48:45.575 - 00:48:48.595, Speaker A: Beautiful. Well, Hart, did you have something?
00:48:49.775 - 00:49:18.969, Speaker C: No, I could go a little. The only other thing I'll add like Uniswap X is permissioned right now too because they have market makers that are quoting trades as an indication of interest. Right. But they're not held to them. They're saying hey user, we'll pay you this much. Because they are trying to give the user a sense of what they'll get on a given trade. And then they like want the market maker that quoted that price to stand by it.
00:49:18.969 - 00:50:02.865, Speaker C: Basically it's like a concept of wire time. But there's no way to enforce that on chain right now. So instead they're doing, I think they're privately doing this and just basically like we're going to kick you out of this permission pool if you don't mostly honor your prices. And so generally speaking there are some trust assumptions, sort of like some loose trust assumptions that people will stand by their quotes in the Uniswap X system today. And a lot of these more sophisticated privacy preserving like systems like Suave and I don't know a nomad that well. But like these sorts of things use cool cryptography to solve for this. Basically.
00:50:05.855 - 00:51:06.723, Speaker B: There is, there is some complexity here. I don't think that this is a silver bullet like composing intents in a shared mempool is actually really awesome. And it's been something that I've been kind of thinking about a little bit as well. Especially in the context of things like Uniswap X where it's like, it's silly for a Uniswap X for Uniswap X to have to go and bootstrap a bunch of cross domain liquidity, especially if they want to do like more complex cross domain functions, right? So like if I want to express an intent that's like, okay, send my USDC from Arbitrum to Optimism, swap it along the way on Uniswap and then into like eth and then stake that eth to generate staked eth and then use that staked eth to go and mint an nft, right? Like that is absolutely intent that you could, you could specify as a user and it's very, it's like you could build an app that lets you do this and like, doesn't have to like route through anything. You just specify the intent and like broadcast it into the intent pool. But like, in order to do that, like, you know, in a way that's not going to require a wholly custom system, the best way to do it is to have a shared intent mempool. The challenge is that there's certain kinds of things and this is a cross domain intent problem.
00:51:06.723 - 00:52:07.925, Speaker B: So I don't think it's on the radar of Suave or Anoma or really anybody else. The challenge of this that's particular to cross domain intents is that as we mentioned earlier, the liquidity providers, the fillers, are fronting liquidity. And for cases of actions that are not necessarily liquidity based, you can still express and resolve intents across chains for them, but they need to be beholden to other mechanisms. Namely like, most likely what this would look like is some sort of like staking mechanism, which is something that we've been like interested in exploring where like you can have somebody have like a stake that's set up and then they could do something like transfer an NFT across chains and then if they transferred it incorrectly or to the wrong person, they get slashed later. But like the challenge here is that a composable intent mempool, the big trade off is going to be that it can't support these kinds of features. And that will be one of the biggest, like I think one of the biggest differentiators of like cross domain intents versus other kinds of intents.
00:52:13.505 - 00:52:51.665, Speaker A: Dang. I could I have like six follow up questions there specifically on building out more complex intents outside. You know, we spent a lot of time just on basic cross domain transactions. But I think, you know, the more complex Your intent, the more fun this conversation goes. But we, Arjun and I both have to bounce here right quick. So I just wanted to say thank you to both Arjun and Heart for jumping in and talking about intents. Arjun from LE is publishing a deep dive on Uniswap X that I think he might have published it today.
00:52:51.665 - 00:53:10.425, Speaker A: And both Heart and Arjun were like fantastic in leading comments and we're very grateful for that. But before we bounce here, Heart, Arjun, any last thoughts on intents we didn't cover? And then maybe we'll have to have part two to get into more complex intents at a later date.
00:53:12.045 - 00:53:22.669, Speaker C: There are many things we didn't cover. I think one of the things I'm most interested in is like are there actual any near term use cases?
00:53:22.797 - 00:53:25.725, Speaker A: No thoughts from Harder Arjun before we go.
00:53:25.765 - 00:53:29.265, Speaker B: Oh Heart waiting. Weird.
00:53:31.405 - 00:54:00.005, Speaker C: I think this is Elon's X not working very well. Sorry guys. I don't know if it was not working but all I was going to say Mark is like we should do another. We should do a follow up. Part two would be great. I want to get in like is there use cases for intents outside of bridging and swapping Cross cross domain intents outside of bridging and swapping. Like is there a market for it or anything we're missing or is it really just a solution to bridging and swapping in the short term? That'd be my follow up question for the group too.
00:54:02.185 - 00:54:37.205, Speaker B: Yeah, I want to say thank you guys so much for having us on here. This is an awesome discussion. I think we should really start talking a lot more about cross cross. So many times this is me saying it to myself because I've sort of been sitting on the sidelines a bit, not really talking about it very much just because we've been busy. But it is a really important thing to talk about and a really important avenue of research. And then I guess one last thing before going that I would leave folks with is and this is just something that's like thought provoking if like you know we are trying to build basically like the next iteration of the Internet. Right now it's like the financial Internet but eventually it'll be really everything.
00:54:37.205 - 00:55:23.849, Speaker B: And in the previous version of the Internet or the one that we're really still running on, TCP was really the Internet. The thing that connected all these networks together was the Internet protocol and TCP ip. But it wasn't really usable until we created the web, which is web pages and things like that. How that happened was we created HTTP, which was a more expressive language that lets you define like okay I want to go and get something or website and do something with it and then in the background HTTP figures out how to actually make that happen with tcp. And that was what made the web usable. It made it go from this like hobbyist thing to being something that people are using every single day. I think we're in the same place.
00:55:23.849 - 00:55:50.135, Speaker B: I think intents are the HTTP of this ecosystem. I think like we have figured out at this point the base layer Internet or sorry I'll specify cross domain intents are we figured out the base layer Internet which is like the roll up bridges and the hashis and things like that of the world. But the thing that is missing is how do we actually like tie all of this together to create seamless experiences where you don't have to go and like think about I'm going from this chain to this chain to do this other thing.
