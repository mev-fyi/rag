00:00:00.490 - 00:00:42.540, Speaker A: Hi, I'm Aditya. I work at Facebook. When I'm not working on compiler optimizations like hotcore splitting or function merging, I'm trying to incorporate better software engineering methodologies at my workplace as a step one to improve better software quality. I thought enabling compiler warning would be a good idea. Compiler warnings are very precise or almost precise static analysis tools. So that is a very good way to find bugs. And I'll be sharing some of the interesting ones and some of the scary ones.
00:00:42.540 - 00:01:29.900, Speaker A: When we enable w all, it'll just print a bunch of text on the console which nobody cares about. But when we add w error, then people start paying attention. So this is the first one. This is not very uncommon when to find a function which returns bool, but if you miss parentheses things can get out of hand. Basically because a function returning bool may return true or false. But a pointer is always evaluates to true because pointers are not null for a function. The next one is not uncommon as well.
00:01:29.900 - 00:02:09.670, Speaker A: Basically this is classical example of copy paste. When we try to assign variable and we forget to remove underscore and it's very common to have a prefix for member variables and not for the local variables. And we kind of forget because we are trying to write programs kind of too fast. Also, I wanted to mention that we want to use. I try to tell people that please use IDEs. We are not in 60s anymore. We have better ides, they have colors and colors are helpful.
00:02:09.670 - 00:03:01.094, Speaker A: Yeah, this one is a slightly scary one. There's a very popular open source library, folly, and we have defined aligned free as a function call. But it is not uncommon to find some code bases where people have macro has defined aligned free as free. Now if your program has memory leak, you are fine, but if your program tries to free memory, you are in trouble. This is the most scariest one, not on the left side, but on the right side. The left side program it is still okay because on the top there's using namespace stood. So the program is not.
00:03:01.094 - 00:03:45.010, Speaker A: There is no correctness issue there, but probably people were trying to type too fast instead of colon. Probably they pressed enter, but on the right side the case statements are missing. So the case keyword is missing. I'll try to settle this for a second. And let's imagine that this function tries to take care of some severity condition in a system. And it's a good exercise to put this code in Godbolt and try to see what is the assembly output of this one. Not too surprising, but actually this function would do nothing because default will supersede all the unused labels.
00:03:45.010 - 00:05:09.040, Speaker A: Um, this is a very common one if you are not enabled WL and if you enable this, you might find multiple instances of this one. Basically we try to take integers for granted and basically many types which are convertible, implicitly convertible to other types for granted. And if you don't have overloaded virtual warning enabled, there can be trouble. Okay, we have a large code base, so how to enable W all? It's not possible for one human being in a matter of days or weeks. It takes a while and some people might get scared and try to do like per directory or per project and that's a big route of troubles because it's not consistent and if you leave the project in between then it's even a bigger mess. So what I did was that I enabled Wl for the entire code base at once. Not entire means entire code base I cared about, which is already extremely big.
00:05:09.040 - 00:05:22.000, Speaker A: But then you start compiling as many possible targets sorry. Or time up. Yeah, you're all done. Thank you.
