00:00:00.890 - 00:00:10.830, Speaker A: Next up we have cowswap. Anna will present how swap will make the lives of Daos easier.
00:00:11.410 - 00:00:50.570, Speaker B: Hey, who here knows cowswap? Okay, nice. Who has traded on cowswap? Okay, already a little less. And who here as part of a Dao? Okay, cool. So it's kind of useful. Great. Yeah, as Stefan already mentioned, cowswap is actually coming from kenosis or Kenosis dao. So we used to be working on batch auction mechanisms for many years and then a little over two years ago we started to work on cowswap.
00:00:50.570 - 00:01:48.270, Speaker B: And yeah, then launched in May, 2 years ago and last year, February we became independent from gnosis. So I guess most of you know already we are decentralized exchange, if you want to explain it on a very high basic level. Obviously we look similar to Uniswap, but there's a lot of functionality that is hidden away. We are acting as a Dex aggregator, so we are able to split your trades and settle them wherever we find the best liquidity. And we also have some fancy mechanisms which we will talk about that allow to provide better execution for you and protect your trade. I mentioned we are live for a little less than two years. We have transacted more than 22 billion in trading volume and we have constantly growing user numbers.
00:01:48.270 - 00:02:40.462, Speaker B: And yeah, so far we are on the right track. And more recently we have started to focus on dows. And the reason is that we cater everyone. But for DAos, Kowswap has a unique value proposition which we will be talking about today. Before we go into details, let's revisit why are DaO trades special? So let's envision an environment where you, as a Dow, you want to convert some of your native protocol tokens in, for example, stablecoins, because you have the need to pay out salaries for your staff. Let's say ether would be back at $4,000. That's a great time to cash out.
00:02:40.462 - 00:03:28.730, Speaker B: Let's get some USDC so we can actually fund our contractors for the next few months. Obviously, if you're part of a DaO, you cannot single handedly decide to make this trade. Instead, what you would be doing is you create a proposal in which you say what you want to do and you already incorporate the transaction details. And this is quite important. You basically set up the whole proposal and you integrate the transaction because you want that in case the proposal passes successfully, you are able to immediately execute it on chain. What is special about this voting period is that usually DaO votes take time. It depends on the dao.
00:03:28.730 - 00:04:16.142, Speaker B: What kind of voting process they set up. But often votes take seven days, more or less, which is obviously a very long time. And only once the voting period has passed, this is when then finally the transaction gets executed. One thing to keep in mind is that obviously if you have to wait for seven days for your transaction to pass, there's a lot of volatility in the market. So maybe the east price today is 4000, but it could be that in seven days from now, it's down to 3500. You never know. That's one thing you have to keep in mind.
00:04:16.142 - 00:05:05.034, Speaker B: And then how you circumvent this, or like how you deal with that, is you set a slippage tolerance to ensure that even if the market price changes, you're still able to successfully execute the trade. So in this case here, for example, someone chose a 1% slippage tolerance. And you have to keep in mind, the longer it takes for the trade to be executed, the more slippage tolerance you have to be willing to put. And now imagine that you want to trade $1 million, 1% of that is $10,000. That's quite a lot for a seven day period. 1% might not even be enough. Let's imagine you would place 10%, you would already bet $100,000 of slippage tolerance, which is insane.
00:05:05.034 - 00:05:52.574, Speaker B: It's a lot of money. Now, what would happen if you were to create this proposal to do this trade on either uniswap or one inch or whatever of the other known prominent on chain dexes? Scenario one is you set, because you know there's a lot of on chain price volatility. You set a large slippage to ensure that your order is executed. But then what would happen is you might get sandwiched, I guess. Who here is familiar with mev or like sandwich attacks? Okay, like most of you. So I think we can make this quick. This is just on the right hand side.
00:05:52.574 - 00:07:03.250, Speaker B: An example of a trade that recently happened where a user lost more than 10,000 us dollar because the slippage tolerance allowed this amount of money to be extracted. So what happens if someone sees this transaction in the mempool and then they go and place a transaction in front of yours, change the on chain price to take advantage of the slippage that you set and your place is trade, you paid the worst price possible and then they backrun you and take advantage of your slippage and basically get this money from your trade. So in other words, you were screwed and you lost your entire slippage tolerance. Scenario two is you don't want to get screwed. So you set a very tight slippage tolerance to avoid the sandwich attack, but very likely, after seven days, the onchain price point has changed. It's not available anymore. Your transaction fails, you paid failed transaction cost, but much worse, you have to go through the whole process again and set up a new vote.
00:07:03.250 - 00:07:47.300, Speaker B: Now. Things would be different if you were to do this trade on cowswap. What happens, or what makes cowswap so unique is that a user, in this case the DAO, only signs an intent. So they don't craft a full on ethereum transaction, they only sign an intent of this is like the limit price I'm willing to pay. This is my sell token, my buy token and so on. And they do not commit to a fixed execution path, and they also do not pay any transaction costs. Yet in the next step, cowswap is collecting orders and is batching them together.
00:07:47.300 - 00:08:41.330, Speaker B: So for example, you want to sell USDC for ether and someone else wants to sell ether for USDC. We are able to match this trade together and in this way we don't have to forward your trade to an on chain amm such as uniswap. So you do not have to pay these fees that you would have to pay if you were to trade on uniswap. You also don't have the same price impact, because on Uniswap you would basically move the price on an on chain liquidity curve. And this doesn't happen if you are batched against another user order and also you have reduced gas costs. The next step is something that is also like. So you have the batching which is very unique to cowswap, and then you have the solving that is also very unique to Kaoswap.
00:08:41.330 - 00:09:49.442, Speaker B: We engage in a competition between external parties that all have access to all orders that are in the order book, and they optimize for getting the best price for the user. So the party that wins is the one that finds the best possible price for the user and only that one is chosen to execute your trade. Usually because they are competing against each other, they have all different things that they are specializing in. They are integrating all sorts of existing onchain liquidity. Some of them are even able to find some advanced arbitrage opportunities that they can include in the trading. And all these benefits are forwarded to the user because they want to win the competition, because otherwise they don't get to execute your trade. Lastly, and I think this is super important, is that your trade is fully protected against these mev attacks, against these sandwich attacks, because servers.
00:09:49.442 - 00:10:34.662, Speaker B: Since you only signed an intent, they are able to choose a slippage tolerance for you. So if you basically said, I'm willing to spend to have a total slippage tolerance of 2%, but the solvers realize in order to execute your trade, only 0.2% is needed. It's up to them to basically reduce the slippage tolerance to execute your trade. And it's in their own favor, because ultimately they are responsible to pay exactly the price to you that they committed to in the competition. So if they won the competition because they said that I give the user this amazing price, then they have to pay this amazing price to the user. Yeah.
00:10:34.662 - 00:11:29.106, Speaker B: So this is basically just a list of partners that are already trading today on cowswap. So you see a bunch of different dows and different types of integrations that they have done with cowswap already. One of the most recent examples that made headlines maybe a month ago or so was ens. They were in need to convert 10,000 ether into USDC specifically to pay their staff. And so they did an onchain vote and they decided to execute this trade on cowswap. They managed to sell the 10,000 ether and back in the days four weeks ago, so this equaled more or less $16 million. They had set up a 2% slippage tolerance, but only 0.6%
00:11:29.106 - 00:12:25.974, Speaker B: were actually needed to execute the trade successfully, which gave them an additional $80,000, which they would most likely not have received if they had chosen any other decks to do this trade on. And then there's also a few additional innovations that I want to talk about now that cowswap enables. So, tv orders, I don't know who's familiar, but it's basically time weighted average price that allows you to break down a trade into multiple instances. So it is very useful if you want to do a very large trade. So obviously, there's always going to be some price impact if you want to convert $100 million. So what you could do is you could split it up into ten trades and each trade would only convert $10 million. And obviously, it's annoying if you have to do this via individually.
00:12:25.974 - 00:13:11.930, Speaker B: Setting up a lot of transaction doesn't work in the case of a Dow, where you would have to set up multiple proposals to execute this. But Cowsop does now facilitate this. And yeah, this is just one out of several examples of advanced trading strategies that can now be done. We are supporting ESC 1271. This basically means that it is allowed for smart contracts also to sign a message. So usually this is done by an EOA. ESC 1271 allows this functionality also to smart contracts and this allows a smart contract to validate trades also at the time of execution of the trade.
00:13:11.930 - 00:13:52.310, Speaker B: And this way you can invoke some arbitrage logic and you can also read on chain states. So this allows a few functionalities, such as you can check current block time. This is necessary if you want to do t wob orders. You can also check oracle prices. So you can basically say, I don't want to determine now what the price will be that I will be trading in seven days, but I determine a price. Oracle, I will say like in seven days, check what is the price of this token on uniswap liquidity pool from v two or whatever. And then based on that I want to place my trade.
00:13:52.310 - 00:14:26.290, Speaker B: And you can also check balances. For example, you could set up a logic where you say, okay, I always want to have my portfolio consisting of 50% cow tokens, 50% ether tokens. So you could always check prices in the future. You could always check what's the value of my portfolio, and this way automatically trigger a rebalancing. Yeah, this we basically talked about. So TVAP orders are already live on cowswap today. You can already place them.
00:14:26.290 - 00:15:01.120, Speaker B: We have an interface that is not in production yet. It's still in testing, but it's going to go live soon. We have milkman orders. It's basically this functionality that allows you to trigger an on chain price. Oracle, this is actually also what Ens was using. They were actually using a price oracle from Uniswap. So they ensured that basically whenever the trade would be executed, they would check the onchain price at the moment in time and allow an additional price tolerance of 2%.
00:15:01.120 - 00:15:45.660, Speaker B: And another cool smart order that can be used this way are stop loss orders. This is actually really nice in case that you have any positions open and you want to ensure that I have my die backed by ether. And now your Eth price drops below the price that I have accounted for, then you can automatically trigger a rebalancing of your portfolio to ensure that you have enough money in your vault to ensure that you're not being liquidated. And that's it.
00:15:54.930 - 00:15:58.670, Speaker A: Thank you, Anna, for the great presentation. Are there any questions from the audience?
00:15:59.890 - 00:16:19.800, Speaker C: Amazing new features, Anna. Really nice to hear, especially the tWap. Does it change in gas costs to leave a T WAp order versus leaving a regular order? And then another question is, is there any time limit? Can a Dow leave an order working for 15 days for three months if it wishes to.
00:16:21.850 - 00:16:54.962, Speaker B: Yes. So on the first question. So the nice thing on CowSOb is essentially obviously you have to pay gas costs for every transaction that is triggered. But the nice thing on CowSob is because you sign and intend to trade, you're not paying at the moment when you set up the order but basically it is taken from your execution. And this way basically if you set up tv orders you would automatically the gas price is at and just incorporate it in the price that the trade is executed at. And the second, can you remember second.
00:16:55.016 - 00:16:55.620, Speaker C: Question.
00:17:01.490 - 00:17:20.962, Speaker B: There'S basically no time limitation. I think we might have potentially implemented one just to ensure that our order book is not completely overflown with orders that are unlikely to be executed. But in theory there's definitely no limitation on the timeline that you can set. Cool.
00:17:21.016 - 00:17:24.110, Speaker A: Yeah, thanks a lot, Anna for the great presentation.
