00:00:09.910 - 00:00:38.514, Speaker A: Well, we just heard from two shared sequencers. I'm going to talk about decentralized sequencing from kind of the other side of the table, those familiar with Aztec. We're not going to talk too much about Aztec as a whole, you can figure that out on your own. But we're going to talk about how we're thinking about sequencers. And yeah, I'm a product manager focusing on decentralization. I am not the right person to ask your zero knowledge proof questions to, unfortunately. But we're kind of late in the day.
00:00:38.514 - 00:01:09.920, Speaker A: Who knows which of these is not a real thing. Feel free to just shout it out if you megaplanc is right. If I had some swag, I would give you some. But this is kind of just my ode to how good we are at naming things, I guess, in the ZK space. And we've been hearing a lot of serious talks for a while, so figured it's good to make fun of ourselves a little bit. But yeah, Megaplanc doesn't exist yet. Maybe someone will go invent it after this, but we'll see.
00:01:09.920 - 00:01:39.334, Speaker A: And yeah, so we were originally calling this Aztec Three. We've since rebranded it to just Aztec. So when we talk about Aztec, we're talking about the roll up as a whole. And if you look in our docs or our code base, it might still say Aztec Three laying around somewhere. Just to give you guys some context before talking into our sequencer. Specifically, it's a new ethereum based DK roll up. We have both public and private state, which is unique to us and very interesting.
00:01:39.334 - 00:02:03.230, Speaker A: So you can consider that a new kind of mev challenge. In a block, you could have some transactions that are public and some that are fully private as well. So, yeah, that's super interesting. We're building a rust based DSL called Noir. It makes it really easy to build ZK apps with it's proving system agnostic. So it's not just relevant for Aztec. If you're interested in ZK, I highly recommend looking at Noir.
00:02:03.230 - 00:02:34.754, Speaker A: We are working right now on our execution environment. So we have a local developer, Sandbox, that's coming soon. I would say in the next don't quote me on this month or two. So sometime this summer we will have a local experience where you can write your own Noir contracts and deploy them to your own machine just to try to get developer feedback as early as possible in building our execution environment. But yeah, I'm here today to talk about sequencer selection. So we currently have an RFP a request for proposals. Live on discourse aztec network.
00:02:34.754 - 00:03:03.700, Speaker A: It's live right now. So if you hear this talk and you're like, these guys are stupid, this is a terrible idea, please go tell us on discourse. We would love that. That's kind of the point of us being here today. And yeah, so I'm not going to talk too much in depth about ZK. Highly recommend getting around our Discourse if you do have questions about that, or Noir. We also host office hours every Thursday for people interested in Noir and building ZK applications, but aren't really sure about where to get started or what the tech stack looks like or what to use.
00:03:03.700 - 00:03:59.566, Speaker A: So, yeah, we'll talk about Aztec. Oh, yeah, this is just kind of a high level overview of how we're thinking about public and private state and why we think it's valuable to build a layer two roll up that has both. So these are just some of the use cases helpful for context if you're looking at this and being like, why would they go so far out of their way to do some of these things? We think that there's a kind of huge, unexplored design space by having both of them in the same roll up with composability. So this is high level goal of what Aztec hopes to enable with the new roll up and kind of helps frame how we're thinking about these things. And so key questions and considerations for us as we were building our L2, we were thinking about for those familiar with Aztec Connect, we used to previously have one sequencer. Aztec Connect has since deprecated. We're no longer putting any resources to it, which is why you can't deposit any more funds.
00:03:59.566 - 00:05:01.638, Speaker A: We've committed 100% of our engineering resources to what was called Aztec Three, but is now just Aztec. And so there's questions that you hear in the kind of base for sovereign roll up debates, right? Like, do you use L One versus L2 to coordinate your sequencers? Do you build the marketplace kind of into this design or assume that someone will emerge and do that? Specifically, in Aztec's case, how do we optimize for censorship, resistance? And then what kind of unique challenges or requirements does something like Aztec have versus other layer know? Specifically, we're choosing to optimize for censorship, resistance, and potentially privacy. With the trade off in our case being speed, we're not going to be the fastest network out there by any metrics. Probably. Yeah. So just to talk in depth, we have three proposals that are out there so far, mostly from our core team. But we're also working with a variety of people, many in this room, some of which you probably just heard from to get their proposals as well.
00:05:01.638 - 00:05:32.370, Speaker A: But I'm going to talk about the three that are kind of out there and being debated right now. I'm going to talk about the high level trade offs kind of design decisions for more in depth explanations. These are all on our discourse right now. And for the next two to three weeks, we would love for you guys to come in and roast them or give us feedback. But the first one is proposer builder separation with a Federated proving network. The idea here is that you have proposers suggest blocks on the diagram on the left. Hopefully, you can see it.
00:05:32.370 - 00:06:30.190, Speaker A: Each block proposal contains a transaction order, a quantity of tokens to be burned, as well as a fee split. And so Aztec has kind of a two part architecture where you have a sequencer that's responsible for basically getting a roll up produced and you have provers who are responsible for doing very small zero knowledge proof computations. Those proofs end up in a kind of giant tree structure of zero knowledge proofs and that giant merkel tree of proofs ends up in the roll up itself. And so this separation of concerns here has a proposer saying, hey, if this is the block that ends up getting put into the roll up, this is how many tokens will burn and any fees generated or any revenue generated will split this percentage with you. And so you have all of the computers out there doing zero knowledge proofs. We're expecting this to be hopefully a very large number. We're trying not to centralize around largest hardware for proving systems.
00:06:30.190 - 00:07:18.210, Speaker A: And so hopefully you get the provers those actually doing computation and working on zero knowledge proofs voting on which block they think is most valuable to the network or valuable to them. And eventually it kind of consolidates on one obvious one that has the most votes from the most provers and that's the one that the proving network will end up working on and end up in a roll up. And so by having all the provers kind of commit to which block they think is the best, and in the best case, this is what's going to make them the most money. Probably you try to reduce as much redundant work in the proving network as possible. And so in this one, you can see block A had X order, the fee split was 44% and the burn was 4.4. So that's pretty good. But it looks like block B has a burn of 2.4
00:07:18.210 - 00:08:11.666, Speaker A: and an 80% fee split. And so if the proving network votes win, which block B is obviously going to win and be included earlier in the chain. And so this is almost like purely an economic mechanism for determining what the next roll up or block is going to be, right? And so it has really strong economic guarantees around liveness you lose a lot of money basically, if nothing gets produced. And you can guarantee that at least like one proposal will be put out there that burns some type of tokens, right? So you at least have a minimum incentive to keep the chain going. And it has mev and auctions and all these marketplaces, all these good things kind of built into the model. So it's very transparent of what kind of systems or secondary tertiary effects will emerge from this type of proposal. Cons, it could result in a kind of more centralized block production scheme.
00:08:11.666 - 00:08:53.198, Speaker A: Whoever has the most money, who has the most sophisticated searching algorithms, et cetera, could end up winning in a proposal like this. But this is out of the proposal I'll talk about today. This is on one end of the spectrum that's like, let's use a purely economic system. And coming from a company like Aztec, who does a lot of work on zero knowledge, the idea of building less cryptography systems is somewhat interesting to us. Having an economic solution to this problem is kind of fun for us to work on. But the next two proposals I'll talk about are kind of on the other end of how do we design cryptographic mechanisms that give us different types of guarantees, different trade offs. But yeah, again, this is on Discourse.
00:08:53.198 - 00:09:30.586, Speaker A: Please read the full link. Let us know what you think. Obviously very inspired by a lot of the work people here have done. So this is a proposal that I actually worked on called Whiskey. It's a variation of the Wisc Ethereum beacon chain proposal. Basically, why don't we just use what Wisp does? And so the way that this works is you use L One to coordinate people stake some tokens in a randomized tracker. Once you get enough trackers, you basically have some type of kickoff ceremony to determine kind of an ordered and then every 24 hours, you actually have the current sequencer shuffling the list of all the trackers.
00:09:30.586 - 00:10:02.034, Speaker A: So you get some type of inherent randomness in the shuffles, and then they post proofs of shuffle to the L One itself, which get verified, and you can actually make sure that the original list is not the list we're using. And then they shuffle that list for 24 hours. And then you kind of take the ordered list for the next 24 hours of block production. So one of the nice things about this is that it's pretty well studied. There's reference implementations out there in Rust and Python. So as someone who has to go build these things, that's super appealing. It is generally capitally inefficient.
00:10:02.034 - 00:10:57.818, Speaker A: It kind of begs a marketplace to establish. And this obviously doesn't have any type of bidding or proposals. It's almost entirely using a minimum stake in randomness to determine who gets block production rights. So I would say on the very other end of the spectrum from the previous proposal, it's like, do you want a pure cryptographic kind of random solution, or do you want something that's market based and digestible in that kind of way? Yeah, and the idea of shuffling might be unnecessary in Aztecs context. I'll mention it a little bit in the next slide, but that is maybe a good solution for Ethereum, but might not be a good solution for Aztec. But yeah, this is another proposal, again on Discourse, if you want to read more. And proposal Three is affectionately named Cookie Jar, actually, from Zach, who is one of the co inventors of plank, and he actually proposes using L2 to coordinate our sequencer selection rather than L One.
00:10:57.818 - 00:11:40.200, Speaker A: And it uses noir our programming language to actually have both public and private kind of inputs to our own sequencer selection process. And so this one's kind of overlapping where you put down a tracker and you put down a bid on the L2. Your bid will be shielded by using a private noir contract so no one actually knows what your bid is. And we'll use some randomness to give an approximation. So your bid is not exact, it's within a range. And then we'll sort those kind of randomized bids and you'll end up actually paying what your original bid was. But we use the randomness that gives some kind of thing to guarantee that the highest bid is not always going to win.
00:11:40.200 - 00:12:46.800, Speaker A: Maybe the second or third highest bid ends up winning in this type of proposal, but that's still more capitally efficient than the last proposal that doesn't address like, bidding or auctions or marketplaces at all. And so this is kind of a middle ground between both. You get randomization, you don't get economic guarantees that always result in the highest bidder winning. But it does have a trade off where you do use L2, and there's kind of like a self referential problem of like, okay, do we really want to use L2 to coordinate L2 sequencer? Like, what if something breaks? Where do we go? What does restarting that kind of look like? And so I'd say that this one fits pretty nicely in the middle of the proposals where it does have randomness, it has some types of guarantees around the same person not winning and block production rates every time, but trade offs of using L2 versus L One themselves. And so hopefully this kind of paints the spectrum of solutions of how we're thinking about the problem. I would say Aztec is hopefully we are planning to be decentralized from day one. We do not really believe in progressive decentralization, particular with the use cases that we believe.
00:12:46.800 - 00:13:24.378, Speaker A: And so you'll see us discussing debating these and building them and we will not launch until these are ready, unfortunately. So not just like a research program or problem, we're planning on building solutions to these in the next three to six months. So, yeah, super interesting. Other things we're actively working on and talking about, every single discussion we have as a company is in discourse, which is really nice. We don't have anything going in on our slack or making decisions that you guys don't know about. Current conversations even. These are all just conversations taking a screenshot from the last day.
00:13:24.378 - 00:13:57.806, Speaker A: We're talking about fee management, account abstraction, recursive, proving systems. How do we actually deal with the public, private virtual machines, specific, like specs around UTXO sets and then historic state, et cetera. Our current thoughts, like latest, as of yesterday, updated information is all in discourse. So if you're curious about what we're doing, check it out. And then right now we have our sequencer RFP out. We would love your ideas for the next two to three weeks. After that, we'll worry about upgrading mechanisms and how we fork the L two, potentially.
00:13:57.806 - 00:14:11.200, Speaker A: And then after that, how we kind of deal with that federated proving network and proof tree generation. But yeah. So these are what we're working on. And thank you so much for your time. Thank.
