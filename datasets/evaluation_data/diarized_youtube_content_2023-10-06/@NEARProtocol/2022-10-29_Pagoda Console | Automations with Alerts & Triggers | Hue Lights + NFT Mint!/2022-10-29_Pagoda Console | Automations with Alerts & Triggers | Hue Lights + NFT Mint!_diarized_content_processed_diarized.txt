00:00:00.330 - 00:00:30.182, Speaker A: So the pagoda console is capable of many different things. If you put your mind to it, you can use some really cool creative projects. In this short video, I'm going to show you guys how to turn on and off your lights whenever NFT gets minted. With that, let's get started. So in this short video, we're to be using the pagoda console to essentially let us know whenever NFT has been minted by calling a webhook on an endpoint. In Ifttt. IFtTT stands for if this, then that.
00:00:30.182 - 00:00:56.634, Speaker A: Essentially if an NFT gets minted, then we're going to be turning on our hue lights. So yeah, with that, let's just jump right in. Okay, everyone, to begin this video, I want you guys to head over to ifttt.com. Create your account. And once you create your account, you should be sent to this Explorer page. So yes, forget ifttt stands for if this, then that. Essentially it's a trigger action service that allows you to integrate multiple different types of services together, such as YouTube or Spotify.
00:00:56.634 - 00:01:27.090, Speaker A: If you like a song in Spotify, you can appear in YouTube playlist or maybe even like time and your temperature apps. Maybe you have a smart device in your home. And if it's like 05:00 p.m. You can turn on or turn off your ac and also play a song if you want to on Spotify. It's a way to automate your life. It's really cool. So the very first thing we're going to do get started with our particular applet, which will essentially be a webhook that will allow us to integrate that webhook into our pagoda console.
00:01:27.090 - 00:01:58.654, Speaker A: So anytime NFT gets minted, we get notified by it, by our hue lights turning on. So go over to services right in this little tab here and then search for Webhook. That's going to be our very first step. So webhooks. So this webhook essentially will allow us to interact with an endpoint that exists in IFTTT that we're going to send to our pagoda console. So that anytime that endpoint gets called, our hue lights get turned on. So head over to documentation and we're just going to leave this page alone.
00:01:58.654 - 00:02:18.294, Speaker A: So we're going to leave this page alone. We're going to come back to it. Now hit either this create button or this create button. Doesn't matter which one, they'll both lead you to the same place. Now you have if this, then that. If this is a trigger, then that is the action that will occur once that trigger gets triggered or gets tripped. So hit add and search for webhooks again.
00:02:18.294 - 00:02:52.754, Speaker A: So Webhook now select this option that says receive a request, essentially that trigger a fire every time the maker service receives a web request to notify it of an event. So anytime this endpoint gets called, something will happen. Now we can give this particular endpoint a name. So let's just name it NFT underscore mint. Then that will be our action. So first we're going to do hit add, right? So our action will be hue. So our action will be our actual lights turning on or off.
00:02:52.754 - 00:03:23.082, Speaker A: Right. So search for Hue, select Philips Hue and select turn on lights. Now it should go without saying, and we're not sponsored by Hue by the way, but should go without saying that in order to be able to participate in this demo, you have to have like hue lights, a hue bridge and a hue account. I hope you guys do if you clicked on this video, or if not, then I hope you guys are having fun watching this awesome thing you can do with the pagoda console. But yeah, so even if you don't have it, keep watching. It's just for fun. So first you should add your account.
00:03:23.082 - 00:03:39.422, Speaker A: If you have a hue account, it's very easy. Just follow the on screen prompts. I've already added mine. So the things I'm going to actually focus on is know which lights I want to turn on or off. So I'm just going to leave this to all. So it's going to turn all my lights on or off. Every time I get an NFT minted I'm going to hit create action.
00:03:39.422 - 00:03:58.440, Speaker A: And essentially there you go. You have your essential applet like you have your if, which is the web request from the webhook. And then, then which is the hue lights. So hit continue. And then we're going to actually take this name and copy it for a minute before we hit this finish button. So again, take this name, copy it and then hit the finish button. You don't have to copy, it's a very short name.
00:03:58.440 - 00:04:22.894, Speaker A: So now we have our name copied. We're just going to paste it inside of our documentation page. So I'm going back to that documentation page we opened up earlier and pasting my name inside of this events line here. So paste it over everything here, including the curly braces. Just paste the name NFT mint. Now for some reason anytime I try to copy this thing it gets cut off there. So what I like to do is like to go down here because of the same link.
00:04:22.894 - 00:04:50.790, Speaker A: It just copies the entire thing here and I'm just going to have them a clipboard for later. So now we have our applet created, right? We can even get notified anytime this runs. It sends a notification to the IFTTT app on your phone anytime this actually happens. So it's another cool feature they have. So you have this right created and you have this. So now I'm going to head on over to console Pagoda co. I'm going to log in and I'm going to hit create.
00:04:50.790 - 00:05:23.026, Speaker A: I'm going to hit examples and I'm going to hit nonfungible token. After that I'm going to hit this deploy and explore contract button. Essentially that's going to create a dev account for me. And dev account is essentially the same thing as a normal account on near. The purpose of it is so that the name is automatically generated so you don't have to come up with your own name while you're experimenting with your different smart contracts. It's meant to be disposable so you can do things like change the state, make sub accounts. It's automatically funded with 200 testnet tokens and it's meant so that you, the user, doesn't have to use real tokens to be able to experiment with your smart contract on near.
00:05:23.026 - 00:05:51.642, Speaker A: It's very, very handy, but just know again, it's the same thing as normal account. It's just meant for to be disposable and for experimentation. So hit the name of the dev account. You're going to first initiate this contract. So every contract on near has to be initiated which essentially lets you set metadata for that account or for that contract. So in this case we're going to set the owner of the smart contract as us. One more thing about initialization functions that they can only be called once.
00:05:51.642 - 00:06:18.242, Speaker A: So once they're called they can never recall again or also throw some error. So it's typically called once per deployment, I should say. Great. So we're signed in, we have our wallet attached or signed into this account so we can sign transactions using this particular account name onto this contract account. And we cover a call function on that contract account. So hit new default metadata. That's going to be the initialization function we're going to call.
00:06:18.242 - 00:06:45.930, Speaker A: So we're going to set blockhead, blockhead 29 testnet. That's my account. You should put the name of your own account because I don't want to be the owner of your smart contract. So hit blockhead at 29 testnet or your account name that you ever signed in here with and hit send transaction. So that's going to simply initialize the smart contract for us, as I said a bunch of times. So great, transaction sent successfully. So now we actually have our contract initialized.
00:06:45.930 - 00:07:16.390, Speaker A: We can head over to the alerts feature, which is my personal favorite feature on the pagoda console. So the alerts feature is really, really cool. So it's going to monitor a contract. By the way, when I say monitor a contract, that's the same thing as monitoring an account because every account on near is a smart contract. It's just whenever you make a new one, it's an empty smart contract. So again, let's just say one more time, every account on near is a smart contract. So when I again might say monitor a smart contract, I'm saying we're monitoring an account that owns a smart contract.
00:07:16.390 - 00:07:50.690, Speaker A: So hit new alert and select the contract name you want to monitor. Right. So this is the dev account name we're going to monitor. Now, again, essentially it's going to monitor this account so that if any specified action that we desire occurs on this smart contract, we will get notified in the form of a message sent as a Telegram message, a webhook, or an email. So the condition we're setting is a successful action. So anytime a successful action occurs on this smart contract, a successful transaction, I should say we're going to get notified of it. And how we get notified again, telegram, webhook, email.
00:07:50.690 - 00:08:26.986, Speaker A: So literally send you a telegram message or an email. Like if a successful transaction has occurred on this smart contract, we're going to select the webhook option. So anytime a successful transaction occurs, it's going to ping an endpoint for us and that endpoint will then do something. So what is that endpoint going to be? Well, we're going to paste in that link we made earlier, the NfT mint ifttt webhook. So we're going to hit create after you paste. And if you're guys wondering where I got this from again, I got it from our documentation page after changing this name and just copying this line here and pasting it in there. So hit finish once you have that done and remember to hit create alert.
00:08:26.986 - 00:08:42.674, Speaker A: So don't leave this page just yet. Hit create alert. Sometimes I do that and I get like, where's my webhook? I don't know where my alert feature went. So great, we've created our alert and now we can actually test out our application. So I'm going to turn off all my lights. My lights are voice operated with Google. So I'm just going to turn them off right now.
00:08:42.674 - 00:09:05.110, Speaker A: Hey Google, turn off lights. Great. Okay, so here I have one of my hue lights here. So this is like apparently my lights are not working. So here I have a Phillips hue light. There's no buttons on this thing. There's no way for me to turn on manually.
00:09:05.110 - 00:09:28.270, Speaker A: My phone's off and you can see I just turned it off with my voice. Right. So nothing shady or nothing trippy going on here. So let's go over to contracts and click on cocktail again and hit interact. So we're going to simulate minting an NFT. Or I guess this will literally actually mint an. But you know, we're just going to call this function nft mint to see if the light turns on if this transaction is successful.
00:09:28.270 - 00:09:44.342, Speaker A: So we're going to set some random token id. Just put anything here, set your receiver id. Could be any account that you own or whatever. You can send your friend an empty nft if they want. And put an empty curly brace here. An empty object instance essentially. Yes.
00:09:44.342 - 00:10:13.914, Speaker A: We're just sending essentially an empty NFT after that. Switch this over to near and set this value to one. Now nft mint has some logic in it. So that anytime that you mint an NFT, the user has to pay for the storage of that NfT that's being minted. Otherwise this contract account has to pay for that storage. Anytime some storage is occupied on the state of an account, there is process called storage staking. This contract account is responsible for paying for the storage that it uses.
00:10:13.914 - 00:10:39.498, Speaker A: Right. So this has logic in it. So anytime a user mints NfT, they have to pay for the storage that they used and the amount that's left over for the storage that's not being used gets refunded back to the user. So we're essentially storing nothing. So we're going to get most of this one year back. So hit send transaction, going to approve this transaction for one year. And once it gets approved, we're going to watch my hue light.
00:10:39.498 - 00:10:54.158, Speaker A: So see if it turns on. Wait for 2 seconds. And there it goes. So literally all my lights just turned on. I have no idea what this is doing to my green screen. So I'm going to put this away. And there we go.
00:10:54.158 - 00:11:16.502, Speaker A: We've successfully integrated the pagoda console into Ifttt to turn on my hue lights. I hope you guys had so much fun with this video. I had a lot of fun making it. Be sure to make your own ifttt applet and send it to me with a view to v hey guys. That's all I have for you guys today. I hope you guys had fun with this video. I had a lot of making this particular project.
00:11:16.502 - 00:11:34.740, Speaker A: I'll put a challenge to you guys as well. Make your own ifttt applet. Make a YouTube video about how you integrate nier into ifttt and send it to me. Send to me on discord, send me on Twitter and feature it on this YouTube channel. I think it'd be a lot of fun. Remember to like subscribe and comment below what you guys want to see more of out of the near YouTube channel. And with that, have a wonderful day.
