00:00:12.780 - 00:00:43.864, Speaker A: I'm sure everyone has kind of heard account abstraction a bunch. Who's heard the term account abstraction? The last, I don't know, month or two? Okay, how many people know what that is? All right, so fair enough. And then Chachi Pt. How many people have heard of that? Okay, this is a buzword soup, I get it. But literally, I'm not a fad guy. I don't get into fads. I remember everyone was like, fractional, NFT, ownerships, all these sort of things.
00:00:43.864 - 00:01:24.420, Speaker A: But for me, we're diving pretty heavy into these pieces. And I thought it was fascinating that near's one of its core big innovations is its account system, and there's actually not a ton of information about it. I go onto YouTube, I go into all these different places. So this is going to focus a little bit more on the account system than the Chat GPT. And if we have more time, I'll go into why we're actually utilizing the heck out of this. So what is Mintbase? We've got a ton of different interfaces, right? We have a minter. We can create your own smart contracts, you can mint on it, you can go through all these different places, but you don't have to go through our interface to use our system.
00:01:24.420 - 00:02:08.964, Speaker A: You can go on boss and actually purchase nfts on their system. And so we thought, well, heck, if it doesn't matter if you're going to Mintbase XYZ, then maybe we can use Chat GPT to use our protocol, whether it's hitting our indexer or whether it's using our smart contract and using our affiliate direct system. So how do we get a random user in Chat GPT to create transactions? And this is where we accidentally created fastos. So let's look at Ethereum. So basically how Ethereum works is you have an EOA, which is an account, and you have a private key, and then that's it. You can't change it. You send someone the seed phrases and that's all you get.
00:02:08.964 - 00:02:40.012, Speaker A: Forever. Imagine how many people at Polygon, onboarded, folks at big corporate brands saying, we can develop all these different nfts for you. Here's your contract. But the reality is all those BD people are in control of those private keys. You can't go, whoopsie, we're going to take away our access and you guys can have it. I mean, think of all the shared private keys out in the world that are just floating around due to this core thing that I'm bringing up. So that aside, we have in Ethereum land, you've got the account and you have a contract type of account.
00:02:40.012 - 00:03:18.284, Speaker A: There are two different worlds. One of them you can put smart contracts, on, the other one you can just sign transactions. So Ethereum is now having this ERC 4337 and it's basically trying to do what gnosis and Argentin have been doing for a while, which is basically allowing signatures to happen on a smart contract, trying to eventually get rid of these EOA accounts. If that doesn't make sense, that's okay because we're going to get into the near account system. So near is both of those things. Nate near is both a human, it's a Dow. I could publish a smart contract to Nate near.
00:03:18.284 - 00:03:48.580, Speaker A: It's all the same thing. And the private key. So notice I have one of these little signature or a little lock guy, right? That's a private key. So on near we can have a load of these, we can have thousands of these. And every single different key can do multiple different things. I can connect to Mintbase, I can connect to paras. Maybe that authorization allows Mintbase to actually spend zero point 25 near on their behalf without going to the wallet.
00:03:48.580 - 00:04:23.280, Speaker A: It's just incredible all the different things you can do with the account management system. And you can see we have three different full access keys on here. Any one of those can do whatever they want, including deleting keys so they can remove other people's keys. Imagine I'm a BD at Polygon. I want to get someone bootstrapped up to basically build all these different things. And then I want to hand that off to maybe Nike or a big corporation and then know those NFTs are minted there. No one can do anything about it in our world.
00:04:23.280 - 00:05:03.272, Speaker A: We can remove our access and create access for them anytime we want later on. Or we can get real weird with it and just remove all the keys altogether, which is actually kind of fascinating because once this happens and you have zero keys on an account or contract, that is as good as that forever. It's going to be that forever. No one can update it. And there's a lot of use cases for that too. So mint base, let's talk about what our system is a bit. So we've had over 1521 deployed contracts on our either UI or through our contract factory.
00:05:03.272 - 00:05:31.060, Speaker A: All of these have been audited. And yes, we have full access keys to all of them. Everyone go, ooh, evil. You guys have to understand what that means. We could destroy all of your contracts tomorrow. And so here I'm going to lean in there's 2335 contracts on near in total. And a lot of people also have those full access keys that can destroy your nfts forever.
00:05:31.060 - 00:06:03.472, Speaker A: But they can also remove it. And we can also remove it. And guess what? You can also remove it. So the reason we're keeping our access keys is because the standards are constantly evolving. Let's say we've done a new metadata standard that if the metadata changes, you update your funny PFP with a mustache. Later on the standard changes we can rip through all 1500 contracts and now everyone's compliant. If you decide, hey, Fu mint based, I don't really like the fact that you have that control.
00:06:03.472 - 00:06:31.112, Speaker A: You can go ahead and in our open source contracts hit delete key, but not yet. First add a key. Add your key. Because if you delete your key first, then it's just going to be that way forever. Which is also kind of cool. So what does it have to do with chats, ubT and buzzwords? Okay, so microchip GNU is our head of innovation guy. He's like, AI is super cool.
00:06:31.112 - 00:07:01.884, Speaker A: I said, grumpy man. And he said, well let me hook it up to our indexer and let's see what happens. I was like, okay. And then within like an hour and a half later he's like, look at all this crazy stuff we can do. So we actually created a mint based search plugin where you can query any information on near protocol. So if I come into Chat GPT, if you have the Chat GPT plugin, you can upload. Wow, that's a lot of information in six minutes and 50 seconds.
00:07:01.884 - 00:07:39.816, Speaker A: Right, let's take a breath. Okay, slowing it down. Okay, let's go get me four. Let's go nine. Contract created by Nate near. So it's going to go, it's going to search and this is going to impress maybe one person here, maybe a couple because obviously I can go to a query and I can get these informations and these different bits. But where does this come into near? So here's all these contracts.
00:07:39.816 - 00:08:12.936, Speaker A: Also I can go into my interface and I can see, well heck, these are all my contracts deployed by Nate near. We can go into, let's see one of these contracts. Nate mintbase one. Show me some information on tokens in one. Let's see if that pops something up. Show me some information on tokens in one. So now we're having a conversation with it.
00:08:12.936 - 00:08:30.112, Speaker A: Give me those contracts. Tell me more about those tokens. Oh great, this is the Chloe. We can actually go in here. We can see that the owner of it is Chloe. We can ask how many owners, what was the previous owner of that thing? We can click on the link and we can see the image. Cool.
00:08:30.112 - 00:09:04.456, Speaker A: That Chloe the dev actually bought this NFT. Neat. That's one of my Lisbon ones. And we can actually dive into manage my nfts. And I'm assuming I own it here somewhere. So going back on track to account abstraction. So what does this mean in the query land? So before, if you're a developer, this makes sense, I'm going to put together a big old query and do all these sort of things.
00:09:04.456 - 00:09:34.644, Speaker A: Now we have complete access to saying screw all that. Because you know what chat GBT and OpenAI did? They said, hey, we figured out how this crazy stuff graphql works and we've dumbed it down and now we can communicate to a blockchain through basic human readable conversations. Get me all the tokens. Tell me more about the tokens. So we even got weirder. And we are now developing a mint based action plugin where we can actually make transactions based on those conversations. So that was a great NFT that I just saw.
00:09:34.644 - 00:10:12.312, Speaker A: Can you mint that exact same token on my contract? Can you then transfer that NFT to someone else? And I think that this is just fascinating. Back to fastos. So how are we able to create accounts for Chat GPT users? So essentially we have Chat GPT, the relayer goes and creates a public and private keyfair. It gets stored on Google Cloud and we can mint tokens from Chachi PT. I know, everyone's like, oh my God, that's custodial. Stop. But yeah, you're right, it is kind of custodial.
00:10:12.312 - 00:10:56.540, Speaker A: So with this whole account abstraction thing, we're like, well, maybe we can send them an email with a link that removes our access and gives them access right away later on if they want to do that. But then we're like, oh, that's still kind of painful. And custodial. So we kind of looked at the drawing board and we're like, okay, cool, what if we just do the same thing and connect, creating public and private key pairs and saving those to pass keys. So maybe on Google Cloud we have the full access, but also on your phone you have a full access, and on Chrome you have a whole separate full access. All of these accesses are able to basically remove us at any time. So we're kind of getting closer to this part where you can actually just sign with face id.
00:10:56.540 - 00:11:29.144, Speaker A: I noticed boss is now implementing this. We just saw that there's an NPM script library that allows us to actually crank and do that. And that's pretty neat. So if we want, we can go even a step further of, okay, here's Jat GBT working. How do we actually get that to work in our own ecosystem? So I'm going to refresh this page. So now we have chat GBT on our own site. So Mintbase AI is going to be coming a thing.
00:11:29.144 - 00:12:26.354, Speaker A: You'll have a nice big prompt that you'll be able to see all these conversations happening, making transactions happen. And to us, where this is heading is minting a token is a pain in the ass. Can you imagine a world where you can just hook up some other data library of all the different fashion brands and being able to mass mint all of those different things with all the different properties in one keystroke? So we're getting there, but if we go, we can say, let's create an account. Okay, so I'm going to use a biometric account creation. So now we've just created this guy. Let's go into here. So we will notice on boss, this account just got created.
00:12:26.354 - 00:12:56.974, Speaker A: So it exists, doesn't have any components. We can go in here and just see what we just did without any near. This was created 22 seconds ago. We've just created a new account. And then now I'm going to come in here and hopefully, let's say use, generate a mint transaction. Generate a random mint. Generate a mint transaction.
00:12:56.974 - 00:13:28.374, Speaker A: Hopefully that'll work. I don't know. So this account was just created, it doesn't have any tokens on it, doesn't have anything altogether, but we're just going to generate a random sort of, this is what interacting with Nier is the reality. It's just basically an object that you just throw into the chain. And then hopefully that information does good. And that's what mintbase is. We're just a world where we help you organize that data and talk to the blockchain.
00:13:28.374 - 00:13:52.274, Speaker A: I don't care if you're a user, a dow, a vending machine. Our job is that that information gets organized and it's correct information of what you're hoping. And we can generate and create things from that. Here are all of my access keys that we have. So CF. So I've created all these this morning. We're going to do this one Cf guy.
00:13:52.274 - 00:14:24.540, Speaker A: We're going to use my fingerprint and we're going to submit the transaction. Let's see if this works. Cf, okay, you can see there's only those transactions. Did we create another transaction on top. Kind of takes a little bit of time. Let's see if this component. No.
00:14:24.540 - 00:14:52.422, Speaker A: Oh, did I do it right? Micro. So we're just waiting for the world to just work. Right. There it is. So we can see we actually submitted a transaction through a random account creation. And I don't know. And to me, this is where boss is heading, right? It's like kind of the window into, hey, all these nutty projects are doing all these different things, whether it's on terminal or through a back office or a shop.
00:14:52.422 - 00:15:08.420, Speaker A: And we can actually see all this information coming together. So without further ado, I only took up 14 minutes of your guys'time instead of the 30 minutes I feel like I gave you all of what I know and. Yeah. Let's go. Any questions?
