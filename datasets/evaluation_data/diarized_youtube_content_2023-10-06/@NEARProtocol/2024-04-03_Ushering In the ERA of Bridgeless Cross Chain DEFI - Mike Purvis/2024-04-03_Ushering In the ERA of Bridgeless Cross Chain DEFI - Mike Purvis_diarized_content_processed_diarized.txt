00:00:06.440 - 00:00:42.922, Speaker A: First of all, really good to be back at NIR. Yeah, I kind of left for almost two years, maybe a little bit more than two years, and I am back. And I was like, wow, am I going to come back to Nir and really be as psyched and manically excited about near protocol as I was before? And the answer is yes, it is possible. And I am here. We are talking about. That is wonderful to hear Ilya talk about change signatures, and we are going to talk a little bit more about that today. In the beginning, we're going to be referencing DeFi, essentially, but this is such a new and interesting idea that I think we need to walk before we run.
00:00:42.922 - 00:01:14.344, Speaker A: So we're not going to get crazy hardcore into the defi. And we think that the hackathon will be an awesome opportunity for you to really try this out. What's the latest on Defi? We just had this brutal bear market, and so now let's just kind of refresh. Like, where are we now? Okay, awesome. So November, it's kind of getting low. We are seeing signs of life and this is, I'm sure, even better than when this was taken. Bridge volume being used, a lot more in it these days.
00:01:14.344 - 00:01:40.762, Speaker A: Cross chain swap volume, as you can see, very much signs of life. And this is just the idea that people want have, like Ilya said, they have a bunch of stuff on different chains and you're just like, okay, we want to have cross chain swaps. And bridges have basically kind of been the way that we are been doing this for a long time. And bridges are quite amazing. I was looking this up recently. So this is funny. This is from August 19, 2020.
00:01:40.762 - 00:02:19.840, Speaker A: So this is like, pretty sure this is like right in the middle of Defi summer this blog came out. I highly recommend it. And this kind of goes over like the Aurora bridge and like, how it works. I think a lot of times, like bridges seem scary, but if you think of it like minter and locker, then this blog will help you understand it completely. So this is an example of, like, why bridges are, you know, fantastic and amazing. But, you know, we've also seen a few different things happen where bridges, you know, and this is not a dunk on any of these people, like very, very smart people building bridges. And it just, it happens, and sometimes it happens in unfortunate ways.
00:02:19.840 - 00:02:58.808, Speaker A: So we're kind of all in this web3 thing together, kind of figuring out how this all works. And we are seeing that there's some problems kind of digging into it more, too. Here's a few different ways that you can be bridging. And you'll notice that there's sort of subsets here. Like, you don't see every single chain on here. And it's like, how can we get into circle CCTP? So this is a little bit of the fragmentation. It just makes it a little bit difficult to be like, okay, where is this really going? And can we sort of think outside the box a bit, a little bit more on bridges? So, yeah, there can be an inconsistent user experience.
00:02:58.808 - 00:03:48.786, Speaker A: So, for instance, if you're using the Aurora bridge, then bridging one direction is going to be really fast, but then for security, the other direction is not going to be like kind of quite a bit longer, actually, and that's for your safety and all that kind of stuff. But I think to end users, they're just like, wait a second, it's going to take a lot longer to move it the other way. Like, what's going on here? Of course, liquidity is always an issue. TvL seems to be king in terms of, you know, getting funding and all this. And of course, this is actually really a big part of it, the painful gas token management. So if you want to move to a different chain, well, just like Ilya said, like, you better have bought some of that native token to work on that chain, right? And quick shout out. So farat from Pagoda is going to be talking a lot more about really cool stuff dealing with gas token management.
00:03:48.786 - 00:04:42.174, Speaker A: So that's a little hint there. Okay, so we just talked about bridges, and now let's come back to what Ilya was talking about. The programmable multiparty computation is a crucial addition. And so I am catching up to speed as fast as I can, but this is like really deep mathematical cryptographic stuff. And just like Ilya was mentioning, this is like actually changing the game in terms of, like, not having to have, like, a mentor and locker and some amount of trust that things aren't gonna really go, go haywire in the bridge sense. I'll just show this real quick that there are also just different sort of kinds of like, systems where, like, you know, near and lit, for instance, account based. There's other ones I recognize, Axelar, from my time in cosmos, where it's kind of like you begin by depositing something, and that's kind of the first step here.
00:04:42.174 - 00:05:10.784, Speaker A: But before going on, too, we're all here probably for ETH soul, and there's a million different protocols coming out, and it's impossible to keep up with all the different ones. So I want to give a little bit of a refresher on near protocol. So timeout, real quick brief refresher. This is very, very interesting. I think crucial is on near. I have mike near, I have Mike testnet. And so I'm using a little silly cli command.
00:05:10.784 - 00:05:40.804, Speaker A: And this basically says the contract that lives on Mike Testnet. There basically is no contract on Mike testnet yet. That's what all ones mean. But every single account on near has a cubbyhole and you can put whatever contract you want there. Really, really cool. And so there's not like, you know, Ethereum name service, you know, it's not like, it's not like my account is actually some long thing and then it's like, okay, but this resolves to Mike dot Nir. No, it's actually Mike near.
00:05:40.804 - 00:06:15.744, Speaker A: And in Ethereum, I think it's really, really interesting that, you know, they have create two, so you can deterministically, like come up with an address. And this is how 4337 is going to be, like basically making smart accounts. So you can keep your ens account, but then when you want to link a smart contract to your account, you can use like create two. And Cosmwasm, which is an amazing rust smart contract platform. Mesong is here somewhere in a pink shirt. Check it out. In cosmwasm, that's also instantiate two.
00:06:15.744 - 00:07:03.254, Speaker A: So anyway, these are different techniques to kind of like link your account to a smart contract. The reason why I'm kind of underscoring this is like, it gets really, really interesting and maybe talk to me afterwards because I'm not going to go too much about it on this talk. Key advantages to MPC approach versus bridging. So, yeah, I mean, if we are able to say Mike near can control a bazillion accounts and I don't know the full details, I think DMD is here and probably knows all details, but I'm going to go out on a limb and say that Mike dot Nir can control at least two to the 32 minus one accounts. Yes. So that's a lot. So, yeah, it's very, very, very endless.
00:07:03.254 - 00:07:52.084, Speaker A: And what's happening here also, I should maybe mention this, because we've talked about like, you're deriving an address on a different chain and stuff, right? So what is like, if that sort of feels like unfamiliar or whatever, maybe I can like ground that a little bit. So when, if you want to have like, I know 500 accounts, like, do you have to buy 500 ledgers? No, you buy one ledger and you say like the first index goes to this, the second index goes to this. And you can go all the way up to, you know, well, it's actually two to the 32 minus one times five, I believe because there's five segments if you want to. It's like preposterous amount of different addresses you can make. So that's why this first point saying it supports all chains. Like, yeah, way beyond that. And of course instant support for new chains.
00:07:52.084 - 00:08:22.418, Speaker A: And then we have this sort of standardized developer experience where it's going to be like, you are literally just going to be like broadcasting like, okay, cool. What is my account on arbitrum? Is this. Okay, cool. And you just like throw over a message to that blockchain and it's not like, oh, you have to throw it over. But like, hang on, it's going to take like 14 hours because something, something. No, you just throw it over just like a normal, very, very cool. It feels like this is one of the only times really where ux can be really standardized.
00:08:22.418 - 00:08:52.014, Speaker A: It's quite amazing. You might recognize this from Ilya's talk just a second ago. But yeah, we have threshold signatures controlled by near accounts and smart contracts. And I'm going to explain this poorly. And then people from Pagoda who know way more than me can help explain. But I think it's like this was a brand new concept to me and I asked a bunch of really dumb questions and made a bunch of like, made a fool of myself being like, wait, I thought it was like this. So I don't really.
00:08:52.014 - 00:09:16.108, Speaker A: This is how I'm thinking about it. You can have a, see these NPC signatures here. So let's just pretend like visualize in your head. There's like six different like relayers and they all have like different keys, right? And some amount of them have to all submit their signatures. Like, this one submits a signature. It basically can't do anything in any blockchain. This one submits it.
00:09:16.108 - 00:10:03.860, Speaker A: Still nothing. This one, this one, this one. Eventually enough of them get together with their own signatures of the same message and then you smash those together using weird math and you don't get something really garbled as useless, you get something very useful. You get an actual signature that combines into this and it's like then you can just do a free throw and just throw that over to whatever blockchain and it says boom. That's from Mike's account. One critical thing that I kind of got wrong that I feel a little bit naive and bad about is I was like, well, so the way blockchain works is you have a seed phrase and then private key and then public key. So does that mean that all these relayers are just like, you know, I have the first part of a private key, I have the second part.
00:10:03.860 - 00:10:40.644, Speaker A: Who has the third part then? That was scary to me because it's like now you're just like, are you combining it to find a private key? No, you're not. It is like really cool math that is basically like, you don't have to start with a private key. You can combine all these signatures and have something valid. And it's not like anyone has to know the full private key. Anyway, I was confused about that and so I wanted to like to like mention that. So how does this five. Okay, okay, cool, awesome.
00:10:40.644 - 00:11:18.314, Speaker A: So change signatures. So how is this going to work? So we actually have a smart contract that has just like, well, a whole lot is going on, but like all that you really need to know for this purpose and for the hackathon is like, you can say, all right, sign this please. And so here is the key derivation. So this is like the thing that says Iamic near. I would like to know what my arbitrum account is. And this is the special way to kind of make this really unique to that. And essentially once you submit this and you say, hey, please sign this NPC's, then they say, aha, no problem.
00:11:18.314 - 00:12:02.306, Speaker A: And then they do it and they give you a signature that again you can just lob over to an RPC on bitcoin doge, literally. We actually have an example of that working, obviously Ethereum, a bunch of other really great stuff. And I'm not going to spend too much time on this, but I do want to point out that I can directly call this with my key. Click a button, sign. I can also have a little smart contract on Mike near that also calls this. So a smart contract can call sign and then it gets a payload that can be used. So smart contracts can sign stuff for realsies.
00:12:02.306 - 00:12:22.144, Speaker A: Okay, let's not dwell on that. But I think that's like fascinating. But wait, there's more workshop tonight, me 735. And we're going to go over some really cool examples. And Farat's talk is at five as well. Right here, same place, different time. This is an example that we will be showing.
00:12:22.144 - 00:13:16.934, Speaker A: I'm going to kind of hurry up a little bit, but this is an example of me deriving an address on Ethereum. And then you can fund it and we'll go over all that later, might run through this a little bit. So what is going on? How can I look more into this? Nir is using additive key derivation and I am the wrong person to ask about all of this stuff, but it is in the docs right here. Docs dot dear.org dot check it out. And yeah, just to kind of give the full picture here is you say please sign this, either your account or a smart contract directly and then boom, you've got addresses to wherever you want to go. Here is something that we will be talking about more later at 735 and yep, this is an actual live demonstration using sepolia testnet.
00:13:16.934 - 00:14:02.854, Speaker A: We also have sepolia that we can give out later on and this is extremely interesting. Mintbase has an example ready to go right now that like is working on OpenSea actually the testnet. So we will go over this later as well. I will end here. We again have Ferrat later on at five workshop at 735 and then here's some really good link tree. And you know, if you're really curious about coming tonight, I might just grab some sepolia from the faucet here and some QR codes for the, for the documentation. Yeah, look forward to seeing everyone in a bite.
