00:00:05.370 - 00:00:14.334, Speaker A: We hit block. Let's say you decide how long the chain is. So 10,000. And because we're building big blocks on the data, right?
00:00:14.372 - 00:00:14.622, Speaker B: Yeah.
00:00:14.676 - 00:00:40.086, Speaker A: The first thing was, well, we need a. We need a way of managing it. So our first solution was, well, when you hit block 10,001 compressor. No, you just delete block one and block two. Now is your genesis block, right? And that was actually, we'd be chatting with people, and they're like, oh, but you can't do that. Why can't you do that? You can. The problems are some people like.
00:00:40.086 - 00:01:07.300, Speaker A: It was mostly ideological, where people like, but you need it. And we're like, well, tell us why you need it. And they go, well, you need it because your money will disappear. I'm walking you to something better. And we're like, well, if your money disappears, what you want to do is you want to manually send it to. As soon as you rebroadcast your money.
00:01:07.670 - 00:01:19.800, Speaker C: There'S a blockchain that does exactly that. You have pretty much all your jxos. Get cleaned up. It's not about blockchain. Just look at your jigsaw table. Get cleaned up. So if you want to keep your money, you need to resend them.
00:01:24.010 - 00:01:26.102, Speaker A: Look it up for an app, because we got something.
00:01:26.236 - 00:01:34.886, Speaker D: This is one of the key problems with being in a seniorish role in a boss project is the sheer mental effort of remembering all the other projects.
00:01:34.918 - 00:01:35.994, Speaker C: Of what they do.
00:01:36.112 - 00:02:18.066, Speaker A: There's something to do. ZK snarks. One of the problems is they're only dealing with most of them I've seen, they're only dealing with tokens or data. So they'll regenerate a ZK snark or whatever, and then they'll be able to delete the stuff. But if you've got it on this, the solution is actually this. The solution is, okay, you can rebroadcast if you want, but when block 10,001 is produced, everybody knows that block one is going away. So you automatically reformat and rebroadcast the transactions with a consensus layer, mediating not only the rebroadcast, but also a rebroadcast fee.
00:02:18.066 - 00:03:05.970, Speaker A: And you do this so you don't only broadcast the UTXO data, but you rebroadcast the data that's fixed to the transaction as well. So this solves a lot of really interesting problems, because the transaction fee. Let's make this. What we do at Seda is we make it two times the average fee of new transactions, and something really wonderful happens. You can have a blockchain of like a fixed size, you can say, like, it's 1gb block. Now, as the data on the chain grows, there's less and less space available for new transactions, right? So the new transactions start getting crowded out by the old transactions because you have to rebroadcast the old. If you don't rebroadcast every single transaction, no one else on the network treats that block as valid.
00:03:05.970 - 00:03:38.798, Speaker A: So you could have people attacking the network, but it would be a 51% attack. Right? And you could do it in bitcoin anyway. You fork and remove Satoshi's coins. The really interesting thing is, as the space for new blocks shrinks, the fees for new blocks go up. As the fees for new blocks go up, the fees for old blocks go up more. You've got an incentive now for people to manually rebroadcast one. But second of all, what you move is you move towards an equilibrium where the price of new transactions and the price of old transactions moves into equilibrium.
00:03:38.798 - 00:03:43.614, Speaker A: And the amount of new data that goes onto the blockchain is the same as the amount of old data that's purged.
00:03:43.662 - 00:03:44.210, Speaker B: Right.
00:03:44.360 - 00:04:24.914, Speaker A: And we finally have an economic solution to blockchain scaling and chain management. Because not only does the blockchain stay at a certain size, but it stays at a certain size. Well, you can guarantee that the data that's attached to your transaction will stay on the chain. So if you want your stuff on the blockchain forever, you can actually pay for it. If you just want your stuff falling off because you want a universal broadcast feature, you pay a much lower fee because you don't need to pay every loop. And something else happens. There's a lot of cheating in bitcoin where the miners, for instance, like you pay your fee, there's no guarantee that the people managing the chain will keep the data.
00:04:24.914 - 00:04:34.338, Speaker A: All they really need to do is maintain the utxo set. Yeah, right. So they purge the data, or there's no guarantee that they need to sync it to.
00:04:34.424 - 00:04:36.534, Speaker C: Why do they need transaction data in the first place?
00:04:36.652 - 00:04:39.080, Speaker A: Because we want to use a blockchain for more than money.
00:04:43.210 - 00:04:46.946, Speaker C: We use blockchain for more than money because I can use transaction data stored.
00:04:47.058 - 00:04:54.826, Speaker A: Think operator. When I say transaction data, I'm talking about operator stuff. You would stick in the operator field.
00:04:55.008 - 00:05:18.302, Speaker C: So that's what I'm saying. We don't store that. And you can use blockchain for any trinket stuff. Right. Just to explain, I think of blockchain as a database which has a transaction log and a transaction log, really you need like only ahead of it when you can forget about there is transaction data. It's like really you need it only for some period of time. Your database is where you should store your shit.
00:05:18.366 - 00:05:57.082, Speaker A: Well, one, we think of a blockchain as a universal propagation network. So there are applications where you want the operators to broadcast. And most blockchains, because they don't have this problem solved, they go to this position where it's like the data, you store it yourself. There are situations where, well, you're paying to use the blockchain, so you don't want to use that. You actually want data stored on the blockchain. For instance, something like a commercial insurance project. You want to keep the data on chain for three years because that's your length of legal liability.
00:05:57.082 - 00:06:02.894, Speaker A: I mean, you could maintain your own servers, but if you're maintaining your own servers, you don't actually need a blockchain for this.
00:06:02.932 - 00:06:12.258, Speaker C: Yeah, but why don't you store it as a part of state? You storing it as part of transaction data? I'm saying just store everything as part of state.
00:06:12.424 - 00:06:14.340, Speaker A: There's no reason you can't do that too.
00:06:15.030 - 00:06:19.638, Speaker C: But then you don't need transaction data. Then you can purchase without any problems.
00:06:19.724 - 00:06:51.614, Speaker A: That's like saying an airplane doesn't need drink service. An airplane doesn't need drink service, but it's better if it has drink service. So if you have drink service, you can provide some kind of services. And if you don't have drink services, you're not able to do like move sports teams, right? Yeah, this is a solution. And for some use cases, this is better than that, right? Because this is expensive because it's actually using the blockchain for a certain kind of storage. On the other hand, it's guaranteeing certain properties of that transaction. Stick around.
00:06:51.614 - 00:07:05.614, Speaker A: Like there are some things like let's say I've got a name card and that name card has a bunch of stuff on it. Like this is my PGP key. This URL here is where you can fetch my distributed Facebook posts.
00:07:05.742 - 00:07:08.214, Speaker C: You could take, you could take that.
00:07:08.252 - 00:07:39.310, Speaker A: Name card and you could have the name card circling along. Now if at moment of broadcast somebody needs to stick it in the database, a user can't come along two years later and then collect it because, well, no one's got it and you've got a coordination problem. This is the BSV MongoDB problem. They introduce massive coordination problems because they're like, okay, you're going to negotiate separately with underwriter. He's going to save the data for you if you pay for it. And all of a sudden you're using a blockchain. But all of the users need to coordinate on which access point to use.
00:07:39.310 - 00:08:04.930, Speaker A: They all need to have a second layer economic situation. With this, everything is paid for by the fee. So the coordination issues are solved because every node on the network must have the data. All you've got to do is convince someone to give you access to the blockchain and you've got it. But it's for a subset of use cases. For most use cases, like if you've got a signed message from someone. Yeah, stick to the database.
00:08:04.930 - 00:08:08.562, Speaker A: Then you pay a lower fee and you don't need to be paying to keep it on the chain.
00:08:08.626 - 00:08:14.294, Speaker C: Well, the way you're actually paying to keep it on the database, like you're paying rent.
00:08:14.342 - 00:08:20.470, Speaker A: Well, you've got to pay your own. Yeah. The rebroadcast fee is going to be more expensive than sticking in a private database.
00:08:20.550 - 00:08:27.322, Speaker C: No, it's not private. That's a shared database. As far as consensus you can get. That's what I'm saying.
00:08:27.376 - 00:08:28.330, Speaker A: Well, that's a blockchain.
00:08:28.410 - 00:08:47.590, Speaker C: It is a blockchain. Yeah, but that's what I'm saying. The way I look at blockchain, it's a database with the way you synchronize between masters and slaves is by sending around transaction log. That's why the transaction log actually doesn't matter because this is a database that everybody needs to have one way or another.
00:08:47.660 - 00:08:55.160, Speaker A: Well, I mean, I'm not really sure I understand what you're saying here because the entire point of this is that you're able to throw out data.
00:08:56.810 - 00:09:07.000, Speaker C: The idea is you stick some data here and then you need to pay for it to be stored so that you pay for. I will store for a month and then after a month you stop paying.
00:09:07.770 - 00:09:19.322, Speaker A: Well, then that's a rent system. It is rent system, rent system. Now you've got soviet economics because you've got. No, seriously, this is the thing people don't see. No, I agree, because they're like, the developers are going to set the rent.
00:09:19.386 - 00:09:26.654, Speaker C: That's why you have sharding, because you pretty much grow your storage with the demand.
00:09:26.782 - 00:09:42.070, Speaker A: Sure, but I mean, even with sharding, the problem isn't how many shards you have. Sharding is the solution. I mean, I think the sharding, big question with sharding is if the shards have different economics, then you've got coordination.
00:09:43.930 - 00:09:45.750, Speaker C: That's what you need to mitigate right.
00:09:45.820 - 00:10:29.174, Speaker A: But I'm not shitting on sharding. What I'm saying is, I'm saying one of the things to notice about this is the only way you make it work is it becomes like Filecoin, where you have one fee that's paid for use of the blockchain now, and then you have another fee that is extracted for going forward for like, oh, here's a month of rent, or here's two months of rent. One of the problems is, okay, well, how do you set that? How does the network even set that? And how does the network set that in a way which is secure and actually market driven? This actually doesn't. So one way to think about this is that it's a way of actually determining the market price. Because ethereum is like, oh, we're going to have rent. Well, how are they deciding that?
00:10:29.212 - 00:10:36.680, Speaker C: Yeah, they said ten to minus. Yeah, they're like literally ten to minus seven.
00:10:37.050 - 00:10:39.262, Speaker D: I referred to that as a fiat.
00:10:39.346 - 00:10:40.550, Speaker A: I said it by fiat.
00:10:40.630 - 00:10:47.622, Speaker C: So the way I was deciding price was actually in dollars based on the price of the hardware.
00:10:47.686 - 00:10:48.842, Speaker A: Let's just use this.
00:10:48.976 - 00:10:51.990, Speaker C: It's market slow. Then describe it to me again.
00:10:52.080 - 00:11:15.006, Speaker A: There are two things. You've got two options. One, you can fix the block size. If you fix the block size, basically you're forcing a market price to emerge in the context of how big your blocks are. This is the key thing here. We're forcing old transactions and new transactions to compete. So the real economic question is you still need to hard code something, but what you do is you hard code the fee differential.
00:11:15.118 - 00:11:25.620, Speaker C: So the part I did not understand actually is where does this fee come? Let's say there's a transaction a with, at that moment it had 100.
00:11:28.030 - 00:11:28.870, Speaker A: Fee.
00:11:29.030 - 00:11:31.290, Speaker C: So then it will be rebroadcasted later.
00:11:31.440 - 00:11:48.202, Speaker A: Well, what you get is what gets rebroadcast is there's a new. You get the old transaction, right? Yeah. So the old transaction, let's say, is a one and it's signed by the people that made the transaction.
00:11:48.266 - 00:11:48.880, Speaker B: Right.
00:11:50.130 - 00:11:56.874, Speaker A: You get a new transaction. We're going to call this ca one. It's signed by the block creator.
00:11:56.922 - 00:11:57.242, Speaker B: Yeah.
00:11:57.316 - 00:12:24.298, Speaker A: So if you pass it through and it includes the original transaction inside it. That's why we do two x, because we assume that the transaction is, at max, going to be twice the size of the original. But people can validate this to validate the original transaction. But what you can't do is you're going to validate that. This was produced by the. This has to be valid. It's produced by the block creator, right?
00:12:24.384 - 00:12:24.634, Speaker B: Sure.
00:12:24.672 - 00:12:44.142, Speaker A: So you can't say, oh, the sigs don't work out unless you have a secondary layer of transaction verification validation. So what you do is you basically take the data and does this work out and sign. Well, no, it fails. But then you say, okay, well, if it fails, then is it the secondary type of rebroadcast transaction?
00:12:44.286 - 00:12:52.914, Speaker C: So it's a part of. Understand, if I set here 100, what does that mean? How does that get, let's say you.
00:12:52.952 - 00:12:58.178, Speaker A: Have two unspent XTO from something.
00:12:58.264 - 00:12:59.140, Speaker B: Also say.
00:13:01.350 - 00:13:03.460, Speaker C: I know, I'm constantly saying.
00:13:04.090 - 00:13:38.830, Speaker A: I don't know, we're in Beijing. I mean, if people move on, you can't do it with multiple twos. Basically, every unspent Utxo, I mean, maybe you can, you might think of a way our implementation, every unspent Utxo becomes a new transaction. And if the unspent Utxo has, if you got two unspent Utxo with 100, this is now 98. Say this is now 98. And when you're producing the block, you now have four additional units, which are included in the fee for the block.
00:13:38.910 - 00:13:43.246, Speaker C: I see. So you just like take out the fee out of the mining Utxo?
00:13:43.278 - 00:13:43.522, Speaker B: Correct.
00:13:43.576 - 00:14:21.470, Speaker A: And if they don't have the fee to pay, if this Utxo only has zero point 59 and this works out to 2.67, well, this is dust, which falls off the chain. And what you do then is you collect it and you can distribute it to the new block producers in the form of the mining reward. So what you basically get is you get a tax on spare change that no one can use because it's lower than the fee. So the stuff that's useless is all of a sudden useful again. But you also have a way to maintain data on the blockchain at market prices. And this is something ethereum and them haven't figured out.
00:14:21.470 - 00:14:59.350, Speaker A: They don't even know the problems because most people don't. Because the only sensible solution is when you have storage and when you have blockchain propagation, people are moving towards two payments. And the problem with the two payments approach is, well, okay, we need to pay for bandwidth too. So what are we going to do? The only market solution for that is three payments. Like what if I need to broadcast this data, but I want it to go on an archive node and then that archiving node, it's a website. Well, I now need to be paying not only for storage or bandwidth. And what happens is it kind of multi dibly with every service you expect the blockchain to add, you have to have these different payments.
00:14:59.350 - 00:15:44.038, Speaker A: There are soviet pricing attacks that emerge at scale. If these prices are off at the market with SATA, you don't have that. You don't have that, because basically all of this stuff reconciles into the end user and their access to that first node in the network, because it's that first node in the network which we know it has all of the data. It has to have all of the data. And it decides to give it to them at what cost? And it decides to give it to them at the cost of. What are the fees that you're paying me? So one of the things that sabre does, because we're using market mechanisms, is we're taking these two, three, four payments, which are arbitrarily decided by developers, and we shrink them into one payment which is set by market prices.
00:15:44.134 - 00:15:45.910, Speaker C: The problem is you have no predictability.
00:15:45.990 - 00:15:46.330, Speaker B: Right.
00:15:46.400 - 00:15:51.930, Speaker C: You now don't know when your data will fall off because the market price will change over time.
00:15:52.000 - 00:15:52.780, Speaker A: That's right.
00:15:53.730 - 00:15:56.480, Speaker C: It will change when you rebroadcast. Not.
00:15:58.450 - 00:16:07.890, Speaker A: That'S not the problem of the network. That's the problem of the people using the network, though. We never said the problem is you can't pay me $2.
00:16:08.040 - 00:16:11.022, Speaker C: We're building it for people. Right? We're not building the network for network.
00:16:11.086 - 00:16:21.734, Speaker A: No, we're building the network to exist. It's kind of like you're saying, look, the problem with capitalism is you can't guarantee that the price of milk will be years.
00:16:21.852 - 00:16:22.230, Speaker B: Sure.
00:16:22.300 - 00:16:24.470, Speaker A: And it's like, well, yeah, of course I can't guarantee.
00:16:24.970 - 00:16:31.900, Speaker C: But it's a big difference between, like, you can guarantee that the price of milk tomorrow and they have to tomorrow with some price.
00:16:32.910 - 00:16:53.440, Speaker A: We're not talking about, you could have a transient chain that's 50 years. You could have a transient chain that's one year. You could have a transient chain that's 100 year. Bitcoin. Needs to move towards a transient chain of 50 to 100 years, a human lifetime. If you spend your bitcoin once in your lifetime, you pay the small fee. If you stick around.
00:16:56.050 - 00:16:57.230, Speaker C: Ancestry.
00:16:59.830 - 00:17:00.242, Speaker B: Tax.
00:17:00.296 - 00:17:03.826, Speaker C: Yeah, the state tax, you'd have that.
00:17:03.848 - 00:17:05.954, Speaker D: Anyway because you have to save it to your son.
00:17:06.072 - 00:17:06.740, Speaker C: Yeah.
00:17:09.370 - 00:17:25.226, Speaker A: But what's the trade off? The trade off is that the longer the genesis period gets one, the higher the fee everyone needs to pay, because as it gets longer, the cost of keeping the data for 50 years are on. What you guarantee is you guarantee it's a market system that won't break.
00:17:25.328 - 00:17:51.730, Speaker D: It's also think about it the other way around. If storage is coming online super quick and getting a lot cheaper, then actually I get the benefit of that in what I've paid to keep something on chain, right? If storage halves in cost, then the chain can just start accepting more data at the same overall fee value because it's costing less. Competitors will come in, right? So the point is it's robust because people aren't going to go out of business or fleece you.
00:17:51.880 - 00:18:04.822, Speaker A: And otherwise you need to keep changing your pricing mechanism when technical costs emerge because the guy, like, especially in a proof of stake system, because all of a sudden your economic variables are hard coded for cost. And these guys have much more money.
00:18:04.876 - 00:18:09.526, Speaker D: Flowing in because they can attack imagining the politics you're going to get when.
00:18:09.548 - 00:18:11.754, Speaker C: People are talking about changing the price.
00:18:11.872 - 00:18:22.330, Speaker D: Yeah, do we accept a pull request to change the price? When that pull request was put by Amazon and they're obviously just trying to hurt us all by squeezing us on storage.
00:18:22.410 - 00:18:25.870, Speaker C: You mean like from Paul put by Nvidia?
00:18:28.130 - 00:18:38.722, Speaker D: That's the point. There's two issues to the user determined or the developer determined fee. One is it's set without respect to the market.
00:18:38.776 - 00:18:39.826, Speaker A: The other one is it becomes an.
00:18:39.848 - 00:18:47.026, Speaker D: Attack vector because you can actually look at changing that to try and hurt your competitors if you've got a price advantage on.
00:18:47.208 - 00:19:04.954, Speaker A: I like to think this is ideological and linguistic because we present this idea to people and they go, but it's not a permanent blockchain. And it's like, well, why do you believe that BSV is a permanent blockchain? It's not permanent. It's going to collapse at some point. And in fact, the irony is that the bigger the blocks get now, any.
00:19:04.992 - 00:19:07.558, Speaker C: Kind of mass market, the more sensible.
00:19:07.734 - 00:19:22.446, Speaker A: Like there's some technological possibilities curve and maybe if bitcoin stays bought below it, it will be able to grow. But even then there's going to be other networks that come out with lower technical possibility curves and usage should transition over time.
00:19:22.548 - 00:19:42.040, Speaker D: That to me is the big argument is the only case I can see where the permanence makes sense is where you actually get a value from all of the previous data. So for instance, art provenance or diamond registries or something like that, where there's a real value, to me, the entire chain exists. Pay for that storage to get it now, and in 100 years it'll be.
00:19:42.490 - 00:19:48.970, Speaker C: That's why I think of it always as database and whatever you want to record, you record. Everything else is transient.
00:19:52.590 - 00:20:06.846, Speaker A: You can think of it as a mechanism. You don't even need to rebroadcast because it's in database. You can think of this as reindexing. Like the data doesn't even need to be lost because the computer nodes, you.
00:20:06.868 - 00:20:09.146, Speaker C: Can think your transactions are actually in the database.
00:20:09.178 - 00:20:09.374, Speaker B: Right.
00:20:09.412 - 00:20:12.746, Speaker C: And you're maintaining the fixed size of the database.
00:20:12.858 - 00:20:54.714, Speaker A: Yeah. It's a bookkeeping mechanism where your money used to be in block one and now it's in block 10,001. It doesn't need to be rebroadcast. The point is, when it's spent, all of the systems will say, oh, well, it's the fee in block 110 thousand and one. But, yeah, for us, this isn't even the really special part about Sado, but we look at this and we compare it to, like, Ethereum's rent, and we're like, look, unless, until people realize they've got. The problems are underlying incentive problems, right? Like the fundamental problem is that miners have an economic incentive to take money today, to get paid today. And then what we're going to worry about tomorrow?
00:20:54.762 - 00:20:55.498, Speaker B: Tomorrow.
00:20:55.674 - 00:21:02.494, Speaker C: Well, I mean, rent does solve that problem. I do agree that fixed price is not market price.
00:21:02.692 - 00:21:08.898, Speaker A: Rent doesn't solve that problem because if blocks are huge, I still have an incentive to put as much data on.
00:21:08.904 - 00:21:22.546, Speaker C: The blockchain even if it breaks again. I don't look at blocks for me is just this transient. It's like a packet you send over to vip. It's not really information, but we're not thinking about blocks.
00:21:22.578 - 00:21:50.880, Speaker A: What we're thinking about is we're thinking about, think of it this way. So the reason it solves the problem doesn't, is that you have the structuring of payment in time. Now, if the payment happens here and it happens only when the stuff goes into the database, you have perverse incentives because it's kind of like BTC. Well, we're going to make the blocks really small and we're going to force a fee market. And that way, because there are high fees we can pay for forever. You're not paying for forever. You're just giving the people.
00:21:51.410 - 00:21:54.350, Speaker C: That's what storage is. And perpetually.
00:21:54.850 - 00:21:57.762, Speaker A: Yeah, but that's not what this is. What this is is.
00:21:57.896 - 00:22:06.820, Speaker C: I understand. I'm just saying, like, storytrend does solve the problem you're describing. It has a side effect that this is like storytelling will be like.
00:22:09.050 - 00:22:21.858, Speaker A: It solves the problem here. It doesn't solve the problem where it's actually caused. It's a data management solution, not a solution to incentives and because it doesn't solve the incentives.
00:22:21.954 - 00:22:30.842, Speaker C: Well, why not? I mean, as a validator you have pretty much a stream of income going forward that you want to hold on to.
00:22:30.976 - 00:22:51.698, Speaker A: It's a solution on the technical level and it's a better one than. So what I'm saying is what is the actual incentive problem? If we can fix this problem, we fix the scaling issue. The incentive problem is miners have incentive to put data on the chain because they get paid for it immediately. It's a tragedy. It's a commons problem.
00:22:51.784 - 00:22:52.178, Speaker B: Right.
00:22:52.264 - 00:22:57.154, Speaker C: They get paid for changing the database, but then they also paid for maintaining the database.
00:22:57.202 - 00:23:07.990, Speaker A: Sure, but that can fall out of disconnect. It can fall in disconnect when there aren't market prices. So it makes it better because it's leagues better than what's out there.
00:23:08.140 - 00:23:11.610, Speaker C: But let's imagine there is a market price for store insurance.
00:23:11.760 - 00:23:58.498, Speaker A: What I'm saying is you don't need to have this arbitrary technical solution if you can fix the incentive solution. And the question is what does the incentive problem even look like? Fixing the incentive problem means miners will not put data on the chain unless it's paying enough to do everything that it needs. And that's what this does because, note the payment happens. Why do you get paid? You get paid for block. To get paid for block 10,001, you need to have done all of the work already so the payment doesn't come first and then the work happens. The payment, the work happens and then the payment comes. So the situation traditionally in blockchain, you need to solve it this way because you need to basically be regulating technically the size of the stack.
00:23:58.498 - 00:24:07.334, Speaker A: You solve it at the incentive layer because the person who's producing this block doesn't collect enough money to cover their entire cost of operation, they will go bankrupt.
00:24:07.382 - 00:24:14.734, Speaker C: But if I am, for example, block producer for 2001, but I haven't done anything for any of those blocks, then.
00:24:14.772 - 00:24:16.794, Speaker A: How do you know what transactions need to be rebroadcast?
00:24:16.842 - 00:24:20.206, Speaker C: What do you mean? I mean downloaded from somebody's and you.
00:24:20.228 - 00:24:25.186, Speaker A: Verified them, then you've done the work. That's the work that's in.
00:24:25.368 - 00:24:43.650, Speaker C: But I haven't maintained this for this period of time. Let's say it's 50 years. Like I haven't spanned 50 years of 100gb or whatever terabytes of data. This is the expense, it's not me validating is waste. This database is such small database validating.
00:24:43.730 - 00:24:48.870, Speaker A: It's almost as if you're talking about the payment for routing and data, which is something else.
00:24:48.940 - 00:25:14.078, Speaker C: No, I'm talking about payment for storage. This is 50 years of storing 100gb versus downloading it once and validating that over time. No, but I mean, my incentive here. I don't have an incentive for storing it. I will download this data at the moment when I introduce this, and I'll.
00:25:14.094 - 00:25:22.366, Speaker A: Get your incentive to enter the network at any point in time is driven by the profitability of producing blocks.
00:25:22.398 - 00:25:23.026, Speaker B: Now.
00:25:23.208 - 00:25:37.730, Speaker A: So the historical cost of producing blocks is paid for out of historical block production. So you can't say, oh, but I haven't done this work for 50 years, because you're not being paid for the past 50 years. You're being paid for this block.
00:25:37.810 - 00:25:43.274, Speaker C: But you'll get paid from this transaction that you pretty much rebroadcasted, right?
00:25:43.312 - 00:25:43.900, Speaker B: Yeah.
00:25:44.510 - 00:25:47.050, Speaker C: That you did not maintain.
00:25:47.390 - 00:25:50.686, Speaker A: Well, these guys got paid for the first fee of the 50 years.
00:25:50.868 - 00:25:53.054, Speaker C: Well, they did not. Right? That was the first guy.
00:25:53.092 - 00:25:59.790, Speaker A: No, you get the new transaction fee and then you have the rebroadcasting fee.
00:26:00.690 - 00:26:06.414, Speaker C: For this specific transaction that's sitting here has been sitting on all of this guy's disks.
00:26:06.542 - 00:26:06.930, Speaker B: Right.
00:26:07.000 - 00:26:10.850, Speaker C: They've only paid to the guy who produced block.
00:26:12.230 - 00:26:36.314, Speaker A: The fee to include things as a new transaction is the fee for this period. The fee for this period is pushed into market equilibrium by the desire to store data on the chain, which is where this comes from. So, I mean, you're right. If you're saying people can come in and people can leave, but you're leaving after 10,000 blocks. You have to do a full genesis period of work before you can produce the next one.
00:26:36.352 - 00:26:37.418, Speaker B: Now you can leave.
00:26:37.584 - 00:26:56.846, Speaker A: And new people might look and they might say, it's really profitable to produce blocks. The nice thing about Satan is they could also say, well, I could produce blocks or I could route transactions. I'm going to put stuff in transaction writing. You get the new fee here and you get the rebroadcasting fee. Technically, they're collected in the same block.
00:26:56.958 - 00:26:58.900, Speaker C: So, just for me to understand.
00:27:01.190 - 00:27:01.566, Speaker B: Let'S.
00:27:01.598 - 00:27:12.200, Speaker C: Say we have, like a very simple example. We have one GUy who, for 10,000 blocks, been producing blocks. And then really we just only had one transaction in the whole system.
00:27:14.090 - 00:27:16.280, Speaker A: It's a set change, okay?
00:27:17.950 - 00:27:34.670, Speaker C: And then somebody showed up. So this guy received, whatever, two SATA right out of this transaction and then spent X amount of resources to maintain to keep this.
00:27:34.820 - 00:27:35.230, Speaker B: Right.
00:27:35.300 - 00:27:42.602, Speaker C: Then some guy show up and I download this from him, revalidate and produce 1001 block.
00:27:42.666 - 00:27:59.222, Speaker A: So how much did he pay to download the blockchain? Well, I would charge him x plus profit. And if this guy doesn't want to charge HIM X plus profit, that's okay. Then he's economically irrational. If he falls off the network, that's fine.
00:27:59.276 - 00:28:03.000, Speaker C: So what is it like? How do you charge that?
00:28:03.370 - 00:28:18.940, Speaker A: Well, no, that's a private negotiation off trade. You want data from me. We're talking about a massive blockchain moving tons of data. I'm not going to give it to you all for free. Best way you can get it, actually, is if you start feeding me transactions. If you start feeding me things that are worth money to me, of course I'm going to pay you back with data.
00:28:20.350 - 00:28:23.790, Speaker C: How does it look like from a code perspective?
00:28:24.370 - 00:28:25.694, Speaker A: It's not a code issue.
00:28:25.892 - 00:28:30.010, Speaker C: Spin up a node. How does node become up to date on the network?
00:28:30.090 - 00:28:34.590, Speaker A: Okay, so DSV is moving. Let's say we've got terabyte blocks.
00:28:35.670 - 00:28:43.790, Speaker C: Okay, no, I'm not talking about just in your network. I spin up a node. How does node become up to date this network?
00:28:43.870 - 00:28:46.114, Speaker A: Well, you connect to a node and it gives you the data.
00:28:46.232 - 00:28:48.306, Speaker C: Yeah, so you pay for that.
00:28:48.488 - 00:29:08.026, Speaker A: You've got to find someone to give you the data. The nice thing about sado is how do I convince you to give me the data? I start giving you money. Now, I can do that two ways. I can pay you explicitly or I can start feeding you transactions. So, for nodes in the routing network, this is why the routing page, I.
00:29:08.048 - 00:29:14.474, Speaker C: Cannot become validator until for a while I ran and pretty much did transition.
00:29:14.522 - 00:29:40.054, Speaker A: To look at it the other way. If your expectation is that a blockchain is going to give you exabytes of data for free, you may as well be unwriter and say, like, I'm going to build a mongo database. All of the data is going to be in there and we're just going to give users it for free. Of course, the economics don't work. The economics don't work at scale because of their costs. The difference is that other blockchains, they assume that the market is going to sort out all of this.
00:29:40.172 - 00:29:42.600, Speaker C: Shall we do, or we just record this?
00:29:43.130 - 00:29:52.150, Speaker D: We've been recording so far. Okay, I'm sure we can. Aside from when I'm talking, do you need a belt?
00:29:52.910 - 00:30:31.494, Speaker A: It's one of the reasons you want to be paying for routing, right? Yeah, as long as you're paying for routing, as the routing nodes start getting, as they start bringing more transactions into the network. Well, the people that are moving exabytes of data as core network nodes, you do have market competition. Between them because they've got the blocks, they've got the data. They want the transactions from routing nodes because that's how they make money. So what you've got is you've got data as payment. So what I think you're asking is you're saying, well, look, tell me exactly how it works. And the answer to that is if you want an exabyte of data that's going to cost you, there are two ways of doing it.
00:30:31.494 - 00:31:22.866, Speaker A: You negotiate a separate payment, which is a market that forms at the edge of the network, and the network does not specify the terms of that. Economics. And one of the reasons that BSV and these other networks are going to have pseudoeconomic problems or like rent stuff, like if you're letting your economic conditions be determined by code that's in the system. If the reality differs from that, you either have pricing attack vectors or you have free writing sado. We don't actually care your terms of access to the network. We say as long as the network is supporting itself and the network is paying for the transactions that are coming in, you're going to have a guaranteed point of entry because the network always has an incentive to give you a point of entry. Like, if you want to say, okay, there's one node, well, that's kind of like bitcoin.
00:31:22.866 - 00:31:40.140, Speaker A: If bitcoin had one server, why would they share their blocks with you? The difference is, in this system, in order to produce blocks, I need the stuff that you've got. And in order for you to get the stuff you've got, I need blocks. There's actually an economic incentive that is going to keep the network open.
00:31:40.450 - 00:31:46.474, Speaker C: So let's say you're feeding me transactions. Why would I give you blocks? Previous blocks?
00:31:46.602 - 00:31:50.320, Speaker A: Why would you give me blocks if I'm feeding you transactions? Well.
00:31:52.050 - 00:32:05.700, Speaker C: I don't want you to produce block. Let's say there's one node, right? So here's one node. That's the first node in the system run by SATA, probably. I show up, okay.
00:32:07.430 - 00:32:13.062, Speaker A: If we're going to do a one node example, we're going to do a bitcoin example, because SATA already has way more nodes than that.
00:32:13.196 - 00:32:17.902, Speaker C: Well, I mean, like, okay, sure. So I show up, I feed your transactions.
00:32:17.986 - 00:32:24.810, Speaker A: Yeah, in bitcoin. Why would a bitcoin computer give a user a copy of the blockchain?
00:32:26.190 - 00:32:27.686, Speaker C: We're not talking about bitcoin.
00:32:27.798 - 00:32:38.506, Speaker A: No, we're talking about bitcoin in this example, because it's a cognitive thing where people are like, oh, SATA is different. Let's look at this. The problem is not SATA. The problem. The question is, you have a bunch.
00:32:38.538 - 00:32:40.720, Speaker C: Of nodes, they all.
00:32:41.090 - 00:32:49.460, Speaker A: Then they're still bitcoin nodes. Why would a bitcoin. Because we're talking about blockchain. We're not talking about SATA. Why would a bitcoin node give data to a.
00:32:53.750 - 00:33:01.320, Speaker C: No, we don't need to argue about that. There's no reason to give, like, bitcoin nodes will give it because they're nice. That's the only reason.
00:33:02.010 - 00:33:04.214, Speaker A: No, that's not why it's going to happen.
00:33:04.412 - 00:33:10.134, Speaker C: The reason they give it because they want users to actually be able to transact. And without any data, they cannot.
00:33:10.262 - 00:33:18.406, Speaker A: The payment for the fee is the data. It's the same in bitcoin. Why are you going to serve?
00:33:18.438 - 00:33:24.460, Speaker C: Not really. You can actually not give it. That's my point. You can actually accept transactions and not give data. Yes.
00:33:25.150 - 00:33:38.786, Speaker A: When the network is tiny and stores, your bandwidth is free. No one cares. When the network is operating at exabytes a day. The core network, like think level three. Think of actual. This is network pure, right? There is an exchange of value. When things cost money.
00:33:38.786 - 00:34:06.502, Speaker A: People say, oh, well, bitcoin works this way. It's like, well, okay, bitcoin in 2009, I could run it on a raspberry PI. This is not a model for scalability. So the answer to your question is that at every point in the network, there's a fee for data tradeoff. So if you want someone to give you a copy of the blockchain, you've got two options. You can pay them for it in a sado network, you can also pay them for it by starting to scale data, because you can be smaller. Routing node.
00:34:06.566 - 00:34:06.842, Speaker B: Yeah.
00:34:06.896 - 00:34:16.400, Speaker C: So that's the part I don't understand is, let's say you do give them, feed them transactions, right? Well, as a relayer node, yes.
00:34:16.770 - 00:34:17.520, Speaker B: Right.
00:34:19.010 - 00:34:22.894, Speaker C: Like, users send you transactions and you send them, and you actually still don't have a blockchain.
00:34:22.942 - 00:34:23.410, Speaker B: Right now.
00:34:23.480 - 00:34:25.170, Speaker C: Like you just started a node.
00:34:26.230 - 00:34:27.810, Speaker A: The blockchain exists.
00:34:29.670 - 00:34:34.962, Speaker C: I'm talking always from perspective of one specific node because I'm one person.
00:34:35.016 - 00:34:35.842, Speaker A: I'm here.
00:34:35.976 - 00:34:40.214, Speaker C: There's maybe other nodes. They have blockchain. I don't have blockchain. Right. I just started.
00:34:40.332 - 00:34:40.854, Speaker A: Okay.
00:34:40.972 - 00:34:41.302, Speaker B: Yeah.
00:34:41.356 - 00:34:51.302, Speaker C: So I'm now receiving transactions, signing them, and then sending them to the nodes I think have blockchain. First of all, I didn't know they have blockchain.
00:34:51.366 - 00:35:08.880, Speaker A: Think of bitcoin. You got a permanent ledger that's let's say ten exabytes, you need the entire ledger to validate. Theoretically. I mean, people are moving toward systems where you don't need to download the blockchain, which is basically saying that it's not a permanent ledger and it's just.
00:35:10.210 - 00:35:11.898, Speaker C: A database was a transaction.
00:35:11.994 - 00:35:51.174, Speaker A: So it's basically a temporary ledger where you actually have no guarantees of data being on the blockchain, which is actually why sado matters, because it provides guarantees in an economic system where other blockchain can't. Why would a bitcoin node send you ten exabytes of data so you can do the work required? They probably would, but they're probably going to ask you to pay for it. If you talk to BSV people, all of the rage on Twitter is about like archive nodes. Yeah, the idea is that, oh, well, we accept that the nodes in the network will do this. There's a separate node that will pay for it. The problem is, again, it's like, well, okay, but coordination costs. And why if I'm using a blockchain, because I don't want to pay coordination costs.
00:35:51.174 - 00:36:13.266, Speaker A: It's one network. So all of a sudden I have to deal with archiving nodes. I've now got two payments. Not only do I have two payments, use of the network, use of the archived node, all of my users now have two payments. So we've now got four payments instead of one payment. And we've got coordination costs of which archiving nodes we've been paying for. Part of the value of this system is that this is a ridiculous system.
00:36:13.266 - 00:36:34.490, Speaker A: The only reason people think that this is sensible is because they haven't solved the problem at the underlying incentive layer. And going back to what you said, this is a viable solution. And I'm not trying to criticize this because this is. Leaks better. What I'm trying to point out is that if you have a system that solves things at the incentive layer, you don't need this because things like rent start self regulating automatically.
00:36:37.550 - 00:36:51.866, Speaker C: Before it gets. I'm just trying to understand how would it work? Right. I am onenote. I boot up it on my computer. So at this point, first of all, I need to find peers.
00:36:51.978 - 00:36:53.050, Speaker A: You got to find a peer.
00:36:53.130 - 00:36:53.614, Speaker B: Yeah.
00:36:53.732 - 00:37:07.370, Speaker C: So let's say I know about some of them. I connect to them at this point. If I want to be block producer at some point, right. I need to negotiate with them to give me the current blockchain.
00:37:07.470 - 00:37:09.510, Speaker A: Well, you need to do that in any blockchain.
00:37:10.250 - 00:37:17.494, Speaker C: Again, not talking about any blockchain, talking about taylor, you don't need to convince me that blockchain, that bitcoin has issues.
00:37:17.612 - 00:37:18.280, Speaker A: Okay?
00:37:18.970 - 00:37:20.250, Speaker D: That's not the point.
00:37:20.400 - 00:37:22.602, Speaker C: Here's what I'm just trying to understand how it will work.
00:37:22.656 - 00:37:25.210, Speaker A: The size of the chain determines.
00:37:26.430 - 00:37:35.178, Speaker C: The first question I have is I connect it to a node. How do I know, like, I'm going to pay them. How do I know they have actual blockchain?
00:37:35.274 - 00:37:47.422, Speaker A: Let's say the cost is $10,000 per. Actually, let's say it's $10 per block or something. Even if NASA scales $10,000 per block.
00:37:47.486 - 00:37:52.018, Speaker C: You mean to $10 per sending a.
00:37:52.024 - 00:38:04.594, Speaker A: Block or bandwidth or something. So, like a 10,000 chain, 10,000 blockchain is like $100,000 or something, right? So you've got two options, and it's the same with bitcoin. This is not a status thing. This is just. It's the economics of blockchain.
00:38:04.642 - 00:38:05.094, Speaker B: Right?
00:38:05.212 - 00:38:14.394, Speaker A: You've got two options. Let's start with bitcoin. Because where we get better than bitcoin will explain. You pay this guy $10 and he gives you the data.
00:38:14.512 - 00:38:15.770, Speaker C: What if it's fake data?
00:38:15.840 - 00:38:17.770, Speaker A: Well, what if it's fake data in bitcoin?
00:38:18.590 - 00:38:23.054, Speaker C: I mean, that's why I don't pay in this coin. Well, they just give me data and then validate this.
00:38:23.092 - 00:38:23.678, Speaker B: Correct? Data.
00:38:23.764 - 00:38:26.510, Speaker A: Yeah. If you can have a blockchain where everything is free.
00:38:26.580 - 00:38:34.302, Speaker C: No, I'm asking how do you pay in a way that only pays users to validate it.
00:38:34.356 - 00:38:35.678, Speaker A: How do you do that in bitcoin?
00:38:35.774 - 00:38:36.286, Speaker C: You don't.
00:38:36.318 - 00:38:41.698, Speaker A: That's why there is no such solution. We're saying there's an economic problem because you need to pay.
00:38:41.864 - 00:38:47.890, Speaker C: I'm saying there is a problem. I'm saying, tell me the solution that actually provides.
00:38:48.950 - 00:38:50.674, Speaker A: That's not the problem sado solves.
00:38:50.722 - 00:38:51.222, Speaker C: Okay.
00:38:51.356 - 00:39:05.180, Speaker A: SATA doesn't solve you. Someone sets up a sign and says, hey, I'm a bitcoin node, I can send you the blockchain. It's going to cost $50,000 because it's huge. You go after that archiving node, you pay the money and they send you fake data.
00:39:05.790 - 00:39:06.154, Speaker B: Yeah.
00:39:06.192 - 00:39:09.130, Speaker A: That's not a solved problem. That's not a solved problem in any blockchain.
00:39:10.270 - 00:39:12.250, Speaker C: There is some solutions for this project.
00:39:12.320 - 00:39:24.366, Speaker A: Well, I mean, there's smart ways to do it. Like, you find out what the actual hash is at the tail of the chain and you sync the chain backwards. That's one solution. You still need to actually yourself figure out what the last hash is.
00:39:24.388 - 00:39:24.478, Speaker B: Yeah.
00:39:24.484 - 00:39:25.438, Speaker C: So how do you do that?
00:39:25.524 - 00:39:33.890, Speaker A: Well, you do that in bitcoin. This isn't the problem that we're worried about. Okay, the problem that we're worried about. Let's move on. You're saying, let's assume that they're going to give you good data.
00:39:33.960 - 00:39:34.194, Speaker B: Okay?
00:39:34.232 - 00:39:40.470, Speaker A: And honestly, assuming they're going to give you bad data is not a real world problem at this point.
00:39:40.540 - 00:39:43.894, Speaker C: It's not even get money for free.
00:39:43.932 - 00:40:16.962, Speaker A: Well, you've got two choices, right? You got to pay them $10. The bitcoin solution is, well, okay, I pay you $10 and maybe I collect this money from users that I serve the data to. And so with all of these users, I have this off chain private economy, right? So I'm going to collect on PayPal, I'm going to collect $3. $3. And this guy's a nice guy and he pays me five, or maybe he's an idiot. And so my profit's a dollar. And hey, I'm in the business of dealing with this.
00:40:16.962 - 00:40:49.980, Speaker A: This is the traditional intranet peering arrangement. At every point in the network you have people making off Internet exchanges of value and payments. So this is maybe me and my ISP. I pay my ISP $30 a month. This guy's paying $50 a month. The ISP is mediating the economic agreements with all of us and with the chain. Okay, Sado replaces this because what you've got is you've got the data itself that's sent, that has value.
00:40:49.980 - 00:40:56.106, Speaker A: So if I'm a user, if I'm a user and I'm sending transactions onto.
00:40:56.138 - 00:40:56.990, Speaker B: The network.
00:41:00.090 - 00:41:32.110, Speaker A: This node gets paid for redirecting the data. And so you've got the transactions that have fees. And so the fee is paid for by use of the data and the data comes back through. What this guy has to do is he basically collects the money, sends into the network, and he gets paid for that. So economically, what you've got is you've got a replacement of kind of commercial isps that have these private arrangements with people with essentially a uniform cost of Internet access where market forces basically make people flexible.
00:41:32.190 - 00:41:47.026, Speaker C: So I understand this part. The problem that I have with this is that when this node, when this is, let's say this new ISP, right? Yeah, I'm starting my new ISP. I need to connect with some folks and I will be sending them transactions.
00:41:47.058 - 00:41:58.370, Speaker A: And let's say you have your problems with bitcoin. You're like, of course, if you want to serve someone's blockchain you got to serve in the blockchain. This is a bitcoin problem. This is the bitcoin network.
00:41:58.450 - 00:41:58.694, Speaker B: Sure.
00:41:58.732 - 00:42:13.038, Speaker A: The bitcoin network is moving x bytes of data, and you're like, okay, yeah, but I want them to send me xabytes of data. The difference is, actually with SATA, one of the ways this improves is this guy, at small scale, he does not need extra bytes of data.
00:42:13.124 - 00:42:13.470, Speaker B: Sure.
00:42:13.540 - 00:42:48.406, Speaker A: Because maybe he's giving these guys light blocks. So maybe he only needs a third of the blockchain. So because he only needs a third of the blockchain, he can actually pay to get cryptographically verifiable a third of the blockchain. That's good enough for the users because they can verify that the data is solid, which means that the cost here is not the same as getting a full expedited data. And what you've actually got by subsidizing routing is an economic structure where in addition, for paying for block production, you're also paying for light block production. And that's like, that's cpu intensive. So you actually servicing users.
00:42:48.406 - 00:43:33.800, Speaker A: There's a reason for these nodes to exist independently of these nodes because these guys, they're moving masses of data and they're focused on that. They're focused on, it's like level three. Level three does not want to give you individual access to the Internet because that's not their business model. But these guys, there's space in the system for them because what they can do is they can focus on, okay, well, you're a light client, but you're not really a heavy client. You don't make heavy demand. So I'll accept transactions from you that pay this fee as long as it's x per month, and the whole thing becomes systematized. In the economics of the blockchain, basically everything that is sort of arbitrary about the bitcoin system in terms of these ancillary nodes becomes streamlined in the economics of the blockchain itself.
00:43:33.800 - 00:44:17.590, Speaker A: So you can kind of think of it as like an Internet peering system, where instead of people having to arbitrarily decide what their data flows cost, the fact that it is a data flow means that it has money, and that reconciles the economic issue. It also, the guarantee it provides of net neutrality is that you've got to realize that the transactions that are profitable to this guy are just as profitable, if not more profitable to this guy. So this guy, he can switch over here if he doesn't get good terms. And we actually do drive down to utility pricing for this sort of regular thing. This can't happen in bitcoin. In bitcoin, well, this guy's got to get the full blog or he's got to negotiate stuff off chain.
00:44:18.650 - 00:44:31.142, Speaker C: But here you also need. This is like, let's say you only know about this node right now. For you to actually find out about all this nodes, either this guy needs to tell you about it, or you need to find it somehow off chain.
00:44:31.206 - 00:44:55.746, Speaker A: Well, look, I mean, if we're being honest with bitcoin software, the peer finding software is insecure. There's no reason that any blockchain's peer finding software is less secure than others. It's not a viable criticism. It's kind of like saying, yes, but gravity is hurting your plane. It's like gravity is hurting every plane. When someone figures out a solution to.
00:44:55.768 - 00:45:07.462, Speaker C: Gravity, like, any blockchain can be my problem. Why am I pointing to all those problems? Is that in bitcoin right now? Right now, there is no payment for this.
00:45:07.516 - 00:45:09.190, Speaker A: Well, yes, I know, and that's why bitcoin.
00:45:10.090 - 00:45:18.858, Speaker C: But that's why. Yes, it's insecure. Yes, it's all these problems because there's no payment. There's no economic incentive to try to.
00:45:18.944 - 00:45:24.086, Speaker A: No, here's my disagreement. You're saying, well, look at this problem. Look at this problem. We're talking about bitcoin.
00:45:24.198 - 00:45:24.570, Speaker B: Yeah.
00:45:24.640 - 00:45:33.866, Speaker A: So you're saying, look, the problem is, you guys in your system, you actually pay the network to survive. And it's like, yes, but that's the entire point of the blockchain.
00:45:33.978 - 00:45:39.822, Speaker C: But as soon as in SATA, right, you're adding money to this.
00:45:39.876 - 00:46:06.410, Speaker A: No, there's no separate payments in SATA. The payment comes out of the fees. There's no new payment. Where does the money that here comes from? This is the money that used to go to, like, the bitcoin network. You've got to have all of these separate negotiations because all of the money is going to the guy in, like, Xinjiang who's got the server farm. This is saying, the money that used to go to the miners is now paying for the network. The network is the ASIC.
00:46:06.410 - 00:46:16.940, Speaker A: The way you make money in Sado is you have to be really efficient at positioning your servers, finding users, and giving them a good deal on the data.
00:46:17.730 - 00:46:54.842, Speaker D: I think the thing to understand is if you're thinking about scale, genuine scale, imagine that each of those core nodes, imagine it only has one switch, right? So you're literally deciding who gets the 16 ports outbound, and you've actually got to pick the best people to be most profitable because you're talking about a scaling network. If people can randomly connect to a network like that, whether or not they provide incoming useful incoming traffic, you can simply attack the network by just sequentially adding raspberry PI the chain and then formatting them and doing it again.
00:46:54.896 - 00:46:58.700, Speaker C: Well, I'm trying to figure out how all this works.
00:46:59.310 - 00:47:00.860, Speaker D: I think the thing there is.
00:47:02.750 - 00:47:03.066, Speaker B: You.
00:47:03.088 - 00:47:06.714, Speaker D: Will need to negotiate connections to the.
00:47:06.752 - 00:47:09.950, Speaker C: Core network, but the negotiation happens off chain.
00:47:11.650 - 00:47:18.990, Speaker D: These nodes here, these routes here will cost in the order of thousands of dollars a day to run. So you're not going to give them away.
00:47:19.060 - 00:47:43.954, Speaker A: Think of it this way. Fundamentally, the first point is, and it's one thing many people coming to Sado have, the misconceptions or misconceptions not about SATA was about blockchain. Like they think, well, bitcoin does this for free. Therefore bitcoin will do this for free at ten exabytes a day. And it's like, no, bitcoin does this for free because I get a certain quote right. Think about this though. This US server has its own economics.
00:47:43.954 - 00:48:12.574, Speaker A: Now imagine that China bans bitcoin, China bans theta whatever. Now you get a lot of really fat users in China that are willing to pay a really high fee to get their money in another country. Oh yeah, that's a really high fee. These transactions are worth a lot of money. Now you can get a node starting up in Hong Kong. And when I say a node, this can literally be a guy walking across the border with a number memorized in his head. And the transactions that he's writing for the system are very few, but they're really fat transactions.
00:48:12.574 - 00:48:23.074, Speaker A: Because of that, this guy is able to pass them to this node and he'll get the exact same amount of data that this is that this guy's getting. And he might send the guy walking.
00:48:23.202 - 00:48:26.870, Speaker C: Just so I understand clear, when you say data, what do you mean by that?
00:48:27.020 - 00:48:28.102, Speaker A: Blockchain data.
00:48:28.236 - 00:48:29.830, Speaker C: Like the blocks.
00:48:31.370 - 00:48:42.438, Speaker A: Well, users connect to the blockchain, they get services from the blockchain, abstract the blockchain, users pay fees, and in return, the nodes in the network.
00:48:42.614 - 00:48:43.802, Speaker C: What is the formal data?
00:48:43.856 - 00:48:46.380, Speaker A: Well, what data does the bitcoin network give?
00:48:48.910 - 00:48:59.886, Speaker C: There's blocks that users don't care. Some users might, some users actions that users don't care except their own. And there's utxos, there's proofs users do.
00:48:59.908 - 00:49:42.350, Speaker A: Care about transactions that aren't their own. Because you're going to have applications that are operating. So you might say, like, if we're both using a Facebook application on Sato, I might say, well, we're friends, so I want the Facebook applications that you. Yeah, like you might send a transaction and inside, one of the reasons we want big data in the blockchain is like in Sado, when you make a transaction, you've got essentially a JSON object where you save, like name Facebook and you can put the post there right in the transaction because we support the economics of scale. You could also say, oh, my post is on this server. Or maybe you've got a name card circulating around the blockchain that says, this is where to go for it. And this is post id 8674.
00:49:42.350 - 00:50:07.640, Speaker A: Whatever it is. There are lots of ways in which people want data. Other blockchains are compartmentalizing this and splitting this because they don't actually have a viable means for handling this. But what do you mean by proof? An SBP proof, a cryptographic proof transaction? Or for, you know, like a Merkel tree proof where I'm not only proving to you that this is your transaction, I'm providing other sorts of.
00:50:10.890 - 00:50:16.690, Speaker C: When I think transactions as data, you do need to include proof that this is part of the blockchain. Otherwise.
00:50:16.770 - 00:50:27.658, Speaker A: Well, yeah, I mean, if you send the full. Yeah, exactly. Okay. But I mean, like this sort of thing when you're dealing with clients that aren't getting the full data. Yeah, there's a data need there.
00:50:27.824 - 00:50:33.230, Speaker C: Yeah. Just like trending. Because what I think of data from blockchain is different.
00:50:33.300 - 00:50:33.920, Speaker A: Yeah.
00:50:34.290 - 00:50:49.570, Speaker C: Again, just because the way I look at blockchain is a database literal, let's just say key value database that is shared between everybody and has a very specific rules of tradition. That's how I think of blockchain. You think of blockchain very differently.
00:50:50.230 - 00:51:24.110, Speaker A: The applications you're going to use something like, say you want, are generally broadcast applications, right. If you want the stuff to stick in the debate, what it's really doing the first time around is it's just ordering the transaction. If you start looping it, well, then that's a database application. But if you're going to use as a database application, you're probably going to want to tweak the rebroadcasting feed. The point is that this stuff, this isn't sage at all. This is just blockchain. The problem is, the reason we need to talk about it is because people don't think about this stuff at all.
00:51:24.110 - 00:51:56.946, Speaker A: They're like, well, I use bitcoin. I connect to the peer to peer network and the fundamental definition of a blockchain for us is what's special about bitcoin when it came out. There are databases before, there were consensus systems before. What was special is it was the first network that supported itself financially. So it's a network that exists without an owner where there are financial incentives to join. That to us is what is the fundamental definition of the blockchain? And other people don't. They're like, oh, bitcoin.
00:51:56.946 - 00:52:38.280, Speaker A: Well, you're going to connect to the peer to peer network. Well, it's like, well, no, because then you have free writing problems. And at scale, the peer to peer network is not going to operate exabyte nodes. So all of these issues with like, who pays for what? Who pays for what? It's sort of like the bitcoin or the old blockchain mindset, because the old blockchain mindset at scale, the only way you can convince someone to do something is having a separate economic agreement off chain that needs to be mediated. The advantage of the sado system is all of that stuff just moves on chain. So I can pay you off chain for this stuff. But if I'm paying a fee for the network, that fee is enough to incentivize everything to organize itself.
00:52:38.280 - 00:52:42.642, Speaker A: And so it's like the fee that's paid for in mining is now paying for the network.
00:52:42.706 - 00:52:50.342, Speaker C: But let's say this guy, I brought in few transactions, I send them to this node.
00:52:50.406 - 00:52:54.090, Speaker A: Yeah, you're probably also going to send them to this guy too.
00:52:54.160 - 00:53:01.774, Speaker C: Sure, I send it to a few guys and then why they care at all giving me bad data?
00:53:01.892 - 00:53:13.038, Speaker A: Well, if a transaction originates here and it goes through here and it goes here and here, whoever has a transaction and puts that into a block, they're statistically going to get paid.
00:53:13.124 - 00:53:13.530, Speaker B: Sure.
00:53:13.620 - 00:53:14.660, Speaker C: They got paid.
00:53:15.030 - 00:53:17.602, Speaker A: Yeah, they're going to get paid and they're going to get paid.
00:53:17.736 - 00:53:18.226, Speaker B: Sure.
00:53:18.328 - 00:53:20.930, Speaker A: If this guy produces a block, this guy's not going to get paid.
00:53:21.000 - 00:53:21.282, Speaker B: Yeah.
00:53:21.336 - 00:53:28.506, Speaker C: So this guy gets paid. Why is this guy sending data to he wants kingdom?
00:53:28.558 - 00:53:31.030, Speaker A: Well, because he wants to get the transactions.
00:53:31.370 - 00:53:31.746, Speaker B: That's.
00:53:31.778 - 00:53:32.802, Speaker C: He already got transactions.
00:53:32.866 - 00:53:43.740, Speaker A: If I connect to my ISP and my ISP sends data to Facebook through Comcast, why does my ISP send me the Facebook data back?
00:53:44.670 - 00:53:53.982, Speaker C: Well, I mean, here you already paid for it, right? As if you paid $30 for signing up, but then they didn't give you any data.
00:53:54.116 - 00:53:58.190, Speaker A: These aren't sado questions. This is a data network bitcoin question.
00:53:58.340 - 00:53:58.654, Speaker B: Right?
00:53:58.692 - 00:54:03.186, Speaker A: Like I can send a bitcoin transaction to you. But why are you going to send me bitcoin data back?
00:54:03.288 - 00:54:06.818, Speaker C: Well, from my perspective, you're trying to solve incentive problems.
00:54:06.904 - 00:54:07.394, Speaker B: Yes.
00:54:07.512 - 00:54:12.830, Speaker C: And saying that this is a bitcoin problem is not really helping.
00:54:12.910 - 00:54:52.110, Speaker A: No, this is the solution here. The solution is the user P, the blockchain nodes give you data, the users pay fees. Now, the problem with bitcoin is that actually it's this, it's users pay miners, blockchain gives data. Well, that's your problem. Well, then why does everyone say, oh, well, we say we go talk to people and we point out that transaction propagation is on centivized. And they say, well, that's okay. You'll get that from the peer to peer network, which is operating for free.
00:54:52.260 - 00:54:58.642, Speaker C: Well, I mean, what should, like in bitcoin, let's say what should be miners give data. You send it to miners. Miners give data.
00:54:58.696 - 00:55:30.026, Speaker A: Yes, this should be bitcoin, but this is not bitcoin. Miners do not, miners do not service the peer to peer network. There's so many cases where it's self efficient if miners serve. Like Craig Wright, who wrote a blog post where he's like the great mining swindle, where he's talking about, he's like, it's an economic system. The first thing miners have to do is invest in network infrastructure. So empirically, empirically, Craig Wright is saying this is not bitcoin because he's saying, actually they don't understand the economics of bitcoin. They're investing in the wrong thing.
00:55:30.026 - 00:56:09.034, Speaker A: Well, first of all, if you're creating a market system and people are not doing what you want them to do, the first thing you have to say is like, well, what are we incentivizing? What we're incentivizing is this. The fee goes towards miners and then somebody has to do stuff for free. And this is like 99% of most people who are working on scaling tech, they're working on ways to push costs around. Like, oh, let's get ipfs. We have a network that's printing money, fees we can't pay for storage ourselves, so we're going to put petabytes on ipfs. That just is pushing the problem somewhere else. You get like block stack, where they're like, well, we can't solve this problem.
00:56:09.232 - 00:56:20.266, Speaker C: Okay, so now the question that I'm asking is exactly about this, right? What I'm hearing right now, which I'm trying to figure out why I'm wrong, is you say fees go to block producers.
00:56:20.298 - 00:56:22.960, Speaker A: Well, fees go to the network. And the network gives you data.
00:56:23.570 - 00:56:30.854, Speaker C: Blog producers who produce blogs, technically, the fees and to relayers. The people who relay.
00:56:30.922 - 00:56:31.202, Speaker B: Yes.
00:56:31.256 - 00:56:36.626, Speaker C: And that data. So far, I did not understand why data would come from these guys.
00:56:36.728 - 00:56:40.420, Speaker A: Well, block producers get the data.
00:56:45.270 - 00:56:46.930, Speaker C: Sentence, block producers.
00:56:48.470 - 00:57:00.758, Speaker A: This is going to be really simple. Really simple. I'm going to leave this up because it's good. This is your structure of the network. You have users, they don't connect to the block producers. They're connecting to the relay.
00:57:00.854 - 00:57:01.450, Speaker B: Sure.
00:57:01.600 - 00:57:10.170, Speaker A: The relay, let's say, is going to connect to block producers. That's simplified because the relay could connect to another relay. Could connect to another relay.
00:57:10.250 - 00:57:10.878, Speaker B: Right.
00:57:11.044 - 00:57:15.710, Speaker A: The data goes back in this direction.
00:57:18.210 - 00:57:21.026, Speaker C: My point here is that I can draw this arrow as well.
00:57:21.048 - 00:57:30.014, Speaker A: Well, no, you can't draw this arrow because empirically it doesn't happen. Well, if empirically that happened, what empirical.
00:57:30.062 - 00:57:31.682, Speaker D: Evidence is that this would happen?
00:57:31.816 - 00:57:34.910, Speaker C: Well, it's not that. It's empirical evidence.
00:57:34.990 - 00:57:35.620, Speaker A: No.
00:57:37.050 - 00:57:38.600, Speaker C: It's an incentive question.
00:57:39.690 - 00:57:42.520, Speaker A: Let's make this clearer, because.
00:57:45.690 - 00:57:46.098, Speaker B: I don't.
00:57:46.114 - 00:57:48.214, Speaker C: Know how it's just to be.
00:57:48.252 - 00:57:49.000, Speaker B: To be.
00:57:49.370 - 00:57:56.890, Speaker C: This is here. I'm not saying that there is a solution for this. I'm trying to figure out if you guys have a solution.
00:57:57.950 - 00:58:20.306, Speaker A: This is the traditional system, right? If there's any question that this isn't, well, you know, well, miners will service the users. That's the Craig Wright argument of miners will pay for bitcoin, the network, because if they don't, they don't get paid. And so people are like, oh, well, this is bitcoin. People think this is bitcoin. Miners will do this because they don't get paid. The problem is there are free rider pressures. Miners don't want to do it.
00:58:20.306 - 00:58:22.126, Speaker A: Miners want to pass the buck.
00:58:22.238 - 00:58:27.070, Speaker C: But let's imagine a world where all of those people who right now giving data, they stop.
00:58:27.240 - 00:58:28.994, Speaker A: Yes, that's bitcoin. These are volunteers.
00:58:29.042 - 00:58:29.206, Speaker B: Yeah.
00:58:29.228 - 00:58:35.566, Speaker C: So let's say they all stop right now. We do have a lot of volunteers. Let's say all stop. What's going to happen with bitcoin?
00:58:35.618 - 00:58:41.370, Speaker A: Whichever miner steps up and starts volunteering is less profitable than all of the other miners.
00:58:41.790 - 00:58:43.818, Speaker C: That's not true, because who are you.
00:58:43.824 - 00:58:46.070, Speaker A: Going to send to any minor.
00:58:46.230 - 00:58:49.346, Speaker C: Okay, why would you send it to other miners?
00:58:49.398 - 00:59:12.894, Speaker A: I've got it. So let's do this then. Let's say, assuming the volunteers disappear, what you're really asking is you're saying, what is the economic problem with bitcoin? Or what is one economic problem with bitcoin? So let's assume we have a bitcoin world where we have three miners and these miners, because the peer to peer network vanishes, the miners are forced to spend a lot of money to service users.
00:59:12.942 - 00:59:13.154, Speaker B: Yes.
00:59:13.192 - 00:59:36.118, Speaker A: So the users give them fees and the miners give the users transactions. And we're going to replicate this elsewhere. So we've got miners and we've got users. This is a fundamental no. You go back to Craig Wright and he says the first job of a miner is to propagate transactions. So Craig Wright sees, he sees like a small network where the miners all connect with the other miners. We can have big blocks.
00:59:36.118 - 00:59:40.922, Speaker A: The miners are going to pay for this high throughput bandwidth because of course they all want to connect to each other.
00:59:40.976 - 00:59:41.158, Speaker B: Yeah.
00:59:41.184 - 01:00:06.402, Speaker A: So maybe there's ten, maybe there's 100. Who knows how many miners there are? Note this is we got the fee and we've got the data. Now, the economic incentives are not very strictly, miners are not incentivized to share that transaction. Because if miners share that transaction, these two guys can free ride on you.
01:00:06.456 - 01:00:07.118, Speaker B: Yes.
01:00:07.304 - 01:00:09.698, Speaker C: They just accumulate their own and then propagate the block.
01:00:09.794 - 01:00:10.102, Speaker B: Right.
01:00:10.156 - 01:00:48.450, Speaker A: Well, what you happen then is you actually, and this is one of the reasons you need to solve this, what you've done is you've killed the openness of the network, because now, all of a sudden, if I'm a small miner, if I'm a small miner, no one's going to send me stuff because I'm not producing enough blocks to actually get fast confirmations. So the economic problems in bitcoin are solvable, but they're solvable if you kill the openness of the network and if you have collusion between the nodes and the network, because what happens when you get these free rider pressures is that these miners, they need to collude with each other to make sure that no one is free riding.
01:00:50.470 - 01:01:07.094, Speaker C: I can simplify saying the block is the way to propagate transactions because that's a package thing that says here, I sign on it and this is what you can propagate. And then when you do that, then, yeah, that's pretty much, it becomes a relayer of a block, not relayer of transactions.
01:01:07.142 - 01:01:07.498, Speaker B: Right.
01:01:07.584 - 01:01:14.490, Speaker A: The point is you've got a free rider problem, right? Because miners have a choice. They can propagate the transaction.
01:01:15.150 - 01:01:18.170, Speaker C: We never propagate transactions. They always propagate these blocks.
01:01:18.750 - 01:01:25.706, Speaker A: Well, if you don't propagate transactions in your bitcoin and let's say, what am I going to do as a user?
01:01:25.818 - 01:01:29.166, Speaker C: I'm going to send it to one guy, he didn't include another guy.
01:01:29.188 - 01:01:51.346, Speaker A: I'm going to send it to the biggest guy in the bunch. And what that means is the market share of the guys that are big, they get even bigger. And the market share of the guys that are small, they go to business. So you've got this economic situation where the network just becomes PayPal. I mean, maybe it becomes PayPal with three people, but this is not what people want with an open network.
01:01:51.538 - 01:01:52.854, Speaker C: I am fully with you.
01:01:52.972 - 01:01:53.350, Speaker B: Right.
01:01:53.420 - 01:02:05.270, Speaker A: So go back to this system. This is the system you're describing. You said, well, look, if the PDP miners don't give data, okay, well, then the miners have to. But the cost is that your blockchain is destroyed.
01:02:05.350 - 01:02:05.690, Speaker B: Yes.
01:02:05.760 - 01:02:16.250, Speaker A: What sado does is say because of this, because the relays are being paid, we don't need volunteers in the system, but we don't get that we actually still have an open system under SATA.
01:02:16.330 - 01:02:23.358, Speaker C: So where I'm coming from, and this is like, now let's imagine this is sado, right? And this is instead of, well, Satan.
01:02:23.374 - 01:02:24.420, Speaker A: Is a lot better.
01:02:25.350 - 01:02:26.100, Speaker B: Sure.
01:02:26.550 - 01:02:30.878, Speaker C: So you have the user. Right, which sends fees.
01:02:30.974 - 01:02:33.102, Speaker A: Yeah. And let's say it's a routing node.
01:02:33.166 - 01:02:38.470, Speaker C: It's a routing node. Right? So in reality, routing nodes should just back, like if it has a bunch of users.
01:02:40.090 - 01:02:43.234, Speaker A: Think of a routing node as the peer to peer network in bitcoin.
01:02:43.362 - 01:02:48.442, Speaker C: I understand. I'm just like, okay, so they send to a block producer, right?
01:02:48.496 - 01:02:49.100, Speaker B: Yes.
01:02:51.870 - 01:03:03.198, Speaker A: Well, here's the thing to note. Well, there are many things to note, but one of the things to note is if I'm a relay node, as soon as I get the transaction into a block, I'm making money.
01:03:03.284 - 01:03:03.678, Speaker B: Yes.
01:03:03.764 - 01:03:20.626, Speaker A: So I don't care who has it. In fact, I want to send it to multiple block producers because I want competition, including my transaction in a block. If you remember the mechanism where we talked about the burn fee and stuff, if you just give your transactions to one guy, he can hold on to.
01:03:20.648 - 01:03:22.354, Speaker C: Them for a long time and then.
01:03:22.552 - 01:03:43.834, Speaker A: His percentage of the fee starts rising. So if I'm a routing node, the way I maximize my own income is making sure that there's no monopolization downstream. That's what we want the peer to peer network to do. In bitcoin, the peer to peer network is supposed to be sending stuff out to a bunch of miners, because if it only sends it to one, you actually have these economic problems that people don't talk about.
01:03:43.952 - 01:03:52.862, Speaker C: But in that model, right, minor, like, you have three miners, let's say why am I not sending it to all of them?
01:03:52.916 - 01:03:55.914, Speaker A: Well, I mean, you could. How do you even know who miners.
01:03:55.962 - 01:04:00.690, Speaker C: Are and look at what producers are?
01:04:00.760 - 01:04:05.570, Speaker A: Okay, well, you can hypothetically say we're going to fix bitcoin.
01:04:06.310 - 01:04:19.400, Speaker C: I'm not trying to fix bitcoin. I'm just like. You're solving incentive problems with bitcoin. I'm trying to understand exactly which of the things, what are the costs to the system?
01:04:20.090 - 01:04:42.318, Speaker A: One, you've got coordination costs. The user of the network. User is supposed to be dumb. In sado, the user makes a fee, he gives it on the network, takes care of it. All this, we've now got the user making coordination costs because the user needs to keep track of who's in the network, send their transactions to all of them. Like, that's just ridiculous. Two, the bandwidth costs of the system.
01:04:42.404 - 01:04:48.462, Speaker C: Are massive in bitcoin. Right? I can make this where it's a VtxO which pays to this guy.
01:04:48.516 - 01:05:03.160, Speaker A: Yes, you can. That would be like a bitcoin network where you're making a private payment. Why should users have to, I mean, if you're using the network, you're paying a fee. Why should you pay like five different fees as part of making a transaction? Users could do that.
01:05:04.010 - 01:05:28.346, Speaker C: So what I'm trying to understand is how this loses openness. I agree with you. And requires collusion here. My problem with this is right now, when you propagate these transactions, this web producers, at least as far as I see, don't have an incentive to pretty much inform this relay know there's a user about why am I going to.
01:05:28.368 - 01:05:30.474, Speaker A: Send money to someone if they're not?
01:05:30.672 - 01:05:32.814, Speaker C: But like you don't know anybody else. That's the same.
01:05:32.852 - 01:05:33.726, Speaker D: I think that's the point that needs.
01:05:33.748 - 01:05:34.800, Speaker C: To be really clear.
01:05:35.650 - 01:05:37.166, Speaker D: This is an ongoing thing.
01:05:37.268 - 01:05:38.350, Speaker A: I really don't understand.
01:05:38.420 - 01:05:39.920, Speaker D: No, this is my idea.
01:05:41.330 - 01:05:42.750, Speaker A: Why would comcast.
01:05:44.710 - 01:05:47.006, Speaker D: So far, this is a flow.
01:05:47.198 - 01:05:48.002, Speaker C: Yeah, right.
01:05:48.056 - 01:05:58.840, Speaker D: This user is not a one off person. In the Hong Kong example, that totally confuses the whole case. Because in the Hong Kong example, you're right. Why would I give that guy anything unless I know he's coming back next week, right?
01:05:59.290 - 01:05:59.874, Speaker A: I don't.
01:05:59.922 - 01:06:01.670, Speaker D: He's just some guy with a random number.
01:06:01.740 - 01:06:02.118, Speaker B: Right?
01:06:02.204 - 01:06:06.394, Speaker D: The point is that this is a flow. This guy's valuable to me.
01:06:06.432 - 01:06:14.714, Speaker C: But if you're saying if it's recurring, that means it's not open, because open means I will destroy this, create new one.
01:06:14.752 - 01:06:35.538, Speaker A: No, I just fundamentally disagree with your carriage. If I'm this guy, yeah, I'm not going to give this guy money for using nothing in return. I mean, if your entire idea of the near criticism is that I'm going to give money to something, like I'm giving you a lot of money, well, you're giving me nothing. No, screw that. I'm not giving that to you. My transactions have real value if you won't. And I need to give this guy data for him to pay me.
01:06:35.538 - 01:06:39.266, Speaker A: If this guy's not going to pay me in data, screw that. If he's not going to pay me.
01:06:39.288 - 01:06:42.242, Speaker D: In data, my data is worth money.
01:06:42.296 - 01:06:46.594, Speaker A: I've got a lot of choices. There are tons of block producers on the network.
01:06:46.642 - 01:06:47.878, Speaker D: It's more like a trading relationship.
01:06:47.964 - 01:06:49.560, Speaker A: My fee has value.
01:06:49.930 - 01:06:55.734, Speaker C: So my point here is that there needs to be a relationship between the relay node and block producer.
01:06:55.782 - 01:06:57.500, Speaker A: Well, by definition, there's a relationship.
01:06:59.150 - 01:07:38.502, Speaker C: No, but when I say relationship in my head, what this means is something more than just I connected, done something and left. It's an ongoing relationship, which by definition is kind of a form of collusion. Just came in and paid something and left. If we're talking on ongoing basis, that's way kind of. I'm just saying, if the new guy comes in, right, these guys don't know if he's going to feed the money going forward, right? He maybe just came in, wants to download a lot of data and leave.
01:07:38.556 - 01:07:54.650, Speaker A: I can connect to bitcoin.com and you've got the same problem. That's not even a problem. Bitcoin. The idea is that these other blockchains, people are going to do all this work for free. But in sado, suddenly, because we pay for routing, data flows stop flowing backwards. That just doesn't make any sense to me.
01:07:54.650 - 01:08:33.250, Speaker A: Every other blockchain, users connect to a node, they pay a fee, and the node gives them data, right? And we've already noted that, in fact, there are massive problems with this because it closes exclusion and openness. What you want to do is you want to say, yeah, I got a problem with data. Because even though this guy, he wants to be profitable, right? How the hell does he service the user? He services the user. Why is the user using this guy? Because he gets data. Why is this guy using the block producer? Because he gets data. The fee flows in, the data flows out. And I don't understand how you can be like, well, I see this, but I don't see why data, because that's an incredibly selective.
01:08:33.250 - 01:08:38.826, Speaker A: And I mean, honestly, it's kind of dishonest because you're perfectly happy to say, okay, well, assume this.
01:08:38.928 - 01:08:43.002, Speaker C: No, I'm not saying this is not happening. We know this is not happening.
01:08:43.136 - 01:09:16.818, Speaker A: Yeah, but this will happen because the reason bitcoin has problems is because of this. And then the archetype of the napture with mining and incentive propagation. The reason the collusion and the incentive problems exist is because there's no incentive to propagate. In Sado, there's an incentive to propagate. One of the fundamental problems that solved is this guy. Why doesn't he just hoard all of the transactions? And the answer is because he's indifferent to whether he produces a block or whether any of these people do. All he wants is the most efficient path.
01:09:16.818 - 01:09:49.578, Speaker A: And so what you're going to get, the economic pressure is pushed towards optimization. Maybe this guy says, look, you're asking for a lot of data. You're not giving me enough money. I'm not going to service you. There is going to be a market price for data. The point is you can pay the market price off chain, which is what every other blockchain is doing, because like you said with relights, oh, I've got to have a separate payment for this, or I can have a separate payment for this, or I can go through the effort of doing all of this manually, which is ridiculous. With Sado, the fact that people are indifferent means you just paid your fee.
01:09:49.578 - 01:10:25.754, Speaker A: And the incentives encourage openness. The big challenge is how do you make this guy indifferent to hoarding things that are worth money? Because that's one of the bitcoin things. It's like, well, if I'm paying for bitcoin, people like bitpay. People don't generally see the problems because they're used to how it works now. So, like, look at Ethereum within fury. Vitalik just wrote this really long piece about on collusion. I don't know if you read it, where he's talking about how you can reduce pollution in the system and keep the system honest, right? At the Stanford blockchain conference, we were hearing, I don't know what you heard.
01:10:25.754 - 01:11:15.542, Speaker A: The biggest number I heard was 90%, but it seems that Infuria is at least 80% of, at least 80% of network traffic. So if infuria, and they're not profitable, so let's say most of that's outgoing, let's say they're collecting 70% of network fees. How do they make money from having 70% of network fees? The collusion that matters is the collusion between the person, that the transactions are worth money. It's the collusion between infuria and the node in the network it gives it to. And for infuria to make money this node in the network needs to be guaranteed that it will make money too. So what's going to happen is infuria gives the transactions to this node in exchange for the payment and this guy's not going to propagate. That's also a bitcoin problem because look at, okay, well, you know, Bitpay is the source of a lot of transactions.
01:11:15.542 - 01:12:10.270, Speaker A: So if users are making transactions through Bitpay service, why doesn't Bitpay and say well okay, we're relaying them, we're going to send them to bitmain. Why will we send them to bitmain? Like, well, because if we send them to bitmain we get paid and bitmain gets paid. Again, the collusion is lost. With this system you're guaranteeing openness because the economic incentives are driven in both ways. So yes, there's still a price. The price for data is the money that's made and the individuals can make their individual judgments about who they connect to and determine, look, am I making money in the system? The difference is sado actually incentivizes efficiency. If I'm a block producer and I can say look, I will give you the data for fewer fees, well that's actually going to make me more profitable because I'm paying less for the data that I need to service the users.
01:12:10.770 - 01:12:14.880, Speaker C: As a relayer you specify how much you can take out.
01:12:18.770 - 01:12:28.820, Speaker A: Well, if I have $10,000 in cheese per block maybe I give some to a second guy. I sent 8000 to this guy and I sent 2000 to this guy.
01:12:31.670 - 01:12:36.440, Speaker C: I received this transaction, right? There's a specific fee. Where did 10,000 come from?
01:12:36.810 - 01:12:51.318, Speaker A: 10,000 came from trying to explain the fee and the data. The point is that, okay, there are various ways in SATA we haven't talked about proof of transactions and because we haven't talked about proof of transactions it's.
01:12:51.334 - 01:12:55.434, Speaker C: Sort like we can start maybe more.
01:12:55.472 - 01:13:26.534, Speaker A: From, one example would be the block producer doesn't wait as long before producing a block because what that does is that says like maybe with the old one they're like look, you're going to send me the transactions but I'm going to hoard them. Or maybe I don't want, look, this transaction fee is too low for me. Don't bother sending me those transactions. If it's not 0.5 or above, I don't care. Now you get a cheaper block producer says 0.1 is fine.
01:13:26.534 - 01:14:20.040, Speaker A: All of a sudden this guy can go to these users and say, look, my minimum I can get you for a fifth of the price because the savings actually pass, the efficiency pass passes through. But yeah, fundamentally it's a fee for data exchange at every point in the stage. The point is it's that way with every blockchain. The difference is they don't know how to reconcile, they don't know how to have the same person give the data without turning their network into PayPal. Sado's figured out how to do it because Sado knows how to pay both this person and this person in a way where block producers, the way they make money is more competition among relays, and the way relays make money is more competition among block producers. So there's this, like every node in the network you want, the relay is going to send its transaction to two people because.
01:14:21.770 - 01:14:23.560, Speaker C: That'S how you get into that.
01:14:24.250 - 01:14:24.566, Speaker B: Yeah.
01:14:24.588 - 01:14:58.610, Speaker A: So the user doesn't need to constantly maintain the state of the network and monitor all of this stuff. And it doesn't need to have a separate payment for the routing node because if it pays the usual fee for the routing node, the routing node is going to make sure it gets propagated quickly. And you can have different things like the fact that the fee halves with every stock if you get lovely properties in addition to the optimizing network. Because if there's a useless node in here, the way these guys maximize their income is connecting directly, right? Because if you connect directly, you're going to be at least 20% to 30% more profitable.
01:15:00.950 - 01:15:13.190, Speaker D: I think you do better understand this as well is if you're looking at right at the edge of the network where you're down with these guys, right? This will start to look a little bit like because you're worried about kind of peer discovery and those sorts of people.
01:15:13.340 - 01:15:23.798, Speaker C: I can list the voyage I have, right. One is peer discovery. Just because you have the incentive to, as a relayer, at least to be the only relayer that user knows.
01:15:23.894 - 01:15:24.540, Speaker B: Yes.
01:15:25.150 - 01:15:29.238, Speaker C: As a bot producer, you have incentives to be only bot producer, relayer knows.
01:15:29.414 - 01:15:36.686, Speaker A: Same in bitcoin. The difference is the user. Look, the relayer, you've got a bunch of variables that are different, right?
01:15:36.708 - 01:15:43.038, Speaker C: So in bitcoin, because of p two, p part, actually, you have an incentive to kick people out and send them to other people, right?
01:15:43.124 - 01:16:12.010, Speaker A: Look, no, bitcoin is peer to peer. The peer to peer network is not a fundamental part of the blockchain. It's a part of the network management. So if you're saying like, look, moving on from that, the economic incentives, you've got the relays, the relays are crying out for users, right? It's kind of like you want to use the Internet and there are 25 isps that want to give you free Internet access because when you visit Facebook they get paid. So if our big concern is that a relay wants to monopolize, well, of course it does.
01:16:12.080 - 01:16:25.134, Speaker D: I think a good way to explain how this will work is these guys like isps will advertise and offer packages to retail sales. So they might do stuff like say.
01:16:25.252 - 01:16:27.886, Speaker C: I will give you, I will give.
01:16:27.908 - 01:16:32.546, Speaker D: You this amount of fees, give you a bonus and I'll pay those myself to come and join me.
01:16:32.568 - 01:16:32.802, Speaker B: Right.
01:16:32.856 - 01:16:57.818, Speaker D: They're in as good a competition as we'll get now given that these guys are interested in picking up high value relayers. Relayers, right. So they're looking at who's got a great business model, who's getting a lot of users and has fresh transaction value I'm not seeing elsewhere. So then yes, this will need to be an ongoing relationship, but these guys might have a simple way of contacting us and saying I've got transaction value.
01:16:57.904 - 01:16:58.346, Speaker A: Right.
01:16:58.448 - 01:17:31.540, Speaker D: So I'm some type of institution, I'm putting one of these in my building, I have this amount of fees. Would you like that from me? When you get to these guys, the big block producers in the middle, they're going to negotiate like isps do now for isps now rent space on their cables years in advance and they hold auctions and stuff and they make bilateral agreements to say, look, I'll route your excess when you have it, et cetera. That's going to happen between these cards because they'll need to.
01:17:31.910 - 01:17:52.250, Speaker A: Two points. One, break the model, because the model that people are thinking about is the bitcoin model, which is where the cognitive differences come from, because the cognitive differences really are pretending that this model is the model where the same people that get the money to get the data, that's where the free rider problem comes in. The first point is that this doesn't need to be known on the peer to peer network. This can be an application.
01:17:52.400 - 01:17:52.714, Speaker B: Sure.
01:17:52.752 - 01:18:46.954, Speaker A: So like in Sado, one of the things we've got, why would you set up an email server? Why would you set up an app server? Well, you set up the application because, well, maybe you deal with the data over Javascript, you use the in browser function. Now you're relay number one, you now have a way to actually make money online that doesn't require advertisements and it just requires you to build an application people want to use. Because if they use the application, like if they make a tweet, well, the fee part of it's going to go to you. So there are different models. Like if the users don't care, I want to use the EA system and the EA system is using a blockchain because it wants to collect my tokens because I'm getting them from an advertising network, right? The advertising network is buying the tokens from the block producers. You've got. If you can create that first hop that's not competitive, you can make a lot of money.
01:18:46.954 - 01:19:23.726, Speaker A: On the other hand, if users are really concerned, they're like, well, I actually want cheaper. Maybe they connect to two or three. The other really interesting thing is, note that in the Sadom mechanism, though we didn't go into it, the depth of block propagation depends on the profitability of the fee, essentially the measure of work. So if you pay a really low fee, your fee might go here. And if that's a block producer, that's okay. But it might take 12 hours for them to get enough work to produce a block. If you pay the equivalent of a $5 fee, it routes through the network and it gets divided because this is a high value transaction.
01:19:23.726 - 01:20:21.866, Speaker A: So you've got this wonderful property where the higher fee means deeper network print, network penetration. So deeper network print, that's faster confirmation. Or you could do the work of trying to figure out who's broadcast to, but a lot of these guys, they're probably going to be, a lot of notes are probably not going to be public because they'd be like, if I'm routing exabytes of data, I don't want to deal with individual user connections, I want to deal with people who aggregate them. It's like the Internet. So it's the economic model that takes this and it turns it into users have a one to one relationship with network operators and network operators replace miners. And that's why the network works, because the data fee exchange becomes unified at every hop in the network anyway. It's the economic model, it's not how the consensus mechanism works.
01:20:22.048 - 01:20:25.914, Speaker C: Yeah, I think that's one of the interesting parts as well.
01:20:25.952 - 01:20:32.080, Speaker A: Right. This is possible. The peer to peer network is possible too.
01:20:32.770 - 01:20:43.150, Speaker C: What I mean is in theory what you can do to just take actually ideas you have and you can implement them in bitcoin by just like creating etxos which pay relayers.
01:20:43.510 - 01:21:12.534, Speaker A: Well, yeah, but then what's the price of relay layer. What's the price of mining? There are actually problems with that, but you don't have a market price for things in Sado. You have a market price for transactions and propagation and data storage across the whole network. It's one fee. You don't need to mean you use bitcoin. Like bitcoin fee estimation is essentially better. But now we're introducing a couple of fees and separate fees, and who's setting them in the market prices.
01:21:12.534 - 01:22:21.022, Speaker A: We haven't gone into how SATA solves this, but everything is actually a market fee because at every point in time there's economic competition. The blog producers who you connect to, if there's someone who's pulling a ton of data and they're giving you no fees, well, that's the definition of a civil node, right? I think the why is there, right, like a civil node, people don't even really think about what a civil node is, a node that doesn't give value to the network. So it surrounds you and it can do various things and say, though, if you're surrounded by civils and money is going to be coming in this direction to you, fees and transactions, you're going to notice because you're now half as profitable as you were when you weren't civil. And the people that are civil are either going to go to business or they're going to take a look at their network and transaction flows and they're going to say, look, this blockchain is not optimized. If we don't connect to these people, we're going to be a lot more profitable. And what that does is also means the usage is cheaper for users because the user can get faster confirmation and deeper block propagation. And that's just a more fancy way of saying bitcoin and ethereum and all of these other networks, there's literally people say, oh, we want decentralization.
01:22:21.022 - 01:23:07.646, Speaker A: There's no incentive for decentralization, and there's no incentive for network efficiency. SATA, at least we incentivize both. If you value decentralization, you can pay a higher fee and your transaction will get deeper faster, and the network itself will just eliminate the nodes that are useless. If you're a block producer and you're only connected to block producers, how do you justify that position? You've got to be a much bigger block producer who's producing blocks that the other block producers cannot do. But the reason they give you transactions is because this guy's terrified that he's like, well, if I give it to him. The transactions I have will be produced before the really note, before the transactions that are copies of the ones that.
01:23:07.668 - 01:23:11.262, Speaker C: I have before somebody who gave me transactions.
01:23:11.406 - 01:23:51.930, Speaker A: Yeah, because this guy's competing with other people. Like the dream for a block producer is to be the only one that has those transactions. But if they do that, their profitability goes up at the expense of the relay nodes. So the relay nodes, they're just economic interest and they don't need to broadcast the whole network. They can pick another block producer or maybe they have a long term agreement where it's like we're going to permit you to have this level of profitability because the blockchain does let you monitor it, right? Like you're going to be able to look at the blockchain and figure out very, very quickly what percent of the value of the transactions I'm sending.
01:23:53.010 - 01:24:21.522, Speaker D: Key difference between trying to fix this versus what we have here is they're essentially the same intent. But what you have to do is you have to make all versions of collusion, make the network more secure and more efficient, in which case it's not collusion, it's just cooperation. The issue with collusion is that somebody's losing out from that. You're either losing openness or you're losing.
01:24:21.666 - 01:24:31.740, Speaker C: Well, what possible collusions you have is the same idea here. Let's say you have three big block producers and they're like, well yeah.
01:24:34.830 - 01:24:35.194, Speaker A: We.
01:24:35.232 - 01:24:40.538, Speaker C: Can relate transactions or we cannot or we can not relate transactions and produce blocks ourselves.
01:24:40.634 - 01:25:26.298, Speaker A: Well, as long as there are valid transactions on the network, that's actually not possible. But look at the system, how do you even prevent this? We've invented a kind of network node and we've just said, well, let's assert that this network node broadcasts wall miners. The economic incentive for that network node is not to broadcast wall miners because this network node, well, it's getting paid. But if it can form a deal with two of them or one of them, if it can get away, it's got money. What is its incentives? Its incentives are not to actually do what we've asserted that it's supposed to do. And it's so much of what's happening in the blockchain space because of this, that people are inventing nodes on the network, like archive nodes, and they're saying, okay, hypothetically, if this node does this.
01:25:26.464 - 01:25:32.782, Speaker C: Just so I understand, you're saying his incentives will not be to send it to all of them, but send it to only one.
01:25:32.836 - 01:25:45.474, Speaker A: Well you said, okay, well the problem, the collusion here's one hypothetical solution. I pay fee to a relay node. The relay node is supposed to send it to everyone. Why doesn't the relay node just send it to that miner and take the payment?
01:25:45.512 - 01:25:52.274, Speaker C: Well, it's the same idea is because your transactions won't be confirmed fast enough. So you'll find a different relay note and does it.
01:25:52.392 - 01:26:09.094, Speaker A: So it sends it to two of the three. It sends to two of the three. Now you've got, maybe it's going to 80% of the miners, but the miners are willing to pay something for it because it's not going to the 20%. It's a fundamental incentive problem.
01:26:09.132 - 01:26:17.742, Speaker C: That's, let's say you have a kickback here that says, hey, if you don't send it to anybody else, I'll pay you.
01:26:17.876 - 01:26:20.640, Speaker A: Okay, let's take a look at that.
01:26:21.250 - 01:26:23.230, Speaker D: That's exactly the right question.
01:26:23.380 - 01:27:08.990, Speaker A: That's a fantastic question. Okay, so let's start with a single system. And we're sending transactions to relay nodes. Let's say the relay node is sending it to a single block producer. Okay? And the block producer says, if you only send it to me, I'm going to give you a kickback. So what you need for this to make sense is you need this to be profitable for the block producer or do we need it to be profitable for the relay node?
01:27:12.610 - 01:27:14.634, Speaker C: For relay node, kickback is always profitable.
01:27:14.682 - 01:27:24.318, Speaker A: Well, if it needs to be profitable for both. Actually, we've got a fundamental issue, because the transaction has a fee of a fee of a certain amount. Let's say it's worth a dollar.
01:27:24.414 - 01:27:24.818, Speaker B: Yeah.
01:27:24.904 - 01:27:48.410, Speaker A: So how do we, right now, the nodes are being paid for the amount of work that they're doing, like in a two hop network. Let's say if it's dollar fee, let's make it. It's ten sato fee originating. So the first node gets ten, the second node gets five. The total amount of work that's done is 15. So the expected profits.
01:27:48.830 - 01:27:51.462, Speaker C: This gets ten if he produces a block.
01:27:51.526 - 01:28:23.278, Speaker A: No, this is a measure of work. This note has done two thirds of the work. This note is done one third of the work. Okay, so if he produces a block, he's still going to make two thirds of the money. If he produces a block, statistically, on aggregate, he's still going to produce one third of the money. So this is how it works. Now, if this is under, let's say, the kind of the proof works is you're paid proportionally to the amount of work you've done.
01:28:23.278 - 01:29:31.462, Speaker A: What sado does with its routing algorithms is we're basically providing a way to securely and uncheatably generate work from your network routing. This is why we have cryptography signatures. So what exactly are we thinking is going to happen? Because the way this guy makes more money is he says, okay, look, will you send it to me? If you send it to me, I've still done the same amount of work for the transaction, but because I can delay block production, then let's say the burn fee is here, because I can delay block production a bit, and I'm not that worried about competition. Instead of producing a block at this point in time, I'm going to produce it here, or I'm still going to produce it that time, but I've got some extra resources. No, the amount of work that this payment describes is the routing portion. This portion is just given to the block producer right away. Now, what that means is this fee, if the block is produced right at the line, this guy's going to get ten Sato times two thirds.
01:29:31.462 - 01:29:39.230, Speaker A: And this guy's going to get ten Sato times one third aggregates on average. As soon as we start delaying.
01:29:41.250 - 01:29:41.566, Speaker B: Well.
01:29:41.588 - 01:30:25.994, Speaker A: All of a sudden this is eight. And all of a sudden this is eight two, because a certain percentage of the fees is being eaten away directly by the block producer. So we get eight times 1015 plus two. How much does the block producer have to pay the Roni node for this to be a good deal for both of them? And the short answer is, it can never be a better deal for both of them because there's only $10. So you can't divide the $10 in a way that they're both better off. So the block producer, if he delays, he's delaying by impoverishing the relay node. So a separate payment to bribe, it works in the bitcoin situation, it works in the ethereum situation.
01:30:25.994 - 01:31:01.426, Speaker A: It doesn't work in Sado because the payments are already optimized. The only way to make one person better off or worse off is to actually change the way work is calculated in the system. And that's a hard fork because it's algorithm fork in the consensus layer. So side payments, I mean, you could do them, but it would either be less profitable for this guy or it would be less profitable for this guy. If the block producer tries to screw the relay node, the relay node is going to be like, well, look, we've got an economy here. What the relay node is concerned about is he's concerned about exactly that. He's concerned.
01:31:01.426 - 01:31:26.106, Speaker A: I'm giving you the blocks. And because you're not moving as quickly as you can, you're delaying. And that's also where the meta efficiency of the network comes from. Because think if there's not enough block producers, then if there's not enough block producers, the block producers can afford to wait because there's not a lot of competition. So the profitability for block producers comes at the expense of the profitability for the routing routers.
01:31:26.138 - 01:31:28.126, Speaker C: I see, okay, that makes sense, right?
01:31:28.148 - 01:31:40.740, Speaker A: So if it's hugely profitable to be a block producer, the economic incentives are for people to set up block producing notes because these guys are making so much money. It's like, look, I want in on that action. And then these guys go to these guys, and.
01:31:43.670 - 01:31:48.294, Speaker D: That'S the real trick. If this guy is not getting good service, always has the opportunity to say.
01:31:48.332 - 01:31:49.238, Speaker C: Well, I'm just going to hang on.
01:31:49.244 - 01:31:50.920, Speaker D: To all this and make the block myself.
01:31:52.010 - 01:31:54.114, Speaker A: And the thing is, it works the same in reverse.
01:31:54.162 - 01:31:54.374, Speaker B: Right.
01:31:54.412 - 01:32:24.686, Speaker A: And the way Sego does that is it's because you've always got competition between nodes in the network. So the routing nodes, the routing nodes want there to be a lot of competition between block producers because that's how they maximize their share of the network. The block producers want maximum competition between relay nodes because, sorry, the block producers want, they want to monopolize the traffic road because then there's a lot less competition. Like if this relay node is sending to this, this guy, he's got to be worried because the work that he's.
01:32:24.718 - 01:32:26.466, Speaker C: Doing may be electric on and off.
01:32:26.488 - 01:32:35.078, Speaker A: Could be for nothing. If this guy produces a block that contains the same transactions he has, he gets nothing. So the entire thing, the other amazing.
01:32:35.164 - 01:32:48.666, Speaker D: Thing is depending on the quality of these two connections, it may make sense for this guy to send him these transactions as well because he's going to be profitable. Yeah, he's going to take a cut.
01:32:48.848 - 01:33:06.800, Speaker C: But this guy needs to use his. Do you merge? Let's say you have, it's a one, right? So you have a eleven, a twelve, and you have a 13. Like this guy merges a one, two and minus three.
01:33:07.570 - 01:33:25.702, Speaker A: Well, look, that if you're this guy, you've got a transaction that's made one, two, three. So if the fee is ten, it goes like ten over ten. This transaction is worth 2.5 over 17.5, this is five.
01:33:25.756 - 01:33:33.350, Speaker D: Like it's just the only reason you would take this is that these, they're dribling across this connection and then flowing.
01:33:35.530 - 01:33:42.486, Speaker A: You might take it because, okay, well, most like maybe 99% of this guy's transactions are coming from another source.
01:33:42.518 - 01:33:43.514, Speaker C: And this is a one way thing.
01:33:43.552 - 01:34:04.814, Speaker A: Yeah, right. But the economics of the network also mean that the competition is between block producers that are competing for the same pool of fees. So you can have a situation where, like in the United States, setting up a network is super cheap and efficient. It's really easy, which means that these guys, and we can think of them like, we're paying the peer to peer network in bitcoin.
01:34:04.862 - 01:34:05.778, Speaker B: No one knows how to pay it.
01:34:05.784 - 01:34:30.460, Speaker A: While sado pays for, like, it's so easy to do. It's super easy to find an access point. And the fees you pay are essentially the price of data. As soon as we have a system, like someone needs to walk across the border into Hong Kong or walk across the border into North Korea, or I'm in ISP and I'm literally rolling out fiber optic, there's no competition. Well, fees get higher.
01:34:32.910 - 01:34:44.000, Speaker D: The other key thing here is that if you're wondering why that guy would send this on or why you never would because of that halving, there's no harm in sending it here.
01:34:50.710 - 01:35:36.126, Speaker A: And it's like, note for like, fast block propagation. We now actually do have copies of the transactions. Theoretically, what you get, like, if we take a look at this, if you think of this as proof of work, I think it gets a lot easier because people are collecting work, but the work is worth different amounts. What makes work worthwhile? Well, what is really work is proximity to transaction flows to transaction inflows modified by your value collecting them. If you're the first guy generating use of the network, then in many ways you're the first person delivering the value of the network to the user. So the network stops valuing, hashing. And what it starts valuing is give us money.
01:35:36.126 - 01:36:01.986, Speaker A: And that's like, I would assert that's the only value of work for any blockchain that's going to survive. Which is why we think SATA is such a big deal, because everyone else, they're like, well, we're going to pay for mining, or we're going to pay for staking, or we're going to create some really complicated thing, and then we're going to expect these cross subsidies to happen. And then they get surprised because the cross subsidies don't work because that's not what people are incentivized to do in bitcoin.
01:36:02.018 - 01:36:02.466, Speaker C: They don't.
01:36:02.498 - 01:36:17.530, Speaker A: But yeah, in smaller networks, smaller networks they can because, well, bandwidth is free and storage is free. As soon as we're actually dealing with petabytes of data, it's like what you're not going to like. The pure, pure nodes in bitcoin are not going to move exabytes.
01:36:18.510 - 01:36:18.934, Speaker B: Cool.
01:36:18.992 - 01:36:19.600, Speaker C: Yeah.
01:36:23.010 - 01:36:28.122, Speaker A: Was there something, Richard, we were going to say about the work fractions?
01:36:28.266 - 01:36:52.658, Speaker D: I think we got through that pretty quickly, just at the way that the decreasing fee value works. If you've got the spare bandwidth, you may as well send on the transaction, because the benefit of having it included downstream is better than zero. Is better than zero. It's better to just at least get the transaction to another block, if someone produces that block.
01:36:52.834 - 01:37:13.502, Speaker A: I know what I was going to say. I was going to say that one of the fundamental problems with bitcoin and these other networks is because they don't fundamentally know what value is for them. Value is what you pay for. What you pay for is what you incentivize, and what you incentivize is what you get on the network layer. So that's why bitcoin has tons of mining and why people are like, there's all this value, but it's not going to.
01:37:13.556 - 01:37:53.898, Speaker D: I think you can see here as well, things like isps over time, as this group would be very much incentivized to say, hey, look, we're big transaction collectors. There's real value for us to put block creation right near where we're getting all of our main transactions, because why not? And so there's going to be a pressure between centralized infrastructure for mass transit and the localized infrastructure for fee collection. And that will presumably optimize to some level with the block producers moving as close as it makes sense to the end users. So the question of how many people should be on the network isn't a.
01:37:53.904 - 01:37:56.202, Speaker C: Matter of technical design.
01:37:56.256 - 01:38:02.158, Speaker D: It becomes an economic question of what's the best actual combination of ways to deploy the infrastructure we have.
01:38:02.244 - 01:38:02.880, Speaker B: Yeah.
01:38:05.170 - 01:38:47.580, Speaker A: It'S also the network. I think the point I wanted to make is that you can note that the network is optimizing towards value, because where does infrastructure get deployed? Infrastructure gets deployed where people are willing to pay fees to use the network. So it's kind of the opposite of a network that's designed to leach off of ipfs or whatever it is, because there you have a network that's designed to optimize around whoever will pay for the stuff you can get away with pushing and freeloading off of. That's not a scalable network because freeloading is not a scalable business model. Right. What you've got here is you've got a network that's optimized. One of the nice things is who makes the most money? The person at that first hop makes the most money.
01:38:47.580 - 01:39:10.370, Speaker A: So the network is optimized to push out applications. And if you're building an application on bitcoin, it's like, okay, you're paying the miners. If you're building an application on Sado, if you can build it so that you're the first hog, you're in a great position. I don't know, I don't know what we're doing.
01:39:10.440 - 01:39:22.566, Speaker D: Well, I think we should, if we do do more, which is a good idea, pause for a second and then make a new file, at least check, because this is like an hour and a half.
01:39:22.668 - 01:39:30.870, Speaker C: Word is actually, which is not. You'll get bucky word when you write the history. What you will not get is the transaction fees.
01:39:31.030 - 01:39:31.498, Speaker B: Right?
01:39:31.584 - 01:39:32.762, Speaker C: And you'll get something.
01:39:32.816 - 01:40:09.462, Speaker A: Well, you can, it's actually one of the problems. You can reverse the chain and steal the fees. Another example with proof of stake, this is like, it's a really common issue. We talked to somebody who's very well known in Silicon Valley about this and they were like, well, ethereum is secure because they're like, you need to buy up all of the tokens and that drives the price up, which is the cost of the attack. It's like, no, not at all. Because if those tokens have any value, the amount of staking you're getting is paid for by the fees in the network. So people are staking for the economic return.
01:40:09.462 - 01:41:01.014, Speaker A: And what that means is all you need to do to attack the network is just like bitcoin. You invest a loss or you invest at no expectation of profit. And what you'll do is you'll drive down the return. And then by driving down the return, the people that are staking are going to go elsewhere and they'll take their investment income earning assets and they'll sell them on the market. So the problem with that is it's just a fundamental misunderstanding of where security comes from in proof of stake. And so the fundamental question is not, fundamental question is not do transaction fees secure the network? But that's what like 90 plus percent of people who approach proof of transactions, they get caught up in because they're like, it feels insecure because Satan will be secured by money, but they're like, but proof of stake in mining, that's secured by something like really strong and.
01:41:01.052 - 01:41:26.590, Speaker C: In fact, proof of transactions. Security comes from transactions. There is like an additional, what's called the security of rewriting history comes from transaction fees, the security of pretty much forking the chain and stuff like this. Immediate forking.
01:41:27.410 - 01:41:30.110, Speaker A: You can put the transactions into your new block.
01:41:30.630 - 01:41:35.522, Speaker C: No, but if you double sign the block, it will get slashed. It will lose all your money.
01:41:35.656 - 01:41:39.454, Speaker A: Oh, it's taking. Yeah, no, I mean, that's a technical implementation.
01:41:39.502 - 01:41:44.522, Speaker C: Yeah, that's what I'm saying. There is different levels of things, and people think of them differently.
01:41:44.606 - 01:41:44.998, Speaker B: Yes.
01:41:45.084 - 01:42:00.170, Speaker A: I mean, the fundamental point is that if you can actually rewrite the longest chain when it's securing, that is fee production. And that's like people getting into technical issues of, oh, you're staking. And so how dishonest can you be? I mean, the main point, let's discuss.
01:42:00.240 - 01:42:03.420, Speaker C: The consensus, because if it's hour and a half already.
01:42:06.930 - 01:42:14.160, Speaker A: Where do we start? We've done this once before.
01:42:16.530 - 01:42:22.362, Speaker C: Yeah, let's just like, let's say we have a few block producers and they're trying to agree on block.
01:42:22.426 - 01:42:32.226, Speaker A: How about we chain, actually, how about we start with what the user experiences and go into the network, and then we can talk about how we divide up the fees and what the problems are.
01:42:32.408 - 01:42:34.622, Speaker C: You want to start from the beginning? Beginning?
01:42:34.766 - 01:42:37.240, Speaker A: I don't know, because we kind of did stuff before.
01:42:38.090 - 01:42:39.702, Speaker D: I'm thinking this might take a hell.
01:42:39.756 - 01:42:40.886, Speaker C: Of editing, but we might want to.
01:42:40.908 - 01:42:42.214, Speaker D: Edit what we had.
01:42:42.252 - 01:42:47.314, Speaker C: Then after this, how about we explain.
01:42:47.372 - 01:42:50.490, Speaker A: The cryptographic signatures and we start from there?
01:42:50.640 - 01:42:51.002, Speaker B: Sure.
01:42:51.056 - 01:42:56.974, Speaker D: So the user might be a good thing to say. Look, to understand a consensus mechanism, you need to understand what it values, because.
01:42:57.012 - 01:42:59.018, Speaker C: It'S not staking and it's not hashing.
01:42:59.194 - 01:43:00.142, Speaker D: It's this.
01:43:00.196 - 01:43:01.726, Speaker C: And then we go from there.
01:43:01.908 - 01:43:03.678, Speaker A: Okay, I need to check in on.
01:43:03.684 - 01:43:04.720, Speaker D: The end of day stuff.
01:43:11.590 - 01:43:47.806, Speaker A: Okay, so here's how SATA works. We've got a user, okay? And the user wants to connect the network. So he connects to some computer in the network, and he makes a transaction, and the transaction is going to pay a fee, and the fee is going to be, let's say it's ten siga, we have another node. This node, it could be a relay node, it could be a block producer. The user wants. They can send them to multiple nodes. And what's going to happen is, at this point in time, this node is generating work.
01:43:47.806 - 01:44:15.442, Speaker A: And this work is the amount of the work that they've got. They've received it over the total amount of work that has already been generated in the network. So let's say this is a relay node. This guy doesn't want to produce blocks. So what he's going to do is he's going to forward it to another node. And let's imagine for simplicity's sake, that this is another relay node. So this is a small town sending it to a bigger town.
01:44:15.442 - 01:44:51.790, Speaker A: Not a lot of fees, not a lot of transactions. What Sado does, the first thing we do is that on the cryptographic layer, when transactions are sent around the nodes that are sending and receiving, they cryptographically add data to the transaction. They sign it. And what that allows us to do is cryptographically verify which nodes have been in. So I can't steal this transaction as a node over here like it's produced in a block. I can't steal it as this other node and say, hey, I've done some work. Everyone can verify who's actually done the work, collecting the transaction.
01:44:51.790 - 01:45:30.198, Speaker A: So this amount of work now is five over. It's five amount of work. I'm going to get rid of the denominator for simplicity's sake. And let's say the routing node sends it again to a block producer and this gets 2.5. So this guy is 2.5. So the thing we're doing is, if you can think of it as kind of a form of proof of work, where the work we're measuring is the work you've done taking this transaction and moving it into the network. So what we're really valuing is we're valuing fee collection.
01:45:30.198 - 01:45:41.662, Speaker A: Collecting money for the network is the kind of work that we do. And the first thing I want you to notice is we're going to basically say, okay, so the total amount, let's say this guy produces a block.
01:45:41.726 - 01:45:42.002, Speaker B: Yeah.
01:45:42.056 - 01:45:49.154, Speaker A: So if a block is produced here, the payment eventually is going to be.
01:45:49.192 - 01:45:49.780, Speaker B: This.
01:45:53.670 - 01:46:22.618, Speaker A: 2.5 over 17.5. And we're going to explain. One of the challenges with Sado is other blockchains. The person that produces the block gets all of the money. And the result of this is that blockchain designers, they're focusing on making block production difficult or random, but they're really solving two problems at once. Who's doing the work for the network? Who's collecting the money? What we're actually doing is we're separating payment for the work from the actual block production.
01:46:22.618 - 01:46:51.560, Speaker A: And that's the difficult problem that Saito solves. The first thing I want you to note, though, is right away, we've got an economic incentive for the network to work more efficiently. Because if this block producer looks at the transaction flow, why is he connected to this node? Why doesn't he just connect directly to this node? Because he does, everybody makes more money.
01:46:53.530 - 01:46:54.230, Speaker B: Right?
01:46:54.380 - 01:47:13.162, Speaker A: This guy's going to make two thirds. This guy's going to make one third. Everyone in the network is better off because we've kicked out this node that is not doing meaningful work. So the way you justify your existence in the Sado network is by doing work that's of value to the network.
01:47:13.226 - 01:47:14.990, Speaker C: Something that nobody else can do.
01:47:15.060 - 01:47:15.342, Speaker B: Right.
01:47:15.396 - 01:47:55.034, Speaker A: And the reason it matters is because the fundamental economic problem, it sounds abstract, but what do we value? Well, the problems with bitcoin and proof of work, or mining and proof of stake is that the stuff that they value is different from the stuff that needs to do to run the network. So what we're doing is returning payment for routing and the data flows back the other way. But we're turning that into, because that's what we measure, that's what we encourage and incentivize. So one of the interesting things is the way you attack a sage class system is you have to spend a lot of money, just like bitcoin, just like proof of state, but the mechanism is different.
01:47:55.232 - 01:48:11.106, Speaker C: So what I'm really interested in is learning how when you have multiple block producers and they're producing blocks, how does they agree on what is the latest block and pretty much what to build the next block on.
01:48:11.208 - 01:48:54.302, Speaker A: Okay, so let's take a look, maybe at the network. And we've got, let's imagine we have a hypothetical network with. Let's explain, actually, first of all, how a blog producer produces a blog. And then we'll go to the network and we'll answer that question. Okay, so what happens is, in sado, we have something that's called a burn fee. And what that burn fee is, is whenever a block is produced, the consensus algorithms basically say this is a measure of the amount of work that we need to include in a block. So you can think of your form of work, our form of work, just to be specific.
01:48:54.302 - 01:48:59.242, Speaker A: Well, you could modify bitcoin to do this. Bitcoin has a flat work measure.
01:48:59.306 - 01:49:01.790, Speaker C: You could require this kind of.
01:49:01.860 - 01:49:10.610, Speaker A: Yeah. There are Sato class versions of bitcoin where you can make the amount of work variable by pushing the work into transactions. We call that hash. Hash, right.
01:49:10.680 - 01:49:12.610, Speaker C: Well, that's what, like iotas?
01:49:13.670 - 01:49:43.390, Speaker A: Yeah, kind of. I mean, and the problems with that approach are you don't pay for the network, so you're back to square one. So this is time, and that's work. And what you do is we set the burn fee, and the burn fee goes down over time. And what that means is that even if the network's not really being used at any point in time, it makes it easier to attack. But you're never going to have a hash crash. So the situation in bitcoin, you're going to have, where you have attacks on the networks, the mining power goes away, someone turns it off and thinks you got a Hellen back.
01:49:43.390 - 01:50:32.030, Speaker A: That never actually is going to happen in bitcoin, even Sato, because if nobody produces a block for a while, it gets cheaper to produce a block. And what's actually going to happen is the difficulty of the burn fee is going to adjust upwards or downwards to keep block time constant. But what you have is in any blockchain with fees coming in, we've got another curve moving in the opposite direction. And that curve is transaction fees. And you can think of this in bitcoin because hashing is paid for at a fee. So there's some comparable thing. But what you've got is where those two curves connect is block time and cost of block production.
01:50:36.850 - 01:50:41.710, Speaker C: This is also called proof of burn, pretty much where you burn some transaction fees.
01:50:44.850 - 01:51:26.446, Speaker A: One of the problems is that burn, there are a lot of blockchains that talk about burning stuff. There are a lot of things where someone has a token like you got to burn a lot of bitcoin. It's very confusing. We call this a burn fee for a very specific reason, because what we've got is we've got a cost of attack. In order to do that, we got to find a way to force an attacker. First thing to note is let's assume if transaction fee volume goes up, it gets more difficult to attack the network, right? Because cost goes up and we can actually adjust the bermuda keep a constant. So an interesting thing is, if we can make it, in order to attack the network, someone needs to, they need to do more work and they need to pay more money.
01:51:26.446 - 01:52:10.300, Speaker A: This is theoretically the same kind of security that we get in proof of work and proof of stake systems, right? Like if you. The goal is we've got a cost associated with work and you've got to do more of it. So we're going to get to the same place that bitcoin does. But we're going to need to solve a separate problem because work is related to money. So the fundamental challenge in Sado is not how to make it difficult to produce blocks, because you can just spend money to produce blocks. As the amount of money that's needed to produce a block rises, the expensive attacking network rises. There are actually advanced ways where block production can be a huge multiple of this.
01:52:10.300 - 01:52:42.738, Speaker A: That comes at the cost of introducing a 51% attack. We won't go into it, but people should probably know that it's not as simple as you spend as you attack the network, we can force this exponentially up. But the key thing to note is, here's the reason we can't do this. In bitcoin, it costs this much to attack the network. That's a form of work that's measured in fees. So in the bitcoin system, we can't do this because it doesn't make sense. It's like, well, it costs you money to attack the network.
01:52:42.738 - 01:53:07.726, Speaker A: We're going to take that money and we're going to put it in the block you produce. So when you attack the network, your attack pays for itself. It's kind of like you take all of the money, you charge someone $50 to open your door and burgl your house, but you put $60 on the desk, your network is not going to be secure. Now, the way to make that the.
01:53:07.748 - 01:53:25.830, Speaker C: Expense is like what you lose if you have mined on top of the chain versus mining off chain. Well, the problem is pretty much expenses. Like, while you're building this, while you're building this, there's been built this.
01:53:25.900 - 01:53:26.422, Speaker B: Right.
01:53:26.556 - 01:53:29.974, Speaker C: So the cost is actually missed opportunity.
01:53:30.172 - 01:53:40.570, Speaker A: The point is that if all of the money goes to the person who builds a block, if they get their money back, there's no cost. So this is where the word burn fee comes in.
01:53:40.640 - 01:53:40.922, Speaker B: Right?
01:53:40.976 - 01:53:47.754, Speaker A: Because if we take this money and we just burn it, then the network has the same security properties as bitcoin.
01:53:47.802 - 01:53:48.398, Speaker B: Sure.
01:53:48.564 - 01:54:17.074, Speaker A: The problem is, if we burn it, if we start with 21 million tokens and we're constantly burning tokens. Well, yeah, you're going to have a different. Right. So it's like the network can be secure. The problem is that we're making it useless. And for a scalable network that we want to support itself, that's the issue. So it kind of feels like we're back to square one with SATA, because as long as we're destroying the tokens, we're secure.
01:54:17.074 - 01:54:40.798, Speaker A: But if we do that, we've got a bigger problem. So the first thing to note is there is an improvement here because, no, we've changed the problem. We've actually stepped back to a problem that the original Satoshi team had, where there are kind of two problems. The first problem is, how do we make it difficult to produce blocks? Because if it's not difficult to produce blocks. Everyone does it.
01:54:40.884 - 01:54:41.374, Speaker B: Right.
01:54:41.492 - 01:55:36.234, Speaker A: But the second problem is, how do we make sure that the distribution of money into the system doesn't enable further attacks on the system? Proof of work solves this by centralizing things in the hands of miners. It says, if you produce a block, we're going to give you all the money. But we know the payment's fair because block production is essentially random, based on hashing. So the qualities that we want out of proof of work, which is that it's difficult, which is that you make proportionally the amount of money that you're doing, the work, those properties in bitcoin, they create certain problems because they force us to give all of the money to the block producer in Sado. Well, we've gotten rid of that, but we've introduced a secondary problem, but we still preserve difficulty. So the challenge shifts. And the challenge isn't how do we make it difficult to produce blocks? That's proof of work, that's proof of stake.
01:55:36.234 - 01:56:11.580, Speaker A: They're introducing these side activities that are difficult and that have their own properties and that essentially are attackable with money. People try to pretend that they're not. And we have a separate problem. And the separate problem is, okay, we're charging you money to produce blocks. We want to pay you for the work, but we need to find a safe way to do that. If we can find a safe way to pay you for the work, then we have these security properties. The problem is, if we're paying you, how can we pay you for the work in a way where you can't do what we like to call.
01:56:11.580 - 01:56:15.980, Speaker A: We call it a fee recycling attack, right?
01:56:16.350 - 01:56:17.354, Speaker C: Take the same thing.
01:56:17.392 - 01:57:00.380, Speaker A: So you do it right. Like, if you can collect 100% of the fees, you build a block, you collect 100% of the fees. Your cost of attack is the cost of producing one block, and then you get all of the money back. This is why. It's one of the reasons bitcoin has 51% attacks, because if you produce a block, you get all the money. The solution to this is, well, what if we can find a way to guarantee that you can't get 100% of your money back? What if you could only get 50% of your money back? Would the network be secure? The answer is, well, we could figure out what it costs, because now.
01:57:02.110 - 01:57:02.474, Speaker B: Our.
01:57:02.512 - 01:57:36.100, Speaker A: Cost is no longer this, but we still have a cost of this. And this is kind of the property of. It's the security property. It's fundamental to bitcoin, but it's also fundamental to Sado. Because in bitcoin you say, well, it's the cost, essentially, of renting 51% of the hash power or building that, which is a cost of attack. And what Sado says is, sado says, well, the cost of attacking Sato network is whatever percentage of money you cannot recover. So the security challenge is different.
01:57:36.100 - 01:57:43.638, Speaker A: Producing a block is easy if you're willing to spend a lot of money. The challenge is, how do we make it so that you can't get your money back?
01:57:43.724 - 01:57:53.754, Speaker C: So just for me to understand one thing, if I'm block producer, right. So I have some amount of transactions that I collected. So this transaction, they pretty much say, who am I?
01:57:53.792 - 01:57:54.090, Speaker B: Right?
01:57:54.160 - 01:57:54.826, Speaker A: They say, who?
01:57:54.848 - 01:57:59.050, Speaker C: You are the receiver of the transaction. So you can actually validate.
01:58:01.650 - 01:58:22.974, Speaker A: Yeah. And if an attacker. It's one of the lovely things. If an attacker produces a block, well, there are two things. If they put all of their transactions, if they steal transactions from your block and put in the network, you actually still will potentially get paid. So if an attacker attacks network, there are two things they can do.
01:58:23.112 - 01:58:32.950, Speaker C: So I have a specific question. So I produce this block, then I myself actually trying to produce block when, let's say, I just kicked out one of the transactions.
01:58:34.890 - 01:58:36.370, Speaker A: You mean you want to produce.
01:58:36.450 - 01:58:42.070, Speaker C: I want to produce exactly the same parent, two different blocks.
01:58:42.230 - 01:58:43.770, Speaker A: If you want to, yeah.
01:58:43.840 - 01:58:45.820, Speaker C: So what's going to happen with this?
01:58:46.830 - 01:58:50.334, Speaker A: Maybe we can kind of explain how it works before we get to that.
01:58:50.452 - 01:58:51.166, Speaker B: Okay.
01:58:51.348 - 01:59:18.322, Speaker A: I mean, basically what it boils down to is nodes are positioned in the network and the flow of money comes into them from the transactions filtering into the network. So if you really want to cause problems, what you're talking about is a block flooding attack. And then the question becomes, how does the network deal with block flooding attacks? The most damaging thing you could do is try to encourage a lot of other people on the network to produce blocks simultaneously.
01:59:18.466 - 01:59:24.474, Speaker C: Well, I mean, this is what the most damaging thing, because this transaction is sending money to exchange, and it's not here.
01:59:24.592 - 01:59:26.380, Speaker A: Well, here's the thing.
01:59:27.470 - 01:59:30.938, Speaker C: This is literally what double spend is.
01:59:31.024 - 02:00:22.330, Speaker A: You've got. Well, no, the double spend isn't the problem because the cost of block production, you determine what the cost is. Now, what that's saying is, that's saying for you, for your specific node that has the potential to produce two blocks. Right now, the cost of the block for you depends on the cost of producing the block. The fundamental property is that if you're an honest node and you're generating work where the fees are coming from other people, it's essentially free to produce blocks. If you're that node, you're saying, look, I'm an honest node, I'm capable to produce a lot of blocks, but if I'm swapping at one transaction, say, well, if you're swapping at one transaction, then the cost for you of a block flooding attack would be that one transaction.
02:00:23.150 - 02:00:25.930, Speaker C: Let'S say, I mean, both of the transactions have the same fee.
02:00:27.070 - 02:00:28.710, Speaker A: You're saying I'm a block producer.
02:00:28.790 - 02:00:30.898, Speaker C: Yeah, and I created two blocks.
02:00:30.934 - 02:00:33.326, Speaker A: You create two blocks that are the same.
02:00:33.428 - 02:00:40.058, Speaker C: Yeah, and it has exactly the same amount of fees. Just like one transaction, one of them sends money and another one doesn't.
02:00:40.154 - 02:00:40.558, Speaker B: Yes.
02:00:40.644 - 02:00:51.518, Speaker A: Well, there's two questions. The first question is for the user who receives it, and the second question is for the network as a whole. Now, for the user that receives it, it's just like any other blockchain, like bitcoin.
02:00:51.614 - 02:00:51.922, Speaker B: Right.
02:00:51.976 - 02:01:35.518, Speaker A: If you want security, security scales with a number of confirmations, sure. And so if you are making a payment to me and you're a block producer, the cost of attacking the network is different for different nodes in the network. So if Google is producing 30% of the logs, their cost of attacking is a lot higher than someone who doesn't have that inbound transaction flow. Well, because they have. It's kind of getting to the central attack because you're jumping to the attack vectors. That's fine. The point is, if you're an honest node, what are you doing? You're helping users take their transactions, which have fees, and you're moving them into the network.
02:01:35.518 - 02:01:44.846, Speaker A: And that's the measured form of work if you're an attacker. Well, you can fake that. How do you fake that? You fake that by making your own transactions that pay.
02:01:44.888 - 02:01:56.650, Speaker C: No, you can also just do, you can be an honest note today and then you do the work that you're supposed to do, and then tomorrow you decide that for this specific transaction, you're not going to include it.
02:01:56.720 - 02:02:18.430, Speaker A: Yeah, for sure. Of course. What you're doing is I'm not worried about the confirmation stuff because it's kind of like, well, for a user accepting a transaction, what we've got is we've got a system that says producing a block for various people has a cost. So if you're paying me a 15 cent transaction and the cost of a block production.
02:02:18.770 - 02:02:35.766, Speaker C: So my point here is that when you're saying that producing a block costs. So in proof of work, for example, you will need to pay here in work twice. You'll spend time here and you need to spend additional time.
02:02:35.868 - 02:02:36.278, Speaker B: Yes.
02:02:36.364 - 02:02:40.834, Speaker C: In proof of stake, you'll be actually slashed right away and none of those blocks will be valid.
02:02:40.882 - 02:02:41.142, Speaker B: Yes.
02:02:41.196 - 02:02:43.000, Speaker C: If you show them both.
02:02:45.130 - 02:03:08.490, Speaker A: This is a block flooding attack. Now this is possible, it's not economically incentivized. And the network incentives, actually what basically happens is the consensus layer says if you've got a relationship with other nodes in the network. So if you produce one block, if you produce another block, you can produce 10,000 blocks. If you want, you can send them to your peers.
02:03:08.570 - 02:03:08.910, Speaker B: Yes.
02:03:08.980 - 02:03:45.402, Speaker A: Your peers are not going to propagate anything past the first block. If you want your peers by consensus, if you convince them to, they can. Protocol doesn't do it. If you want them to propagate, you've got to create the longest chain. So if you want to actually have a block flooding attack and you want it to propagate through the network, it's a lot harder than you think if you're just talking about confirmations like a double spend. The answer to that is we calculate the cost of the block. The cost of the block depends on whether you're attacking it and how many transaction fees you have from other people.
02:03:45.402 - 02:04:09.540, Speaker A: And you take that cost and you multiply it by the number of blocks, and that's your security. And that's the same as in bitcoin. If bitmain has 49.9% of the network and they only need to do a tiny bit of work. Well, what's your security against bitcoin? It's cost times blocked. The block flooding attack is the more interesting thing to think about.
02:04:10.630 - 02:04:30.490, Speaker C: Okay, that's just to finish this thought. So let's say you send this to one, to node number one and this to node number two, right? So you send different nodes, different blocks. So how does this node nodes.
02:04:31.230 - 02:04:33.594, Speaker A: Well, as you're going to see, pretty.
02:04:33.632 - 02:04:46.000, Speaker C: Much my question is, why will this not pretty much, why would different n three and four, why would not split up?
02:04:46.450 - 02:04:49.600, Speaker A: Well, the question with that is, okay.
02:04:50.610 - 02:05:02.114, Speaker C: You said yourself, right, it will only accept one block from the guy. So when this guy will broadcast even this block, he will not accept it. And the same way the cost of.
02:05:02.152 - 02:05:33.310, Speaker A: Attack scales with the number of blocks, the same money can potentially be used in different chains. So there are two questions here. The first fundamental question, which is the security. One is noticing that we're providing the same security as bitcoin and these other networks in the sense that you could calculate the cost of attack on any chain. So there's two questions here, and it's important not to dance between them. How many blocks do I wait for confirmation?
02:05:33.810 - 02:05:43.874, Speaker C: Let's forget about confirmation. I'm asking you. I as a malicious node which have transactions. So it cost me nothing.
02:05:43.992 - 02:05:44.610, Speaker B: Yes.
02:05:44.760 - 02:05:46.270, Speaker C: Produced two blocks.
02:05:46.350 - 02:05:46.930, Speaker A: Okay.
02:05:47.080 - 02:05:48.162, Speaker C: With different thing.
02:05:48.216 - 02:05:48.482, Speaker B: Right.
02:05:48.536 - 02:05:52.578, Speaker C: And it costed me zero.
02:05:52.664 - 02:05:55.186, Speaker A: No, it doesn't cost you zero.
02:05:55.368 - 02:05:58.962, Speaker C: Well, I lost whatever my mind is, as usual.
02:05:59.026 - 02:06:08.940, Speaker A: Let's put some numbers on it. So let's say it's $10,000 per block. Okay. And remember that there are defenses that can exponentially increase that.
02:06:12.350 - 02:06:20.150, Speaker C: Just so I understand, the cost of the producing block is 10,000. I got 10,000 of transaction fees in this block.
02:06:20.230 - 02:06:23.278, Speaker A: So you've done the work of the network of collecting $10,000.
02:06:23.364 - 02:06:23.854, Speaker B: Yes.
02:06:23.972 - 02:06:27.790, Speaker A: Because of that, you can think of it as a discount on the work that you're doing.
02:06:27.860 - 02:06:34.962, Speaker C: Yeah, I've got this transaction, yes. So there's like one transaction that can pretty much, well, you've done the work.
02:06:35.016 - 02:06:38.420, Speaker A: So you're entitled to it. This is not the question.
02:06:39.270 - 02:06:44.062, Speaker C: How much am I spending here? If I collect a 10,000 transaction? Well worth a few.
02:06:44.136 - 02:07:25.106, Speaker A: I mean, we haven't got into actually explaining how the payment mechanism works, but if we're talking abstractly, let's say, let's just assign a figure out of the blue and say if you spend a ton of money, you can get 50% of these fees back in your pocket. So in that case, the cost to you of this block is not 10,000. The cost to this block is 5000. Okay, so you're getting 5000. This block is going to cost you another 5000. This block is going to cost you another 5000. And it's the same here.
02:07:25.106 - 02:07:34.120, Speaker A: Now your initial payment. Yeah. If you want to attack the network by doing a split like that, you can, it's a block flooding attack.
02:07:36.890 - 02:07:37.542, Speaker B: But.
02:07:37.676 - 02:08:27.174, Speaker A: On this chain as well, if you want to do it another five k, you want to do another five k, you could create a third chain and you can try to get the network to accept that as well. And we're saying that the cost, meaning the amount of money you lose if you work really hard and you manage to recover 50%, and that's not actually viable. But what you could see is that whatever chain you try to maintain, we're still maintaining the properties that on any chain there is a cost of the length. Now the question. So for users on the longest chain, we still have a guarantee of what it costs you to attack the chain. So in that sense it's just like bitcoin. That's like I can rent hash power and whatever the longest chain is, the attack here that matters would be the block flooding attack, which would be.
02:08:27.174 - 02:08:38.570, Speaker A: Could I use this to produce 50 different blocks that would saturate the network and cause the network to fork out on 50 chains. And there would be so much buffer back and forth that it would be a problem for the network.
02:08:38.990 - 02:08:51.680, Speaker C: Well, this is interesting tech as well. The kind of main side here is like I always get, only if I did not do this right, I get 5000.
02:08:52.210 - 02:08:58.094, Speaker A: No, what we're doing is I'm trying to separate the fees from the cost to you.
02:08:58.212 - 02:09:03.858, Speaker C: We're saying is if you I'm producing blocks, what is the cost to me?
02:09:04.024 - 02:09:10.914, Speaker A: Well, what you need to do, if you remember, is all of the nodes in the network are competing to gather work.
02:09:10.952 - 02:09:11.746, Speaker B: Sure. Right.
02:09:11.848 - 02:09:35.942, Speaker A: So if you're an attacker, let's assume, let's take a pure example. You're not doing any honest work. So the cost to you is generating the amount of work that the network considers valid. It's like bitcoin. There's a cost to producing a block. We can measure the cost of producing blocks. So for an attacker, it's like renting enough hash power to produce a block of bitcoin.
02:09:36.086 - 02:09:42.094, Speaker C: But let's say I am doing, in your definition of work, which is collecting transactions, I am doing the work.
02:09:42.132 - 02:09:44.522, Speaker A: Okay, so you're an honest node on the network.
02:09:44.586 - 02:09:48.730, Speaker C: I'm an honest node on the network. Which I'm not, but I'm not. I actually have modified clients.
02:09:48.890 - 02:10:20.730, Speaker A: Yeah, I know, but there's a rhetorical slip here. You're saying I'm an honest node on the network. Honest nodes on the network. Can I steal yours? Honest nodes on the network. Let's say you've got a China node and you've got a US node, and let's say you've got a Europe node as well. Now, if you remember, the burn fee is adjusting to the pace of block production. Now the US is, let's say the US is generating 30% of transaction volume.
02:10:20.730 - 02:10:45.838, Speaker A: Let's say China is generating 30% of transaction volume. And let's say Europe is generating 30% of transaction volume. What we're going to see is that the US, okay, it's an honest node and it decides to attack the network. Well, the US has 30% of transaction volume and it's going to essentially. So let's say it produces the first block for free. So this is a US block.
02:10:45.934 - 02:10:46.580, Speaker B: Yeah.
02:10:48.310 - 02:10:52.990, Speaker C: So now at this point it does two things. It first of all produces another block.
02:10:53.070 - 02:11:00.546, Speaker A: Which is exactly the same is this is a block flooding mean the block.
02:11:00.578 - 02:11:14.134, Speaker C: Flooding is a little bit more, I think, like what you described, a little bit more complicated. That's a very simple question. So I produced two blocks and I literally sent them to the block number one was sent to Europe, block number two sent to China.
02:11:14.262 - 02:11:14.554, Speaker B: Right?
02:11:14.592 - 02:11:24.606, Speaker C: So now China sees this block, and let's say Europe even transmitted the block interest from us to Europe, to China. And China declined to use it.
02:11:24.628 - 02:11:24.910, Speaker B: Right.
02:11:24.980 - 02:11:26.590, Speaker C: Because it's the second block.
02:11:27.570 - 02:11:34.402, Speaker A: You got two blocks. There's China and Europe. So we got a bitcoin fork here.
02:11:34.456 - 02:11:34.674, Speaker B: Yeah.
02:11:34.712 - 02:11:47.330, Speaker C: So we have China and we have euro. So forget about in bitcoin. This have taken, let's say, ten minutes. And this have taken ten minutes, actually, in SATA.
02:11:47.410 - 02:11:47.702, Speaker B: Right.
02:11:47.756 - 02:11:51.958, Speaker C: As far as I understand, this did not take ten minutes.
02:11:52.044 - 02:11:52.294, Speaker B: Yes.
02:11:52.332 - 02:11:54.710, Speaker C: Like, I just produced it immediately.
02:11:55.850 - 02:12:25.054, Speaker A: It's a block flooding attack. Here's the question. What I'm trying to do is I'm trying to get you to see that the block flooding attack in Sado is different than work difficulty chain confirmation. Because each of these forks, there's going to be a cost, because there's a cost of block production. So you can spend the cost of block production, and sure, you can produce any number of chains. What's actually going to happen in the real world in this situation is the US is just burning its reputation. No one's going to take its block seriously.
02:12:25.054 - 02:12:47.186, Speaker A: And if it becomes a problem, China and Europe are going to start coordinating on things. But think of in the bitcoin proof of work example, where let's say these are two blocks that are produced by two people. Who produces the next block? Well, the US has produced a block and it now has zero work. So if the United States wants to produce another block on either of those chains, it needs to pay out of its own pocket.
02:12:47.218 - 02:12:50.726, Speaker C: Yeah, so I'm not talking about this. I'm talking about now China and Europe.
02:12:50.918 - 02:12:52.422, Speaker A: Well, who produces the next block?
02:12:52.486 - 02:12:54.118, Speaker C: Well, let's say China produces the next block.
02:12:54.134 - 02:12:58.698, Speaker A: Well, whoever produces the next block is whoever is profitable for them to produce the next.
02:12:58.784 - 02:13:05.760, Speaker C: Let's say China produces the next block, and then let's say Europe is actually producing the next.
02:13:06.530 - 02:13:32.102, Speaker A: Okay, Europe. Europe builds off the longest chain. Why would Europe build off that? This is bitcoin. You have two nodes that produce a block, and then someone builds on it, they propagate, and Europe does it, too. I mean, if you're describing a model of the network where the US can send data to China and the US can send data to Europe and the network doesn't ever communicate. That's like a version of bitcoin. It doesn't make any sense.
02:13:32.156 - 02:13:37.110, Speaker C: No, but you said even if they do communicate, you cannot decline the second block from the same.
02:13:37.260 - 02:13:57.694, Speaker A: No, we're saying that there's a certain cost to the United States in producing blocks. If the United States wants to continue to produce blocks on both chains, it can. The point is that it will cost it money. The key point is that attacking the blockchain costs money. You're forgetting that there's a cost to the attack if you're willing to spend the money.
02:13:57.732 - 02:14:03.830, Speaker C: Yes, but this is because you're saying attack in a way, when I produce block, pretty much that are anti.
02:14:03.930 - 02:14:12.866, Speaker A: What I'm saying is. I'm saying you're mixing up an attack on longest chain because on every blockchain. In every blockchain, this is different.
02:14:12.968 - 02:14:20.040, Speaker C: I understand that producing empty blocks when you don't have transactions is an attack that costs money. I totally understand that.
02:14:20.650 - 02:14:21.254, Speaker A: Okay.
02:14:21.372 - 02:14:28.234, Speaker C: Because. Yes, empty blocks, because you don't have transactions at this point, it will cost you money. The part I'm trying to figure out.
02:14:28.272 - 02:14:52.926, Speaker A: Which, maybe think of this. USA USB. This is bitcoin. Other people on the network will build on the longest chain. So what I'm trying to get you to see is that there are two issues here. The first issue is if the US, China and Europe are going to build on what they think is the longest chain. So if it costs the US money to produce blocks, the US can keep it.
02:14:52.926 - 02:14:58.142, Speaker A: Like, China and Europe can do this. And then the US produces these blocks. Right, okay. And then China and Europe.
02:14:58.286 - 02:15:08.360, Speaker C: Well, so the question is, like, us can do this, right? US can do this, Europe will produce block here, us will do this. So you actually need.
02:15:12.970 - 02:15:39.578, Speaker A: The US can keep doing it if it's willing to pay money. But like. Yeah, so this is exactly. This is exactly the same in bitcoin as the US just producing a single block. You're kind of creatively coming up. The fundamental thing to notice actually is, and this is where it's a radical improvement over bitcoin. Note that in bitcoin, in Sado, you've got to.
02:15:39.578 - 02:16:44.166, Speaker A: In this kind of situation, the US needs to pay 100% of the cost of producing a block. In bitcoin, the US needs to pay 51%. So there's actually something really interesting. People have difficulty with it. And I think the reason people have difficulty with it, it's why the block flooding attack is more interesting because the block flooding attack is more interesting people have kind of, they kind of cognitively have difficulty wrapping their heads around it because what Sado does is it puts a price on attacking the network, but that price is slightly different for everyone else. So if bitmain is producing 33% on top, the security question becomes how do we make it so that bitmain can't collect its money back? And there's another really lovely property of this, which is, let's say you're the US, because basically what happens is you can take other people's transactions into your blocks. You can steal them.
02:16:44.166 - 02:17:46.450, Speaker A: If you do that, though, the people that routed your ability to get the money from the block shrinks. So if I'm an attacker on the network and I put 100% on my money in the network, the challenge is maybe there's a way I can engineer to get 50%. If I start including transactions that were included from China and Europe, well I can do that, but then I can only get 10% or 5% better. And so what you get is you get a situation where the US, which is trying to attack the network, say we're in Beijing. So of course if the US is pulling out this attack, it's got two choices. One, if it doesn't include any work from Europe and China, what happens is the amount of work on the network that's outstanding, that's not on the longest chain starts going up. And what that means is as the burn fee adjusts at every point in time, at any point in time, China and Europe can dump their transactions on the longest chain.
02:17:46.450 - 02:18:30.722, Speaker A: So the US has a choice. If it's trying to censor the network, it needs to keep producing blocks and the blocks need to have more and more work, or China and Europe at any point say, well we'll put it there. And the US says, oh no, you can't put it there because I'm producing this next block. And then they say, well okay, we're going to put it here. This is actually, it's really interesting because in Sado what happens is the fact that the work can be transferred between chains like this eliminates the 51% attack in an interesting way. So their other option is here. The costs of the US go up because one, they have a choice between they include the other transactions, right? So like they steal the transactions.
02:18:30.722 - 02:19:01.966, Speaker A: Like China produces a block here and the US says, no, your transactions are here. If they do that, they stop being able to capture 50% of the money because the transactions that they include force the money basically to other nodes in the network. So you can either have help producing the longest chain. You can either stop work from building up outside your chain or you can include it. But if you include it, your ability to recapture the money goes down.
02:19:02.068 - 02:19:03.982, Speaker C: Instead of like 50%, you get 40, 30.
02:19:04.036 - 02:19:04.640, Speaker B: Right.
02:19:06.070 - 02:19:30.860, Speaker A: The two general problems or not problems, but kind of the cognitive things getting people to think about it is every blockchain is secured by fees. What we need to do for maximum security is we need to have blockchain that can process massive amounts of fees. That's what we're building. Because the biggest blockchain is going to be the most secure. One, because it's going to be the most expensive. But two, notice that the difficulty is different. It's like, yeah, you can produce it.
02:19:30.860 - 02:19:48.766, Speaker A: The challenge is this, how can we lower it below 50%? How can we keep people from recycling? Because what we don't want is we don't want a system where the US does this and then it starts recycling its fees into subsequent attacks. So how can we do that? That's actually the real question also, where.
02:19:48.788 - 02:19:52.114, Speaker C: Is the 50% go? Let's get into that.
02:19:52.232 - 02:20:48.018, Speaker A: Right. So if you remember, we did this kind of, maybe just first with the block flooding what you've got, and you've got a massive, massive network processing terabytes or x by data. If you're a node, you're collecting honest transactions. One of the lovely things is if you start attacking the network, the easiest way for the network to respond is we stop sending you fees so you can subsidize your attack with honest work. But if I'm a user and all of a sudden you start creating network disruptions, the first thing I do is I send my transactions to someone else. And remember you, if you're like the US, if you're Google or something, and you've made massive investments in Internet infrastructure in order to process single class blocks, and all of a sudden people stop sending you transactions because you attack the network. So the economic incentives, you could try with a block propagation thing.
02:20:48.018 - 02:21:18.574, Speaker A: One of the major differences is that the incentives on the rest of the network are, one, people stop sending you transactions. Two, at massive scale. You don't have a network structure where Google is, it's not hub and spoke, because Google is connected to everyone. So you can't even point pull it off because the main block producers can only maybe manage connections to twelve or 13 other nodes, given the limitations of the pipes. Anyway, we were going to talk about how money is divided up.
02:21:18.692 - 02:21:19.406, Speaker B: Yeah.
02:21:19.588 - 02:21:24.718, Speaker A: So the key observation is, well, we're going to divide up the money.
02:21:24.804 - 02:21:25.150, Speaker B: Right.
02:21:25.220 - 02:21:34.978, Speaker A: And notice that we previously did things where we said like, this node is going to get ten over 15 and this node is going to get five over 15.
02:21:35.144 - 02:21:35.860, Speaker B: Right.
02:21:37.190 - 02:22:07.430, Speaker A: What happens? We mentioned the burn fee before. So as soon as a block is produced, the burn fee is really high. And then as time passes, the consensus algorithm lowers the burn fee. At a certain point in time, someone on the network has enough work in their mem pool, they're able to produce a block. This is where the fun begins. Before we do it, though, now is the time to step back to your question. Why isn't everyone producing blocks at once? The reason is transactions and fees are flowing into the network.
02:22:07.430 - 02:22:35.122, Speaker A: Work is flowing into the network at different places. So if you're the United States, you're going to have access to american transaction flows. If you're China, you're going to have chinese transaction flows. Singapore will have Singapore transaction flows. And what's going to happen is the network will adopt an organic round robin production system, because as soon as the US produces a block, well, the amount of work it has in its mempool goes to zero. China's still got blocks. Singapore still has blocks.
02:22:35.122 - 02:23:17.646, Speaker A: And so while the United States is building up work to produce another one, well, these guys are going to produce a block. And the network basically eliminates people who are in close proximity to each other who are producing blocks for the same transaction set. But anyway, let's move on to the question. So we've got basically two kinds of payments involved with the production of the block block. You've got routing nodes. This thing below the burn fee, we can think of it as a routing payment. So this amount of money is going to go for routing if there's a lot of block producers and there's a lot of competition for block producers.
02:23:17.646 - 02:24:10.190, Speaker A: Remember the Reming nodes? Reming nodes have an incentive to give multiple block producers a transaction because they want block producers to be producing as soon as they possibly can. The reason for that is if a block producer can afford to wait, if it can make a block with this amount of this amount, well, then this goes directly to the block producer. So if a transaction pays a fee of $10, in this example, maybe $7 would be divided up between routing nodes, but $3 goes directly to block producers. And what this is doing is it's creating competition between block producers and routing nodes. Where if this is going to be divided up, but if it's really profitable to be a block producer, that's going to happen in situations where there aren't enough block producers.
02:24:10.270 - 02:24:10.514, Speaker B: Right?
02:24:10.552 - 02:24:38.830, Speaker A: Like the blockchain is really big. You need to make a real investment in Google scale infrastructure. You need to have a connection to level three. Like it's super profitable. You can afford to wait. What that means is it's a tax on the fee so the block producers get their money right away. And the economic incentives plus router behavior is going to keep that at what the market prices are, basically because there's a return on setting up a block production facility.
02:24:38.830 - 02:24:47.146, Speaker A: So that basically gets taken off right off the top. It depends on the degree of competition between block producers.
02:24:47.178 - 02:24:47.760, Speaker B: Right.
02:24:49.590 - 02:25:41.954, Speaker A: So here's the security. The security question is how do we divide the rating band? Right. What we do is we have something in the network that's called pay split. Pay split is a variable that goes between zero and one. When the money is at zero, it's going to go to a routing node 100%. When the variable is at one, it's going to go 100% to a group of nodes whose purpose is to hold a lottery. And what's going to happen is we're separating the act of block production from the act of deciding who gets paid.
02:25:41.954 - 02:26:19.120, Speaker A: So if we go back to the bitcoin example, the act of producing the block is the act of getting paid. It's not that way with satan. So if the pay split is 50%, say, because we can do dynamic pay split. Let's start with static. So if the pay split is 50, the cost of producing a block is 100, let's say, plus whatever the block producer surplus is. But whatever you're going to get, if you're a routing node, you're eligible for $50. If you're a lottery holder, you're also eligible for $50.
02:26:19.120 - 02:26:28.746, Speaker A: This is in the consensus rule. It's a variable that's managed in the consensus network. So you can't attack the network and suddenly change the pay split.
02:26:28.778 - 02:26:30.000, Speaker C: We can go into it.
02:26:32.790 - 02:27:12.430, Speaker A: So how does it work? A block is produced and the block itself. In the sado implementation, you could do like an algorithm, random stuff. We use mining for a couple of reasons, because it's simple. And what you do is the block basically has a hash, and the block implicitly, the hash of the block implicitly is something we call a golden ticket. Think of like Willy Wonka and the Charlote factory and the routing nodes and the block producers produce a block. As the block is propagated, the golden ticket is available for everyone on the network to look at. And right now it's a mining puzzle.
02:27:12.430 - 02:27:58.414, Speaker A: Simplicity's sake. And if a lottery holder finds a solution to a golden ticket, what it does is it takes that solution and it propagates it to the network in the form of a transaction. And that transaction, if it is included in the very next block, the lottery holder that found the ticket gets paid and a variable that's associated with a solution. And because it's a cryptographic puzzle, it's guaranteed to be random. That random variable picks which of the routing nodes contained in all of the transactions in the previous block gets paid as well. And it doesn't need to be one. We can divide it between ten.
02:27:58.414 - 02:28:55.920, Speaker A: The main point is that the randomness from the lottery is used for the distribution of money for this or for this, right? So remember, the distribution of money here for the block producer is ten over 15 and five over 15. So for a two hop production, the block producer can stochastic, it can expect not a 50% payment. It can expect on average, to get 33% of $50, equals really not very much money. What is that? That's like 17.5. So you notice in the earlier examples, we're talking about $50 in a network where the block producer is one hop away from every transaction. They're in fact going to capture the 50% pay split, 17.5. So the cost is going to be 82.5%.
02:28:55.920 - 02:30:01.950, Speaker A: Right now, in a network that's actually more distributed as real world networks are going to be, the cost of attack for block producers is going to be higher. And the question you've got to think about is, well, we've also got a cost of attack from mining nodes as well. And this is the nature of what Sado does. Sado says, look, the solution to the problem is we can make the network secure on fees alone if we divide up the fees. And the challenge becomes, how do we divide up the fees in a way that we can actually calculate what the cost of security is, right? And this is the other thing, like, remember, because we've got a mining puzzle here, producing, you're not making 50% in profit if you produce a block. If the next block is produced and there's no solution, nobody gets paid. So in addition to generating an attacker, in addition to generating the money for the transactions, it needs to come up with the money for the transactions, it also needs to be in a position to determine the lottery.
02:30:01.950 - 02:30:37.994, Speaker A: And you can think of the lottery position like validators, in the sense that if you've got the US in our earlier example, which is trying to rewrite the longest chain, I mean, in order for this to be a low cost attack, it needs to be able to source transaction fees from the entire network. And when that happens and it tries to attack the network, people are going to be like, well, I'm okay with that. And they keep paying for it. You've got the lottery holders, it can be a randomization function, it can be mining, whatever. They also need to continue to mine and hash on this. Because if they don't, the US can't recycle.
02:30:38.042 - 02:30:38.640, Speaker B: Any.
02:30:43.570 - 02:30:46.618, Speaker C: Lottery ticket holders can mine.
02:30:46.714 - 02:30:48.446, Speaker A: If you don't, anybody can mine.
02:30:48.478 - 02:30:50.382, Speaker C: I mean, in the mining, us can be mine.
02:30:50.446 - 02:31:36.340, Speaker A: The US can mine too. But notice, if the US is mining too, why don't we get to it a bit? But note that they're not making $50 because the amount of profit that they're making from this, the profit for lottery holders, is actually driven by market forces to be exactly the same for the profits for revenue. So if you get $50 back, well, they probably need to be spending forty eight dollars to forty nine dollars just to do that. So an attacker that needs to co opt both. Well, if you're using mining to attack the network, it's only really feasible if the profits from mining are way higher than the profits from routing and kind of vice versa. But this is dynamic pay split. The example we're talking about is just, we're saying, okay, there's 2%.
02:31:36.340 - 02:32:14.000, Speaker A: The main point is that, no, if the transaction is not solved, if the attacker is just trying to use money, what we've done is we've introduced a cost based system. That means it's no longer 5000 per block, right? It's 5000 per block. They're getting 17%. .5 plus that's their profit, practically all of this. So otherwise the amount of money that they lose starts going up. And what this lets us do is it lets us calculate, you can calculate the cost of attack to various people in the system.
02:32:14.000 - 02:32:45.798, Speaker A: This is sort of the first version. The first version with a fixed pay split. We have a version with a dynamic pay split. And what that does is it changes this so that the profits from routing and the profits from mining are driven by market forces. But the first version is just like thinking about this one way to think there is a difficulty to mining. And let me maybe explain a bit, because it's lovely. We basically let the miners vote on what the difficulty of the puzzle is.
02:32:45.798 - 02:33:00.800, Speaker A: Now imagine with a 50% pay split, what's that going to be? Well, the miners vote by providing solutions, and the miners have an economic incentive to move difficulty to the point that there's one transaction on average per month.
02:33:02.850 - 02:33:04.350, Speaker C: Reduces difficulty.
02:33:05.650 - 02:33:39.086, Speaker A: Do you include multiple transactions? No, you can't. You can only include one. And there's a lot of security benefits. Like, one of the things is if you're attacking the network, you need 100% of lottery to pick yourself. It's also like, it's the reason why if you copy transactions from other blocks, you can't control what the random solution will pick. So the attack that we need to solve is like in the bitcoin attack, you produce a block. Well, thank you for all of those transactions.
02:33:39.086 - 02:34:09.460, Speaker A: I've got more mining power. I steal them, I put them in my block, I get paid in this. If you produce a block, I steal those transactions. It's increasing the cost of the attack. But note, like, there's lovely properties with difficulty, where if this is at 100% of difficulty, but notice things like, notice things like variance. 100% of difficulty is going to have some variance. And producing, if you're an attacker, producing more than one doesn't do anything for you.
02:34:09.460 - 02:35:05.750, Speaker A: There's going to be some variance in golden ticket solution as well. So it's another security thing, because if you produce two solutions and you're attacking the system and choosing yourself, that doesn't benefit you at all. So the variance above doesn't give you any benefit, but the variance below only imposes costs. So even an attacker that can match 100% of the water is still going to lose money just from statistical variance in the scale of the mining solution. Anyway. That's basic sago, which is that you divide up the money, you introduce a system of generating a random number to decide who gets paid, that attackers can't cheat without incurring additional cost. And you use that to basically say, we have the properties of bitcoin, which is there's going to be a cost for producing certain blocks on the network.
02:35:05.750 - 02:35:46.242, Speaker A: And then the larger economic scheme is saying, if you're an honest node, you're collecting genuine transactions and sharing them with friends and then other nodes on the network. If you're an attacker, because everyone who's doing anything at scale, it's their entire economy, like no one is going to be if Google is producing 20% of the network, if they start misbehaving, the economic incentives for everyone is literally to behave in a way where Google's cost of attack goes way, way up. We stop sending them transactions. The miners, look, they're like, look, you're destroying the network. We're making money from this. We're not going to support you. And basically the whole thing means that the cost of attack is honest.
02:35:46.242 - 02:36:22.000, Speaker A: Nodes do work, routing work, and they get paid for free, dishonest nodes. They have to attack the network. And it's not just 50% because it becomes exponential. Because if you don't include other people's blocks, the amount of work that is building up outside of your network, waiting to come on at any point in time, grows to the point where the amount of work you, the amount of money you actually need to spend, not only does the cost go up because you recapture less of it.
02:36:23.090 - 02:36:31.680, Speaker C: So when you're choosing between two chains, right, do you use amount of kind of transaction fees that are in each one?
02:36:34.230 - 02:36:41.630, Speaker A: To rewrite the longest chain, you need a higher difficulty and you need the longest chain with accumulated work.
02:36:41.800 - 02:36:45.682, Speaker C: What do you mean the amount of fees accumulated?
02:36:45.826 - 02:36:50.758, Speaker A: I mean, accumulated work is.
02:36:50.844 - 02:36:53.046, Speaker C: Work is, I mean the fees is like.
02:36:53.148 - 02:36:55.306, Speaker A: Work is a measure of fees with the efficiency of.
02:36:55.328 - 02:37:22.020, Speaker C: The problem with. One problem in proof of stake is without slashing is that people will just build on false chains, right? So the same question I was asking before, where us sends both chains to everybody?
02:37:27.110 - 02:37:29.758, Speaker A: Remember there's a cost of producing every block.
02:37:29.854 - 02:37:34.806, Speaker C: No, but this is us and this.
02:37:34.828 - 02:37:36.550, Speaker A: Is Europe.
02:37:38.650 - 02:37:44.598, Speaker C: And this is China. They're just doing it.
02:37:44.684 - 02:37:50.522, Speaker A: That's like a bitcoin fork. Any blockchain you can have a fork. And the question is, where's the rest of the network build off of?
02:37:50.576 - 02:37:52.620, Speaker C: No, but this is free for them.
02:37:54.910 - 02:37:56.134, Speaker A: You've got a fork.
02:37:56.262 - 02:38:12.798, Speaker C: It is a fork, yeah. The question here is that proof of stake, this problem exists, is that as a validator or block producer, you really don't care which chain to build on. You will build on all chains.
02:38:12.894 - 02:38:22.210, Speaker A: I mean, here's the thing. You've lowered the cost of the US in this situation unless it's ponying up cash out of its own.
02:38:22.360 - 02:38:41.770, Speaker C: I mean, in this case, it's like literally, let's just imagine this is the same blocks. There's one difference here, that's all. So Europe and China, I mean, they're actually not malicious. They're not malicious, malicious. They're just not really following the protocol. They're just like, well, why not? Why not?
02:38:41.920 - 02:39:23.874, Speaker A: You can have an easy fix for this because the hash of the blocks is going to be different. You just have a consensus logic that says which one are you going to favor? You're favored by something entirely random that's not controllable by the US, right? What you're saying is, you're saying the attack that I envision is that all of the core nodes in the network will build off all of the possible forks and, well, look, we're talking about a blockchain that's moving petabytes of data a day because we're actually paying for the network. First of all, I don't think that's a realistic issue because the economic incentives for everyone who you've got an attacker. The economic incentives for everyone is like, well, look, there's an attack. The real question is to what extent?
02:39:23.922 - 02:39:25.350, Speaker C: They don't really care, right?
02:39:25.500 - 02:39:50.386, Speaker A: Why they do, because if the network becomes useless, they're not going to get paid. That's like saying, look, everybody will kind of mine separately on things and offer, why don't I have 500 blockchains? People want to use bitcoin. It's like, well, which chain do you want to transact on? I'll broadcast your transaction to all the forks. I suppose it's a theoretical problem, but.
02:39:50.568 - 02:39:57.282, Speaker C: It'S mostly a question of like, would people modify their clients just in case to make sure that they get included in those?
02:39:57.416 - 02:40:14.454, Speaker A: Well, the thing is, sure, but one of the differences is you say, well, what is the network structure going to look like? You're going to have a series, the bigger the blockchain gets, you're going to have a series of people that are specializing in infrastructure.
02:40:14.502 - 02:40:14.714, Speaker B: Right?
02:40:14.752 - 02:40:25.450, Speaker A: Like you're going to get Google in the states, Baidu in China. It costs a non trivial amount of money to be running a network.
02:40:26.590 - 02:40:42.882, Speaker C: If we're assuming that people invested a lot. I mean, that's the same as like ASIC assumption. People will not attack the network if they bought ASIC, because they bought ASIC and they don't want to. This is some cost for them. They don't want to pretty much attack network because otherwise they will lose their.
02:40:43.016 - 02:40:51.870, Speaker A: Well, it's interesting because that's in the white paper, but I don't think that's. I mean, the thing is, there's a profit motive. It's not a sunk cost motive.
02:40:51.950 - 02:40:58.590, Speaker C: I mean, it is like, sure, but it's a profit motive for ASICS as well. Attack the network. If you already.
02:40:58.760 - 02:41:14.842, Speaker A: It boils down to assumptions of economic rationality. Right, but that's also like in bitcoin. Like you're expecting people to rationally mine on the longest chain, like this sort of thing. If you throw out the expectation of economic rationality, I mean, there's no guarantee of what chain people mine on anyway.
02:41:14.976 - 02:41:23.230, Speaker C: No, but I mean, this is economic rationality. I will be putting blocks on all the chains that I see. Because there is no reason why not.
02:41:23.300 - 02:41:34.210, Speaker A: Well, you're going to put. Well, no, there is a reason why not. And the reason why not is that we're operating at scale and big blocks have cost. Like, this is not 2009. Not 2009 bitcoin.
02:41:35.270 - 02:41:39.566, Speaker C: We're assuming there's only like a limited set of people that can produce this block.
02:41:39.598 - 02:42:17.840, Speaker A: No, we're designing the economics of blockchain to support actual scale so people. Oh, well, in 2009 bitcoin, I can do this. It's like, well, yeah, but we're not talking about a megabyte every ten minutes. We're talking about, I mean, right now we think the limit is about 100 terabytes, but it will be in the petabytes. Now what you're going to get is you're going to get these core nodes in the network. And because we pay for routing, what you're basically doing is you're creating an economic incentive where different regions, there are kind of routing nodes and the routing nodes will connect to maybe one or two.
02:42:22.950 - 02:42:26.580, Speaker C: How long do you expect propagation take from?
02:42:27.350 - 02:43:12.658, Speaker A: Well, what we know is we know that the network has economic incentive towards efficiencies and we'll see. Personally, what I think is going to happen is I think that if people can't keep up with the main network right now it's 30 seconds. I mean, it could be two minutes. It could be ten minutes. If people can't keep up with a big network, the way to do it is as a routing node because why do you run a routing node instead of a full node? It's because your network can't actually handle bandwidth. And then the routing nodes, there will be users that will connect to those. But why do you want to pay for the routing nodes? The network structure, basically, you're going to have a core group of, you're going.
02:43:12.664 - 02:43:14.258, Speaker C: To have a core group of people.
02:43:14.424 - 02:43:32.246, Speaker A: It's like level three. This attack is kind of like level three communication. Starts screwing around with packets for its customers. Right? Like, could happen, but, you know, but look at it like what actually happens? If this guy starts screwing around with.
02:43:32.268 - 02:43:35.960, Speaker C: The network well controlled by russian government, then nothing.
02:43:38.510 - 02:43:48.234, Speaker A: Yeah, but the russian government doesn't control the people on this side of the line. It's kind of like it gets down to the user activated.
02:43:48.362 - 02:43:52.078, Speaker C: Okay, well, no, it gets down to.
02:43:52.084 - 02:44:30.234, Speaker A: The user activated software stuff. One, you can't compel these guys to propagate. If there's a block flooding attack, you can't compel these guys to propagate. Things they could, you could convince them to propagate it. The network protocol has certain rules that say, it says, for instance, when you've been convinced something's the longest chain, one of the things we do is like, well, if someone gives you other things, that's okay, you can make note of it, but don't forward it until you're convinced it is the longest. Okay. So they decide to attack the network and these guys are like, well, I've got a really profitable thing going on because it's profitable for everyone.
02:44:30.234 - 02:44:56.578, Speaker A: What's going to happen? Well, these guys are going to stop sending them money. The cost of the attack goes up and we're basically forced to the position that there's a cost to the attack. There's more advanced stuff where, as I said, we can make the cost exponential. But those techniques are weaker. If this guy decides to attack, they're very effective. If you have someone who, yeah, you.
02:44:56.584 - 02:45:05.846, Speaker C: Have some random person who tries to, that I think is pretty clear. If you like somebody on a shoot trying to come in, it's really hard.
02:45:05.948 - 02:45:46.222, Speaker A: But I mean, this is like bitmain. What if bitmain starts randomly forking stuff in the bitcoin proof of work. It's like what percentage of the network can support them? As soon as you hit 50%, you're screwed with this. There's actually no 51% attack because it doesn't matter. If you do 51% of the work and the mining system, let's say you've rigged it so you've got enough. Let's say you do 80% of the work and you've rigged the mining system well enough that you can get 51% back. If you've done 51% of the work and you're getting paid 51%, you're still losing 49% of the cost of the block, every block.
02:45:46.222 - 02:46:00.710, Speaker A: And honestly, in that situation, one of the major differences is the 51% attack is incentivized because the people doing the attack are making money in this system. The people that are doing the attack are losing 49% of the cost of block.
02:46:01.370 - 02:46:07.180, Speaker C: Pretty much your attack need to actually be making 50% from like exchange or something.
02:46:08.270 - 02:46:10.780, Speaker A: Yeah, I don't even know.
02:46:12.430 - 02:46:16.406, Speaker C: I sent a million dollars and then I recovered.
02:46:16.518 - 02:46:42.200, Speaker A: But it's like bitcoin. What is that? It's a transfer of money to everyone else in the network if you do that. So it may be that every now and then someone will attack the network and the other nodes in the network will be okay with it. Because if they need to spend so much money. It's a transfer to everyone else. The network's down for an hour, but they had to spend $5 million to get the money to do that.
02:46:43.530 - 02:46:58.410, Speaker C: The question is, can the exchange pretty much not exist and not confirm the transaction? That's the main problem. I went to exchange and sold 10 million of SATA, and then, yeah, everybody got paid in the network.
02:47:00.190 - 02:47:13.278, Speaker A: That's any blockchain, because you've got a cost of attack. What I'm saying is, look at the. There are a bunch of vulnerabilities and attacks that people.
02:47:13.364 - 02:47:23.666, Speaker C: So my question is mostly, like, do people see the cost of attack clearly just by observing the. As a node? Can I tell what is a current cost of attack?
02:47:23.768 - 02:48:05.630, Speaker A: Well, this is the nice thing. Pay split is a public variable that's visible in consensus code. So there are things like, in bitcoin mining, who's got the hash power? I don't know. And like, another thing with proof of work that nobody talks about, I've heard Craig Wright say it once. He says, well, when Moore's law ends, we may have a problem. Bitcoin security people, it is transaction fee volume, but it is in addition to that, because they've got mining as a difficulty function, it's the supply curve of hash power. Because as soon as I can rent 51% of the hash for less than 100% of the transaction volume, I've got a fee recycling attack in bitcoin.
02:48:05.630 - 02:48:59.662, Speaker A: I rent the hash, I produce it. The only question is, how do you disguise it? Right? And also proof of stake. You can think, well, it's all about staking, but who owns the stake? How do I know that the network is securely decentralized? How do I know who is attacking the block? Difficulty production function. In Sado, we don't have this knowledge problem, because everything that's needed to figure out how weak the network is is consensus or public information. So if pay split is really high, well, one of the, like, sado, with a pay split of one, it's kind of like a version of bitcoin where the block producers get their money out first, right? Because SATA, with a payload of one, the miners are the only ones that can attack the chain. Yeah, but the miners are also like the lottery holders, but they've also got to burn electricity. So an attack still has money.
02:48:59.716 - 02:49:00.320, Speaker C: Right.
02:49:01.830 - 02:49:21.000, Speaker A: But the block producers still collecting, like, the routing nodes don't get paid, and the block producers don't get paid out of the routing portion. But the block producers, they're still in competition with each other. So we have a know. Even in this broken version of Sado, it's actually better than bitcoin because you've got an actual way to pay for the.
02:49:24.810 - 02:49:29.974, Speaker C: Tax area. Having the hash power was a lottery.
02:49:30.102 - 02:49:32.586, Speaker A: Well, no, because the block producers, the.
02:49:32.608 - 02:49:34.346, Speaker C: Block be a block producer and have.
02:49:34.448 - 02:49:41.326, Speaker A: If the block producers, the block producers get their payment for that block, the miners can't do anything about the block producer payment.
02:49:41.428 - 02:49:46.138, Speaker C: Well, that's what I'm saying. You're a block producer and the luxury.
02:49:46.234 - 02:50:20.038, Speaker A: Yeah, I mean, it's like any blockchain. If you can do 100% of the work, you can attack. The difference is 100% of the work is a lot more secure than 51%. Also note that in Sado, like in bitcoin, we've basically got, okay, the way to attack the network is to become really good at mining. In Sado you've got one function which is block production. Now what that means is it means you want to be specializing in multiple. Like we've got a mining lottery function which is rewarding a different kind of economic activity.
02:50:20.038 - 02:50:35.594, Speaker A: But the third one is also, there's basically three actors. There's also the users, because the user transaction flows coming into the system are also a security function. Like if the users see anyone misbehaving, they can democratically vote transaction by transaction.
02:50:35.642 - 02:50:37.600, Speaker C: To switch to other.
02:50:38.050 - 02:51:27.694, Speaker A: Yeah, and I mean, in dynamic pay split, users can also start moving around the pay split. So it can be things like if the network comes under attack and it looks like someone's going to protect it, if it looks like it's a routing node in the dynamic version of Sado, the pay split can actually dynamically increase because everyone but the attacker is concerned about the attacker. Likewise, if you have centralization of mining, and we're really concerned about bitmain, the network can be like, we are more secure if we pay more for routing. And one of the really interesting things about this, I don't like going on, but I love Zeto. If you think about like Vitalik and then people are talking about the scalability trilemma. Well, the scalability trilemma says there's an optimal point of network spending for security decentralization and security decentralization and scaling. I think it is.
02:51:27.694 - 02:51:56.730, Speaker A: If you think about Sado and you think about the way that works, you realize that's entirely wrong because security is subjective to your position in the network. And what you can have in Sado is you can have a situation where moving the pay split to 0.4 provides an increase in decentralization and an increase in security and an increase in basically the throughput of the network.
02:51:59.230 - 02:52:00.038, Speaker C: Because you're.
02:52:00.054 - 02:52:36.706, Speaker A: Incentivizing, because we're concerned about miners attacking the network. If we're concerned about full nodes attacking the network, we can increase security by pushing things back. As soon as basically the security trilogy comes. It flows out of any network where you give all of the money to the block producer. If you do that, you've got the problem. In this situation, you don't, because you can think of this mining in some ways as if you pay miners more, the network becomes more expensive to attack. Up until the point the miners themselves become a threat.
02:52:36.706 - 02:52:54.246, Speaker A: If you move it down the network. If the miners are a threat, moving it down increases security. But it's also paying the nodes that are running the network, and it's paying routing nodes. It's increasing decentralization, and it's also making bandwidth cheaper because if the routing nodes.
02:52:54.278 - 02:52:55.260, Speaker C: Make more money.
02:52:57.390 - 02:53:34.600, Speaker A: So people don't think about that, it's partly because people are trapped in like the traditional blockchain world where we've decided to give all of the money to the person that produces the blocks. And we've decided that the problem is how do we make this process difficult and ungamable? And what Sado does. It says, well, look, that's not the problem. The problem is we know that you're spending money to produce blocks mining and staking. You're dressing up the fact it's money. And that's why those systems are vulnerable, because they're dealing with validators and all sorts of collusion within the network. They're not worried about the flow of fees in, which is what they should be worried about.
02:53:34.600 - 02:53:54.570, Speaker A: As soon as infuria monetizes, it's over. Sato says, look, that's the world we live in. It's just money. If we have this abstract system where it's just money, we can make it secure by preventing people from monopolizing. And the security challenge is different. Money makes it difficult. Regardless.
02:53:54.570 - 02:53:56.858, Speaker A: We just need to make sure that people can't.
02:53:57.034 - 02:53:58.320, Speaker C: Yeah, we need to.
02:54:00.850 - 02:54:02.990, Speaker A: Anyway, thank you for.
02:54:03.060 - 02:54:08.160, Speaker C: Yeah, thank you for explaining. Yeah, so good. Learned a lot.
02:54:09.570 - 02:54:10.542, Speaker B: All right. Okay.
02:54:10.596 - 02:54:13.140, Speaker A: Thank you. Thank, thank you for watching, too. Thanks.
