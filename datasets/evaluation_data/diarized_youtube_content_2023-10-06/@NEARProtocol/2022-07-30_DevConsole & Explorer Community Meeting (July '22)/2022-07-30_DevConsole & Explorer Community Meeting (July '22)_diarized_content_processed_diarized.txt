00:00:10.490 - 00:00:34.200, Speaker A: Welcome, welcome back everyone to another community meeting. This one is the dev console and explorer community meeting. Today we're going to be going over alerts and take another look at the upcoming activity screen on Explorer and some other updates with. This is Josh Gwentel from Dev. What's your official title again? You're the product manager for.
00:00:38.330 - 00:00:42.578, Speaker B: It's clunky right now. Yeah, it's product manager. Yeah, Dev console. And explore.
00:00:42.674 - 00:00:45.674, Speaker A: And explore. Okay, cool. I didn't know if it was officially those two.
00:00:45.712 - 00:00:45.962, Speaker B: Cool.
00:00:46.016 - 00:00:47.100, Speaker A: Well, yeah, take it.
00:00:47.710 - 00:01:09.538, Speaker B: Cool, cool. I will share my. Cool. Yeah. Like Josh mentioned, have a lot of cool stuff to talk about today. Also a lot to show rather than tell you, which is always really fun. And so, yeah, without further ado, let's just dive right into it.
00:01:09.538 - 00:02:04.962, Speaker B: So starting with the explorer, I have a couple of things to cover. So yes, well discussed last time, maybe even the last two meetings actually, that we're revamping a lot of the explore views, things that you're using every day. Right. The transaction screen, the account activity screens. We're adding support for showing collectibles and fungible tokens or NFTs on your account pages, which we'll take a look at in a minute. And so definitely encourage you to get involved in that by commenting on this public figma board here that we've got and also taking a look at some of these links here and then providing your feedback via GitHub. I will post these slides once this meeting is over on Twitter and then I know we'll post them where we usually do as well.
00:02:04.962 - 00:02:28.902, Speaker B: So everyone will be able to click on those. Cool. So there's two screens here that I can show you that we have like semi live kind of deployed. So the first one, the collectibles page, I reversed these labels actually. So the collectibles page actually should be the one that says preview. I'll change that before we post those slides. And that one is literally like a preview link generated in our GitHub.
00:02:28.902 - 00:03:08.774, Speaker B: Expect that one to not function very well, but you can at least click around and kind of see a view of that. So we'll look at that and then the fungible token one, that is the one that should actually be labeled beta because that one is live. It's just hidden behind a beta in the URL for the explorer. Pop over there. Cool. So starting with the fungible token screen, you can see if you remember from the Figma, the new activity screen has this nice tabbed interface here where you can see your activity, which is the transaction list that you're used to. But then we've got these additional tabs here.
00:03:08.774 - 00:03:56.978, Speaker B: So we've got tokens for fungible tokens, we've got collectibles here, keys, we've got access keys. Access was a big request, was just an easy way to see all of the keys associated with an account and then any lockups, any token lockups that are associated with this account as well. In this locked up tab tokens view here you can see the various tokens here. On the left hand side you can on the right we isolate transactions, associate these fungible tokens. So a really quick way to view all of your balances and also to view activity activity tokens. And of course you can click any of these and you'll go to either that contract or look at that, there we go. Or to that transaction.
00:03:56.978 - 00:04:35.186, Speaker B: If you click the ID here as well mentioned this one's in beta. So you actually saw like when we clicked staking that paras here it loaded now tokens as well. So you can go to this link, pop in your own address, and you'll see your fungible tokens appear there as well. And then the next one is the NFT or collectible screen right here. And so you can see you've got all of here, but it's not just a list, right? A lot of these are visuals. So we try to grab a preview of the where possible. Like I said, we'll preview one.
00:04:35.186 - 00:05:15.854, Speaker B: So pardon some of these images aren't loading images, but you can get an idea here definitely of where it's going between here and the Figma. So we've got a card for each NFT. If you click any of these, we pull some data here for you, the description, who the current owner is and then a little bit of the history, including when it was minted. Then you'll notice up here also we have the addition number if it exists, and then also the collection that it comes from. Actually from non fungible you can fungible. So this I'll also kind of note here for anyone viewing this page. This is a pattern we're going to continue to reuse.
00:05:15.854 - 00:05:29.400, Speaker B: So if you have any comments on this sidebar, definitely mention them because that'll apply to multiple screens like for example filtering on the transactions list. Things like that are going to utilize that sidebar as well.
00:05:29.930 - 00:05:35.110, Speaker A: One person had a question in the chat asking how you're pulling the addition number on the NFT.
00:05:37.370 - 00:05:52.330, Speaker B: Yeah, it's a good question. I'm not actually sure how it's happening technically. I think in this case, yeah, this one. Okay, so we aren't actually pulling the addition number. It's that in this case, the non fungible Ukraine tokens have the addition.
00:05:54.030 - 00:06:10.002, Speaker A: Okay. Okay, I see. Also your, your audio is kind of chopping in and out a little bit, so I'm not sure, not sure if there's anything you're able to do on that end, but yeah, it's getting kind of garbled for some of us.
00:06:10.136 - 00:06:16.214, Speaker B: Did it get slightly better just now? I did like, the camera thing where I muted and unmuted because that's worked for the video.
00:06:16.332 - 00:06:18.040, Speaker A: Yeah, that sentence worked.
00:06:19.530 - 00:06:19.942, Speaker B: Okay.
00:06:19.996 - 00:06:41.390, Speaker A: Weird, but yeah, everyone keep asking questions in the Q a as we go. Oh, I'm getting another question. How will this new UI show the storage size taken by this account and how much of the balance is used for storage? Thinking about devs who want to monitor increasing storage used for their deployed smart contracts?
00:06:43.090 - 00:07:10.440, Speaker B: Yeah, that is a good question. Let me actually show you. Oh, and I just realized I'm sharing a window. So let me pop into fig here because I will either be. And. Hold on. Actually, let me go back to my files here.
00:07:10.440 - 00:08:01.670, Speaker B: You're, you know what? They're things I won't waste everyone's time. Actually fumble through these. I'll do one of two things. I'll determine where that. Where played or at the. Right. Now, I'll make a note of that because that might be a big.
00:08:01.670 - 00:08:04.340, Speaker B: This account script.
00:08:06.600 - 00:08:08.150, Speaker A: Your audio is so bad.
00:08:08.680 - 00:08:12.180, Speaker B: Really? This is an unfortunate.
00:08:12.260 - 00:08:26.030, Speaker A: It's kind of weird. It's like cutting in and out and chopping back and forth. Yeah. I don't know if you have a different. I don't know if that's going to make a difference.
00:08:27.840 - 00:08:39.570, Speaker B: Let's see. There we go. Did that. No, that did not help at all.
00:08:40.660 - 00:08:42.050, Speaker A: Well, I don't know. I heard.
00:08:44.340 - 00:08:45.676, Speaker B: I stopped at that time purpose.
00:08:45.708 - 00:08:46.336, Speaker A: Oh, you did?
00:08:46.438 - 00:08:48.870, Speaker B: I did cut myself off after. Did that.
00:08:49.240 - 00:08:49.990, Speaker A: Okay.
00:08:50.840 - 00:08:54.004, Speaker B: Actually weird, but as you think.
00:08:54.042 - 00:09:01.528, Speaker A: Yeah, I think you might just have, like, network connection issues. Yeah. Try turning your video off. Maybe I'll try turning mine off and.
00:09:01.534 - 00:09:10.010, Speaker B: See if that works. Okay, there we go. Now it's actually better, isn't it?
00:09:11.180 - 00:09:12.836, Speaker A: Could be, yeah, possibly.
00:09:12.948 - 00:09:21.368, Speaker B: Let's see. It's this doc. I wanted to get rid of it before this call, but I wasn't able to because the entire computer crashes.
00:09:21.464 - 00:09:27.570, Speaker A: Cool. Maybe if you could talk about the storage aspect that you were kind of going over for a second.
00:09:27.940 - 00:10:02.010, Speaker B: Yes. Storage is either. I can't recall offhand where it is offhand. Will try to find that link and add it to the presentation, or that is potentially a big oversight on our part here. Only thinking of it really in the context of when text act deployed to an account. But you may want to see it even when it's just your account. So yeah, I'll have to think about that.
00:10:02.010 - 00:10:05.070, Speaker B: Okay, cool.
00:10:06.160 - 00:10:11.884, Speaker A: Yeah, maybe try turning your video off and see if that helps with your still doing it. Yeah, a little bit.
00:10:11.922 - 00:10:12.510, Speaker B: Yeah.
00:10:13.840 - 00:10:31.396, Speaker A: Okay, cool. All right, thanks everyone for bearing with our technical difficulties. But yeah, if you want to continue the presentation and yeah, feel free, everyone, to keep asking questions as we move along.
00:10:31.578 - 00:11:13.090, Speaker B: Yes, definitely. Cool. Okay, so yeah, that's those two pages. Like I said, the links are here in the presentation. And in fact, you know what, while we're all here, I'll flip flop these more clear on what's where. Yeah, so I'll post these, definitely check them out, give us your thoughts for sure. So next up for the explore, something that's been coming to our attention more and more and even came up the other day when I was talking to someone about Dev console our ecosystem statistics and displaying those in the Explorer, at least in some publicly accessible way.
00:11:13.090 - 00:12:10.284, Speaker B: So for those who don't know, the explorer does have should have just kept my presentation minimized. If you're here in the Explorer and you go to this Explorer menu, in the upper right hand corner, there's a charts and stats page right here. And this has various ecosystem gas, including totals, the fee over time, things like that. And then there's also some stats kind of on the validator or nodes page as well. But we've been getting more and more requests to see more data, richer data on these pages. And so just kind of throwing the question out there, what would you like to see on these pages if you need some inspiration? Some places we've looked at that definitely have rich stats covered are of course etherscan. If you go to their charts and statistics page, they've got numerous different reports there in different categories, things of that nature.
00:12:10.284 - 00:12:59.490, Speaker B: Some of those are only applicable to Ethereum, but some of them would translate over to near in a useful way. And then similarly on Solana beach, the particularly nice thing about what they've got going on is their validator display, which I've got in this screenshot here. So you can see they've got who the current leader is, they've got their various locations, the validators by location on a map, things of that nature. So a little bit easier to digest than our current list view on the validators page. So definitely give some thoughts and some things you might want to see on there and definitely let us know what you would like to see there because like I said, we've got a whole laundry list of things that could be potentially useful there, but prioritizing them definitely could use the community's help there. Cool.
00:13:00.280 - 00:13:13.300, Speaker A: Is there a place that people could leave this feedback? Like maybe a discussion in the Explorer repo or something? Is there a place where you're collecting what people want to see in the ecosystem stats section?
00:13:13.460 - 00:13:22.808, Speaker B: Yes, there is. Actually recently have started using one.
00:13:22.894 - 00:13:24.750, Speaker A: Drop that in the chat. That'd be awesome.
00:13:25.440 - 00:13:54.468, Speaker B: Yes, I do. Cool. So you'll see here the way Kenny works, just a quick overview for everyone, is there's lists of features here or of suggestions. You can of course make new ones and I encourage everyone to do that. But for existing ones or things even that we've put on here as roadmap items, map and upvote these and you can also comment on them as well. So if you click any of these, you can see leave a comment right there. This one specifically, I made this item new info for stats page.
00:13:54.468 - 00:14:08.904, Speaker B: So feel free to just pop in here and leave a comment and we'll go through these and we can respond things like that as well. So helps keep an open dialogue for everyone too. I'll come back and talk.
00:14:08.942 - 00:14:28.850, Speaker A: There's also a quick comment in chat that it'd be cool if that there would be a way in which developers are able to integrate statistics into their daps. Like a button or something that would link how users can actually retrieve this data themselves.
00:14:30.660 - 00:14:39.760, Speaker B: Oh, nice. Wait, so to be clear, do you mean like embedding some of the data? Like embedding a chart for example, or from the experience?
00:14:39.910 - 00:14:58.810, Speaker A: Yeah, please clarify if I'm getting your question wrong, but Ben says he gets a bunch of feedback from devs who all want to know how to get this data into their apps. And it would be a cool idea if next to each stats or graph we could have a button or something linking to how users could get the data themselves.
00:14:59.980 - 00:15:14.590, Speaker B: I see. Oh, cool. Yeah, like some specific index or instructions for those pieces of data. Oh, okay, cool. Yeah. In fact, right now.
00:15:18.160 - 00:15:41.990, Speaker A: He just followed up with just how to get a total transaction per day or some other data showed in the Explorer. Where does the info come from and how can people use it? Could be like a link of like embed this into your DaP or something like that. Gives you the snippet or something.
00:15:47.900 - 00:15:48.312, Speaker B: Cool.
00:15:48.366 - 00:15:49.716, Speaker A: Thanks Ben.
00:15:49.908 - 00:15:59.070, Speaker B: Yeah, definitely cool. Nice. And now that's in there too. If anyone else comments on that.
00:16:00.400 - 00:16:01.150, Speaker A: Cool.
00:16:01.680 - 00:16:36.024, Speaker B: Yeah, good stuff. Cool. And with that, yeah, I pasted the link to this in chat and with that, that's really everything on the Explorer update there. So yeah, I just wanted to hit on those new screens, talk a little bit about where we're going there with ecosystem stack, introduce the live roadmap here. So next up, dev console and very exciting updates here. So we're kind of on the road to Nearcon here with Devconsol. And so we're going to have a lot of great meaty milestone releases coming out.
00:16:36.024 - 00:17:32.970, Speaker B: If you were not at the previous community meeting we talked through, and I'll review again in this demo we talked through, the dashboard page that now has, speaking of stats, has many different statistics on it around your smart contracts. Things like monthly active users, retention, top users by amount of near transacted with your accounts, great things like that, 21 different turnkey visualizations, and looked at the new UI as well. So in this one we'll actually be looking at two different things. And the big one is definitely alerts. This one I'm so excited about. Ever since I talked about this feature as a future hypothetical thing at conferences over the last year or so, this is the one everyone comes up to me and wants to talk about afterwards. So I'm really excited to unveil this and actually show it to everyone.
00:17:32.970 - 00:18:25.288, Speaker B: I'll talk about the high points of that in a second. Then the other thing is near lake. So also, speaking of indexers, for those who don't know, near indexer framework is deprecated at this point, and we're focusing on near lake, which is our new way to build indexers. It's much easier. And you'll see in Devconsol we even provide convenient links to documentation and summarize a lot of the benefits of near lake right from within Devconsol in anticipation of greater integration in the future, which I'll talk more about once we get to that screen. So going back to alerts, so a couple things to highlight and then I'll just dive right into demoing it because it's really much better to just see it. So NV alert consists of really three main things, a target, a condition, and a destination.
00:18:25.288 - 00:19:08.696, Speaker B: And so a target is some sort of account that you want to receive an alert about. And we provided some flexible options here. So of course you could choose a contract you already have added to dev console, but you can also type in arbitrary addresses and you can even use wildcards as well. So a scenario where that might be useful is let's say your DAP uses a factory pattern, like thinking of paras or mint base. You've got username Mintbase near, for example, as your marketplace when you sign up. And so you may want to observe multiple versions of those contracts. And so the wildcard allows you to do that.
00:19:08.696 - 00:20:10.684, Speaker B: You could just observe like asterisk mintbase near for some sort of event or something. The next thing once you define a target is you have conditions as well, and there's six of them, successful and failed transactions. If an event has been logged, if a function has been called, and then two types of balance change, one by amount and that's in near, and then another one by a percentage, also the percentage of near, and then you choose a destination. So this is where that alert actually is calling out to. And so it could be something where the alert is the final product in a sense like Telegram, where you want to just receive the alert Dave or something like a webhook, which we offer because of its flexibility. So if you want to, let's say trigger a function from your server or send a push notification, if your DaP happens to be a mobile app or just on your website front end, you can do that as well very easily without having to hook up your own indexer or anything like that. Quick asterisk there.
00:20:10.684 - 00:21:10.460, Speaker B: While I'm talking about indexers, it's definitely an alert system, right? So you're not going to want to use this to use webhooks as a way to fill up your own index or something like set it to successful transaction and log every single webhook or something like that. Definitely more thinking for notifications, things of that nature. If you want to do any kind of like large scale downloading of transactions or something like that, building an indexer would definitely be the way to go. I know there's some talking about that internally, so I just kind of wanted to make that clear. And then the final thing to note here, you'll see this on the public roadmap as well. I continually refer to these alerts as momentary, and that's because these are from one transaction to the next. So in the future, actually on our roadmap we do tend to offer longer what I call observation timelines.
00:21:10.460 - 00:21:40.216, Speaker B: So you'll be able to do things like the balance changing over 8 hours or a day or things like that. But for now it's from one transaction to the next. Let's just dive in and take a look at it because it's actually quite a bit easier to just show than it is to tell you about. Cool. So, logged in. Here's my projects list. For those who aren't familiar, all I've actually done here is sign in.
00:21:40.216 - 00:22:35.304, Speaker B: If you didn't have a project yet, you project at this create screen here rather than seeing the project list where you can either make a blank project if you already have a DAP, or if you're building a Dap and you kind of know what you're doing, or you can go this tutorial route and walk through like our NFT marketplace tutorial from the documentation all from within the console and with interactivity as well. So kind of great if you are a beginner. But today we're going to click into an established project and in fact we'll click into this ref demo project I made here. So we land on the contract screen right here. And so I've got the V two ref farming contract added there. You can see some quick info about it, the account balance and the storage used, and then below that, the recent transactions. If I had multiple contracts added to this project, this would actually be like a zipped up list of recent transactions for both of the contracts.
00:22:35.304 - 00:23:03.590, Speaker B: That's why there's the name of it here. But in this case, I've just got b two farming ref on here as well. So alerts. The reason we're here, let's dive in. So I've got an alert here that I'll set up and then I also have, you can already see it was working a webhook site here to actually test it live so we can show the proof that it's actually working. So you can see these are old. The last time I demoed this was on 77.
00:23:03.590 - 00:23:42.780, Speaker B: So we'll pop in here. I do have this existing alert, but let's walk through making a new one just so you can see the whole thing. And then I'll just cancel it at the end and reactivate my existing alert. So as I mentioned here, you select a target, a condition, and a destination. Actually I should say destinations, because you can select multiple destinations. But so down here we click this and you see, like I mentioned, if you have added contracts to your project already, you have them suggested down here in this list. So we do have the V two farmingref near, but we could type, let's say we wanted all versions of oops, I'm off by one ref farming.
00:23:42.780 - 00:24:18.744, Speaker B: We could also do that as well. And then we could cover V one and V two and potentially any future versions if they continue to use that naming pattern. But yeah, any account, sub account also works as well. But in this case we do want to observe the farming contract and then conditions. So there's a couple down here and I'll kind of walk through them because some of them are super quick and some need a little more explanation. So, successful and failed transaction here, this is as you'd expect, really not much to configure. You're going to get an alert when there's a successful transaction.
00:24:18.744 - 00:24:58.372, Speaker B: That payload is going to include the transaction hash and it will only fire if that transaction is successful. With this failed transaction, same deal, it'll fire when there is a failed transaction. You'll get the transaction hash and you can go from there. Event logged. So event logged and function called, both have some special things to mention about them. So in parallel, the devtools team is working on an ABI standard for near. So for those who don't know, that stands for application binary interface.
00:24:58.372 - 00:25:55.736, Speaker B: And really all that means in this case is it's just a manifest file. Or the part that's useful for us here is it's a manifest file that contains all of the functions on that contract along with their function signatures and methods to deserialize and serialize any JSON potentially, or like arbitrary or custom data types in that contract. And so that's going to allow us to do things like also check for the data included in the event for the function call. We could actually incorporate passed to that function for a little more fine grained alerting as well. But for now we are able to still offer these. It's just a little bit more manual work and a little less filtering. So like for event log, we can trigger an event based on this, but you'll have to fill in the event name standard and version here or actually trigger it.
00:25:55.736 - 00:26:33.370, Speaker B: You don't necessarily have to fill in all three. And then similarly for a function called, you can fill in the function name here as well. So like previously had used NFT approve here, and then you'll get an alert anytime that particular function is called on that contract. Another useful thing with the ABI actually, is that this will be able to also have a suggestion down here as well since we'll be able to decode all the function names. Let's go back over here. And you know what, I actually will set this one up because I have a successful transaction alert already. So let's set up a failed one and actually use it.
00:26:33.370 - 00:27:01.356, Speaker B: And so down here you've got your destinations. You can actually go back to the other screen there is a list of destinations that you can view separately from this to configure them. But you can also do it in line right here. So you can edit them over here with the pencil icon. Of course you can also could add a new destination from this screen. So looking at that first you can see we've got the options that we talked about. Telegram here, also a webhook.
00:27:01.356 - 00:27:22.372, Speaker B: And then we're working on email as well. Kind of a note there. I'll put the canny link to dev console in here as well here. Definitely comment on any new or other destinations that you want as well. Once again, kind of like the stats page. We're definitely aware of a bunch of useful potential destinations. Email being one sentry things for air reporting.
00:27:22.372 - 00:28:03.264, Speaker B: In addition to slack, there's many different relevant options here and so really it's just a matter of prioritizing them really at this point. So in this case though, I'll cancel this and we'll look a little bit deeper at this. So yeah, for the webhook, like I mentioned, this is of course just going to send the payload to this URL. And actually I'll check that we're using the same six oh three C 5603 C five. Okay cool. That's definitely the webhook site destination. You can also give these custom names.
00:28:03.264 - 00:28:42.256, Speaker B: So I just called it webhook destination. But you can have multiple destinations of the same type. So if you're sending this to multiple webhook destinations you'll probably want to name them accordingly for extra security. We also include this secret in the header as well so you can confirm that it's coming from Pagoda dev console, not from anyone else. And of course you can also delete similarly here for telegram for Tommy. I won't go through and set the whole thing up but we provide some nice instructions here to get a telegram bot up and running. Excuse me, to get telegram hooked up.
00:28:42.256 - 00:29:08.664, Speaker B: And then the dev console bot will then send you a message anytime your alert fires as well. But so in this case we'll keep on the webhook destination. Actually create this one. Cool. And I don't think there will probably be many failed transactions. So let's re the successful one which brings up another thing. So alerts now.
00:29:08.664 - 00:29:41.536, Speaker B: So an alert. What can we actually do to manage it? So if we pop in here we can of course edit the name. We automatically give a gim to the alert. So you can notice like I didn't name this, this was just called, let me go back one because you watched me make it. I didn't name this right? You didn't see me edit the name, but we automatically called it the trigger type and then the contract. So failed transaction in v two farming ref near. And then there's also a toggle switch over here on the right, which I was going to look at in transaction here.
00:29:41.536 - 00:30:06.236, Speaker B: And this is pause switch. So if you just want to turn an alert off temporarily, you're able to do that via this pause here, and then you can reactivate it whenever you want. So I'll turn that back on. We'll let that percolate a little bit. See how actively people are farming on ref right now. I imagine something will come in here rating on that. I'll pop over here just to show you that.
00:30:06.236 - 00:30:33.430, Speaker B: Yes, you can manage the destination separately license. So we've got the webhook destination. It's fully configured, no issues there. Telegram, like you saw, I started it, I created the destination, but I didn't actually configure telegram. So we give you a little helpful indicator here as well to remind you to actually finish configuring that. And you can of course destination even from this even. Cool.
00:30:33.430 - 00:31:30.888, Speaker B: So while that is working there, which now I'm realizing I actually hope that webhook site maybe this has timed out, actually, it could potentially may not respond, but we'll see if it doesn't in the next five minutes. I'll get a new server. The other thing to take a look at, yes, I mentioned was near lake. So yes, near Lake is the easier, more reliable way to build an indexer using near. So like we actually mentioned kind of with those Explorer stats, this is definitely what you'll want to use to grab any more of that longer form data or any of those larger queries. And so this page helpfully summarizes kind of the benefits of near lake and then also provides you with some tutorials here as well, in addition to a link out to actually the full documentation site right here, which is nearindexers IO if you want to check this out. So that goes from the ground up there.
00:31:30.888 - 00:32:23.240, Speaker B: In the future, this will be even more integrated into console. So like for example, your legs built on S three storage, which means right now you're going through AWS like your existing AWS account for the billing and things like that. But we'll make that a much more seamless experience by integrating that into dev console eventually as well. And then while I'm here, a quick review talking about stats for those who weren't here last time. So the previous release we introduced this Litix screen. And so this, like I said, provides 21 different pre configured metrics and visualizations here. And so before I dive into those, I'll just quickly show you at the top here, you've got the dates here.
00:32:23.240 - 00:32:43.116, Speaker B: So in this case, excuse me, we're looking at everything this year. So this is everything after this is actually the last two years. This is everything from January 2021 onward. We've got our contracts here. You can add multiple ones. You don't actually have to stay constrained to the ones on the contract screen. You can also remove them as well.
00:32:43.116 - 00:33:30.632, Speaker B: And actually, if you remove all of them, this is why I mentioned this on the, mention this discussion, you actually get some ecosystem stats, some of which actually are not on the explorer yet. So if you want some inspiration for stats, you may want to see, you could take as well and suggest those on the explorer, Cammy. But for now, let me go back here to, there we go to the ref contract. And actually let's make this table a little more reasonable. Maybe just this year. Cool. So yeah, some fascinating stuff here since the beginning of the year, 130,000,000 transactions for the ref farming contract.
00:33:30.632 - 00:34:09.412, Speaker B: That's pretty awesome. So up here, yeah, you've got some kind of quick info tiles here, things that are just numeric in value along with any trend data or change data down here as well. So you've got total number of transactions, balances, things of that nature as well, those kind of top line stats. Then down here you've got more of a visualization of your transaction versus users. And then this starts to get into the really exciting stuff. Some of these more computed properties here. So you've got your number of new users, broke user, but also your user retention.
00:34:09.412 - 00:34:36.156, Speaker B: So how often after people transact with your contract are they coming back and transacting again? Other nice stats here, your monthly, weekly and daily active users. Also your ratios here as well. Really nice for measuring retention. On top of this chart up here, volumes and balances. This is where I was mentioning. You've even got your top users here. User, this is really useful.
00:34:36.156 - 00:35:24.172, Speaker B: If you're running a marketplace or something, you want to identify your identity active or at least like your whales maybe if you're in ref finance. And this goes pretty deep. So you can go, you can see this is the first 2000 accounts here. So it's definitely everything you need is in there, down to the bottom here we have some gas statistics. So we've got the daily, you got gas used and then also the cumulative amount of gas used as well by this contract or contracts, if you have multiple ones in here as well. So where this is going in the future, a little bit of styling work, clearly this is in here. This is a collaboration between us and Datrix on something called Wombi.
00:35:24.172 - 00:35:59.532, Speaker B: And so this is like iframed in. We're working on theming this to actually match dev console and be a little more integrated. But more excitingly than that, two things on the roadmap that you'll see in that canny board as well, and I encourage you to comment on. So integration of off chain analytics as well. So if you want to collect off chain data in your DAP, you'll be able to actually combine that with the on chain data in this dashboard. And then finally just might be where this led in your head, you'll also be able to build your own dashboard as well. So like I mentioned, this one's turnkey, which is great.
00:35:59.532 - 00:36:22.544, Speaker B: It's pre configured with the 21 different metrics and visualizations. But of course, eventually, and especially with that off chain data, you're going to want to be able to build your own dashboard tile by tile. And so we'll be offering that as well. And let's pop back over here and see if. Hey, look at that. Cool. The server did stay active.
00:36:22.544 - 00:37:01.760, Speaker B: Good for you, webhook site. And so we can see here, let's see if any of these were failed. Actually looks like these are all successful. I figured wrath farming has been around for quite a while. So you can see here the payload that we get from the alert. So we the receipt ID that actually triggered this and then the transaction as well. So receipt ID for a successful transaction maybe doesn't matter as much, but for something like a function call or an event being fired, multiple receipts can exist in a single transaction and often do.
00:37:01.760 - 00:37:38.584, Speaker B: And so you'll get multiple alerts for that as well. That's kind of anticipating a question here, but yeah, the alerts are actually in a per receipt basis. So let's say someone mints two tokens in the same transaction, or a cross contract call mints that token in that same transaction. You'll get an alert for both of those function calls that you're observing, so nothing gets lost there. You can also see that bearer token there as well. Really nice. On the, let's see, I talked about longer alert timelines.
00:37:38.584 - 00:38:38.736, Speaker B: I'm just going through my head, making sure I didn't miss any cool future stuff that's coming up. Talked about webflows, talked about additional destinations talked a little bit about the ABI. One kind of thing to mention here, this is coming up in a future release, but that ABI also enables greater or easier contract interaction. So part of what we'll be using that for is actually generating forms to interact with your contracts right from within dev console. Between that, and also the ability to automatically add your contracts to Devconsol from the CLI once you deploy them. That leads to this really nice integration testing loop where you can deploy your contracts on your local environment. They show up in dev console, you execute the functions in the forms, you can see the results in the Explorer views within dev console and then redeploy again potentially if you need to make any changes.
00:38:38.736 - 00:39:12.676, Speaker B: Also great for quick demos as well, since essentially by generating a contract form, we're kind of like generating a little front end for you as well. So just a little kind of tease there of what's going on in the future. Yeah, definitely dive into alerts. I've already gotten some great feedback about them, but yeah, dive in, test them yourself. This will be available. We are targeting end of the last week of July for the release. That's going to include alerts.
00:39:12.676 - 00:39:40.688, Speaker B: I should mention that I'm kind of apologizing, kind of acting like you could just dive in and try it now. That's not. But yeah, definitely hope you enjoyed this. Definitely comment on it. There are things in the canny which is right here, and I will paste into the chat as well. Yes, definitely comment on that. Very excited about that.
00:39:40.688 - 00:40:13.164, Speaker B: I think alerts are going to be huge. Really saves you a lot of time. Now, if you don't need to actually index any data and you're just using it for something like this, you don't have to set up anything anymore. You'll just be able to click or just be in this interface and get the data that you need. I'll show you one last thing. Kind of in canny while I'm, while I'm in here, you can actually quickly switch between our products on here as well. So I got in here first.
00:40:13.164 - 00:40:27.648, Speaker B: So I set up dev console and explore. But be on the lookout. Other teams will be set a team their products in here as well. You'll see things from data platform. You'll see potential in here. Devtools, definitely. Yeah.
00:40:27.648 - 00:40:54.520, Speaker B: So be on the lookout for that. Really convenient to really switch between these. And then also in the future we'll make it so your dev console account will have you automatically logged into canny as well. And that is really the long and short of it. So, yeah, I'm definitely down to take any questions or maybe some have popped up that I have not answered.
00:40:56.300 - 00:41:15.200, Speaker A: Awesome. Yeah, thanks so much, Josh, for going through all that. Yeah, we have a couple of questions. One, does the event webhook support custom events or just standardized events like NFT or fungible token events?
00:41:17.300 - 00:41:18.976, Speaker C: Can I take a word here?
00:41:19.158 - 00:41:19.890, Speaker B: Yeah.
00:41:21.220 - 00:41:49.710, Speaker C: I'm sorry for not joining in the very beginning. Yes. So regarding the events, we will support all the standard event JSON events, which means NFT FT, and also any extensions that still follow the event JSON nap that is out there. So yes, to custom events as well.
00:41:51.600 - 00:42:26.360, Speaker A: Cool. Awesome. Also, this shows pedagas. Is this configurable dynamic based on contract activity? I forget where you were showing the PETA gas portion of it. If a contract uses 900 terragas every day, will it show up as 0.9 PETA with a graph use terragas?
00:42:28.540 - 00:42:30.120, Speaker B: Yeah, right here. This one?
00:42:30.190 - 00:42:31.160, Speaker A: Yeah, the graph.
00:42:32.300 - 00:42:56.176, Speaker B: Yeah. Currently this is not customizable. This will be eventually, which actually, this is a good point. I wonder if we could. I was going to say, well, yeah, when you can build your own dashboard, you'll be able to change this. But I wonder, we might be able to make some things like that configurable before actually getting to that stage. So I'll make a note about that because that is a good point.
00:42:56.176 - 00:43:01.650, Speaker B: It's like stuck in pedagas essentially right now, which may not be practical for all.
00:43:04.740 - 00:43:28.350, Speaker A: Cool. Another question and yeah, feel free anyone, if you have any questions about anything we've discussed or anything in general regarding dev council or Explorer, please feel free to drop them in chat or in the Q a button below. Yeah, we have one question with that q a button and someone's asking, will pagoda turn into a subscription service in the future?
00:43:32.560 - 00:44:05.530, Speaker B: Depends on the mean. Yes, but there's a lot of open question marks there. I will say that we're not focused on generating revenue at this point. We're focused on delivering value to users and to the ecosystem. But I will say that we'll be very transparent about anything that will be charged for in the future. Essentially, we don't want a scenario where you're using something in dev console, you come to rely on it, and then we just randomly say that you now need to pay us money.
00:44:07.020 - 00:44:39.292, Speaker A: Would it be fair to say that Devconsol will always be a free platform or a free tool to use? But at some point there may be maybe rate limiting or something where if you want it to work past X amount of. I don't know. There will be certain limitations that might be implemented in the future, but yeah, I don't know. Is that a fair statement?
00:44:39.436 - 00:45:01.210, Speaker B: Yes, and I'm glad you said that actually, because I didn't really hit that point at all specifically. Yeah, no, totally. It would be freemium for sure. There always be a free tier of some kind. But yeah, you're correct that there's a lot of infrastructure running under their hood. It does have to be sustainable. So yeah, we're going to have to put in something in place for higher usage for sure.
00:45:01.210 - 00:45:05.710, Speaker B: Cool. But yeah, there will always be some kind of free plan though. Cool.
00:45:06.080 - 00:45:46.420, Speaker A: Awesome. I don't see any other questions. Please feel free to ask them. Maybe it's a good just to clarify a statement that you made earlier, there was a little bit of chat in the background. I know this can be uploaded to YouTube, but you said something about near indexer framework being deprecated in favor of Lake framework, but it's actually not going to be deprecated. It's actually what powers near lake framework. Maybe frol you could kind of clarify that question or clarify that statement.
00:45:46.580 - 00:46:42.452, Speaker C: Definitely. So near indexer framework is part of near core and it will stay there. It's evolving with the protocol. It's living creature part of the near core, so I don't expect it ever being deprecated for real. The communication probably was gravitating towards that. We will recommend to use lake ecosystem more because it's more lightweight, easier to use, and in most of the cases it does exactly what people are seeking for and asking for before. Because to run indexer framework you need to actually maintain the whole New York core node and it's quite heavy and compared to lake framework and requires regular upgrades.
00:46:42.452 - 00:48:13.032, Speaker C: Once near core has a new protocol version with Lake Ecosystem, you can implement your index service in a number of languages, I mean programming languages. We started with rust, then JS and typescript followed. And the announcement that we haven't put yet because it's very early on, is that Python version of near Lake framework is already in the final stages. Right now. Lake ecosystem is definitely vibrant and it helps a lot for the app developers to build hassle free indexers compared to the indexer framework. So I think indexer framework would be there for those who evolve further and want to build true decentralized platform, and they will depend on peer to peer protocol of near protocol. But for the onboarding, I believe near lake ecosystem is just our go to go to recommendation solution for now.
00:48:13.032 - 00:48:19.800, Speaker C: So that was probably the miscommunication on that part. I hope it's much clearer.
00:48:20.620 - 00:49:16.972, Speaker A: Yeah, totally. And actually seems like we might actually have the near API or enhance API rest server or rest endpoints that's pretty user friendly. And that might actually be the very first solution that people might want to check out once that gets live. I know there's like a beta that's out for it or proof of concept, but yeah, that might be something that's like the easiest for developers to use and probably get most of the information they're looking for. And then the next step might be near a lake if they actually need something a little bit more robust and then the further the progression would be near an indexer framework that's underneath everything. But yeah, thanks so much for. For clarifying that point.
00:49:16.972 - 00:49:58.090, Speaker A: And yeah, if you're interested in anything data platform or. Sorry. Yeah, data platform wise, check out our community meeting which is the data platform meeting last Thursday of the month. Will there be a YouTube learning resource for dev console? There are a lot of good resources even on near university, but nothing coming from pagoda for devs. Thinking about people doing NCD that want a quick on ramp to making projects. Yeah, I believe Josh is actually working with Dorian right now with a video. I'm not sure.
00:49:58.090 - 00:50:03.668, Speaker A: I think it's just like an overview of it. Josh, do you want to talk a little bit more about that?
00:50:03.854 - 00:50:34.020, Speaker B: Yeah, definitely. So yeah, we have talked about both of those things, so definitely. We're currently working on the overview video right now, which there will be an overview video, excuse me, that accompanies all of our major releases and this one with alerts is definitely one of those. But we did also talk about more learning focused type of videos as well, especially as we continue adding features to Devconsol. So stay tuned. That is definitely on our radar.
00:50:35.560 - 00:50:49.976, Speaker A: Cool. Awesome. Thank you. Any other questions anyone has, please feel free. We'll give it another minute or so. If you have a question, please drop it.
00:50:50.078 - 00:51:31.770, Speaker C: There is one that I see at least, I'm not sure, maybe it's not appearing our site. So the question is whether there are any plans on near lake to have RV integration and so far we haven't considered that, but we'll be definitely on the look. But I believe we will first think and consider using Makina which is based on near core implementation for the solution for storage. So that's probably our go to solution that we'll use.
00:51:32.460 - 00:51:36.650, Speaker B: I hope that answers, but it's not.
00:51:37.900 - 00:51:43.290, Speaker C: Under immediate roadmap for now.
00:51:44.300 - 00:51:45.370, Speaker B: Sorry guys.
00:51:46.460 - 00:51:55.070, Speaker A: Cool. So any data on Machina and you said no right now, correct?
00:51:55.700 - 00:51:56.112, Speaker B: Yeah.
00:51:56.166 - 00:52:03.970, Speaker C: So I'm not part of that team who is working on it, so unfortunately I'm not the right person to ask.
00:52:05.300 - 00:52:31.400, Speaker A: Cool. All right. Yeah. Again, if you have any further questions, please drop them in the chat. We'll give another minute or so for anyone to ask a question, otherwise we can wrap up. But yeah, no, lots of good things today. Lots of features being released in Devconsol.
00:52:31.400 - 00:52:37.630, Speaker A: A lot of progress. Being really, really excited about what's to come for sure.
00:52:40.480 - 00:52:41.550, Speaker B: Yeah, definitely.
00:52:42.400 - 00:52:45.980, Speaker A: Any integration for Devconsol and Octopus.
00:52:48.260 - 00:53:10.260, Speaker B: Interesting. I mean, I will say, just personally, I would love for dev console to interact with other protocols like that. That would be really cool. But I will say that's not on the app concretely currently, but I do have other protocol support as a thing, like hypotheticals.
00:53:11.260 - 00:53:11.912, Speaker A: Cool.
00:53:12.046 - 00:53:17.640, Speaker B: It's good to know, though. I'll note that though, that like octopus specifically there was requested. Thank you, Mattius.
00:53:18.780 - 00:53:54.564, Speaker A: Cool. Well, unless we have another. Yeah, thanks. Thanks so much, Josh, for the presentation. Sorry, sorry for all the technical difficulties we had with Josh's letter, but I think turning off the video actually fixed it because you weren't choppy for the rest of the presentation. So, yeah, thanks everyone for being so patient and working with us. And yeah, please join us next month.
00:53:54.564 - 00:54:35.390, Speaker A: Yeah, we'll be returning to our regular schedule of the first Thursday of the month, will be Devconsul and explore and yeah, look forward to chat with you. If you have any questions or comments, please reach out to us in discord near chat. And yeah, the engineering channels in there also office hours daily. If you go to, um, you can talk to anybody on the Devrel team and ask any questions and we'll try to find the answers for you. But yeah, with that, thanks so much, everyone. And yeah, we'll see you next time.
00:54:37.200 - 00:54:43.920, Speaker B: Thanks everyone. Have a good one. Bye.
