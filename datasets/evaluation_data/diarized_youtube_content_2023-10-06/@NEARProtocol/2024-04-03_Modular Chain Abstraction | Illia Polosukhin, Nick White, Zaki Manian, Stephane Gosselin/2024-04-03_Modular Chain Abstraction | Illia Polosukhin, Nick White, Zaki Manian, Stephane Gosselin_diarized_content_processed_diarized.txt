00:00:01.480 - 00:00:51.900, Speaker A: Sweet. I think we're still waiting on our last speaker, but I figured we may as well start since it's two minutes past the hour. So welcome, everyone. We're doing another Twitter space, or, I don't know, maybe we should call it x space nowadays. But the topic of today's space is modular chain abstraction. And we have a really amazing lineup of guests who have been deep in the space for many, many years and have, I'm sure, a lot of wisdom to share. And the high level is that in a world of modular blockchains, with thousands, if not in the future, millions of roll ups, we're going to have a lot of complexity to deal with.
00:00:51.900 - 00:01:28.734, Speaker A: And this idea of chain abstraction is the most promising sort of, I would say, field that promises to solve this. The problems of fragmentation across this potentially very large number of different roll ups and chains that everyone will be interacting with. So that's what we're here to talk about today. Why don't we go through a round of introductions from all of our different speakers? Whoever wants to kick us off, go for it.
00:01:29.994 - 00:01:40.174, Speaker B: I can kick us off. Hey, everyone. Amelia, co founder of near and great to be here. Great to dive into the chain abstraction topic.
00:01:46.814 - 00:01:48.394, Speaker A: Zaki. Stefan.
00:01:52.094 - 00:02:27.674, Speaker C: All right, I'll jump in. Hey, everyone, I'm Stefan. So why am I here? I was previously founder at Flashbots. I now founded something called Frontier Research, and we are working with a variety of different industry members on the topic of cake. So, chain abstraction, key elements. We put together a working group, and the goal is to drive some level of standardizations across the industry on both EVM and non VM chains to be able to help create a better cross chain experience. So excited to be here.
00:02:31.134 - 00:02:34.174, Speaker A: Zucky, is your mic working now?
00:02:34.214 - 00:03:23.404, Speaker D: Yes, my audio is unbugged. All right, I'll just do quickly introduce myself. Zaki Munyin, co founder of Sommelier. I think, like, the general theme of my involvement here is I think we have finally gotten to a place where, through a variety of different ways, blockchains are scalable. After ten years of working on blockchains, we have some ways of making low fees, high volume use cases happen. But now there's like, a bit. The remaining technical challenge is how do we make blockchains usable? And I think that there are lots of people that I've been working with for many years who all have different pieces of technology and have built different kinds of things with similia.
00:03:23.404 - 00:03:49.924, Speaker D: We tried to build, you know, we've tried to build a chain abstracted app for accessing yield and I think there's. So there, you know, this many chain, like, I think we, you know, we could have sovereignty, we can have utility, we could have Defi, we could have meme coins, but we could also have usability if we just bring the right pieces together. And I think the chain abstraction community is sort of leading the charge on this.
00:03:50.744 - 00:03:53.524, Speaker A: So you're saying that we can have our cake and eat it, too.
00:03:54.424 - 00:04:03.980, Speaker D: That that is the, that is the. That is possible with the right meb optimizations. The cake exist.
00:04:04.052 - 00:04:05.944, Speaker B: Right ingredients. Right ingredients.
00:04:07.924 - 00:04:43.844, Speaker A: Awesome. So why don't we start out then with talking about what's the origin of this problem of fragmentation? I mean, this is, as you said, we're entering a world of lots of different chains. We finally have scalability solutions that seem to be working. And yet once, now that we've solved scalability, it's led to this other problem, which is fragmentation. So why don't we talk about the origins of fragmentation and then how chain abstraction is a response to this problem?
00:04:51.184 - 00:06:14.094, Speaker B: Well, let's not all go all at once. I can kick it off. We, as Zaki mentioned, have, you know, I would say like a explosion of solutions, right? That kind of over past five years, matured of how do we want to scale blockchain, right? This is, you know, different layer ones. We then had, you know, obviously app chain approach, and we have now roll ups that introducing kind of, you know, a new dimension of how you can scale blockchains and how you can kind of launch new blockchains in kind of way easier way. Right? And Celestia have been driving a lot of that as well. And so all that introduced so much block space, introduced ton of address space, but also introduced new wallets, introduce kind of a ton of different tools, a lot of kind of applications that functionally are the same but live on different chains. And so all of this creates kind of fragmentation and complexity that with kind of new roll up that's launching probably every hour now, is just increasing kind of demand on the user to understand how they're interacting with web3.
00:06:14.094 - 00:07:43.714, Speaker B: You know, the example is you go to a metamask, you know, your drop down of networks you can connect to. Mine probably already is longer than screen, you know, plus I have Kepler wallet, obviously, Nir wallet, you know, Solana wallet, bitcoin wallet. And so just navigating all that complexity is becoming very unruly. And so the primary idea here is how do we provide an experience that is more direct to what user really wants, which is use some cool app buy a new NFT that just launched or interact with some other blockchain app and not need to figure out the navigation of the infrastructure, which bridge to go, what gas token to get, how exactly the route between where your assets are and what you want should be constructed and what is all the failure cases that can happen between. And so that's really kind of, again, this movement is bringing, is in the modular world, in the app chain world, in world of multiple layer ones that are gaining massive adoption. How do we really build experience that moves all of that in the background and allows users to freely navigate web3?
00:07:45.174 - 00:08:42.394, Speaker C: So I have a bit of a special take on this. How did we get here? I joined the Ethereum space in 2017 and I heard stories of what it was like to be in the Ethereum community before. There used to be this sort of dream that every user of Ethereum would run a geth node locally and then they would download dapps, they would host it on swarm, and they would basically run those apps locally and they would speak with their local Ethereum node, sign transactions and propagate them to the network. There would be one chain, one client, and it would be super simple to use and get censorship resistant. We get all the good things that we want to get out of blockchains. That is very different than the world that we are in today. I don't know if you guys have seen this thing called the transaction supply network, but there's a lot, a lot of hosted pieces, services run by a bunch of different providers that are helping bring transactions on chain.
00:08:42.394 - 00:09:15.518, Speaker C: Yet the toolkit and the accounts that we use for being able to communicate with every single component of this and do permissioning and all these things have not changed. We're still in the same framework and mindset as we were in 2014, when the Ethereum protocol was starting to be worked on. I think one tidbit that's interesting to, to remember is the fact that chain id was not introduced as like a parameter inside of the Ethereum transaction like signing format until the 2016 Dao hard fork.
00:09:15.646 - 00:09:16.150, Speaker A: Right?
00:09:16.262 - 00:10:43.104, Speaker C: Like before, then there wasn't even the concept of there being multiple different execution environments that a transaction could be routed to. And so we've sort of as a space with the beauty of the Ethereum community, what it is grown in a bunch of diverse directions and sort of organically, but without the ability of having an integrated sort of view of what we want the future to look like. And the users are feeling this extremely. If you look at the numbers right now between Ethereum ecosystem and all the different evms versus the Solana ecosystem, all the retail users are going to Solana because they don't have this fragmented user experience. The model there was actually designed to work the way that it's working now, as opposed to be designed to work in a complete different architecture to where we are today. I heard it described in this way, which I thought was quite powerful description for people who are more technically minded. What the Ethereum and roll up ecosystem is asking users to do today is essentially to run a Kubernetes cluster in their brain and try to like, manage scheduling their jobs across all these different execution environments, manage how their state is being done, and like manually bridge state from one place to another and like, resources, compute resources from one place to another to make sure that they're able to get the job that they want to get done.
00:10:43.104 - 00:10:49.944, Speaker C: And that's just not tenable. It's just not a place that we can stay as an industry if we want this roll up ecosystem to actually succeed.
00:10:54.424 - 00:11:06.992, Speaker A: I kind of want to respond to that, but I want to let Zucky chime in too. Oh, it looks like Zucky is.
00:11:07.088 - 00:11:11.204, Speaker B: Yeah, Zucky is fighting with and spaces at the same time.
00:11:11.904 - 00:11:28.744, Speaker A: So, Stefan, I mean, kind of what I'm hearing you say is that, you know, the way that these systems have been designed did not take into consideration that there would be multiple chains in the beginning. But now that we're kind of in, in that situation.
00:11:29.804 - 00:11:30.844, Speaker D: Can people hear me?
00:11:30.924 - 00:11:32.828, Speaker A: Yeah, I guess the infrastructure hasn't really.
00:11:32.996 - 00:11:34.264, Speaker D: Okay, awesome.
00:11:36.284 - 00:11:40.424, Speaker A: Oh, there you are, Zucky. Go for it.
00:11:40.844 - 00:11:43.144, Speaker D: Yeah. Yeah. Okay.
00:11:54.264 - 00:12:11.744, Speaker A: Uh oh. Is it just me or are other people having trouble hearing.
00:12:11.824 - 00:12:12.856, Speaker B: Yeah, we all have in trouble.
00:12:12.920 - 00:12:13.108, Speaker D: Yeah.
00:12:13.136 - 00:12:20.944, Speaker B: Yeah. I think Zaki's Internet is not cooperative. One day we have a more consistent network.
00:12:23.564 - 00:13:10.032, Speaker A: Okay, well, anyway, back to what I was saying to Stefan, but the thing. And so you were saying that the current sort of ethereum ecosystem was not really designed in a way that enables like a good user experience in this sort of fragmented situation. But monolithic chains like Solana that can avoid fragmentation do have a good user experience, at least for now. But don't you think that fundamentally, I mean, any single, basically the only way to scale blockchains is to have multiple state machines. You're not, we're never going to have one single world computer that's unified. Like that original vision of Ethereum was never going to work to begin with. So maybe, I guess what I'm saying is that the.
00:13:10.032 - 00:13:22.724, Speaker A: Sure, having a bigger, more performant single chain is good, but it doesn't solve. It still isn't. It's not the end game and doesn't solve, like you're always going to run into this problem, essentially.
00:13:23.464 - 00:13:53.644, Speaker C: Yeah, well, I'm not the scalability guy. I think my career in the Ethereum space and the blockchain space has explicitly been to avoid working on scalability. And I always bonded off to someone else as a problem to solve. So I don't really have an opinion on here. I'm just observing where the users are. And objectively, there's like ten times more retail users on solana than there is on Ethereum. And all the evms combined today, ten times more retail users and retail volume.
00:13:53.644 - 00:14:07.324, Speaker C: And so to me that's the observation that I'm making. And I can only theorize that the reason for that is terrible ux, because we have the block space scalability with l two s now. And so it's definitely not cost.
00:14:09.824 - 00:14:10.712, Speaker A: That's fair enough.
00:14:10.808 - 00:14:11.232, Speaker D: Go ahead.
00:14:11.288 - 00:14:49.116, Speaker B: Yeah, I can respond. Maybe. I think, I mean, we just had the panel where we discussed this, right? I think any single block space will get filled, just by definition, because it's an auction. And so if it's not filled, there is a lower price, and so people will fill it until there's a high price. And so it's an equilibrium of kind of how valuable is changing that state is. And so then you kind of go from there. And so generally speaking, there's always will be demand for more block space one way or another.
00:14:49.116 - 00:15:47.634, Speaker B: And I think, you know, one way or another, sharding be that in a single chain or through kind of roll ups, parachains, subnets, whatever people love to call them, is a way to continue increasing the block space and have the variety and flexibility that developers want to have. That's where we are. Market forces clearly show that this is where we're moving. So we do need to provide a level of abstraction for all the users across all of these experiences. I think like the vision of a single atomic state machine that will cover all use cases. I don't think even Solana, I mean, even people in Solana agree that this is not feasible to have everything running on one state machine. So we do have this challenge of multi chain one or another.
00:15:47.634 - 00:15:52.294, Speaker B: And so now how do I fix that so we can dig into that?
00:15:55.464 - 00:15:59.144, Speaker A: Zucky, maybe your issue is solved.
00:15:59.184 - 00:16:01.536, Speaker D: Yes, maybe. Maybe I'm. Maybe I'm back.
00:16:01.680 - 00:16:07.804, Speaker A: You sound good. We're so back. Anyway, give us, tell us your thoughts.
00:16:09.424 - 00:17:02.654, Speaker D: So I think the core aspect of it is developers of applications today are facing like. So we've talked a lot about the challenges the users face, but sort of sitting between the sort of blockchains and the users is a bunch of developers. And those developers are trying to build something that users want to engage in. They need to figure out how to onboard people, they need to figure out how to persistently maintain relationships. People have to be able to come back to their app, people have to use their app. And I think one of the real challenges is what pieces of infrastructure that have been offered to developers are all very one chain centric. Here is this wallet API.
00:17:02.654 - 00:17:25.089, Speaker D: It works in one ecosystem with one set of wallets. Maybe there's something about bridging and liquidity routing in an ecosystem. Maybe there isn't. Maybe you can. Maybe there are ways of moving between sourcing users who have assets on one or two places, or one or two centralized exchanges. It's all been very limiting. And I think that there's like.
00:17:25.089 - 00:18:19.480, Speaker D: Now needs to be a movement. Just like the big movements in blockchain that I've been a part of are the transition to proof of stake, which allowed us to have this abundance of block space. The beginnings of native bridging with IBC and native Interop, the modular architecture contributed to all of those. And all of that has been about, ok, we can provide a basic security framework that developers to build and we can give them an abundance of block space, but now we have to give them the tools and the infrastructure so that they can onboard users and that users aren't, you know, sort of trapped in one. You know, whether they're bitcoin users, whether they're ethereum users, whether they're Solana users, whether they're cosmos users. They actually just can use everything. There shouldn't be a cosmos user or a Solana user or a bitcoin user.
00:18:19.480 - 00:18:23.844, Speaker D: There's just a user, and you can use everything that web3 has to offer.
00:18:26.784 - 00:18:27.804, Speaker B: Totally agree.
00:18:30.024 - 00:18:49.494, Speaker A: So we've been talking like more. More abstractly, but what are the specific. When we're talking about fragmentation, what are the actual specific pain points that people feel like? We've kind of been mentioning them, but let's actually enumerate them more specifically, whether they're users or developers.
00:18:54.394 - 00:19:48.364, Speaker C: I can take a crack at this. I think probably the main one is just that users have to think about where their state is. I don't think that users want to think about this. I don't think that the application developers have the tools to take that away from the users. What users want to think about is what do I want to get done? What's the desired outcome that I want? And then it should be the job of the application to do whatever it can to get the job done. And then it's the job of the execution environments to settle those things, to make sure that those things take place and can't be reverted. Right.
00:19:48.364 - 00:20:49.524, Speaker C: And so in order for users to be able to simply express their desired outcome, we need this entire thing called intents. And we need some kind of way for expressing in a sort of declarative way, what we want the output of the interaction to be. We need secure ways for which those intents get fulfilled, using some counterparties, using some routing, all the components that have been sort of mentioned. Once we have, I think, those primitives and we sort of propagate them, then the user can simply say, I want to have xy token in exchange for my ETH Sol near. And then they don't need to worry about where the fulfillment and the execution happens because the application developer is able to make those decisions for the user.
00:20:55.664 - 00:22:23.730, Speaker B: Yeah, maybe just to add another example is right now we're trying to get more users off kind of a pure seed phrase, controlled wallets, which are extremely dangerous. People keep copy pasting their seed phrase into the places they shouldn't. And to a more smart contract kind of account, abstracted wallets. Now if you imagine you want to do that across, you know, a dozen chains, some of which have a very different account model, right? You know, you have bitcoin, you have kind of evms, you have near like that becomes extremely complicated. You have now kind of complexity of different wallet providers, they support different features, and you now need to figure out how all of those things are kind of working. And if something happens, let's say you do want to rotate your private key, you want to add a new device, like you need to go and do all of this across all those providers and potentially even specific chains. And so the solution here is really have one account that's able to navigate the other chains, and that account is where you're managing all of your access, your social recovery, your two fa, and whatever other security features and usability features you want to have, and then that can propagate across the whole web.
00:22:23.730 - 00:22:30.494, Speaker B: Three, and you're not pretty much manually need to go and figure out and fix everything.
00:22:33.274 - 00:23:42.914, Speaker C: So something that we're looking. Sorry Zaki, something that we're actively working on with the, with the cake working group is this account question. Several people have tried to build smart contract wallets with account abstraction. And there's always been this huge amount of difficulty in getting these things adopted. Like, I worked on some of the first smart contracts that had universal deployments across all the evms and allowed for third party relayers to bring the transactions to the chain and abstract away the gas. I worked on that in 2019, and so the technology was already available in 2019, and it's always been available. And there's been like tens if not hundreds of different teams that have, you know, tried to pitch this to vc's to build out the new type of account that's, you know, going to be account, have full account abstraction and be a smart contract wallet that has all the nice features that everyone wants, but the reality is just they've never picked up in demand and adoption.
00:23:42.914 - 00:24:29.394, Speaker C: Because I believe there's a coordination problem in getting people to switch from one type of account to another. Everyone is sort of tied into the same JSON RPC API based account definition that was defined in 2014 because everyone else still is. And so it just has humongous network effects. And we are sort of in this inadequate equilibria where. Where there isn't a way for people to switch out of it. So what we're trying to do with this, this cake working group, is create a shelling point around helping the entire community switch from one inadequate equilibria to a better equilibria. We can actually develop those better, those better user experiences.
00:24:29.394 - 00:24:47.614, Speaker C: And I firmly believe that the only way to do that is with sort of ecosystem wide alignment. Because if we don't do this approach, we will just further fragment the space by developing all kinds of different account models that aren't necessarily compatible with each other.
00:24:51.474 - 00:25:57.350, Speaker D: I was just going to say, I think that there's a continuity that exists, so there's. And I think chain abstraction is sort of trying to address all of these problems, which is, or like, there are challenges with usability of the sort of modern multi chain ecosystem that are best solved through new account models. There are problems that are best solved by allowing users to delegate some of their usage to agents. So you could have, you know, sommelier can be thought of as like an agent that goes out and earns yield for you, so you don't have to deal. So you could just, you know, keep all of your state on one chain, keep all of your interactions on one chain, but there's these agents who will go out and deal with bridging and the intents, and then, you know, there are times where you want to be able to delegate what you want to do to a market, because you can very precisely specify exactly what you want to, you want to hold this asset on this chain and you want to trade for this bet, and you don't want to do more than this. You know, you don't want it to cost at least this much. You know, those kinds of cases you could delegate out to markets.
00:25:57.350 - 00:26:38.554, Speaker D: And so what we want, what, what chain abstraction really needs to enable users to do is to have sort of standardized ways of extending the power of their accounts so that they work the way that they think they should across a multi chain environment. And some, you know, different things, like, you know, a user should not have to bridge their asset. A user should be able to just say, I want to swap. I want to swap this and I want to swap that. And maybe there's some bridging that happens and maybe there's some market makers involved, but that can be all done abstracted away from the user. And the user doesn't need to actually know or see. They can just be like, I have eat, I want bitcoin, I have tether, I want an ordinal.
00:26:38.554 - 00:26:42.554, Speaker D: I have an ordinal. I want to trade it for a bad kid.
00:26:43.454 - 00:27:08.674, Speaker C: How does that, this is such a good point, and such a subtle one too, that people don't realize, like, the cake framework has so many different components, but like, really all chain abstraction is, is an expressive permissioning layer. Like the icing on the cake that makes the entire cake work is an expressive permissioning layer that allows for users to delegate permissions across all of these different environments.
00:27:12.734 - 00:28:36.874, Speaker A: So I'm hearing the common theme on all of this is we want to abstract away as much complexity from the users as possible. And in your cake blog post, Stefan, you wrote, crypto users knowing which roll up optimism or base they're interacting with is equivalent to web two users knowing which cloud provider AWS or GCP they are interacting with. And I guess I bring that up because to me, I think there's truth in that. But then, on the flip side of the coin, if we abstract away too much from the users, there are certain things that the users should know and care about. Like, for example, maybe the security or the risks or the trust assumptions they're making when interacting with these chains. And so how do we, where's the balance? And how do we, for example, when I sign something saying, hey, make this trade on my behalf, or do these things on my behalf, how do I know as a user that the protocols that they're going to interact with are actually secure or have some kind of base level of guarantees that I feel safe about? And doesn't the user need to be informed about these risks? How do we balance between those two things?
00:28:37.594 - 00:29:16.074, Speaker C: Well, when you go to, like@gmail.com, do you like, ask yourself, oh, is this using like, a secure email protocol behind the scenes? Like, no, you go to@gmail.com because it's an application that you trust that's built by a company that you trust. And so you delegate all of the decisions around security to that application. And there's no reason for web3 to be any different, right? The user is going to go to applications and like, the applications are going to be able to manage the trust that the user put in them to make sure that they make good decisions about the tools that they use behind the scenes.
00:29:16.374 - 00:31:05.850, Speaker B: I mean, even to add, like, this is already happening, right? I don't think there is, you know, a lot of users who actually reading the smart contract code and, you know, compiling the wallet from source code, making sure it works, right. They kind of trust that wallet will do a lot of the security heavy lifting for them. And then we see wallets starting to actually take that more responsibly and starting to add additional security features, preventing user from, for example, trading with malicious contracts and interacting with other kind of not clear origin websites, et cetera. So I think generally the responsibility of the user is kind of, as Stefan said, picking a counterparty that they can trust in and then figuring out how to delegate the authority over set of assets or set of interactions. And then now from a developer of that, for example, wallet, the thing is like, if you now need to maintain, you know, access to hundreds of roll ups, you know, you need to maintain and figure out how to pay gas fees, et cetera, on all of this, you know, like, that's a lot of work. And that, you know, and you can, like, your maintenance costs kind of like skyrocket. And so creating a protocol that allows to now the wallet itself to kind of delegate that authority and have very clear, specific security parameters around execution, for example, of user intent that it either fails to execute or it executes correctly, for example, for doing a trade, is extremely important.
00:31:05.850 - 00:32:01.410, Speaker B: I think one interesting idea that I like to mention is right now, let's say there's a bonk token or whatever new bold token on base those tokens kind of security is defined by that chain. It's defined by that roll up. And if something happens with that roll up, the social consensus, or was that chain social consensus? They can revive it, they can roll back, they can restart, you can do all of these things. And this keeps happening now more frequently than before. What you definitely don't want is bridging out to maybe even more secure chain. Like imagine you send bonk to Ethereum, but Solana, for example, rolled back because of whatever reasons. Now you have inconsistent state.
00:32:01.410 - 00:33:06.304, Speaker B: So you do want to actually have the assets where they issued, because the security of that asset itself kind of link to the issuance network. And that's one of the kind of, I would say important aspects of chain abstraction is although we abstract the exact routing and complexity, we want to keep the assets where they are and just allow user to have a very easy way to specify that they want to get something like this without versus current model where user is in a specific chain. And now the only way to make it usable for them is to bring all the assets to that chain and bring everything there, and kind of create lots and lots of additional security kind of counterparties that users not even aware. So I would say kind of the layers here are handling a lot of the security questions so that users don't have to.
00:33:11.664 - 00:33:13.404, Speaker A: Zucky, do you have any thoughts on this?
00:33:17.544 - 00:34:20.830, Speaker D: So I think that, you know, there's a, I think this, this basic idea is, you know, there's reput. Like, there are people who build user facing services, you know, and those people, you know, will hopefully find that, that they have robust economic incentives to take care of trust and safety throughout their ecosystem. And we do see this, right. A lot of pressure on security and interop comes from things like asset issuers like circle or wallets, who often have a lot of questions, exchanges, et cetera. When they integrate a service, they ask a lot of questions about security. Um, and so, as you know, these chain abstraction pieces start coming together and they start getting integrated into, you know, the metamasks and the trust wallets and the coinbase wallets of the world. I think people, they're gonna people those in those places.
00:34:20.830 - 00:35:09.434, Speaker D: A lot of questions about, you know, the security of your interop protocol, et cetera, or, you know, you know, daos that are choosing what to get, what gets integrated into front ends of big user facing apps. All of those places are going to be really good places to ask questions about security. And the worst possible place is to give, is to enter into a scenario where instead you as a user, need to figure out which bridge counterparties are safe, what assets are safe to hold on a Dex, and we've just seen many billions of dollars of user harm come from the fact that users don't have an easy way of reasoning about all of this.
00:35:11.614 - 00:36:01.210, Speaker A: That's a very good point. To me, the way that the analogy with web two and Gmail breaks down is just that in blockchain and web3, there could be potentially a lot of money on the line. So I feel like there's just a little bit more, you know, it's more necessary to take security seriously than, oh, you know, I don't know, someone saw my email that I didn't want them to see. I think a lot of people are less concerned about that than like, oh, well, you know, a few thousand dollars vanished from my wallet because, you know, I just trusted this. I don't know, this interface that I was using. So I think that there's something along those lines where I think it's just slightly. Not quite, I don't think you can map it one to one per se, and.
00:36:01.210 - 00:37:01.194, Speaker A: But anyway, I was also thinking about how account, or just like chain abstraction, interacts with value capture in the stack. Because kind of what I'm hearing is that whether, whether it's the goal or not of chain abstraction, it does seem to sort of commoditize aspects of the infrastructure layer, and therefore makes me think that maybe certain aspects of infrastructure just won't actually capture as much value as people might think if they were operating in this worldview where chains won't be abstracted away from users. If the infrastructure doesn't actually have a direct relationship to users, then why should it capture value in the first place? So how do you guys think about chain attraction impacting value capture?
00:37:12.654 - 00:37:13.794, Speaker B: Go ahead, Becky.
00:37:14.434 - 00:38:09.514, Speaker D: So I think it should be relatively obvious that in the long run, the most valuable parts of blockchain are the ones that are closest to the sort of order flow generated by the user you could think of. So the most valuable business in web two was Google Adwords. What is Google Adwords capturing? It's capturing a kind of order flow, right? Like what people type in the search bar, which is all their wants, hopes, desires. And, like, some of those orders are really valuable. Like, I'm about to buy a house, I'm looking for a divorce lawyer. And some of those orders are those search terms are much less valuable. Like, you know, how do I make this particular python script work? How do I turn on my, you know, how do I restart my iPhone? These are so.
00:38:09.514 - 00:39:07.304, Speaker D: And I think Web three will be a very similar thing where if you are closer to a user's decision about which mem coin to buy, there's a lot more opportunities to extract value. And I think if you're relatively far away from that, I think right now there has been a bunch of a network of like, chain specific interveniaries that capture a lot of those values. Like the Ethereum, MeV supply chain, L, two sequencers, RPC providers. All of those places have been places where value is captured. But if we build chain abstracted apps, those apps actually are in a very privileged position, potentially to create, capture, share value with their users that unfiltered organic farm to table order flow creates.
00:39:12.484 - 00:40:27.174, Speaker B: Yeah, I would add maybe that usually there's kind of a smile curve of value capture. So things that are closest to the user and things that are furthest from the user are the ones that capture value. And so the closest to the users, like I said, the apps, the gateways, the super apps, the platforms that actually are allowing user to interact, find, discover experiences. And then the kind of lower stack is the settlement execution. Kind of the pieces that are storing the value and kind of securing it and ensuring that it's kind of consistent and moving the hardest bits of the workflow. And the example in web two, it's been Facebook and Google on the user side, and Nvidia and kind of other hardware and companies that are capturing a lot of the heavyweight part of the value in web two.
00:40:34.674 - 00:40:36.174, Speaker A: Stefan, do you have any thoughts?
00:40:39.034 - 00:41:19.214, Speaker C: No, not really. I'm much more interested in the value that gets unlocked from having ten abstraction than the value that gets captured. For me, Web three never fulfilled its potential. And like, I joined this space because I wanted global coordination mechanisms that made it easier for people to trust each other and innovate and like, improve the future of humanity. And I think what we have right now is global casino that makes it easier for people to speculate on shitcoins. And so I'm much more interested about how do we actually unlock the value and the promise of web3 and blockchains than how do we actually split the, split the pie?
00:41:23.034 - 00:42:07.008, Speaker A: Very fair, and I think we're all in agreement with that. I just think it's interesting to. I think that the way that people extrapolate from today towards to the end game is actually very kind of. It assumes that a lot of the dynamics that we have today will be present in that endgame. And I think chain abstraction is something that really changes a lot of the base assumptions that you'd make. Barry. I saw Barry from Skip the other day tweet something that was saying day by day, it's becoming less important where you build as what you build.
00:42:07.008 - 00:43:09.718, Speaker A: I think that's a powerful way to say that right now. It's like, oh, well, what chain are you launching your dapp on? Because that's where liquidity and the users are and all that. And I think at some point in the future, users and liquidity will be so fluid across any chain. I mean, if chain abstraction is successful that it will no longer really matter and everything will be sort of like, as Zucky once said, kind of like execution will be, or like state will be sort of commodified or very, very fluid. So anyway, I just find that interesting. So, Stefan, I guess, what is the value that you see getting created by chain abstraction? And would you say that it is the most important thing to be working on at this moment in time in terms of helping crypto reach its full potential?
00:43:09.886 - 00:44:17.194, Speaker C: Oh, yeah, oh, for sure. I can maybe think of, like, one other thing which is like, how do you prevent, like, crypto from being taken over by the AI? But let's just put that aside and say that, like, this is the most exciting time to be working in web3 by far. Like, no question asked. Because we have the block space, scalability, we're able to launch all of these different application specific roll offs, change, blah, blah, blah, and actually create applications that the users don't need to know that they're interfacing with the blockchain because it doesn't cost $200 to be able to do anything. And so if we want that to be the case, if we want web3 applications to be developed, we need to solve the user experience problem. So that's these amazing application developers with like great ideas of social things or gaming things or like all these different use cases that everyone's been chilling but no one's actually used can take place. Like, we need to solve the chain of structure problem.
00:44:17.194 - 00:44:21.254, Speaker C: So, yeah, the most important problem, the most exciting time to be working in web3.
00:44:22.474 - 00:45:51.334, Speaker B: Yeah, I would second that, I think. I mean, as we were all starting, like trying to solve, like near started actually trying to use blockchain, we wanted to, you know, use it to pay people for work, for data crowdsourcing, to trade AI. And the challenge we were facing was exactly, this is like the users needed to figure out how to install extensions and, you know, funded from a centralized exchange to start earning, which is like, the opposite is like, you know, you come to work and this, the first thing they ask you is to pay, you know, so that they actually will pay you the salary. So, but now we have the tooling we have the infrastructure, we have, you know, meta transactions, we have the layers, we have kind of all the pieces that we need. And so now it's actually time, I think, to build the applications because I think like a lot of the chain abstraction tooling is also here. And now it's more about working closely with applications to really deliver that and experience and fix whatever is not working in the tooling based on that feedback. And so, yeah, I'm inviting everyone to build applications and then come to us and we'll help fix whatever's not working to make sure your experience and your user's experience is as smooth as humanly possible and better than web two because we can actually deliver.
00:45:51.334 - 00:46:22.694, Speaker B: We had that use stripe, the web two payment processor and switch to near because it's cheaper, because it's for microtransactions. Actually, blockchain can be cheaper than web two solutions. And so payment solutions. And so, like, we have now the value, we have now the infra. So yeah, let's, let's, you know, I'm encouraging everyone to build apps and you know, let's, let's bring the now even more users and even more experiences together to the web3.
00:46:30.434 - 00:47:25.778, Speaker A: So it also sounds, though, that like chain abstraction kind of hinges on the, I mean, the word abstraction itself, right, is about standards. And I think in order to have a sort of like, coordination layer that encompasses all these different chains and applications, there's going to be a need for standards basically to be established. And it makes me think of. And I know you're talking about this sort of the beginning, Stephan, but it makes me think about that XKCD comic where they're like, you know, situation, there are 14 competing standards. And then, you know, these two characters, like, oh, my God, there's 14 standards. We need to, like, you know, unify them. And then the next frame is, oh, then now there are 15 competing standards.
00:47:25.778 - 00:47:33.498, Speaker A: So how. I mean, I know that, I guess that's the goal of cake, is essentially to try to unify everything.
00:47:33.546 - 00:48:30.152, Speaker C: But it just seems like one. Go ahead, I'll add one meme layer. You know, that meme of like the minions with GRu where it's like the infinite, like replicating, you know, meme, it's the same thing with chain abstraction. You know, we have all these now chain abstraction approaches. And the question is like, how do we abstract the way all the chain abstraction approaches? And then how do we abstract the way all the chain of traction approaches? Abstract the way all the chain of traction approaches? Abstract the trains? And this is like an infinite rabbit hole that we can go down. And so, you know, this is, this is a problem like the way that capitalism works and the way that all the different teams that are working on these problems work is they have individual incentives based off of being a company, having their token, having their own community, their own beliefs of the world, and how this problem needs to be solved. And so the problem is a coordination problem.
00:48:30.152 - 00:49:09.814, Speaker C: It's about getting all these people to agree and use a single definition of what we actually want to achieve and coordinate around using a single. I would sort of present it as a standard for permissioning, but really, like a single framework. And the intent behind the cake framework and the cake working group is to provide the venue of conversation between all these different teams, coordinate around something that is obviously going to be mutually beneficial for everyone involved.
00:49:15.674 - 00:49:17.294, Speaker A: Yeah, it's not an easy task.
00:49:18.554 - 00:49:34.828, Speaker B: Yeah, I think maybe to add here. I think, I mean, standardization is great, and we're all striving for that. I think the opportunity here is to create something that's, the experience is so much better that people are just flocking to it.
00:49:34.876 - 00:49:35.084, Speaker D: Right.
00:49:35.124 - 00:50:18.770, Speaker B: That's from my perspective, like, as a product builder, the, when you. When we see actual experience that people are, you know, holy shit, this is smooth, right? It solves my problems. Like, that's. That's when, you know, people just shared with friends, they, you know, everybody is piling in and you kind of see this explosion of usage. We had this example with a wallet inside telegram, and it grew to 4 million users in two months. We need to get to that level of experience and applications that are truly easy to use and onboard to, and they offer all of the flexibility that people want. We have another one, which is DAB.
00:50:18.770 - 00:50:55.114, Speaker B: DAB, which allows to transact across 14 different L2s and 150 different smart contracts all in one application, all in one front end. You can see all your portfolio across all 14 l two s. Those are examples again. They grew to 75,000 users. All of those examples are of something that you can present to a user and start seeing the growth. And you can still see again, as I said, users will come back and tell you what doesn't work. And we need to continue shipping improvements on all that.
00:50:55.114 - 00:51:24.354, Speaker B: But now, as applications with truly chain abstract applications, we can have this feedback loop, and then through that, we can then feedback that to standardization and work as a group of, hey, how do we do standardization around intents? How do we do standardization around permissioning? To make sure that more and more participants can join and kind of provide better user experience to this end user products.
00:51:29.574 - 00:52:05.074, Speaker A: That makes a ton of sense. And I don't know, I'm kind of getting the impression that while we all might believe in a modular chain future, it sounds like chain abstraction leads to a monolithic super app interface to all these chains. Do you think this makes it a winner take all dynamic for whatever this interface is that the users all converge on?
00:52:07.654 - 00:52:12.474, Speaker C: Would you consider JSON RPC API monolithic super app?
00:52:13.594 - 00:52:14.694, Speaker A: Definitely not.
00:52:16.474 - 00:52:17.894, Speaker C: I think it's the same thing.
00:52:19.874 - 00:53:29.514, Speaker D: Yeah. The only thing I would all I would add on top of that, right, is there are always going to be like special properties to different chains, right? Like there will be chains that give you privacy, there will be chains that give you that like are better, you know, that have certain assets on it that don't exist in other chains. There will change where your bad kids live. This isn't about eliminating what makes every sovereign, modular chain unique and special. But what it is, is saying is that when you build something unique and special, you don't have to boil the ocean. Attract all of these users to your one specific magical chain API in order to actually show off what is unique and special about your chain. Ideally it just comes down to as an application builder, you have a set of APIs you implement that tell a bunch of super apps how to interface with your chain, and now suddenly you pop up as another option in the App Store.
00:53:29.514 - 00:53:45.784, Speaker D: And as you market what is unique and special about your chain, users are like, I can with very low barrier to entry. Now try that out. Route liquidity from existing sources into that chain. Take advantage of whatever is unique and special and exciting about your blockchain.
00:53:49.364 - 00:53:53.504, Speaker A: Stefan, did you want to elaborate more on the JSON RPC point?
00:53:57.324 - 00:54:35.204, Speaker C: I think Zaki covered it well. For this to win, it has to be an interface and not a product that gets distributed. And the interface needs to be expressive enough such that people can pick the product that they want to use behind it. And everyone will have their time in the light. Everyone will have a fair shot at building the best component of the cake that is the most used. And there will be winners and there will be losers. But as a whole, we only win if we are able to coordinate around a new interface.
00:54:39.944 - 00:55:42.120, Speaker A: So not, not to bring things back to value capture, that's a dirty word, but it's something that Zucky mentioned at the beginning of this was he said we can have our cake and eat it too, but it depends on essentially the MeV tooling or I can't remember specifically what you said, but you were saying something about Mev playing an important role and whether or not these systems can work and live up to their promise. I'm curious what that is, because it sounds like a pretty important thing to consider when designing these things. If we don't, I mean, Mev, it seems like something that's just totally inevitable and kind of like just inherent in blockchains. And so if we don't solve that aspect of this, then maybe chain abstraction won't actually unlock the value that Stefan was talking about.
00:55:42.152 - 00:55:48.994, Speaker C: Oh, I love this question. I want to dive deep on this with Zaki, actually. What's the role of MeV in chain abstraction?
00:55:51.654 - 00:57:36.604, Speaker D: I think that there's a bunch of different answers to that question. Right? One is, you know, sort of cross domain, cross chain, like the fact that a user is originating some part of a value flow on one chain and ending up with value flow on another chain. You know, this creates. So I think one of the reasons why so many people who are working on chain abstraction have spent time working in the MEV space is what you discover in the MEV space is that there's this giant workforce of very, very sophisticated economic actors that use blockchains in a way that no ordinary user ever would, that they are keeping track of the variation between on chain prices and centralized exchange prices on the order of milliseconds that they're picking, helping pick what are the most profitable transactions to improve. Then the question is, you're like, oh, these people exist? Well, okay, right now they're doing something that maybe not super value. It does not create a lot of economic surplus for the ecosystem. But what if they could? What if all of these sophisticated actors that are out there could actually be lubricating the paths between different users? You then start saying, what if, instead of having a user interact with the bridge, they interact with an intense framework, and a sophisticated actor uses the bridge to bridge liquidity under the hood, but the user doesn't have to agree with it.
00:57:36.604 - 00:58:26.174, Speaker D: You might get something that looks like a cross protocol. What if, you know, what if instead of having to have a separate account on every other chain, you could originate your intents, and there will be a network of relayers that broadcast your transaction and execute them on a variety of different chains and maybe pay for your gas? Because they're capturing me be along the way, they're capturing some value from that order flow. You know, this, this is a question of, you know, it, it is this question that like, is like, can we recruit this network of, of super sophisticated users of blockchains into sort of value creating user assisting agents rather than pure value extractors.
00:58:29.234 - 00:58:30.134, Speaker C: Amen.
00:58:32.334 - 00:59:39.624, Speaker B: Yeah, I would agree. I think that kind of transitioning away from people pretty much parasiting on kind of the order, like because they're like intercepting the transaction and transitioning more to the user tells that they want to achieve this action and somebody goes and figures out the most optimal way to do it and gets kind of a, a piece of that. I mean, that was the idea behind, for example, Robinhood, which dropped all the trading fees for the end user because they figured out how to pretty much sell the order flow to even more sophisticated actors on the other side, but offering way better experience to the end user. And so I think similar thing will start happening here where actually the fees for the user will go down because a more and more sophisticated approaches will be developed and similar things like cow swap and other existing intent based swaps. But you can expand that beyond just pure transactions.
00:59:44.684 - 01:00:14.414, Speaker A: Yeah, I remember a while ago talking about intents with, with Yuzaki, and you were saying how intents can turn toxic order flow into sort of like, I don't know, something a lot more positive and incentive aligned and not extractive, but actually a positive thing for the end user. And so I think there's a lot of truth in that and it makes me optimistic. I want to go ahead.
01:00:15.318 - 01:00:48.934, Speaker C: I want to ask and the why, the how question, how. So I think there is this potential for intermediaries to add value to end users. But the kind of entire history of blockchain is to try to cut out these intermediaries that try to add value to users and tradfi. So the question is how, how is adding these intermediaries in web3 going to be different than adding these intermediaries in web two?
01:00:51.114 - 01:02:06.864, Speaker B: But I think from my perspective, it's the, in general, for me, web3 is the ability to kind of switch between providers at any level of the stack without much switching cost, or ideally zero switching cost. Be that I can switch between rpcs, I can switch between wallets, you can switch between block producers. And so similarly here, being able to switch between who is your solver, who provides you with the best execution flow compared to traditionally, you go to charge Schwab, for example, and only char Schwab is executing your orders and they can charge whatever they want, but you don't actually like open it up to open market and then getting the best trade. So I think that's really the, like, you know, we're moving away from this walled gardens, which are prevalent in traditional finance, where you need to interact with like a specific counterparty. They will, you know, kyc you, they'll enable you to transact, and then in turn they can charge whatever the fee. And you don't want to go and like, shop around in other tools because it's so complicated and cumbersome that there is no, like, market pressure as well.
01:02:08.364 - 01:02:11.904, Speaker C: One of the are we really headed in a different direction, though, with web3?
01:02:12.724 - 01:02:26.344, Speaker D: I'm not convinced I have this. Okay, so one of the things that was. So there was like a time in my life where I was selling blockchains to banks and.
01:02:26.734 - 01:02:27.714, Speaker B: I'm sorry.
01:02:28.294 - 01:02:33.422, Speaker C: Well, it got me to the learning opportunity. Yeah.
01:02:33.558 - 01:03:31.538, Speaker D: It finally got me to the. To a conviction around why banks were never going to adopt blockchains, and not in the way, not in the private blockchain ways that they did. You know, they might be forced into it by market forces and, you know, if they were forced into it, it would be some version of interoperable with public chain infrastructure. But like, why is that? The biggest source of power that all the intermediaries have in Tradfi is that you can't see the system of record. And that's also true in web, too. You don't have your email that exists in Gmail, exists in this Google spanner database, that you have no ability to access the underlying data. And, you know, if you own stock, you know, and it's sitting in your fidelity account or your Schwab account, like, you don't have any independent access to that system of record.
01:03:31.538 - 01:04:29.834, Speaker D: It's entirely so when, you know, when you have a fidelity account or a Schwab account, it ops. You monolithically consume a whole bunch of other services associated with that around how orders are executed and traded. You know, you have to sort of go through that. They're chosen things because you don't have access to the underlying system of record and no one else and someone new has to, cannot easily spin up that. They have to kind of build everything from scratch, rebuild everything from scratch. And I do think that this concept that cryptocurrency has of these open, publicly readable, publicly writable ledgers act as a pretty significant bulwark against enshrining any sort of intermediaries in the system. Yes, there will be periods of time when intermediaries become dominant when someone is ten or 100 x better than everyone else in the market.
01:04:29.834 - 01:04:50.374, Speaker D: But your ability to sort of create huge barriers is actually a lot harder in web3. And I think that is, you know, fundamental and structural. And I do think that is the reason why it's worth building these systems that sort of migrate people from spatfi to web3.
01:04:52.194 - 01:04:53.014, Speaker C: Legibility.
01:04:58.754 - 01:04:59.506, Speaker A: Legibility.
01:04:59.650 - 01:05:08.794, Speaker D: Legibility gets you a lot. Yeah, legibility gets you a lot. It is, it is of an incredibly powerful property.
01:05:09.094 - 01:05:25.754, Speaker C: Do you think that remains as we shift to more and more orchestration off chain, like where the fulfillment is happening in these, like other layers, where there's these dark pools with all the market makers that are fulfilling these intents and these rfqs? Do we keep legibility?
01:05:27.534 - 01:05:49.504, Speaker B: Well, we should have more, like the intent order book should be unchained. That allows to have a lot more legibility and a lot of competition because, yeah, if you keep it off chain, then whoever, you know, whichever server you send it to now is able to pretty much front run it or censor it or do whatever they want with it.
01:05:49.884 - 01:06:23.584, Speaker C: One thing I realize and come to learn about these mev systems is there's a fundamental tension between protecting the user and making the system legible. So when we talk about protecting the user, we talk about front running protection, avoiding leaking data that the user creates two counterparties that have an asymmetric advantage in using that data. But that is a fundamental tension with making the system legible to anyone to be able to audit and see what's happening.
01:06:25.824 - 01:06:57.076, Speaker B: Yeah, I mean, I think, like, everything is solvable with enough, you know, cryptography and kind of desire to do that. Right. It's just the simpler solution. Right? Like, hey, we'll just post the transactions into share at b two b network and it's going to be fine. That is, you know, where, like, yes, now it's easy to front run it. Right. You can have, okay, well, we'll encrypt the transaction, and then you need to have a group to decrypt it.
01:06:57.076 - 01:07:39.524, Speaker B: And now you already have pre determined order, or you can have other postconditions, but, like, you need to do more work pretty much, and add extra complexity to have some of this user protecting privacy and kind of protections. And I think the challenge is like, it requires extra work, it requires extra maintenance, and so, like, it needs to be worth it. Right. And I think early on in the blockchain space, it just wasn't worth it. As we're getting more and more kind of economy shifted, you know, into this, I think it will become pretty fundamental that we need to roll all of this out.
01:07:42.624 - 01:07:45.324, Speaker C: Do we have that magic cryptography stuff already?
01:07:45.764 - 01:09:08.814, Speaker B: Yeah, I mean, you can have threshold signatures to decrypt, for example, like encrypted mempool transactions. You can have the delay function where the sequencer commits to order before they can start, pretty much unrolling the, the time lock. You can have ZK for privacy, for example, you only post that you're going to pay the transaction fee to the relayer and then, but relayer doesn't know who you are and just relay your transactions on other chains. So there's a disconnect between your core root account and your kind of remote accounts through chain signatures. So you, we can have all of this kind of pieces added it just like they're not the default right now. And so it's important for us to start thinking about it and adding and rolling this out. But I agree with you that there's a general, let's just get something out that's legible, or let's roll something out that's controlled by a single party, which is always a better experience in the beginning than decentralized option.
01:09:08.814 - 01:09:27.614, Speaker B: And so there is like a kind of like a hill you need to climb from both sides, right? There's like a decentralized legible but not user protecting, and there is a centralized user protecting, but then ends up being not legible. And so climbing the hill is really important.
01:09:29.893 - 01:09:30.833, Speaker C: Makes sense.
01:09:34.933 - 01:09:49.633, Speaker A: So we've covered a lot already. I'm curious if you guys have any sort of like big picture takeaways or any topics that you wanted to touch on before we start to sort of close things up.
01:09:56.154 - 01:10:54.584, Speaker B: Well, I mean, just as a minute of shell, we rolled out chain signatures. It's developer ready. So as I mentioned, we invite everyone to start building applications that are chain abstracted. You can have one account that transacts across all chains. And the benefit is we can bring a bunch of users across all the core near applications to start interacting with that. And so I'm really excited to see more real apps launching that are able to work across different chains and being able to benefit from all of this block space and technology that's been built, and in turn bringing more and more users who are not limited by any single blockchain, not limiting the application's targeted audience as well, in return. So if you're a builder, you know where to find us.
01:10:58.164 - 01:11:43.064, Speaker A: So I actually had a question about that product, Ilya, which is, so the way I understand it is sort of like there's a committee that holds all the shards of your account, essentially, and there's like an NPC process that they carry out to sign transactions on your behalf. On other chains. But then if they, I mean, essentially it's sort of like they, that committee or validator set has sort of like custody of your funds, more or less. So is there, there's sort of like an economic, there's like a threshold of how much funds can safely be like custodied by that committee. Is that the right way to think about it or is there like a different security model?
01:11:43.484 - 01:12:21.034, Speaker B: Yeah, no, that's the right way to think about it. And yeah, there's a threshold. So I mean, it starts right now with a smaller committee, but the idea is to scale this committee to the whole near validator set. And also we already partnering with Eigen layer to include some of the kind of ethereum validators who are restaking as well to include in that. So the idea is to have kind of, you know, near staking security and, you know, part of Ethereum stake security and, you know, whoever else we can ramp into this to continue increasing the maximum kind of economic security of this system.
01:12:22.214 - 01:12:23.566, Speaker A: Okay, very cool. Nice.
01:12:23.710 - 01:12:26.878, Speaker C: Yeah, I'd love to riff on this more.
01:12:27.046 - 01:12:29.174, Speaker A: Go ahead. Yeah, go for it. Stefan.
01:12:29.214 - 01:12:58.894, Speaker C: What? Maybe there's a question for both, both Zaki and Ilya. I love to hear Zaki's take on this. What properties does a universal permissioning system policy system that's compatible with accounts across multiple different sort of semantic environments need to have? How do we actually get to this? Icing on this, on the cake? What are the requirements for it?
01:13:01.754 - 01:13:04.306, Speaker B: I mean, I can start from my. No, go ahead.
01:13:04.450 - 01:13:05.694, Speaker D: No, no, go ahead.
01:13:06.954 - 01:14:01.718, Speaker B: Everybody's polite. I mean, from my perspective, like, it's really important to have the account kind of level system that allows you to manage your account effectively. So because like whatever permissioning you're allowed to do, like if you cannot secure your account, you cannot have kind of like ideally better security than web two. And web two has very standard, second factor. It has very standard active transaction monitoring and other kind of standard security features. We need that. And then from there I think there will be need a lot as well as you delegate kind of the various, you know, if you're using some of the a, if you're using some other agents that are doing things on your behalf, like how to guarantee security there, how to ensure that.
01:14:01.718 - 01:14:37.384, Speaker B: And again, this is from perspective of wallets or apps that are actually using this, right? Because at the end user will not be able to like manually inspect how all this working. So it's more, how does wallet ensure that everything is coherent and working and, you know, make sure that account is secure, make sure that users not being kind of interfacing with a fake application, fake front and fake something. So there's a lot of components that needs to go into this to really provide kind of heightened security level while not hindering the user experience.
01:14:39.844 - 01:16:44.334, Speaker D: So I think there's a couple of elements that I think a lot about here. One is so interoperability sort of rears its head again in these places, right? You know, having a really, really secure account management system, but having insecure ways for that account management system to then reach out and interoperate with, you know, where you want, you know, transactions to be executed, value to be settled, all of those things. It's not really, you know, we can, we're in a state where we can make, I think we can be like in the early days of account of chain abstraction, we can, we can cast a wide net about, you know, what interoperability systems are acceptable. I do think, you know, we are still in the very much in that rapid prototyping state and like, but in the long run, I want to see, I want you, you want, you know, there's a lot of power to converging more and more interop around zero knowledge and white clients and other storms of very robust storage proofs, very robust systems. I think also this idea that comes from our friends at Agorac about being able to have convenient ways of dealing with asynchrony are also a big part of the, the API that we are going to need to provide for developers in the non account abstracted world or in the non chain abstracted world. Sure, you might have synchronous execution with one chain, but it is really, really nice to be able to just sign one, to click one button or sign one transaction and have a whole asynchronous sequence of events happen where you swap an asset, the asset gets staked, the asset gets bridged. All of these things happen with relatively small numbers of user interactions.
01:16:44.334 - 01:17:44.860, Speaker D: I do think asynchrony is also going to be a big part of making this chain abstracted world come together. Because right now in the non chain obstructed world, what we do do is we force the user to handle the asynchrony. We'll give them a tab, it'll send them a notification that now that part two of your swap is now ready to go while you go back to browsing Instagram while you wait. But that's not really going to work. We need to be able to, users need to be able to confidently say, hey, I signed this thing, maybe it will take some time to be executed securely, and, you know, but either, you know, the. I will get the price that I expected. I will get the assets that I expected, or, like, you know, my money will end up in some sane place, and I don't have to, like, monitor every step along the way it does, you know, sometimes cross chain interactions.
01:17:44.860 - 01:18:18.654, Speaker D: Like, you know, you know, you. You're like, oh, I need to, like, move my ETH from optimism to arbitrum. It's like, oh, I will now wait a week and then remember to come back, then move my 8th to the arbitram bridge. That's kind of a ridiculous idea. Even if people wanted to, if that ends up being. People aren't going to use some sort of intent based system to move that, do those moves. We need to be able to be able to say, no, you started this process, and now this agent will just, you know, keep moving the process along until you get to your destination.
01:18:20.514 - 01:19:12.704, Speaker C: When you talk about safety or security here, you mean, well, let me just say what I understood by it, and you can correct me if I'm wrong. What I understood by it is basically having in this asynchronous environment with multiple execution zones that have various different trust assumptions, you want to be able to essentially have a bundle of transactions that executes on multiple chains in a certain order and have ethnicity guarantees across this bundle such that individual transactions are all fill or kill together with the bundle as a whole. So either you execute all or you don't execute any. And that's, you know, that's something I would sort of call bundle safety. Is that what you have in mind?
01:19:14.444 - 01:19:39.514, Speaker D: I don't know. Like, bundle safety is certainly a nice property. It's a. It's a. It's a hard property to guarantee under all possible circumstances. It's generally like what I think we want these systems to be able to guarantee on, like, in the common case and then, like, in the. In the failure mode, you know, you want to, like, you want your money to end up back in stables or something like that.
01:19:39.514 - 01:19:45.950, Speaker D: You know, if you end, like, on a chain that you recognize rather than, you know, in some random corner of web3.
01:19:46.022 - 01:19:46.958, Speaker A: Yeah, yeah.
01:19:47.006 - 01:19:55.594, Speaker D: In some random corner of web3, in some asset that you've never heard of before, and that does. That does require a very powerful and expressive system.
01:19:57.254 - 01:20:17.414, Speaker C: Interesting. Are permissions sort of in this model? Do they need to be sort of arbitrary programs that, like, the applications have to sort of come up with, or can it be sort of. Yeah, can it be some subset of just arbitrary programming.
01:20:20.154 - 01:20:30.754, Speaker B: But, I mean, arbitrary programs allow you to, you know, specify anything you want. So, like, I don't think you gain much from having a subset.
01:20:34.494 - 01:20:39.714, Speaker C: I mean, simplicity, perhaps less bugs, these kinds of things.
01:20:40.294 - 01:20:49.514, Speaker B: Well, we need to get better at building verifiable software. We'll have AI helping us with that. So good. So good.
01:20:53.774 - 01:20:54.634, Speaker C: Okay.
01:20:56.534 - 01:21:16.034, Speaker A: Well, guys, we're coming up on the end of our hour and a half here, so I'm wondering if you guys have any, I don't know, takeaways or, I don't know, big picture thoughts that you wanted to end with for the audience.
01:21:21.554 - 01:21:33.986, Speaker B: Build apps. What you build is more important than where you build it. I think that, as you mentioned it, that's, that's probably the main, main idea here.
01:21:34.010 - 01:21:40.294, Speaker C: That's a good tagline, Zaki. You have anything? I'm happy to close it off.
01:21:46.294 - 01:21:52.302, Speaker A: Oh, maybe Zucky's running into his speaker problem again. I think the way I'll close it.
01:21:52.318 - 01:22:07.874, Speaker C: Off is if we want to have our cake and eat it, too, we need to figure out what the icing on the cake is. We need to figure out what flavor. And once we do that, then we can actually progress.
01:22:10.894 - 01:22:45.904, Speaker D: Yeah, I will just. I think that there's a big opportunity to build some new user experiences with these chain abstraction tools that can be. That will be very exciting and compelling. I do think that, like, there is the moment of the chain abstracted meme coin is coming. You know, I'm not entirely bearish on the meme coin casino. I just. I just want the meme coin casinos to be used to build things that, like, will matter in the long run.
01:22:45.904 - 01:23:02.224, Speaker D: And so I do think that this, you know, I do think that, like, we're, you know, there will be, there's. This is a good time to get some MVP applications up out and try and attract users and try and give them an experience that they haven't had before.
01:23:04.004 - 01:23:12.876, Speaker A: So the first breakout use case of chain abstraction is going to be a chain abstracted meme coin. Do I have you on record saying that now, Zeki?
01:23:13.060 - 01:23:17.264, Speaker D: Absolutely. What else could it be?
01:23:19.644 - 01:23:48.084, Speaker A: Someone's going to do it then. So, Stefan, if people wanted to get involved in helping with the icing on the cake, where how do they get involved? What is the cake committee doing? And when's the next sort of, like, I don't know, conversation?
01:23:49.304 - 01:24:41.684, Speaker C: Yeah, great question. So, cake working group, the best way to join is go to Frontier tech, and there's this section that says contribute. And then we have sort of the cake working group manifesto and all the members, and then the application form to join. We organize sort of recurring workshops, meaning I think right now we're about once a month, but we might increase the frequency and we're driving towards proposing some of these standards and more importantly, reflecting all the requirements that the various teams have so that we can have some common language to speak about the components of the cake. And so anyone who's building anything that uses the JSON RPc API should consider joining, because that's the beast that we're trying to wrestle with.
01:24:47.164 - 01:25:30.322, Speaker A: Great. Awesome. Well, thank you guys all for joining and for a really interesting discussion about chain abstraction. And I think there's going to be a lot to follow in this space. I would agree that. I think now that it feels that so many of the infrastructure problems are not solved, but the solutions are at least known, this problem of chain abstraction is quickly becoming the most interesting and important area of research and development. So really glad that we could have you guys on to share everything, all your thoughts, and looking forward to following what all gets built.
01:25:30.322 - 01:25:32.054, Speaker A: So thanks again.
01:25:33.714 - 01:25:34.298, Speaker D: Thank you.
01:25:34.346 - 01:25:35.194, Speaker C: See ya. Thanks.
