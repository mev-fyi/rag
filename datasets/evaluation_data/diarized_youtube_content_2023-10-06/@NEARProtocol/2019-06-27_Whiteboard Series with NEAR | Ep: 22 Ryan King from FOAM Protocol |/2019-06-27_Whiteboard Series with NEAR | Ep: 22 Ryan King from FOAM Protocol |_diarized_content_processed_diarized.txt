00:00:04.570 - 00:00:16.474, Speaker A: Hi everyone, this is Alex from Mir. With me today is Ryan King from foam. We will talk about technical details of the protocol today. Ryan, would you like to introduce yourself and give a brief overview?
00:00:16.602 - 00:00:38.198, Speaker B: Sure. My name is Ryan. I'm a co founder and CEO of Foam. Foam is a protocol for building a consensus driven map of the world. So we build a lot of geospatial tool tools and features for blockchain developers to work on if they want to have a geolocation in their smart contract or a way to visualize it. And then we use our token to kind of verify and curate this data to make sure it's accurate and can be relied on by smart contracts.
00:00:38.294 - 00:00:40.442, Speaker A: Cool. Yeah.
00:00:40.496 - 00:00:42.700, Speaker B: So how should I start?
00:00:43.470 - 00:00:44.940, Speaker A: Well, we can talk about.
00:00:47.070 - 00:00:48.246, Speaker B: Token curator registry.
00:00:48.278 - 00:00:48.860, Speaker A: Sure.
00:00:50.050 - 00:01:31.222, Speaker B: So currently what's live for the foam product is called the foam map. You can find it at basically map foam space. So this is a live web three application. You need like metamask or foam to basically interact with it. And the point of this application is to build up a token curated registry of verified points of interest data. So currently today, points of interest data goes out of style really quickly because the business might have closed or moved, and there's a lot of open source mappers with like OpenStreetMap contributing data, but there's no one really checking or verifying that data, and so a company has to then do it and then they sell this open source source data. So we're trying to involve an incentive mechanism to actually curate the data.
00:01:31.222 - 00:02:19.782, Speaker B: So that's why it's called a token curated registry. So the kind of primitive is called the TCR, and the idea is that you have this registry, which is a list of things, so normally it'll be like top movies, and the idea is to get on this list, somebody has to stake tokens for you to get onto the list. And so there's all these different parameters around a token creator registry, and these kind of parameters are like min deposit. So what would be the minimum amount of tokens you have to stake to add this information to the list? And so the reason you have this min deposit is it's like an antispam mechanism, so you have to have some skin in the game to add information to the list. And it's also so you make sure that information stays up to date because if it's outdated, somebody can come and challenge you. So in our case, we're building a registry of locations. So it's about building up a map of things.
00:02:19.782 - 00:02:52.546, Speaker B: And so the way that it works is if you want to add a point to the map. Let's say I want to add Times Square of New York City. It's similar interface to like a Google Maps or open street map, but as a web three application. You basically can open it up and you say, okay, I want to click here on the map and I'm going to add a point. And essentially like a menu card will come up and you essentially fill out the name, the information, the phone number, the tag, and then you decide how many tokens you want to stake. And right now the minimum is 50. So let's say you say 50, and so you don't actually spend your tokens or your money.
00:02:52.546 - 00:03:05.366, Speaker B: It essentially goes into the protocol and it goes into the map. And your tokens are kind of backing the truthfulness of this data. So people can say, oh, there's like tokens behind this and it looks pretty accurate. So I'm going to be able to trust this data.
00:03:05.548 - 00:03:06.898, Speaker A: Those are foam tokens.
00:03:06.994 - 00:03:43.502, Speaker B: Yeah. So foam tokens are used to contribute work to the network. So if you want to be a cartographer, you're basically staking tokens and they're very slowly getting taking off the market and actually backing the data set of the map. But we've seen about 5% of the points so far have actually been challenged. So this is another feature of the token curated registry is that you have the contributors, which we call cartographers, but then you also have the curators, and curators are people who actually come and investigate this information and see if it's okay or not. So let's say here we added Times Square, and let's say we named it Times Square with a square. So obviously that's incorrect.
00:03:43.502 - 00:03:52.534, Speaker B: You don't call it Times Square with a square. You spell out the name Times Square. And so the block is mined, it's added to the map at the pending point, and it'll be.
00:03:52.572 - 00:03:56.306, Speaker A: And is it blocked on some external blockchain or is it Ethereum?
00:03:56.338 - 00:04:21.082, Speaker B: It's Ethereum. It's on the live Ethereum. And so the metadata is stored in ipfs and there's like some hash and then basically it's in the registry. So there'll be like a listing hash for it in the foam registry and it's on Ethereum. And so if this .3 days go by, then the point will turn green, which means nobody found a problem. But at any time somebody can come and initiate a challenge against any point on the map.
00:04:21.082 - 00:04:54.474, Speaker B: So let's say here somebody sees that this is spelt incorrectly because it's using a symbol instead of the name. They basically come to this point and they hit that. They want to challenge it, and they put some sort of reason, and they also have to stake tokens. So now they also stake 50 tokens. And so now what that gives you is you have this kind of reward pool of 100 tokens that are now locked up. And then it's open for all other cartographers and curators to kind of weigh in on kind of like a vote. And it's kind of deliberately that the minimum is kind of low.
00:04:54.474 - 00:05:10.350, Speaker B: It's like enough that you're not going to spam the map, but it's not that high that now the incentives to go after points are also meant to be kind of lower staked. But we have seen people who, instead of staking 50, stake 10,000 and then 20,000, and then people try to attack the point to get those tokens.
00:05:11.010 - 00:05:25.470, Speaker A: Let's say there was 50 points tokens, 50 tokens that staked by the creator of the point and someone challenges with 10,000. Are people motivated to say that the point is legit to claim the 10,000 tokens?
00:05:25.550 - 00:05:42.454, Speaker B: Yeah. So you can't challenge more than it is staked in it. But if the point has 1000, which many do, you can stake 1000. So then in that case, the reward pool is 2000. Right. And so then basically what we have then is a five days period. And this is another parameter.
00:05:42.454 - 00:06:08.526, Speaker B: So just like the minimum is 50, how long is the voting period is another parameter. So these all can be voted on to change the parameters currently. But right now you have a five day period, and it's then open for a vote where all cartographers can kind of weigh in and cast their votes. And we're using partial lock commit reveal. So that means that the votes are hidden. Nobody knows which side you voted for. And so after this five day period, there's a three day reveal period.
00:06:08.526 - 00:06:32.730, Speaker B: And that's when people have to manually, essentially reveal their votes. Let's say that guy revealed. That guy revealed. Maybe that guy forgot to. And then you see, what is the quorum of this challenge? And right now, you basically need like a 40% or it's a 60% quorum. So that means 60% of the people need to be against the challenge and the challenge will fail. So let's say that happened and everyone says, no, that's correct.
00:06:32.730 - 00:06:54.782, Speaker B: Times Square should look this way, even though it's not essentially because the challenger fails. 60% of this 50 go to here and right now, 40% go to the voters who are on the right side. And so basically, he had to put his tokens at stake to initiate the challenge. People voted, and in this case, the challenger lost.
00:06:54.846 - 00:06:58.622, Speaker A: What happens if 60% is not the challenger wins?
00:06:58.766 - 00:07:09.250, Speaker B: Point is then removed completely. So it's removed from the map and it's reverse. So still some tokens go to the winning voters, and instead the challenger gets those 50.
00:07:09.400 - 00:07:11.762, Speaker A: Okay, so 60% of all the voters.
00:07:11.906 - 00:07:37.482, Speaker B: 60% of the reward pool goes to the challenger and 40% of the ward pool. So we just had a point, basically, where the point had 27,000. Right? And the challenger came, and this was just last week. So that's actually starting to be a decent amount of money, maybe like $1,000 or $800. They came and they also locked 27,000. So now we have this pretty big reward pool. Right? And the challenger lost.
00:07:37.482 - 00:07:52.786, Speaker B: So then you actually see, when you go back to this point, it no longer says 27,000, it says like 48,000 or whatever, and the rewards then went to the people. And then we have, like a leaderboard. So you can see which accounts like earned tokens, which ones have a negative balance, things like that.
00:07:52.888 - 00:07:55.202, Speaker A: But as a challenger, can I stake less than the.
00:07:55.256 - 00:08:22.762, Speaker B: Yes. So if the point, let's say, has 27,000 and you see an error and you don't have 27,000, you can stake only 50. And so then that takes only 50 of these. So the reward pool is still 100, and it will show that the point then has 26,000 something. And during the vote, the person could withdraw up to leave behind 50. So you always have to leave 50. So if they weren't challenged for the full amount, they could use those tokens in the vote.
00:08:22.826 - 00:08:25.566, Speaker A: Right. But if they didn't withdraw and the.
00:08:25.588 - 00:08:27.358, Speaker B: Challenge came with the full.
00:08:27.444 - 00:08:29.710, Speaker A: All 27,000 will burn.
00:08:30.450 - 00:08:33.514, Speaker B: Not burn. It goes to the challenger and the voters.
00:08:33.562 - 00:08:33.886, Speaker A: I see.
00:08:33.908 - 00:08:45.678, Speaker B: So they earn it as a reward. So it's pretty risky to stake 27,000 in your point because somebody could come attack you. But basically, in this case, they basically captured the challengers tokens because they won the vote.
00:08:45.854 - 00:08:57.602, Speaker A: And so your incentive to vote properly is because you don't see other people vote and you have a higher chance of having the same vote as everybody else if you vote.
00:08:57.666 - 00:09:14.700, Speaker B: Yeah, exactly. And so obviously, you can't really stop Sybil that well, right at the moment. But we are looking for protocol upgrades because there's an upgrade path that we built in that's been audited that you can launch like a new registry with new rules. So you can do things like punishing the wrong side of the vote as well.
00:09:15.170 - 00:09:16.590, Speaker A: Today, they don't stake.
00:09:17.250 - 00:09:34.430, Speaker B: They're not punished if you're on the wrong side of the vote. I see right now. But the reason that's also challenging is because with the partial lock commit reveal, you can use the same voting credits across multiple polls. And if you start getting punished, all of a sudden you're at this one and you're now, like, in debt. So there's a lot of unsolved problems around how to punish the voters.
00:09:34.510 - 00:09:40.150, Speaker A: But when you do commit, is it possible to just immediately lock the stake?
00:09:41.050 - 00:09:44.306, Speaker B: Yeah, you vote and your vote is locked.
00:09:44.418 - 00:09:48.840, Speaker A: Right. Then you should not be able to go into debt, right?
00:09:50.410 - 00:09:58.646, Speaker B: No, because the way that it works is you can lock tokens in the voting contract, and then you get these voting credits, and you can use the same credits across multiple votes.
00:09:58.678 - 00:09:59.130, Speaker A: I see.
00:09:59.200 - 00:10:14.702, Speaker B: So then if you're getting punished across them, and then all of a sudden, you only locked up 27,000. You used 27,000 across ten votes. Now you lost in ten votes. Now you lost more than you put in. So you kind of need a different voting module or a clever way to avoid this kind of edge case.
00:10:14.836 - 00:10:44.714, Speaker A: But now another question. So let's say that the point of interest is some coffee shop on an intersection of two streets. So, in reality, very small percentage of the cartographers can properly validate the existence of the coffee shop unless they go to yelp. But I guess the entire point of not to rely on decentralized registries. Right. So what would prevent someone who has a huge amount of tokens to just go after all of those coffee shops and arbitrarily challenge them and collect stakes from the.
00:10:44.832 - 00:11:07.826, Speaker B: Yeah, I mean, it's kind of like we've seen versions of this already. It's kind of like a grief attack. And, of course, if you have a lot of tokens, you can kind of run the show, in a sense. But this just happened in a way where it kind of activated the community more than ever, where kind of like factions formed of people to kind of vote against it. And also things then, like, the parameters come into play. So we have governance. So let's say there's a guy with a lot of tokens challenging all these coffee shops for fun.
00:11:07.826 - 00:11:28.954, Speaker B: Well, we can say, let's have the challenge period last a month. So we have now a month to rally voters or, say, change the voting quorum to 90% so that it's much easier to defeat the challenger. So because there's all these levers that you can change in the TCR, you can react to that. And because the tokens have to be locked for a period of time, there's like a period of time for people to see what's happening and react to it.
00:11:29.072 - 00:11:32.294, Speaker A: And the governance is token based. One token, one vote?
00:11:32.422 - 00:11:32.762, Speaker B: Yeah.
00:11:32.816 - 00:11:41.094, Speaker A: Currently and in the past experience, how many token holders approximately you see per vote?
00:11:41.222 - 00:12:02.990, Speaker B: Per vote? It's kind of been varying based on the challenge and the parameters, but I can say we had like 400,000 tokens in the voting contract and then it went to 800,000 and then it was 1 million, 2 million. And then for this contentious vote, we had over 8 million tokens in the voting contract. 8 million tokens in the voting contract. What's the total number of tokens in the voting contract?
00:12:03.150 - 00:12:07.490, Speaker A: Of foam tokens. Right, but what is the total number of foam tokens that exist in circulation?
00:12:07.650 - 00:12:12.710, Speaker B: 1 billion can exist. We sold 300,000, so 30% are in circulation.
00:12:13.290 - 00:12:17.320, Speaker A: Cool. And so what's the next step with?
00:12:18.410 - 00:13:07.942, Speaker B: Yeah, so basically now we have people debating these kind of parameters of how we should change them and coming up with different KPI metrics. So if we wanted to change the Min deposit, we need to really take into consideration what's the gas costs of voting because we can't have the Min deposit mean that if you vote the reward is so small that you lose money with gas. So we're kind of like trying to look at all these KPIs and analysis and we also have people building on top of the map now. So building analytics tools and curator dashboards to see how people are voting more intricately. And we just announced like a grant program so people could build on our API. So hopefully more comes out of the map and new specifications will come of how to improve the incentive models or make it more challenging to be a challenger or harass the map in some sense. So that's kind of what is live now.
00:13:07.942 - 00:13:36.386, Speaker B: And yeah, what we're working on more broadly is this proof of location to verify things in real time with these radios so we can transition to that. But if you had a system like that, you would be able to actually, in this system enforce that. You're not able to challenge a point in San Francisco if you can't prove you weren't in San Francisco recently, or that you can't vote on these points if you can't show you don't live here. So as we get more and more secure kind of location tools, you can better kind of govern how this kind of thing works.
00:13:36.488 - 00:13:38.834, Speaker A: But before we go to proof of location, one last question.
00:13:38.872 - 00:13:40.098, Speaker B: Sure, go ahead, as many.
00:13:40.184 - 00:13:44.770, Speaker A: What is the incentive for the challenger to actually walk around the challenge?
00:13:45.190 - 00:14:17.866, Speaker B: So, right now, there is no incentive to go check on these points like an open street map. So people are incentivized to build out maps, but they don't have the time to check every detail here because every piece of data actually has tokens behind it. If you find an error and you can challenge it and succeed, you're winning tokens. So right now, there is no incentive to really check any of these maps. And so the incentives are a little bit less on the actually cartographer side, because you don't get direct payouts for just simply adding a point. You can earn tokens if your point survives a challenge. So if you are confident in your point, you might survive.
00:14:17.866 - 00:14:42.678, Speaker B: And we've seen this point, got almost half their tokens just added to it just by existing. But we kind of found that because it's ultimately subjective work, having, like, an inflation or mining for adding points was very gameable because it's not computational, it's not objective. So it's kind of hard to have this, like, an infinite inflation just for adding points. We think it actually would make the incentives more perverted than they are today.
00:14:42.764 - 00:14:50.010, Speaker A: Right. Another question I have for that particular point that was 27,000 points, was the challenge meaningful?
00:14:50.510 - 00:15:00.358, Speaker B: No. So we had a challenger that was actually started being very first, very nitpicky. So, like, oh, it's lowercase instead of uppercase. And then they just started lying.
00:15:00.454 - 00:15:01.018, Speaker A: I see.
00:15:01.104 - 00:15:05.694, Speaker B: And that's when it kind of activated the people to rally against them.
00:15:05.812 - 00:15:06.334, Speaker A: Cool.
00:15:06.452 - 00:15:16.834, Speaker B: And at that point, they were like the whale, so they could easily win the votes, but because they were challenging falsely, so many people then got involved to fight back. So it's interesting to see.
00:15:16.872 - 00:15:20.690, Speaker A: Interesting. And do you have an estimate of how many tokens actually voted?
00:15:21.030 - 00:15:24.146, Speaker B: So on that one, 7 million or something.
00:15:24.168 - 00:15:25.220, Speaker A: 7 million. Okay.
00:15:27.110 - 00:15:33.618, Speaker B: There was, like, 30 something people who participated in the vote, and that point was the highest amount of tokens ever being used in a vote.
00:15:33.714 - 00:15:38.040, Speaker A: But the amount of vote was orders of magnitude 127,000.
00:15:38.430 - 00:15:39.180, Speaker B: Yeah.
00:15:39.790 - 00:15:42.826, Speaker A: Cool. Okay. Shall we move to proof of location? Sure.
00:15:42.928 - 00:16:29.542, Speaker B: Yeah. Do some erasing. Proof of location. So what we started with is just this kind of first step of bringing geospatial data into blockchain and one of the first ways to curate data on main chain. So it's a lot of, like, learnings to see how it goes, but foam is meant to be for all of web three and location. And when you look at how location works today, it actually has a lot of issues that people are not that aware of. And the main issue is that around location verification, it's very impossible to do 100%.
00:16:29.542 - 00:17:29.094, Speaker B: And so the reason is currently the way it works is we have our planet Earth, wonderful planet, and we actually have all of this GPS satellites in space, right? And there's about like 30 something of them, right? And so the way GPS works is that they use a time synchronization protocol to synchronize all of their clocks. And there are these stations on the earth that will synchronize them for you. And then the GPS is simply just broadcasting out to Earth all the time, what time it is, right. That's the sole purpose of GPS. And so us on the ground as receiving it, standing here and you hold your phone. If you can get at least four signals, your phone can do trilateration, which is a way, like a form of triangulation, that it can actually, through knowing all the time, figure out the distance, the differentiation between how long it took to get all the signals, and can then figure out your location. So that's currently how it works.
00:17:29.094 - 00:18:17.714, Speaker B: Today. When you pull out your phone and you're waiting for this blue dot to appear, it's listening to at least four radios, right? And everyone would agree GPS works pretty good, right? You can figure out how to get where you're going, but this is only a one way communication. So as the receiver, you don't speak back to GPS. GPS has no idea where you are. All it's doing is broadcasting the time. And so what we actually find is that because of that, it's extremely easy to lie about your location because there's no history or place where your location exists other than your apps logging it after the fact. But you can just download an app to change your gps very easily and trick even these apps, right? And so when it comes to any situation where there's anything at value, like, let's say, for example, Pokemon go, very small value, but some value, more than half the players are spoofing their gps so they can run around to all these cities.
00:18:17.714 - 00:19:10.422, Speaker B: And niantic, they wanted to make a ton of money by partnering with the businesses where people go for poker stops, but they couldn't because everybody was cheating their gps. So this kind of, like, whole market of location kind of activity is suppressed because there's no way to verify the data. And when you look at things like Uber, for example, they're spending hundreds of millions to try to prevent the gps spoofing, because the drivers, if they make the ride look longer, they can make a little bit more money. And so this is a problem from everything from supply chain, Internet of things, gaming, mobility. It's a problem for everybody, but everyone's kind of solving it in their own weird band aid way. And so we think that there's a chance to launch a full alternative to gps, not necessarily for pinpoint navigation, but for this new service of verifying location. And so what we want to do with this system is basically have a terrestrial based system made of low power radios, IoT based ones that are quite small.
00:19:10.422 - 00:19:43.474, Speaker B: Maybe you can just, for example, something like this. And so these are radios that can go really long distance, but they also have a really long battery, so it's not like Bluetooth, where they would die quickly and you put them all to places. And so in our system, we call these zone anchors, and we're trying to incentivize people to be network operators and offer a zone of coverage. And so what I mean is, instead of satellites in space, you would have a radio there on that corner of the block, a radio there on that corner, that corner and that corner. And they would be running this protocol where they synchronize their clocks with each.
00:19:43.512 - 00:19:44.100, Speaker A: Other.
00:19:46.070 - 00:20:19.738, Speaker B: And then they are available. So that's kind of like a quorum on time and space that they are basically offering a service for. And the difference would be that just like gps, they're broadcasting out the time so that if you can hear, at least if you can hear them, you can figure out where you are, is that you can then as the customer who walks into this zone, you can then send out a message to these guys, right? Saying, hey, for a small fee, can you include in your message logs that I've been here? And the only way I could ever generate such a message is if I was actually physically in your zone.
00:20:19.834 - 00:20:22.894, Speaker A: So this little device can also receive messages and store them somewhere. Yeah.
00:20:22.932 - 00:21:04.370, Speaker B: And so the idea is that in our system, we're going to have these radios running this time sync protocol. And so that protocol is like. So you have time is running over radio, right. And then they're keeping logs and sharing a state machine. And with that, right now, we're using a tendermint based consensus. So you have basically, like this zone of four radios is covering an area over radio, and then they have a shared state machine, and they're keeping kind of a consensus on what happened in the logs. Using tendermint and then ultimately, for this zone to really exist, they first would have to stake foam on the root.
00:21:04.390 - 00:21:07.562, Speaker A: Chain and root chain again, going to be ethereum.
00:21:07.706 - 00:21:39.080, Speaker B: It could be a cosmos zone, it could be definity. But right now, yeah, imagine it's ethereum. Whatever would be the safest place. And so they would stake their, put in collateral and basically enter into a service agreement saying, we're going to follow the protocol rules, we're going to offer location services in this particular area. If you then catch us lying or inserting fake data, I'm going to lose my stake. But if not, I can get these mining rewards and I can get these fees from customers. So now there's incentive basically for people to actually run these things at home.
00:21:39.080 - 00:21:40.950, Speaker B: And right now that doesn't really exist.
00:21:41.030 - 00:21:56.320, Speaker A: So quick question. So let's say there's another business nearby, right? And it also has several of those radios. Will those radios communicate with each other?
00:21:57.010 - 00:22:24.758, Speaker B: They don't have to, but if they are near each other, they will automatically hear each other's messages. And so they'll each be their kind of own plasma chain. So they don't speak to each other via the blockchain directly, but they have overlapping messages and then they get into each other's logs. So if all of a sudden this zone, if they're actually overlapping, starts saying, oh, I got Johnny's messages, he was here. And in all the zones around it, those messages don't exist, then they were probably inserting like a fake message.
00:22:24.924 - 00:22:25.800, Speaker A: I see.
00:22:26.330 - 00:22:45.840, Speaker B: So because they can hear each other over, if they can hear each other over radio, and then when you have ones that are completely isolated, they will have a trust level of zero. And there will be a class of users called mobile verifiers. And it's like if they've already been in a trusted zone, you have to attract them to your zone to test that you're a real zone or something.
00:22:46.930 - 00:22:54.378, Speaker A: Let's say this is a customer, right? They're working into one business. That business has receivers and there's another nearby.
00:22:54.554 - 00:22:59.150, Speaker B: And just for reference, these are going to go like multiple miles of coverage.
00:22:59.230 - 00:23:01.202, Speaker A: So these two are multiple miles away from each other.
00:23:01.256 - 00:23:05.454, Speaker B: In ideal scenario, it might have to be closer in the city, but let's say it's a desert.
00:23:05.502 - 00:23:09.534, Speaker A: I see. So it's not in one business it would be covering.
00:23:09.662 - 00:23:21.270, Speaker B: That's why we have to test so much in real world, because it's going to perform differently in Tokyo than a desert to get the optimal distances. But in general, they're meant to go further than Bluetooth or something or Wi Fi.
00:23:21.850 - 00:23:43.470, Speaker A: But let me understand exactly how messages propagate. So I'm a customer, right? I'm walking into here, and these four are within range for me. But let's say these are not within range for me, but they can see potentially, for example, this one node, this radio, right? So I'm sending a message saying I was here. Will that message propagate further to other radios?
00:23:44.690 - 00:24:20.010, Speaker B: Yeah, I mean, it's basically then, like, the first to sign it back will be the ones on the root chain that get your payment. But it's possible that it hits this zone and they approve it, and then it travels further and further and they all try to approve it. They don't wind up getting the payment, but they do keep the history of your message. So that's like, used then for the validators to go back and look for fraud. So it's very easy to detect fraud if it's like, all about if you're violating the laws of physics. So if someone from near team has all of a sudden a presence name in China and in New York within the same day or same 12 hours, it'll be automatically caught by the validators at reading all the logs.
00:24:20.510 - 00:24:54.914, Speaker A: But let's say, I'm not trying to lie outrageously, but I just want to say that, like, pokemon go, right effect. What I'm trying to say is that I'm moving around the city while actually I'm sitting on the couch, but while sitting on the couch, I'm not sending any messages, so nobody knows that I'm at home. So could it be that I just go like, let's say I corrupted these four guys, which is very few compared to the total number of vegans in the area. Right. Could I just ask all of them to include a message that I was in this location, maybe broadcast it further?
00:24:55.042 - 00:25:12.960, Speaker B: Sure, but the idea is that you have all this if the protocol is working improperly, you have a mesh of zones. And so even if you corrupt this zone, the idea is that this will then be the only zone that has your message, and it should have showed up in everybody else's. So then you have to bribe this on this, on this, on this, on this, on this, on this one.
00:25:13.410 - 00:25:23.102, Speaker A: But you said that in order to include my message into the logs, I need to pay a small fee, right? Yeah. So it's unlikely that I would be walking around the city trying to get into every log. Into every log I'm passing by.
00:25:23.156 - 00:25:26.260, Speaker B: Yeah, but if you actually are passing by, then you are passing by.
00:25:30.390 - 00:25:30.706, Speaker A: If.
00:25:30.728 - 00:25:35.970, Speaker B: The only way to get your message into their log is to bribe them or physically be there.
00:25:36.040 - 00:25:36.706, Speaker A: Right?
00:25:36.888 - 00:25:45.640, Speaker B: And if you bribe them and all the other zones, you didn't bribe every other zone. Now it's going to be rejected as a presence claim because nobody else heard it.
00:25:46.890 - 00:26:05.726, Speaker A: But in the honest case, let's say I'm not bribing anyone. So I'm actually walking in, into this place, and at this point, I'm willing to pay the fee to get included into the locks. And only four of them hear me, so they include me into the locks, but after that, I'm not paying anyone. How is it different from the case where I'm not physically there? Why would other zones know that I was?
00:26:05.828 - 00:26:41.642, Speaker B: Well, it's timestamped, right? So you're saying I was in this vicinity at this exact time, and it's then a receipt, and so it ultimately then lives on the route chain as a first class object. So you can then, let's say you're the Uber driver, and the app says for you to get paid, you have to produce seven receipts from your route at the end of your route. You would automatically reveal those to the app. And that app has all its own logic of what they want you to do. And so mostly it would be like, you don't want to be consuming stale players'claims that are outdated, but it could be valuable to also have, like, a private log of where you've been in case there's some controversy or something.
00:26:41.776 - 00:26:58.254, Speaker A: But so for, let's say, let's say a hypothetical Starbucks wants people to check in on Pokemon go. Will they also ask the application to check in on some other nearby places to verify that they were?
00:26:58.452 - 00:27:33.990, Speaker B: That's completely up to the application. So the protocol's job is to serve one single purpose, which is to offer fault tolerant time services that you can derive location from. And if it's producing those correctly and incentivizing network coverage, the idea is that any application can then define their own logic. So the Pokemon, one might say, hey, you have to get two presence claims within a 1 hour window at this part of town and this part of town. And then you unlock Mewtwo. But the Uber, one might say you need 50 to get paid because it's more important to us to verify you were every step or something. So every application can kind of define how they want to consume presence claims.
00:27:33.990 - 00:27:37.740, Speaker B: So our protocol just allows infrastructure for customers to generate them.
00:27:38.990 - 00:27:55.226, Speaker A: Another question is, let's say that the city is covered in those beacons. Right, so let's say it's San Francisco or New York and there's thousands of those, or like hundreds. I don't know what would be the order of magnitude. Is the entire city going to be running a tendermint consensus? Or they split into small groups.
00:27:55.258 - 00:28:15.554, Speaker B: So every single zone is its own state machine. And the reason is because they also could all have different time periods that they commit to the protocol. So you might have thousands of zones, but one zone is committed to one month, one zone is committed for three months. And so they each can have their own kind of engagement with the protocol. And each individual case is its own plasma chain or its own tendermint consensus.
00:28:15.682 - 00:28:20.674, Speaker A: And who defines zone? So presumably those four radios, they belong to different entities, right?
00:28:20.812 - 00:28:41.162, Speaker B: So not by necessarily to form a zone, you need at least four. That's for XYZ and a fourth for time. Same with GPS. You need at least four signals. And so the idea is that you can blindly stake tokens and try to find peers to join a zone, or you're yourself setting up for and creating a zone.
00:28:41.226 - 00:28:42.080, Speaker A: I see.
00:28:42.930 - 00:28:59.000, Speaker B: But then the idea is they could also be open for nude nodes to join that zone or something. So it's like one business, like, let's say my company set up most of the zones so we have a ton of coverage, but then individuals could come online and contribute to those zones and join that agreement or something.
00:29:01.850 - 00:29:07.334, Speaker A: And initially when I deploy this little thingy, it synchronizes through GPS, right?
00:29:07.452 - 00:29:33.178, Speaker B: No, it's meant to be completely gps free. So there probably has to be some trust zones that have some sort of ceremony where they can be established so that you have the coordinates, you can believe the coordinates, and you know it's there. So let's say here in the new lab, we made the first trust zone through some process that everyone was comfortable with. Then all the zones that appear around it can cross reference that they know where they are. And eventually, with enough coverage, you don't need this trust zone anymore.
00:29:33.274 - 00:29:35.018, Speaker A: I see. So when you add a new beacon.
00:29:35.114 - 00:29:44.482, Speaker B: So maybe like when we launch, there's like ten cities that become trust zones. And then maybe there's like an in protocol process as a ways to add new ones or something, but that's not defined yet.
00:29:44.536 - 00:29:52.166, Speaker A: I see. So it's like if I want to add a point here, I effectively just going to talk to. But I need to talk to four people in a particular zone. Right. Because they need to be.
00:29:52.188 - 00:30:02.710, Speaker B: So you don't have to be in touch with every point. So a zone is made up of pairwise connections. So let's say you could only talk to those two, but still be part of this whole zone.
00:30:02.870 - 00:30:07.260, Speaker A: But how do I know my coordinates? Bond, you're talking to two of them.
00:30:08.750 - 00:30:14.730, Speaker B: Well, one, it's like self reported by the people, because you know where you are when you're installing your zone.
00:30:14.810 - 00:30:18.720, Speaker A: But how do I know where I am if we gps free?
00:30:21.170 - 00:30:28.846, Speaker B: Because how do you know where you are? You also have like a deed with the government. Like, you know where you are, right? So it's like self reported, my misunderstanding.
00:30:28.878 - 00:30:35.010, Speaker A: Of how geo works in general. But in the world of gps, how do people know their coordinates?
00:30:36.950 - 00:30:52.246, Speaker B: It's doing a trilateration, so it can determine through the intersection of spheres if you're either here or here. And in the case of GPS, you're not in space, so you're here, and then they're using a geoencoding standard of latitude longitude.
00:30:52.278 - 00:30:59.334, Speaker A: But if we're trying to avoid using GPS, right? Yeah. How then would I know my location when I'm deploying a new beacon?
00:30:59.462 - 00:31:30.774, Speaker B: So we're not trying to say where you're competing with GPS or that you're not going to not use GPS. You might still be using GPS to drive your car around, but you're using foam to actually prove where you've been. So the idea is you have this trust anchor situation, like, how do I know where I am? I know I'm at the new lab. I don't need GPS to know where I am. So you know where you are and you're self reporting it, but if you sign up in New York and you put in it that you're in Alaska, and all of a sudden nobody in the other Alaskans can hear you, but all sudden, everyone in New York, and you're probably going to lose your stake because you're not where you said you were.
00:31:30.812 - 00:31:48.426, Speaker A: And so, challenges on the root. So let's say one of the beacons actually goes down, right? And it starts including logs that clearly did not happen. Are the pros on the root chain subjective or there's some sort of way.
00:31:48.448 - 00:31:52.978, Speaker B: To cryptographic, like, to probabilistically cryptographically prove it's completely objective?
00:31:53.094 - 00:31:54.286, Speaker A: It's objective, yeah.
00:31:54.308 - 00:32:09.262, Speaker B: So the idea is like, if you just turn off, you're not producing logs anymore. So that's a slashing condition. If you're producing logs that are not in line with either the other nodes in your zone or the neighboring zones, that's like a slashing condition.
00:32:09.406 - 00:32:14.530, Speaker A: But what would be a proof that the log message isn't consistent with the neighboring zone.
00:32:15.910 - 00:32:17.410, Speaker B: The logs would be different.
00:32:17.560 - 00:32:29.560, Speaker A: Right, but presumably because this zone and this zone, they not in a tender mint consensus between them. Right. It could be that someone actually did send message to these four guys, but never, ever sent message to any neighboring zone. Right?
00:32:30.490 - 00:32:34.890, Speaker B: Yeah, that's for the customers. I was talking about the actual. Just the logs of the zone.
00:32:35.710 - 00:32:40.490, Speaker A: What are the other logs of the zone? Which are not about customers. So what sort of logs are they actually producing?
00:32:41.470 - 00:33:05.246, Speaker B: Basically, the timesync message and the cryptographic signature. So the cap of the message is some bytes, and, like, 90% of the message is the cryptographic signature, and then it's just the timestamp, and they're just, like, doing it over and over again. And then there's, like, a reset function if they drift too far apart. And so they're basically only broadcasting. I'm happy this is what time it is. Or, hey, guys, we should resync. And then they're just keeping a log of that all the time.
00:33:05.246 - 00:33:17.042, Speaker B: So if one guy stops producing logs, he's down. Or if all of a sudden he's spitting out different data than everyone else, that's suspect. And so tendermint would automatically shut down if, like, two thirds of the nodes are malicious.
00:33:17.106 - 00:33:18.150, Speaker A: Even one third, right?
00:33:18.220 - 00:33:42.160, Speaker B: I mean, yeah, one third. So then the zone would basically be off. And then there's, like, ways to exit a malicious plasma chain, and all the other zones would still be running. And so by the time a verifier reads all these logs and posts something back to the root chain, it would be determined that those guys got slashed. These guys didn't. We don't have this stuff hard coded because it's going to be kind of a function of how well it performs through test networks and different things.
00:33:42.690 - 00:33:53.330, Speaker A: Now, let me try to recap what we just discussed. Right. So this particular beacon, very frequently, right? How frequently do they send messages? Like, every second.
00:33:53.400 - 00:33:56.434, Speaker B: Many times per second? Yeah.
00:33:56.552 - 00:34:13.654, Speaker A: So let's say once per second, I send a message that says, I'm happy, and it's 15, five, like, up to nanosecond or whatever. And that message primarily is going to be received by these three people and maybe neighboring guys. Right, so this is completely off chain. But you're saying there's a plasma chain from someone who's actually generating off chain blocks.
00:34:13.702 - 00:34:27.070, Speaker B: All that's off chain. Obviously, it's on the radio. And then they're sharing a state machine locally, and that is basically a plasma blockchain. But we're using tendermint consensus, and then that log will ultimately be checked and posted back to the root.
00:34:28.130 - 00:34:29.758, Speaker A: Checked like apfs, for example.
00:34:29.844 - 00:34:43.378, Speaker B: Yeah. There'll be, like, a different class of users called the verifiers, that actually are fed zone logs off chain as well, and then can use some multiparty computational technique to post the result with a way that there's a way to challenge them.
00:34:43.544 - 00:34:53.266, Speaker A: But are there any concerns with the. Because it all happens on a very little scale. Right. The zone is only four people, which is very little compared to the whole population.
00:34:53.298 - 00:34:54.690, Speaker B: Yeah, it could be larger, but minimum.
00:34:54.770 - 00:35:06.060, Speaker A: Right. But are there any concerns with the. So there's some other entity which is tasked with verifying their logs. Are there concerns that they will just pretend that the logs didn't exist to slash someone?
00:35:06.590 - 00:35:22.830, Speaker B: No, because they have to put out the same kind of collateral to be a verifier. And then also, we didn't code this. So it could be you're randomly, provided you don't get to choose which zones you're validating. So you're basically putting your own collateral at risk to fake the verification.
00:35:23.250 - 00:35:26.146, Speaker A: So the idea is that if you say the logs don't exist, but some.
00:35:26.168 - 00:35:35.026, Speaker B: Other verifier sends them, well, they're available for anyone, even if you're not a verifier, essentially. Or maybe they're not, but that's the idea.
00:35:35.128 - 00:35:37.890, Speaker A: So it's like this thing, it just broadcasts logs.
00:35:38.390 - 00:35:39.374, Speaker B: Yeah, broadcasted.
00:35:39.422 - 00:35:40.666, Speaker A: Anyone who's nearby can receive.
00:35:40.718 - 00:35:49.238, Speaker B: So the idea is, like, you can receive those messages for free. So you can say, hey, I opened the phone app. I'm here, okay. I open the gps app. Okay. They're similar.
00:35:49.404 - 00:35:49.926, Speaker A: Cool.
00:35:50.028 - 00:36:14.260, Speaker B: I don't want to buy a receipt. I'm just going to shut it off. And so anyone can hear the messages. But then the kind of value add over gps is that you can actually do this cryptographic handshake and produce this receipt, what we call a presence claim that doesn't exist today. So even if the accuracy is 100 meters, which we're trying to get, obviously, like five or 10 meters, it's still better than whatever exists today, because there is no way to verify your location today.
00:36:16.070 - 00:36:44.454, Speaker A: How would they know? Let me think for a second. Imagine I'm here, right? I'm a validator. I'm listening to the messages from these two zones. And let's say that this zone is going malicious, but the only thing they're doing is that they're just reporting time, like, half a second earlier than it is. So I can clearly. See, there's a discrepancy between the two, but I don't know which of them is wrong. So at this point, it's going to be more subjective.
00:36:44.454 - 00:36:52.490, Speaker A: Right. I will just try to synchronize with another zone and see which of them is more consistent.
00:36:52.910 - 00:36:54.646, Speaker B: Well, that's not necessarily.
00:36:54.758 - 00:36:54.986, Speaker A: So.
00:36:55.008 - 00:37:41.798, Speaker B: The time sync protocol can synchronize up to one clock tick. So then that's like, how good are your clocks? And you could also make the case that, oh, the weather got colder over here, so that's why the time sync is slightly slower, because, let's say, the cooker crystals will get a little bit colder and vibrate a little bit slower. So there is no absolute time, so you can't really go to any single reference point to compare. And so if it's still synchronizing and it's still accurate, just because it's slightly slower doesn't mean it's necessarily wrong, because they could actually vary by environmental conditions. So it's like it works up to one clock tick, but if your clock starts to be really slow, that doesn't necessarily mean you're a bad actor. We could, of course, add something that, like, if your clock starts to drop too low, that's a bad condition.
00:37:41.894 - 00:37:48.426, Speaker A: How much does it affect the accuracy of the location? So let's say that these three guys, their clock goes with one speed, but this one is slower because it's cold.
00:37:48.618 - 00:38:00.500, Speaker B: I'm not the best guy to answer, but it's, for example, on nanoseconds, you can get like 10 meters. On microseconds, you're, like, at 100 meters. Higher than that, you're at like a mile. I see, so you need nanoseconds, basically.
00:38:02.710 - 00:38:07.300, Speaker A: But then if someone is actually reporting time half a second away, that would be.
00:38:08.470 - 00:38:15.350, Speaker B: Yeah, but it's like, if they're still running the protocol correctly, then the location claims are still accurate because it's still like trilateration.
00:38:16.250 - 00:38:49.780, Speaker A: Let me think about it. So here's a client, right? The way it works is it receives four messages from GPS or from phone. Those messages, like, effectively, the moment I receive the message, I can see the timestamp, I know how long it's been traveling, and they're having four of those messages. But all those four messages, the meters of those messages, they had to have the clocks in a very synchronized state. So in this case, it feels to me that if one of them actually starts slowing down.
00:38:50.630 - 00:38:57.326, Speaker B: Yeah. Well, then if they can't keep up with the protocol, then that's like, maybe their hardware is faulty and then that's another way that they're breaking their contract.
00:38:57.438 - 00:39:00.340, Speaker A: I guess my question is, what if someone is intentionally sending wrong time?
00:39:00.710 - 00:39:03.958, Speaker B: That would be, well, if it's only one node, then they would be found out.
00:39:04.044 - 00:39:09.960, Speaker A: Right, but how? What would be the message that goes to the root chain as a challenge that says that that node is.
00:39:11.530 - 00:39:22.006, Speaker B: I don't think that it would turn out that way. It's more that if they can't synchronize as a zone, then there's a problem because one node is not synchronizing. It will either drop that node. Right. So it's fault hollow.
00:39:22.118 - 00:39:24.154, Speaker A: What if the entire zone is, then.
00:39:24.192 - 00:39:27.918, Speaker B: The zone gets slashed. So the time sync, that is my question.
00:39:28.004 - 00:39:31.566, Speaker A: What will be the message that goes to the root chain to slash the zone? If the entire zone is half a.
00:39:31.588 - 00:39:35.380, Speaker B: Second, it's not defined in terms of the message type.
00:39:35.750 - 00:39:39.940, Speaker A: Right. But my question is, how do you prove that they doing this?
00:39:41.430 - 00:39:58.520, Speaker B: So they're going to be operating one way, which is like the happy pass. So they're going to be posting logs every day and it's being checked by a verifier every day. And if all of a sudden on Friday, they are like, logs are not being reported correctly. Now there's like a reason to, well, I guess flash them.
00:40:00.250 - 00:40:26.522, Speaker A: Let's consider a very specific example. So these four nodes that every day they were operating properly, on one of the days, they intentionally made one of the nodes to report time a little bit wrong. So that people who within the zone, their location is very off. You're a verifier, you walk into the zone, you can definitely say that your location is off, you have all those logs, but how do you present them? How do you prove to everybody else who is not in this location that they misreporting?
00:40:26.586 - 00:40:36.686, Speaker B: Yeah, I mean, so like I'm trying to say is the time sync protocol is BFT, so it's fault tolerance. So the zone is going to drop the nodes that are not performing up until the thresholds, when then the zone.
00:40:36.718 - 00:40:45.910, Speaker A: Shuts down, but the entire zone is doing that. So in the zone, one node is intentionally sending time half a second delayed. The remaining four are cooperating with that node.
00:40:46.330 - 00:40:57.510, Speaker B: But if they're cooperating, that means they're synchronizing. So therefore the time synchronization data is useful for location, because if they are synchronizing slower, they're still synchronizing. And that means that you can still derive location.
00:40:57.590 - 00:41:00.394, Speaker A: Right. So imagine the time right now is exactly 15 five.
00:41:00.432 - 00:41:01.020, Speaker B: Right.
00:41:02.290 - 00:41:17.826, Speaker A: And I'm a user over here. This is my exact location. I can hear four. This note tells me it's exactly 15. And on the hardware level, their time is synchronized. Right. So this one is telling me time is 15.
00:41:17.826 - 00:41:33.110, Speaker A: This one is saying 15 five. This one is saying 15 five, but this one says 1510. Right. So it's intentionally sending five a second delay. And everybody else, all of those four nodes, if they were honest, they would just say, well, your time is completely wrong. We would drop you. But they do not drop them.
00:41:33.110 - 00:41:36.280, Speaker A: Right. So then the user hearing those four.
00:41:36.730 - 00:41:41.522, Speaker B: Yeah, but as soon as the verifier looks at the log, they see that this is not operating correctly, and it'll be slashed.
00:41:41.586 - 00:41:44.234, Speaker A: But how do you prove, like, imagine you're a verifier and you.
00:41:44.272 - 00:41:49.260, Speaker B: Because they have a log. So you're even saying yourself that they're sending the wrong message, but it's kept in the log.
00:41:49.630 - 00:41:49.994, Speaker A: Right.
00:41:50.032 - 00:42:20.630, Speaker B: So as soon as you look at the log and you see that they're all in sync, and this guy. This guy is not in sync. So therefore, the protocol will still either work correctly because it's fault tolerant, even if this guy's sending the wrong message, and at the end of the day, he'll lose his stake. So even if it's fake, either it's on purpose or if it's because his hardware is broken, he's still not following the protocol correctly. But if they all then switch their time to 1510, 1510, then it's still working correctly because it's not trying to sync to this guy's wristwatch because you're on the. They're just trying to synchronize to themselves.
00:42:20.700 - 00:42:39.194, Speaker A: Right, but how would you. That makes more sense. Significantly, the only thing I'm still a little confused is that the log. Because in reality, I put it like, 5 seconds away. Right. But in reality, it's going to be like two nanoseconds. Two nanoseconds can bring you, like, 30 meters away.
00:42:39.194 - 00:42:50.350, Speaker A: Right, which is a pretty long distance in the city. Right. In the logs, you can easily hide the two nanoseconds discrepancy. Like in the logs, you will say, yeah, that message was sent at the proper time. You cannot prove that it was not sent two nanoseconds later. Right?
00:42:50.500 - 00:43:11.830, Speaker B: I guess. But it's important that you have four in the first place for XYZ and a fourth to check the time variance. So that's why you're using four. You can do, actually, the trial iteration with three so that's why you have a minimum of four. But ideally, your zone is 15, and then you're going to be able to drop the nodes, not performing, and if too many are acting malicious, the whole thing will go down.
00:43:11.980 - 00:43:33.354, Speaker A: Sure. Yeah. I want you to think more about it. I guess on a very high level, what seems a little hard to achieve is that even if you have a zoning 15, but they're cooperating. Right. The intention of acting maliciously, it could be that they will make, like, seven of them, or even all 15 of them, to introduce some random discrepancy of like five nanoseconds. Right.
00:43:33.354 - 00:43:35.518, Speaker A: That will create almost gibberish locations for everybody.
00:43:35.604 - 00:43:42.910, Speaker B: Yeah, but that's jitter. And the protocol can resync based off jitter and clock drift. And then if they don't resync, then they're dropped or flashed.
00:43:43.570 - 00:43:56.340, Speaker A: But the entire zone is misbehaving right within the zone. Nobody will catch it because they're all cooperating outside of the zone. It's very hard to prove that someone is sending data which is five nanoseconds away because you cannot really prove that the message.
00:43:57.350 - 00:44:14.294, Speaker B: Sorry, I just think this is not a valuable path to go down because the time synchronization protocol accounts for clock jitter. So every time there's jitter, it'll call for a resync. And if somebody is introducing too much jitter all the time, and it has to keep resyncing, well, then it's not synchronized and therefore the zone will be slashed.
00:44:14.342 - 00:44:20.060, Speaker A: Sure. I can believe that. Cool. Is there something that we did not cover?
00:44:20.670 - 00:44:23.130, Speaker B: I mean, that's pretty much like the gist of the idea.
00:44:23.280 - 00:44:32.270, Speaker A: Cool. Awesome. So one nontechnical question that we always ask at the end, when is proof of location maintenance?
00:44:33.250 - 00:44:54.726, Speaker B: That's an unknown. Unknown. We're working now on like a demo that's going to have the plasma demonstration and have the radios do the time sync, then move towards kind of a reference design for developer board, and then we need kind of mass test thing to see how it performs and go across all these unknown unknowns. So then it'd be more of like a grassroots kind of effort to determine when it's time to activate a main net.
00:44:54.828 - 00:44:55.938, Speaker A: Cool. Exciting.
00:44:56.034 - 00:44:56.582, Speaker B: Yeah, thanks.
00:44:56.636 - 00:44:57.590, Speaker A: Awesome. Thanks a lot.
00:44:57.660 - 00:45:00.600, Speaker B: Yeah, thanks for having me. Great.
