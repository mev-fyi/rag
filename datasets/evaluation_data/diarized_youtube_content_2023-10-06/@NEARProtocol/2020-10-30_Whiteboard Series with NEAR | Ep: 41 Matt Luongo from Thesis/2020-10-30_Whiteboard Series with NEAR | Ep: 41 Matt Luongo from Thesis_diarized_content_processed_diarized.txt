00:00:04.650 - 00:00:22.350, Speaker A: Hi, everyone, this is Alex from near. With me today is Matt, the CEO of thesis and we will talk today about the design behind TBTC, which is extremely exciting. So Matt, would you like to introduce yourself and give us the high level overview?
00:00:22.690 - 00:01:03.070, Speaker B: Yeah, of course. So, yeah, I'm Matt. I'm the founder and CEO of thesis. We're a cryptocurrency production studio. So if you're familiar with fold, they spun out recently, they're shipping a bitcoin rewards back card. Keep network is a big product of ours. And on top of keep and on top of ethereum, we built TBTC, which is a bridge to safely bring your bitcoin on and off of ethereum so you can do things like earn yield, take out USD loans and really participate in defi widely with confidence that you can get back to your exact bitcoin.
00:01:05.110 - 00:01:08.978, Speaker A: Cool. So let's do an overview of how TBTC works.
00:01:09.064 - 00:01:21.670, Speaker B: Sure. Yeah. So high a. Let's see where to start. So you think people are probably already familiar with different bridge designs?
00:01:22.650 - 00:01:25.814, Speaker A: Possibly. No good to go to the. Yeah.
00:01:25.852 - 00:02:11.966, Speaker B: So let's just really quickly go through some bridge designs. So at the end of the day, what you're trying to do, and I'm just going to draw myself a little blockchain here because I'm probably going to need it a lot. At the end of the day, what you're trying to do is you're trying to take this one consensus mechanism here that is a chain. Note that when people draw the arrows going forward, they do not understand link lists or time. So you have this little blockchain here. Obviously this is not my best drawing and I'll pretty it up a little bit. But what you're trying to do, let's say this bitcoin, is you're trying to, with some confidence, take some value from this chain.
00:02:11.966 - 00:02:49.840, Speaker B: So I'm not going to talk about more general data transfer mechanisms and merge consensus and stuff like that because this conversation will get totally out of control and I'm not a pro at it. But what you're trying to do is you're trying to take data from this chain, which let's say is the BTC chain, and you're trying to see if this arrow will move. There we go. And you're trying to then bring it to another chain. I do not want a clear page. I would love to copy though.
00:02:52.370 - 00:02:54.106, Speaker A: Copy paste.
00:02:54.218 - 00:03:38.702, Speaker B: Beautiful. Let me see if I can add an error there. While I'm at it, play with this a little bit. You're seeing my unfamiliarity here with the tool. So the reason that we would want to do this is obviously to bring, in my particular case, bitcoin, but really any value that's been locked on one chain onto another. So bitcoin is a little bit different than a chain that you might build from scratch today. If you build a chain from scratch today, you know that there are a few things that you're going to need.
00:03:38.702 - 00:05:00.360, Speaker B: But if you care about interoperability, and I'm just going to use ethereum here for our example, since it's where our system runs today, but if you care about interoperability today and you're building a new l one, what you're going to do is you're going to think about how can the state of my chain or a summary of the state of my chain be provable to people off chain. So it's very important that you be able to say whether or not you're running a fully validating node, that when someone gives you the latest chain tip, that you can have some amount of confidence. And either that could be confidence because you are confident in a particular validator set and that they've signed it, that could be confidence because of the weight of work that goes along with that data. So there are a lot of different ways to do it. But in the case of bitcoin, a lot of the fancy tools that we would typically pull out when we're talking about interoperable blockchain design just don't apply. Bitcoin will not likely have a soft fork that has any focus on interoperability, at least for the next two, three years, possibly longer, maybe forever. And that's just kind of something that when you are trying to do work with bitcoin, you have to be really upfront about.
00:05:01.210 - 00:05:10.058, Speaker A: I have a question immediately on bitcoin, the blocks are rather infrequent, right? They are ten minutes. And the proof of work, if I remember right, is just double Shah, right?
00:05:10.144 - 00:05:10.890, Speaker B: It is, yeah.
00:05:10.960 - 00:05:16.530, Speaker A: So should it not be trivial to have a contract on Ethereum that once every ten minutes someone submits the block verifies double Shah?
00:05:16.630 - 00:05:50.866, Speaker B: That's exactly what we do. Yeah. So in that direction, it's quite easy. Right? So you can use spv proofs. And these were like the original spv proofs where you have a person in the middle and, oh, man, I really should have just made some people, too. Let me just make some people real quick. So you have a person in the middle and who's some off chain actor, and this off chain actor is able to read the state of the bitcoin chain, and they're able to submit that state using an spv proof to the Ethereum chain.
00:05:50.866 - 00:06:49.626, Speaker B: Now, Ethereum is. I don't want to call it legacy yet, right? But obviously there's a lot that's wrong with the EVM that anyone who's familiar with kind of like engineering outside of Ethereum knows, but it can verify spv proofs. The problem quickly becomes the state that you have to track. So, BTC relay, I believe, which was one of the first, really pegs to a chain like Ethereum, actually tracked all of bitcoin's state on Ethereum. And that launched in 2015, and it had to be paused in 2017 because the expense was just too high. There are a number of ways to go after this. So if you're looking at a chain that's kind of like bitcoin, but not quite bitcoin, so zcash, for example, you can use techniques like Merkel mountain ranges and just kind of this fly client idea.
00:06:49.626 - 00:07:44.540, Speaker B: And basically what you're doing is for each block, instead of needing to catch up the chain on the right, to the chain on the left, linearly, you can use logarithmic techniques, so you can actually get pretty cheap validation on the Ethereum side. But again, bitcoin is not going to make a change like that anytime soon. So we're stuck with linear. So originally, our approach building TBTC here was to use something called what we're calling a light relay. And the idea with the light relay was instead of tracking each head, and instead of constantly tracking the chain tip every ten minutes, instead what you do is you check difficulty retargeting periods. So you get this period that is difficult to know in advance. It's really hard to know before retargeting happens, what the actual value is going to be.
00:07:44.540 - 00:08:34.480, Speaker B: And then you have anchor, and it gives you less security than a full stateful SPV, but it gives you more security than stateless SPV, which is spv without using any of the existing chain state. So that was the original plan, and we got pretty far with it. In fact, we have a full implementation. But what we realized, and this is 100% James Preswich at Summa, who came up with this, is that you could actually take an idea like BTC relay and dehydrate it to the barest minimum possible rules, discarding almost all data around SPV proofs. And then it basically boils down to code on the Ethereum chain. That's about fork choice and heaviness. Of work, and that's it.
00:08:34.480 - 00:09:12.460, Speaker B: So we've really dove in. But so the way that we keep track of bitcoin state on the Ethereum side is using this relay. So if you're interested, you can actually go on main net right now. Currently, we are running the relay as a public good for Ethereum users, which is funny because it's gone down at least once. And actually the community saw and they stepped in and started running it. So we're working on a group incentivized relay that multiple bitcoin projects can be using on Ethereum. But that's kind of your first piece.
00:09:12.460 - 00:10:12.906, Speaker B: The second question though, is how does data from Ethereum get back to bitcoin? So, unlike Ethereum being able to validate SPD proofs for bitcoin, there are two issues with going the other direction. First, because Ethereum was not designed with interoperability in mind, ETh hash is a very annoying proof of work. It's difficult to summarize and it's difficult to validate from other chains. It's much more expensive than it should be, and it sort of violates some core design principles that we would follow if we were designing a proof of work smart contract chain today. But even more difficult than that is the fact that bitcoin has no way to actually verify the proof. So bitcoin's execution environment is actually, it doesn't even have a name. People refer to it as script, but it's not even technically a name.
00:10:12.906 - 00:10:57.194, Speaker B: It's a fourth based, stack based little mini language. It's incredibly restrictive. And then the data model is a Utxo model. And so that leads to some great scalability opportunities if bitcoin wanted to take them. But it also means that you can't make assertions about the entire chain state necessarily the way that you could in something like Ethereum. So what I'm basically saying is there is no way for Ethereum to prove something to bitcoin. So this is where what currently looks like a pretty simple system gets quite a bit less simple.
00:10:57.194 - 00:11:50.998, Speaker B: Let me see if I can successfully move this screen here. And here we go. Okay, so now our job designing TBTC is to build a system that will allow people to move, quote unquote, their bitcoin onto Ethereum, move it back to the bitcoin l one, and be confident that they'll always have access to their l one bitcoin. So it's very important to me as a bitcoiner to make sure that at no point will there be more bitcoin printed on ethereum. So we don't want this to become a full synthetic. It's very important to me that I can be confident that there's always physical settlement. And then lastly, it's important that I have no trusted intermediaries.
00:11:50.998 - 00:12:31.970, Speaker B: So I don't want to be relying on people's reputation for access to my bitcoin. I can already do that with centralized exchanges. I want to avoid any sort of proof of authority and instead rely on things that I can always kind of get recourse for. So if someone does walk with your bitcoin, you're able to hurt them real bad and ideally get your money back. So all of that's actually a really tall order without any soft forks on bitcoin. But I will see if I can draw out the way that we've got this working. Just, I'm just going to go back to boxes and squares.
00:12:31.970 - 00:13:28.650, Speaker B: It's too complicated otherwise. Let's say duplicate. Okay, so the system that we use and that TBTC is built on, we're calling a bonded, multi federated peg. Let's see if it lets me. So what that means is if you followed the history of side chains, which why not, right? Like, what else are you going to do on a Saturday? Then you know that this original idea of a side chain is like, okay, you want one chain to have data from another chain, and ideally those two chains stay synced. But what you really care about more, even with a lot of these early folks, than you care about consensus, is you care about what's called a two way peg. And so the idea of a two way peg is that you can just be confident that when one asset moves from one chain to another, it stays locked on chain one and unlocked on chain two.
00:13:28.650 - 00:14:33.470, Speaker B: And then when you lock it on chain two, it becomes unlocked on chain one. That's a subset of bigger consensus things we talk about today on smart contract chains, which is convenient because you can use different tools to enforce it than you would if you were trying to do this more generally. So what we've done to solve this problem, because bitcoin has no way to actually verify Ethereum state, is that we've taken this idea of a federation and we've said, okay, clearly we need someone who's custodying bitcoin. And I'll choose three here because we've started with pretty small wallet setups. Clearly we need someone who's custodying bitcoin. The problem we're okay with other people, we like to say, not your keys, not your coins, but it's actually okay for me, at least, if someone else holds my coins. What's not okay is I can't get them back, right? So I don't think it's inherently wrong that someone else is holding your coins.
00:14:33.470 - 00:15:13.740, Speaker B: What we've done is we've got this federation here, and I've just chosen a three of three that I'm about to start doing some doodles on. But what this federation does is it actually locks up cash on the ethereum chain. So let's move some of these around here. Sure, why not? That's fine. Maybe one more circle. We're going to get really artistic. Excellent.
00:15:13.740 - 00:16:28.260, Speaker B: So we call these federations in our particular system, assigning group, rather than just a general federation. And the reason that we call them that is instead of acting as federated validators, which is typical in a bridge design, where you have a few people who come together and they vote on the state of the Ethereum chain, instead of that, what you have them do is you have them custody of the bitcoin. So all of these together have an ECDSA, you have them custody the bitcoin, but then you also have them, this is about to get really fancy. Lock eth, and you have them lock eth so that if they do disobey the system and the parameters and rules that have been set aside here, you can slash them. So what's nice about that is normally if they're holding your bitcoin, they could abscond with it, and then your only recourse as a user is a judge. It's to try to find the jurisdiction that these signers are in and go after them and try to find their identities. But in our system, signers are chosen randomly.
00:16:28.260 - 00:17:22.004, Speaker B: Many of them have been Kyc'd, incidentally, but you can buy into the system on the free market at any time. And so it's not really reasonable to try to look these people up and send them a nasty gram and try to get your bitcoin back. Instead, what you do is you can submit more of these proofs. So once you've trusted bitcoin to one of these federated wallets and they've bonded their ETH, at any point, if they move that eth, you can submit a fraud proof. So it's just an SPV proof, we say fraud proofs. And I think sometimes people think that that's like a particular type of proof system, but it really just means proof of fraud. So in this case, the proof of fraud, it could be an SPB proof, but actually, you don't even need that.
00:17:22.004 - 00:18:46.016, Speaker B: All you need is any ECDSA signature that this key pair has generated that has not been authorized already on the Ethereum chain. So anytime they do that, this same actor can submit that and can actually seize the eth from these guys. So that's the core insight that you're going to see in this bridge design is rather than kind of like falling back to something that looks a little bit more like liquid, where you really basically have to have trusted parties, and rather than falling back on something where you talk about like implicit staking, this is my favorite argument that, oh, these people must have skin in the game because they're involved in the system. So why would they possibly be dishonest? You actually fall back to hard currency. So in our particular instantiation of TBTC on Ethereum, what we've done is we require 150% of anything that didn't work. We require 150% bond from any of these guys who want to act as a signer. And so you might ask, why would they act as a signer? And of course, the answer to that is that they're able to earn fees every time they bridge bitcoin over, and then when there's a redemption, every time they send bitcoin back.
00:18:46.016 - 00:19:47.520, Speaker B: So high level, these are some of the components of the system. I've gone about this in a different order than I usually do, some others that are really relevant. So now you've got something that looks like a lot of bridge designs. In TBDC's specific case, we've added this over collateralization factor, we've added this eth that's locked up. And then what we've also done is every single deposit gets a new federation, and that these are chosen from a large group of potential custodians. So the reason that's important is if there's ever an attack where this collateralization is incorrect, if there's ever any other system wide attack that requires you owning many of these federations fully, you can be confident that with a large set of operators, large set of signers, and a random beacon, that that is not going to be possible. So that's roughly our design for TBTC.
00:19:47.520 - 00:19:54.420, Speaker B: It really doesn't look complete now that I'm looking at this whiteboard, but would love to answer questions and go into detail.
00:19:54.570 - 00:20:13.528, Speaker A: Yes. So a couple of questions is the first one is. So let me first make sure that I understand correctly. Right. So let's say there's 100 of those on Ethereum in a trustless manner, can go there and say, you know what, guys? I want to be a TBTC relayer.
00:20:13.544 - 00:20:14.204, Speaker B: Right?
00:20:14.402 - 00:20:21.820, Speaker A: And I just put some then. So I put if before people send me bitcoin, right?
00:20:21.890 - 00:20:22.220, Speaker B: Correct.
00:20:22.290 - 00:20:22.524, Speaker A: Yeah.
00:20:22.562 - 00:20:26.256, Speaker B: Otherwise, so my eth that is put.
00:20:26.278 - 00:20:29.264, Speaker A: In there, it just allows people send up to some limit of bitcoin. Right?
00:20:29.302 - 00:20:30.176, Speaker B: That's right.
00:20:30.358 - 00:20:40.368, Speaker A: I see. So what happens is if at some point I did have 100% collateral, but then I don't anymore because of the fluctuation.
00:20:40.544 - 00:21:17.548, Speaker B: Yeah. So there are a lot of different ways to handle this. In our particular, again, first instantiation on ethereum, what we've done is we've said, okay, if this drops to 135% collateral, then there's a courtesy call. If it drops to, I want to say it's 120, then there is liquidation. So what happens with liquidation is that these bonds are put up for auction, and the idea is that the deposit is closed. So like I said earlier, a goal of mine is not to have synthetic bitcoin. It's that you actually want bitcoin backed tokens.
00:21:17.548 - 00:22:18.656, Speaker B: And so what happens in this case is the job of the system is to preserve the supply peg. So what you do to preserve the supply peg is first you give your signers a heads up, hey, guys, this is going to happen if you don't respond soon, if they don't respond soon, you put their collateral up for a falling price auction, and you put that collateral up against TBTC. So you say, okay, I have what could be anywhere between 100 and 150% of ETH of that TBTC collateral. So you start the price at 150, and then it just drops lower and lower and lower block after block. Eventually someone fills it, and the TBTC that fills that auction is burned, and then the signers are left with the bitcoin and they can sort of sort it out on their own. So at that point, there are a lot of different ways to look at this. There's a financial angle and there's just the mechanical angle, but mechanically, they can all chat and recover their bitcoin.
00:22:18.656 - 00:22:31.700, Speaker B: And now they're stuck with bitcoin. And anyone who wanted access to that bitcoin has now instead been told, no, this bitcoin has been removed from the system, and the TBTC that it backs has been burned.
00:22:31.780 - 00:22:36.584, Speaker A: Right. But at 135, if they don't want that to happen, they just add more.
00:22:36.622 - 00:22:59.740, Speaker B: If they just close it. Yeah. So if you think about this like a margin account, if you think about a margin account where you have many, many people who are equally responsible for it, no one's going to top up. Right. So what you do instead is you just say, okay, guys, any of you can take this. Now. You'll get a slightly better price than your peers if you close this out and remove your collateral.
00:22:59.740 - 00:23:02.770, Speaker B: But top ups, yeah, the coordination game is too hard.
00:23:03.720 - 00:23:06.880, Speaker A: So they will remove their collateral and they just put some TBTC.
00:23:07.040 - 00:23:17.548, Speaker B: That's exactly right. Yeah. So they basically can front run the liquidation and say, no, I'll just close this deposit, here's the TBTC back, or they can redeem.
00:23:17.744 - 00:23:26.020, Speaker A: So let's say there's 100 TBTC and there's five of them, right? Do I need to put 100 TBTC or do I put 20 TBTC and just remove my share?
00:23:26.110 - 00:23:28.508, Speaker B: Oh, no, you're taking the whole thing.
00:23:28.594 - 00:23:34.044, Speaker A: Okay, so I have to close it entirely. I see. Makes sense. Cool. Yeah.
00:23:34.082 - 00:24:15.300, Speaker B: So definitely it really benefits folks who are running this bridge to have inventory in both assets. You can't just hold ETH and run this bridge. You're going to need to hold TBTC just as an operational matter. Now, that said, we've been up for four or five weeks so far. It's not very long, but we have not had a single deposit go below, I think, 142% collateral. And the reason is that ETH and BTC are so tightly correlated. So I think most people that I would talk to today would probably say that ETH has more upside potential.
00:24:15.300 - 00:25:01.480, Speaker B: Lately, I'm a bitcoin bull and I don't always necessarily hold a lot of ETH, but you're just looking at historically. So because the two are correlated, you can be fairly confident. Now, obviously, in an ideal world, maybe you're using multiple kinds of collateral here. But I think what we kind of decided is we're not maker and we don't want our job to be this kind of like collateral and risk assessment constantly. So as we improve this design on future chains, the plan is to maybe allow a couple of other classes of collateral. So potentially you could imagine staking derivatives and anything that yields cash flow as being useful, but then otherwise just choosing something that's fairly highly correlated.
00:25:01.900 - 00:25:14.140, Speaker A: Right. Then the second question is, well, obvious question is, how large is the committee? Right? So if I'm moving my TBTC, how many people are chosen from the.
00:25:14.210 - 00:25:16.332, Speaker B: It's tiny. Only three.
00:25:16.466 - 00:25:17.180, Speaker A: Only three.
00:25:17.250 - 00:25:57.164, Speaker B: So the reason that we do that is for forward compatibility for something much bigger and grander that we're trying to ship. So right now, instead of using bitcoin's multisig, we're using threshold ECDSA. Threshold ECDSA is really freaking cool. We can talk a lot about this particular NPC application, but at the time of building TBDC, actually until today, this is still true. It's going to stop being true next month. But there was not a way to properly attribute malice in these setups. And so let's say, for example, we had a two of three.
00:25:57.164 - 00:26:01.500, Speaker B: You're ensuring that two could always steal from the third.
00:26:01.650 - 00:26:03.308, Speaker A: Yes, that was my next question.
00:26:03.394 - 00:26:38.708, Speaker B: Yeah, exactly. So what we did to solve this problem economically is we decided to start with n of n. And then you say, okay, well it's n of n, you don't have liveness. So drop the wallets as small as possible and have as many wallets as possible. So you have robust liveness across the system. Though particular deposits, liveness might not be as good for the next version. The plan is we're working with an outside team that will shortly be delivering an attributable ECBSA scheme, which I'm really stoked about, and that's going to allow us to explode these committees.
00:26:38.708 - 00:26:46.500, Speaker B: So think 50 to 100 and think n over two thresholds. So then it's just going to look much more robust.
00:26:46.660 - 00:26:54.652, Speaker A: Right. Now let's say that the threshold is actually n over two, right? Yeah, sure. But the collateral is only 150%.
00:26:54.706 - 00:26:55.180, Speaker B: That's exactly.
00:26:55.250 - 00:26:59.260, Speaker A: And if only you smash half of them, you only cover 75% of that.
00:26:59.330 - 00:27:40.030, Speaker B: Exactly right. That's exactly right. So right here we have done, I'm not going to call it the most naive, because it's not, but this is like a really straightforward, clear over collateralization situation. Now if you look at, let's zoom out here for a second and see if I can properly do this. So if you start actually looking at the real world here, keep hitting Ctrl c thinking it's going to copy. And it doesn't. What actually happens is today on main net we have 104 stakers, were targeting 500 by the end of the year.
00:27:40.030 - 00:28:37.020, Speaker B: So very quickly this starts getting larger. And then each time you sample from them, as long as you have a fairly decent beacon, each time you sample from them, you have some strength of collusion resistance. Right. So the idea is that eventually you hope that you can lower this 150% effectively and if there are issues past that 150% that you can socialize, or this is the alternative design, or you can basically treat people's membership in this group as having value. So what we've done on Ethereum is we have a work token called keep. And for you to actually stake in the system, you have to buy this work token and you have to put it at risk to even be chosen in the first place. So suddenly you have this work token that looks a lot like a taxi medallion that can be leveraged across multiple deposits.
00:28:37.020 - 00:29:40.000, Speaker B: So if you balance things right, and if you use your beacon properly and you don't let people basically be in many shared setups with the same group of people, you can actually have a piece of collateral that can be leveraged across multiple wallets. So that lets you start to play and get this number lower so you don't suddenly have to do 300% collateral to get in over two. Safety. Ultimately, though, what we're going to be doing is finding all of these numbers in production, right? So we'll start high, and then we'll slowly, slowly, through governance, inch them down and figure out what is the value of capital efficiency. And is there an honesty assumption here at all? This initial TBDC design assumes 100% malice from all players, which is way beyond what most literature outside of the cryptocurrency space considers. And in V two, we'll start to relax those assumptions.
00:29:41.640 - 00:29:51.328, Speaker A: Cool. Now another question. Well, one simple question is, what is the random beacon today? Is it just the hash of the block?
00:29:51.424 - 00:30:23.996, Speaker B: Oh, hell no, man. I've spent an incredible amount of time on this. So the random beacon today is a BLS threshold based on definity's original work in 2017, that's been anchored onto the Ethereum chain. And so what that does is it means that on the one hand, it's anchored to the Ethereum chain, for better or worse. So there are some things that we can't use this for. It's not suitable for a consensus mechanism, period. Anything that people want to build where they say, well, the beacon is the first piece that you're seeing in new chain designs.
00:30:23.996 - 00:30:39.524, Speaker B: This is not the beacon for that. Instead, though, what this beacon gives you, it gives you resistance to minor attacks and to long range attacks. And I could almost start a whole new diagram, but I'll spare you.
00:30:39.722 - 00:30:41.220, Speaker A: Who is participating?
00:30:41.800 - 00:31:11.920, Speaker B: All of these same signers. Yeah, exactly. So all of these stakers also participate in a random beacon. In our particular BLS based random beacon. It's a 64 member group with, I believe it's a 31 member honesty threshold. And then the way that it works is what you're really looking for is because it's BLS based, people can't give you malicious answers because the Ethereum chain can validate that the signature is correct. Instead, you're fighting aborts.
00:31:11.920 - 00:31:22.310, Speaker B: And so in the case of our chain. Let's see, the min stake right now is 80k. Keep sixty cents. Thirty two. So we're talking.
00:31:24.520 - 00:31:27.636, Speaker A: So in the meantime, what is the curve on which you're doing it?
00:31:27.658 - 00:31:35.188, Speaker B: Is it bn? It's all bn 256. It's terrible. The Ethereum curve that no one likes.
00:31:35.364 - 00:32:03.836, Speaker A: So it is not live. But we have the same randomness beacon and we're using restreta because technically you don't really need anything from BLS. So you're really only using pairing when you validate the output of the randomness beacon. But instead of validating output of the randomness beacon, you can verify each reveal from every participant for which you do not need. You can use just schnorr. My cryptography is very rusty.
00:32:03.868 - 00:32:04.624, Speaker B: Right, yeah, it's fine.
00:32:04.662 - 00:32:18.390, Speaker A: But you can validate each of their reveals and you can reinterpolate the polynom and confirm that the point is zero is what you expect. Right. So this is the only place where you use pairings, and then if you use restrato. Well, technically Ethereum doesn't have restrato, so it doesn't help much.
00:32:19.240 - 00:32:44.908, Speaker B: Yeah, I was going to say, obviously we're super restricted by the EVM right now and we've already pushed for a couple of eips. We got a pre compile in for Blake, two b, for example, for zcash, interop. But the greater curve work that Ethereum needs done is just like, it'll happen eventually, but we would be years behind schedule if we'd waited on it.
00:32:45.074 - 00:32:52.552, Speaker A: But also, if I hear correctly what you're saying, you're saying that right now on Ethereum you have a randomness. That's great.
00:32:52.706 - 00:32:58.720, Speaker B: Yeah, it's expensive, but yeah, it works. You can do it. Every TBTC deposit uses it right now.
00:32:58.870 - 00:33:22.868, Speaker A: But another question. So let's say you have 200 of those participants, right? And you sample, let's say five of them. If you only have one or two bits of influence, that doesn't really allow you to sample the committee. That is bad, right? Like if you control 50% of them. So why not use block hash as a randomness?
00:33:22.964 - 00:33:54.816, Speaker B: Oh yeah, that's a good question. Let me see if I can unpack this. So first, I'll be frank, we built the beacon for much greater things than. Yeah, so we had already built this beacon that a committee this small does not need this beacon. But when we start getting to large samples and larger number of stakers, I think it's going to be quite relevant. And then the other thing that we've had to do. This is an implementation detail, but it's an important one, is just getting to the beacon.
00:33:54.816 - 00:34:29.280, Speaker B: There's actually a lot you have to do after that. So on Ethereum, a gas efficient sortition pool implementation is not trivial. So I'm happy to say that we've shipped that as well. So what we actually have is the ability to sample from a list that's thousands and thousands. Obviously, it's not actually a list, but a collection that's thousands and thousands of members long and that's weighted arbitrarily. And so that's really what we've brought to the chain. So while we're initially using it for these small committees, the idea is that we'll start using it for 50 to 100 plus deposits.
00:34:29.280 - 00:35:01.300, Speaker B: Right now we're set so that these deposits are using fixed sizes. So one BTC, five BTC, ten BTC. And we've done that because we have aims to build privacy solutions on top of bitcoin and ethereum. And you need fixed note sizes for good privacy solutions. But in the future, when we're doing these larger committees, we will be removing those bounds. And so suddenly it's really important that you're confident in the group that you've chosen.
00:35:01.460 - 00:35:24.496, Speaker A: Right? Cool. Okay, so let's shift gears a little bit, and I have a couple of questions in a completely different space, please. I'm on bitcoin, right? And I have my one BTC. I want to move it to Ethereum. So what is the order here? Right. I need to know whom to send it to.
00:35:24.518 - 00:35:25.090, Speaker B: Right.
00:35:25.540 - 00:35:28.252, Speaker A: Trigger, ethereum. Smart contract to get my committee.
00:35:28.396 - 00:36:17.036, Speaker B: Yes. This is not the smoothest ux minting process right now, but the way that it works today is when you say, look, I have one bitcoin. I want to deposit one bitcoin. You send a single transaction to Ethereum, and then that emits an event where off chain, these guys are able to figure out who should be in the committee. They all come back online, they submit an ECDSA pub key, and then you see that and you know that these guys are already bonded because that was a precondition for them being chosen in the first place. Once that happens, you can send your bitcoin to that address and then wait six confirmations and submit your SPV proof. When you do that, you're originally given an NFT.
00:36:17.036 - 00:36:59.068, Speaker B: And what's cool, this is like such a low level detail. Most people don't care, but it's really cool for tax nerds and bitcoin nerds is that NFT actually represents your deposited Utxo. So if you have a reason to get back to that same Utxo, you can hold onto that NFT for up to six months and maintain access. If you don't and you just want to go farm on defi or whatever, you can then turn that into what we call the vending machine. And it just holds all of the Utxos and mints, new TBTC on Ethereum, and then you can walk with your fungible token. So it takes a few steps. I think if you skip approvals, it maybe takes three transactions, which is not ideal.
00:36:59.068 - 00:37:06.080, Speaker B: Ideally we would have someone that was already overbonded and that could accept larger lot sizes. So that's on the docket.
00:37:06.820 - 00:37:26.744, Speaker A: Cool. So the next thing is. So you're saying I can hold to this Utxo for six months, right? Yep. So as a participant in the network of people who put collateral and participate. Right. What happens if three months in, I realize that I cannot be participating anymore, so I need to exit. Right.
00:37:26.744 - 00:37:36.010, Speaker A: But there's a lot of TBTC that I happen to have. I'm part of their multi six. Right. So I cannot just walk away.
00:37:36.480 - 00:38:14.310, Speaker B: Yeah. Oh no. So if you are a signer, you're stuck for up to six months in that position. Now luckily, most people mint fungible TBTC like they want the ERC 20. And so what you can do is you can just go through and you can use the same piece of collateral to close, close and just kind of like zipper, which is great. But in the case where someone is obstinate and they really want to hold on to their particular Utxo, that means you need to keep participating or your collateral is at risk. And maybe for some people that's okay.
00:38:14.310 - 00:38:20.650, Speaker B: Not for me, I'm pretty cost conscious. But for some folks, if you really had to exit quickly.
00:38:21.420 - 00:38:32.830, Speaker A: So let's say all of the TBTCs went to the vending machine. Sorry, all of the nfts went to the vending machine. So none of them is blocking me. So for me to exit, I will just have to close every single.
00:38:33.360 - 00:38:34.156, Speaker B: That's right.
00:38:34.258 - 00:38:35.964, Speaker A: Every single committee. So I will have to get.
00:38:36.002 - 00:38:39.244, Speaker B: You just get some TBTC and you can just go down the vending machine and close.
00:38:39.282 - 00:38:39.676, Speaker A: Close.
00:38:39.778 - 00:38:40.236, Speaker B: That's right.
00:38:40.258 - 00:38:40.492, Speaker A: Okay.
00:38:40.546 - 00:39:12.570, Speaker B: And we've already seen that. So this sounds kind of abstract, but this is actually something you can see on main net happening today. So the way that we've incentivized early bridge operation is for the first interval. We've said for every deposit that is opened on your operator and that is then closed on your operator. You get one point and at the end all of the points are added up and that's how rewards are distributed. And these are in addition to signing fees that people already get. And of course what that incentivizes, right, is people to open, close, open, close, open, close.
00:39:12.570 - 00:40:02.212, Speaker B: We just saw this master class in kind of like incentives happen where we were giving away a bunch of tokens for people to do this. And that was exactly what you saw. Where we currently have 1000 BTC cap, we're doing a guarded release and it's slowly growing, but every time the cap goes up, the supply starts to increase and then the stakers start decreasing it. Then the supply increases and the stakers decrease it. So we've actually got a velocity of something like seven x where bitcoin goes into the system and goes out very quickly because these stakers want to get it off the books and make sure they get their rewards. So it's just been incredibly interesting to actually watch all of them closing their own deposits and getting their hands dirty. Obviously, long term we'll be changing that incentive mechanism.
00:40:02.212 - 00:40:03.050, Speaker B: That's not.
00:40:05.100 - 00:40:15.468, Speaker A: Now let's say someone wants to exit, right? So I have my TBTC and I want to get actual bitcoin, right? So I go to ethereum. Do I need to convert it to NFT first or do I just say.
00:40:15.634 - 00:40:21.612, Speaker B: You can do it in one call, so you can just say, give me a random NFT that's this size and then pay to this address.
00:40:21.746 - 00:40:23.904, Speaker A: But what if there's no NFT of this size?
00:40:24.102 - 00:41:06.030, Speaker B: Oh, so you do have to choose something that's of a particular lot size. So that is a key part of the system as it works today. And even if we remove lot sizes, the way that the system works is that each committee has a single amount of bitcoin that they're custodying and you need to choose from those amounts to exit. When you start allowing partial exits from a particular bitcoin utxo, the complexity of managing bitcoin transaction fees and change and wallets is very high. It's very simple when you're running a centralized service, but it's very high on the EVM. I think if I did this from scratch with a chain that didn't have so many restrictions, we might go for.
00:41:08.720 - 00:41:27.748, Speaker A: I chose, let's say I chose myself a lot, right? So I went there, I said, give me this NFT. So now I have this NFT. I want that NFT to become a bitcoin on my account. Right. So a transaction needs to happen. So is it the case? The transaction is just constructed on Ethereum and the committee signs it, and then it's up to me to submit it.
00:41:27.834 - 00:41:50.460, Speaker B: You submit the transaction. So what happens is you say nodes, here's the transaction I'm in approved, this is what I want you to sign on Ethereum. Then the nodes get it, and at that point they have 6 hours. If they do not physically deliver not only that transaction signed, but also in a block, importantly, then you can seize their collateral.
00:41:51.520 - 00:41:54.380, Speaker A: Why is it their responsibility for it to get into a block?
00:41:54.960 - 00:42:44.236, Speaker B: That's just the way that we've decided to do this. So we've tried to offload almost all of the complexity of the system onto the stakers. So you could certainly say like, okay, here's a transaction, and now you need to get it in and give that to your user. But very quickly what you run into is, okay, who's paying when the transaction fees need to go up, at what point are these guys not delivering? Can you prove that they're not delivering? It becomes quite hairy. And so what we found for this first version that was a little bit better was the user, and actually they do this most of the time, can optimistically, kindly, altruistically deliver the proof that the transaction has been submitted, but ultimately it falls to the nodes to actually do it.
00:42:44.418 - 00:42:46.140, Speaker A: So who chooses the fee?
00:42:46.720 - 00:42:48.840, Speaker B: Exactly, the user chooses the fee.
00:42:49.000 - 00:42:52.076, Speaker A: But what if I chose the fee, which is too low for the transaction to get into the block?
00:42:52.108 - 00:43:16.004, Speaker B: We have a transaction fee bumping algorithm where basically the timeout slowly gets increased if things aren't arriving in a block. And you can continue doubling the fee until it makes it in, but it's at the user's expense. So if the user decides, I'm going to withdraw a whole bunch of bitcoin in the middle of a bitcoin fee event, they should be the ones who pay. The signers don't control when the user decides to withdraw.
00:43:16.052 - 00:43:20.600, Speaker A: Right. But does it increase the six hour timeout?
00:43:21.420 - 00:43:23.604, Speaker B: So each fee bump increases the timeout?
00:43:23.652 - 00:43:30.104, Speaker A: Yeah, I see, makes sense. Okay, so if it didn't get into the block after 6 hours, they don't get slashed immediately. First the fee will get bumped.
00:43:30.152 - 00:43:30.748, Speaker B: That's right.
00:43:30.834 - 00:43:33.112, Speaker A: But at which point do they get slashed?
00:43:33.256 - 00:43:49.740, Speaker B: Yeah, so they don't get slashed until the user says, I haven't gotten my bitcoin. And so at the end of that 6 hours, if no one has said, we need a fee bump and the user has not gotten their bitcoin and there are no proofs, then the user can say, okay, I guess I just need your collateral.
00:43:49.820 - 00:44:06.550, Speaker A: I see. Well, maybe I don't understand the whole statement, but seems like, sure. The way I hear it, right, is that request is submitted. Right. And user says, I want to pay zero fee. Right.
00:44:07.400 - 00:44:10.600, Speaker B: There is a min fee rate, but yeah, they could say the lowest fee possible.
00:44:10.670 - 00:44:19.596, Speaker A: Yeah, I said the lowest fee possible. And right now a fee is huge. Right. So signers sign it. Right. Then there's some time out before they can propose to bump it.
00:44:19.698 - 00:44:20.590, Speaker B: That's right.
00:44:21.360 - 00:44:33.552, Speaker A: So they will bump it. Okay. So effectively the idea is that once the fee becomes reasonable, the transaction will make it in no matter what. Right. And if they didn't sign it. If they didn't sign it, I guess it's treated differently and they will get flashed. Right.
00:44:33.606 - 00:45:07.980, Speaker B: Exactly. There are some simplifications, I think, on both of these sides of the mint and the burn, where in retrospect we're like, what are we seeing? We're seeing people underfund and overfund. We're seeing, you know, just varieties of little difficult cases where it's like, should that be me or should that be the staker? But so far it's worked. Excited to. I think what we're going to do is keep tweaking, like every new instance of TBDC on new chains, we're just going to tweak the design a little bit and get closer to what we think is ideal.
00:45:08.640 - 00:45:15.436, Speaker A: Awesome. Cool. Is there anything we didn't cover that.
00:45:15.458 - 00:45:57.284, Speaker B: Was a pretty good amount? I guess a couple of things that are kind of cool and that maybe aren't obvious. One of them is if you take all of those nfts and you put them in something like tornado cash, you now have the most robust mixer that bitcoiners have ever seen. Very quickly, because you've already got fixed lot sizes and everything else that you need. Fixed note sizes that you need for privacy. So I think that's one that's interesting. Another is that if you really care about your taxes and you want to avoid disposal of bitcoin, you need to use a system like this for this to not look like a sell. So I'm not an accountant, and I'm definitely not a lawyer, definitely not yours.
00:45:57.284 - 00:46:20.044, Speaker B: But that's a pretty key design that we found when we're dealing with bigger depositors is they're like, look, I'm not sure of the treatment here. I don't want this to trigger capital gains. Every time I go over this bridge. And so it's been important to give them an opportunity to actually have an NFT that they can use on collateral as collateral on the side chain. But, yeah, I think that's the big stuff.
00:46:20.082 - 00:46:24.864, Speaker A: Right? It cool. Okay. That was very exciting. Thanks a lot for sharing.
00:46:24.992 - 00:46:26.068, Speaker B: Yeah, of course.
00:46:26.234 - 00:46:28.770, Speaker A: And let's see how it evolves. Great, thanks.
