00:00:06.910 - 00:00:32.474, Speaker A: Okay, so it seems like we are live. Hello everybody. Welcome to the near EVM work group. Sync weekly sync. This is a weekly call that we are doing for our community and we are discussing what is happening during the week. And so, welcome all. Arthur, would you like to lead it?
00:00:32.672 - 00:00:54.946, Speaker B: Sure. Hold on. Okay, I assume everybody can see my screen. Yeah. So let's take the notes from HackMD from now on. I've lost too many notes to GitHub. Okay, so today we don't have a specific agenda other than the usual one.
00:00:54.946 - 00:01:35.020, Speaker B: Last week we dealt with some roadmap updates for the coming quarter, and that's an interesting, particularly interesting recording for those who missed it. So today, let's talk about the current goal. The current goal is that we are onboarding people in the next few weeks. We are actively recruiting at least one to two devs more, and we are getting organized for the quarterly objectives that we outlined last time. Anything to add to that? Alex, on your.
00:01:35.730 - 00:02:01.720, Speaker A: Well, yeah. So just to mention to everybody that we have two people joined near EVM and bridge teams. So these people are Yuvgen Johanov and Kirilla Bramov. They are going to mainly focus on the bridging of base currency from Ethereum to near EVM, which is at. So guys, say hello to.
00:02:05.370 - 00:02:20.860, Speaker B: Hello, hello Yevgeni and hello Kiril. Welcome on board. So let's work through our updates and then we probably have a number of things we can discuss. Alex, why don't you start?
00:02:21.330 - 00:03:11.982, Speaker A: Yeah, I was working mainly on hiring. I actually reached all of the majority, at least people in my network, trying to convince some of them to join us and help us in doing some stuff. Some progress is there. I'm going to submit some referrals actually, and it's a bit later, sorry. Was working with art on the okRs, so we were refreshing it a little bit. Was doing a little bit of thinking on how we can organize the bridging to EVM. So I'm not ready to present it right now, but I was posting some questions, Ilya, to you and how we can do this.
00:03:11.982 - 00:03:22.720, Speaker A: So some additional things to discuss, but maybe we can move this to discussion. Yeah, and besides that, on the even side, probably nothing.
00:03:25.590 - 00:04:37.000, Speaker B: And my updates are very similar. So recruiting, on the one hand, in order to make our quarterly objectives defined last week, we do need one to two devs more. So that's an active topic right now, given that we need people sooner instead of later, and onboarding our new recruits and in general working through what is needed to onboard people to EBM primarily, but also with Alex's collaboration to the bridge team so that we can systematize this process. It was rather disorganized when I joined myself, as in we didn't really have anything I could work through as a checklist and now we have something and very happy to get feedback on that if we are missing anything from that documentation, especially as Ukrainian Kirill as we work through it. Please note either as comments or indeed directly changing documentation. Anything that needs improvement in particular for everything to do with the near docs repo, just go ahead and submit a pull request. It's no need to ask anybody.
00:04:37.000 - 00:05:00.640, Speaker B: Yes, and indeed a lot of OKR roadmap planning. Eugene, are you with us today? No. Eugene okay, Yevgeny, why don't you describe a little bit your first week?
00:05:06.130 - 00:05:08.240, Speaker A: Yevgenyu Khanov yeah.
00:05:08.630 - 00:05:40.250, Speaker B: Okay, thank you. About my report this week, I investigate a lot of documentation of Nier and actually I tried to build some repositories. I have some problems and currently I solved all problems and actually I continue to investigate documentation and yes, and that's still in progress. Sounds good. And frank?
00:05:41.570 - 00:06:12.600, Speaker C: Yeah, I was working through some problems with cargo also, like reading the cargo book to understand cargo better and then mostly extended the crypto zombie code we have in near core. So we now also have the ERC 721 functionality there and extended the tests with it, transferring ERC 21 tokens. And then next up is doing a benchmark there.
00:06:13.450 - 00:06:17.000, Speaker B: Okay, so with benchmarking, you're just getting going?
00:06:18.090 - 00:06:33.870, Speaker C: Yeah, I ran into some problem last week with benchmarking the balancer tokens. So it seemed to be easier to just benchmark the ERC 721 first and then move to the ERC 20.
00:06:34.020 - 00:06:36.640, Speaker B: Okay, does it mean go ahead?
00:06:37.890 - 00:06:50.098, Speaker C: Yeah. Calling the balancer contracts was more difficult because they need arguments and I ran in some bug there I didn't figure out yet.
00:06:50.264 - 00:07:02.278, Speaker B: Okay, could you say that after you figure that out is crypto zombies, is it a done deal, you don't need more tests or do you plan to add more?
00:07:02.364 - 00:07:03.830, Speaker C: I think that's enough then.
00:07:03.980 - 00:07:04.630, Speaker B: Okay.
00:07:04.780 - 00:07:07.190, Speaker C: Once we have the benchmarking, I think that's enough.
00:07:07.340 - 00:07:08.086, Speaker B: Okay.
00:07:08.268 - 00:07:14.554, Speaker C: Can always do more, but I think it makes more sense to then focus on other things.
00:07:14.672 - 00:07:24.190, Speaker B: Okay. Diminishing returns. Okay, so after that benchmarking, then, yes. Okay, Eli, anything you want to comment?
00:07:30.130 - 00:08:01.020, Speaker D: Hey, yeah, I haven't done much on this side, but I'm going to take a look at adding value to my transaction call and also expanding to use two bytes for the length of the method definition should have like a quick pr to near core over the weekend and then we will need to modify our webc provider and the RPC proxy to follow that.
00:08:03.230 - 00:08:05.740, Speaker B: All right, Kirill, how was your first week?
00:08:11.410 - 00:08:17.950, Speaker A: Kirill is reconnecting at the moment, some issues. He will come back. Yeah, Mike.
00:08:19.330 - 00:09:08.400, Speaker E: Yeah, sorry, not feeling super good. So there was a beta net chain id issue in your web three provider where we have now a new chain id for that network in particular and just had to make a simple fix to update that in the web three provider. So that is fixed. Had to do a quick fix to the EVM simple repository which is basically the simplest version of interacting with the EVM and based on Ilia's suggestion moved the keys around a little bit so it's as simple as possible. Pushed one of the changes yesterday for that. Oh yeah. And then yesterday also.
00:09:08.400 - 00:09:39.674, Speaker E: Thank you Evgeny for pointing out the web three was not available in browsers that don't have like metamask. It's been a while since I have used a browser like that, so thank you for finding that out. So I just made a super simple change explicitly importing web three so that it all works there. That was my mistake before. So that is pushed to near pet shop so no one in any browser will see an issue.
00:09:39.712 - 00:09:40.300, Speaker B: Now.
00:09:42.190 - 00:10:36.214, Speaker E: I did note that I haven't made an issue for this yet, but near API JS has changed serialization and they've done a good job of keeping notes in the change log about this, but I missed it. So we're going to have to change a little bit of near web three provider as they actually change the method names and whatnot. And so if we want to keep near API JS updated with that then we'll need to make that change. So I'll create a tiny issue for that. Shouldn't be bad. I will note that I'm getting pulled into lots of manager tasks so I'll probably be super limited on EVM but got stuff going. And the last thing is, just for fun, I am making a really simple web interface for EVM.
00:10:36.214 - 00:10:58.530, Speaker E: Simple. That'll be a good place to start off and I really want to carve some time to make a video on that. So you can look forward to EVM simple having node js and also a super simple front end showing people how to use it. Just an HTML file that loads everything. That's it.
00:10:58.680 - 00:11:05.154, Speaker B: Okay, sounds good. Kirill, if you're back with us. Yeah.
00:11:05.272 - 00:11:05.890, Speaker F: Hi guys.
00:11:05.960 - 00:11:06.338, Speaker A: Sorry.
00:11:06.424 - 00:11:07.060, Speaker B: Hi.
00:11:09.210 - 00:11:14.946, Speaker F: Didn't have a chance neither to turn on my video or mic, so I needed to reconnect.
00:11:15.138 - 00:11:18.120, Speaker B: No worries. How was your first week?
00:11:19.550 - 00:12:00.630, Speaker F: It was very interesting and I'm very happy to join the team. It's a very good and inspiring project. And mostly at the current week, I would say that I'm at the same stage at the beginning, so I'm setting up my development environments, getting ready for future tasks and issues. And at the moment I'm discovering the near documentation and trying to follow the onboarding guides, reading the messages, what happened last two or three months or so, and at the moment mostly focused on the bridge documentation.
00:12:02.650 - 00:12:12.970, Speaker B: Sounds good. So did you have any Kirill, did you have any questions you wanted to raise? Everything is going okay with onboarding?
00:12:13.790 - 00:12:35.250, Speaker F: I would say everything is going okay at the moment. We just had another one on one talk with Alex Shovchenko and we have discovered together and Alex told me a lot about the bridge functionalities and challenges that we will need to solve in this hour. Interaction between EVM and bridge teams.
00:12:37.030 - 00:13:23.600, Speaker B: Sounds good. All right, so that's the weekly updates for this week and let's see who we have here, which are the topics that we can discuss with the current set of people. So potential topics we could discuss, of course, include more about the base token, including now that we have. As Alex noted, we have the plan to assign Yevgeni and Kirill to work on this problem from sort of opposite sides, as in Yevgeni from the EVM team side and Kirill from the bridge team side. So that would be one topic we don't have, Eugene. So I wouldn't tackle the question about storage accounting that we wanted to eventually talk about. Anything else somebody else wants to bring up?
00:13:26.390 - 00:13:30.434, Speaker A: Well, potentially we can go on.
00:13:30.632 - 00:13:30.946, Speaker B: Yeah.
00:13:30.968 - 00:14:06.000, Speaker D: I mean, one thing I wanted to discuss is just really clarifying, when do we have the kind of secure and kind of stable EVM, and not just kind of what we consider it, but also, how do we make sure that all the stakeholders are aligned, that this is indeed true? Pretty much like kind of very clear launch criteria that we know everybody is agreed on.
00:14:06.610 - 00:14:07.360, Speaker B: Right.
00:14:08.530 - 00:14:13.120, Speaker A: Well, I think that it is at least partially in our okrs already.
00:14:14.950 - 00:14:20.594, Speaker D: And you have agreement across validators and everybody on the chain team?
00:14:20.792 - 00:14:28.774, Speaker A: Yeah. In terms of the validators, yeah. Actually, Arthur, would you be able to.
00:14:28.892 - 00:14:31.526, Speaker B: Yeah, I'm just looking for the link for that.
00:14:31.628 - 00:14:32.038, Speaker A: Yeah.
00:14:32.124 - 00:14:36.760, Speaker B: Since it moved, somebody has it. Feel free to send me.
00:14:37.530 - 00:14:40.122, Speaker A: Yeah. Going to do it.
00:14:40.176 - 00:14:58.918, Speaker B: Just a second. Consolidated all of the okrs into one place. And is it now? Probably. I know. Right. So let's go to the EVM.
00:14:59.094 - 00:15:35.690, Speaker A: Yeah. So India, you can see here that we have the EVM on Mainnet in this objective. We have a protocol upgrade, OKR. And there we have the metric. If you can go into the notes, then we are saying that validators agree to schedule and perform the near EVM deployment as a main net protocol. So this is what we'd like to achieve, obviously. And we do understand that there is an issue here that we just cannot deploy EVM to the main net.
00:15:35.690 - 00:16:22.442, Speaker A: Especially we haven't put this thing for the testnet, which is our main committed objective for this quarter. But obviously we are going to start the preparation here. And this is actually going in hand in hand with the other topics that we would like to reach out to the validators, which is for example the upgradability of the breach and how it is going to be managed over some period of time. So now we are going to start with the simple versions of the upgradability and continue there. And some other things too. This is something that is on the radar. Thanks for bringing this.
00:16:22.442 - 00:16:45.780, Speaker A: I do not think that this is something that we are going to agree on this call, because it should be like something like a wide discussion, for example, that was done by the validators when they need to turn on the vote. What are the criteria to transition to the phase two of the main net?
00:16:49.190 - 00:17:11.340, Speaker D: To be clear, whatever's on testnet will end up in mainnet kind of within some period of time. So I guess my question are more, what is the criteria for testnet? And I know you have the criteria. I think my question more is like how do we make sure that this criteria is aligned with everybody?
00:17:12.030 - 00:17:34.858, Speaker A: Yeah, our thinking was here that we need to make sure that on the testnet mainnet transition, everyone is agreeing on this. Do we want to put this one step down on the delivery to the testnet?
00:17:35.034 - 00:17:47.438, Speaker D: Yeah, because whatever's running on testnet is pretty much pre prod. Yes, validators can drag their feet. Ideally it should be enough time to testnet, but testnet is kind of our prod.
00:17:47.614 - 00:17:51.922, Speaker A: Yeah. Okay, so then let's move this protocol upgrade.
00:17:52.066 - 00:18:04.620, Speaker B: No, this is not task. It doesn't make sense to move it. This is the desired end result. And that includes the whole roadmap to of course, beginning the conversation with the validators early. So we don't need to move anything here.
00:18:05.070 - 00:18:07.980, Speaker D: Yeah, I think it's the same questions of security.
00:18:09.550 - 00:18:33.234, Speaker A: Yeah, but if we are saying that. But if you are saying that, Arthur, I think it's better to move it down because if we are saying that the desired outcome of this quarter is that we are launching the testnet, this means that we need to agree on this.
00:18:33.352 - 00:18:35.614, Speaker B: Yeah. Which then changes it to committed.
00:18:35.742 - 00:18:36.420, Speaker A: Yeah.
00:18:37.830 - 00:18:52.138, Speaker B: Okay. Well, a lot of end results on that objective, but we will review those with Max later. Right. So that means that the conversation should be started, presumably on the forum. Ilya, I assume that's the best place.
00:18:52.304 - 00:19:13.200, Speaker A: Yeah. Let me start to need to finalize, for example, roadmaps. I think that this is something that is going to be done on the next week and then there are lots of things that I need to take care of and I'm going to do it.
00:19:13.830 - 00:19:14.530, Speaker B: Okay.
00:19:14.680 - 00:19:20.100, Speaker A: Maybe not just now, not tomorrow, but yeah, this is something that we for sure need to do.
00:19:20.790 - 00:19:29.540, Speaker B: Right. So in terms of the launch criteria, we have. Ilya, are you already familiar with these okrs or should we perhaps review?
00:19:30.390 - 00:19:31.150, Speaker D: Yeah.
00:19:31.320 - 00:20:40.940, Speaker B: Okay, so I'll just quickly mention for the audience that we have a stress testing, as in we will replay some transaction logs and we've defined that as a day and active adversarial attacks for two weeks on bitternet before testnet. And of course we need to get the go ahead from the SRE team overall. We need a little bit stricter or let's say more well defined criteria for what are the actual products or projects that we would measure the success here with. I have something in the works with Sasha on Devex, both a lot of alignment with other teams, which is also something we are working on right now. And of course, the prerequisite of upgrading to the Berlin hard fork. Right. Is this actually public, this URL? Can we share this with people?
00:20:42.210 - 00:20:43.280, Speaker A: I'm not sure.
00:20:44.050 - 00:20:49.280, Speaker B: Well, in any case, we have it in the presentation from I can see.
00:20:49.890 - 00:20:56.350, Speaker A: I think that they will not be able to access it since they're not inside of the New York.org.
00:20:56.510 - 00:20:58.660, Speaker B: Yeah. Well, in any case, it's on the.
00:21:00.870 - 00:21:03.410, Speaker F: There is a share feature in airtable.
00:21:05.510 - 00:21:07.810, Speaker B: You can open the table, press share.
00:21:07.880 - 00:21:11.074, Speaker F: Button, and it will generate a URL.
00:21:11.122 - 00:21:13.238, Speaker B: That can be shared with other people.
00:21:13.324 - 00:21:15.890, Speaker F: So that they can view the table.
00:21:16.050 - 00:21:30.330, Speaker A: That's correct. We are going to do this. Only one simple view is going to be shared with them. We are going to do this and we are going to put it under the simple link. This is something that's on my plate. I'm going to.
00:21:30.480 - 00:22:12.374, Speaker B: In any case, from last week's meeting notes, you can find the same information in the presentation we had. All right, so let's talk about some of the trickier issues. Let me see if we had anybody join? No. Okay. So I think the most important thing is the f based token. And we have to move that forward fairly fast. So the current plan is that I'll have to start looking through those changes on nircore, hopefully in collaboration with Ilya.
00:22:12.374 - 00:22:51.430, Speaker B: If you have time, Ilya. And then as we onboard Yevgeny and Kirill, we'll start tasking out pieces of the puzle on that side. Now, there is a concern that I raised with Max as well, basically that we have a committed objective here of being able to bridge Ethan ERc 20 and the bridge team. We need to support it. It's only aspirational for them. So I raised that as an issue. Any comments on that, Alex?
00:22:54.570 - 00:23:51.818, Speaker A: Well, in general. So the decision for making this aspirational was that the bridge team need to sort out everything that is in the main objective, the main committed objective, which is the productizing the bridge, which is here. And we were afraid a little bit that we are understaffed on this. Yeah, exactly. And we were discussing this, that this is important for the EVM. And it was a comment from Max that it is possible that we can have here misalignment in between the teams itself and it potentially can be. And it doesn't mean that we are not supporting you.
00:23:51.818 - 00:24:22.898, Speaker A: It just means that EVM team is taking the lead here. And that discussion was more than a week ago, as you know. So it was like almost two weeks ago. And since then some things have changed. So Kiril and Yuvgeni are now with us and they are the people that are able, and since they're both joined different teams and they can go in the same direction. So this is a pretty natural. And we discussed that.
00:24:22.898 - 00:25:02.654, Speaker A: That's a pretty natural thing for us to focus Kiril and Yevgeni on this task. And that's why I think that this base token bridging is something that we potentially can do this quarter and we are like resourcing this activity. So that's pretty good from my point of view. And let's do it. Let's keep it. It doesn't matter for me whether it is a red or green thing in the type of the key result.
00:25:02.852 - 00:25:35.402, Speaker B: Yes, but it might matter a little bit if you say it can be potentially done this quarter, that would matter to the EVM objectives. Can we do it this quarter or not? And I suggest we figure that out soonest. Otherwise we need to reevaluate our objectives here. So let's talk about the base token. I think. Ilian, would you be able to provide some guidance here. You know the code base, you wrote most of the code, relevant code, you know it the best.
00:25:35.402 - 00:25:38.940, Speaker B: What do you think are the next things we need to do to move this forward?
00:25:40.830 - 00:26:13.842, Speaker D: So if we just want to switch kind of east to be the base token, there's two things. One is we need to remove using near as a balance there. So that's pretty straightforward, but kind of need to go through all the places. But also we then need to figure out what to replace it with. Right. So if people do want to attach near, what to do instead. So this is a little bit more complicated.
00:26:13.842 - 00:26:38.602, Speaker D: Like we probably need AERC 20 wrapped near on inside EVM. And how does that connect with the wrapped near outside EVM? And then the other piece is implementing a fungible token standard as an interface on the EVM contract.
00:26:38.746 - 00:26:39.198, Speaker B: Right.
00:26:39.284 - 00:26:47.140, Speaker D: And so this is actually somewhat blocked by fungible token standard not being finalized yet.
00:26:47.510 - 00:26:50.850, Speaker B: What was the 141? Was that the case?
00:26:50.920 - 00:27:07.670, Speaker D: Yeah, 141. I think it's in reasonably good shape. I haven't fully tracked it, but probably can start implementing. But this is pretty much the blocking piece on that.
00:27:07.820 - 00:27:27.758, Speaker A: Yeah. Quick comment here. 141. So the fungible token standard, it was split into multiple, into three actually parts. And this one is only one of these parts. Two are necessary and one is optional. So this is only a half of a standard.
00:27:27.758 - 00:27:59.580, Speaker A: Well, the bigger half, but still only half. And this is about the transfers itself. Now an additional NEP should be created for the accounts itself, and that is what still should be done. Also, a person from the community said that he would like to do the reference implementation of NAp 141, which is good. And the overall, I don't know.
00:28:01.710 - 00:28:02.026, Speaker D: At.
00:28:02.048 - 00:28:13.280, Speaker A: Least if guinea or Eugen is saying that it is in the good shape. And maybe, Mike, you can comment because you were on the last call on the standard.
00:28:15.730 - 00:28:32.738, Speaker E: So we're talking about the new fungible token standard. Yeah, I would say that's moving forward pretty well. And that's like our primary focus on berry pickers is to get that done soon. Was there a specific thing you wanted to know about this?
00:28:32.824 - 00:28:33.074, Speaker B: Sure.
00:28:33.112 - 00:28:38.280, Speaker A: No. Maybe you just wanted to add something in terms of how it is going, but all good.
00:28:38.730 - 00:28:53.980, Speaker B: Well, in terms of us implementing that on the EVM account, we just need the interfaces. Right. Final interface for that. And of course, if the interfaces still have changes, we can also adjust along the way, at least up to the point when we go to.
00:28:56.030 - 00:29:02.950, Speaker D: Ilia, it's just like adjusting interface will require a bump in protocol version every time.
00:29:03.040 - 00:29:05.582, Speaker B: Absolutely. But on beta net, not really hard work.
00:29:05.716 - 00:29:11.600, Speaker D: Yeah, I know. It's way more annoying than if it was just a contract. Right. That you just.
00:29:14.050 - 00:29:17.040, Speaker B: Did you indicate that this would be what you're interested to go from?
00:29:20.390 - 00:29:53.180, Speaker D: I can give a stab. I think the piece that we really need to do is figure out the second item here. The first and third is like, they're pretty straightforward. As soon as the interface for fungible token is finalized, it should be straightforward to do the figuring out how to pipe near instead. I don't think it's going to be blocking right away, but it's going to be pretty hard to do stuff without that.
00:29:55.950 - 00:29:56.326, Speaker B: Okay.
00:29:56.368 - 00:30:07.258, Speaker D: And this relates to actually what Alex Shevchenko was mentioning. Like, how do we in general bring tokens from outside of EVM into EVM?
00:30:07.434 - 00:30:17.090, Speaker B: Yeah. Need some collaboration and coordination there. Well, I'll take this on if we don't have any volunteers.
00:30:21.930 - 00:30:34.650, Speaker A: One short question here. So I was like going out of the computer for a second. So what's the main topic here? We would like to breach Nier inside of Evm?
00:30:35.950 - 00:30:42.700, Speaker B: Not really. This is about figuring out how we change to actually using f as the base.
00:30:43.650 - 00:30:47.120, Speaker A: Yeah, I understand it. But this specific point.
00:30:49.010 - 00:31:17.702, Speaker D: How do we do near instead near inside of evm environments? Yeah. So we're switching the main balance to become eth, but we still need near. The near is kind of the base token of the kind of outside. Yeah. So there's still things which are like if people attach, for example, if people attach balance, well, we can fail. That's easy. But there should be a way.
00:31:17.702 - 00:31:34.926, Speaker D: How you bring near into. But then more abstractly. Right. Is then how do you bring any fungible token like NEP 141 token into EVM? That's what you were asking.
00:31:35.108 - 00:32:13.382, Speaker A: Yeah. So I already started to work on this. So I think that generally we have discussed in the bridge team that a good way how to do this is. Well, first of all, do not have a hard connection with the existing bridge. So the internal bridge in between near native vm and near EVM, it should be like a separate contract. It shouldn't be aware of the breach itself. And this is pretty natural because any fungible tokens that we are created on the near side should also be able to be breached inside of near EvM.
00:32:13.382 - 00:33:42.840, Speaker A: So this is one thing. Now imagine that we have this thing now, if we have breached a token from ERC 20 to NEp 141, if we did that breach now, we need to, if we have this breach and then Nep 141 to n ERC 20, then the question is that a user, an ethereum user, he needs to be able to do this breach in a single transaction because he is not able to schedule near transactions because he doesn't have a near account. So we cannot actually end tokens after the first bridge in near account. The only thing that we can do is to land it into the escrow smart contract, which can be then. So we are putting this NEp 141 tokens after the first breach in the smart contract and then somebody on behalf of the user, any relayer, any type of service is able to call this smart contract with a near transaction. And this near transaction is going to ask the internal bridge to move these tokens inside of the EVM. So I think that this is the way how this should be done.
00:33:42.840 - 00:34:57.550, Speaker A: And if so, then for the Ethereum users the workflow will be pretty straightforward. They are going to schedule a couple of transactions on the Ethereum side only in the beginning of the transfer. Then some relayer is going to finalize this first transfer on near side issued first near transaction. However, this transfer is going to end up in the escrow account and then the second near transaction is going to be calling the escrow account to transfer this into the EVM like this. Now in order to implement this, we would need to change the proofs and this is the only thing that we need to change the proofs in the fungible token connector in the Rainbow bridge. And these proofs need to include one additional small field. Instead of having only one near account where we would like to bring the tokens, it needs to include also an EVM account where we would like to eventually bring the tokens.
00:34:57.550 - 00:35:10.420, Speaker A: The second filter should be optional. So it is going to be a simple change for the Rainbow bridge. But still we would be able to implement this.
00:35:13.670 - 00:35:27.858, Speaker D: Question. Why don't we just have a generic forward, like the receiver is a generic forwarder which is kind of following what fungible token standard right now became.
00:35:28.034 - 00:35:33.050, Speaker A: Yeah, because then we need to change the fungible token factory.
00:35:35.870 - 00:35:56.146, Speaker D: But we need to change them anyway because we need to follow the standard right now. The new standard, the new standard includes transfer with callback. Okay, so if you have transfers callback, we just need kind of a mint with callback, kind of the same.
00:35:56.248 - 00:36:04.180, Speaker A: And where we will get this callback, how do we know what function should be.
00:36:05.270 - 00:37:00.790, Speaker D: So the way this would work in your transaction on Ethereum, you format it as transfer this funds to EVM. DSC 20 address your account address the nap 141 connector on near side gets a mint with callback. It mints it and instead of putting it to the, instead of having receiver, it puts it into a vault and calls a callback which calls evms into EVM into your c 20 contract, which then says, like okay, put it on this address of this user and then returns back to the vault and says yes, put it on the EVM account.
00:37:00.940 - 00:37:46.466, Speaker A: Yeah, I thought that this is something that is possible. The only thing that, what I really wanted to conserve is as much of the token connector, the near native token connector as possible. So if we potentially can remove this and do it with a single transaction, and just this fungible token factory is going to call it and then the transfer is happening. But here we need to inject some additional logic in case this proof wants, using this proof, we would like to transfer the funds in the near EVM. Then we need to do the callback. If not, then just transfer it there.
00:37:46.648 - 00:37:57.720, Speaker D: Well, it's not just for EVM, right. You can transfer and do something with that funds directly. For example, it's the same way you can do a transfer and swap it, right?
00:37:58.830 - 00:37:59.580, Speaker A: Sure.
00:38:00.510 - 00:38:18.894, Speaker D: So it kind of just gives you more. This is the reason why the new standard has this transfer and callback kind of action, right? So given we're already going in with this pattern, it might be reasonable to have in a bridge mint and do.
00:38:18.932 - 00:38:40.260, Speaker A: Stuff kind of thing. Does it mean that in the Ethereum transaction we would need to specify the function and, well, the callback function and the arguments of this function. Is this correct?
00:38:40.710 - 00:39:00.538, Speaker D: Yes. What that arguments would be is that it should call EVM account method call. And the arguments are, the first argument would be like whatever the contract address of the ERC 20 and then the receiver address or something.
00:39:00.624 - 00:39:25.620, Speaker A: Okay, and what about the encoding of this? Then the event is scheduled with this information and how this event encoded. Are we able to get this simple just like strings from it on the near site?
00:39:28.550 - 00:39:54.060, Speaker D: Yes, it will be like a mix of things, but yeah, pretty much in one place. You'll need to have RLP encoding of some things. But first of all, Ethereum has this, but actually this is an input that front end will be generating anyway. It's front end that defines when you send fund. Where should they should.
00:39:54.450 - 00:40:46.474, Speaker A: Sure. Well, okay, yeah, in this case it is going to be just a general change for so there will be no ifs. It's just like, well, if we specify the callback, then do the callback. If not, then let's not do it and that's it. Okay. Yeah, but now the question is how we can implement the internal bridge and this is what I posted internally. So we should literally need to be able, from the near VM schedule for execution, an Ethereum transaction, because literally this bridge, what it should do, it should be able to deploy an ERC 20 token inside of near EVM.
00:40:46.474 - 00:40:54.270, Speaker A: It should be able to mint some tokens, it should be able to transfer these tokens or potentially burn.
00:40:55.190 - 00:40:58.420, Speaker B: What do you think is missing, Alex? I think you can do all that.
00:41:00.550 - 00:41:54.580, Speaker A: I'm just checking. So I'm just saying that near smart contracts need to be able to schedule Ethereum transactions to the EVM at the moment. Yes. So the thing that I'm missing the link here is how it is treated in terms of. So it should be treated very differently from the relayed Ethereum native transactions because we relay Ethereum encoded transactions and what we are scheduling from our smart contracts is already decoded transactions and we need to attach to the first ones. We need to account for the first ones with the EVM gas, which is obviously then recalculated in the near gas. And for the second ones, the transactions from the near native smart contracts we need to attach only.
00:41:54.580 - 00:41:59.480, Speaker A: They are not able to attach Eth. They can attach only near.
00:42:00.250 - 00:42:00.710, Speaker B: Yeah.
00:42:00.780 - 00:42:03.960, Speaker A: So I'm just checking that is something that is possible right now.
00:42:05.770 - 00:42:07.080, Speaker B: I believe. So.
00:42:13.150 - 00:42:34.538, Speaker D: The mental model of EVM. EVM is just a contract inside near. And so any contract can call other methods on that contract with the proper arguments, deploying a kind of EVM contract inside EVM. Okay. Need a little bit better language.
00:42:34.714 - 00:42:38.030, Speaker B: Yeah, EVM contract inside EVM.
00:42:38.370 - 00:43:14.622, Speaker D: Yeah. Let's call solidity contract, any EVM bytecode, but let's call it solidity contract inside EVM near contract, just a call on a method which is called deploy. Literally you can actually have a near contract like webassembly contract which has inside, it just has a solidity bytecode and just calls EVM deploy with that bytecode and that actually creates a new contract and then you get a callback event.
00:43:14.756 - 00:43:21.040, Speaker A: And what about the encoding and stuff like that? Because we have the different.
00:43:23.330 - 00:43:41.142, Speaker D: Encoding is a pain, but it's a pain that you need to deal with. So it's like you pretty much need to RLP encode arguments when you're calling contracts inside EVM. We have libraries in rust, so any rust contract can do it.
00:43:41.196 - 00:43:41.510, Speaker B: Yeah.
00:43:41.580 - 00:43:52.870, Speaker A: So literally we need to have two deploy methods. One is of the encoded transaction and the other without encoding.
00:43:53.370 - 00:44:13.454, Speaker D: So just forget about transaction. The transactions go separately. There is an interface called deploy and call, which is just a contract methods. Yeah, there is also receive a fully encoded Ethereum transaction and deal with it. This is a separate thing, not getting used in this way.
00:44:13.492 - 00:44:15.166, Speaker A: Yeah. Okay, great.
00:44:15.348 - 00:44:16.990, Speaker D: Two different paths, pretty much.
00:44:17.140 - 00:44:40.060, Speaker B: Okay. All right, so let's table that for now. We don't have a lot of time left. One thing I would raise is that, yes, we do need to upgrade betanet, preferably sooner. Right? Given that we actually are inviting people to hack on it. And Mike, this is also a question for you. What happened with that blog post you plan to publish? Is that on the agenda still?
00:44:41.470 - 00:45:24.440, Speaker E: My read on this is it's not in the near future, honestly, it sounds like. I think marketing is working on sort of a broad post about everything we're doing in Ethereum. Including the bridge, including this, including, I think, one other thing. But we do want to invite the community in to help hacket this thing. I'm not exactly sure. I think that maybe the best way is to kind of have a lot of Twitter conversations about this, but I don't really know. I'm kind of giving up on the blog being published soon.
00:45:24.970 - 00:45:53.870, Speaker G: Can we get a pushback from towards marketing and say, can you give me estimate, like one or two weeks? If not, then we'll publish it without this strategy because we need testing. It seems like we shouldn't block content that's already there and wait for one push. It can be reiterated on a future event if needed referenced. I don't think we should wait for one.
00:45:53.940 - 00:46:29.674, Speaker D: I agree with Eugene. Yeah. If you have content, yes, it's great to have an overarching thing and we should have it. But actually, I don't think we're actually ready for overarching thing because it's not really on main net, neither bridge nor EVM fully functioning. So I would say, yeah, hey, let's start hacking. Kind of blog post can go out sooner independently of the bigger story, and then bigger story can be developed as like bridging EVM, getting closer to production or in production, ideally, yeah.
00:46:29.712 - 00:46:41.502, Speaker B: I had suggested if it doesn't work for the blogs timelines, Mike could just write it up as a gist and he would be able to send the information to whoever needs it. Mike, did you already.
00:46:41.556 - 00:47:05.414, Speaker D: Well, I mean, Twitter storm with links to documentation, always one. One option is just post on the forum and just tweet about it. And then we all retweet and also link people who would go to hack on this.
00:47:05.452 - 00:47:31.790, Speaker B: Right, right. We have now a dedicated EVM subforum here. So we have under development EVM and bridge. Bridge is pretty empty. Perhaps somebody can move any relevant posts into there. For the EVM category, I already moved a couple of relevant posts. The token discussion was actually posted in economics, so I figured maybe it belongs there.
00:47:31.790 - 00:47:53.190, Speaker B: But the other things are moved here, just so you know what's over here. So this might actually be a pretty okay option for getting the word out. You have very good markdown formatting, including embedding of pictures and videos and whatnot. And you can get all the feedback directly under it. It's not a bad idea, perhaps.
00:47:53.690 - 00:47:54.854, Speaker E: Sounds good.
00:47:55.052 - 00:48:28.850, Speaker B: Okay. All right, let's see where we are. So outcome is probably publish on publish on forum soonest. I think we finished the review on that, right? Everything is ready and waiting for already sometime two weeks. Okay. But so once we have the blog post out, hopefully we start to get people hacking on it. And that does come with the caveat that we wouldn't still plan to change the world from underneath them in terms of the base token.
00:48:28.850 - 00:48:40.260, Speaker B: So how do people feel about that? As in the balances, somebody start hacking on it. On Beton it balances right now represent.
00:48:42.120 - 00:48:50.470, Speaker D: Their balances switch from being near to eth, they'll just get thousand x. Yeah.
00:48:51.320 - 00:48:54.292, Speaker G: I need an account, right?
00:48:54.346 - 00:48:54.564, Speaker B: Yeah.
00:48:54.602 - 00:48:58.570, Speaker D: This is an opportunity of a lifetime at first. No.
00:48:59.420 - 00:48:59.880, Speaker B: Right.
00:48:59.950 - 00:49:01.560, Speaker G: Can I link it on Twitter?
00:49:02.220 - 00:49:41.720, Speaker B: Please do. Okay. But so in any case, I think from my point of view, we have to get the beta net upgraded during February in order to have time in March for all the things we want to do on beta net in terms of stress testing and incentivized attacks and whatnot. So sooner it's better. So I would say as far as I can see, that's the number one thing to work through. Get Betanet to be using the base balance and then people can hack on it and we won't pull the rug under them anymore.
00:49:44.380 - 00:50:00.428, Speaker A: Yeah. And I encourage here us to solve the giant pain point that there is in the testnets of Ethereum is that it is a really hard thing to get the tokens there.
00:50:00.514 - 00:50:02.780, Speaker B: You're talking about Ethereum testnets, I hope.
00:50:02.850 - 00:50:30.420, Speaker A: Yes, that's correct. So literally in our beta net and testnets, we would probably do not want to have Ethereum as is and we would not be able to have it before we have built the bridge. But we need to give people some tokens, which is not the near tokens. So it's just like let's design something that will give people some tokens by default and that's it.
00:50:30.490 - 00:50:31.110, Speaker B: Okay.
00:50:32.680 - 00:51:18.390, Speaker D: Yeah. So there's like a couple of things here. One is this is like the other piece is the ease as a token, right? There will be way to mint it. So we can just on betternet leave some faucet contracts can just call that and, and that faucet contract has no limits. But the other thing is all the transactions and meta transactions, they have the payment feature and so we can just potentially just charge zero for that. The only problem with that is people are not testing then.
00:51:21.740 - 00:51:25.560, Speaker B: But it's paid on it. So maybe as long as we do that on Testnet.
00:51:26.380 - 00:51:39.790, Speaker D: Yeah, whatever we do here with faucet we should probably do on Testnet as well. We should figure out for testnet if we want bridge as well, included or not.
00:51:41.360 - 00:51:44.380, Speaker B: Those are some of the obvious next steps.
00:51:44.800 - 00:52:24.990, Speaker A: And also I just want to mention that I know that we run out of time, but this is also connected with the initial supply of ETH on the main net once we are going to deploy this. So EVM contract, potentially this is something that we still need to discuss. Maybe it would be worth of somebody buying beforehand before even the bridge is launched, because the bridge should be launched like after the instance of the EVM deployed. So maybe we need to put in some f. Already there.
00:52:25.840 - 00:52:28.956, Speaker D: Wait, why is bridge deployed after?
00:52:29.058 - 00:52:31.916, Speaker A: I thought, well the first version of.
00:52:31.938 - 00:52:36.140, Speaker D: The bridge should be, it should be anytime.
00:52:36.300 - 00:52:43.440, Speaker A: Yeah, for sure. I'm just thinking about the separation of concerns.
00:52:44.180 - 00:52:49.920, Speaker D: Maybe I would prefer us not to create fake EtH anywhere.
00:52:50.260 - 00:52:56.690, Speaker A: Yeah, but this fake eth might be held in the wallets of the foundation or something like that.
00:52:57.220 - 00:53:03.380, Speaker D: But if we have bridge, we don't need to do like EVM should just point at the bridge.
00:53:03.540 - 00:53:11.770, Speaker A: Well maybe closer to this point we can review what we can do. But yeah, I'm just mentioning that potentially there is something here.
00:53:12.300 - 00:53:42.870, Speaker B: Okay, well I think we are running out of time. Does anybody have some quick comments, questions? Is it enough for today? I'll write up, by the way, all of this on the forum. So we've agreed now that all teams are posting forum updates weekly, this update will go not only to GitHub discussions, it will go to the forum under the EVM subcategory and we can discuss further there. All right, so I think that we are done for today.
00:53:43.240 - 00:53:43.748, Speaker D: Yeah.
00:53:43.834 - 00:54:01.850, Speaker A: One very small adjustment, I believe the thing that would be really convenient to everybody if we are going to stop videos and then it will be dedicated video for the EVM, because the next hour we are going to spend with the bridge team.
00:54:04.060 - 00:54:13.720, Speaker B: Let'S cut it because we want them as separate videos for sure. Okay, well then thanks everybody. And Mike, hope you get better soon and talk to you offline.
00:54:14.620 - 00:54:15.456, Speaker D: Thank you.
00:54:15.598 - 00:54:16.320, Speaker C: Bye.
00:54:17.220 - 00:54:17.980, Speaker B: Thank you. Bye.
