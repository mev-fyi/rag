00:00:00.250 - 00:00:00.800, Speaker A: You.
00:00:04.130 - 00:00:16.814, Speaker B: Hi everyone, this is Alex from Mir. With me today are JD and arbit from Matic and we will talk a lot today about L2, plasma side chains, all things. Would you like to introduce yourself guys?
00:00:16.852 - 00:00:27.670, Speaker C: And yeah, my name is Venti Kanan, I also go by JD. I'm a founder and CEO at Matic and also lead the research team at Matic.
00:00:28.090 - 00:00:35.560, Speaker D: So my name is Agarwal and I work as a blockchain engineer at Matic. So things like plasma and everything else.
00:00:36.090 - 00:00:36.646, Speaker A: Cool.
00:00:36.748 - 00:00:40.860, Speaker B: So do you guys like to introduce the overall design of the system?
00:00:43.790 - 00:01:37.350, Speaker C: So first of all, we are L2 and we rely on ethereum very heavily for security. So let's example like this is chain user mostly deposit their tokens in a contract. So basically we call it a root contract. Root chain contract, basically. And when users basically deposit contracts on the root chain contract, it will appear on the side chain. Is our side chain is basically EVM compatible. And each ERC 20 and ESC 17 721 contracts are basically plasma secured contract.
00:01:37.350 - 00:02:29.046, Speaker C: So I will explain you a little bit like one after this one. So this is like other chain which is EVM compatible. And whenever you deposit, deposit your tokens here, the validators basically create your deposit here. So basically let's say if you deposit ten die here, it will appear like ten die here in your accounts. Most of the plasma solutions like plasma bash, Tesla are like kind of Utxo or the range basis. We use accounts paid accounts to follow the 20 and mostly tokens and nfds. Apart from that, this is overview two chains.
00:02:29.046 - 00:03:29.770, Speaker C: We also have a validator chain here, we just call it handal. So handal basically we use Cosmos SDK very pretty heavily and it uses a tendermint consensus. So whenever you, let's say deposit ten dies here, they will actually sign on the deposit and then make a deposit to here. And it just maintained eyes for that user. And for this layer, this is basically the validators layers and they choose who become the blocker research for certain amount of time. So let's say we have like 100 validators here and it choose like let's say 52 or something like that, numbers. And it will become like for ten minutes they will produce the blocks for the side chain.
00:03:29.770 - 00:03:31.514, Speaker C: And they take turns producing blocks.
00:03:31.562 - 00:03:31.966, Speaker A: Yes.
00:03:32.068 - 00:04:16.090, Speaker C: So basically this is like simple, we just use gas EVM here and we have customized consistency instead of keep and they just take turns and produce a block here. In terms of the surround rubbing and the person, the probability of choosing get chosen by the block producer is by how much stake do you have at this layer? So let's say if you want to become validator, you put your stake as a medic token here. We just call it like stake manager.
00:04:17.150 - 00:04:18.474, Speaker B: Okay, it's separate contract.
00:04:18.522 - 00:04:55.130, Speaker C: Yeah, it's separate contract just to make. This is like bigger contracts because we have like plasma contract, the proof, et cetera. So we have different contracts. We just take the deposit and you become the validator. After some point of time. When you become a validator, you can actually start depositing and validating the chain. After, let's say ten minutes or so, all the validators, not just the chosen ones, all the validators collect, verify these blocks and create the hash of the blocks.
00:04:55.130 - 00:05:04.190, Speaker C: This is like a four block. We just create a multiple root of the block of the four blocks and just push on the Ethereum chain as a checkpoint.
00:05:04.850 - 00:05:07.040, Speaker B: And that happens once every ten minutes?
00:05:07.490 - 00:05:48.810, Speaker C: Yes, it's like we actually started with five minutes, but five minutes were pretty low because sometimes it takes too much time for confirmation checkpoint. So we are actually experimenting if you can increase it. But there are some trade offs because for those that between the checkpoints, you make sure you have a good check plasma security because I'll explain in bit later. But this checkpoint goes to here. And let's say if you want to exit with your tokens, you just provide a proof here. And it takes like kind of starts the challenge period. And for the challenge period, anyone can come very.
00:05:48.810 - 00:06:34.874, Speaker C: You already spend those coins here, or you are double spending it. Or you can start exit and let's say something happens here like fraud, et cetera, you can start exit immediately and you can exit before the fraud, the guy exits the max bitcoin. That's how architecture works. Yeah, this is like simple pvM. Our clock time here is like two, 3 seconds. It's like simple because we have committee person by here and we just create a block. And after some time, after ten minutes or so, every time of all the blocks they collect, this hind endemic consider simple.
00:06:34.874 - 00:06:39.066, Speaker C: They vote on the checkpoint and it goes to here.
00:06:39.168 - 00:06:39.626, Speaker A: Cool.
00:06:39.728 - 00:06:43.642, Speaker B: And on this chain, the fork chase rule is just whichever one is longest.
00:06:43.786 - 00:06:55.842, Speaker C: So here we know which block will create by which producer. So if he misses it goes ahead.
00:06:55.896 - 00:06:56.066, Speaker A: Right?
00:06:56.088 - 00:06:59.730, Speaker B: And what happens if, like. So the first producer created the block?
00:07:00.310 - 00:07:25.930, Speaker C: Yeah, it's basically so hh have different difficulty level, like similar to click. So if, let's say this is like 100 difficulty and same time I will have 99 or 98. So after three blocks, if this creates a block, everyone will accept higher difficulty.
00:07:26.910 - 00:07:33.886, Speaker B: So between this to whichever one has higher difficulty. If I'm four, I will choose this one. Because it's 99, right?
00:07:33.908 - 00:07:41.520, Speaker C: Yes, because if this person is down the token start.
00:07:44.370 - 00:07:48.514, Speaker B: And how is difficulty? Does like accumulate over time?
00:07:48.552 - 00:08:04.600, Speaker C: So basically it's not accumulating. It's a simple you can authority. This is the round of it. So let's say if it's a turn off, like person, a will have 100 and then the backup guys will have b and C will have 99 and 90.
00:08:05.050 - 00:08:07.042, Speaker B: It depends on how many you skipped.
00:08:07.106 - 00:08:07.334, Speaker A: Yes.
00:08:07.372 - 00:08:10.380, Speaker B: So three. In this case skipped a block. And so that's going to be a lower.
00:08:15.150 - 00:08:53.400, Speaker C: Click. Okay, so basically it's, basically, let's say, let's say there are three people in the system. Let's say a, b and c. Let's say we say, okay, first a will create a block, and then after some time, after three blocks, a will again become a political. Now B and C will create a block instead of a if a is offline, but they have lower difficulty for them, like 99, 98. So if, let's say a goes down, maybe it delays a block and then b creates and then a again creates because a will have like kind of.
00:08:55.770 - 00:09:12.178, Speaker B: I see. And let's say a did not create a block. B creates a block, right? So this is the timeline, right? So a skips B creates a block.
00:09:12.294 - 00:09:12.960, Speaker A: Right.
00:09:13.730 - 00:09:18.366, Speaker B: C creates a block and then a wakes up and creates a block, which.
00:09:18.388 - 00:09:34.740, Speaker C: One will, basically we have like kind of three late number we chose like after three blocks, you can't just kind of, otherwise it will become.
00:09:36.230 - 00:09:39.880, Speaker B: But in this case, because this is only two blocks. Yeah.
00:09:44.810 - 00:09:50.520, Speaker C: Mostly if you like two, 3 seconds between the blocks, I think it will work.
00:09:54.330 - 00:09:55.830, Speaker B: More like 90 seconds.
00:09:56.650 - 00:09:57.400, Speaker C: Yeah.
00:10:01.210 - 00:10:23.502, Speaker B: Okay, so my question one is, let's go into the details of how tokens move from the tail chain to the side chain. So let's say I'm locking ten die, like I send them to the smart contract. And let's say that validators never actually acknowledge them somehow. What is my procedure to reclaim?
00:10:23.646 - 00:10:30.930, Speaker C: If you deposit here and they don't go here, they start exit from here.
00:10:31.080 - 00:10:33.940, Speaker D: This is like withdraw exit with different.
00:10:34.810 - 00:11:03.498, Speaker C: Connected with one registry. Because EVM doesn't allow huge contracts Ethereum. So we have multiple contracts and one of them is withdraw proof. You withdraw exit. So let's say if no one actually puts money here, you can start exit with your tokens here. And since you never actually make a transaction here, no one can challenge your transition here and you can start executing.
00:11:03.594 - 00:11:04.240, Speaker A: Right.
00:11:12.390 - 00:11:18.206, Speaker B: The first question to ask is, do I use the same accounts on your chain as I use on Ethereum.
00:11:18.318 - 00:11:25.318, Speaker C: Yes, we have different chain ids. So your signature will be, you can actually verify each transaction here with the.
00:11:25.324 - 00:11:31.398, Speaker B: Same signature that they use on Ethereum. Yes, as you say, you post on ethereum the same account id on the.
00:11:31.404 - 00:11:48.860, Speaker C: Same account, you will have same ten dies in your account, but different chain. Now, genid is different. Of course it's one. Then use something like 99. And with genid, you transaction and share.
00:11:50.530 - 00:12:05.060, Speaker B: Okay, and so what happens? Let's say I deposit tentai. Let's say they actually did appear here, right? Someone did put ten die on the side chain, but I didn't transact with them.
00:12:07.530 - 00:12:18.850, Speaker C: Otherwise. So basically, once you make a transition here, you can't exit with your ten die, because you already met, already transferred, but you can exit.
00:12:18.930 - 00:12:19.126, Speaker A: Then.
00:12:19.148 - 00:12:30.214, Speaker C: Let's say I transfer like nine dice to you, then I can exit with nine dice. And then no one can challenges, because this one was before, after the deposit.
00:12:30.342 - 00:12:31.260, Speaker B: I see.
00:12:33.410 - 00:12:34.160, Speaker A: Cool.
00:12:34.610 - 00:12:42.510, Speaker B: And so when I snapshot the Merkel route, so this Merkel route.
00:12:44.850 - 00:12:45.418, Speaker C: Every block.
00:12:45.434 - 00:12:47.730, Speaker B: Header has some sort of merkel root of the account itself.
00:12:47.800 - 00:12:48.034, Speaker A: Right?
00:12:48.072 - 00:12:52.610, Speaker B: And so, like, if I have an account, I can have a Merkel proof up to the merkel.
00:12:53.830 - 00:13:03.090, Speaker C: Yeah, this checkpoint is not the merkel root of the accounts. It's a multiple root of the block hashes.
00:13:03.170 - 00:13:05.000, Speaker B: But block hashes help the.
00:13:05.530 - 00:13:13.366, Speaker C: Yeah, so basically block hash is like, let's say in Ethereum, it has received roots, DX root.
00:13:13.478 - 00:13:13.802, Speaker A: Right.
00:13:13.856 - 00:13:26.010, Speaker C: And we have both these things and timestamp and the block number, everything goes here. So you can actually validate your receipt also. Here you can validate all transaction also.
00:13:26.160 - 00:13:27.450, Speaker D: Using this checkpoint.
00:13:29.810 - 00:13:41.470, Speaker B: I will say, okay, this is my account. Again, this is Merkel proof all the way up to the transaction route, for example. And then I will provide a hash of the block with that transaction. And then a merkle proof.
00:13:41.550 - 00:13:51.074, Speaker C: Yeah, exactly. The problem with this thing is that you have like larger proof size, twice.
00:13:51.122 - 00:13:52.840, Speaker B: As big, or how big is it?
00:13:53.850 - 00:14:29.486, Speaker C: Basically, you just have to check this receipt route, not the transaction route. In some cases depend upon the different cases. So for transaction, let's say if you want to check that my ten dies in one receipt or not, you can actually have like a simple receipt marker, Patricia proof. And the second group will be your block inclusion of the checkpoint. So let's say you have four blocks between the checkpoint. You also need to prove that, okay, your block was in this checkpoint.
00:14:29.678 - 00:14:30.226, Speaker A: Right?
00:14:30.328 - 00:14:41.666, Speaker B: And so if I'm sending. So let's say I have ten die. I'm sending them to someone. Let's say you're sending me ten die. Until there's a checkpoint to the Ethereum chain, I cannot challenge, right? Because I cannot provide a proof.
00:14:41.698 - 00:15:04.814, Speaker C: Yeah, so you can actually do that using the inflight proofs, but it has a limited sum for one transaction. So maybe you need to wait for some, let's say, if you want to make a ten ties transaction, and let's say if you want to make another transaction, you just wait for either signature of the block producers themselves or the checkpoint, right?
00:15:04.932 - 00:15:08.746, Speaker B: But so in a situation where all the block producers are malicious.
00:15:08.858 - 00:15:32.118, Speaker C: Yeah, so basically, if, let's say, all the block producers are malicious, in case, let's say if they don't send the checkpoint at all, you can't do much about it and have to exit with your ten dies with the inside. So he will explain more about inside exit, and then you can actually exit your ten dice here.
00:15:32.204 - 00:15:45.494, Speaker B: But to understand, the guarantee is, if there was a checkpoint, then even if all the block producers are malicious, I can exit. Yes, if there is no checkpoint, I can exit. Unless all the block producers are malicious, or like, unless a large percentage of them is malicious.
00:15:45.542 - 00:16:23.862, Speaker C: No, even if you can exit in both the cases, even if the block produce the holes related to us are malicious or not, you can exit. But the limitation is that you only exit with the kind of economical sector on the economical security, not the plasma security. So let's say you have two checkpoints here. Now you make like, let's say, ten day transfer here. If the stake of this block produces higher than your tender, you can exit because of your signature of this. So when you exit, you can provide a. You already signed my transactions in this receipt, right?
00:16:23.996 - 00:16:27.222, Speaker B: But then because block producers are malicious, they can create another block, right?
00:16:27.276 - 00:16:43.980, Speaker C: Yeah. So basically, when you exit in flight, you actually provide the link to your previous transaction. So it will be the priority of this transaction, not this transaction. So if the law process malice is here, you always exit before.
00:16:44.430 - 00:16:48.110, Speaker B: But what I'm saying is that I'm the receiver, I'm not the sender of the transaction.
00:16:49.170 - 00:16:53.310, Speaker C: You can also do either receiver, and you also exit with your right.
00:16:53.380 - 00:17:15.030, Speaker B: But imagine this situation. So you're a sender, you're a malicious actor, and all the data is colluding with you, or like 67%. So this is the checkpoint. After the checkpoint, you send me Tendai, but you also send Tendai to RPid right here. And then block producers, being malicious, they send both of them, right? And so I'm trying to exit.
00:17:16.410 - 00:17:23.980, Speaker C: So when you hear, when the block producer is trying to exit, they will have a different priority than you.
00:17:24.670 - 00:17:25.514, Speaker A: But how?
00:17:25.552 - 00:17:29.180, Speaker B: These two blocks are distinguishable on ethereum side because they have the same.
00:17:29.790 - 00:17:43.082, Speaker C: Blocks are same, but the priority will be different because you are actually referencing the different block previously created, which was good. This is a fraudulent one block.
00:17:43.146 - 00:17:43.470, Speaker A: Right.
00:17:43.540 - 00:17:51.570, Speaker C: So when you exit here in flight mode, you can actually reference to your previous one and exit with that priority.
00:17:52.310 - 00:17:53.940, Speaker B: What is my previous one?
00:17:55.190 - 00:18:12.730, Speaker C: Let's say you are sending me a ten die, so you will be my previous one. So I reference to your account. Hey, you had 100 die. You sent me ten dies, so I'm a legit one because your account was legit before this broke. And your priority will assign to me my exit.
00:18:13.390 - 00:18:17.046, Speaker B: But in the reverse situation, where you sending me. So you're sending me 100 die.
00:18:17.078 - 00:18:17.660, Speaker A: Right?
00:18:19.310 - 00:18:38.654, Speaker B: So let's draw it from here. Right. This is the theorem block from theorem chain, where you and your malicious actor, you deposit 100 die. So, as of this block on the plasma chain, you have 100 die. And this is the last metric for a long, long time ago. So this is the last metric.
00:18:38.702 - 00:18:39.250, Speaker A: Right.
00:18:39.400 - 00:18:55.774, Speaker B: So then a couple of blocks pass, and then the first transaction you make is you send ten die to me. In this block, you send ten diagos to me. And top of the frame.
00:18:55.822 - 00:18:56.094, Speaker A: Yeah.
00:18:56.152 - 00:18:59.480, Speaker C: Okay. Do you want to add something here?
00:19:00.030 - 00:19:01.002, Speaker B: Yeah, sure.
00:19:01.056 - 00:19:01.978, Speaker D: I can explain.
00:19:02.144 - 00:19:16.000, Speaker B: Okay. Still recording and jangle. Feel free to interrupt the flow like it's all being edited later. So they're going to remove everything.
00:19:16.370 - 00:19:16.734, Speaker A: Cool.
00:19:16.772 - 00:19:17.710, Speaker B: You want to jump in?
00:19:17.780 - 00:19:18.062, Speaker A: Yeah.
00:19:18.116 - 00:19:24.062, Speaker C: Yes, sir. Yeah.
00:19:24.116 - 00:19:25.998, Speaker D: So can I raise this part?
00:19:26.084 - 00:19:26.960, Speaker A: Sure. Yeah.
00:19:27.570 - 00:19:34.078, Speaker C: First, just point out your transaction proof, and then we can.
00:19:34.164 - 00:19:35.760, Speaker B: Yeah, I will explain.
00:19:36.850 - 00:19:38.360, Speaker A: So, it.
00:19:50.650 - 00:20:04.294, Speaker B: Okay, so we start with an Ethereum block, right? On the Ethereum block, JD, who is an extra actor, he bought his 100 die. So this is the first block where the 100 die appears on the plasma chain.
00:20:04.342 - 00:20:06.090, Speaker D: So are these real or malicious?
00:20:07.730 - 00:20:41.126, Speaker B: Up until this moment, it doesn't really matter up until here. So this is the last checkpoint. Everything was going well up until here. And so this is the first time where people start doing weird stuff. So the first thing JD does is he creates a transaction which sends to Alex tended. And the valid understand? Whoever creates this block, the block is fully valid. And I look at this block, I.
00:20:41.148 - 00:20:41.906, Speaker D: See this block exists.
00:20:41.938 - 00:20:57.646, Speaker B: And maybe a couple more blocks for build. Right, so there's like, two more blocks or maybe four more blocks. Yes, but checkpoint is nowhere close. So checkpoint is going to be. So I see this. I'm like, okay, my tokens are mine. There's a long chain here.
00:20:57.646 - 00:21:00.302, Speaker B: And I give JD his latte that he's paying for.
00:21:00.356 - 00:21:01.262, Speaker A: Yes. Right.
00:21:01.396 - 00:21:11.570, Speaker B: Then after that, he goes to the validators and they create a new block where he says the same ten die go to. So he was depleting his account.
00:21:11.640 - 00:21:11.826, Speaker A: Right.
00:21:11.848 - 00:21:27.494, Speaker B: So now they go to you to work with, and we send you 100 die, and then they build the same chain here. And the chains are indistinguishable, so there's no block skipped. All the signatures are correct. Right. And then they continue building this one.
00:21:27.612 - 00:21:27.942, Speaker A: Right.
00:21:27.996 - 00:21:32.760, Speaker B: And so I just sustained a huge loss of 100 days.
00:21:33.310 - 00:21:33.674, Speaker A: Yeah.
00:21:33.712 - 00:21:47.978, Speaker D: So we go with this assumption that. Not just an assumption, we have designed it in such a way that we assume that there shouldn't be any folks here. And if there were, folks, like, the idea is colluded or they were. So what you do is you prove.
00:21:47.994 - 00:21:50.574, Speaker C: On the root chain. So we have modified death a little.
00:21:50.612 - 00:22:02.210, Speaker D: Bit, which means whoever is producing this block, they sign this block as well. So what happens is, if at the same height, two blocks had signatures from.
00:22:02.280 - 00:22:04.290, Speaker C: Same directors, from same validator.
00:22:04.630 - 00:22:05.886, Speaker D: So you can go to the root.
00:22:05.918 - 00:22:06.722, Speaker C: J and prove that.
00:22:06.776 - 00:22:09.166, Speaker D: And then that behavior will be slashed.
00:22:09.278 - 00:22:09.698, Speaker A: Right.
00:22:09.784 - 00:22:13.430, Speaker B: But will the slash money be used to compensate people who lost money?
00:22:13.500 - 00:22:21.922, Speaker D: Yeah, something like that. Some mechanics of that. We are still thinking about that. But that slashing amount is. We'll somehow use that to actually, people are affected.
00:22:21.986 - 00:22:22.600, Speaker A: Yeah.
00:22:24.490 - 00:22:25.560, Speaker B: I see.
00:22:26.170 - 00:22:47.314, Speaker C: Mostly you actually wait for after deposit for next checkpoint, because you can actually transfer one or two in the economical security between the checkpoints. But for deposit, you might want to wait for next checkpoint, and then you can start putting your tokens so you can actually exceed with your reference in flight, even if something goes wrong.
00:22:47.432 - 00:22:47.954, Speaker A: Yeah.
00:22:48.072 - 00:22:49.140, Speaker B: Another question.
00:22:53.190 - 00:22:59.780, Speaker D: Basically, the idea is, if you're just selling coffee, you can wait for a block, and if you're selling a Lamborghini, might as well.
00:23:02.710 - 00:23:21.510, Speaker B: So let's say two scenarios, right? The blockchain is going to be the same, but the timeline is going to be different. So in one scenario, there's a block here where, again, malicious JD sends to me 100 tokens. 100 die.
00:23:21.590 - 00:23:22.220, Speaker A: Yes.
00:23:23.010 - 00:23:38.074, Speaker B: And then three blocks are skipped, and then the chain continues. And there's a second chain in which those three blocks do exist, but are the remaining blocks don't exist.
00:23:38.122 - 00:23:38.478, Speaker A: Right?
00:23:38.564 - 00:23:46.306, Speaker B: Okay. In this block, he sends money to yourself the same 100 day.
00:23:46.408 - 00:23:47.154, Speaker A: Right?
00:23:47.352 - 00:23:56.066, Speaker B: Now imagine two different scenarios, right? One scenario is that almost up until the checkpoint, this is the only chain that exists. Nobody can see this chain?
00:23:56.098 - 00:23:57.030, Speaker A: Yeah. Right.
00:23:57.180 - 00:24:08.614, Speaker B: And so for like, no, I have my 100 die because this is the only chain that exists. Let's say this is 9 million out of ten, right? And then right before the checkpoint, the validator create this chain.
00:24:08.662 - 00:24:08.874, Speaker A: Yes.
00:24:08.912 - 00:24:11.594, Speaker B: And snapshot it. And the second scenario is the other way around.
00:24:11.632 - 00:24:11.786, Speaker A: Right?
00:24:11.808 - 00:24:15.086, Speaker B: So whichever one is preferred, one of them is clearly preferred by the 4k tool.
00:24:15.108 - 00:24:15.246, Speaker A: Right?
00:24:15.268 - 00:24:16.142, Speaker B: I don't know which one.
00:24:16.196 - 00:24:17.120, Speaker A: Yes. Right.
00:24:17.490 - 00:24:19.726, Speaker B: So in this case, I will lose my mind, right?
00:24:19.908 - 00:24:20.638, Speaker C: Yeah.
00:24:20.804 - 00:24:22.430, Speaker B: And nobody gets touched.
00:24:23.810 - 00:24:26.798, Speaker D: So answer is same. So these two blocks are at the same level, right?
00:24:26.884 - 00:24:28.910, Speaker B: No, this is hill.
00:24:30.230 - 00:24:32.274, Speaker C: And the height will be same. Right.
00:24:32.312 - 00:24:35.860, Speaker B: So this is height. So this is height five, six, seven.
00:24:39.030 - 00:24:44.958, Speaker C: Block. Either create none or it's a time. Height will be the same.
00:24:44.984 - 00:24:50.166, Speaker B: Oh, I see. So let's say we're creating in the loop, right? So you then repeat that.
00:24:50.188 - 00:24:50.614, Speaker A: Me?
00:24:50.732 - 00:25:10.938, Speaker B: So let's say you were height one. Then, I repeat, skips a height, I will create two. Yes, I see. Okay, but that's still. Let's say. Okay, but I think I can still do that. So let's say three of us create blocks.
00:25:10.938 - 00:25:34.946, Speaker B: And so on this chain, it's just me. Well, it's bad idea because I'm actually being scammed here. So let's say someone. Let's say it's Vitalik, right? So Vitalik produces this block. Then Vitalik produces this blog. You guys don't produce anything. And then right before the checkpoint, the two of you wake up and you start creating these blocks.
00:25:34.978 - 00:25:35.126, Speaker A: Right?
00:25:35.148 - 00:25:37.750, Speaker B: So this is JD. This is our bit. This is JD.
00:25:42.590 - 00:25:43.098, Speaker A: Right.
00:25:43.184 - 00:25:55.014, Speaker B: So in this scenario, nobody gets flushed because nobody double signed, right. But your chain will have a higher priority at the end of the day. And so you can snap at your chain and double snap.
00:25:55.062 - 00:25:55.706, Speaker A: Right?
00:25:55.888 - 00:26:01.120, Speaker C: So basically, this is six block or this is the.
00:26:01.490 - 00:26:02.142, Speaker A: Right.
00:26:02.276 - 00:26:11.058, Speaker B: So the height will be. Let's say this is height one, two, three. Then this is four, five, six, right? And this is the same. This is three.
00:26:11.224 - 00:26:12.290, Speaker A: Let's erase.
00:26:14.550 - 00:26:19.202, Speaker B: This is 345678.
00:26:19.336 - 00:26:20.018, Speaker A: Right?
00:26:20.184 - 00:26:35.870, Speaker B: And so, and so, like in Vitalik's case, after this block, he skips yourself. Skips are bid, creates his block. Skips you, skips our bid, creates his block. Because you guys were just applying while in your case, you create to block skip Vitalik. Create to block skip Vitalik.
00:26:35.890 - 00:26:36.460, Speaker C: Right.
00:26:36.990 - 00:26:40.474, Speaker B: But this chain existed for the nine minutes this one was not.
00:26:40.672 - 00:27:01.818, Speaker C: It can exist. Like multiple people can actually create a block however they want. But as a user, I will see, okay, this is the real priority. The difficulty with higher difficulty block producer. So I will consider this as this much.
00:27:02.004 - 00:27:18.546, Speaker B: But the timeline is the following, right? So I'm an honest user, I see this block, I see this block. This is like the first 5 seconds of the epoch and then the epoch starts. And for the ten minutes of the epoch, this does not exist. So this is how the epoch looks to me, right before the checkpoint as a user.
00:27:18.738 - 00:27:19.574, Speaker A: Right.
00:27:19.772 - 00:27:27.274, Speaker B: And then at that moment, almost when the checkpoint is about to happen, you and RP, you review this chain. Like you just dump all those blocks to everybody.
00:27:27.392 - 00:28:04.886, Speaker C: Yeah. So basically in that case, mostly what happens is if user detects like multiple brokers are creating multiple blocks, different level, at same height, they might want to exit and not trust to anybody in the system. It might happen in some cases, let's say where, let's say this guy is like fraudulent and these guys are on edge, right? In that case, let's say if they make a transition here, in that case, let's say if this chain doesn't go on the checkpoint, they can actually have inflit transactions pointing out the previous one.
00:28:04.908 - 00:28:07.090, Speaker D: And fix it with their 100 package.
00:28:07.170 - 00:28:17.642, Speaker B: But in this case, what happens if. I understand the trigger is that. So you send me 100 in this block. This is the only block I see right now. Yeah.
00:28:17.696 - 00:28:23.434, Speaker C: So basically if I am sending like two transactions at a point of time, this is same.
00:28:23.472 - 00:28:23.910, Speaker A: None.
00:28:23.990 - 00:28:25.994, Speaker C: I'm actually making a double spend in.
00:28:26.032 - 00:28:27.726, Speaker B: Any case, even if it's included in.
00:28:27.748 - 00:28:28.750, Speaker C: The transaction or not.
00:28:28.820 - 00:28:31.262, Speaker B: But you cannot be slashed because you're not. Yes.
00:28:31.396 - 00:28:49.778, Speaker C: So basically in that case, most of the people will just start exiting before you because people are double spending it. And the producers are including the both transition in the checkpoint, in the blockchain. So it's like fraudulent activity. So you can actually might want to exceed.
00:28:49.874 - 00:28:58.614, Speaker B: Right, but specifically for this 100, I. Right, this is something you deposited and.
00:28:58.652 - 00:29:22.174, Speaker C: I'm signing two transactions. So basically, let's say when I make two transactions, either this chain, this chain will win. So now let's say if you are making the transaction, let's say I send you sign transactions to you and now you have block producer signature. The other guy may not want to accept the.
00:29:22.292 - 00:29:24.318, Speaker B: But Arpit is cooperating with you.
00:29:24.484 - 00:29:27.006, Speaker C: Yeah, so Arpit also knows.
00:29:27.038 - 00:29:27.282, Speaker A: Okay.
00:29:27.336 - 00:29:34.690, Speaker C: Hey, he already won transactions and JD has like signature of this block producer. So I might not accept this, right.
00:29:34.760 - 00:29:41.494, Speaker B: But imagine that the next block. So the figure is not very good for what they want to say.
00:29:41.532 - 00:29:51.720, Speaker C: But image of that you are saying. Let's say if archpit and I both have know if I have a signature of block producer and you.
00:29:52.490 - 00:30:40.850, Speaker B: So let's say that the next block, the block that had three, is supposed to be produced by you, right? So you have the 100 priority. So you create here a block which sends 100 die to artist. But this block, you don't show it to anyone. This block exists on your machine, but nowhere else, okay? And then, because that block, nobody sees it, our empathetic of Vitalik, who is validating here, he skips you. He creates his own block, where he sees transaction which he also signed and publicly showed to everyone, where you sent the same 100 die to me. So here, there's two others, 100 die. So after that, Jasmine Tali continues building the chain, and two of you do not reveal any blocks.
00:30:40.850 - 00:31:10.258, Speaker B: So me, as the honest user of the system, I can see here's the transaction where you send me 100 die, right? And I don't see any other transactions, I don't see any other blocks. And it's been ten minutes by now, almost ten minutes. So I'm like, okay, it's got to be reliable. And then, right before the checkpoint, you reveal this block, which has a higher priority or higher difficulty, right? NRP immediately exits from this block in flight, right? Yeah, but I cannot challenge him because my difficulty is lower.
00:31:10.424 - 00:31:38.040, Speaker C: No, you can challenge, because basically how it works is like, if you sign transaction to different people, the same ones, they can actually challenge the exit. And the later one will, the older one will win, right? Most of the cases, if I'm making two transactions and sign the two transactions to same people, one of them has to.
00:31:39.210 - 00:31:43.920, Speaker D: Basically, there's no concept of exiting immediately. So seven day challenge period, right?
00:31:45.250 - 00:31:52.958, Speaker B: But between you and I, why would ethereum chain during the exit just mean if your block difficulty is high?
00:31:53.124 - 00:31:54.474, Speaker D: No, because this was checkpoint.
00:31:54.522 - 00:31:57.780, Speaker B: It depends on what was checkpoint. There was no checkpoint. Did not happen yet.
00:31:58.390 - 00:31:59.294, Speaker C: There is no checkpoint.
00:31:59.342 - 00:32:02.062, Speaker B: There's no checkpoint that's in place during the exits.
00:32:02.206 - 00:32:04.770, Speaker D: So there's a concept of referencing transaction.
00:32:05.990 - 00:32:09.026, Speaker C: If there is no checkpoint, it's called implied transaction, right?
00:32:09.128 - 00:32:23.994, Speaker B: But you see, in the entire system, you only have two transactions which happen here. So you can only reference the deposit itself, right? Yes. So I reference the deposit and you reference the deposit. How does the system choose who was supposed to get the 100 day?
00:32:24.192 - 00:32:24.554, Speaker C: Yeah.
00:32:24.592 - 00:32:27.050, Speaker D: So both of your exits will be queued.
00:32:27.390 - 00:32:28.042, Speaker C: Okay.
00:32:28.176 - 00:32:32.698, Speaker D: And whoever starts an exit first will get the money.
00:32:32.784 - 00:32:33.034, Speaker A: Right?
00:32:33.072 - 00:32:51.886, Speaker B: And so in this case, if you started the exit first, because I was not suspecting anything bad, I wanted to keep my die in the plasma chain. Right. And your malicious activity immediately exit. So I lose my 100 diet. So if the sender and the committee cooperate, I can lose my money in flight.
00:32:51.998 - 00:32:53.134, Speaker C: Only in flight mode.
00:32:53.182 - 00:32:53.394, Speaker A: Yeah.
00:32:53.432 - 00:32:55.460, Speaker C: So you might want to wait for.
00:32:56.470 - 00:33:02.630, Speaker D: The assumption here is there's 66% collision with the validator. And they were fooled and they were on the checkpoint.
00:33:03.050 - 00:33:08.386, Speaker C: Between the checkpoint. If you are making most of the transactions, you may want to wait for the checkpoint.
00:33:08.418 - 00:33:20.090, Speaker B: Yeah, I guess that's what I wanted to understand. Checkpoints. If the validators collude, I can in principle lose my money. Yeah, okay great. So now let's talk about the exit team.
00:33:20.160 - 00:33:20.940, Speaker A: Yeah, right.
00:33:26.690 - 00:33:37.322, Speaker B: So my understanding is that when we snapshot, the snapshot on Ethereum actually can prove that certain accounts have certain amounts of money.
00:33:37.396 - 00:33:37.682, Speaker A: Yes.
00:33:37.736 - 00:33:46.718, Speaker B: So now how do I. Let's talk about the exit. So what is the protocol for exits? What do I send, what data goes? What sort of challenges exist?
00:33:46.894 - 00:34:15.114, Speaker D: So there are three types of exits. Okay, so one is when you start exited, start exit with deposited tokens which was the case that you guys already discussed. So let's say I deposited some amount in the glass, no contract, but that was not minted on the side chain. So that is one type of exit. So start exit with deposited tokens. So another one is exit with start exit with burn tokens. So what happens here is this is the case where a matic Chain is all good.
00:34:15.114 - 00:34:18.506, Speaker D: And let's say you want to withdraw your die, you send a burn.
00:34:18.538 - 00:34:19.390, Speaker B: Transaction.
00:34:19.730 - 00:34:33.730, Speaker D: Burn is simply a function in our ErC twenty s. So you say I want to burn 50 die. And then when that happens, when that transaction is included, you give a proof of that transaction on the main chain to this function, the burn tokens and.
00:34:33.800 - 00:34:35.620, Speaker C: How that work is.
00:34:36.150 - 00:35:25.360, Speaker D: So on matic chain, these are the blocks. And our mobile proof consists of block headers of these. And then each block header like Ethereum, it has a transaction hash transaction route and then a receipt route and a couple more things like timestamp and all. So then when you want to say that my voltage action was included use provide the receipt and give a mobile proof of the fact that the receipt is a part of this. And then you prove that receipt lies in a block header. That was checkpoint. So this is a checkpoint.
00:35:25.360 - 00:35:31.248, Speaker D: So yeah, this is how you provide proof of anything.
00:35:31.334 - 00:35:31.776, Speaker A: Right?
00:35:31.878 - 00:35:45.016, Speaker D: So this is the burn case. And then the third one is more vp style exits. So that is when people have started to mass exit. And the case could be when there are 66% pollution. That is the only case that you.
00:35:45.038 - 00:35:45.770, Speaker B: Would use.
00:35:47.900 - 00:36:02.510, Speaker D: Let'S call this start exit, things like that. So this one you provide a proof of one. This one you provide a proof of reference transaction, and optionally an infight exit as well. Inflight transaction as well.
00:36:06.240 - 00:36:09.244, Speaker B: So let's conclude in flight transactions for simplicity, right?
00:36:09.282 - 00:36:09.640, Speaker A: Yeah.
00:36:09.730 - 00:36:15.772, Speaker B: So let's say we always have a checkpoint and we only exit something that was checkpointed.
00:36:15.836 - 00:36:16.064, Speaker C: Okay?
00:36:16.102 - 00:36:16.690, Speaker A: Right.
00:36:17.380 - 00:36:27.860, Speaker B: So when I provide the proof of a burnt transaction, I only provide the proof of inclusion. I don't provide the proof of the reference of the previous transaction. Yeah, the reference is only for the last.
00:36:27.930 - 00:36:28.404, Speaker A: Right.
00:36:28.522 - 00:37:02.828, Speaker B: Okay, so let's start with some examples. So let's say there is a collusion, right? So there's a collusion and there is a transaction from. Again, we're always going to use JD as the malicious actor. So JD has the same 100 die. He sent 100 die to me. In this block, there's a transaction to Alex, 100 die.
00:37:02.924 - 00:37:03.570, Speaker A: Yes.
00:37:04.100 - 00:37:20.052, Speaker B: And so as of after this block, the state route will contain. There's no state route, I guess. But as of after this block, the state is that he has zero tokens. I have 100. Yes, you have zero. In the next block, he creates a transaction which burns 100 times. It doesn't happen.
00:37:20.052 - 00:37:21.700, Speaker B: He still creates a transaction.
00:37:24.220 - 00:37:24.616, Speaker A: And the.
00:37:24.638 - 00:37:41.740, Speaker B: Block producer included it. And then it gets checkpointed. 67% colluded. In tandermint they said, yeah, that's a great checkpoint. Let's checkpoint it on Ethereum. And then JP creates an exit with a burn proof. And he says, well, this block has been burned, so how do I challenge?
00:37:42.080 - 00:37:51.424, Speaker D: So the thing is, users look for the first invalid state transition in the chain, the first point where the chain went bad.
00:37:51.622 - 00:37:53.744, Speaker C: So in our case, this was the.
00:37:53.942 - 00:38:01.236, Speaker D: Time when the chain started going bad, because he didn't have one to die, but he was able to burn it. So what happens is, let's say you.
00:38:01.258 - 00:38:02.916, Speaker C: Are at a point where this is.
00:38:02.938 - 00:38:19.288, Speaker D: A malicious transaction or an invalid state transition. State transition. So the idea is, as soon as you see this, you would start exiting with transactions before it, right? So then you would invoke something like this, where you say that.
00:38:19.374 - 00:38:21.050, Speaker C: Now, the problem here is.
00:38:21.660 - 00:38:37.496, Speaker D: Yeah, so I'll talk about priority queue, right? So when you exit with a transaction, you give a sense of where that transaction was in the side chain, and then that is the assigned priority according to how the exits will process. So the lower the priority before it will happen. Okay, so it's like a main priority.
00:38:37.608 - 00:38:39.388, Speaker B: Could be here, could be here, could be here.
00:38:39.474 - 00:38:41.812, Speaker D: And because your priority would be lowered.
00:38:41.976 - 00:38:49.632, Speaker B: So I will only acknowledge your transaction. So let's say you're sending me a lot of money, like million time.
00:38:49.766 - 00:38:50.160, Speaker A: Right.
00:38:50.230 - 00:38:57.456, Speaker B: So I will only respect the transaction if it is checkpointed and I have access to the block where it is included.
00:38:57.488 - 00:38:57.684, Speaker A: Right.
00:38:57.722 - 00:38:59.620, Speaker B: So I can later use that block.
00:39:00.040 - 00:39:02.020, Speaker D: Depends on what kind of finality you want.
00:39:02.090 - 00:39:03.216, Speaker C: If it's a million die.
00:39:03.248 - 00:39:06.932, Speaker D: So if it's, let's say, ten die, you are good when you see it in a block.
00:39:06.996 - 00:39:11.416, Speaker B: Yeah, because it's unlikely that people will do this thing. We're discussing the full thing because they.
00:39:11.438 - 00:39:22.828, Speaker C: Have slash and also we have staking stakes. So you can actually all. If the amount is small, you can always withdraw stake if something was bad.
00:39:22.994 - 00:39:31.660, Speaker D: Yeah, we're still designing that mechanism. So slashing funds could be somehow used to actually reimburse users who were affected.
00:39:31.740 - 00:39:33.184, Speaker B: Probably, yeah.
00:39:33.222 - 00:39:38.080, Speaker D: But if you made a million data transaction, you might as well wait for the checkpoint.
00:39:38.580 - 00:39:38.992, Speaker C: Yeah.
00:39:39.046 - 00:39:42.492, Speaker D: But you do have some sense of finality when you see it in a block.
00:39:42.556 - 00:39:46.288, Speaker B: Yes, I need to see a checkpoint and I also need to see all the blocks.
00:39:46.304 - 00:39:46.532, Speaker A: Right.
00:39:46.586 - 00:39:49.060, Speaker B: Because if I want to challenge, I need to be able to provide the group.
00:39:49.130 - 00:39:49.364, Speaker A: Yes.
00:39:49.402 - 00:39:51.412, Speaker B: Okay, so a couple more questions, right?
00:39:51.466 - 00:39:52.116, Speaker A: Yes.
00:39:52.298 - 00:40:04.996, Speaker B: One of them is if I exit. So let's say I want to use the last kind of the last type of exit.
00:40:05.028 - 00:40:05.188, Speaker A: Right.
00:40:05.214 - 00:40:06.680, Speaker B: So I provide a block.
00:40:06.840 - 00:40:07.550, Speaker A: Right.
00:40:08.400 - 00:40:16.264, Speaker B: And with the block, I also provide a reference to the previous transaction.
00:40:16.312 - 00:40:16.716, Speaker A: Right.
00:40:16.818 - 00:40:18.024, Speaker B: To like the input transaction.
00:40:18.072 - 00:40:18.620, Speaker A: Yes.
00:40:18.770 - 00:40:20.204, Speaker D: Which, by the way, could be more than one.
00:40:20.242 - 00:40:24.640, Speaker B: More than one, yeah. So all the transactions, like some set of transactions which send money to my account.
00:40:24.710 - 00:40:24.992, Speaker A: Exactly.
00:40:25.046 - 00:40:27.120, Speaker B: Which accumulates to the amount that I'm trying to.
00:40:27.190 - 00:40:28.130, Speaker A: Yes. Right.
00:40:29.560 - 00:41:03.740, Speaker D: Not exactly that. So think of it like what changed your balance? So it could be JD's balance because he spent it and Alex's balance. So let's say JD had five tokens and you had three tokens. And then you want to say that JD sent me two tokens. So JD sent me three tokens, so I want to exit with six tokens. So basically, then these two are your inputs. Whatever led to your or the spender's balance being changed, those are the inputs.
00:41:03.740 - 00:41:17.490, Speaker D: So then we consider these Utxos to be spent like account balances, but we visualize them like Utxos. And then new Utxos were created where JD's balance was two and yours was six.
00:41:18.740 - 00:41:34.560, Speaker B: So now let's say that I received the six tokens and then I send them to someone else.
00:41:34.630 - 00:41:34.912, Speaker A: Yes.
00:41:34.966 - 00:41:41.152, Speaker B: And I'm now trying to exit six tokens. But the challenge will be something that references my spend transaction.
00:41:41.216 - 00:41:41.830, Speaker A: Yes.
00:41:43.640 - 00:41:54.936, Speaker D: And then you'll be challenged with your spend transaction because you spend those six tokens. And if you're still trying to exit with those six, someone will say that. So your signature was here and you.
00:41:54.958 - 00:41:56.504, Speaker B: Made a spend, right?
00:41:56.702 - 00:41:57.352, Speaker A: Yeah.
00:41:57.486 - 00:42:00.888, Speaker B: Can they partially exit? So let's say I have six. Can they exit three?
00:42:01.054 - 00:42:02.324, Speaker D: Not with this style of exit.
00:42:02.372 - 00:42:02.632, Speaker A: Okay.
00:42:02.686 - 00:42:03.892, Speaker B: But with a burden.
00:42:03.956 - 00:42:04.232, Speaker A: Yeah.
00:42:04.286 - 00:42:05.496, Speaker C: The idea is if you're doing the.
00:42:05.518 - 00:42:15.410, Speaker D: More vp style exit, it is only for mass exits. So exit with everything that you have and don't leave anything behind and don't make any more spends. So when you use this.
00:42:19.860 - 00:42:28.636, Speaker C: Those are for worst cases. If you think, like, everyone is collision on this a chain and to exit, like this kind of code.
00:42:28.758 - 00:42:29.380, Speaker A: Right.
00:42:29.530 - 00:42:36.372, Speaker B: So mass cycles, right. To exit the transaction, I need to send something which contains two merkle proofs, right?
00:42:36.426 - 00:42:36.788, Speaker A: Yes.
00:42:36.874 - 00:42:48.072, Speaker B: Which is on the order of, like, let's say, how do you put the merkle proofs? It's like, on the order of 40 hashes, 1616 hashes, 16 hashes each, or 16 hashes total.
00:42:48.206 - 00:43:04.750, Speaker C: So basically, currently we have 1616. So it allows, like theorem actually allows those data right now. But in the future, it may increase, increase the case limit. But we currently have less than 16, I guess.
00:43:08.180 - 00:43:19.616, Speaker B: So that means that every block can have up to 60,000 transactions and people can have up to 60,000 blocks. Like, you produce blocks every 3 seconds.
00:43:19.648 - 00:43:19.892, Speaker A: Right.
00:43:19.946 - 00:43:25.872, Speaker B: And let's say it's all been going well for like a year. For a year. Nobody was being malicious.
00:43:25.936 - 00:43:26.164, Speaker A: Yes.
00:43:26.202 - 00:43:34.612, Speaker B: And you have, like, you accumulated a lot of balances on the, on the chain. And then I come and I, I say, say I'm burning 100 tokens.
00:43:34.676 - 00:43:35.290, Speaker D: Yes.
00:43:35.900 - 00:43:45.100, Speaker B: And now everybody starts exiting. So how is there some mechanism which will be increasing the challenge period over time so that everybody can exit?
00:43:45.440 - 00:44:43.560, Speaker C: So we are actually thinking over it. We don't have answers for now, what we are thinking if, let's say, the balance increases and at some point of time, let's say, 50% of the deposit are exiting in very short time, increase challenge period, everything a little bit higher so people can have extra time to exit. Basically, it's just the one thought. We are thinking on it, but I'm not sure what will be the best solution for it. It's a little bit complicated because other plasma basically uses only one block per checkpoint, and we use multiple blocks. So there are some trade offs. We make economical security between the checkpoints, but most of the time, it will work if you have small amount of money and you always go reference the checkpoint transactions.
00:44:43.560 - 00:44:47.436, Speaker C: But if you are making a huge transaction, just wait for checkpoint.
00:44:47.548 - 00:45:25.384, Speaker D: Yeah, basically we are optimizing for the best case scenario, which is nothing goes wrong. And we are taking those trade offs, which, let's say, require you to use more gas in case of the worst exits. So, like better ux for cases when things are okay and a little bit worse ux when things are not okay, but which is okay because that might happen just once. So that's why, like normal one exits, you just give a single receipt. So that is not gas heavy, but with the start exit, which is like the referencing thing and all that. This is a little gas heavy, but that's okay because this is the worst case. So we are making those trade offs.
00:45:25.432 - 00:45:26.940, Speaker B: So when I send the transaction to someone.
00:45:27.010 - 00:45:27.484, Speaker A: Right?
00:45:27.602 - 00:45:31.404, Speaker B: So let's say I received money, I received 100 die long ago.
00:45:31.522 - 00:45:32.252, Speaker A: Yes, right.
00:45:32.306 - 00:45:56.864, Speaker B: Like year ago. And for one year, there was no malicious behavior on the chain. One year later, I want to send this 100 die to you. Is the expectation that you validated the entire chain up until this moment? Or how do I prove to you that I actually have 100 die? Like if I give you a transaction, how do you know? Consider two different cases.
00:45:56.912 - 00:45:57.124, Speaker A: Right.
00:45:57.162 - 00:46:08.504, Speaker B: One case is I actually do have 100 die and share received one year ago. I send this transaction, it gets included in the block. And you see it and you acknowledge it as a user, you're not validating the chain, right?
00:46:08.542 - 00:46:08.936, Speaker A: Yes.
00:46:09.038 - 00:46:18.344, Speaker B: Second example, I do not have 100 die. I send it to you, it gets included in the block because validate as a malicious. But you have no idea. Without validating the whole chain.
00:46:18.392 - 00:46:18.604, Speaker A: Yes.
00:46:18.642 - 00:46:21.544, Speaker B: So is the expectation that you validated the whole chain?
00:46:21.592 - 00:46:21.804, Speaker A: Yeah.
00:46:21.842 - 00:46:50.484, Speaker D: The assumption right now there is that the users evaluate the chain. And I'm not a big fan of that, because as we move forward, we need to think about that. But also there are ways to circumvent it. So let's say they are properly incentivized watch stars who will be validating the chain. And when something goes bad, they'll probably be notifying users. Or we are also thinking about delegated exits where you could trust someone to exit on your behalf. And it could be like a suspection thing or things like that.
00:46:50.484 - 00:46:53.060, Speaker D: So some ideas around that, but yeah, that is the limitation.
00:46:53.140 - 00:46:58.856, Speaker B: Yeah, sir. I guess for small amount, I will just trust that nobody does anything.
00:46:58.958 - 00:47:12.412, Speaker C: Or maybe just optimistically check. Okay. After one year, there is nothing went wrong and very few are exiting the chain. Might be in good state.
00:47:12.546 - 00:47:13.230, Speaker A: Yeah.
00:47:14.480 - 00:47:22.476, Speaker B: In my particular example, the chain was in a good shape up until now. I'm just receiving a transaction. I don't know if the transaction is valid or not, which was included.
00:47:22.508 - 00:47:22.704, Speaker A: Right.
00:47:22.742 - 00:47:44.888, Speaker C: Or maybe you just start, like last seven days transactions if you want. Because let's say if something goes wrong in the last seven days, you might want to exit. So you just validate the last seven days transition. Otherwise you just use like simple, light client before the seven days, and then last seven days transition and you're good to go.
00:47:44.974 - 00:47:46.168, Speaker B: In most cases, correct.
00:47:46.254 - 00:47:49.160, Speaker D: But those are the parts that need to be thought about properly.
00:47:50.700 - 00:47:56.232, Speaker B: And so let me also send all the challenges so this transaction, it cannot be challenged.
00:47:56.376 - 00:47:57.950, Speaker D: This kind of challenge as well.
00:47:59.600 - 00:48:01.544, Speaker B: Exit with an earlier priority.
00:48:01.592 - 00:48:05.280, Speaker D: Right, but the exit period is still seven days.
00:48:05.350 - 00:48:05.970, Speaker A: Yeah.
00:48:06.580 - 00:48:19.164, Speaker B: So if I submit this and I'm a malicious actor, I'm not going to be challenged per se. Someone will just exit with the people, this transaction. So I want to understand all the challenges for this transaction.
00:48:19.212 - 00:48:19.810, Speaker C: Right.
00:48:20.180 - 00:48:43.940, Speaker B: My proof consists of a transaction, or it's not a single transaction. I'm providing multiple transactions where different people send me money. So I'm saying, okay, at some point, you sent me money, like six die. At some point, GD sent me money. And then I can include the proof of all of those and say, I have 13.
00:48:44.100 - 00:48:47.128, Speaker D: Sorry, you don't need to include all of those. You simply say that I want to.
00:48:47.134 - 00:48:51.908, Speaker B: Exit with $7.13 die for this particular church. I'm just saying I want to exit for 13.
00:48:52.004 - 00:48:56.560, Speaker D: Yeah, 13 die. You just give the last transaction, which would be this, not the entire, not all of them.
00:48:56.630 - 00:49:03.344, Speaker B: Okay, so I provide. But how overseas? Because the lower priority. No, that doesn't work very well.
00:49:03.382 - 00:49:03.536, Speaker A: Right?
00:49:03.558 - 00:49:33.012, Speaker B: Because imagine the following situation where JD sends me. So let's say JD has 100 die. He sends you 50 die here and next block, or like in this block, he sends me 50 die.
00:49:33.076 - 00:49:34.636, Speaker D: Is it the same 50 die or.
00:49:34.738 - 00:49:39.672, Speaker B: He has 100 total. Right? Because it's account based, they fungible.
00:49:39.736 - 00:49:40.732, Speaker A: Right. Okay.
00:49:40.866 - 00:49:43.448, Speaker B: And then he exits. He provides the last transaction.
00:49:43.464 - 00:49:43.964, Speaker A: You send us.
00:49:44.002 - 00:49:47.288, Speaker B: He provides this transaction, and he exits for 100 die.
00:49:47.464 - 00:49:49.056, Speaker D: So he cannot provide this one.
00:49:49.078 - 00:49:49.360, Speaker A: Right.
00:49:49.430 - 00:49:52.320, Speaker D: He will have to provide something older because he spent 50.
00:49:52.390 - 00:49:53.964, Speaker B: Oh, sorry. You exit.
00:49:54.012 - 00:49:54.448, Speaker A: Okay, yeah.
00:49:54.454 - 00:50:01.056, Speaker B: You exit with this transaction. But you say, I want to exit 100 die, and I exit for this transaction. And I say, I want to exit 50 die.
00:50:01.168 - 00:50:02.608, Speaker D: So I can only exit 50 die.
00:50:02.624 - 00:50:02.756, Speaker A: Right?
00:50:02.778 - 00:50:03.990, Speaker D: Because I got 50.
00:50:04.360 - 00:50:09.300, Speaker B: But in this case, if I want to exit 13 is it two different exits.
00:50:09.660 - 00:50:10.120, Speaker A: No.
00:50:10.190 - 00:50:11.864, Speaker B: So how it would work is after.
00:50:11.902 - 00:50:15.928, Speaker D: This transaction, your balance would be six, right?
00:50:16.014 - 00:50:16.650, Speaker A: Yeah.
00:50:19.820 - 00:50:20.570, Speaker D: Okay.
00:50:22.460 - 00:50:24.616, Speaker B: My understanding is that the block doesn't have a state root.
00:50:24.648 - 00:50:25.228, Speaker A: Right?
00:50:25.394 - 00:50:29.768, Speaker B: So ethereum cannot validate the balance of a particular participant.
00:50:29.864 - 00:50:31.404, Speaker D: So what we do is in every.
00:50:31.442 - 00:50:34.320, Speaker C: Transfer we have a particular event.
00:50:34.470 - 00:50:43.692, Speaker D: We call it lock transfer. And what it does is it emits your previous balance before the transaction.
00:50:43.836 - 00:50:45.532, Speaker B: And the new balance, I see senders.
00:50:45.596 - 00:50:49.140, Speaker D: Recipient, and then sender, dash, and recipient.
00:50:49.560 - 00:50:51.940, Speaker B: It's like old balances, new balances. Yes, I see.
00:50:52.010 - 00:51:12.760, Speaker D: So think of it like a Utxo, right? So here my balance could be like. So you are Alex, the recipient. So your balance here becomes six. And then when this transaction is made, another event. So it says send out whatever, and then you were six, and then send out whatever and then you were 30.
00:51:12.830 - 00:51:13.284, Speaker A: I see.
00:51:13.342 - 00:51:25.068, Speaker B: So I provide the last transaction, 13. And because everybody validated the, like, everybody who cared sufficiently about large transfers validated all the blocks. Yes, they effectively validated that. This is also correct.
00:51:25.154 - 00:51:25.500, Speaker A: Correct.
00:51:25.570 - 00:51:26.190, Speaker C: Yeah.
00:51:26.900 - 00:51:36.130, Speaker D: So when you want to start exiting, you either reference a transaction holder than this, or let's say you burn this and then you say, I want to exit with it.
00:51:38.600 - 00:51:59.256, Speaker B: I see the way we can challenge this transaction. So let's say I'm exiting. I'm saying I have 13. We make an assumption that all the blocks are valid. If the blocks are invalid and someone, then people should not have acknowledged their money to begin with.
00:51:59.278 - 00:51:59.656, Speaker A: Right.
00:51:59.758 - 00:52:03.000, Speaker B: But let's say all the blocks are completely valid.
00:52:03.080 - 00:52:04.620, Speaker D: But I'm trying to exit.
00:52:09.440 - 00:52:18.492, Speaker B: The only way, the only challenge would be to find another transaction from me that spends any of those 13.
00:52:18.556 - 00:52:18.736, Speaker A: Right?
00:52:18.758 - 00:52:19.890, Speaker B: Yes. Okay.
00:52:20.420 - 00:52:21.632, Speaker D: Which came after this.
00:52:21.686 - 00:52:26.592, Speaker B: Which came after this. Yes, in the later book. Yeah, that makes sense.
00:52:26.646 - 00:52:26.816, Speaker A: Yeah.
00:52:26.838 - 00:52:38.092, Speaker D: Because that is equivalent of spending, exiting on the main chain and spending it on the side chain. So then you come in and prove that you made the spend, which has a higher priority than your exit.
00:52:38.156 - 00:52:42.116, Speaker B: Thank you guys for, for coming. Any last announcements you want to make about Matic?
00:52:42.308 - 00:52:56.200, Speaker C: No, I mean, we are actually launching our stake kind of solution. Like people just take on the testnet and play with, become a validator and play with the whole architecture. So we launch it soon. So that's it.
00:52:56.270 - 00:52:56.600, Speaker A: Cool.
00:52:56.670 - 00:52:57.590, Speaker B: Okay, thanks for coming again.
