00:00:00.250 - 00:00:08.320, Speaker A: From live Peer. Super cool guys, super great team, super excited to have them here for NFT hack. Eric floor is yours. I'll let you take it away.
00:00:09.010 - 00:00:09.662, Speaker B: Thank you.
00:00:09.716 - 00:00:46.854, Speaker C: Thank you, Luke. Appreciate it. And thank you for having Life Peer here. Really excited to be sponsoring this event. And today we have about 30 minutes on the agenda, and I'd love to talk to everyone about video NFTs and Web three and how these things all fit together and what are some of the interesting trends and opportunities that we're seeing in the space to just get your creative juices flowing, to think about your hacks for the weekend. Cool. So let's just dive in for the agenda.
00:00:46.854 - 00:01:39.580, Speaker C: I'm going to give a brief introduction to Life here for those who aren't as familiar with the project, talk a little bit about the underlying technology. I'm going to kind of take a stab at teasing out what the Web Three video stack looks like, right? So we all know and kind of compare that with how that's different from the Web Two video stack. We'll get into talking about some of the emerging trends in Web Three video and also, of course, talk about the Life Peer developer toolkit. And of course, a lot of NFD topics would come up in this conversation. So let's just dive into it. So a little bit about Lifepeer. Live peer is the video streaming layer for Web Three.
00:01:39.580 - 00:03:48.950, Speaker C: Why are we building this? Because about 80% of all the traffic on the Internet is in video format. A lot of that video now lives in these kind of creator platforms or social platforms, right? Whether it's Instagram, Facebook, YouTube, Twitch, things like that. There's about 50 million creators around the world creating content for these platforms and a large number of them are actually just professional creators. That's their livelihood and that's all they do, right? With all this content being created on these platforms, we're starting to see some of the downsides of the centralized platforms in terms of taking a large chunk of the value from these creators in terms of being a centralized force to enforce opinions on people. So for example, a lot of YouTube creators end up creating videos not because that's the best content that they can create, but because they need to create a video in a specific format with a specific content type in order to game the YouTube recommendation algorithm to get on top. And that's kind of the only way to win in that game, right? As we start to see some of these downsides of decentralized platforms and start to look into Web Three into decentralized applications, live Peer creates an opportunity and plays a pretty important role in this migration because Livepeer is decentralizing the video streaming infrastructure layer so that video native Web Three applications can exist on top of this infrastructure. And just as a nice side benefit, because of its decentralized nature, it's able to kind of take advantage of a lot of spare capacity, latent capacity that already exists connected to the Internet today and it's able to dramatically cut down on the cost of video streaming.
00:03:48.950 - 00:05:50.798, Speaker C: So diving a little deeper into just how Life Peer works at the core, life Peer is a set of protocols not dissimilar to how Ethereum or Bitcoin is a protocol or how BitTorrent is a protocol. It describes a set of rules for kind of the rules of engagement for participants to make this video streaming network to work so people can provide capacity to the network as well as provide kind of economic value to the network by staking or they can use the network for video processing or video streaming. You can think of the protocol as a set of smart contracts that's deployed on the Ethereum blockchain and a part of that is a global registry of workers or what we call them orchestrators. When someone's building an application and wants to broadcast a video, that broadcaster uses a discovery protocol looking at that registry of orchestrators to find out where they are and the broadcaster can start using those capacities to process their video. And of course the network itself is very robust in that if any worker stops working it's very easy for the broadcaster to just fall back to another one without affecting the end viewer's experience. Here we're seeing kind of a schematic diagram of a GPU, right? It's interesting to point out that one of the reasons life here is able to cut the cost down by so much is because it's utilizing the spare capacity that's sitting in all the cryptocurrency mining rigs that are using GPUs. Because when you're mining crypto, you're only using kind of these CUDA cores at the bottom, which is the compute processing cores, and you're not using the encoding and decoding chips that's on the top.
00:05:50.798 - 00:07:06.142, Speaker C: So by running the Lifeyear software you can actually tap into both of these resources and take more full advantage of the card. And as a result, the Lifeyear network has been growing really nicely in the last year, now processing around over 2 million minutes of video per week. So let's take a dive into the Web Three video stack and what that looks like, right? So before we do that, let's take a look at the Web Two video stack. This is kind of a high level block diagram of a Web Two video application. So on the left here we have our front end or we have our live video source. In the case of live streaming, the live video source would broadcast the video into a hosted media server. This media server would use a transcoding engine to transcode the video and then that media server maybe record the video into an object storage, something like S Three or any kind of cloud storage but at the same time also cache that video in content delivery network a CDN.
00:07:06.142 - 00:08:09.930, Speaker C: And then this CDN will be used to kind of distribute that video into the front end. That's a video player that's embedded in a web page so lots of people can watch that video at the same time. So a lot of this is kind of running on cloud infrastructure owned by Google or Amazon or whatnot. And if you are working on a kind of a video streaming solution like YouTube, instead of a live streaming solution like a twitch, you would upload the video file also into a media server. That media server still transcodes the video, still uploads the video, the transcoded result into an object storage and then that video still gets cached by CDN and gets distributed to the video players. So those are all actually quite similar. And of course, on the other side you have your server side application logic that talks to your front end and then that uses a database that's also hosted usually on a centralized provider.
00:08:09.930 - 00:09:43.042, Speaker C: So let's compare this with the web3 video application stack, right? So of course at the top we have our crypto wallet, we all have our crypto wallet. And the crypto wallet connects with the blockchain and oftentimes a smart contract layer. It's submitting transactions into the smart contract to do certain actions and that's changing the state of the application of the smart contract itself. And then there's a decentralized query layer, for example the graph and the front end can use that query engine to get the data out of the blockchain and sometimes combining that with some other data source to form this front end application, right? So in a decentralized context the front end becomes very important. In a completely decentralized context there is no backhand, right? The back end is the blockchain. And of course for the video streaming portion we still need an infrastructure to do that, right? So in the decentralized context the video would be broadcasted into this decentralized streaming and transcoding infrastructure which Livepeer is playing a role here. As that video gets ingested into Liver network and gets transcoded, it can then be recorded into a decentralized storage solution.
00:09:43.042 - 00:10:36.710, Speaker C: So maybe something like a filecoin IPFS or Rweave or SIA Skynet and then it gets streamed to a decentralized CDN and there are a few of them that are popping up right now. And then that gets distributed to the video player. And same thing, if you have a video that file that you want to stream, you upload it into the decentralized streaming network. That network kind of takes care of the integration to the rest of the stack and that gets played in the video player. If we have to summarize what we'll see, there's basically three different layers. At the bottom we have the smart contract layer that contains the token standards. It contains a way for us to transfer value, for example, buying and selling NFTs.
00:10:36.710 - 00:11:38.982, Speaker C: We have market makers that provides liquidity to a lot of these economic transactions. And there's also tools that allows us to build kind of decentralized coordination mechanisms that allow things like dows to exist. On top of the smart contract layer, we have the infrastructure layers so that's the decentralized storage, decentralized data query or decentralized video streaming networks. And on top of that we have the actual applications themselves, whether it's social NFT, metaverse applications, the wallets. So those are kind of consumer facing experiences. Let's take a look at some of the emerging trends in web3 video, right? It's quite a nascent field, but just in the past three to four months we're seeing a lot of really interesting applications being built. The first category is kind of web3 social applications and here are some examples.
00:11:38.982 - 00:13:07.400, Speaker C: For example, Portal is kind of a decentralized version of Twitch discover here is a decentralized version of Reddit and we even have some decentralized web3 social building blocks or ecosystems, right? So subsocial or Diesel, these are kind of almost like layer one blockchain solutions to build social specific layer one solutions. So these applications a lot of times have something in common with each other, right? So they all allow your users to own their data. They sometimes allow community ownership via tokens. Sometimes the communities even form dows, right? So for the example of Discover, every subreddit essentially becomes a dow in itself. There's usually frictionless, value transfer, especially in the video streaming case. There's often crypto native tipping mechanisms, sometimes there's even staking mechanism towards the content creator themselves and people are really experimenting with those mechanisms. A lot of these applications use live video to drive user engagement and they use video content to enrich the user experience inside the application.
00:13:07.400 - 00:14:34.180, Speaker C: The next category is a web3 creator applications, right? And the way I think about how this differs from the social applications is that the creator applications oftentimes focus on the creators themselves, right? So Mirror is like a really good example. It's a web3 native blogging platform similar to a medium, but it also allows the blog creators to do, for example, a crowdfund or to sell the blog itself as an NFT. So there are all these interesting web3 building blocks that makes it really unique. So what are some of the commonalities in these applications? Well, they allow their creators to own the work and that's the most important thing oftentimes in the format of Minting NFTs and storing whatever they create in a decentralized storage that's tied to the creator's wallet instead of tieding to the application database. They allow the creators to own their audience. They allow the creators to monetize, for example, through selling NFTs or through kind of a token gated experience for exclusive content. So for example, you can only access a certain video if you own a specific NFT that was sold a month ago, something like that.
00:14:34.180 - 00:15:24.100, Speaker C: And of course, creators often make video as their main content format in these types of creator applications. The next category is Metaverses, right? And this is I feel like these days you can't read the news without reading about the metaverse. We've all heard of Decentraland, maybe we've heard of Sandbox. There's a couple other ones, crypto, Voxels, there's a project called Universe that's pretty interesting. And there are these unique immersive social experiences that often are in this case, oftentimes in browser game like experiences, right. And there are these virtual worlds that are being built. You are a character walking around the world interacting with others.
00:15:24.100 - 00:16:31.350, Speaker C: Video streaming can play a pretty important role in the metaverse in two cases. One is by streaming video from the real world into the metaverse, right? Oftentimes you have needs like that. So for example, you can have a virtual concert where you have a stage of a DJ that's doing a live stream, but the stage itself is in the metaverse and vice versa. You can stream video from within the metaverse out so that people can kind of consume this content in a passive way. So people have done things like streaming popular locations in the metaverse out to other streaming platforms or to people who are just not participating in the Metaverse at the moment, but they might want to know what's going on in those popular locations. The other category is video NFT marketplaces, right. So we have the usual suspects here, like the open Seas Wearable.
00:16:31.350 - 00:17:17.046, Speaker C: Zora is kind of an open version of that. There's a platform called Glass that's video specific NFT marketplace creator platform. And some of the commonalities there is they're trying to aggregate demand from the collectors of these NFTs. They're marketplaces with pretty strong network effects, right. The more users, the more creators go there, the more valuable these marketplaces become. They oftentimes use video as a more engaging content format than JPEGs. Right? And video is actually still kind of an emerging content type in the NFT world, partially because it's not easy to work with video just yet.
00:17:17.046 - 00:18:45.150, Speaker C: In fact, Life here is building some tools to make it much easier to mint video based NFTs and kind of work with these assets. And finally, we're starting to see some pretty innovative economic models in these NFT marketplaces that haven't been done before, right? So for example, I know the Glass team recently launched a bonding curve based NFT where anybody can mint the NFT, but the price of the mint will go up the more people minted. And of course you can also sell the NFT back into the smart contract. So if you bought early and you sold later as more people bought it, then you have made Delta. I think that the other interesting thing to think about is as these NFT contracts start to become popular, they'll start to hold a decent amount of deposits inside these smart contracts and that can be, for example, deposited into DeFi to earn yields. There's some interesting Lego block building that can happen in this world. Let me dive into the Live Peer developer toolkit a little bit to show you guys what you can do with Live Peer to tap into some of these opportunities.
00:18:45.150 - 00:19:30.820, Speaker C: The first one I want to point out is this developer gateway product that's hosted@lifeyear.com. So this is think of it as the infuria to Ethereum as livephere.com to the Lifeyear Network, right? It's a hosted gateway service that allows anybody to easily build a video application. In fact, you can build a live streaming application within 15 minutes using this API and this dashboard. There are even some good examples here. You can go to the Live Peer demo app and take a look at that application. There's a deployed version so you can go play around with the Live app.
00:19:30.820 - 00:21:01.258, Speaker C: Another tool is what we call the webrtmp. So this tool allows people to build a broadcasting experience from the browser. So it allows you to kind of open up a browser window using this SDK to be able to stream your webcam directly from within the browser into the Live Peer network. And there's also kind of a deployed version that you can play around with at justcastit justcast it. And finally, here's a newer tool that we just created, which is a transcoding CLI tool, right? So if we refer back to where transcoding fit in, it's over here as the users upload a video, the video needs to be transcoded first before it gets shown to the viewers. And that's because video files live in all kinds of formats, all kinds of resolutions, and a lot of times they aren't optimized for video streaming, right? So while a file is living on your computer and it can be watched with a very smooth playback, once it's uploaded to the internet and once it's being streamed, it should be transcoded first before being streamed out. And that's what this transcoding CLI tool does for any video file.
00:21:01.258 - 00:21:25.080, Speaker C: You can simply evoke a command and transcode that video using the Live Peer network and get that output. You can put that output into, for example, a decentralized storage solution like an IPFS or an RV. So that's a little bit of all I wanted to cover. I want to open up the room for any questions now.
00:21:30.960 - 00:21:35.550, Speaker A: Feel free to come off of mute. Go ahead.
00:21:35.920 - 00:22:03.460, Speaker B: Yeah, so I have a question about latency of such service because as far as I understood, there is intermediate service which decode and encode the data other formats. And if you do it in decentralized ways, I'm worried about latency, right?
00:22:03.610 - 00:22:07.380, Speaker C: Are you talking about latency for a Live stream?
00:22:08.040 - 00:22:08.790, Speaker B: Yes.
00:22:09.420 - 00:22:44.384, Speaker C: Got it. Yeah. So you can go check out the Livepeer.com hosted gateway service to check out for the latency yourself. Currently, the latency is pretty standard. It's similar to any other video streaming service that you would find, which in standard kind of HLS format video, it's about anywhere between eight to 16 seconds depending on a lot of different conditions. Lifegear is working on kind of a lower latency version of this and we're planning to deploy that soon.
00:22:44.384 - 00:22:51.030, Speaker C: And that will kind of bring down the latency to anywhere between four to 6 seconds end to end.
00:22:59.840 - 00:23:15.810, Speaker D: Eric, could you speak to some of the downsides of Livepay? Because from your presentation, it seems kind of insane. It just seems like there's no reason to use AWS video transcoding over Live pay. So what are the kind of caveats we can expect?
00:23:19.060 - 00:24:04.192, Speaker C: Well, I would say Live here is just better. It's a much more affordable solution than something like AWS. I would say the trade off that you really have to think about is for AWS, it comes with just very a lot of developers are very familiar with it because people have been using it for a long time. So that's a toolkit that just is kind of widely accepted. And for Livepeer, it's a decentralized solution. Right. And a lot of times people think that it might be risky to use more risky to use a solution like that.
00:24:04.192 - 00:24:12.950, Speaker C: But I think we've done a pretty good job over time to prove that the Live peer video streaming solution is just as good.
00:24:14.360 - 00:24:15.750, Speaker B: Cool. Thank you.
00:24:19.560 - 00:24:37.610, Speaker E: Hi, Eric. Hello. Are there any projects working on 100 or 360 videos in this area? And if not, what tips could you provide to have in mind to work on a project on this line? Thank you.
00:24:38.140 - 00:24:45.004, Speaker C: You're asking whether there's people working on 360 videos, like an immersive 360 video?
00:24:45.122 - 00:24:46.268, Speaker E: Exactly. Yes.
00:24:46.354 - 00:25:25.912, Speaker C: Got it. Yeah. So that's a cool topic. I only know of people who have built prototypes of 360 videos and I haven't seen real Live production applications yet. It's actually totally passable to do that. Right. Because at the end of the day, the way 360 video works is it's still kind of a video canvas, but it's just distorted in a way that when you display it in the browser, the video player can kind of wrap it around and create kind of the 360 experience.
00:25:25.912 - 00:25:45.820, Speaker C: Right. But from an infrastructure and transcoding and streaming perspective, it's actually just already compatible with the existing standards and infrastructure. It'll be awesome to see some 360 video ideas coming out of the sackathon.
00:25:46.240 - 00:26:15.930, Speaker E: Thank you. Yeah, I love to work on something related to that, but also related to that, I'm not clear on how I could integrate that to the device because of course, I could develop something to show in a browser. But then when you want to see in a device like an Oculus, I don't know how it could be integrated with Live.
00:26:16.700 - 00:26:53.750, Speaker C: Yeah. Usually the way it works is that for the Oculus, for example, the Oculus has its own video player. And the way to make it work in the video player is actually not dissimilar to the way you make it work in a browser. Right. Because in a browser, you still use a video player. It's just a browser based video player versus on a device like Oculus. Oculus has its own Oculus based video player, and the video format and protocol itself should still be compatible in that case.
00:26:53.750 - 00:26:55.684, Speaker C: Got it.
00:26:55.722 - 00:26:56.470, Speaker B: Thank you.
00:27:08.790 - 00:27:33.210, Speaker A: If anyone has any last questions, feel free to come off the mute and ask away. If not, highly recommend following up in the discord. It is an excellent resource. As you're building your hack out over the weekend, get to talk to great people like Eric and Shannon and continue the conversation and other hackers, you know what I mean?
00:27:33.360 - 00:27:57.470, Speaker C: Yeah, I will be there. And I've also shared a calendar link so hackers can kind of schedule 15 minutes time slots with me personally to chat about your hacks and talk about any problems that you're facing. So yeah, you should definitely take advantage of it. I'd love to talk to you and talk about your hacks.
00:27:58.150 - 00:28:08.770, Speaker A: We got a pretty interesting question in the chat from Ricardo. How would live peer censor someone broadcasting illegal stuff, or how do you handle.
00:28:09.110 - 00:29:44.180, Speaker C: Yeah, yeah, that's a really good question and something that's really important to answer from a video streaming perspective. We have a few product features that tries to solve this problem. The first is there is a machine learning algorithm based approach on the transcoding side. So as the video is being transcoded, the broadcaster can turn on a machine learning based classifier so that when the video is being transcoded, because it's sitting on the GPU, it can also be sent to an AI pipeline to understand what type of content it is. For example, the really popular illegal example is people using kind of online live streaming platforms to stream soccer games, like Premier League soccer games. That happens all the time, right? Of course, if you're the operator of the platform, you need a way to stop that because otherwise you are subjected to kind of legal actions. So a lot of people use people who built on top of Lifepeer can use this tool to understand, like, hey, is there soccer games going on on my platform right now? And if there is, Lifepeer can send a webhook to the application developer with the related information and they can make the decision on how to deal with that.
00:29:44.180 - 00:30:13.370, Speaker C: But in general, the way Lifepeer approaches this is by just providing the right tooling for developers so the developers have a way to deal with the illegal content. Because at the end of the day, the application developers are the ones who are trying to solve this problem for sure.
00:30:13.440 - 00:30:30.720, Speaker A: I think we got like a follow up question there. Sorry, I think we have a follow up question. We'll probably end a session right after that. But can you have anti censorship and control of rights at the same time? From Jordan in the yes.
00:30:32.450 - 00:31:31.510, Speaker C: Yeah, again, I think a really worthwhile question to ask. Anti censorship and control of rights, I think comes down to the way we think about it is plausible deniability and allowing the operators of our platform to operate within the legal constructs of their context. Right, so everybody's different. Those are the types of toolings that we provide to operators. Part of being the decentralized network is that no one is calling the shots to say this stream is allowed on this network and this stream is not allowed. Right. So that is a part of the responsibilities for the application developers that are using these platforms.
00:31:33.530 - 00:31:44.970, Speaker A: One interesting question that I think is pretty valuable for everyone here. Are there any specific projects or verticals the live peer team is keen to see tackled during the hackathon?
00:31:45.630 - 00:32:35.590, Speaker C: Yeah, we have some prizes that we have announced so I think the prizes might have already been announced, but let me go through this. So we have one price just for the killer Web Three app we want to be wowed. And then another for the best application that are in Web Three social, gaming or metaverse categories. Another we want to see kind of a good token gated live streaming tool. A lot of creators are asking for this. And finally we have a co sponsored prize with our friends at Unlock. It'll go to kind of anyone who uses Unlock and Livepeer to showcase the power of the combination.
00:32:35.590 - 00:32:39.238, Speaker C: Awesome.
00:32:39.324 - 00:32:58.810, Speaker A: Well, thank you so much Eric, and thank you to everyone else for joining us here. Really excited to see what the hack projects look like over the weekend and really stoked to have everybody in attendance today. So we're going to be closing the room here. As I said before, reach out to Eric in the discord, continue the conversation there and good luck.
