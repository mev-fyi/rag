00:00:06.170 - 00:00:14.954, Speaker A: Hello everyone. Welcome. My name is Cree. I'm part of the ETH Global team. And with us we have Christine Perry.
00:00:15.002 - 00:00:15.454, Speaker B: Hello.
00:00:15.572 - 00:00:30.758, Speaker A: Welcome. Sweet. She is from scale. And so yeah, we're going to have Scale's workshop. It is called how to leverage Leo Gas fees with scale. But super stoked for it. And what else am I supposed to say? Oh, yes.
00:00:30.758 - 00:00:54.560, Speaker A: At the end, if you have any questions, feel free during the workshop to put them in the chat. Or at the end, we'll probably have like the five to ten minute Q and A session where you can raise your hand and ask a question. But if you're like me and you're a little bit shy to do that in front of so many people, you can always drop those questions in the Scale discord chat. So, yeah, Christine, feel free to take it away.
00:00:54.930 - 00:01:29.660, Speaker B: Awesome. And thanks. Cree really excited to be here again with ETH Online. I think we're really excited to see what projects get created during the hackathon this time. And what I would love to show you guys today is one first, a quick, very quick overview of what Scale is. I promise not to kill you with slides, just a few, and then I'll hop over into some fun stats and then we'll kind of go through a little bit of the documentation in the code mostly, so that way everyone can understand how to use scale at the hackathon. So I'm going to share my screen and let's get started.
00:01:29.660 - 00:01:54.606, Speaker B: All right, hide everyone from the screen. All right. There we go. All right. So how to leverage zero gas fees on the Scale network. One thing that's really great about the scale network is that when processing transactions, there's no gas fee involved. Meaning that you don't have to create a negative user experience for your end users that just want to use your application.
00:01:54.606 - 00:02:29.382, Speaker B: This comes in really handy for various types of applications as you can imagine. Games, data, apps and so forth. Dows anything that you can think about creating where you don't want to introduce a fee for any transaction. Scale is a network for you. Before we get started though, would love to first talk about the hackathon prizes that we have. Scale Network is giving out $20,000 worth of scale and it's going to be divided into a few different categories. The first one is going to be a grand prize winner.
00:02:29.382 - 00:03:15.850, Speaker B: So five K awarded to the best use of scale. The next one is going to be a Metaverse Gaming and NFT award up to eight K. And what that means is multiple projects can win within this category and split the bounty there. There's a partner integration award. There's a lot of partners that are at Equal Online as well and up to $2,000 split among various teams depending on what partners they integrate. That's another award that can be won. And then lastly, there is a generic pool prize meaning that for any attempt at developing on the scale network meaning that we can actually see that you deployed to the scale network we've seen transactions going through you would then be able to divide that pool prize among all of the teams that deployed.
00:03:15.850 - 00:04:35.358, Speaker B: All right. Now, one of the things about the scale network too is that it's Ethereum native, meaning we're not an Ethereum killer chain. But instead all of the tools that you've grown to become custom to and used to with integrating with Ethereum will automatically transfer over to scale. And so, as you can imagine, all of the Web Three connectors, hard Hat, web3 Ether, JS, Truffle, all the Token standards, almost all the Wallets, Sablecoin, anycoin and then much, much more, pretty much all the Ethereum tooling because scale runs EVM compatible chain. What that means is that you don't have to change your setup in order to deploy into scale network. So if you've already started on your application, you've already started on a Rinkby testnet just switch the endpoint to point directly to the scale network and from there you are able to deploy and take advantage of the low cost and extremely fast transaction speeds. Now, how is this accomplished? One of the things that I think is different within the scale network is that while there are going to be fully decentralized nodes about 160 just around the world, the difference is that instead of having all the nodes run one massive chain.
00:04:35.358 - 00:05:39.978, Speaker B: What happens in the scale network is a group or subset of those nodes are grouped together to create your scale chain. Now, your scale chain, that coin is pretty much very descriptive here because instead of having one blockchain where all applications eat up the same exact resource so it's just by diluting the transactions per second and diluting the speed you're able to really compartmentalize your application into a dedicated chain. Now, what happens here is there are 16 nodes that are running up for your chain. But to add a level of security, what we do is we swap out a node or two ever so frequently to prevent collusion. And what happens here is that means that it adds another layer of security for not just the entire network but for your chain that's running within the system. Now, your chain is one of many because all the other applications will be running on their own chains. And what you're seeing here is that there is a bit of overlap because within the scale network there's the idea of sizes within chains as well.
00:05:39.978 - 00:07:09.062, Speaker B: Instead of having one type of chain where you all have the same storage, the same processing power, the same speed. Essentially what we're able to do is through docker make sure that we can create sort of a sharding side of mentality where one node can run up to 128 different scale chains or 16 different scale chains. If it's medium chain or one scale chain if it's large chain. And so what that means is that you have the flexibility to grow with the scale network as your user base grows and as your transaction throughput needs increase as well throughout the journey of your development of your application. So how is this looking in practice? One thing that the community has told us is that while we want to create some organization around this multi chain system, it's great that we have all these chains everywhere. And with having all those chains everywhere, well, how do we get them to talk to each other, how do we get them to share resources? How do we get applications that want to provide a service to other projects within the system to group together as well? And so thus came about this concept of a hub mentality. And a hub basically means that okay, if you have like projects such as Liquidity, DEXs, Fiat on ramps, bridges and let's say NFTs, you have Marketplaces and you have projects that just want to deploy NFTs, why not provide a system or a chain where they're able to deploy into a single environment? Now we have a few that are already taken.
00:07:09.062 - 00:08:45.378, Speaker B: This on wire connects, Ruby Boot on the Marketplace side, nftrade, Afen, XP, Network, Mylius and all the other applications that still want their dedicated chain are able to do so. But because multi chain network was in the beginning thought of to be application networks and synergy with each other, we do have applications that sit in between all of these that allow them to easily transfer data, transfer assets, transfer tokens, not just between Ethereum and the scale chain, but also between scale chain and scale chain. And when we think about scale also being zero gas and fast transaction costs, it means that transfer is instantaneous and the cost is zero. So when you are interacting with an exchange, when you are interacting with an entity marketplace, your users again don't have to have a diluted user experience because they have a minor transaction cost popping up here or there so frequently. And again, I just want to make sure to call out that all the same tools that we talked about before still work within each and every one of these scale chains. And to take it a bit further to help with a facilitation of transfers of assets. Specifically tokens between all of the different chains within the scale ecosystem, there's a scale widget that is customizable by application which allows you to provide a good user experience for your users, to be able to easily understand how to migrate from chain to chain without having to go to code, without having to understand what endpoint they're on.
00:08:45.378 - 00:09:33.390, Speaker B: All of that can be programmed directly by the application to make the transfer of assets very seamless. So this is just one way that the ecosystem is coming together and it's really exciting to see the community decide to take that even further. All right, so as I promised, I would keep the slides to a minimum and we're going to hop straight into documentation and demoing. Before doing that, though, I did want to call out some fun steps. As I mentioned, in a MultiChain system, that means you have more than one chain, right? And so to date, we currently have 22 scale chains running for various different applications. And so far we have surpassed 4 million transactions. And as you can see over here, this is the estimated gas fee savings.
00:09:33.390 - 00:10:33.826, Speaker B: By not having a gas fee associated with transactions that are going across within the network, which is really exciting to see. The growth within scale has just exponentially just grown over the past few months. I think with the launch of Ruby Exchange, the Dex, with the launch of Safund Gains, Cryptoblades and so forth, we're seeing some really awesome momentum with users deciding that they want to take advantage of an ecosystem where there's no transaction cost for the base level transaction that they're trying to do. All right, so how do you get started with the scale network? Well, if you hop over into the ETH online Discord, you'll be able to go to the scale sponsor section and from there we have links to point you to how to get started. That link is going to take you here to hackathon Skill network. And there are two main links here that are of importance. One is going to be the one that allows you to choose which testnet or scale chain that you want to use during the hackathon.
00:10:33.826 - 00:11:14.706, Speaker B: You can easily add that to your MetaMask directly here. You don't have to copy and paste the endpoint or anything like that. Simply decide which one you want to use and add it to your MetaMask. And then you can also go to the various block explorers for each specific scale chain. All right, the second link here is the Docs, and the docs is going to help you understand how to get started with everything within the scale ecosystem. If you hop over to develop, this is one of the best sections to go through and understand how to integrate with some of the most popular tooling that most developers use. So Truffle is here, remix is here.
00:11:14.706 - 00:11:59.202, Speaker B: Anything that you might want to test out or quickly deploy using, you'll be able to come here to get some really awesome code examples. There are some other features within scale that are very specific to scale. I don't see this in many other networks because it's been built directly into the scale network. Those are things such as the scale Oracle, meaning that, yes, directly on each and every scale chain, there's an Oracle that comes built in, meaning you don't have to pay for the Oracle. You can simply connect to any API out there, request data, and use it within your smart contracts. If I head back, there is also a feature called multiple transaction mode. Now, within most blockchains you are able to send multiple transactions, which is great.
00:11:59.202 - 00:12:56.114, Speaker B: They get added to a pending queue, which is great, and you have to wait for a few blocks before they're actually processed, which is not so great within scale. What you're able to do is send up to 200 transactions for the testnet chains. And what that means is that within the same block we will process all of those transactions for you. Now, this is very useful for applications that are building gaming mentality because if you're building a game, you don't necessarily have to rely on specific subsequent order. If you're building a Dex, that rule does not apply to you because as you can imagine with DEXes and with finance, you need to make sure certain transactions happen before the other. However, multiple transaction mode has proved to be handy for a lot of applications already today because let's say that you are minting 10,000 NFTs. Well, if you're able to mint 1000 every 5 seconds within the scale network, that allows you to go a lot faster by using the MTM mode and taking advantage of that.
00:12:56.114 - 00:13:48.462, Speaker B: There's some great code examples for explaining exactly how to do that, specifically how to increase the nonce in order to make sure that you are able to process all of those transactions. And then from there, that's all you have to do. It's already turned on for every testnet scale chain here at the hackathon, so there's nothing extra you need to do to get started with this. The other cool feature that is very unique to scale is a random number generator. Now, a lot of projects sometimes will always need like a random number in order to create randomness within your application, right? And so a lot of times it's not possible to do it directly within smart contract. Well, why? Because it's costly. And that's because with other blockchains you do have to code your smart contract in a way to really be mindful of cost.
00:13:48.462 - 00:14:42.120, Speaker B: Well, when you're dealing with a zero gas fee environment, you don't have to deal within those constraints. You can simply code exactly how you want to. And that even extends to something such as using a random number generator directly within your smart contract because you don't have to worry about that increasing amount of cost for your users. Now, similarly to everything else within our documentation portal, you will be able to take advantage and see just really easy to use code Snippets. So you're able to copy paste this directly into your smart contract and retrieve a random number that's presented in the form of a hash. Okay, well wait, how do we actually take that and create a random number that's between one and ten or one in 100? Well, we make it super simple by explaining to you exactly how to do that. Just implement a mod mod ten, mod 100 mod 1000 and you're able to get your integers between those specific numbers.
00:14:42.120 - 00:15:36.600, Speaker B: All right, if you head back, though, again, everything you need to get started, even as simple as just deploying onto the scale network via the various commonly used applications, will be here. And the last thing I would love to show you is using two of the very unique features, random number generator and MTM mode directly within a project that was created by another solutions engineer, Abru on the team. So you are able to download this if you want to play around with it directly from our GitHub. It's underneath the scale demo repository. And essentially what this does is it creates something that's called a strange token. And that strange token is randomized, where the dots within that specific token will change based off of the random number that is being used within that token. So you can see here, I'm pulling up a new token here.
00:15:36.600 - 00:16:44.720, Speaker B: Now, this is already deployed onto a testnet scale chain. And what this contract does, I'm going to first show you the contract because a scale token contract is just your basic ERC, 721 smart contract. It leverages the open Zeppelin standards. And the one thing that is going to be different here, though, if I scroll all the way down, remember how I said we're taking advantage of using some of those unique features? So instead of a random number generator, well, you place that function directly within your smart contract and you are able to use that specific feature very easily. And what this randomization is going to do is make sure that I can move those dots and create a very unique token or NFT for users. So I can create 10,000 NFTs that are all going to be unique very fast. Now, to show you this, using multiple transaction mode, I have a very basic Web Three connected JavaScript code snippet here, which essentially what that's doing is going through increasing the nons to create 100 tokens all at once.
00:16:44.720 - 00:17:34.590, Speaker B: Very simple. And then what it does here, like I said, we'll just use web3 in order to send that across to be able to attach to the scale network and mint those tokens directly onto the scale network. So let me show you what that looks like. And I already have my very handy code snippet here that I'll paste. Press Enter. And just like that, we've minted 100 NFTs so super fast. And then if I come here, since we're on, I am using a different scale chain, I'll show you what that looks like on the Block Explorer to bring this full circle.
00:17:34.590 - 00:18:29.966, Speaker B: As you can see, 14 seconds ago, I mentioned 100 tokens and you're able to see all of those token mentors created right here on the Block Explorer. I think what's really cool about the Block Explorer is that it's just like ether scan and I'll show you exactly what that looks like as well. I'm going to copy the Smart Contract for that strange token that was already pre deployed. You're able to verify your Smart Contracts, and if you want to use Remix, you can to be able to interact with the Smart Contract. But if you want to use a Block Explorer directly, you can do that as well. And so from here, I'm able to read the Smart Contract, see everything that's available there for me as far as the methods, and read and write directly from the Block Explorer as well. So all of the tooling to make your journey here at E Flobal for developing very easy.
00:18:29.966 - 00:18:50.614, Speaker B: And of course, if you have any questions along the way, definitely feel free to reach out to our team within the E Global Discord. So I know we're almost at time, so I wanted to make sure to leave a couple of minutes for questions if anyone has any. So I will stop sharing my screen. Yeah.
00:18:50.652 - 00:19:02.380, Speaker A: If anyone has any questions, feel free to raise your hand. But yeah, again, if you are shy, don't hesitate to drop them in the Discord later on.
00:19:06.670 - 00:19:07.580, Speaker B: All right.
00:19:09.310 - 00:19:17.710, Speaker A: Yeah. Thanks so much, Christine. That was super. Like, I feel like I learned a lot on scale. That's why I love hosting these workshops with the sponsors.
00:19:18.530 - 00:19:38.146, Speaker B: I love it. Well, then, yeah, if you have any questions, definitely feel free to reach out to us in the eGlobal Discord. Our team will be hanging out there around the clock. We have team around the world, so you'll definitely get a response from one of us in the channel. And happy building, guys. I hope you have a fantastic time building up this hackathon.
00:19:38.338 - 00:19:42.130, Speaker A: Thanks. Bye, everyone. Bye.
