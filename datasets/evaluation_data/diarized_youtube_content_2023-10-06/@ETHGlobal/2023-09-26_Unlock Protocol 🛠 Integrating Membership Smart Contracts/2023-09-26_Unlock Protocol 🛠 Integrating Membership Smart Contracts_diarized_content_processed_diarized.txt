00:00:07.050 - 00:00:34.294, Speaker A: My name is Julian Julie Sum, the CEO and founder at unlock protocol. And today I'm going to show you, I mean make a quick introduction of what unlock is. And then if we have enough time, we'll do a live coding session. Usually go very fast, but I'll point to the GitHub as well, so you can use this. So first, quick agenda, unlock protocol overview. Then we'll jump into some dev tools, all of our ecosystem of tools. Then how to add unlock to a front end use case.
00:00:34.294 - 00:01:02.350, Speaker A: And again, that's the live coding session. Then more about smart contracts, about hooks, about UI, and finally a bunch of links that you can use for your hacks tonight, tomorrow, and obviously hopefully you'll win the hackathon on Sunday. Somebody is very kindly distributing a little liftlet with QR codes on this with links to the docs, et cetera. So please use that. My name is Julian. I am the CEO and founder at unlock protocol. I am French.
00:01:02.350 - 00:01:31.500, Speaker A: Prior to unlock, I was the founder of a company called superfeeder, which was sold to medium, the blogging platform. I still think people know what medium is. In 2016, I'm a big open source fan. I worked with W, three c, worldwide consortium. People don't know what it is usually in that space, but that's basically people that actually normalize or write the spec of how the internet should work. It's fun, but it's annoying. And I'm also a member of the graph council, which is their kind of dow governance thing.
00:01:31.500 - 00:01:58.050, Speaker A: You can find me as Julian 51 on all of the things. Yes, all of the prior 50s were taken. Or use my blog@uvrot.com, which is token gated by the way. And if you get a membership to read some of my posts, it's $5 a month, a year, cheap. Let me know and then I'll pay coffee when we meet in person. What is unlock protocol? Unlock protocol is a protocol for memberships.
00:01:58.050 - 00:02:37.982, Speaker A: Simply speaking, it's a system to create membership and sell access NFTs in minutes within your apps, within your content, et cetera, et cetera. It is used for memberships, like a gym membership, a club membership is used for subscription like your Netflix account could be, should be, will eventually be. An NFT can be used for ticketing. A ticket to a conference, a ticket to an event is an NFT that gives you access to physical space. It's used for what we call token gating, and that's what we'll see in a couple minutes. But also for things like certification, your degrees, your driving license should be NFTs that have an expiration date, or maybe not, actually your diploma is forever, but your driving license expires every five years. I think in the US.
00:02:37.982 - 00:03:14.810, Speaker A: I should know this because I have one, but also it can be used for gaming. So for example, you can unlock a certain level that you can access for a day, a week, a month, et cetera, et cetera. It is obviously fully open source. So all of the code that we've ever written at Unlock is open and ready for your inspection. I guess it's also community governed. We have a dao with people that are participating and contributing new code, new updates every day at this point, a bunch of apps, a bunch of libraries and a bunch of DevTools and then we'll go into that in a couple of minutes. We have a pretty diverse team of people.
00:03:14.810 - 00:03:45.966, Speaker A: Again me, but also people from Google, Facebook, the evil people from GoDaddy and a bunch of other organizations. So wait, I talked about NFT membership. Any NFT could work. Well no, because most NFTs were not built to be memberships. They are built to be collectibles. And so for example, they're perpetual if you're a business and you sell regular NFTs to make revenue, well I've got some good news. You're going to make some money maybe on the first couple of days, but then you will never ever sell more NFTs.
00:03:45.966 - 00:04:16.814, Speaker A: You can hope on royalties, but as we hopefully by now all know, royalties are a lie. They actually are not enforceable. So there is no way your business can make money on an ongoing recurring way. Well, that's why we've created kind of a new kind of NFT. They're ERC 721 that have an expiration date to allow to have kind of time bound NFTs. So NFTs that are valid only for a certain time, that allows you to do, for example, recurring revenue where you can say, okay, the NFTs expire every month unless the user, the owner of the NFT pays a bit more every month. And again, Netflix accounts, that's how they work.
00:04:16.814 - 00:04:50.194, Speaker A: Basically you pay every month. I think now it's almost $15, but you pay $10 a month for it to be renewed and extended for another month. And when you stop paying, well, the account actually expires. It is also Unlock has been built so that it can support multiple payment mechanism, obviously crypto payments. So native currencies on all of the chain that we're deployed on at this point it's on twelve different EVM networks. We'll talk about this in a couple of minutes. But also you can use any ERC 20 token so you can say hey, I actually don't want to be paid in Matic or in east because these are fluctuating currencies.
00:04:50.194 - 00:05:34.454, Speaker A: I'd rather be paid in USDC, in Dai, in Euroc, in any ERC 20. That is absolutely possible. It has a mechanism to do on chain verification. That's the normal NFT verification, but also off chain, where we have a mechanism for owners of NFT to sign it and provide that signature in the form of a QR code, for example, that anyone can scan to verify that indeed the owner of the NFT signed and still owns the NFT. They can be made transferable or non transferable as we call them, soul bound in that space. But I think more importantly, they can also be programmatically transferable. So maybe allow transfers if the user does something or unless something else is true.
00:05:34.454 - 00:06:13.502, Speaker A: And obviously we go from a model where all of the NFT contracts are immutable, they're put out there and if there's any issue in them, well, too bad, they're there forever, to something that becomes programmable or upgradable in a way that allows developers like yourself change the behavior of the contract. So you might say, okay, at first I will not allow refunds, but maybe after a couple of years I will allow refunds. And it is possible to keep the same contract without having to remint everything and say, hey, these NFTs, initially they were not refundable, now they are refundable. So far so good. So unlock. I was just alluding to this a couple of seconds updatable. You can change all of the properties of the membership contract.
00:06:13.502 - 00:06:58.190, Speaker A: So including the price, including the duration, you go from maybe a month long membership to something that is a quarterly based membership. You can change the price from something that is like $5 a month to $7 a month netflix you can go from a limited supply to a larger supply. You can go from having only one manager for the contract to multiple managers, which could be apps that can change how these memberships work, et cetera, et cetera. They're also, as I said, upgradable. So the protocol itself is on, I think, version eleven. I should know this as well, but we're just about to move to a new version. And that means that when the protocol has new features, maybe support for things that it didn't have earlier, you can decide to opt in for these new features of the protocol.
00:06:58.190 - 00:07:39.214, Speaker A: You cannot upgrade to a random version, otherwise it doesn't become standard anymore. You can only upgrade to versions that have been community approved by the Dao. And finally, and maybe this is one of the interesting part for you guys, the smart contract themselves are programmable through the concept of hooks. So you can change how the contract behaves based on some custom logic. So for example, one thing that people always ask is like, hey, can I do something where maybe the price of the NFTs change based on how many have been sold? And you can actually absolutely do that with the hooks. So you can have a system where maybe the price at first is one USDC and then every time somebody buys, you double that. And so obviously that's going to get very expensive very quickly in a programmatic way.
00:07:39.214 - 00:08:25.846, Speaker A: So you don't actually have to go manually poke the contract to change the contract. Somebody buys, price goes up, somebody buys, price goes up, et cetera, et cetera. Key Use Cases Event Ticketing so there's been a ton of events that have used unlock for ticketing, including actually some ETHGlobal hackathon a few years back, recurring subscriptions, or actually ECC as well, if you guys were in Paris, I know East Mexico, East Vietnam happening in next couple of weeks. Are using unlock for ticketing. You can do recurring subscription. I mentioned Netflix, but there is many at this point I'd say a good 20 different website that are using unlock for monetizing blogs or video content in a recurring way. So you pay every month and your NFT gets extended and you can keep access time based membership.
00:08:25.846 - 00:09:09.386, Speaker A: We have seen a few Dows use unlock for this where they have a seasonal approach where they say, okay, these membership are valid for three months, at the end of the three months they expire and they're not automatically renewed. But that's kind of seasons to make sure that the Dao has active memberships. We have certification and credentials. So we have a company that is using unlock to recertify its financial advisors every year. So basically they give them an NFT. If they cannot transfer, obviously they give them an NFT that shows that they've been certified and at the end of the year it expires unless the person who was certified actually recertifies by going through some online presentation, et cetera, used for gaming as well. There's been a couple of games that have used unlock for different things.
00:09:09.386 - 00:09:54.540, Speaker A: So either unlocking levels or unlocking different capabilities for their players used also for loyalty. We have a platform called Chasm, I don't know if you guys have heard it, but they're building kind of loyalty program like your Starbucks kind of loyalty thing on top of unlock. And that's another example, attendance NFTs, sometimes called Poaps. People used unlock for this and also my least favorite category, the digital collectibles, the PFPs and all of the NFT crap that hopefully is on the way out at this point. Let's go a bit deeper into a specific use case. So event ticketing, I mentioned a few conferences. What's interesting here is like 100% of the crypto payment goes to the organizers which is pretty cool.
00:09:54.540 - 00:10:29.326, Speaker A: It is end to end tickets. So you're actually not buying through a platform, you're actually buying through the smart contract as an attendee and then the organizers of the conference can decide whether they want to allow people to resell their tickets or not, which I think is pretty powerful. But you can also create, and for me that's the power of blockchain interoperable experiences beyond just the event itself. So you can say hey, maybe before the conference anybody was bought a ticket, they have an NFT. Well you know what, I'm going to use Snapshot. You guys are familiar with Snapshot, yes? No? Snapshot is a voting system. Snapshot.org,
00:10:29.326 - 00:11:13.330, Speaker A: pretty cool thing off chain voting. But you can make it so that only people that have a ticket to the conference can vote on what is going to be the food or what's going to be the main speaker, which I think is cool. You can also create maybe token gated channels on warpcast forecaster, people know warp forecaster maybe know about social networks and only participants, only attendees of the conference are able to participate. Which I think is another cool example of how this membership goes beyond just hey, you only have a ticket to go attend the thing. Now you have an NFT that gives you access to many different things across the web. Sorry for hitting the mic here. Tickets act as a membership and card to connect with the community of people that have the same obviously NFTs in their wallets.
00:11:13.330 - 00:11:55.706, Speaker A: Example a couple of weeks ago, dapcon in Berlin actually that was last weekend, feels like forever. Nearly a thousand attendees all using unlock for ticketing. I'll spare you some of the details but yeah, basically if you buy the NFT you get a QR code as well which you can show to the organizers and prove that you have a ticket. Also people got swag through the NFT which is really cool. Like the sponsors were able to AirDrop other NFTs and a bunch of other things to the attendees of the conference and knowing that they're only the attendees of the conference because they had the NFT that proved that they had a tickets. Another key use case of the protocol is subscription. So token able and experiences.
00:11:55.706 - 00:12:40.846, Speaker A: I mentioned my blog a couple of minutes ago but again there's about a 20 different website that you do that at this point. And what's really interesting is for these businesses it creates ongoing recurring revenue. So think of like a Patreon or a substac like model where as a creator instead of selling one off things and then hope that I'm going to be able to sell more and more of these, I can just tell my fans hey, you guys are interested in following my content. Why don't you pay every week, every month, every day to get some of that content? We support, as I said, both crypto and credit card. We have an integration with Stripe as well as an integration with Cross Mint which make this really easy. So direct relationship between the creators and the members. No way somebody can say hey, your content is not good enough or your content is too adult for my platform, I'll kick you out.
00:12:40.846 - 00:13:10.140, Speaker A: No middlemen. That applies to content, to software. Think of like in app purchase. I'm sure you all have mobile phones. You might have inapp purchases in this. While they're currently records in a database either at Apple's or Google servers, you can make them NFTs and say hey, if the user has an NFT in their what I'll show them dark mode or whatever is the feature that I want to token gate or not inside of my app. So really kind of creating kind of permissionless app stores is a really cool idea here.
00:13:10.140 - 00:13:44.546, Speaker A: Any question? No, so far so good. An example here we have a community member. I mentioned one of these 20 guys but actually don't know if they're guys DFI robots. They're providing trading tips via their Telegram bots and you cannot access the Telegram groups unless you have one of their NFTs. They're fairly expensive NFTs, I think like something like $200 a month or something like this. Actually $100.03 days and then $200 a month.
00:13:44.546 - 00:14:01.106, Speaker A: But that's a cool example of using unlock for that. I have three more minutes, so it's going to be really short time membership. Let's skip that example. Cabin. Dao people know cabin. Cabin is kind of a club for people that are cool and want to hang out together in the forest. They're using unlock for memberships.
00:14:01.106 - 00:14:31.874, Speaker A: Definitely very cool. Use case here. Going back to the key use cases, the ecosystem and tooling. So we have a dashboard, obviously a front end where you can use to deploy, inspect your contract, do a bunch of things. This is completely optional, obviously the front end itself is just a front end. You can replace with your Block Explorer of choice or an application that you build yourself. You can use that to change the characteristics of your block of your block of your contract, as well as do some things like AirDrop membership and others.
00:14:31.874 - 00:14:59.926, Speaker A: I would definitely invite you to check that out if you get started. It's the easiest way. We also have a Checkout UI, which is an easy way for people who don't want to build kind of the whole checkout flow, say, hey, all right, cool, I want to enable credit card. I just check a bunch of boxes and then users are going through that checkout UI. And as I said, we support multiple types of payments. We also have developer tooling, so subgraphs, hopefully you guys are familiar with subgraphs, but it's basically a way to aggregate a bunch of information coming from chains. We have a JavaScript library called Unlock JS.
00:14:59.926 - 00:15:25.154, Speaker A: We have a Paywall, which is actually that Checkout UI that I just described, as well as hooks at the contract level. So we also have web hooks, but these are smart contract hooks that allow you to alter how the contracts behave. Multiple types of integration. Anything that works with an Es 721, which is one of these two NFT specification, will work great with unlock. So framework like ethers. Third web3, JS wagme. You name them.
00:15:25.154 - 00:16:01.950, Speaker A: VM I think is the new hot thing. You can just use unlock there. We also have integration with platforms like Magic, like Prevy, like Stripe, Superfluid. I mentioned all of these. Again, feel free to ping us on Discord to get more typical protocol ecosystem thing. I'm not going to have time to show you the live coding, but I'll share the link in our Discord. Basically it's a random blog that you can read content on and really with less than 50 lines of code, you can create a token gate that basically requires users to connect their wallets, prove that they have an NFT if they do, they can read the content.
00:16:01.950 - 00:16:28.566, Speaker A: If they don't, they're prompted to purchase one of these. So they can read this. Again, pretty basic. And the unlock specific part here is I'd say five lines. Everything else is like normal wagme and web3 or sorry, Ethers JavaScript that allows you to add the blockchain to your web app. There's a YouTube video as well, so if you're not tired of hearing me, you can actually watch me do that demo live. I've done it at multiple hackathon.
00:16:28.566 - 00:16:52.426, Speaker A: Oops, sorry. Don't play, don't play. We also have a quick way to do token gating on the back end, so your Rails Django, whatever node JS application can do token gating on the back end. So no need for you to just do front end token gating. The mechanism is pretty much the same. Ask the user to connect the wallet. Ask them to sign a message, verify the signature of the message on the backend.
00:16:52.426 - 00:17:13.874, Speaker A: Check whether the signer of the message has an NFT. If they do, great, you serve their content. If they don't, nope, you don't serve their content. That's really, really basic. We also have a mechanism to create a bonding curve. The thing that I described earlier where the price of the NFTs go up every time somebody purchased one. You can also make cool stuff where price goes down if nobody has purchased in a while, et cetera, et cetera.
00:17:13.874 - 00:17:57.314, Speaker A: We have multiple types of hooks that can be called and can be used to, again change the behavior of the app. One really fun one is the ontoken Uri hook. It's a way to kind of change the metadata that the NFT is serving or the NFT contract is serving when somebody is querying it. So you can make these dynamic NFTs that basically look different based on the hour of the day, et cetera. I just got a stop sign, so I'm going to just move on quickly to the last slide. Oh, actually, if you want to add unlock membership to your so if you want to add monetization to your app this weekend, definitely use unlock. You should do that and think about how to make money.
00:17:57.314 - 00:18:32.010, Speaker A: You'll also maybe win a prize. And you can scan that QR code to get to our YouTube page where there's a ton of me and a bunch of other people as well. If you are interested in hacking on top of unlock, we also have a booth, so please stop by. There another QR code and they're all on the papers that we just distributed as well, and we're available on Discord this time is not on the paper, so please scan that one if you just need to take one picture. All right, thank you very much, everyone. Bye.
