00:00:07.050 - 00:01:00.718, Speaker A: Hey guys, welcome to this presentation on Bcloud, also known as Decentralized Cloud migrating web two to web Three. Today's session is sponsored by Stack OS and the Bcloud Foundation. Little bit about myself am a finance major from Harvard University. I have technical background from India and I've worked in the US for over ten years in the cloud domain. And I've helped build cloud compute infrastructure for Fortune 500 companies running literally millions to billions of transactions every day, every month. So I've also been in this space for a very long time, in the web3 space for a very long time. I bought my first bitcoins in 2012 and lost the private keys for it.
00:01:00.718 - 00:01:59.090, Speaker A: Thank you for these lessons which you have learned moving forward. I think really what we stand for is trying to build this ecosystem together and Stack OS is, I think pivotal to this. Right? I am the CEO and chief architect of Stack OS. I'm also the chief counsel at the D Cloud Foundation. So one thing is that talking about Stack OS stack OS is a decentralized cloud. What that means is that it is a replacement for using AWS GCP Azure in the web Three space because this is what it is. What Stackweights really stands for is ensuring freedom of speech and expression, ensuring the true fundamental economic powers are retained by the web3 folks, the community members, providing real value to the ecosystem and not some third parties.
00:01:59.090 - 00:02:57.810, Speaker A: And that's what it is about. And this is totally talking about a little bit of what the current landscape really looks like in the cloud and why it is important for us to really work in this direction of decentralized cloud. As an example, like just a year back, you would know Uniswap basically delisted all the security tokens from their website. Ironically, Uniswap as a protocol and the contract still support the security tokens. But since the accounts on which the Uniswap UI was running was operated by the founding team of Uniswap, and it is very easy for the government authorities of the SEC to knock in the doors and say, hey, guys. You need to shut the service down or you are going to be behind the bars for doing or running. Providing a UI which works or interfaces with security tokens or which they classify as security tokens.
00:02:57.810 - 00:03:43.986, Speaker A: And that's not really something to decentralize if a decentralized project decides to delist security tokens or anything for that matter. A second example, right, this is how the freedom of speech was snatched. For the ones who don't know, Parler Parlor was an application where all the followers of Donald Trump migrated or blocked to when they were banned from Twitter. And I think that is kind of important to understand. Again, this is not really a political issue. Who is right, who is wrong, but the fact that the government authorities have control over what you say and what you speak. And this is where it gets interesting.
00:03:43.986 - 00:05:26.946, Speaker A: Right the moment, first of all, Twitter was forced to remove Donald Trump from Twitter, which meant that all the users or followers of Donald Trump moved to an application called Parla. And everything was going great for them until AWS decided to shut down the services on which partla was running? And again, this is AWS unanimously decision to terminate those applications. And this probably was something a decision made in coordination with AWS and the government maybe and who knows what, right? But here's what it is that in the true Web Three domain can you ensure that the freedom of speech is retained and we have control or the community can govern the policies and the rules to run applications which could allow the freedom of speech to exist. So again, why is Web Two really failing from what we see? First of all, the real incentive mechanisms are not aligned. For example, if I as a developer am using AWS, I don't benefit as a user, but the shareholders of AWS are the ones or Amazon are the ones who really benefit from it. Talking about it is very expensive to really set up cloud infrastructure which is going to be secure, right? We've all seen Social Security numbers in the US lost by credit unions and that's awful. I mean that's a very important private data which can have very severe consequences.
00:05:26.946 - 00:06:54.254, Speaker A: And here's the fact when you try to build infrastructure in these cloud providers, first of all, it takes long time and you require real specialists who can do the job well and they are very, very few in number. Third thing is that it is not really anonymous. If I have to go and deploy applications, I have to give my grandfather's details and whatnot to really be able to get access or to be able to use Web Three, use services on AWS or GCP, Azure, just name it. In True Decentralized Autonomous Organizations or Dows, it is impossible for a governance to really create an account on AWS to deploy or run applications. How can you really be decentralized if you are still centered towards an account which is running on AWS or GCP, on your own account of AWS and GCP and does the issues. So the obvious question is does it matter to you? Right? Does the two decentralization matter? And I think that's where the Web Three really is coming to play the blockchain came with the ethos of removing the central authorities and bringing up communities to really build ecosystems. And let me give you an example of how would you decentralize something like Facebook and what are the current things.
00:06:54.254 - 00:07:34.958, Speaker A: So I would distribute this into two segments. Like if you want to make a real world class application which people use like Facebook, you need to make sure the user experience is there. And for that you have these following things. So you have the presentation layer which is the front end, which you always see when you go to the browser. The data storage layer, which stores information about your history, your photographs, your friends, and whatnot. For AI analytics, it requires machine learning and reporting. For example, Facebook tells you that, hey, this guy may be your friend based on your network of friends.
00:07:34.958 - 00:08:21.142, Speaker A: That's something which requires some analytics and machine learning. There integrations. How does anyone start to give you notifications or messages for someone or friend of you, just connects with you and sends a message? How do you get notified about them? And then how do you send messages like that, which can be absorbed or received by you? So you need something like that. Data sources. So what Facebook does is it has a portal. People can go in, enter the ray data, and that's how they get data onto Facebook, which is real world data and can be used by users of Facebook. So, if you have to make something similar in the web3 space, I think it's impossible to do it without using central authorities.
00:08:21.142 - 00:09:13.130, Speaker A: Only thing which is kind of decentralized is that the data storage, which you can use IPFS for, for storing static files, and then you have Ethereum or Polygon or all these layer one chains, which basically act like a database for storing information. Then of course you have data sources like Chainlink, which allows for real world data to come in to the blockchain and then store data there. And if you have to make something really which people use, applications which people use, you need a presentation there, which runs on AWS. This is the only choice. Now AI analytics. Again, AWS integrations, AWS again, there are many, many more different pillars. But for the scope of today and to just to make sure that we can cover these slides today, trying to cut it down to these five lists.
00:09:13.130 - 00:10:07.470, Speaker A: But again, this is truly decentralized. If you're using something like AWS, which can kind of be forced by governments or cloud providers to shut it down, answer is no. Right? And that's where Stackwiz comes in. It provides all the different layers which are just not static, which are real applications, which people use to really be decentralized. So again, Stack OS solves a lot of problems. What are the problems does it solve apart from decentralization? So it reduces or removes the high DevOps cost. All of us know that the DevOps engineers cost hundreds of thousands to million dollars in expense for a small to mid scale organizations, or Stack was to completely eliminate that environment preparation.
00:10:07.470 - 00:11:12.146, Speaker A: You can take about seven weeks, up to seven weeks to create a real production grade infrastructure or environment, which again, you have no guarantee is going to work the way you expect it to. So in Stack OS, your environment gets running in less than 30 seconds. And we'll go through a demo of this thing after the end of the session ability to pay with crypto, which is it is impossible right now to pay on any of the cloud providers with OS is something which can provide that with DAOs and crypto. First organizations they don't even have identities to share with. And how would a Dao or Decentralized Autonomous organization create an account on AWS governance? How infrastructure can be governed by a Dao? It is impossible to do that. And again, that is something which Stack was kind of solved as well. And what are the steps to really decentralize your entire infrastructure? So, first thing is you dockerize your application for ones you don't know.
00:11:12.146 - 00:11:46.080, Speaker A: Docker something you must know, right? Dockerize your application. It's a ten line file which I think all of you can learn and do. Second thing is you have to go to the UI and reserve the compute how much you need. Third thing would be import those configurations on the UI and then just click a button or call Deploy and the application will be running less than 30 seconds. And that's kind of the palm of which Stackwood brings in two day centralization and ensuring that it's very quick to run. Right. Again, we'll go through the demo for you.
00:11:46.080 - 00:12:27.626, Speaker A: Quick background, I think, some cool facts. Stack is a category leader in decentralized cloud on D Cloud and we are the world's most utilized and the fastest growing T cloud. We have over 73 million websites served on the network so far. By the time you probably visit, or you've seen this video, this probably must have increased substantially as well. We have over 3500 applications running and over 1500 deployed projects on Stack OS and the version two is coming very soon. Keep an eye on it. It's amazing.
00:12:27.626 - 00:13:00.150, Speaker A: I think the new architecture which is coming out and the new problems is going to solve. And again, the best time to really contribute and work with us is now. So please reach out to us. And all of us are here, please reach out to us. You can join our ambassador program and also follow us on and message us on Twitter, on Deeploud Deploy on Stackos and on Discord Channel. Please comment. So let's get on to the second part of the session.
00:13:00.150 - 00:13:41.090, Speaker A: So all you need to do is go to app Stackos IO. Once you're there, you will see that you have like two options to log in with. You can use Eramask, you can use a coinbase wallet, or you can use Wallet Connect with your phone. For this example, I will just use the MetaMask on my browser. So I click here and then I connect my wallet. Once I'm there, I can pick a chain. So Polygon BSE, there's a new chains coming in like avalanche and also Reef.
00:13:41.090 - 00:14:31.766, Speaker A: So for now, let's click in Polygon and then choose a subnet called Authority. You sign a transaction and Voila takes it to your dashboard. And this is where you basically see all your running applications which you have been deployed using your wallet. Now, let me go to the next stage. Like if you have to go deploy applications, how do you do that? So, it is very simple idea. You could go you can actually look up here your compute how much you have. So it looks like I have about 1300 CPU, about 1200 300 memory and some oneGB of storage remaining.
00:14:31.766 - 00:15:22.270, Speaker A: So I can just go and purchase them from the hardware section. So you can go to here, select purchase resources and you can just go and buy more righteous. And once you do that, you can just be next confirm, make the payment, wait for the layer one blockchains to take its time to run the transaction and to compute to you guys. Bam. Now you've got compute, you close it. So you see this, we just bought 6500 here. We got 6500 here.
00:15:22.270 - 00:16:23.006, Speaker A: So we are good with that. Now all you have to do is go to deploy and gives you two choices, right? One is deploy custom image. Let's say you're developing something here right now and then your docker image from Docker from Docker Hub you can just pull that over. Or you could go to the App store which already has multiple apps already configured right for this demo. We just keep it strict to custom deployment. So custom image, we give any name here you can say hack as a hackathon, let me pull this example of Altios live Blockchain Explorer. For the ones who don't know this, if you go to Docker Hub, it's Light Explorer for Ethereum and for the ones who wrote on Docker Hub.
00:16:23.006 - 00:17:12.980, Speaker A: Docker Hub is a repository where you can just push your image. Once you've written that again, it's a very straightforward 20 line file which all of you can just write and just completely dockerize your entire application as a container. And if you'd see if you have to run this application locally to test it out, all you have to do is pass this command local on your local desktop and the application will run on your local machine. How do you bring this on? Stack OS or decentralized cloud. You basically just copy the settings here from here to the app. So once you come here, you can give your application name whichever you choose, give your docker image name, you'll pick the latest image, right? That will be the one which is kind of the latest tag, which you have this tag. So you pick that.
00:17:12.980 - 00:18:01.920, Speaker A: If you have a private Docker Hub repository, you can also do that. For now, just keep it this way. Next here you can just pass your container ports. So if you look at this right, you have I showed you earlier that you have to pass your ports like for in this case it's 80 and 80. So you just come to Stack OS and then you enter 80, 80 if you have some path you want to really you can give your own domain names. You can basically tell if you have a stateful set, arguments you want to pass to run the app, environment variables if you need at the startup of the boot time you can pass that and then you can just come pick Compute for your deployment. So let's say I want 100 milli code of Compute 100 here, maybe like one.
00:18:01.920 - 00:18:27.340, Speaker A: I don't require persistence storage, so I'll just leave it at that. Next and all I do is click deploy. Right now it already knows that I don't have enough Compute. It'll just deploy and hopefully less than 30 seconds our app will be up. So that is kind of how easy it is to really deploy applications on Stack OS. Only thing which you need to really know is how to dockerize your application. Once you have that, you're good to go.
00:18:27.340 - 00:19:09.206, Speaker A: So as you saw, if your own domain, you just have to point a domain to that IP address. Else you can just pick your external DNS. If you're using the standard default what StackWise provides you, you just copy that and then you paste into your new domain there and voila, the application is already up and running and serving traffic. So that is how fast applications on Stack OS is. Deployments are super simple and quick. What you could actually also do is I can kind of show you for troubleshooting and whatnot. You can just click on this run shell and you can create a shell, a terminal to see what is happening in that.
00:19:09.206 - 00:19:42.260, Speaker A: So let's say I want to start creating a user and with these passwords and credentials I am creating one shell which will be able to go and look into your application and troubleshoot them if you need to. So it just starts in few seconds. No, thank you very much. All right, confirm in a few minutes it will be started. So it should confirm and wait for a few seconds. Maybe if it's already upgrade, if not we'll wait for a few seconds. Okay, few seconds up.
00:19:42.260 - 00:20:16.338, Speaker A: All right. So logged in and voila. You are able to completely see this thing running. You could then pass get pods that will basically show you all the running applications or just all pods in this case I'll just do grep running. I guess it does show me running. That's how I'm going to put it. That's why no rocket science.
00:20:16.338 - 00:21:04.376, Speaker A: But I can actually open this on my external as well so that you can see on the larger screen it so you can see all your applications running here. So if you noticed, this is the hack one which you had, this is the one which is hack. So this is how you really see you just started like two minutes back. So that was how quickly the application really started off as well. You can just look for hack I think I'll probably get you that as well. So this is how simple this thing is to use and troubleshoot. You could actually look at the logs.
00:21:04.376 - 00:22:00.210, Speaker A: So let's say Kubectl get logs, receive logs, f to follow the logs, I can just copy that container which is running paste it Enter, and I will see this app literally serving traffic in real time, right? And it is set for Enters here. So if I just go and do a refresh, you should see that coming here. There you go. That is how quick it is. You can troubleshoot and go crazy with this. So that's for going into the bash and whatnot again, you could basically go again to the app store and deploy an app in real time, right? So let's say I want to deploy a game called Hexgl. Let's do that.
00:22:00.210 - 00:22:27.000, Speaker A: Also, my favorite is Doom, but I'll just keep it to Hexgl this time. Next it already has telling me how much computer need and how much is available. So it looks like I got sufficient, more than sufficient. So I can just go deploy. And in a few seconds, hopefully it's 30 seconds, your app will be up and running. The game will be up and running. So you're going to be seeing this thing shortly.
00:22:27.000 - 00:22:48.544, Speaker A: There you go. That is how quick this is. Copy this, Enter, paste, there you go. The game is up and running already. So that is how quick Stack OS is. You can run real games. You can run any application in the world.
00:22:48.544 - 00:23:54.780, Speaker A: You can run artificial intelligence, machine learning, messaging service, data ingestion service, all controlled by a Dow. That is how powerful Stack OS is and how you can really leverage the Stack OS decentralized cloud, right? I hope this has been really interesting and you learned something about Stackos and learned something about decentralized cloud. This is something which is kind of very close to us as a business and also as an ecosystem, right? Again, this is the only way you can really keep the entire world decentralized in control, in control of the communities, the dows, and help us really take control of the ecosystem and not be at the mercy of other parties which may not have the best interest of us. So thank you very much. I hope you enjoyed it. Please, if you have more questions, reach out on Discord, reach out to us on Twitter and we'd be happy to help. Happy hacking.
00:23:54.780 - 00:23:55.310, Speaker A: See you guys.
