00:00:07.690 - 00:01:08.100, Speaker A: Okay, recording is good. Second by 1 second. Double checking our recording. Here. We are recording on zoom, so we're good, but I double check the stream here. You it.
00:01:25.850 - 00:01:29.110, Speaker B: Off in less than a minute.
00:01:32.890 - 00:01:33.990, Speaker A: It's exciting.
00:02:25.180 - 00:03:28.476, Speaker B: All right. Welcome everybody, to our kickoff for Hack FS judging. Today is day One, and I am Kartik, one of the co founders of Eve Global, and we're super excited for the last week of wrapping up Hack FS. So for those of you who don't know, for the past four weeks we've had 470 hackers who've come in from over 50 countries and 19 different time zones work on a project that uses tools and technologies from the ethereum and the Falcon ecosystem. And we've seen an amazing set of people work on really interesting projects and gotten support from a lot of our amazing sponsors that have kind of come out and helped these teams succeed in terms of making their projects a reality. And as of a few days ago, we've got up all the submissions for these teams. And this week's we kick off what the projects are for everybody else to see.
00:03:28.476 - 00:04:22.540, Speaker B: And I'm super proud to announce that after the past four weeks of hard work from our teams, we've had 132 projects being submitted by these 470 hackers. So we're super excited to see what everybody's done and we kick off what that demos are going to look like today. And I'm super excited for everybody who is going to be looking at this recording later on and all of our hackers to see what everybody else has done. So I want to quickly go into logistics of how this call is going to go. A lot of our teams are here ready to be judged and present what they've done, and the logistics are going to be fairly straightforward. We have about 13 teams today who are going to be demoing to our judges, and each team will have four minutes for their demo and four minutes for A-Q-A session from our judges. And to kind of minimize any AB issues, we've asked every team to pre record their demo.
00:04:22.540 - 00:05:16.720, Speaker B: So they will just play the demo and we'll go into the Q A section after so we can keep everything on. And for our judges and everybody else who's going to be watching this video, a quick overview on how everything was set up for Hack FS. Each team could have up to five members, and a lot of the parts we're going to see were done in teams, and some of them were also done individually. And that was all also allowed. And as part of the rules of this event, all code that you're going to see as part of the demos was written during the course of the last four weeks during the hackathon. And the only criteria was that the projects we're going to see today must incorporate technologies and tools from the protocol labs and the Ethereum ecosystem. So a lot of the projects that we have for this event are really creative uses of decentralized storage and smart contracts.
00:05:16.720 - 00:06:02.924, Speaker B: And the criteria for how the judging is going to go is going to be as follows. We have five categories that our judges are going to be rating all these projects on. And the categories are how technical a project is, how original the project is, the practical applications of the submission, how easy it is. To use, whether it's a UI UX thing or as a developer tool, and a general catch all that we like to call Law Factor that lets us sort of understand and highlight any outliers. So before I move on to kicking off the first ever group for Hackfs, I want to make sure that I kind of highlight this is not a competition. These are very much feedback sessions. And as a result, the hackers are here to learn.
00:06:02.924 - 00:06:34.328, Speaker B: We have a lot of newcomers that have come on over the past month to learn about what they can do with Ethereum and Filecoin. Their hackers are there to share their excitement. They've been working super hard and tirelessly over the past couple of weeks. We've been doing constant check ins with them. We've been helping them connect to mentors, we've given them technical help on many things. And we've done a lot of talks on what's actually possible in both of these ecosystems. And today is the day they talk about what they've learned and kind of how they've applied those learnings into a project that they've been working on.
00:06:34.328 - 00:07:20.000, Speaker B: And the judges are here to get feedback to these teams. The judges themselves are also super excited to see what everybody's done. And as a result, this serves as a window of opportunity for us to learn from what is possible in this ecosystem and also how we can actually improve and continue working on what we would like to see more. As a very kind of thing, I want to press on. Not everybody's trying to become a business. A lot of these are just fun projects that everybody is using and working on to show their creativity. And there is no explicit goal for any of them to become a company or anything beyond showing what the applications are and want to make sure that they stay fun and exploratory in nature.
00:07:20.000 - 00:08:10.116, Speaker B: So the schedule of how the next 2 hours are going to go is fairly straightforward. We have 13 teams today. These are the teams that are going to be going up and presenting and doing the hard job are our three judges for today and I want to kind of welcome them. And that's AYUSH from filecoin. We have Matthew from Unstoppable domains and Kenning from the Ethereum Foundation. And all three of them will be kind of here listening to all of our hackers, giving them feedback and sharing their excitement with them. So with that, I want to kick off with our very first demo for hackfs and like to call out our next team and let's have them join the chat.
00:08:10.116 - 00:08:27.664, Speaker B: And please welcome Watchdog Dao to kick off their demoru.
00:08:27.732 - 00:09:12.460, Speaker A: And this is what I built for hackaths. It's called Watchstock Dao, and it's an attempt to bring accountability into governments and public institutions. You can't optimize a system that you don't closely measure. So this Dow can coordinate citizens around the world into gathering, analyzing, and acting on data to move governments into better representing our interests. Okay, so the first prototype I built is focused on long term storage of government data in a way that it can't be tampered with. I come from Argentina, contributed a long history of incivility and corruption. And the fact that our previous administration made a big push to open up its data does not mean that the current one or next ones are not going to stop storing it, providing it, or even tamper with the data.
00:09:12.460 - 00:10:05.676, Speaker A: So what I did is just grab pretty much all the data sets that the government is exposing and just store it all on filecoin. I have here the full data set, and then I stored an index file, which is just a JSON file with all the IPFS hashes and the file names. That's important because let's say in 20 years from now, you're a researcher or an activist, and you come upon this data set in particular here, and you want to know that it wasn't tampered with. So you just need to grab the hash, check that it's included on the index file. It's there. Just check that this index file is actually the one stored on filecoin, and that's quite easy. And then you're good to go.
00:10:05.676 - 00:10:40.872, Speaker A: Like, you just know that wasn't tampered with. It's focused on police accountability. It's thrown video evidence of police abuse of force in a long term archive. Right now, these videos are being stored on Twitter and Facebook, and there's no reason to believe that they will hold them for any particular amount of time. So the cool thing about the archive is that it'll be built by a decentralized network of activists around the world. The way it works is, let's say you want to start archiving videos. What you need to do is you need to submit a proposal using your Twitter ID.
00:10:40.872 - 00:11:19.228, Speaker A: And the reason should be a better reason than that one. And that generates a boat in our Dao. Just take just 1 second. I'll show in the meantime, this is the Aragon Dao. I built a little app that allows any Dao to curate their own list. And this Dao is using it to curate the list of approved Twitter accounts. So once you become an archiver, that's the transaction confirmed.
00:11:19.228 - 00:12:09.028, Speaker A: So you should be able to see there. So once you become an archiver, what you can do is you can come here and if you see a relevant video that you want to archive, you just need to mention or boat bot with Watchdogdao, my computer is acting up and just hashtag Archive, and the bot will do everything. It will archive it on both FalcoIn and IPFS. I'm currently using Flick storage for this. Once that's done, you'll get a notification, and if you go to the archive here sorry, that's the notification. Well, I got on my phone, it's not showing up on the screen. Yeah, there.
00:12:09.028 - 00:12:56.998, Speaker A: And if you go to the end of their archive, you should be able to see here there the archive video. So that's pretty much it. You can reach the site on both ENS and that crypto. And please feel free to propose an account as an archiver or yourself to join the Dao. Thanks to Filecoin and all the event organizers, as this has been really fun to build. Can you hear me? Awesome. Thanks, Laura.
00:12:56.998 - 00:13:55.520, Speaker A: Any questions from the judges? Yeah, I'll start. I think I might have missed it, but how do you get people to, I guess, store more, right. Is there incentivized mechanism there where you want to further get people to actually store some of this? Because I feel like if it's on Twitter, you put yourself at risk at archiving some of these things, and now the worst thing is to make yourself an enemy of the state because I'm trying to make sure I can hold the police accountable. I understand Twitter is just one of the sources. It's like the only one I did for this hackathon because there was no time. But I could do a simple bot for reddit, for example, or anything to store data, and then the archivers could use pseudonymous accounts. They don't need to use their main account.
00:13:55.520 - 00:14:32.442, Speaker A: And yeah, this is things that people are already doing. Like, people are already archiving things on Twitter. It's just that, for example, one of the videos I archived, two weeks after it was posted on Twitter, it was no longer there. So just in case we need this for long term, I have a question. Is there a way for people they can search through the archives? Because if you archive a bunch of stuff and then you want to come back, like, three years later, how would you find the files? I mean, I'm sure there is, I just didn't see the demo. Yeah, right now there isn't again, for a matter of time. But there will be.
00:14:32.442 - 00:15:01.646, Speaker A: Yeah, again. My country 40 years ago had a military coup and a bunch of people disappeared. And right now, the current democratic governments are looking for the evidence, and well, back then there was any, but we can't really expect Twitter to store everything for 40 years reliably. So this would be one of those use cases. I think it's a great idea. Which country, by the way? I'm just curious where you're from? Argentina. Oh, Argentina.
00:15:01.646 - 00:15:23.946, Speaker A: Okay, sorry. Yeah, cool. Yeah, just a couple of things more feedback than anything else. I think you present a very compelling use case. Certainly. I think the point about just because people are making because if there's an emphasis on trying to acquire and preserve this information today, that doesn't mean it'll stick around forever. We know that from history.
00:15:23.946 - 00:16:07.480, Speaker A: And so I think that's a very good point. I want to echo the idea about having some way to search and kind of filter archived information. I think that combined with adding more sources to this stream, not just Twitter right now, both of which I'm sure are already on your radar, are kind of probably our highest priority next steps to make this usable and impactful. But I think it's a great idea. I think it's a good example of taking something that's very clearly aligned with kind of the decentralized web and decentralized storage missions and making it happen effectively. So good job. Thanks.
00:16:07.480 - 00:16:39.122, Speaker A: I just want to say I really like what it is that you're building here. So my mind is kind of swimming with how this could work because I'm just imagining I think Twitter is actually fine. It's probably enough to get a lot of it because we see videos in the US right now about police. I don't know. I think it's a great idea and it's super straightforward, I think. Just got to get more people to use it. Another question I had is right now all the data is being stored on you.
00:16:39.122 - 00:17:36.910, Speaker A: I know obviously you didn't have time to do this, but what's your ideas long term for how to ensure that the data stays up? If Fleek wasn't there, for instance, have you thought through how maybe that would work? Yeah, the first thing I built was the police archive and use Flick, because I didn't know the tech that much. That's why. The second thing I built, which is the OpenGov data I use just like a Lotus node directly. And if I were to build this again, I'm going to do I think I really like the whole textile stack. I think that's really good. So maybe have a couple different oracles, like different institutions that hold the same data and just use the power gates and sort the things directly, not rely on Flick. And would there be a way for the users to actually pay? Because the way that I see it is like if I see something I want to store, am I paying for it? Is somebody else paying for it? How do you think it should be paid for? The initial way I thought about it is just kind of a nonprofit.
00:17:36.910 - 00:18:14.002, Speaker A: The good thing is that all this data shouldn't be that much data. Even if you store all the let's take the police case, all the police abuse cases in the world, that's probably all the videos in a year are going to be like 1 minute of the videos that get uploaded to YouTube. Thankfully, there are not that many videos probably, and storage is fairly cheap. Hopefully it will get cheaper with filecoin, so it shouldn't be that much money. So yeah, maybe at the beginning as a nonprofit and maybe afterwards the Dao doesn't need to always be a nonprofit. Maybe it could do some for profit things. Kind of dangerous there, but yeah, we had to see.
00:18:14.002 - 00:18:25.534, Speaker A: Great. Okay. Thank you so much. Washog dao. We're going to move on to the next presentation. Thanks again. Okay, up next we have Codigo Hub.
00:18:25.534 - 00:19:11.486, Speaker A: So I believe that you're all in the call now and you're already sharing your screen, so please start your presentation and then we'll move into Q A after that. Hi everyone. We are team Codigo and we build Codigo Hub, the IoT portal for firmware distribution, management and collaboration. We're a team of five people and we build it from scratch. The idea was conceptualized at the University of Edinburgh and we reshaped it into Codigo Hub, a shop window for users to manage their IoT devices while incentivizing developers to contribute firmware for the billions of IoT devices currently connected to the Internet. It's basically a secure firmware distribution service for the IoT. In Codigo Hub, users access firmware and incentivize developers to contribute, while a reputation system ensures trust between them and a validation system enforces policy rules.
00:19:11.486 - 00:19:52.506, Speaker A: But let me show you. Welcome to Hub my CMR with all my devices and their active status. Plus I see a summary of my activity on the Hub, such as number of downloads, uploads and Bounties claim I have a new device running on the background called Humidity sensor. So let's add that the Hub automatically picks up the active status of the device using MQTT and assume that my new device has a wireless module that I'm looking for firmware. I can search the repository and I find something relevant. I can check the source code, I can check the firmware details, and I can also check the community metrics such as number of likes, number of downloads, reviews. But I can also check the profile of the developer.
00:19:52.506 - 00:20:27.274, Speaker A: I see that the community tasks them, they have some contributions and number of likes, so I'm happy with them. I can either download the firmware on my PC, but I can also just directly send it to the device over the air. The firmware will be fetched from filecoin and pushed to the device over MQTT. That's nice. I'm happy with the firmware. So let's leave a like I can also leave a comment or I can donate to the developer. However, assume that I didn't find the firmware I was looking for.
00:20:27.274 - 00:20:55.014, Speaker A: I can create a bounty and set an amount of ether on it to draw the attention from the developer community on the Hub. The bounty will be registered with the bounty smart contract. The bounty has been registered and now I'm waiting for a developer to notice. Now I'm back as a developer and I want to make some money on the Hub. Let's check out this bounty. I can check out the description, the device, and I can see that it's open and for 0.1s. So let's check.
00:20:55.014 - 00:21:34.538, Speaker A: Still, it the bounty. Smart contract has validation rules that won't allow me to do that. So let's actually make a contribution. I upload both the binary and the source codes to make collaboration easier, to increase transparency, and to allow users to directly deploy firmware on their devices. The new firmware will be registered with the Smart contract for firmware repository and will also be kept on filecoin. My contribution has been registered, so now I can go take the bounty honestly. The bounty is for 0.1
00:21:34.538 - 00:22:17.802, Speaker A: F, so I should see my balance increase by 0.1. I have received the bounty and I can check my historical earnings on the platform by a duration or by a firmware. Finally, the Hub is all about building up your profile as a developer by making good quality contributions such that users will like and download your contributions and you will build up your community score. And finally, this way you will make more on the platform and your earnings will grow. Kodibo Hub is a react app deployed on Flick. We use three box user profiles ethereum, smart contracts for tracking bounties users and firmware and filecoin for our storage needs. Finally, we use MTT to communicate with the devices.
00:22:17.802 - 00:22:38.120, Speaker A: This is our tech stack. Finally, we would like to implement the graph and stable domains to visualize user history in the network and to link crypto domains with user profiles. Also, we'd like to develop stricter validation using different metrics. And Cheniac, a research project, validating the link between source code and binaries. Thank you for your time. Please check it out and give us any questions.
00:22:51.310 - 00:22:52.730, Speaker B: Let me stop sharing.
00:22:53.310 - 00:24:07.382, Speaker A: Nice quick question to start. What advantages are you getting from is the decentralized aspect of it, whether that's Ethereum or Blockchain primarily to provide a marketplace for the bounties and the usual single point of failure, the absence of the single point of failure advantage or is there more? I think that's mainly it, to be honest with you. Cool. Do you have any examples of some firmware that's been uploaded? We've made some example contributions for Arduino code for a wireless firmware, for a wireless module, for example. And we started this project on the hackathon, so all the contributions is what we've made. And then who do you think you would target to use this? So, like you said, Arduino, do you think it's people doing small at home toy devices? I'm curious. So there's a couple of people we'd hope to get quite well.
00:24:07.382 - 00:25:08.714, Speaker A: A number of different stakeholders ultimately would initially be people who are making toy devices at home, but manufacturers are something we're also interested in getting involved in the process because we're looking to have a distribution service that can work for a lot of devices. So we need that kind of scale and support from them as well. Also, not only single users, but for example, companies or people who have deployments of devices and they want to be running a global single firmware on all their devices. That would be a good use case for them because they could manage all their devices and also deploy make sure that they know what they deploy and deploy a single firmware to all their devices easily. Just a comment. One of the first things I thought was, man, it would be great to have a place where I'm storing all the versions of firmware because every now and then you're looking for something that's really old and you can't find. And so when I saw you guys presenting, I immediately thought that that's what this was for.
00:25:08.714 - 00:25:58.240, Speaker A: And I was like, oh. So I just thought I'd throw that out there because they update it and then my thing doesn't work and then I got to go find the older one so I could actually see that. Also, being able to archive the firmware for forever is also interesting. Yeah, kind of related to that. I'm just wondering what are your essentially future improvements and enhancements like? Obviously there's work to be done in terms of getting it out there to more people, both creating beam teeth and developing firmware. But do you consider the product itself to be essentially done or what more would you like to do on it? So, firmware verification is one of the big tasks that we're kind of looking to do next and to build that end of the system. So that's not currently being implemented at the moment, but we've got a few ideas of how to do that based on existing systems and the existing solutions that we'd look to incorporate into our tool to be able to handle that all.
00:25:58.240 - 00:26:51.760, Speaker A: Additionally, we would also like apart from software verification, to build stricter verification rules. For example, Bounties to make sure that they go to for a good purpose. A developer can just steal it by not committing nonsense firmware or something using firmware reputation metrics, user reputation metrics and stuff like that. Yeah. On that note, is the bounty currently confirmed by the creator of the bounty? Just saying, yes, this firmware is what I wanted. Or is there more? At the moment, it's confirmed only on the blockchain. So if there is a firmware registered for the device type being requested after the bounty has been registered, then that makes it eligible, but we would like to improve on that.
00:26:51.760 - 00:27:08.370, Speaker A: Awesome. Well, thank you so much Team Codigo, for your awesome presentation. We're going to move on to the next team who are now in the chat. This is Project Koio, so I'll please invite you to share your screen and start your video presentation.
00:27:12.550 - 00:27:59.170, Speaker C: Hello, my name is Yalda, and I'm going to talk about a new platform that started up in Hackfs called coyo. Coeyo is a decentralized network for the future of collaboration and ownership. It's the brainchild of myself and Hackathon partner Peter Phillips. Right now we have a software consultancy together called the Koio Collective. We've both worked in the Dao space for over two years and through our experience we have come up with a few goals that we are ultimately aiming to achieve in the long term. We need collaboration and governance tools that eventually take all dimensions of privacy into consideration and which are ultimately communityowned and governed. And within these tools we need to enable safe spaces for members of community so dissenting opinions are not penalized.
00:27:59.170 - 00:28:39.934, Speaker C: We decided that the goal of enabling safe spaces would be a good place to start. At Hackfs, one of the major features we have developed is the ability to create an organization with one person, one vote proposals where votes are anonymous. We use Semaphore for zero knowledge, anonymous voting, three box for profiles, messages and threads. IPFS for decentralized storage and Hedgehog as a client side ethereum wallet. So now I'm going to walk through a demo that was recorded on our local environment. We do have a version of the product live on Koeo Network, although we're still testing it and fine tuning it. Right now.
00:28:39.934 - 00:29:47.850, Speaker C: We are Chewy and Chewy is going to create a new thread so he populates the title and the message. And what this is doing is using three box threads in the backend to generate this discussion. And now what I'm going to do is switch over to another account, Cat. So Cat's going to add a reply to this thread that Chewy just created and then let's flip back to Chewy. Chewy sees Kat, clicks on Cat, sees Kat's profile and clicks the follow icon. And then whenever we flip back to Cat, kat gets a notification that says that Chewy has started following them. Now we're going to go back to being Chewy and Chewy's, adding Cat to a new organization.
00:29:47.850 - 00:30:45.910, Speaker C: And now he's going to generate a voting key that's going to prove that he's permitted to vote while keeping his identity hidden. Now that he's done that, he can create a proposal. This is going to create the voting object using the Semaphore contract. And now you see the active vote there. So we're going to flip back into Cat and Cat is going to vote yes. And after it's confirmed, we're going to see that the quorum changes from 50% to 100%. We have a lot more ideas that we're looking forward to incorporating into COEO and we will continue developing after Hackfest.
00:30:45.910 - 00:30:47.810, Speaker C: Thank you for your time and attention.
00:30:53.790 - 00:31:30.310, Speaker A: Great, thank you. Koio. Questions, comments from the judges and you can disable your video share now if you want. Quick question to start if you don't mind. What is semaphore? Can you tell me a bit more about it? I've never heard of it before, sorry, what is what for Semaphore? The voting platform that I think you a it's a protocol for I guess they call it a zero knowledge gadget. Peter, do you want to talk more about that? Yeah. So it's doing zero knowledge proofs on ethereum.
00:31:30.310 - 00:32:04.320, Speaker A: So basically you have all these identity commitments that get added to a merkel tree and then on the front end, you'll do a proof that proves that you're a member of the group without actually without showing what your identity is. You're able to show you're a member without revealing your identity when you vote. Got you. So you folks use that to essentially prove that you should be allowed to cast a ballot. Yeah, exactly.
00:32:06.290 - 00:32:06.558, Speaker D: Yeah.
00:32:06.564 - 00:32:56.142, Speaker A: And I think for the demo, maybe the whole story wasn't there for why you might want to have this anonymous voting. Because for this use case, you also had three box profiles and it was two people and they're creating this organization. But we think of it like you have a larger organization, maybe you have shared resources and someone within the organization, they are having a proposal to fund themselves. And you might not get people participate in votes because they don't want to hurt the other person's feeling by voting no. So with anonymous voting, you can vote no on, for example, funding proposals and you won't hurt people's feelings and people won't build up resentment that, oh, you voted no on my proposal. So whenever you create a proposal, I'm going to vote no for you. I'm part of, like, molokdow, so sometimes I think of this, I'm like, I feel like people aren't saying anything or voting because they don't want to hurt people's feelings.
00:32:56.142 - 00:33:54.500, Speaker A: So we were really excited to use an experiment with Semaphore. So this is super interesting. And I guess my question thrown back to you just in what you just said is, do you think this would help to encourage Malik Dao, I guess members or other DAOs to engage deeper and maybe not even just voting, but also trying to get more proposals? Don't really I think it will. Right now, summapord doesn't work for token weighted decision making. I believe that there are some enhancements that can be made to the protocol to enable that, but I feel like it would really help a lot and it opens up different use cases. If you want to build a city and you want people want to vote on policy decisions just so you can have your privacy on votes in general. So I think that there are a lot of different use cases, but I think this would be a really good one for Dows in general, too.
00:33:54.500 - 00:34:19.900, Speaker A: Thank you. Yeah, I guess I'll just broadly say I like the idea. I think there's lots of scope there and I think you guys have some cool directions to go in. Also, on a much less important note, I really like your aesthetic. I like the colors in the video. I like your logo a lot. It's all a good look.
00:34:19.900 - 00:34:22.222, Speaker A: Thank you.
00:34:22.276 - 00:34:24.650, Speaker D: Yeah, I'm feeling this cool 80s vibe.
00:34:24.730 - 00:34:44.850, Speaker A: Yeah, definitely. Nice. Good job. Thanks. Okay, if there's no other questions from the judges, I think we'll move on to the next project. Thank you, Team Koyo. It was a great presentation.
00:34:45.590 - 00:34:46.578, Speaker C: Thank you.
00:34:46.744 - 00:34:56.100, Speaker A: Okay, so the next project to come up is Team Certi. I'm going to play the video just to avoid any technical issues here. So let me just queue that up.
00:35:13.870 - 00:35:25.914, Speaker E: Hi, I'm Sunny Radhara. Our team name is Team Suti and we are building sky storage on filecoin. Next, we are of two people, Rajat and Sunny. One is frontend and one is backend engineer.
00:35:25.962 - 00:35:26.560, Speaker A: Next.
00:35:27.810 - 00:36:02.358, Speaker E: So we are making video player theme in which we are using textile power gate to interact with Filecon and IPFS. And we are using ETH plus IPFS concept to save the video file details in the atrium. And we are using Flick for host the IPFS website. Okay, so next, initially you need to register, and then you can add File and then you can access file. Next, we will see the demo. So this is our demo sky story here. New user needs to register.
00:36:02.358 - 00:36:45.180, Speaker E: Click here to register. During the registration, Falcon power gate will generate the token and Falcon address for the MetaMask address. Once it is registered, you can see the Falcon address and MetaMask address all the details in the right side sorry for the lag. Yeah, successfully registered. You can see in the right side MetaMask address, Falcon address and balance. Okay, now we will add the add file. Currently there is no any video user can change the storage config of the video file like Hot storage or Cold storage where you user want to store.
00:36:45.180 - 00:36:53.370, Speaker E: If you enable the file coin, then enable will be True and for filecoin. Okay, now we will add the file.
00:36:56.210 - 00:36:56.960, Speaker A: Okay.
00:36:57.810 - 00:37:36.918, Speaker E: Yeah. So we are using small amp for video name. Okay. And once it is Mac storage deal, after uploading the video and file coin, the MetaMask transaction happen for saving the video details in the Ethereum smart contract. Okay, so we are using ETH plus IPFS concept. Once it is upload, you can see over here video and below the video you can see IPFS and Falcon at both storage. This video is stored.
00:37:36.918 - 00:38:06.962, Speaker E: Okay. So you can play this video over here. So we are giving video functionality also here. Okay, now I have another account also where I have already uploaded video in IPFS and Falcon in account eight. I'll show you. Okay, let me refresh it once it is refreshed. I have already uploaded some videos, like three to four videos in IPF and filecoin already.
00:38:06.962 - 00:38:23.254, Speaker E: Yeah, you can see. So this was our project. And this project we have hosted in Flick hosting service. So we are using Flick also. After demo time, we will go to the next slide. Sorry. Yeah.
00:38:23.254 - 00:39:05.080, Speaker E: So how it's meant we are using slide host and the textile power gate to interact with filecoin and IPFS. And user can also change the storage config for video file before the upload. And we are using Ethereum Smart Contact to save the details and click Co for hosting the website and next JS and Material URL UI for building the UI. Okay, next. In future, we want to make encryption in video player so we can securely share this video. And we are also taking part in Apollo, so we will also do more hacking that event. Next.
00:39:05.080 - 00:39:21.610, Speaker E: So this is the Flick hosting domain. So here you can see our web website. Also, thank you very much. And if you have any question, we love to hear. Okay, thank you. Bye bye.
00:39:25.230 - 00:39:45.460, Speaker A: Great. Thank you, team Serty. So I'll turn it over to judges for any questions. Okay, I have a question. Who's the user? Are you trying to get YouTube people to publish their videos on IPFS or what do you think is the use case for this?
00:39:46.630 - 00:40:19.600, Speaker E: Yeah, so currently we want to make video player, so we want to make encryption video player where user can securely share the video. Only video can play by the user who have uploaded it needs to add the password, and once the password is done, so it will decrypt it and they can see their video.
00:40:21.490 - 00:40:27.120, Speaker A: So you're imagining kind of like substac for video on the decentralized web. Do you know what substac is?
00:40:28.450 - 00:40:31.026, Speaker E: No. Substac, I didn't know.
00:40:31.128 - 00:40:44.520, Speaker A: Okay. Yeah. As a content producer, would I upload a video on here and then I could maybe sell it to people so they could have access to that video and then they would need to get a token in order to see it. I'm just trying to understand the use.
00:40:45.290 - 00:41:10.350, Speaker E: Yeah, so, yeah, we want to make like this. Also we can store our private video or any video which we want to store in the Falcon or IPFS as an encryption model. And also we can share the video which we want to share encrypted our favorite.
00:41:12.210 - 00:41:20.020, Speaker A: Okay, and then I'm going to steal this question. What are some of the next things you would want to build? Like, what are the other features you think are missing that you'd want to build for the product?
00:41:21.990 - 00:41:45.740, Speaker E: Next thing currently is we want to move this power gate to textile buckets using buckets. And I think Flick space demand is also providing authentication encryption. So we want to move on to that using Apollo event.
00:41:48.030 - 00:42:03.390, Speaker A: Okay, thanks. One question. Are there other similar things that already exist today? Did you explore the space for, I guess, IPFS hosted video players before you started on this project? I'm just wondering.
00:42:07.030 - 00:42:31.660, Speaker E: Maybe some existing project, but we didn't see encryption like that. So we have explored the sheet of the hacker phase, like 100 idea sheet in which that we get this problem statement. So we started to developing on this.
00:42:44.440 - 00:43:20.130, Speaker A: Okay, if there's no further questions, we'll move on to the next team. Thank you, Team Siri for the great presentation. And we'll call it the next team, which is decentral. I'm going to play your video for you as requested. So let me just queue that up and we'll get started. Hi, we're Team Decentral and we're building an unstoppable shopping destination. This is our team.
00:43:20.130 - 00:44:03.570, Speaker A: We are solving the problem that current digital real estate holders are facing, which is that their current real estate is hard to monetize and it's hard for them to build on top of it or rent it and operate the space. So we're making it easy for them to rent and operate it. We're building on top of textile. IPFS Fleek and others. We want you to own part of decentralized web, make it easy for you to buy and sell the space. We also want you to take ownership by governing the mall, uploading your curated product catalog and incentivize shoppers to keep shopping. We'll jump right into the demo.
00:44:03.570 - 00:44:30.632, Speaker A: So this is the mall. Then we click on anything and we go. Here we will have your own space showing up on the landing page. If you go to your profile, this is a space that you have bought. It's available for rent. So you can just rent space. You can rent it out yourself or you can rent it out to others.
00:44:30.632 - 00:45:13.940, Speaker A: Here we're going to add a new clothing store. And just like that, you can add a new storefront and link it back to your online shop. Here we can see that the space is rented and links back to your store. You can also search for different stores or categories. So you search for Nike. Choose Nike and you search for that. These things are clickable.
00:45:13.940 - 00:46:00.150, Speaker A: It's also really easy to buy the prices determined by the bonnet curve. And here you have bought your own store today's. ENS name. Awesome. Thanks to Central Mole, I'll turn over the judges to ask any questions. Great music. Obviously, that presentation had the most pep of anything we've seen so far.
00:46:00.150 - 00:47:06.490, Speaker A: I am worried that I maybe didn't get it, though. What is, I guess, the decentral part of decentral mall and why? All right, I'll take this one. So a lot of people got really excited about buying digital real estate and then only to find out how difficult it is to build it. You have to hire an external agency to build like a 3D space and just to be able to display your digital art or maybe try to sell your physical products like socks or T shirts or shoes. And I come from Ecommerce as well, and I'd like to be able to display my products in a decentralized fashion, basically on an unstoppable place, and just be able to really build it. As easy as using WooCommerce on WordPress or something like that. If I can also own the marketplace by having some say in the governance of the mall itself, then so much better.
00:47:06.490 - 00:48:00.776, Speaker A: I find that last bit persuasive. I guess my concern would be, obviously you have more of a background than I do, but I guess I worry that Ecommerce already has challenges with people wanting to go to actual stores, and they're like, do I want to do this online at all? Jumping from that to getting them onto the still fledgling DWeb might be a challenge that limits you. I think Corona kind of fixed that a little bit. Not a lot of people want to go to stores anymore, so a lot of people shopping online. But I think also a bigger issue is, like, if I want to put my products on a marketplace, I have no say what's on the front page of that marketplace. It's up to them to decide what they're going to put on. Whereas if you own the mall, you could kind of decide if the mall gets a lot of traffic, you could kind of make those calls.
00:48:00.776 - 00:48:38.432, Speaker A: Right? Like, who gets on the front page or how it's all distributed and how to kind of traffic flows through them all. So I'm a fan. I'm curious about how the governance works. This reminds me of the million dollar home page, and then it's like, cross the million dollar home page plus decentral land. Like, if I was going to pick kind of how you're doing it here, I do like the idea that I could buy my way to the front page, but I'm interested about governance. So who's the mall owner? Who's the person who's going to make sure that traffic comes to the site? Because I understand the way I get it is people like buying spots on the home page to advertise their good. Right.
00:48:38.432 - 00:49:17.728, Speaker A: And so they can just do that directly on the smart contract who's incentivized to make sure that people get to that page. I'm curious about the governance aspect. Sure. I think just like any, whenever you buy a house in a compound, or if you buy space on a retail street, there should be some community kind of setting and making those decisions and wanting to hire an external agency to do the advertising or so forth. I mean, ideally, anybody who's getting space is to actually do some retail work. Right. So you'd want to do part of the promotion yourself to kind of advertise your space on the mall.
00:49:17.728 - 00:49:54.480, Speaker A: But as a mall itself, I think the governance we're still early stages. It's just a fun experiment. We had tons of fun working on it. And I think the idea would be everybody to be able to call the shot and say, okay, well, we need to hire this particular SEO guy or this particular advertising person to help us get more traffic. That would be the end phase, is like, everybody has control over those. Just a comment. It feels like the thing that you're actually experimenting here with is like, governance for online stores and I think that's interesting.
00:49:54.480 - 00:50:41.676, Speaker A: Obviously there's a lot more to do it, but I think it was a great job for the hackathon. Thank you for giving me something to think on. Any other questions from the judges or even questions from the hackers to the judges about what to do next for the project? I would say you need to put this up on crypto. So please reach out to someone on the Unstoppable team so we get you decentralmall crypto so we can have this up here so we can show it off to our community. Awesome. Thanks. Bernard, do you have any questions for the judges at all? Nothing that I can think of.
00:50:41.676 - 00:51:02.908, Speaker A: I wasn't expecting that. Well, thank you for your work. Yeah, we'll consider about the crypto, actually, because we are using Flick for now. Thanks, guys. Great. Okay, thanks so much, team decentral. So we're going to bring up the next team that is himsheet.
00:51:02.908 - 00:51:07.700, Speaker A: So, Himsheet, I'll invite you to turn on your video, share your screen and begin your presentation.
00:51:26.940 - 00:51:44.686, Speaker F: Let's start by creating a songbook. I'll call this one Hymns. Now I'm going to add some songs and I'll just paste the text in.
00:51:44.708 - 00:51:45.280, Speaker A: Here.
00:51:48.040 - 00:52:16.966, Speaker F: And then let's add a lot more songs. These songs are stored in an IndexDB. This makes it really easy for us to do a full text search. Next, I'm going to share this songbook with the device I'm going to use as the controller when we go out to worship. And yes, that QR code was an IPFS hash. Next I'm going to create a channel. And a channel is a group of people who see the same content at the same time.
00:52:16.966 - 00:52:54.420, Speaker F: And you've guessed it, this is IPFS PubSub. And I want to share this channel with the people I'm hoping will come and worship with me. So this time I'm going to use the URL. I'm going to copy and paste it into an email and send it out to some friends and say, let's go up and worship on Colton Hill. There may be some bystanders who want to join in, so I'm going to print out a poster as well. And once they scan this, it'll drop them straight into the lyrics. So the idea of hymnsheet is that one phone or a handful of phones can control what a larger number of phones see on their screen, full screen.
00:52:54.420 - 00:53:32.970, Speaker F: So this is me grabbing every device I can find and trying to get them to display the same lyrics at the same time. The laptop in the middle is controlling what the other screens see. But it's not just laptops and phones that have browsers. You're starting to find browsers embedded in TVs and also in smart projectors. And so this is a cheap battery powered projector and it's got Android inside of it, and that means it's got Chrome, and so it means I can use hymnsheet with that. What makes this especially interesting is that I can run this from a WiFi hotspot in my phone. And so this means I can take this whole setup out on the street for him singing in the winter when it's dark in the evenings.
00:53:32.970 - 00:54:45.440, Speaker F: This is me just leaving, going up to Carlton Hill. Ready? Okay, cool. So hymn sheet allows an unlimited number of groups to meet together and these groups should be able to be really large and it does so at zero cost. And this zero cost thing is really important because the last thing you want to be doing is turning this into a business. Jesus, he went into the temple courts and he saw that worship had become an industry there, that people were selling animals for sacrifices and they're charging more than these things costed. And so he got together a whip made of cords and he drove those people out. I don't want to be whipped by Jesus.
00:54:45.440 - 00:55:19.100, Speaker F: Why do I think this app is interesting? Well, there's many things now that are preventing Christians from meeting together to worship indoors. Firstly, there's COVID. Another reason is that we're starting to see council culture in the UK and this is when large Christian gatherings are planned. There are Twitter campaigns against them and we're no longer able to meet to worship in large public venues. And in some countries, churches are being demolished by authorities. Now, this is something which has happened in the past and it's always brought Christians out into the open spaces.
00:55:23.280 - 00:55:39.184, Speaker A: Great. Thank you, Himsheet. Turn over the judges for any questions. That's fantastic. I absolutely love that idea. It's extraordinarily creative. I think you make a very compelling case for how it could be used.
00:55:39.184 - 00:56:36.268, Speaker A: I love the idea that slash the DWeb can be the internet equivalent of Jesus cleansing the temple and I love that you used How Great Thou Art. All I wish is that I was around Carlton Hill that day because all I want is to sing that song in public with people. Huge plus for creativity, great presentation and obviously I think you have a specific use case in mind, but the general idea, I think, can be applied very broadly. I'm sure the rough idea of people needing to view the same information for some kind of group activity applies to various scenes, but certainly this is probably going to be more effective than the usual. And now we'll all open this worship book and turn to this page and you're flipping through this gets the job done very well, I think. Very creative and I like the idea a lot. Great job.
00:56:36.268 - 00:56:51.436, Speaker A: Thanks. I thought that was really fun. That was super cool. Quick question, maybe I missed this. Is there any ethereum in there?
00:56:51.618 - 00:57:14.960, Speaker F: No, there's not at the moment. The one place that I might put it in is as a URL shortener, because we're using long hash IPFS hashes in lots of places. And so actually having a URL shortener would be really nice to make it easier to share on Twitter and things like that, because we're piggybacking on current social media, which we kind of need for adoption.
00:57:16.660 - 00:57:20.070, Speaker A: Awesome. Is there a QR code right behind you?
00:57:21.000 - 00:57:42.650, Speaker F: Yeah, there's one on the wall. And something I didn't mention in the video is that there's also a Social Share button. So if I click that on here, it brings up Share on Twitter. Share on WhatsApp? Share on Facebook. So it's using some kind of nice new Web APIs. There's also a full screen, a wakelock API, which allows you to keep the screen open, which is quite nice, too.
00:57:43.100 - 00:57:51.772, Speaker A: Cool. Awesome. A couple more questions. How'd you come up with the idea? And also, how did you do all of that in two weeks? Because that's a lot of work.
00:57:51.826 - 00:58:24.920, Speaker F: So there's a disclaimer at the bottom of the video. So if you click on the video, you'll see that I created the slide viewer, the song viewer, about six years ago. It's an NPM module and so that I just dragged into the project. And I just say, read the disclaimer in the video, it tells you exactly what I have done. But I have done a lot in this time. I built the entire UI component from scratch and all this kind of stuff. So I was doing it with Svelte, which is a new kind of UI framework.
00:58:32.490 - 00:58:49.046, Speaker A: Great. Okay, if there's no other questions, then we're actually going to take a five minute break now to make sure the judges have a minute to write down their thoughts about all the teams they've seen so far. Use the washroom if they need to. So. Thank you. Team. Hymn sheet.
00:58:49.046 - 01:05:22.352, Speaker A: We'll start a five minute break now, and then the next team after that is going to be Unchained Index. So, Unchained Index, just let me stay on the line and we'll get back to you in a few minutes. So we'll continue our programming after that. Thanks. Okay, and we are going to get started as soon as all the judges are back and the team's ready. Okay, unchained Index, I believe we've got you on, so please go ahead and start your video. Oh, sorry.
01:05:22.352 - 01:05:53.388, Speaker A: Ken, are you back? Just want to make sure before we get started. Yeah, sorry. I thought I put my camera back on, but I'm here. No problem. Okay, unchained Index, please take it away. We're going to talk about our project, the Unchained Index, a Web three native API. My name is Jay Rush, and I'm going to introduce my partner, Miriam Zandy, who's going to walk us through the demo.
01:05:53.554 - 01:06:21.600, Speaker G: Thanks, Jay. Prior to the hack, we had an application called Trueblocks that ran as a local first desktop only application. We call it a user centric account. Explorer. Trueblocks is 100% private and decentralized, but until now, it requires the end user to run infrastructure locally. Trueblocks builds an index of appearances of addresses as it scrapes each appearing block. Periodically it creates a snapshot of the index, which we call a chunk, and an associated bloom filter which is an order of magnitude smaller than the chunk.
01:06:21.600 - 01:06:51.100, Speaker G: The API scans the index and informs the UI of which transaction details to give to the user web Two. Of course, the infrastructure is on a server leaving the user interface in a browser. Server applications are not private, are not censorship resistant, they are not decentralized, and they are not trustless. They are not web. Three Native. And the problem is this query right here. For our submission, we wanted to see if IPFS could help Trueblocks retain the benefits of Web Three without requiring the user to run infrastructure.
01:06:51.100 - 01:07:23.832, Speaker G: We left the API on the user's machine and moved the indexer and the scraper to a server. We added three new pieces of software a publisher, a consumer and a smart contract called the unchained index. Now, each time a chunk is created, the publisher pins it to IPFS and then redundantly pins it to pinata. With each pinning, the publisher updates the manifest. A hash of that manifest is then posted to the smart contract. The manifest contains IPFS hashes pointing to each pinned item. In addition, it includes pointers to documents describing the data.
01:07:23.832 - 01:08:04.660, Speaker G: Finally, it points to a git commit of the source code that created the index. This allows users to verify the data if they choose, making the data as trustless as possible. Note that the publishing process does not deliver data directly to users. As a result, as the number of users increases, the cost of publishing does not increase. On the user side, each time the user queries, the consumer reads the manifest from the smart contract and downloads any new bloom filters which are used to determine if any chunks need to be downloaded. The process then retrieves those relevant chunks from IPFS. A notable aspect of this pattern is that the API and therefore all queries remain entirely on the user's machine, making the application completely private.
01:08:04.660 - 01:08:25.740, Speaker G: Another nice piece is that each user carries their own weight. Small users pin a small amount of the index, perhaps as small as tens of megabytes, whereas larger and larger users pin a larger portion. And popular contracts like Uniswap or Compound, which appear in nearly every block, would pin nearly every chunk. To us, this seems fair. So now for a short demo.
01:08:25.890 - 01:08:55.136, Speaker A: This is the publisher running on the server machine and actively scraping Ethereum mainnet building the indexes. Here in red it says it pinned the index chunk for this IPFS hash. And here it pinned the bloom for a different IPFS hash. And finally it pins the manifest and posts it to the smart contract address. I'm going to switch now over to the user side of the equation. This is the trueblocks account Explorer desktop application. In this window we're showing the index chunks, of which there are none.
01:08:55.136 - 01:09:22.716, Speaker A: But there will be soon. Here we're running the API, which the UI connects with. I'm going to double click here. And the API has gone out and starting to download chunks of the index from IPFS. You can see it starts to fill in here. Now it's starting to download some chunks. And as soon as the chunks are downloaded, it will hit the Ethereum node to bring the transaction records into this application.
01:09:22.716 - 01:09:24.960, Speaker A: And here's all the transaction records.
01:09:25.700 - 01:09:46.500, Speaker G: In summary, the unchained index is a naturally started, incrementally, indeterministically produced index of every appearance of every address on the Ethereum main net. It preserves user privacy and is reproducible, unlike traditional old fashioned Web 20 APIs and Blockchain Explorers. Let's do this. Let's build web. Three native APIs.
01:09:51.020 - 01:10:14.824, Speaker A: Awesome. Thank you, unchained index. We'll turn it over to judges for any questions. Sure, I'll take a stab. First of all, isn't this still going to be pretty slow? I'm just curious about what the speed is for doing any lookup against this. And then at the end you say, what is a Web Three? We need to have web. Three native APIs.
01:10:14.824 - 01:11:22.230, Speaker A: Can you just expand on that, maybe just from a high level theoretical perspective, why I should care? So is it slow? And then what do you mean by Web three native API? Sure. First of all, it's surprisingly fast, but I think that has to do with Pinata being in the mix. And we also use the IPFS gateway. So there is a sort of Web Two aspect to that part. Eventually we hope that as the data gets distributed, IPFS would be more likely to find a copy of the data that it's looking for on other users machines. So we pin those chunks that are downloaded to each individual user on the end user's machine as a default. So in the hopes that the index gets broadly distributed, making it more and more likely to be found by IPFS, just straight up without the aid of Pinata, because we want to encourage that distribution to happen naturally, we want that distribution to happen without the user actually having to do anything.
01:11:22.230 - 01:12:25.208, Speaker A: Was that both questions? Sorry. Yeah. So Web Three native API, it would only really work for append only type databases then, right? Because if you updated it, then obviously everyone's, if they're storing it locally, there's no way to really update that. I'm just kind of curious, what do you think the use case is for Web Three native API? So that's why we mentioned deterministic and incrementally produced, because once we create a chunk, then that chunk gets a frozen solid IPFS content addressable hash, and we can publish that once to a smart contract as part of the manifest. And then that piece of information is available to every one of our users applications or anyone's users applications forever. So that you never have to republish where this data is. So there does have to be someone pinning this data.
01:12:25.208 - 01:13:22.876, Speaker A: And I think that the community should purposefully decide to be the people that pin this data, which includes a large user base. And there does have to be kind of a backup organization that pins this data. But once it's pinned and once it's available, it's available forever in the same location. And I hope that people recognize that we can choose as a community to do this on purpose. What would be like a first use case? It's okay if it's contrived. I'm just like what type of community do you think maybe this would benefit? I think it benefits almost all the communities in Web Three, because the way the thing's shaking out now is we're basically building a system that has gatekeepers around it. Web Two companies basically who are trying to sell access to this data, sell access to not only the node data, but also an index to the node data.
01:13:22.876 - 01:13:55.364, Speaker A: And I think that if these gatekeepers are successful in monetizing the data or the indexes to the data, that we're going to end up in exactly the same place we are now with Gatekeepers. And I want to make this data. I always felt that this data had to be completely permissionless or it will get captured eventually, and that's not a good outcome. Quick comment on a quick question. I think we're at time we can do one question and then we'll move on. Sounds good. Yeah.
01:13:55.364 - 01:14:09.604, Speaker A: Quick comment. I think I like it. In general, I like being sort of like doing this handshake between executable code and decentralized storage. And I think this is nice for that reason. Quick question. What happens in true block. Completely independent of pack FS.
01:14:09.604 - 01:15:06.140, Speaker A: I guess when there's a chain reorg yeah, we stay away from the front of the chain by six minutes and then because we're creating these chunks, we wait until there's 500,000 records in the chunk so that the chunks are about two and a half, 3 hours behind the chain and we think six minutes. So there's a distance between the chunk and the front of the chain. So we reconsider the front of the chain until it gets six minutes old and then we stop reconsidering the front of the chain, but we don't produce the chunk until about two and a half hours. Okay, so only a reorg that touches over two and a half hours of history would mess things up. Seems kind of unlikely. The end users, that's just the nature of a blockchain and there's really kind of nothing you can do about that other than just inform the end users of that. Yeah, that's the unsolvable problem.
01:15:06.140 - 01:15:17.376, Speaker A: Sounds good? Yes. Great. Okay. Thank you so much. Unchained index. We're going to call up the next team, bring in their presentation. So that is finphile, I think.
01:15:17.376 - 01:16:03.558, Speaker A: John, we've got you on already, so if you want to share your presentation, we can get started. John, we don't hear your video. If there is supposed to be. Audio. I think maybe you haven't clicked the Share Audio button. You'll have to stop sharing, and then you'll just click the Share screen video again, and then make sure to click the dialog option in the lower left. Happens all the time.
01:16:03.558 - 01:16:10.380, Speaker A: Don't worry about it. There we go. Got it.
01:16:13.710 - 01:16:55.150, Speaker B: Hi, everyone. Welcome to the demo of our hack FS app finfile. Finfile is a Python Flask app that allows the user to input a stock or top 100 crypto symbol, and the app will generate a five year weekly chart and an Excel file with the same price data. Users can send this data to Filecoin via Textile IO's Hub, where they can retrieve the data using a URL generated by the Hub. Let's take a look at the app in action. Let's generate a chart of AMD Advanced Micro Devices. The app generates a chart.
01:16:55.150 - 01:17:33.370, Speaker B: We can now download a PNG image of the chart, as well as an Excel file with the same price data. Let's push these files to Filecoin. First, we need to initiate a Hub bucket. Call it demo. We do not want to encrypt.
01:17:37.310 - 01:17:37.674, Speaker A: And.
01:17:37.712 - 01:18:33.090, Speaker B: It generates three URLs. We're only concerned about the second one. Let's push our data to Filecoin. Now we want to generate those bucket links. We're only concerned about the second link. And there we go. Our two files are now on IPFS under that bucket ID.
01:18:33.090 - 01:19:19.530, Speaker B: Let's inspect one of the files. Awesome. Our chart of Advanced Micro Devices is now on filecoin. Let's take a look at what we have planned for the future. Users can use a chart layover if they want to compare two similar assets. In the example, we have Ethereum and Bitcoin and the price action over the last five years. Let's take a look at the flow of files in the Fin file ecosystem.
01:19:19.530 - 01:20:03.660, Speaker B: Users can push data via the Hub bucket, or external contributors can push data to our financial data store. Users pay Filecoin to Finfile or external contributors whenever they access their data. Next steps we need to hook up a gRPC client to automate File, transfer to Filecoin, add new APIs for more granular data and metrics, and consider ways to integrate content from other contributors. We need to improve the UI aesthetics and functionality. Thanks for watching. You can find our repo at the link below.
01:20:07.310 - 01:20:27.100, Speaker A: Great. Thank you, Finfile. I'll turn over the judges for questions. I'll jump in with a question. What benefits does this provide over kind of some of these services that are already out there, like Finviz or whatnot.
01:20:27.680 - 01:21:16.350, Speaker B: Okay, after speaking to an interested party, if you think about the traditional finance industry, they have things like Bloomberg Machine, Wall Street Journal Feed, so they can get that information pretty readily. Now, I would focus it on cryptocurrencies and offer other types of data that they can't get from someplace like CoinMarketCap or cryptocompair, such thing as hash volume. How many apps are on the network? Very specific information that could probably only be found with our app on our site.
01:21:18.800 - 01:21:25.200, Speaker A: Interesting. Why store it on file corner IPFS?
01:21:29.300 - 01:22:07.820, Speaker B: Typically, from my experience in the securities industry, when you're looking for historical data, say, data that's 1015 years old, very granular data, for example, for technical or fundamental analysis, it's very difficult to find it. And especially if you would consider with cryptocurrencies, there may be some data that's very specific that could really not be found anywhere else. And it would be nice to create a repository where institutional investors or individual investors who do their own homework could access our files on filecoin.
01:22:08.320 - 01:22:13.164, Speaker A: Okay, thanks. That makes sense that's a recurring theme is storing data for a very long time. That makes sense.
01:22:13.282 - 01:22:13.950, Speaker B: Yeah.
01:22:21.090 - 01:23:13.570, Speaker A: Is there any thought about so maybe this is a little further out, or maybe crazy? Is there a thought behind kind of because there's longitudinal data and with incentive structure, you can actually start to think more about reputation score of technical analysis, maybe. I think a lot of traders trade on ta. And so if you have that, you can start to build a perpetation over kind of how all that works over time. Who's more successful? Kind of all the sometimes it just looks like randomly drawing lines everywhere. Maybe someone's a better line drawer than someone else. And then maybe having prediction markets over who they think is the most successful at doing ta. That might be cool.
01:23:13.570 - 01:23:16.340, Speaker A: Is this something you thought about or something you're interested in?
01:23:17.270 - 01:23:29.000, Speaker B: I'm very interested in that. I haven't thought about that because I completely agree with you. Anybody can draw lines and make them look like, hey, wow, that looks cool. It makes sense.
01:23:30.410 - 01:23:31.270, Speaker A: All right.
01:23:31.420 - 01:23:54.110, Speaker B: But it means absolutely nothing. So to have, like, a reputation score and to score the data that was filed, like, all right, this one has a 95 percentile success rate compared to the other one who does pretty lines, and maybe their success rate is only 45%. That would really be great because it would differentiate the quality of the data being stored.
01:23:56.050 - 01:24:35.914, Speaker A: I'm sorry, go ahead. No, please. I was just going to say it would be interesting to have that also thrown on a prediction market, because if you stake on someone else's Ta, and you actually think, I fully believe that this is going to work, that unlocks capital for the person. And I think at some levels, there's some confirmation bias there. So if everyone's following the same trends, it sort of moves the market a little bit. And maybe this is going into some weird territory, but there might be something there with prediction markets and actually staking with the person who's ta you agree with and you draw the same lines with, and you kind of all pull your money together to throw into AMD on, I don't know, maybe like a two week call on AMD. Right?
01:24:36.032 - 01:24:42.638, Speaker B: Wow, very interesting. Hadn't thought about that. That just creates another aspect to it.
01:24:42.724 - 01:24:49.700, Speaker A: John, I had one more for you, which is what things had you thought about? Did you want to add to this project if you were going to keep working on it?
01:24:50.310 - 01:25:17.482, Speaker B: Okay. The data feed that I'm using is Yahoo Finance because it's a Python Flask app and it kind of was a good fit. But I think that to make the quality of the feed better, I was thinking of introducing chain Link Oracles and getting feeds from different chain link adapters. There's some really cool stuff out there.
01:25:17.616 - 01:25:31.680, Speaker A: And then another one. Is there a way for other people upload their own data files so that maybe there's a way to socially share, or is it just like you just want to pull it and then I'm curious if there's a social component like I can add to the data set or not.
01:25:32.370 - 01:25:44.050, Speaker B: Well, I'm trying to make kind of like an ecosystem where people absolutely could add to it and then ensuring that it is truly decentralized.
01:25:45.350 - 01:26:02.006, Speaker A: Cool. Okay, we're out of time. Joe, one thing I think of is you should check out a project called Numeroi. I'll send you the link in Chat, but it kind of has some of the ideas you were just chatting about here and you might just find it interesting. Okay, awesome. Thank you so much. Yeah, thank you so much.
01:26:02.006 - 01:26:30.938, Speaker A: So thank you. Finfile. We're going to call up the next team that is a Mobility marketplace. I believe you're on the call already, so please go ahead, share your video, and we'll get started. Hello, friends. This is Dark Horse Mobility Marketplace. What's the idea? To provide a decentralized platform that connects data creators, in this case mobility users, with data consumers advertisers.
01:26:30.938 - 01:27:12.446, Speaker A: Why? It's about time. We compensate people for the data that they create and the ads that they see. This project kind of draws inspiration from products such as Brave Browser. It compensates users for seeing ads, and the Ocean Protocol, which is a general purpose data sharing protocol built on Ethereum. We have three kinds of user groups here micromobility users, which are the data creators, and the data consumers, which are data scientists and ad agencies. And some of the tech we have here is IPFS, Ethereum fleek, hosting, storage, textile, threaddb, lib, p to P, MetaMask, infura, and ENS integration. As a micromobility user, I'll be interacting with the React native app.
01:27:12.446 - 01:28:15.982, Speaker A: The React native app supplies the data that makes the marketplace tick. So basically, we'll be delivering the data that will be able to purchase by the advertisers and that will be posted to threaddb, as well as interacting with the Smart contract and opting into the data Rewards program. In return for receiving ads, the user can earn and later withdraw Ethereum Rewards. We'll begin with the React Native app, where users will push their profile to threaddb as well as initialize themselves for the rewards program. Each user will simulate a trip here and each user will be able to push their own collection for advertisers to purchase the rights to that data. And once the trip is completed, it will be served an ad through Ethereum smart contracts and IPFS, which will serve them a reward, which they can then claim. So here an advertiser can view the data sets that are available for purchase.
01:28:15.982 - 01:28:36.534, Speaker A: So, for example, here we have a data set from Milan. And in particular, we have one for the year 2020. Month is the 7th and then the day is the 10th. So here I can view some more metadata on that particular data set. And if I'm interested, I can purchase it. This will bring up the MetaMask transaction. I'm going to confirm it.
01:28:36.534 - 01:29:06.820, Speaker A: Okay, the transaction was successful. I'm going to go over here to the data sets view where I can see the actual data sets that I've purchased, and then I can actually download them to my machine. So another thing an advertiser can do is create a campaign. And these campaigns are served to users once they finish trips. So here I'm going to go through the process of creating one, going to give it to the organization UFC. I'm going to say it's going to be UFC 255. And I have a budget of 0.5.
01:29:06.820 - 01:29:33.786, Speaker A: This just pulls from the active users we have in the rewards program. It's read from ethereum. And here is just a regular algorithm that we have for detecting how many users we can reach. Here we're just going to set the asset. This is stored in IPFS and the hash is stored in the Ethereum smart contract. And a little note here is that any unspent Ethereum from the campaign will be refunded when the campaign expires. We will also speed this part of the video up.
01:29:33.786 - 01:29:55.646, Speaker A: Great. So the transaction went through and now if I go to campaigns, I'll be able to see my active campaign. Here's the asset. Here's the details, the budget when it expires, which is 15 days from now, and how many impressions we had on the ad. Another feature that we have is the feed where we can see all the activity. For example, we can see all the campaigns that have been added. And here is our most recent campaign.
01:29:55.646 - 01:30:18.790, Speaker A: We can see when a user received rewards. And here, for example, we see the campaign that the user saw in the React native app. Thank you. It was Dark Horse. Great. Thanks, guys. We'll turn it over to the judges for any questions.
01:30:18.790 - 01:31:10.862, Speaker A: Not a question, but no cool idea. Overall, I think it was well executed. I'm impressed that you got Charles Barkley as a user of what are your immediate next steps? Where do you want to take this? Definitely want to introduce some kind of encryption layer. So as of now, we need to have more privacy data stored on fleek. There's no process in the back end to pull the data from threaddb into fleek that would require some kind of go process. We didn't get around to that and honestly, we just want to improve the algorithm for distributing the rewards. As of now, it's pretty basic, but obviously we know the advertising world is anything but basic, so yeah, it would be some of the next steps.
01:31:10.862 - 01:32:12.494, Speaker A: Yeah. Do you feel like that's the core of your product? Like serving the ads, protecting the and figuring out how you'd be rewarding? Yeah, I would say that's the core of what we worked on and just the concept of how we're going to serve it, especially based on the Microbility world, how they're going to be served it based on where they are and serving relevant ads. Yeah. It's all about compensating users for their data and for their you could say for their usage of the product. And either whether it be them contributing data to a data set or them actually being shown ads, I guess both ways they should be earning money, right? Yes. Seems reasonable. So what are the current constraints of the ad tech world now that stops this from being a reality sooner? Well, yeah, from somebody that we spoke to recently.
01:32:12.494 - 01:33:30.902, Speaker A: Apparently there's a huge bidding system when it comes to advertising and that bidding system happens within nanoseconds most of the time. So where is that going to live in this current Web Three architecture, for example. Right. Is it going to have to be some kind of go process? Does that remove from the trustlessness? Does that remove from the decentralized nature of the architecture? That's the first one right off the bat. How do you think it should be done? What's the best way for that to actually happen? So right now the biding process is really fast and this is just anecdotal stuff that I've spoken to a couple of friends who work at Teeds. It's pretty insane how crazy I guess the traditional world is for advertising is, but I can imagine in the decentralized world if we can have actively bidding on ads for, I don't know, maybe like a 30 minutes lockup, maybe in Crypto Voxels right. Or if it's just giant billboards and stuff, how do you imagine something like that would work? I mean, the first thing that comes to mind is maybe there's some kind of pool where all the ethereum is from all the active budgets and then maybe there's some processes in between that are maybe managed by the advertisers, maybe through like a mobile app or whatever they can increase their bid.
01:33:30.902 - 01:34:10.106, Speaker A: And then there's just state channels between the advertiser mobile app and the pool of ads that are going to be shown within the next, for example, 30 minutes, like you said. But eventually we'll definitely need some kind of layer two technology because you're not going to do that on main net, right. Is it something you guys are interested in moving forward with? Definitely, yeah. So what's next? What's like the immediate next step after this? Hackathon immediate next step is improving the reward algorithm and adding the encryption layer for sure, because that has to be in there. Very cool. Awesome, guys. Yeah, I like it.
01:34:10.106 - 01:34:19.280, Speaker A: I think it's well executed from start to finish and good scope. Good job. Appreciate it, fellas. Thank you. Thank you. Awesome. Thanks, guys.
01:34:19.280 - 01:34:35.300, Speaker A: Thank you. Mobility Marketplace. We're going to call up the next team, Decentralized Docker Hub. And there's just two more teams. So there's Decentralized Docker Hub and then one more after that, and that'll be the end of the session. So you got the video up already, so please take it away.
01:34:35.990 - 01:35:18.426, Speaker H: Hackathon. I worked on decentralized docker Hub. Using decentralized docker hub can easily push and pull docker images from IPFS and filecoin. It is powered by powerkit. I decided to work on Decentralized Docker Hub because I believe that we need an alternative to centralized Docker Hub. Relying on a single centralized source for docker images is risky because if an image gets deleted, then it'll affect all your dependencies. In the past, there have been cases where a particular popular package from NPM got deleted and all the packages which relied on it were affected.
01:35:18.426 - 01:35:59.530, Speaker H: Hence, I believe that decentralized docker hub is an effective, decentralized solution. It is also a cost effective solution because it depends on IPFS and Filecoin, where IPFS is a hot storage layer and Filecoin is a permanent cold storage layer. Now let me quickly show you a demo for Decentralized Docker Hub. The first step is to install docker and docker compose. In the next step, you run Powergate, Lotus and IPFS containers. These are the steps I already have it running over here. In the next step, you create a FFS instance from a new tab and note down the token from the output.
01:35:59.530 - 01:36:28.514, Speaker H: This is the token. I've already exported this as an environment variable, so I'll skip this step. In the next step, you determine the docker image that you want to push to IPFS and File. Kind. You can either create a new docker image locally or fetch it from another source. In the next step, you will clone the Decentralized Docker app repo and then check out to the Decentralized Dockerab rep branch. I've already done that.
01:36:28.514 - 01:37:28.460, Speaker H: In the next step, you'll push an image to IPFS and Filecoin. First, let me push the Alpine image. As you can see that first it got added to the hot storage layer that is IPFS. And the next step it skipped Filecoin because it is already pinned. In the next step, I'll try to push the IPFS image. The first step it got added to IPFS and then it skipped Filecoin because it's already pinned. And the next step will pull the docker image from IPFS and Filecoin using the CID from the previous step, as you can see that it successfully pulled the IPFS image.
01:37:28.460 - 01:38:14.164, Speaker H: Similarly, you can also pull the docker images using the ENS domains. Firstly, you need to link the Ipfsciid to your ENS domain and then you can pull it using this command. It also supports the testnet for the ENS domain. In this way we pull the Alpine image using the ENS domain Alpine docker ETH. And finally you can create a container from the image that was pulled from IPFS and filecoin. As you can see that the container got created successfully. This concludes the demo for decentralized docker.
01:38:14.164 - 01:38:14.970, Speaker H: Thanks.
01:38:18.780 - 01:38:39.620, Speaker A: Great, thank you. We'll turn over the judges for comments, feedback and questions. Cool. Solid idea. Definitely. I think you identified a very specific use case and sounds like it would work. One immediate question, where are these things being shared? So say if I'm pushing something onto.
01:38:39.640 - 01:38:40.672, Speaker E: Your thing, how do I let people.
01:38:40.726 - 01:38:46.400, Speaker A: Know that I've pushed this new image and how do people find out where to get it from? Is it just the usual?
01:38:47.460 - 01:39:06.776, Speaker H: Maybe people can create their own host, their own page on IPFS and they can link it to an ENS domain and share that they are hosting these docker images. And also like say, for example, if I'm hosting certain images, then I can link it to a certain ENS domain and use domains for that and I can advertise that thing.
01:39:06.958 - 01:39:15.036, Speaker A: Right, okay, that's but people essentially already have to know who I am and.
01:39:15.138 - 01:39:20.430, Speaker H: People can host their own pages on IPFS which links the IPFS hash over there.
01:39:20.800 - 01:39:48.416, Speaker A: Sure, I agree. It's a needed idea. I do think there is some work to be done around discovery because it's basically going to be impossible for anyone to find this unless they know to look for you. But I love it because it's super simple and it works and it's needed. So I think good job on like it's hard to find a use case that makes sense and I think this was a good find.
01:39:48.598 - 01:39:49.330, Speaker H: Thanks.
01:39:56.050 - 01:40:15.240, Speaker A: Okay, there's no other questions or feedback. We'll move on to the next and final team in group one. Thank you. To centralized docker hub. So we're going to call up and just get on the call news buff. So Veronica, whenever you're ready, you can start your presentation and we'll go from there.
01:40:20.400 - 01:41:05.992, Speaker D: Hi all, this is my submission for Hack Affairs 2020. News Buff is for citizen reporters who are on the ground when news happens. This underserved community and their stories are vital for change and accountability in society. In the current mainstream media, the 24 hours news cycles ensures any attempt at large scale change only gets covered when it can be portrayed in a dividing and fear mongering manner. This can easily be seen with the ongoing Black Lives Matter protest in the US. Where the federal government has sent unmarked officers to subdue protesters through violence, intimidation and dangerous tactics. And despite these Newsworthy Geneva Convention violating tactics, mainstream media has failed to inform the public and only covered the protests when there was polarization to be made through violence.
01:41:05.992 - 01:41:26.368, Speaker D: Some major outlets that were meant to be informing the public have become nothing more than clickbait farms, sensationalist and polarizing forces through the insatiable force of capitalism. Other outlets have had to adapt to serve niche communities rather than the general public, resulting in them taking sides in a debate they were meant to be agnostic in their coverage of.
01:41:26.454 - 01:41:27.232, Speaker A: Yeah, sorry.
01:41:27.366 - 01:41:29.970, Speaker D: Traditional news outlets has never been lower.
01:41:30.340 - 01:41:35.092, Speaker A: And yet sorry, Veronica, we don't actually see the video. Is there supposed to be video along with the audio right now?
01:41:35.226 - 01:41:37.270, Speaker D: Oh, yes, there definitely is.
01:41:38.840 - 01:41:46.712, Speaker A: Okay, hold on. I kept waiting for the video to start because I thought it was just like an audio intro. Okay.
01:41:46.766 - 01:41:52.260, Speaker D: No, hold on. Let me try reshare that's. OD, there definitely should be visuals.
01:41:52.420 - 01:41:56.600, Speaker A: I think you shared the desktop instead of the specific window where the video is playing.
01:41:56.680 - 01:41:58.572, Speaker D: Oh, I see. Okay, can you see now?
01:41:58.626 - 01:41:59.372, Speaker B: There we go.
01:41:59.506 - 01:42:02.110, Speaker D: Okay, lovely. Can I just press play from where we were?
01:42:02.800 - 01:42:04.656, Speaker A: That's fine, if that's okay with you.
01:42:04.758 - 01:42:06.176, Speaker D: Yeah, I'm told that.
01:42:06.278 - 01:42:06.930, Speaker A: Okay.
01:42:07.460 - 01:42:50.088, Speaker D: The need for high quality, verified information has never been higher. This vacuum created a space for social media to replace traditional news in consumers information diets. While convenient for the consumer, this has resulted in vast opportunities for misinformation and propaganda to fester. Social media platforms are designed to be addictive and controversial, creating an echo chamber in the size of which we have not faced before. The lack of curation and accountability on the sides of social media has only made things worse, the real effects of which we are only just beginning to feel. We need a canonical source of ground level information. We need a purpose built platform that will not incentivize virality over integrity.
01:42:50.088 - 01:43:24.020, Speaker D: Newsbuff will be this platform. Through the use of decentralized storage, we are able to create a censorship resistant platform. Newsbuff makes use of decentralized storage and hosting, as well as ethereum smart contracts to create an immutable storage of information. We take advantage of the latest web development frameworks to make a responsive and modern web application. This is an overview of how the system is built. A nonfungible token with threebox is used to identify a user within the system. IPFS through Textile is used as a storage layer for content, and Dai is used as the currency for tipping.
01:43:24.020 - 01:43:42.632, Speaker D: The entire system is composed in view, and JavaScript, with the use of a TypeScript, helper to integrate with textile. The live site is then hosted through Fleek. Now let's go through what this looks like with a demo. You connect your wallet. It checks if you have a three box account. Because I already do. It'll log me in automatically.
01:43:42.632 - 01:44:37.608, Speaker D: If you hadn't had one, it'll make you one. Here is the homepage full of lots of information about us, which I would recommend reading. You can then browse posts. You can also tip creators for their hard work. You yourself can also create a piece of content. When you create content, you will have to sign a transaction in order to add this content to your token. You can then view the content you created after hackath newspaper plans on a V two, which will be mobile first and include a dow for community curation of content, as well as some machine learning models for initial curation of content.
01:44:37.608 - 01:45:00.080, Speaker D: Ideally, we'd also like to raise funding, expand the team, and launch version two in November. And for a quick intro hi, my name is Veronica. I've been a full time blockchain developer for the last two years and as of June this year, I left my job to create newsbuff. If you'd like to know more, please don't hesitate to reach out or join the Telegram group. Thank you so much for your time and your attention.
01:45:03.140 - 01:45:34.652, Speaker A: Great, thank you. I will turn over the judges for comments, feedback and questions. Yeah, great idea. I think it was not difficult for you to convince us of the need of something like your product, but you do a good job of it and I just want to say shadowed for making this your full time mission. That's very cool. I guess. How do you plan on getting people to actually start? Because it looks like it's close enough to be used today.
01:45:34.652 - 01:45:40.190, Speaker A: I'm sure there's improvements you'd like to make. What are your plans on actually getting people to start posting content and using your service?
01:45:41.520 - 01:46:12.120, Speaker D: Great question. So my plan is to kind of target people who are in desperate need of this censorship resistant platform. So specifically the protests in the US and in Hong Kong. But I don't think it's necessarily at a usable state for that group of users just yet, as a lot of Web Three technologies kind of adds quite a bit of friction. So I definitely want to make a second version where I've reduced a lot of those friction points before actually trying to target my end goal users.
01:46:12.540 - 01:46:15.130, Speaker A: And how do you plan on reducing those friction points?
01:46:16.380 - 01:46:39.490, Speaker D: So mostly just because obviously this was a hackathon and I solo hacked, so it was a lot just to do it just with me. So it's mostly just like optimizations, kind of bundling transactions, that kind of stuff. Just reducing the general friction and then finding a really nice wallet to integrate with that kind of simplifies it on their side in terms of key management and that kind of stuff.
01:46:42.340 - 01:47:23.500, Speaker A: Yeah, I had a couple of questions, so I'm trying to figure out what the part about this that's difficult? And so if you want to do news, the hard part is actually curation, or at least that's one of the hard pieces. And you mentioned a dow, doesn't look like you have that here, so anyone can just take a picture and then post it up on IPFS and then claim that it's news. But the actual having some sort of scroll that I actually know is News. How does news buff solve that problem? By the way? Great name but I'm just curious how it's going to be news and not just cat pictures.
01:47:24.180 - 01:48:04.670, Speaker D: No, for sure. So there's kind of two levels of curation. The first one being a machine learning algorithm that's run client side on your content before it actually gets into the system as to say. And that does like initial curation, making sure it's not hate speech, making sure it's relatively kind of fits the news bubble of words and stuff that gets used often in news. Obviously it's not the be all and end all algorithms tend to have blind spots and that kind of stuff. But the second layer is actually like a human curation dow that's financially incentivized through a 1 minute warning through like a paywall ads kind of model going on.
01:48:05.200 - 01:48:36.832, Speaker A: Yeah. So just real quick, I've actually seen a lot of these similar projects and so some of the things that I've seen people use to attack this problem is they'll have their friends because they'll actually use the social graph. That was one way I've seen that happen in order to curate news. Yeah. So I'm very keen on these types of projects but I do think that the hardest part is actually the curation and not the posting. So I will be following along for News Buff and great branding.
01:48:36.976 - 01:48:46.232, Speaker D: Thanks. No. 100% the curation of content is actually by far the most difficult part of this. How do you prevent like Russia DDoSing something and that kind of stuff.
01:48:46.286 - 01:48:46.744, Speaker A: So sorry.
01:48:46.782 - 01:48:47.576, Speaker D: I know my time's up.
01:48:47.598 - 01:49:15.280, Speaker A: Sorry. Okay well thank you so much Newspap. That is the last project we're going to see today in group one. Thank you to all the teams. After so many weeks it's really exciting to see what you've all built and I'm really looking forward to seeing all the other teams as well over the next coming days. So we'll I think stop the stream, stop the recording there and close us off. Thanks very much to all our judges as well and obviously we'll be in touch after the call with any details.
01:49:15.280 - 01:49:17.630, Speaker A: Thanks everybody.
