00:00:07.690 - 00:00:25.850, Speaker A: Welcome again everybody to our workshop with Lighthouse. Today you're going to learn how to do permanent storage redefined with Nandit here. If you have any questions during the workshop, please feel free to pop them in the chat and we'll answer them towards the end. Nandit, I'll let you take the stage.
00:00:25.930 - 00:00:52.460, Speaker B: Thanks. Awesome. Thank you. So welcome everyone. Good morning, good evening, wherever you are. It's nighttime here, so you can wish me good night after this session. So, welcome to Lighthouse and we'll talk about what is Lighthouse and how it's a permanent storage redefined and how you can use it in your hacks at Build quest.
00:00:52.460 - 00:01:55.840, Speaker B: So, to start off, web3 means true ownership, but to achieve that, we need to move from renting our own files to truly owning them. And that's where Lighthouse comes in. So, Lighthouse is a permanent storage protocol and it allows the ability to pay once and store your files forever. So unlike you would have used web two products where for Google Drive and Icloud, you'll have to pay for the files after every fixed period of time, let's say monthly or yearly. We believe that for Web three native products, having a permanent storage option is pretty important and that's what we are building. So, on the core of Lighthouse protocol, there is this endowment pool model. So what happens is whenever a user stores a file on Lighthouse, some amount of it goes towards to the miner for storing it, while remaining goes to this endowment pool whose job is to pay for the user's file for many many years and decades to come.
00:01:55.840 - 00:02:31.526, Speaker B: So hence, we are bringing permanent storage to filecoin and let's talk about what that exactly means. So right now there are these two prominent storage protocols. As we see in the market today with filecoin there is this huge storage capacity. In terms of exabytes, it is a pretty cheaper storage option, but it allows recurrent payments. So whenever you store data with a file coin minor, you essentially store it for one year or 1.5 years max. So somebody has to take care of that and do those recurrent payments.
00:02:31.526 - 00:03:16.434, Speaker B: So for example, given these NFDS, when we are expecting that to be transferred over generation to generations, some are like pretty high valued and everyone wants that their NFT be maintained forever. Like the records, when you create those assets, who you transfer to and who is the owner. Right now those are on the blockchains, like ETH, polygon, solana, et cetera. But essentially the file behind it, which is a JPEG or MP4 file that is getting stored somewhere. And we think that the infrastructure behind that it is not totally in the right manner. And that's how we are building Lighthouse, that you do not have to pay or maintain your file ever again. You just do it once using Lighthouse and it's totally permanent.
00:03:16.434 - 00:04:10.186, Speaker B: There is this another protocol, RV, which does allow that ability. Although using Lighthouse gives you this chance that you can do it at a much cheaper cost than RV. Plus we have a better user experience in the sense that you can pay in your native tokens or native chain tokens. So for example it could be like Matic BSE or any other EVM compatible tokens like Phantom, et cetera. So yeah, let's go on to our demo and we'll also show you a demo app files which is built on top of Lighthouse. So this is our website, you can see there is this get started button where you can go and go through the docs. So to give an overview for our CLI there are basically four commands that you need to know.
00:04:10.186 - 00:05:09.710, Speaker B: One is the install command that allows you to install our JS SDK on your system. Then you have to just create your wallet and top it up with some native tokens. So for example if you want to use polygon chain then top it up with matic tokens and then there are testnets available as well. So after that you are just like one click deploy away to deploy your files. Or it could be like you can deploy a lot of files together inside a single folder to Lighthouse and then you can easily check what is the status of your file, who all are the miners, to which your file is stored and how many replications are made. So let's try it out on our CLI. So I've already installed, but if you haven't installed you can use the command that we just saw here to install Lighthouse and these are all the commands available to you on your CLI.
00:05:09.710 - 00:06:15.566, Speaker B: But our NPM package you can use in your apps like react app. If you are building you can use that right away in there as well in all your browser based apps. So we have this wallet command that will use which tells you your public key of the wallet that you created and which network you are connected to and you can also change the network. So for example, now we also support optimism which is an ethereum layer two. So if you want to go to that optimism that's the right spelling, yeah. So you use the network parameter to change and now you are connected to the optimism network and then you can easily check the balance you need to top it up with some tokens and although to start off you can also use their testnets as well. So need not worry about having real tokens for your hacks in the hackathon.
00:06:15.566 - 00:07:21.350, Speaker B: And then let's say I want to deploy some files. So for this purpose I'll deploy a whole folder with a lot of files so that might be pretty helpful for you. So I have this logos folder in which I have put a bunch of files, I'll do Lighthouse web3 deploy logos so it is now giving back me the code that how much will that cost? What all files are getting stored, their respective sizes, their respective fees, what kind of file they are and their name. And I need to do capital Y, type it and click enter. And I need to give my password, which I set up when I was creating the wallet. And now it's starting to upload the file. So it gave me this, first of all, this transaction, which is like a verifiable proof that you use Lighthouse to store your file.
00:07:21.350 - 00:08:12.442, Speaker B: And this is what ensures that, okay, it is a record that you actually stored your file. And Lighthouse protocol will ensure that it is stored forever. We will keep on paying for your file for many, many years and decades to come. Not we as a company, but the protocol itself. So we just saw that it's 35 seconds ago this transaction was made and it also gave us this URL where I can visit the file that I just deployed. So, yeah, since it was a folder with a bunch of files, so it has this common CID. And if I open one of these files, like, let's say this file, so this CID is even common.
00:08:12.442 - 00:08:48.134, Speaker B: So for example, if you are deploying a lot of files, this is a common root CID. And then you can have simple names like 1234 PNG and then play around with that. So, yeah, that's pretty simple to use. Top it up with some tokens and deploy files using Lighthouse and check their status. And we have also created this files app and we have open sourced, just open sourced its code as well for an example for you guys. So how you can use Lighthouse? I'll just demo it. It's a pretty simple app.
00:08:48.134 - 00:09:39.426, Speaker B: Just log in with your MetaMask and then you can see all the files that you stored. So right now I'm on the Matic network and if I want to upload a new file, I can do it using its CID directly or I can upload a new file from here. And then I will sign a transaction to confirm and then pay a minimal fees, like some transaction fees and some minimal fees because it's a very small file and then confirm that. So, yeah, it will take some time, equivalent to the transaction time of whatever network you are. And then that will be visible here. And then you can see the file and play around with it. So the code for this is open source.
00:09:39.426 - 00:10:28.336, Speaker B: I'll put this in the chat itself if anyone wants to use in their hack and to know how to use Lighthouse in your systems for your hackathon projects. And yeah, that's it. So I'll also put in our discord as well. And let me go back to our slides. So, for the storage, we build on top of IPFS and filecoin. You can imagine Lighthouse to be a layer two on top of filecoin. So we have our own validator set of nodes, although right now we have just few of them running within our system as well, company as well.
00:10:28.336 - 00:11:37.864, Speaker B: But we'll soon open it out to more people to use it and run your own validator nodes in coming months. And so so our smart contracts, they are multi chain deployed on smart contracts like Polygon, Phantom, BSE, et cetera. And behind there is this economics involving staking and accruing fees which grows this endowment pool, whose job is to eventually pay for your files for over and over for a very, very long period of time. So given Lighthouse, there are variety of application possible. You can use it for NFT storage, and particularly for this hackathon, you can use it to store your gaming assets, your metaverse assets, be it just simple like images, videos, text files, or even more complex like AR, VR, and maybe create even dynamic NFTs, et cetera. You might even want to create some reputation systems or some ranking systems and have that record be permanently stored on Lighthouse, which could be pretty important for your hackathon projects. And for Build Quest, we are sponsoring $2,000 and it's a pool price.
00:11:37.864 - 00:12:12.164, Speaker B: So for all the projects who are using Lighthouse, it will be split evenly. And you can check more details about it in our Discord channel on the Buildquest hackathon. And since Lighthouse is a layer two on top of IPFS and filecoin, so essentially if you use Lighthouse, you'll also qualify for the other IPFS and Filecoin prizes as well. So it's like a new icing on top of this cake. So thank you very much. This is all about Lighthouse and this is our Twitter handle. If you want to follow us.
00:12:12.164 - 00:12:15.270, Speaker B: And if there's some questions, we can take them up.
00:12:19.480 - 00:12:27.210, Speaker A: Thank you Nandit, for the presentation. If you guys have any more questions, feel free to ask them now.
00:12:36.250 - 00:12:48.362, Speaker B: Someone says no question. Good presentation. Yeah, thank you. I think someone has raised your hand, so if you want to type in the question, maybe I can tell.
00:12:48.416 - 00:12:49.450, Speaker C: Can you hear me?
00:12:49.600 - 00:12:50.346, Speaker A: Yeah.
00:12:50.528 - 00:13:06.640, Speaker C: Okay, so there is one question. How fast is it working? I mean, if you want to retrieve the data, for example, fold this logo and load the page or retrieve those data as fast as possible. How much time it would take?
00:13:11.750 - 00:13:21.710, Speaker A: Nandit, are you we I think we lost Nandit.
00:13:22.450 - 00:13:24.240, Speaker C: I guess he's back to.
00:13:28.770 - 00:13:30.270, Speaker A: Here. Hi, Nandit.
00:13:31.910 - 00:13:40.680, Speaker B: Yeah, so if there's any questions, you can ask me or else I'm on Discord and happy to also chat one on one with anyone.
00:13:41.050 - 00:14:06.810, Speaker C: Okay, so maybe I will repeat my question. I have a question about the performance because you show us this demo, but actually how much time does it take to retrieve the data? For example, to load the page or take some sprites for game and so similar things. How performant is this network?
00:14:08.510 - 00:14:51.340, Speaker B: I think if you're asking about retrieving data and let's say serving it on the web, it should pretty work fine. Again, on your specific use case, if there is some specific files that you are planning to serve and we can specifically check the performance for them. But as we have been for the demo apps that have been built on Lighthouse and other projects that I've been working on, we haven't faced any issue serving the files like videos or images on the website. But if there's any particular asset to your hack, let us know. If you face any performance issue and we can see.
00:14:51.890 - 00:14:57.600, Speaker C: Yeah, I was just asking about the overall performance. So thanks for the answer.
00:14:58.770 - 00:15:00.880, Speaker B: Yeah, no worries. Thank you for asking.
00:15:08.120 - 00:15:16.850, Speaker A: We have time for some more questions. If you have them, feel free to ask Nandit or raise your hand.
00:15:19.140 - 00:15:27.410, Speaker B: Yeah, okay.
00:15:27.480 - 00:15:48.280, Speaker C: So I have another question actually. How much you pay? How much is the gas fee calculated when we're talking about those files? Are we talking about the per kilobyte or something? Other measure is taken?
00:15:49.370 - 00:16:33.794, Speaker B: Yeah. So for the costing part right now, we do charge for $5 a GB, but that's for storing the files. Again, if you are looking to hack, you can even use testnets and that won't cost you anything. And for the transaction fees, again, it depends upon your native chains. So, for example, the chains that we are supporting, like polygon, phantom optimism, et cetera, transaction fees on them are already pretty low. So it's like very minimal. And then again, if you are deploying, even how I showed in the demo, a folder of a lot of files together, then it's like a pretty minimal transaction fees.
00:16:33.794 - 00:16:58.640, Speaker B: Again, because there's a lot of files and the transaction fees would be just one. So it won't be any transaction fees, but the cost of storage that is fixed right now, $5 a GB. It would go less in the future. For your hackathon purpose, you can go for test networks, but even that $5 a GB if you take over a long period of time, that saves infrastructure cost, as we see.
00:16:59.970 - 00:17:03.600, Speaker C: Yeah, okay, thanks.
00:17:05.970 - 00:17:24.600, Speaker B: Awesome. If there's any further question, you can join our own Discord. We are on this buildquest channel as well, so don't be shy. Ask us and if there's anything we can help one to one on your particular use case, we would be pretty happy to do that.
00:17:27.740 - 00:17:34.520, Speaker A: Thank you, Nanda. And yeah, the Discord channel, the sponsor, Lighthouse for reference.
00:17:36.140 - 00:17:37.610, Speaker B: Awesome, thank you.
00:17:38.780 - 00:17:39.910, Speaker A: Thanks. Bye. Thanks.
