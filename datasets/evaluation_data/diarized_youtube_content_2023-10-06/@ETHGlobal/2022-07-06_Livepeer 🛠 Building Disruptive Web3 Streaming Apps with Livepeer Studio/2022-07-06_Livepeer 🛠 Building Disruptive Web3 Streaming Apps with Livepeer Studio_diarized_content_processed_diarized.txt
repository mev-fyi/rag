00:00:06.410 - 00:01:08.130, Speaker A: Thanks everyone, for being here. My name is Eric Tang and I'm the co founder and CTO of Live Peer. Today I want to talk a little bit about building disruptive Web Three streaming applications with Live Peer Studio, which is a set of developer tools that we recently launched. But before we get into that, if you're unfamiliar, live Peer is building the video streaming layer of Web Three. And in order to talk about building disruptive streaming applications, I want to cover a couple of topics. One is what are some of the core tenets of web Three applications, right? What makes it unique and how does it compete with traditional web Two applications, especially around these consumer apps? I want to give a quick introduction into video streaming technology and then I'll give you a couple of examples of new technical architecture that you can start to follow and start to think about your hacks. And of course, talk about the exciting part, which is the hackathon prices.
00:01:08.130 - 00:02:14.920, Speaker A: Cool. Let's dive in. Core tenets of Web Three applications. So let's take a look at some of this historic view, right? Where did we come from and what is Web Three actually putting forward? Back in the when the web was first invented, we were really in this kind of read only world, right? People created protocols and we were able to kind of send messaging messages around to each other. And when that evolved to this web Two world, we started to have this read and write ability. We were able to interact with applications and actually write information into the back end that enabled us to build much more much richer user experiences that gave rise to these really interesting applications that are on the web. In Web Three, we started to introduce this new component, which is ownership, right? So now you can read, write and own.
00:02:14.920 - 00:03:10.646, Speaker A: And with that new element, we can start to think about building new types of applications that are way more interesting than what we have today. In terms of consumer apps. One of the things that are really interesting that's happening is in Web Three, people, users are becoming owners, right? There's a lot already being written about the owner economy. Lots of applications that are building in this space already around the owner economy, anywhere from digital assets to DFI to tools. One really interesting example here I want to highlight, we use YouTube today to watch video, right? Artists launch their music videos on YouTube and people can watch it. There's an interesting experiment, a company called Glass. On Glass, you can still watch music videos just like YouTube.
00:03:10.646 - 00:04:35.380, Speaker A: But the additional thing is now you can also purchase music video. And if you're a fan, you went on Glass and you purchased a music video NFT, which is a limited edition. You start to create a direct relationship with the creators. And as the creators become more and more popular, the fans start to be able to take ownership and be benefit from the success of these creators. Because these NFTs are limited editions, and owning these limited editions early in the career of an artist can become a lucrative thing later down the line when the artist becomes more famous. Another interesting toolkit tool that we have now is incentive design and permissionless participation. So what does that really mean? Well, in the web two world we have this technical architecture where we have the front end and the back end and the database all living in this centralized ecosystem, right? So the user data lives in that siloed environment and these environments are proprietary intellectual properties that are developed by companies and that are owned by the companies and ran by the companies.
00:04:35.380 - 00:06:00.122, Speaker A: In the web3 world we have blockchain architecture, right? So the blockchain essentially is replacing the back end database and becoming the user database, right? We have smart contracts that are also open source and composable and that we can use to program digital assets. And on top of that we have clients and users. So this creates a fully decentralized model of building application where there isn't intellectual property, but the ownership and the interaction from the user data happen in an open way. And this introduced some interesting tools that we have. So now we have a way to create incentives, right? So these incentive design mechanisms are really popular in DFI, but it doesn't only live in DFI, right? For example, it solved this really interesting conundrum in the web two world where when you're building a new consumer application, you get to this cold start problem, you build an application and no one knows about it and you have to bootstrap this user base from scratch. And if you look at the network effect curve, the more user you have, the more valuable the application becomes. But in order for the application to become valuable, you need to have these users.
00:06:00.122 - 00:07:15.990, Speaker A: So this bootstrap phase is really hard to get by and is really, really costly for companies to build these user bases. Well, in web3 we have this new tool, there are tokens, right? So in the early phase, when there's not a lot of users, we now have a way to create financial incentives for people to participate in the applications that help us smooth out that demand curve. And over time you have the financial utility and the application utility Cross that helps you get to network effect a lot faster and in a much more smoother curve and, you know, much less costly for the application developers. And this is already starting to take shape in the past few years, even in the infrastructure space. So here we see a lot of interesting computation. Infrastructure has been bootstrapped using these token mechanisms where each year a lot of value is being distributed to the participants in these protocols. And these protocols and infrastructures are being bootstrapped and becoming this global and really efficient infrastructure.
00:07:15.990 - 00:08:02.790, Speaker A: But it doesn't stop there, right? It's not just about tokens. Creators can also take part in this. And currently a lot of creators are taking part in this through NFTs. And you can kind of look at NFTs as a way to capture demand in this demand curve where you have the long tail fans, where you can monetize as much. The way that you monetize their attention is by ads, right? So YouTube and things like that. But for your more loyal fans, you can start to sell NFT collections. And over time, these NFT collections can help the creator capture more of the economics on this demand curve.
00:08:02.790 - 00:09:20.670, Speaker A: Another really interesting example is DAOs, right? So Dao at the very beginning were groups of people that are coming together, putting together a treasury and they start to figure out rules of how to operate and use the resources in the treasury. But over time, it's also evolved into this interesting way to collaborate and actually do projects and develop things and create products, right? So now we have Dao governance. We have Dao tokens that go through these governance mechanisms. They have their own inflation schedule and token supply. There's a market for these dow tokens that can be traded on the DeFi marketplaces. So essentially what you can do now is you can create a project, create a Dao, launch your own token, and use that token liquidity to bootstrap the participation in your Dao and build product on top of that. So it solves your product building problem, it solves your initial user bootstrap problem, and it creates this new way of distributing ownership of these applications in the early days to the users.
00:09:20.670 - 00:10:42.090, Speaker A: And being live here, we see a lot of these applications starting to come online. These are interesting consumer mass adoption applications, not just blockchain niche applications, right? And we're seeing a lot of interesting examples in the verticals of decentralized social networking in Web Three creative economy and also starting to see that in decentralized gaming where games are being created, but also there's very nontrivial video streaming components in these games. So how does that all relate to video streaming and life? Here? We're talking about building a disruptive streaming app, right? In order to do that, let's go through a quick overview of video technology and see how it worked in the web Two world and how it's working in the web Three world. Video accounts for about 80% of the internet's traffic. So without a doubt, it's the most important tool that you can use when you're building a mass consumer application. And the reason is that video is the most effective tool for storytelling and for communication. It's the most direct and the most dynamic and the most impactful.
00:10:42.090 - 00:11:37.686, Speaker A: So if we look at video streaming application, there's really three parts. There is your video ingest or video upload, your video playback, and your video processing. A traditional video application architecture, technical architecture looks something like this. On the left side, you have your server side logic for your application that's connected to your database. You have a front end where there's a player that's loading from the server logic and the player allows people to and the front end allows people to upload a video into a media server, which is kind of the linchpin of this whole thing. The media server allows you to upload the video using a transcoding engine to transcode the video so that it can be streamed. The video will get stored into an object storage.
00:11:37.686 - 00:12:38.650, Speaker A: It gets put into a CDN for caching, and it gets put into the video player, right? So for the video ingest component, we have these little three little squares. As a product for live streaming, people usually use tools like OBS Studio, which is very popular among Twitch Streamers. These are kind of live broadcasting tools. The advance of Instagram or TikTok or other mobile applications are giving rise to kind of mobile native broadcasting and video creation. And as well as kind of like in browser, we have in browser broadcasting as well. Oh boy, running out of battery. My computer running out of juice.
00:12:38.650 - 00:13:55.706, Speaker A: Yeah, USB C. All right, back at it. So in terms for live peer, we have a set of tools for developers to build video ingest or upload experiences. We have a mobile SDK that allows anyone to build a mobile application that broadcasts a live stream into Livepeer. And we also have an in browser SDK that allows anyone to build an in browser broadcasting experience so your user don't have to download like OBS or something like that, moving over to delivery and playback. Usually for mass scale video applications, videos need to be uploaded into a CDN and that's usually from a media server. But sometimes video can also be delivered directly from a media server, depending on kind of your use case.
00:13:55.706 - 00:14:47.386, Speaker A: But there's always a video player that's in the front end and there are lots of open source solutions, lots of closed source solutions that's the video player the playback is usually in. The most popular playback mechanism is called HLS. It's a file format. It's an apple standard. And because Apple is Apple, they control the market and they dictate how video streaming works. And Adaptive Vertrage streaming is a really important concept here as well. And what that means is when you're watching videos, even though everyone thinks that they're watching the same video, but they're actually watching different versions of the video that's being transcoded, right? So imagine if I record a video in, upload it into a video streaming platform, and someone is watching it on their mobile phone.
00:14:47.386 - 00:15:41.566, Speaker A: They're not watching my 4K video that's being uploaded, right? They're watching a much smaller version, like a 360 p or 480 p version that's being transcoded down. And this is a really important concept because in order for video to be delivered at mass to all the viewers around the world. It needs to be delivered no matter what networking condition, no matter what device they're using. And that means video needs to be transcoded into many different formats to accommodate for that. So here's a pretty good example. Imagine I'm walking on the street near my home where there's pretty good cell cell reception. And I'm watching a get home, I'm on my WiFi, it automatically switches to 1080p maybe.
00:15:41.566 - 00:16:19.180, Speaker A: Then I go for a run and I run through an alley where there's no good WiFi reception. It can go directly down to 360 p. And this type of switching can happen in a seamless way so that users don't even notice that's being switched. Sometimes when you're watching Netflix, it starts out really grainy and it becomes like high resolution after a couple of seconds. That's adaptive bitrate streaming at work to help optimize your viewing experience. Video delivery playback. We talk about video players, right? There's a bunch of options out there.
00:16:19.180 - 00:17:06.650, Speaker A: We're happy to provide some recommendation for you as you're thinking about building your apps. Video processing, it's another really important component that happens in the back end that people don't usually think about until you start to really build an application. Thanks, I got it. Nvidia processing is really transcoding. We talked about that a little earlier. And transcoding is actually a really computationally intensive step, right? Because what you're doing is you're decompressing the video, you're recompressing it down to the different versions and then repackaging it, re encoding it, and then you're storing it. Usually it happens something like this, you just transcode it all in many different versions.
00:17:06.650 - 00:17:56.790, Speaker A: Especially for live streams. It can be even more costly because live streams every second is new video, right? There needs to be a lot of concurrent transcoding that happens to support a consumer at scale live streaming applications. And that's where lifeure comes in. Livepeer is a decentralized video processing infrastructure network. I'm not going to get into too much of how Live here works just on the high level. The way it works is there's a global registry and a set of smart contracts that controls who gets to participate in a network and who gets rewarded. Anybody can participate through this protocol.
00:17:56.790 - 00:18:58.182, Speaker A: And the participants are basically GPU providers that have a ton of GPUs. Right now there's about 100 participating nodes on the network. A lot of these nodes are kind of professional data sensors around the world. There's up to about 70,000 GPUs in the network processing video at any given time. And this is completely decentralized, which means any of these nodes can go away at any point. And the network software is written in a robust way that it will automatically retry so that the end user viewer experience is never impacted. There's this kind of on chain and off chain portion of the protocol so that all the video streaming components in this protocol are completely off chain, but they're cryptographically signed so that only the setup and the settlement happen on the blockchain.
00:18:58.182 - 00:20:13.910, Speaker A: And we recently moved over to Arbitrum, which provided a lot of really nice benefits in terms of gas price and scalability. And the economic mechanism works something like this, right? Where token holders can stake tokens towards the node operators on the network. When they stake their tokens, they get a portion of the rewards of those operators and over time they get to align their incentive and you get to create this flywheel where the increased volume of video going to the network creates more revenue for the participants on the network, which creates more value for token holders. That drives the demand of the token, which over time creates more volume for the network and that kicks you into this flywheel. So, talking a little bit about building with Live Pure Studio. Live Pure Studio is the toolkit for web3 video developers, right? So there are three components to it. You can live stream, you can do video on demand streaming, and you can mint NFTs.
00:20:13.910 - 00:21:08.470, Speaker A: So here are a couple of examples. In order to add video streaming to your hack, you can just use a simple set of APIs. The API allows you to upload your video into Live Peer and it will ingest your video, it will transcode it, it will store the video for you, it'll cache the video and will give you a playback URL. And all you have to do is embed that playback URL into the video player of your choice, put in your application, and then you're done. Your video now becomes streamable. Additionally, if you want to mint a video NFT using that video that you just uploaded, all you do is configure your upload to also export to IPFS. And now what you get back is the playback URL plus the CID or the IPFS hash for that video.
00:21:08.470 - 00:22:01.670, Speaker A: Then you can use that hash and use the video minting SDK that Live here has and mint the NFT on a EVM compatible blockchain. Another example, you can add live streaming into your app into your hack. What does that mean? It means you create a live stream in the Live Peer API. And then when you create the live stream, it gives you a ingest URL that you can use to ingest your video into. And there's an authentication key that allows you to do that. After that, the video gets ingested transcoded stored, sent to the media server and you can play back that video. And all of that is done automatically.
00:22:01.670 - 00:22:55.174, Speaker A: Now, another interesting thing that you can do is at token gating. So what does that mean? It means you can say I'm live streaming now as a creator, but only the people who own my NFT are allowed to watch my live stream. So the way that works is you configure for your live stream to be token gated. And when you ingest the video, it becomes playable. But every time anyone wants to watch the video, there is a webhook call that gets kicked off through the Media server. And you can implement a webhook handler using any logic that you want. Usually people check for ownership of an asset in a wallet and of course the wallet address can come with the webhook call.
00:22:55.174 - 00:23:53.500, Speaker A: So you can go on the blockchain, look at the state, the data on the blockchain and make a decision on whether a user is allowed to watch a video or not. And that's how we token get a video. Getting back to ideas and prizes, there's $20,000 of total prizes for life period this time. What we're looking for are experimentations in social applications. Here are some examples. Recently there's an interesting protocol that got launched called Lin's Protocol and it's kind of a social graph smart contract framework that allows anyone to build social applications on top. And people have been experimenting with Lens plus Livepeer building kind of video centric social applications that are pretty interesting.
00:23:53.500 - 00:24:39.610, Speaker A: But beyond that, there's already a lot of existing examples that you can take a look at. There's an application called Discover that's been live for a while. There's application called Beam that's kind of a decentralized Netflix. There's Lens. Tube. Iris is another project that's building a life peer integration with Lens. So lots of interesting kind of opportunities here, especially if you think about incentive design and how you can create incentives for creators to come and be early adopters in these social applications on top of creators.
00:24:39.610 - 00:26:24.694, Speaker A: We also would love to see experimentations in the creator application space or in the creator economy. Right? And I think there's already some really interesting creator applications in web Three. NBA TOPSHOT is probably the biggest one where if you think about the NBA or if you think about the basketball players as creators, they're able to sell NFTs through the TOPSHOT platform. Mirror is another good example where writers are creators and writers are able to use a number of different kind of value creation and value capture mechanisms offered by Mirror. And it's kind of a web3 version of Media. Another category that we're seeing a lot of interesting experimentation around is decentralized gaming plus streaming. So obviously decentralized gaming is not just about video streaming, but what we're seeing is when you add video streaming onto the gaming component, gaming becomes a lot more viral, right? And we've seen this in the web two world where games are now kind of almost created for twitch streams to look really good and to look really fun, right? And we're starting to see even in game broadcasting components with SDKs like Genvid, where game developers are embedding video streaming capabilities in the game because it's such an effective mechanism for driving more gamers to come and play their games.
00:26:24.694 - 00:26:58.470, Speaker A: So we'd love to see that. Of course, there's a lot of interesting it kind of crosses over with metaverse. A lot of interesting metaverses are being built in Web Three right now. We even see some weddings that happen in the metaverse, especially because of COVID So the first place is 10,002nd, place 7003rd, place is 3000. Come and find us at the booth. We'd love to help you with your hack. We have our development team here, product team here.
00:26:58.470 - 00:27:49.600, Speaker A: If you have any questions at all, if you want to talk to us about your hack ideas yeah, come and find us. I think we have a couple of minutes for Q A. If anybody have any questions, I'm happy to answer them. Yeah, really, really good question. So the question is about token gating, right? Like, where is the gating happening? Right. Really great question. The problem that it solves is that it's gating the actual video streams instead of gating just the front end web page.
00:27:49.600 - 00:28:43.108, Speaker A: Right. Because if you only get the front end web page, what happens is people gain access to the web page, go and copy the video URL and share it and it's over. Right. So the way this works is it actually issues a JWT in the video streaming workflow and it creates a session ID per user, per viewer, so that you're essentially giving about 60 seconds of viewing rights every time it's being granted. And then you can re grant. Yeah. So the question is about what about the back end? How does that happen? Currently, the application implements the back end.
00:28:43.108 - 00:29:27.484, Speaker A: So you basically register a webhook callback URL and then the webhook just calls that URL with the parameters from the front end. Right. Of course, if you want to build a DAP that you don't want to build in back end, how do you do that? Well, you can do a couple of things. There's two protocols that I know of that are working on this. One is called unlock protocol, another is called lit protocol. Both of these things allow you to kind of build a DAP using the DAP architecture. If you're interested in building some tooling around those DApps with live peer, I think that would also be a fantastic hack.
00:29:27.484 - 00:30:12.844, Speaker A: And we'd love to give you a price for that. Yeah. The question is, is there a way to upload audio files? And the answer is yes, you can upload audio files. You can also stream do a live stream of an audio only stream. And that would also just automatically work. Yeah. Can you upload just an audio file? You can, yeah, I think it's the same way that you would upload a video file.
00:30:12.844 - 00:31:42.844, Speaker A: And then I see you can just upload the audio file access. Yeah, good question. So for token gated streams, do the transcoders on the network have access to those streams? The answer is yes. It would have to go through the GPUs in order to get it transcoded. Right. You could configure the stream so that it doesn't get transcoded the output stream would just be the source stream that comes in, if that's what you want to do. Okay.
00:31:42.844 - 00:33:08.726, Speaker A: I think the question is about royalties, right? So if you want to create so, for example, if you want to create an NFT and be able to distribute royalty to the original creator, how that would work, is that right? Cool. It just works like creating an NFT that has realty already built in. Right. So Live Peer actually just gives you the ability to mint that NFT, whatever NFT that you want to mint, you can just do that. The SDK basically allows you to specify the contract address, and from there, the SDK packages up the metadata in a nice format and puts it into IPFS so that you can just use that as your NFT metadata and everything, which can be done. And you can, of course, customize the metadata however you want. For the NFT, is there some way to take force mapping so that couldn't yeah.
00:33:08.726 - 00:33:45.440, Speaker A: Is there a way to minimize yeah. So the question is, can I rotate between different transcoders so that no one gets the whole thing? Technically, yes, but you have to build it yourself. The way you would do that is to run a lifeyear node. Right. And then you can just build that kind of scheduling mechanism into the node. And of course, the whole stack of lifeyer is open source. If you're interested in doing that, I can show you where it is in the code.
00:33:45.440 - 00:34:07.820, Speaker A: Last call. All right, well, thank you for being here. It yeah, our team will be here all weekend. I personally will be here all weekend, so come and say hi.
