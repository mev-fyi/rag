00:00:07.290 - 00:00:37.846, Speaker A: Good afternoon, everybody. It is exciting to be back in New York. Welcome to the closing ceremony for ETH Global New York 2023. This event has been phenomenal for those of you who are joining for the live stream. And just for today, let's summarize what this weekend has been. 1400 attendees are in this building. 950 of them are hackers from 50 different countries, and 33% of them are new to web Three.
00:00:37.846 - 00:00:59.642, Speaker A: And all of them made some amazing things. And we're going to show you all the things that came out of this. I'm going to go back to what I did on Friday. I want to make you all clap a lot more until we get the show started. These are all the countries and cities people are from. Let's give everybody who came in from all parts of the world a big round of applause. On top of all of that, this is a hackathon.
00:00:59.642 - 00:01:18.770, Speaker A: So today is going to be about focusing on builders. And we're going to show you everything that came out of this. Let's get right into it. 950 hackers, they spent the last 36 hours building cool stuff. And we got 305 amazing projects. That's incredible. One of the highest we've ever seen.
00:01:18.770 - 00:02:25.770, Speaker A: And I want to thank all of our amazing judges who spent the last few hours hearing about every single project, giving them feedback, and learning about what everybody did. So please join me in thanking brian, Julia, Joyce, Victor, Lisa, Elaine, Alejo, Nima, Kevin, RIA, dennison, Shane, Madeline, Brian, Nicholas, Dimitri, Kara, Baron, Cole, Skyler, David, Patrick, Dieter, Alicia, Chow, Sherias, and Michael. All of them spent the last few hours giving everybody feedback. And we paralyzed the shit out of this so we can get here by this time. And last but not least, we're going to do this again with our 46 incredible partners. So please join me in thanking all these amazing companies who are giving out incredible prizes. Starting with one inch WorldCoin uniswap foundation wallet connect arbitrary on filecoin gnosis chain polygon scroll LaPlace fintech mantle Biconomy uma sarknet the graph xmtp sello lens protocol XTC MetaMask axiom apecoin ethereum foundation base airstack hyperlain ave grandstal near mass cartesi ENS unlimited crypto neon EVM safe axelar alliance unlock flashpots alio privy lit compound sunscreen, QuickNote fuel and mona.
00:02:25.770 - 00:02:50.130, Speaker A: Thank you to all these companies. And you're going to be learning about what all of you want very soon. Now, let's get right into this. 305 projects, demoed what they built to everybody in this room, from our judges to our partners. And they went through an amazing judging process. And from that, we selected 13 finalists. That's a pretty big ratio.
00:02:50.130 - 00:03:30.142, Speaker A: I want to start by congratulating all 13 of these incredible teams. So without further ado, please welcome and thank do marina Abstract Wallet safe create Two Real Return zero Trust Bounty XA fast ASR Space Guardian conscious NFT me Victim rebate framed an air Tracker as our 13 finalists they're going to come on here and show you what they built live. And then after that, we're going to talk about all the prizes. But before we get into all of this, I want to talk about a couple of things. These are all the projects that came out of this. I'm going to move out of The View so you can all take a photo and remember everything amazing that was built here. Just because you were not one of these 13 teams does not mean you were not good enough.
00:03:30.142 - 00:04:09.514, Speaker A: It does not mean something was wrong. The goal of these finalists is for us to highlight some 13 incredible themes and topics and ideas that we're excited about and our judges are excited about. But all 292 of you deserve an amazing round of applause for finishing something in a short amount of time and being proud of it. So congratulate yourself in really shipping something and showing it to the world. You all deserve it. And all of this is now visible on the ETH Global website. You can check out all the projects, all 305 of them on the showcase, and see everything that came out of it, all the specifics around what they built, why, how it works, and even their source code.
00:04:09.514 - 00:04:41.270, Speaker A: You can check all this out on your own, and we're going to put a lot more on that as the show goes on. Now, before we get to our first team, I want to just take a quick reminder, a second to remind everybody, especially all of you hackers, to just click on that feedback button, preferably right now. I'll pause if I can, for 30 seconds. If you're on your dashboard, there's five questions. A lot of them are just star ratings. We just want to know how this whole weekend was, and we want to see how we can improve this. Things that worked really well, things that did not work well, things that we should continue doing, all these things.
00:04:41.270 - 00:05:08.720, Speaker A: Two lines. Just give us that one off feedback, and we will get to iterate and make the next one better. That's kind of our goal, and that's kind of how we want to make sure that you have the best experience and you're getting opportunities to learn. So do me a personal favor and just tell me everything that you liked and did not like. And if it's way more things that you did not like, that's actually better, because we have a bigger list of things too, we want to fix. So please do that. Please make this better for us and everybody else who wants to join the space.
00:05:08.720 - 00:05:33.158, Speaker A: Also, if you do this thing, we're going to raffle off an amazing hoodie. There's only going to be five of these limited editions, and anybody who fills out the feedback form will automatically enter it into this. And we'll give this to you wherever you are in the world. We'll ship it to you right, wherever you are. So please, if you don't want to just give honest feedback, get a free hoodie and give me feedback. Whatever works. So thank you for taking the time to do this.
00:05:33.158 - 00:06:03.120, Speaker A: I'm going to stop talking. Let's get right into it. Let's give a massive round of applause for our very first finalist of the day, dune arena. Hey, everyone. Is it supposed to show online? We'll switch to your screen in a second. Anyway, my name is Zach Prater and we're the team behind Dune Arena. We'll introduce everybody else at the end.
00:06:03.120 - 00:06:44.890, Speaker A: Yeah. So the basis of what we built is we wanted to build a creator's economy for game developers. Whenever you build a game, a lot of times it just ends up being open source because you don't want to invest in marketing and you don't really know how to make it big. So we wanted to create a way for people to create tournaments for their games, to encourage people and incentivize them to actually play their games. How it works is the host or the game developer will provide the initial contest prize pool and then he will announce this to his audience. His audience will purchase ticket prices. 90% of the ticket price will go into the contest, while 10% will go back to the actual host.
00:06:44.890 - 00:07:23.350, Speaker A: After 100 people have participated in the contest, the host will make its money back after the contest is over, all the money gets distributed to all the people that purchase tickets and everybody gets something, even if it's pennies. It was created by all of us. Zach Prader, Danilo Turner, Felipe, Eduardo and I'll. Get out of the way. Right, guys, let's try some live demo. So this is an interface where you can create contest and we can let me get started already. So by creating a contest, we define an aim.
00:07:23.350 - 00:08:54.882, Speaker A: The initial price pool, which has to be paid by the host, which is us right now, the ticket price, which is going to be paid by every player joining the contest and how much time the contest will be available for the players to join and actually submit their play, and then the submission time. When the contest ends, the players must go back and submit their gameplay for the carte machine to validate on chain and generate your score on chain. Now that the contest is created, we can simply view this and click play to actually play the game and join the contest. So right now, there is a doom running on a category machine inside the browser where it's going to record every input, every keyboard input, and generate the score that can be seen here and generate a log of all inputs that I've done to the keyboard here. Once I click join contest, once I'm happy with my score, it's going to send a transaction on chain with the hash of this log file. So the hash of and the payment of the ticket price. So with the hash of this log file, I commit that I want to be part of the contest.
00:08:54.882 - 00:10:07.306, Speaker A: And once the contest finishes, I can then submit the whole log, which I have now downloaded and will be available for later submission. So once the host actually ends the contest, or the time has elapsed, the players will be able to upload the full log. So the full log is not being public right away. It's only public after the contest, after all the players have made their play and finished. So I can now download upload the gameplay. So this gameplay is now unchained. So it's Verifiable, and through the Cartesia machine, it's going to actually replay, call the game logic again, replay everything I did on a keyboard, and generate the score again, Verifiably, and then it has already generated a score.
00:10:07.306 - 00:11:06.100, Speaker A: We can see here in a cartesian machine, actually doom running. So this is the actual binary of doom running, and we can even try to replay afterwards and everything. Anyone can see what the actual winning gameplay did. Okay, so that's not round. Thank you, guys. Awesome. That was our first finalist demo for the day.
00:11:06.100 - 00:11:35.978, Speaker A: Now let's get ready for number two. Please give a massive round of applause for Abstract Wallet. Hey, hackers. So we've seen some doom, so now we will see some salvation from Painful UX. So we're going to present you wallet Abstraction. This is the fun part. Things going wrong live.
00:11:35.978 - 00:11:52.880, Speaker A: All right, let's see how long this takes. Should be okay. I think it's just extending instead of mirroring. So luckily, this is a quick fix. I'm going to narrate this whole thing. No, just switch one more time. SK.
00:11:52.880 - 00:12:09.702, Speaker A: I don't know why. Okay, got it. Here you go. Yep. Sorry. Up. There we go.
00:12:09.702 - 00:12:38.990, Speaker A: Please give them a big round of applause. Let's start again. So, we're going to present you wallet Abstraction, or how to perform a one click frictionless sponsor onboarding. I'm Renault Dubois. I'm a cryptographer. My friend Kudi Kudigi is a full stack developer and Nicola Konsni is Deverel. So, first news in the next year, all wallets, they are just going to disappear.
00:12:38.990 - 00:13:21.950, Speaker A: So why so and what are we going to solve? We are going to solve mainly Painful UX. So wallets actually they require education from end users. They are required to use DApps. They must be configured before use. And let's be honest, Wallace, UX isn't friendly at all. We have this painful management of the seed phrase, and this is something restraining mass adoption. So how are we going to solve this? What we implemented, we use a web button to securely generate a private key, store it in the secure enclave of your smartphone, of your smartphone that you already own.
00:13:21.950 - 00:13:56.214, Speaker A: We just combine this with account abstraction implementing through the ERC 43, 37. And by this combination, just performing easy and familiar biometric authentication, you will create your account mint an NFT and John will perform the demonstration of the simplicity of this solution. Okay, so let's try to do a live demo. So this is a D app. This is an app. It's a photo booth. Sorry.
00:13:56.214 - 00:14:30.722, Speaker A: To allow me to take a selfie or sit on IPFS and just having a souvenir of the event, right? Okay. For this demo, I will be a newbie I don't know what is ethereum, I don't know what is a token, I don't know what is a chain, I don't know what is a fees. I know nothing. Basically, I will be my mom and I will be able to do all the flow. And at the end of the flow, I will have an account, I will have an NFT mint and all the transaction will be sponsored. So let's do a demo. Click on it.
00:14:30.722 - 00:15:00.210, Speaker A: I choose a username. My username is Qtqd. Click on I'm good. I will do a cool selfie. It will be mint on IPFS and hopefully if the demo works, it works awesome. No demo effect. Okay, what is going on here? This is a native UI already supporting all browsers and all OS.
00:15:00.210 - 00:15:25.314, Speaker A: Okay? It asked me to create a pass key. So I will do it. I will continue and I rehearse. Yeah, sorry. So by creating a pass key, a pass key is basically a private key store into the device. So I'm allowing it to do it. So I'm going to create a pass key.
00:15:25.314 - 00:15:42.570, Speaker A: And you don't see me, but I will use touch ID to create it. So I use touch ID to create it. Just put my finger and basically it's magic. So you don't see nothing. It's normal. So basically you are going to tell me that okay, I just meant an NFT photo. It's boring, we don't care.
00:15:42.570 - 00:16:01.790, Speaker A: But under the hood, what happens is that we create a private key. The private key is stored into the device, into the secure on cloud. This is not a software wallet. It's not stored into the browser. It's stored inside the secure and cloud. This pass key has been used to sign a message. So basically we sign something.
00:16:01.790 - 00:16:35.980, Speaker A: We sign a new transaction, basically another operation because we are using the four free, seven EIP. And after that we just did the fourth with Receive and Flow, we create an account for the users. We auto list the public key associated to the private key and we sponsor all the transaction we mean to NFT. If I take a look to the transaction, for example, it will be here, you will see that we have absolutely everything, all the deployment of the account, et cetera. Okay? And I will just show you a second scenario. So, long story short. Yeah.
00:16:35.980 - 00:17:24.452, Speaker A: At the end of the flow, my newbie user added NFT on chain and doesn't even know that he choose the network. So I will just show you a second scenario. It will be very useful too. Again, new safety at this time, instead of generating the pass key into the device into my laptop, I will generate it using my mobile phone. What's happening? Instead of clicking on continue here, I click on use a different device. I will display a QR code, scanning it. And now the generation of the pass key is directly on my mobile phone.
00:17:24.452 - 00:17:51.550, Speaker A: And instead of using a touch ID, I can use face ID. All the flow is reactive. The pass key has been generated on my mobile phone. Okay. The user operation has been signed into my mobile and the output has been sent back to my laptop and everything has been broadcast at the end. Same state the user has an account with an NFT. All this transaction has been support by the D app application.
00:17:51.550 - 00:18:43.170, Speaker A: Yeah, that's it. And we have everything on chain and you can reuse the pass key to send absolutely what you want. If you want to send ERC 20, if you want to send the ERC 721, absolutely everything. So at the end, you have your pass case even either into the native device or on mobile, and you can use it to sign absolutely everything. Okay, thank you. It okay. So what does the future look like? Basically this, what you just seen is much more secure than any software wallet.
00:18:43.170 - 00:19:11.874, Speaker A: You have nothing to install. Most of the device you have in your pockets are already ready to support it, and it lowers the cost to enter webtree secretly. You don't have to buy a hardware wallet from day one, thus making webtree much more inclusive. And there is no more specific web3 flow. This technology is already being used by many, many services that you use all the time. Amazon, Everything, GitHub, and no more seed management. So that's it.
00:19:11.874 - 00:19:42.346, Speaker A: We sold onboarding. Thank you very much. Awesome. I love more abstractions. All right, we're going to go to our third finalist for the day. Please welcome save create two Hi, all. If you've tried to deploy a smart contract to the same contract address on multiple chains, you know that MultiChain contract deployments are really hard right now.
00:19:42.346 - 00:20:12.014, Speaker A: If you try and do that, you kind of have two options. One, you can use a private key based wallet and pray to vitalik that you don't lose the private key and mess up your system's ability to deploy on chains or accidentally sign the wrong transaction and ruin the nonce. Or you can have a unique gnosis multisafe MultiChain a unique gnosis multisig on every different chain you want to deploy on. But then you're managing like 20 different multisigs. And it really is just a pain to do this. But there's a solution. This is safe.
00:20:12.014 - 00:20:47.840, Speaker A: Create two. Safe create Two is a tool that lets you deploy MultiChain smart contracts from a single gnosis safe on a single chain. You no longer have to worry about the security issues of private key based deployments, and you don't have to manage a whole bunch of different multisigs. You can just deploy from one place on one chain anywhere you want. So it starts out with a little CLI. Let's say I want to deploy this smart contract on every different EVM chain. I would start by running this command, which uploads the bytecode and gives me a nice little link to work with.
00:20:47.840 - 00:21:18.738, Speaker A: I'll just copy and paste this and bring it over to my browser. Now I'm connected with my wallet, and I choose one of my nosis safes to use for deployment. In this case, I'm going to use it. Now, Safe Create Two knows it with the bytecode, and it'll show you which address you're going to deploy this bytecode to on every chain you want to deploy to right off the top. And if you change the salts, you'll change the address you deploy to. You can see we've deployed this particular smart contract to a few chains already. We've got it on gurley, polygon and arbitram.
00:21:18.738 - 00:22:03.186, Speaker A: So we pop open the different Ether scan links, we can see that we do indeed have a contract at this address on each of the three chains. So if we want to deploy it to a new chain at the same address, it's as easy as clicking a button and signing a message. This message that you're signing is initializing a Nosisafe transaction that will do this deploy on the chain. This deployment happens over a bridge, so the only message you're signing is for a transaction on the single chain Nosisafe. You don't need to deploy a new nosis safe on the chain you're deploying to. All you worry about is your smart contract and where you want it to end up. When you sign this message to Gnosis, it will execute a transaction using Axilar or your favorite bridge, and do the deployment on the chain using the Safe Create Two factory.
00:22:03.186 - 00:22:37.266, Speaker A: What this means is you no longer have to worry about setting up a whole crazy deployment environment just to get your smart contracts at the right address across chains. You can do this pretty close to out of the box. And you can see once we start doing a couple of transactions over Axelr, they just go through nice and smooth, and you get the deployment at exactly the address you want to deploy to. This is really helpful as we go into this L2 roll up future, where there's going to be hundreds of chains that you're deploying on. Now, it's super easy to deploy on all of them at the same address to give your users a great experience with your DAP. So that's safe. Create two.
00:22:37.266 - 00:22:53.940, Speaker A: If you're interested. We'd love for you to check it out. And if you want to chat about cool things like this, hit me up on Twitter. Thanks. All awesome. Thank you. All right, demo number four, please welcome Real Return.
00:22:53.940 - 00:23:17.282, Speaker A: All right. Good afternoon, everyone. How do I get started? It's not presenting the same. It's not presenting the right thing. Mirror. All right, there we go. All right.
00:23:17.282 - 00:23:47.930, Speaker A: So before I get started, I wanted to do a quick poll to the audience. Like, how many of us still remember the GameStop saga two years ago, 2021? Like, raise your hand. All right. A lot of people do, right? And that was a big event and made the subreddit Wall Street Bat pretty famous. It's still pretty famous today and pretty active today. A lot of people doing, I don't know, like Yolos or gambling or technical analysis there, but also other things happening there as well. Those are like fake game posts.
00:23:47.930 - 00:24:29.900, Speaker A: Look at this dude claiming that he had 5000 return in a day, percent in a day. And this one had, what, like 269,000% in a week. So up till today, you have no way to really verify or unverify it. Like you can just examine a screenshot saying, this doesn't look right, or just do some number games on the numbers and say, this is definitely not true. But no, you don't have a way to say this is not true. But this changes today. So after today, if someone tells you that they had a 200,000 percentage return, you tell them that, show me the proof or get the fuck out.
00:24:29.900 - 00:25:01.490, Speaker A: And then they will say, all right, it's just 4%, but this time it's real, and I proved it on Real Return. And you say, like, what the hell is Real Return? Enough talking. I'll just do the demo. So this is real return. This is our open investment return leaderboard, which only allows real, verified returns. It has weekly, monthly, yearly, of course, biggest gains and also biggest loses. And so now I want to join the leaderboard.
00:25:01.490 - 00:25:46.350, Speaker A: So I will choose. Right now we only support connecting wallet. Of course this is now, but later we will support more like connecting your Reddit, connecting your Twitter, you sign in with your wallet address. And now I want to prove my investment return on my Robinhood account. So this will lead us to the Jomo app. I'll explain what happens once I log in there and I'll prove monthly, enter my app, my Pay code. So rest assured that this does not mean we have access to a username or password.
00:25:46.350 - 00:26:46.070, Speaker A: So what happens underneath is instead of the browser setting up a TLS connection directly to the Robinhood server, it actually sets a connection, three party TLS connection with a Notary server on the side as well. So the beautiful thing with this is the Notary server doesn't really see any unencrypted data passing through this TLS connection. But because it has a row in it, it knows part of the key. It can attest that this transcript did happen and also generate a commitment about I mean, a merkel commitment about the transcript. So it doesn't know the content, but it can generate this commitment and sign it. So the prover can then selectively disclose what they want to disclose, but they cannot tamper with it because there's this commitment constraining it. So now we've down this proof and then we can prove I have a zero point 41%, which is pretty low, I'll prove it to Real Return and we go back to here and we can share this to the leaderboard.
00:26:46.070 - 00:27:55.974, Speaker A: And now in monthly we have a new one which is zero point 41%. So what happens under the hood is that Real Return used TLS Notary, which is a great public good and open source project supported by Ethereum Foundations, which allows you to export data from any web applications and prove facts about it without compromising privacy. And also we use Jomo, which is something we built, which is an implementation of TLS Notary which helps you to navigate those complexities dealing with this technology and allows an additional layer of CK so that we can further hide the information extracted from the website. So why use real return? Of course, obviously you can make your investment returns legit and then you can add reputations as an investor to your Linked Social account or Wallet addresses. We'll publish this Linked Social Wallet account and return to a smart contract. So later, if you want to target do a special promotion to people with great or not so great investment skills, you can do that. And also you can compete your investment return with peers from other exchanges.
00:27:55.974 - 00:28:44.682, Speaker A: Right now we only support Robinhood, but we will support more as well. So it's all consistent, unified leaderboard for everything. Afterwards, we want to enable more things apart from just more brokerages, we want to enable more communities gated based on proof of return for deeper discussions on engagement. And also not just proof of return, right? It's like proof of account ownership. Maybe you can prove your Tesla owners or you can join a chat with other Tesla owners, you can expand this to other proof types and then we can allow more applications to use this instead of just showing off our leaderboard. For example, you can target a user that has very active trading activity somewhere and give them a special promotion to come and join test out your product as well. So yeah, this is us.
00:28:44.682 - 00:29:18.354, Speaker A: We actually published this to production, but it does require a bit of faster internet Real Return XYZ. It does require you to have at least two megabytes per second internet right now to use it, otherwise it gets stuck. But we will fix it soon as a fast follow up. You can also follow us on Twitter, on Discord or head to Joemo ID if you want to explore more use cases with us. All right, thank you. Awesome. Not only was that a cool demo, it worked in production.
00:29:18.354 - 00:29:24.230, Speaker A: That's awesome. All right, next up, our finalist number 50 trust Bounty. Please give them a big round of applause.
00:29:28.910 - 00:29:32.780, Speaker B: Hey, guys, I'm Anto and my team will introduce themselves.
00:29:33.470 - 00:29:36.294, Speaker A: Hi, I'm Ethan. Hey, I'm anoop.
00:29:36.422 - 00:29:52.702, Speaker B: Okay, so who here has heard of Bug Bounties? No one? Okay, bug bounties, right? So it's when a hacker finds a bug in your project and you want to incentivize them to report it to you, then exploit it. So that's the idea behind Bug Bounties.
00:29:52.766 - 00:29:53.234, Speaker A: Right?
00:29:53.352 - 00:30:39.482, Speaker B: And we have a lot of this in webtree, but Bug Bounties are a trust game. So let me pull up my slides. Okay, so we are introducing Zero Trust Bounties, where we are trying to disrupt the regular bug bounty scene, where we trust an intermediary with valuable information. Businesses trust them with proprietary data, whiteheads trust them to do the right thing. And there have been instances where these platforms have been hacked. Businesses may not behave legitimately, whiteheads may not have gotten paid fairly. So these are the problems that we are trying to fix.
00:30:39.482 - 00:31:33.902, Speaker B: So how do we do that? So for example, you can think of a web vulnerability as an API request and a response. And using TLS Notary, we can attest to the validity of the response. And the secret sauce, which is what the White hat is doing, is in the request, the Http request. So using TLS Notary, we can hide the request, but a verifier can attest to the validity of the request and the response. So when I share the whole transcript with a business, they can be assured that this was a legitimate Http request and this was the response from our web server. So we'll have a live demo of that. And then the next problem is how do white hats get paid fairly?
00:31:33.966 - 00:31:34.338, Speaker A: Right?
00:31:34.424 - 00:31:44.514, Speaker B: So it's up to the businesses to set the price of their bounty. So we are solving that using the lit protocol where the request is the secret sauce.
00:31:44.562 - 00:31:44.870, Speaker A: Right?
00:31:44.940 - 00:32:32.888, Speaker B: We encrypt the request using a threshold scheme and you can set a condition that I need to get paid like $100 on this wallet. And when that happens, the decryption will happen using the lit network. So it's trustless. Whenever the business chooses to pay for your bugs, they'll get access to the decryption keys. And let's do a live demo now. Okay, so what we are doing right here is choosing to hide the Http request headers and the body using option three. This is all on GitHub if you wanted to.
00:32:32.888 - 00:33:12.336, Speaker B: And it's negotiating an MPC TLS connection with the TLS Notary server that is running in my docker. And you can see that the proof is generated. So now let's just verify the proof and let's do that. And you can see that the response has a lot of data, right? So this is what a typical Http vulnerability would look like. This shouldn't happen. But if you scroll up, you can see my request is fully hidden. I don't know what was the request I sent, but the proof proves that when I executed.
00:33:12.336 - 00:33:54.224, Speaker B: That request, I got this response and it looks vulnerable. So as a business, I want to buy this. So what do I do? So here we use the lit protocol where a white hat can update their bug bounty report here. So this has all the information in clear text, and then you encrypt. Okay, so it is encrypted now, and you can store this on, like, IPFS or like, hover, and they can get access to it. But to decrypt, there is an error. Now because I am not authorized to decrypt.
00:33:54.224 - 00:34:54.156, Speaker B: So in this demo, I have set a different wallet as a condition to decrypt this report so we can switch to that. Now, if you hit decrypt, we sign the request and you can see that the file was decrypted. And if you want to look into the internals of how this protocol works, you just go to the console and you can see that the decrypted data is out here and it's an MPC scheme. So that's what we are doing. And what this enables businesses to do is host their own bug bounty programs. And you can cut out the middleman, you can keep your data private, and the white hats can choose how much do they want to get paid for the bugs they find. So that's basically it.
00:34:54.156 - 00:34:57.490, Speaker B: That's zero trust. Bounties, thank you so much.
00:35:01.620 - 00:35:51.310, Speaker A: Awesome. Another sweet, slick demo. Let's welcome our next team, Xave. It's because the WiFi is going up right now. All right, guys, we're going to use a hotspot for this. We're Xsafe. My name is Adam Kukalich.
00:35:51.310 - 00:36:36.778, Speaker A: I'm Justin. I'm Hector Quinones. I'm Christian Figueroa. Okay, so what exactly is Xsafe? I'm sure that many of you guys have similar contracts on many different blockchains, and you may even have similar multi sigs that govern those contracts. And whenever you need to perform an admin function on all of the contracts, you need to sign a message on chain one, switch to chain two, sign a message on chain two, and so on for all of the chains. And this is a really cumbersome process. And the reason this is a problem is because every single signature on every single chain is unique.
00:36:36.778 - 00:37:38.740, Speaker A: The reason for that is because that what you are ultimately signing is a transaction hash, and inputs to those transaction hashes on every chain are unique. For example, chain ID or different nonces on the multi SIG. So we built a solution to condense all of those signatures down into one signature that can be propagated across all chains. And the way that this works is we've used a smart contract that we install as a Gnosis safe module, and we've actually removed the chain ID requirement, which gives us this feature to be able to send it to every single chain. And we've also created a system to keep nonces in sync across all chains. Given this, we can sign once and approve admin functions on all chains. So let's do a demo.
00:37:38.740 - 00:38:43.810, Speaker A: So here we have an example admin function of what you might be. By the way, look at our great UI here, guys. So an example admin function might be just to increment some counter. So here we can see the counter is six, and what you see on the left, this stack of three on the left is on Go Early, and the stack of three on the right is on polygon. So we are interacting now with Xsafe on both of these and we're going to request the Git transaction hash on both. And one of the things you'll see here is that these transaction hashes are the same 30 AB, 530 AB five. Okay, if we come over here and we sign those guys, we can get the signatures.
00:38:43.810 - 00:39:30.680, Speaker A: So I've already pre populated these commands over here. So I'm going to execute these on both chains with those signatures and we should see both of the numbers increment. So here's one on the left on Guerli, and here's this. And now we see seven here and we see seven here. And this same process with one signature can be propagated among N different chains. And just to show what this looks like in relation to the Gnosis UI for the polygon Xsafe, we install a module right here. This is the module that we're talking about and we do the exact same thing on Go early.
00:39:30.680 - 00:40:20.858, Speaker A: And we should see if we update these that I'm not seeing the contract interaction here. Give me a secondary. Yeah, sorry guys, not seeing that here. But we have proof that it did indeed update here so we can move on. You guys are next. These past 24 hours have proven beyond fruitful for us. In our tests, we have proven successful protocols on polygon and Goreli ETH, and it's successfully achieving single click multisig aggregation.
00:40:20.858 - 00:41:15.242, Speaker A: But that's only the start for us. So the next plans that we have for this project that we have is we want to do some more robust edge case testing, which in layman's terms is we want to essentially try to find a way to break our own function to make it as robust as possible and instill a whole bunch of safeguards to prevent issues that can propagate on one chain that can transfer to other chains. We also want to do some intensive security audits to again make this a more robust system. And after that, basically, we're just going to create a beautiful little front end user interface and we hope to see mass adoption for this idea relatively soon. So yeah, thanks guys. Thanks guys. Well, congratulations.
00:41:15.242 - 00:41:35.106, Speaker A: Just because it didn't show up on the UI does not mean the network doesn't have it. But that was a really cool demo and a super useful utility. All right, we're halfway there, so let's get excited for the next one. Please welcome fast. Hey, it worked. All right. Hello everyone.
00:41:35.106 - 00:42:04.490, Speaker A: My name is Sriank and I'm with Fast. Two days ago when we came here, we were challenged with a question. How can we onboard the next billion users onto crypto? And to get a better sense of this room, I just want to get to understand how many of you have a MetaMask wallet that you actively use. Okay, that's a few hands up. And how many of you all are on Telegram. Okay, that's significantly higher. Now what we want to see is if we can fix this disparity.
00:42:04.490 - 00:42:41.114, Speaker A: And our hypothesis was that you can use AI to enable higher distribution. So Faas stands for Facial Address State Transfer, and it allows two users to interact on chain by just snapping pictures. Now, to show you what that actually looks like, we have DB showing you how it works. Thank you, Sriyank. Let's get right into it. We're just going to go through a quick demo of the platform. So it is a Twitter, it is a Telegram bot, and the demo gods are not being nice to us.
00:42:41.114 - 00:43:12.990, Speaker A: So let's just give it a second, please. Right, there we go. All right. So the way the platform works is it's just the normal Telegram bot. You go there. The handle is called official Fastbot. It's right there.
00:43:12.990 - 00:43:52.636, Speaker A: Now I just need to take a cool. All right. So as you can see, I just need to click on the start button right here. When I do that, it's going to ask me to take a selfie of my it's just going to ask me to take a selfie. I'm going to go ahead and do that. Right, there we go. Pretty excited for that selfie.
00:43:52.636 - 00:44:08.184, Speaker A: Give it a second. Our AI image recognition platform is working on the back end to give you a wallet address. And there we have it. We just got a wallet address in Polygon Mainnet. This is our wallet address. And we also like just to onboard people. We gave 0.1
00:44:08.184 - 00:44:27.790, Speaker A: matic to everyone by the time this fixes. So we also got Karthik over here who graciously agreed to be on the platform. So Karthik is already onboarded. Now what I'm going to do is I want to send matic to Karthik. It is as easy as just taking a selfie with Karthik. So for next time, going to be a real live demo. Let's see how this goes.
00:44:27.790 - 00:45:05.038, Speaker A: So we could figure out the difficult part of the blockchain, but we can't figure out screen metering. I'm sorry about that. Figured out AI, but not AV. Just give it a second. We're back. All right, cool. So now I just need to take a selfie with Karthik.
00:45:05.038 - 00:45:22.280, Speaker A: So Karthik already registered for this platform. So he's already a registered user on Fast. If he was not, this transaction would have not gone through. Now the next step for me is I just go ahead and take a selfie with him. I'm pretty excited, guys. This is my first hackathon. I'm really hoping it works.
00:45:22.280 - 00:46:02.070, Speaker A: Do I want to send point one matic to him? Yes, sir. The suspense. Just give it a second and fastest processing this transaction. I just got a message. And there we have it. This is all on Polygon main net. And Karthik also received a message on his telegram that he received we're going to try something which is, can we zoom into this to show the layers transaction on my phone in my hands.
00:46:02.070 - 00:46:25.676, Speaker A: That's the message I just got of the 0.1 matic. That's amazing. That is the demo. And now Aditya is going to take over. Can't figure out PPDs, can't figure out AEV, but can't figure out AI and Blockchain. Yeah.
00:46:25.676 - 00:46:57.416, Speaker A: So when we first got started with this, we wanted to figure out what you can do. And the notion that DB just showed is how you can transfer money, but you can extend this far beyond that. You can be completely chain agnostic, function agnostic, and then enable things that we just haven't seen before. I'm sure you where we're going next. We have aditya. Thanks. So over just this past weekend, we were able to onboard almost 50 new users and we foresee this being the new way, which we bring the next 1 billion users onto web3.
00:46:57.416 - 00:47:18.800, Speaker A: We're super excited about this, and for some closing thoughts, I'm going to hand it off to Liam. Thanks. Yeah. As mentioned, we're very excited to be building on this. If you are too, please find us after the hackathon event. And thank you for listening. Cheers.
00:47:18.800 - 00:47:30.820, Speaker A: All right, that was an awesome real time demo, so congratulations. Next up I want to bring on Team ASR. Please give them a massive round of applause.
00:47:35.560 - 00:47:47.400, Speaker C: Hello. Hello. So we're team ASR. Great to be here. My name is Alyssa Karchmer, and I'm here today. Sorry. Oh, we lost the screen.
00:47:47.400 - 00:47:48.330, Speaker C: Oh, okay.
00:47:50.540 - 00:47:51.144, Speaker A: Is it good?
00:47:51.182 - 00:48:05.920, Speaker C: You want to do it? Okay, so we're team ASR. My name is Alyssa. I'm here today with the lovely developers that help make this all happen. Henry golden crystal ty and Sripriya. Srikumar. So picture this. You own a smart contract.
00:48:05.920 - 00:48:40.232, Speaker C: You lose the private key associated with the EOA that owns that contract. Today, you're kind of screwed. But with ASR not anymore. ASR enables a user to recover ownership of the smart contract without using the signing keys from the original EOA. How do we do this? Well, we link the ownership of that smart contract not to an address, but rather to a person. I'm going to pass it off to Henry to tell you more about how this all happens. Remember, when we look at the demo, the screen on the right is a simulated phone screen.
00:48:40.232 - 00:48:42.940, Speaker C: On the left is our site, Henry.
00:48:43.920 - 00:49:11.280, Speaker A: Cool. Hi, everybody. So do you want to walk through how to do it? Anybody awake? Everybody still awake? We're on, like, no sleep, so anything's possible. So what's happening here? The first thing you do when you come into our app is you want to deploy a contract and be the owner of that contract. So first thing you need to do is sign in with your wallet. We use third web connect with MetaMask. The next thing you need to do is sign in with WorldCoin.
00:49:11.280 - 00:50:04.384, Speaker A: And what this is doing right now is generating a request for you to sign a proof with your World ID. And that proof comes with a unique Identifier called a nullifier hash. So essentially what we've done is we've taken the Open Zeppelin ownable smart contract and made a couple of very lean enhancements to it. So in the constructor, when you deploy an ownable smart contract, you pass in a World ID proof. That proof gets verified. The smart contract stores a unique Identifier of that proof that the owner can use later to claim the smart contract from a different address. So in our flow here, the first step is to deploy.
00:50:04.384 - 00:50:46.660, Speaker A: So what we're trying to do is connect to WorldCoin. Sometimes in testing, this is instant, sometimes it's five or ten minutes. But don't worry, we have a plan B. So what we're going to do, I think, is we deployed it backstage right before we came out. So if we want to show that deployment, this is a contract we deployed right before we came out here. So, like I said, this hinges on the concept of a nullifier hash. It's unique based on three things your World ID, the app you use to create the signature request, and the button you clicked on that app.
00:50:46.660 - 00:51:19.752, Speaker A: So the only way to recreate that proof is to be the same World ID holder logged into our app. So we've deployed a contract. The next step is to claim that contract from a new address. So the use case here is you lost the key you used to deploy initially. And again, WorldCoin may or may not work. We're hoping to get lucky, but it's okay. So if we jump over to polygon scan on the right hand side, what we're going to show is a transaction hash of a claim.
00:51:19.752 - 00:52:10.984, Speaker A: So the second change we made to the OpenZeppelin ownable contract is a claim contract method. Anybody can call this. It is not an only owner method. If you pass a valid World ID proof to this method, the owner will be assigned to the sender. This is an example of a transaction we did earlier that assigns a previous owner to the new owner. The one other thing we can show is what happens if you go to our app and you try to claim a contract with the wrong World ID. And again, maybe if we get lucky, clear the cookies is a suggestion, no? So this is a transaction from earlier.
00:52:10.984 - 00:52:45.956, Speaker A: It's okay. Also, if you go on our docs later, you can watch a video where it worked last night or this morning at 05:00 A.m., 06:00 A.m.. So anyway, if you call claim contract with the wrong address, you're going to get an error that says invalid proof. So the innovation here is, I deployed a contract, I lost the key, I can claim it with a different address. The way we've implemented this for now is to recover ownership. You can imagine this can easily extend to any other role.
00:52:45.956 - 00:53:21.504, Speaker A: So not only owner, but minter, burner, Pauser, freezer, whatever your contract may have. A simple example for an everyday user would be you own an account abstraction wallet and you lose the key to that wallet. Typically, you would need to perform a social recovery. That's one idea where you get three friends to sign a transaction and chance their ownership. That requires you to have three friends hard and have them not collude and be available. So hence the name anti social recovery. But we envision many other use cases.
00:53:21.504 - 00:53:26.980, Speaker A: Maybe, Alyssa, you want to talk about some of the future use cases of sure, sure.
00:53:27.050 - 00:54:19.604, Speaker C: So one of the ideas that we actually talked about with someone from MetaMask, which was really cool, would be the ability to recover balances from a smart contract by basically yanking the funds out of them. So if I can have a mapping of the address to the balance and a mapping of that address to the nullifier hash, then I can basically recover those funds. So that's one of the many interesting use cases that we see coming up with this. You might be thinking, though, can anyone just create a nullifier hash? Well, no, you can't. Like Henry mentioned previously, this nullifier hash is generated by the unique action. Clicking a button, the app ID on our app, and then finally the unique user ID, which is your world ID. So you might be able to recreate the action on our app, but you wouldn't be able to do it because you don't control my world ID.
00:54:19.604 - 00:54:32.110, Speaker C: So that's, like Henry mentioned, the unique innovation here. We hope that developers will use this to explore many of the different use cases that we see. So excited to see where this goes, and thank you all very much.
00:54:36.560 - 00:55:15.540, Speaker A: Awesome. Congratulations. That was a really cool way to think about how to do signing better. All right, only a few more to go, so let's give a massive round of applause to Space Guardians. All right, thank you very much. We're team Space Guardians from CryptoSat, and we worked on satellite secured wallet recovery. So it's great that we're right after the previous talk.
00:55:15.540 - 00:56:06.820, Speaker A: So CryptoSat actually builds and launches satellites, like real satellites, into orbit. And we're building, using that an infrastructure for securing Web Three, an infrastructure for the network state independent of any particular jurisdiction. And those are some footages of the launches of our first two satellites, and we're working on the third. What enables us to do what we'll show is some previous thing we've done with experiments on the International Space Station, launching satellites, participating in the Ethereum Foundation KCG ceremony from space. So essentially building a trusted execution environment that's outside of any physical reach and is completely tamper proof. The problem that we worked on is essentially related to regaining access to Lost wallet account. So there's no forgot my password button, it doesn't exist in web3.
00:56:06.820 - 00:56:57.598, Speaker A: And you need to do things like, for instance, Social Recovery or backing up your keys. So social Recovery is a great thing, but there are some security issues with that guardian security on the ground can be compromised if somebody hacks into all the Guardians you entrusted with your keys and they can also collude. Potentially. We're eliminating this problem by essentially storing keys in space on a satellite. So no ground infrastructure compromise can affect that. And even if there's access to the APIs to recover keys, at the least you'll get an audit trail and enforcements of different policies before the key will be released to the user. So how does it work? We first set up the key Recovery by entrusting some of our friends, some of our Guardians with approving Key Recovery.
00:56:57.598 - 00:57:47.490, Speaker A: But we're storing the actual key encrypted on a satellite by accessing its API and we'll show it in the demo. When, through a disaster, Joe loses access to his keys, joe will approach the Guardians and ask them to help him with recovery. The Guardians will contact the CryptoSat API and basically approve the recovery. The satellite will create an audit lot of that and approve the key release to created during the hackathon. We created two repositories. One is Satlock, the other one is Satlock API, where Satlock streamlines all this process by interacting with MetaMask to streamline it and make it simple. And the Satlock API can actually run the satellite and runs on the digital twin.
00:57:47.490 - 00:58:39.360, Speaker A: Let's move on to a quick demo. So here I'm going to start with back in my account, and I took a note of a few keys numbers I can get from MetaMask just for speeding it up. So we're going to back it up here. I'm pasting the private key that I'm going to encrypt under the satellite public key and submit it to our API. And I'm also going to designate two Guardians. So we went with for simplicity with only two, but it can be extended to more. And I'm going to post their public keys that the satellite can verify their signatures against.
00:58:39.360 - 00:59:01.830, Speaker A: Later. Two Guardians are designated. And now let's say I lost my keys. So I want to start a recovery on a completely fresh MetaMask wallet. So I'm starting the Restore Recovery procedure. And for that, I need the guardians. So they need to approve the recovery.
00:59:01.830 - 01:00:04.286, Speaker A: I'm getting in touch with my friends, telling them, hey, help me with this key and help me get access to the wallet address for which I lost the private key. So they're approving that two of them. And now if I did everything correctly, and I should be able to get my new key, get my sorry old key. I'm telling which wallet address I want to recover, so the satellite that can store many of those can give me the right keys, and it releases it only because it was approved by the Guardians already. So that's the private key, and now I can import it into my fresh MetaMask, and I got my second account restored. So I restored the key, and there's an audit trail and a log of all of that, so it cannot go unnoticed if it's not unauthorized properly. Thank you very much.
01:00:04.286 - 01:00:30.822, Speaker A: Welcome to Join the Waitlist if you want to get posted on updates for this project. Thank you very much. Did they just really talk to a satellite just now? What? That was awesome. All right, a few more to go. So let's give a massive round of applause to Conscious NFT. Hey. Good afternoon, everyone.
01:00:30.822 - 01:01:12.238, Speaker A: We're excited to be here today. I'm going to share with you Conscious NFT. This is a set of AI tools that can bring your NFTs to life. Have you ever wondered what your NFTs might say if they could talk, how they might communicate between each other and with the real world? What we're bringing is a set of AI tools that NFT founders as well as individual owners can use to bring their communities, their lore, and the personas of their NFTs to life. As an individual founder, you want your community to come together around a story. You want them to help build the lore and tie bonds with each other. Using our tool set, you can set up that lore as an AI engine and then create interactive scenarios for personas to interact with within those.
01:01:12.238 - 01:02:07.960, Speaker A: So imagine two PFPs having a battle amongst each other, like Battle of Wizards or other scenarios, and then win prizes for executing those. You can also incorporate real time events on chain using graph monitoring, whether it's like lore being written to chain or even transactions on chain that then get incorporated into the AI lore of that project. As an individual owner, you can create a distinct persona, provide a backstory, a name, a history, a motivation for your individual NFT. Once you have a model that you like, once you've got great prompts, you've got a fine tuned model, you can then write that to IPFS and mint a token that records the hashes of those IPFS. So now you have an LLM model that you can prove you created and you own. In addition, you could integrate with Twitter and Discord. So now your PFP not only can chat but can tweet and can come into the discord and communicate with the other founders as if it's a member of the community itself.
01:02:07.960 - 01:02:35.106, Speaker A: An example of a challenge. The wizard battle is one. A rap battle might be another. You could also do dating, where you have two NFTs that go out on three dates. The one persona talks to the other persona, and then after the chat takes place, you grade it, determine if they fall in love, and if they do, you take a stable diffusion description of the two images, combine them together, and mint a child NFT. Like CryptoKitties DNA. The tech stack is NextJS.
01:02:35.106 - 01:03:04.200, Speaker A: Postgres react tailwind. We used one inch and Wallet Connect to connect to the individual users and bring back their NFT information. For the AI, we're using OpenAI, but it's swappable with an open source LLM. Just for time's sake, we use their API, and then we're writing the actual model to IPFS itself. We didn't actually get to the subgraph implementation, but the idea would be that you'd read from subgraph to record on chain transactions. So with that, let me show you how it's done. This is the actual application.
01:03:04.200 - 01:03:44.660, Speaker A: Start with Connect Wallet. This is just to authenticate the user, understand that they're connected, can be multi chain. Doesn't matter if it's Ethereum or layer two starts with the project owner. They would come in, they would provide backstory for their project, a history of the lore, different scenarios or challenges they want their personas to complete, and potentially prizes that they might want to give out for those users that execute on that. This case, I'm using a noun scenario. When an individual owner comes in, it would connect to their wallet, understand their ENS name. They'd be able to pick from the NFTs that are in their wallet and then provide the backstory for those particular NFTs that they want to create and bring to life.
01:03:44.660 - 01:04:32.178, Speaker A: One of the concepts we want to integrate is incorporating individual ENS names, not with the wallet itself, as most of us know and can do today, but with the individual NFTs. So each NFT in your wallet has its own distinct name. Once you've got all that backstory in there, you submit it. Now you can start to play in the playground and interact with your persona. Hey, what adventure do you want to get up to today? What's this doing is on the back end, it's taking all that context that we just put in, bundling it together into a prompt. We'd want to add an additional layer of fine tuning where they load in 5000 transactions communications to give that a distinct voice. What it does is it adds that to the communication and it responds within the persona itself.
01:04:32.178 - 01:05:16.500, Speaker A: Once you like what you've got, you feel like you've created a persona you really like and you want to mint, you can click Mint your persona. What this does is takes the prompt, it takes the fine tuning. When we have it, the last layer writes it to IPFS, takes those IPFS hashes, and then combined with the photo, creates a new token that you have proof of ownership of that model. This would work for NFTs. It could also work for other LLMs that you want to record on chain. If you wanted to take your own personal communication history, a celebrity's personal communication history, record that as a large language model and then hash it on IPFS and put it into a token, you now have the proof of ownership that this was Me at one time and that people can chat with, interact with. You can charge for those interactions going on.
01:05:16.500 - 01:05:52.590, Speaker A: So to recap, we built a way for people to create unique identities with their PFP personas. You can build collaborative lore, have multiple people participate, all build into one large, large language model. You can have challenges, quests, dating, fighting, secure those narratives with IPFS and integrate with social platforms to build their own followings and open the door to the metaverse. Thank you very much. That was super cool. All right, three more to go, so let's welcome Mevictim Rebate.
01:05:59.970 - 01:06:37.046, Speaker C: Hi. We're mevictim rebate. Mevatax have caused hundreds of millions of dollars in loss and stymied mass adoption in crypto adoption over the past few years. Sorry, I'm a bit nervous. We believe that the future of open economies is reputation based programmatic access to protocols. To further eliminate bad actors, we built a Univ Four hook. That programmatically provides a rebate on swap fees for confirmed victims of Mev attacks.
01:06:37.046 - 01:07:26.010, Speaker C: In order to token gate access to the rebate, we cryptographically proved which addresses were indeed Mev victims using an Axiom circuit on ETH Gurley. These addresses were then airdropped in ERC 721. Because there is no Univ Four contract on ETH Gurley, we deployed hyperlink on scroll, which allowed us to bridge the token to scroll and grant the token holder access to the swap fee rebate on the special Univ Four pool. In a larger picture, we proved eligibility on chain using Axiom, then used a token representation of that eligibility to unlock privileges on another chain. Due to time constraints, we will focus the demo on the cryptograph pool on the cryptographic proof using a subgraph of ETH girly transactions.
01:07:33.390 - 01:08:22.110, Speaker A: So here I have a subgraph of Unisoft V Three Gurley transactions, the last a year ago. And if I this same thing as this is how I would start to find Mev affected users. So here we just look at pools. So I'll just have a quick query that looks at the pools that have the largest transaction count. So if I just run this, I see that it's wrapped ether USDC. So I can take that pool ID, put it in this pool, it's the same thing. And I can pull up a list of swaps in this pool that were ordered by a block number.
01:08:22.110 - 01:09:01.910, Speaker A: And these are all the attributes I'm interested in. These attributes are who were the senders and recipients, what kind of gas was used, what was the gas price used, block number, things like that. And we'll elaborate on what things we're using to categorize Mev transactions. So we can take this. And then we have a little so we have. This JSON file that has all that data that we just have like the list of swaps. So it's the same thing as we copied.
01:09:01.910 - 01:10:00.730, Speaker A: So we are reading we have a Python file here that's reading from that file, right. And it is going to do some preprocessing on it and I can describe what exactly is going on here. So we have a list of these swaps. We want to filter for three types of three conditions to sandwich or to figure out which transactions were sandwiched. So we have if the first transaction, if the attacker's price was a better price than the person who was a victim, so they got it for cheaper. We're looking at the same pool and the next price, which is the attacker was able to sell it for a higher price than the person who the victim was able to buy it for. And these are also we're looking at three adjacent transactions in a block.
01:10:00.730 - 01:10:40.250, Speaker A: So these are like the sequences, they're all adjacent. So we have like a prior current and a next. And the current is the victim here and the prior is the buy order of the attacker and the next is the sell order. So if we run this, we get the potential sandwich attack blocks. And now we'll see how we can take these inputs into an axiom contract or Axiom circuit to figure out to create cryptographic proofs about it being a sandwich attack using on chain historical queries.
01:10:43.250 - 01:11:28.362, Speaker C: Okay, for the purpose of this demo yeah, I'm going to use this bottom sandwich, which we know is actually a sandwich. Cool. So we're going to go to the Axiom ripple. What this circuit takes in are three different transactions. So you have the front runner, the victim, the back runner, and then we also have the log index of each of those. So from the data that was previously shown, how we got the log index was just taking these transaction IDs, going to Gurley and going to the log and finding the swap. And the reason we do that is because this data wasn't returned by the subgraph.
01:11:28.362 - 01:12:04.018, Speaker C: This is index six. Let's go back to here. So for this circuit, how we verify that, yes, this was indeed a victim of a front runner is. After parsing through this data, the first check that we check is the gas price limit of the victim is indeed less than the gas price of the front runner. Because we know that the front runner wants to execute their transaction as fast as they can. The second thing we check for is that this is in sequential order. The front runner occurred first you have the victim, then you have the back runner.
01:12:04.018 - 01:13:05.770, Speaker C: The third check we check for is that all of these are within the same block. And then the final check was a little rougher. We had to do some data manipulation since in ZK you can't really work with negative values and numbers less than one decimal points. So with the data that's manipulated, what we're checking is that the prior price. So the front runner got a better deal than the current price, and the current price is also lower than the final price, showing that the victim well, the front runner made money on this. And after this all passes, what we get back is a result of one shown right here. We generate the key, we generate the proof, give it a second and then we can query this proof and show that this victim was indeed a victim of front running and use this in our NFT.
01:13:05.770 - 01:13:43.090, Speaker C: I'm going to just show what happens when this is actually not a valid scenario. So we'll go back to these results. I'm just going to take a random transaction. Let's paste this in the back runner and we're going to expect this to fail when we test the circuit. So, yes, check the developer council. The circuit was not satisfied. So if you were to call this in a solidity contract, what you're going to get back is no result, showing that it was not a victim.
01:13:43.090 - 01:14:00.220, Speaker C: So that's the circuit. And then for a future roadmap, we're going to focus on a better UI and we're going to create this entire flow and put it in a library. Thank you. Nice.
01:14:01.090 - 01:14:29.686, Speaker A: Amazing. All right, two more finalist demos to go, so let's give a massive round of applause to Framed. Hi, guys, I'm Joey and this is our incredibly talented team. This weekend, we built Framed, a social game with fully on chain hidden mechanics. I guess this one. So we know that Web three is the future of finance. I mean, that's why we're all here.
01:14:29.686 - 01:14:54.666, Speaker A: We have DFI protocols, NFT, marketplaces and lending. But the problem is, it's so boring when number doesn't go up. It's not fun. Usage plummets, people leave the space. It sucks. I mean, why is it hard to build fun games on blockchain? How can we make Web Three experiences that are accessible to everyone? Well, we know that blockchains are transparent, that's kind of the whole point. But for games, it's not really ideal.
01:14:54.666 - 01:15:30.086, Speaker A: So think of some games you love, even board games like Monopoly, Uno or Sellers of Katan. They all involve hidden information, your player hand. It wouldn't make sense if you're going to show everyone your player. So until recently, hiding stuff on chain wasn't really possible. But now, with the emergence of fully homomorphic encryption fhe, we were able to build a complete fully on chain encrypted game. You may know of Mafia. So we built basically that game, except we reskinned it to be about an art thief.
01:15:30.086 - 01:15:59.746, Speaker A: Each player has a secret role, such as thief, cop or detective, and they can perform secret, like, different actions against each other. I'm not going to go too much into the rules here, it's not really the point. But let's just go into how the game works. So we have three windows here. We have one where this guy is logged in. We have one where the Pineapple guy is logged in, and we have one where this guy's logged in. So I'm going to go ahead and press Begin Game.
01:15:59.746 - 01:16:23.894, Speaker A: And what that's going to do is our smart contract. The blockchain is going to assign a secret role to each player. Now, this is not going to be revealed. And let me press this again. Let's confirm it. It's going to take about 8 seconds. And the blockchain is assigning a secret role to each player.
01:16:23.894 - 01:16:51.044, Speaker A: So we're not going to know who is who. Let's just wait for this to go through. I'm going to cancel those two. And now let's refresh. So I'm going to refresh on all the pages. So now we can press this View role button and it's going to tell us what we are. But no one else can see this.
01:16:51.044 - 01:17:24.100, Speaker A: So we press View role and okay, so we're the thief. Your role is thief. So we can go ahead and kill someone. Pretty dark. Let's see this role. Okay, Detective, so we can go ahead and check who the thief is. And this guy, the car guy, just sign one, reject the others.
01:17:24.100 - 01:18:18.130, Speaker A: So he's the cop, so he can save the guy getting murdered. So we're not going to go into every single game state in the whole thing. But this is basically the proprietary, the cool thing, the fact that you can have these secret things. This guy's a cop, but no one else can see that. So I'm going to let Remy go into some of the technical details here. Yeah, so as previously explained, so fully transparent blockchains are very limited for gaming because everything is public and the fund mechanics oftentimes have to do with hidden information. And so far ZK has been very limited in providing privacy for games.
01:18:18.130 - 01:18:59.554, Speaker A: This is because the private information has to be stored off chain, which doesn't help in coordinating multiple players in a game. So this is until recently with fully homomorphic encryption, also known as Fhe. We can allow encrypted states to directly leave on chain and also to be computable. So imagine this, you can encrypt data once and then you can add, divide, multiply without decrypting. So this really opens up for a new world of use cases and in games, new game mechanics. So we can have sabotage, bluffing, deduction resource, concealment secret alliances. So the way it works in the game is we have this special type called EU and eight, which is a hidden value.
01:18:59.554 - 01:19:42.434, Speaker A: So this is where we will hide the role of the player. And then players can take action against all the players while remaining private. So there are two things here. So we would hide the fact that let's say you are Mafia, but also we will hide who you have selected to be killed. And we do the same thing for doctors who you want to save and also decides who you want to investigate. So while building this game, we realized that actually, people playing the game Mafia in person also have to trust the human factor, which is the moderator has to be honest and also reveal true information. But in this case, we can actually just trust cryptography and fully trust that all the states are hidden and also revealed at the right time.
01:19:42.434 - 01:20:31.466, Speaker A: And if we had more time, we'll have integrated chat GPT as moderator just to make it more fun. So our tech stack here is essentially React and Wagme for the front end. We use preview for all the social logins and Inkonetwork, which is an Fhevm, essentially EVM with Fhe added as pre compile that can enable encrypted states. And our team include Jose, who did the design of UIUX, diego for infrastructure, kao for smart contract development, joey for products and app development, and myself for also smart contract development. Thank you. Now, we've seen every single theme here. You got mev fhe CK snarks.
01:20:31.466 - 01:20:48.694, Speaker A: You got all these circuits. We got NFTs and AI. There's one more thing missing, which is a touch with the real world. So for our last finalist demo, please welcome Air Tracker. There we go. All right. Hey, everyone.
01:20:48.694 - 01:21:26.270, Speaker A: So most of you probably know what AirTags are. You might even have some. They're little bluetooth beacons that Apple released a few years ago. And they have a global network where iPhones will ping off them to figure out where any of them are. So I have one in my backpack, and I can always see where it is. It turns out that shipping companies are now even replacing GPS tracking in trucks with AirTags because they're way cheaper, they last way longer, and they're very easy to deploy. But there's one huge issue, which is you can only see your Air tag location in the Find My App on your iPhone or your computer, and you can't see the historical location.
01:21:26.270 - 01:21:54.486, Speaker A: And in particular, you can't prove to a vendor or a customer that a certain truck was in a certain place at a certain time. You can just see where it is right now. And so my goal with Air Tracker is to solve that by pushing all of this location data on chain. So I'll walk you through the setup process. These are screenshots from setting it up on my iPhone. This is an Air tag that I've given a very special name, which is my ENS name followed by an encryption key. And in iOS 17, you can now share an Air tag.
01:21:54.486 - 01:22:28.710, Speaker A: So if you actually go and share an Air tag with hello at AirTracker XYZ, the location data will start to be ingested into this system. So here's that Air tag in my UI. If I click on this, I can see all of the location data from the beginning of today for this AirTag. When I started tracking it. So you can see this is where I'm staying. It came over here to the pier for ETH Global, and it's pretty much been around here ever since. But I wanted to test this out with a more realistic situation, like we would have with a shipping a truck driving around New York, for example.
01:22:28.710 - 01:23:07.922, Speaker A: But I didn't have access to a truck. So instead, on my way over here, I dropped an Air tag in a small crack in a bus. I rode the bus. I put it between the seats somewhere no one would find it. So if I add that tag here, we can see the bus has pretty much been driving up and down the whole day. It and so very similar to if this was a truck, hopefully the truck would be going not just up and down, but same idea. So how this works, you can see that with this name that we have, it has the encryption key.
01:23:07.922 - 01:23:49.306, Speaker A: So these coordinates are being pushed on chain every time that the Air tag moves more than a couple hundred meters. So we can see here we have transactions where the server is pushing these coordinates, and it's in the form of an NFT. So that means you can index the coordinates using any NFT indexing service. There's exactly one NFT per AirTag. And on top of that, the history is also pushed to IPFS. So if you want to get historical data, you can see here we have all the encrypted latitude and longitude for each step that this AirTag took. Now, in case you have some asset that you're tracking where you want notifications every time it moves.
01:23:49.306 - 01:24:16.162, Speaker A: I've integrated with Xmtp as well. So given that I have my ENS name in here, it knows the owner of this AirTag. You can see on the right hand side here, my Xmtp chat in Converse. And you can see every time one of my AirTags moves, I get a notification here with the new coordinates. And I have that Direct latest IPFS link to see the full history as well. So this is up and running. It's live at AirTracker XYZ.
01:24:16.162 - 01:24:54.280, Speaker A: So if you share an Air tag location with this email address and then you put in the tag name here, you can start using it today. Thank you so much. And there you have it. Please give a massive round of applause for our 13 finalists. All right, finally we're seeing some energy. Well, I hope you preserve this because we're getting to the good part. All the amazing prizes, half a million dollars worth.
01:24:54.280 - 01:25:37.202, Speaker A: So let's get ready. Or more importantly, I'm going to get ready to read 100 slides of all the amazing prizes. Okay, well, this is how it's going to work. If you hear your project name, you shout as loud as you can. If you are the top shouter at the end of this, you will get a special gift and I will not tell you what that gift is, so we're going to have to bet on that being good enough for you to shout louder. Are we ready? Yeah. All right, let's do this.
01:25:37.202 - 01:26:02.982, Speaker A: First of all, Filecoin grand prize winners are innovation, Street Seven, Proxy and Web Three backers. You get 2500 each. There we go. For the pool prize winners abstract wallet blockhead social signal vana swap d beats Helia pops up. Engage and Air Tracker are going to win 1250 each. There we go. Next up is polygon.
01:26:02.982 - 01:26:25.422, Speaker A: Best use of Lxly bridge goes to X Chain Protocol for $5,000. They're not even here. What's going on? We are not high up there. Just be happy with the 5000. No free gift for you. And the best use of ZKE EVM goes to Bounce Rise Finance. D beats and ZK Doctor.
01:26:25.422 - 01:26:52.922, Speaker A: You're taking in 1250 each. Congratulations. The best use of polygon ID goes to vibe check mass D recenterify meets ETH and credit lens. You all are going to be taking in 1000 each. And the best public good prize goes to cycrane Wallet House fee fast and swirl. Congratulations on one, $250 each. All right, we're not seeing any records being broken and we got 90 more to go.
01:26:52.922 - 01:27:19.714, Speaker A: So come on, you got to play this strategically on to WorldCoin. The best overall projects on WorldCoin is ASR for $5,000. Okay, that's number one right now. Honorable mentions goes to eyeballs and did health for 1000 each. Zero. Guard wins the best AI use case for 2500. And Checkmate is the best signing with WorldCoin for $2,500 as well.
01:27:19.714 - 01:27:43.050, Speaker A: Congratulations. The most creative use goes to Ethereath for 2500. And the best governance app on World coin is c Three. All right, c three is number two. This is good. And all these 13 teams are taking in $230 each for winning the pool prize. So congratulations to all 13 of you because I'm not going to read those names.
01:27:43.050 - 01:28:06.690, Speaker A: It gets worse for me. Next up, wallet Connect. The most innovative app is Wallet Hub for $1,500. All right, we got a number one winner right now. Light Wallet is 1000 for runner up. And Doom Arena takes in third place, $500. All right, well, you just got Dethroned wallet, hub.
01:28:06.690 - 01:28:36.150, Speaker A: Why are you not sitting with your team? All right, best use of Web three inbox goes to Leverage Labs for 4000. Midna is 2500 for second place. And study splash. 6551 is third place, $1,500 winner. So congratulations to all three of these teams. And the Web Three modal category winners are Study Splash again for six, $3,000. Sybil Game for 1500 for second place and Blockhead for $500.
01:28:36.150 - 01:28:58.290, Speaker A: Congratulations. There's more from Wallet Connect. The best mobile app is Riz Protocol for 1500. All right, he just won. Avatar Protocol is the second place $1,000 winner. And these ten teams are going to be taking in $100 each. So congratulations to all these teams.
01:28:58.290 - 01:29:28.960, Speaker A: Then we have one inch LSD Wrapper is the best use of Fusion API for $2,500. The most innovative app is Cold Stash for 2500. You're not even here. Come on. And the three use cases for the best use of one inch APIs goes to solving five for 2501st place conscious NFT for second place. Okay, there we go. This is number one, conscious NFT and Reputable for third place.
01:29:28.960 - 01:29:51.922, Speaker A: Do it together one more time. Reputable, you win $1,000. There we go. Still number two. The best d five apps on one H are dark. Opt Oracle for $2,500. Uni Hedge is the second place $1,500 winner.
01:29:51.922 - 01:30:17.070, Speaker A: And Lime is the $1,000 3rd place team. Congratulations. Next up gnosis chain. The best front end for Uniswap on Gnosis Chain goes to Bounce for $3,000. And the best Games infrastructure app is Token Hotel for $3,000 as well. Congratulations. And these 14 teams are going to be taking in $142 each for the pool prize.
01:30:17.070 - 01:30:32.398, Speaker A: There we go. Awesome. Then we have uniswap foundation. The best use of hooks goes to NFT pool party. Zero XY Axiom LP Management and Univ. Four CCLP hook, $3,000 each. Congratulations to all four of these teams.
01:30:32.398 - 01:30:53.094, Speaker A: Are any of you here? There we go. Most innovative app on uniswap goes to Lime and Fair Trade. And you're going to be taking in $2,500 each. Then we have the best DevTools category and NYC v four hermit. I'm also tired. Uniswap. V four.
01:30:53.094 - 01:31:13.614, Speaker A: Six, Nine and a Pool Party are the $1,000 each winners. Congratulations. There we go. Next up is Arbitrum. The best library and framework goes to Style Check for $4,000. Congratulations to wherever you are in this room. And Spyglass is the runner up for the best framework use.
01:31:13.614 - 01:31:37.010, Speaker A: Case. The best technology is on this XYZ for $4,000. And Linked TV is the runner up for $1,000 on the best technology building on Arbitrum. There we go. The most original project is also on this for $2,000. And Abstract Wallet is the runner up for $500. So congratulations to both of these teams.
01:31:37.010 - 01:32:07.172, Speaker A: The most ambitious project on Arbitrum is Eco Market for 2000. And Zero Phi is the runner up for $500. Anyone here? Come on. What happened to the energy? And these 58 teams are going to be splitting $5,000 amongst themselves. So I hope you get to have some nice dinner tonight. Imagine reading that live. All right, next up is scroll.
01:32:07.172 - 01:32:27.700, Speaker A: The grand prize winners of scroll are Abstract Wallet, Correlation and True p to P for $2,000 each. Congratulations. The honorable mentions goes to abstract Wallet again. Wait, that's a typo. Or maybe it isn't. We'll find out after I finish talking all these three teams, I'm going to assume this is true. Abstract wallet correlation and true PDP also are the honorable mentions.
01:32:27.700 - 01:33:07.948, Speaker A: So you also get additional $1,000 from this category. And these 72 teams are going to be splitting in the $7,000 pool prize. So give yourself a massive round of applause. This is insane and amazing. All right, next up is StarkNet. What lead is the best use of $3,000? We got a new winner and Keybox AI pilot is the runner up $1,000 recipient onto base. Bunny AI is the best consumer project on base and you're going to be taking in $2,500.
01:33:07.948 - 01:33:32.896, Speaker A: C Three is the runner up for 1500 and Riz Protocol will be taking in $1,000. Nice. Not there yet, but it was great. Link TV is the most creative use case on base for 2500. Ether Noirs is the $1,500 2nd place winner and Avatar Protocol will be the third place $1,000 recipient. Congratulations. Then we have Axiom.
01:33:32.896 - 01:34:08.624, Speaker A: Grand prize goes to Meth Victim Rebate for $5,000. Amazing and fair. Drop will be the best use of identity and reputation for 1250, and Gas Gut will be the best DFI use case winner for one $250 as well. So congratulations. And the best incentivization category winner is drop our history for 1250 and the most creative project on Axiom is going to be Integrity Proof for one $250 as well. Congratulations to all of these teams. Next up, Apecoin do Marina is the best integration with $3,000.
01:34:08.624 - 01:34:37.720, Speaker A: We have now a new contender. This is number one. And Vouch Messenger will be the second place winner for $2,000. Gas Pass is the best contribution on Apecoin Ecosystem for 3000 and Charstat 6551 is the second place $2,000 winner. Congratulations. Then we have airstack. Quick Connect will be the best use case on airstack for $3,000 and Zerofi and Scrubby are going to be taking in $2,000 each.
01:34:37.720 - 01:35:05.964, Speaker A: Congratulations to all three of these teams. Yeah. And data cash Squam Insights, link TV Match and Hack, char Stat, six, Five, One and Makermead are also going to be taking $500 for being honorable mention and honorable use cases on airstack. So congratulations. Then we have XDC network. Best use goes to bounce for 3000. Air Tracker is the second place $2,000 winner and Safe Invaders is going to be third place $1,500 recipient.
01:35:05.964 - 01:35:36.428, Speaker A: Congratulations. And then for all these categories, Proof of Something gets $800 for best Developer Tool. Link TV gets $600 for Best NFT on DFI. The best coupon project is exclusive for 700 and Fast and Link TV are also going to be receiving 700 additional dollars for best attendance project on XTC. Congratulations to all of these amazing teams. Then we have mantle. The best D five projects are Yield, Ape and True P to P and you're going to be taking in 1250 each.
01:35:36.428 - 01:36:02.832, Speaker A: Congratulations to both of these teams. Ether Noirs and Omni NFT are the best NFT and Gaming project and you're also going to be receiving one $250. The best. UX goes to bounce and chop. Unification. I'm just debating if I should try it or not, but it's too late, so I might as well cha Apps unification. Congratulations.
01:36:02.832 - 01:36:24.748, Speaker A: One $200. Let's move on. 27 teams are going to be taking in 2500. Splitting evenly, that's $92 to all 25 27 of you. Somebody finally got me live. I usually am able to pronounce these things, so next time make it harder for me to make this work on stage. Onto ENS on this.
01:36:24.748 - 01:37:03.408, Speaker A: XYZ is the best overall use for ENS and you're going to be receiving $2,500. The best use of subnames goes to APEI and subnote Symphony for $2,000 each. And the best use of Thorin goes to Maker Meet for $1,000 and honorable mentions goes to wow. Login Scrubby, Web Three, Hackers, C three and Air tracker. You're going to be taking home $500 each. Then we have safe. Fillable is the best use of Safe for $2,500 and Exchange Protocol is the runner of $1,500 recipient and Xsafe will be taking in $1,000 as a third place winner.
01:37:03.408 - 01:37:44.084, Speaker A: For the best use of Safe Core then for the best use of Avocado extraction SDK Safe Home is the first place $2,500 winner. Cut in Lens is the second place one $500 winner and Fast will be the third place $1,000 recipient. So congratulations to all these teams onto Biconomy. The best use of Biconomy goes to Factum and APEI for $2,000. Wait, which one were you? Factum or APEI. Okay, Factum is the current winner of the loudest screamer in this building, so let's see if we can dethrone them. The best web two experience on Chain goes to Bunny, AI and What Let and you're going to be taking in $1,000 each.
01:37:44.084 - 01:38:03.640, Speaker A: And take Five is the $1,000 recipient. For the best. One click. D five. Recipe number two very close onto Lens protocol. Zero Phi is the best app on Lens for $4,000 and Ruby Ring is the most original Lens project for 2500. Congratulations.
01:38:03.640 - 01:38:37.300, Speaker A: Upper Social will be taking in 2500 for the best Social fi app integration and Quick Connect and Makermeet are going to be taking home $500 each. Next up is Sello. Bounce is the best app on Sello for $3,000, Barn Raise for 2000 and EcoMarket for 1000. Congratulations. For the best real world payments. Use Case House Fee takes in the first place for $2,000 and Abstract Wallet will be the best AA Social Connect winner for $2,000. Congratulations to both of these teams.
01:38:37.300 - 01:39:09.440, Speaker A: This is great. I am equally at your trade. This is fun. Xmtp, the best use of Xmtp goes to True P to P for $2,500, Soho for 1502nd, Place and Upper Social for $1,000. And the two best connection builders are Scrubby and Vouch Messenger, and you're going to be taking in $750 each. And the honorable mentions for this goes to Air Tracker, Remote EOA and you are also going to be receiving $500. Congratulations.
01:39:09.440 - 01:39:40.356, Speaker A: Next up MetaMask APEI and factum pay are the best DAP. I'm liking that energy. $1,000 for the best DAP on MetaMask and the best transaction insight Snap goes to Squam Insights and Remote EOA and you're going to be receiving $500. And the three teams that are going to be winning $1,000 for deploying a Linear are fast bounds and Air tracker. Congratulations. The best account. Abstraction.
01:39:40.356 - 01:40:00.220, Speaker A: DAP on linear goes to Abstract Wallet. Take five. You're getting better still. Two, you got to beat that team over there. $1,000. And Zero Phi is the best social ID app for $1,000 on Linear. Next up is hyperlane.
01:40:00.220 - 01:40:27.096, Speaker A: Mevvixim Rebid is the best hack on Hyperlane, and you're going to be receiving $4,000. Congratulations. Nice. Capital Sigma and A Pool Party are the best interchange apps and you're going to be taking in $2,000 each. And Resolver is the best new ism integration and you are going to be receiving $2,000 onto Uma. Swirl is the best uma. Nice.
01:40:27.096 - 01:41:07.796, Speaker A: Now you're number two, so this team has to try a bit more harder. Swirl is the $5,000 winner and Perpetual is going to be the second place $2,000 recipient, and these ten teams are going to be taking in $300. So congratulations to all ten of these teams. Give them a big round of applause onto Neon EVM Estuary is the best use of Neon EVM for 2500. Air Tracker is going to be the second place one $500 recipient. And Resolver is going to be taking in $1,000 for the third place prize. And Uni V Four CCLP Hook is the most transactions on the N EVM for $1,000 prize, and these ten teams are going to be taking in $400 each.
01:41:07.796 - 01:41:31.208, Speaker A: So congratulations to all ten of you. Come on, let's bring the energy back. I'm almost done. I got to be close to 100 onto cartesi. Teach AI is the best use of cartesi for $5,000. God on Chain takes in 3000 for second place, and DML and Scam likely that's just hilarious is going to be taking home $1,000. Congratulations.
01:41:31.208 - 01:42:04.532, Speaker A: Onto Mask. Zero Phi is the best use of relational service on Mask for $3,000. Washi is the second place $2,000 winner, and Light Wallet is going to be the third place $1,000 recipient. Next up, near Protocol True P to P is the best front end using Bos for $3,000. Our Bos and Rewardify are going to be taking in $2,000 each. Perpetuals and Optical are also going to be the third place $500 each recipient. Congratulations to all of these front end integrations onto unlimited crypto.
01:42:04.532 - 01:42:35.200, Speaker A: Abstract Wallet is the best use of unlimited crypto for $6,000. That is now the biggest one we've seen. Congratulations. Solveify is the second place runner rep for 3000, and Green Yield will be the third place $1,000 recipient onto Ave Grants. Uni Hedge is the best integration for 3000, and Levyield X is going to be the second place best integration for Ave Grants. The best use of Go goes to Bounce for 3000, and Upper Social is the second place $2,000 winner. Congratulations.
01:42:35.200 - 01:43:12.910, Speaker A: Onto the graph. TJI is the best use of existing subgraph. You're going to be taking in one $400 uni Kits for 1000, and Hage Sophia is the $600 3rd place graph existing subgraph integration winner. The best new subgraph goes to leverage. Labs for 1200, Blockhead for 800 and Reputable for 500. Congratulations to all three of these teams and 28 teams are going to be winning the pool prize and you're going to be taking $71 each. Which one were you? You're number two now.
01:43:12.910 - 01:43:49.044, Speaker A: Congratulations. On to unlock. Unleash the Lock is the best integration for Unlock for $3,000. Fixed Protocol will be the $1,500 2nd place winner and Engage is the $500 3rd place recipient. Congratulations. Axelr Save create two takes in the first prize for $3,000. Univ Four CCLP Hook is the second place $1,500 recipient and Omni NFT will be the third place winner for the best Axler integration.
01:43:49.044 - 01:44:18.832, Speaker A: Congratulations. Next up is alliance. Zero Guard takes in the most likely to be a startup that's awesome prize and you're going to be taking home $5,000. So we really have to see Zero Guard. That was good. Number three, you're going to be taking $5,000 onto Ethereum Foundation. Prizes, Real Return and Zero Trust Bounty are the best use of TLS Notary, and you're going to be receiving $2,000.00.
01:44:18.832 - 01:44:48.620, Speaker A: Guard compliance noted and Z Caseyc are going to be taking in 333 each. So congratulations on to Mona. Mona Gator and Wallet Hub are the best use of Mona receiving $1,500 and Mona Gator and Mona Paper are going to also be receiving $500 for the best interactive components. So congratulations. Yeah, it's okay. You can pause. I'll make you clap a lot more in five minutes.
01:44:48.620 - 01:45:16.464, Speaker A: It's better to conserve your energy. Lid Protocol true P to P is the first place $3,000 recipient for the best programming signing related hack and POW Dunn is going to be taking in $1,000 for second place. Then four honorable mention goes to Samurai DocuSign, cyberswap Did, Health and Zero Guard. And you're going to be receiving $250 each. So congratulations to all of those teams. Onto compound grains. Program green yield is the best use of compound.
01:45:16.464 - 01:45:50.956, Speaker A: Are you going to be receiving $5,000? That's awesome. Onto Sunscreen MP Privacy is the most innovative Fhe project using Sunscreen and you get one $250. So congratulations to MP Privacy and the best innovation on Parasol also goes to MP Privacy for 1250 and Blind Librarian for 750. Runner up spot. So congratulations to both of those teams. Quick note, Links TV is the best use of Token API and you're receiving $1,500. Congratulations.
01:45:50.956 - 01:46:15.208, Speaker A: And the best NFT use case goes to dbeats for 1500. And the top five QuickNote RPC winners are EcoMarket Wallet, Hub, Canoe Creek Reputable and Web. Three backers and you're going to be taking home $400 each. Next up privy. Swirl is the best. UX. We got a new winner for Best UX $2,500.
01:46:15.208 - 01:46:49.248, Speaker A: Consumer award category goes to bunny AI. And Solvify is the best integration category winner for $1,000. So congratulations to all three of these teams. Then we have Alio, Dark Opt Oracle is the best use of Alio for 3000, Inner Swaps for 1500 and ZK TicTacToe is the third place alio contract prize winner. Congratulations to all three of these teams. Next up, Flashbots Lime is the best ecosystem project on Flashbots for 2000. Integrity Proof takes in the best, most innovative project on Flashbots for 1500.
01:46:49.248 - 01:47:02.872, Speaker A: And mev. Victim Rebate is the best data analysis hack for one $500. Then we have nouns. I think we're getting to the end. It's great. I need a break. The best public goods goes to onchain game seven.
01:47:02.872 - 01:47:30.624, Speaker A: Proxies Met, Victim Rebate, happy Hamster and Gas Pass. Okay, now is that still seven proxies? I thought it was just one of you. What happened? Okay, you're number two now. And the best use of artwork goes to quiztopia Frame, Soho, Bunny, AI and Zeke social Graph. And you're going to be taking $500 each. These are all of our prizes. It's like a half a million dollars being given away.
01:47:30.624 - 01:47:51.976, Speaker A: All of this is now visible to you on Ethglobal.com Showcase. Congratulations to every single team. I think that number is the biggest we've probably ever done. And we'll probably confirm that on Twitter soon. So before we kind of call it a day, give me five more minutes. There's a few more things to do.
01:47:51.976 - 01:48:13.404, Speaker A: Let's start with some key notices for all of you. If you saw your name up there, it does not mean that your prize is guaranteed. There we go. Now it's getting quiet. We're going to verify everybody's code base and make sure that everybody followed the rules. So it's going to take us a few weeks to do that. And if something goes wrong in that process, you'll be reached out.
01:48:13.404 - 01:48:46.840, Speaker A: We'll kind of ping you. We'll ask you for clarification. Whether it's something that we've seen start as a commit beforehand or something that doesn't add up or it looks confusing to us, or there's only one commit with 2000 lines or 200,000 lines, all those things will be flagged and we'll be reviewing all of that. After that, we'll be finalizing what the actual price list is, which means that if somebody gets removed, then values might change and you'll be reassigned those real numbers. So you'll hear back all of that in the next three weeks and we'll be distributing all the prizes by October 13. So keep an eye out for that. And that's kind of the thing that matters.
01:48:46.840 - 01:49:16.960, Speaker A: So before we end, let's go into saying some key. Thank yous for everybody who made this event possible. There's so many people that do the work behind the scenes to make all of this really fun and joyful for all of you. I want to make sure we get them the recognition that they deserve. So five more minutes and a lot of clapping for all of them. So let's get started. Let's start with thanking all of you hackers for being in this building this entire weekend and building cool shit.
01:49:16.960 - 01:49:50.536, Speaker A: I want to thank all of our amazing judges. Keep the clapping going. I'm not going to say the names. It's okay. All of our judges who took the time to give you all feedback, all of our mentors and volunteers who were there the entire time helping you out, making sure you unblocked, all of our speakers who gave amazing workshops and talks to really help you understand what's going on. All of these hundreds of partners who are there to make sure that you get unblocked and you get to build the coolest thing that you want to build without needing to start something from scratch. And a special thanks to everybody listed here for giving us the extra time to make it a really cool experience in this venue.
01:49:50.536 - 01:50:23.530, Speaker A: From our photographers, to our volunteers, to every vendor, from food to lighting to the Internet. So thanks to all of them. And last but not least, a massive round of applause to the rest of the ETH Global team. I want to thank Vince, Vikram, George, Wilbur, Maggie, Nuno, Fred, Polly, Rory, Chloe, Huichi, Minnie and MoS, emily, Andrew and Jacob. These are all the people that make all of this happen behind the scenes. So while you may just see me here, they did all of the work and not me. So thank them if you see them here after this.
01:50:23.530 - 01:50:59.252, Speaker A: So 13 teams came here. We saw all the prizes, and you may be wondering, why are they called the finalists? If this is your first time being at an ETH Global event, you may not realize this, but this is not a competition. Everybody who demoed as a finalist is officially the first place winner for this hackathon. So congratulations to those 13 teams. You literally came in first, and as part of being a finalist, in addition to anything else you may have won, ETH Global will be giving you 500 USDC per team member. See? But that's not all. There's a lot more from there.
01:50:59.252 - 01:51:45.580, Speaker A: Every team member will also get ten Sepolia ETH for you to do, testing an ENS domain of your choice, free Pragma entry to the rest of the year's events. If you want to buy a hardware wallet, you get $100 off from Grid, a lens protocol handle if you haven't been on the list yet, and $500 reimbursement for the next ETH Global hackathon you choose to come to anywhere in the world. So congratulations to all of those teams, and we are now officially at a close for this event. So this wouldn't be an ETH Global hackathon without telling you what's next. In two weeks, we're going to start ETH Online. This is our biggest and most important async event of the year. ETH Online takes place for most of October.
01:51:45.580 - 01:52:09.332, Speaker A: Check it out on our website. And then we're going to be seeing you in person again in Istanbul with ETH Global. Istanbul, right at DevConnect. And our last event of the year is going to be India, and it's going to be the world's biggest ethereum hackathon from December eigth to 10th. Join us in India. And that concludes ETH Global New York and the rest of the ETH Global 2023 season. Thank you, everybody.
01:52:09.332 - 01:52:15.550, Speaker A: You can see all those details on the website and hope you have a great rest of the evening. Thanks.
