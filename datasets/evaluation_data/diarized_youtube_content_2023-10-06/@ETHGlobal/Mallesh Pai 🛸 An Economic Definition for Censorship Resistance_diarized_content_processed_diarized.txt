00:00:07.210 - 00:01:13.538, Speaker A: This is another, obviously, yet another talk on censorship resistance. It's in the same vein as some of the earlier talks you saw today by Sriram, for example. And here's where we sort of commit this. So a lot of the talks that you've seen today think of censorship resistance as the idea that valid transactions make it onto the chain, right? That if there's a valid transaction sitting around in the mempool, it will get included. And a lot of our handwriting and concern has been about the idea that, for example, OFAC sensor transactions take a really long time these days to make it onto the chain. That's all that as written, we currently guarantee valid transactions will make it onto the chain eventually. Now the question is, is this enough? As long as valid transactions are making it on chain, is this enough for us to do the things that we want to do with blockchain? So I'd suggest and submit that for a lot of valuable transactions, and not just sort of for our goals of credible neutrality, but also for that, this is not enough.
00:01:13.538 - 00:01:59.682, Speaker A: So a lot of things are not just about getting on chain eventually, but getting on chain on time. So oracle updates is an example of something that you want to be guaranteed to get on in a timely fashion. All sorts of financial transactions, arbs liquidations, are stuff that you want to get on in a timely fashion. And it's not just stuff that we're doing right now that requires this sort of censorship resistance, that requires stuff to get on in a timely fashion. It's also stuff like the stuff that you could do if you did have those sorts of guarantees. So being able to guarantee timely inclusion opens up new mechanisms that you can't do right now. So on chain auctions are currently really hard to run for reasons we'll discuss.
00:01:59.682 - 00:02:36.174, Speaker A: You could potentially do faster roll ups without a seven day window. All of this would be possible, potentially, if you could stay away if you had censorship guarantees. Now, the problem that I'm talking about is not sort of, I'm not the first person to discover it. So indeed, it was one of the first things thought about. So this is from Vitalik's blog post, and the date is June 6, 2015. So it's a thought process that has been circulating in the community for a while. And here's sort of the thought experiment I want you to think about.
00:02:36.174 - 00:03:14.362, Speaker A: So suppose I write you a european option that expires on blockx. So this is for a thought experiment. This is not for a real sort of smart contract that me might want to write. But think of it as I sell you an option, and that option pays you the difference on block x between the price of Ethereum and the strike price. So today the price is 2000. I tell you, okay, I will pay you the difference, the positive difference between Ethereum's price right now between Ethereum's price in block x and 2000. So if it goes up to 2100, I owe you $100.
00:03:14.362 - 00:03:58.386, Speaker A: If it goes down, I owe you nothing. And we walk away. Now for our simple thought experiment. The idea is that this contract is written poorly. It says that if you want to exercise this option, so if you want to come to me and say, hey, Malaysia, the price of Ethereum is up, pay up, you have to submit a transaction in that block. So you have to submit a transaction in that very block. And the trouble with writing a contract like that is that, for instance, imagine the price of Ethereum has gone up to 2100, which means you have $100 gain if you can get a transaction into the block.
00:03:58.386 - 00:04:41.014, Speaker A: The trouble is, I am willing to pay up to $100 to censor your transaction. If you put only a tip or a priority fee of $90, it's actually profitable for me to somehow pay the proposer to censor your transaction. That is not include the transaction, because even if I pay this proposer $91, he'd prefer to censor your transaction rather than include it. I have still like a $9 profit. So that's sort of the thought experiment that Vitalik walks us through. And I'd argue that the trouble. There are a lot of lovely things to love about PBS, and there's a lot of reasons it was done.
00:04:41.014 - 00:05:23.934, Speaker A: But one dark side of PBS is that it sets up a market for censorship. So blocks are auctioned off to the highest bidder in PBS. And that means that a motivated censor could in principle, offer a block without the underlying transaction with a higher bid, and no one would ever know. That's why we're now trying to undo this potential issue with things like inclusion list. Now, we did a simple version of this a few months ago, just to check how easy it is. And with a better engineer than me, I should be honest. But with a good engineer, it was literally 2 hours of work to spin up a public builder, spin up like an open source builder, put in a few bids and then land a block.
00:05:23.934 - 00:05:41.654, Speaker A: So we actually landed a block and we had exactly one transaction in the block. You can check the chain yourself. The block contains one transaction. The graffiti for the block is the first sensor of Rome. And there's a link to our paper. So that's the block. It was $100 and a few hours of great engineers time.
00:05:41.654 - 00:06:33.482, Speaker A: So, not completely cheap, but if you have a builder lying around, this is an easy thing to do. And of course, our block was empty and obvious it was there just so people knew that this could be done. But part of the issue, which you've probably heard about multiple times today, is that if there was a sophisticated builder who left out just one valid transaction because they had a side note or they had a side payment guaranteed by somebody else, you'd never have known about it. And this is problematic. So we need a definition of mean. Going back to Sriram's talk, one of the things Sriram said in an audio space that stuck with me discussing this was that if you can't measure it, you can't improve it. So we need a definition of how should we measure the level of censorship resistance a protocol or a blockchain is getting.
00:06:33.482 - 00:07:07.818, Speaker A: And to do that, we need to abstract away from the machinations of a specific protocol. So let's just walk away from everything and think of a public bulletin board. So, a public bulletin board is just a place where people can post stuff, and it has two operations available to it. One is a read operation. You can do it for free, and it always succeeds. The interesting operation is a write operation. So it takes some underlying data and it takes a tip t, and either succeeds at writing the data to the bulletin board at a cost of t or fails.
00:07:07.818 - 00:07:31.854, Speaker A: So those are the only things, two ways you can interact with a bulletin board. Now, what's our definition of censorship? Resistance. Our definition of censorship resistance is a function fee. And this function fee is the amount it would cost a censoring party to cause a write operation to fail. So there is a censorship party, a censoring party. We don't know their objectives. They might be OFAC, there might be something else.
00:07:31.854 - 00:08:27.390, Speaker A: There might be, like me in the thought experiment from a few minutes ago, trying to stop you from getting this option, being able to exercise this option. Now, the ideal censorship resistance of a chain is, of course, infinity. You want it to be extremely expensive for a censoring party to do it, but you can now think through with this definition. What is the censorship resistance of a particular thing, of a particular protocol. So if there's a single designated block, that's the relevant public bulletin board fee of t equals t if you have a burn. So if with the IP 1559, we have the burn, and if b is the base fee, then actually it's cheaper to censor because the proposer is not getting part of the associated tip for inclusion. Some part is getting burnt, so the proposer is only getting the difference.
00:08:27.390 - 00:09:18.314, Speaker A: The proposer will be willing to censor for anything larger than t minus b rather than t. A bulletin board that consists of k consecutive slots has higher censorship resistance. So if you think of k independent proposers, then given a tip t, it would cost k times t for the censorship to fail. And for k large, this gives excellent censorship resistance, but it does it at a cost. What is the cost? Any read operation, any operation that you want to do with the data, for instance, run an auction would have to wait the length of time of the k blocks to make sure all the relevant data is in. So what do we do in the paper? It's late and you guys have been doing this for 7 hours. So in the paper we study how on chain auctions perform as a function of the censorship resistance.
00:09:18.314 - 00:10:03.438, Speaker A: We have a model of a bunch of bidders who can submit private bids and public tips, and there's one more bidder who's a censoring bidder who can enter the auction, or they can bribe the proposer to leave some competitive bids out, or both. The summary of the findings, which I'll tell you is, I'll link it in the last slide, is that if the censorship resistance is low, the auction is going to perform poorly. So the revenue of the auction is going to be low. The majority of the surplus, that is, the profits that are made from this auction, don't actually go to the seller of the good. They are split between the censoring bidder and the proposer. Meanwhile, if you have high censorship resistance, you restore proper functioning of the auction. Okay, so so far all I've told you is that censorship resistance is a good property.
00:10:03.438 - 00:10:49.050, Speaker A: Woohoo. And some ways to write a public bulletin board or set up a public bulletin board, restore high censorship resistance. But of course, the only solution we've told you so far is to have k consecutive blocks. And of course that's a time issue. So if you're doing something time sensitive, a liquidation, an oracle update, you might not want to wait k blocks to get the degree of time. Our solution well is to end the proposer monopoly. So as an economist, a lot of the issues that we see are seeing here is because even though there are a lot of proposers, a lot of potential validators in the ethereum system or in any blockchain, for any given instant, for any 12 seconds, there's only one of them.
00:10:49.050 - 00:11:19.794, Speaker A: And that monopoly power is what's causing this distortion. So our solution is to have multiple concurrent block proposals. It's more of a wireframe solution. It's not a working engineering solution yet, but some people are working on it. And essentially, Kuncurrent block proposes any write operation is sent to all of them. So the block is the union of the blocks proposed by these multiple concurrent block proposer. And we allow for conditional tipping.
00:11:19.794 - 00:12:10.440, Speaker A: So, for instance, YOu can submit two tips, a little tip small t, and a large tip capital t. If multiple proposals include the data, then each of them gets paid the small tip. And if only one proposer includes the data, then that proposer gets paid the large tip. Now, what's the idea? Why does this work? The reason it works is that conditional tipping sets up a prisoner's dilemma among the block producers. So every block producer is thinking, should I include this tip or not? Should I include this transaction or not? If every proposer is thinking about this, they're thinking, well, look, if the other proposers are not including it, then I can make a large tip capital t from including it. So it's very strongly incentivized for me to include it. But of course, if everyone is including it, then if at least one other person is including it, I only get paid little t.
00:12:10.440 - 00:13:07.186, Speaker A: So the idea is that this conditional tipping separates the cost of getting something onto the chain, which is k times little t, with the censorship resistance of the chain, which is K times cap t. So you can now have a lot of censorship resistance, but cheap inclusion. Now, of course, you need to do stuff with spam and throughput and so on. But that's a SepArate set of concerns. This is, I think, already, if you don't care about transaction ordering, and you can layer on transaction ordering, but if you're trying to do something like just a pure chain to run an auction, for example, where you care only about the set of bids, not the order in which they arrived, this is a chain that's ready to go in terms of arranging this sort of thing. So, in short, whatever we talked about, I've tried to introduce a novel measure of censorship resistance. It's one of many measures.
00:13:07.186 - 00:14:02.662, Speaker A: So, for instance, Sriram's time to censorship resistance is a different measure. And the community, I think, needs to think about not just what we want, but also what are the measures of how we measure it. So which are the ones we're prioritizing or optimizing for? I don't want to shill my specific definition, but we do think that this one gives a useful way, not just about censorship per se, but also about thinking about the viability of various mechanisms on chain. So the possibility of censorship and the absence thereof opens up not just it doesn't just take away the censorship risk, it also opens up the design space for a designer in terms of what mechanisms they can credibly or they can safely implement on chain. Faster fraud proof windows, more efficient DeFi protocols. All of these are possible with higher censorship resistance. So that was my talk.
00:14:02.662 - 00:14:17.050, Speaker A: I'm happy to stick around for questions. The paper is up on mechanism.org library, along with some of other research, and we'd be very happy to hear from you with thoughts, comments. Anything else? Bye.
