00:00:06.090 - 00:00:26.710, Speaker A: The next talk that we're talking about is by Wayne on the Spruce team. And Wayne's going to be chatting about Ethereum's Identity layer exactly. Kind of what that's implying. So maybe without further ado, I don't want to spoil anything, so maybe I'll just invite Wayne up right away. And Wayne, when you're ready, feel free to kind of share your video, your mic. AR. Nice to see you.
00:00:26.710 - 00:00:51.418, Speaker A: And yeah, really excited about this. I mean, I think identity is one of those things that the ecosystem has been working on for a very long time. And I think especially over the last couple of years, we've gained, I think, a tremendous amount of clarity on what that can look like and what are the kind of different outcomes and impacts of having a fully decentralized identity can be. So maybe I won't spoil anything, but maybe just kind of hyping up this conversation a little bit. I'll turn over that.
00:00:51.504 - 00:00:51.802, Speaker B: Yeah.
00:00:51.856 - 00:01:10.500, Speaker C: And I think from if you've been listening to Tina's talk, she does refer to this identity layer that stretches across on chain activity, also stretches across off chain activity. So I hope to just add to the discussion with what that identity layer can be, how wide and encompassing it can be, and how we start thinking about it.
00:01:11.590 - 00:01:13.714, Speaker A: Awesome. I'll let you share your screen when you're ready.
00:01:13.832 - 00:01:27.922, Speaker C: Yep, here it is. So, Ethereum's Identity layer, let's start with pretty high level. What is identity? This potentially could be a discussion that is for hours.
00:01:28.076 - 00:01:28.442, Speaker B: Right.
00:01:28.496 - 00:02:13.400, Speaker C: But as developers and also people, we want to have a working definition. So when we say identity, at least it refers to something of the same semblance. So there are very technical definitions for what identity is. From ISO, the International Standards Organization, they formally defined digital identity as a set of attributes related to an entity. I don't think it's false, I think it's true, but also it doesn't help us that much because then anything could kind of be identity. So at a place called the Internet Identity Workshop, highly recommend this conference if you're interested in identity, decentralized identity. I think OAuth Two was invented there, at least standardized by a lot of the folks who go there.
00:02:13.400 - 00:02:52.270, Speaker C: What's happening next? With decentralized Identifiers and verifiable credentials, a lot of the same people show up there. So if you're very interested in identity, highly recommend it. It's in, I think. Mountain View twice a year. And they came up with a definition that identity is the way we recognize, remember and respond to people and things. And it kind of adds an operative context to that. So it's not just a set of attributes related to an entity, but it's kind of what do you do with those attributes? Maybe some of those help with authentication, maybe some of those help you retrieve who you're talking about and make decisions on how you're going to respond.
00:02:52.350 - 00:02:52.642, Speaker B: Right.
00:02:52.696 - 00:03:44.238, Speaker C: So with this context, I think it helps make a lot more sense. Brief history of identity through, let's call it Web Two and Web One, web Zero, back in ARPANET and whatnot. But typically when you look at the traditional identity markets, they're divided for enterprise and for people. And interestingly, it's kind of converging. So if you've ever seen like OpenID Connect or OAuth Two or LDAP or Active Directory, any of these things, this is kind of what the enterprise identity management and also some end user identities are talking about. So in the 80s, people needed to have accounts to log into timesharing, systems or computer networks for their work. So we started to do identity management, sending emails around corporately, and that evolved into more complexity.
00:03:44.238 - 00:04:47.638, Speaker C: People needed to also manage access. And then most recently the trends have been, why do people have those access? What's their title in that organization or credentials? What are their certifications that give them that access? That's a lot of what the let's call it Web Two identity landscape is looking at, and it's really related to compliance and insurance and all that. So from organically people using identities on the Internet, they had aliases and emails, right? And then you had all these services emerge in the 90s, you could go on BBS systems and have a certain alias there or IRC, et cetera. 2000s, we saw the rise of social media and more data linked to people's Identifiers. And of course it's used for advertising, which funds a lot of the free platforms. And in the 2010s we saw the emergence of sign in with your favorite internet giant and as a convenient way to not have to remember a username and password, right. So that's kind of how the story is to date.
00:04:47.638 - 00:05:29.318, Speaker C: And we're very excited about decentralized identity. A lot of those other structures are kind of top down command and control. Either a company sets up everything or maybe a large tech company decides how it's going to work with everyone. Basically, you can use open protocols and open standards towards that. But just like how we saw with SMTP and email, even though these are open protocols, it kind of converged to just a few entities who are the main implementers. And you can't even run your own email server unless you really understand how email servers work and how not to get blocked. So we think that decentralized identity has to do with statements about reality by anyone.
00:05:29.318 - 00:06:05.490, Speaker C: And that can include stuff that happens on chain or off chain. Statements about reality are things as basic as I live in this town or so and so went to a certain school and this Ethereum address has a certain balance. These are all statements about reality. Some of them can just live on chain. Every time someone creates an Ethereum transaction, there's a signature involved and something happens. The Ethereum blockchain can attest to the state of itself. You can look it up through an indexer or crawl the transactions and understand the state of the system.
00:06:05.490 - 00:06:42.062, Speaker C: And that's a statement about reality by Ethereum that is fully verifiable. If you look at the signatures and the previous state of Ethereum, et cetera, there are also statements about reality that are off chain that can be represented as JSON with a signature over it or other formats. So things like there's a certain email associated to an Ethereum account or there's a certain Twitter handle associated with an Ethereum account. Discord, candles, et cetera. You can link these data together. But maybe it's a statement about reality. We say nothing about if it's true or not, so it really matters who's saying it.
00:06:42.062 - 00:07:53.342, Speaker C: So if Ethereum's saying it and you have cryptographic evidence about an Ethereum address for Ethereum addresses balance, maybe that's a very convincing statement. However, if someone know this Ethereum address is corresponding to this person and it's A Rando who says that, maybe you don't want to trust it, right? So it really depends on who's making the statement and what kind of evidence they can present towards that. And how you interpret that is commonly called a trust framework in the world of identity. So like we said with the second definition, it's used to recognize, remember and respond. So if you're building a DAP that is trying to assemble a bunch of Dow hack victims into a support group, if they're not super wealthy from ETH, you might have kind of a rule set that uses their digital identity assembled across on chain and potentially off chain activity, right? So wanchain ETH, we check if they're a hack victim. That's something that you can just look up on the blockchain based on their activity. Previously there was mentioned your behavior on Dows, your behavior in trading NFTs or anything else staking assets.
00:07:53.342 - 00:08:29.626, Speaker C: Those are all claims. Those are all statements that can be verified by the blockchain. Same with ETH balance. And you might have the user bring in their Discord handle. Maybe there's a witness that is able to attest that someone made the identity proof. There was a project called Keybase that did this and there are more open source ways to do this now, but basically someone can prove that they have a certain Discord handle. You might have used Discord and one of the many plugins for Discord to demonstrate your Ethereum address ownership, right? And then all of a sudden you're able to make that association.
00:08:29.626 - 00:09:39.958, Speaker C: Well, what if you could also take that fact and it's signed and you can present it wherever you want. So with this set of details you're able to recognize, remember and respond from a combination of on chain and off chain data. So ultimately the model we want to move to, to enable decentralized identity so it's truly emergent and not just top down. We want instead of the user logging into the platform or application and then the application accesses its proprietary database, instead of that, we want the user to make the application log into their database and have all discretion over what's in there and how it's accessed, even revoking access or changing the scope of it as they want. This can contain those digital statements that are off chain, and also the application can look up additional statements on chain and form a comprehensive identity, but in a way that the user controls. It's like you start with a poker hand and you pick which cards you actually want to reveal, right? You don't need to just show everything all at once. If you put everything on chain, bad for a lot of reasons, but that's one of them, because you don't get that level of control about what you want to reveal to the world versus not.
00:09:39.958 - 00:10:28.370, Speaker C: Whereas if you're securely connected to an application and you have some degree of trust for the application, you may decide to disclose more data and how the off chain approach works. Commonly, a popular data model used is called Verifiable Credentials, which is a global data standard from W three C. And we have this so called issuer holder Verifier model. And this is if you enter the world of decentralized identity and bids and whatnot, you'll see this a lot, but the issuer, such as a school will issue credentials saying that perhaps this person has a Bachelor's of Science degree. The holder will be able to present it to a Verifier who wants to know if that's true or not and who said it maybe their employer. And they can be convinced that this person actually went to a school and got a degree.
00:10:28.450 - 00:10:28.982, Speaker B: Right.
00:10:29.116 - 00:11:26.482, Speaker C: The really important thing that we care about in this model for decentralized identity is basically that the holder is isolated from all these other components. That is, we're moving towards user centricity or wallet centricity, in that these statements are held in the wallet in a way under the user's discretion. We don't want issuers holding all the credentials for people, and we don't want Verifiers holding all the credentials for people. We want this idea of sovereignty where the holder has discretion about where those credentials live, how they're secured, and how they're processed. This is what gives us more ability to choose what gets disclosed to whom. And finally, all this is coordinated with what's called a Verifiable data registry. How do you know what are accredited institutions to accept things from, right? What stops someone from just spinning up a public private key pair and starting to issue credentials? Well, there are these things called Trust Frameworks that can live in Verifiable data registries that you can choose to accept.
00:11:26.482 - 00:11:43.006, Speaker C: So you can say, okay, I like the Trust Framework that has all the accredited institutions by whatever body. Or maybe for DAOs, there's a token curated registry of DAOs. And you're like, yeah, that's the trust framework. Any of those DAOs issuing statements, we can federate and accept statements from them.
00:11:43.108 - 00:11:43.422, Speaker B: Right.
00:11:43.476 - 00:12:10.630, Speaker C: So these statements can be signed by Ethereum addresses and stored off chain. They can also be represented as Ethereum transactions too. But you wouldn't need something like Verifiable credentials for that. You can just write a smart contract and conform to certain EIP and that's it. So this allows us to have interoperability between claims made on chain but also off chain, all rooted in Ethereum addresses or even a Dow issuing them.
00:12:10.700 - 00:12:10.982, Speaker B: Right?
00:12:11.036 - 00:13:13.530, Speaker C: So this gets us a spectrum of it. It increases user control and as a result we get privacy too. So as a result, not your keys, not your crypto evolves into not your keys, not your Identifier, whether your refers to someone who has a private key for something or a collective with a multi SIG that controls a Dow based Identifier such as a Gnosis Safe address. And I think that the keys users having keys is one of the really critical junctures. A lot of people have thought about this model where you can sign things off digitally in your keys and you have a lot more digital rights as a result. Well, seeing this critical mass adoption of MetaMask and other Ethereum wallets into the tens of millions, we are able to lean on a lot of what they've done, including key management, which is one of the toughest problems in decentralized identity. What if you lose your keys? What's at stake here? That's a tough problem and many wallets are working on this.
00:13:13.530 - 00:13:55.218, Speaker C: Some other interesting approaches use smart contract wallets EIP twelve seven one, such as argent becomes a really nice UX and most of the time wallets stay are used to sign blockchain transactions. But we think that there's a lot more possible if you squint and you look at this as the most successful public key infrastructure adoption event ever. What else can you do? Well, one thing that we can do with keys is authentication. You can sign something to prove that you're the account holder. Right. And that's exactly what we've done with sign in with Ethereum. We collaborated with the Ethereum Foundation and defined a standard message format for how someone will use Ethereum accounts to sign into a website that's off chain.
00:13:55.218 - 00:14:02.874, Speaker C: This way, if you already have an Ethereum account, why collect an email and do that whole verification flow when already you can use that to sign into something?
00:14:02.992 - 00:14:03.466, Speaker B: Right?
00:14:03.568 - 00:15:01.162, Speaker C: And instantly all your on chain activity associated that particular account is available for the site to look at. Because you can have multiple wallets and multiple accounts, you're able to pick your different profiles and with things like zero knowledge, you're able to add additional privacy measures. You might be able to spawn a new Ethereum address just for a website and use zero knowledge proofs to show that you indeed did have certain transactions. You're not going to say what the other Ethereum address was, but indeed you did that before. So this is the direction for basically new classes of DApps that will give you a richer experience because they know a bit more about they're actually talking to the Ethereum account holder. This is different than Connect Wallet because with Connect Wallet, all you're doing is just telling the server, this is my Ethereum address, but you have no proof for it. Anyone can spoof that.
00:15:01.162 - 00:15:46.410, Speaker C: But with sign in with Ethereum, the server definitely knows they're talking to someone who holds the key because they were able to present a challenge and get a correct response from the account holder. So how it works is that we just standardized the message format. This has been going on for like three, four years already. People have been using authentication flows, but we just standardized what the message format was going to be. And it's heavily inspired by JSON Web Tokens, which is live in production across billions of users, probably. But we made it palatable to be displayed in Wallets. So it's a rigid grammar, very little opportunity to inject malicious statements or anything.
00:15:46.410 - 00:16:24.360, Speaker C: We intentionally made it that way. And basically we add security features too once we standardize and also UX improvements. So if a wallet is able to recognize this rigid message format, it can actually be smart enough to show a login dialog. So it really feels like you're logging in as opposed to just trying to sign a personal message. Additionally, we get important security properties. The most important one that we care about is called domain binding. So when it says domain wants you to sign in with your Ethereum account, let's say it's example, the wallet actually has an opportunity to check that it's coming from example over A.
00:16:25.210 - 00:16:25.574, Speaker B: Right?
00:16:25.612 - 00:17:31.098, Speaker C: And eventually, you know, maybe as we move to peer to peer encrypted systems, they can check domain binding for that. But since most stuff is served over TLS today, we can check that and you can know that you're not getting man in the middle attacked with pretty high confidence. And this is a big problem for Wallets and DApps that use this approach where you make someone sign a message and all of a sudden it can be forwarded to an attacker can forward that message, make the user sign it on the phishing site and then pretend to be the user. Right? This is really scary, I think, when you're trying to use that signature outcome to create new key material to encrypt stuff, for example, or generate new keys. Because without the domain binding, any phishing site could just recover your encryption keys. But if the wallet refuses to let or gives a big scary warning if it notices it's the wrong domain, then that actually really improves security properties. So if you're a wallet or working on one or know someone working on one, I would really love if you mentioned, hey, it'd be great if you supported sign in with Ethereum because it's going to increase protections for your users.
00:17:31.098 - 00:18:09.078, Speaker C: And we are collaborating with the MetaMask team on adding this protection for all MetaMask users, for example. And what happens after sign in with Ethereum? Well, we think we start simple and make something that just works for people. And we've seen it take off with a lot of DApps using sign in with Ethereum. And after that we think that there's a really strong link to decentralized Identifiers and Verifiable credentials. Decentralized Identifiers have a whole ecosystem of use cases. There are a lot of companies building open source software to work with decentralized Identifiers. You can look into that spec if you're curious.
00:18:09.078 - 00:18:58.710, Speaker C: And Verifiable credentials are statements about reality. Our work with decentralized Identifiers and Ethereum addresses is defining a did method called did public key hash because most blockchain accounts, including Ethereum addresses, are hashes of public keys. So I call this Opera Winfrey approach to distribution in which look under your seat, you already have a did if you have an Ethereum address. We just defined a way to make all Ethereum addresses valid DIDs. And you can further define signing methods so that you can issue credentials with them. So you can imagine a decentralized social media network that every time you click Follow you're actually in the background signing a Verifiable credential, issuing the fact that you followed someone and they get a copy. And you get a copy, right? And maybe there's a revocation list in there too in case you decide to unfollow them.
00:18:58.710 - 00:19:33.294, Speaker C: But with this you have a portable social media, a collection of sign JSON. Every sign JSON represents a follower you have or someone you followed. And you can take this with you to anywhere else. And if you follow those Verifiable credentials down to who signed it, it's the actual end users, right? It's not the platform that you're entrusting as the ultimate authority. So that's how we get to decentralized social media for follows, for blog posts, for likes. These things can be represented off chain as Verifiable credentials or on chain as transactions. When you represent them off chain you can have much better control over your privacy.
00:19:33.294 - 00:20:11.178, Speaker C: And we can define canonical ways to put them on chain as you want to disclose them to everyone. Another exciting use case after signing with Ethereum is letting the user's smart contract govern the user's cloud infrastructure. Meaning that if you have a smart contract that defines a list of hosts that you say are okay to do something for you, then off chain those hosts can recognize that list. And maybe that's where your data storage is. Maybe that's your storage locker. Look in the smart contract or my ENS name in the records. I'm going to have the hosts that are authorized to be my data vaults.
00:20:11.178 - 00:21:03.582, Speaker C: And you might even be able to sign permission slips for people to take over to one of your hosts sign by your Ethereum account and maybe they can do something like upload a file or download a file. This is the architecture used in our project called Kepler at Spruce. And another thing that we're really excited about is we think that you're going to use keys for a lot of things. I think sessions, we might see fewer cookie based sessions being used if we can have session keys. We can interpret a sign in with Ethereum message as a delegation to Ephemeral key in the Dom, just as a session key that can be used to create transactions that can be used to issue Verifiable credentials, that can be used to access data. Anything that you would do with cookie checking. Now we could just have these transactions that work off chain, right, to services that can receive them.
00:21:03.582 - 00:21:55.050, Speaker C: So when we assume that the world is built on PKI and everyone has a key, there's a lot that can shift in the infrastructure. And also it's a huge opportunity to empower the user instead of trusting a central intermediary. One innovation that we've created at Spruce towards this is called Capgrock, which stands for Capability Grok. Grok is kind of a nerdy term for understanding something. As we understand sign in with Ethereum to be delegation of privileges to a key to do stuff, we think it's really important that the user has an opportunity to understand exactly what permissions they're delegating. It's kind of like when you're linking your social media account to a different site and basically it's asking you what's okay to share and what's not. Well, this interface is going to get more and more complex.
00:21:55.050 - 00:22:20.858, Speaker C: If you imagine that we live in a world where most of your stuff is stored in your own data vault that you have discretion over, how do we make sure that a user has informed consent and they're actually able to understand what they're actually sharing? This is a huge problem. Like most people who read privacy policies or who read the word privacy policy, they think it means that, you know, the company is going to keep their data private, but instead it talks about exactly how they're going to share their data.
00:22:20.944 - 00:22:21.242, Speaker B: Right?
00:22:21.296 - 00:23:06.706, Speaker C: So how do we make sure that there is this holistic bridge between what's in the technical capability, the real access control, the permission slip that you're writing, and a user's opportunity to understand what's going to be shared and what can't be right. So this way you can use your Ethereum account for a whole suite of off chain services and designate access to other services, but it only works if the user can understand exactly what they're doing. And that is going to be one of the toughest, UX challenges to handle, but one of the most important ones too. So based on this, I think we're going to sign in with Ethereum to the key controlled revolution. If you're trying to get started, login XYZ has documentation on how to integrate things. You can follow Spruce on Twitter at spruce.
00:23:06.738 - 00:23:07.030, Speaker B: ID.
00:23:07.100 - 00:23:20.670, Speaker C: You can follow me on Twitter at wycddd DD is my favorite Unix tool. Or connect with me on the coolest social media network LinkedIn, but that's kind of it. I'm ready to talk about anything you want to answer questions, et cetera.
00:23:21.890 - 00:23:22.640, Speaker A: Awesome.
00:23:23.170 - 00:23:24.106, Speaker B: Thank you so much Wayne.
00:23:24.138 - 00:24:32.450, Speaker A: I appreciate the chat. Mean, as I kind of mentioned at the like we are on the cusp of this really unique time know, I think to your like everybody has a did look under your like it's all there and it's time to finally use these in really interesting ways. So I think it's a really exciting time. If anybody has any questions for Wayne as well, feel free to drop them in the chat and I'll relate them here, but maybe just kind of get kicked off here. I think commonly when we think about especially verifiable credentials and things like that, basically at some point when you go far enough down the stack, you need to have trust. You know, if know a student of Harvard or something and I want to verify that and have a Credential on my did that proves that I got a degree from Harvard, which maybe is something people would want to have at some point down the list. You have to trust Alice at Harvard who's issuing degrees to, you know, at some point there's something you know, given that's the like, how do you think about establishing those trusts and what should that be looked like to be as trust minimized as possible.
00:24:32.450 - 00:24:48.146, Speaker A: And for those actual Credential people, those people who should be giving actual credentials like Harvard, that's a really useful use case. They should think about doing that. What are some of the best practices that they can employ to be as trust minimized as possible in that stack?
00:24:48.338 - 00:24:56.842, Speaker C: Yeah, great questions. Two separate ones that I'm going to tease out. But the first one is you're talking about trust anchors. How do we know who to trust to begin with?
00:24:56.896 - 00:24:57.066, Speaker B: Right?
00:24:57.088 - 00:25:16.650, Speaker C: Like what does bootstrapping this look like? Very timely. I think on Monday there's a conference called Rebooting the Web of Trust that is starting. Kicked off really interesting papers. Everything's open source and on GitHub there. But basically a web of trust was kind of the traditional way to do this before we all consolidated on certificate authorities.
00:25:16.730 - 00:25:17.130, Speaker B: Right.
00:25:17.220 - 00:25:27.090, Speaker C: There was something called spooky. Spki simple PKI, which worked like you shared a bunch of public keys and you didn't need a central authority. So if you squinted it was kind of like web of trust.
00:25:27.160 - 00:25:27.442, Speaker B: Right.
00:25:27.496 - 00:26:20.150, Speaker C: And I think that a really important point is that it depends on what you're you maybe you care about what a doctor says about your disease, but you don't care about what your chef says about your disease. And so you have to care about who's issuing the statement. Well, if it's an accredited institution like Harvard, there are existing trust frameworks in place. So for universities in particular, there's a group called IMS Global and it's a consortium of all the accreditation agencies and they decide what a transcript looks like together. So right now a lot of it's just Paper World, but if you move that digital into a trust framework, you could rely on that to get started. And in web3, that's one critical role I see for centralized companies that have built a pretty strong brand. If you trust that brand to make statements.
00:26:20.150 - 00:26:39.494, Speaker C: For example, Coinbase says this person has over two ETH in their account. Maybe you trust that from Coinbase. And then Dows, I think, are also really important for this too. If Raid Guild says they did a project, then maybe we trust that they completed it because they have a great reputation in the space for completing certain kinds of projects.
00:26:39.542 - 00:26:39.946, Speaker B: Right.
00:26:40.048 - 00:27:12.486, Speaker C: And as other Dows specialize, they might state claims over certain kinds of statements that they can make. And I think that the brand for the issuer is really important to consider as part of it. And that kind of leads into the other question. As an issuer of these things and trying to implement these Credential frameworks, what should you think about? Well, I think it's really useful to think about it through this issuer holder and Verifier model, and usually the hardest part to bootstrap is the issuer. But what makes the model work is that someone wants it to verify something.
00:27:12.588 - 00:27:12.854, Speaker B: Right?
00:27:12.892 - 00:27:22.218, Speaker C: So if liquor store wants to verify your age or like that you're over 21 so you can buy liquor, well, that's the demand. And who's going to say that? Who does a liquor store trust?
00:27:22.304 - 00:27:22.554, Speaker B: Right?
00:27:22.592 - 00:28:12.140, Speaker C: So if you start from an issuer's perspective, you can think about the data that you have that people would trust you to say as Harvard, and that's probably a really broad scope of things. And because Harvard is a strong brand, maybe they can even reach outside of academia a bit, but that's probably where their bread and butter would be. So if you're dao working on future of work stuff and you have a collection of completed projects as anointed by the multisig, well, you can issue certificates of completion to people. In fact, you can even help preserve their privacy because you can cut a new Credential to an uncorrelated ethereum address. You can say, yeah, this person did a medium sized job and it was successful, and we're not going to tell you the addresses involved, there's like thousands of medium sized jobs accomplished, but that person can use that credential and access something else without necessarily revealing too much.
00:28:13.310 - 00:28:14.986, Speaker B: Got you. Okay. Very cool. Yeah.
00:28:15.008 - 00:28:38.226, Speaker A: And I think that very interesting to think about this because yeah, I never actually heard this term trust anchor before, but it works really well for this concept. And I'll take a look at some of the other stuff you mentioned there too. Yeah, you have this existing even in the traditional paper world. If you think about. It like your birth certificate is basically the trust anchor that sets up everything else. Right. And there's a lot of kind of interesting parallels there.
00:28:38.226 - 00:28:44.322, Speaker A: So it makes sense that there's already been some kind of work done in this space, even existing systems that we have.
00:28:44.456 - 00:28:44.754, Speaker B: Yeah.
00:28:44.792 - 00:29:32.674, Speaker C: And what we're really excited about as we transition to the digital world for it. And there are things to avoid too. But what could be the case is that there was some mention in the previous talk about there's an interesting relationship between crypto and KYC and potentially replacing KYC with something else that also reduces fraud and other things that we don't want. And, well, when you represent things digital, it's a lot more inexpensive to do that. So if you have a bunch of other facts about yourself that together have the same level of assurance as, like, a passport or something, you don't even have to identify who you are, then that could be very interesting. To preserve privacy, to increase user autonomy, increase equity. Some people have issues getting passports, for example.
00:29:32.674 - 00:29:45.400, Speaker C: And if they need to access services, what are other pieces of data that could convince someone to give them access to services? If it's digital, it's a lot cheaper to think about those data, how to represent them and how to present them.
00:29:45.770 - 00:29:46.182, Speaker B: Yeah.
00:29:46.236 - 00:29:50.706, Speaker A: And more efficient, more easily establish these things. Gotcha.
00:29:50.818 - 00:29:52.390, Speaker B: Very cool. Awesome.
00:29:52.460 - 00:30:08.510, Speaker A: Okay, well, I don't want to take too much of your time. I know we're already over a bit, but yeah. Really appreciate you being here, Wayne, and thank you for walking us through that. Like I said, very exciting time to be thinking about this tonight. I guess there's even more stuff to watch next week in this regard as well.
00:30:08.660 - 00:30:10.190, Speaker C: Thanks so much for having me.
00:30:10.340 - 00:30:12.250, Speaker A: Thank you for being here. Bye.
