00:02:05.670 - 00:02:39.530, Speaker A: All right, welcome everybody. Hope you're having a happy Saturday. And this is Hack Money judging demos day seven or six. It's actually six. I'm Kartik, one of the co founders of Ethg Global and want to welcome everybody to our continued judging day livestream where we're showing off all of our projects every day. And this is our second last session for the week before we finish off all demos. So I want to kick this off immediately.
00:02:39.530 - 00:03:47.850, Speaker A: For those of you who don't know, hack Money was organized by ETH Global. And over the past four weeks, we had over 350 hackers from 40 different countries and 15 different time zones work towards making amazing apps in the DFI ecosystem. We had people from all these countries, we had an amazing set of over 40 mentors who helped out our hackers on anything technical, product and marketing. And all these amazing sponsors who took the time and dedicated their resources and their team to making it easy and possible for all of our hackers to use and integrate any of their SDKs if they wanted to extend the composability features of DFI protocols that exist in the world of Ethereum. So let me just say this one more time. We had over 350 hackers that spent the last four weeks working on a project of their choice in DFI. And as of Sunday night, when submissions finally finished and we got everybody's teams and projects in, we had 118 projects that were submitted for this hackathon.
00:03:47.850 - 00:04:15.334, Speaker A: And that is absolutely incredible. I mean, I can comfortably say that as of Sunday night, we've doubled the size of the D five space alone. And this is super exciting. So with that, I want to just quickly walk through the logistics of how the next 2 hours are going to work. We have 15 teams today and each team will have four minutes to demo their project and what they built in. Three minutes for Q and A and feedbacks from our judges. That gives seven minutes in total per team.
00:04:15.334 - 00:04:51.778, Speaker A: And to save any troubleshooting errors and minimize and keep everything on schedule, we've asked the teams to pre record their demo. So this will be a team that'll just come on and start sharing their video submission. So a quick overview of how hackmoney was set up. The rules and criteria for this event were simple. A team could have up to five members in total. And that doesn't mean you can't do without a team. A lot of people chose to hack on their projects individually and the only thing they had to ensure was that their hack had a DeFi primitive included in what they did.
00:04:51.778 - 00:05:43.330, Speaker A: And just like every other hackathon, all code that they wrote must have been written over the course of the hackathon itself. So everything you see here was done over the course of four weeks. And in terms of kind of how today is going to go the way we're going to go about judging these projects is going to be on these five categories. Every project will be looked at for being technical, original, and practical, and on top of all of that, for the audience of designing the project, for how easy it is to use, whether it's a UI or UX thing or for a developer, the abstraction that goes into making it a really good dev tool. And, of course, to make sure that we don't miss any categories, we have this general catch all that we call a wow factor that lets us account for anything else we've missed in our criteria. I want to remind everybody this one more time. This is not a competition.
00:05:43.330 - 00:06:11.642, Speaker A: The hackers are here to learn and really show what they've done over the course of the past month. They're here to share their excitement and get feedback on how to improve what they've been working on and take it to the next level. And not everybody is trying to become a business. We don't want them to necessarily make this a big thing. We want them to just only experiment and encourage them to keep working on it. And that's sort of the ethos of how global events work, and hack money is no different. So the schedule for today is as follows.
00:06:11.642 - 00:06:54.234, Speaker A: These are our 15 teams that will be going on one by one in this order. And after the judging ends today, I want to remind everybody that the top teams from each of the sessions, in total of 118 teams, will be presenting to all judges. On the right side, andreas Antopolis, Thomas, Bertani, Ashley Shep, Robert Leshner, Vitalik Butter, and Stani Kulichov for our finale, where we get to show off our top projects from the whole event. And that is this coming Tuesday from 02:00 p.m.. To 04:00 p.m.. Eastern. And if you already have not gotten an invite from us as a participant or a judge, we'll be sending that again today for all the missing people.
00:06:54.234 - 00:07:38.780, Speaker A: But make sure to mark this on your calendar. And, of course, doing the hard job today are our three judges who have considerably given us their time today on a weekend. And I want to welcome Simone and Pop from OST La Ross Siri from Opengsn and Fernando Martinelli from Balancer Labs. They will be our judges for today, and they'll be giving feedback for all 15 projects and sharing their excitement with them. So from here, I'd like to officially kick off our first demo for the day. And with that, I want to welcome Team Suicide Kings to start with their demo. Thank.
00:07:38.780 - 00:08:48.174, Speaker A: I'm Alex. I'm waiting and looks like we're having bandwidth issues, so excellent start NFTs and compound protocol, we came up with something called Alex. This creates a low risk environment for users to play with non fungible. Alex, I think if you can take this off, what I'll do is I'll just play it on my site we can minimize. You want to share it instead? Yeah, I'll do it right now. So give me 1 second and I'll kick it off. I'm Alex Fisher.
00:08:48.174 - 00:09:13.526, Speaker A: I'm Kevin Vitali. I'm wade Kimbrough. And we want to stay anonymous, vote and fund quadratically and not worry about civil attacks. We spent a lot of the hackathon ideating how to do this. By combining NFTs and compound protocol, we came up with something called nonfungible governance. To test this idea, we created a game called Suicide Kings. Suicide Kings is no loss like pull together and it's fun and engaging.
00:09:13.526 - 00:09:50.770, Speaker A: This creates a low risk environment for users to play with non fungible governance. Before showing our build of Suicide Kings, we want to explain non fungible governance and how it might work in the real world. In current use cases of quadratic voting and liberal radicalism, participants aggregate their preferences with money. They buy votes or donate to public goods. However, we know that people contribute in many other ways. You might edit a Wikipedia page, you might contribute to open source software, you might canvas in a neighborhood for a political candidate, or you might build a house for Habitat for Humanity. We call this type of volunteerism effort, and it's the key to non fungible governance.
00:09:50.770 - 00:10:23.450, Speaker A: Instead of using money to aggregate preferences, let's use this effort. Here's exactly how it works. A participant in a community buys an NFT. The cost of that NFT goes into a community pool where it earns interest by doing things for the community, like taking on bounties, voting, volunteering, etc. The NFT can level up much like experience points in games. When it comes time to vote on something, it happens as follows one NFT always equals one vote. Or you can burn your NFT to get its level squared in votes.
00:10:23.450 - 00:11:14.590, Speaker A: If you try a civil attack by buying 100 level one NFTs across many accounts, you're actually offsetting your voting preference by contributing greatly to the community pool. So designating the actions and the amount of work that dictates how an NFT levels up allows a community to signify an individual without identifying that individual. Suicide Kings test non fungible Governance game design is an iterative process. During the hackathon, we iterated over a dozen times and built four distinct versions of the game, moving from rough prototypes to bot simulations to where we are now, which is integrating all of this onto adapt on Rink B. The goal of the game is to win interest from the community pool. You do this by voting on which king cards interest is distributed to. There are 16 King card types in the game, four suits in four colors, and there is no limit to how many a player can buy.
00:11:14.590 - 00:11:57.294, Speaker A: Players can also vote to level up their NFT types, which allows them to vote quadratically in the future. To vote quadratically, they have to burn their king, hence the name Suicide Kings, and they are returned the value of that king, both what they paid and the interest that they won. Our first version of the game used a game engine to sandbox the rules. Then we moved to using Google spreadsheets and Google Forms to simulate using Wallets A ledger and voting. All of the interest in XP was calculated in a third spreadsheet that acted as our backend. We used the formulas and logic from this to create a command line game where we could simulate hundreds of players with bots. This version was tested many times to ensure that our game system was both fun and sound.
00:11:57.294 - 00:12:23.634, Speaker A: We are currently integrating our command line version of the game into adapt on Rink B. Our progress was slowed by the need to use ERC. Eleven fifty five s. Eleven fifty five s give us several affordances things like batch transfers save players on gas. But we also needed to do things like split bits. In our current implementation base, token IDs are split at the 248 bit position. The leading bits represent the index of our starting colors and suits.
00:12:23.634 - 00:12:57.270, Speaker A: The rest of the bits track unique kings. This allows us to more easily track each king's value and experience points. At our current state, we can mint kings, mint C ETH and burn C ETH. Back for ETH, check out our GitHub for the current state of our DAP, the command line version of the game, more nuanced rules, and a concept note that more thoroughly describes non fungible governance. Great. Thank you, guys. First question for me.
00:12:57.270 - 00:13:38.150, Speaker A: Who would use this? Who's your target user? Who did you build it for? Yeah, so there are a couple different examples of this actually being used. So Gitcoin Grants, for example, uses liberal radicalism for doing the quadratic funding. Quadratic voting has been used, I believe, in Denver, Colorado, for voting as well. And so it's basically kind of expanding on some of these small use cases. Now, for example, Gitcoin Grants makes you connect your GitHub account to reduce civil attacks, and they're looking at using something with Twilio and SMS. So this would be a way to allow people to remain more anonymous. Okay, that makes sense.
00:13:38.150 - 00:14:06.476, Speaker A: And I know you said that you hit some Snags. Will you continue trying to work through those and build it further after the hack money? Yep. We've already got our next meeting scheduled next week. Excellent. Did you guys know each other? All well. Kevin and I go back a few years, but we met Wade at Eat, Boston last year. Cool.
00:14:06.476 - 00:14:38.404, Speaker A: Awesome. Vera Fernando. Yeah? Maybe. I have a question. So when you burn your NFT, you get a quadratic kind of strength in your vote. How do you see that kind of choice? Depends on how many times you can use your NFT to vote with the normal power. So if you have like a level ten and you expect to vote 20 times with that, then the total power you expect to get from that NFT is 20.
00:14:38.404 - 00:15:52.536, Speaker A: So the choice whether you want to burn it or not depends on how many times you're going to use your individual power without having to burn it. How did you guys played around with that choice and how did you simulate it? How many choices do you expect people to have or votes using their NTS without burning them? And how people will make that choice? How do you expect them to make that choice? So in the real world it will be up to the community, right? So it'll be up to Gitcoin. If it were to be used there for our game, we expect it to be around every 12 hours. You're going to be able to vote and basically you're competing over the interest in the compound pool. So basically it's however long you want to play the game, right? So some people will come in and play for different periods. When we tested it in the command line game to actually kind of simulate it, we found that it took around 17 to 20 rounds before you had a chance to actually burn and steal more of the interest from the community pool. So people are competing for this interest and you can get more by giving it to your hearts or to your specific type of king.
00:15:52.536 - 00:16:27.080, Speaker A: So it'll take a couple of weeks of playing before you can level up to the chance where those 100 votes will really matter for you. And it depends on the number of players playing as well. So we also simulated a game where there were several hundred bots and basically the three of us tried to collude against the bots. We formed a team and it still took us around, I think 20 or 30 rounds. So 20 or 30 votes before we could level up an NFT to aggregate our preferences. quadratically. Nice.
00:16:27.080 - 00:16:57.080, Speaker A: Thanks Laraj. I think we don't have your mic working. Still no mic. Okay. I think interestingly. Maybe we'll try this for 5 seconds. If you can press the top arrow key under the mute button and see on zoom if you can change the source directly, that could work.
00:16:57.080 - 00:18:08.748, Speaker A: Otherwise we'll sadly have to move on to our next team and oh wait, I think we heard something. I was just going to maybe ask how you guys plan while Laras tries to get his mic working. Other than Gitcoin grants, what do you expect, what other types of use cases do you expect to use this idea? I think one of the underlying ideas that we were really excited about was seeing what influences the players in the game could have as they vote on the rules while they're playing it. So hopefully we can experiment with what I'd like to see experiment with is other contexts, other games that we're pretty familiar with. It could be anything from real time gaming to something a little slower like what we're demonstrating in our hack here. But one of the outstanding questions that we really were hoping to get better insight into was that can we formulate something interesting by providing governance while play is actually happening? So in that regard, we hope it can be opened up to many more people. Everyone likes playing games.
00:18:08.748 - 00:18:35.736, Speaker A: I think a short answer is any type of governance and specifically decentralized governance because we're hoping to solve civil attacks. So Posner and Weil, who originally wrote on voting Squared shows that this aggregates preferences in a much better way than the traditional one person, one vote. Thanks. Very cool. Thank you guys, and I look forward to seeing it progress. Thanks guys. Thanks everyone.
00:18:35.736 - 00:19:10.420, Speaker A: Thank you. Maybe just laroski, could you quickly check if your audio is back on? Unfortunately, it is not, but I think we're going to have to move on to our next one. That should give us a few more minutes to fix and see this issue. So with that, thank you suicide kings and congrats on actually went through all these iterations. I think it's super unique that you were able to actually improve and have these cycles in. So congrats again and looking forward to seeing how this improves over time. And with that, I'd like to call up our second team and that is team Oya Market.
00:19:10.420 - 00:19:13.750, Speaker A: So I'll let them kick off with their video demo.
00:19:25.660 - 00:19:59.604, Speaker B: We're demoing the high fidelity design, protocol architecture and smart contract code for Oya, a decentralized e commerce protocol. Our team members are iwu Vanna Shutt and John Shut. Denise Annie Esley is one of Oya's users. She's a programmer and make jewelry that she sells online. She sells on centralized marketplaces and has her own store using shopify. She has thousands of dollars of sales per month. But after transaction fees, referral fees, credit card fees, payment, processor fees, monthly membership, listing fees, mandatory advertising fees, closing fees and commission, her cut's only half that amount.
00:19:59.604 - 00:20:22.296, Speaker B: She isn't too happy about these fees. This is where Oya protocol comes in. Oya slashes fees by eliminating middlemen managing orders and payments through smart contract. Let's wash an order. The buyer submits order details and payment through Oya. This creates an order smart contract that holds the money and manages the order. The seller receives a notification, accepts the order and ships the item to the buyer.
00:20:22.296 - 00:20:51.284, Speaker B: The seller uploads tracking information to the order smart contract. This allows the smart contract to confirm delivery with the chainlink Oracle. Later on, if needed, the buyer also get tracking information. The item is received by the buyer who makes sure everything is okay and then accepts the item. The smart contract instantly pays the seller and reports a successful transaction to the Oya protocol. Both the buyer and seller earn Oya token which gives them voting power over future changes to the protocol. This way there is no middlemen taking a cut.
00:20:51.284 - 00:21:15.292, Speaker B: The buyers and sellers own the protocol directly. Thanks to Oya, Denise has lower fees and more control. She's very happy now. To add Oya to her own store, Denise installs the Oya Shopify plugin. She also installs the Oya Chrome extension to make it easy to manage her orders. Denise's customers see Oya as a payment option during checkout alongside more expensive centralized payment methods. The buyer can use ETH or any popular ERC 20 token in their wallet to pay.
00:21:15.292 - 00:21:39.376, Speaker B: Oya automatically converts to the seller's preferred token. Using uniswap. Oya also uses Opengsn to pay the buyer's gas fees. The costs are ultimately paid by the seller. In most cases, the total gas fees are less expensive than traditional e commerce fees. For higher price items, the savings are enormous. Since Denise installed the Oya plugin, her products can be automatically imported into Oya Market alongside many other sellers using the Oya Protocol.
00:21:39.376 - 00:22:04.110, Speaker B: Oya Market is a crypto native marketplace, so we see products, price and tokens. And customers don't have to log in. They just use their Ethereum wallet. Customers enter shipping information like any other e commerce site. The checkout experience is the same as choosing Oya as a payment option on Denise's site. Both sites use the Oya Protocol smart contracts on the backend. The low fees and cool features are the same.
00:22:04.110 - 00:22:34.656, Speaker B: Nice. Denise can see a new order notification in her Oya browser extension. She clicks the extension to open the seller dashboard where she can manage all her Oya orders from any marketplace. She can upload tracking information for new orders and see the status of her existing orders. She can also claim funds from orders that have been delivered after a wait period where the buyer can initiate a return. Let's watch a demo of the first building blocks of the Oya Protocol. Buyers can create orders through the controller contract.
00:22:34.656 - 00:23:02.280, Speaker B: Oya token holders can vote to update or replace the controller. Buyers and sellers interact directly with order contracts. Either party can cancel an order before it ships. The smart contract automatically refunds the buyer. Sellers can upload shipping information and claim funds automatically. If the delivery is confirmed and a wait period has passed, buyers can mark an item as accepted and the smart contract will automatically pay the seller. The buyer and the seller earn Oya Token rewards for successful orders.
00:23:02.280 - 00:23:25.530, Speaker B: If an order goes bad and the buyer and the seller can't work it out themselves, they can call in the arbitrator to decide who gets that money. Oya tokens are earned by using the protocol, not bought in a token cell. Token holders make the roles which evolve organically over time. We have lots of ideas for the future, including earning interest on money in escrow. Check us out at Oya Market.
00:23:29.120 - 00:23:46.256, Speaker A: Very cool. Thank you, guys. That was very enthusiastic. I loved it. We got that money. Quick question about the earning Oya token. So I know.
00:23:46.256 - 00:24:25.150, Speaker A: Tell me a little bit more about how is it just like reviews on ebay, for instance, and its tokens. How does that work? I think the idea is basically to be kind of a decentralized co op and so every time you interact with the protocol in some way that we want to reward. Like if you're a seller and you have a successful transaction, you get some more tokens to give you more ownership over the co op. And then if you're a buyer, you're also incentivized to say like, yeah, I got the item, and pay the seller immediately rather than just waiting till the 30 days. So you get tokens for that. All of the different cases would really be set by the actual community. So those are just like the first two that we thought of, but anything we want to reward, basically.
00:24:25.150 - 00:24:39.856, Speaker A: Very cool. You have to earn it. Yeah, sorry. You have to earn the token. Right, okay. So that's what I was kind of thinking, how those would be decided. Makes sense.
00:24:39.856 - 00:25:43.936, Speaker A: So this is a work token? Yeah, basically it's like you get it for interacting, for doing something that is good for Oya as a whole. Do token holders get to vote in case there's a dispute or I saw that there's an Arbitrator or kind of a mediator. How are tokens kind of involved in deciding disputes? How they're solved? Yeah, I guess at the smart contract level, the token holders can decide how the controller works, which determines how arbitrators are set. Kind of the model that we have in our head right now is that Arbitrators are probably more like professionals. Like if you're going to Amazon or Ebay or Etsy, they have people that are really familiar with different buyer seller fraud scenarios rather than having random token holders decide. And then the Arbitrators could basically get a fee what's set by the Arbitrator. So if you had Amazon rebuilt to have Oya as a backend thing, instead of taking a cut for every order, they would have an arbitrator fee.
00:25:43.936 - 00:26:20.544, Speaker A: If there's a dispute, which would be a smaller number of it. I think initially it would probably just be like one Arbitrator that token holders set and say like, yes, this is their Arbitrator for now, and then expand from there. You can have a delegation scheme where token holders choose the best arbitrators and some type of reward if the arbitrators are doing a good work, delegated. And also like letting buyers and sellers through each interaction. If they want to use a particular Arbitrator, give them some way to do that. Really cool. And then you said the seller pays the gas fees, right? Yes.
00:26:20.544 - 00:26:45.304, Speaker A: So basically there would just be like a big pot of money. Sellers would need to kick money in there, not just for gas fees, but also to pay for returns, things like that, like giving the buyer a return shipping label. So all of that needs to be fleshed out a lot more, but conceptually, yeah. Very cool. Very cool, guys. Awesome. And you're going to continue working on this, I hope? Yes, we can't stop.
00:26:45.304 - 00:27:01.920, Speaker A: We have surveys already open. We've done surveys during the full 30 days that we were working. Awesome. Sounds great. We'll get access to your details. So awesome work. Thank you.
00:27:01.920 - 00:27:23.476, Speaker A: Pretty cool. Thank you so much. That was an amazing demo and a really fun video. So with that we will kick off to our next demo and that is Project Pirate Ship. So I'll let them take it away. Hey Tina. Hi, can you hear? Yes, yes.
00:27:23.476 - 00:28:10.628, Speaker A: Okay, I'll play video of the works. This is Tina, Janelle and Jitel. We created Ship, your special purpose vessel for product shipping through continuous flash organization for surplus human capital formation. Hackathons are short and sweet sprints, but little incentive to sustain continuity. Startups on the other hand, are long games with great uncertainties that require upfront commitment. However, being in crypto in such a volatile emerging industry and a global pandemics, long term commitment prior to product market fit may not be the optimal strategy for most. So what if we can combine the best of both worlds? Introducing Ship Bootstrap, your site project from zero to one in an iterative multi round game.
00:28:10.628 - 00:28:49.420, Speaker A: We break up startup marathons into Sprints. Leverage product milestone bounded face by face release of putback equity tokens to reward active contributors. Within each flash work which is set to dissolve upon deadline, we build upon DeFi primitives for game warping. Within each flash work, we build upon open's convexity protocol for issuance of putable equity tokens. Contributors by default opt into non linear payoff, but kept the flexibility of allowing a cash exit option at preset strike price which lowers unto barrier for joining. Especially for those with well paid jobs looking for interesting side projects. putable equity tokens are also cost efficient for reducing startup burn.
00:28:49.420 - 00:29:28.024, Speaker A: Good project strike price can be set well below market salary yet still remain competitive. And only a fraction of contributors will exercise the options to cash out. We further built on avi and compound to provide cost effective flash treasury management for the collaterals locked up during the project duration. So what we had built is a platform for Bootstrap MVPs for site projects. There are four phases genesis for project creation, political equity, issuance and financing choices. Summoning phase is when project creator and contributors handshake shipping phase Sprints begin. Lastly settlement.
00:29:28.024 - 00:29:49.472, Speaker A: Everyone gets its payoff. And here is how the contract works. And we have a total of three contracts. The first one integrated with open protocol. It creates option market with our own ERC 20 tokens and product leaders are able to collateralize die in exchange of old tokens. The second one integrate with compound. So product leaders are able to borrow from compound to assist of their project creation.
00:29:49.472 - 00:30:28.192, Speaker A: In the future, we plan to have a governance contract to assist our voting process. So our third contract will enable all members on our platform to vote on key factor changes such as to extend project deadlines. And here's our demo to get started using Ship, you can sign up or log in with your email or your GitHub account. Here I'm going to choose GitHub. Once I'm logged in, you can explore created projects or create your own project. Here I'm going to be a project manager and I'm going to create a Flash called honeylemon Market or a version as alpha specification and target project milestones. Strike price is set as 0.1,
00:30:28.192 - 00:31:03.954, Speaker A: the project duration 90 days and the exercisable duration 90 days. Which means that at the end of 90 days, a contributor can exercise their oTokens and exit with equity or cash. You can add a contributor and you can issue equity tokens. Here I'm going to set it to 5% and then save Project. Once that's saving, you have two financing choices for your Flash. You can borrow with Compound or earn interest by depositing on Ave. Here I'm going to choose to borrow with Compound and then you can issue putable equity to your contributors.
00:31:03.954 - 00:32:05.238, Speaker A: To do that, the first step is to create an options contract and then you can go ahead and issue ETH collateral and issue O tokens. While that is confirming, we can check out My Ship where you can see the governance dashboard and propose to make any changes in your state existing Flash. You can also go to your portfolio page and view details on your Flash with expiration date, the options contract address and cash out. To get equity or cash in your MetaMask account, press confirm. Here I already have a successful transaction created on Bringker Testnet and then you can view your Tokens in your MetaMask account. That was ship. Okay, since this was a little bit longer, we have just two and a half minutes for Q A, so I'll let our judges take it away.
00:32:05.238 - 00:32:53.060, Speaker A: So the chances are you've looked in at least one mirror today. I think the video is playing. Yeah, my question is regarding use cases. Yeah, there's a little bit of noise in the background. I think you're sharing your YouTube and I think it's playing a video in the background. What kind of use cases do you see this being used for? The most compelling ones in your mind? Actually, I would use myself for all my hackathon projects that I really want to finish. I think they're really great ideas, but I really want to be able to find teammates who are motivated to continue to build out these ideas either with me or without me there.
00:32:53.060 - 00:33:40.286, Speaker A: And I share this ethics with a lot of my hackathon buddies and I see this beyond crypto. There are so many surplus human capital that I see because of work from home. And a lot of people are working on passion projects and they are really interested in looking for good teammates who can they don't have to commit for a really long period. Long term. This is a micro. Dow very much so. You can actually see every single phase of the Flash that forms a continuity is kind of like a micro moloch, except that it's fungible because it's the rage quit.
00:33:40.286 - 00:34:17.166, Speaker A: It's actually the put option part because you get the Dow membership share proportional if you do rage quit, aka by opting out. But instead we assume that you will opt in rather than opt out. Very cool. And I do think it's definitely something that we see a lot with hackathon projects. And you're absolutely right. The fact that you would want to continue, right. That it isn't just a one and done situation, which so many great projects are in that situation.
00:34:17.166 - 00:34:52.106, Speaker A: So yeah, that's really cool. Are you going to continue? Yes. In fact, building my project full time from my East Singapore hackathon project from a year and a half ago, actually practicing this. This is not something I've thought about before. This is something that I've learned through trial and error finding this, I'm already on my third phase, the project that we demonstrated, like Hanileman, that's actually on its third phase of Flash organization right now. Very cool. Awesome.
00:34:52.106 - 00:35:10.320, Speaker A: Congrats. I love it. Really cool, guys. That's late 2018. So I'm really excited to hear that you're still doing this thing in the spirit of building and improving it. So thanks again and we'll move on next team. Thank you, guys.
00:35:10.320 - 00:35:57.566, Speaker A: So I'll let Flash share their video and talk over it from here. All right, so we have created a platform where anyone can put their Flash loan scripts. If you borrow from Flash Loan from Avi, and then any user can come and use it. Very simple. For users, they will have to pick a script, browse through a script, and deploy the contract and use it. And for the developers, we have something like they submit a smart contract, and whenever some new user uses the smart contract, they get a fee from it. We try to make it as much user friendly as we could.
00:35:57.566 - 00:36:56.158, Speaker A: So for submitting a smart contract, simple, like put in a description, put in the address, you want to see the payment, put in the smart contract and everything. And then you simply add the smart contract and you enter the parameters and then it is done. Like you add the smart contract for anyone to use? Yeah. So once the swift is deployed, the user can browse through all the different swift other developers have created. These can be for different use cases, like for arbitrage, for collateral swapping, for asset rate, interest rate swapping. All the user has to do is to deploy his contract, and after that, he needs to transfer any kind of ownership for assets that he wants from his account to this smart contract. Then any kind of parameters that are needed to execute this Flash loan script has to be entered.
00:36:56.158 - 00:37:46.754, Speaker A: For example, this one needs an address and an amount. This is just a sample script. So once this is done, the Flash loan would be executed. So all the user has to do was to read through the description the developer has written and check out what the Swift does and if it meet his requirements and without even knowing what Solidity does and what is being done inside the contract. So as you can see, once the user has deployed the contract, he can use it again. No need to deploy it again. Once everything is done.
00:37:46.754 - 00:38:42.980, Speaker A: For example, Arbitrage is done, he can withdraw any kind of assets, for example, die, bat, whatever asset the contract has to his own account, just like that's. So what we thought was Flash loans were a really powerful tool for D five users. Ave currently has 63 million worth of USD logged in in its protocol. But what is a problem is most of the users don't know how to write these scripts and contracts, so they kind of get stuck in that dilemma. So Ave currently takes 0.9% from the Flash loans and we also take 0.9%. It's a really small fee, but half of it goes to a developer who has created that particular Swift and 50% goes to our platform.
00:38:42.980 - 00:39:18.400, Speaker A: And these are the few use cases for Flash loan collateral swapping. Arbitrage. You see them here and there, but they are not really that useful because of the lack of lack of platforms that provide them. Also these are all scattered around. Our platform is going to be like a centralized place where users can come and look through all of the scripts. Yeah. So basically that's our project.
00:39:18.400 - 00:40:29.794, Speaker A: Thank you. Sorry, Liraz, who are the users? The users of this project could be like any DeFi user who don't have sufficient knowledge to write their own smart contract to execute a Flash loan, but they know they are using uniswap or some different protocol like compound or something. Okay. One of the motivation was like when we launched a Flashnose, we were excited about it, but we weren't confident enough in our own skills that if we can really deploy on contract on the main net, we aren't really confident about it. So we thought for the people who are confident about it, they can put in their smart contract and then other people can use it. A Usability wrapper around ave. What? Actually we specified writing schema for the contract.
00:40:29.794 - 00:41:10.386, Speaker A: Like a few things are predefined. So the person who is submitting the smart contract will have to include one function or two functions and then it will work easily for any contract. But my question is if you're improving the accessibility of Flash loans or you're adding more functionality to the existing system that you're using. Not exactly. We are providing a platform and making it easier for both the parties, like for the developers to make a few more bucks and for user to use them more sophisticated. Okay, got it. Maybe a question.
00:41:10.386 - 00:41:52.898, Speaker A: Have you found during the time you're working on this, have you found any opportunities of using a flash loan to make a profit that someone could have used your project to do that? Yeah, there was opportunity of Arbitrage. We checked that even for Arbitrage, there were different soft, like $5 on Bancor and Kyber. And then on our YouTube video, there are a few questions, like people wanting to use it. They're asking where we can find this project and use it, actually. Very nice. Okay, awesome. Thank you so much.
00:41:52.898 - 00:42:35.680, Speaker A: I think this is super cool. We've consistently seen a theme of obstructions around generating smart contracts, and flash loans have been in the center of it or the past few hacks for this hackathon. So this is another cool one, because we've definitely found a few other Arbitrage cases that have worked for a few from our demos. So with that, I'd like to call up our next team, and that is Ledger Let's API. So I'll let them share and kick off their video, and they'll be talking over through real time. So just make sure that you're not muted. I think we see that you shared your screen, but we have no audio or mic.
00:42:35.680 - 00:43:17.020, Speaker A: Hey, guys. So I guess I can start, right? Yep. Hi, I'm Roy Zisman. This was just a one man project, and I'd like to introduce you to Ledgerlet's API. The main problem that I wanted to solve is someone, either a person or an entity, needs to create an indisputable evidence that they owned, held, or had access to a file at a specific point of time. Or in other words, a digital timestamp proof of existence. Some examples of scenarios that this can be used.
00:43:17.020 - 00:44:07.978, Speaker A: Maybe a signed physical contract between two or more entities. A reporting collecting evidence for an investigative story that they want to show in the future that they had access to those documents. Maybe a whistleblower collecting documents for reporting problems in her corporation. Or maybe it's a framework for other DeFi solutions who need some kind of a way to show an evidence that they had some kind of information at a specific point in time. Think of oracles who are based off information outside of the network, and they need to show that they actually took those decisions or had those observations based on specific data. So there's actually some existing solutions. Today, there's a service called Proofofexistence.com
00:44:07.978 - 00:44:39.910, Speaker A: that does it on bitcoin, on the Bitcoin blockchain. However, they have some issues or problems they want to solve or improve. They do it as one transaction per file. So if you want to proof or create a proof of your document, you have to make a transaction which can cause congestions on the blockchain. They're not free. You have to pay some kind of fee for the transaction, and it's on the Bitcoin blockchain. I wanted to introduce something on the Ethereum network.
00:44:39.910 - 00:45:29.880, Speaker A: There's an extra motivation why I wanted to solve this problem. We see a lot of solutions that are talking about the ability of the blockchain to transfer money or tokens which have value between entities. And I think there's another value in the blockchain where it can store really important data as evidence for the future, an indisputable evidence, a few design goals and principles I had in mind. I wanted to provide this as a service, as an API that can be integrated by other platforms. It has to be lightweight, efficient, and does not impose any high loads on the network. It has to be able to scale up to millions of transactions in each block. And most importantly, I wanted to make it free.
00:45:29.880 - 00:46:12.274, Speaker A: So I'll explain how it works and run a really quick demo. The consumer. Let's assume that the consumer on the left side has some kind of an artifact, a document or an evidence that they want to create a proof that they had at a specific point in time. They'll create the run Shastam 256 on that file. It create a thumbprint which will be posted to the ledgerlets API on the service side to make it scale. To make it free. Ledgerless would create a batch file of all of the transactions within that specific point in time.
00:46:12.274 - 00:47:28.940, Speaker A: I do batches every 15 minutes now, but it can be shorter, longer, depending on the network load. And once those 15 minutes have passed, create another thumbprint or signature of that batch file and use one way fee to create that transaction on the blockchain as a confirmation the user gets back the batch file itself so they can prove it in the future. Even if ledgerlets.com breaks down or doesn't exist anymore, they get the thumbprint of that file, and they also get an etherscan IO link that they can show someone that they actually had that specific file in the past when they are being challenged to show that evidence or proof. And the validation, again, can be as simple as taking your signature or sorry, taking your evidence file, creating the thumbprint of that file, making sure that it's in the batch file that you hold, and creating that signature for that batch file and see that it's on the blockchain with a specific point in time. So that's the basic concept. Let's do a quick demo.
00:47:28.940 - 00:48:07.290, Speaker A: So let's say I'm investigating some kind of corruption within Contosocorb.com, and I have some evidence, and I want to capture that evidence or that file on the blockchain as proof that I had that file in the future. So I have this file. Let's change this to 2020, for example. Save it. And I'm doing everything through curl API to show the API, but this can be done through any other API call. So let's see the thumbprint of that specific file.
00:48:07.290 - 00:49:31.018, Speaker A: I have this thumbprint. Let's now push it as a post to the ledgerlets API it's submitted. I'll do the signage of the batch files right now at the background, one secondary has to break right in a secondary just to make sure everybody knows. In terms of time, you have about 60 seconds left. So if we're not able to finish that, we'll also go over in the Q and A. Okay, maybe a question while you try to get it working. How do you plan on making money or how are you going to pay for the costs of submitting those transactions to the blockchain even though they're batched? You're going to have to pay for that, right? Somehow, yes.
00:49:31.018 - 00:50:30.522, Speaker A: Excellent question. Can you hold a few seconds for that? I have a slide coming through if I'll get to it. Okay, so the transaction or the batch file was created, hopefully this will come through. Okay. So I got the response back, it was submitted. I can go to Etherscan, for example, and see that the transaction just happened or at least about to happen, and I have the exact specific timestamp, and this will be my proof in the future that I had that document at that specific point in time. So, coming back real quick to the presentation.
00:50:30.522 - 00:51:18.960, Speaker A: Yeah, I think we're at time. So we'll just quickly get the judges to ask questions because I think this went over by a few minutes. Sure. So maybe I can answer the first question about monetization the batch files today are public. One aspect or one option is to provide private bat files with metadata fields that will be specific for corporations don't want their metadata fields or specific bet files out in the open. And this is a notarization service. Is there anything beyond a document notarization service that you see this being used for? I could barely hear the question.
00:51:18.960 - 00:52:27.282, Speaker A: So my question is, is there a use case beyond document, notarization that you see as potentially interesting for this, or is it just that? Yes. My goal was to offload some of the data on the blockchain to just minimize it with thumbprints and some kind of a service that shows what those thumbprints mean. So you'll have one thumbprint that will actually translate to a bunch of documents that can be serviced from any other service and not necessarily from the blockchain. So that can be oracles, that can be data that's related to other contracts, et cetera. But that part is not decentralized. That's decentralized service running on your servers, right? Yes, but again, I created some tools that even if ledgerless.com is down and you had a file, you can still prove that that file existed at that specific point in time if you have this batch file, if you kept it.
00:52:27.282 - 00:54:10.550, Speaker A: I also have future plans to integrate it with IPFS so that the batch files will actually be stored in IPFS. Awesome. Well, this is time, so we're going to have to move on to our next project. And with that, I'd like to kick off the demo for Project Adopt and I'll be playing the video on my end, and the team will be here to answer your questioning. Okay, so our project is called Adopt, and basically what our original idea was, was to make an options trading platform that allowed people to buy and sell options on bitcoin using Ethereum smart contracts and using native bitcoin. And our initial implementation of this actually involved using bitcoin smart contracts and a secret sharing scheme. Unfortunately, this implementation didn't work very well because what we found was with our bitcoin script implementation, it was possible for anybody who can see this transaction in the mempool to front run this redeem transaction and send the funds to themselves.
00:54:10.550 - 00:54:58.272, Speaker A: And this is just one of the limitations of bitcoin script itself. Either your funds are tied to a specific address, and if they're not, anyone can spend them. So we decided to use P tokens. And with P tokens, we made a front end that served as a on ramp and off ramp, allowing people to mint PBTC using testnet bitcoin. And then it also worked the other way. It allowed you to turn PBTC back into testnet bitcoin. For our call options, we implemented support for PBTC as collateral.
00:54:58.272 - 00:55:43.468, Speaker A: So these options would be purchased with Dai, and the collateral will be in PBTC format. And when the option is exercised, the exerciser would receive PBTC. And while we were able to deploy these contracts on Robstein, we actually ran into some issues, actually building out our DAP, some issues with Web three PY. So we didn't get to finish up, actually, but we wanted it to look something like this. This is just a mock up of what it would have looked like. Here you can see I've sold calls on bitcoin. And so if I buy calls, then these orders will get matched.
00:55:43.468 - 00:56:27.896, Speaker A: I can sell some more calls, buy can look at the price of bitcoin. I can trade puts as well with different strike, different maturity, 9000 I calls, sell calls. That's pretty much it. This was a very interesting project, and we had a lot of fun just kind of brainstorming and thinking about how we can build cross chain DeFi and yeah, that's it. Thanks for watching. I'm ready for questions. I have one.
00:56:27.896 - 00:57:44.690, Speaker A: So how do you ensure that the guy who's selling the call option has the bitcoin to cover that call option if it's exercised in the future? Do you have any collateral, like TBTC 50% in ETH of the BTC value? How does that work? So, at the moment, we're only allowing for covered calls. And because these contracts are denominated in bitcoin, it's just the actual amount of like, if you're selling calls on one bitcoin, then you would actually have to post one bitcoin as collateral. You don't really need to over collateralize because the underlying is actually bitcoin. Right. Is that done on Ethereum or on the bitcoin network? It's on ethereum. And we're using PBTC to facilitate a trustless go ahead. I was going to say, what was the main thing that you learned out of this experience? Because I know you mentioned that first bit did not really go according to plan.
00:57:44.690 - 00:58:23.100, Speaker A: Takeaway. The main takeaway just for hackathons in general was prototype quickly and spend less time theorizing about the perfect implementation. I think we lost a lot of time just trying to be purists and trying to use bitcoin script like the first two weeks. And then we realized that, wait a minute, there's a front running issue that really can't be fixed. And learning bitcoin script was also just kind of a sidebar that we may spend too much time on. It's very different from solidity. It's like this 1960s stack based language.
00:58:23.100 - 00:59:31.424, Speaker A: But yeah, build a lean MVP and just iterate quickly. But I think if I had to do it all over again, I would make sure to have something functional much earlier on. Yeah, makes a lot of sense. So just to make sure I understand, could I summarize what you've created as a way for betting on bitcoin and I on Ethereum, but without needing as much capital, so you don't have that opportunity cost? I would say it's not exactly that. It's a way to trade options on bitcoin on Ethereum, but actually have real bitcoin. Right now, a lot of the options that you can buy and sell are settled in cash, right? There's no actual real bitcoin underlying that. And this is useful because it unlocks different types of arbitrage and it actually allows people who are holding lots of bitcoin to participate in DFI.
00:59:31.424 - 01:00:01.724, Speaker A: And given that bitcoin is over 60% of all the market cap, we thought it would be great to kind of unlock the value that comes with bitcoin on Ethereum. DeFi. Got it. Very cool. Well, awesome. I want to refrain myself making any comments on bitcoin script and move on to the next demo is team bundlefy. So I'll let them kick off with their video.
01:00:01.724 - 01:00:35.704, Speaker A: Thanks. Thanks. We're Bundlefly. This is a showcase for Hack Money 2020 the team. We build a set of smart contract tools to simplify complex interactions with the Pi protocol. So we allow the bundle pi to save time and gas by doing what you usually would do, multiple transactions. We do that the same in one click.
01:00:35.704 - 01:01:30.948, Speaker A: So we show you how the examples like swapping, where you're able to swap multiple tokens in one transaction, or you're able to swap multiple tokens and send them to another address or ENN's address as well. So it works like you take a basket of tokens you have in your wallet bad USDC and WBTC, and you want to convert them all in one transaction into die. So no approvals needed. No multiple approvals are needed. It's just one click. It brings sort of like that, the five wallet mobile UX to your MetaMask ledgers and all the normal wallets that you have. You can adjust amounts for each token that you want to use to complete the swap by percentage, you can transfer the specific target token to our final wallet.
01:01:30.948 - 01:02:34.392, Speaker A: For example, you want to transfer 100,000 USDC, you only have 500 and you can complete the remaining amount missing from your bat and die balance as well, all with one click. So we have support for both MetaMask and Porters. I'm going to be using MetaMask here for demo and I want to send on the die. So let's say I don't have the exact amount from just one token, but I do have several tokens that I can fulfill that swap with and I'm picking a few. So this is my token. So what just happened here? I'm going to use 50% of USDC, 25% of CUSD and the rest from feature to complete that amount. You're able also to decide where you want to send this at the end to another address, whether that's ENS address or your normal ethereum address.
01:02:34.392 - 01:03:17.260, Speaker A: But for now, I'm going to swap. This is one click, no approvals, no multiple, it's just one transaction. And there you go. This was basically three swaps, one to go to that target token. So that's bundle swap. We also started work on bundle loans which brings a similar concept only to loan to savings where you can just migrate any outstanding loan that you have into another platform or whether it's the same platform or different one that has an interest rate. So that's the POC still we have the contract in place, but we just run our time for integration here.
01:03:17.260 - 01:04:09.450, Speaker A: So what's happening here? We have a smart contract wallet that's DX proxy used by MakerDAO for the vaults. So it's secure, it has been widely used and added it. We built a smart contract script that interact with this proxy that leverages uniswap v two liquidity to make all this happen. Like when one click. Right. So what is next? Pick funds to put it in mainnet, get it audited so it's useful and people can start using it. Add support for more protocols, liquidity, like you said, we want to finish the POC of migrating in one click of it to compound with different loans and different savings as well.
01:04:09.450 - 01:04:58.910, Speaker A: We're bundlefly. This is a showcase it that was the video? Yeah. That's awesome. I immediately think the amount of times like for instance, you would want to contribute to let's say a grant or something like that and then that specific project only accepts a certain token and you have to go and kind of exchange that to get the token. So this would be perfect to kind of do. Very cool. Yeah, I think that's very useful.
01:04:58.910 - 01:05:46.626, Speaker A: Thanks. What is the most important pain point that you think bundlefi solves? Yeah, for us, we're DeFi users, so we have this exact problem. So we have a project that's through a grant that's called Stable Pay that we won through another ETH global hackathon and I need to distribute funds, the dice that we have in compound to three different developers in just one click. So things like that, it's like a multiplex. You can either go through multiple inputs and get one output or the other way around one input and get multiple outputs. And it's just putting more beef into uniswap. And that interface, it's like a UX wrapper around those protocols.
01:05:46.626 - 01:06:43.614, Speaker A: And why do you need to have a mobile wallet to get that experience? Why can I have it in MetaMask or ledger all the wallets that I already have? So that's sort of like our motivation to bring this connection and this set of smart contract tools. Sorry, go ahead. Sorry, go ahead. No, so I just wanted to make sure I understood that this would be a way of bundling together things that I would otherwise have to do as separate operations. Right, okay, got it. I was just going to mention that if you guys continue developing this, an option to do that would also be using a balancer pool where the tokens that the user has in their wallets are not just sitting there. So you already create a pool so that they're kind of earning trading fees when anyone trades across them.
01:06:43.614 - 01:07:20.874, Speaker A: And then when you want to use that, you can either sell the balancer pool token that represents ownership of that pool, or you can do an withdraw transaction and then swap it for die or whatever you want to send or to have. So, yeah, maybe using a balancer pool there would be yeah, yeah, for sure. There's a bunch of ideas that we want to basically do wrappers around. This allows a much better UX around all the protocols. Like you said, a lot of transactions needs to happen for people to use this. So that's our main motivation, for sure. Cool.
01:07:20.874 - 01:07:38.594, Speaker A: Congrats. Thank you. Awesome. Thanks, guys. Thank you very much. Thanks, Doug. On the My team, just as like a quick reminder, a lot of the projects that we've seen are ready for others to check out anywhere from them being live on mainnet to just being available for anybody else to use.
01:07:38.594 - 01:08:17.178, Speaker A: So as the team here pushes and makes it ready for mainnet, we should be able to see a lot more of us checking it out ourselves. So I hope the main net goes successfully. And with that, we'll move on to our next demo. And that is Julia from Medici. And I'll let her play her video, and I believe she will be talking through the video instead of the internal audio. Hi, my name is Julia, and I'm a software engineer. COVID-19 has pushed the world into economic turmoil.
01:08:17.178 - 01:09:01.882, Speaker A: A lot of people are A, concerned about the depreciation of their local currencies, and B, looking for ways to diversify their portfolios. But neither of these are easy for most people outside the US. And this is where decentralized finance can make a difference. Medici is a simple wallet that allows users to convert their fiat money into stable digital assets and earn interest through the compound protocol. By embedding a non custodial wallet like portis, medici users can interact with the blockchain without the intimidating details. Medici also allows users to purchase digital assets through a debit card. The same goes for cashing out.
01:09:01.882 - 01:09:41.660, Speaker A: Users can pay out to their bank account or card in fiat currency. So how does it work under the hood? Medici is a web3 app running on the ethereum blockchain. A user creates a wallet in seconds with a username and password, and funds it with some crypto, such as the Dai Stablecoin. And the user can purchase that crypto using a debit card to start earning interest. The Dai is supplied to the compound protocol and converted into CDI, which increases in value with every ethereum block. And to cash out, we simply redeem CDI for Dai from Compound. Let's head over to the demo.
01:09:41.660 - 01:10:16.306, Speaker A: As a user on Medici, I can create a wallet through portis without leaving the app. I can see my wallet's balances and how much I've already supplied to compound for earning interest. I don't have much Dai, so let's buy some. I select Dai and I can also see exchange rates between the US. Dollar and other currencies. Next, I can pay for my Dai using a regular debit card, and those funds will go straight to my Medici wallet. There you go.
01:10:16.306 - 01:11:01.980, Speaker A: Ten Dai in my wallet, which can be tracked within the app. Now let's supply some Dai to Compound so that we can earn interest. I'll supply five Dai from my wallet thanks to the built in wallet by portis, signing transactions also becomes much easier. None of the intimidating gas fees are exposed and no additional plugins required. Now five die has been sent from my wallet to Compound, and the CDI will start earning interest. If I want to redeem the die from Compound, it's just as easy. I put in how many C Dai I want to redeem, and now 24 die were just sent back to my wallet.
01:11:01.980 - 01:11:40.410, Speaker A: So what is unique about Medici? Simplicity and focus. We're starting with USD stablecoins such as Dai, USDCoin and USDT. We also think that certain regions outside the US. And Europe can use a lot more help, which is why we've also prototyped the service in Brazilian, Portuguese and Chinese. We've spoken to dozens of potential users who are extremely concerned about the rise in the price of imports, worried about the depreciation of their domestic currency, and are interested in holding assets like gold or the US. Dollar. Finally, we take pride in the simplicity of our user experience.
01:11:40.410 - 01:12:21.830, Speaker A: What's next for us? We want to nail down the fiat onramp and payout flows in order to support a range of cards and accounts. We also want to offer more attractive APIs to our users and remove some of the steps that can add complexity. To the user experience. Medici is also among the top projects on Pioneer, a fully remote accelerator funding ambitious projects around the world. Thank you so much for watching this demo and please reach out with any feedback. Hey, thanks for watching that. Happy to take any questions.
01:12:21.830 - 01:13:18.868, Speaker A: Maybe I can start. Congrats. First of all, how do you plan on dealing with KYC? And that kind of choice between reaching more people in the developing countries and still using credit or debit cards to top up those things kind of are conflicting. Yeah, thanks for the question, Fernando. That's a very important one because it's kind of shared risk between whichever payment processor we use for the debit card. So, for example, wire or MoonPay, as well as Nadishi itself. So we kind of expect that there is a little bit of KYC to some extent involved, but at the end of the day, like during the credit card or debit card processing, but at the end of the day, there is also that responsibility within Medici.
01:13:18.868 - 01:14:29.312, Speaker A: And the short answer is that a simple flow can be implemented, but we have yet to find out how that might vary from country to country or region to region. So that's definitely an area for research that I'll be digging into. Thanks. One question I have is what are your ideas on the business model for this? Yeah, so for this, there can be multiple ways. One of them is to take it the Robin Hood approach, regardless of what the actual behind the scenes business model is, making it really easy and feel free for the user. Another approach is to have a maintenance fee based on how much is kept in the wallet. And one selling point for this would be if we have, say, some folks in Brazil who feel like storing some assets in US.
01:14:29.312 - 01:15:20.928, Speaker A: Dollars is actually more valuable than trying to set up an overseas account in the US. Or something else, then there might be an incentive to say, okay, I would rather pay a small fee on a regular basis than have to go to the hassle of foreign exchange, setting up an overseas bank account, et cetera. So one option that I'm looking at and have yet to validate is a maintenance fee. Yeah, go on. Sorry, just one more question regarding down ramps. Is that something that the on ramps you seem to have, but what are your thoughts on down ramps in the future? Yeah, the quick answer is yes. That's still a part that I'm trying to figure out.
01:15:20.928 - 01:15:39.590, Speaker A: Fortunately, tools like MoonPay and wire are getting easier for sending back to bank accounts or direct debit cards. So that's a part that we'll be focused on for sure. Got it. Thank you, Julia. Yeah, thank you. Thank you. Thanks.
01:15:39.590 - 01:23:31.440, Speaker A: I think we're out of time. Yeah. So thank you so much for that demo. It's an excellent presentation. And with that, we are going to be taking our five minute break and then we'll be resuming the second half of the presentation. So we'll see you all in five minutes. Hello.
01:23:31.440 - 01:24:29.320, Speaker A: Give us 1 minute, Pablo. We'll be back on in a second. No worries. Thank you. All right, we're going to resume our second half of the demos. So with that I'd like to call up Team licentia to share their video. All right, thank you.
01:24:29.320 - 01:25:38.534, Speaker A: If you can see it. Yes, we can. licentia is a decentralized application that allows and works as a self bank system for the users through Lacentia. We aim to solve some DeFi issues like having a system that is easy to use by the masses as well as having a decentralized hub or centralized hub that works to connect other DeFi solutions out there in the market. Some applications out there are like Dbank, Sirion and My DeFi that are currently live that work like that. So in short, our application would be a centralized application that actually just integrates with all the decentralized solutions already out there on the market so that a user has a one location where they can come and utilize their own ecosystem. So they're essentially their own bank and all the services that are provided by every other decentralized system out there.
01:25:38.534 - 01:26:59.430, Speaker A: Here's the team and this is a brief demo of the application itself. This is a live application that you can actually see right now and navigate through. We were aiming on trying to get a lot of these items incorporated and right now we're only able to have mostly the UI and interaction with the MetaMask. So you will see the demo, somebody interacting with the MetaMask and showing their wallet balance. Eventually we will have all these other features. Like an area where people can come in and learn about the different applications out there on the DeFi system, learn more about blockchain and then exchange area where people can just exchange between different tokens out in the market. As well as there's other areas like trade that people can use that as a hub for people to go to different areas like Dy DX and actually be able to trade tokens lend systems, be able to switch between Ave compound pay insurers, insurance shopping borrow and donate.
01:26:59.430 - 01:28:10.160, Speaker A: And that's essentially the application. It was pretty quick, pretty briefly, so I'll pass it over to for questions. Very cool. So is the idea with the full idea is that this is your one stop shop for doing things with crypto, right? So essentially everybody is already, at least in most countries, you have an application online that you go for bank, you manage your finances through there, deposit if you got credit card or what have you. So essentially this was a decentralized hub that people can do the same thing, but with all the other applications already out there on the market. Because I saw the shop, that's why I was thinking you would go, is that the idea that I would go to, say, a platform that I can pay in crypto, right? Yeah. We would have a curated list of items like hey, this is decentralized Amazon or things like that.
01:28:10.160 - 01:29:12.100, Speaker A: Very cool. How would you acquire users for something like this? So first, because we would want to really focus on the user experience and get real feedback, we would be word of mouth and people that want to be separated from the centralized banking systems and want to have more power of their own finances and at the same time don't really know much about crypto. Just focusing on making the user experience so good that people come by themselves. Essentially, first off will be yes, kind of like that. But it would be word of mouth for right now until we are able to get our MVP worked out, all the tweaks working and then we can go ahead and start doing some marketing campaigns here and there. Got it. Cool.
01:29:12.100 - 01:30:22.674, Speaker A: I was just going to ask there's lots of different tabs there like different things the user can do on your platform. You have to choose a focus here, like kind of the entrance door to get the user kind of wowed with your product and then they start kind of roaming other tabs there. What would you focus on? My guess would be a wallet, a simple wallet. And what would differentiate your wallet compared to other products like Argent or great products that are out there already? Right. So one of the things that we were thinking on is really be specific to the user and somebody that just doesn't really know much about all the other cryptos. For example, would be a centralized, like the dashboard that would display the graphical information about the different cryptos. It would only be specific to the user of whatever it is that they have on their wallet.
01:30:22.674 - 01:31:26.054, Speaker A: And if they want to be able to buy something else, then they can go over to the swap or the trade area and they can actually get more from their current crypto. But the wallets, it's integration. The idea right here is to be just a hub so that we're just connecting to current DeFi applications. We don't want to be able to store any information or do anything like that. You got it. Thanks. Actually, I think your educational piece would be very valuable to potentially then lead people through the other options because of this hub situation where you could go, okay, now here's a very practical thing for you to do now that you have learned a little bit more about XYZ, right? So really potentially maximizing that and kind of giving you're almost giving people an entry to a lot of stuff through just the one door that is yours.
01:31:26.054 - 01:31:46.354, Speaker A: Right. It's still very decentralized and so on, but people can kind of go in and try a lot of different rides, right? A little bit like an amusement park you go in and then you kind of make your way through. So actually the educational piece might be your best bet to begin with. I appreciate the feedback. Thank you. Absolutely. Good work.
01:31:46.354 - 01:32:08.962, Speaker A: Thanks. Thank you. Thank you. That was awesome. And with that, we'll move on to our next demo and that is ETH Dollar. So I'll be playing the video on my end and Bernard is here from Singapore to answer any questions. Hello greeting judges.
01:32:08.962 - 01:33:29.410, Speaker A: My project is not about ETH dollar. My name is Bernard Chu, I'm a final year computer engineering undergrad from Singapore inspired to be full step developer I hack a loan to try out my ideas and learn. My inspiration came from Maker CDP Fresh Press liquidation we can create an account based loan system so E Dollar is born e Dollar is an ERC 20 token you are changing price feed e Dollar works by enable user to mean and burn so mean the e dollar assume that the price feed from chain is updated and user will have to pay a photocopies when they mean. For example, user send one if and they will receive $208 back and for burning user will have to send $208 and then they will receive the eback with the current price on chain link so how to hack money with E Dollar? The item will always be mean high and burn low so this is the user's diagram initially, user will have to lock up if to be able to participate in this and burn. If user is able to make a profit on this, they can close their position and redeem the initial lockup. However, if the users are not able to make a profit and they make a loss, they have to purchase or purchase e dollar and pay back the loan. The debt will be defaulted and the initial lockup will be sent to the governance contract.
01:33:29.410 - 01:34:43.370, Speaker A: The Governance smart contract will be used to receive and vote on proposals to benefit the ecosystem and to make sure that the whole protocol is working. The benefit of using each dollar is that it's an Eric 20 token users are able to burn and there's no cost equal issue when market crash so it's built on transformation link so for future integration attend the recruiting mates governance Token to implement pricing regulators for compliance. Thank you. This is Dollar for the demo part I'll be demonstrating requesting data from handling and meal and burn so I'll be demonstrating how do we get a price? Assume that we have already deposited lockup and as you can see that the price is not updated so you press on change say that again. I think there's a lag with the video on your end but I'll continue playing it. Okay, let's see for a moment confirm the transactions. As you can see, the transactions is really mine actually, I think you're right, this is not on sync.
01:34:43.370 - 01:35:41.610, Speaker A: I'll see what the quick fix is I'll be back in 1 second. Maybe in the meantime you can just talk over it, Bernard. Okay, so how do we hack money with $8? So it's always to mean high and below. So this is the user state diagram. So initially user have to set the if lockup into the contract and then after that they will be able to minimize. Subsequently, if they made a profitable trade, they can close their position and redeem the initial if lockup. However, if they make a loss, they have to default their initial evlockup and they are not able to continue to benefit from the protocols.
01:35:41.610 - 01:36:39.118, Speaker A: So is being used as an ERC 20 token being able to trade on the market? It's being built on shuffle chain link, open seven and next. And for the finish integration, I would like to recruit inmates smart contract audit, initial pool on Uniswap governance, token to implement pricing and regulators. Thank you. So for the demo, right, I'm not able to show you because it's on the video working, so I'll just kind of turn back to that. Would you mind closing your screen share? Okay, sorry that we already deposit e block up and as we can see that the price is paused, so the data is not updated. So we press on changing. Let us wait for a moment.
01:36:39.118 - 01:37:27.674, Speaker A: Confirm the transactions. As you can see that the transactions is already mine. So refresh. Now the price is so as you can see, our wallet have so it's mean two E. We'll get back 410. Let's see, confirm the transaction and our transaction is mine again. And we can see that we have $420 and we are able to use the price again.
01:37:27.674 - 01:38:08.038, Speaker A: So now we try to burn and receive some back. Confirm the transactions and we shall wait. Again, the transaction has been mined and let's see the balance. Yes, we have successfully burned the Ebal that we have mined and there won't be any difference because the price is the same per minute. And burn, for example, if we at a higher price and then burn at a lower price, usually a profit. That's all for my demo. Thank you.
01:38:08.038 - 01:38:34.800, Speaker A: This is in progress project, so I hope you don't mind. Subsequently we'll add more features to default the users if they are not able to pay back within the time period. That's all for my presentation. Thank you. Thank you. Any questions? I have a question. So is this MakerDAO without forced liquidation? Yes.
01:38:34.800 - 01:39:49.282, Speaker A: Okay, so without forced liquidation, could you explain again the mechanism by which you incentivize people to participate in the mechanism of the system? Yeah. So they will have to set the initial look up so that during the process they have a period where they have to pay back the loan before the loan default. So let's say the price of ETH is $200 and I get 200 E dollars. Could I actually get the same? What is the ratio? Is there a ratio between how much ETH dollars I can get and how much ETH. How does that work? 100%. So depending on the price on the chain link, if current price is $200. So you get back 200 if dollar.
01:39:49.282 - 01:40:22.320, Speaker A: And if you happen to default the $200, the if will be sent to the governance smart contract. However, for the Governance smart contract, I haven't implemented the logic yet because I'm still thinking of do you manage the governance process more decentralized way. I see. Okay. Would you mind turning on your video? Sorry happened. Okay, yes. Okay, got it.
01:40:22.320 - 01:41:11.380, Speaker A: Yeah. Essentially the difference between this and MakerDAO is that you don't have forced liquidations and that you don't have under collateralization. Yes. So you'd be packing out one to one depending on the changing price. I see, okay. And have you documented the mechanism design anywhere so that could be understood better? Sounds like an interesting proposition, but might need to take not yet because I'm still thinking the time period for each loan and each position. I'm not so sure which method would be the best to move on.
01:41:11.380 - 01:41:28.230, Speaker A: Okay, thanks. Thank you. Thank you. Awesome. Thanks Bernard. Thanks for staying up late too. And with that, we'll move on to our next demo, and that is DeFi Stacker.
01:41:28.230 - 01:42:36.010, Speaker A: So if you can turn your camera on and unmute yourself, we can begin the screen share. Hi, everyone. My name is Val. I'm a software engineer at Font five, where I work on Dows. I'm here with my teammate Sean, who works for Mellon Protocol. And I'm just going to give you a quick rundown of the basic contracts in our system. The main contract is a stacker contract.
01:42:36.010 - 01:43:54.040, Speaker A: The stacker contract receives a number of DeFi actions bundled as a stack, and executes each action in sequence. So the primary function that users call here, like the front end calls here, is an Execute Stack function. The Execute Stack function receives the spend assets, the assets that a user wants to spend in their stack of transactions along with the actual stack of transactions, which we call calls. So we have these three arrays, each of which have a matching length, and each index in the arrays represents an order. So each order has an adapter address, a function signature, and encoded call arguments, which are all passed to the adapter via a delegate call. So we use a system of adapters where delegate calls reach out to these plugins that we call adapters, which perform the request and tell the stacker contract the tokens that it's received at the end, and then passes the baton to the next action. So, yeah, each call to execute stack, validates the inputs, custodies the assets, runs through and executes all the calls, pays out the balances to the user, and then emits an event at the end.
01:43:54.040 - 01:45:01.710, Speaker A: And currently we have a test suite that runs unit tests using Truffle tests with open Zeppelin's test helpers and you can see we have adapters passing with our unit tests with flash loans from Aave, lending and receiving via Compound, trading via Kyber and Uniswap. And we have an adapter in the works as well for maker CDPs, which is not quite done yet. All right, so here we spun up Ganache CLI with Docker and this is connected to a archive node using a service called Moonnet. So we're actually running a fork right now of mainnet. And so this is that fork getting set up. Have our accounts there. And here you can see the Moonnet URL.
01:45:01.710 - 01:45:43.210, Speaker A: That's us running all the migrations to get our contract up. So that's going. Then over here is where we did our migrations to deploy. So the stacker contract being the main one. And then we have our adapters for the different providers that we use so avid. And the last piece of this is our user interface. So we allow you to add funds to your pipeline and we allow you to create a pipeline with different actions attached to it and you can create a sequence of steps that you'd like to execute.
01:45:43.210 - 01:47:14.570, Speaker A: All right, yeah, happy to take any questions. So is this like a visual programming tool for DeFi? Yeah, I think that's a really good way to think of it. So for the most part, we kind of create this interface that allows you to build a DeFi stack. We were inspired by Guru Combo and how they did that, but focused on creating this adapter system that made it really easy for developers to integrate this into their existing systems or into their own front end. So kind of focused on getting the adapter set up and then allowing you to quickly spin up those adapters with subgraph as well using your forked note. So is this something that you would see as being developed as a public good or is there a business model behind it that you think would make sense? Yeah, I think both actually. So we talked about this too, especially in regards to front running and kind of there's two options that we can go like one is we make this available to developers to self host and they can kind of do what they want with it and expand it.
01:47:14.570 - 01:47:45.308, Speaker A: The other is us actually being a host and the benefit of that is economies of scale. So running an archive node is really expensive. We're using Moonnet, which is $25 a month, I believe, but actually building that whole infrastructure yourself could be like a few hundred dollars a month. So if we provide some hosting, then we can scale this out and make it easier for people to get on board with it. Very cool, thanks. Great. Oh, sorry, go ahead.
01:47:45.308 - 01:48:42.050, Speaker A: If you have a question, go for it. Yeah, maybe just what is the simplest thing you think would be cool to build using that? Have you thought of any use cases of how people could use that tool. Yeah, my teammate Sean is here if you want to answer that sean I can go for it. Yeah, sure, no worries. So kind of like a number of actions involving maker CDPs was kind of like where we wanted to get we just didn't have time to finish the maker adapter unfortunately. But yeah, being like the kinds of things that you hear about a lot like in the newsletters these days like being able to swap out collateral types using Ave flash loans and swapping out your underlying collateral and CDPs without having to actually close the CDPs and pay the stability fees and such preventing liquidation. Like kind of like what DeFi Saver does.
01:48:42.050 - 01:49:07.096, Speaker A: Yeah, these kinds of actions. Cool, thanks. Awesome. Thanks guys. Awesome. Thank you so much. And I think the coolest part of all this thing other than the amazing sort of framework you've designed is that you mentioned using Moonnet and the team that made Moonnet is also one of the participants and they're working on something else for this hackathon too.
01:49:07.096 - 01:49:31.798, Speaker A: So that's just really cool to see a lot of composability in action for the hackathon. So with that, we'll move on to our next demo and that is NFT Finance. I'll let them kick off the screen. Share. Hello everyone. Hey. Hello everyone.
01:49:31.798 - 01:50:38.058, Speaker A: I'll be presenting the project NFT Finance. I am Dragosh and I have been working on this on my own. So what is it exactly? Well, it's a peer to peer platform where users can do two main things they can borrow or rent NFTs or they can use the NFTs that they own as collateral for loans and to get access to liquidity. So now let's take a look at a short demo of how it works. Okay, so first of all, we can see all the NFTs that a user owns, we can look at the NFT's description, we can check who made the NFT and we can go to OpenSea to check the NFT's trading history and see how much it has previously sold for. Now, let's say we choose the house as the NFT that we want to put up for lending and we specify the collateral amount in case the borrower does not return it. We specify the price it costs to borrow the house, basically to rent the house and we specify the total period of renting it and we approve the transfer.
01:50:38.058 - 01:51:18.610, Speaker A: And now that the transfer has been approved, we can put the house on the market. Okay, so now the house is on the market and we can see it in the list of pending offers. The status at the moment as you can see, is pending. So no one started borrowing it and we changed to a different address. And this address as you can see, doesn't have any NFTs. They don't own any NFTs but they're interested in borrowing or renting the house and in order to do so, they have to pay the collateral plus the lending price, and they just did so. And now we can see that the status is active.
01:51:18.610 - 01:52:09.410, Speaker A: They have started borrowing the house and they have it in their wallet before the renting period ends. They can use the house as they wish as long as they return it in the 24 hours that were specified by the lender. They have to do so because otherwise they would lose the collateral amount. So they approve the return and they return it to get their collateral back. So now this user doesn't own any NFDS, but if we go back to the lender address, we can see that he received his house and he also received the price for lending out the house. So he has earned some side income. Okay, so how do I think this could work? Well, there is a big secondary market for NFTs.
01:52:09.410 - 01:52:48.490, Speaker A: They can be sold and auctioned on platforms like OpenSea, for example. And users can check the NFT's trading history and try to speculate on their market value. But even so, I think it's hard to price them individually. And I think that any loans with NFTs as collateral would have higher interest rates than other kinds of loans because of the risk involved. So, to wrap up, there are two main use cases. Users can use their desirable ERC seven to one tokens, such as ENS names for example, to get loans in ETH. This way they have access to liquidity without having to sell and then buy back their asset.
01:52:48.490 - 01:53:49.894, Speaker A: Maybe in the future there will be tokenized, real assets that are tokenized and tied to ERC seven to one tokens. And the second use case that I presented is the ability to borrow NFTs. An example use case would be if someone needs an in game power up to maybe pass a certain level and they need a short term lease for that asset, maybe for decentralized land or art. At the same time, lenders of those assets have a new source of passive income and they are incentivized to lend out their valuable NFTs. Thank you. Thank you, Daragosh. So I think, yeah, with the house, was that what you had envisaged with the real assets potentially in the future? Yes.
01:53:49.894 - 01:54:28.820, Speaker A: That's not really for the real assets in the future, but I think at the moment the best use case for it would be for gaming in case someone needs a power up to pass a certain level. That would be for borrowing NFTs and for using NFTs as collateral. Well, any NFT that has speculative market value could be used as collateral to get access to ETH. But I didn't demo that because it's not ready. I just finished the smart contract for it. Okay, very interesting. One idea that came sorry, go for it.
01:54:28.820 - 01:55:22.854, Speaker A: I was just going to say that one. Maybe other use case you haven't mentioned that I think would be cool is for people to short NFTs so whenever you're lending an NFT and someone thinks that value is higher than what it should be, they just borrow it, sell it and then hoping for them to be able to buy it later on for a lower price. So it helps also kind of regulate the market prices of NFTs. So I think that's a cool thing that you enable with your project. That's very interesting. Yeah. What would be the difference between just let's say you wanted to power up in a game, just buying it temporarily for whatever it costs, and then selling it back when you're done with it? What would be the difference between that and between using something like this? I think there's more risk involved in doing that.
01:55:22.854 - 01:56:03.300, Speaker A: You could risk losing more money by selling it afterwards. Maybe you're not even able to sell it. I mean, you could auction it off, but still, I think it's much safer because you know exactly how much it's going to cost you over that certain period of time to own that NFT. One important thing is tax implications of selling something and rebuying it. So if you just borrow something and put something up for collateral, you're not selling that collateral at any moment, so it's not a taxable event. So that's also very useful. That's a good point too.
01:56:03.300 - 01:56:13.400, Speaker A: Very interesting. Thank you so much. Thank you. Dragosh, well done. This is really cool. Well done. Thank you.
01:56:13.400 - 01:56:51.630, Speaker A: We'll move on to our next demo, and that is Team Donor Box. So let them share their video. Hi, guys. So the product we're going with is called Donor Works and it's basically a decentralized crowdfunding platform which offers a few other features over its counterparts. Mainly another level of transparency. My name is Rishabh and I'm in charge of the front end. And my name is Rakshit and I worked up on Backend.
01:56:51.630 - 01:57:26.274, Speaker A: So now going over the workflow. So, our project consists of a single contract which consists of NGO, donor and fundraiser account. When an NGO initiates a fundraiser, he has to specify a target that a fundraiser has to achieve. So when a donor donates an amount to a fundraiser, if no milestone is achieved. So for a specific target, these targets is divided into three milestones. So when a milestone is achieved, the amount collected by the fundraiser is transferred to the NGO. Otherwise no authority over the donors.
01:57:26.274 - 01:58:34.894, Speaker A: So this is a demo of a product. So we have already created NGO account, a donor account and a fundraiser account. So this NGO is a fundraiser, one named fundraiser, which has a current balance of zero. No donor has donated any money to it and it has a target of 120 to achieve. So it is distributed in three milestone 40, 80 and 120. So if a donor wishes to fund this fundraiser, he can go here and type the amount of token he want to donate and click on Donate button. So as we can.
01:58:34.894 - 01:59:55.190, Speaker A: See, 20 tokens have been transferred to this fundraiser and as no milestone has been achieved, so the balance of the NGO will be zero. So now the target first milestone is 40. So we'll trigger the milestone, let's send 30. So now the total amount that a fundraiser will have will be 50. So the trigger will be made from the fundraiser to the NGO and 40 tokens will be sent to NGO and fundraiser will be left with ten tokens it and this 40 will be transferred to the NGO. So the technology we've used is basically we are running a server which is a Node JS server, and we are using MongoDB as the backend database and we are using Eepsvigil's API which allows us to deploy our contracts and gives us an interface over how to react to them, interact with them, basically. And then we use WebSockets to communicate with the callbacks that they are given to us by the API.
01:59:55.190 - 02:00:51.990, Speaker A: So basically what we wanted to actually implement was a feature that would allow the donor to have control over how much he's contributing. So basically what we wanted to achieve is to give the donor the ability to withdraw money to any fundraiser that he's funded until the milestone is met. So we were trying to achieve that. I hope we can achieve that in the future. So thanks a lot for giving us well, thanks guys. What donations and what tokens can I make? Because I know you said ERC, 20. Is that any ERC, 20 or is yeah, so just die for now.
02:00:51.990 - 02:01:23.550, Speaker A: Just die. Okay. And then is the idea that essentially this is just for general use for anybody wanting to contribute to a fundraiser created by an NGO. Yeah, correct. So basically anybody who signs up can donate and receive. So what we wanted to we haven't integrated that yet, so currently you have to put in your wallet when you're signing up. So we plan to change that to Omitate, anybody who wants to.
02:01:23.550 - 02:02:34.500, Speaker A: Okay, could you give an example of a real world problem that you think this would be useful for? So basically I think that whenever you're contributing to one of these crowdfunding sites, you have very limited control over the amount you're giving out and you do not have too much transparency over how this is getting used. And in some cases where I recently actually myself contributed to one of a crowdfunding campaign and my money got totally botched because the campaign was unsuccessful. So the idea is basically, until the milestone is achieved, you have some sort of control over your money so you can withdraw your cash until the milestone is reached. The idea is for some things, for some type of NGO goals, you would need a critical mass of resources to get anything useful done and you don't want your resources to go to waste if the group doesn't reach that critical mass. Yeah, so we divided it into, you have to at least achieve some part of the got it. Quick question. Sorry.
02:02:34.500 - 02:03:19.984, Speaker A: If you're done one thing that kind of caught my attention is that there was no MetaMask approval or anything kind of approving the transactions. How does that work under the hood? No. So right now, this was just using a simple ERC token, 20 token. So that's why no MetaMask like our own token. But is it done using Ethereum at all? Are you sending actions to Robson or COVID and testnet? Rupture, do you want to jump in? No, actually, we are not implemented. We have not integrated the MetaMask yet, so no real tokens are being sent. So this is just a token.
02:03:19.984 - 02:03:42.644, Speaker A: So ERC token is not included in the contract. That's just like the UX flow. Okay, understood. Thanks, guys. Thank you. Thank you, Chevron Rukshit. And yeah, I hope that you get to continue working on this thing and make it ready for a full on integration with all the Web three libraries.
02:03:42.644 - 02:04:12.228, Speaker A: Yes. So we have two more demos left, and then we'll be able to finish off today's judging session. So I'd like to invite our second last team, and that is Project Telegram Totality. So I'll let him take it away. Yes, hello. I'm going to share my screen. Hello, everyone.
02:04:12.228 - 02:04:43.800, Speaker A: This is my presentation about Telegram Totality, a hacker made. I'm averag kors. I'm a backend developer and I'm focusing on bot UX. So what I've built, I created a fork of the original Telegram client and integrated a non custodial Ethereum wallet. So it works. You store your private key, it maps your Telegram ID to your Ethereum address, and this enables a protocol for bot creators. So this is the Telegram client.
02:04:43.800 - 02:05:16.756, Speaker A: It's just like in the normal client, you can send and receive messages. So now I go to the key storage, the key management. This is my public Ethereum address, and I already stored my private key, and the application makes sure these match. So you cannot store a different private key from your address. So below my name, you see my balance in die. I currently have twelve die to my account. So now go to Roscoe.
02:05:16.756 - 02:05:41.356, Speaker A: Roscoe has a tip button next to his name. That's because he has his public address in his Bio. So when I press the tip button, it transfers one die from my address to his address. And yeah, currently the transaction is pending on the Robson network. Yeah. So the transaction is done. As you can see, the tip button appears again.
02:05:41.356 - 02:06:02.544, Speaker A: So my preference balance was twelve die. So it should be eleven now. So when I go to the menu, it will show eleven die. So that's perfect. And when you go to Robson, you can also view the transaction that made it happen. And this is transaction. So now I'm going to show the enspot I've created.
02:06:02.544 - 02:06:31.488, Speaker A: So the enspot will get my public address from this client. So I press Start, it automatically gets the domain names I've registered. These are ether. Eat and meme. Eat and the expiry dates. So this bot will send me a push notification when they are about to expire, but you can also renew them actively. So I want to renew AFORD Eat and I want to renew it for one week.
02:06:31.488 - 02:07:00.232, Speaker A: So it will add one week to the expiry date. Well, it receives the transaction hash. So my client just signed the renewal for one week and now I should get a confirmation. Oh, there it is. So, yeah, the renewal is successful and this is the transaction hash. You can look it up. Now I'm going to show the alphabet I made.
02:07:00.232 - 02:07:42.980, Speaker A: The alphabet monitors your health factor and sends a notification if it gets below the set factor. So mine is 1.9 and I am sending it to two. So a couple of seconds later I receive a notification and it requires me to deposit eleven cents to get my health factor to at least two. So I deposit eleven die cents and you can verify the transaction through the Robson link we'll show you. Yes. So this is the deposit to the Ave protocol.
02:07:42.980 - 02:08:17.250, Speaker A: So to verify my health factor is at least two, I can do the risk command and see my current health factor. So that's great. It worked. Fork of the official Telegram app is designed a protocol for ESC bot integration and it's still compatible with normal Telegram clients. So future work is to open a protocol for more use cases, support more clients, and generalize bot library. Check out the source code and thanks. Yes, thank you.
02:08:17.250 - 02:08:50.648, Speaker A: Great. Thanks, Everett. Ready to take any questions. That was really impressive. That was really thanks. Thanks. How much of that functionality would be possible to implement without changing the Telegram client? Yeah, so now I've kind of hard coded the AFA and ENS use cases in the Telegram client, but it's possible to make like a protocol for every use case, every contract with Ethereum.
02:08:50.648 - 02:09:36.460, Speaker A: So this is like the two example use cases, but you can make it design it in a way that it's possible for every use case. So bot creators can have the creativity to create their own use case. Were you intending this to inspire Telegram to add Ethereum support to their yeah. So indeed, it's like more of an inspiration thing, an MVP thing for inspiration because chat is so intuitive interface. A lot of people use chat, like 4 billion people on this planet. And the current wallets, a lot of regular people, like my dad, for example, he is not using a wallet, but he can use chat. But this will also be like a Kickstarter for adoption.
02:09:36.460 - 02:10:15.290, Speaker A: So it's more of an inspiration thing. You should have a chat to the guys doing Colab 19. They basically built a bot and it's very much focused on this COVID use case. But they've built this bot that essentially does a lot of that kind of bot functionality. And if you added the wallet piece, that would be amazing because essentially they were fundraising for a lot of different initiatives. So I can link you up with them and you can have a chat. But it's really good work.
02:10:15.290 - 02:10:36.264, Speaker A: It would solve a lot of issues for a lot of people. Yeah, YouTube to telegram. Sorry. Yeah. Okay. So, yeah, these are two use cases I've created during the hackathon. But the use cases are, of course, endlessly.
02:10:36.264 - 02:11:35.696, Speaker A: You can create every possible transaction. So Simona mentioned that there have been other attempts to create some bots. What do you think would be the advantage of doing this inside the client as opposed to using a bot? You mean the transaction signing? Yeah. So I think I know some people that, for example, a couple of friends, they know Ethereum, they know crypto, but they're not using DeFi because the MetaMask, the wallets, are like it's built for developers, not for users most of the time. So this is like the most intuitive way to, for example, communicate with the Alpha Protocol or DNS protocol. So, for example, you can sign a transaction via MetaMask, but a lot of users would stop using it because just a hurdle to use. It 100% totally awesome.
02:11:35.696 - 02:12:25.456, Speaker A: Thank you so much. Congrats to Telegram and also that you own meme eat on the Robster network. So, with that, to our very last demo for today, and to close everything, I want to call up team and project Event Drip. So let them kick off their demo. Hi, my name is Dan, and our company is called Event Drip. Event Drip is a platform to launch and monetize your live events by offering premium experiences for fans willing to spend a little more for exclusivity, it's difficult to organize, launch, and monetize your live streams. So we wanted to offer creators a unique set of tools to handle any virtual event.
02:12:25.456 - 02:13:08.932, Speaker A: It's uncertain what the future of live events are, and creators need a solution. Now, I'm going to pass it off to Lofton to show you what we've done with the website. Thanks, Dan. We set up a website to help us showcase and promote event trips, products, and brand. We've made it easy for creators to request an invite and offer some UI examples of how an event might look for different use cases across many verticals. Whether you're an independent artist, musician, public speaker, esports, gamer, or fashion brand, eventrip lets you easily set up your event, invite your fans, and earn crypto. We've also tried to clearly communicate how eventrip works in simple steps.
02:13:08.932 - 02:14:03.600, Speaker A: We want to make it as easy as possible for people both inside and outside the crypto community to understand our product and the benefits it can provide to them. Now I'm going to pass it off to Terrence, who will walk us through a demo of the app. Thanks, Lawson. So I'm going to play a video for you guys of our current product. So the first thing I'm going to do is create an event and I'm going to pick a meetup in New York City and just add some data, pick the image. So basically what it's doing now is it's taking all of the event metadata and it's uploading it to IPFS as a JSON file. And then the actual IPFS hash that gets returned becomes a unique key to the event to be stored into the ethereum blockchain.
02:14:03.600 - 02:14:43.020, Speaker A: So here you can see that the event is created. First thing I'm going to do is I'm going to go ahead and buy the ticket. Every ticket is an NFT ERC 721 based Token, as you can see about the ticket. And here I'm going to go ahead and create a new merch. Merch are digital collectibles that the creators can offer to their fans. And same thing here is taking all of the merch data and combining it as a JSON and uploading to IPFS. And then the hash becomes the unique ID for the merge.
02:14:43.020 - 02:15:08.820, Speaker A: Once the merge has been created, then it's immediately available for sale. The next thing I'm going to do is start the event. And once I start the event, you can see the live stream. You can also have any sort of videos on there. And once I'm done with the event, I can finalize the event to withdraw the funds from my event. And that's it. Back to you, Dan.
02:15:08.820 - 02:16:11.846, Speaker A: Thanks, Terrence. We're excited with how much we've built in such a short time. If you guys are interested in working with us, please email us at hello@eventdrip.com. Thank you, guys. All right, so what do you guys think? I'll let Fernando and Liraz take the first ones because I've seen your evolution from the feedback round. Is this a tokenized eventbrite? If you had something not crypto, but what would be the template that you were thinking of? Yeah, I can answer that. Yeah, so it's definitely closer to eventbrite.
02:16:11.846 - 02:17:56.060, Speaker A: Basically the biggest difference is like, if you go with eventbrite, you're kind of locking into that platform, but we're making it NFT based so that you have the full interoperability. You can send it to your friends and without having to worry about the platform. So what are protocol? Yeah, if you think about it, maybe eventbrite ticketing, plus the storefront building capability of shopify with the fan contribution of Patreon all in one stack with additional visibility to see what's actually working and monetizing for you as you're already live streaming. Got it. Have you thought of maybe kind of connecting that to virtual reality like events happening in VR and that NFT is kind of your entrance, like your ticket to enter the event? Something like that? Yeah, definitely. The beauty of this is even after the event is done or you purchase the collectible, you can still be able to unlock additional experiences. And hopefully this will give content creators the ability to create more of a guide for the user based on their products and services and then eventually getting that into something like decentraland or companies that want to show exclusive augmented reality presentations, additional access to really behind the scenes and cutting edge stuff.
02:17:56.060 - 02:19:01.520, Speaker A: So what were your thoughts on business models for something like this? Because there's this protocol layer to it that allows you to transfer your tokens and makes it across platform potentially. There's also a lot of UX work. What were you thinking of in terms of potentially making this business if you had thoughts in that direction? Yeah, so we looked at it at two models. So there's like a self serve for some of these content creators who have the grit and ability to invest in still doing what they're doing, but come in and create simple events and uploading their tokens. But we're also, in addition to taking a small percentage of the Minted ticket and merch, we're looking at an enterprise model where we can license out the platform, where they can monetize and then additionally offer other productized services around that to help businesses grow. Got it. Very cool.
02:19:01.520 - 02:19:25.654, Speaker A: Congrats, guys. Thank you. Thank you guys for your time and staying so late to watch the last presentation. It was a good one. So thank you. Thanks. So does that mean we present on Tuesday? We'll be fulling with that.
02:19:25.654 - 02:20:05.334, Speaker A: I want to thank everybody who took out the time today to sit with us and watch the live streams. And also a big special thanks to our judges for being here and giving us our weekend and feedback to the teams. So I want to just send a quick reminder to everybody that our finale will be this coming Tuesday from two to 04:00 p.m.. Eastern on June 2. So please stay tuned and check out who the best teams are going to be from this event and we get to showcase them. And I want to thank our judges one more time for being here. And before we end this thing, a quick reminder that in about 30 minutes, we'll be launching two humans into outer space.
02:20:05.334 - 02:20:11.810, Speaker A: So be sure to watch the SpaceX live stream. So thanks again and we'll receive the final judging tomorrow.
