00:01:38.220 - 00:02:13.424, Speaker A: All right, let's get started. Hey, everybody. My name is Kartik, one of the co founders of Eve Global, and welcome to Hack FS. Hack FS is a hackathon organized by Global in partnership with Protocol Labs. And we're super excited for everybody here today and also who's going to be watching this video after to see what our projects have done. So today is day two of judging and as like, a quick summary of how this event has been so far. Over the past month, we've had 470 hackers from 50 different countries and working across 19 different times.
00:02:13.424 - 00:03:12.512, Speaker A: We participate at this hackathon, and they've worked super hard over the past four weeks on their projects. And as of two days ago, we got them to submit what they were working on. And we're kicking off a whole week of demo and judging where we'll see a handful of projects showcase what they've done to everybody on this live stream, but also across the whole ecosystem and on social media. And we're excited to sort of see what everybody has built and go from there. So on top of all this thing, we were super impressed by what everybody had done. And I'm super excited to announce that we got 132 projects for this event, and we're taking today to see about 13 of them in giving everybody here a peek of what our developers and hackers were working on. So before we kick off to our demos, I want to go over some quick logistics about how the event itself was set up and how JJ is going to work.
00:03:12.512 - 00:03:53.212, Speaker A: And the quick highlight here is that there's going to be 13 teams today, and each team will be getting four minutes for a demo and four minutes for a Q and A. And to minimize any AV issues, we've asked all the teams to prerecord their demos, which they will be playing as they come on. And after their demos end, we'll be moving into a live Q A with the teams directly. In terms of how the event itself was set up, the rules were simple. Every project can be worked on with a group and a few teammates. If you were working with a team, you could have up to five members on your team. It was also totally all right for you to work individually for your project.
00:03:53.212 - 00:04:52.156, Speaker A: And as a rule, everything that you see here was written over the course of the last month. So everything you've seen here was built during the hackathon, and the only qualifier for them being eligible for hackaths was that their project must incorporate the tools and technologies from the Protocol allows in Ethereum ecosystem. So a lot of cool things we're going to see today are really interesting mashups of what decentralized storage and smart contracts can enable. We're super excited for everybody else to see that as well. So in terms of how the judging itself is going to work, we have five categories that our judges will be grading our projects on. And they'll be looking at a project on how technical original and how practical the idea and the submission is. And on top of all that, how easy it is to use from the end user's perspective, whether it's a developer tool, which is on the developer experience side, or if it's a web or mobile app on the usability of how easy it is to grasp the ideas.
00:04:52.156 - 00:05:53.670, Speaker A: And then we also have a category we'd like to call the wow Factor, which helps us incorporate any catch alls that we may have missed from the four categories before or above. So before we kind of really go into the demos, I want to really emphasize that this is not a competition. This event itself was structured to be a place for hackers to learn what is possible with both the Filecoin and Ethereum Ecosystem. And the hackers are really here to share their excitement and showcase what they've done over the past four weeks. And moreover, the judges that are here with us today are on for the purpose of giving more feedback and learning more about what they think this can be if the teams continue to work on these projects. And just to be really clear, not everybody here is trying to become a business. So while you'll see some projects that are totally going to continue working on and go become something more than just a hack, the goal for us is to really encourage experimentation and have everybody play with what's actually possible with the world of web3.
00:05:53.670 - 00:06:32.768, Speaker A: So the quick schedule for today is that these are the projects that are going to be demoing today. And doing the hard job are three judges. So we have David Myhal, who is an independent engineer in the Ethereum Ecosystem. We have Anti McGuire from the protocol lab side, and we have Bret Gibson, who's an investor at Initialized Capital. These three judges will be with us for the next 2 hours, talking to all of our teams and projects and giving their feedback and asking them questions. And with all of that, I want to welcome all three of our judges and also our very first project for today offer day two of judging. And I'd like to call up Oya Protocol to come and kick off with our first demo.
00:06:32.768 - 00:06:41.060, Speaker A: So please welcome Oya onto the webinar. Hey, everybody. We're team Oya.
00:06:45.090 - 00:07:18.202, Speaker B: We're demoing the product listings and affiliate program for Oya, a decentralized e commerce protocol. Our team members are ibu, fennichut, johnshut and joshupek. Centralized e commerce platform try to maximize profit and power for themselves at the expense of their users. By decentralizing product listing, we remove a key lever of control for big marketplaces. We all know the current system is broken, but let's look more closely at how it fails. Denise has a jury business and sells online. She has to release her whole inventory to join a new marketplace creating platform lock in.
00:07:18.202 - 00:07:50.954, Speaker B: She also has to reveal sensitive business data, pay use fees, and lose direct interaction with customers. With COVID-19, her brick and mortar partners were forced to close, and she is more reliant than ever on centralized online markets. Brie is an instagram influencer and affiliate marketer. She gets paid by affiliate programs at youth trackers that invade her fan privacy. Her business took a big hit when Amazon slashed affiliate fees during the COVID-19 cris. When other companies sit between Brie and her sellers, she gives a fall control. Thomas likes to support small businesses.
00:07:50.954 - 00:08:28.746, Speaker B: Unfortunately, when shopping online, he has few options outside of a handful of big companies. With COVID-19 closing physical retail stores, he has fewer choices than ever. Sellers, buyers and affiliates funnel money into big companies, and more importantly, they funnel huge amounts of valuable and sensitive data. Accumulating money and data. Centralized marketplaces grow into tech monopolies, product listings, sales history, inventory, marketing, data traffic flow, consumer interests, reviews, and more. This data accumulates and benefits the tech monopoly, but only the tech monopoly. The growing profits have to come from somewhere as competitors die or get consumed.
00:08:28.746 - 00:08:56.698, Speaker B: It has to come from the users. Centralized marketplaces that value growth above all else inevitably work against the public interest. Oya is different. It's an open source e commerce protocol owned and run by the community beneath. Join Oya to take advantage of the low fees, which allow her to lower prices for customers. She also loves Oya's decentralized product listing, which let her list her products once and sell them anywhere. Affiliates can easily market and sell her products for her.
00:08:56.698 - 00:09:27.246, Speaker B: Brie loves Oya because she deals with sellers directly and doesn't need to install trackers. Smart contracts handle orders, so Brie gets paid automatically when the order is complete. Thomas loves the lower prices he gets from sellers on Oya. He also likes supporting sellers and affiliates directly and the security of knowing his payments are held securely in smart contracts until the orders are complete. Let's see how the Oya affiliate program works. Brie asked Denise to add her as an affiliate. Denise approves BRI as an affiliate in the Affiliate Registry smart contract.
00:09:27.246 - 00:09:52.806, Speaker B: Brie gets product details from one of Denise's decentralized listings on IPFS and creates a buy button for her site. Thomas discovers Denise's necklace on BRI's site. He buys the necklace, creating an order smart contract that holds the money in escrow. Denise receives an order notification and ships a necklace. Thomas accepts the delivery. Denise and Brie are paid automatically. Denise, Bree and Thomas all earn Oya tokens that give them greater control over the protocol.
00:09:52.806 - 00:10:20.242, Speaker B: Let's watch Denise create a product listing. The Oya product listing tool is hosted on fleek using textile buckets and IPFS. Denise connects with MetaMask so we know her Ethereum address. She enters her product details and photos. This creates a decentralized product listings on IPFS. The listing lives in a textile bucket with a persistent URL, and the product version has a unique CID. If she edits the listing, the URL stays the same, but the CID changes.
00:10:20.242 - 00:10:45.180, Speaker B: She can pin the CID with Pinata or back it up with Filecoin in case there's a dispute later and the arbitrator has to review the old product listing. Affiliates like BRI can use a product listing and buy button to sell the product literally anywhere. The buy button creates an order smart contract on Ethereum. You can try the tool at Oya Market. Slash hackfs. Our smart contracts are on testnet, and we're building out governance and community. Join us at Oya Market.
00:10:49.670 - 00:11:13.450, Speaker A: Awesome. That was a really cool demo, and thanks for continuing to work on this thing from Hecmoney. So with that, I want to kick off our very first Q A session. So I want to just invite all three of our judges to ask any questions that they have for this team. I can jump in. Go for it. Cool.
00:11:13.450 - 00:11:44.134, Speaker A: Yeah. Great presentation. I love the graphics and just kind of the whole presentation of everything. I guess one of the big questions that it seems like you kind of hinted at was, how does dispute resolution work? Of course, in the sense of, like, someone doesn't get the product or something. Yes, and that's something. We actually started this on the last hackathon, so we didn't go into too much detail about the arbitration process. But basically there's an arbitrator that's decided in advance that if there's a dispute between the buyer and seller, the arbitrator decides who gets paid.
00:11:44.134 - 00:12:00.970, Speaker A: And we're thinking through how to do that in a decentralized way, but it could be fleshed out a little bit. Right now, it's just kind of a placeholder Ethereum address that both the buyer and the seller. Agreed. This is the person who arbitrates. Cool. Thanks. Awesome.
00:12:00.970 - 00:12:56.346, Speaker A: Really enjoyed your presentation as well. Talk us through the tech stack. What were the biggest challenges that you kind of faced? Obviously, you've put a lot of different things together. So what was the hardest part of that for you? I think Josh could probably talk, I think just kind of figuring out which tools to use for the different pieces. And for me, at the mean, I didn't even know about IPFS before this, so just learning about it, and then I kind of had this realization. I was like, oh, we could use the CID as a unique marker for a product listing, as a container for it. And so that had some benefits of then we know the text and the images haven't changed, that this token represents the actual product listing that the person bought, and if something changes in the future, it's going to change that token.
00:12:56.346 - 00:13:51.598, Speaker A: And so that was a cool thing to realize. But yeah, just kind of understanding the space and how the pieces fit together. How far along were you in terms of being able to get all the pieces come together. What parts would you be hacking on? Yeah, there's a lot of stuff to do. We had some issues hooking up the actual order, smart contract to actually make that connection. We built the two pieces and then we haven't got them exactly talking to each other. And also the other thing that's really interesting for me is how can you make it searchable? Because right now it's up there and I can send you a link to it, but how people are going to find it.
00:13:51.598 - 00:14:42.000, Speaker A: So that's another piece that we're looking at. So you don't need to look into some other decentralized data store, I guess, when you would store the listings. Yeah, and there's something called OIP. It's the open index project, I think, and they are listing it's more for digital content, but it's a blockchain where you can list stuff and then they have searches on that blockchain. So that was something we were looking at integrating into in the future. Any final questions from our judges? If not, want to congratulate this team and we can move on to our second project? Thanks a lot. That's super cool.
00:14:42.000 - 00:15:28.960, Speaker A: Congrats on demoing. So with that, I'd like to call up Nonce and project Nonce. You can kick off your screenshot. We're team Nonce and I'm going to play the video. Hello, my name is Ellen Park and I'm going to introduce you to Nuns, which is a decentralized web indexer. I hope you like it. We've been consuming the information on the Internet thanks to gigantic mappings that were maintained by big agents such as Google.
00:15:28.960 - 00:16:14.700, Speaker A: In the decentralized space, however, it's rather complicated to keep track of all the information because the system is designed not to have superior authorities. But that doesn't mean that we cannot crawl the decentralized web. And in fact, we have to make it happen since otherwise it'll be impossible to harness the full potential of it. Let's think about torrent for a moment. It uses torrent files to help locate the resources on the peer to peer network. And those torrent files are being distributed from communities such as Pirate Bay. My project initially drew inspiration from this.
00:16:14.700 - 00:17:08.640, Speaker A: Non. Sys is designed to walk on Ethereum name service, which has human readable names for long hash values. Some of those hash values refer to the addresses of resources on IPFS, so that's how Non scrapes and analyzes data on IPFS. Furthermore, the task of crawling is also intended to be done in a collaborative fashion. For that, we propose Rand, which is a subsystem composed of a smart contract and an off chain module to help delegate work to peer nodes. Rand randomly selects a peer node in order to avoid collusion architecture. Looks like this at the moment, nonsys using infura to access decentralized web.
00:17:08.640 - 00:17:58.510, Speaker A: Let me show you the demo. So it by far has collected around 10,000 records on ENS. In the web application, you can see a list of entries. If you click it, you'll move to the web document and also you can check the transaction history of the resolver. Crawling is now done based on the predefined English keywords, which will be re engineered pretty soon. As you can see, all the crawled data is being stored on the AWS DynamoDB. I've also come up with a simulation of work delegation.
00:17:58.510 - 00:18:53.310, Speaker A: Three worker nodes and one delegator node launch. When the beating starts, the smart contract generates a random value based on the collected pledges from all the participants. And one of the worker nodes is notified that he is chosen, so he does the task for the demo. I defined a dummy task that simply writes data to the database. Nuns is an ongoing project and there are still many things I couldn't have done during this hackathon. Among others, I plan to re engineer the crawling mechanism and release it to public in the latter half of this year. So that is what I have.
00:18:53.310 - 00:19:22.700, Speaker A: Thank you for your time and I'll be happy to answer your questions. You great. Thank you for that demo. I'll let our judges jump in. Yeah, that's super interesting. It makes sense that you kind of have to tap into all a bunch of extra mechanisms to index the decentralized web. I'm not sure I understood the starting part.
00:19:22.700 - 00:21:04.780, Speaker A: Were you also talking about storing the index in a decentralized manner and could you review that? Yeah, well, the idea is to create an indexer like a search engine for the decentralized web. But my question at the beginning was, will I be able to execute it with my peer nodes, not just me? Because if I were to be the one that is exclusively collecting the information about the data in the decentralized web, I may not be able to consider that as a decentralized way of collecting the information of the decentralized web. So that's why I devised a little mechanism to work together with the other volunteering peers to crawl the data on the decentralized. So it's like a collaborative crawling process? Yeah. So the whole point here is not to become Google, is to become decentralized Google, in a way. So can you clarify what are the on chain transactions? What are those doing? Are you talking about the rant the smart contract thing or? I think you showed and sorry, my internet cut out a little bit, so I might have missed this, but it looked like there were transactions being sent as part of this indexing. Yeah, that's a work delegation part of this project.
00:21:04.780 - 00:21:59.322, Speaker A: So what it does internally is it allows some participating nodes or volunteering nodes to become part of this whole crawling task so they can actually send a transaction to this smart contract called Rend. And when it has a certain threshold, a certain number of volunteering node, it'll start the selecting round, like randomly selecting the node. And when a node is picked, he can be notified about the information of the work. In this case, it's crawling and he can start the crawling task. Cool. Thank you. I don't have any questions more.
00:21:59.322 - 00:22:28.226, Speaker A: I think this is just like a huge project to take on, especially as one person. So I have a huge amount of admiration for the kind of ambition there. Yeah. And it's just really exciting to see a lot of the new stuff like Drand is obviously something that we're working on internally at Proscollab. So great to see kind of early use cases. Appreciate your feedback. I assume you focus mostly on the integration parts.
00:22:28.226 - 00:23:03.630, Speaker A: And did you grab off the shelf crawling libraries or what is the actual stack here? It's pretty much simple. I've used web3 IPFS infura and that's about it. Yeah. I didn't get to use Textile or Pinata or other some fancy cool tech stack. I wish I had more time. No, it's great. The best thing about this demo is that it immediately solves the problem the demo before this highlighted.
00:23:03.630 - 00:23:29.300, Speaker A: So I'm just glad that this worked out and this was totally an accident, not planned in any form. And I'm glad to hear that you're going to continue working on this thing. So congrats again on this demo and we're going to move on to our third demo for today and that is Team IPFS Scholar. So I'll let IPFS Scholar start with their demo video. Thank you. Orphal Pat. Thank.
00:23:29.300 - 00:24:21.310, Speaker A: I see Eric and Yuli on the webinar. Are you able to start your screen share? Yeah. Hi. Hello. So we begin to show our video first. That sounds perfect. I just realized that this is actually on me for I misread one of the notes so I actually have to play this video and I'll do that in 1 second.
00:24:21.310 - 00:25:08.640, Speaker A: It I realized that I messed up my own advice on sound. There we go.
00:25:09.490 - 00:25:54.530, Speaker C: Okay our project act FFS scholar. Here is our vision about how it works. First, the author will upload the paper and store it in FFS and FairCoin network. Second, the reader views the paper by category by keyword. Third, readers who download papers must pay a certain amount of FalcoIn to their contributors. Let's jump to demo. The homepage is mainly composed of a search box and certain subject classification.
00:25:54.530 - 00:27:17.832, Speaker C: There are two ways to retrieve papers certain first class disciplines classified the academic papers of each subject entering each discipline you can reach trace the corresponding academic papers. You can search through the search box for academic materials contained in the entire FFS and Felcoin network. After clicking Search icon, the page will display the title and abstract of the paper. Related to keywords with the paper is what you need the reader can be filtered and click on the papers of interest to download. Then the system will according to the paper matching the CID, FFS and Fair coin network retrieval and retrieve the Fair returns. This may take some time now you get the Fair, you can download it. The user can choose to download Fire pass and the orders can be rewarded with Firecoin.
00:27:17.832 - 00:28:57.670, Speaker C: This can encourage more users to upload academic papers to FFS and FairCoin network. Another section of the platform is to upload files as shown on the page for other users can retract the paper easily and quickly use up notes needed to choose which subject area the paper belongs to. In addition, in order to let the downloaders understand the general content of the paper to attract users to download, a separate summary needs to be uploaded. After uploading, the paper will be permanently and securely stored in the IPFS and FairCoin network. And then there are some other functions. You can see our wallet and you can create a wallet address. No, you create wallet address so successfully and you can say download records and upload records or stating something.
00:28:57.670 - 00:29:09.290, Speaker C: That's our demo about our future work. Thanks.
00:29:20.800 - 00:30:34.150, Speaker A: That'S really cool. I think I'm kind of struck by that. It's not really limited just to academic papers. Like there's anything where you need the kind of access model where someone can pay for something through filecoin, I guess. What kind of features were you thinking you'd be adding next? You mean what are we going to do in the future? Yeah, what else would you build on to that? Where would you go from here? Yeah, actually the main problem we want to solve is that now for the scientific papers or other scientific data, they are using centralized publishing ways. So the author they need to pay a lot of work and money to publish their paper and also the reader they need to pay to download the papers and the scientific data. So we think it's quite expensive ways to share the scientific paper and data.
00:30:34.150 - 00:31:45.526, Speaker A: What we are going to do is that we want to do it in a decentralized way use IPFS and Firecoin network so all the authors can easily publish their scientific data and scientific paper in the decentralized storage like IPFS and Firecorn network and other readers they also can download it with only pay very little money. So in this way we think we can make more people will to share the scientific research results and data in the world. So that's what we want to do in the future with IPFS score. Cool. Definitely a really important area. I think there's a lot of issues with the current way academic research is published in that whole system. The question I had was about in the beginning you showed like a search engine for searching through these papers.
00:31:45.526 - 00:32:48.480, Speaker A: Can you tell me a bit how that search engine works and how maybe these are indexed? Yeah, that's one issue we need to solve in the future because right now we also use kind of a centralized way for the central engine. So all the information stored in kind of database and users search with keywords but for the hackathon, it's difficult for us to do a better search engine in such a short time. So what we are going to improve is how to make more powerful search engine in a decentralized light work for the scientific data. So we also want to get some support from you if we can. So that's what we need to do in the future. Great. Thank you.
00:32:48.480 - 00:33:36.314, Speaker A: No, that's great. I think I'll sorry, go on, go ahead. I think we're out of time, but that's okay. We have a few seconds left. But I was going to say, I think this is a really interesting theme because we've seen kind of just the use of people relying on Sci Hub and Archive for a lot of these papers anyway, and having a way that people can access these files if some of them get banned by your IP? Or ISP it's a really interesting concept and definitely a pretty big theme in the normal community without them realizing that this has anything to do with decentralized storage? But censorship resistance on these academic papers is already a big day to day. Yeah, thank you. Great.
00:33:36.314 - 00:34:08.386, Speaker A: So if there's no more questions, I want to thank IPFS caller for this great demo. And we'll move on to our next demo, and that is Team subsocial. So I believe Alex is already here. And Alex, if you'd like to kick off with the video, that'd be great. Hello. I just start say a few words before video. So, subsocial is a protocol for decentralized social media built on IPFS with monetization on Ethereum.
00:34:08.386 - 00:34:50.642, Speaker A: We use such technologies like Orbitdb to store content on user site, Textile Buckets to store images and videos of uploaded and Ethereum to pay per view for encrypted posts. It's optional feature and unstoppable domains to authorize through crypto domain. So this is the video. Hello guys. It's a subsocial project. The goal of subsocial is to let users own their own content and create content local first using IPFS technology and get paid for their content using Ethereum. So let's see what functionality we have.
00:34:50.642 - 00:35:16.138, Speaker A: You can sign in using unstoppable domains which exit crypto domain belongs to your Ethereum address. You can see it over here. And then we can show you how we can preload already prepared. I just want to say that this is one user, this is another user. So just showing interaction in real time. Data containing posts and images and videos. We upload this information to upload images and videos to Textile Buckets.
00:35:16.138 - 00:35:43.070, Speaker A: And here we prepared some data for you so you're not bored looking at empty screens. So we already created three spaces. Spaces are here. Spaces are similar to what you can have like private private blog or subreddit or magic publication. You can post any content and text or images or videos. You can do this in our case. And also you can comment on it.
00:35:43.070 - 00:36:14.922, Speaker A: So you can see that you can watch the video here. So now we will show you how to create a space. So you specify title description, then you select some avatar for it. Here we provided subsocial avatar and get uploaded to textiles and you can post to the space. You can choose between different types of post status, article, image, video so here we will try to upload a video post. So we uploaded preview and video itself. And then we have following spaces so we can build our private personal feed.
00:36:14.922 - 00:36:39.334, Speaker A: And here we just send creation of space. Video was uploaded to Textile Buckets. And here you can see that it's plain, everything is cool and then we go to another window. We see that our space appeared. And thanks to signaling server, we can synchronize between two different users. You can see that in one screen we writing comment from one crypto domain account and here we are. Refreshing page.
00:36:39.334 - 00:37:02.442, Speaker A: So to see that we have this comment from the guy from the left side and here on the right side we're using to write comment from another account and refresh on the left side. To see that the new comment appeared. So comments are working, synchronization working and let's go to another post. That is a video. Okay, so it's working. Let's check what we have in textile. And we can go to textile.
00:37:02.442 - 00:37:29.670, Speaker A: Folder. Okay, so we just stopped the video and yeah, so you can see that we have folders with images and videos. Over here, this is content. We upload to textile. And here, this user also has its own content. In textile, so we cannot follow and follow spaces. And when follow, we have empty space and we can lock it out on the screen.
00:37:29.670 - 00:37:56.574, Speaker A: I will show you how you can encrypt content using knuckle and set a price. In Ethereum for readers so they can pay for the content and then decrypt it using third party service. So when you go to edit post form you can specify title and price for post if it's encrypted to encrypt. Or not encrypt post. You just need to click the checkbox. Once clicked, you can copy paste a content over here. And when we click create this.
00:37:56.574 - 00:38:41.502, Speaker A: Encrypts the post to this knuckle secret box and secret is encoded for third party service for their public address. And then, if you're going to view this post, you will not see the original content. You will see this post is encrypted and you need to pay. And for example, let's switch. To another account so we can sign in with crypto domains and let's use Last domain. So we successfully signed in and so we already paid from this user. So let's click here and when we click on paper to decrypt if you already paid for this post, the current user requests the data the secret key from the third party service.
00:38:41.502 - 00:39:19.434, Speaker A: Third party service decrypts encrypted secret key and encrypts again for public key of the reader. And Reader then can decrypt the post content itself by using the secret key. So that's it. There's a lot going on here. I was a little speedy because I wanted to put all this functionality that I worked on, really tried to touch a lot of stuff in one project. Awesome. So there's no back end.
00:39:19.434 - 00:40:04.870, Speaker A: That's all the states being loaded on the client from IPFS? Yes and no, because you can run without backend, but you need a service that will hold your encrypted secrets. So I can imagine that authors that want to use this encryption feature and to sell the access to content they can run on their site, it's no problem. But yeah, it could be completely peer to peer. Cool. That was definitely a lot. Very impressive demo, though. In the beginning we just preloaded some data set because to see how it looks with different content.
00:40:04.870 - 00:41:02.922, Speaker A: So we just uploaded yeah, it looked really good. The thing I was curious about was the I really like this idea of kind of having encrypted content that people can pay to decrypt. I think you can imagine that's used for music or any kind of creative content in a way to sell it. The process of paying to decrypt that, is that an interactive process? As in it sounded like maybe you pay and then the server sends you the private key. Like it encrypts the private key and sends that to you and you can decrypt it. Is that correct? So currently we've implemented in this way that there is third party service that outer can run and once outer encrypted content, the secret key is encrypted and put into the service. And then when gender paid for content, it triggers third party service, third party service checks, Ethereum contract and if this user paid, it sends them reencrypted secrets so user can decrypt it transparently using its own private key.
00:41:02.922 - 00:41:37.080, Speaker A: So we didn't ask for this private key because we use this under Newsweek using Tweet Knuckle library. That is one server that would be like running that basically. Yeah, that should be somebody who keeps secrets. It could be centralized service, it could be service per every author it's up to community could be cool. That could be like a business model as you have this kind of decentralized social network, but kind of the service providers provide that. They're kind of the ones that are selling the contents. That's really cool.
00:41:37.080 - 00:42:48.838, Speaker A: And Alex, what's the next steps for the project? So I'm sure you've already tackled a lot, but what would you like to be able to do next? Yeah, so the bigger vision is that there is a main project, it's also called subsocial, but it's a blockchain on substrate blockchain framework and we also have web UI for it. And just yesterday we launched Betternet, so it uses blockchain plus IPFS. But on this hackathon we created this app from scratch, what you've seen, and here we just tried to use only IPFS, so we would like to integrate them so people can use between eventual consistency and higher security plus monetization. So welcome your team. What how many people were on your team? Three people, me and two more guys. Great, we're at time, and thanks, Alex. And if any of you judges have more questions, we can send over more details on how to contact any of the teams here and you can ask them more details.
00:42:48.838 - 00:42:57.540, Speaker A: And with that, we'll move on to our next demo, and that is team Building Blocks Tech. So I know both of you are here, but feel free to kick off with your demo.
00:42:57.990 - 00:44:18.250, Speaker D: All right, thank you. Hi, I'm Parul, and my partner is Kushi Wadwa, and we're participating in Hackafest 2020 as part of the Building Blocks Technology summer internship program. And our project is a task management tool, d app, and it could also be considered a blockchain using version of Canvan. So over here we have it running on the localhost environment, and I can go ahead and log in. And as you can see, it uses the MetaMask wallet so I can go ahead and unlock that. And so we're using MetaMask as our key provider such that we can interact with IPFS, as well as using textiles, hub threaddb or database tool for persisting user data. And so once it's created the key pair for this session, we will be able to access the user dashboard as well as the supervisor dashboard in order to first see the tasks that I am acting on and I'm hoping to complete, as well as those that I am overseeing and will give the checkoff on.
00:44:18.250 - 00:45:18.390, Speaker D: So if I go to the user dashboard, I can see that my tasks are divided up into three sections. One that is backlogged in progress and awaiting approval. The backlog tasks are those that I have just created and that I have sent to my supervisor, and I'm waiting in terms of whether or not they'll approve it as an acceptable task, and in progress it is. Once my supervisor has accepted that task and awaiting approval is when I've determined that task is actually completed and I would like my supervisor to check off on that. So in order to, for example, add a task, I can go here and I can give it a title. I could say something very simple like doing homework, and I could then give a description of, let's see, completing English Books, completing English Book Report. A supervisor could be a teacher.
00:45:18.390 - 00:46:56.778, Speaker D: And the date, well, I could try to put in a date that is obviously not valid, which would be less than the date today, but I'll have to be putting in a date that is after the date, so I can put it for the 21st of this month, and then I can go ahead and submit it. And once I've submitted it, I see that it has shown up in my backlog data and it would have went to my supervisor, who I identify as teacher. And in my supervisor dashboard, I can see the tasks that are requesting my approval that I'm currently actively overseeing and those that are requesting a checkoff and would like me to sign off on that. And going back to the technologies used, we have the React and Node JS framework as mentioned, the Textiles Hub to access IPFS and threaddb for persisting user data, as well as the MetaMask user authentication with the Web. Three backend solutions, three Blacks in order to generate a compatible textile identity from the MetaMask key Pair Manager that we are using in terms of reflection and future plans, this is definitely a great learning experience for exploring Blockchain oriented development tools, and we're hoping for more documentation and examples with IPFS and Filecoin tools. We're also waiting on a filecoin wallet integration with IPFS, or more specifically the project right now in development for using MetaMask as a filecoin wallet also. And we're really excited about the future of IPFS and how these technologies can be made more accessible to users, whether involved or not, in Blockchain to reap the benefits of added security and decentralization in DApps.
00:46:56.778 - 00:47:22.600, Speaker D: And features we'd like to add to what we've worked on so far are interaction with the Lotus Node API where users aren't just required to be running a Lotus Node on their system, and this could then be used to create multi SIG wallets where supervisors would reward completed assignments with Filecoin and that would be awesome. So I'll stop it right there because you want to bit over time, but any questions?
00:47:29.450 - 00:47:45.018, Speaker A: Sorry. Go ahead, Rick. Go ahead. So you said this is the first time that you'd really worked with a lot of these tools. What were the biggest challenges, like kind of approaching this particular stack and how.
00:47:45.024 - 00:48:37.530, Speaker D: Did you there were definitely some challenges presented because before this I had worked on in the beginning of the summer with smart contracts on the Ethereum testnet and using Remax. So when we joined the taxon, we didn't actually know much about Filecoin, and it's only through this hackathon that we figured out so much about it. And it was pretty fun to learn about all the tools that were being developed around Filecoin and how it's still on testnet. And definitely I think the biggest thing going in that we had not expected was how little documentation there was. Things were actually even that we had used in our project. These examples were coming in in end of June, beginning of July. There's definitely a lot of new stuff out there and I definitely look forward to seeing more documentation and more GitHub repos to look through for guidance.
00:48:37.530 - 00:48:38.560, Speaker D: All of that.
00:48:44.010 - 00:49:06.590, Speaker A: Cool. Nice work, guys. I really love Trellos. It was cool kind of seeing this decentralized trello. That's really exciting to see. I guess one question I had was kind of how do you see, obviously, user experience in all these new decentralized technologies is always difficult and kind of what are the challenges of user experience of something like this compared to Trello and how do you think those can maybe be addressed?
00:49:07.490 - 00:50:21.934, Speaker D: Yeah, based on what me and Kushi had envisioned in the really? Even though we didn't fully plan out, we really wanted to create something that wouldn't be specifically limited to users very heavily invested in Blockchain. Because, honestly, before this year, I didn't have much of an idea myself as to what Blockchain was outside of cryptocurrency and all the hype surrounding that. So when we made this and what we'd envision the future final product to look like, it should be something that's really easily accessible for us. Currently, that would be MetaMask because it's one of the easiest, I suppose, wallets out there to set up, which is why we really look forward to having that completed project allowing us to access Filecoin and Lotus Node APIs through MetaMask. And also one thing I wasn't able to cover on because the video, we had to end it. But we do plan on adding an additional feature of not only would the user receive filecoin by completing a task, but that we would be able to calculate a reputation or reliability score for the user based on their completion of tasks and whether they're meeting the deadlines. And this reputation and reliability score would be across for both the users as well as supervisors, such that we could then use this to better pair individuals.
00:50:21.934 - 00:50:47.920, Speaker D: If this is on the blockchain and this is a part of their public profile, their reputation score, then it could be something that you could see on a LinkedIn profile or be used in job applications. Because this would not only would the amount of filecoin receive be proportionate to the size of the tasks that they're doing, but we'd be able to tell okay, this person, how are they in executing tasks and meeting guidelines set by both the supervisors and themselves.
00:50:50.290 - 00:51:18.886, Speaker A: That reputation thing would be really cool. I'd love to see that's all super interesting. It's cool. It's really cool how you've kind of carved out David's usability point, like, what parts are actually usable right now and making something. Awesome.
00:51:19.068 - 00:51:20.406, Speaker D: Thank you for your time.
00:51:20.588 - 00:51:44.606, Speaker A: Yeah, thanks for demoing. And really great to hear that this was your first time doing this thing. And this is still a pretty big milestone in your own development of making this work. So congrats and I hope you continue working on this thing. And with that, I'd like to call up our next team. So I think the team's already here, but I'd like to welcome Daikons to share and kick off with their demo. Hi, guys.
00:51:44.606 - 00:52:45.140, Speaker A: Yes, correct. We are from Team Daikons and we are going to start with our video straight away. Welcome, dear. Hack FS judges. We are going to present here our Hack what did we do? We created a decentralized registry for icons which you can connect with your smart contract. So what did we do? Here is a brief overview on our solution so that you can have a look on how it looks and then later we are going to show you our web page and how you're able to register an icon for your smart contract. What do we have, what components do we have? So we have a web app where the user is able to interact with our registry contract and it's reachable through an unstoppable domain which I'm going to show you later how it works.
00:52:45.140 - 00:53:45.266, Speaker A: And what is the user able to do? He's going to store an icon for a smart contract, rather register an icon for one of its smart contracts in our contract and the icon is stored on IPFS. So the registry contract stores information about which smart contract has which icon and where do you find it on IPFS. So as you see down there, there are a lot of different smart contracts. For example an RC 20 contract which wants to have an icon and be unique by that. Here with the dotted line you see for example a wallet which can interact with our registry contract and from there load icons for smart contracts to show to the users. Let's move over to our website. So we have here Dykens.
00:53:45.266 - 00:54:35.894, Speaker A: As you can see it is stored leak to show you that our unstoppable domain is working. Here we have Dykens registry crypto. If I go on this I'm using the which resolves the domain. Here we have already a registry entry where we have test owner contract and here this is the address of the smart contract on the girly test network. And here you see the path to the icon which is this cute dog over here on IPFS. This information here the path and the address are stored in the solidity contract and this icon over here is stored in IPFS. So what can we do? I'm going to show you how to register one.
00:54:35.894 - 00:55:19.970, Speaker A: What we can do here is that we connect with MetaMask. So now it's connected through the girly network. I'm going to use a smart contract which we already deployed on Gurley. So you just type in here the address, a smart contract name for example here is an example, we currently have maker inside, I can call it hack registry contract. What kind of type of smart contract is it is an RC 27, 21, whatever. I'm going to call it registry. And here you can input a file we are going to use now the IPFS logo.
00:55:19.970 - 00:55:59.860, Speaker A: We are going to upload it and all what we have to do is just go on register. So what it's doing here? Currently it's uploading it to IPFS. Here you see successfully uploaded and it's already pinned by Pinata. I have to confirm here the transaction and it has been registered in our smart contract. Reloading the web page. You see that here? The contract with the icon is registered and visible on the web page. So now everyone is able to access this icon and show it, for example, in their wallet or some other ones.
00:55:59.860 - 00:56:30.518, Speaker A: Thank you. All right, that was the video. Awesome. This was cool. It was a narrow scope, but I think sometimes narrow scope projects are like the most realistic. The ones that this would have a lot of use today. This kind of reminded me of unstoppable domains or ENS, but for icons.
00:56:30.518 - 00:57:11.382, Speaker A: So that was obviously something that would be super useful today. I don't think I have any questions. Cool. Likewise. Sorry. What attracted you to this kind of particular problem? Of all the things that you could have decided to do, why was this the issue that you went after? Just curious why we went after this one. Well, we had a brainstorming session on what exactly we want to do during this hackathon and taking into account that we have also full time jobs and everything.
00:57:11.382 - 00:57:59.798, Speaker A: So we had to think about what kind of solution can we build after work that we could not spend all day long on it. And then we were thinking, okay, one problem was actually that you have a lot of different wallets or something where you can store different coins, but they don't have an icon or it's a process. You have to go and tell them, hey, this is the icon, for example, for the maker contract or for different ones. And that was like, okay, this could be a solution where people can register it and all different kind of apps, wallets or different ones can go to this registry and just load then the icon. So, yeah, a project we could accomplish in a fair amount of time next to our full time jobs. Cool. Makes sense.
00:57:59.798 - 00:58:46.134, Speaker A: Awesome. Thank you. Yeah, it's cool. I mean, I like the technologies use sort of fit naturally together, so it made sense. Like David said, the picking of the scope made it able to looks like it's pretty functional. Maybe one question from my end is kind of sure what's kind of the next steps for you as a team now given that a lot of constraints haven't changed in terms of you have other responsibilities, but are you going to work on this thing and kind of improve it? What are your plans as a team? Well, we were discussing about it, if we would like to continue with that. It's still an ongoing discussion if we want to.
00:58:46.134 - 00:59:13.070, Speaker A: Yeah, I mean, there's still room to improve and definitely to make it bigger and better. We just have to discuss it and see what we can do about it and how big the interest is. Actually. No, that makes total sense. I'd encourage you to still keep building. All right, questions from our judges. We'll move on to our next group so thanks to all three of you.
00:59:13.070 - 00:59:34.020, Speaker A: Thank you. Let's bring up the next team. So I think we're just in the process of promoting the next one. And here he is. So I'll let simikshin talk about Kazan. Hi everyone. So I'll be playing the video.
00:59:34.020 - 01:00:56.450, Speaker A: Sorry, I forgot to share the computer sound. So hi, this is Samikshan and today I'll be presenting a demo on Kazan which was developed during Hackavis 2020. I was the sole hacker for this project and in the future I'm looking forward to more collaboration from others on Kazan as well. Kazan is basically a decentralized collaborative music platform where musicians should be able to discover tracks, jam on them and republish for further collaborations. So an example would be that a guitarist uploads a guitar track on Kazan and a drummer who's looking for drumless tracks would find this guitar track and then would like to add some drums on that and then republish it for further collaboration. Like a bassist could come in and add some bass on top of that. And this goes on.
01:00:56.450 - 01:01:59.974, Speaker A: A basic prototype for this flow was implemented during Hackathus and I'll be presenting that in the demo in the background. Basically I use textile buckets for the audio storage and I have a centralized metadata server that stores the metadata for the tracks and helps with basically searching the tracks for users. I use Hedgehog for identity management and Web Audio APIs for mixing the tracks on the browser. So let's go to the demo right now. So I already have two accounts set up here and in one of them I have already uploaded like I've recorded a guitar track. And I'm going to publish this here. So once I publish this, I should be able to see this on.
01:01:59.974 - 01:02:43.970, Speaker A: If I refresh this page, I should be able to see this guitar track so that phonete can jam on this. So I think it will take some time to populate. So let's actually jam on this one. And if I start jamming now, basically I'm just talking and this gets added to the track. Now I can also add different kinds of beats. Once this happens, I can stop this. And once I stop this, I basically have a new track that I can now play if I start jamming now.
01:02:43.970 - 01:04:13.262, Speaker A: So basically I'm just vocals and this gets added to the so this gets mixed. And now I can add tags to this so I can say that this has some vocals and this has some drums and then I can publish it. So once I do that, this gets published for fonte and this would be available for other users for further mixing. So what are the future plans with Kazan? There are a lot of plans. First is to have a prototype and then go live, get more feedback and need to basically polish the user experience. For users, we need to also store track information on ethereum and have support for mobile devices and also have support for more content that are related to music industry. If a lyricist wants to upload lyrics or someone who wants to create a music video for an audio track and also incentivization for content creators would be in the future pipeline once this project matures over time.
01:04:13.262 - 01:05:01.678, Speaker A: So yeah, thank you. So, yeah, that was the demo as well as some slides. If there are any questions I have to ask about the name. Is Kazan a reference to Kaza at all? No. So I was looking for a name that actually suits what the idea for the project was. So basically I was thinking of the imagery is that of a cauldron that we have in these. You put a lot of potions inside the cauldron and you get something magical out of it.
01:05:01.678 - 01:06:00.420, Speaker A: So the whole idea is that you put in a lot of different kinds of so I put in some guitar tracks, someone else puts in some drums, then this can go on, it can branch into different directions and you can have something concrete or you can have something totally which is useless. But anyway, you still have that whole thing going. And the thing is that if any one of those branches actually turn out to be very useful, you could have the list of collaborators that had collaborated on that track and then kind of think about working on some kind of incentivization for these collaborators in the future. So basically this cauldron in Turkish is Kazan. So that is why I came with that particular name. Very cool. Very interesting backstory on that.
01:06:00.420 - 01:07:13.738, Speaker A: I guess one other question. Is it's really cool seeing you did a really good job? I was impressed with all the different recording features and stuff. What do you think would be some of the benefits of obviously there's already a lot of music recording software out there. What do you think is the benefit of this being a decentralized system? Yeah, so basically what I wanted to have through this is that users should be the content creators should be able to have direct control over their data, so they should be able to own their data, audio files basically. And right now I basically have a centralized mediator server, but the plan is to actually have that also decentralized and we could use textile threads for that. I wasn't able to use that during hackathon, but that was the whole plan. That's kind of one of the major reasons why I decided to go with a decentralized storage model for this particular application.
01:07:13.738 - 01:08:55.980, Speaker A: And also in the future, if this project actually goes on to become something that people use, then you could actually have more kind of like where you could have I mentioned about that the ownership of tracks information. So if you could have that kind of in a decentralized manner as well. The idea is to make sure that the content you created is not basically used by someone else, then you could basically claim ownership of that particular track or that particular contents. So all of those things are also like in the pipeline for the future? Basically, yeah. Did you have background in doing the audio part in the browser on the client side, or is that something you had to learn for this project? I had absolutely no experience with even basic user interface, front end design and no experience with Web audio engineering. So I basically had to learn this during the hackathon and implemented that. There are some issues with respect to using Web Audio APIs on Chrome, as I think you could kind of notice a slight latency that needs to be fixed going forward.
01:08:55.980 - 01:09:45.580, Speaker A: Another option is to have a totally desktop application that could reduce the latency by a large amount as well. So yeah, awesome. Well, thank you so much for demoing and I'll check out the live thing after this thing. So with that, I want to call up our next team and I think Hugo's already here and he'll be talking about Bradbury. Yep. Hello. So, just a quick warning, my video doesn't have an audio, so it will be myself explaining the thing as it goes.
01:09:45.580 - 01:10:40.666, Speaker A: So what I've built is a very simple way for people to store and share collections of pictures that they care about. There's going to be two users in the demo and we are here signing in the very first user. We're using Magic Link because this way we can map an email address to an Ethereum address. Once the first user is logged in, he gets into the dashboard. He has like four collections and now we are creating a fifth one, which is called Iceland. We can upload pictures into it, we're going to skip through it, but basically you can select as many as you like and then you have a collection. Once you have that, you decide with whom you want to share it.
01:10:40.666 - 01:11:31.190, Speaker A: So this would be like second user, we're sending an invite link. So this is an invite only thing. And now the second user is validating his address and joining the collection. Iceland, which behind the scenes is a threat by Rbdb. And now that this has happened, the very first user, which is now signing in again, has received a confirmation email to finish the whole loop. The moment he confirms the user, the second user, this second user, will be added as a member to the thread. And that's how both of them are sharing the pictures in a peer to peer fashion.
01:11:31.190 - 01:12:17.182, Speaker A: So now the second user is signing in for the last time, just to show that he can access Iceland collection. Yeah. As you can see, Iceland is there for the second user and the pictures are also visible for him. And that's basically it. Hello. That's awesome. Yuko.
01:12:17.182 - 01:13:05.660, Speaker A: It's really beautiful. Design wise, I'm captivated by how pretty it is as well. What were your kind of biggest technical challenges with this project? One of the challenges I faced was support for different browsers because the way some browsers work with cookies don't really allow to magic link to work properly, and that's an issue. But just in general, I must say that building these I'm a fairly junior software developer. It was super easy. So using SDKs such as the one three box has, makes it very easy technically wise. So there was major challenges there.
01:13:05.660 - 01:13:41.008, Speaker A: And just to back what Andy said, beautiful design. Definitely. Do you have any design background? No, I don't. One of the things that I'm trying is to make it work a lot on the UX and UI because I would like this to be something that my friends can use and they don't know anything about those technologies, these technologies. And this is a design that I made very quick for the hack, but I'm actually working on a better one. Nice. Well, can't wait to see it.
01:13:41.008 - 01:14:08.332, Speaker A: Thanks. That's super cool. So you're going to keep working on this? Yes, this is a side project that I started. So what you have seen is just for the hackathon, but actually Bradbury is a side project that I started a few months ago. And for the moment, this side project is just like an editor where you can type and make some entries, like in a diary. And I want to add these pictures to it and the collections and stuff. So this is something I want to keep working on.
01:14:08.332 - 01:14:52.390, Speaker A: Yes, but as a side project for the moment. Cool. Highlights a lot about where the sort of ecosystem and tooling is going. Was it easy for you to pick the stack that you wanted to go with, or did you have to play around with a few things? No, it was pretty easy. So it's mostly $3, which is making it very easy for people like me to interface with IPFS and stuff. And also it has like the profiles, which in this hack, you cannot see it. I'm not using it, but it makes sense in the future to make it a bit more social, so to speak.
01:14:52.390 - 01:15:28.664, Speaker A: Awesome. I'm just excited about Google's Photos alternative. That's actually unlimited storage, so that should be fun. No, this is great. I think everybody can already set it, but really beautiful UI, so please continue working on it. And I'd love to actually back up some of my photos on this. With that, I think I just want to make sure that the judges themselves are doing all right.
01:15:28.664 - 01:15:54.850, Speaker A: I know we're kind of sprinting through a lot of these things, so if you just want to take a five minute break, we can just quickly do that. We have about four or five projects to go, so let me know if that works for you or if you want to just push through. But we can just kind of resume. In a couple of minutes. They'll give you a minute or two. Just stretch or get some coffee or anything else you want to do. Does that work? Perfect.
01:15:54.850 - 01:23:08.916, Speaker A: I think the next team is Detox, and we'll just have you wait for five minutes, and we'll just resume this thing in a few minutes. Just come back and turn your videos on when you're ready, and I'll coordinate everything else. All right, looks like everybody's back. So thank you so much for being patient with us. And I think that we have a few more projects to go, so we got about five or four, and we already have the next team up here on this call. So I'll let Naga talk about Detok. Hello, that was mesmerizing.
01:23:08.916 - 01:24:05.840, Speaker A: Audio, which you played. Let me show I think if you're playing the video, we don't have the audio. Would you mind making sure the audio is checked? Creating groups, following unfollowing them, like commenting hello, I'm Navasa Vishnu, and I'm presenting an alternate, decentralized social media platform, Detok, to overcome the drawbacks of centralized social media platform. It has all the cool features of any social media platform, like creating a post, creating groups, following unfollowing them like commenting, sharing post groups or profile. Let's look at a demo now. So both the user env are logged in via three box and MetaMask and authenticated our app space. Every user will have a profile thread, and its name is same as the MetaMask address.
01:24:05.840 - 01:24:41.150, Speaker A: All the posts he uploaded are stored here. We can also edit our profile here. No posts are uploaded. So let's add our first post. Now we can attach audio, video, image or text content to our post. The media content is uploaded to Flick and the written URL along with the text content is stored both in the user profile and the home trend. This is a fully blown video player with options like Picture and Picture, and the users can directly download the video.
01:24:41.150 - 01:25:16.712, Speaker A: We can like, comment or share any post. The likes are stored in the user's public space. We can even upload or download any comment. Now, user v also subscribes to the homebread and the posts are displayed. Every post will have a unique ID generated by hashing its content. And this is how sharing any post work. Let's copy the URL and paste it in user B.
01:25:16.712 - 01:25:58.550, Speaker A: So based on the post ID, the complete post is displayed. Now let's look at how groups work. Every group will have a unique name that we can add a description to the group and attach a group logo. As soon as we create a group, a new thread is created and its name is same as the group name. We can even follow or unfollow any group. Let's add the first post in our group. Similarly, we can attach audio, video, text or image content to the post.
01:25:58.550 - 01:26:42.020, Speaker A: So as soon as we post any media content, the media content is uploaded to fleek and a new folder is created. The folder name is exactly the same as the MetaMask address. So this is how users content or media is differentiated. Now let's look at it from usersb's perspective. So the group is public so everyone can view the content. Similarly, let's add a new audio post to a group. So the post is automatically upgraded in the group.
01:26:42.020 - 01:27:16.124, Speaker A: We can even share the post in a group. Now let's copy the post URL and paste it in users. So based on the post ID post, all the pieces in a group can chat via the chat box plugin. We can like any chat too. Now let's look at our profile. So all the posts that we added are updated in our profile. The thing with DDOC is we can even share our profiles with anyone.
01:27:16.124 - 01:27:36.070, Speaker A: Let's copy the URL and paste it in users B. So all the posts that we uploaded are displayed as user. B is not an owner. He can't edit to the sales profile as there are two users, two folders are created in Flake. So future work like data tokens for creating private groups and for user engagement. Check it out live here. Thank you.
01:27:36.070 - 01:28:08.952, Speaker A: Looks like a lot of functionality. It looks like you're using a few different services there. How did you pick and how easy did you find them to come together? So this was the first time I worked on anything related to IPS. So the core is powered by three box threads. Like every post that we upload is stored in three box threads. Like three box persistent thread. So there is two threads.
01:28:08.952 - 01:28:42.824, Speaker A: One is the home thread and one is like the profile thread. So whatever we upload will be stored in both in home thread and in our profile thread. So that's how I differentiate one profile from one profile post from another. And every group has its own persistent thread. So whichever group we follow, whatever post you like, that is all stored in the user's public space. Like it's a key value pair. So the post has its own ID, right? So that ID, I will just keep it as true if I like a post that will be set to true.
01:28:42.824 - 01:29:45.128, Speaker A: So that's how I implemented the like functional. Was it actually updating in real time between the two? Between the two browsers? What? I thought of initially storing number of number of people who liked the post. So then I came to know that Instagram itself is removing the number of people who like their post. So whichever posts are like are stored in my own public space. I don't increment the counter. Like how many likes a post got, Bret? It's really feature rich for such a short amount of time and especially because you haven't had a ton of experience with the stack. So it's really impressive.
01:29:45.128 - 01:30:37.974, Speaker A: What features are next? I know you talked about a couple of things that you'd like to add, but what's the next thing that you're going to I'm open to everything. What I'm planning to do is implement a detox token for creating private groups or private posts. Now, everything which you upload is public, so if you want something private, like you need to have certain amount of data tokens to create something private. And I'm open to pretty much any idea. Sounds great. If there are no more questions, we can move on to our next demo. So thank you so much for showing us that cool social network design, and we hope you continue working on it.
01:30:37.974 - 01:31:16.888, Speaker A: Thank you. Perfect. So next up we have Matt, who will be talking about the MLB Champion subgraph. Matt, take it away. Matt, looks like we're having some microphone issues. We can hear you properly, but we can see you to demo my hack, I created for the Hack FS hackathon. My hack uses the Graph protocol to create a subgraph of the MLB Champions ERC token.
01:31:16.888 - 01:32:11.788, Speaker A: Mlbcb MLB Champions is a game that allows users to create collectible non fungible items based on their favorite MLB baseball players. Being a baseball fan, I was interested in which players were the most popular in the game in this demo. I'll show you the queries to answer these three questions. Which player has the most collectibles associated with them, which collectible has been traded the most, and the player who had the most Ether spent on his collectibles. But before we dive into the queries, let's take a look at the schema. So here, basically at the heart of it, is a collectible entity. This is what tracks each basically token that's created by a user.
01:32:11.788 - 01:33:06.850, Speaker A: It also tracks the sales history and which player this token goes with. The sales history is just one for one with the Ethereum blockchain transaction event when token was traded. The player entity does a lot of the counting as far as how many collectibles one player has and how much volume of Ether was spent on the collectibles for that player. And then this trade entity is what tracks all the trades for any one token. One other thing I'll show you before I show you the queries. This is the mapping file. This shows you that each event handle created, handle asset updated, and handle transfer.
01:33:06.850 - 01:33:50.850, Speaker A: All these events are what's used to create each entity and the relationships. All right, without further ado, let's take a look at these queries. So the first question was which player has the most collectibles associated with them? So, basically the most popular what this query does is it shows a player entity. It shows the first, basically the top five player entities. And it's ordered by the total number of collectibles for that player. And it's ordered descending. So the top five, that's what you have here.
01:33:50.850 - 01:35:01.236, Speaker A: Of course, the top player is a pitcher. The second question was which collectible has been traded the most? So this looks at the trade entities. It takes the top five, orders them by the total trades counter, and it does that descending as well. It and the last question was, which player has the most ether spent on his collectibles? I don't think you'll be surprised to know that it's a Red Sox right fielder. There's also a Red Sox pitcher here, a center fielder for the Angels. I'm not sure why that's on the list, but then you have a New York Yankee and another Red Sox here. So that's all I have to show you today.
01:35:01.236 - 01:35:34.072, Speaker A: This was a super fun project. I'm very new to Ethereum, and it pushed me to learn a lot about the Ethereum ecosystem and GraphQL. Thanks for watching. All right, I changed my microphone. I don't know if it's better if you can hear me a little better. Cool. I'll just kick off with the question, I guess.
01:35:34.072 - 01:36:27.130, Speaker A: What made you pick this as the thing you wanted to work on? Originally, I wanted to do something else, and I was kind of down a rabbit hole, and I thought it was something that I could do in the amount of time that I had. I'm also baseball fan. I was interested in these tokens and how they work. I think everybody's heard of CryptoKitties, so it really kind of took me to dive into it and just really kind of figure out how these things work. And I think maybe I would want to sink some time into maybe making one myself. Cool. I mean, it's great to see you were kind of able to get to the bottom of the questions you set out to answer.
01:36:27.130 - 01:37:22.984, Speaker A: So independent of Ethereum or the graph protocol, did you have experience with GraphQL? No, this is my first. I mean, I've heard it I'm a mobile developer. I've heard people throw it around. I didn't know what it was all about, and I was kind of surprised by some things that weren't present for me, like that I had to actually do the counting myself. And that GraphQL didn't really give me a way to just say, give me the count of all the players on this team or something like like I kind of had to track everything myself. Do you have ideas of where you'd want to take this? It seems like it might lend itself well to some sort of visualization layer. Yeah, if I had more time, I really wanted so there's Openc, if you guys know what that is.
01:37:22.984 - 01:38:09.210, Speaker A: Okay, so they have an API that basically you can take one of those token IDs and pull all the off chain assets. In my demo, you can tell there's no player names because it was all off chain and there was nowhere for me to get that information. So you kind of need a mashup of maybe OpenSea and this GraphQL to kind of put it together and then show it. I wanted to do a react or react native kind of thing. Cool. I would just say, who's your team? It's the Rockies. I'm from Colorado.
01:38:09.210 - 01:38:38.814, Speaker A: I live in Maine now, but Nolan Aronado's got a bunch of tokens out there. Very cool. Yeah, GraphQL is awesome projects. Great to see more people playing around with that and building cool stuff. Not the GraphQL. They're both great, but yeah, they really set up. I would say they have it as someone who's just diving in and making a bunch of mistakes.
01:38:38.814 - 01:39:25.200, Speaker A: They've really kind of protected you with the way they've set it up, where you will get some compile errors with some information so you're not just, like, throwing this thing out there and then getting a bunch of errors. It's really being caught up front. And I was definitely impressed with what they have put together and how it held my hand. That's super exciting to hear. Yeah, I mean, I'd love to see, like, a whole dashboard that anybody can go to after this to get a whole summary of this and maybe other games that are out there. So it's a really great start, and especially when you're trying to learn new technologies, you get to push yourself to doing a lot more and playing with a bunch of other frameworks that are beyond what you're comfortable with on the mobile side. So I'm super excited for this.
01:39:25.200 - 01:40:30.810, Speaker A: Thank you. Congrats. So with that, we have two more teams to go. I want to just kind of make sure that we're all ready and excited about that. So let's bring up the second last team, and that is Project PNLP to kick off with their demo. Looks like we don't have the audio feed in this screen share, so would you mind just doing that one more time? Looks like it's still not working. I think if you stop the screen share and then you check the box under the zoom screen setting, that's when we'll get the audio feed.
01:40:30.810 - 01:41:02.310, Speaker A: Yeah, I have that box checked. Let me see here. Hi, everyone. My name is Dan. I'm one of the members of the Pulp Network team. Our accomplishments over the last five weeks are twofold. We formulated a protocol for the publication and subscription of blog content, and we built a proof of Concept Reference Client for that protocol.
01:41:02.310 - 01:41:38.594, Speaker A: Pulp Network is a Web three blogging platform. The actors and artifacts in our system are relatively simple, but the Pulp Network is just an abstraction on top of existing distributed technologies. The Pulp Protocol is composed of six procedures. Each describes an interaction between the Pulp Client, the Ethereum Network, and the IPFS and filecoin networks. Our Reference Client is an angular browser app. It's deployed by fleek, so the app itself is served in a decentralized manner. We're using textile buckets on textile hub to integrate with IPFS and with Ethersjs.
01:41:38.594 - 01:42:15.054, Speaker A: We're asking MetaMask to sign and broadcast all transactions. Let's get to the demo. We'll start by going to Pulp Network from here, we can sign in this prompts MetaMask to sign a challenge. And using the signature, we actually generate a new lib p to P identity by which we can update IPNs records. As such as an author, I can act as this Ethereum address and also update IPNs records. So let's do that now. So I'm going to create a fake blog.
01:42:15.054 - 01:42:51.200, Speaker A: We'll call it the Pulp Network Dev Blog. And note that I am reserving the slug Pulp development. It's going to ask us to broadcast a transaction to the Ethereum blockchain. This transaction will register this slug and map it to the IPNs address that this user controls. After waiting for the Ethereum transaction, we can see that our new blog has been registered. However, we don't have any articles yet. So we're going to remedy that.
01:42:51.200 - 01:43:30.602, Speaker A: We add some test content. I'm attaching our README. We can preview it, but more importantly, we can publish it. Again, Metamasks prompts us to sign a transaction. This transaction will guarantee the IPFS hash. That transaction published the IPFS address of this article on the Ethereum blockchain as a proof of existence and an endorsement by the author. So now if we return to our blog, we can see our first article here.
01:43:30.602 - 01:44:06.210, Speaker A: I've added a little Easter egg here so that we can actually see what's going on under the hood a little bit. We can see that our publication is really just an IPNs address that we can examine in any given IPNs resolver. Thank you, textile. We can see that this IPNs address points to this current IPFS directory. In it is a metadata file which describes our publication. It also has a second file now, which is our blog post. We'd like to format this as RSS compliant XML in the future instead of JSON.
01:44:06.210 - 01:44:54.120, Speaker A: If we return to our app, we can see the author on any Ethereum blockchain Explorer, we can see the location of the article on any IPFS explorer, and we can see the proof of existence of the article in any Ethereum blockchain Explorer. And we can see in the contract data the IPFS address that matches this one. That's all for our demo. We hope you enjoyed it. And lastly, we just wanted to thank the sponsors and hosts and other open source providers who made this entire thing possible. We had a blast, and we learned a lot, so thank you. All right, happy to answer any questions.
01:44:54.120 - 01:45:13.706, Speaker A: Cool. Go ahead. Yeah, it's really cool. Tell me a little bit about your experience with this stack, just as a team. Sure. I'll speak for myself. I've played around with Ethereum contracts in the past.
01:45:13.706 - 01:45:54.490, Speaker A: I've run an IPFS host locally, just kind of in experimenting. But I hadn't dug a whole lot more into any of this stack, and that was one of my personal goals in this. I'll let Mason and Roland speak for themselves. Yeah. I also had some experience with Ethereum before and with ethersjs, but I hadn't really had a lot of experience with MetaMask, so connecting it to MetaMask and using Lib P to P was new to me, but it was really interesting. It's great. Really impressive.
01:45:54.490 - 01:46:28.260, Speaker A: A really wonderful kind of marriage of a lot of brilliant Web three technologies. So you should be really proud of yourselves. Awesome. Thank you. Thank you. Yeah, it's cool to see I mean, we've seen a lot of things that are built out on service providers, but it's cool to see something that's kind of sort of well thought through protocol that leverages the technologies directly. And then the reference implementation that then brings in those sort of orchestrates shows how to use those service providers relative to that technology.
01:46:28.260 - 01:47:03.680, Speaker A: It felt like a very kind of feature complete protocol. That was cool. Do you guys have any plans to kind of continue developing this? I could definitely see this project being used by a lot of especially, like, decentralized teams and projects. I mean, we'd love to. If the independent or if any of you have blogs that you write, we'd love to get you over onto this. It would be cool to live in a world where decentralized companies are writing and publishing blog content on decentralized applications. So, yes, absolutely.
01:47:03.680 - 01:47:32.102, Speaker A: Awesome. Super cool. Well, thank you so much. And with this, we'll move on to our very last demo for today. And if the team is here, think Jen is here, we'll kick off our last demo, and that is project DWeb VR. So I'll let Jen take it from here. Hey, can you all hear me? Cool.
01:47:32.102 - 01:48:10.818, Speaker A: Let's see if I can share my camera. I'm going to just screen share, and then I could share computer sound. Cool. All right. So, dwebvr should I play the video? Yes, that'd be great. Turn up my volume here. Applications are the main driving force of the network, so killer apps are the most important thing for everything else.
01:48:10.818 - 01:48:41.978, Speaker A: And in the popular show Silicon Valley, we could see a perfect match, pied Piper solution, and virtual reality, because less lag equals less motion sickness. So how about some decentralized web worlds? Here we are in a hacker space. I can pick an avatar, set a microphone. This is open source right here. And the microphone and webcam is using WebRTC peer to peer. Awesome. As you can see, the URL is also set on fleek.
01:48:41.978 - 01:49:18.294, Speaker A: Fleek makes it easy for their IPFS hosting worlds from GitHub. So in this world, we have a speaker here talking about DWeb sorry, he was talking about Dtube. So we can watch previous talks from conferences. In this world. We have video sharing avatars as well, so we can meet up with friends and play games such as Crypto Voxels. Crypto Voxels has a web mode. And we have portals, portals that go into other worlds.
01:49:18.294 - 01:49:57.334, Speaker A: Here's another hacker space in San Francisco called Noisebridge. And so we have linked decentralized virtual worlds and this virtual world is also in VR chat so that we can talk to the bigger population of virtual world people about, hey, did you know that this is a decentralized website? Wow. I didn't know that. That's amazing. Where's the link? Where can I check it out? And this person here, Elon Musk, will check it out. So how do we make that hologram speaker? Well, in the case of lab day, juan was standing behind or in front of a blank white screen. So, check this out.
01:49:57.334 - 01:50:38.878, Speaker A: We have Internet Archive in VR, and we replicated that same setup with a virtual avatar VTuber. And so that's just no BS template. And so even if you don't have green screen, white screen, the right lighting setup, you can pick a virtual avatar and get the same hologram effect. So, IPFS ecosystem, I don't think this does justice to it. So instead of looking at an image, how about we transform it into an interactive experience? Enter Anarchy Arcade, which is a 3D desktop. I can spawn my shortcuts here and create nodes. And basically, it's kind of like a memory palace.
01:50:38.878 - 01:51:36.466, Speaker A: I know I'm working quickly here, but with a mind palace, basically, I can take the websites, I can create shortcuts that turn into interactive objects. So these arcade cabinets are all websites. This is an interesting way to make a virtual world out of the web and learn about the ecosystem in a fun way. And it's conducive to thinking about gaming, which is a huge driver of mass adoption. So if we want to think about gaming and learn about the decentralized web ecosystem, we can use this program. And it can also export all the metadata really nicely and cleanly so that we can use it in other front ends that's coming in the future, so that way we can collaborate on that memory palace. And I created a meeting space so that we can talk about and brainstorm other ways of visualizing the ecosystem, such as creating an expo.
01:51:36.466 - 01:52:35.850, Speaker A: And I've got some templates here made for essentially prototyping a virtual expo out of the IPFS ecosystem diagram. That's about it for me, and I hope you all right. So let me go through the demo over here. First of all, I wanted to visualize the IPFS ecosystem not as a static map, but as an immersive world. So all of these I scraped all of the logos for all these projects, and they're all on GitHub. Do you hear me? On the Internet? Yeah. So basically, all these are websites that you could click, so, like audience, by representing them as arcade cabinets, it's sort of conducive to thinking about applications and use cases.
01:52:35.850 - 01:53:26.140, Speaker A: In terms of gaming, which is a huge driver of adoption, I'd say. So we have this, and the next part of it was essentially creating DWeb VR sites. And I used fleek. I also used unstoppable domains for one demo. And this is my friend in here, he's got his avatar set up. So instead of just kind of like a virtual world like decentraland or crypto Voxels, what about a virtual world to play decentraland or crypto voxels inside of here? So that's kind of what I created in here. Let me sign in here.
01:53:26.140 - 01:54:04.834, Speaker A: Thank you so much, Joy. Okay, so let me try and sign in MetaMask here. All right folks, today on Dope News, you second. Hey, where's my seat? Don O'Ryan young. Thank you so much, man, for Click. OK, so yeah, you can play crypto voxels inside of here. You can build inside of here and it's multi user.
01:54:04.834 - 01:54:55.206, Speaker A: And then I also have in here let me bring up the chat just in case. I also have speakers presentations so that you could watch a talk from a previous presentation and give workshops at these virtual hacker spaces like I'm doing over here. So I did that with some of lab day presentations and I created an OBS template where others could do that as well using VTuber software. Virtual green screen. Also Zoom can do the virtual green screen background cropping. But yeah, same setup. You just kind of cut out the videos for the presentation and the speaker and then boom, you can spatialize it inside of here.
01:54:55.206 - 01:55:18.314, Speaker A: We can take notes here's. My friend Me, his webcam works. It's all WebRTC. You can listen to music as well. And we can go to other DWeb sites as well using portals. So we're going to go into another IPFS hosted VR site here, Noise Bridge. And this is kind of a social network based on physical places.
01:55:18.314 - 01:56:32.418, Speaker A: Digiphysical, I remember Balaji talking about kind of like building a city in the cloud. And these communities are kind of bootstrapping off communities that have local chapters in these places around teaching and learning and building together. And so by 3d scanning these spaces and making them into social VR worlds and also hosting them on other platforms like VR Chat, where there's hundreds of thousands of users, we can evangelize the DWeb outside of the DWeb and have meetups that are. So that's kind of been my thinking. Just building bridges between the IPFS ecosystem inwards and outwards. And this is the part one. And part two would be a larger expo where each of these nodes for data or any of these categories can expand into a whole experience, something that you could explore and have people position at booths, answering questions, interactive, just like the hallway experience, learning more about this and what applications it can be useful for.
01:56:32.418 - 01:57:21.474, Speaker A: So that is Dwebvr in a nutshell. And just in the interest of time, I think we're running a bit over time here, but I'd love to get some questions from our judges before we end today's session. Yeah, it was really interesting. I guess I'm a little confused though about which aspects of this are kind of running on these D web things. Is it mainly these kind of arcade games that I see in the VR world or is it more than that? These are arcade games. So what I'm using here is like a 3D desktop and all this is just representing the metadata of all the websites. These are all shortcuts, like a regular desktop.
01:57:21.474 - 01:58:13.442, Speaker A: And I can link to the D web experiences from here. But really the D web stuff is these web XR sites. So on the GitHub I had links to them. It's all kind of markup based. You can see the source code here. And so the static, like static HTML pages for 3D multi user websites that I've hosted on fleek, I use fleek to basically post them. So, yeah, mostly linking together the immersive web world together and using them as classrooms for DWeb to teach it and to play D web games.
01:58:13.442 - 01:59:08.946, Speaker A: DApps inside of a virtual world rather than taking up your full screen. I feel like it provides a more meta way of playing the experience and representing NFTs and the ecosystem within this virtual world rather than another tab. Jenna I think this is just so like, a lot of the stuff I do is event oriented and also classroom based stuff, like a lot of the workshop stuff. And I can just see us using something like this. So it's really exciting. Sometimes you see the future in hackathons like this and this is the future to me. And yeah, I think it's got a ton of potential in terms of next steps.
01:59:08.946 - 02:00:29.594, Speaker A: So it seems like you're trying to cover a lot of different things. But if we're going to narrow that focus slightly, what are going to be the kind of primary use cases for this and where are you going to focus your efforts? So basically connecting these worlds together, I would say I've got a bunch of templates for building the expo and I want to host, meetups and build a community because number one, it's got to be community first. And I built some brainstorming worlds where we could talk about D web, VR in and basically host events in these types of places or archive presentations in these types of places. But I want to have all these things kind of like linked to one place where you can see everything. And that's my goal is to kind of build a landmark for this is one hacker space. So I want to have this in kind of a shell and have the other hacker space all kind of like linked together in some way. I kind of use this hackathon to learn more about DWeb and fleek and unstoppable domains and experimenting with all these.
02:00:29.594 - 02:01:11.886, Speaker A: But ultimately I want to build an expo world. So that's my goal for the next few months here. Because some other communities are building virtual expos and they get hundreds of thousands of visitors in VR chat. It's not a D web platform, but it's where you can talk about. NFTs and stuff, just using 3D models for props and whatnot. Instead of a presentation from a two year old conference, I'm going to also give a presentation as my hologram about this as well using this template I built. Awesome.
02:01:11.886 - 02:01:51.322, Speaker A: Any last comments from our judges? Great. No, this is wonderful. I think this is a whole new world where we're getting used to anyway now, so I'm super excited to see what this becomes in a few more months. So thank you so much Jin. And with that, I want to thank everybody who watched this recording and also as a participant hung out here to watch the rest of the demos and also, of course, our judges who kind of spend the last 2 hours looking in and kind of reviewing all these projects. So thanks again to all of you for giving us your time and also to all the hackers who presented. Congrats on that again.
02:01:51.322 - 02:02:05.180, Speaker A: And with that, I'd like to make sure that everybody here gets back the rest of their day. So thank you so much and we'll see you tomorrow for day three of judging. Goodbye. Thanks everyone.
