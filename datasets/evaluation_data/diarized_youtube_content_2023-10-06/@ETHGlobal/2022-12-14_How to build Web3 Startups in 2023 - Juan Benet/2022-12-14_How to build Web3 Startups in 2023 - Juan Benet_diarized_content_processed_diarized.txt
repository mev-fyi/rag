00:00:05.930 - 00:00:52.014, Speaker A: So what I want to talk about today is a few things that are different in 2023 and try to give you as many tips as I can in how to get your projects from where where you are now all the way into being startup ready. And what's extremely useful or what a lot of people end up asking me a lot about is how to go from early ideas and early product development all the way into something that is worthy of being able to be a startup. There's a lot of stuff in there and that's what I want to focus on today. I want to break that entire kind of set of problems down for you and go talking through stage by stage what you should be doing and thinking about in each one of those stages. Let me know if you can hear me well or I'm speaking too fast. Raise your hand if you can hear.
00:00:52.052 - 00:00:54.480, Speaker B: Fine. Cool. Great.
00:00:55.730 - 00:01:40.106, Speaker A: So first and foremost, it's worth acknowledging that in 2023 things are way different than they were in 2021 and 2020. Macro and Crypto Winter have hit pretty hard. It's going to be way harder to raise funding and it's going to be way harder to earn revenue. That means that it's going to be much more competitive and it's going to be much more difficult to get users to really stick with your product. So definitely harder. However, one key thing here thinking like entrepreneurs, how do you turn this into an advantage for you? Well, you're in India, right? The cost of living here is way lower. This can be a super advantage relative to the rest of the world.
00:01:40.106 - 00:01:53.038, Speaker A: So this might be an amazing time for Indian startups where you can take the same amount of money and make it go way further than many other companies. So this could be an extremely useful thing for you if you know how.
00:01:53.044 - 00:01:54.820, Speaker B: To play your cards right.
00:01:55.430 - 00:02:46.240, Speaker A: Now, what else is different? There's a bunch of different parts in the web, three space that are crowded or not crowded. When you think about the entirety of the space and think of all the different applications and networks and so on that have been built, certainly making new L ones, that's the super crowded space. That's not to say you shouldn't make a new L one, but there has to be a very compelling reason for why your network should be an L One. The space of scalability L2 S, which was very new two, three years ago, is now also quite crowded. So unless your system can achieve scalability way beyond what everybody else is trying, this is also a pretty crowded space. To go into even zero knowledge L two S are pretty crowded. So again, unless you can have an extremely successful advantage relative to everything else, this is quite crowded space.
00:02:46.240 - 00:03:30.400, Speaker A: Developer tools are also a quite crowded space. I see a lot of people building different kinds of developer tools and that could be really useful. However, just know that many other people are also trying to build developer tools and so unless your tools interface and compose really well with others, you're going to hit like a pretty crowded space. Now what's not crowded? Cloud infrastructure. So anything dealing with massive scale computation, massive scale infrastructure for different kinds of products. So one strategy is like open up the AWS console, look at the products that are listed there, figure out what's different about that product and look in the web3 space. Does a product exist yet? If not, that's a good potential product to try.
00:03:30.400 - 00:04:08.042, Speaker A: It's also not credit to try use case specific infrastructure. So for example, if you're building infrastructure for say, video use cases or infrastructure for audio use cases and things like that, those startups are being built now and so you can think of those as not a very crowded space and of course consumer products. So think of all the kinds of things like social networks or games or ecommerce and so on. All of the kind of things that we use day to day in web two application land that have no analog in web3. All of that stuff is not crowded at all. However, it's also pretty hard to build consumer products in web3.
00:04:08.096 - 00:04:08.700, Speaker B: Still.
00:04:11.710 - 00:04:14.734, Speaker A: It'S a good time for it, but it might be hard to build.
00:04:14.772 - 00:04:15.966, Speaker B: This sort of stuff.
00:04:16.148 - 00:05:06.010, Speaker A: So I want to go through all of the different stages of building a startup and I'm going to break down a set of different features and what you should be thinking along the way. The reason I kind of wanted to structure it in terms of stages is because a lot of people that I've been talking to over the last week have described that they would love to turn their products into startup but they don't know how. They don't know the playbook, they don't know the structure. Well, first and foremost, there's no straight up playbook. So the first thing that you should know about turning your new products and forging your own path is that as an entrepreneur, as a founder and so on, you're going to have to create space for yourself. You're going to have to figure out a lot of things on your own and often you won't find a playbook written or a structure written and so on. So the kind of loose structure that I'm going to give you today is very malleable and flexible.
00:05:06.010 - 00:05:35.080, Speaker A: Startups vary a lot and you're going to have to forge your own path. But hopefully this broad strokes set of stages can help you reason about different parts and can connect you to a number of other resources that could be helpful in those places. So let's start with stage number one. First off, you should start by learning a lot about the world. Good news, you've already been doing that for many, many decades. At this point. So you're well on your way to success here.
00:05:35.080 - 00:06:50.062, Speaker A: And what you want to be doing is learning a ton of concepts, both deep domains like either deeply technical domains or design or product building or even kind of the humanities, like different kinds of art or psychology and so on. All of those different areas can give you a lot of super valuable knowledge and skills to be able to think about a product or solving some problem that people have. You also want to be learning a lot of knowledge that you won't find in universities, knowledge that is not commonly taught in a bunch of schools and classes by the way, that's kind of terrifying in the future we'll have drones flying everywhere. You want to learn a lot of concepts that are not well described in universities and classes and so on, but are well described on the internet. So one of the first things that you are going to have to do as a startup builder is to become what I like to call a super learner. Not only are you a learner, but you have to get really fast at learning and you have to get really good at finding how to learn something. So if you want to learn how to do product development, you need to be able to kind of explore the internet, find what resources are out there, find good explanations, learn from that, try to structure your own learning and so on.
00:06:50.062 - 00:07:34.234, Speaker A: Becoming a super learner is like this amazing kind of super advantage in the world. If you're not kind of held back from learning any random field. You can dive into all kinds of domains very quickly, figure out what's going on, how to use them and so on and you'll be in a pretty good spot. When it comes to startup building or product building or technology building and so on. You'll find that most of what you do is not well defined by other people and so you'll have to learn an enormous amount from various different corners of the internet and of the world and so on. So investing deeply in just learning and your own learning rate and just connecting a lot of knowledge is a great place to start. Again, good news, you've been doing that for decades.
00:07:34.234 - 00:08:22.300, Speaker A: So great, good job, but you'll just be doing a lot more of it. So a lot of students tend to think like great, you go through classes in school, you finish school and then kind of like your learning sort of stops and now you start working. That couldn't be further from the truth. You're always going to be learning, your entire life is going to be learning, which is great, but the sooner you get to be extremely good at learning, the better off you'll be in any domain that you try to tackle. And this is where kind of you can lean on a lot of online learning materials. So when you think about how to build products, how to build minimum viable products, we'll get into that in a moment. How to find product market fit, how to build a specific technology, how to use a technology, all of those materials are online and often and you can find those, learn from those and so on.
00:08:22.910 - 00:08:23.514, Speaker B: Now great.
00:08:23.552 - 00:09:06.538, Speaker A: So that's kind of like the first stage, learn a lot about the world. The second stage is to experiment with a lot of ideas. So you want to be in a deep experimental space where you can try a lot of different concepts for potential products in a very low stakes way. You want to be able to kind of like free your mind from other constraints. Focus on building a thing, try it out, see how it works, learn by doing, learn by building that, see whether it has legs and if not, kind of move on to something else. And you want this to be kind of like as fast as you possibly can. You want a very fast feedback iteration loop here where you want enough time to build something compelling, but not so long that it will hold you back from building other stuff.
00:09:06.538 - 00:09:56.742, Speaker A: So think of kind of if you're interested in eventually building a product and a startup or something like that, think of this particular phase as an extremely precious moment where you're going to get to try to build a lot of things for a period of time. And through trying to build things, you can learn a lot about various different domains, you can learn a lot about product development, you can learn a lot about specific technologies, about the problems you're trying to solve, about specific markets, about specific domains and so on. And there are many kinds of programs in the world that can help you in this experimentation phase. Of course, first and foremost, you can do this experimentation on your own. You can think about different ideas, you can sketch them out, you can kind of try designing them, you can try building them, you can try publishing them on GitHub and so on. And tons of people in the world do that and that's great. That kind of experimentation is really useful.
00:09:56.742 - 00:10:51.930, Speaker A: But for many of us, what is really helpful is to create an environment that is both really fun and time bounded and gives us a deadline to kind of have to make something. Enter hackathons, right? So hackathons are an amazing environment to experiment with ideas. This is a great place where you can kind of, again, learn a lot about technologies that you might be curious about, learn a lot about and consider ideas that maybe you thought were too far away or too impossible. But the hackathon environment just frees your mind to be able to try those out. This is an extremely good hackathons are in extremely great places to do that kind of experimentation. Another thing that's really useful are things like requests for startups where a lot of other groups that have thought about new business models that are kind of adjacent or new or about to be important can describe potential business ideas. And oftentimes you can find one of those there and be like, oh wow, that's like super compelling, I want to go do that.
00:10:51.930 - 00:11:23.778, Speaker A: Or other times you'll find that an idea that you had already considered is interesting to some group to fund and then that can help you help connect your interest to potential funding down the road. Now, let's dive into hackathons for a moment. Why are hackathons so good? It's like this really amazing experimental loop. You come up with ideas, you design and build an idea end to end. You have to complete the thing. You have to touch every single little part of the product that you're going to build. You have to make it work and you have to do it in a deadline.
00:11:23.778 - 00:12:29.578, Speaker A: You have to finish the product, ship it, demo it to people. And that demo, that presentation is also extremely good to help teach you about how to build products and how to build tools for the world. Because you have to convey the thing that you built, not in terms of what's cool to you and so on, but how might other people think about using this? Why it solves a problem for people, why it's interesting, why it's technically interesting, or why it's a good product and so on. So those demos and presentations are a huge part of the value of hackathons. Like actually boiling down your piece of technology into a coherent presentation on a good way of describing the thing is a super useful way to kind of give you kind of like the testing ground of what the real world is going to be. Because at the end of the day, even if you build an amazing product but nobody knows how to use it or nobody hears about it, then it doesn't matter, right? So think of this presentation area as like a really good test case and then of course, you're going to get a ton of feedback. So by building the thing, you're going to get a lot of feedback first all off from yourself.
00:12:29.578 - 00:13:04.566, Speaker A: You yourself are going to be giving yourself constant feedback on the idea. Then other people you show the idea to are going to give you feedback. The entire structure of a hackathon has a judging component which is designed to give you a bunch of feedback. You'll then present the thing to other people and so on. You'll get a lot of feedback from that. And so the entire structure of a hackathon gives you this really nice, well self contained pipeline to be able to kind of come up with product ideas, design the thing end to end, and then end up with a complete product, or roughly complete for demo worthy. Forces you to present it.
00:13:04.566 - 00:13:42.946, Speaker A: And then you get a lot of feedback. Now along the way you're going to learn a ton. You're going to learn a ton about potential problems. You're going to learn about technologies or approaches, you're going to learn how to experiment, you're going to learn how various different technologies work. You're going to develop your skills and push your knowledge massively and you're going to be able to discover all kinds of things that are potentially really interesting. And in that environment you might find really interesting things that down the road you'll explore further, right? So in this hackathon today, you're getting exposed to all kinds of new and interesting ideas that you might then even if you don't experiment with them now, you might experiment with them at the next hackathon or the one after that and so on. So really kind of open your mind and be ready to learn a lot.
00:13:42.968 - 00:13:44.420, Speaker B: About various different things.
00:13:45.030 - 00:14:29.534, Speaker A: One other critical component of hackathons is that you get to meet a lot of amazing people. You get to team up and work together on things. You get to kind of test working together under pressure, which is always really good to find great teammates. You learn a lot and grow together. You form more relationships across the room, you get to know many other people from around the world and then you get to grow your network that way. So again, hackathons just in the connectivity of people alone is a super valuable thing, which is kind of why I always think like, hackathons are the best kind of test lab for doing kind of technology building and product development and really learning and growing as a person. There's a ton of hackathons, there's a ton from, of course, ETHGlobal has built an enormous amount of hackathons.
00:14:29.534 - 00:15:19.780, Speaker A: There's a set of hackathons in the Python community you can find. And then in terms of requests for startups, this is where I think this is less common in the Web Three world, but we're trying to kind of push this to help support the ecosystem and help support our ecosystems. Writing out very concrete descriptions of potential things to start or these different kinds of startups can be a really useful way of conveying potential business models out there. So at some point as you go along and you're looking for ideas to experiment with, go read these requests for startups or go read the we have generated over the years with East Global, we've generated lists upon lists upon lists of lots of really cool hack ideas. So just go explore those, read those well ahead of the next hackathon and you might find like super interesting and cool ideas lurking in there that you might want to build.
00:15:21.190 - 00:15:21.602, Speaker B: Great.
00:15:21.656 - 00:16:07.154, Speaker A: So after you experiment with a lot of ideas, eventually through a hackathon, you might find one idea that you get super excited about and you might want to follow or pursue in some way. Now of course, this won't happen. This is very unlikely to happen in your first hackathon. This usually is your third or fourth or fifth, potentially your 10th or 20th hackathon. So again each one of these stages has like this loop piece because you want to kind of stay in that stage and experiment a lot for a while before you kind of find the really key valuable thing to kind of move on to progress to the next stage. So now in validation, suppose that through hackathons or other kinds of experimentation you found a really cool idea that you think has potential that you got some feedback on. A lot of people are really excited by it.
00:16:07.154 - 00:16:18.270, Speaker A: They say, hey, that could really work as a thing you want to try and develop it, great. So now you get into kind of validation of that idea. Now what hackathons don't do is they.
00:16:18.280 - 00:16:20.566, Speaker B: Don'T kind of teach you to think.
00:16:20.588 - 00:17:31.450, Speaker A: About the product itself from a how is this product viable in the world? Hackathons are really good for kind of exploring a potential thing and describing it to the world, but they don't kind of force you to kind of design a product with a direct end user component and so on. That's more like product design school or business plan competitions and those kinds of things. So now to go from really awesome hack to product and business or startup, you have to cross that barrier. You have to figure out what the product really has to be to solve a great problem. And so that means figuring out things about the market, figuring out things about the potential users, figuring out what a problem really is, figuring out what other products exist out there that this is going to correspond to or interact with, what competition is out there and so on. And this entire kind of validation phase is well before you kind of have a concrete product that you can then go actually start a company and start raising money for and so on. So this kind of validation phase is a little bit tricky because there isn't a good structure for it in the world.
00:17:31.450 - 00:18:13.478, Speaker A: There isn't a set of programs like hackathons that gives you this. And so this is an area where really it's kind of like your interest and your idea that's going to push you through to get from here to the startup mode. Now by these stages usually people are either doing it themselves or in very small teams. So again, usually hackathons are somewhere between one and four people. Sometimes you get some larger groups but in general it tends to be like pretty small teams. Through this entire validation phase you'll be in the same boat, it'll be a pretty small team. But now you'll have to be doing a lot more kind of research of the market, space, research of the product and so on and out of that what you want to do is you want to distill down a set of minimum requirements for the product.
00:18:13.478 - 00:18:44.066, Speaker A: So what I like to call a minimum product instead of a minimum viable product. So you want to get to the very bare bones, even before properly figuring out what is going to make it viable. Just figure out the set of requirements and try to get your early hacks or prototypes to get closer to that MVP. So it's kind of like somewhere in between a prototype and an MVP. Now, the good news here is that there are some resources and support and structure for this. This is where it's very difficult to now be in this stage. Once you have an idea and you want to pursue it.
00:18:44.066 - 00:19:38.642, Speaker A: It's very difficult to do this while you have other jobs or while you're studying as a student and so on. You can definitely do it, and many people do, but it's definitely harder if you can't focus on it full time. This is where hackathon prizes are really helpful because if you win a hackathon prize, that can maybe give you enough funding to be able to go and validate your product. Or this is where things called like next step grants are really useful, where you can get a little grant. So it's not yet investment funding or anything like that, but you can get a small grant to be able to validate whether or not this is a good product or a good idea and so on. Think of the scale of funding being kind of on the order of one to $10,000 or something like that, one to $20,000. So assuming that you kind of have found something that you want to validate, that you have validated, and you can get closer to a product, you can then jump into the next stage.
00:19:38.642 - 00:20:09.646, Speaker A: Actually, before that, I'm going to show some examples. So in this validation phase, it's extremely useful to get product feedback. So think of using your prototypes and your hacks and so on, and showing them to a lot of people, especially the target users that you're going for, and gather a lot of feedback. Analyze that feedback, get a sense of do kind of like customer potential customer interviews, get the insights of whether or not this is going to be a useful thing for them. And when I describe product feedback and customer feedback and so on, it sounds like very corporate speak. But this really just means in some.
00:20:09.668 - 00:20:11.726, Speaker B: Cases, look at your thing, take your.
00:20:11.748 - 00:20:22.500, Speaker A: Hack, post it on Twitter and ask people what they think. Or reach out to specific people who you think may have really good feedback for this. So whatever it may be in your market, in your community, and.
00:20:24.390 - 00:20:24.978, Speaker B: Whoever you're.
00:20:24.984 - 00:21:09.458, Speaker A: Going to make this product for, get in touch with those folks and gather feedback from them to figure out whether or not the product is going to work. And crucially, whether or not what direction they would say what kind of features they would want, what kind of price points they might care about, what potential business models make sense. So this is where crypto gives us an amazing set of tools and structures to create new business models. This is where you want to be able to kind of validate those things. Is this good enough to be like a protocol structure with protocol token? Or could this be like a smart contract with some kind of revenue flows in there? Or is this a traditional product where you actually have a standard piece of software that either is a SaaS thing or some other kind of structure where.
00:21:09.464 - 00:21:10.558, Speaker B: You sell the software?
00:21:10.734 - 00:21:42.202, Speaker A: And so during this whole validation phase you can kind of figure out the corners and the constraints for what your product kind of has to evolve into. And there's a ton of stuff written out in the web for this. This is not usually that well taught in universities. There are some universities that do this well, but there are a ton of classes and materials out there in the world that you can access on how to do this validation. So just search online for kind of product validation and you'll find tons of materials and video classes and books and.
00:21:42.256 - 00:21:44.400, Speaker B: Blog posts and so on written about this.
00:21:45.090 - 00:22:09.790, Speaker A: And then in terms of microgrants, there's a lot of groups that are doing these kinds of things. But you can think about these next step microgrants as a really useful tool to then go from your hackathon project into testing whether or not this is going to be a viable startup. Great. So supposing that you've validated a thing now. Okay, great. You know that you have a product in your hands. You think it's going to be an interesting idea, you think it's going to be compelling.
00:22:09.790 - 00:22:26.060, Speaker A: Now you want to go and fully build it and launch it to the world as a product and you want to kind of start the startup, whatever that may be, whether that's a company or a crypto network or a Dow or a nonprofit or whatever your startup is going to be.
00:22:26.830 - 00:22:28.954, Speaker B: You want to kind of create some.
00:22:28.992 - 00:23:07.186, Speaker A: Structure around the project to be able to start reasoning about raising funding, paying contributors, signing contracts and so on. So this is kind of like usually a pretty difficult leap that people have to make of going from great, I have a project, I have a great idea now how do I go from that great idea to an actual company? And usually this is kind of, it used to be really mystified and thankfully over the last 1015 years it's gotten a lot demystified. There's a lot of good guys and good products out there. So things like stripe, atlas and so on make this easier. But this is also where accelerators fit in and become extremely useful.
00:23:07.218 - 00:23:08.966, Speaker B: They can sort of teach you and.
00:23:08.988 - 00:23:55.718, Speaker A: Handhold you through a lot of those processes and they can be extremely useful sounding boards and connect you to a lot of mentors in various communities that have precisely the right skill sets and knowledge or know the market that you're going into. And so this is the right stage of like great, so you had a product idea, now you're turning it into a business of some sort. And here business doesn't have to mean, again a corporation or a traditional business. You can think of a protocol like Ethereum or Falcon and so on as a business too in a sense, in that it is a service that is providing some economic value to the world and it has some cash flow going through it. And so that in a sense is a business. You can think of it that way as well. So at that point accelerator programs are precisely like what you want to lean into.
00:23:55.718 - 00:24:51.706, Speaker A: It's one of the better structured areas. So before a lot of these other areas may or may not have programs, here accelerators where you have a pretty well structured thing and the last really well structured thing after that is kind of investment from investors or other kinds of funders, grant funders and so on. And that doesn't have very good structures. So again, this usually is like the leap from nice interesting ideas and product development into piles of paperwork, having to set up bank accounts, having to set up accounting, getting to know how to work with lawyers. And usually this is kind of like a big leap where a lot of would be founders have to figure out how to do all of this stuff from scratch with knowing nothing. This is again where being a super learner is really helpful because a lot of this stuff is well described online. But this is where a lot of kind of teams end up hitting roadblocks here if they don't have a good.
00:24:51.728 - 00:24:53.660, Speaker B: Structure for learning through this.
00:24:55.150 - 00:25:38.530, Speaker A: So that's kind of like the kind of structure around the team, like the structure of the corporation or the crypto network or the Dow or whatever you're going to do. Separate from that in the product side, you want to advance your minimum product into getting to building an MVP that you can launch. And launching it here usually of course means launching it out to the world to get a lot of feedback from your users. But in some cases some startups are doing all of this completely in stealth mode. So famously Apple kind of didn't do a lot of direct launching, doesn't do a lot of direct launching of MVPs. They kind of deliver a finished product. Of course they're a massive company but startups like Figma also grew this way where they were kind of developing fully in private.
00:25:38.530 - 00:26:09.154, Speaker A: But their version of MVP was a product for themselves so they were their own customers and they worked with a few people to develop something really good. Now it's way. Harder to develop in secret and develop in a smaller circle and so on. You don't get a lot of feedback from the rest of the world. So usually if your product is kind of crypto native or web3 oriented and so on, you want to lean into deploying it out into the world and launching it publicly. And usually you can get to a pretty good state with your product, launch it out into the world and start.
00:26:09.192 - 00:26:10.370, Speaker B: Getting a lot of feedback.
00:26:10.950 - 00:26:22.374, Speaker A: The kind of image in the bottom left is really useful. Usually when teams start building a product, they kind of draw these extremely detailed concepts and plans for what the whole.
00:26:22.412 - 00:26:23.606, Speaker B: Thing is going to be and they.
00:26:23.628 - 00:27:01.220, Speaker A: Just sort of start building and they sign themselves up for years and years of building before the product is done. And that's totally the wrong way to do it. It's kind of like what feels more correct to do because you kind of want to build a super high quality finished product, but that's not really what a minimum viable product is. In order to kind of test whether the thing is going to work well and give yourself feedback, you want to have enough of each part to make the product kind of start. So think of kind of having enough functionality, enough reliability, enough user experience components, enough good design just to get the bare thing working. And so this kind of.
00:27:02.950 - 00:27:03.618, Speaker B: Sometimes think.
00:27:03.624 - 00:27:10.294, Speaker A: Of it kind of like a spiral as well. You kind of go in every direction just a little bit, just to get to sort of to the next stage and then you can go deeper into.
00:27:10.332 - 00:27:11.670, Speaker B: Each one of these areas.
00:27:12.570 - 00:27:24.554, Speaker A: And once you have a product, you can launch it out into the world and that's when you can kind of start marketing it out there, start trying to get adoption, reach out to various users and kind of get people trying.
00:27:24.592 - 00:27:26.540, Speaker B: It out and using it and so on.
00:27:27.630 - 00:27:41.006, Speaker A: Going back to accelerators. Huge plugs here for Tachyon and LongHash. Gabriel from Tachyon is here. You should talk to him about the program and so on and kind of how it works. I don't know if folks from LongHash are here.
00:27:41.028 - 00:27:42.400, Speaker B: Maybe yes, maybe not.
00:27:43.010 - 00:28:21.526, Speaker A: And there's a lot of other accelerators in the web3 space as well. And in the broader world, these are extremely useful programs that really make it dramatically easier for people to start companies. Great. So suppose that you kind of go through an accelerator program, you kind of build the structure of the startup. You start hiring people, you start being able to you have a bank account or a wallet for your Dow and you start getting adoption and you kind of get the first legs of the product working and you kind of have some early users and so on. Now what you need to do next is get traction. Like get your product to have very strong traction with your market of users.
00:28:21.526 - 00:28:26.846, Speaker A: This is what is going to be kind of like the gauntlet before kind of getting to kind of growth and.
00:28:26.868 - 00:28:29.486, Speaker B: Scalability is to get enough of the.
00:28:29.508 - 00:29:29.250, Speaker A: Product right that you can start getting some strong growth signal from your user base, where suddenly you solve enough of the product problems and you solve enough of the key components that a set of users are starting to use it and the product starts growing through either word of mouth or any marketing that you're doing, and so on. But you're starting to retain users, meaning users want to use this thing and want to keep using it. They're not just kind of like checking it out and disappearing. So in this area, that's where all of the product metrics really matter. I didn't go into this earlier. Even in the start of the startup phase, that's when you want to do all the kinds of instrumentation in the product to start getting signals on how people are using it, what are the kinds of things they want to do with it, what things are working, what is your actual retention and all of those signals. That's where you're going to use those metrics and qualitative feedback that you get from potential users or customers and so on to give you a set of directions of what you need to do.
00:29:29.250 - 00:30:24.594, Speaker A: So this is an area that is usually extremely difficult for lots of startups. And many startups die here because they might have had an initial good idea, they might have been able to kind of raise a little bit of funding or get to an accelerator stage, but the product doesn't quite have market fit and it can't quite get traction. And so this is where a super strong emphasis on metrics, like being really rigorous and careful about every single kind of interaction that users have with a product and what that's doing for the potential of the thing, what your actual retention is and so on. You want to get those kind of small structures for the product working extremely well. You want to kind of increase retention as much as you can, you want to find the right way to market the product and so on. And usually you can do this with a pretty small team. So teams of these sizes are usually kind of in the five to ten scale and so on.
00:30:24.594 - 00:30:43.318, Speaker A: Now this area, this is where you go from kind of accelerated programs that are more structured into the fully unstructured land of startups. And this is where say, angel investors and so on fit in. In some cases, like some kinds of VC funds fit in here, but it's primarily kind of angel investors. So the first kind of super angels.
00:30:43.334 - 00:30:46.586, Speaker B: And so on in this area, this.
00:30:46.608 - 00:31:38.694, Speaker A: Is where going to product feedback. This is an example of a more extensive version of the product feedback loop where you want to start instrumenting the data, analyze instrumenting the product, analyzing the data, turning that into plans for features, turning that into implementations and so on. And in this area it's extremely difficult to prioritize because you're going to be thinking of just hundreds of thousands of potential features, hundreds of thousands of potential things that you might do. And this is where you really want to use a signal from the metrics to narrow down your priorities and know what's going to be most important for you to do. Your time is going to be precious because your team is not going to be very big, your funding is not going to be very big and so every day is going to count. So don't think of it as like oh great, we'll build this thing and maybe in a month we'll figure out what the market says. No, you want to get feedback right away, ideally like day over day or week over week.
00:31:38.694 - 00:31:44.046, Speaker A: This is an area that is super critical for startups to be able to kind of get enough traction for the.
00:31:44.068 - 00:31:45.520, Speaker B: Plane to lift off in a sense.
00:31:46.450 - 00:31:58.626, Speaker A: There's famously this kind of like startup curve which is there's some amount of initial excitement especially through accelerators or launches and so on. And usually products launch, there's an initial kind of wave of attraction and so.
00:31:58.648 - 00:31:59.986, Speaker B: On and then they kind of go.
00:32:00.008 - 00:32:13.798, Speaker A: Into this trough of sorrow where the novelty has worn off and it's there but many people don't use it and so on. And you're still kind of chipping away and plugging away at the features, trying to figure out the structure of the product, trying to figure out how to.
00:32:13.884 - 00:32:15.830, Speaker B: Shape it and so on.
00:32:15.980 - 00:32:43.934, Speaker A: And then eventually you start getting some signals from the market and from the users that it's kind of working. And all of your work starts adding up, like your dozens of features that you add, your dozens of design hours and product iteration and so on starts paying off. And you start seeing the metrics do better and better and better. And the really amazing thing about kind of growth rates is they compound really quickly. So once you have some structures working suddenly you can hit a scalability structure that can get your product into a.
00:32:43.972 - 00:32:46.018, Speaker B: Great growth trajectory and then from there.
00:32:46.024 - 00:32:52.946, Speaker A: You can get to things like revenue growth for companies or in certain developer tools or crypto protocols, just kind of.
00:32:52.968 - 00:32:55.220, Speaker B: Adoption and usage and so on.
00:32:55.830 - 00:33:45.102, Speaker A: In terms of support, the kinds of things that you'll find here is like different kinds of VC funding and angel funding and so on. That's kind of for kind of for profit startups or companies and so on. Now when you're building public goods, the equivalent structure here is to look for what we call like network capital or nonprofit capital, where impact capital and things like that, where there are groups that might want to fund your work anyway because it creates really valuable stuff for the community they care about. Now network capital is much harder to work with because it's not very well structured yet and it doesn't usually connect to a revenue pathway. Which is why in the last 20 years we've seen tremendous success with VC in developing software and we haven't seen an equivalent success in the grant world. Now it doesn't mean you can't lean into this. It can be very very useful but don't expect it to work at scale.
00:33:45.102 - 00:33:56.098, Speaker A: Sort of expect it to work in smaller scales in the kind of hundreds of thousands of dollars scale, maybe small millions of dollars. But it's very rare or difficult to develop a large scale project and get to kind of like tens of millions.
00:33:56.114 - 00:33:57.960, Speaker B: Of dollars of funding or something like that.
00:33:58.570 - 00:34:40.982, Speaker A: And then in terms of support and helpful, the PL network can sort of connect you to lots of investors and various groups, lots of our communities and so on are super well connected to these groups. And this is where you'll have to start learning how to raise funding, how to work with investors and all that kind of stuff. And here investors is not just kind of for profit investors, you can apply the same kind of thinking to grant making organizations. I'll plug here a program that we're developing in the Falcon community called Phil VC which is a demo day structure for the Falcon community that brings a ton of investors into a place and we run a demo day with a whole set of startups in the PL.
00:34:41.036 - 00:34:44.134, Speaker B: Network and so on. Great.
00:34:44.172 - 00:35:15.982, Speaker A: So now after you get traction, now you want to get into growing the business. So suppose that you've reached a certain level of scale, you've gotten your product to have good product market fit, you have strong signals of growth. This is where now everything just gets harder. It doesn't actually get easier, it gets harder. Maybe it gets easier from a perspective of like you now know, you have a direction of where to go but now this is where things get way more difficult in terms of the stakes are way higher. You suddenly start getting thousands to tens of thousands to hundreds of thousands of users. Lots of people really care about your product.
00:35:15.982 - 00:35:45.526, Speaker A: You're getting tons of feedback. You have to learn how to prioritize that feedback. This is where you start seeing kind of outages in your products and that starts really mattering. And here that's where you really need to deeply invest in forming a really great larger team. Usually companies or startups grow from small five to ten person teams to ten to 30 people and that becomes kind of like seed rounds and seed investments. And this is usually where VC comes in. So VC does not come in the earlier stages.
00:35:45.526 - 00:36:21.830, Speaker A: This is finally where traditional venture capitalists come in. This is very surprising to a lot of people that are new to building startups usually you think of venture capital as kind of being involved very early in kind of like the idea stage. And sometimes that happens, but for the most part, that's not how it works. Usually VC gets involved once there's a very strong idea, very strong product, very strong product, market fit, there's a very good shape to the problem. And then you sort of get started. And this is where we've been building kind of like this broader investor network to help support a lot of the startups in the community. Now I want to talk about advantages for Indian startups.
00:36:21.830 - 00:36:55.086, Speaker A: So in this crypto winter world, you have a way lower cost of living. So this is like a huge advantage. Lean into it. Many of you might be tempted to leave India and go to more expensive places because you feel like there's a stronger network there. Don't do that. India has an amazing good tech network and so on. And right now, especially in this moment in time, especially when the rest of the world has this macro winter, being here might be extremely, extremely helpful for you and you'll be able to recruit people in these areas and so on.
00:36:55.086 - 00:37:16.770, Speaker A: Also, Indian is super deeply technical. You have some of the most brilliant engineers and developers in the world here in high quantities. And this is a super advantage to almost any other country in the world. Now you have less of a like, the startup ecosystem is pretty large, but there's less of a web3 ecosystem. That's why we're here. We're kind of growing it. But here are some advantages.
00:37:16.770 - 00:37:36.526, Speaker A: Now I want to pull the room. I didn't put too many things here because I wanted to hear from you what you think are some advantages for the Indian ecosystem. So I want to ask for a few ideas from the audience. Raise your hands if you have ideas of what are the advantages for Indian startups that you want to kind of call out for this group. Raise your hand if you can think.
00:37:36.548 - 00:37:38.560, Speaker B: Of a few or one.
00:37:40.290 - 00:37:44.450, Speaker A: And I'm going to stay silent to make it awkward until I get one or two.
00:37:44.600 - 00:37:45.300, Speaker B: Yeah.
00:37:47.430 - 00:37:48.930, Speaker A: Can you yell louder?
00:37:50.870 - 00:37:51.282, Speaker B: Yeah.
00:37:51.336 - 00:38:37.582, Speaker A: Huge population. So India is very large, which means that usually there's a lot of different kinds of problems that people might run into. And that means better and more interesting markets. And it also means that there are like, niche markets that you might be able to serve really well that are tragically underserved in some way. What are the advantages? Lots of people joining the Internet. And so that means lots of people whose problems we haven't heard about before, who might need all kinds of products and tech. This also means you could work on infrastructure for connecting all of these people, right? So think of all of the areas in India that are not well connected.
00:38:37.582 - 00:38:54.620, Speaker A: You could help connect those through crypto powered systems. Think of Helium as an example of a kind of network that you could deploy here or you could build a new network in India. All right, what other I'll hear three more back there. One more time.
00:38:58.030 - 00:38:59.718, Speaker C: Feedback, diversity.
00:38:59.894 - 00:39:01.450, Speaker A: Feedback and diversity.
00:39:01.810 - 00:39:03.630, Speaker C: Feedback, diversity.
00:39:04.130 - 00:39:06.000, Speaker A: I still couldn't hear it. Sorry.
00:39:06.530 - 00:39:07.514, Speaker B: Feedback.
00:39:07.642 - 00:39:09.390, Speaker A: Feedback, diversity.
00:39:10.130 - 00:39:12.254, Speaker B: Diversity. Great. Yeah.
00:39:12.292 - 00:39:33.014, Speaker A: Okay. Exactly right. So you have a super rich culture, super diverse culture with lots of different ideas, lots of different perspectives, lots of different areas of interest, and that's a super amazing strength for the Indian community. Two more growing economy. Yeah.
00:39:33.132 - 00:39:34.338, Speaker C: Growing economy.
00:39:34.434 - 00:39:54.334, Speaker A: A growing economy. That's right. You have a super fast growing economy. That means many new sectors and industries are getting also wired up with software and so on. And this is an area where it's highly dynamic and changing. Now, of course, that comes with a lot of competition, but it also comes with a lot of opportunities, so absolutely right.
00:39:54.452 - 00:40:02.350, Speaker D: Last one, extremely low cost Internet, very low cost 4G. Extremely low cost 5G. Low cost broadband.
00:40:03.250 - 00:40:04.000, Speaker B: Yes.
00:40:05.170 - 00:40:24.120, Speaker A: That was kind of like part of what I wanted to include at the top, but yeah, you're totally right. It's worth emphasizing. Again, this is such a huge advantage for an in startup. You have no idea. When you compare a startup here to San Francisco, you have a five to ten to 20 x advantage on them. So really lean into it. It's super awesome.
00:40:24.120 - 00:40:32.086, Speaker A: Since this is a repeat, I'll hear one more stable politics.
00:40:32.278 - 00:40:33.020, Speaker B: Yeah.
00:40:36.750 - 00:40:45.180, Speaker A: So you are not in an environment that is like ravaged by war. Right. That's super useful when you're trying to focus and build a product. So absolutely right.
00:40:45.870 - 00:40:46.390, Speaker B: Great.
00:40:46.480 - 00:41:30.026, Speaker A: With that note, let's maybe move on for a moment. Now I want to kind of tell you a bit about kind of the power and utility of networks and how networks can help you build a tech. And for doing that, I wanted to introduce you to three really awesome people that are in the audience that started in ETH Global Hackathons. So I want to first start with AYUSH and Sushmit from the Huddle team who started in Hackfs two years ago. And we're exactly where you are today. Like, just hacking away in your products and then went on to kind of build a super compelling product. They got early validation, they joined an accelerator and then they went on to build a startup and build a team and build a product and so on.
00:41:30.026 - 00:42:03.890, Speaker A: So can I get AYUSH and Sushmit up here for like a couple of minutes to say hi? Awesome. Can you very briefly, like, in say, 1 minute each, kind of tell a little bit about your story, especially when you were what brought you to the hackathon and how you went from the hackathon to building a product, starting with you.
00:42:05.140 - 00:42:38.748, Speaker C: Hey, everyone. Great to see you all. So the journey of myself going into a hackathon start off. So I'm an electrical engineer by my education graduate in 2016, did a lot of work product and growth in a lot of B, two C based startups in Indian based communities, very Web Two based. And in 2019 and I started seeing a lot of hackathons which are happening by ETH Global. And that's where I saw that in Hackathon 2020 that lot of people were building a lot of stuff and that's where I and Sushmith came together. We're like everybody's talking about decentralization Web 3.0
00:42:38.748 - 00:42:46.380, Speaker C: but all their meetings were happening over centralized video conferencing platforms and that's where we came together and built Huddle One as the infrastructure.
00:42:48.560 - 00:43:29.012, Speaker D: So actually what the Yuan was excited, it was one of the ETH Global hackathon that we actually came to life around. So it was on the 20th day that we got the idea actually. And it was in the ten days we did the hack out there and the 20th day it was clicked that we wanted to have this child imagination, right? Because if you have knowledge, then your idea gets biases. So what you need is like you need to solve ideas without knowledge biases. And that is something I think you can get a much better idea. So we got this, okay? It's in front of us. We can make a much better version of Zoom out there, a decentralized version of Zoom.
00:43:29.012 - 00:44:12.920, Speaker D: And when we started working on that, we realized there's much more better problem to solve. The RTC stack, that is something that actually missing out there and something that needs to be get built so that it enable larger serve. So yeah, that's the journey. Hackathons are like hyper competitive thing. If you survive this competition, you can survive the external competition and then you go to Accelerators, right? So in Accelerator what happens is that the product in hackathon is something that you want to build. But in Accelerator it is the product that the world wants, right? So you need this synergy between two and then it's like you go to outside world and get the feedback loop and iteration that would always be there. That's like evergreen.
00:44:13.900 - 00:44:40.480, Speaker C: It's a 30 day hackathon. It really helps you because there are a lot of office hours happening, you get a lot of validation from the people who already built stuff earlier. So that's what happened. We started building, we started having a lot of even failures. We're like hey, you can do this, you can do that. And that led to building stuff which led to a product which was matured enough to be used by people in the hackathon itself. So a 30 day hackathon generally helps in building something which is an MVP, which could be used by consumers, people, clients, et cetera.
00:44:41.460 - 00:44:42.370, Speaker D: Thank you.
00:44:42.840 - 00:44:49.590, Speaker A: First of all, does this map of the stages fit well with what you were doing?
00:44:50.920 - 00:45:28.780, Speaker C: Yeah, absolutely. So if you just talk about it, this is how we started off when we knew about that. We have to go into the hackathon. We had to learn WebRTC first as a protocol. We didn't know WebRTC earlier and since it was a very long stage hackathon we got time for essentially like five days to just learn more about iterate into it and then as we move forward into it, we had a couple of ideas on what we can do in the hackathon. That means if we are building a video conferencing platform where we are catering towards which kind of category? Is it education, is it web? Three Native NFT based communities. And then we moved on to an accelerator.
00:45:28.780 - 00:45:40.016, Speaker C: Gabriel is here. We had a chat with Gabriel and then we got into Techion and from there our mental model started getting built. Then we raised our precede round seed round and now our Series A. So that's the overall journey.
00:45:40.048 - 00:45:57.832, Speaker A: Like yeah. Awesome. Thank you and huge congrats by the like it's really amazing to see all your progress in two years. It's so cool going from hackathon, hack to where you are now. Huge round of applause for these guys. Yeah. And wanted to bring up one more person, Harsh from Push Protocol.
00:45:57.896 - 00:46:00.968, Speaker B: Are you here, Harsh?
00:46:01.144 - 00:46:01.628, Speaker D: Yes.
00:46:01.714 - 00:46:57.710, Speaker A: No maybe he's probably in the booth making sure that things are going well. So if you see Harsh somewhere around you can get his story as well. He and his team started in Hackmoney right before Schmidt with Huddle and had a very similar story, built a product through a hackathon, tested out a lot of different pieces, then the early product was pretty varied, had a lot of different possibilities. Then they kind of found one of those features, they narrowed down on that focus and then they went on to joining an accelerator and then from there raise funding and whatnot. So a very similar kind of trajectory here. So two success stories of many if you look around the room, just tons of the groups that are now sponsoring and building and coming here to sponsor hackathons in Eat, India and many of the east global hackathons got their own start in an Eve global hackathon which is so cool. It's like such an awesome testament to.
00:46:58.080 - 00:47:01.964, Speaker B: How growth oriented this whole community is cool.
00:47:02.002 - 00:48:29.880, Speaker A: So I wanted to kind of finish with just a quick plug for our network and being able to kind of help and support you along this way from kind of, first of all, helping build a group of people. That can help you kind of think about how to build these startups, helping you start them from the beginning, from the early stages of thinking about ideas, thinking about potential startups through a request for startups, getting involved in hackathons, getting involved with early stage grants and so on, to then helping connect you to lots of different sources of capital, whether that's funding from investors in investment capital or funding from grant making organizations for network capital, and then helping you connect to talent to be able to kind of hire and grow your team. Then access a lot of knowledge in terms of being able to tap into lots of different super knowledgeable people with office hours. As the Huddle guys mentioned, office hours are an extremely useful way of kind of tapping into the knowledge of the network and also connecting you to service providers that can help solve a lot of your problems for you just in terms of networks and so on. Think of being able to build a whole community of people and other organizations and so on and being able to keep in touch over the internet. I think one of the things that is very important to remember is that the internet connects you to everybody else in the world so they're really only kind of a few messages away. And so if you kind of can lean into the connectivity of networks, whether that's the East Global Discord or any other telegram groups that you're part of or any of these kinds of networks, you can lean into that.
00:48:29.880 - 00:48:48.028, Speaker A: And lean into, especially structures that can give you kind of office hours or have some structure to help tap into the knowledge that people have. And yeah, some other PL can help you with talent, help you with people processes, can help do coaching and advice, can help you with some of the tech and the service providers and so on.
00:48:48.114 - 00:48:48.460, Speaker B: Great.
00:48:48.530 - 00:49:11.792, Speaker A: So that's all I wanted to talk about. That's how to start a startup. Great to see everybody. Good luck with all of your hacks and all of your development. And remember that this is a super Iterative process and you're going to be in each one of these stages for quite a while. And I strongly recommend that you super enjoy the hackathon period and process and do a ton of hackathons, learn a lot, get to know everybody, try out and grow your knowledge and then from there get to building a startup.
00:49:11.856 - 00:49:13.680, Speaker B: Thank you very much. Bye.
