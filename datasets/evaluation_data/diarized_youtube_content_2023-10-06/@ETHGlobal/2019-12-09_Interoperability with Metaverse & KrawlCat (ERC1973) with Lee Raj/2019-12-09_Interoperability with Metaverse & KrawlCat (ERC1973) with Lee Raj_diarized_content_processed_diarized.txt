00:00:00.570 - 00:00:30.018, Speaker A: Okay, thank you everyone for coming here for this workshop. We really appreciate it. Without hackers or people like you, this kind of event is probably not very successful. So we'd like to appreciate everyone from our team. So a little bit about me. I am the tech lead at Crawlcat. I am also the author of ERC 1973, which is a standard on scalability, a layer two scalability for the ethereum network.
00:00:30.018 - 00:01:04.202, Speaker A: And right now, most of my work is kind of focused on building decentralized ecosystems. A little bit about my journey to give you from where I have been and where I am today. So in 2016, I started as more like a crypto writer. So I wrote a lot of articles on early bitcoin ethereum as well as a lot of white papers during that time. Then in 2017, I was actually a volunteer here in Eatwaterloo. I couldn't get in as a hacker, so I started volunteering, and that's how I got here. At that time, I built a lot of ICOs.
00:01:04.202 - 00:01:52.350, Speaker A: I got a chance to work with some thought leaders in the community. At that point, I worked with the creator of ERC 20 Token, building some early ERC 725 research on identity and reputation systems. But then I didn't work a lot on that area and moved on to being a full time blockchain developer at the company. And I'm here today. I architect a lot of different applications for smart contracts for decentralized Oracle systems. And then this year, I pushed boundaries of innovation with our company and put forward the 1973 ERC standard, which is part of a component here that you guys will try to hack around with it. And now I kind of focus on building decentralized ecosystems.
00:01:52.350 - 00:03:03.750, Speaker A: So a little bit about very short kind of introductory things for our projects that are behind this workshop. So DNA is a metaverse dual chain network, which is a UTXO based chain with a proof of work and proof of stake architecture consensus mechanism that enforces innovative concepts like digital identities, assets, avatars, kind of something that you guys will be working with. Crawlcat is more like a generalized Oracle similar to chain link that brings data from Web 2.0 to Web 3.0 and facilitates interoperability along with providing real world data to the blockchain network. Again, the ERC 1973 standard is a layer to scalability that helps you kind of build decentralized applications without hitting the block gas limit. So it helps you distribute rewards to tens and thousands of participants without running a for loop or getting into a situation where you hit the block gas limit and you're kind of stuck with it, right? So the goals of this challenge is quite simple.
00:03:03.750 - 00:04:00.754, Speaker A: Your task is to achieve interoperability, which is like communication between two closed networks, right? It's one of the pressing issues along with scalability and decentralization in the blockchain industry. So if you kind of feel ambitious, so feel free to go with it. So for the hackathon judging matrix, you have five factors, right? You have technical, original, ambitious design, UI, and wow factor. Probably this would most likely fit into something like original and ambitious original because it's one of the key pressing problems in the blockchain ecosystem, right? And ambitious because it's a little tricky to understand both the protocols and kind of figure out how you can navigate to it. The price is two K Canadian worth of DNA tokens, which could be traded at an exchange later on. But make sure your team at least have some experience with Solidity or JavaScript web3. Otherwise you might find yourself stuck a little bit, especially with JavaScript and Web Three.
00:04:00.754 - 00:04:33.682, Speaker A: So if we go to the ideal solution, this is what it's kind of going to look like. You're going to facilitate cross communication between these two closed protocols. And most of the code base is kind of going to look like server side code base. With Web Three JSON objects you can run an OJS server kind of account managements, right? So Metaverse is more like a bitcoin based chain. So it has UTXOs and Ethereum is we know it's externally owned accounts and you won't really direct with any. The smart contract that you will interact with is the ERC 1973. So you can just call the public functions and you'll be fine.
00:04:33.682 - 00:04:56.630, Speaker A: So here we are. So your task is again to achieve interoperability and let me go to the repo here to kind of guide you guys into a step by step process. So this is the repo. So it's kind of in depth post. Feel free to go from there and if not, you can just check the link here. It's ETHWaterloo task.
00:04:56.710 - 00:04:59.260, Speaker B: So your architecture is pretty simple.
00:05:01.150 - 00:05:20.082, Speaker A: This is the metaverse explorer, right? So we have the UTXO base chain here. So you pick an address here and there are concepts of avatars and certificates that you guys can mostly read into these two articles. They're very well written. So then you can just check.
00:05:20.136 - 00:05:22.066, Speaker B: Okay, here we have avatar, right?
00:05:22.088 - 00:05:26.440, Speaker A: So we have avatar here and then we can paste the addresses here.
00:05:27.850 - 00:06:16.188, Speaker B: Let me put it here. Yeah. So then you get this nice little link here, right? You get this nice little so as.
00:06:16.194 - 00:06:45.576, Speaker A: You can see from this JSON object, you can find this address, right, which is the Metaverse address. And then you can see some more information from it. There's an original address. This is the issued transaction. And there's a symbol which is somebody's name that they kind of assigned to this avatar. So again, you can see this address is this symbol here and the original address. So using this API Explorer, you can choose to go, you can figure out if you want to work with avatars or you can work with certificates or you can even work with raw transactional data if you want.
00:06:45.576 - 00:07:06.770, Speaker A: And from these addresses, right? So you pick these addresses from the metaverse chain. And then with the help of a Web Three library, you are going to create corresponding Ethereum accounts. So, for example, this address will be corresponding. You can run this function create accounts, web Three, right?
00:07:10.340 - 00:07:16.196, Speaker B: Maybe it's one of the stack overflow answers or something, right? Maybe not this one, but we can.
00:07:16.218 - 00:07:53.756, Speaker A: Just go to the library. So here you can just create use this function in node JS server and create corresponding Ethereum addresses. And then they will be mapped to these addresses, right? And once these are created, you can store in a data structure like hash map or arrays or whatever you like. And then you can start working with the ERC 1973 contract here. So ideally, if you have to complete the task, it's very simple. You can just whitelist your addresses into this function admin. That's kind of the basic thing.
00:07:53.756 - 00:08:12.164, Speaker A: But if you want to get more creative after that, right, you want to do I think that's where the Crusco of the task lies in. How can you get more creative in creating crypto economic environments? Will you be able to create some form of incentives for the participants of the addresses? Some things, like could be I think.
00:08:12.202 - 00:08:16.468, Speaker B: I put in some examples here. Okay? Here.
00:08:16.634 - 00:08:42.848, Speaker A: So, for example, you could create environments like where I guess I'll give an explanation of ERC 1973 a little bit before that. So, ERC 1973, what it lets you do is that you can register any externally own accounts, right, your Ethereum addresses. And any of these participants can trigger the contract and bring rewards into the economy, for example.
00:08:42.934 - 00:08:46.610, Speaker B: I think this is the best way to understand it here.
00:08:52.300 - 00:09:36.584, Speaker A: So if you look at this Robson transaction here, right? So what happens here? If you can notice that at the first transaction, you had two participants in the network, right? You had two participants in the network. So when there are two participants in the network and one of them wants to withdraw, after sometime, he gets 65 divided by two, which is 32.5 equally divided, right? And then at this point, when the contract was triggered again, there were so one block is equal to one token. You can think of it this way. So 101 at this point means that there are 101 blocks passed from the last trigger point. So at this point, you have four participants in the network. So if somebody had withdrawed their rewards at that point, it would be 25.25,
00:09:36.584 - 00:10:03.040, Speaker A: right? 101 divided by four. The last withdrawal is the first guy who was registered here, right? So it's 32.5 plus 25.25, which is 57.5. So that's what kind of this ERC 1973 lets you do. It lets you build scalable, decentralized applications. So that's where one of the areas you guys can think of more creative ways to do it, right?
00:10:03.110 - 00:10:07.170, Speaker B: So going back to the task here, right? So here we are.
00:10:07.620 - 00:11:20.468, Speaker A: So, for example, you guys created these corresponding accounts and then you whitelisted these Ethereum addresses on your node JS server, right? And after you whitelisted and with different triggers, you could have certain business cases where you can say okay, you know what? Each one Ethereum token would be equivalent to ten tokens in the metaverse chain. Or you can do another interesting things like okay, with different digital avatars, right? Each one of them, you can think of them as like 721. Each one could represent something of more value. Or if you work with certificates or identity areas, it would be something like okay, if you're a domain certificate holder, you get more kind of token value. But if you are less in the hierarchical chain or less authority chain, you get kind of less token value, right? So that's kind of creative things. That is up to you guys on what you do on a basic level. All you need to do is create the corresponding accounts and trigger this specific function in the smart contract which is where are we? Which is Add miners.
00:11:20.468 - 00:11:32.908, Speaker A: Here you will put your Ethereum address and then it's mostly whitelisted. But after that what you do with it, it's up to your creativity. And I think that's one of the criteria where we will use to judge this.
00:11:32.994 - 00:11:34.604, Speaker B: Yeah, but I think that's kind of.
00:11:34.642 - 00:11:43.090, Speaker A: Short and sweet on this. I'll be more than happy to take any questions or anything that I need to repeat for any one of you.
00:11:43.700 - 00:11:50.850, Speaker B: Any questions? No, it was a while.
00:11:53.000 - 00:12:36.560, Speaker A: Yeah. I was told that I should speak a little slower as well, but I could repeat any areas that you would like. I think in short, this is kind of your I can put the link to the presentation as well in the GitHub repo, but this is kind of the short thing that that you guys can think of. UTXO best chain where you have these JSON APIs, right? And then you have the Ethereum chain, which is like the smart contract here. And in the middle you have the areas that you work with. Web three server side key management.
00:12:44.280 - 00:12:44.740, Speaker B: Cool.
00:12:44.810 - 00:12:48.084, Speaker A: We are in Discord, which is our.
00:12:48.282 - 00:12:50.420, Speaker B: Let'S see, Discord channels.
00:12:54.120 - 00:13:07.950, Speaker A: So I'll post the presentation in Discord here. So this is our channel metaverse DNA and crawlcat. We'll be more than happy to answer any questions if you guys have or just ping me directly from here.
00:13:10.320 - 00:13:12.044, Speaker B: Cool, that's all.
00:13:12.082 - 00:13:15.420, Speaker A: Thank you everyone and enjoy the rest of the hackathon.
