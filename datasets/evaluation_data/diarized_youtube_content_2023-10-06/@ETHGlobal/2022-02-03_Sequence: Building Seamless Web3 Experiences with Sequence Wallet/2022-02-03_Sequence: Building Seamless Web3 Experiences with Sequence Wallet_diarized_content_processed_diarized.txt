00:00:14.330 - 00:00:38.550, Speaker A: Awesome. We're good to go. Hello everyone. Thank you so much for joining yet another East Global workshop for road to Web Three. I'm super excited to have everyone here and also really excited to have Peter from Sequins doing a workshop on building seamless Web Three experiences with sequence wallet. With that being said, questions go into the zoom chat. Peter will be answering them at the end and I'll pass the mic off to Peter.
00:00:39.290 - 00:01:01.550, Speaker B: Thank you very much, Anna. Hello everyone. Thank you for joining today. Hope you guys are having a great event. The ETH Global events are always really incredible place to kind of learn and meet people. So, yeah, really honored to be here and share with some of the work that we're working on. So today I'm going to be taking you through a little workshop on how to build seamless experiences for Web three using Sequence.
00:01:01.550 - 00:01:58.660, Speaker B: So what is sequence? Well, Sequence is actually an Ethereum wallet designed to make Web Three simple, fun and accessible for everyone. And obviously, as we're looking at Ethereum and as a wallet, it's really important to kind of look at where Ethereum has been and where Ethereum is going and what's its evolution. And Ethereum as we know it today, or as we knew it like a year ago and as we know it today, has actually evolved quite a bit. It's not just a single chain anymore and a single layer, one main net that everyone's interacting with and deploying everything to. It's actually an ecosystem of chains or a network of Ethereum compatible chains. We have polygon, optimism, arbitrary binance, smart chain finance, phantom and avalanche and a bunch more. Again, these are all EVM JSON RPC compatible blockchains that are all kind of speaking the same protocol, which is very cool and interesting, makes you think about, again, what's its further evolution of where this is all going.
00:01:58.660 - 00:02:56.146, Speaker B: And of course, when you look at this imagery, I love this imagery and you look at this individual kind of interfacing with this Web Three, you look at this single point of access and you see that the wallet is that interface. It's the interface to ride these chains and access these different networks in a way that's seamless. So the wallet plays a really key role in how you in your gateway to accessing these different Web Three networks. And that's why we heard kind of today, when you think about wallets and Web Three and all these different things, there's still a lot of user experience challenges that are real and users are faced with today. And again, it just comes down from kind of an iteration evolution of a new set of protocols that are needed to be able to be supported, well supported with some new kind of paradigms. But these are some common challenges and issues that people have faced. So I don't know if you guys have ever tried your first time in Web three on Ethereum or something.
00:02:56.146 - 00:03:20.220, Speaker B: You come upon a website and it says, okay, well, you got to sell a Chrome extension before you can even access it. And you're like, well, why do I need a Chrome extension? That's kind of confusing. And then, so you got to get that Chrome extension, right? Chrome extension is very powerful, but it's kind of a pro user level thing. It's a bit jarring to be jumping into that right away. And then you get the Chrome extension or your wallet and you're like, okay, now warning, warning, warning. Seed words. Make sure you do that.
00:03:20.220 - 00:04:09.660, Speaker B: That's kind of a little bit scary. It's definitely kind of something new. And then in other instances when you're perhaps logging into a new computer you're like, okay, how do I get that wallet set up? So now I got to start handling these really delicate private keys and seed words that has full access and full control of my wallet. It's a bit also scary and very error prone. And again, it's easy to kind of misuse or understand its kind of power. And then you come on gas, what is gas? What's the gas price? What price should I use? And what's a limit? How much does it cost? And what's a nonce? And things like this, right? And then you finally learn about gas and you start saying, okay, well, you realize you need Ethereum or the basic network currency to go and execute pay for your gas. You're like, well, where do I get ETH? How do I get ETH in my wallet in the first place? That's not so easy.
00:04:09.660 - 00:04:32.130, Speaker B: And then in other instances as a wallet experience, perhaps your friend sent you an NFT and you're checking your wallet and it's like, no, it's not here. Where is that? Maybe you tried executing a transaction. You're like, the transaction stuck. You try to try to firing a transaction, it's just taking forever. Etherscan is telling you it's going to take you 4 hours or something like this because you mispriced the gas. It's kind of annoying. You got to speed it up or cancel.
00:04:32.130 - 00:04:54.486, Speaker B: It's not great. Not a seamless experience. Perhaps it's too expensive. It's very expensive to send a transaction to do something kind of perhaps simple. And of course that's why we have all the great layer twos and side chains that are helping with that. But yeah. So again, you again consider the evolution as it relates to infrastructure and as it relates to user experience and how they all come together to build something very integrated.
00:04:54.486 - 00:05:33.686, Speaker B: And that's kind of the point of all of this or the point of the end game solution. And then what if you have your wallet on a computer and your computer gets hacked or stolen? Someone breaks into your car or you forget your phone in a taxicab and you got your single private key in there, right? So there's definitely some protection. But I would be kind of nervous. I'm going to be like oh, how do I rotate my private key? I can't really do that. I can't change the underlining key that has control to my wallet, at least in the standard state of the world. And then we look upon again, evolution. We look at layer two future kind of the layer two networks that we have which are doing amazing things.
00:05:33.686 - 00:05:59.914, Speaker B: But now it creates a new set of challenges because again, Ethereum is not one network anymore, it's many networks. And actually I would say even in the next twelve months it's going to be other subnetworks and it's going to be hundreds of networks that are Ethereum compatible. Actually, maybe thousands. I can see that too. But again, they solve problems on one hand, but then they create a bit of fragmentation and friction on the other hand. Users have to start understanding these different network names. DApps are deployed on different places.
00:05:59.914 - 00:06:46.702, Speaker B: And again, now you need a new currency, now you need a new gas currency perhaps you need Matic or AVAX, things like this. And then how do you get it on the network? And then how do you switch networks and all these things? And then you're like well, I want to buy some USDC or something. How do I get that? Where do I go to buy the currency? And how do I move currencies across different networks as they're kind of obviously part and parcel of the design. So all of these things altogether are the opposite of seamless, right? So again, we have to solve all of this. This is what we have to do. And as an ecosystem, what's incredible is it's happening, right? It's not just me, it's a lot and thousands and thousands of people who are all working towards this and doing really cool stuff and really are building Ethereum as an ecosystem of chains that feels like one network. And it's going to happen.
00:06:46.702 - 00:07:36.960, Speaker B: It's a matter of time. We're really not far as an ecosystem. So now looking at kind of sequencing the architecture and how it all works and how we've approached it, I want to kind of share with you guys again some of the internals and what makes it a bit unique and how we design our architecture to solve for these problems. So first and foremost, what's pretty cool and novel and different is that a sequence wallet is actually a smart contract and that's why it can be considered a smart contract wallet. You can actually find the source code on the GitHub link there and you can see the actual solidity contracts that create your wallet. And so the difference is now you have a contract that only you can control or a set of keys, a set of different combination of multi keys can have access to control that wallet and your tokens live inside of that contract. They stay in that contract and that's pretty cool.
00:07:36.960 - 00:08:18.010, Speaker B: Obviously, as I've been talking a lot about MultiChain. This is something that we've been considering for a long time. It's part and parcel of the design in the way that, again, all the networks feel like one, having a noncustodial design is also very important because for a lot of reasons. First off, I don't want to have custody of any or liability of anyone's goods. I don't want that on my conscious. But it's not even just that, it's that, again, how do you design all this? And to maintain the purity of Web Three and to actually have self custody and have these composable things and have full control and lots of other cool benefits. But yeah, so the non custodial design is one of the really challenging elements.
00:08:18.010 - 00:09:16.970, Speaker B: Again, satisfying all those conditions we described earlier, and at the same time making it so that the user is protected against themselves, right? So they don't screw something up and lose all their funds. Or maybe they want extreme security because they're an expert user. There's a lot of consideration. And then the other cool thing about the sequence contract wallet is, as you might imagine, perhaps some of the Savvy viewers are realizing that, okay, well, a smart contract costs money to deploy, so how can you do that? So does it cost money for me to use a wallet? Well, not exactly, because we have well, yes and no. So we have this thing called lazy deployment or counterfactual instantiation. So you can derive a contract, a wallet, a contract account, without even deploying it. You can derive the address and you can start receiving funds and start doing things inside of it and even sending messages.
00:09:16.970 - 00:09:47.414, Speaker B: And you only actually deploy it at the time when you do your very first transaction. It's quite transparent to a user, so they don't have to consider it, but of course they're still aware of it. And on the next slide, I'll actually show you how efficient the actual deployment is. It's actually only 40 bytes of data. It's pretty cool. Anyways, so we also support so lots of crazy packed technology that extends the capabilities of Ethereum, leveraging all the smart contract stuff across these different chains, these EVM compatible chains, really fun stuff. And there's a lot of great research going on.
00:09:47.414 - 00:10:39.720, Speaker B: Even Vitalik released an EIP or an ERC, four, three, seven, talking about account abstraction, really signaling kind of in this direction and we're really excited about that to see even further standardization around these types of contract accounts. Again, pretty cool stuff. Of course, we also support social and email login, so users can use like a Gmail and login kind of easily. We'll kind of take you through that. It's also a Web Three compatible wallet, so it supports EIP 1193. If you built your DAP in Ethers or Web Three or another Ethereum client, it's just going to work because, again, because of 1193. Then again, part of the beauty of Ethereum and why all this stuff is really important to have standards and open protocols because you kind of gain the benefits of tooling just kind of clicking together and working across the board and everything kind of just start meshing and growing in a really seamless way.
00:10:39.720 - 00:11:09.054, Speaker B: And then the other thing we have is flexible integration. So the sequence wallet can be used in many different places. So, for instance, you can use it as just a web wallet so a user doesn't have to install anything whatsoever. You don't have to install a Chrome extension. You can just use it kind of like you just access adapt and adapt can load up the library and away. You kind of go in like a PayPal stripe type of experience. But of course, with Web Three and on Ethereum protocols, right? Or you can go install a browser Chrome extension.
00:11:09.054 - 00:11:33.178, Speaker B: Or we're going to add Firefox extensions as well. It does work on Brave, so we have support for Chrome and Brave. We can add firefox. We are going to add Firefox. And it's pretty cool because then you have like it's a bit of more extra pro features. So when you want to kind of go a bit deeper and perhaps access a bunch of DApps like you would with MetaMask, you can go install the Chrome extension, do that. And then, of course, we have a mobile experience.
00:11:33.178 - 00:12:00.270, Speaker B: And what's neat about the combination of the web and the mobile? It's a powerful combo, because now you can actually open your phone and you can use the mobile browser and suddenly you can actually start accessing. DApps. Right. Through a phone without having to install anything, even if that DAP doesn't have anything on an app store with the wallet integrated and so forth. Again, back to seamless design. And of course, as some of you may or may not know, sequence isn't the only product we've built. We've also built a video game called SkyWeaver.
00:12:00.270 - 00:12:30.406, Speaker B: And so NFTs are very core to us and different tokens and experiences. This is kind of why it brings us here. But of course, we have very deep and awesome integrations with NFTs and Tokens ERC, 27, 20, 111 extent. Someone could go mint an NFT right this second, send it to someone's sequence wallet, and the wallet will immediately show that NFT. Because we have this really cool sequence index or this piece of infrastructure we wrote, kind of like the graph, but it's our own. It's called sequence indexer. And it again has really nice indexing across the different tokens.
00:12:30.406 - 00:13:05.154, Speaker B: It's really fast, it works compatible and so forth. So, yeah, you can just mint and see it and it works. So again, it's really important because that's what you need on the web. This isn't really me about going on about Sequence feature lists. Why this is important is because you guys can have all this stuff in your DApps, right? You want users, you're building an NFT product, you want to mint something, you want the user to see it. Well, guess what? It's just going to work, right? It's just going to work with all this stuff is here for you to use in an Ethereum web3 compatible way. Brings me to the next point around gas.
00:13:05.154 - 00:13:53.362, Speaker B: Using gas is very tricky and handling gas or understanding it and firing transactions and just firing forgetting and not worrying about pricing and so forth with kind of as quick as block conclusion as possible. So again, there's a few kind of a lot of concepts in the ecosystem and one is called gas abstraction and the other ones are called metatransactions. They go hand in hand and we have kind of an advanced form of that because it's a smart contract based account. And what it allows you to do anyways is it lets you fire a transaction and it lets you pay the gas. Not in ether or in matic. You can if you want, but you can pay it in USDC Dai or some other ERC, 20 token. In the case of SkyWeaver, we use USDC.
00:13:53.362 - 00:14:23.066, Speaker B: We can use it for anything. So yeah, you can go on the polygon network or on the Ava network and you can actually start paying your transaction fees in USDC. It's pretty cool. And then we have the metatransaction stuff, which again, it's related. And you can do things like instead of sending one transaction for an approve and then a swap or something, you can actually batch them together. You can actually take a multitude of transactions and group them together as one and have it be executed as a single transaction on chain. That's called it batch transaction.
00:14:23.066 - 00:14:55.738, Speaker B: It's also very cool and powerful. Again, solve a lot of user experience problems and security problems when you think about approving things only to a certain quantity, not for approving all stuff like this. And of course, we have built in built in Bridging support and Fiat on ramps with wired and pan ramp. And again, why this is really useful for you guys as DAP builders or whatever you're building is, well, you're going to want people are going to want to make purchases. Perhaps they're a new user. So now you don't have to worry about you're going to do your own bespoke integration into Wire and MoonPay. You get to kind of benefit from the integration that exists in here.
00:14:55.738 - 00:15:24.450, Speaker B: So that's kind of the whole thing. If you map it back to all the problems, there's a good kind of mapping to that I just wanted to show you guys. This is the actual sequence wallet bytecode that gets deployed. These are the 40 bytes and you can go see it there. And it takes a modular design. So there's a lot of ninja coding tricks that our team has done. They're very experienced, solidity guys and they know all the ins and the outs and the different tricks that kind of construct all these things so that it works in such a way while being very efficient.
00:15:24.450 - 00:15:55.754, Speaker B: It's very impressive stuff that they've done. As I mentioned, we kind of built SkyWeaver and this is kind of what brings us to, again, sequence is that you guys can actually go by using you can achieve the same level of kind of fidelity and experience that SkyWeaver users get. We have 170,000 people playing SkyWeaver right now. Next week. We're actually going full general availability, which is really cool. So we have even more users. And half of our users, they've never done anything on crypto ever, right? Their first time they're doing it, it works on the phone, works everywhere.
00:15:55.754 - 00:16:09.454, Speaker B: They're having a great experience. We don't have any problems. People saying like, I don't know what I'm doing right. People just say, oh, the game is great. Oh, I traded this. That's kind of what you want. That's kind of, again, what we want to help others achieve.
00:16:09.454 - 00:16:34.090, Speaker B: We want to see more utility in Web Three. We want to see more content, more things going on. And how do we drive that utility as an ecosystem for people to do more fun stuff and cool stuff. So I'm going to show you guys a little bit of a demo, kind of the workshop component of it now that hopefully you understand a little bit about some of the background in terms of some resources. We have the discord discord GG sequence. We have our docs. Doc sequence build.
00:16:34.090 - 00:16:48.174, Speaker B: And we're going to go through this. We have this two demo DApps that we've constructed and demo DAP. One uses Web three modal. You may or may not have heard of it. It's a cool integration by the guy who made wallet connect, Pedro. And it's really nice thing. I'll show you how that works.
00:16:48.174 - 00:17:07.574, Speaker B: And then you can also use sequences directly to connect the wallet directly. But minor differences, but I would suggest have a look at both. Let's turn this off. So I'm going to switch into that. So as we do the demo. So pop open the link. You can actually yeah, so GitHub.com,
00:17:07.574 - 00:17:40.350, Speaker B: if you forget this, if this link is too long, let me see if I can get this in the chat. 1 second here. So I'm posting that in the chat and I'll go through the questions in a bit. But maybe there's some teammates that are also going to answer. All right, so that's the link. So if you want to follow along, once you're in here, you can actually click on this link right here. And it's actually hosted on GitHub pages.
00:17:40.350 - 00:18:18.374, Speaker B: This is just a react client side application, nothing too fancy. And the point of it is so I'm actually going to run it locally just because I think that's kind of cool to see. So we're going to clone it. All right? And then let's just pop it open. So I'll leave it in here. So yeah. So as instructions kind of say you can clone it again, you can run it from here directly.
00:18:18.374 - 00:18:42.340, Speaker B: But if you are looking to do development, this almost functions like a good boilerplate. Right. So if you're doing a DAP, this would be a pretty decent boilerplate because it's not heavy, it's not very opinionated on React. You can kind of take it any direction you want. Yeah. So we're going to run Yarn, as expected, and this is using the React scripts sort of thing, and it's using the Web Three modal program. And I'll talk about Web Three modal in a second, why it's interesting.
00:18:42.340 - 00:19:35.902, Speaker B: So we're just going to get it running in the meantime, as the kind of tells you is have a look at the app TSX, right. That's the bulk of the real stuff. So most of the application is in here. So it's running on port 4000 and yeah, so the whole program, it's around 300 lines of code, including some styles. Let's get into it. So, yeah, what is this DAP, exactly? So it's a bit of a boilerplate and it shows you how to so when you do open it, pop open your Chrome Inspector or your know, browser inspector, and it's just to kind of show you how to do and execute common functions of what a wallet, what you'd want to do in your DAP. So you're going to connect a wallet, you can disconnect, you can get the network ID because you might be on a variety of different networks.
00:19:35.902 - 00:20:12.080, Speaker B: What is the network list? What's the account address of the wallet? Give me the balance of their kind of ether or matic, whatever the native currency of the network is. Signing a message. Signing a typed data message, like EIP 712, which are really cool and useful. You can send some ETH, you can send some tokens, ERC, 20 tokens. And so this is essentially the sending of the die tokens is really like you're making a smart contract call. So this is a native transaction call with no call date or no smart contract information or calls. And this is you're actually making a smart contract call to do a die transfer.
00:20:12.080 - 00:20:52.958, Speaker B: Feel free to, again, look at the source. And we're using Web Three modal in this case, which so I'll give you a bit of a demo and explain why it's interesting. So ultimately, it comes down to here we're going and making like a Web Three modal instance and we're specifying a few providers. Let's kind of show you and go through it. So, first off, the thing I'll mention part of here is I actually don't have just for demonstration purposes, I actually don't have MetaMask or anything running in here. You could think of this like I'm like a fresh user. So if I hit this Connect modal on your DAP, it might say, Connect Wallet it right? And then this is where the Web Three modal pops in.
00:20:52.958 - 00:21:18.206, Speaker B: And what's kind of cool also you could add more providers, like feel free to go and have a look at their thing and add more providers as you'd like. And this allows you to kind of the idea of users can bring their own wallet, which is definitely encouraged. And so, yeah, you can use Wallet Connect. It's a great protocol. So perhaps you want to access this DAP remotely. You want to actually have a phone that supports Wallet Connect where you can actually click on this, scan the QR code and start interfacing. And as these messages ask you to sign things, it'll actually show up on your wallet.
00:21:18.206 - 00:21:44.266, Speaker B: So really cool thing, and I will mention Sequence does support Wallet Connect. So if you're on your phone, you could actually do that. Perhaps you don't want to have a key on this computer, you want to access it remotely. You can do that anyways. And then the other link, of course we have Sequence. You pop click this guy open and then saying, oh, do you want to allow this DAP from this location to access your wallet or to connect to your wallet? You say continue and that's it. And now you're connected.
00:21:44.266 - 00:22:06.402, Speaker B: So you can kind of click on these little buttons and you can see, oh, Trinidad is one, three, seven, that's the polygon network. I can click on the networks thing and I can see, okay, my networks are I'm on the polygon network as well. I can get my account, that's my address, I get my balance. Okay, interesting. It's doing some that's my balance. Maybe I want to sign a message, be like, click on this. Okay, it's asking me to sign a message.
00:22:06.402 - 00:22:33.946, Speaker B: This is the message. I hit confirm and it checks if it's valid, it's true, it is valid. So yeah, going back to this a little bit. So you create your modal which lets you then once it kind of connects and once you hit the connect button, it goes through that you ultimately get a provider. And in this case, which is kind of cool, is although I've talked to you guys a lot about Sequence, again, it is just using Web Three libraries. It's compatible with that. So you can just use Ethers directly.
00:22:33.946 - 00:23:01.074, Speaker B: You could also use web Three. So in this case where our provider is actually a type of Ether's web Three provider. Once the wallet connects, we get an instance of the provider. We can also from the provider, you can actually grab a signer. And a signer is the thing that the provider you don't always need the wallet. You can access the node directly. So you can just query like read operations.
00:23:01.074 - 00:23:22.390, Speaker B: But a signer is when you have to ask the wallet for something of permission. So we get an instance of the signer, but you can also get the trinity. There's lots of ways to get the trinity. There are some overlap with these functions. So we don't actually need the signer for that, but whatever. But we're going to get the signer, we're going to get the address of the wallet. We can list some accounts, ask the provider for a balance.
00:23:22.390 - 00:23:41.758, Speaker B: And here we're going to be signing a message. So we ask for this, sign the message, and then we check if it's valid and kind of and so forth. And then let's say we want to send some die. So I'm going to hit this button and it's like, oh, let's send some die. I actually don't have any die, don't have enough die. But we'll do a little thing. We'll get some die.
00:23:41.758 - 00:24:00.200, Speaker B: Actually, in a second, I'm going to be sending five dye here. So this function we're going to be calling the dye contract. We're going to be encoding. We're preparing a transaction. You can actually remove this gas as well here. We should do that because it's not needed. It'll automatically calculate the gas limit for you.
00:24:00.200 - 00:24:20.682, Speaker B: You got your little abi function, so you have a look. But this is all standard Ethereum stuff that you perhaps already know. And then again, you just pass it to the signer and it just pops up here. So what's special is this is running in like a web wallet mode. Pretty cool. Now next thing I'll show you is what if I did have MetaMask, right? So I'll turn it on and I come back here. I'm going to disconnect.
00:24:20.682 - 00:24:44.360, Speaker B: And now I got my MetaMask going on and I'll unlock it and now I click connect. Okay, cool. Interesting. So now I can come in here and be like, oh, I can use MetaMask sequence or this. I can like, let's say pop open MetaMask. Annoying. What's it doing? There we go.
00:24:44.360 - 00:25:02.878, Speaker B: Yeah. So now I can go check the chain. It was like, oh, chain one. I'm on the main net in this case, get my account address. I can say, hey, sign a message for me. And it's going to be like, all right, we'll sign it or sign a type data or send some Ether or send some die. And I don't have the money.
00:25:02.878 - 00:25:16.110, Speaker B: Right. So pretty cool. Yeah. So again, what's interesting about this is that same code path. Again, a simple demo DAP. And of course we also, as I mentioned, we have a sequence chrome extension. So pop that guy open.
00:25:16.110 - 00:25:52.234, Speaker B: Oh, yeah. The last thing I want to show you before I get the chrome extension is once you're logged in to the wallet, you can also go to sequence app and you can start actually accessing the wallet in like a full screen mode. And the other thing I'll kind of give you a quick preview of is if you are just an incognito, if you're signing in again, you can use these kind of give it a try. You'll see what I'm saying? But yeah, so you can access it from here. You can check your different keys and different keys and you. Can sign out a device because you have like it's a multi key system, right? You can kick out a device if you lose it, like I'm saying. But yeah.
00:25:52.234 - 00:26:17.470, Speaker B: So if we pop open the Chrome extension so the Web Wallet is pretty cool. But from here, from the Web Wallet, I can't really access Uniswap, right? I can with Wallet connect. So that does work. But the Chrome extension lets me access other DApps, just like I could use MetaMask. So it's here. You could click here and go expand and access it full screen, just like I showed you as well. But yeah, let's disconnect, let's restart.
00:26:17.470 - 00:26:51.950, Speaker B: And if you hit Connect now, so you're hitting Web three wallet. And now we're actually using all these different functions, work the same. And this is actually although it doesn't look like it, this is actually the Chrome extension. You can't really tell because it is and it's running like client side on my device in an offline way. And that's kind of it. I mean, you can also go to pop into Uniswap and launch your thing, connect my Wallet. And yeah, I could convert to some die.
00:26:51.950 - 00:27:27.494, Speaker B: So we're going to send this transaction just to kind of show you the Metatransaction part. So now it's asking me to do a contract call, right? And this is where the Metatransaction stuff is happening. And so you have a variety of so you have the different contract call. We're doing a multi call. And we definitely should show this to be a little bit sometimes in certain call datas, we can actually render it kind of nice. We'll go more we know it's on the Polygon network. That's what this particular wallet is hooked up to because Uniswap runs on a multitude of networks and we're going to actually pay a gas fee in USDC.
00:27:27.494 - 00:27:49.474, Speaker B: Imagine we didn't have I actually so happen to have like three out of four of these currencies. But let's say I want to do with USDC. Anyways, let's go. And the cost was actually extremely cheap. It was less than a penny, I think, right? And what's cool is when the relayer gives you a quote, it's actually guaranteed that quote. So it's guaranteed to give it to you and it'll automatically do gas repricing. So you never have to think about speeding up or anything like this.
00:27:49.474 - 00:28:07.000, Speaker B: Our transaction even confirmed faster than Polygon. Even polygon scan is showing us right now, which probably is pretty normal. But anyways, that's how fast it got mined. It's really cheap. And we got some more data. And I'll stop the demo at that point and kind of turn over to questions because I know we're hitting on time. Let's see what we got here.
00:28:07.000 - 00:28:44.026, Speaker B: Hope that was helpful. And like I said, please join us on the Discord. We did audit the contracts we have, I'd say any other further questions, I mean, definitely ask us on the discord. But yeah, the Wallet contracts, which are here. They've gone through two audits, maybe three audits, I guess. Three audits. Um, yeah, I guess I'll just pause there.
00:28:44.026 - 00:29:20.440, Speaker B: But if anyone wants to kind of like how do you test Mumbai? So what you'll do is or testnet you go, here, go Sequence wallet, and you hit the on your login page, you go Enable testnet and this little yellow bar, and then suddenly you're on the testnet network. At this point, we do that so the users don't screw it up or they're confused what assets are, where it's pretty intentional about what network you're on. And then you go disable. Yeah. So that's pretty much it.
00:29:25.840 - 00:29:27.470, Speaker A: It looks like another question.
00:29:28.880 - 00:29:56.928, Speaker B: How do you ramp up users if they don't have crypto in their wallet? Yeah, good question. So I guess I didn't show you on the screen share, but a few ways. I think it's a really cool thing that if users are using their wallet, they could find their way into crypto. Like, they could place SkyWeaver and earn a card, and boom, you have nothing. And you just play the game. You earned a card, or maybe you created a good piece of content and someone sent you some crypto. So I like that aspect.
00:29:56.928 - 00:30:25.040, Speaker B: You could go buy it. If you do pop up in the wall, you can click Add Funds. You can buy it with the different providers, like with credit card or debit card. You can do Bridging. You can buy it from there's a lot of exchanges these days that will deposit directly into a layer two. I think a lot of the world is understanding that it's like, kind of DApps. And the ecosystem exists on layers twos, and the base chain is used just for kind of settlement and additional insecurity.
00:30:25.040 - 00:30:45.768, Speaker B: Hopefully, that answers it. You can use Morales or any other like, you can use the graph. You can use whatever you want right in your DAP. You can do whatever you want. Sequence provides its thing. It has its own back ends and things. But, yeah, you're feel free.
00:30:45.768 - 00:31:06.172, Speaker B: I encourage you guys to use whatever helps you build your DApps. Web. Three auth is also really amazing. Like Taurus, aka Web Three Auth, we actually use it inside of the wallet. So when you go and log into our wallet, it actually creates by default, like a three key system. It's a multi SIG account. So you have your login key, which is we actually use Web Three Auth.
00:31:06.172 - 00:31:42.900, Speaker B: It generates an on device session key at random, which is stored and encrypted on your device. And then we also have an extra recovery key that's built in, which you can kick out if you want, but it's an extra kind of and you have to have at least two out of the three keys in order to actually do anything. And that's the default configuration. But you can, again, do more stuff, and you can go get a bit more crazy. We are adding, like, a Web Three kind of login thing. So if you didn't want to use a Google sign in or something, you want to go full, like, Web Three mode. Again, we have something really interesting coming up for that because, again, at a primitive, low level, these are just kind of signers.
00:31:42.900 - 00:32:15.380, Speaker B: It's about the experience to how they get constructed. I don't know how you would use Web Three on top, but Web Three is like I said, Web Three auth is sorry. The taurus is built right into Sequence, so you kind of already benefit from it. That's kind of what they're trying to say, right? It's like this integrated thing that you just get to benefit from all these extra features inside of the product. Yes, you do need to install specific. Well, two things. I mean, you could use the demo DAP I showed.
00:32:15.380 - 00:32:48.396, Speaker B: Yeah, you could definitely check our docs, like I said, keep in mind. So there's a few ways you can use the wallet, right? You can use it on demand without users installing anything. You can also use it with a Chrome extension, and then it's like more MetaMask style. Yeah. And so if you want to link, here's a link to the Sequence Chrome extension. Okay. Yeah, I'm not sure.
00:32:48.396 - 00:33:17.560, Speaker B: I guess I don't understand if I already have Sequence extensions. The Demo DAP shows to connect to Web through all yeah, it's true. Yeah. The Demo DAP will show, like, a little it's just like a Web Three icon, but if you click on it, it will connect to anything that's injected. I have to check with the Web Three modal guys, but it should also show you the Sequence logo at that keys. But that'll get kind of fixed. But it doesn't really matter because just clicking that will pick any kind of native injected provider.
00:33:17.560 - 00:33:45.636, Speaker B: So it's kind of all good there. Thank you, guys. Appreciate it. I know if there's any final questions, but we're happy to answer. All keep the conversation going on Discord and yeah, any help you need. It's pretty easy, and integrating Sequence is easy. And there's a prize pool for it, like the coolest DAP.
00:33:45.636 - 00:34:05.340, Speaker B: So it's like you're already building a DAP that does stuff. At least you get meta transactions that you don't have to worry about. Matic gas token. You can use a bunch of different tokens and lots of stuff. Lots of cool stuff. So, yeah, hope that was helpful. And yeah, enjoy and have a great hackathon and good luck in all your projects.
00:34:06.000 - 00:34:27.780, Speaker A: Awesome. Thank you so much, Peter. That was super interesting just echoing what Peter said. If you have any more questions about Sequence, he can be reached on Discord as well. The rest of the Sequence team, this workshop is recorded and posted on YouTube for you to refer back to at any point. And yeah, thank you so much, Peter, for hosting this workshop for us.
00:34:27.930 - 00:34:29.920, Speaker B: Thanks for hosting the event. Nice meeting, Anna.
