00:00:19.500 - 00:00:34.010, Speaker A: Stand by on live stream. Looks like it's almost ready. We are good.
00:00:35.100 - 00:00:54.910, Speaker B: Okay, cool. Welcome, everybody, hackath hackers, to the Unstoppable Domains workshop. We are very excited to have with us Matthew Gold and Ryan Lee. Actually, I should have double checked that, but correct me on which one you prefer. Which one it is?
00:00:56.800 - 00:00:57.308, Speaker A: Yeah.
00:00:57.394 - 00:01:57.712, Speaker B: These guys are going to be giving a workshop an intro to what Unstoppable Domains is and what you can build on it with and during Hack FS over the next 30 days. So we're really excited to have them with us. As you all know or may not know, the staking deadline for hackafest is tomorrow at midnight, so please make sure to stake before that deadline. And as always, be checking the hackafest schedule channel for any other events. We still have a bunch more events for today, tomorrow, and then we're going to be adding a few more on Friday to get people up to speed on the Filecoin ecosystem. We're planning a specific event for connecting Ethereum to Filecoin specifically, which I'm sure a lot of people will be interested in, given that it was requested in some of the other events. I think that's all the housekeeping we got to get out of the way.
00:01:57.712 - 00:02:26.224, Speaker B: We'll be taking questions in the Zoom chat, so if you get stuck on something or you have a question, just drop it there and then we'll address them at the end of the entire session. And before we jump into this presentation, let's see if we can think of a quick game. This one's maybe not, as we're not going to be picking stuff up off the desk. Andrew, what kind of computer do you have? A Mac or PC?
00:02:26.372 - 00:02:27.256, Speaker A: Mac.
00:02:27.448 - 00:02:41.356, Speaker B: All right, perfect. I just recently switched to PC. Let's see if people can turn on their videos. All right, I'm Team PC. And Andrew is Team Mac. How are we going to measure how.
00:02:41.378 - 00:02:45.008, Speaker A: Do we do this? This for Mac, I was thinking a.
00:02:45.014 - 00:03:03.670, Speaker B: One or a two. Andrew is team one. I'm team two. So throw up a one or a two. Let's see what our hackers have. Andrew, you count all the ones, I'll count all the twos. Oh, Darren the curveball with a three.
00:03:04.040 - 00:03:04.624, Speaker A: Linux.
00:03:04.672 - 00:03:05.380, Speaker B: Mint.
00:03:05.880 - 00:03:06.740, Speaker A: Linux.
00:03:09.240 - 00:03:13.264, Speaker B: All right. I think Windows the max, actually.
00:03:13.402 - 00:03:17.100, Speaker A: Yeah, I think I got eight or nine Macs showing.
00:03:18.240 - 00:03:33.420, Speaker B: All right, Andrew, team Mac wins and then Linux coming in third place. I should have known there was going to be something like that. All right, cool. Matthew, take it away. Share your screen. Tell us about unstoppable domains.
00:03:33.500 - 00:03:45.060, Speaker A: Yeah, perfect. Thanks, everyone. Thanks for putting this together. Excited to do this presentation. So as you said, I'm Matthew from unstoppable. I'm one of the founders there. Let me go ahead and get this presentation rolling.
00:03:45.060 - 00:04:09.656, Speaker A: And go ahead and type this in. And then I've also got Ryan. We're both just waking up. It's early for us. It's PST but typically we sleep in, so if we're a little bit cloudy, that's why I've got giant glass of coffee here, though, so that'll help me get me through. And yeah, quick background on unsuffle domains. So we build blockchain domains and decentralized web tools.
00:04:09.656 - 00:04:45.840, Speaker A: For the presentation today, we're going to give you a little bit about unstoppable blockchain domains as the first step. Then we're going to do a technical overview of blockchain domains. So a lot of you are coming from the decentralized website. You may not know as much about Ethereum, and then some people are coming from the Ethereum side, they may not know so much about the decentralized web. So we're going to try to bridge the gaps there between these two. We think blockchain domains are an excellent thing, an excellent connector between these two worlds. And then at the end we're going to talk about the hackathon for unstoppable prizes, of which we have two categories.
00:04:45.840 - 00:05:26.208, Speaker A: One is for building decentralized websites and then linking them to a blockchain domain, and then the other one is chat, but we'll talk about that a little bit more in detail. And then at the end, Ryan is actually going to present some code that we wrote to do a decentralized chat on a peer to peer file storage network gundb that he's just going to demo. And I think that may help people who are working on the hackathon prizes. Cool. All right, so let's see if this clicks. Great. So who are we? We are a company based out of San Francisco, founded back in 2018.
00:05:26.208 - 00:06:07.970, Speaker A: We actually have taken funding from Draper and Associates. We went through Boost VC. Personally, I've been in crypto since 2013, worked on Bitcoin projects previously and was following very closely with Ethereum when it originally came out in 2016 or early 2016, got engaged and then also have been contributing to the Ethereum community. Along with Zilica. Another blockchain. We launched a stoppable domains as a company back in 2018 and the main purpose is to replace cryptocurrency addresses. That was the first use case with the human readable name, so you can send money to Matthew crypto instead of a hex address.
00:06:07.970 - 00:06:52.080, Speaker A: We also act as a domain for uncensoral website content and one of the emerging use cases we're seeing is these domain names acting as an identifier. So at a high level, it's a user owned Uri and we'll get into that a little bit more and it's very flexible with really no restrictions and it's kind of a pluggable Lego for the D web. We'll dive into that a little bit more. There's a little jargon there. So blockchain domain is very much like DNS. The difference is that the information about the lookups is stored on a contract on a blockchain, so you can just imagine it as a little piece of software code. In this case, it's a standard called an ERC seven and 121.
00:06:52.080 - 00:07:27.320, Speaker A: If you follow along with crypto at all. You may have heard of CryptoKitties. They created this standard. It's just a way to generate unique tokens that have a similar set of characteristics. In this case, these are all domain names and then what these are used to do is resolve crypto addresses, websites and other data. It's actually quite simple on the blockchain. So if you just imagine it when you look on chain and we'll take a look at the contracts in a second, but there's just like a blank slate and then you can say my name crypto and then it's a pointer and it's just a giant table of key value pairs where you can put in anything.
00:07:27.320 - 00:08:20.876, Speaker A: And this is very much like DNS records, where you can have A records, text records, C names. I would say it's most like the text records on DNS because you can put whatever you want up there and then how you want to resolve it is based on the libraries that you use to read that information. Why? So this is a question that we get all the time. Everyone's like oh, DNS is great and for people who maybe just use DNS to browse the websites, it does work great. There are some issues, we think, with the current system it's centralized and custodial. If you have blockchain domains, it's a way to and you point to content on peer to peer storage networks, you now have a platform for hosting uncensoral content. So we're seeing a lot of talk now on social media about people being banned or not being able to say what they want to.
00:08:20.876 - 00:09:22.930, Speaker A: It's actually much worse internationally than it is here in the US. We take a lot of our freedoms here for granted. I'm particularly worried about how our civil liberties are eroding very rapidly. So I'm coming from a very libertarian background on that end and so we're trying to build something that will allow people to say what they want and we'll have some examples of that where we can show at the end. But this is really important for large parts of the world that are actively censoring their consumers. And I would say probably about half the planet right now is suffering from centralized internet in one form or the other even to the extent where we have to monitor what we say because unstoppable domains itself is already being blocked in some of these places where they don't want people to have access to this content, which is kind of crazy because we're so tiny, but it really is that bad. Another interesting thing is distributed infrastructure cost, which is a big part of Filecoin and all these peer to peer storage networks which are coming out.
00:09:22.930 - 00:10:31.776, Speaker A: Something that's not obvious is that you have new possible design patterns because of the self custody nature of a user owned naming system. So the easiest way to say it is right now on DNS, when you register your domain name it's inside of the servers and then GoDaddy is acting as your custodian, but you don't actually have the key in your cell phone and your local wallet. And because it's a custodial solution for naming resolution, it's not really consumer focused. So I would say that blockchain domains are much more consumer focused and that's where we're seeing some of the emerging use cases for decentralized Identifiers jumping right back up what's actually happening. So we've had 200,000 plus of these domain names registered and we've actually had 20,000 plus IPFS websites launched and that's since February on the IPFS website. We also just recently launched decentralized chat. So there's a lot of new functionality coming out that's connecting blockchain domain names to all sorts of decentralized networks.
00:10:31.776 - 00:11:16.548, Speaker A: So you're connecting them to these crypto networks for sending cryptocurrency payments. You're also connecting them up to file storage networks like IPFS to host websites, or you're connecting them to a network that may be suited for chat protocol, like Gundb. How does it work? Users are making a one time purchase of a domain name and then you can configure the domain name, like I stated earlier, using the private key in your wallet. So when you buy the name, it's a blockchain asset that's transferred to you just like a bitcoin or anything else and it's stored here forever. You then can update the configuration on it. We'll talk about how the suites smart contracts work in a second and point it to whatever content you would like. And then you can host the content.
00:11:16.548 - 00:12:09.744, Speaker A: You're actually not hosting it on the domain, but you can host the content on your domain by pointing to the file on IPFS and then users interact with that by using IPFS gateways or browsers. Opera Browser actually recently started supporting the lookup of IPFS files on their Android, which was a big, huge move forward. We're very happy about that. And you can also use like a Chrome extension that could do these lookups for you for hosting. This is what we're starting to see. So just kind of what's happening in the market. People are building static sites, single page applications, and we're starting to see hints of e commerce because this is maybe the easiest place to get started, the places where we're seeing a lot of action in the market and you actually see these guys here at the conference as well is like for simple uploading and CI tooling.
00:12:09.744 - 00:12:37.644, Speaker A: I would point out fleek is one that's helping to make websites happen. Another one is Pinata for pinning content up on IPFS and then, yeah, we're seeing seeding tools emerge. So this is kind of what's happening inside the industry. Okay, so product demo, I guess I should go. That was a lot of talk. I'm going to do the demo of the product and then we're going to do actual look through the smart contracts. Let me go ahead and pull it up.
00:12:37.644 - 00:13:00.112, Speaker A: So this is us on Suppledomains.com straightforward ecommerce site. You can type in some domain. You just search it up, you add it to your cart, you check out just like anywhere else. After you've bought your domain name, you can then go on to manage it. And this is the manage section. And this is kind of reminiscent of DNS.
00:13:00.112 - 00:13:23.384, Speaker A: And then we have different records. There are three major uses right now. One is adding a cryptocurrency address, and this is what people are doing to make it easier to send crypto to each other. The other one is launching a website. So if you go into the website section, let's check this out. We've already made some templates. And so this is one of the things that we're doing in the hackathon.
00:13:23.384 - 00:13:50.676, Speaker A: And like I said, we've had people launch 20,000 plus of these websites just in the last four months. And we actually have quite a bit of consumer demand for more complex templates. So that's one of the hackathon prizes that we're interested in supporting. More of these to be built. We made a simple WYSIWYG editor. So if you want to publish some sort of website up here, you can pick a domain name and then do some basic editing and then deploy. So very basic stuff.
00:13:50.676 - 00:14:37.120, Speaker A: It's like being in the 1990s again with the regular Internet. The cool part though, is that all of this goes up to IPFS and so that if someone wants to then resolve your domain name, they can just type it into their browser. You can see here I have a Chrome extension that allows me to do this resolution and it will bring them to the website. One of the things I'm most excited about is actually blogs. So let me see if we have it here. Yeah, so here's like a blog template, I would say maybe this is one of the first more advanced templates that combines using a blockchain domain name with a backend service like database on a peer to peer network. In this blog, we're actually using Threebox, which is built on top of I think they're using Orbitdb on top of IPFS.
00:14:37.120 - 00:15:10.428, Speaker A: I'd have to check. And once you create this blog, I'm not going to go through this process right now, but it's signing a transaction to the blockchain which updates the records that you can actually see on the domain name when you do the lookup on the ethereum chain itself. And then you'll end up having so here's a blog site. I think this is Brad crypto. I can bring this up. Brad's one of the other founders of the he's got so he's got his blog here. It's very simple.
00:15:10.428 - 00:15:40.520, Speaker A: I think we have like Tim Draper blog, crypto. Maybe he has one a little bit more. These are just some of the websites that people have made. And this is really cool. So this blog post here is the type of content that may or may not get banned on social media channels. And so if you want to say something, it's nice to be able to say that out loud in a place that can't be taken down. There's also applications on here that have started building.
00:15:40.520 - 00:15:58.892, Speaker A: This is Audius. They're another app. And so they're like a music sharing application. And this is 100% on IPFS. You can see this is being accessed through a gateway. I also have a browser locally that will redirectly, but for the purpose of demonstration, I'm in Chrome. So that's basically how it works.
00:15:58.892 - 00:16:31.160, Speaker A: We're a registry. You buy domain names and then we make it really easy for users to interact with the blockchain. This is all hidden behind here. And then you can easily deploy a website and get something up so people can work with it. Let me think if there's anything else there. Yeah, that's the basic product overview for blockchain domains. And I guess another thing to show here is payments, which we didn't really go into, but you can also do a lookup inside of a crypto wallet, and that way you can send crypto more easily.
00:16:31.160 - 00:17:11.684, Speaker A: All right, so this is what we're here for, is the technical interview of the smart contracts. So I would point everyone to our docs, and that's probably the best place to get started. We actually also have a library for doing resolution, which makes it easier to do these reads off the blockchain. Okay, so how does the registry work on chain? So how does the blockchain domain registry works? It's a suite of smart contracts. They interact with each other in order to provide a DNS like system. So the core contract is the registry contract. And this is actually just keeping track of which cryptocurrency address, which crypto key owns each domain name.
00:17:11.684 - 00:17:53.392, Speaker A: And every single one of those domain names is a separate NFT token on Ethereum. And then we have a couple of helper contracts, like the signature controller, the minting controller, the whitelisted minter, a prefix controller, and then also the resolver. And the resolver contract is what the user sees when they interact with the domain name because that's where they're actually setting the DNS like information. So this is a huge, umi, diagram. I'm assuming we're going to post these slides somewhere. I would go pick this off our medium and download this so you can look through. But just know that there is a place for you where you can actually see all the connections between these functions and brief overview for the registry contract.
00:17:53.392 - 00:18:37.040, Speaker A: So what we try to ensure is that every domain has an owner, so every issued domain, and that every domain has control over its namespace, and that includes the subspaces. And then every domain stores its information on a separate contract called resolver. And this just keeps the registry contract really tight and small on the code. So when you're looking at the blockchain to find out who owns what domain, you can find that on the registry contract. But when you actually want to look up the information for resolution on the domain name, you're going to need to go look at a separate contract that the user can control and update. All right. Another contract we have is the Minting controller.
00:18:37.040 - 00:19:16.830, Speaker A: And one funny thing about blockchain domain names that we made the decision on is this is really one way. So if you make a mistake like you send your domain name to the wrong place, then there's absolutely no way for us to get it back because that's written into the smart contract. This is a security guarantee. So this is maybe a weird thing about blockchain domain names that is not seen in traditional DNS domain names. So we have to be very careful when assigning out domain names in the first place to make sure that they go to the right person. This is the same issue that everyone has with cryptocurrency where if you lose your key, you've lost your crypto. So that carries over here there's no way to get around it.
00:19:16.830 - 00:20:18.690, Speaker A: Another thing that we did which was an improvement of some other systems that we had seen, is that we have this signature controller, which is actually a way to pay for gas fees for users on the Ethereum network. So you'll actually see this abstraction across a lot of different crypto networks. You're seeing this already on filecoin start to emerge even though it's not launched yet, but people are preparing to have it so that you can pay on behalf of someone else in order to keep their data stored. That way you can take payment and credit card and then, you know, you'll handle all the back end stuff for making sure that it gets done with cryptocurrency. So we did the same thing here for blockchain domains and this allows us to just pay the gas costs for users. And the way that we cryptographically guarantee that we're not cheating the user out of anything is the smart contract actually forces the user to send a signature so they don't have to have any cryptocurrency to make an update, but they do have to sign it. And of course, you can also pay your own gas if you would like.
00:20:18.690 - 00:21:08.124, Speaker A: Then we have the whitelisted mentor and this is used only for initial registration. Again, this was a design choice to make it easier to control and distribute the initial names. Like I just said earlier, once you issue a domain name, you can't get it back ever. Instead of just having a completely free for all system on initial registrations with an auction process or something, we instead to have control Drip here that allows people to register through US post registration. The domain name is 100% controlled by them. All right. And then the last one is kind of like a feature of the ERC 721s, which is the Uri prefix controller.
00:21:08.124 - 00:21:53.420, Speaker A: This allows you to attach an image to your name. So the famous CryptoKitties or Gods Unchained or any of these other Ethereum gaming apps have a picture associated with a particular asset. This is what allows you to make that association. Also interesting note, people are starting to store these on IPFS, like the actual image itself, instead of storing it at a URL endpoint or like an API endpoint for images. Okay, so that was the suite of smart contracts for the registry itself. And then this last contract we just discussed and it's actually not that much code. So from a code size standard, it's thousands of lines, it's not tens of thousands.
00:21:53.420 - 00:22:22.120, Speaker A: And that's because it has to all fit on chain. So those smart contracts are what assign the domain name and have owners for end users. And then now we're talking about the resolver contract and this is where the user is just inputting information. So this is really just a super simple key value store. We have some optimizations for lookup. Again, if you use our library for doing the lookups, it'll make it much easier for you. And these are the equivalents for the CNAME or text records that you have on DNS.
00:22:22.120 - 00:23:22.012, Speaker A: And what you're allowed to do is set these records and record values and we're starting to see this be extended out. An interesting thing that's happening here on these resolver contracts, which I think is pretty neat, is they're actually permissioning other people to write data back to the contract. So this is like a new feature of blockchain domains. That's not really a thing that you have on regular DNS, which is that you can permission out someone else to verify a piece of external data back to you. So there's not great examples of this right now, but one that I like to point out is like you could permission a third party to make a guarantee that your Twitter account is actually yours and associated with your blockchain domain name. And then the trust model there for the person looking up your domain name is they can see if they trust that third party to tell the truth. Another one is if you wanted to log into an application, you could allow that application to store data with a pointer back to your name.
00:23:22.012 - 00:23:57.000, Speaker A: This is a way for users to carry their data around between different apps. Okay, cool, so almost there, almost through the technical review and then we'll talk about some of the more fun stuff. So this is resolving content using our standard OS library. There's just some simple lookup calls. You can see that if you want to resolve a domain, you really just look up the name of the domain name. If you want to pull an IPFS value or a crypto address value, you just put in that key pair and it will shoot it back to you. Okay, cool.
00:23:57.000 - 00:24:42.996, Speaker A: So what's so special about blockchain domains is that they're user owned and controlled 100% in their wallet. They're built for end users and there's a lot more use cases for blockchain domain names because they're self custody asset. They're very secure because they inherit the security of the Ethereum network. This in our view, is an improvement over traditional DNS and they allow you to point to content on PDP networks like Filecoin IPFS, which is kind of one of the building blocks of the decentralized web before. One of the first things you do when you want to put content out on the regular web is you buy a domain name. And I think that it's pretty much the same way for users. So when we say that we're trying to onboard the planet to the decentralized web, we really think that we're the user entry point.
00:24:42.996 - 00:25:24.150, Speaker A: People are going to get grabbed their domain name and then they're immediately going to want to deploy a website or anything else that you would typically do with a domain. I referenced this earlier, we have an extension, we also have a browser, opera browser for Android also allows you to access this we're working on with a couple of other extensions as well to broaden access to this. So it's easy to look up. You can also find all of these files through a gateway like cloudflare. Okay, cool. Actually, if it's okay, I'll take a brief break here and then see if we had questions on that before we do the hackathon interview. Is it easy for me to actually just look in the chats? Is that the right place to look?
00:25:25.960 - 00:25:27.540, Speaker B: Yeah, for questions?
00:25:27.690 - 00:25:52.424, Speaker A: Perfect. Yeah, just give me 1 second, see if I can find anything here and I'll come back. Great. Okay, cool. So first question and I'll just take them in order. How is this different from ENS? So, quick story about unstoppable domains. We actually originally worked with an application on top of ENS.
00:25:52.424 - 00:26:26.676, Speaker A: So we were originally byethdomains.com back in the day. So we have a very similar DNA to ENS. We split off and did our own registry originally because we built one for the Zilica blockchain and then we also ended up building one for Ethereum called Crypto. So it's the same general concept of you have a smart contract platform that has different ways of resolving domain names. I would say we have very similar DNA in that respect. The differences are mainly about organizational.
00:26:26.676 - 00:26:47.372, Speaker A: So ENS is nonprofit and they're very strongly Ethereum focused actually. They're a great team. I have a call with Brantley from ENS later today. So I like those guys. I think they do great technology work. We're just another version of a smart contract DNS. Just to give some comparisons, in the traditional.com
00:26:47.372 - 00:27:24.296, Speaker A: world there are 1500 top level domains. I think that blockchain domain world we're going to have just as many, if not more of these extensions. And it's really just a difference between the things that you tend to emphasize. We are much more focused on the decentralized web at this point in time, and we've actually deployed a lot more websites, but other than that, I would say it's like the same flavor or maybe like a different flavor of a very similar koolaid. All right, cool. All right. So another one is it looks like it's bundled with a domain through IPFS as well.
00:27:24.296 - 00:28:05.860, Speaker A: So it's not really bundled. It's more like the domain name is a blockchain based asset, and then you can point it to any peer to peer file storage systems that you want. When we built our application, we actually built it to make it super easy to deploy IPFS websites for end users, so you could click buttons. So they're very tightly coupled just because we think IPFS is a great way to store peer to peer content. I'm personally very excited about having incentivized peer to peer storage networks, and there's lots of them launching this year because I think that's like a missing piece in making the DWeb happen. Next question is, what if you have a main ETH address? And this is from Nestor. So thank you for the question.
00:28:05.860 - 00:28:58.440, Speaker A: And want to have multiple websites using multiple crypto domains? Can I have multiple domains point to the same ETH address, or do I need to have a different ETH address for each domain? So you can have multiple domains point to the same ETH address? That is fine. And you can also have one ETH address that owns like 50 domains. A domain can only be owned by one ethereum address. Now, there's a star there because you could also make a domain owned by a smart contract, in which case it could be owned by five of five or five of seven or three of whatever keys. But yeah, you can have multiple websites with pointing to the same ethereum address. Can you have multiple domains linked? Not exactly sure what you mean there, but I think yes. Okay, cool.
00:28:58.440 - 00:29:29.280, Speaker A: All right, I'm going to see if I can find some next ones here. Cool. Yes, it does need to be accessed through an IPFS enabled browser. So this was from Joseph. He's like, the question, I guess, is, does it need to be accessed through an IPFS enabled browser? It does. Or that browser can use a Chrome extension like you see here. I have the unsolvable Chrome extension, and then I'm just loading it off of cloudflare's gateway to IPFS, and we're starting to see more browser support.
00:29:29.280 - 00:30:10.030, Speaker A: So I'm hopeful that eventually you'll be able to do this just direct in Chrome or maybe by designating, a DNS provider that then supports these domain names. Okay. And then Nestor was asking about keeping the crypto domain in the URL. That's actually a security issue right now for browsers because they want to show the full URL of where you're actually visiting, and they don't want to hide where you're going. So for now, it will show the. Full IPFS file hash instead of just Matthew crypto. All right, that was great.
00:30:10.030 - 00:30:58.516, Speaker A: All right, cool. A few more here and then we'll get back to the presentation. I think this is good to take a break. So this is from Michael DeLuca and he asks, could unstoppable domains gobble up domains ahead of their users front run for free? Or is there an ETH cost that is locked up in the contract? Is there some level of trust here? So, yes, on Minting there is a level of trust for us and we chose to go that way. That is the design difference between us and ETH, which is the ENS version of these blockchain. Smart contracts and question. From Trent do all web pages live on chain? Actually, the web pages are stored on IPFS, so they're not on the Ethereum blockchain, just the lookup.
00:30:58.516 - 00:31:27.728, Speaker A: Information is stored on the Ethereum blockchain. From Chad. He asked, what about Handshake? I actually don't know. I think that better to ask them about their technology than myself. Great. And then from Trent is each NFT a new contract or are the NFTs Token IDs on one contract? So the NFTs are token IDs on a single contract. Now each resolver contract.
00:31:27.728 - 00:32:12.324, Speaker A: Actually, I think we use an aggregated resolver contract as well. And then any good crypto sites you'd recommend? I can actually give you something better than that. You can go to Blockscan.com, and this is built by Etherscan and you can actually search for decentralized, you know, here's Betshop crypto, for instance, or cryptonade or cryptomove. So Blockscan is built by Etherscan is actually another one and they're not released yet, but I'm going to go ahead and let you guys know about them. This is Bitsearch and they're also doing indexing of the decentralized web. And they even have an image search, which I thought was pretty cool, just the fact that it's already here.
00:32:12.324 - 00:32:32.152, Speaker A: So the decentralized web is happening in the background. There's already two search engines, which I think is pretty neat. So if you're looking for domain names, I'll actually drop these in the chat so you guys will have them. So Bitsearch is one. Let me drop this in here. And then the other one is Block scan by Ether scan. And these are two good places to go look.
00:32:32.152 - 00:32:55.376, Speaker A: So if you're looking to build a website, you can get some ideas of what people have been able to do there. As I was saying earlier, most of the websites right now are like static web pages or single page applications. They're getting more complex though, as people build more complex tools. And there are companies out there, like Fleek, for instance, who's making it easier to make that happen. Great. Okay. Awesome.
00:32:55.376 - 00:33:09.812, Speaker A: Joseph. No problem. We will keep the luxury of free speech alive as long as we can, so we'll see how long we can carry the Torch. It is getting scary out there. Okay, so let's get back to the hackathon overview. Let me see what we got here. And I'm about to turn it over to Ryan.
00:33:09.812 - 00:33:44.480, Speaker A: So Ryan, if you hadn't had your second coffee, now's the time. Let's talk about this. So we have two tracks that we're doing for prizes for unstoppable. So one is to build an interesting, decentralized website. I think one of the best ways we can get more people to actually care about the decentralized web is to put cool stuff on it and so it's wide open. So build a website, deploy it on IPFS, get a blockchain domain name, and then copy and paste the IPFS hash and link it to your blockchain domain name. So to show you how easy that is, I think that's probably worth doing.
00:33:44.480 - 00:34:12.652, Speaker A: So let's say you deployed something up on IPFS. Get a domain name from us for free, just email one of the guys on our team and we'll get you a free domain. And then you'll be able to come in here and manage your domain name. You can click on it. And then when you want to set up your website, you can just copy and paste the IPFS hash right here. And when you paste in the IPFS hash, you can click Save. You'll be able to save your changes and then that's it.
00:34:12.652 - 00:34:55.608, Speaker A: So literally all you're doing is picking a website that you think will work well given the limitations of websites put up on IPFS and then deploy it and then link it to a domain name and linking it to the domain is super easy. So that's a very straightforward hackathon prize. And then the second track is actually building Chat using blockchain domain and IPFS. And we have a link to the full description here and chat is significantly more complicated. So we're going to spend a little bit of time talking about that. Here's some ideas about websites real quick. So just if you want to make something interesting, anything with a dow would be pretty interesting.
00:34:55.608 - 00:35:32.724, Speaker A: That's like a way for people to vote. Maybe you could put a domain name inside of a smart contract and then people could vote on the content of that smart contract. That might be interesting and fun to do content with the paywall. Like you can have an IPFS website and if someone wants to be able to see the content, they would maybe need to authenticate with web3 with their Ethereum key, and then of course, a forum. Everyone loves reddit, right? So we have three prizes for this and you'll get a free crypto crypto domain. We'll probably also give you some store credit to get some more. And as I stated, if you want a domain name to test or play around with, we'll give you one and we'll probably give you your name if it's available.
00:35:32.724 - 00:35:59.420, Speaker A: Excellent. All right, cool. So then the next one is building chat. And this one, we actually have a $4,000 1st prize for a chat. And there's actually a couple of different database systems to build chat on IPFS. So there's Orbit DB, which has been around for a little while, then there's threadsdb. So Orbitdb team is also around and they're willing to help with this.
00:35:59.420 - 00:36:33.316, Speaker A: Threadsdb team. I've also talked with them. They're trying to publish some more information about how you would build chat using threadsdb. Both of those are on top of IPFS. So if we end up having more than one interesting chat application, like if someone builds one on Orbit and someone builds one on threads, and then someone builds one with their own storage, own database, they roll themselves on IPFS. We're willing to award multiple first place prizes here if that happens. And then we actually built our own chat prior to this, and it is not on IPFS.
00:36:33.316 - 00:37:02.944, Speaker A: And that's actually good because we wanted people to actually have to do the work here to build the IPFS chat bot. And we're going to show you the code. Ryan's going to do an overview of that architecture to give you an idea of how that can work, and we're going to take it from there. I have a couple of resources here at the end. So there's Orbit Core for Orbitdb, which is a database on IPFS that allow you to do chat. And then we have threadsdb from Textile, and again, both of these guys are in hackfs. Cool.
00:37:02.944 - 00:37:05.990, Speaker A: All right, Ryan, I think it's all you. I'm going to stop sharing my screen.
00:37:06.840 - 00:37:20.250, Speaker C: Cool. Hi, guys. My name is Ryan. I'm one of the engineers at Unstoppable Domains and the team lead for the decentralized chat that we rolled out at Unstoppable Domains share my screen.
00:37:23.420 - 00:37:24.170, Speaker A: Cool.
00:37:27.280 - 00:38:21.870, Speaker C: So I'm going to cover the things that we did to implement chat over at Unstoppable Domains and some of the things that you guys could do for rolling out your own chat protocol on these other networks. Matt mentioned orbitdb threadsdb. Orbitdb is great. It's built on top of IPFS, and they have an incentive structure built with filecoin for people to host content on their system and store it forever. So we built our chat system on a different protocol that doesn't have this incentive structure. So we were just doing like first concept. It had a login system built into that.
00:38:21.870 - 00:39:04.730, Speaker C: So one of the things that's required for building out a chat protocol is connecting out these domains to chat IDs on a peer to peer storage network. Gundb was our protocol that we used, and they have a login system that allows you to get a chat ID. It's a very long string. It's over like 64 characters. So Blockchain Domains were a perfect solution to this. You connect your chat ID to your blockchain domain, and if you want to chat with a peer, you just say, hey, contact me at Ryan crypto and chat for me from there. And they'll look up your domain and they'll resolve it just like how they resolve cryptocurrency addresses they'll see, okay, this is your chat ID.
00:39:04.730 - 00:40:03.020, Speaker C: This is how I resolve it. These chat protocols should also implement encrypted direct messages. Using this Identifier, you can message other users. And the great thing about these blockchain domains is it allows a layer of security, so it ensures that you are chatting with the right person. When we first went about implementing this chat protocol, I was able to spoof as another person, right? So our other engineer, James, was on an account, and I was able to spoof as them because we didn't have this layer of security. We implemented this form of signatures where I had assigned a message to create the username and the password. And this allows James or whoever I'm talking with to ensure that I'm actually the person I say I am because they are able to verify my signature that I signed with my private key.
00:40:03.020 - 00:40:44.970, Speaker C: So they'd be like, okay, if it doesn't match this domain's owner, then I'm not chatting with the right person. So it allows for this layer of like, okay, trust of like, because your signature matches who you say you are and the domain's owner, I'm sure I'm chatting with the right person. There's also announcement channels. So if you guys head over to unstoppable domain chat, you log in, you can add contacts, chat with other people. But we also have these channels which allow you to broadcast so many people listed users. Like, for example, in Telegram, you have like 10,000 users. You want to have your own channel talk with many users that are connected there.
00:40:44.970 - 00:41:17.044, Speaker C: The same goes for multiple people on one channel. So this is harder to scale because so many people are talking in the same channel. You have to incorporate all these messages of all these users in that channel. So we haven't limited test of this quite yet. We will see. We launched chat earlier this week, so we're going to see how many users it takes. We expect it to break at 1000 or 10,000 with our current protocol, but we'll just have to see.
00:41:17.044 - 00:41:38.190, Speaker C: And of course, you can send crypto to the people that you're messaging. So because their chat IDs are tied to their blockchain domain, you get other information like IPFS websites, cryptocurrency addresses that they've linked to their domain name. So this is a very easy solution to do. It's the same as resolving a chat ID.
00:41:39.200 - 00:41:39.612, Speaker B: Cool.
00:41:39.666 - 00:42:23.320, Speaker C: So these are the core features of this chat protocol. If you guys were to implement this on other networks such as Orbitdb I'm sorry, and threadsdb. So connecting to a blockchain domain, to a peer to peer storage, this is required with accounts. So when you're creating credentials, you send them to the peer to peer network, and then you'll get back a chat ID or Identifier that you will tie and link to your blockchain domain. How we did this with Gundb is that we required the signature of the domain. And then for the password you could really use anything. We use the signature of the username just so that our users don't have to remember a password and write it down.
00:42:23.320 - 00:43:01.072, Speaker C: All they have to do is sign their domain again, I'm sorry, their username and that becomes their password. So they just do two signatures and they're logged in. I'm actually going to show you guys real quick some part of the code that we use to create these accounts. So here we just load up the Gundb library. We connect to a super peer and we request signatures for their domain from their wallet. Of course, the signature has to come from the domain's owner. We do check this as well as the password.
00:43:01.072 - 00:43:58.436, Speaker C: So when you're chatting with the user, you are verifying their signature, right? Because thanks to the great signature scheme is when you sign something, you can ensure that this address sign this message. Right? So the Gun username is the message and for the password we have them sign again. And so for this is creating the account. The same goes for if you are to create contacts, you're just looking up so you want to add Ryan crypto. You're looking up their Gundb username from that because this is stored in a record and their record is here's, the fetch request right here. So using the unstoppable domains API, we're able to find their Gun username and their public key. Gundb has two Identifiers.
00:43:58.436 - 00:44:33.960, Speaker C: It may be different for other networks. That's a bit about that. Continuing on. So how do direct messages work? Again, we use the chat ID that we've resolved from the blockchain domain and we send a contact request to the peer. So just based on how Guntb works is that you can't write to another person's storage. You kind of have to write it onto your own storage because you don't have permissions to write to someone else's storage. So you're just saving out on your own.
00:44:33.960 - 00:45:27.338, Speaker C: And then you're writing a contact request in a public storage area which the contact you're messaging is going to be listening in from. So they can get contact invites from this public storage area and they know, okay, I should check this other person's storage to see if I have messages from them and the person that's sending it encrypts this message on their own storage so that person can only read it. I can see that you've written a bunch of messages on your storage, but I can't read it unless I'm the peer that you're writing to. And I can show this over in our little library that we wrote for Gundb. I hope I'm sharing the same screen. Yeah, it should be the same screen. So, for example, sending messages to contact.
00:45:27.338 - 00:46:09.510, Speaker C: This is our own unstoppable chat library that we wrote for Gundb. We are creating, logging into the account, getting the secrets. This, of course, will be different for other protocols. We encrypt this message with the secret Cree Gundb Has account system. So they generate public and private keys for you and you encrypt it, you write it into your own storage and then you write it into public storage and this is how messages are sent. So the protocols will, of course be different. Orbitdb is built on IPFS and they have their own login system.
00:46:09.510 - 00:46:17.130, Speaker C: So that's great. Makes it very easy to implement chat by having a longed system like that.
00:46:17.280 - 00:47:18.186, Speaker A: Yeah. Brian, just a brief comment here so that everyone can kind of tune in and I guess what you can take from the chat is we found and he's going to discuss some more things here, but there's a few things that are going to be replicable and if you know it's the signature schema. So the idea of taking the person has a private key for the blockchain domain name and then using that to confirm their chat ID and then associating that back to the blockchain domain name. And that way, you know when you're chatting with the person, ryan crypto, that you can confirm that it's actually the person who owns Ryan crypto. So that signature schema on any kind of decentralized chat network, that's going to be critical, that uses a blockchain domain, you're going to want to guarantee that the person you're talking to is that person. So that signature schema like just that signing, which is really simple, but you want to make sure you get that right. The other one is the contact request schema, which Ryan kind of elucidated there.
00:47:18.186 - 00:47:47.766, Speaker A: And we actually had to think about that quite a bit. You're obviously going to have a problem with people spamming you with contact requests. There's multiple ways of making a much more complex contact request system. In our instance, I believe it's wide open. Ryan, you can correct me if I'm wrong, but we left it wide open because it was significantly easier to get the first build out that way. But there's a lot of innovation that could be done with contact requesting. It's even more difficult for channels, and I think Ryan will talk about that a little bit more.
00:47:47.766 - 00:48:24.994, Speaker A: But if you want to have a contact request with another user, you have to figure out how you're going to find each other and set up a system for doing that. And then you may also want to think about how you can prevent spam in that system. So signature schema, that's pretty straightforward, but you just want to make sure you get that right. Contact request schema. There's actually a lot of room for creativity around how that works. And then there's threading the chats. So as Ryan was describing, you only have permission to write to your piece, right? And then you have to have some sort of shared inbox when you open up a communication channel with another person.
00:48:24.994 - 00:48:45.782, Speaker A: And then the way that we did it with the threading is we just look at the timestamps when was the thing written. So when you open up a chat, you see my message and Ryan's message and my message. It's not like they're in order. It's just that we can look at the data and see this timestamp. And so the UI is actually putting that together. So signature. Schema is going to carry over contact.
00:48:45.782 - 00:49:26.040, Speaker A: Request. Schema? There's some interesting things you can explore there. And then threading the chat is mostly just an engineering channel to make sure you get that right. I'll make another comment on Signature I mean, sorry, on Request Schema, because Ryan's about to discuss channels, which I think is interesting. Let's say you want to create a broadcast channel, or you want to have a channel where there's a bunch of people in it, or maybe you want to auto opt in people, right? I believe we have a bot, actually. Let's say you wanted to sign into an application that has Web Three. Using Web Three sign in, which is becoming more common across Ethereum, you get to have a bot automatically send that person a message.
00:49:26.040 - 00:49:47.546, Speaker A: So that's part of the contact request. Schema. You may also want to decide that that type of thing is spam. There's a lot of art there on design, which I think is going to be pretty cool to see how people solve that on peer to peer networks, because right now it's kind of a thing across every network. Everyone gets spammed. All right, Ryan, sorry about that. You can go ahead and get back to it.
00:49:47.568 - 00:50:23.850, Speaker C: My thanks. Yeah. So Contact Request was a big thing we auto accept just by our design choice. We could also disable auto accepting contact requests, but we have it enabled just so that it makes it easier for you to see other people's messages and see who's chatting, because we want people sort of chatting right away. So, moving over to channels, we have three different types of channels. One is announcements, where a list of admins can send messages to a group of people. You guys know about these types of channels.
00:50:23.850 - 00:51:19.130, Speaker C: And what it is, is one admin controls and holds the announcement channels and then is able to approve other users to send messages to this channel. And then there's public channels. Anyone can join these channels as well as private. So the private ones work similarly to announcements where people invited or admins, and only these admins can also read these messages. The design on how you guys go about building out these channels is of course, different to each protocol and ensuring that these rules apply, right? Only these people can send messages. Only these people can read these messages. So, yeah, I'll actually show you guys real quick on how we went about doing these channels.
00:51:19.130 - 00:51:54.134, Speaker C: Here is our library. This is load channels. So we connect to this. We store these channels in this public area and the person that created it is automatically an admin and then they approve other admins to these channels. So this library is pretty dense. There is a link to it that you guys can see. Let me go ahead and drop it into the chat if it's not ready.
00:51:54.172 - 00:51:54.760, Speaker B: There.
00:51:58.650 - 00:52:13.420, Speaker C: There'S notifications as well that we put into these channels. So when you receive a message it's also writing to the database saying okay, I've read this, don't notify me that this is already a message.
00:52:16.830 - 00:52:19.786, Speaker A: Cool ryan, thank you.
00:52:19.808 - 00:52:25.680, Speaker C: James yeah, let me show you the last slide here with the team.
00:52:27.810 - 00:52:51.686, Speaker A: Oh, you got us well and I'll answer some of these questions. So we have a couple more in here. First one is from Barat he says is the entire unsolvable domains project completely open source. So everything that's on chain is open and readable. The library that we build here for chat is open source. We have actually several open source libraries for reading from the blockchain as well. Our web app like out on the softmaildomains.com
00:52:51.686 - 00:53:12.894, Speaker A: where we take stripe payments and stuff, that's not open source because that's our web store but where we can basically everywhere you would have a security concern. The code is open source or on chain so you can go and read it yourself. Next question, is there a possibility of building chat over react native? So I actually don't know what that is.
00:53:13.092 - 00:53:41.842, Speaker C: React native so our website is built with react so a lot of our front end code is transferable onto mobile. Our chat works on mobile as well. Gundb uses WebSockets and this is something you could use on mobile as well. So yeah, you could actually use our unsolvable chat library on react native JavaScript and this is an NPM package.
00:53:41.986 - 00:54:20.930, Speaker A: Cool. Sorry I just didn't understand the question. And then next question is about squatting on domain names. So squatting is an unsolved problem, anyone who says they've solved it have not and there's all sorts of research around this. The way that we have gone about trying to mitigate squatting is we have a lot of domains that we are trying to prevent people from registering and I actually just got a message in this chat someone had his domain, someone picked up his domain for his company before he got a chance to get it. So we'll contact that person and see if we can get that back to him. There's not a perfect answer to squatting.
00:54:20.930 - 00:55:03.838, Speaker A: I think we have over a million domains that we have set aside as protected for trademark holders and we're also working with large list providers and also traditional trademark organizations to get those domain names to the right person. So we've had for instance Walmart, Nike and a few other corporations go ahead and claim their crypto names and that's through our reach out to the business to try to make that helpful. Cool. Michael made a suggestion is to require a Grinded contact request. I think that's pretty interesting. So I just wanted to call that out. Leon asked, Where is the chat stored? And it's actually stored on the peer to peer network, in this case, Gundb.
00:55:03.838 - 00:55:41.786, Speaker A: And for the hackathon, we'd want it stored on IPFS with either Orbit DB or Threads DB. And yeah, and then the next one is, does Unstoppable support subdomains? The answer is yes. We're rolling that feature out slowly, though, because of Phishing concerns. As you can imagine, people are quite tricky. So they went ahead and made domain names, and then they would give themselves the subdomain of admin. So, like, Admin, any name, whatever. And so we want to make sure we're working with other people in the ecosystem.
00:55:41.786 - 00:56:19.626, Speaker A: So when you're doing your lookups, you can tell if someone may be trying to fish you based off of a subdomain. But, yeah, subdomains do work and you are able to build them. Someone's asked, can you attack the resolver by signing a bunch of transactions and burning gas and not really sure how someone could yeah, I'm not really sure about how someone could attack the resolver. So if they don't have permission to sign, then they would just be burning their own money to do it. And then within our application, we're obviously monitoring transactions that we pay for. Cool. All right, guys, that was great.
00:56:19.626 - 00:57:01.490, Speaker A: We're at our hour here. I did not think we would go this long. I appreciate the questions. So I guess Andrew and Trent are much wiser than we are because they're, like, you guys, are for sure going to use your hour. So I appreciate them telling us that and getting us prepped for it and excited to have you guys take a look at all the things that we're building, and I'm really looking forward to seeing what you guys build on chat. As I said, there's several different pieces of technology you can tie together to work on some of these projects. The websites one is quite straightforward, but the chat one, for instance, I know that the textile team is here, and then I'm assuming Orbit is probably floating around, but you may be able to chain some prizes together, right, if you do chat.
00:57:01.490 - 00:57:22.720, Speaker A: So I highly suggest that as someone who's participated at multiple hackathons and Ryan, as someone who has won more hackathons than anyone else on our team can tell you, if you can get your entry in three or four places at once, that's much better than just one. So, looking forward to the entries, and if you guys have questions, follow up with us. We'll be at our office hours. And thanks again, Hack FS, for having us.
00:57:23.890 - 00:57:38.990, Speaker B: Thank you. Yeah, you wrapped it up better than I could. If anybody has questions, jump in the slack in the dedicated Unstoppable Domains channels, and I'm sure they'll be ready to answer your questions. I think we can wrap there cool. Thank you again, both of you.
00:57:39.060 - 00:57:39.558, Speaker A: Everyone.
00:57:39.684 - 00:57:40.182, Speaker B: All right.
00:57:40.236 - 00:57:41.810, Speaker A: Bye, guys. Bye.
