00:00:02.490 - 00:00:09.280, Speaker A: Cool. Yeah. Move this out of the way.
00:00:10.290 - 00:00:30.200, Speaker B: Hey. Hi, everybody. Welcome to the building. Apps on Optimism workshop. We have Kelvin here from our sponsor Optimism, who's going to be leading it. And if you have any questions during the duration of the workshop, feel free to just pop them into the chat. All right, Kelvin, get started.
00:00:30.810 - 00:01:03.120, Speaker A: All right, cool. So, hello. Hello. I'm Kelvin from the optimism team. And we are very hyped because we are moving to the new Ovmv Two system. And the Ovmv Two system is about a million times easier to use than the Ovmv One system. So, yeah, we're just really excited to show you exactly how easy it is because it is super easy and you basically have to do nothing.
00:01:03.120 - 00:02:00.882, Speaker A: And we want you to try it as part of Unicode so that you can get used to deploying stuff to layer two, because it's as easy as deploying stuff to anything else. Here I've basically just used I've set up Scaffold ETH, and all I'm going to do is deploy Scaffold ETH really quickly because I kind of assume this might be something that you're familiar with already. So all I've done here, I had to make a small change to the hard hat config to get rid of something specifically, see if I can undo it. Let's see if my diff will show it. Yeah, look at this. I had to get rid of this and this because we don't need it anymore because this was a holdover from Ovmb One, and I actually just made a pull request to Scaffold ETH, which just got merged. So you don't need to do this.
00:02:00.882 - 00:02:36.400, Speaker A: I just had to do this. So you can totally ignore this file. The only thing that you would need to do if you wanted to deploy your project and use Scaffold ETH is first of all, of course, you got to install your dependencies. All I did here is just download scaffold ETH. I already installed the dependencies, so I'm kind of cheating here. And then, yeah, all you need to really do is deploy network covan optimism. That's it.
00:02:36.400 - 00:03:15.686, Speaker A: It'll compile. One of the biggest things you'll notice, of course, the differences between well, let me delete this because I already did this once. Let's delete the artifact and the deployment. Just do it from scratch. One of the biggest differences you will notice as part of Ovmv Two is that there's no more custom compiler, there's no more custom solidity compiler. So we're just using the standard no more of this ETH optimism hardhat plugin. It's just straight up solidity.
00:03:15.686 - 00:04:02.982, Speaker A: You could use Viper, you could use any program, any EVM programming language that you want. And then yeah, so you just deploy your contract like you do, I guess. Normally you might do this deploy, but specifically we'll want to deploy to the Covan Optimism network. And then the only other change that we have to make is making sure that we are actually deploying to the covan optimism or that we're going to use the covan optimism target network. So if you open up Scaffold ETH react app JSX and you just change this to networks.com optimism, this is the only thing you have to do in the Scaffold ETH. And now you're deploying stuff to optimism.
00:04:02.982 - 00:04:27.090, Speaker A: So if I start this, it's going to tell me I have to run it on a different port, blah, blah, blah. So here we go. Hopefully people can see my little come on. All right, this takes a second to start it. There we go. Come on. And there we are.
00:04:27.090 - 00:05:00.682, Speaker A: Okay, so we have this application. I didn't have to do anything at all. It just works. It just works like you would expect scaffoldies to work. And as you can see, I connected to the optimism covan network. There are instructions in multiple places on how to connect to this network, but I will leave those instructions, I guess, in Discord. Or you can go to Community Optimism IO and get those instructions.
00:05:00.682 - 00:05:31.750, Speaker A: But basically, I have just connected to a custom network in MetaMask. Let's see if I can show you the exact network details here. Right, so this is my network name, my RPC URL, chain ID and currency. That's it. I have some covan ETH, some Optimism covan ETH. And there we go. And so then, just like I would in any other scaffold, well, I guess I don't even need the string.
00:05:31.750 - 00:05:48.230, Speaker A: So I can execute a transaction just like I do on Ethereum, right? Completely different. And it's much well, look at that. That's fast. That's speedy. That is speedy. And I can do this over again. This is wild.
00:05:48.230 - 00:06:10.386, Speaker A: Exclamation point, exclamation point, exclamation point. Send that same thing. There you go. This is wild, right? So it's just like using Ethereum. Just like using ethereum. And this is really the magic of the OBMV Two, is that we have completely redesigned our system from the ground up. And it really is just running.
00:06:10.386 - 00:06:30.762, Speaker A: Geth under the hood. That's basically it. It's just geth so it works just like Ethereum works. And there you go. So anything that you could possibly deploy to Ethereum, you can deploy to optimism. And it'll be a little faster, too, just because look at this. Look how fast it goes.
00:06:30.762 - 00:06:54.094, Speaker A: Boom, boom. Look at that. Speedy. And that's because of the magic of the sequencing node. But basically, you don't do anything. It just works. If you want to get another important thing is that you actually have to be able to move assets between layer one and layer two.
00:06:54.094 - 00:07:09.720, Speaker A: Sorry, I'm talking a bit fast, but really, we just got through the most important stuff here. Look at that. That's it. That's it. You don't do anything. You just deploy. If you want to if you want to do this, you don't have to do anything.
00:07:09.720 - 00:08:03.554, Speaker A: But let's talk about the act of getting assets between layer one and layer two, because that is an extremely important part of actually being able to develop an application on optimistic Ethereum, because you will need Covan optimistic Ethereum ETH in order to pay fees on layer two, because we use ETH to pay fees. And in order to do that, all you have to do is get to the gateway. So gateway optimism IO, right, so we're at the optimism gateway. And the optimism gateway is very straightforward. At this point, we are connected to optimistic Covan. But let's say that you are a developer and you would like to try out the optimistic Covan network. You are going to need to deposit funds into Covan.
00:08:03.554 - 00:08:28.910, Speaker A: So how do you do that? It's very straightforward. You just click deposit. It's going to switch you over to Covan. Because a deposit is being sent from Covan. Then we are going to set an amount. I'm going to submit a one ETH deposit, going to send one ETH over to maybe I can make this a little bigger. I'm going to send a one ETH deposit over to Covan.
00:08:28.910 - 00:09:04.940, Speaker A: I'm just going to confirm that. So here we are waiting, sitting here, and we're going to just have to wait a little bit. It says five minutes, but that's not actually how long you have to wait on Covan. It's much less than that. But you basically just wait here for a minute for an optimistic Ethereum node to pick up your deposit. Your deposit gets picked up and then your funds appear on layer two. So let's see that happen.
00:09:04.940 - 00:09:39.110, Speaker A: You can see here was my Covan transaction. I sent one Ether over to the bridge contract. This is our special proxy system. Chug Splash. Where are we? Here we go. So this is the bridge contract. This is what allows you to send ETH, that allows you to send tokens over to Covan, over to optimistic Ethereum.
00:09:39.110 - 00:10:13.754, Speaker A: There we go. Look at that. We got a bunch of confetti and our deposit is now complete on optimistic CoVAM. So if we then open up our wallet, well, I'm going to switch over to optimistic Covan by clicking on withdraw, just to see. And we should have there we go, one ETH more than we did before. So we got one ETH on optimistic Covan. So this is now I have the money to be able to deploy apps to optimistic Ethereum.
00:10:13.754 - 00:11:08.254, Speaker A: I can also then withdraw things from optimistic Covan if I wanted to, so I could put a 0.1 e withdraw. So withdrawing on optimism currently is a two step process. You can use alternative bridges like Hop to simplify this, but if you use the official bridge, it's a two step process where you first hit withdraw. And so this sends a transaction on layer two and then after a period of a minute on Covan, or it might be even less, maybe about 10 seconds on Covan and a period of, well, seven days on that looks a little weird. A period of a minute. What is this? No, that's a deposit.
00:11:08.254 - 00:11:37.654, Speaker A: Where's my come on. Oh, maybe Etherscan is having some issues right now. Well, looks like Etherscan is having forgot about this. Yeah, Etherscan is having issues right now. So we'll get this fixed in a minute. But basically after a period of time, which is called the challenge period, you will see this little withdrawal here that says okay, it's ready to be withdrawn. And then you would have to execute that withdrawal.
00:11:37.654 - 00:12:35.390, Speaker A: You would have to finalize the withdrawal back on Covan. So again, on our Covan testnet deployment, we use a period of 10 seconds between when you trigger the first transaction on layer two and when you trigger the finalization transaction on layer one. But on main net, part of the security mechanism of an optimistic roll up requires that you have to wait a bit longer. On mainnet, we have a seven day withdrawal period. So you have to wait a period of seven days and then you can execute that second finalization transaction back. On Ethereum, if you use something like hop, you can make this much faster. So I would recommend that you look into alternative bridges that use some cool economics to speed up the time that it takes to withdraw funds out of optimistic Ethereum.
00:12:35.390 - 00:13:20.070, Speaker A: Cool. So that is really the basics of optimism and optimistic Ethereum these days. It's very, very straightforward. It's just like ethereum. The only complexity is moving assets in and out really. Besides that, once you're on optimistic Ethereum, it's pretty much identical. And the OVM V two is not only sort of identical on an API level, so it's not just EVM compatible, it's what we like to call EVM equivalent, which kind of goes above and beyond what you would think of as compatibility.
00:13:20.070 - 00:14:17.182, Speaker A: And it's really just under the hood. It's running geth, which means guess with some very minor modifications. Which really just means that not only do high level tools like MetaMask or Scaffold ETH or whatever, not only do these tools work, but very low level tools work too. So anything that relies on using transaction traces things like tenderly. Tenderly works very well. And we use Tenderly a lot to debug things if things don't look like they're behaving correctly, tenderly gives us a lot of information and that's because it's very easy for them to integrate with something that's basically just guess. So all of your favorite tools should just work.
00:14:17.182 - 00:15:16.990, Speaker A: If you have questions, you can always ask me. I would love for people to try deploying Viper contracts because we've been so stuck on the Solidity because of the custom Solidity compiler. So if people could deploy Viper and mess around with Brownie, that would be fantastic. And if there are any issues that people are finding during the Unicode hackathon, I will be around and people can ask me questions about pretty much anything. So yeah, that's the TLDR luckily, it's much, much easier to build on optimism now than it really ever has been in the past. If you want some more information, community Optimism IO is a great place. It's basically got all of our documentation.
00:15:16.990 - 00:16:23.442, Speaker A: I would take a look at all the OVM 2.0 documentation, which will tell you everything you need to know. There's some very minor differences, some very minor JSON RPC differences that you really don't have to think about just because don't worry about it. And it tells you all about how you can connect with MetaMask, how you can deposit assets into optimistic ethereum, how you can withdraw out of optimistic ethereum, and it even gives you little tutorials that you can use. So, great first place to get started community Optimism IO. Or sorry, need some water? Or you can also just take a look at the GitHub if you want to get more familiar with it and take a look at the Regenesis 0.5.0 branch.
00:16:23.442 - 00:16:53.166, Speaker A: That's the ovmb two branch. And we've got this very nice README if you'd like to try to contribute to optimistic ethereum, we have lots of good first issues. We try very hard to create a lot of good first issues. We would love for you to be a contributor to the project. And we really feel that the OVM 2.0 code base is really our cleanest and most accessible code base to date. So we're really happy with it.
00:16:53.166 - 00:17:16.454, Speaker A: And if you'd like to contribute or you want to build a project, just hit me up on Discord. I will be around. I can give you all the support you need. Yeah, and I hope this is much, much easier to build on than the 1.0 system was. We're really excited about it. So, yeah, that's really all I got.
00:17:16.454 - 00:17:40.790, Speaker A: If people have questions about anything, I guess now is the time. But if not, I will be on Discord and feel free to hit me up. It's that simple. It's easy. Build stuff on optimism. Save money. All right.
00:17:45.640 - 00:17:56.650, Speaker B: It looks like we have a few questions in the chat, if you want to take a look. I think there's some more that are just popping in right now.
00:17:57.180 - 00:18:49.272, Speaker A: Yeah, absolutely. I'll just kind of go down the list. Okay, so ETH let's talk about ETH really quickly. In the ovmv One system, we basically made ETH an ERC 20. So in the Ovmv Two system, we have kind of temporarily disabled this functionality. ETH just behaves like ETH does on layer one. We really wanted to minimize the differences between layer one and layer two, and as a result, we have I'm going to share my screen again really quickly, so I can just show you where you can find more about this.
00:18:49.272 - 00:19:30.472, Speaker A: But as a result, there is ETH and then there's wrapped ETH. So the bridge does not take care of wrapping that ETH, but you can do it yourself. By interacting with the wrapped ETH contract. You could find more information about the differences between OVM and V One and V two at the OVM 2.0 change set page. But as you can see, ETH will no longer be ERC 20 compatible. We are kind of making that executive decision for the meantime, while we just make sure that everything works as we expect going down the list.
00:19:30.472 - 00:20:18.564, Speaker A: Alchemy has support for optimism. So you can just go to Alchemy and so does Quicknode and Infura. So you can go to either of those node providers or you can use the open and accessible Covan Optimism IO RPC URL. And on the Community Hub, you will also find a page that says that's Community Optimism IO. You'll find a page that says networks and connection details and that will tell you everything you need to know to be able to connect and deploy stuff to optimistic Ethereum. Cool. And as I did forget to mention this, but the gateway does support tokens.
00:20:18.564 - 00:21:27.832, Speaker A: So you can deposit any ERC 20 that you want to deposit. You can also deposit ETH, of course, and you can withdraw. So I would highly recommend that you just try that and give it a shot and have fun and cool. So as far as an example app goes, somebody wrote a question about an example app. I would recommend just using Scaffold ETH, you can basically just deploy any application that you would normally deploy to Ethereum. If you are interested in kind of working more in the layer one, layer two communication space where you want to have applications that interact between Ethereum and optimistic Ethereum, then I would take a look at the Community Hub and look at those tutorials and the Is. And then this question, you know, is optimism live on mainnet optimism is live on Mainet.
00:21:27.832 - 00:22:41.990, Speaker A: The main net version that we have right now is kind of a restricted thing while we're still getting the 2.0 system up. But it will be much, much easier to deploy as soon as that main net deployment is or the main net upgrade that we have scheduled for November 11 is complete. And another question here about do I think that seven days is too long to anticipate a denial of service attack? Seven days is being safe. I think this is one of the more frustrating things with layer twos is this seven day window. But I think it's really important to be safe in these early days, right? Maybe over time, as things evolve, we'll sort of start to reduce this time period. But right now it's more important that people don't lose money than for everything to be as efficient as it possibly can.
00:22:41.990 - 00:23:49.394, Speaker A: Okay, so to be able to bridge a token from a contract that you own on Ethereum, would you also need to deploy that contract? On optimism, you can basically bridge anything that you want. In order to do this, you would need to deploy an ERC 20 representation of your token on layer two. And I believe that one of the examples on the Community Hub covers this. So it'll describe that process of creating one token on layer one, creating another token on layer two, and then sort of transferring it between layer one and layer two. But, yes, you don't necessarily need to deploy the exact same contract, but you do need to deploy some, ERC, 20 representation on layer two. And then there's a question about uniswap V three being on optimism, but not v two. I'm not sure.
00:23:49.394 - 00:23:59.720, Speaker A: I don't believe that uniswap v two has deployed on optimism. Cool.
00:24:01.210 - 00:24:22.510, Speaker B: Okay, if there are no more questions for Kelvin, I'd like to wrap this up. Thank you so much again, Kelvin, and the optimism team for sponsoring Unicode this year. I want to encourage everyone to keep this conversation going in the sponsor YouTube channel, which you can find on Discord. Yeah, have a really great day, everybody. Bye bye.
00:24:23.970 - 00:24:29.930, Speaker A: All right, peace. I'll see you on discord. If you need help, let me know and build us up on optimism. It's.
