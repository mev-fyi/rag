00:00:07.210 - 00:01:12.366, Speaker A: Okay, so this is actually round two for us because we've already done a panel with where four of us were there on the same topic. And so what I want to do is try and briefly recap some of the learnings of the previous panel and then try and and set the context for the next panel for this panel. So in terms of some of the learnings, one of them was that there's different types of shared sequencing. There's shared sequencing with homogeneous domains, for example, the optimism collectives, you could have multiple roll ups under the same umbrella. And shared sequencing here, at least in the short term, is much, much simpler. And so homogeneous and non homogeneous shared sequencing should be treated differently. Another thing is that there seemed to be consensus on the panel that eventually roll ups would be forced to have shared sequencing with their competitors.
00:01:12.366 - 00:02:15.270, Speaker A: There's just market demand for that because you have this composability that comes out of it. I guess another thing that we seemed to agree on in the previous panel was that even though network effects are probably going to be very strong around this composability where multiple roll ups kind of act like one roll up when they have a shared sequencer. These network effects will take a long time to materialize because there's a lot of technology that needs to be built. And so as a consequence, what we should expect is in the short term, a lot of experimentation on sequencing, but then in the long term quite a bit of consolidation, which is good for UX. So maybe best of both worlds from that perspective. Another takeaway is that we have different types of shared sequences. We have external sequencers.
00:02:15.270 - 00:03:38.734, Speaker A: One of them is Astria, another one is Espresso and there's maybe others out there, you could say Solada might be a shared sequencer for Ethereum at some point. And then there's like the canonical shared sequencer for a given L1, which is the L1 itself, and that's called a based sequencer. And we were trying to see, okay, is there a world where both can play a role? And one possible such world is where the based sequencer takes precedence for the roll ups. But then maybe application specific sequencing within the rollups, for example, for DEXes, will happen by more specialized sequences, more ad hoc sequences that are non based. And then one of the things that we kind of seem to open up the can of worms and we didn't come to complete consensus is interactions between different levels of sequencing. So there's three levels that we identified. Level zero, I guess lowest level is application level sequencing.
00:03:38.734 - 00:04:18.800, Speaker A: For example, a decentralized exchange. And then one level up is the roll up level sequencing. And then another level up is sequencing across L1s, across roll ups on the different L1s. And it's kind of unclear how these levels will kind of interact with each other. Okay, so that's for my takeaways. What I want to do now is briefly introduce the panel and ask them to share maybe an additional takeaway that I haven't listed here. Josh, do you want to get started?
00:04:19.170 - 00:04:44.674, Speaker B: Hi, I'm Josh. I'm the CEO founder at Astria. We're building a shared sequencer network, I guess positioning us here. We're primarily focused on the Celestia ecosystem. So that kind of puts us in a slightly distinct camp here. I think the biggest takeaway from the previous panel, and it's maybe not a distinct take, but kind of a summary take of what Justin said is we're very early to this design space. Shared sequencers aren't like real real, and that there aren't any running in a main net capacity.
00:04:44.674 - 00:05:15.570, Speaker B: We haven't seen what network effects kind of apply. There's a lot of design and theory around how systems might work, how negotiations for rebates or pricing or whatever could happen. But fundamentally, we're very early in this design space. And what I'm excited for is to get things kind of over the line so that we can start seeing some of these things in practice and then answer some of these questions wherein we stray a little bit out of the kind of too theoretical and into a two years out. It's like an extremely long time in this industry.
00:05:16.310 - 00:05:19.314, Speaker A: We're early. Mark hey.
00:05:19.352 - 00:06:41.310, Speaker C: So I'm Mark, and I'm a contributor to the optimism collective. And my main takeaway from our last panel was really this difference between the shared sequencing between heterogeneous domains and homogeneous domains, and for how, in the short term, it's a lot easier to build a shared sequencing system when all of the domains are the same. They're all homogeneous. When you're building shared sequencing across domains that are different, basically it becomes the security model of the weakest link and it's a lot more complex to reason about. And I do think it is really important for us to not build walled gardens, right? So we want to eventually get to a point where we have a shared sequencer that can work across all the different domains, all the different types of execution, all the different L two ecosystems. My concern here is that in practice, it's really hard for the L two S to work together because they all have their own kind of business needs, they're all working on their own roadmaps. Anytime that they spend standardizing open specs between them, it's like it slows down because you have to gain consensus between all the groups.
00:06:41.310 - 00:07:35.150, Speaker C: We can kind of see this sort of thing play out many times in the history of technology, right? Like, for example, CUDA versus OpenCL. Both of these are kind of like GPU programming frameworks. CUDA was proprietary by Nvidia and it was able to move much faster compared to OpenCL, which was this Open thing that was governed by a consortium of many companies. So when things are built in a closed way, they're able to move much faster versus when they're built in an open way. And you kind of have to go between all the orgs and all the orgs have to make sure that the requirements are fulfilled. You have to build consensus. So I have some concerns about what building a shared sequencer across all the different projects actually looks like in practice.
00:07:37.330 - 00:08:44.210, Speaker D: Thomas hi everyone. I'm Thomas from Nethermind, and I think that previous panel started building some intuitions, new intuitions for me around the role of L two S and L1s for each other. So while we were talking about short sequencing being this atomic layer for communication between L two S, I definitely felt that there is some role of L two S doing maybe non atomic coordination of breaching between L1s. And I feel that maybe this can lead us to removal of bridges in general because there will be like two strong components. L two S will be serving L1s to communicate, while L1s will be serving L two S to communicate. And then we had this longer talk about liquidity, how easily will move, so we went a bit deeper with like, where liquidity stays, where does it feel most comfortable? If you start feeling that the movement of liquidity between different chains is simplified, it costs less because of short sequencing or roll ups being involved?
00:08:46.710 - 00:09:28.942, Speaker E: My name is Daniel, Daniel Wong. I'm the co founder of Tyco. I was not part of the previous discussion, so I have a lot to catch up. I don't have enough knowledge in shared sequencing or know those stuff because Tyco is a Base Roll Up. So basically what we say to ourselves is we just focus on the minimum scope of work. We let other people give up the opportunity, let other people to use the existing mev framework to extract value from our L2 transactions. We don't really care because we don't have a centralized component, so we don't really maintain the network.
00:09:28.942 - 00:09:59.580, Speaker E: Right. So basically I'm here to learn more because although shared sequencing is not so important for now, for Tyco, but we also have this new idea called Booster Roll Up, which will heavily rely on shared sequencing that will change layer one and L2 states simultaneously. So that's some idea we have. Yeah, so quite happy to be here to learn.
00:10:00.510 - 00:10:48.940, Speaker A: Okay. Thank you, Daniel. That's a great segue because the title of the panel is Base Roll Ups and the Mev Gambit. So Base Roll Ups, just to make sure we're on the same page, is when the layer one is doing the sequencing. And what Daniel just explained is that Tyco is a Base Roll Up, which gives away the mev to the layer one, and in giving away the mev as income, they've made a sacrifice. But Daniel was saying that's not a big deal for us because we don't really care about this little bit of income. The sacrifice that we're making is actually fairly small, and that's similar to a game of chess where you have a gambit whereby you sacrifice a pawn, for example, but then you gain some sort of positional advantage and you win the game.
00:10:48.940 - 00:11:47.470, Speaker A: So I guess the big overarching question for this panel is do roll ups want to be doing this gambit? Like, do they want to be sacrificing their mev by giving the sequencing rights to something else, maybe a shared sequencer, maybe a decentralized sequencer that's external to them? And I guess one of the first questions that I have here is around the fairness of splitting mev. Let's say that we don't want to make the gambit. We want to keep all our pawns for ourselves. What happens when there's cross domain mev? So there's mev that originates from the interactions of two roll ups. If we're not going to make the gambit, how do we fairly split mev?
00:11:49.490 - 00:11:57.678, Speaker B: Say, are we assuming that we have two different sequencers, each kind of capturing their own mev? Two sequencers for two distinct domains?
00:11:57.854 - 00:12:14.722, Speaker A: So, I mean, another possibility is that both roll ups have an agreement with a shared sequencer, but this agreement mandates that some of the mev comes back to them. And then how do we figure out all the details of these rebates?
00:12:14.866 - 00:13:06.114, Speaker B: Right? And there's been some previous discussions around this, and I'll say I'm not optimistic on the viability of doing something that is kind of like mathematically pure in this, in that you do some kind of economic counterfactual calculation of saying, in the absence of roll up A, roll up B would only have generated X mev. And when you add roll up A back in, you generate X plus whatever mev. And therefore the difference that is worthwhile to the other roll up is that and you calculate that back and forth. I don't think it's feasible there. I think this is also a question of the state of the number of roll ups, right? Right. Now, if we're saying, yeah, it's just roll up A and roll up B, that is like a feasible kind of governance level discussion that could be had with three parties, right? Roll up a shared sequencer, roll up B. If we're at 100 roll ups, that is kind of infeasible.
00:13:06.114 - 00:13:20.730, Speaker B: If we're at 10,000 roll ups, it's just not going to happen. There's going to have to be something there. So I think as we see the structure of the market evolve, we'll find out more. But in the short term, I'd assume this is going to be some kind of governance level action between a relatively small number of parties.
00:13:21.310 - 00:13:50.646, Speaker A: So I guess what you're saying is that there's two complications. Complication. Number one is that if we're going to do some sort of mathematical splitting, the math is going to be like really complicated. And then problem number two is that as soon as there's more than just two or three or four parties, the governance just becomes way too high overhead. And so if I were to read between the lines, what you're saying is, okay, maybe roll ups should just accept and just do the gambit because that's the most practical and simple thing.
00:13:50.748 - 00:14:51.400, Speaker B: Yeah, I think at some point we'll know kind of in the question of mark's point on homogeneous domains, right? That may be the kind of breaking point where you see a homogeneous domain split off from some shared sequencer where you say, okay, when there were like three of us negotiating this, we had a fair enough deal there's now a bunch of other people. I am deprioritized within this broader shared space. I think it is better for me to kind of splinter off into my own domain for my entities over here, because I can't negotiate in that kind of computationally overly complex negotiation. And we'll just have to see kind of where the power and the ownership and kind of what is the stickiness of any given roll up? Is it going to be subservient to a shared sequencer and the flows or the liquidity or whatever goes there? Or is there going to be a roll up that says okay up front? If I get a 50 50 split between two sequencers, fair enough. Larger pie, I get a cut, and then once it's 100 roll ups and I'm getting 1% of that, no, thank you. I think I have stronger pricing power in the market. I will go my own way.
00:14:51.400 - 00:14:58.266, Speaker B: That's generally how I think it's going out, which is like somewhat unsatisfying answer. And they say, we'll see how things happen, but that's my best guess.
00:14:58.448 - 00:15:20.690, Speaker A: I see. And I guess as a consequence of this, with all this short term experimentation before the network effects really kick in and force a window, take all you're saying there has to be governance because you want to keep this potential pressure and advantage that you have over others to opt out maybe for yourself.
00:15:20.760 - 00:15:32.934, Speaker B: And also, just last point is like pricing power right now is going to go to the roll ups, right? The shared sequencers are going to have dramatically lower negotiating power. They're going to say, oh, theoretically you get network effects in the future. And they're like, I have flow now. What do you have? Right?
00:15:33.052 - 00:15:34.486, Speaker A: Yeah. Okay, interesting.
00:15:34.588 - 00:16:53.300, Speaker D: Thomas so even in simple scenarios, I think that whenever we were thinking of the designs for the cross domain mev, that split was nontrivial. So almost feeling like the other way around, that the calculations were trivial, but the decision on split was non trivial so that governance part would make sense. But is it that complex system? Maybe not necessarily. I think if you want to build a simple intuition, it's like being a merchant between two countries and taking advantage that one country is producing something that you can sell in another country and they're buying it for a higher price than in a regional country, then if you want to later pay back the money that you made from being a merchant to those two countries, how do you split it? Is it benefiting the one country because it produces cheaper, or the one country that pays more? It seems like you can calculate it, but deciding really how it works in a more complex system of multiple different potential trades, it's nontrivial. And usually that was where we were stopping with many of those designs. We are thinking like, okay, it's cross domain, but we can only leave it somewhere else. We cannot pay it back because resolution of that calculation requires some governance and decision making.
00:16:55.190 - 00:17:25.290, Speaker A: Tamash you mentioned that maybe the calculation is actually quite simple. The one question I have for you is what about the inputs to that calculation? Because sometimes mev is very nebulous. There could be some uninformed flow. That just means that you can do some sextex. Arbitrage but all the centralized exchange data is kind of the chain is not aware of it. And so how do you even gather the input on chain to feed to your mathematical formula?
00:17:26.670 - 00:18:23.374, Speaker D: We did this exercise when talking about cross domain mev in the first place, like when flashballs was publishing the paper on cross domain MV. And we said to ourselves maybe not always announcing that there is some vision of the one price, that if you look at the entirety of everything, that you can assume that there is one true price of every single asset. So for every single chain you can design how far away from that true reconciling price? It's a bit like you would create a single auction where everyone would agree everything that they want to exchange. What the price that leads to the greatest benefit for all? And you can check how each of those chains, how much they differ from the true price, and then you can start distributing according to those differences. But it's not necessarily by governance. That the difference between the true price and the price on the chain. It's what LEDs to the win.
00:18:23.374 - 00:19:10.300, Speaker D: By introducing this connection, the bridging between the chains and as Josh said, with more participants, it becomes trickier. But that part of the calculation. We say, okay, one price and how far you say that there is something nebulous, maybe even if you introduce centralized exchanges to this, then it still seems simple in this context. It may become less simple when you think that blockchains move at this discrete stages every 12 seconds, every 1 second, while centralized exchanges keep fluctuating. So then if they have different finalities some differences between settlement, then you take some risk yourself. So then you're asking actually if I pay back the mev, do I pay back to chains? Or actually it was all the reward for my risk. How much of my risk was?
00:19:13.730 - 00:20:11.600, Speaker C: Mark yeah, so this is just making me think about how there actually might be a social scalability kind of limit to the number of domains that a sequencer can sequence as part of its shared sequencing. And just because if all of the different domains kind of have their own preferences in the way they want to, if they want to earn some of the money back, it's going to become really difficult and complicated. It seems like a very obvious solution is if they're all aligned and all this money goes to a shared kind of place and as a full group, they're able to allocate that capital back into the ecosystem or something. That seems like an easy way to solve it. But if they're not aligned, then it's making me think that there will probably be many shared sequencers and not necessarily one great shared sequencer for everyone.
00:20:12.850 - 00:20:26.934, Speaker E: So I think the conversation can happen in two different ways. From a technical perspective, maybe you can have a standard, say, okay, if this transaction is involved in the MEV, then based on some properties of the transaction, you split a share.
00:20:26.972 - 00:20:27.126, Speaker B: Right?
00:20:27.148 - 00:21:28.694, Speaker E: So that's like technical, but I think most likely people will talk about business. If you use a shared sequencer, what do you get? The service level agreement. Like you want to sequence as many transactions from this layer, two, or you feel free to sequence as few as you want. Right? So if you have this agreement for how to say that the MEB is only part of the whole agreement, so maybe the roll up will be willing to give up all the mev opportunity and have no income at all in return, it gets the really fast transaction confirmation, right? So that can also happen. I feel like this may be the case. It's really hard to define how you split percentage based on the transaction. It's super hard and it has also liquidity dependency.
00:21:28.694 - 00:21:42.240, Speaker E: Who supplied the money? And as roll ups, can I also give money to the share sequencer? For mev, if that's another factor, then this is too complicated to build a standard.
00:21:43.250 - 00:22:23.740, Speaker A: Okay, so I guess, Danielle, what you're saying is that if a roll up kind of opts in to a shared sequencer, they get all sorts of benefits. They get pre confirmations, they get maybe finality, they get synchronous composability. And so maybe it's kind of an obvious decision, like a no brainer. All the advantages combined are just greater than the sacrifice you're making with the mev. Right? And even if Dmev was significant, the practical considerations around getting all the inputs, running it through all the formulas, and then negotiating everything with the social data is just too much work.
00:22:26.030 - 00:23:14.742, Speaker D: Maybe to build additional intuition. If you have, like, three chains and one is selling for eight, the other is buying for ten, and these are the only roll ups that are talking to each other via shared sequencer, there is some massive liquidity place. Somewhere else that buys for 20 and you don't take it as an input, then theoretically, you should move all the meva to the one that sells for eight because they're still so far away from that 20 price that is dominant price on the market. Right, but because you're not taking into account all the inputs as a shared sequencer, you're not participating on the market, you don't really know how to split it. But socially, people looking from the outside think like, oh, okay, this opportunity, you're just getting some liquidity and someone else maybe will start arranging the trade between you and the big market with the 20 price. So the calculation is simple. Like people can look at all the chains, but you don't have all the inputs connected in the sequencers.
00:23:14.886 - 00:24:12.080, Speaker A: Yeah, and if you want inputs now, you potentially have an Oracle problem. How do you get this true price? Because one of the problems with sequencing is that you can manipulate the Oracle. So that's a very simple example is as a proposer, I can create a block which has 10,000 e from mev, but it's all fake mev. And the reason is that it's mev that pays myself. And so you can make an arbitrarily kind of big distortion to the mev Oracle, I guess just trying to shift gears. Another possible way to resolve this tension between keeping or giving away the mev is that there's a possibility that mev will tend to zero over time. And there's two basically technologies for that and kind of two types of mev that I see.
00:24:12.080 - 00:25:31.602, Speaker A: Type number one is whereby you have a user that makes a transaction and that transaction itself generates mev. And we have technologies like encrypted mempool that make sure that it's very difficult to extract mev from this encrypted transactions. And we also have technologies like mev share where if you're willing to disclose information about your transaction, well, the mev comes back to you as a rebate. So for user generated mev, there's very little that will ultimately end up to the sequencer. And then there's another type of mev which I guess you could say is passive mev. For example, LPs, they're not actively making a transaction, they're already on chain and now they could be hit by toxic order flow that creates this sex dex arbitrage. And I think there's this new crop of decentralized exchanges which basically have an external sequencer at the application level in these designs, which are MAV smart or mev aware, the mev is internalized through some sort of auction and rebated back to the LPs.
00:25:31.602 - 00:25:59.680, Speaker A: And so again, the mev doesn't go to the sequencer or the proposer. And so I guess my question to the panel here is, do you agree that as we have just better tools for both users that are actively hitting the chain and LPs that are just passively providing liquidity, that the mev gambit won't be a problem because mev will tend to zero?
00:26:01.890 - 00:26:41.614, Speaker D: I think that it does go to zero in the sense that mev arrives from approximations, right. Either we approximate time by the fact that we are on this discrete blockchain and we just update pricing every 12 seconds. We cannot do that immediately after any event, after any signal from the off chain world. We also do approximations of calculations, right. We cannot introduce the advanced pricing models on chain for all the type of financial instruments or other type events. So we just run approximations like, I don't know, uniswaps AMMS instead of detailed pricing models. We don't have access to all the data, so we approximate based on the most available data.
00:26:41.614 - 00:27:02.578, Speaker D: And as we introduce more and more computation on chain and more and more data on chain, and as the liquidity becomes dominant on chain instead of off chain, then we no longer have to approximate and the mev becomes nonexistent. Over time. It doesn't disappear, but it just keeps going towards zero, for sure.
00:27:02.744 - 00:27:10.202, Speaker A: I guess what you're saying is that sex dex arbitrariz goes away once we don't have sexes anymore. Everything's a dex.
00:27:10.366 - 00:27:27.100, Speaker D: If we have 90% of liquidity on the centralized exchanges, 10% on chain, then the information from centralized exchanges is not really available. It's easily on chain. But if you have 90% on chain that you have lots of information about the pricing that is at the source on chain available to you.
00:27:28.110 - 00:27:34.400, Speaker A: Our vision is no sex in crypto. Anyone else?
00:27:35.570 - 00:27:46.014, Speaker C: Yeah, so basically this idea of mev going to zero, my understanding is that it would be the mev is no longer going to the proposers.
00:27:46.062 - 00:27:46.706, Speaker A: Right.
00:27:46.888 - 00:28:27.040, Speaker C: So I wonder if someplace else in the Stack, there will be opportunity if there's, say, an intent kind of based system or for 4337, there's kind of entities out there that can make a bunch of money by figuring out what the users want to do and sending the transactions on behalf of the users. So I wonder if instead of mev going to zero, it's more like mev no longer going to the proposers but instead being in a different part of the system.
00:28:27.570 - 00:28:39.694, Speaker B: Yeah, it's related to say I think it's useful to think about different types of mev. I think, like, jin one from Flashbots, like three EV framework of like there's like Moloch, mafia and monarchy mev, where monarchy would be like, there's just one proposer.
00:28:39.742 - 00:28:40.146, Speaker A: Right.
00:28:40.248 - 00:29:18.382, Speaker B: The mafia is like there are entities that have a dominant position in the Stack. And then there's Molok is like economic inefficiencies. I think we want to remove the Molok mev, which is like market inefficiencies right now. It'll definitely trend towards a lower number than is now because I don't think crypto markets are that efficient, especially relative to larger centralized TradFi markets. But to some degree on the mev capture, I do think there will be always some unsophisticated flow, whether that is unsophisticated user flow. You can think about people who click on the uniswap front end have accepted up front. Like, I'm fine losing 15 bips to the front end.
00:29:18.382 - 00:29:54.938, Speaker B: I'm not going to go take one more click to go to a different front end that doesn't charge 15 bits. So, okay, you're clearly comfortable for a UX preference over a pricing preference. And there's probably going to be other layers in the stack where that value is extracted. Is that mev or what are we calling that? Same on the back end. Right. Is there going to be essentially this unsophisticated liquidity that may be using an older AMM for whatever network effects and it's not using something where all of the kind of loss versus rebalancing is captured and rebated to them, but directionally. Yeah, I do think we want to see the quantity of mev go down.
00:29:54.938 - 00:30:32.470, Speaker B: There is some kind of floor price in that. Mev is just part of the overall pricing of these systems right now. Right, get into your bitcoin fee debates versus block issue and stuff. But right now, proposers are making a good amount of their money running mev and collecting that revenue. Does that need to be made up for somewhere else in the stack if it's no longer coming from mev? Is the system economically kind of sound without that from a number of nodes, you want to be incentivized to run the network. A lot of modeling you could probably do on that. But generally, yeah, we want the Molok mev to go down, but there will probably still be some in the system just due to unsophisticated actors.
00:30:33.530 - 00:31:26.280, Speaker E: Okay, so my theory is maybe an intuition is mev will never go away. I mean, they will never go down to zero somehow. I don't have proof, just some situation. I feel like I don't familiar with this encrypted manpole idea, but I guess it will have some operator owner. Right, so if you have multiple those encrypted mine pools, will the operator become the only party who can do MVP? So basically you shut the door, close the door for other people to grab the opportunity, but those operators will still be able to even grab a bigger opportunity to extract value. So I'm not sure whether even in theory there's a solution to minimize or zero the mev. Does my take.
00:31:26.890 - 00:32:14.770, Speaker A: Okay, interesting. So there seems to be consensus that mev won't go to the sequencer. Instead it will go in various places. It could either go to these 4367 type mev share type kind of providers, it might be extracted by wallets, kind of even higher up in the flow, there will be this DAP specific kind of sequencing which will protect LPs. And even if we have encrypted mempool, maybe some sort of operator of the mempool might extract. And it's definitely true today. So for example, Flashbot Protect is kind of an encrypted mempool which is centralized, which has Flashbots as the operator.
00:32:14.770 - 00:33:08.626, Speaker A: And my understanding is that this flow is like one of the main reasons why their builder has about 10% dominance. So even though they're not profiting. Directly, financially from this encrypted mempool. They are profiting, I guess, kind of reputationally, or on the leaderboard, they have a fairly high position because of that encrypted mempool. But I would push back a little bit, Daniel, on the mempool necessarily having an operator, we have some forms of cryptography, like threshold cryptography, where you have a committee instead of a single operator, so that's kind of in the right direction. And then there's something even more powerful called delay encryption, where there's no operator whatsoever, you just have pure cryptography and the technology is not there yet, but eventually we will remove that operator.
00:33:08.738 - 00:33:17.334, Speaker E: But how do they got incentivized? I mean, who are going to pay those people? Who going to maintain the encrypted pools?
00:33:17.462 - 00:33:56.200, Speaker A: Yeah, so it would be like publicly maintained, like peer to peer gossip. It would be a public mempool, just like we have a mempool today. And it would be, I guess, maintained partially altruistically by people running nodes, but also partially kind of rationally because of the tips, right? Every transaction has a little tip and so the searchers and the builders are incentivized to listen on this public mem pool. And I guess mev two proposals won't truly go to zero there's at a minimum the tips, right? But the nice thing about the tips is that they're nontoxic, they're fair for everyone.
00:33:56.730 - 00:34:24.000, Speaker D: The encrypted mempools only remove the mev related to reordering and censoring but it doesn't remove the mev from injection because even if you are a builder that operates only on the encrypted mempool then you can always inject at. Every block at the top of the block. I can inject your transactions to do the Mev extraction and you inject them encrypted. But they are not encrypted for use.
00:34:24.550 - 00:35:31.186, Speaker A: Yeah, so you prevent kind of some forms of injection like sandwiching, where you inject before and after, but you don't prevent sex arbitrage, but sex arbitrage. There seems to be some sort of consensus that that's going to go away through some other mechanism, maybe. Now we have only a few minutes left, so I just want to kind of wrap up with one final question which is related to mev, and that's the transition from the status quo for most roll ups, which is centralized sequencing to decentralized sequencing. And one of the features of centralized sequencing today is that is amazing UX for users. First of all, we have pre confirmations, but the point I want to touch on is specifically that there's no sandwiching, right? It's effectively a first come, first serve. And the centralized sequencer, just for reputational reasons and for business reasons, they don't want to screw on their users. And so if we're going to shift to a decentralized sequencer, we need to fix this sandwiching issue somehow.
00:35:31.186 - 00:35:50.700, Speaker A: And the only way that I really know how to do it is with encrypted mempools. And so my question here is are encrypted mempools a prerequisite for decentralized and shared sequencing? And if so, what kind of timelines are we talking about?
00:35:51.070 - 00:36:32.246, Speaker B: I guess I can give like a practical example. I'm not sure. Strictly like a prerequisite. Right. Again, there is some amount of unsophisticated flow that just doesn't give a damn and we'll take 50 bips off of their execution for whatever reason, but we do think they're very important and generally I think mev should be resolved at this order flow level. At Astria we're actively looking at and kind of our transaction flow is that an end user is interacting with a roll up RPC node and then there is another hop to the shared sequencing network and then another hop to the DA layer. And so actually where this would happen is you kind of inject essentially your RPC that is presumably some kind of encrypted mem pool at that layer where the user is interacting.
00:36:32.246 - 00:37:24.906, Speaker B: And we've actively worked on some designs to use Swab. As it stands now, it's like essentially a form of mev share to intermediate between this roll up node and the shared sequencer. From how long? It's a little bit speculative on what assumptions do you want to make? Right. We're still going to be in very much like a trusted environment here, but an implementation that is structurally equivalent to my understanding of the Flashbots protect RPC today. That's in the order of weeks or months of work to kind of integrate into at least like an EVM based roll up. How long it takes to get SGX or delayed encryption, mem pools like that might be longer, but I don't think shared sequencing as like an architectural design makes it much more difficult. If you could implement this on an L1, it should be a pretty trivial lift to move it to an L.
00:37:24.906 - 00:37:26.730, Speaker B: Two, running through a shared sequencer.
00:37:27.630 - 00:37:57.310, Speaker A: Okay, so I guess you're making two points. One is that there's some Djens out there that don't really care about Sandwiching and maybe this is not a real issue for a certain segment of the users. And then the other point that you're saying is that there's some fairly practical forms of encrypted MEMP pools that are maybe pretty good and specifically SUAV, which is SGX based, is not perfect because you have these trusted enclaves, but it's practical and pragmatic in the short term.
00:37:57.390 - 00:38:36.260, Speaker B: Yeah, and I think it might even be, if we want to be super pedantic, it's probably calling it like a trusted mem pool rather than necessarily like an encrypted mem pool. But the idea that a shared sequencing architecture doesn't necessarily you can have guarantees about the sequencing of transactions being decentralized and having the benefits of not having one kind of persistent leader and the problems that may come from that. And you can still have RPCs that are specific to how the mempool and transaction flow go that don't necessarily leak this mev with the whole varying range of trust assumptions that you may get out of different designs, Mark.
00:38:36.630 - 00:39:47.030, Speaker C: So I think decentralized sequencing kind of means different things to different people so maybe we can break it down into a few different things, right? So there's leader election. That's one aspect of decentralized sequencing. And what leader election? Hello? Okay, cool. It died for a second or something. Okay, so what leader election gives you is basically different qualities of execution, right? Because you've got different entities that are building the blocks in different ways. They've got different block building algorithms so the transactions might be ordered differently. Then you have permissionless entry into the set of possible leaders, right? And this is a very important property for Ethereum L1 because basically this is how you kind of get censorship resistance, right? Because if everyone is censoring, then more entities can join the validator set and then these entities won't censor because transaction fees like the tips are very high on the transactions that are being censored now there's this natural incentive for someone to come in and include those transactions.
00:39:47.030 - 00:40:40.714, Speaker C: So at least in Optimism, we've kind of committed to this idea of proof of governance where we're not going to have permissionless entry to the set of sequencers. And we've released a blog post about this, we've talked about it a bunch. John Charb came to the same idea. But the claim here is that we don't necessarily need to have permissionless entry into the sequencer set as an L two. And we kind of use this reputation and this completely like we're we're not completely credibly neutral in this sense. And we try to use this to our advantage. And we think of it as like an iterated game where reputation helps to decrease costs in other places of the system.
00:40:40.714 - 00:41:01.120, Speaker C: And we want to use this as an advantage. And so I think that encrypted membranes will be important in this world where there is permissionless entry to the set of Validators because you're not going to trust each other but if it is permissioned, it's less important.
00:41:02.450 - 00:41:21.974, Speaker A: Understood. So great point. So basically you're saying that there's this intermediate step potentially where you can have these pseudo decentralized sequencing and you still don't need encrypted mempools because there's form of reputation. I think we're over time already. Thank you so much panelists, for your time and thank you.
00:41:22.092 - 00:41:22.420, Speaker B: Thank you.
