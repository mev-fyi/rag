00:00:02.010 - 00:00:39.638, Speaker A: The last few people are coming in right now, but I think we're ready to get started officially. Thanks again to everybody who's just joining us. We have an excellent presentation lined up for you this afternoon. We're going to be hanging out with Discordion from the Protocol Labs team, and we're really lucky to have him in here. I'll give him a second to introduce himself to those who just started here, but we're going to be taking questions throughout. So post your questions in the zoom chat below, and we'll get to him throughout the presentation. This is a great opportunity to ask him whatever might be on your mind, but if you don't get to it, we highly recommend hitting him up in discord following this presentation, which is a great way to talk to the whole team.
00:00:39.638 - 00:00:44.378, Speaker A: Ask all your questions and get hurt, but I'll let you take it away from man.
00:00:44.544 - 00:00:56.154, Speaker B: Awesome. Yeah, yeah. It's always a pleasure to be here. Thanks a lot, Luke. So, hello, everybody. I hope you're enjoying buildquest. I'm discordian a community engineer from Protocol Labs.
00:00:56.154 - 00:01:45.406, Speaker B: I'm here today to give you a quick introduction to IPFS and Filecoin. All right, so what are we going to be doing today? Well, today we're going to learn about the core concepts of IPFS and Filecoin and why they're important. We're going to talk about what tools exist today to help you get started building. Then we'll talk about some possibilities, throw out some ideas that might be fun to build with the tech. Near the end, I'll tell you some resources you can explore into to learn more about IPFS and Filecoin, as well as where you can go to find our communities and connect with fellow IPFS and Filecoin enthusiasts. Finally, if there are any unanswered questions at the end, I will stay here and answer your questions. However, if you think of any while I'm presenting, please share them.
00:01:45.406 - 00:02:43.990, Speaker B: It can be good to ask your questions and have it answered while it's still fresh in your mind. So a key part of IPFS and Filecoin is that they're distributed. Currently, the Web 20 model is centralization. One single point can fail, and entire services go down. As you get further and further distributed, though, your services resilience increases as the users themselves are what are powering the service? First, we believe that only the distributed Web can address the technological challenges of the future, where the planet increasingly connected with the Web, and data that circulates on it plays a bigger and bigger role. Data and knowledge are a couple of the most important assets in this connected era. Being critical to human development, they must be safeguarded, open, and in the hands of the people.
00:02:43.990 - 00:03:38.696, Speaker B: IPFS is not the answer to all the problems, but it is the answer to some, and overall represents a solid building block in the Web three generation, particularly when it comes to removing borders and silos for data. So what exactly is IPFS? IPFS is the Interplanetary File system. What is a file system? Files and folders. Any file with any content. Why Interplanetary? Because it was conceived as a way to upgrade the web in a way that would still work when the network stretches across planets. The idea being that if you're sitting on Mars, it may take 1 hour for a request to go to and come back from Earth. But if that content was already fetched by someone else on Mars, then it should not travel all the way back to Earth for it.
00:03:38.696 - 00:04:22.980, Speaker B: And that feature should be provided transparently by the network protocol rather than by something on top. As we will see, IPFS is distributed by design. No central authoritative servers are storing content, and no central server needs to be contacted in order to obtain the content. Typically, you would upload the content to a server, a location. Anyone wanting to download that content will have to get it from that same location. With IPFS, things are slightly different. In IPFS, you run an application called the IPFS Peer, and with it you become the server.
00:04:22.980 - 00:05:12.310, Speaker B: You don't upload content anywhere, but instead add it to your peer and make it discoverable by everyone else. Any content that is published on IPFS uses Content Addressing, which is a way of referencing a piece of data by its hash. I'm going to explain the key technologies making this possible. In order to do this, let's think of the process we follow when we put our data online. As we said a couple of slides ago, a file system has files and folders, and the web is no different. When we open a website, we are just opening some files with the difference that they need to be downloaded from a remote location. And we do that using a browser which will print pretty things on our screen.
00:05:12.310 - 00:05:56.580, Speaker B: With IPFS, we're also obtaining from a remote location. But the key difference here is that we don't need to know the location of that content, but what we call the Content Identifier. The content is still at one or several locations, but as we will see, it does not matter anymore where it is. We switch from a location based Identifier to Content Addressing by using a CID. The content. Identifier. In order to be able to have Content Addressing, we need to obtain Content Identifiers for each piece of information that we want to put on the network.
00:05:56.580 - 00:06:47.190, Speaker B: This is effectively a cryptographic fingerprint of that piece of content. Every piece of content produces a different fingerprint. All the fingerprints are the same size, regardless of the amount of content. This fingerprint, which we call a CID, can be reproduced anytime from the original content. This means that if we obtained a piece of content after requesting a CID, we can verify that we were given exactly what we asked for. So when it comes to files, the idea of how we Content Address them is clear. But what about folders? Well, folders are just special types of files which have a list of files in that folder as content.
00:06:47.190 - 00:07:44.100, Speaker B: That list provides the names of those files, and in the case of IPFS, their CIDs. Since a folder is a type of file, a CID can be obtained in exactly the same way as for any other type of file. This means that we can represent a folder or even a full file system using a Content Address structure like this. As you can see on the right, our top level folder has a root CID. It has two entries corresponding to two folders, and those folders have other entries corresponding to files. Each entry has a different fingerprint. See the colors? As each fingerprint refers to different content, this Content Address type of graph is what we call Merkel Dags.
00:07:44.100 - 00:08:31.990, Speaker B: The Merkel Dags used by IPFS allow us to move from location based addressing to content addressing in a single step. By just replacing locations with the root CID of their content, the subpaths stay the same. One characteristic of Content Addressing that I mentioned is that the fingerprints are unique for any type of content. What would that mean? If we want to copy file. TXT to the folder of the second user, it means two things. First, we did not really have to copy that file. We just had to modify the folder to reference the content.
00:08:31.990 - 00:09:24.760, Speaker B: Two copies of the same content have the same Identifier, so to IPFS, they are the same thing. There's no notion that the same content can be duplicated in different folders in IPFS, because it is actually the same thing with the same CID. We call this property deduplication. Secondly, since we changed a folder, the fingerprint of that folder also changed. So we had to update the upper folder as well to reference the new fingerprint, which means that the fingerprint from that folder changed, resulting in a new root CID. The moment something changes, you get a completely different CID. Your previous CID still references your previous version of the content, which has not been changed.
00:09:24.760 - 00:10:39.070, Speaker B: The fact that a CID will always represent exactly the same piece of information, unlike a location, unlocks the capacity of doing verification on any piece of data and makes IPFS a very good framework for appendonly storage like blockchains or data archives. As you can see, Content Addressing is a nice drop in replacement to location addressing, as we keep having folders and paths in a very similar way as we had them on regular web addresses. The first step when adding content to the IPFS network is to obtain the Content Identifiers for that content which we just went over. This can happen offline at any moment. Once we have those CIDs, the next step is to announce them onto the IPFS network so that they can be retrieved by other IPFS peers. But what is a peer? What does it do? Peers in peer to peer systems are nodes that are connected to other peers to form a network or swarm. Forget for a moment about IPFS peers and think about peers in general.
00:10:39.070 - 00:11:19.260, Speaker B: There are certain features that a peer in this network must have. First, it needs to have a name so that other peers can identify it. In practice, each peer has a unique Identifier. This Identifier is linked to a cryptographic identity which allows each peer to communicate securely through an encrypted channel. Secondly, it needs to share at least some functionality with other peers. If a peer needs to interact with other peers, they will need to support the same services. For example, the peers in the IPFS network are peers which support a set of services or protocols.
00:11:19.260 - 00:12:09.790, Speaker B: One of them serves to request certain content by its CID from a different peer and download it. But in order to get there, it means that peers need to be able to discover each other. The network transports, they support TCP, Bluetooth and the services that they can understand. This step is called Content and Peer Routing, and it is achieved through something called a distributed hash table or a DHT. The DHT, or the distributed hash table is a critical service that each peer runs. DHTs are the equivalent of a large database that works by storing only a small number of rows in each peer. In order to get the value associated to a key, a peer will need to find some other peer that is storing it.
00:12:09.790 - 00:13:13.890, Speaker B: The process consists of asking other peers in the network who has this row, but not in a random fashion. Remember that not every peer is connected to every other peer. Instead, peers with certain names or peer IDs are more likely to store certain rows. Thus, a peer knows which one of the peers it is connected to is most likely to have the value for the key that it is looking for. But what if it does not have it? Then it will request information about peers known by the other peer, which are more likely to have it. Now that we have a database shared by all the peers in the system, how does IPFS use it? Simple. When the content is added to IPFS, a peer will insert one row in the DHT, mapping the contents that we generated to its peer ID, declaring itself a provider for that content.
00:13:13.890 - 00:14:01.650, Speaker B: Publishing this row involves finding a peer similar enough to the content ID to store the row in any case. The content ID is, however, a very small piece of information, and the actual content stays in the original peer. Peers also insert routing records in this database. These map their peer IDs to the locations where they can be reached and the method effectively to their IP address and port. Any peer that wants to download some content will then have to do two things. First, query the DHT to find which peer ID is providing that content. Second, query the DHT to find information on how to contact that peer ID.
00:14:01.650 - 00:15:02.692, Speaker B: At the end of the DHT queries, a peer knows who has the content it wants and where to get it. Now that we've gone over obtaining a CID, advertising it on the network, and locating content, let's take a look at transferring content only briefly. The last step to retrieve content in IPFS is to download it. Because we know how to contact the peer holding the content, and we know what content we want, we can connect, receive, and verify it. This means that any content received through IPFS is authentic and matches the request. Once content is downloaded, the local peer will advertise itself as a provider for that content on the DHT, making it available to other peers for download. The protocol we use to download files is called Bitswap, and it also works for quick discovery by asking all neighbors whether they have the content.
00:15:02.692 - 00:15:57.270, Speaker B: Let's say in the case where the content is not found in the DHT, IPFS really is useful to anyone who wants to serve or retrieve content on the web, which is almost everyone. As certain pieces of content get more popular, the data becomes more readily available and resilient to loss. You can also run your own nodes on classic infrastructures like VPs or Pay pinning Services to hold onto your data. Ensuring Availability but what about alternatives that are both decentralized and reliable? Well, this is where Filecoin steps in. Filecoin is storage designed for web3. From the ground up. It's compatible with IPFS and other existing Web Three technologies, such as near and many others.
00:15:57.270 - 00:16:55.640, Speaker B: It's cryptographically Verifiable, so you can store CIDs on any blockchain really, and reliably retrieve the same data every single time, provided you have a storage deal made over Filecoin. At over eight exabytes, Filecoin is an absolutely massive network. Without any central authority, it should have the capacity to handle any use case you can imagine. Let's take a moment to talk about Verifiable storage on Filecoin. You or your app make a deal with a provider to store your data or several. Filecoin preps your data by transforming it into a directed acrylic graph, the Dag. It uses the same process as IPFS, so this way the resulting CIDs are compatible.
00:16:55.640 - 00:17:59.624, Speaker B: Next, providers generate an initial proof of replication that's part of the storage deal that they publish to the Filecoin blockchain over time, providers have to keep proving that they still have subsets of your data. By creating proofs of spacetime, they are paid incrementally for keeping up the storage deal. Finally, you can get your data back by making retrieval deals with providers. You can also check the chain for proof that it is being stored and stored correctly at any time. IPFS and Filecoin are perfect complements for each other as we've gone over. IPFS is great for fast, flexible retrieval over the IPFS network and can even be accessed through Http gateways. For users not yet equipped with IPFS themselves, though IPFS needs somewhere to persist.
00:17:59.624 - 00:18:59.230, Speaker B: The data filecoin answers this problem by offering excellent persistence and verifiability through distributed storage deals, which any storage provider can accept. There are several layers to any application, and web Three offers no exception. You have storage helpers such as web3 storage, NFT storage fleek, estuary, inferior ceramic and more. There are so many tools out there for storage, providing that finding the perfect fit for your project should almost certainly be possible. We have the logic layer as well. Through smart contracts, they can point to CIDs served over IPFS, stored via filecoin, a pending service, or maybe even persisted through sheer popularity. The logic layer offers endless possibilities of so many technologies, including Ethereum, near, and many, many more.
00:18:59.230 - 00:19:49.070, Speaker B: Finally, we have the front end. This is what you see and can include typical web Two methods like throwing your page on a web server and having some server side code do some work. But also web3, where the website is served over the distributed web, often with integrations like crypto, wallets and NFTs. Fleek is very helpful for this. Serving static websites over IPFS is quite easy, so I hope to see more and more web Three type front ends as we move forward into the future. By now you might be wondering what can I build with IPFS and filecoin? Well, we've been brainstorming some ideas to help you get started. We have quite a few, so I'm going to briefly go over some.
00:19:49.070 - 00:20:37.948, Speaker B: Here are eleven ideas of varying vagueness, difficulty and complexity, with three more after this slide. You could create a social media website where data is shared directly, peer to peer timelines, decided organically by the data you literally receive in a stream filtered by the client. Maybe you'd want to build a peer to peer chess game where the two players stake an NFT and the winner takes all. A distributed video streaming service could be nice. Users could monetize their videos through a token, maybe requiring some form of payment for certain content or extras. You could help cache the planet, help store popular JavaScript libraries over the distributed universe. An RSS emulator could be fun.
00:20:37.948 - 00:21:34.060, Speaker B: Users could subscribe to a Pub subtopic, which is a published subscribe system which you can use through your IPFS node via Lib P to P, something that helps power IPFS. Peers could subscribe to a topic they're interested in, and another peer could publish updates to it. Decentralized achievements could be fun. Create a system where web3 games can easily integrate achievements into their games, adding a whole new layer of fun to new web3 games. You could make an app to simply snapshot a website and provide the immutable CID representing that website. Build the distributed metaverse where any user can host their own planet, allowing users to colonize entire new worlds in an inexpensive and distributed way. You could build a decentralized service that assists you in purchasing the correct temperature of coffee.
00:21:34.060 - 00:22:31.510, Speaker B: Based on the climate nearby, a distributed Git platform could be really cool. Bonus points if you can integrate an issue tracker into it too. A wrapper for YouTube to help cache videos onto the decentralized web could be absolutely invaluable in preserving certain types of content which are completely lost to time. Those were eleven ideas, but let's take a closer look at three more. Here are some further game NFT use cases. Permanent cross platform Progress Storage the NFT could operate as a token, allowing you to track your achievement progress in a distributed way. Think like Steam's achievement progress tracking, but without a centralized source of truth.
00:22:31.510 - 00:23:34.940, Speaker B: Minting the achievements of the users could be major. In the speedrunning community, there's a website called Speedrun.com that's quite popular. Users record their times to complete certain games with certain sets of rules around the competitions. With NFTs, the users could hold an immutable and distributed record of their achievements. Minting in game upgrades could be a major player in the mobile market especially, you could sell upgrades to your game as an NFT, and the user could later give that to their friend if they'd like, or sell it in a world where typically those purchases are locked onto a single centralized platform, completely unable to be traded. I think NFTs could really bring something to the table here in a way of being able to sell those upgrades later or give them to friends.
00:23:34.940 - 00:24:24.220, Speaker B: Well, we went through 14 ideas just now, so I really hope that at least one of those has sparked your imagination in some way. All right, I promised I'd tell you about some of the tools to help you build your app, so I'm going to go over a few of those now. Let's take a second to talk about storing and retrieving data. We highly recommend choosing a storage helper. They simplify deals and workflows making it fast and easy to build. They simplify deal making in general finding providers, negotiating prices, waiting for confirmations, verifying storage. Storage helpers handle all that for you.
00:24:24.220 - 00:25:12.410, Speaker B: You can store to both IPFS and filecoin with a single call IPFS for fast, flexible retrieval and Filecoin for persistence. And verifiability. A storage provider with filecoin integration will ensure that you never need to think about any of these things. So what's out there? First up is fleeks. IPFS hosting. It's designed for fast, modern, censorship proof websites and web apps on the open web and works with most modern frameworks. It works by you connect up your GitHub repository and add in some Fleek build settings.
00:25:12.410 - 00:26:02.202, Speaker B: From there, you can deploy your website to IPFS, which is backed up to Filecoin automatically for you. You can find more information about the services that Fleek offers over at Fleek Co. And I really highly recommend you check it out. Web Three storage is a powerful solution for hosting your data for free, backed up over filecoin and available over IPFS seamlessly and immediately. Data is immediately uploaded to a hosted Estuary node and is automatically stored with six providers around the world. It can be used a variety of ways, including the HTP API and web interface. And I think it's important to point out that you get up to 1 TB for free.
00:26:02.202 - 00:26:57.194, Speaker B: So if you're looking for a data storage provider that will allow you to have your data available over IPFS for free, and you're looking to store under a terabyte of data, I recommend just sign up. I think you'll be surprised pleasantly by how easy it is to use. All right. NFT Storage is a powerful solution for hosting your NFTs for free, backed up over filecoin and available over IPFS seamlessly. NFT Storage is designed for NFT developers who want free, decentralized storage, similarly to Web Three Storage too, you also get a terabyte for free. You simply upload your data and get back an IPFS CID that can be used in onchain NFT data as a pointer to your content. Storage and retrieval is free, and you get properly formatted data back metadata back.
00:26:57.194 - 00:27:46.810, Speaker B: Sorry if I said that wrong. Immediately after uploading, you can fetch it back via IPFS, and it's backed up to Filecoin via free storage deals, I believe. Similarly to Web Three Storage as well, that is, six or it might be even eight deals that are made. NFT Storage is easily used via its JavaScript client library, their HTP API, and it can be even used as a remote pinning service directly through your Goipfs node, which in my opinion is a very cool feature. Next up is Morales. Morales is designed for developers looking for an all in one toolkit and service for Web Three for IPFS. It works as a simple call to save IPFS, but there are other helper commands as well in the Docs.
00:27:46.810 - 00:28:40.762, Speaker B: I highly recommend checking them out at docs morales IO. Finally we have lighthouse. Lighthouse is designed to be the ultimate solution to your permanent data storage needs for a fee you can pay to store your data forever. Lighthouse is a fairly new technology to the family of storage providers, so the team is looking for people to try the stack out and provide feedback. And I really hope you find success with this because I think Lighthouse looks really cool. I've listed only five storage providers here though, but from ceramic to estuary, which I lightly touched on in a couple of slides back. There are many others to discover, and I can't believe we're already at the last slide.
00:28:40.762 - 00:29:27.470, Speaker B: But come learn and build. We have an awesome community comprised of builders who help us foster a positive and productive environment. I highly encourage you to check out a resource we compiled of several tutorials currently available@tinyurl.com learnipfs filecoin as well. I really hope to see you around, and I'll be available for the duration of the hackathon, as well as there should be others from the IPFS community, other devrels for the duration of the hackathon. But still, please feel free to ping me or send me a DM directly. Always happy to hear from other developers.
00:29:27.470 - 00:30:03.960, Speaker B: I'm discordian on related discord servers or discordian hashtag 3926. And I'm also on the filecoin Slack, which you can find at filecoin IO slack. Now, if anyone has any questions they've been brewing, now is the time to ask. I'm sorry, I couldn't figure how to check questions if there were any while I was presenting, but really, please don't hesitate to ask the question. Yeah, don't hesitate to ask. The question you're thinking about might be on someone else's mind, too. You benefit all of us just by asking.
00:30:03.960 - 00:30:50.428, Speaker B: All right, and that is all I have. So, let's see. Oh, I got the chat open now. Okay, so, Stephen, you're the first question that I've seen. Question can you talk about access control or encryption of data on filecoin? Yeah, very quickly. So access control? Yeah, I guess there's a couple of ways to see this. So filecoin itself, you likely won't be interacting with that directly all that often.
00:30:50.428 - 00:32:00.544, Speaker B: So the thing that will matter most, I believe, to you would be access control systems over something like IPFS. And I guess, in short, there really aren't any. When you make data available over IPFS, assuming you're using a default node and you haven't set up a private swarm, your data will be available to other nodes, and you can't really control that. But using a private swarm, what happens with a private swarm is all of the nodes in your swarm have an encryption key, and it's a shared encryption key. So any data between those nodes will be visible to those nodes, and all of that will be encrypted. Of course. Otherwise, in terms of storing encrypted data on filecoin or retrieving it over IPFS, you can encrypt it in any way you want with any sort of system you want, because at the end of the day, you can store any type of data on filecoin, you can serve any type of data over IPFS.
00:32:00.544 - 00:32:21.850, Speaker B: So whatever works best for you is what I'd recommend to do. And thank you. Oh, I really hope I pronounce it correctly. Cheek. Thank you very much. It was a very nice presentation. Yeah, thank you.
00:32:21.850 - 00:33:06.584, Speaker B: Okay, let's see. I see victor, question. Let's say we upload a JPEG on IPFS. Can we access the JPEG in HTML with image source IPFS? Oh, I really want to see that work out by default. I do not think so, unfortunately. But the only thing preventing that from working is IPFS support directly in browsers, which is something we are working on. So today you can't access a JPEG that way, but the way I would recommend you do it is when you make your website to post.
00:33:06.584 - 00:33:36.930, Speaker B: So, yeah, think of a website like a directory. So you have your index HTML in the root directory, and then maybe you have your images folder with all your images in it. Just refer to the images in a relative way. That way if somebody is viewing the website over IPFS, it will work fine and the images will automatically load over IPFS that way. But if somebody views the website through an Http gateway, it still works for them because again, everything's just relative to that images directory. Oh, you thought it was a recording. Oh, thank.
00:33:36.930 - 00:33:48.640, Speaker B: Yes, yes. Relative path and no problem. Let's see. Are there any other questions?
00:33:49.090 - 00:33:50.398, Speaker C: I have a question.
00:33:50.564 - 00:33:51.280, Speaker B: Yes.
00:33:51.730 - 00:34:30.300, Speaker C: I am Shauna. I build a planet Earth dao. Right? A dao is a blockchain, right? Bitcoin and ethereum are blockchains and they are DAOs. Right. I created a planet Earth dao. So my question is, I totally believe in interplanetary system, in all the things. So why cannot directly storage the data in the planet Earth dao in this case that I built, and then we can exchange data between planets in the future.
00:34:30.300 - 00:34:34.570, Speaker C: Why we cannot go directly in IPFS?
00:34:37.890 - 00:34:47.460, Speaker B: First, I'm going to try to make sure I understand the question correctly. So you're talking like you want to share data between two planets like Earth and Mars, am I correct?
00:34:47.830 - 00:34:52.946, Speaker C: Yeah. Or b news or you actually, through.
00:34:52.968 - 00:35:40.740, Speaker B: IPFS, you should actually be able to share data directly between Earth and Mars. If you, say, added some data you wanted on Earth and you wanted to share it with Mars and you've communicated that CID to Mars. So you have a user that wants to retrieve that data the first time. They will have to wait for whatever length of time it takes for that data transmission to happen from Earth to Mars. But on subsequent ones, let's say a second user on Mars, after the first user requests the data, because there's another user on Mars which will be significantly closer geographically, they will automatically retrieve that data from Mars rather than re retrieving it from Earth, if that makes sense.
00:35:41.110 - 00:36:09.594, Speaker C: Okay, perfect. I understand. So I built a planet Earth Dao, which is a blockchain for all the entire planet Earth. And I believe in the future we can create a dao for Mars, a dao for Venus, and we will have planet Mars dao, planet Venus dao. Right. And with IPFS, we can exchange data between different planets. So my question is I built this.
00:36:09.594 - 00:36:50.802, Speaker C: It's not launched yet, but yes, I did it. I have built it in GitHub and I allocate it in an interplanetary file system at the same that I built the interplanetary ID system with global planet Earth passports that in the future, people can also have passports in Mars to travel through the rockets between different planets. But my question is how? Because I create this space to allocate all the small chains that are bitcoin, ethereum, whatever. There are so many. So many. You put. In coin gecko and you see ten pages with 1000 coins.
00:36:50.802 - 00:37:31.560, Speaker C: So we have to unite the planet Earth, right? So we have to allocate all the I believe in interplanetary file system, but I cannot understand why the things are super difficult. You create all the time. I am saying you not talking about directly IPFS, but the technological system creates all the time layers in the middle. Why we cannot go directly one planet Earth, one place to put the data and start moving the civilization to the next level. It's like.
00:37:35.370 - 00:38:46.282, Speaker B: Oh yeah, sorry, yeah, you got cut off. But if you can give me like a concise way to word your question in text, I will definitely take another stab at answering it. Is there anybody else that has any other questions or did I miss any above in the chat when I didn't know how to open it? Is the Dropbox project still on? Or vision is like that. Oh, I'm sorry, I don't know what you're referring to as the Dropbox project, but I do like the idea of a dropbox over IPFS like Google Drive. Yeah. A year ago when I discovered IPFS and I started diving into these technologies, I did notice that that was the first thing I noticed is that a Dropbox or like a Google Drive like thing seems to just make total sense on the system, which I feel like that's also what you're seeing right now. What I've created is something called IPFS Sync, which doesn't quite work as well as Dropbox, but I effectively end up using it to sync my own websites.
00:38:46.282 - 00:39:38.298, Speaker B: Yeah, here I probably could just type out the whole URL. That's what we do, right? Yeah, but you did get it, so yeah, I lost my tap now. That's what I get for clicking URL, but actually kind of surprised. Totally lost that. Oh, there it is. But yeah, I am working on IPFS Sync whenever I can, but it is a little slow right now. But as for an actual full on Dropbox replacement, I don't know, off the top of my head, anything working on specifically that I know there are some angles you can take, like a fuse driver.
00:39:38.298 - 00:40:04.774, Speaker B: Some people are working on. If you know fuses, it effectively makes it easier to mount different things onto your system and view the data directly. I think that could be a really interesting path for creating a Dropbox like system. But right now, IPFS Sync is the only thing I know of off the top of my head. But if you had anything in mind that you want to build, I'd love to see it.
00:40:04.972 - 00:40:06.040, Speaker C: Thank you.
00:40:07.370 - 00:40:25.950, Speaker B: You're welcome. All right. Yeah. Loving all the questions. And let's see any names I recognize. Emil. Hi, Emil.
00:40:25.950 - 00:41:26.594, Speaker B: Vote PDP. Games, chess or board games? How do you prevent that one player is using AI to win the game and the NFT? Yeah, I forgot that's a hot topic in the chess world right now, eh? That's another really good question. Preventing AI will be really hard. If you did want something like that, you would want some sort of reputation system where users can and then you'd need some other system to prevent people from gamifying the reputation system, of course, or gaming it, I should say. But yeah, the best I have is like a reputation system. So as players play against other trusted users, a trusted user's vote for another user being trusted, maybe it could be weighted more, or maybe you could have some sort of stake involved. But yeah, I think the best thing is just some sort of trust model would be the best you could really do.
00:41:26.594 - 00:41:47.322, Speaker B: But I guess, yeah, for the NFT example, who's to say that somebody wouldn't be honest for 100 games and then an NFT comes on the table that's worth just a lot of money to that user. Yeah. Okay, awesome. And then they just decide to cheat on that one game. But yeah, cool. I'm glad that helped put you on a path. And thanks for the question.
00:41:47.322 - 00:42:28.520, Speaker B: Lots of good questions here. All right, now I'm scrolling back up really quickly. I don't know, it looks like everyone is helping each other. That's nice. All right. Is there a way to make an indexer on IPFS, by the way? I would say absolutely. One thing I've been wanting to see is a sort of search engine, which I guess wouldn't be like a true indexer, but you could think of the DHT as sort of an indexer.
00:42:28.520 - 00:43:19.084, Speaker B: I believe there's been a few softwares made. I'm sorry, I don't know any off the top of my head that effectively scrape the DHT and try to categorize the content. So there definitely is a way. I can think of a couple of paths. One of the ways that I like is that an IPFS node can store their own index, and then you'll have trusted peers, which could be like your real life friends, for example, and then you could maybe trust the data that they give you less. But really, at the end of the day, what's happening is you'll effectively be creating a search index on your own node, and maybe you could distribute that out in other ways. It's really a pretty fledgling idea.
00:43:19.084 - 00:43:54.530, Speaker B: Let's see, fill prices down, file coin providers can handle it. Yeah, actually, with the fill price down, file coin providers are still going strong. The network just seems to be getting more and more powerful. But yeah, I've noticed the same thing, the price dropped. But filecoin providers are still fine. They get their network reward and everything still seems to be fine. So right now, the way I see it is with the filecoin price being lower, storage is just cheaper, which is a good thing.
00:43:54.530 - 00:44:26.810, Speaker B: All right. And also, if anybody has sent me DMs, or will be sending me DMs, I'll be able to get back to you on Monday, likely at the earliest, but I might be able to get earlier. I'll try. And again, I am Discordian hashtag 3926 on Discord, and if that's all, then I guess I will pass it back off to Luke.
00:44:27.950 - 00:44:59.694, Speaker A: Thanks again, everybody, and thank you, Discordian, for another epic presentation. These are always super insightful. They're always very valuable, and I'm really glad that everyone had so much time to ask questions. If you can't think of any questions and your mind is blank or something just came up and we're not going to get to it right now, I highly recommend connecting in Discord. Like you said, he dropped his details in the chat. I know there's going to be a million questions, so use that as a resource. The Discord will continue to live even after these Zoom calls are over, so make sure to connect with everyone in there, and good luck hacking.
00:44:59.694 - 00:45:09.346, Speaker A: We're looking forward to seeing what everyone builds with IPFS and filecoin. We're going to be closing the room right here, but I wanted to give a quick shout out to Discordian.
00:45:09.378 - 00:45:09.960, Speaker B: Again.
00:45:10.330 - 00:45:15.640, Speaker A: We love having you. We're glad that you were able to come through and impart some knowledge with everyone.
00:45:16.330 - 00:45:20.520, Speaker B: Yeah. Thanks so much, Luke. I absolutely love doing these. Thanks for having me again.
00:45:21.610 - 00:45:29.900, Speaker A: Right on. Well, we do have another session in about 14 minutes, so I look to seeing everyone there. Until then, take.
