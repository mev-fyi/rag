00:00:07.050 - 00:00:39.270, Speaker A: Okay first of all, big thanks to all is Global crew. Let's appreciate them for fantastic job to putting this all together. And my name is Vadim, I'm from NIR and I'm an engineer. So I will have some live coding session in the end. But today I came to present the Bos which is blockchain operation system. I will show how it works, why will you use it and actually how it works. So from the beginning we're all here because we believe in the same principles.
00:00:39.270 - 00:01:48.190, Speaker A: We want users to have their own data, actually their own identity and obviously we want them to have their own decisions. But right now we are quite far from this point because most of our, for example laptops or software applications are running on a large company servers and actually data belongs to those corporations and we are using bank accounts. Every day and similar as money is sitting in the bank and banks are doing whatever they want with our money. Similar large corporations are using our data themselves. And the problem that they have these siloed identities for example the reputation you built in one application doesn't translate to reputation in another application. In this case for example Uber reputation and Lyft application has no link. Corporation can remove features, they can increase some fees or maybe block your account, block your data, remove your social graph.
00:01:48.190 - 00:02:48.894, Speaker A: Every day we have some news about new censorship. Corporations like Twitter Reddit, they increase some download trade limits, remove API functionality. And speaking about data leaks because all the data is sitting in one place and human are making mistakes. There are a lot of leaks and some potential problem of that data leaks. So here well here actually to fix this problem, most of those problem we are doing crypto stuff, we are building some amazing functionality and I have an example of bingo game. So if you have like three terms from this bingo game in your pitch doc then probably you will have some success in token sale or maybe some you will attract some liquidity. Actually you'll have some profit.
00:02:48.894 - 00:03:48.760, Speaker A: But our final target is mass adoption and there is no any clear plan how to bring actually big amount of people to our web three applications. So usual plan is like we are just building cool stuff then dot dot dot and then figures out that at one point we have millions or billions of users and web three until now has a lot of problems. We have similar problems with web two is disjointed experience. Our apps and networks has different identities and as far as we introduce new technology, new layer ones, new side chains, neural apps it became more complex. Nobody knows how much accounts they have, how much wallets they have. For sure there is no any direct link between different chains. Applications are not really decentralized because most of them are using centralized services.
00:03:48.760 - 00:04:38.438, Speaker A: Imagine you have something like an asset management system and you connected a lot of wallets there. And obviously everybody who controls this service they know they can create this link. What account do you own and you don't have any access to this data actually. And the biggest problem from my understanding is the lack of common services which we used to have in web Two. For example search. There is no any simple way to have to search on chain applications right now using on chain services and for example notifications like if you want to find what events happens with your assets, with your identity, you don't have this option. But imagine say Twitter without search and notification there is nothing to do there.
00:04:38.438 - 00:05:54.334, Speaker A: But this is how web three works right now. And Neur is representing now blockchain operation system which is common layer for browsing and discovering this new open web experience. And actually it's compatible with any blockchain. So Nier for a long time is doing not only like blockchain itself development, it creates a lot of features to enable simple onboarding now we have this fast OS, we have Login with Biometrics. Nier prepared a lot of developer tools to create really versatile applications and make it simple. And now we introduce this new idea of discovery layer which will give access to make search and find new applications and attract user by giving them some chat and social functionality notifications. And if you will see the scheme bring the best parts from web two and web Three.
00:05:54.334 - 00:07:03.380, Speaker A: Combine them together and build this as a fully decentralized in a fully decentralized way. So this is how it works actually. It has base layer of blockchain which is security layer, data layer and this is where near blockchain or Ethereum or any other blockchain sits. On top of it we have a data platform. Our engineers created a lot of we brought together different data sources. Think about it like combination of infuria different indexer databases and they are aggregated in a way which be easily accessible by any application uploaded on chain. And on top of it new concept which is discovery layer instead of siloed websites it has fully composable components written in a very simple language and they are giving the full web three experience right now.
00:07:03.380 - 00:08:35.886, Speaker A: Why Neural is doing it because it has very fast finality imagine some social network where you have to wait like 12 seconds until your like will arrive to the destination is not really realistic. New York has Sharding so it can really scale to billion users and we really have amazing functionality about account model with these functional access keys, with metatransaction, with guest accounts I will show it to you and probably you will be impressed. This is the concept how it works overall. So there are a lot of gateways where you can access this bos data, you can do it through the browser. For example near the official website of Nier blockchain now is this Bos gateway. So every data, every piece of data which you will find there every document like developer tutorial or maybe help or something all of it serves from the chain. There are partnerships with different wallets, different browsers for example in a browser you can put like coma and some component address that will load it for you and it is actually MultiChain as you can see here, you can connect any account like there is a data abstraction layer.
00:08:35.886 - 00:09:47.590, Speaker A: User don't recognize which blockchain is he using but if he has any wallet integrated injected into his gateway he will be able to read his data and obviously send transaction to the chain. Bos handles all this infrastructure management handles identity routing. It integrated popular libraries to give the developer simple developer experience. I have a screenshot of Neural.org right now so it has as you see different social media looks. I made these screenshots several days ago and if you will see on the right panel I have a bit different design just because I composed myself like a no code experience I just put some videos which I prefer to have there. We have quite a lot of users right now, quite a lot of components so this is near based experience but I will show now ethereum based development on Boss.
00:09:47.590 - 00:11:27.910, Speaker A: So great part about it it has a lot of GitHub like functionality because you can see the code, the source code of every component which you see which you use, you can see the name of user who uploaded it, when he uploaded it and even you can see for example the code div like what he changed and you can roll back and for example use the previous version of front end if you don't like new version of front end and for sure you can fork any component if you don't like it you can introduce your own functionality and use in your own way or maybe submit this functionality to the initial component. Bosser so speaking about Ethereum, we have different components like this is component to stake azers using Lidon. You can find it, you can actually see the code, how it works. There is an injected Azure JS library so you can read and write data in a way you're familiar with. There is also swap components, you can see how uniswap works like Pancake, like Quickswap a lot of networks are connected there. There is an abe component, there is a balancer actually it's quite straightforward. This is like a final theme how it works.
00:11:27.910 - 00:12:34.334, Speaker A: So user navigates through a different gateway to his user experience for example he can go to the internet or using his wallet, he selects which DAP he wants to use. Then there is a request to near blockchain and near blockchain returns some compressed JSX code. It rendered in the virtual machine inside the browser into the final user interface so user can interact with it. And as soon as he wants to send any transaction, he's using his from his browser, using his injected wallet. He can just create transaction and sends to the blockchain he is working with. Okay because for sure some hackers will want to use actually and we have price pool $10,000 for hackers who will build some applications during the hackathon. And I want just to show give you some initial experience how it can work.
00:12:34.334 - 00:13:42.180, Speaker A: So let me just open neo torque. So this is a social network and usually it should be faster. For example I can go to maybe from the beginning I can just like something so it will be on chain transaction. If I will refresh you will see my likes there. And if I go to the wallet you will see that it was a real transaction there. Maybe it's a bad example. Let me go to the profile this page what you see is a component is written on a JavaScript and I can go to discover and develop and view the code of this component.
00:13:42.180 - 00:14:43.512, Speaker A: So profile page let me open another screen. So there is several tabs like components I built NFT I own for example my followers. I can go back and I can go to the source code of this component. And for example I can go to the there is a dependencies what we are using. If I go to followers list I will see that there is a set of widgets which are running in a loop. And for example if I will copy this one and I will create a new component right now create a new component so now it's empty one and it will just return a hello world. I can remove this and put for example this account ID.
00:14:43.512 - 00:16:00.320, Speaker A: I will replace it, I will put a value for example root near and if I will preview you will see just an account of one guy who has actually named root near. Okay and maybe I can put another widget I prepared just example here for example we have a public text like another scan you can put any tag for any address. And we can put also example see the text of root NIV. So now you'll see his profile as I showed before and his public tags. And just to don't put this hard coded. Let me put it for example I can create in the top const account ID and I will read it from props is a wrap based way how you can get some values inside your components. So like account ID or by default I can put maybe some other component.
00:16:00.320 - 00:17:11.630, Speaker A: So now probably will see that like yeah another guy but let me now save this code publish it to the blockchain rename it data I'll put like that. So this will be the name of my component. So my component which shows user profile and his public text. Now I send blockchain transaction and if I create another application and I will return. Now widget widget. So how it works, first it is your new account, then world widget and then the name of the application. Yeah.
00:17:11.630 - 00:17:45.830, Speaker A: So now it shows I created application. And as it is, it can be used in another application. And you can just create this wave of complexity as you like. So somebody can just use it there and put his own data. Okay, speaking about Ethereum, I created an example. I don't have actually too much time. I can just go through.
00:17:45.830 - 00:18:39.908, Speaker A: I made an example how you can use for example wrapped Ethereum contract and see the balance of current user and wrap an unwrapped Ethereum and use different chains to do this operation. So at the beginning you need use actually you can host it somewhere or you can use it. For example, I just used a block scout using the API methods you can send any account address and receive API there. So then you fetch this API. Using azure. JS you can create an interface using this API and encode transaction to get balance of receiver. So here I put receiver.
00:18:39.908 - 00:19:17.208, Speaker A: You see it again reads from the browser, reads it from the Azure GS library which is using MetaMask or wallet connector or so. And this is my balance of this user in azers in wrapped ethereum. Sorry. And I put a button here which has event on click and it loads function unwrap. With this unwrap button you can read the balance which you want to unwrap. And in a similar way, you create a contract. Using azure.
00:19:17.208 - 00:20:05.570, Speaker A: JS you provide token ID which is contract of Raptor serum and Abi which we read above you have signer from the MetaMask. And then using this wrap ethereum contract, you can run any method which exists in API. In our case, it's withdraw and you just put amount of what you want to withdraw. So if you click this button unwrap, it shows you the MetaMask and it allows you to make transaction. So now, let's say we want to create the same application but for polygon Z Ksync. So this is the name of token wrapped Ethereum on polygazy kissing. I will copy this address.
00:20:05.570 - 00:21:02.210, Speaker A: I will paste it here. Now, it doesn't work because like this address does not exist on Ethereum blockchain. But if I switch to polygon sick network and if I switch to another account where I have some wrapped ethereum, let me refresh the screen. It was this wrong account I have here. So you see, it loads my balance from the polygon Zke EVM. And again I can click this unwrap button and it works. Now in Zke EVM, like the same code, the same functionality, but as you can see, just much smaller the transaction fee.
00:21:02.210 - 00:21:54.580, Speaker A: So, and this is the power of this kind of development. You can create like real blockchain agnostic applications. I hard coded here the address. But you can easily add similar code. For example, you just check chain ID and you can create wrap unwrap functionality on every network you want. And if you will for example create any other application where you need such a functionality, you can just use different code from another developer there. So let me now go back to Ethereum Mainnet and I want to show this.
00:21:54.580 - 00:23:18.600, Speaker A: So this is a LiDAR component. Again, you can see the code and you can fork it and you have API does work. So okay, sometimes it happens. So the code is there. You can contact near booth with your questions and use this way to handle a blockchain layer, security layer and create these unstoppable applications. I can give some example of how this can be used. For example, imagine if application like Tarpnada cache deployed on Bos and then at some point some regulator is coming and trying to close it using the court.
00:23:18.600 - 00:24:22.990, Speaker A: What can he do? He cannot remove smart contract from the blockchain because it's decentralized. He cannot write to the hosting provider because there is no any hosting, there is no any place you can send an email and ask to block this application. There is nowhere domain name to block. Okay, there is a way to contact gateway operator and ask them to blacklist some access to some URL but there are a lot of other gateways remains and user can easily launch his own local gateway. And in the worst case, like Last Hope, regulator can ask developer of this application to override his code with empty code. But in this case users can just throw back to the block height because as you know, the blockchain keeps the whole history for the whole time and just you can watch, you can actually see the UI even it was completely deleted from the current state of chain. Okay, so if you have any questions yeah, I will be happy to answer.
00:24:22.990 - 00:25:25.710, Speaker A: Maybe as a boost. Yeah, if I don't have time. So, once you build all that, how do you actually show it as domain to end user? The lighter thing you just showed, what do you type into your browser so an actual user can yeah, what is the routines here? If I go just to any application, this can be configured by any gateway owner. This is the way how you can configure a gateway. So first it has the name of the user who deployed this application and then the name of the front end. It rows like that and if you want I can just copy it and open on a different gateway. It will have the same application.
00:25:25.710 - 00:26:14.250, Speaker A: And if you don't want, if I'm not wrong, I can put something like embed and you see like without interface you can integrate this to for example to iframe or whatever. And just one thing to notice, I also participate in a lot of hackathons and usually hackers are deploying their front end server on Word cell or something and just in a very small period of time, those front ends just disappear because they became unavailable. And if hackers will host this on a similar way in a blockchain very cheap, but it will stay forever. Thank you, Vidim. That's all we have time for. Appreciate that.
