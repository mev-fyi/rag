00:00:06.330 - 00:01:02.480, Speaker A: Hi, my name is Eric Tang and I'm the co founder and CTO at Lifepeer. Today we're going to talk about building the Web Three creator economy. This is a topic that, you know, I've been thinking about for a while now. Back in 2015, I was a part of the team co founder that built this app called Wildcard. Wildcard was named one of the best apps in the App Store in 2015. And for this app, it really got me interested in the idea of content creation and content consumption. Back then, mobile was still just emerging and we really saw from kind of a builder's perspective the challenges and the interesting trends that came with building a consumer facing and content creation application.
00:01:02.480 - 00:02:12.146, Speaker A: And since 2017, we've been building Live Peer. Well, Livepeer is the world's open video infrastructure and at Livepeer we serve many video applications. And a lot of these applications are in the creator economy. For example, Beam is an application that started out in the film industry that helps filmmakers really showcase their work. And since then they have expanded to other types of content like video streaming for live streaming and as well as creating video gallery for creators, bonfire is another example that helps creator move from Web Two to Web Three. It's really around this idea of building a community and building a fan base for yourself. A Live Peer is also very popular in the Lens ecosystem, helping applications like Lens Tube or Orb power video streaming features.
00:02:12.146 - 00:03:42.354, Speaker A: So this is topic that we've been thinking about for a long time. And as well we've also been putting on events and content series with the goal of convening builders that really care about this topic as much as we do, to come and talk about this topic with each other and educate each other. For example, we hosted the Community Summit around a Creator Economy Summit at If Denver and it was sponsored by Polygon and Bundler and we had really great conversations there. So for East Tokyo, lifepeer has some exciting prices. I want to get that out of the way first. There is a total of $5,000 of price, all going towards applications that are building Web Three creator economy apps. We have $2,500 for the best token gated video streaming application, we have $1,500 for the best video NFT applications, and we have $1,000 for the best integration of Live Peer with another Web Three technology in the consumer space.
00:03:42.354 - 00:04:35.990, Speaker A: Live Peer is the world's open video infrastructure. It is the decentralized network that's consisted of many nodes around the world and all coordinated by a protocol that runs on the ethereum layer two blockchain. It contains many video specific features and today we'll take a look at what some of those features are. So here we are at Lifepeer Studio, which is the gateway service for the Life Peer network. If we go to the dashboard and we'll see there are a few different sections let's go into the Assets section. In the Assets section is where I can see all the video assets that have been uploaded before. For example, I can go in here and look at a video file that just has been uploaded.
00:04:35.990 - 00:05:13.698, Speaker A: I can come back here and upload a video asset. I can just go back here and choose one of the video assets that I have picked. For example, this waterfall video that we just saw. And here it'll be uploading. While the video is uploading and processing, let's take a look at some other features. Here we have the Streams feature and here is where we can go live in front of the audience. Let's go into this section and see.
00:05:13.698 - 00:06:04.286, Speaker A: Here is all the stream information and let's try to go live. Right now we'll go to Restream IO which is a popular in browser live streaming application. And of course you can also use applications like OBS or any mobile app that allows you to send out any RTMP connection. So now we're in the Restream studio. We're going to copy the ingest URL into this custom RTMP section and use our stream key which identifies uniquely the stream that we're about to ingest. So now that's it. I can go live in front of an audience and as this stream goes live in a few seconds we'll be able to see the stream.
00:06:04.286 - 00:06:40.310, Speaker A: So let's go back here and see. Stream is currently offline. It will become online in a minute. Here down here we have the playback URL which represents this stream. Here we can, for example, share the video stream either in the embed code or simply through a URL that we can share with anybody else. This is simply just a video player that's embedded in the web page. So now with that stream being live, let's go back to the video that we just uploaded.
00:06:40.310 - 00:07:38.910, Speaker A: This waterfall video we see. Now you can play it back, you can scrub around and again, you can even download the source file and again you can share copying a link. And we have this video in a browser. We can also export this video into IPFS if we, you know yeah. Here are the two big core features of Live peer right around video on demand streaming we call assets and video live streaming we call sessions and then streams. But let's go back and take a look at what other features Livepeer provide that's web three native and specific to, especially to the hackers out there. Well, around the video on demand, you can actually mint video based NFTs or collectibles.
00:07:38.910 - 00:08:57.518, Speaker A: We all know that when you mint NFTs, these data assets should be stored on decentralized storage. But there are challenges, especially around scalable performance when you're trying to stream video to a global audience. So here you can almost think of lifepeer as a video optimization layer that sits on top of the decentralized storage networks that allows you to still upload video assets into these networks. It can be gigabytes of videos and still use the same CID or Content hashes that you get back from these storage networks and mint your NFTs. But simply pass that address or that hash to the Lifepier player and Lifepier Player will be able to upload the video, transcode it, process it, cache it around the world, and make sure that video file can be streamed around the world. You can also do token getting access control of a video using NFT ownership to decide who gets to watch the video, for example. And these videos are all optimized for any kind of format.
00:08:57.518 - 00:10:22.530, Speaker A: So whether it's short form content, long form content, whether it's mobile centric consumption or desktop centric consumption, let's take a look at some of the documentation that allows us to build these types of apps. So we'll go to the documentation section, we'll go to the guides. Here are the developer guides. We can see. Here is the example of how we can upload videos video assets using the Live Peer SDK, which is a react hooks SDK that may look a little similar to something like a Wagme for people who are familiar with kind of web three SDKs. Here is an example of how to mint a video based NFT and even an example about how to play the video back directly from IPFS and still maintain really great kind of streaming performance. For live streaming, we see sometimes people build live streaming and NFT drops at the same experience, right? For example, rewarding your viewers for being at your live stream, watching it by dropping NFTs to the people who have linked their wallets.
00:10:22.530 - 00:11:01.230, Speaker A: We also see, of course, access control and token gating around live streaming. And a lot of people build mobile or desktop applications for live streaming. So we can also go back here and look at some of the live streaming specific documentation. Here's how you can create a live stream. You can of course play back a live stream just in the same way that you would play back a video on demand stream. Here's how you can add a player video player into your application. Here's how you can do access control for your live stream.
00:11:01.230 - 00:11:55.310, Speaker A: Another useful section in the Live Peer Developer Docs is the example application section. Here you can see a number of example apps. If you're building, for example, a NFT video based NFT app, you can check out this decentralized storage playback example that our Davrel Suhail has built. We've recently launched a really exciting feature around Token Gated video. So I'm just going to we've built an example application to kind of show off how this works. Let me show you really quickly here. We're uploading a video file, but at the same time we're also selecting a wallet that has access to this video and only that wallet has access.
00:11:55.310 - 00:12:50.590, Speaker A: So as we upload and video is getting processed once that's complete, we'll go and try to watch this video. And of course, now, since we've already connected our wallet, you can see we're able to watch this video because we have connected the wallet that's allowed to watch. And as we switch over to a different wallet, you will see that the wallet address change. When we try to watch the video, we're not able to access. So here is the GitHub repo for that demo application that we just saw with all the example code here and kind of how to get started. If you wanted to, you can just go to GitHub and search for live peer tokengated VOD. If you search for this, you will get to this page.
00:12:50.590 - 00:13:43.464, Speaker A: So with that demo out of the way, let's talk about what we're here to talk about today, which is the creator economy. So for those who are maybe not as familiar with the creator economy, this is a big trend that has been evolving in the last four or five years. What we're really seeing is the type of content that we're consuming, the type of engagement that we're engaging on. The Internet starting to shift from kind of a traditional Rails to this new economy. So here are examples. Like the consumers are desiring to watch content. Back then it was the MIT Open course or TV channels.
00:13:43.464 - 00:14:39.490, Speaker A: Today on the Internet, it's really about master classes or influencer content. But at the end of the day, the creators are really trying to do a few things on the Internet. One is to entertain. This is the footage from one of the largest virtual concerts in the world. And these creators, of course, are well known, super, super famous, have lots and lots of fans from around the world. The other thing that creators try to do on the Internet is to educate. So here's Salvin Khan, who is the founder of Khan Academy, which is one of the most popular kind of education platforms nowadays, started out as a YouTube channel.
00:14:39.490 - 00:16:19.152, Speaker A: And the third thing the creators are trying to do is to build a community on the Internet. So here we can see influencers turning into big brands, ecommerce brands that all revolve around community based ecommerce. The size of the creator economy is enormous and growing quickly despite the COVID slowdown of all other parts of the economy in the world. In 2021, the market size was about 56 billion and it's estimated that in 2024 it will grow to 24 billion. And this world encompasses many different areas, whether it's esports, whether it's education, podcasting or mobile game creation, the number is quite large. But if we look at actually the types of platforms that the creators are on, we'll see that a lot of the creators are actually just on YouTube, right? So YouTube is by far the biggest winner here. Although there are many emerging platforms that are coming up and trying to compete, we know that the opportunity in the creator economy is quite big.
00:16:19.152 - 00:17:20.000, Speaker A: But there are also lots of challenges that comes with this. It's very hard to break out as a creator. So there was a research that was done by the Tilt and it was found that content entrepreneurs usually average nine months just to see their first dollar and then they average about 26 months until they're able to earn enough revenue to support one person. Now that's a long time for someone to be able to just make a living. So that's probably the biggest challenge for creator these days. And the other challenge is that they don't really have control of their audience. Oftentimes creators are creating content on platforms like Facebook or Twitch where they're really at the mercy kind of at the algorithm.
00:17:20.000 - 00:18:28.536, Speaker A: Right? This was a survey that was done by Patreon and it was found that most creators actually feel they're screwed by large tech platforms and their algorithms. 70% of the creators that they surveyed feel that the social media platforms are putting them at a disadvantage. But also at the same time 60% say that they are reliant on those platforms to showcase their work. So that's quite a discrepancy. Right? They feel that they're not being well served, but at the same time also very reliant on the platforms that they're on. And it's a very unfair system. Right? From what we see here, substack is actually the most fair system in terms of the average revenue per year per creator have about $25,000, which is fairly low.
00:18:28.536 - 00:19:12.676, Speaker A: But if you look at the long tail YouTube for example, the largest creator platforms on average creators make fifteen cents per year. Right. Of course these are not every one of them is professional. But what we see over time is that about the top 1% to 5% of the creators end up making over 90% of all the profits. And so what are the causes of all these challenges? Right? It's hard to break out. Creators feel like they don't have control. The revenue distribution is very unfair.
00:19:12.676 - 00:20:42.100, Speaker A: Well, most of it is caused by a few factors in combination. One is that many of these platforms are advertising driven, right? So here what we see is the advertising revenue growth on YouTube, which has been very strong. So they're incentivized to continue to grow this number at basically any cause. And the second is the way that these algorithms work, right? So they optimize basically for engagement because in order to maximize advertising revenue they need to get people to spend as much time on these platforms as possible. So how do they do that? There's a few questions. The algorithm optimizes for whether someone will click on your video, whether someone will watch your video, and whether someone will engage with your video. And what happens here is most creators end up actually spending most of their time optimizing their content for the algorithm that their content is on, instead of creating good content that actually resonates with their audience, it's just that they don't really own their audience anyways.
00:20:42.100 - 00:21:57.390, Speaker A: And at the same time, because these large networks have been around for a long time and they have built up such a strong network effect, right? All of the users are on there and people are looking for content. All the creators are on there, people are creating content. It's very difficult to break that network effect and to compete with that. So what happens over time is a lot of these platforms become pretty stagnant and they don't really innovate as much and the feature sets are kind of just the same, right? And so all of these things in combination cause these challenges. So in Web Three, we actually have an opportunity to create a new wave of technology. So what we see here is that kind of the evolution of the different eras of web technology or communication technology. In Web One, we're mostly in a read only static content type of world.
00:21:57.390 - 00:23:46.140, Speaker A: Web two, we start to move towards more dynamic content sharing, social media, podcasting, messaging, all these application formats start to emerge. And in Web Three we're really moving towards a blockchain based technology, key technology core layer with communities and individuals at the center of this with dynamic content like videos, or blockchain based primitive like NFTs or even Metaverses. And the interaction model is really around services and ownership of the content. And this presents a lot of really interesting opportunities. I'm going to talk about a few of these opportunities. For example, one of the big shifts that's happening is blockchain is enabling us to move from a consumer app centric world to turn these consumer apps into kind of economic games, right? For example, NFTs now can be used as a tool for pre registering for an application or for a community. And this is actually becoming a lot more effective than just a sign up form because the expectation is that as you participate in an NFT Drop or NFT Mint, you actually have the opportunity to become a partial owner of the application or the community that's being formed.
00:23:46.140 - 00:25:17.340, Speaker A: As people start to do these pre registration around NFTs, the second steps usually revolve around content marketing to further build community support, right? So now we have a number of people that participated in the NFT Mint. The second step is to create dynamic community that's strong with lots of activity. So traditionally that's been done on crypto, Twitter or Discord or Telegram, but we have a whole new wave of platforms that's emerging around Web Three social with protocols like Lens or Farcaster or Cyber Connect. And this is all very fertile ground for application developers to think about how can they leverage these new emerging ecosystems to really help communities to form and for the individuals in these communities to create connections with one another. And finally, we have these kind of NFT factories concept. What does that mean? It's really around kind of continued drops of NFTs. So board.
00:25:17.340 - 00:26:10.168, Speaker A: Ape to mutant. Board Ape is a really good example. So Board Apes were kind of the first sets of 10,000 NFTs, and Mutants were the second set that kind of were. And I think the second set, if you own the first set, then you get priority into the second set. And there's kind of mechanics around how you can do this kind of best practice, industry best practices, actually, for a creator, you don't want to do more than five or six per year kind of for your community to really get along with it. There's also interesting mechanisms like Token Gating, we talked a little bit about before. For example, Stoner Cats is the first NFT animated series collection.
00:26:10.168 - 00:27:23.220, Speaker A: So you can only access the animated series if you own the NFTs. And it was created by Mila Kunis and Ashton Kutcher. These are kind of Hollywood celebrities. Another example that I personally really like is the UFO Club, and this is a podcast series. But you can collect these content. You can do NFT mint, and they kind of reward their community through these interesting game mechanics and NFT mechanisms. What I want to leave you with today is that the Internet is about 80% video, right? So as we think about building web, three applications that actually will be used by consumers on a daily basis, the video really comes to mind, right? And why is that? Well, it's because video is engaging, it's educational, it's illuminating, and it's empowering.
00:27:23.220 - 00:28:16.790, Speaker A: So I would really recommend you checking out Lifepeer as you're building your hacks here. Again, I will share the resources here. You can go to the Live Peer documentation and go to the Guides section to really take a look at what kind of applications you can build. And the other thing that you can do is to come to join our discord, just click on this link. You can go to the Builders Help section, and our team will be there supporting you through the hackathon and beyond. And right now, I want to pass it over to our devrel engineer Suhail, who will be giving you a tutorial on how to build a simple video streaming application with Live.
00:28:17.320 - 00:29:03.024, Speaker B: Well, in this workshop, we will be using Livepeer JS, which is the JavaScript k for Livepure. It makes building with Livepeer very easy. If your project is not made with the React framework, you can easily use a Life pure API, the rest API, it can be used on any language or framework you. So now for Livepier JS, the first thing you need to set up an X JS application, which we'll be doing now, and then installing the library. You can open up the terminal and then go to the directory which you want to create the application. In my case, I'm going to desktop. And here we can create NPX, create a Next application, and IP app and this will create the NextJS application.
00:29:03.024 - 00:29:28.344, Speaker B: We don't want with TypeScript then we want with Slint until the next JS application is completed. You'd want to also go to Livepier Studio to create an account and get an API key. And yes you carry your ham here. You should see a sign up button here. You can go ahead and sign up with your email and password. The thousand transcoding minutes is completely free so you don't need to pay for the first thousand minutes. But once you come here you will see the dashboard.
00:29:28.344 - 00:30:16.230, Speaker B: Then you can go to developers here and click on create an API Key and give the API key a name. In my case it's going to be SVM Workshop. You can also allow cores if you want but it is not necessary if you're not using it on your front end. Once you have it, you can grab this API key. Save us some places because you will be need this later. Now coming back here the Nickjs application is installed and now we can go to the next JS directory that is Life Pure app and install lithpure package here. We can also open the application into Vs code but you can use any other VCode editor that you prefer.
00:30:16.230 - 00:31:32.750, Speaker B: Yep, the Lifepier package is now installed and yeah so the basic would be to follow the Live Peer guide and from here you have everything on how to set up in your Nickjs application. And the first thing that you'd want to do is initiate client. So here in the pages and then in spite of app JS you can create const client is equals to beta react client. And finally you need to put your Studio API key here. You also need to import react client and studio provider and also Lifebeer Config from AddLife. And at last we need to wrap our application with a Lifepeer config. We can do it like this and finally bring this component here.
00:31:32.750 - 00:32:22.960, Speaker B: Save it and yeah, that's it. Now the Live Peer is basically integrated into our application and now we can use Live Peer into our next JS application. So the first thing that you would want to do is this opening a terminal and run yarn diff in order to start the next JS application. And then you can go to localhost 3000 and yeah, this is a sample linkjs application which we'd be using now to add our Life Peer code into it. So you'd want to clean up this code completely and just have it h one Life Pure app. Yes that first. You can also remove the imports from here for now.
00:32:22.960 - 00:33:00.758, Speaker B: You can also remove the styling. Oh yeah, we can keep it for now but yeah, we have the Life Pure app here. So let's go back to the styling. And now in order to test whether the Live pair is successfully integrated or not, we can just use a use asset to check if everything is successfully integrated or not. Now we can say use Asset hook and here you need to put the asset ID. Once you upload an asset whether through the API or CDU or also SDK you will get an asset ID and then we can use that one to fetch the asset. Here in my case I want to fetch this asset.
00:33:00.758 - 00:33:45.262, Speaker B: This is the ID of it or even you can use this one. And here we need to put this here. And finally we can just say console log asset or we can just print it here. Let's do it here descent ringify asset and if you come back to the application you can see it's printed here. This is the ID of Asset, the hash how it was uploaded, when it was created and finally the playback URL. So it means that we have successfully integrated Livepeer JS into our application. So now we'll go to how you can upload a video to the Livepeer.
00:33:45.262 - 00:34:47.230, Speaker B: And for that we would be using Use Create which is very similar to use Asset and use Create Assets. So here you can import, use, create asset from at livepier react. And here we can name from Asset input type is going to be text and then place order enter the name edit. And here also we can create a few states in order to save the value from the input. We can give it name set name is equals to user state make sure to import user state from React. And here we are going to also have another input and this is going to have a type file and it's going to accept the video. And finally we can also put the on change here.
00:34:47.230 - 00:35:56.196, Speaker B: Once the person has selected the video we can get the file and set. Let's create one more here const video set video user set and here we can say Set video Pirate. We also should add an on change here in order to save the value of the input to the state. Once it is done it should look like this. For now we are not going to focus much from the styling here a simple styling should work margin life. And finally here we need to add a button that would be Create Asset that should work. And here we can say on click handle upload and here we can come here and create a new function const and upload and yeah that's it.
00:35:56.196 - 00:36:32.700, Speaker B: We have declared a few states here for name and for the file a function that would be used to handle the media upload and finally two input components and one button. For now we can console lock both name and video to see if both of them are saved successfully. And once we have that one we would be using Use Create Asset. So here I'm going to type it something and choose a video file. Click on open, create, asset. You can see we have both the name and file which means it's working fine. And now we have to use the use Create Asset.
00:36:32.700 - 00:37:41.814, Speaker B: We can add it here and say const is equals to use Create Asset and inside of use Create Asset we can pass the video so we can say if there is a video we would want to pass sources. It should be in a form of array and you can also upload multiple videos if you want. In our case we just want to upload one video. We can say name is going to be the name and finally file is equals to video and if name video is not there here we can just render null and inside of here we can add Create Asset. We can get the data from it once the asset is uploaded we can also get a status, we can get a progress and finally error if there's any. And finally now on the handle upload we can call the Create Asset function. Now let's refresh this page, let's give it the name.
00:37:41.814 - 00:38:35.510, Speaker B: For example Test Video, click on choose File, upload the video which you want and then click on Create Asset. Now this should create an asset for us. Now let's come back to the live Beard studio. Go to asset. You can see this is the test video which the video is currently processing but it means that the video is now uploaded to the Live peer and yeah, that is how you would want to upload a video to the live peer. And in the Live Peer JS documentation you can also go through different examples with different hooks such as Use Asset Metrics, use Update Asset and lots of different options. And yeah, that was the example of how you want to upload the video to the live and just have one more example on how you can play a video that's already stored into IPFS using Livebeer Player.
00:38:35.510 - 00:39:07.810, Speaker B: So Lifebeer playware player provides easy to use component to display both video and audio. That's going to be very easy. So let's first remove all of the code which we have already here. But yeah, this is the code which you want to use for uploading the video which we have seen here and I think you can see the video is also now uploaded and it can be playable. The video which I have uploaded is a very bad quality because I just wanted to upload it very faster. But you can upload anything you want. This was just an example video.
00:39:07.810 - 00:39:38.282, Speaker B: Yeah. Now, in order to use the player, we can just remove this o code here and just add a dev tag. And inside of this, you can add player. And this player would be imported from at live slash, react. And now in this flip player, you can play an asset which is already stored on live peer CDU. You can play IBFS hash, you can play from RV Transaction hash and from. Other places.
00:39:38.282 - 00:40:06.920, Speaker B: So in this example, maybe we have this video, we can play it using the playback ID. So here we can just give it a playback ID and then put the playback ID here. We can also give it some stylings names, team, et cetera. But for now we can ignore that one. So let's come back here. And now you can see we have the video player. And if we click on Play, it should now play the cat video which we see here.
00:40:06.920 - 00:40:34.590, Speaker B: And yeah, let's play. Now just to make it let's make it a little bit smaller. We can say style width to be probably 70% and yeah, that's fine. And this is the live viewer player. Now, the asset which we are currently playing is already stored to the Live Peer CD. But if you want, you can also pass here IPFS hash and that should also work. For example, it will be IPFS.
00:40:34.590 - 00:41:11.400, Speaker B: And here you would want to put the IPFS hash. It does not depend whether your video store it on the IPFS or like W Three Storage or any other places. It would automatically play it. For example, if you go to D storage and here we have a few videos that stored in both IPFS and ARV. For example, this is the video. I can just copy the IPFS hash here and come back to our application and put the hash here, save it. And now if we come here, basically the video should play and yeah, let's play it.
00:41:11.400 - 00:41:29.980, Speaker B: You can see the video gets played and you can also play. Yeah, that's it. Thank you very much. But yeah, this is a pre recorded workflow. If you have any questions or anything, feel free to DM me on Discord or join us at Live Pure. Discord can add on the CD support.
