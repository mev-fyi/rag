00:00:07.130 - 00:01:26.690, Speaker A: So my name is Andrew Schmidt, I also go by DeFi Swarton, just about everywhere and I am a full stack developer and also developer Relations Engineer at Avara, formerly known as Aave companies. Rebranding yesterday. So the first question that I'd have liked to pose to set off this entire presentation is why do we actually use distributed ledgers? Why are we not at an Amazon Web Services conference just building these super scalable databases? And it's because the databases that we're trying to build with are the foundation of agreements, agreements with these properties that they're open, neutral, self custodial and verifiable. And now if you take a look at decentralized finance, why are we trying to build these applications on these networks when we could be making them 10,000 times more scalable? And it's because we're trying to fulfill these certain agreements with the same properties of the networks that they're built upon. So forming financial or custodial agreements which are open, neutral, self custodial, meaning you own the assets which you actually have in your wallet and verifiable meaning you actually have traceability and transparency about every single step in the process. And so, with that in mind, let's look at two specific things for this presentation the Ave Protocol and the Go stablecoin. So, a high level overview of the Ave Protocol.
00:01:26.690 - 00:02:13.026, Speaker A: There's mainly three actors within the system. You have suppliers who are addresses which are providing liquidity, receiving a tokenized representation of these assets, and then they are earning yield and also can be used as collateral. And where this yield actually comes from is entirely traceable on chain. It comes from borrowers who are drawing this liquidity based off of parameters which are set by the Aave Governance and are also based on the collateralization. So every position within the Aave Protocol is over collateralized. It requires that in order to borrow a certain amount, it must fulfill the collateralization parameters set by Governance. And also that the Oracle price for both the supply asset and the borrow asset fulfill these requirements.
00:02:13.026 - 00:03:18.042, Speaker A: And then the third actor in this Verifiable system is the liquidator. And this means that there is sort of this gap between when a position is under collateralized and over collateralized, where the user is under the minimum collateralization requirement and somebody is able to come into this system and repay their position and then seize a portion of their collateral plus a premium. And this incentivized, this means that there is always an incentive to liquidate a position when it's in this window between being still over collateralized, but under the minimum collateralization that Governance has provided. And then we have go. So Go is a stablecoin native to the Aave protocol and we'll see exactly what that means on the next slide. But the high level overview is that it's governed by the Aave Dao. So all deterministics about its supply, about its usage, utilization, are all based on decisions made by the Aave Dao and the first thing that you really need to know about Go is that the Aave protocol is not just built into Go.
00:03:18.042 - 00:03:53.922, Speaker A: It really is the central thesis of Go that the Aave Dao and the Aave protocol are the primary facilitator of Go. So I mentioned the word facilitator a couple times. What does this actually look like? So Go at the top here. If you actually go to Etherscan and look at the Go token contract, it's actually a pretty simple contract. And it has this model called Buckets, where an address can be designated as a bucket. And it has two different fields, the capacity and the level. The capacity is a parameter set by Ave governance which decides how much go is this address able to mint.
00:03:53.922 - 00:04:29.330, Speaker A: And then the level is how much Go this facilitator has minted already. So at the launch of Go, it initially has two facilitators, the Ave facilitator and the Flash Mint facilitator. These were both approved by Ave governments. Given a certain amount of Go that both of them are able to mint. And we'll dive into exactly how the Ave facilitator is able to mint Go. The next slide. And we also have these sort of theoretical facilitators with the Peg stability facilitator and basically any other type of Minting model that can be facilitated on chain.
00:04:29.330 - 00:05:21.710, Speaker A: So how exactly does Go interact with the Ave protocol? I said that it was sort of native to the protocol, but what does this actually mean as a developer, as an integrator? So this is a function which you might be familiar with. This is the standard borrow function of Aave. Whenever you would like to borrow a token from the Aave protocol, this pool contract is the sort of the central hub for all Aave interactions. And you're specifying the parameters that you would like to use for this borrowed transaction. And the thing about Minting Go is that it happens seamlessly within the protocol. So if I would like to mint Go, it actually happens through this exact same borrow function. The only difference is that I'm now passing the Go address and whereas in the left box, if I wanted to borrow wrapped Ethereum, this is borrowing assets which other people have supplied to the protocol in their over collateralized positions.
00:05:21.710 - 00:06:12.606, Speaker A: Whereas when I'm borrowing Go, I'm not actually borrowing somebody else's liquidity, I'm actually creating this liquidity by using the Peg stability facilitator. I'm underlying this call, it's calling Mint and actually issuing the Go token. And this creates some really interesting dynamics and possibilities for what Go is able to do. And sort of the basis of this is how the rate mechanics work. So to first cover how kind of the base Ave protocol handles rates, most assets follow the same sort of trajectory where the rate which is paid to suppliers and to borrowers is determined programmatically. It's a function of a couple different parameters. The main ones, which are set by the Abe dao are to basically define this curve, the minimum interest rates, the optimal rate, and sort of the slope at which it increases.
00:06:12.606 - 00:06:53.150, Speaker A: And then based off this utilization ratio, which is the percentage of the asset which is currently borrowed, it moves the interest rate up and down to either incentivize liquidity, incentivize repayments. And this is sort of the central mechanism by which Aave regulates kind of the rates of the markets. But go operates a little bit differently because it does not have the concept of a total amount supplied. It can only be borrowed within the protocol, at least through the Aave Facilitator. So it works a little bit differently because it's minted. The borrow rate is directly determined by Ave Governance. And there's also this additional parameters for the discount mechanism.
00:06:53.150 - 00:07:46.874, Speaker A: So the borrow rate, there's a base borrow rate and then there's also a discounted borrow rate. And kind of the way that these parameters work is that the Ave Governance decides essentially what is the minimum rate that is able to be borrowed at. And then based off of that, it sets how many go are able to be borrowed at a discount. So for example, with these parameters, essentially it says that for every one stake Dava you have, you are able to borrow 100 Go at this discounted rate. As I mentioned multiple times, these parameters are all determined on chain through community governance. So they're voted on on proposals which are then executed as code and then reflect these parameters for all users of Go simultaneously. And there's also a helpful calculator if you ever wanted to see exactly what these parameters look like at different rates, different amounts.
00:07:46.874 - 00:08:35.398, Speaker A: And now let's talk about the Go stability mechanisms. This is very, very hot topic, both within the Aave community and also the DeFi community at large about regulating stablecoins on the context of stability. And I'll kind of break this into two separate things. You really have the collateralization stability and then the price stability. So when it comes to collateralization, the Ave Protocol takes a pretty firm stance on this, which is that within the Abe Protocol, the go price is fixed at one USD. Now, this does not mean that the price of the Go token is fixed to one USD. What this means is that anytime you would like to create a new go borrow position to repay or to liquidate a Go position, it does it with the basis that the Go token is valued at one USD.
00:08:35.398 - 00:09:32.670, Speaker A: How this works in practice is this effectively sets a collateral floor for Go, which means that even if the Go price on an open market may fluctuate, that within the Ave Protocol, it must always have at least one USD of collateral backing. And it sort of does this through the system of Oracles. So every supply asset and every borrow asset has an Oracle within the Protocol. And essentially by fixing this price to one USD, within the Go Oracle, it says that relative to every other asset that I'm supplying is collateral. I must have one USD based on the Oracle of collateral as it compared to go. So this leaves the question, how does this translate to the actual open market price of go? And this really happens kind of outside of the Dao framework through the minting and redemption. Essentially, why are people minting go? Why are people repaying or withdrawing go? And it happens for a couple of different reasons.
00:09:32.670 - 00:10:40.634, Speaker A: You have sort of interest rate management. These factors which, if I'm paying a higher or lower interest rate, both within the protocol or compared to some other place that might incentivize me to borrow more go or repay go. And then you have this exchange liquidity, which is really kind of the core issue of go redemption, which is that if I have one go inside of my wallet, I need to actually be able to do something with it. And that's really a really core thesis of this presentation, is how to provide these applications which are actually able to utilize go for an actual real world purpose or a DeFi purpose. And there's also this Peg Stability facilitator, which is essentially a facilitator module which would allow one to one minting and redemption against certain assets. But this does kind of operate under the assumption that you need go within sort of a certain price range to make this feasible in order to maintain that you have the proper liquidity of all of the other assets within the facilitator. So it works very well to keep the price of go pegged above a certain value.
00:10:40.634 - 00:11:38.010, Speaker A: It will take a lot of maturity to actually get a solid collateral base to make sure that it has that one to one redeemability. But there's definitely optimistic and very innovative thinking inside of the governance forum about how to address these different problems with coordination. And I will get to actually how to build these TFI applications. And really, if you're building a hackathon project, I think one of the most important things is to try to embrace the values of the distributed ledgers which these things are built upon, building these verifiable self custodial applications which actually maintain these properties. And the second is actually improving the experience layer. There's kind of a tendency of hackathons to try to invent new primitives, and there's definitely a place for innovation and redefining what DeFi can be. But there's also a very, very huge opportunity in just improving the experience of current DeFi.
00:11:38.010 - 00:12:44.026, Speaker A: And I really like this kind of framing it that you're trying to address a cold start problem with a hackathon project. Essentially, the success of a new project can really be defined by how many users are you actually able to get a stable and engaged user base in the shortest amount of time? So how are you able to build this atomic network? And really, I think the way that you sort of achieve this is by focusing on this experience layer, what can I build which actually provides a tangible benefit to somebody today? And we'll look at the Aave prizes in a second to see exactly how to do that. So the highlights of kind of this link tree for how to integrate the Aave protocol is that we have this really nice Aave address book which lets you embed basically all of the addresses within your contracts. And the most important contract to be familiar with is this pool sol. This is where basically all of the core functionality happens. There's obviously a lot of periphery contracts for logic and tokenization, but when it comes to actually interacting with the protocol, all of it happens through this one central entry point. And then there's also this Ave utilities.
00:12:44.026 - 00:13:26.974, Speaker A: It's a JavaScript SDK for fetching data formatting data building transactions. It just makes your life a lot easier than having to manually import, abis and do all of this work. And then we also have a lot of other great links to documentation and resources inside of that link tree. And specifically for this hackathon, we have two prize tracks best go stablecoin integration and best ave dao tooling. So for best Go stablecoin integration, really the key purpose of this is to increase the adoption and understanding of go. So this is very open ended, but some ideas for things within the Dao that have been hot topics for Go are different payment use cases. Things which will actually generate organic demand for go.
00:13:26.974 - 00:14:25.870, Speaker A: Currently most of the utility of Go is using it for other DeFi applications, other liquidity protocols, supplying to decentralized exchanges, and there's definitely a lot of room for innovation here with different locking mechanisms, different types of supplying Go to different types of smart contracts. And this will definitely get even further increased once Go is hopefully launched on other networks. We're able to do more complex things. But even with Go being only on ETH mainnet, there is still a lot of room to innovate in this regard. And then the second is Ave Dao tooling which is contributing new functionality. This could also be integrating into an existing piece of smart contract code, analytics, visualizations or any type of creative application which benefits the Ave Dao ecosystem. And really, I want to put the emphasis here on creativity, because so much of DeFi today is a lot of recycling.
00:14:25.870 - 00:14:54.930, Speaker A: It's a lot of focusing on the yield and not focusing on the underlying what is actually happening inside of the system and any creative way to interface with this or highlight the different mechanisms that make DeFi unique, that make it something that's worth building upon. That's really the type of applications which the Abedao is looking to highlight and yeah, so I'll just put this back on through again at the end. But yeah, let's stand up presentation.
