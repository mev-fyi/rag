00:00:00.650 - 00:00:10.522, Speaker A: Okay, well, we'll just take it away then. Want to introduce Vitalik who needs no introduction. His talk is about scaling Ethereum in 2020 and beyond.
00:00:10.666 - 00:00:12.078, Speaker B: And I'll just let you take it.
00:00:12.084 - 00:00:13.662, Speaker A: From here be, thanks very much.
00:00:13.716 - 00:00:49.478, Speaker B: Excellent, great. Just checking you can hear me, you can see on the slides fine, everything's great. Okay, great. So, hello everyone on good to be speaking to wonderful Ethereum people again. I'm definitely sad that I can't see you in person. Hopefully we can fix that up next year in August in Bogota, as apparently got announced overnight a few hours ago. But today I'm going to be speaking about some ethereum scaling.
00:00:49.478 - 00:02:06.022, Speaker B: So basically taking a look at where we are in terms of our ability to scale, where we are in terms of the need to scale, and just what the realistic paths are that we can take to get there. Right, so major piece of good news is that roll ups are here, right? So I'm sure many of you have tried doing Gitcoin grants using ZK Sync as a payment option, and it actually works surprisingly conveniently, right? When you go through the Gitcoin checkout thing to do your quadratic funding donations, you just select Checkout with ZK Sync and you have a couple of sign ins. And if you've never used ZKsync before, you need to send one transaction basically just to kind of top up your ZKsync account as part of the process. But if you've already done that, then you don't need to send any transactions. You just sign these three cryptographically signed messages. So basically MetaMask signs some data that's not a transaction and then that gets included as part of the ZK roll up. So the transaction fees are really low.
00:02:06.022 - 00:02:38.622, Speaker B: It's like basic for the ten sends over here. It's somewhere between 102 hundred bytes on chain. It costs much less than even a single transaction. Really nice and really fast. Loop Ring ZK roll up based decentralized exchange. It's existed for a while, it also has a built in payment system. So if you don't care about trading one random crypto token for some other random crypto token, you can just use loop ring to pay people.
00:02:38.622 - 00:03:17.926, Speaker B: And I've actually used loop ring to receive money myself. I paid for lunch for a group of people and one of them was kind enough to unsolicitedly pay me back for his share. I'm just directly inside Loopring, which was really cool. And the transaction fees were pretty negligible. As expected. Diversify starkware based stark based decentralized exchange using Starks. So this is trusted setup, free quantum proof and all of those things, or at least potentially quantum proof.
00:03:17.926 - 00:04:06.058, Speaker B: I don't think they use the internal signature algorithm as quantum proof yet, but this has also been seeing quite a bit of usage. OMG. So who here has heard of plasma? Who here has kind of quietly forgotten about plasma? Well, plasma is back from the grave and it's going strong so if you go to OMG network, they have a wallet over here and it's not a roll up, it's a plasma. But it's still a scaling solution, it's still crypto economically secure and all that and you can use it. And finally, optimism. The optimistic roll up project launched a tested and Synthetix is running a test on it so you can go and use it. So roll ups are here, but they're not completely here.
00:04:06.058 - 00:04:50.250, Speaker B: Right? So most activity that's being done on ethereum is still being done on the ethereum layer one. These three roll ups are just payments and decks. ZKsync is literally just payments. But optimism is supporting full EVM smart contracts. So you can just kind of click a button and redeploy your contracts to it. And it is a test net now, but they have plans to move over to being a main net soon. Starkware, I should mention, they have this project called Cairo and they've been starting to compile solidity contracts into a Stark, which is just really amazing.
00:04:50.250 - 00:05:20.734, Speaker B: So a lot of progress even on that front. Phase zero is almost here. So ETH two yay. The first phase of ETH two is very close to being here. The Medasha testnet has been running for a while and we've had Spadina as a kind of a live test of the launch process. We're going to have forget the name of it, Zinc, as another live test of the launch next week. So clients are doing really well.
00:05:20.734 - 00:05:58.862, Speaker B: A lot of efficiencies coming in, a lot of bugs getting fixed and the bugs getting smaller and smaller each time. So phase zero is almost here. So a lot of progress happening. And at the same time, there's a big need for this stuff. And the reason why there's a big need is because, well, demand for using ethereum is really high. A lot of people want to use the ethereum blockchain and there's just not enough space in the ethereum blockchain for everyone. So how is that getting resolved? Well, right now it's getting resolved by gas prices going really high.
00:05:58.862 - 00:06:38.700, Speaker B: Right. And at the start of the year, gas prices of like maybe two to five GWe were pretty common. But today, if you go to gasnow.org right now, I think I'm not going to check now, but last time I checked yesterday, it was somewhere between 51 hundred and a couple of weeks ago it got all the way up to about 700 or so. Right. Gas fees are crazy. I tried out making a trade on the Auger prediction market a couple of days ago and the transaction fees were to make that one trade were a total of $17.76.
00:06:38.700 - 00:07:41.262, Speaker B: So it would be nice if sending transactions was cheaper. The only way sending transactions can be cheaper is if we have more scalability. So how do we get more scalability? Right. So this is kind of the path over the next one to two years that I realistically. See, basically right now we have the Ethereum layer One and it has somewhere between 15 to 45 transactions a second. So the 15 number is just to look at current usage. The 45 number is if everyone stopped caring about smart contracts and just sent 21,000 Guay and of simple transactions 1000 to 4000 TPS, as if you go to roll ups on top of ETH One, right? So if everyone moves on to roll ups, whether it's ZK roll ups or optimistic roll ups, then you get up to about 1000 to 4000 transactions per second.
00:07:41.262 - 00:08:49.510, Speaker B: Each transaction only requires somewhere between 300 to 1000 on chain gas. So the 4000 number is for either simple sends or simple trades or anything that can be fit into about 15 bytes, which is a lot of things. And the 1000 number is if you go up to about 64 bytes which is where you need to go to to do a ZkZk roll up. So you can even get 1000 DPS with privacy potentially if you do a ZkZk roll up. So this is using technology that's basically either out there or almost ready today. And then this number crazy number 100,000 TPS for relatively simple transactions and 25,000 TPS for privacy preserving transactions. And this is roll ups on top of ETH Two, right? So when you have ETH Two and then we have Phase One that adds Sharding of data on top of ETH Two, then roll ups on top of that have a much larger amount of data to work with something like two megabytes per second.
00:08:49.510 - 00:10:42.298, Speaker B: And that's at the beginning, I expect it'll go up even beyond two megabytes per second over time. And so on top of that data you'll be able to do a huge amount of transactions and basically just combine the Scalability mechanism of Sharding with the Scalability Mechanism of Roll ups and you basically have enough capacity on ethereum to get pretty close to being able to run the entirety of WeChat on the thing if he really wants to or something like that. So the question is what can we do to adapt to this reality? I think my first major point is that this is a reality, right? I think if we want to have an acceptable user experience for users, there isn't really a choice per se, right? Like roll ups are basically the only technology that's there ready to scale Ethereum applications from their current level of scalability to something 100 times greater without compromising on the security, right? You can have your side chains with your two way bridges but for any of those systems, obviously you have to trust whatever committee actually runs the side chain. With roll ups, you don't have that problem. So roll ups are basically the only path that, as far as I can tell, is just there to allow for this scalability improvement that we really, really need and we really need today. And so the only question basically is what can we do to adapt to it? And the biggest part of the answer basically is that we need some kind of comprehensive ecosystem level push to improve user experience. And in user experience, I'm including security, right? It's never user experience versus security, it's user experience of security.
00:10:42.298 - 00:11:46.798, Speaker B: So improving user experience of security for layer two protocols, there's a few pieces to that puzzle. So first of all, wallets. So if you go back to this ZK sync inside of Gitcoin, it's not the best, right? And the reason it's not the best is because the ZKsync thing is being kind of instantiated inside of the Gitcoin web page. And so if Gitcoin was evil, then Gitcoin could just make a fake ZKsync sign out page and basically ask you to sign into ZKsync and you would sign in and they would be able to just steal all the assets that you have inside of ZKsync, which is not very nice. The correct approach to solve this problem is that the support for optimistic roll up and ZK roll up and plasma needs to be pushed up to the wallet level, right? So MetaMask needs to include native support for ZK rollups, optimistic rollups and plasma. Some status needs to do the same thing and Im Token needs to do the same thing. The wallets need to all do the same thing.
00:11:46.798 - 00:12:33.530, Speaker B: And this requires quite a bit of work. I think we can mitigate the amount of work that this requires if the layer two providers write some kind of plugin and standardize on some kind of plugin solution. But these are discussions that need to be had. ENS is another major one. So ENS is amazing, right? Lots of us use ENS. I even used ENS to pay someone a few weeks ago. So we need ENS to work not just on layer one, but also on layer two and smart contract languages.
00:12:33.530 - 00:13:53.014, Speaker B: So zooming in on some of these wallets. We've already talked about this ENS, you need to be able to register, administer, transfer and renew domains entirely inside of layer twos, right? We're talking about an ecosystem where users are in general going to be living inside of layer twos, right? If we talk about using ethereum to go up to 4000 TPS on layer twos, then what that means is that average users are not even going to have a quote account on layer one, right? Average users are just going to be living on layer two. And so ENS name resolution needs to work, even for names that are registered, transferred, renewed, administered, everything happening to them entirely inside of roll ups. And I have a proposal for this. There's the link, and if you don't want to manually copy the link, you have this fun little QR code thing that you can scan. Hopefully people are familiar with QR codes by now. Basically it's a kind of general purpose proposal that allows resolution of ENS names and more generally, static calls inside of arbitrary layer two.
00:13:53.014 - 00:14:40.098, Speaker B: So this would allow both ENS and a lot of other applications to kind of live inside different layer twos and not even have to standardize on a single one. Pretty seamlessly and smart contract languages, right? So we have kind of three different tiers of languages in the Ethereum ecosystem. The first tier is low level languages. So the Ethereum L one has the Ethereum virtual machine EVM optimisms, optimistic. Roll up has the OVM, which is basically a subset of the EVM that restricts operations that break out of their sandbox. Stark wars, Cairo. They have their own arithmetic and immediate representation and like, fancy blah blah blah, math, finite field Stark.
00:14:40.098 - 00:15:35.654, Speaker B: If you want to learn more, go read the blog posts. And so we have a lot of these different compilation targets, and at the same time, we also have high level languages, right? We have Solidity, we have Viper where we have Serpent, we have Mutan, we have Ll, we have Bamboo. And there's this big long tail of other ones that people haven't heard of. So we have a lot of high level languages, we have a lot of low level languages. And it would be really nice if we could have a common intermediate compilation target that's easy to compile to and that's easy to compile from. And so Yule is the thing that Solidity already compiles through. And it's one option, and maybe there's other options, right? So this is another thing that probably needs to be kind of talked about and standardized through the ecosystem economic benefits.
00:15:35.654 - 00:16:59.202, Speaker B: So this is an interesting and fun kind of corollary of a layer two centric roadmap, right? So, so far I've been talking about needing to make this coordinated ecosystem push for people to move to layer twos, basically for technical reasons, right? Right now we have 15 to 45 transactions per second. People want to do a hell of a lot more than 15 to 45 transactions per second. The technology that lets people do that with Ethereum level security guarantees is roll ups. And so we need to move people into roll ups. And in order for that to happen, all of the infrastructure that currently exists to make life easier for people on layer one needs to also work for people who live inside of the various different layer twos that are starting to come into existence and are going to keep coming into existence over the next year or so. But there is also this interesting kind of economic benefit, right? So Ethereum in general has a public goods funding problem and it arguably has a problem kind of attracting creative researchers and developers to help with the scaling process. There definitely is a strong team.
00:16:59.202 - 00:18:33.282, Speaker B: And Justin is great and Danny is great and Dan Grad is great and Chaway is great and a whole list of people that I'm going to offend by not mentioning their name are all great. But there's also this very large set of researchers and developers who, I think, first of all, just feel more comfortable and kind of want to kind of have the freedom to build their own island and not just be a small piece in a big ecosystem and have to debate with everyone else over every protocol change. And also from a funding point of view, core development is currently funded just by the Ethereum Foundation. The Ethereum Foundation has a kind of one time limited pool of funding which is totally fine for the next few years or so. But what's the long, long term sustainable solution? And layer two projects have much more leeway than Ethereum in both of these dimensions, right? If you create a layer two, then you as a researcher, developer, founder, have the ability to kind of build your own island, so to speak, and experiment with a lot of different options and kind of come up with your own path of various different improvements. And at the same time, layer two projects have the ability to monetize, right? So layer two projects have the ability to fund themselves by making mev auctions. For example.
00:18:33.282 - 00:20:00.378, Speaker B: This is something I've talked about. They can charge transaction fees for state rent and there's a lot of things that they can do. And layer two projects could either charge for these things directly and they could potentially do the token thing and create one of these decentralized community tokens that gets backed by future transaction fees collected by the system. There's a lot of things that they can do. And so basically, if the Ethereum roadmap has a kind of big space in it for layer two projects, then the Ethereum Ecosystem and a lot of these other projects can kind of align instead of competing, right? It's not are you part of Ethereum or do you build your own thing? It's no, you can be part of Ethereum and build your own thing. And so as a layer two you have a huge degree of economic and technical autonomy and lots of opportunity to do things. So this is the short term, right? And I think the short term is at least my impression is that we don't really have much choice except to do this basically just because we need scaling and roll ups are the technology that's here and we have done our kind of due diligence and we've done this huge exploration of the entire scaling space.
00:20:00.378 - 00:21:13.634, Speaker B: We've looked at plasmas, we've looked at channels and plasmas are going to continue to be used and plasmas are great and channels are going to be continuing to be used in their particular context. Some channels could even be used for things like moving between different roll ups and plasmas quickly, but still out of the kind of design space that we've explored. Roll ups make up this kind of really big part of it, especially for applications more complicated than payments and even for payments kind of layer twos of some kind are the thing that we need to be making this coordinated effort to start moving toward. But this is the long term, right? And this is the more controversial part of my proposal. So, first of all, ETH two, phase one, right? So not controversial, yet controversial is next slide. Use E Two shard data for roll ups, right? So if instead of the roll ups pushing their data onto the E One chain, roll ups can push their data. So the ten to 16 to 50, depending on your application bytes of data per transaction, that have to go up, go on chain in a roll up because that's how roll up works.
00:21:13.634 - 00:22:04.786, Speaker B: So if that data goes on two shards and those two shards have two megabytes per second collectively, then you can get up to 100K transactions or 25 for much more complicated ones. But we need a bridge so that the ETH One chain can verify which ETH Two block routes and therefore which ETH Two blocks are legitimate. And then after phase one and Phase 1.5, e Two shard data can be proven to either ETH One shard within one slot because ETH One shard will be part of ETH Two. Now, this is the challenging part, right? So I claim that we have a bit of an awkward inconsistency in the E Two and scaling roadmap. Here is the awkward inconsistency that I think hasn't really properly been addressed yet. Today we have no layer two.
00:22:04.786 - 00:22:54.882, Speaker B: Well, we have some use of layer two, right? But okay, let's say we're here in the charts. Six months ago. We were here six months ago when 2020 and the world burning and so forth had only just begun and we were still living a relatively happy existence in the Greeks. Degnation, the scalability of ethereum was about 15 to 45 TPS because we had no layer two and we had no sharding. Very soon we're going to have 1000 to 4000 TPS because we have no sharding. But we do have roll ups. In one or two years, we're going to go up to 25 to 100,000 TPS because we are going to have sharding of data.
00:22:54.882 - 00:23:08.038, Speaker B: So the shards are just going to be kind of data blobs blobs. But for a roll up, data blobs are all you need, plus roll ups. So here no sharding, no roll up. Here no sharding. Yes roll up. Here yes sharding. Yes roll up.
00:23:08.038 - 00:23:52.390, Speaker B: And then what comes after this? Well, if two phase two, if Two phase Two basically says, well, we're going to allow shards to have not just data, but also execution. And this was always marketed as this is the place where applications can come over and actually properly live inside of East Two. But here's the problem. This phase offers 25,000 to 100,000 TPS because it has sharding and roll up. So it has scalability squared. But over here, if we're going to say, well, we want applications to move to east two's layer one. Well, being on east two layer one means you only have one level of scalability, right? You have Sharding, but you don't have the roll up.
00:23:52.390 - 00:26:01.706, Speaker B: And so the question is, well, if the ecosystem is already accustomed to roll ups and because the ecosystem has to be accustomed to roll ups, because they will have spent one to two years over here living in a basically roll up centric ecosystem then why would people even want to migrate back to the main chain when the main chain has inferior scalability and when they're already accustomed to roll ups having juicy features? Like, for example, sequencer. Pre confirmations and sequencers being able to do crazy transaction verification so you have full account abstraction without the complexity of account abstraction, the EIP and all these other goodies. Why would applications want to move back to the main chain? And this is the challenge, right? Basically the question is what if the scaling roadmap is really done here at the 25,000 to 100,000 TPS step and we shouldn't even be kind of adding more complexity to ethereum by allowing more computation on every single Shard? Now there's actually risks to allowing computation on every shard, right? And the risk basically is that if you want to kind of fully verify correctness of a Sharded blockchain, then if you want to verify data availability, data availability verification, if you do it with either polynomial commitments or zero knowledge, proofs is actually not that bad. The reason is that it does not have any network synchrony assumptions, right? It does not rely on fraud proofs. It's just a matter of like send a bunch of requests and wait until all those requests get answered. So no matter how slow the network is, no matter what happens to the network, you're fine. But if you want to verify computation in a scalable way and in a robust way and so for example, the network half the nodes temporarily going offline and the attacker are kind of taking over a large portion of the remainder and then being able to take over a few committees.
00:26:01.706 - 00:27:03.454, Speaker B: Like if he wants to verify scalable execution without hitting those kinds of issues, then you need fraud proofs. And the problem with fraud proofs is they depend on this hard latency assumption. And so fraud proof, if someone manages to kind of sneak past an invalid block because the network is doing really terribly for twelve minutes, then you would pretty much have to roll back the entire E two chain. So I would claim that potentially leaving scalable execution up entirely to layer two could even kind of improve the stability of the Ethereum two blockchain and make it a more kind of limited and entrenched tool that does one thing and does one thing well. Now there is an opportunity for a compromise here, right? And the compromise basically is, well, I talked about having just one execution chart. And the status quo kind of proposal is to have kind of 64 execution shards. Like every shard is an execution shard.
00:27:03.454 - 00:28:14.710, Speaker B: Well, the compromised proposal is what if we go in the middle? What if we have like four execution shards or eight execution shards? And this would allow somewhat more base layer applications to exist if people really want them to. It would allow somewhat more room for error. If things inside of a particular roll up screw up and people have to use the base chain to migrate to another one, it would really relieve pressure on a lot of those things. But if there's only four to eight execution shards, then in extreme circumstances, it's still within the power of a lot of individual users running nodes to personally verify all of the computation that's happening in the network. Whereas if there was 64 execution shards, then personally verifying all the computation would be impossible. So that's the kind of possible compromise approach. And so challenges, right? So there's a lot of challenges that are, I think, inevitable in the EQ migration.
00:28:14.710 - 00:29:19.166, Speaker B: And as I mentioned in the migration to roll ups, there's a lot of challenges that are pretty inevitable as well. But probably the biggest one is the user experience basically making sure users only do secure things by default and don't accidentally do insecure things. So one example of an insecure thing would be as if every application required you to sign into ZKsync inside of that application and then users ended up kind of giving away their ZKsync secrets and then the application stole all their money. That would be really bad, right? So we want secure things to happen by default and so we want MetaMask or status or im token or these wallets to try to support layer twos directly instead of having kind of less secure application interfaces for them, ecosystem coordination. And that includes the wallet stuff. That includes making ENS work on layer two. It includes kind of high level language things.
00:29:19.166 - 00:30:27.382, Speaker B: It includes also having efficient infrastructure for jumping between different roll ups. So kind of cross roll up exchange is going to be a really important topic. So there's a lot of these challenges that do kind of have to be solved regardless. One interesting thing about kind of cross roll up exchange actually, is that I think a lot of the challenges are very similar to the challenges around cross shard exchange. Basically, roll ups and shards are both kind of what I call synchronous domains. They're both these areas where you can have synchronous communication between objects within one of them, but you can't really have synchronous communication between objects that are in different roll ups or in different shards. And so the challenge of making a decks between them is basically very similar regardless of whether they're roll ups or whether they're shards, which I think is interesting, right? It basically means that we don't even need to have all that much certainty of kind of which scaling path ethereum is going to take in order for work on cross Domain Exchange to actually start.
00:30:27.382 - 00:31:39.434, Speaker B: And so cross Domain Exchange is something that people should actively start looking into. If you want to build some hackathon projects at some point, then make a Dex that works between, say, ZK sync and the optimism testnet, for example, or even between loop ring and ZK Sync, or between loopering and the optimism tested, or diversifier whichever one of these systems, right? Just see if you can spec it out. See if you can make that work, because this is a kind of category of thing that we're going to end up needing. So that's the presentation, right? And I know there's a lot of ideas in there. It's ideas that I think we're all kind of familiar with independently. We're all familiar with, hopefully east two as a concept, at least of the basics of it, and then the fact that there exist these layer two protocols as a concept. But actually you're kind of concretely thinking about, well, what would a world where we migrate to layer twos and then what world where we migrate to layer two is on top of ETH two and how will these two and layer twos interact and all that.
00:31:39.434 - 00:31:52.590, Speaker B: These things are fairly new, and I think it's time that we do start to kind of much more seriously and proactively thinking about how we push the ecosystem to actually be able to take advantage of this scalability.
00:31:56.730 - 00:32:27.460, Speaker A: Great. Thanks, Natalie. Thanks for the presentation. We do have some questions that have been submitted, so as long as you have time for it, we'll screw through some of them. All right, so first question. Layer two is always about to solve all of blockchain's problems, something that we've been writing and talking about for years, but at least for now, has failed to really materialize. And there have been notable disappointments in the layer two space.
00:32:27.460 - 00:32:34.260, Speaker A: How confident are you that roll ups are for real and what makes this time different?
00:32:36.310 - 00:33:27.538, Speaker B: So I talked about this a bit in one of my blog posts about a year ago. This was, I think, the one that talks about base layers and functionality escape velocity. And the argument that I made was basically that roll ups are a somewhat different class of scaling solution than channels and plasma. Right? And channels and plasma were kind of the two major families that the bitcoin and ethereum ecosystems in the bitcoin ecosystem case adjust channels that we've tried so far. And the difference is basically that when you scale, there's two things that you're scaling. You have to scale computation and you have to scale data availability. And my argument was that channels and plasma both don't solve data availability.
00:33:27.538 - 00:34:06.846, Speaker B: They use very application specific tricks to try to get around the problem of not having data availability. So if you search up on my. Blog post of italic. CA, basal hairs functionality, escape velocity. I can make this argument in a lot more detail there. And so in the case of roll ups, on the other hand, the way roll ups work is that they're a kind of more compromised layer two, right? They say that instead of doing everything off chain for every transaction, we're not going to do the computation on chain, but we are going to publish about 1016 50 bytes of data that go on chain. And so this is why the scalability of a roll up is limited.
00:34:06.846 - 00:34:57.166, Speaker B: But what this gives you is it gives you the ability to basically run arbitrary state machines inside of a roll up, right? And this is something, the thing that we initially thought we'd be able to do, then eventually realized we can't do in plasma is basically run arbitrary state machines inside of them. But for roll ups, we already know how to do it. And once you can do an arbitrary state machine, then it's kind of like Turin Completeness. That's proof that you can do basically anything. So we do have a kind of mathematical and technical sort of proof that roll ups are capable of doing the things that we're claiming they're capable of doing. And then in terms of just in practice, roll ups are just so far along, there's already like three decentralized exchanges running on them. You can use it to do checkouts of your Gitcoin donations.
00:34:57.166 - 00:35:18.778, Speaker B: And then there's a synthetics as participating in a test at a roll up that can support the EVM. Basically the problems that we never even got close to solving in channel and plasma land, I think in roll up land, we actually have managed to solve, is one of the crux of it. Got it.
00:35:18.864 - 00:35:47.700, Speaker A: Okay, so one of the virtues of the ethereum ecosystem that exists now is we have this kind of interoperable composable layer one, which means that everything gets to talk to everything else. Can that vision still exist in a world of many roll ups, or do you expect there to be a winner take all here where one or very few roll ups end up having the most economic activity on them?
00:35:50.630 - 00:35:53.400, Speaker B: Sorry, you didn't hear the last sentence to you all. Was that again?
00:35:54.890 - 00:36:00.550, Speaker A: Do you expect to be a world of many roll ups or do you expect a winner take all dynamic?
00:36:03.130 - 00:36:38.654, Speaker B: Good question. I definitely expect to see a couple of roll ups end up dominating. I do think that roll ups have both network effects and anti network effects. The main anti network effect that a roll up has, basically, is that the more transactions per second happen inside of a single roll up, the harder it becomes to run a full node of that roll up. And so that basically kind of degrades its usability to some extent. So that's one pressure to have multiple of them, and then the other pressure is that there's just different families of technology that are being explored.
00:36:38.702 - 00:36:38.866, Speaker A: Right?
00:36:38.888 - 00:37:05.100, Speaker B: You have the optimistic EVM family. Then you have the zero knowledge proof using elliptic curves family. Then you have the zero knowledge proof using Stark's family. I definitely expect kind of all of these technical families and some different internal features to get tested in the short and medium term. In the long term, it's possible that one of them will win. I don't know yet.
00:37:09.570 - 00:37:18.880, Speaker A: Are there fundamental problems that happen? Like if there is a winner takes all dynamic, what are the downsides of that happening?
00:37:19.350 - 00:38:23.090, Speaker B: Right. I guess the main downside would be that if the winner that takes all ends up being a project that just starts being really extractive in nasty ways and it has fairly centralized control by a small group of stakeholders and those stakeholders try to basically maximize their benefit instead of doing a good thing for the ecosystem. I think if that happens, the Ethereum ecosystem's response may end up being to kind of, quote, nationalize it. So what I mean by that is basically just take the code of that particular roll up and just enshrine it into the main chain and make that be phase two of e two scaling. And so when that happens, basically people that it will just be the default behavior of Ethereum users to be living inside of that roll up. But then that roll up will just be using ETH as its base asset. Managing that roll up would be part of managing the Ethereum Protocol and so forth.
00:38:23.090 - 00:38:39.820, Speaker B: If you are a winner that takes all and you're too mean, there's always the possibility that'll end up happening. And so your kind of position at the center of things will end up just being sort of removed overnight as a result.
00:38:41.310 - 00:39:11.540, Speaker A: Okay, another question that was submitted. So the assumption of this question is that when you've been talking so far about transactions happening on roll ups, those are still public transactions that anyone that's kind of watching the roll up chain can see. What would a private roll up world look like? Or how would having private transactions in the rollups maybe impact the scalability properties that you've talked about so far?
00:39:13.030 - 00:39:50.020, Speaker B: Right. So this is where we get into the family of ZkZk roll ups. The first ZK stands for Zero knowledge and the second ZK stands for, as I now claim, as Zipped by Cryptography. So it has ZK for both the privacy and the scalability, basically. So this is a family that's already being explored. So the Aztec Protocol is working on a ZkZk roll up, I believe matterlabs might be. I forget the details and I'm sure they can angrily correct me on Twitter if they want to, which would be great.
00:39:50.020 - 00:41:09.942, Speaker B: Basically, the idea would be that if you imagine it with something like tornado cash, then imagine you extend tornado cash so that it doesn't just do moving coins around. It also does basically supports an internal smart contract language. And then you imagine that living inside of a roll up, then you do get some pretty powerful privacy and scalability at the same time. I think the main challenge though is that there's inherent trade offs between privacy and composability and between privacy and just having applications that everyone can use. And the trade off is basically that if you want to have private smart contracts, then for that to work you need to have this kind of encrypted state object where only some people have the key, right? And the idea is that if you have the key, then you can make transactions that involve that state object. But if you have the key, then you can also see what's going on. And so basically there's this kind of inherent trade off with zero knowledge proofs where basically either you can see what's going on or with a particular object or you can't use it.
00:41:09.942 - 00:41:46.680, Speaker B: And that's totally fine with coins, right? Because if the coins are yours, you can see them and you can use them. If they're not yours, you can't see them and you can't use them. Which is why Zcash and Tornado cash and so forth work fine. But with smart contracts you get into multi user objects and so this sort of stuff gets more difficult, right? So going from perfect privacy of simple payments transactions to perfect privacy of more complex things and I think perfect privacy of more complex things is not possible. But kind of pushing the frontier up I think is something that's going to happen over and wonderful people like the Aztec team are working on it.
00:41:49.130 - 00:42:13.310, Speaker A: Okay, so changing topics a little bit, another question that was submitted. So in this vision, which is one possible vision you described in this post, when would you expect the base layer of ethereum to stabilize? Is there a period where becomes stabilized and bricking changes are made? Or would you expect iterative improvements in perpetuity?
00:42:15.170 - 00:43:14.050, Speaker B: In my rodent proposed the roadmap here, I expect the basic structure of the roadmap of e two to basically stabilize potentially forever in phase 1.5. So in the magicians post, that's why I say phase 1.5 and done. But there would be continue to be kind of iterative technical improvements, but this would be things like for example, just adding more zero knowledge proofs in a few places to improve security, improving efficiency, changing the consensus from FFG to CBC, eventually migrating to post quantum. So kind of improvements that are not sort of economically substantive or that are not kind of substantive in terms of changing basic security properties. And then I definitely expect some degree of ongoing technical change to keep happening for a very long time. But it would be a low level, definitely much closer to just being maintenance mode.
00:43:15.910 - 00:43:34.714, Speaker A: Okay, the last question which I just got for you is what do you want to see hackers build at ETH online over the next three weeks. Maybe you've got something already in mind. Maybe you have long standing things that no one's built yet. But if you could name a couple of things, what would those be? For the hackers who are watching looking.
00:43:34.752 - 00:44:37.706, Speaker B: For inspiration, one option is definitely just the things that I talked about. So kind of readying the Ethereum ecosystem for layer twos. So this could include the ideal awesome thing would be like make a MetaMask fork that just supports loop ring and Ddsync and optimism, which would just be awesome if someone does it. Another example would be a decentralized exchange whether it uses channels or whatever other technology going between multiple roll ups, an ENS resolver that works inside of layer twos. Other interesting things would be layer twos offer the ability to do things that you can't as easily do today. One example of this is smart contract wallets, right? Like, I've always been this big advocate of smart contract wallets and multisig and social recovery and all of these things. But this stuff is still underrated, by the way.
00:44:37.706 - 00:45:48.914, Speaker B: Like even a few weeks ago I just had a friend come close to losing $200,000 just from kind of misusing their or misplacing their wallet seed. Eventually I had to go digging quite a bit and figure out that basically the BIP 32 derivation path was wrong or something, or something like this. But it was a big scare for a while. And I think people don't talk about this because there is this mentality that if you admit to losing $200,000 because you lose your key, then you're stupid and so nobody wants to admit it. So it's a serious problem nobody talks about, right? But basically, I think if we want to scale Ethereum to 5 billion people, you can't have this design where you have one private key and if your private key gets stolen, you lose your money and if your private key gets lost, you lose your money. So you want to have multi sigs, you want to have these self cancelable transaction vaults. You want to have social recovery and all of these things and ideally try to solve it with a minimum amount of centralization as things like social recovery do.
00:45:48.914 - 00:47:13.774, Speaker B: But these things are all fairly hard to achieve in the current context because unfortunately, these one blockchain isn't really that well designed for verification schemes other than single kind of elliptical signature verification. But inside of like the optimism roll up, for example, you totally can do it and sequencers can just support account abstraction manually. So that's another example of this sort of thing that you could try to start doing on layer two is that you can't easily do on layer one and hopefully use the layer two switch as an opportunity to simultaneously encourage people to move to better things. I guess another possibility would just be making kind of migrating applications to layer two. So, for example, something like imagine making a bot where if a market gets opened on Auger, then you would just immediately go to foundry, create a huge amount of yes tokens and no tokens, and then push those tokens into the layer twos. And then just open up a market for both of those tokens inside of the layer two so people can go do their prediction market trading inside of the layer two. So there's a lot of simple application specific things you can do like that.
00:47:13.774 - 00:47:20.880, Speaker B: And then I'll be able to do my prediction trading with paying less than $17 of transaction fees. So a lot of options.
00:47:23.090 - 00:47:43.240, Speaker A: Awesome. Thanks, Natalia. I hope that people are listening. I hope that someone works on those problems. Okay, well, I think that is the end of today's stream. Thank you so much, Vitalik, for coming on with us and talking about this. We look forward to having you back on the final day of ETH Online on the 30th, and until then, talk later.
00:47:44.010 - 00:47:47.140, Speaker B: Sounds good. Enjoy your month.
