00:00:00.250 - 00:01:00.942, Speaker A: From Matic network. I do product side on formatic to explain matic is a scalable plasma fied sidechain. What that basically means is we are a layer two scalability solution on Ethereum. We deploy a proof of stake side chain which has plasma integrated which basically means if you're aware of plasma it is a way a clever cryptographic construction that allows Ethereum assets to move to a side chain like Matic from and to and fro seamlessly. So it's basically a plasma sidechain enables you to move assets from Ethereum to the sidechain securely. We also do a proof of stake side chain so that enables you to run any kind of arbitrary smart contracts on the sidechain as well. So whatever you do with Ethereum you can do the same with Matic as well.
00:01:00.942 - 00:01:56.238, Speaker A: So you can deploy contracts on the Matic side chain and you can move assets from Ethereum to the Matic side chain and then interact with these assets on the plasma side chain. That's kind of the long and short of it matic if you're not very aware of plasma most plasma implementations are Udxo based. Ours is account based. We have 1 second block times so your transactions will have partial finality on the side chain within 1 second so it makes for a better user experience. It's very low entry barrier for developers because we have an EVM compatible side chain so you don't need to change your understanding about developer tooling. Whatever you have learnt on Ethereum you can use the same on our Matic sidechain. I will take you through what are the integration steps but it's as easy as just changing the RPC URL.
00:01:56.238 - 00:02:33.898, Speaker A: That's about it. We have a very strong focus on user experience. That's why unlike most other scaling solutions we've decided not to introduce our own SDK. We just go with the EVM developer API. We are planning to have multiple side chains at the moment we are starting with one side chain. We are on testnet already and we are going to mainnet in a couple of months from now for the proof of stake side chain we also have a decentralized validator layer for the New York ETH, new York Bounties we have set up this kind of a structure. We are offering around $8,000 in bounties.
00:02:33.898 - 00:03:32.720, Speaker A: The top project will get $3,000, the second will get 2000 and the last six projects will get 500 each. What we are aiming to get built on the Matic testnet and each to qualify for the bounty your application must be deployed on the Matic testnet and what we prefer these are some example ideas you could build your own. What the application must optimize is for. They should make use of the high throughput on the matic side chain so we have a higher transaction throughput. So applications that are optimized for taking advantage of that instant confirmations 1 second block times and higher transactions so payments die payments is one thing. You could also do something like bill splitting in terms of venmo, right? Venmo kind of an application that could be something incentivized. Torrent clients is another example.
00:03:32.720 - 00:04:31.570, Speaker A: A pay with Matic widget. If this is done, we are kind of thinking like if you have the Pay with PayPal kind of widget. So if you can design like a browser based or JavaScript HTML kind of widget which could be embedded on a website to Pay with Matic, that is something we are looking forward to. Event tickets as ERC 1721 items could be like a ticket marketplace, right? So things like that. These are some example ideas, but the main criteria is how do you take care of optimize for instant transactions and the higher transaction throughput on the Matic side chain. And bonus points for moving assets from Ethereum to the Matic side chain through plasma right before getting into the developer toolkits. This is the rough architecture of the entire system.
00:04:31.570 - 00:05:09.578, Speaker A: So you have the side chain here, which is a fast blockchain. There is a validator layer here and then there are plasma contracts on the Ethereum main chain. So what happens is this side chain has 1 second blocks every 256 blocks. These validators validate these blocks on the side chain and push them to the main chain contracts. There are things like fraud proofs plasma exit stakers. I don't want to get into those, but these are all plasma essentials. These are what enable assets to be securely moved to the side chain.
00:05:09.578 - 00:05:57.254, Speaker A: Even if the side chain consensus goes for a toss, assets can still be safely exited back to the main chain even if the side chain goes for a toss. That's the benefit of using a plasma sidechain. So this is the kind of the architecture. Just to give you some overview, these are some of the projects that are already building on Matic. We are on testnet right now, going to mainnet shortly, but decentraland, which is like a virtual reality project, slightly popular and they are moving their marketplace and entire games ecosystem to our side chain because of the benefits that we provide. And these are some other projects that are building including games, referral platforms, payment platforms, et cetera.
00:05:57.382 - 00:05:57.734, Speaker B: Right?
00:05:57.792 - 00:07:28.164, Speaker A: So these are kind of the applications which are already building and they are taking advantage of our higher transaction throughput and the ability for us to use plasma to move assets and states to and fro the Ethereum mainnet. In terms of getting started on Matic, it's actually pretty simple actually. If you go we put together like a two minute guide to Matic here. Yeah, so block time on the Matic testnet is 1 second if you're trying to deploy smart contracts on the Matic testnet, if you're familiar with Truffle Remix, you just need to change the web3 provider URL from whatever it is you're using to our testnet link here. The testnet link is testnet two Matic network. If you change it in your Truffle settings or in your remix settings, you will be able to deploy contracts to the Matic testnet. There is absolutely nothing more required if you just want to go ahead with deploying the smart contracts if you want to move assets from Ethereum to Matic.
00:07:28.164 - 00:08:05.268, Speaker A: So right now we are on testnet, we are live on Robston. So you can move Robson assets either ERC 20, ERC 721 to the Matte testnet using the plasma. This is like a rough tutorial or the set of steps that we have put together. You can use one of the JavaScript SDKs called Matic JS to interact with the plasma contracts. Or you can use the contracts. You can interact directly with the contracts. If you go to Docs Matic network, there are these articles that will help you navigate this.
00:08:05.268 - 00:08:54.544, Speaker A: It's pretty much simple. If you want to just deploy contracts, it's as simple as deploying to Ethereum, except the Web Three URL is different. If you want to move assets to and fro Robston to that testnet, use these steps. It's pretty simple actually if you wanted me to go through it. Deposit assets kind of. So what happens if you want to go behind the scenes is kind of what happens behind the scenes is in plasma. What we do is we take assets from one chain and lock them on the primary chain and then we create them again on the side chain.
00:08:54.592 - 00:08:55.044, Speaker B: Right.
00:08:55.162 - 00:09:49.880, Speaker A: And then that's why you are able to transfer assets very cheaply on the side chain. And when you want to go back, you simply need to destroy the asset on the side chain and unlock them on the main chain. That's how you can do faster transactions without compromising on the security of the assets. Right, so that's kind of like the very simple description in terms of how we are different in terms of the various plasma implementations we deploy plasma more VP. It's an account based implementation from the developer's point of view. You don't need to go into details of what you have, but after the talk, if you want to talk to me regarding our specific implementation, please feel free to again, it's an EVM compatible side chain and thereby the interface is very simple.
00:09:50.030 - 00:09:50.296, Speaker B: Right.
00:09:50.318 - 00:10:20.530, Speaker A: And if you have any questions, we are the booths out there and you can kind of come and visit us. In terms of plasma compatibility, we have ERC 20 and ERC 21 transfers and we also have a proof of concept for asset swaps via plasma that we have already implemented. So you could also do asset exchanges like Build like NFT Marketplace or Decentralized Exchange on plasma as well.
00:10:23.720 - 00:10:24.470, Speaker B: Okay.
00:10:26.360 - 00:11:18.528, Speaker A: So that's how you do the interact with the network. We also are heavy contributors to a protocol called Wallet Connect. Wallet Connect is and I think I'll just give a demo that will be far better. So it's an open protocol for connecting Wallets to DApps. So this is like a DAP that we have made. This is a sample wallet DAP. You have the DAP.
00:11:18.528 - 00:11:24.804, Speaker A: Generally, you connect it via MetaMask, right. And your private keys are on the browser, on the device.
00:11:24.852 - 00:11:25.208, Speaker B: Right.
00:11:25.294 - 00:11:55.360, Speaker A: So here we have made this mobile wallet. This is actually also a plasma wallet, but here it also has Wallet Connect integrated. What I do is, when you create the DAP, you integrate with Wallet Connect. You use our mobile wallet, which is there on iOS, Android, both. You connect to it via by scanning the QR code, you get connected here.
00:11:55.510 - 00:11:57.104, Speaker B: What was the QR code? Sorry?
00:11:57.222 - 00:12:21.844, Speaker A: It was a QR code that generated randomly. So it describes the DAP. Specifically, the DAP identifier the session. Identifier. So I don't know if it's visible to you, but it gives me like, a confirmation screen. So this is asking for a signed transaction. It's asking me to sign the transaction because I'm not keeping my keys on the browser in MetaMask.
00:12:21.844 - 00:12:23.880, Speaker A: I'm keeping it on my mobile wallet.
00:12:24.540 - 00:12:25.252, Speaker B: Yeah.
00:12:25.406 - 00:12:36.952, Speaker A: So what has happened is, when I scanned the QR code, it created, like a session, and it sent me a transaction request to be signed.
00:12:37.016 - 00:12:37.676, Speaker B: Okay.
00:12:37.858 - 00:12:54.804, Speaker A: I am confirming this right now on the wallet. We have integrated it with Face ID authentication, or you could do it with Touch ID authentication as well. So when I click on confirm, it's asking me for the Face ID.
00:12:55.002 - 00:12:55.750, Speaker B: Okay.
00:12:56.520 - 00:13:02.390, Speaker A: And just watch the screen here. I think timed out.
00:13:50.380 - 00:13:53.496, Speaker B: It okay.
00:13:53.598 - 00:13:59.210, Speaker A: So what's going to happen is basically I'll need to open this again.
00:14:15.210 - 00:14:22.974, Speaker B: Okay. It okay.
00:14:23.092 - 00:14:53.158, Speaker A: So the QR code is QR code is available here. I'm just scanning it. It's getting connected. It's giving me a sign request. I'm confirming it with my face ID. And you see, it got logged in. See what happened? So it triggered a notification here, transaction signing request here.
00:14:53.158 - 00:15:35.860, Speaker A: The notification came here. I authenticated it with my private key, and it logged in. You could do any transaction, like, for example, so this is like a sample transaction, right? I do like a send request. If I click on Send transaction here, it will again trigger a sign transaction request here. I sign it, it gets authenticated. So we are moving away from using MetaMask to the Wallet Connect protocol here so that we keep our private keys in one place rather than distributing them on devices in different browsers. Makes sense.
00:15:35.860 - 00:16:17.614, Speaker A: Okay, so this is one more thing that you could use in your application. It's the wallet. Connect standard. For more help, please come to our booth. And finally, I would want to end with a developer tool called Dagger. Now, Dagger is a tool for getting real time notifications on Ethereum. So if you are doing smart contracts and there are events being triggered, if your distribute D app wants to listen to these events in a very seamless manner, you just use Dagger.
00:16:17.614 - 00:17:05.844, Speaker A: There is a library called Each Dagger, which is there on our GitHub repository. Again, I'll just give like a brief demo of this. So this is like a playground for this, but you can access it via a JavaScript SDK as well. So I'm just typing in, let's say, particular event, and I'm just giving a very simple event. But this can also be used to listen to complex events such as specific event logs, right? So if you're listening to a complicated smart contract event, you could just set up the pattern and it will send you the notifications in your D app.
00:17:05.962 - 00:17:06.340, Speaker B: Right?
00:17:06.410 - 00:17:58.130, Speaker A: So right now I've just kept it as the latest block. As and when there are blocks incoming, you will get these kind of notifications in your application. So this is the latest block, it's giving the entire block data. But you can listen to these kind of events. These are all the events and if you see the last one, it's log contract, address filter, topic zero, topic one. So you can listen to very finely grained events like this, right, show up on your app. That was just the playground.
00:17:58.130 - 00:18:05.080, Speaker A: You can have it in your variables, you can catch it up. It depends on how you want to accept this.
00:18:05.690 - 00:18:06.102, Speaker B: Yeah.
00:18:06.156 - 00:18:10.040, Speaker A: So I think that ends my talk. If you have any questions, please let me know.
00:18:10.650 - 00:18:11.400, Speaker B: Yeah.
00:18:11.770 - 00:18:38.830, Speaker C: What is about security of a cash and out? So you mentioned that there is coin get destroyed and you cash out. It's everything amazing. So how do you insure me as a potential staker but piracy is breached always. So you have same amount of, let's say like side chain die as, die on smart contract.
00:18:41.410 - 00:18:48.414, Speaker A: So if I get the question correctly, how do you ensure security of main chain Dai which is moved to the side chain Dai?
00:18:48.542 - 00:18:52.722, Speaker C: Yeah. How do I know? You have to create much more.
00:18:52.856 - 00:19:31.546, Speaker A: Okay, so basically, let me go back to what plasma enables is that you have to find out kind of if you're taking assets from ethereum to the sidechain, you have to first lock them up. You have to first lock them up. Okay, so now I cannot create tokens out of thin air. I can only create the assets which have been locked them up. I cannot create tokens out of thin air. If that happens that tokens are created.
00:19:31.578 - 00:19:32.482, Speaker B: Out of thin air.
00:19:32.616 - 00:19:40.446, Speaker A: There is a concept of in plasma, there is a concept of fraud proofs.
00:19:40.558 - 00:19:44.280, Speaker C: Yeah. So this proof is zero knowledge proofs or you just have a ton of time.
00:19:45.530 - 00:19:50.338, Speaker A: So basically what happens is these fraud proofs are state transition validators.
00:19:50.514 - 00:19:50.902, Speaker B: Okay?
00:19:50.956 - 00:20:42.918, Speaker A: So whatever transactions happen on the side chain, let's say there is an out of thin air transaction, there are set of watcher nodes that are there which can use these fraud proofs to challenge any transaction on the side chain. Anyone can challenge it. And there is concept called bonded exits. So there are bonds attached to these challenges. If the challenger wins the challenge game, they are entitled to a reward on the main chain. And these validators, these are all staked validators. So right now it will depend upon the level of validators who sign up for it.
00:20:42.918 - 00:20:58.166, Speaker A: But how we have set up the system is it's an ever increasing stake amount. So for example, there is a minimum stake amount, but the top stakers will be getting the slots. They get staking rewards.
00:20:58.358 - 00:21:00.890, Speaker C: But it's very cheap to do your transaction.
00:21:02.450 - 00:21:03.006, Speaker B: No.
00:21:03.108 - 00:21:29.480, Speaker A: So basically, see, there are two things. One is the plasma consensus. The plasma consensus doesn't need the proof of stake stake to be right. That's what I'm saying. The asset transfer on the plasma side chain doesn't require this proof of stake consensus. This is for data availability. Okay.
00:21:29.480 - 00:21:36.874, Speaker A: The scenario of creating tokens out of thin air is nullified by the plasma consensus. That's what I'm trying to say.
00:21:37.072 - 00:21:54.666, Speaker C: Well, what was the specifically economy here? Because you basically challenge, so you have a set of a challenger and how long does it take for me to cash out? So if I have this high chain.
00:21:54.698 - 00:21:56.522, Speaker B: Die and I would like to minor.
00:21:56.666 - 00:21:59.134, Speaker A: Oh, you're saying what is the time duration for? Yeah.
00:21:59.172 - 00:21:59.854, Speaker B: Okay.
00:22:00.052 - 00:22:35.420, Speaker A: We are running out of time, I think. But what I'm saying is there is a week of seven days that we keep generally, yes, but we have a concept of faster exit. Fast exit where a liquidity provider kind of gives you an option to exit fast with a discount. So that basically means is if I have ten die that needs to be exited, I can exit with 9.8 or 9.5 die instantly. Makes sense.
00:22:35.420 - 00:22:37.930, Speaker A: Someone else takes the risk.
00:22:40.430 - 00:22:42.554, Speaker B: Okay, fair enough.
00:22:42.592 - 00:22:47.558, Speaker A: I think I'm over time. If you have any questions we can discuss offline.
00:22:47.654 - 00:22:48.938, Speaker B: Yeah, okay.
00:22:49.024 - 00:22:49.900, Speaker A: Thank you.
