00:00:00.650 - 00:00:43.820, Speaker A: All right, thanks everyone, for joining us for our last workshop today. And not least, we have Textile with us. Andrew Hill and Carson Farmer will be presenting intro to Decentralized storage, integrating filecoin and IPFS into your project. Feel free to ask questions in the chat here. Carson will try to get to you or make sure it is brought to the attention as we go on. After this, you can feel free to jump again in the Discord Channel to ask more questions with the Textile team and during the event as well. So I will let you introduce yourself, Andrew, and take it away.
00:00:44.430 - 00:01:09.426, Speaker B: Thank you, Catherine, and thank you, other Andrew. Yeah. Very excited to be back here with the ETH Global team and very excited to share with you all some of the work that we do and ways that you could be using it in your hacks this weekend. Like Catherine mentioned, I'm joined by my coworker Carson here. He's going to help answer any questions in real time. Also. I know.
00:01:09.426 - 00:01:45.280, Speaker B: At least Carson is over in our discord channel. So all of you feel free to jump over there. If you're already there and feel better asking questions over there, feel free to do that today. I'm not going to go into anything deeply technical. I won't do any live coding with you. But first time ever, I'll offer this. Maybe if there's some people that want to follow up with this, we could do short office hours later this week or early this weekend even, to walk through some of these key concepts if you want to see some of this stuff.
00:01:45.280 - 00:02:23.030, Speaker B: But let me jump in and just give you a tour of what this stuff is. Okay? It all right. So, web3 weekend. Also, one other announcement, very important one, we're hiring right now. So if you go to Textile IO, there should be a link to our jobs. And so if you or anybody you know are interested in these positions right now, we have two positions open. One for kind of senior back end, one for senior full stack.
00:02:23.030 - 00:02:54.874, Speaker B: And if that's you, we'd love to talk to you. So find those there or share that for us because we're always looking. Also really important probably is we have prizes this weekend. And so I just wanted to share those because each of these are going to touch on the technologies that I show you through the rest of these slides. And so the first is we have a prize for best use of buckets. And so we'll talk about what buckets do, but they're essentially object storage for Web Three. The second one is for best use of threads.
00:02:54.874 - 00:03:30.670, Speaker B: So Threads is a protocol for synchronizing data in applications. And then the final prize that we have is for the best mashup, and specifically mashups using buckets and any of the other sponsors protocols. And so there are some awesome other sponsors, some obvious ones, that you could tap into here are Filecoin use Buckets. Buckets actually has a built in API to integrate with Filecoin. So check that out. Near, I see, is a sponsor. We have some really neat things with near that I'll show you a sneak peek of at the end of this presentation.
00:03:30.670 - 00:04:18.314, Speaker B: And then there's other excellent ones out there, Audius and Ceramic and other really interesting projects. So the closer you can get Buckets to those other projects, the more likely you are to win this bounty. So check those out after you kind of get the download on what all these are and decide if you can make use of them in your hacks. Textile. So, Textile, we build a suite of tools for developers just like yourself. The purpose of our tools is to help you make use of specifically IPFS and Filecoin in your applications. So to back up for a second if you're not familiar with what IPFS or Filecoin are, they're really critical technologies across a lot of the Web three stack.
00:04:18.314 - 00:05:12.494, Speaker B: And so IPFS is a sandwich of different protocols and technologies that allow you to move data across the decentralized network. And so you can think of it like routing, content distribution and data exchange between peers. And it sort of solves those problems and a handful of others in a lot of interesting ways that you can make use of. And so when I talk about IPFS, it usually also encompasses other technologies that you're probably going to hear about in other workshops, or you'll see references to like IPLD, like Lib, P to P, and a handful of others. So, a really big piece of technology here across the entire ecosystem. And then the second one is Filecoin. And so if you're not familiar with Filecoin, I'm sure you all are getting familiar with Filecoin due to this event.
00:05:12.494 - 00:05:50.682, Speaker B: So Filecoin is decentralized storage, obviously. So it's a network, it's a blockchain, just like Ethereum or any of the other blockchains. But this blockchain has been optimized to organize storage providers on a decentralized network. So how do you get people to actually hold onto your data and make it available again next time you need to request it? And that's what Filecoin is solving. And so the tools we build sort of extend those two families of tools into interesting new directions that we saw developers needing to solve. And so Threads is database over lib p to P. Buckets object storage, similar to S three.
00:05:50.682 - 00:06:46.240, Speaker B: But on IPFS and Filecoin, I'll talk about the Hub, which is a hosted platform we have so that you can use these things without having to spin up the sort of full nodes and figure out how to always be connecting to these networks. You can sort of use our persistent connections while you're ramping up. It should make it very easy for you to ramp up on these protocols. I'll show you the minor index. So if you're using Filecoin the minor index is a really cool resource for you to use to find those storage providers on the filecoin network that are active and are capable of taking your data and Powergate. So if you're in the more technical crowd and you want to be connecting to filecoin using a fully synced node, and you want to have sort of the full suite of APIs, you'd actually start with one of their implementations. Lotus is the more popular one.
00:06:46.240 - 00:07:26.330, Speaker B: But Powergate, what it does is it actually adds a bunch of other tools on top of Lotus. So it runs Lotus for you, but then gives you a bunch of helpful tools for moving data into and out of filecoin easily. But also, how do you manage a lot of different wallet addresses? How do you build this into platforms or large scale applications? Powergate has a lot of tools for you to do that. So let's just talk about some of these technologies now. I'll start with threads. And Threads is actually one of the oldest technologies that we've been working at. At textile.
00:07:26.330 - 00:08:19.126, Speaker B: We were doing some very early experimentation with how could you use decentralized protocols in mobile applications. And what we found was that there was this gap still for how you would actually synchronize full data sets between multiple peers on the network. And so we started designing and building threads, and it's been through a number of versions, and it's actually probably about to go through another major update. It's pretty exciting. If you're interested in using it, you'll see changes coming that are going to be great. And I know Carson's working on that with one of my colleagues, Merlin, and doing a bunch of work around scalability and enabling new kinds of deployments here. But it allows you to store data locally and then push and pull it from other peers on the network.
00:08:19.126 - 00:08:44.418, Speaker B: And these are permissioned peers. So it might be you and another collaborator are working on a document. That document could be synchronized over threads. And there's a few different ways that you can use threads. We have a Go library, we have a Go client library. We have an API, we have a JavaScript client, and we have a JavaScript local first version, and we have a daemon. So there's a lot of different ways you can tap into this.
00:08:44.418 - 00:09:16.574, Speaker B: If you go to our documentation just at docs textile. IO, you'll find the thread section. It's a good landing spot for this. Some concepts that are really useful here, so there's not many in threads. It's actually meant to be a pretty thin layer. And the vision for threads is it actually just solves the networking piece, and it's meant to actually allow you to attach any database to it and move that data across the web. Right now, it's more opinionated than that.
00:09:16.574 - 00:10:08.430, Speaker B: It's easier for us to iterate quickly by having an embedded database. And so you'll see both in the Go and the JavaScript version right now, it's more tightly coupled with the database that it runs with, but it means that we've kept the concepts in threads pretty lightweight. So there's databases, there's IDs, so all peers that are attaching to a database will know the identity of that database. That means that you can build applications that are tracking multiple databases per user, and they can have different groups of other users that each database is synchronizing with. And so there's a lot of different applications being built on threads, but Satellite im is a really good example of one primarily chat based application. You can see how threads could be used in that model pretty well. Collections.
00:10:08.430 - 00:10:37.186, Speaker B: So each database can contain collections. If you're more familiar with a SQL kind of background, you could think of that kind of like tables and so collections. And then all the entries in the collection are records. So everything that you can do in threads, you can do in the Go version. That's our reference implementation. So if you're a Go developer, definitely check it out. It's really robust library.
00:10:37.186 - 00:11:16.826, Speaker B: And so if you go to our GitHub repos, which will be linked in our documentation, you can find all the different implementations of threads. But the gothreads version has the core reference implementation. You can run it as an API, you can actually run one as an API and use another Go version as a client to that API. And you can actually run just sort of freestanding nodes as a daemon, which is pretty cool. So lots of different ways you can hack on that technology. The JavaScript version, carson actually has taken the lead on the JavaScript version, so he can answer a lot of the questions here. But it embeds a local first database.
00:11:16.826 - 00:12:18.770, Speaker B: And so you can think of it as being basically you can actually have a user with a database in the app that can work completely disconnected from the network, and that's really useful for application performance and usability, but then you can synchronize that data on demand. And so if you come back online, you can actually synchronize it to other peers and do all sorts of neat things. So that's a really great library too. So if you're a JavaScript person, go check out the JS textile library that has the JS threads library inside of it. So lots of cool things coming on the future of threads. And so actually this sprint that we're internally working through right now is trying to close some of this work here. But if you're getting your head around web3 and are interested in how identity and things like thread identity are managed, you can actually go to the threads repo.
00:12:18.770 - 00:12:53.380, Speaker B: And we have a really long discussion document here that another one of our colleagues, Sander, has implemented now, and it's going to really take threads sort of to the next level. And our other colleague, Merlin, is working through a lot of this as well. And it's really exciting. And so if you want to see the kinds of things you can build with threads, a couple of examples here. Satellite Im a really awesome project, definitely should check that out. Anytype is the logo on the left there? Anytype IO as well. Really exciting project there.
00:12:53.380 - 00:13:44.094, Speaker B: And then Bradbury, check that one out. All of them kind of have different approaches to how they're using threads, but can kind of inspire you for what you can do yourself. Okay, next technology to check out is this one called Buckets. So Buckets, if you've used or you understand what Amazon S Three is, bucket, you can think of Buckets as providing that similar service but over IPFS. And so if you're not familiar with Amazon S Three, it's okay. It essentially is a place where you can push data, you can push objects to be hosted online, and so in this case, you can push objects to be published over the decentralized web. And so Buckets a really nice way to actually think about them is as folders.
00:13:44.094 - 00:14:24.610, Speaker B: That's the way that we've designed most of the interface for using Buckets. So you can have folders on your local disk that you turn into a bucket, and then you can push them to remote IPFS peers. And what's really cool about these Buckets is they map to the folder that you're creating, but you can also do things like synchronize your local folder. So that means changing your local folder and having those changes synchronized to the remote IPFS peer, which means that you can have other people pulling that data. So lots of really cool interactions that you can do there. So they can be single user or they can be multiple. You can have multi user with some interesting ways of doing permissions.
00:14:24.610 - 00:15:24.770, Speaker B: And then I think maybe one of the most useful aspects of Buckets is that they wrap a lot of different protocols into one, making it easy for you to kind of tap into each of these protocols depending on the situation, using the right protocol at the right time. So the first one that you probably aren't going to use in a weekend of hacking, but it's in there is really neat, is actually buckets are built on threads. And so the way that the metadata about the folder that's synchronizing around is being moved is actually over a thread. But that gets pretty deep in the technology there. And so not something maybe to worry about too much, but some other protocols that you can use right away are IPFS, obviously. So when you push a Bucket, that data is available across any public gateway on IPFS, or you can run other IPFS nodes and pull that data from the IPFS network directly. So that's really helpful.
00:15:24.770 - 00:16:03.338, Speaker B: Another protocol that it uses is IPNs. So if you're not familiar with IPNs, it's the interplanetary naming system. And so it lets you create a static key that maps to your IPFS sort of hash addresses. And so if you've gotten into IPFS at all, you'll know that every record that you add to IPFS gets a unique CID. It's called a unique address. It's one of these long charactered strings here. Neither of these are actually examples of a CID, but close enough so they map to these CIDs.
00:16:03.338 - 00:17:05.694, Speaker B: And the problem is, if you ever change that record, you get a completely new CID. So how do you let people track changing concept that is going to have a different piece of data mapped to it every time? That's where IPNs comes in. So you can publish what are called IPNs addresses, and that IPNs address for any other IPFS user will map to a piece of IPFS data and then you can change what that maps to. So anytime you want to change the data, you can change what it maps to. So a very handy concept if you have dynamic data you're trying to publish over IPFS and buckets, every bucket you create has an IPNs key automatically and so you can reference it over the IPNs network to always see the latest of what's in that directory. Http obviously I mentioned already every bucket is available over IPFS gateways. And then the final one that probably is really interesting to you if you want to hack on multiple sponsored projects this weekend is Filecoin.
00:17:05.694 - 00:18:12.010, Speaker B: So buckets have a lot of different methods you can run on the API, but if you're using buckets through the textile hub, which we'll get to in a minute, you can call an archive command. And by calling the archive command, you can sort of instantly move your data into a queue that will get stored in Filecoin. So that's a really handy way to get data on Filecoin. And just like threads, there's a lot of different ways you can interact with buckets. There's JavaScript implementation, there's a Go implementation, and there's a ton of magic if you really get into the deep interactions here between buckets and threads. So there's a lot of neat things that you can dig into there to unpack how the metadata of your folder is moving around. So if you're kind of into those deep technical things, dig in there and peel back and you'll see that there's some really powerful things that you might be able to extend upon or build interesting hacks around lots of other really great projects building on buckets.
00:18:12.010 - 00:19:18.894, Speaker B: A few examples slate, if you go to Slate Host, you can see they build sort of like boards where you can push data, you can push files, people can share ideas, people can collaborate on data sets, all sorts of neat things. Fleek is one of their leaders in building really great user interfaces around data storage and publishing things to the decentralized web. So Fleek storage application is built on buckets and Masterfile is one of my favorite hacks to come out of a recent hackathon worth googling to check out how they do sharing of data in a really private and interesting way. So both of those technologies and a lot more you can make use of through the open source libraries. You can go clone them, run them on your own. We also provide this hosted service called the Textile Hub, which runs threads, buckets, a lot more things. And you can access those nodes to interact with by just creating an account.
00:19:18.894 - 00:19:52.518, Speaker B: And some really nice things about doing that include access to filecoin. So this provides a filecoin gateway. So doing things like pushing buckets to filecoin, you can do that over the Hub. It also gives you a really easy way to push data to remote IPFS nodes. So when you push a bucket to the Hub, for example, that gets pinned to a remote IPFS node, making it easy for you to get that through all of their gateways. But there's a lot of other things that you can use on the Hub, so worth checking out. There's kind of two ways developers interact with the Hub.
00:19:52.518 - 00:20:24.366, Speaker B: One is team collaboration. So the Hub has concept of organization. So you'll see, if you set up an account, if you download the CLI, one of the first things that you can do is create an organization and then act as the organization instead of your single developer account. And that's great because then you can start adding collaborators that automatically will have permissions to collaborate on buckets with you. Push new API keys, those sorts of things. And then on the right, not exclusive to, but just a different way to use it. And you could do this as an.org
00:20:24.366 - 00:21:05.940, Speaker B: or as an individual are building applications. And so you can use those API keys on the Hub to embed in your application ways to push buckets or synchronize threads over the Hub. So that means that you can build an application where your users actually can push data to IPFS nodes without having to have them run full IPFS nodes themselves. And like I mentioned, the sort of built in filecoin integration. So in five easy steps you can kind of go from setting up an account to pushing data to filecoin. And I'll share these slides on our discord channel right after the talk. And so if you want to kind of go through these, that should be pretty easy.
00:21:05.940 - 00:21:40.300, Speaker B: And yeah, like I mentioned, easiest way to get started here is just docs textile IO. Or if you go to textile IO directly, you can set up an account and jump right in. The web version is way behind. It's sort of just an experiment. Right now the CLI is really where everything happens. So set up an account online, but you'll pretty quickly want to migrate to the CLI to get the most out of the application. Okay, if you're building things with filecoin I mentioned before, the Miner Index a really good resource for you to tap into.
00:21:40.300 - 00:22:43.898, Speaker B: So the Miner index basically collects a bunch of information about miners on the Filecoin network and then gives you an easy to use API and CLI to query that information. And so a bunch of different ways you can use this, you could build interfaces just around this data that's very interesting, but you could also build this into your flow for pushing data to filecoin. So first you can query this index and get a minor that you want to store data with based on cost, location, previous reputation, sort of track record. You can select a minor here programmatically and then add that to the flow when you're creating deals on that network. And that can help you just pick the best miners faster, get the best cost for storing your data. So, lots of things you can do there. If you go to our docs and go to the minor index section, you'll find it's open API or swagger API.
00:22:43.898 - 00:23:20.526, Speaker B: So really easy to use. And then you can actually use the Hub CLI to interact with it directly and query it. And just like shown here in the screenshot, but really powerful, lots of ways you can use it. And potentially you could even just hack on this API and build things from that. Okay, I mentioned, yeah, if you want to go deep technical too, and you want to run sort of full node and connect to Filecoin, powergate might be interesting to you. It's one of the more popular client tools for using Filecoin. And so some things that it's really helpful for.
00:23:20.526 - 00:24:10.282, Speaker B: One, we have this local node or sorry, local net mode where you can spin up powergate, which will spin up Powergate, Lotus and a number of mocked miners, giving you a fully localized version of the Filecoin network that you can quickly iterate, so it will work really fast. You can be testing the full API suite and seeing what it's like to interact with miners before you go and try things on Mainnet or even on testnet. It'll just be fast and you'll be kind of certain that your thing works before you go and build something more. We're using it in production, it's how buckets are moved to Filecoin, for example. So it's a pretty important piece of technology for us as well. Last thing I wanted to show you is one of the newest things we've been working sort of as skunkworks. So we haven't shown this to many people yet.
00:24:10.282 - 00:25:01.350, Speaker B: It's very early preview of this stuff and we should have some big announcements about it coming in the next coming weeks. But I thought, hey, I'm going to talk to all these people that are hacking for the weekend, I might as well show them something new and interesting here. We've been working on bridging the different blockchains and unfortunately we don't have our Ethereum version ready to show you here, but we do have our near version just at the earliest testing phase. And we're looking for projects building on near to come experiment with this stuff. And so if you go to near storage, you can read all about makes it the the cool thing about this is it makes it permissionless. So there's no API keys, no accounts needed. All you need is users with their wallet and basically they lock funds in order to that sort of proves that they are really a person with some intent and ensures that we don't have people spinning up a million fake accounts.
00:25:01.350 - 00:25:34.610, Speaker B: Once they've locked funds, they can actually push data to this bridge and that will get it stored on filecoin, which is really cool. And you can see it's really easy for an end user in this demo. DAP the user didn't really have to do anything. And they got the IPFS hash here, too, from that data. So that's kind of what we think storage is going to look like in these networks in the very near future and kind of getting rid of this idea of API keys and accounts and all that stuff. We're going to have a little bit more of that as we go here. So you're going to have to hack with some of that this weekend.
00:25:34.610 - 00:25:57.914, Speaker B: But if you're interested in this near stuff, definitely check out that project and we'll be on Discord and happy to answer any questions if you want to try it out. And that's all. I got a couple of minutes early, but thank you very much. And if you need me, I'll be on Discord. Find our docs. Just go to Textile IO or docs textile IO. And we also have our Slack.
00:25:57.914 - 00:26:08.100, Speaker B: So if you go on Pass this weekend and want a place to come hack and build things, we're always on Slack Textile IO, and you can find us there too. Thank you very much.
00:26:09.510 - 00:26:18.760, Speaker A: Awesome. Thank you so much for this great presentation, Andrew. Is there any questions before we wrap up? We can still take questions.
00:26:20.250 - 00:26:24.200, Speaker B: Looks like Carson was grabbing them real time, so that's awesome.
00:26:25.370 - 00:26:59.530, Speaker A: Great. Well, thanks for that, Carson. If there's anything else coming up or if this inspires more thoughts and ideas in you, please join the Discord Channel. The sponsored Discord Channel is really the place to get support through, and it really helps to get active and contact the textile team. It will definitely help you get further along with your project on this note, thanks, everybody, and I wish you a really good rest of the day. Thanks, Andrew.
00:26:59.610 - 00:26:59.900, Speaker B: Thank you.
