00:00:06.250 - 00:00:40.146, Speaker A: Good morning, good afternoon, and good evening, everybody. My name is Kartik, one of the co founders of ETHGlobal, and I'm super excited to welcome all of you to Hackathfest finale. This is the amazing conclusion for our month long event and all of you are watching this on Ethgobal TV. So for all of you that are joining us for the first time, you can sign and say hi to us and you'll be able to kind of participate in the chat and ask us any questions. And we'll also be giving out NFT poaps for everybody that logs in and says hi. All right, let's get started. This event is brought to you by ETH Global.
00:00:40.146 - 00:01:10.318, Speaker A: And for those of you who don't know, E Global is an organization with a very simple mission. Our goal is to bring on thousands of developers into the web3 ecosystem. And we do this primarily by running hackathons and Summits. And this is exactly what the last four weeks were about. We ran an amazing summit around what's happening with decentralized storage, the Hackatha Summit on the Eigth. The videos and talks are up on the Ecobal YouTube, and you can also go to Ethgobal TV and watch the summit again on demand. And today is about the hackathon.
00:01:10.318 - 00:01:57.730, Speaker A: So the hackathon just finished about a couple of days ago and we're going to talk about who some of our amazing teams are and what the prizes that everybody is going to be winning. And to kind of talk right about some numbers, this event has been massive. We have 950 people who participated at the hackathon from 82 different countries spanning 16 different time zones. This is one of the bigger ones we've ever done. In addition to those amazing hackers, we also have 17 ecosystem partners that are here with us and also 50 ecosystem mentors that were there to kind of provide any help on the technical side or anything beyond. We kind of put everybody on a map and just for fun, to see where so many people were coming in from. And it's just constantly amazing to me to see so much incredible representation from all continents.
00:01:57.730 - 00:02:44.094, Speaker A: All right, and of course, we are giving $200,000 in prizes. So today is going to be about seeing some of those teams live demo, as well as talking about every single prize that everybody has won. What blew our minds was that we had 197 submissions and teams and projects that came out of it. So the last few days were jampacked with everybody, including us and our amazing partners, going through hundreds of projects to see what everybody built, to give feedback and decide who's going to be winning what prizes. So we're going to cover all of that now. And doing this in the third time in a row. This has been our biggest event ever, more than double the very first one we did about two years ago.
00:02:44.094 - 00:03:17.814, Speaker A: So can't wait to get started. And I want to quickly thank all of our amazing partners before we jump right into some of our demos and kind of give a really special shout out to IPFS and Filecoin. Without their help and support, this would not be an amazing event. They've been an amazing partner for all of our events and it's just a pledge to work with them. So quickly. I want to thank IPFS filecoin team and also polygon fluence the graph ceramic covalent lit protocol NFT port OAPs sonar spear on table land orbit ballast xmtp labs HyperDAP radius and secured. Finance.
00:03:17.814 - 00:04:06.646, Speaker A: All of these amazing teams were there to help all of our hackers and also be giving away a handful of prizes. So let's go into the 197 submissions. Submissions were due on Sunday about three days ago, and we spent all of Monday going through live judging for these projects. Our amazing set of judges went through and talked to all these teams and gave feedback, asked questions, and that got us to ten finalists. So we're going to be bringing on these ten teams to live demo what they built over the course of this hackathon. And before we kind of jump into all these teams, I want to quickly first recognize all these amazing ten projects. So, without further ado, the ten finalists for Hackaths 2022 are Interform Chain, Look, Optic, GoShare Builder, polydocs waypoint Toffee Bit, Ripdb and Split Protocol.
00:04:06.646 - 00:04:44.934, Speaker A: So I want to give a big congratulations to all these ten teams. We're going to bring them on to live demo what they built so all of you can also see and then we'll go into all of the rest of the prizes. And before we kind of jump into the very first demo, I want to quickly take a second to thank 187 teams listed here for the amazing work that you've done. So many of you came in from Web Two backgrounds wanting to learn more about Web Three. Some of you are kind of coming back to these events from whether it was New York or Hack Money Me, or some of our previous events from earlier in the year. It's incredible to see the excitement that all of you have here. And I really want to emphasize that just because you were not one of those ten teams does not mean you were not good enough.
00:04:44.934 - 00:05:30.546, Speaker A: Our goal is to highlight some of the things that we find super interesting through our judges and bring those teams on for this short finale where you can see some of the highlights. All of you are still amazing and you're going to be winning a lot more prizes that we're going to announce soon. And I really hope that you all continue to work building and finishing up what you did or if you want to extend continuing to build on what you submitted on Sunday, we really encourage you to do so. And if you need any help, whether it's introductions to people or technical help or just overall. Any general advice, please don't hesitate to reach out to me or anybody on the EEP Global team. And for those of you who want to find out what these 197 projects were, you can head over to Eepglobal.com showcase to see all these projects.
00:05:30.546 - 00:05:56.394, Speaker A: Now. You'll be able to see all the submissions as well as kind of all the things we're going to announce later in an hour. All right, so without further ado, let's jump right in. We're going to bring on these ten teams back to back. They're going to demo what they built, and we're going to move on to the next team. And then after the 10th demo, we're going to be talking about all the prizes. So let's get started with our very first demo for today, and that is Project Interform.
00:05:56.394 - 00:06:02.110, Speaker A: So without further ado, let's welcome the Interform team. Feel free to get started whenever you're ready.
00:06:02.260 - 00:06:02.686, Speaker B: All right.
00:06:02.708 - 00:06:37.878, Speaker C: Hey, everybody. The project that we built for Hackfs is called Interform. It's a web, three native form builder platform powered by IPFS, paving the way for a new, decentralized and censorship resistant way to collect data. To put it simply, think of Google Forms or Airtable, but on decentralized storage. Our mission is to democratize access to data and build a censorship free world. Let's dive straight into the demo. Imagine we're starting an activism dao in a country where access to centralized form services like Google or Typeform are strictly prohibited, and we want to create a survey to gauge interest in our cause, especially one that might be sensitive to authorities all while maintaining the privacy of our form respondents.
00:06:37.878 - 00:07:22.708, Speaker C: We'll first navigate to Interform app, where we'll be able to see our friendly landing page, where we can read all about Interform, and then we can go straight on ahead and launch the app itself, which will take us to our form builder page. There, we can start by connecting our wallet. Once connected, we can either choose to see a dashboard of our existing form or create a new form from scratch. Let's go ahead and create a new form. Now, here on this form builder page, you can see on the left a palette of form elements to choose from, and on the right side, a form canvas to build your form. We're going to go ahead and start creating our form specific to our activism dow. Now, as you can see, we've put a lot of time and thought and effort into making the most delightful user experience possible.
00:07:22.708 - 00:08:27.300, Speaker C: When creating these forms, you can simply drag and drop elements from the palette into the form canvas to start creating your form from scratch. And just like any other form service, you can also specify for each question toggle on the side whether or not you want the question to be required or not, and also drag around the ordering of the questions for your liking. On top of that you can also see that you'd be able to specify whether or not you want to collect the wallet addresses of your form respondents. Now, for the purpose of this very sensitive survey where we want full anonymity and protection for our users, we'll specify not to collect the addresses and once you have created your form, just click Publish and then boom. What you'll be getting is a shareable link to your form. But on top of that you're going to get a link to your CID of your JSON data of the form that we've just hosted for you on IPFS via web3 storage so that it can be accessed by anyone with just an internet connection. Now let's say that just received the actual survey link as we specified earlier, we specified not to collect the user's addresses.
00:08:27.300 - 00:08:35.290, Speaker C: And I'm going to show you that as a user without any user authentication on the website, I'd be able to input my answers and submit it without any issues.
00:08:36.620 - 00:08:37.044, Speaker B: Boom.
00:08:37.092 - 00:09:24.424, Speaker C: And just like the form creation, we'll be able to see a submitted response hosted on IPFS with its unique CID. Now, on a quick side note, had we actually specified to collect the user's wallet addresses, when user goes into the form they will be greeted by this connect wallet screen where they'll have to connect their wallet in order to see the form content. And once they submit the form response, their wallet addresses will be saved on IPFS alongside their responses. Now let's imagine it's actually been a couple of weeks and we've already collected a good amount of data on our form. As a creator of the form, I'll now be able to go to the dashboard that I mentioned earlier and in a single view I'll be able to see all my organized existing forms here, showing them in progress or completed. Also I'll be able to edit the form, view it on IPFS, view responses or close the form. We're going to go ahead and view responses now seen here on the single page.
00:09:24.424 - 00:09:57.668, Speaker C: We've summarized all the responses for you. Fully equipped with easy to read pie charts to visualize selection responses and also seamless way to view the written responses. Now the real kicker here, which we think is that we've talked about posting these responses on IPFS. Now imagine a scenario where a local authority cracked down on our efforts. They don't want to see this type of activism happening in their region. They've identified our site into form app and as a whole banned the region's access to our IP address. Now, if this was a centralized service, not only would the users lose access to all the responses, but the creators of the form themselves would have lost access to everything as well.
00:09:57.668 - 00:11:01.044, Speaker C: But now since everything is on IPFS only with the CID, anyone on the web only with IPFS IO or with a local node will be able to see all of the form and the form responses hosted on IPFS decentralized storage system just like this. Now, the next question might be, well, if a government has banned your IP, how will you continue to create new forms to support censorship resistant form building? No worries at all. For that exact scenario, we've actually hosted our entire web app on IPFS as well via fleek service, so that anyone can set up their own IPFS node and directly interact with the site, taking full advantage of the decentralized web. And finally, as surefruit fallback, we've hosted our entire code base publicly on GitHub, and we plan to provide the best documentation such that anyone can actually launch their own instance of Interform and launch forms of their own. As you can see, Interform provides a powerful way for you to inclusively survey individual while protecting their privacy by having users opt in to share their wallet data. We embrace on Chain identity while ensuring that the user data is never stored without consent. Gone are the days of sharing your email when submitting forms.
00:11:01.044 - 00:11:07.800, Speaker C: Our mission is to democratize access to data and contribute to a censorship free world. Hope you enjoy the presentation and thanks for tuning in.
00:11:07.870 - 00:11:08.248, Speaker B: Amazing.
00:11:08.334 - 00:11:26.210, Speaker A: Thank you so much for an awesome demo and also for going first. This is really cool to see and hopefully we get to see this also in production, that everybody can use it. So, congrats and we are ready to move on to our next demo. So, without further ado, I'd like to welcome Celil from Chainlook. Whenever you're ready.
00:11:26.740 - 00:11:42.896, Speaker D: Hi. Yes. Thank you, Karthik. So, let me share my screen. Yeah. So I'm Celil, and product I build is called chainlook. So, Chainlook is a decentralized blockchain analytics platform and it's powered by the Graph and IPFS.
00:11:42.896 - 00:12:31.648, Speaker D: So what you can do is you can build analytics dashboard using data from subgraphs. So you can think of it as dual analytics, but data coming from subgraphs. Yeah, you can build widgets like line, chart, pie, chart table, just by configuring the data source, that is, which subgraph to query, and you specify which fields you want to render. Are there any filters to apply? So, all of this is a JSON, and this JSON gets stored in IPFS. So the configuration and the metadata for Vjsn dashboard, they are stored in IPFS and the data comes from subgraphs, the Graph protocol. Let me show you a demo of one dashboard. So this is Dashboard for Ud Square P three protocol, and it's powered by this particular subgraph, Mercedes Ethereum.
00:12:31.648 - 00:13:11.020, Speaker D: So you can see metrics like total value locked revenue, total pool count. This is an area chart for last six months of volume. And this is the top pools of the day, the usage trend of the last 30 days. And this is a table on liquidity pools based on aggregated data from last seven days. So all of this data is coming from subgraphs, and all of these widgets is the configurations are open and anybody can make a copy of it and make some changes if they want. So, yeah, this is the configuration of this widget in this JSON. So you can see the title type chart, data sources, subgraph, this is a subgraph ID here and you can see the entity we are querying.
00:13:11.020 - 00:13:50.056, Speaker D: There are some filters applied and below you specify the chart. So in the x axis we render the timestamp and the data we render in the area chart is called daily volume USD. So if I want to make some changes to this one, for example, so instead of last six months, I just want last 30 days. And in the filters query, instead of first 180, I'll just do 1st 30. So you can see the preview here and once you are happy with it, you can just publish to IPFS. So this JSON gets published and you can see that here. So the URL will be widgetthecid of the JSON and the widget is rendered.
00:13:50.056 - 00:14:29.660, Speaker D: So you can publish a widget and share it with others if you choose to. Or you can also save this widget locally, which means you can use it when you create a new dashboard. So, I have saved this locally and there are some examples of a couple of other widgets which you can use as a template. So, yeah, this is a symbol metric that you saw earlier. So let me save this one also locally and if I go to the new dashboard, I can add those features. So, last 30 days, this is the one we did and I can drag and drop resize. And if I add the other widget as well, I can put it here and optionally I can also add some text widgets to show some info.
00:14:29.660 - 00:15:12.212, Speaker D: Yeah, you can drag and drop resize rearrange and once you're happy with it, we can just publish this to IPFS. So, yeah, this entire layout of this dashboard plus the widgets, it's basically a JSON underneath and that gets published to IPFS. So now this JSON is IPFS in IPFS and this is the CID of that one. So sometimes it takes a bit to get stored in IPFS and while we wait, I just wanted to show another dashboard. So this is the same thing, but the data is powered by IPFS. So this we just the bitcoin price history, this is based on data coming from IPFS instead of subgraph. And in this one the data source is table.
00:15:12.212 - 00:16:00.056, Speaker D: And so if I go into the details, yeah, you can see the source is table and then the table name is here and these are some filters and the columns here under. So this will automatically generate the SQL query required for table and then render the widget. So if I go back, yes, our dashboard is ready and URL is CID. So what it means is you can publish your own JSON with the same, schema yourself and pin it to IPFS and use here. It don't have to be created from chainlock, so you can build your own private dashboards if you want. Now, any user with this URL, they can make a copy of this dashboard and start by removing this one and adding some couple of extra widgets if they choose to, and then publish a new copy. Yes, that's the main essence of it.
00:16:00.056 - 00:16:19.920, Speaker D: So this is pretty much live for use, and the URL is Chainlock XYZ. So, yeah, give it a try and then try creating some widgets and dashboard. And if you end up creating a cool dashboard, just let me know in this code and I can showcase here in the homepage. Yes, that's it from me. Back to you, Karthik.
00:16:20.740 - 00:16:44.490, Speaker A: Amazing. Being able to look at the graph data directly is a game changer. So thanks so much for do this and for everybody checking it out, it's already live, so you can just go to Chainlook XYZ and try it out. So congrats. And with that, we are ready for our next demo. So without further ado, I'd like to welcome the Optic team for their demo. Feel free to get started.
00:16:45.820 - 00:17:33.080, Speaker B: All right, my name is Felix. I'm here with Dominic and Evan, and we created Optic, which is a web free enabled video conferencing application to provide a platform for Dao contributors, teams and groups to host meetings, online events and more. First, we'll log in and authenticate via Morales. Next step is to enable identity via Xmtp for our notifications. So on our Dashboard we have a pro version and a free version. If you were going to use just the free version, you can jump right into the Video Calls tab, add your participants addresses, and start a video call immediately. In our Pro section, it works like this you pay 50 USDC per year and you will enable notifications, scheduling, and Poops.
00:17:33.080 - 00:18:24.260, Speaker B: Once you went pro, you can type in your team name, a potential Dow token address, and the individual participants you want to add here. Once you've done that, you can go into schedule where you create a meeting. You add in date, time, your title, the presentation, and the potential cost, which is important if you want to monetize your content. For example, if you have courses you want to share, you can upload a cover photo for that meeting, and then you create the meeting. This will take a couple of seconds. It will pop up MetaMask, which creates an NFT for you as the meeting host. Once the transaction goes through, a notification will be sent out via Xmtp to all the participants in your meeting, and they will be able to access those meetings in their notifications tab.
00:18:24.260 - 00:19:01.170, Speaker B: This is going to take too long, so I'm just going to jump right into one of the upcoming dates that I prepared for you. What we can do here is either jump right into the call, create a POAP for our participants, or go into the archive. So we'll start with the Poaps. We created an open POAP, which is free to use for everyone in collaboration with HyperDAP. All we need to do is connect with MetaMask and then we can type in the title a potential IPFS image link in the description. Once we create the POAP, we'll be able to copy the link and start the call. Jump back here.
00:19:01.170 - 00:19:51.572, Speaker B: Once we go into the call, we'll join our meeting. And what we can do now, as soon as our teammates are present, we can open the chat room, paste the link to claim the POAP, and all we have to do is let our teammates know which token ID it is. In our case, it's going to be number nine. What we can do here is we go onto this link, which redirects us to the hyper DAP front end, where we connect with MetaMask. All we have to do is type in the token ID and claim the POAP. Once we confirm the transaction, we'll be able to see the POAP in our Poaps tab on the dashboard back to the video call. What we can do here is we can start a recording, which is particularly useful if we have something to talk about and some of our teammates are not present.
00:19:51.572 - 00:20:34.320, Speaker B: So we'll talk about our meeting, record the call, stop the recording, save it, and once we saved it, we can come back to our Schedule tab, find our meeting, and go into the archive. So we'll go into this archive here. We'll be able to upload a video or see one of our previous recordings that we did. Once you click this little icon down here, it will take a couple of seconds. It will show us a video that we uploaded previously. You can rewatch it. And now I guess the question arises how does someone who is not the host of a meeting access those archives? Therefore, you just go back into your dashboard and go into the notifications.
00:20:34.320 - 00:21:15.390, Speaker B: What we see here is we have a couple different notifications. If you get a new notification, you will have to first accept the notification, which essentially mints an NFT and shows that you got the notification and that you will participate. Once you did that, the buttons will change into join an Archive, where you can join the meeting or go into the archive. So this is another archive from another meeting. We had Dominican meet this a couple days ago. We can rewatch the meeting, and as I also am a participant, I could also go ahead and upload any missing files or whatever. Last but not least, we can go to our Poaps tab and see all the Poaps that we participated in, all the meetings we participated in.
00:21:15.390 - 00:21:45.876, Speaker B: All of those are also visible on the testnet openc. We have our meeting name, the IPFS link in the description. In terms of our next steps, we'll be probably polishing off the user interface, make it a little bit more user friendly, add a couple features, create a pitch deck and once we are done with our testing phase, we should probably be able to launch this in a couple of months time. That's it. Thank you for your attention and have a good one. Amazing.
00:21:45.978 - 00:22:11.550, Speaker A: Thanks, Felix. This is going to be super awesome for a lot of DAOs to use, so I can't wait for others to try this out. I want to make a different observation, but I'm going to wait until the next demo and talk about a point, because we're noticing a very obvious amazing theme for all these hacks. So stay tuned for that one. But with that, we're ready for our next demo. I want to welcome Ghostshare to demo what they built.
00:22:13.360 - 00:22:57.260, Speaker C: Hello, hackerfess. This is Ghostshare, the file sharing service that keeps privacy and user friendliness equally serious. What is ghost share? Ghost Share is a service to send files between people similar to other Web two tools you probably use frequently, but now decentralized and private. But why? Our mission is to bring the millions of people who are currently using centralized file transfer services to Web Three. In order to do so, we are discovering new approaches to make file sharing user friendly without giving up privacy. In order to do so, our core proposition is to make it hassle free and 100% private. By hassle free, we mean that the user doesn't need to have a wallet or pay for any gas.
00:22:57.260 - 00:23:43.320, Speaker C: And private. The user doesn't need to give up any email address or any private data. But how does it work? This is a simplified version of the underlying working flow. When the user uploads a file, the file gets encrypted with the help of the network, and the encrypted file gets stored on IFPS. The corresponding metadata is then stored on our Fire registry contract, which is currently deployed on the polygon testnet. When the upload is successfully done, the file owner can share the link by a custom link to the recipient. The recipient, on the other hand, needs to request for access and the file owner needs to grant access.
00:23:43.320 - 00:24:25.730, Speaker C: The access is stored in our file registry contract and is the access control mechanism to decrypt and download the file. Let's go to a live demo. I have two windows opened because on the left side I'm simulating the file owner, and on the right side, the recipient. When the user visits our page for the first time, he get informed that under the hood a wallet was generated. We call it, so to speak, a temporary account. We can back it up, but we skip it for now and go back to this later on. We can select a file or just drop it in and upload the file.
00:24:25.730 - 00:24:58.800, Speaker C: That takes a moment because the file gets encrypted stored an IFPS and a gasless metatransaction register the file on chain. I can now copy this link and share it with someone. I do it on the right side. As a recipient, I now try to access this file. We are looking for the file, basically for the metadata of the file. In order to request access for this file. We found this file and request access.
00:24:58.800 - 00:25:21.596, Speaker C: Sometimes it takes a moment between the communication between these two users because we are using Xmtp. So I try it again. Just waiting a second.
00:25:21.698 - 00:25:22.910, Speaker B: Request access.
00:25:26.260 - 00:26:16.510, Speaker C: Usually it looks like this. I have the possibility to compare these kind of emojis. This is usually the public address and grant access. When I granted the access, emitter transaction gets sent to the smart contract and the file process is successfully done. On the other hand, I waiting for the access to be granted and then I can download the file, the file successfully. I can go to my dashboard or my account and see what files I already shared and with whom. I also can expose my private key, which was locally created in the browser in order to backup this session and restore it later on if I want to.
00:26:16.510 - 00:26:38.160, Speaker C: That's for the demo. The service is live on ghostshad. XYZ we are happy to invite you and test it out, give us feedback in order to improve. We also have a great plan for the future in order to improve the speed, the overall user experience.
00:26:42.550 - 00:26:50.360, Speaker A: I'll let you finish there. Just think you ended up getting muted last second. So we got the last sentence cut up, but let me know what you were going to say.
00:26:52.010 - 00:26:53.320, Speaker C: This slide or this?
00:26:53.850 - 00:26:54.920, Speaker A: There we go.
00:26:56.330 - 00:27:07.740, Speaker C: The most important slide. So thank you everyone, especially ETH Global, for making this nice event happen, as well as the enabling sponsors which you're seeing on the slide. Thank you very much.
00:27:08.510 - 00:27:42.482, Speaker A: Awesome. Well, thank you so much for that demo. I know sometimes live demos are tricky, but we still saw what everything we were supposed to see for this whole authorization and download process. And it's awesome to see that you kind of were able to do all of these things in a really short window. So congrats again and we are ready to move on to our next demo and that is Project Builder. And the best thing about all these projects is that we are slowly replacing every single tool on the Google app suite. So it's kind of awesome to see these things already ready to be used and entirely being decentralized.
00:27:42.482 - 00:27:45.960, Speaker A: So I'll let Giancarlo go ahead with his demo.
00:27:48.970 - 00:28:08.030, Speaker B: Hello. Hi, cartek. Thank you very much. So, good morning everyone. Today I will be presenting Builder the best way to build web3 apps without code as part of the hack FS 2022. My name is Jean Carlos Sanchez. I'm a software engineer from Venezuela and founder of Dapify.
00:28:08.030 - 00:28:49.070, Speaker B: So what is builder? Builder is a multipurpose web DAP builder. Platform with compostable modules similar to Legos that users drag and drop into a canvas for a no code building experience. These modules are composable and interoperable, meaning that they can talk to each other. I'm going to explain you a little bit how this works. So each component is an encapsulated module containing HTML, CSS and JavaScript. They can implement vendor specific logic and integrate with other elements to provide a context to the rest of the modules. The way that they do is by sharing a context and emitting and listening to modules.
00:28:49.070 - 00:29:47.920, Speaker B: So it's demo time. Let's build a DAP that allows us to mint and track auctions of NFTs with a built in support chat deployed to IPFS. So this is already running into the builder. So let's start first by connecting our wallet modules so we can inject provider and signer context to other modules to consume. Then we're going to add a smart contract UI module that let us tap into an NFT smart contract deployed on polygon. In here we can see, we can specify the contract address, the abi, the function target, and this is the same with every module. You can specify configurable components for them.
00:29:47.920 - 00:30:37.758, Speaker B: Now, this module is using the context that we previously injected for the provider and designer. Right? Now let's add a way to track auction prices for the NFTs using a chart that is powered by a subgraph from the graph. So as you see, we can specify here subgraph URL, the query and how the response is going to be consumed and printed into the access. Now, if you notice, the current subgraph only imports values in native token currency. Let's do something about it. Let's import the context from Covalent that will fix that and print everything in USD. So you can see now the USD prices here.
00:30:37.758 - 00:31:28.040, Speaker B: And last but not least, let's just import a chat support powered by Xmtp so that we can talk to our customers, our visitors can talk to us when they go and visit. Let's just quickly go ahead and launch this. This packages everything, every module into a web app that can be deployed to IPFS. So this is our app, right, let's just get started on this and let's connect our wallet. It's fully functional and you'll see that share context among everything. Shall we sign? So we're now connected with our wallet. Now let's just mint an NFT.
00:31:28.040 - 00:32:06.500, Speaker B: We're going to specify that it's going to be our address, we're going to be the beneficiary, we're not going to have any reseller revenue and we're going to specify Tweaking Uri, which already created. Let's just mint this for the sake of this. Let's just speed it up so we can quickly see it afterwards. But this is a process as you use this. Now look into the context. We already have a chart that is power NFT Graph, which is using Covalent to display price in USDS. And if you ever have any questions.
00:32:06.500 - 00:32:30.720, Speaker B: You can just pop in here and use your wallet here to connect to the Xmtp which is also configurable module. And then here you can chat with me since I configured this to connect to my wallet. So that's it for the demo, just showing interoperability and composability for no code. Thank you very much.
00:32:33.250 - 00:32:48.194, Speaker A: Amazing. Thank you so much. This was an awesome site builder that really understands what the Web three context is and hopefully others get to use this too and kind of get started really fast. Well, thank you so much. Next up we have Polydocs and I'll have Ray get started.
00:32:48.312 - 00:32:48.980, Speaker B: Welcome.
00:32:50.250 - 00:34:14.634, Speaker E: Thank you so much. Akshay, Drew and I are really so privileged to get to present today Polydocs smart documents for smart contracts. The core inside of Polydocs is a microapp that's hosted on IPFS that allows one to both see a contract agreement that is immutable because it's being stored on IPFS and dynamic because it's coming through code and be able to agree to those terms directly through this same micro application. The fact of that agreement is then recorded directly to the chain right here on the event log for this particular NFT contract linking my contract address with the exact URL of the agreement that I just signed. And this is significant because it takes advantage of something that's like intrinsic to IPFS, which is its immutability because both the renderer exactly the way it would be put in through a standard web browser because it's just a web app, is being stored on IPFS and stored by a CID, which means it's immutable. Similarly is using a template we currently use markdown with just some tokenization to reflect what the actual contract is going to be and then those terms get filled in madlib style from a smart contract identified with a chain ID. So sort of a global addressing, but as of a very specific block height.
00:34:14.634 - 00:35:08.702, Speaker E: That means if you put all these pieces of information together, you will always get the same contract every time. And now you have a decentralized agreed upon source of truth, just like the distributed ledger does on the actual transaction side. Now, because we're doing this using standards for IPFS and with the chain, that means it works with the services that people use today, like say, OpenSea for an NFT. And if you were to try to buy one of our signing slots, OpenSea would say you're not allowed to buy it and the reason you're not allowed to buy it is because you haven't agreed to the terms for our particular community that this token is gating. So once you've agreed to those terms and that's been recorded onto the chain, you will then be able to buy that NFT. That way we're able to combine both the legal agreements in terms of these documents with the transactions that are being recorded on the chain. So we try to make it very smooth for the customer.
00:35:08.702 - 00:36:03.714, Speaker E: We also try to make it very smooth for the vendor. If you want to add this to one of your contracts, first of all, it's already in the wild. It's in production on polygon. This contract is on Polygon right now, and you can see that it just inserts one line that before you execute the transfer, make sure that whoever the recipient is has accepted the terms of our particular community agreement contract, whatever it might be. Otherwise it rejects the transfer. And with that one line being backed by an abstract contract that we have available up on GitHub, that one can just mix in, along with interfaces that make it easy to work with your particular contract. And then to make it easy to actually deploy just the contract you want, we created Polydocs XYZ, which is an editor that allows you to modify, say, template agreements and be able to make them exactly what you want them to be, upload them to IPFS, and of course, they're subject to whatever those terms are.
00:36:03.714 - 00:37:08.854, Speaker E: They're going to be specific to your contract, which you can also edit your contract, setting it to use a particular say template, what tokens you want to have in it, and be able to preview the exact experience you're going to have for your customers and what agreements you're really asking them to sign. In that way, we get both the protections of law along with the protections of the code of the cryptographic distributed ledger. So looking forward, we're looking forward to making this safe for customers through you. Having trusted documents and using templates longer, worried about having the wool being pulled over your eyes by some lawyer who's customized in a way that you're not really sure about, like having a standard NDA how many of those have we all had to sign? And also making it safe on the other side by making a standard that allows us to protect things like intellectual property rights, make sure you're within regulatory bounds of qualified investors, et cetera, so that it can be safe. For larger companies to be able to come in and be able to use this great technology to accelerate markets beyond the Wild West that we have right now. Basically take DocuSigned as a centralized entity and turn it into a standard for all of Web Three. Thank you so much.
00:37:08.854 - 00:37:20.540, Speaker E: We're so grateful to be a part of this competition. And just a moment of personal privilege. Thank you so much to Akshay and to Drew, who have been fantastic teammates to work with, and it has been my privilege to get to work with you at least two weeks.
00:37:22.590 - 00:37:44.530, Speaker A: Ray, Akshay, and Drew, thank you so much for that amazing demo. And I mean, this is such a really interesting primitive. Like, just being able to enforce some of these conditions is just a game changer. So I can't wait for everybody to actually try this out. And of course you can do that by heading over to Polydocs XYZ. So congrats again and can't wait for this to be seen in the wild.
00:37:44.870 - 00:37:45.858, Speaker B: Thank you.
00:37:46.024 - 00:37:54.710, Speaker A: Amazing. All right, next up we have our demo number seven, and that is Team Waypoint. So without further ado, let's welcome Dan.
00:37:56.810 - 00:38:42.370, Speaker B: Hello. Okay, I'm going to share my screen. Okay. Hi, this is Dan Ovet, and with Lewis Parker, I am presenting waypoint Waypoint is a platform that offers true interoperability for the metaverse. With Waypoint, you can build and mint a virtual world onto Polygon or any EVM compatible blockchain plus IPFS, then connect them together with on chain portals without needing any centralized or private servers. Let me show you how it works. So here's the page.
00:38:42.370 - 00:39:15.610, Speaker B: This shows a bunch of worlds that have been created using our platform on the Polygon blockchain, on the Polygon Mumbai testnet blockchain. For now, I'm going to show you this demo on Rinkabee because it's going to run a little bit faster. So this is worlds that have been minted on the Rinkabee blockchain. So let me show you how you actually build one of these worlds. So what I'm going to do is connect my wallet and I'm going to open the Virtual World Builder. So this is like the standard world we give you. And it's very easy to drag and drop files and upload the scene.
00:39:15.610 - 00:39:59.854, Speaker B: So hold on a second. My mouse is okay, excuse the controls at the top. Let's do drop this in here. And then I'm going to move this down a little bit, drop a 3D model onto the scene, and then I can add a video or an image. It's very easy from dropping from your desktop onto the screen. And then let me just hide this. I'm going to mint a world with a scene and I'm going to mint this.
00:39:59.854 - 00:40:38.830, Speaker B: I'm going to give it a name, Dan's New Worlds, and I'm going to mint it. And what this is going to do is it's going to bundle all the assets I uploaded onto this screen, including the video, the 3D model and the image, and create a scene graph which says where all these things are located inside the 3D scene. And bundle that together and upload it to a folder in IPFS using Web Three storage. And then I'm going to create a token using all these assets. So this is going to create an ERC 721 token pointing to the scene. And let's see what one of those tokens look like. So this is one of the tokens that have been minted.
00:40:38.830 - 00:41:32.430, Speaker B: And I can show you. It's actually a fully interactive application NFT. So it's rendering the 3D scene all from IPFS and also rendering the application IPFS. And let's see what the actual token looks like if I go to the token here. So what this did is this created an ERC 721 metadata and the token contains an image which is the screenshot I captured animation URL, which is going to be interactive application that points to this scenegraph and IPFS and then the scenegraph URL, which is going to point to the folder that I just uploaded. And let's take a look at what that looks like. So that folder will contain all the assets that I just dropped into the scene and a metadata JSON, which I'll look very quickly at, which just shows where all the assets are placed within the 3D scene and this can obviously grow to something a lot more elaborate.
00:41:32.430 - 00:42:07.674, Speaker B: The final thing I'm going to show you is that you can actually create a portal to another space using a smart contract operation. So here I'm in a space. I'm going to create a portal to another world and that's going to open a smart contract operation. And I can actually show you here that this is basically the map of all the spaces and all the portal connections between them. And this is all querying from the graph. And in a second you will see this main portal will show up. Or it should.
00:42:07.674 - 00:43:11.356, Speaker B: Just give it a second. There it is, it looks like it showed up and if I put around, there it is, there's the portal that I created and I can go through it and it'll take me to this new world. And you can see here that there is a new connection between these two worlds that have been created. So that is it for the demo, I'm just going to quickly go through what's next. So the next steps is we want to make these spaces truly interoperable, which means you can export them as a GLB format and import them into any metaverse. We want to make composable metaverse spaces, which means they can contain other tokens that can be detached and sold on their own. We want to use multiplayer using Lib P to P and we want to be able easy to launch community owned space networks for Dows or NFT communities and you can access live demo right now at Waypoint on Sleek Co.
00:43:11.356 - 00:43:18.156, Speaker B: And that's it, I'm going to stop. Amazing. Stop sharing.
00:43:18.268 - 00:43:30.416, Speaker A: All right, thank you so much. This was awesome. And not only that, people can play with it right now, so can't wait to see a whole universe of portals being built in and just try this out. Congrats.
00:43:30.608 - 00:43:31.684, Speaker B: Thank you.
00:43:31.882 - 00:43:38.310, Speaker A: All right, next up we have our 8th project, which is toffee Bid So. Kai, whenever you're ready.
00:43:40.200 - 00:44:23.632, Speaker B: OK, so hello, my name is Kai and I'll now be presenting my hackerfest project toffee Bid So NFT Marketplaces. They play an important role in the web3 ecosystem, especially as use cases for NFTs keep increasing. They're great because they let us buy and sell NFTs in a trustless manner using smart contracts. However, they are not quite as decentralized as you might expect. Importantly, they heavily rely on web two infrastructure, especially when it comes to managing order books, a crucial part of your application. So whenever you place a bid on an NFT, you sign a signature, and that signature is saved in a traditional Web Two database. Now, this is problematic for a few reasons.
00:44:23.632 - 00:45:07.620, Speaker B: First of all, we are relying on Web Two infrastructure, which is not what Web Three is about. And second of all, every NFT marketplace ends up with an isolated order book because they're all using their own system. This is annoying for sellers that want to reach the broader NFT market and reach as many bidders as possible. They have to deal with multiple NFT marketplaces, which ends up with situations like this. Okay, so let's move to a demo. Toffee aims to solve these issues by creating a decentralized universal NFT marketplace order book. So I'm going to switch to this tab, actually, and I'm logged in with an account here, and I want to bid on an existing NFT.
00:45:07.620 - 00:45:52.476, Speaker B: So I can search for any NFTs such as test ETH, nest domain NFT, and I can choose to bid on this NFT. I'm not going to do this here because I'm going to switch to Testnet for the demo. The search function works on polygon and ethereum mainnet. Now, for the testnet, I've hard coded a search response. This is a demo NFT that lives on the Mumbai testnet, and it's owned by another account. So I want to place a bid on this NFT. I click on Bid, I see some information about the NFT and I can choose to bid, let's say, 15 USDC, and I can choose which NFT protocol I want to use for the final settlement of the sale.
00:45:52.476 - 00:46:36.352, Speaker B: So I'll choose that the sale will be done over Seaport, and I can click on Place Bid. So what happens here is Toffee automatically checks the token approval checks for the Seaport protocol, and it also does a signature request that is a valid signature for the Seaport protocol. So I can click on Sign and this will create a bid. Now, this bid is a signature that will be saved on IPFS, and specifically it's saved in an instance of Orbitzdb. So we have a public decentralized database that clients connect to directly, and data is persisted between peers using IPFS pub sub under the hood. So we've just created this bid. I can switch to another account.
00:46:36.352 - 00:47:34.248, Speaker B: This is the account that owns the NFT that I just bid on. With my first account, I can click on the Incoming Offers tab. And what we'll see here is we just received an offer for 15 USDC and I can see that this offer will be done using the CPORT protocol if I choose to accept it. So I will click on Accept and I'll set a high gas fee so that this happens as quickly as possible and click on Confirm. So what just happened is toffee fetched the bid signature from IPFS and all the relevant data for the sale, and it then checked whether the seller here has already approved their NFT to Seaport, and then it submitted a transaction to the Seaport contract for the fulfill order of the sale. So as you can see, that transaction just got confirmed. We don't see any offers anymore because we no longer own the NFT.
00:47:34.248 - 00:48:39.210, Speaker B: And if we go on polygon scan, we can refresh our account here. This is the account that just sold the NFT. We'll see that we have an incoming transfer of 15 USDC and an outgoing transfer of our NFT, and this was all done within one transaction to Seabort. So what Toffee allows us to do is we are leveraging any existing NFT marketplace protocol and the power of these protocols, all while benefiting from a decentralized public order book that runs on IPFS. Now, as for the future of Toffee bid, there's potential to add more features to the interface such as allowing sellers to list NFTs for fixed price and letting bidders fulfill that directly, or other potential integrations with NFT protocols. It could also be interesting to see existing NFT marketplaces integrate toffee order books directly into their interfaces so that the NFT market would be more decentralized and interoperable as a whole. Thank you.
00:48:41.580 - 00:49:14.660, Speaker A: Amazing. Thank you so much for that. And I think you kind of hit the note right there, which is all these marketplaces only work if they're able to talk to each other, and we can have fragmentation this way for all these different NFTs that are basically in the open market. So I think this is a really cool solution and I hope that others get to use it and integrate it and you get to continue building this to probably putting this on mainnet. So thanks again and congrats. All right, next up we have our second last demo, and without further ado, I'd like to welcome Zach from Ripdb.
00:49:15.480 - 00:49:55.520, Speaker F: Okay, my name is Zach and my hack is called Ripdb. And Rip is a dead simple, fast, decentralized JSON store built for Web Three builders who want to move quickly and under the hood. It's just redis and IPFS. And I like to think of Rip as database killer, but I want you to rest assured, no databases were harmed during the process of this hack. So let's jump into what is the problem? Problem is relational databases are a pain. You have to deal with things like migrations, context switching to write, SQL queries, encryption. Key management is a pain.
00:49:55.520 - 00:50:50.610, Speaker F: And what's worse is they tend to be centralized treasure troves for attackers, and they usually don't give users providence over their data. And because of this, I decided as I made the jump into Web Three, I'm going to break up with SQL databases. There's all these other great indexers out there. Why not just let them aggregate the data and query them instead of managing any of that infrastructure myself? And that worked for a little while, but then it turned out I had a relapse. And I needed to store some data off chain for myself that wasn't on the indexers. And specifically, my use case came up when storing merkel proofs, because with merkel, you have to store the leaf nodes off chain, calculate the proof off chain, verify on chain. So I needed a way to store this data, which was really sad to me, but it gave me the opportunity to think from the ground up what would be the perfect solution for me.
00:50:50.610 - 00:51:08.920, Speaker F: So I don't like to store data on my own, but when I do, it should be really fast for the end user, snap the experience, and preserve my own developer velocity. So not a lot of overhead. And also maintain decentralized redundancy and offer.
00:51:08.990 - 00:51:10.440, Speaker A: End to end encryption.
00:51:11.340 - 00:51:37.312, Speaker F: And that's where the idea of Rip came from. I decided to combine two awesome technologies. One is Redis, a tried and true web. Two cache with IPFS that gives you that decentralized network and redundancy. So enough gab, let's hop into the demo. So here you have a website that I've built that points to a live rip client. You can choose a key here.
00:51:37.312 - 00:52:17.500, Speaker F: Let's just say hello, ETH global. And that key is what you use to reference your data. You can generate some dummy data and you set the data. And as you can see, this is the main benefit of Rip, that one millisecond set time thanks to redis. So your data is immediately available, but then it's backed up to redis in the background, which takes about two and a half seconds. So from an end user experience, it's about a thousand times speed up, which is pretty great. And similarly with fetching the data, you got one millisecond fetch from Redis versus a bit slower from IPFS.
00:52:17.500 - 00:53:03.772, Speaker F: And then what's cool is you can also purge the cache in case you're growing in a bunch of memory, you want to reclaim some of that memory because memory is expensive. And what that does is, as you can see, the data is deleted, but you maintain a reference to the CID backed on IPFS, so you can always get that data when you need it. Won't be that super rip fast. As you can see, 102 milliseconds, which is slower than normal, still pretty quick. But you can always fetch that data from IPFS, and then when you fetch again, it's back in the cache, back to one millisecond. We also offer encryption. If you connect your wallets via lit protocol, you can sign a transaction with them and essentially use that as your encryption key.
00:53:03.772 - 00:53:30.660, Speaker F: So when you encrypt the data and store it on Rip, you can see the data is stored in this encrypted format. As a data URL, you have your encryption key, which is also stored in the owner address, and then only the owner of that data can actually get and decrypt it. So there you go. I'm the owner of this data, so I was able to fetch and decrypt it. So that's pretty much it there's. Just set, get, and purge. Those are your three functions.
00:53:30.660 - 00:54:11.600, Speaker F: And the integration is actually dead simple as well. You just import the client, initialize it with the server URL, and then you can set your data and get your data all from the front end of your application, which is pretty rad. So next steps for this, I'd love to package it into a really nice node module so people can install it into their browser clients and just use it very easily. And also potentially a hosted server that hosts Rip instances on behalf of users. If you have any interest in contributing or using Rip, please check out the discord. It's in the README of the repo.
00:54:13.940 - 00:54:14.930, Speaker B: Thank you.
00:54:16.100 - 00:54:29.844, Speaker A: Awesome. Thank you so much, Zach. And this was awesome to see more DevTools come in that make a lot of that easier, and being able to save a few seconds now and then totally adds up. So can't wait to have everybody else try this out too. And congrats for demoing.
00:54:29.972 - 00:54:30.888, Speaker F: Thank you.
00:54:31.054 - 00:54:40.410, Speaker A: All right, with that, we are ready for our last and 10th demo for the day, and the last team is Split Protocol. So whenever you're ready.
00:54:41.100 - 00:55:33.740, Speaker B: All right. Hello and welcome to our project submission for ECFS 2022, the Split Protocol. Now, I would like to start things off by asking you to think of the last time you went on vacation with your friends or family. Most likely, you had some shared expenses. That could have either been the rent for your shared accommodation, your car rental, or just a bill at the restaurant. Now, you might have used an application like Splitwise to keep track of your expenses, but there's a number of problems that come with the way that we deal with shared expenses so far. First of all, someone has to advance money for the others, which, depending on the amount, might burn a big hole into that person's pocket or might not even be feasible at all due to lacking funds.
00:55:33.740 - 00:56:28.460, Speaker B: Secondly, the lender risks not being paid back at all. And lastly, everyone has to use the same currency, because the lender probably doesn't want to get paid back in a different currency than he spent. And that might be a big problem if you have shared expenses with different nationalities, hence different currencies. So this is where the Split Protocol comes in. The Split Protocol is a DeFi protocol which lets you manage shared expenses. It acts as an intermediary which collects everyone's split and makes a single transfer to the recipient once the target amount has been reached. But what makes this truly special is that everyone can pay their split in any token out there, because the protocol automatically swaps any input token to the recipient's preferred token.
00:56:28.460 - 00:57:25.840, Speaker B: But without further ado, let's jump right into the live demo. All right, so now you can see the dashboard with all expenses that we are involved in. Meaning these could be either expenses that we created or that got created by someone else who wants to split an expense with us. The dashboard gives an overview of open and paid expenses and all information relevant to each expense. Now let's go ahead and create a new expense, shall we? I already filled out the form for you so we can save some time here. What's important to note here is that the creator defines everyone split in the target token, which in this case is USDC, since the landlord of our villa that we want to rent wants to receive USDC. But like I said before, everyone can pay their split in any token out there eventually.
00:57:25.840 - 00:58:26.954, Speaker B: Let's create that expense now. All right, so now that expense got created and we could already just pay our split here, but let's, for demonstration purposes, switch the account to the other account that is involved in this expense. I want you to pay attention to the avatar on the top right corner, which indicates which account we are connected to right now. Okay? So now you can see that the new expense is the second one in the dashboard here. Let's click on that expense to get all the information and be able to pay our split. So now, once we want to pay our split, our swap model pops up asking us which token we would like to use in order to pay our split. Let's use Wmatic in the background.
00:58:26.954 - 00:59:19.726, Speaker B: Now, uniswap is used to fetch the current spot price of Wmatic to USDC. We now see that we have to spend 1225 Wmatic in order to pay our share, which is equivalent to 1000 USDC. Let's confirm that and confirm these transactions. All right, so now we can clearly see that we successfully paid our split. If everyone involved in this expense would pay their split, the expense would be settled and the recipient would receive full amount. That is the general flow of the split protocol. Now, in terms of technology, we use uniswap to swap the tokens to the recipient's.
00:59:19.726 - 00:59:57.200, Speaker B: Preferred token. Polygon is used as a layer two to save on gas fees, and we deployed our front end onto IPFS, and we further have plans to use IPFS for other user generated media. And lastly, we built our own subgraph, which to save on time and be more efficient, which we plan on integrating into the front end very soon. All right, that's it. Thank you very much for your attention. We hope you enjoyed the presentation and are as stoked about the idea as we are.
00:59:59.170 - 01:00:37.498, Speaker A: Thanks, Janice. This is awesome. And congrats on making an amazing tool that everybody can immediately relate to. All right, that concludes all ten of our finalist demos. I want to quickly thank Interform, Chain Look, Optic, Go, Share Builder, Polydocs, waypoint toffee Bit, Ripdb and Split protocol for being our amazing ten finalists and kind of being able. To do all of this every few weeks. One obvious thing that I get to kind of recognize is that we're more and more seeing people build applications that they get to use in a more frequent basis, whether it's around collaboration or comm utilities that they want Web Three alternatives for.
01:00:37.498 - 01:01:10.838, Speaker A: So to me this is an amazing win because we get to see all these things happen in real time and be ready for all of us to use in production and on main net. So congrats to all these teams. And for the part that I know hundreds of you are waiting for, we're going to jump right into that. So all the projects here that we saw that came on and any other project that came out of this event is available on Efglobal.com Showcase. You can filter by each of these events and time for all of the prizes. So without further ado, let's get started.
01:01:10.838 - 01:02:01.800, Speaker A: So the first one is the $200,000 we're giving away with IPFS and the winners for the IPFS and Popcorn prizes are ZZ Zinc will be receiving the $15,000 1st place prize. Then we have Supercluster and Learnify going to be receiving $10,000 each for second place and Mana Jungle at Interform will be taking away third place, $5,000 each. So congratulations to all five of these teams. In addition, there are a lot more categories that we want to go into. These 35 teams, I won't be able to say all of them will be receiving $667 each. So congratulations to all of you here and I'll pause for a second but also you can pause the video and go back and see this. But congratulations to all 35 of you for winning $667 each.
01:02:01.800 - 01:02:52.214, Speaker A: And also we have some of these category winners. So IP, Drive, Bookswap, DAP and Music Three are going to be receiving $2,500 each for the best use of Web Three, storage and NFD storage and then Dow Factory, Ohm and Playground are also going to be taking away $2,500 each for the Gaming, Metaverse and Dow categories. So congratulations to all six of you. Then we have the Daily Hack category and Audio X, Mail Three and Literals are going to be taking 2500 each. And then for the Social Good Warrior category we have Health Wallet, Cryptic, Vault and NFT that are also going to be taking away $2,500 with them. So congratulations to all of you. And then the Web three eight category goes to Builder, Cod, Storage and Employment Reference for $2,500 each.
01:02:52.214 - 01:03:22.510, Speaker A: Congratulations. Next up we have the Polygon winners. So Meta Jungle takes $5,000 for the first place of the best polygon integration. Then we have Split Protocol, taking away second place $3,000 and Music Three will be taking $2,000. Then there are five runner Ups, Kasua, Manakiki, Polyfans, Dive and Polydocs that are going to be receiving $1,000 each. Congratulations. Next up, we have fluence.
01:03:22.510 - 01:03:52.826, Speaker A: So the best use of Fluence is going to be Dosa project that'll be taking away $3,500. So congratulations to Dosa project. Then we have the Graph winners. So the best use of an existing subgraph goes to Builder for $2,000. And the best new subgraph on the Graph Explorer prize goes to these three teams. So Manikiki wins 2000 for the first place. And then Web, Three, Community Builder and Zinder are going to be taking $500 each for the runner up position.
01:03:52.826 - 01:04:22.210, Speaker A: Congratulations. Then we have ceramic. So the best use of ceramic goes to Self Sovereign Health Records for $2,500. The best new ceramic tooling winner is Particle XYZ for $1,500. And the best use of ceramic integration with another sponsor is Interact. That'll be receiving $1,000, which also means Interact won another price. Next up, we have lit.
01:04:22.210 - 01:04:50.380, Speaker A: So Optic receives $2,500 with the best private data on the Open Web category. So congratulations to Optic. Then we have NFT Port. And NFT Port had a pool prize, which means that these 33 teams will be splitting $5,000 equally amongst themselves. So congratulations to all 33 of you. I'll pause here for another second for you to pause screenshot or do anything with this information. But congratulations to so many amazing teams here.
01:04:50.380 - 01:05:21.142, Speaker A: Next up, we have POAP. So Zender gets $2,500 for the best use of POAP. Three Ticks will be taking away second place for $1,000 in POAP. Man will be receiving third place, $500 for the best integration of POAP. And 18 teams will be splitting $1,000 equally among themselves for the pool category price. So congratulations to all 21 of these teams. Then we have Tableland, and for the Table Land best and most innovative use case.
01:05:21.142 - 01:05:48.542, Speaker A: Table Land Deals Protocol will be taking away $1,000, and these 29 teams will be splitting $4,000 equally among themselves. Congratulations to all 29 of you for winning the table end prize. So a lot of table end use cases I'm so excited about. Next up, we have valid. So the best use vallast goes to Voxel purse. Music, three papers and interplanetary box. They're all going to be taking $500 each.
01:05:48.542 - 01:06:16.226, Speaker A: And then the 17 teams below will be receiving $3,000 split among themselves equally. So you'll be getting a 17th of $3,000 each. Congratulations to all of these incredible teams. Next up, we have xmcp labs. So for Xmcp Labs, $2,000 goes to Decentralized Ticketing platform 1500 for second place goes to Optic. And Ghost Share will be taking away $1,000 for the third place. And then there are two honorable mentions.
01:06:16.226 - 01:06:40.494, Speaker A: So self. Sovereign Health Records and Supercluster are going to be taking $500 each. So congratulations to all four of these teams or five of these teams. Then we have HyperDAP and quantum. Oracle wins the best front end category prize for $1,000. The most innovative use of HyperDAP goes to Optic for $1,000 as well. And the best use of HyperDAP with the DFI integration goes to Waffy for $500.
01:06:40.494 - 01:07:27.722, Speaker A: So congratulations to all three of these teams. Then we have covalent. So Sales, Page, Noir and Literals are going to be taking away first place $500 each for the best integration of Covalent across all chains into their projects. Then we have these 14 teams that are going to be taking away $200 each. So I'm going to try to attempt all these things. So slides dive manikiki entropic DAP chat NFT floorplies prediction marketplace butter builder go share dosa project colloquium ethquest scoops holly and book swap DAP you are our second place winners and blockbook Metajungle toppy bit Kasua, Employment Reference and decentralized global billboard. All six of you are going to be taking $100 each for the third place best COVID integration.
01:07:27.722 - 01:07:52.550, Speaker A: Congratulations. Then we have SPHERON and these ten teams are going to be getting $200 each. So you have three Ticks Bounties Snapchat, Short Games, kisua Kazaya, Mojo, Neural NFT Polydocs and Interplanetary Box. So congratulations to all ten of these teams. And that concludes all of our amazing prizes. These are live on your project page. If you head over to Ecobl.com
01:07:52.550 - 01:08:42.310, Speaker A: Showcase or go to your own individual submission, you will see which prizes you have won. So if you miss something, you can always catch up and confirm by refreshing your own project page on Ethglobal.com. And just a quick note on the announcements for all the prize delivery, this is still a tentative list. That means we are going to be verifying everybody's code bases and making sure everything was public and nothing was done before the event started. So not all of these things are final. If something comes up that should not have been the case for this event, whether it's cheating or some miscategorization, we'll be taking the next week to process all of that before we send out and finalize the list. And you'll be able to see the final list by next week, which is whatever is reflected on your showcase page, and that remains the source of truth.
01:08:42.310 - 01:09:34.934, Speaker A: In addition, all IPFS or non IPFS and Falcon prizes will be distributed by the ETH Global team by August 5, so that is by end of next week. And for anybody who has won an IPFS or Falcon prize, the team will be reaching out. The Protocol Apps team will be reaching out to you for those prizes. So keep an eye out for an additional email that covers all of those prizes. So congratulations and we are now at the closing, half of closing and not half of Hackfs. So before we wrap everything up, we want to say a quick few thank yous and really kind of thank everybody that made sure that these events happen as they're supposed to by putting in the time, effort and work needed to ensure that we can do all these things at scale. I want to quickly take a second and thank all of you as hackers for spending the last three weeks with us.
01:09:34.934 - 01:10:17.058, Speaker A: About 1000 of you were part of this as hackers, over 1000 people in total that are part of this event from 80 countries. It's just incredible to see such an amazing amount of excitement and passion in building things that you yourself are excited about. So thank you so much to all of you hackers. I want to thank our 18 judges that spent all of Monday talking to hundreds of projects, giving live feedback and advice and commenting on anything they can do to improve what they were building. And without their help and support and comments and feedback, we won't be able to do this event and this finale. So thank you to all of our judges. We had an amazing set of workshops and summits kind of going on and all these speakers made all that possible.
01:10:17.058 - 01:11:03.694, Speaker A: This is incredible content that you can use and look at and learn from anywhere, from on demand to live and ask questions. All this is also on our YouTube channel. So being able to see all these amazing things being built in front of us is just something you don't get to see anywhere else. So thank you to all of our amazing speakers for talking about everything that you are building and for all of our amazing mentors and volunteers that were there to help make sure everything runs behind smoothly behind the scenes. Whether it was coordinating a zoom call with 900 people for judging, to being able to answer questions that are technical, and being able to help you get unblocked at 03:00 A.m., all these people were part of that process. And I want to thank all of them for the time they've given us over the last three weeks and our amazing partners that were part of this event from the very beginning.
01:11:03.694 - 01:11:23.222, Speaker A: Helping people learn how to be better as web3 developers and using different protocols and not basically spending all this time starting something from scratch and being able to leverage what's already out there in this ecosystem. So thank you to all of our amazing partners. And lastly, I want to give a quick, amazing shout out to the Global team. Chloe. Donnish. Kevin k. Kevin I Kree.
01:11:23.222 - 01:12:05.346, Speaker A: Richie, Minnie, Anna, Moaz, Luke, Emily, Andrew and Jacob. The time and effort that ETHGlobal team puts behind the scenes to make sure everything runs smoothly and can happen consistently at the quality that we are all proud of is no small thing and they should get the right recognition for making all of this possible. So you have the best experience as attendees wanting to get more into the Web Three space. So thank you to everybody that made all of this possible. And before we kind of conclude this thing, we just saw ten teams present what they built over the course of the hackathon. We call them our finalists. But for those of you who are joining us for the first time, you may know that 8th Global is not designed to be a competition.
01:12:05.346 - 01:13:04.778, Speaker A: We call them finalists because we really want to make sure that everybody's able to work on what they're excited about and it does not behave like a competition. So officially, all ten of these teams are our first place winners and as part of being a finalist, every member will be getting one ETH for being a finalist. So congratulations to each member and hope that you continue building this and pushing everything that you built to be used by everybody else in this space. And that's kind of our hope and we really hope that you continue to contribute to the Web Three ecosystem. And with that, let's wrap up Hack Effects. Also, in addition to all the prizes, everybody that submitted a project, judged, volunteered, or helped out as a speaker will be getting a Hack Effect shirt for being a participant and we'll be able to have all of you claim this thing on Friday. So you'll be getting an email for how to claim this shirt and we'll get the shit to you no matter which country you are located in.
01:13:04.778 - 01:13:58.694, Speaker A: So hopefully you also get away with some swag in case you want to remember this event in a more physical form and look out for that email along with all the prizes, Poaps and everything else. So congratulations to everybody that was part of this event for the last few weeks. We can't thank you enough for being part of the global community and before we close this off, want to make sure that we get to talk about what's next. And of course this won't be any global event where we don't talk about what's upcoming after this. So with that, I'm super excited to announce our next Hackathon Metabolism that starts on the fourth, which is next week. We're doing this event in partnership with Zora Protocol, so if you're excited about NFTs and Marketplaces and building cool creative things using Zora, check out Zora Ethgobal.com and participate in Metabolism for Hack FS Hackers.
01:13:58.694 - 01:14:54.954, Speaker A: If you're interested in participating again into this one, you'll be able to see an option in the next 24 hours to be able to automatically sign up and roll over your stake from Hackath to this event and we'll follow up again over email with all these details. In addition to that, our next in person event will be Eat, Mexico. In about three weeks, we'll be going into Mexico City for our next in person event and bringing on a lot more people into the space. So excited to meet some of you for the first time and also reunite with some of you in Mexico City. And then comes ETH Online, which is going to be our biggest online event of the year. It'll span all of September and we're going to be jam packed with all the things that are happening in Theorem ecosystem and bringing on so many incredible speakers and covering all the topics that all of us are excited about and should be excited about. And then we will see all of you at Defcon with eight Bogota.
01:14:54.954 - 01:15:51.086, Speaker A: This starts just before DevCon officially begins, so in Colombia, we'll be doing another massive event, aiming to cross over a thousand attendees in person. So anybody who's interested in attending Defcon can't wait to see all of you at East Bogota and then got a couple more after this thing. Then we come back to San Francisco on November 4 for another in person events, bringing on everybody that's also still in the Web Two space into the city of Silicon Valley. So join us in San Francisco. Then we have Web Three Weekend, which we have Weekend Hackathon that's online on November 18, and we'll close the year off with eIndia, which is going to be one of our bigger events in Bangalore on December 2 to fourth. So a lot more things going on from our side for the next five months and I can't wait to see all of you again at our future events, whether they're online or in person. So with that, check out Eglobal.com
01:15:51.086 - 01:16:13.250, Speaker A: for details on all these events, showcase, prizes, talks, anything that you want to catch up on from what came out of Acapes and what's upcoming. And I want to thank all of you for being with us here today. And with that, let's close off hackafes. Please enjoy some lo fi beats and we'll see you at Metabolism. So take care everybody, and goodbye.
