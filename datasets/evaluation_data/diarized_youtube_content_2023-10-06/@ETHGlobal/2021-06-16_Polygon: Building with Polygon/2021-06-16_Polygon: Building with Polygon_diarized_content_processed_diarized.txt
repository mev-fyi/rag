00:00:00.170 - 00:00:25.158, Speaker A: Have Yuling with us from Polygon who will be running the workshop on building with Polygon. If you have any questions, please post them in the chat. You are also welcome to keep this discussion going after this workshop in the Discord channel that Polygon has that all of you hackers can interact with. And without further ado, I'll let you Yuling introduce yourself and take it away.
00:00:25.284 - 00:00:25.960, Speaker B: You.
00:00:26.570 - 00:01:29.616, Speaker C: Thanks. Hi everyone. It's absolutely a pleasure to be here. So I'm just going to share my screen really quick and then we'll just get started. So it's absolutely a pleasure to be here with everyone at this hour at Hack Money here at East Global. So then first I would like to start with Polygon. We all know that in 2017 because of Crypto Katie's episodes caused major network congestion and then there's very poor user experience which apparently is going to be a roadblock to the mainstream adoption for Ethereum.
00:01:29.616 - 00:02:06.670, Speaker C: And that is where Polygon comes in. So basically Polygon solves pain points like high gas fees and slow speed associated with blockchain without sacrificing security. So then with that said, I would like to quickly go over this solution to Ethereum scaling the architecture with everybody. So hold down, let me just.
00:02:08.800 - 00:02:09.116, Speaker B: So.
00:02:09.138 - 00:03:14.976, Speaker C: The found is okay. All right. Okay, so how does this look to everyone? Okay, so then I'll just assume that everyone is able to see the funds well enough. Basically here, as we can see, there's three tier architecture here. So we have here Staking and Plasma smart contract on Ethereum. And then we have proof of stake layer and we also have block producer layer here as well. So then the bottom one is the matic or Polygon side chain and then the top, as we can see, that is Ethereum Minnet.
00:03:14.976 - 00:04:57.376, Speaker C: And then in the middle we have this checkpoint layer. So Matic or Polygon maintains a set of smart contracts on Ethereum which handles the following staking management for the proof of stake layer and also delegation management including validator shares and of course Plasma contracts which includes checkpoints and snapshot of the side chain state. So basically for our block producer layer here on the Matic side chain, which is an entity responsible for aggregating transactions into blocks and block producers are periodically shuffled their committee selection on the validation layer. So in durations, termed we call as a span in Polygon. And so then blocks are produced at this layer and this side chain is also EVM compatible. So then blocks produced on this layer are also validated periodically by the validation layer. So we call it hemdal nodes in Polygon.
00:04:57.376 - 00:06:12.012, Speaker C: And a checkpoint consisting of Marco tree hash of a set of blocks on the block producing layer is committed to Ethereum periodically. So then just for every few blocks on the block producer layer, that's where our POS validator comes in. It basically validates all the blocks since the last checkpoint. And also it creates a Marko tree of the block Hashes and publishes the Marko route to the main chain. So then at this point we've got the checkpoint feature which is very important for two reasons. So for one is the ability to provide finality on the root chain which of course is Ethereum Minnet and it's also able to provide proof of burn in withdrawal of assets as well. So then for this specific part we will cover in a moment as well.
00:06:12.012 - 00:07:44.228, Speaker C: So then because of this solution we are able to provide fast transactions with the finality of transactions on Ethereum Minnet, we're able to provide secured transactions and then with our POS notes, the validators and also the block producers as well, we're able to ensure decentralization as well. So then that is the architecture and then we are going to see problem solved. So hold up, let me just do this much better. Awesome. There are a few problems that Polygon or Matic in the past that's what's called was looking to solve. So one is that we know that there's no one size fits all skilling solutions so it just depends on the need for each specific project. Some may need to use layer two solutions or some may just use a side chain solution.
00:07:44.228 - 00:09:42.320, Speaker C: So then there's like no one size all and then new innovation in scaling makes the one obsolete. Just take Maddox skilling solution for instance. Originally Plasma was implemented for our scaling solution but then not long we realized that just with this seven day challenge period when user wants to exit the side chain, it basically poses an issue to a lot of the DeFi projects. Right now Polygon is able to provide Plasma POS hybrid solution and then there's no formalized framework that offers multiple solutions. So then it's clear that there will be like a spectrum of different scaling options in the then Polygon's framework combines the best of Ethereum's secure chains which includes L two allocate gators as well as the standalone chains or side chain into a MultiChain system. Instead of being an Ethereum killer, we look to promote and to solve the scalability issue in the space. So then let's look at Polygon's solution.
00:09:42.320 - 00:11:53.908, Speaker C: So then we call this Swiss Army Knife for ethereum scaling. And as you can see, basically the purpose of this is to let the developers decide which solution to use and it just combines the secure chain and also standalone blockchain into multi chain system here. So similar to other scaling solutions like polkadot or cosmo or avalanche for interoperability of different blockchains. But with this structure it has a few major upsides as we can see here, ethereum being the main hub to connect everything, it basically just offers benefits from Ethereum's network effect for its strong community of users and devs and also supports of EVM as well as solidity as well. So then just with a long history of serving as reliable base chain, it's very hard to replicate and also it just take time to build an ecosystem like this. Just with this solution we are turning Ethereum into a fully fledged multi chain system and just really let the developers define which one is the best to suit their. Then the next slide is about history of Polygon and also the power of Polygon as well.
00:11:53.908 - 00:13:30.170, Speaker C: And as I mentioned, Polygon started in 2017 in the heat of the network congestion issues caused by major projects in the space. And of course it only got worse like in 2020 with DFI Hype. So then with Polygon solutions, within two years, top 20 blockchain project worldwide got on board. And so then we are providing multiple skilling solutions. So Matic POS, the hybrid POS plasma chain and also we provide Polygon SDK as well just for the developers to be able to interact with our POS chain easily. Polygon is one of the fastest growing debt platforms and as a leading scaling solution with over 10 billion worth of asset at this point held on the network. As we can see, the market cap as of now is beyond $15 billion.
00:13:30.170 - 00:15:02.404, Speaker C: So then we have over 400 DApps on board and we have over 1.3 million user wallets and daily transaction is over 6 million as well. So I think the so then, you know, just Polygon is becoming what we call us with Army Knife for skilling and it's able to accommodate different projects needs in the space and we have a large potentially growing developer community as well. So let's see, these are a snapshot of our key ecosystem enablers. A lot of major wallets are able to support Polygon and also our partner Ching Inc, DA. And so then there are stable coins that are onboarding Polygon as well. And then major DeFi DApps Abe and Quickswap.
00:15:02.404 - 00:16:15.944, Speaker C: And then there are gaming apps as well. And then there's an Ft app as well. And also there's Meta transaction support from Economy gas station network. All right, so then I wonder if there's Polygon. Yeah, so basically those are different devs currently integrated to Polygon. As you can see the list is really just growing every day. And there's DeFi, there's NFT gaming, there's Dell, and also we're able to see Wallace currently support Polygon and then of course Oracles as then for Depth Tooling, we have all those listed.
00:16:15.944 - 00:17:46.590, Speaker C: So then the fact that Polygon is EVM compatible, it basically just means if you are an Ethereum developer, you're already a Polygon developer, there's really nothing new for you to learn in order to interact with Polygon or to deploy your smart contract on Polygon. So with that said, I would like to quickly go into our demo for how to integrate or how to deploy onto Polygon. Okay, so then the first thing I would just like to share how we deploy through Remix and then we do deployment through Truffle. Basically I'm just going to show a very easy basic smart contract remix.
00:18:02.490 - 00:18:03.240, Speaker B: It.
00:18:14.410 - 00:19:02.130, Speaker C: Okay, so this is very straightforward counter smart contract and in order to deploy it, first I'll just try to deploy that in Ethereum. Testnet this out of the way.
00:19:29.830 - 00:19:30.580, Speaker B: It.
00:19:36.950 - 00:19:40.690, Speaker C: All right. So I just want to confirm this transaction.
00:20:14.860 - 00:21:21.240, Speaker B: It'S going on here. It it.
00:21:32.230 - 00:23:06.736, Speaker C: Creation of counter pending. Okay, this is a little weird but then just to quickly go over what I'm trying to show here. So basically when we deploy this in Remix, all we have to do is to select the network that we want to deploy to. So then the first I was on goalie. So then just to deploy this counter smart contract and find it. Okay, so this I need to circle back afterwards. But then in order to deploy it Polygon, we basically just have to switch the network here and we just need to switch back to a testnet by here just to add this into MetaMask.
00:23:06.736 - 00:24:41.928, Speaker C: It basically is very straightforward and we just need to go to settings, we go to network and then we do add network. And so then this is RPC that we need to specify based on the docs that we have on Polygon's site. And so basically if you just go to develop and you will be able to see network details manual and then for the network you will be able to see Matic network as well as its testnet here. So then we could just put all the information here in MetaMask just to quickly show you. So then this is pre configured, but you can just add a new network here with RPC and then the network name, it's a mobile test network. And with RPC URL. So we basically have a few public ones offered here.
00:24:41.928 - 00:26:21.368, Speaker C: And you can also get the dedicated free RPC URL from those RPC providers. And with chain ID for the testnet being 8001 and then symbol. And also we have Block Explorer for Mumbai as well. And then you do save and you will have this Mumbai testnet configured in your MetaMask and that's how you do with Remix. Basically I just wanted to share quickly about my first encounter with Polygon and it's actually back then it's called it's also at East Global Hackathon we basically did supply chain check in depth and literally I think it's just like within the last hour before we're scheduled to present to the judges. And we were still trying to wrap up the testing of the smart contract. And I remember our UI guy volunteered to Venture Force to explore the possibility of migrating to Matic simply just for the sake of adding another tool sponsored label to our project because back then we didn't know very well about it was still called as Matic back then.
00:26:21.368 - 00:27:02.660, Speaker C: So then five minutes afterwards he came back and he's super excited and said that we just need to plug in a few lines of code into the travel config file which I'm going to show you next we need to request metacoin Mumbai testnet Faucet and that's it. And then that was exactly what we did. So then he was apparently our team's hero on that day and of course we all loved the smoothest experience because of that to interact with polygon. Let me just quickly check if there's.
00:27:09.760 - 00:27:37.080, Speaker A: Thanks Julie. Thanks for sharing your story too with the Global Hackathons. A lot of actually like 1inchh, which is one of the presenter tier sponsors as well, is a project that started Global Hackathon and a lot of projects that have people in different teams that have joined used to be part of these hackathons. So it's really great to have it first time again.
00:27:37.230 - 00:27:38.040, Speaker C: Appreciate it.
00:27:38.110 - 00:27:50.780, Speaker A: Yeah, we're running out of time here. I know there is like a few question in the chat. Not that many. One was does the contract have a compiler warning?
00:27:55.120 - 00:28:16.180, Speaker C: Let me see. Did I overlook that? Oh wow, time just flies. I actually still have a few things to cover but I guess we're running out of time. The best part is still not yet covered.
00:28:17.080 - 00:28:30.504, Speaker A: Well I mean if you can do it in less than like three minutes, we can extend by five minutes or something. Otherwise yeah, we'll have to cut it off because we'll have other workshops after.
00:28:30.622 - 00:29:22.424, Speaker C: Got it. Okay. All right. I don't think I'll be able to cover them all but then just a quick few things as I said. So just the experience that we had with deploying our DAP to polygon with Truffle, it is just to add those few lines of code and that was it. So basically you will be able to find out those information on Polygon duck. I won't be able to demonstrate this but that's basically all you need in terms of configuration and everything else is the same.
00:29:22.424 - 00:29:26.910, Speaker C: And I was also going to talk about the.
00:29:29.600 - 00:29:45.584, Speaker A: I think actually I just realized you have like five minutes if you want to cover it's a tree, but I realized we have a little bit more we can deal with five, six minutes if you can make the difference in showing the right things. Go ahead.
00:29:45.702 - 00:30:40.344, Speaker C: Got it. Thanks a lot. Okay, so then I just want to quickly go over two different ways to interact with polygon. So then one of course is to build, adapt and to remix and deploy your brand new Smart contract or Heart. Hat and Truffle are also supported. And the second way is that if you already have a DAP, you could use Maddox as a factor transaction layer. And so then just to get all the tokens like, ERC, 20, ERC, 721 and, ERC, 1155 mapped to Maddox network and then just deposit your asset to Maddox.
00:30:40.344 - 00:32:03.390, Speaker C: And then you will be able to do transfer polygon with near zero gas fee and then you will be able to withdraw them from polygon to the main net as well. And our JavaScript Sddk Matic JS handles all the heavy lifting for you connecting with Polygon network via RPC like all the public ones. As I said, you're able to find them on the know. Just for today's workshop, I will share the links afterwards to the community. So then as we're running out of time here, but if you want to follow along you can always follow the instructions on the link and then if you have any questions with them, please feel free to reach out in then as well. Just for NFT today basically is like something else that I want to show you guys quickly. Hopefully there's going to be some time.
00:32:03.390 - 00:32:40.730, Speaker C: Okay, so let's basically just do bridge today. All right, so basically this one, it is very neat in the way that we don't have to have user go to MetaMask every time to switch to different network just with a single click here. So for example I'm currently on.
00:32:43.580 - 00:32:43.896, Speaker B: Let.
00:32:43.918 - 00:33:23.224, Speaker C: Me just switch really quick. So I'm currently on ethereum Minnet. So then just with a quick click here I'm able to switch. There we go. And then they're able to just do operations without having to manually switch this. So then that's just a great way to reduce user frictions here. And this feature is actually provided by MetaMask and then I'll also just share the information as well.
00:33:23.224 - 00:34:40.784, Speaker C: And we also have network agnostic feature as well and that's basically available on the duck. If you just look up Biconomy you will be able to find a lot of information there. So I'll just quickly show everyone here. Okay, basically this one is able to have user interact with DAP without having to worry about paying gas fees. We have like two different implementations here. So one is Biconomy, it basically is a relayer infrastructure and ready to use. And then as you can see here, it's a debt user and basically it's able to just get its signature and other interaction details to the relayers here.
00:34:40.784 - 00:36:56.330, Speaker C: And then relayer is able to send transactions to a blockchain and then pay for the transaction fee on behalf of the user. And so then we have this framework available and there's Biconomy relay hub as well as user contract wallet and through that it's able to call the destination contract and for the user to interact with DAP. The experience is just like a web two app so then they don't have to worry about the logistics. And then there's another implementation here, there's another way which is for devs already support their native meta transactions so the Biconomy relayer can directly talk to the depth contract and do not need any user specific contract involved here. So then this is the infrastructure here and then just to be able to integrate with Biconomy there's SDK provided for this purpose as then I may not have the time to show you guys, but there's an Ft today which is a perfect community DAP that we did. And so basically just with my current account, let's say on a main net, right so then just with zero is here I will be able to mint NFT on matic and I didn't have to switch network in this case it would just do behind the scene for me at this point. So let's see if we are able to get some time to do this.
00:36:56.330 - 00:38:27.560, Speaker C: It okay. And I would like to connect wallet and I want to see MetaMask and now it's connected and so then I will be able to mint NFT and then we got JSON data uploaded to then. So then for this network and it's currently Minting at this point. So then just for the network agnostic feature we basically expect user to know how to add customer IPC and the details in the Web Three providers that they use and they don't need to know the transactions going to blockchain or not and they don't need to know if it's going over to a different layer. All they need to know is a web3 provider where they will be able to sign the messages and no gas is needed at this point. So then you will be able to see now my NFT is minted successfully and I will be able to look at my transaction here on Polygon Scan which is a Polygon Explorer in this case. So then that demonstrates the network agnostic feature provided in Polygon.
00:38:27.560 - 00:39:35.272, Speaker C: So then the time is actually tight. But then the last thing is Matic JS. It's a cross chain asset transfer libraries that we provide. There are a few simple APIs that the users can just use directly to interact with Polygon. Basically, just from Minnet to polygon. It's handled, as I said, by Matic JS SDK through approved ERC for deposit and deposit ERC, those two so basically, those two calls will happen on the main chain and then transfer tokens. To deposit manager that locks the asset and then the token is able to mint Polygon and then withdrawal.
00:39:35.272 - 00:40:45.250, Speaker C: Polygon needs to burn the asset first and then to return the transaction. Hash to be check checkpoint to checkpoint to. Do verification. And then after that the Minnet is able to present the transaction hash for burning and after that succeeded, it's able to have the exit polygon into Ethereum. Okay so then I think that's all I needed to cover today and thanks a lot for giving me time to cover those stuff. And as I said, I will share the related links after this workshop and should there be any questions, please feel free to reach out. Thanks everyone.
00:40:45.700 - 00:41:10.440, Speaker A: Thank you so much. Yuling. Yeah, everybody please join the sponsor channel, know where Polygon is. So sponsor Polygon in the Discord Channel. I know some questions are here but please pose them there and Yuling will get to them or someone else in the team will get to them. Thanks again for this super great workshop through all things polygon. It was super interesting.
00:41:10.440 - 00:41:13.364, Speaker A: Have a good rest of the day evening. And thanks, everyone, for joining.
00:41:13.412 - 00:41:14.580, Speaker C: All right, thanks. Bye.
