00:02:35.610 - 00:02:58.830, Speaker A: You. Good morning, good afternoon. Good evening everybody. My name is Kartik, one of the co founders of Eat Global, and I'm super excited to welcome all of you to Hack Money 2022. So all of you are watching this on ETHGlobal TV. And for those of you who haven't used this before, this is what we're going to be using for the rest of this event. This is where all the summits are going to happen.
00:02:58.830 - 00:03:32.042, Speaker A: And also not only just this kickoff, but the closing ceremony is where we're going to showcase everything that comes out of this event. And for those of you who are joining us, for the first time, we really encourage all of you to log in and say hi. And everybody who's going to participate for the rest of the hackathon at Ethgobal TV will be receiving these amazing PO apps. So let's get started. Hack Money is an event by ETH Global. And for those of you who don't know what ETH Global is, we're an organization with a very simple mission. Our goal is to onboard thousands of developers into the web3 ecosystem.
00:03:32.042 - 00:04:06.840, Speaker A: And we do this primarily by running hackathons and summits. And this event is no different. So for the summit, we're going to be running two summits for this event. Today is our kickoff summit. We're going to be talking about some of the latest and amazing things happening in DFI. And then on Friday the 20th, which is two Fridays from now, we'll be running a summit with superfluid called Superfluid Reactor Summit, talking about all the things with streaming money. So tune in to Global TV again for the 20th and can't wait to get started.
00:04:06.840 - 00:04:49.000, Speaker A: Now let's get into the hackathon. So the goal for this is to cover some of the logistics around how the hackathon is structured and everything that you need to know to really get started with your participation. This has been an incredibly an amazing, massive event. We have over 1100 hackers from 75 different countries participating and building cool projects for the next couple of weeks and they span 18 different time zones. We put everybody on a map to see where they were coming in from. And it's just, again, incredible to see so much representation, diversity and participation from all continents around the world. So we can't wait to meet all of you and we also encourage all of you to say hi and tell us where you're coming from and what you're going to be building.
00:04:49.000 - 00:06:19.940, Speaker A: And not only just the hackers, we have an amazing set of ecosystem partners and over close to 250 ecosystem mentors who are going to be here helping you out on our discord and making sure that you have all the help you need, whether it's technical or design or product or anything in between. And to top it all off, we're also giving $300,000 in prizes. So you get to win a lot of amazing prizes for all the things you're going to be building, and we'll share all the details of all the prizes very soon. So before we jump in, I want to quickly thank some of our amazing partners. Starting with Superfluid WorldCoin Uniswap Grants program Wallet connect IPFS and filecoin avi Grantstow dYdX Babylon finance polygon bolts olympus ZK sync swing unstoppable domains coinbase Wallet tempest gearbox the Graph APY Badger uma compound EPNS transac covalent Nervos gnosis Oasis Foundation arbitram Teller SPHERON connects fuel odos Maker chainstack chainlink urine finance waku redstone gamma Dapless secured finance blockchain space upstart and constnap There are so many amazing companies here and they're giving so many incredible prizes. So we're going to go into all the prizes that you can win from each of these partners. All right, let's go back into the rest of the event.
00:06:19.940 - 00:07:18.466, Speaker A: So the most common question we've gotten is what can you build? So there's a lot of things that we can do here. This whole event is structured around DeFi, so all the things we're going to do is make sure that you have all the right tools and protocols and SDKs and help you need for building these amazing things. So the common categories that everybody is already excited to build are things around lending, trading options, and NFTs. There are so many protocols that you can use, especially now that we've seen a lot of maturity around all the tools you can use compared to especially last year's hack money. We really want to see a lot of things on L2. So whether you're using Lyra on optimism, or trying out something with ZK Sync, or just making really interesting DevTools to make it easy to deploy some D Five protocols on other L two S, we want to see all that. In addition to some of these protocols, you don't actually necessarily always have to code something on smart contracts.
00:07:18.466 - 00:08:07.094, Speaker A: You can totally do something that leverages the information you have on Chain and build analytics and tooling around that, so it's not required for you to code something in solidity. And on top of that, there's a lot of cool things around understanding what's happening with yields and hacking and optimizing all the things that are happening with the existing protocols that are out there. So with that, let's talk about what the next three weeks are going to look like. So I want to cover how team formation works, how you can get help if you are stuck, all the prizes you can win, all the talks and workshops that are happening. We're also going to talk about all the judging and submission criteria and also the summits, which I just indicated. But we're going to just jump right into the first summit that starts right after I finish talking about all the prizes. So let's get going.
00:08:07.094 - 00:08:56.566, Speaker A: So the most important thing here is communication. Everything that we're going to be doing for this event is going to be on Discord. And the way everything is structured is that if you are a confirmed hacker, which means that it shows on your dashboard that you are confirmed, you will be able to see all these channels on the left screenshot on Discord. Which means if you don't see these channels under the Hack Money 2022 category, something is wrong with your Discord permission. Sync. So either contact us or go back to your hacker dashboard and see that you have actually connected Discord, because this will not be visible for anybody who's not participating at the event. This is also the place where all the mentors are hanging out, so you can ask for help in the Mentorship help channel, along with any questions you have about any of our partners and learning about what the prizes are.
00:08:56.566 - 00:09:34.482, Speaker A: If you need specific help on how to use a different protocol, all that is on Discord. On top of that, we've also given out calendar invites for all talks and workshops that are happening. There's a lot that happened yesterday, there's a lot happening today, and there's a lot more coming in over the next week. So you can directly see all these things on your calendar, but also everything is on the website, so anything you want to know on what's happening and where and when everything is reflected live on the website. So whatever the website says is the real time information and the up to date information. And we really want this thing to be asynchronous. So we understand there are people from 75 different countries here.
00:09:34.482 - 00:10:16.894, Speaker A: If you're not able to make something that you really wanted to, don't worry, everything is recorded. So the second it ends, you can watch it on our YouTube immediately after and catch up whenever you have time. And the website for everybody to quickly get a reminder is DeFi ethglobal.com. So let's get into how the hackathon is structured and how everything works. Hackathon officially begins now, which means that you can now start coding and working on your projects. You are allowed to work on your projects individually or with a team, and a team can be of up to five members. You have the next two weeks to hack, which makes the submission deadline 03:00 P.m.
00:10:16.894 - 00:11:00.106, Speaker A: Eastern on Sunday, May 22. This is also reflected on your dashboard and on the website, and we'll be reminding everybody with these deadlines over email and Discord. So don't worry if you're catching up on this video late or if you're not here or your team members are not here. We'll be doing a lot of relaying the same information as we get closer to this deadline. So the rules and criteria are very simple. For this event, everything that you're going to be working on should be done from scratch, which means that you cannot extend an existing project that you have been working on for fun or side project or even a project from the previous hackathon. You must begin everything from beginning.
00:11:00.106 - 00:12:03.742, Speaker A: It doesn't bar you from using a boilerplate template or open source libraries and tools. It's just that if you have been working on something personally, you cannot add a feature here and use that to qualify for any prizes or participate. I'm going to keep this short, but if you go to your Info Center, you will have a lot more detailed description on what qualifies and what doesn't. And if you have anything that you are still worried about or you think there's a nuance or an edge case that you want to handle, please message us and get that clarification because we really want to make sure that you're able to participate properly and you don't get disqualified at the end. In addition to that, everything that you're going to be submitting must be related to DeFi. This is a DeFi focused themed event, so anything that is not a DeFi submission will also be disqualified for this event. And lastly, only RSVP hackers are eligible to win prizes, which means that each of your team members must be listed on your team as you are submitting the project and on your dashboard.
00:12:03.742 - 00:12:53.258, Speaker A: So if any of them were not confirmed as a hacker, which means they haven't responded or confirmed or are not able to join this thing, and you end up winning a prize, if we don't see their name on it at the time of the submission or right now, that means we will not honor any prizes that are given to them. So please make sure that all of your team members are there, they have connected discord and they all can access the same project on their own dashboards. And of course, we really want this to be an event where we can accommodate everybody who's jumping into this space and trying to understand what is possible. So there's a lot of stuff going on for you as well. We have a lot of content and talks and workshops for beginners and experts. A lot of them already started yesterday, a lot of them are happening today and there's a lot more happening next week too. So there's a lot of talks, workshops and panels.
00:12:53.258 - 00:13:31.470, Speaker A: We're also going to be doing a summary right after this thing where you can actually understand what people are working towards and what we think will be possible in the next few months to years. There's a lot more information around getting started and resources in your Info Center. And of course all content is recorded so you can take your time and understand and ask questions. Most of the speakers are also on our Discord, so you can ask them questions directly and to kind of look at all of this up. It's not just about this event. We have hundreds of videos on workshops and talks on how to use different protocols on the YouTube for ETHGlobal. So you can always go to Slash ETHGlobal.
00:13:31.470 - 00:14:19.346, Speaker A: And of course, as we're doing this thing for a thousand of you here. If you have any questions, just put them on the Ethglobaltv chat and we'll be able to answer those questions in real time here for you too. And then the talks around beginners especially are around some beginner ideas. Whether it's like Scaffolding workshop that happened yesterday and there's a lot of opportunities for you to still find team members and understand quick ways to kind of brainstorm and get started with ideas that you can use to build a hackathon if you don't already have an idea or you're not sure what you want to work on. So all these things are also listed on DeFi Ethgobal.com as a reminder so you can always find everything there. All right, so the big most important piece is the submission deadline.
00:14:19.346 - 00:15:01.642, Speaker A: We're going to talk about how judging works. And as a quick reminder, again, judging and submissions are due on the 22 May at 03:00 P.m. Eastern. So you get two weeks from now to submit. Let's also quickly talk about check ins. So you may have seen this on your dashboard, it'll start appearing next week, but we're going to be doing quick mini check ins which work as a way for us to know if you are stuck on something or if you need to help somebody get unblocked. This lets us understand what we can help you with or if you are not able to get some response fast enough to understand how some protocol works, where we'll just sort of ping everybody to make sure that you are able to continue working on your project.
00:15:01.642 - 00:15:30.446, Speaker A: And also it becomes a quick feedback survey for us to see how we can improve this process for the future events. And your stake is returned as you can submit and work on a project. But all this happens to your dashboard, so don't be alarmed if you don't see anything. It'll appear as a section on your dashboard next week and we'll send reminders of all these things as well. All right, let's get to the judging. So, there is two ways judging happens. So the first one is the actual official main judging.
00:15:30.446 - 00:16:06.400, Speaker A: So when you submit your project on Sunday the 22nd, you will get to choose a judging appointment for the day after where you are going to be presenting your project live. And the judging happens between 12:00 p.m and 02:30 p.m Eastern. And we'll be giving you a big heads up on making sure that we're able to accommodate everything as part of this event. In addition, if you are trying to win any prizes, that is part of the sponsorship judging process. And that is an asynchronous thing that's happening where as you select which prizes you want to qualify for.
00:16:06.400 - 00:16:50.794, Speaker A: We will be sharing that information with all of our partners and they will be looking at all the submissions asynchronously and reaching out to you if they have any questions. So we'll share a lot more there next week and the week after, just as we would get ready for judging. But here's the quick summary. In addition to that judging is, the submission itself is structured as an asynchronous, but also a live judging part. So to submit your project, you need to create a four minute demo video that showcases what you've built, talks about who you are, why you chose to build that idea, and also shows a live demo. So we really want to make sure that you have enough time allocated to make a four minute video for your demo. Video submissions are required.
00:16:50.794 - 00:17:24.918, Speaker A: That's the only way you'll be able to submit and qualify for any prizes. So please don't wait until last minute to create this thing. We recommend you give this at least one to 2 hours in total to just dedicate and not do this last minute. All these things will also happen asynchronously and through your Dashboard. So all the details you need are going to be visible when the time comes, just before the deadlines directly on your Dashboard. Lastly, I want to talk about the code of conduct. Even though this is an online event, our rules and Code of Conduct still applies, and you can check out the rest of the rules on Ethglobal.com
00:17:24.918 - 00:18:17.610, Speaker A: rules, but the gist of it is that please be respectful, and harassment and abuse will not be tolerated in any form. In addition to the rules in our Code of Conduct, anything that you build as part of this event is solely owned by you from the intellectual property standpoint. So you are the owner, and you retain full rights to anything that comes out of this. If you need any help, if you have any other questions, please reach out to us, whether it's on discord or email, and we'll be able to happily respond to any questions or concerns that you have. All right, so let's get into some of our amazing partners. We have so many incredible protocols and companies in this space that are here to talk about why they're excited to be part of Hack Money, and why we also want them to be part of this event. So, without further ado, we're going to bring on some of our amazing partners who've told us what they're building and why you should work with their protocols.
00:18:19.790 - 00:18:55.110, Speaker B: Hello, everyone. My name is constantine, and I'm startup operator at protocol labs. I'm here to announce exciting collaboration between IPFS, Filecoin and Hack Money. IPFS is a peer to peer protocol that makes the web upgradable, resilient, and more open. Filecoin is the largest decentralized storage network, which is built on top of IPFS that ensures content persistence over time. Or in short, IPFS is here for content addressing, and Filecoin is persistent storage of web free. Moreover, our ecosystem is the strongest asset in the growing Filecoin network and web free.
00:18:55.110 - 00:20:03.942, Speaker B: On one side, we have a rapidly expanding storage capacity of a network with more than 4000 storage providers across the globe and more than 18 XB bytes of total storage capacity available to you right now in the network. And on the other side, we have an increasing demand from explosively growing ecosystem with more than 300 startups building on top of IPFS and Filecoin and more than 9000 developers contributing to our protocols in a day to day basis. Moreover, we are more than just a storage, we are also developing solutions for computing on top of Filecoin. We are enabling programmability the layer one chain through Filecoin virtual machine and we are making our effort to make the Filecoin verifiably green and resilient foundation of the web free. Follow us more to know more about Filecoin virtual machine, Snap deals and many more items in the community roadmap which we are sharing across our networks. Follow us to film way more and during this hack, first of all build an amazing project. Feel free to follow docs on IPFS and Filecoin and reach us on Discord for any types of questions and book the office hours with our developers.
00:20:03.942 - 00:20:31.190, Speaker B: Moreover, I would wish you to get creative and good luck, have fun and if you're curious where to start with IPFS and Filecoin, feel free to follow up the links on the screen right now or feel free to follow up this storage solutions. There is Fleek Textile Powergate, Lighthouse storage opportunities and there are many more tools for you to build and jumpstart with web free and storage and IPFS. Thank you a lot. That was protocol apps. Wish you all good luck.
00:20:34.170 - 00:20:42.950, Speaker A: Amazing. Thank you so much Constantine. And with that we are ready for our second partner and that is Wallcoin. So without further ado, let's welcome Miguel.
00:20:44.170 - 00:21:31.446, Speaker B: I'm Miguel from Wallcoin. We are working on an open and scalable protocol that allows any developer to add civil resistance to their apps in minutes in a completely anonymous way. We're really really excited to be participating in hackmoney as part of our effort to open ourselves up, be more transparent and work with the community on really cool things. Let's talk about civil attacks. An application of civil resistance when it can tell whether its users are real people or just a bunch of bots trying to game an AirDrop. And making your application civil resistance not only makes them fairer, but also enable new mechanisms that haven't really been possible before in governance, tokenomics and interacting with the real world in general. At Wallcoin we've been working on Wallad a protocol to anonymously verify that someone is a real person and that they are performing an action only once.
00:21:31.446 - 00:22:31.782, Speaker B: So you can anonymously know not only that I'm a real human, but also I've never claimed this AirDrop or voted on this poll, or minted this NFT or any of these things. This works using this little guy which we're going to deploy all over the world and it will look at your iris and generate a hash that then you can use to generate zero knowledge. Proofs of humanity you can use to verify yourself without building any information about you. Integrating with Wallet is really, really easy. You just need these two lines of JavaScript to get started, which renders this element on your website which allows people to generate unique anonymous proof of humanity that you can then verify in your app. This allows new methods of governance, airdrops experiencing, quadratic funding, NFTs and a bunch more other really cool things. We've collected a bunch of resources at Hackmoney, including Docs for the protocol and the JavaScript widget, a testnet for the Orbs, and a bunch of examples on Startkid.
00:22:31.782 - 00:22:45.280, Speaker B: We also have a discord at Discord Ggwalcoin where you can come if you have any questions. You want to work together on something you have some ideas, feedback, or literally anything else, let's build together. Excited to see what you guys make.
00:22:47.910 - 00:22:54.450, Speaker A: Amazing. Thank you so much. And next up, we have Rahat from Polygon. Please welcome Rahat.
00:22:56.950 - 00:23:05.134, Speaker C: What's up, hackers? My name is Rahat. I'm a developer advocate over at Polygon. Super excited to tell you a little bit about Polygon and how we're supporting the Hack money.
00:23:05.192 - 00:23:06.130, Speaker A: Hackathon.
00:23:06.290 - 00:23:40.270, Speaker C: So what is polygon? Polygon is the leading platform for Ethereum scaling and infrastructure development. A lot of jargon, I know. What does that mean? We offer a bunch of different products and services that make it easier for you to scale on top of Ethereum for multitude of users and make your UX a lot easier and accessible for those users. We offer things like standalone side chains, zkate Rollups, optimistic Rollups, both of which are in the works. Things like enterprise chains, shared security chains and more. I'm really excited for you to dive into this ecosystem with me.
00:23:40.420 - 00:23:41.666, Speaker A: The main thing I really want to.
00:23:41.688 - 00:24:04.290, Speaker C: Point out is how easy it is for developers who are already building on top of Ethereum. Everything you've already learned, everything you've already been using in the Ethereum ecosystem. Maps one to one, right over to Polygon. Solidity still works. JavaScript still works. Tools like Hard, Hat, Truffle, all of that still map one to one. Like I said, right over to the Polygon blockchain.
00:24:04.290 - 00:24:57.734, Speaker C: Polygon ecosystem at large. If you already have adapt, you can use Polygon as a high performance layer and supercharge your UX. You can do things like depositing assets from Ethereum to Polygon, transferring them between accounts on Polygon, and then withdrawing back over to Ethereum at the end. This allows you to leverage the low cost of using the Polygon blockchain while still leveraging the security of Ethereum at the end. And we've got prizes here worth over 16K. Polygon track prizes include a first prize of $5,000, 2501, 500 and a pool prize of $1,000. Some ideas of things you can build are yield aggregators, decentralized exchanges, derivatives, things like pooling DApps, decentralized insurance platforms, and more.
00:24:57.734 - 00:25:31.266, Speaker C: These are just some ideas of things you can build, but we would love to see what you want to build, what kind of impact you want to make in the DeFi space. The only eligibility criteria for being considered for this track is that your DAP. Needs to be deployed either on the polygon proof of stake testnet or the main net. Either way, you're good to go. Here's some developer resources to help you get started. You can check out the Polygon Developer Library as well as the polygon documentation. It's very, very important always to read documentation before you dive into something new.
00:25:31.266 - 00:25:48.780, Speaker C: We've also got the Polygon Academy, where you can look up some tutorials, learn more about the ecosystem itself, and see how you can start leveraging the polygon ecosystem in your DAP right now. So without further ado, let the hacking begin. I can't wait to see what you all start building.
00:25:55.290 - 00:26:01.320, Speaker A: Amazing. And next up, we have Pedro from Wallet Connect. So let's hear everything. Wallet Connect.
00:26:02.730 - 00:26:54.886, Speaker B: Welcome hackers. Welcomenect is proud to be sponsoring Hack Money, the 30 day online hackathon organized by Eve Global, where you will be able to build your favorite project and win prizes online with anyone around the world. So what is Wallet Connect? Wallet Connect connects mobile wallets and desktop wallets to your DAP. It makes it very easy by providing a very simple SDK that you can integrate into Etherjs or Webtoonjs, and you can easily just build smart contracts on Ethereum, Polygon, optimism, or any EVM chain. So with Wallet Connect, we provide a secure communication protocol that supports more than 100 wallets. Any wallet that the user uses will be able to connect to your wallet to your DAP very simply. And then with the SDK, you can request transactions and get their accounts.
00:26:54.886 - 00:27:19.666, Speaker B: Welcome testnets, but you should be looking at which wallets support testnets for your projects. Why is wallet connect important? Welcomes you to support multiple wallets without having to choose which wallet the user should be using. It's not about desktop or mobile. It's about wall. Connect running everywhere. We have documentation at Docs. Wallconnect.com,
00:27:19.666 - 00:27:50.070, Speaker B: and we also will be able to help you at the ETHGlobal Discord under sponsor Wallaceconnect. If you have any questions, please reach out to our team. And we're also going to have a brainstorming session, a workshop where we're actually going to help you out with integration as you go. So where can you find us? You can find us on Discord, and you can find us on Docs Wallconnect.com. And if you need any help, please reach out. And don't forget that we have also bounces for you. So projects who use Wallconnect will be able to win extra prizes.
00:27:50.070 - 00:27:52.590, Speaker B: Good luck, hackers, and happy hacking.
00:27:54.770 - 00:28:00.270, Speaker A: Thank you, Pedro. Next up, we have Boris from Uniswap grants program. Let's welcome Boris.
00:28:02.530 - 00:28:23.570, Speaker B: Hi, guys. Boris from Uniswap grant program here. First of all, big thank you to the ETHGlobal team for organizing hack money. We've been at Et Amsterdam. We had lots of fun and we are very excited to continue supporting ETH Global hackathons. A little more information about the Uniswap grant program. So, we are a community run grant program established by the Uniswap Governance.
00:28:23.570 - 00:29:07.538, Speaker B: We've been live for a little over 15 months and during that time we have given out grants to 150 plus. Different grantees areas we focus on are governance, community tooling, developer experience, and growing Uniswap ecosystem in general. More information about Uniswap so, Uniswap is a decentralized AMM on Ethereum. It has three different versions with version three also being live on Polygon, Arbitrum and optimism. For hack money, we've prepared two different categories. The first category is tooling. So whether you want to create something cool for other developers to use or you want to create something for Uniswap and users, both projects will fall under this category.
00:29:07.538 - 00:29:46.458, Speaker B: The second category is innovation. We didn't want to limit your creativeness or give straight guidelines for your project. So any project that is Uniswap related will fall under this category. The first price for both category is $4,000. The runner ups, depending on how many submissions we'll get, will also split $4,000. If you have any questions, we'll be available in Discord and also check out our Hacker guide. There you will find links to different resources and tools which will help you in building your projects.
00:29:46.458 - 00:29:52.050, Speaker B: We wish you happy hacking. Thank you for your time and talk to you in Discord.
00:29:55.470 - 00:30:01.418, Speaker A: Amazing. And next up, we have Fran from Superfluid. Let's learn more about Superfluid.
00:30:01.434 - 00:30:35.490, Speaker B: Hello everyone, I'm Fran. I'm one of the founders of Superfluid and we are extremely excited to sponsor hackmoney this year. Superfluid is hacking money. We are a protocol that enables on chain streaming of assets in a way that's never been done before. Streaming money is this concept of sending funds over time from one account to another without requiring ongoing recurring transactions. And what this means is that you can pay people with no delays because they get paid every second and no unpayment risk as a result. This is simply impossible in traditional finance.
00:30:35.490 - 00:31:25.938, Speaker B: But with Superfluid you can get paid every second rather than having to wait until the end. So we can use this to move from recurring payments to ongoing payments and enable all sorts of things that will help make web free sustainable with sustainable economics and normal business models, which is what our industry really needs. So to try this out, go to app Superfluid Finance. In 1 minute you'll get your first stream, you'll start understanding what we mean by streaming money and you can immediately start developing as well. So after that, go to our console and this is basically an Explorer. You'll be able to explore, click on other people's accounts, see their streams, just kind of check out what's going on in the blockchain. When you start building, you'll need our JavaScript SDK, our Subgraph, but also our solidity libraries.
00:31:25.938 - 00:31:51.294, Speaker B: So what I would. Recommend is to go to look for our examples. Fork one of those and just get started from there. If you're not sure what to build hack Superfluid Finance has some great ideas. I'm extremely excited about the superfluid reactor. This is something we launched just a few days ago. It's an accelerator where we take no stake in your company and we purely focus on helping you succeed to build on top of Superfluid.
00:31:51.294 - 00:32:25.500, Speaker B: We help you from product refinement to investor introductions. And really we are there for you. So consider Hack Money the first step in your web free career. On the 20 May, we will be supporting the superfluid reactor summit. This is something we're organizing where Wivif Global will be highlighting great apps, some of the future of the Superfluid protocol. But we'll also talk about the web free economy. So come and join us there and overall get ready to hack money and build the future of finance with us.
00:32:28.550 - 00:32:37.490, Speaker A: Thank you so much friend. Super excited for Superfluid Reactor Summit in two weeks as well. But last but not least, we have Babylon Finance.
00:32:43.350 - 00:33:13.982, Speaker B: Hi everyone. My name is Ramon and I'm a co founder of Babylon Finance. Babylon Finance is a decentralized asset management protocol that lets people invest in DeFi together. Babylon Finance lets users create disinvestment clubs or investment dows that we call gardens. By investing in gardens, people get a bunch of benefits versus investing by themselves. First of all, they share all the gas execution costs. So if you have 100 members in a garden, you will get 100 of the cost versus investing yourself.
00:33:13.982 - 00:34:16.606, Speaker B: Secondly, you may consolidate all your taxable transactions in just a few because the club or the garden may execute hundreds of operations on your behalf, but the users just care about the deposit and withdrawal. Also, gardens allow people to not be 24/7 glued to the screen because they can share the information and they can share the load of keeping up with a market that never sleeps with all the other members. This is also extremely beneficial for managers because Babylon is totally trustless and permissionless. Anyone can create a DeFi investment club through our UI or directly through our smart contracts and get this fully functional tokenized fun out of the box. For managers, this means that they also get an UI so they can interact with 15 other DeFi protocols with our simple new code UI and they can mix and match protocols together. For example, they can lend money on compound, then they can borrow die deposit into carve and then stake the LP tokens on Convex. Finally this week, we have now released our SDK on smart contracts.
00:34:16.606 - 00:34:35.858, Speaker B: So now for you as a developer, you can take this one step further. You can take all these fully functional and tokenized funds that give you an Arc 20 and then connect it with the rest of define the rest of crypto. We can wait to see what you build. To get started, please visit docs babylon finance developers.
00:34:35.954 - 00:35:12.280, Speaker A: Thank you. All right, those were some of our incredible partners that are excited to share about what they built. But we have a lot more coming, which is we want to talk about all the other prizes that are going to be given out. And we have some more quick videos from all of our partners going to specifics of the prizes. And then after the prizes, we are going to be ready to kick off with the first summit talk. So without further ado, let's get into the prizes. So the first one is IPFS and Voltcoin, and let's learn about what you can win here.
00:35:15.290 - 00:35:43.678, Speaker B: Hello everyone. That is constantin from protocol labs. And I'm happy to announce prizes for the hack money. To participate in our prizes, the challenge is very, very simple. You need to build a solution or project with a best use of IPFS for content addressing and or filecoin for decentralized storage or anything that builds on top of either. You can use freely any storage helpers that we suggest in the keynote speech. And there is an amazing pool of prizes for you to compete in this hackmoney hackathon.
00:35:43.678 - 00:35:52.740, Speaker B: I wish you all good luck. I wish you all to see an amazing project, an amazing time during the hackathon, and looking forward to your submissions. Thank you.
00:35:55.770 - 00:36:36.850, Speaker A: All right, and to go directly into the prizes, you can win $11,000 in 1st, 2nd, 3rd place of the best use of Falcon IPFS. And there's also a pool prize for $5,000, which means that anybody who uses an IPFS for five point integration will split the amount equally for their team. So we'll kind of just rush through some of these details and then all the specifics around what qualifies, what doesn't qualifies, what is a meaningful integration is all going to be on the prizes page from your hacker dashboard and on our website. So with that, let's go on to our next prize category, and that is WorldCoin.
00:36:39.030 - 00:36:53.720, Speaker B: Hey, it's me again. Voltcoin has a price pool of 16K for anyone building on top of wallad. We have twelve k for the first, second and third best submissions out there and a price pool of 4K for anyone else building on top of Volatility. Excited to see what you guys make.
00:36:57.550 - 00:37:23.060, Speaker A: All right, so there $16,000 you can win for world coin. So the best integration with proof of personhood, protocol integration will receive $6,000. 2nd place will receive a $4,000, and third place will receive 2000 in prize. And they're also a pool price category here again, which means that anybody who makes a meaningful integration will equally split $4,000 amongst themselves. Next up, we have wallet connect.
00:37:24.230 - 00:38:20.398, Speaker B: So wallet connect is not only sponsoring this hackathon, but we also have $16,000 in prizes for all of you hackers. So in order to be eligible for the bounties, you just need to support wallet Connect in your project, you go into the documentation, you follow the tutorial, and you have a complete integration with Wallet Connect to connect your wallet and sign a transaction and you become eligible for these prizes. We created two special tracks for this. We created the MultiChain Finance Track and we created the Social Impact Track. If you build a project that uses crosschain with Ethereum, optimism, polygon and other layer two solutions, you qualify for the MultiChain Track. And if you build a project that particularly helps create social impact, democratizing or human coordination, you go into the Social Impact Track. For each track, we have the first, 2nd, 3rd prize and honorable mentions.
00:38:20.398 - 00:38:42.106, Speaker B: The first prize is $4,000, the second prize is $2,000. The third prize is $1,000 and two honorable mentions for each track as well, which have 500K. That's a total of 16,000 prize. $16,000 in prizes that you can win by integrating World Connect. So follow our documentation and check out our workshop to see how you can.
00:38:42.128 - 00:39:07.940, Speaker A: Become eligible for the bounty. Amazing. And just to summarize the wall Connect prizes $16,000 you can win. So the two integration tracks are DFI and social integration. So first, like in third place, will receive $4,000, $2,000 and $1,000 each. And then the pool prize will be split amongst meaningful usage from any team for a pool of $2,000. Next up, we have the Uniswap grants program.
00:39:07.940 - 00:39:59.358, Speaker A: So, for Uniswap, you have two ways you can win different prizes in two different categories. So the best use of the Uniswap tooling that makes a meaningful contribution and uses existing tools to make the developer experience on Uniswap better will receive $4,000 for the first place, $3,000 for the second place, and 1000 for the third. And then the most innovative implementation of Uniswap contracts into their project will receive $4,000 for the first place, 3000 for the second place, and 1000 for third place. Next up, we have Superfluid. Hey, hack money. I'm Sam with the Superfluid team and we are very, very excited to be sponsoring this event. So what is superfluid? We're a protocol that it's enabling real time finance.
00:39:59.358 - 00:40:52.866, Speaker A: And that means that one of the things we like to do is stream money. So we support digital native programmable cash flows which let you transfer money in real time, second by second, with no capital lockups, where everything is programmable and completely on chain. We have $16,000 in prizes for this event and I will go through them here. So we have $4,000 for the top overall project built on Superfluid $3,000 for the best project built for streaming in and out of LP positions $3,000 for the best lending application built on Superfluid $2,000 for the most innovative use of Superfluid's new ACL or Access Control List feature $2,000 for the best use of Superfluid for insurance. $1,000 for the top project built on Superfluid and AP Wine. And then another $1,000 prize that's open for a good integration with another sponsor's, tech we want to help you build. Please reach out to me in Discord at Sam F superfluid throughout the event.
00:40:52.866 - 00:41:30.478, Speaker A: If you have any questions, join our Discord and ask us questions there. And we are really excited to help you build an awesome project. There's a lot of prizes that Superfluid is giving in so many different categories, so I'll just quickly go through each of them here, which is the top overall project that uses Superfluid, will be receiving $4,000. The best one to make streaming and out of LP position will get $3,000. The best lending application that leverages Superfluid will receive 3000. And the most innovative use of Superfluid's ACL feature will receive 2000. The best idea that incorporates Superfluid for insurance will get 2000.
00:41:30.478 - 00:42:02.376, Speaker A: The best integration that CoWorks with the AP Wine, SDK and Protocol will receive 1000. And any other integration that you blend with Superfluid and any of our other partners for this hackathon will receive $1,000 for the best implementation. So there's a lot of things going on with Superfluid. Can't wait to see what everybody builds. And then we have Babylon Finance. Hello.
00:42:02.478 - 00:42:38.564, Speaker B: My name is Ramon and I'm co founder of Babylon Finance. I'm really excited to be sponsoring hackmani today. As you may know, Babylon Finance is a protocol that lets you create decentralized investment DAOs or investment clubs to let people invest in DeFi together to share the fees and build wealth together. Now, for you as a developer, this means that Babylon gets you a fully functional investment dow or investment club that then you can compose with the rest of DeFi and web3. We have $10,000 in prices for the best investment clubs of gardens. To get started. Go to Docs.
00:42:38.564 - 00:42:42.010, Speaker B: Babylon finance developers. See you soon.
00:42:46.380 - 00:42:58.700, Speaker A: All right, just to summarize, you can win $6,000 for the first place, 3000 for second, and $1,000 for the third place. Best Integration and Use of Babylon Finance. All right, next up we have Zksync.
00:42:59.760 - 00:43:02.504, Speaker B: Zksync version two is an ultra scalable.
00:43:02.552 - 00:43:04.924, Speaker A: Layer two for ethereum that supports solidity.
00:43:04.972 - 00:43:05.936, Speaker B: Out of the box.
00:43:06.118 - 00:43:15.324, Speaker A: Its security relies on cryptography rather than validators, and it provides finality in minutes instead of weeks. We have $8,000 in prizes for hack.
00:43:15.372 - 00:43:23.008, Speaker B: Money, 3000 for the most interesting application built on V two, and a $5,000 pool to be split equally amongst all entries.
00:43:23.184 - 00:43:24.724, Speaker A: We're also about to launch the first.
00:43:24.762 - 00:43:26.564, Speaker B: Round of ZK Dow, which is a.
00:43:26.602 - 00:43:29.236, Speaker A: 200 million dollar ecosystem fund and a.
00:43:29.258 - 00:43:33.848, Speaker B: Requirement for round one will be having a working demo. So if you want to turn your.
00:43:33.854 - 00:43:35.864, Speaker A: Hackathon project into something a little bit.
00:43:35.902 - 00:43:42.776, Speaker B: More, here is a head start. If you have any questions or need ideas, send us a message in the Hack Money Discord.
00:43:42.888 - 00:43:44.910, Speaker D: And here is the link to get started.
00:43:48.250 - 00:44:03.370, Speaker A: Amazing. So you can win $8,000 for the best Cksync integration for 3000 for first place, and a pool prize category there that will be splitting $5,000 equally for every project next up, we have Badger Finance.
00:44:05.070 - 00:44:40.310, Speaker B: Badger is a decentralized autonomous organization dedicated to building the permissionless, products and infrastructure needed to accelerate bitcoin and decentralized finance. We've got some great prizes up for grabs at this year's Hack Money, the first of which is to build a yield farming strategy with Badger One Five mix. Second, build anything on top of the Badger Rewards Manager, and any valid submission using vaults one Five or the Badger Rewards Manager is eligible for a piece of the pool prize. Best of luck to all the hackers. Looking forward to seeing all your submissions.
00:44:45.050 - 00:44:45.606, Speaker E: You.
00:44:45.708 - 00:45:06.830, Speaker A: And to quickly summarize the categories that we just saw, the best yield farming strategy with Badger will receive $3,000 in total. First place, 2002nd place, 1000. And the Built anything on top of Badger Rewards Manager will receive 2000 for the first place and 1000 for second place. And there's also a $2,000 pool price category. Next up, we have Gearbox.
00:45:11.850 - 00:45:14.290, Speaker B: Hi ETH Global hack Money participants.
00:45:14.450 - 00:45:16.514, Speaker A: This is Jared from the Gearbox Protocol.
00:45:16.562 - 00:45:24.022, Speaker B: Dow, and we are excited to be a sponsor of this fantastic hackathon. Here at Gearbox, we are building generalized and composable leverage.
00:45:24.166 - 00:45:28.126, Speaker F: It's based on a new DeFi primitive which is called a credit account, a.
00:45:28.148 - 00:45:31.854, Speaker B: Smart contract wallet that allows you to deploy a combination of your own and.
00:45:31.892 - 00:45:35.066, Speaker F: Borrowed funds across various DeFi protocols.
00:45:35.258 - 00:45:37.042, Speaker B: With a credit account, you can build.
00:45:37.096 - 00:45:48.462, Speaker F: Complex trading, farming, liquid staking strategies, and sometimes all of these strategies all at once. We'd love to see teams, hack on new yield strategies, integrations, automatic portfolio management.
00:45:48.526 - 00:45:53.078, Speaker B: And other creative ideas that come to your mind. We'll be sponsoring three prizes here.
00:45:53.164 - 00:45:59.094, Speaker F: First place for a $4,000 USDC prize. Second place for two and a half.
00:45:59.132 - 00:46:00.902, Speaker B: Place for one and a half, $1,000.
00:46:01.036 - 00:46:02.360, Speaker F: Let's build together.
00:46:03.610 - 00:46:24.390, Speaker A: I'm a gear head. All right. And to summarize the Gearbox prizes, first place will receive $4,000. The second place will get 2503rd. Place will get 1500 for the best use of a credit account on Gearbox. Next up, we have AP wine.
00:46:25.290 - 00:46:26.038, Speaker B: Hello, everyone.
00:46:26.124 - 00:47:13.394, Speaker D: This is Yulis cofounder of AP wine. APY allows you to get your yield farming in advance, ahead of time and at a fixed rate using a new DFI primitive known as future yield tokenization. Future yield tokens are composable and compatible with most DFI protocols generating yield. For that purpose, we're giving away $8,000 in prizes for those who build on top of APY. And we're excited to be partnering with Superfluid, the leader in payment streaming, to present a cosponsored bounty for the best project, leveraging both protocols, whether it be a Tokenizing money streams or streaming future yield itself, the possibilities are endless. The team will be on discord throughout the hackathon, so please reach out to brainstorm ideas and ask questions. You can try the app on app APY phi.
00:47:13.394 - 00:47:25.082, Speaker D: Check out our documentation on docs APY. Phi and also try out our SDK to build your own strategy very easily. We're excited to see what you can come up with, and we'll be here to help.
00:47:25.216 - 00:47:25.900, Speaker E: Happy.
00:47:29.120 - 00:47:56.036, Speaker A: Amazing. And just to repeat the prizes, the best yield strategy leveraging. The SDK will receive $5,000 in APW tokens. The best integration with another protocol will receive $2,000 in APW Tokens and the best co integration with Superfluid will receive $1,000. Next up, we have, uma hey, Everybody. I'm John Shut from, uma we are the Optimistic Oracle for web Three.
00:47:56.218 - 00:47:58.512, Speaker E: What that means is basically any information.
00:47:58.586 - 00:48:22.492, Speaker A: You need from your smart contract. Whether that's real world events, cross chain data, off chain calculation, price feeds, you name it, we can deliver it. We're really excited to be here as a sponsor at Hack Money. I was actually a competitor at Hack Money a couple of years ago. And this is a great opportunity to just work on something really creative, and we want to be in your toolkit. We're offering a couple of prizes. There's a $5,000 prize for the best use case, the Optimistic Oracle.
00:48:22.492 - 00:48:25.072, Speaker A: And a $3,000 prize for runner up.
00:48:25.206 - 00:48:26.864, Speaker E: We've got engineers like me on hand.
00:48:26.902 - 00:48:33.504, Speaker A: To help you reach out to us. We've got an ideas bank. A lot of cool protocols, a lot of cool products that you could build on top of. Uma and we'd love to hear your.
00:48:33.542 - 00:48:34.884, Speaker E: Ideas and help you build it.
00:48:35.002 - 00:48:54.808, Speaker A: Reach out to us on discord. It's always good to see a familiar face. And to summarize the, uma prizes, we have $8,000 in total. Where the first place receives 5002nd will get 3000. Next up we have volts. Hey, Everyone.
00:48:54.894 - 00:49:11.052, Speaker B: I am Simon. I am one of the co founders of Volts Labs. And we have built Volts protocol, which is an interest rate swap AMM, which basically means you can trade fixed or variable rates with leverage. The Protocol is a super low level.
00:49:11.106 - 00:49:13.416, Speaker A: Building block and it's creating a brand.
00:49:13.448 - 00:49:50.892, Speaker B: New market for DeFi. That's going to be huge. So you've got an opportunity to be involved super early in this massive market. Plus, because the protocol is such a low level building block, there's a huge array of different products that you could build that ranges from stuff like a fixed rate vault all the way through to more complicated products like swaptions or even on chain fixed rate mortgages. Whatever you build, we're super excited to help. We do, of course, have prizes for the best kind of products that get built through the hackathon. She breaks down as 4k for first place, two K for second and one K for third.
00:49:50.892 - 00:49:57.150, Speaker B: If you've got any questions, hit us up on Discord. Otherwise, good luck. And we're super excited to see what you build.
00:49:59.600 - 00:50:11.520, Speaker A: So Volt is offering $8,000 in prizes where the first, second and third place will get 4000, 2000 and thousand, respectively. And a pool price category of $1,000. Next up we have Tempest.
00:50:13.220 - 00:50:47.580, Speaker B: GM, everybody. My name is Georgia, and I'm here to present Tempest rewards for HEC money. Tempus built fixed income protocol so far, and we are looking for the best implementation on top of it. However, we have also pool prize that will be split between everybody that builds on top of Tempus. Also, we are looking for long term collaboration with the teams through our Grants program. Enjoy hacking.
00:50:57.970 - 00:51:08.210, Speaker A: Right, so there's $8,000 you can win for integrating Tempus, where the first place will receive $5,000 and in pool price category of three. Next we have coinbase, wallet.
00:51:13.670 - 00:51:14.094, Speaker G: Hello?
00:51:14.152 - 00:51:51.202, Speaker H: Hack money. I am Shannon Matthews. I'm a developer advocate at Coinbase and I'm here to talk to you about some prizes that we have for using Coinbase Wallet in your hackathon project. Coinbase Wallet is our self custody wallet with millions of users. We've also got great features like our newly launched Fiat onramp called Coinbase Pay. For this hackathon, we have a $6,000 pool prize for using Coinbase Wallet in your project and we're also giving away special bonus prizes for submitting awesome feedback on what your experience integrating Coinbase Wallet was like, I'll be giving a talk about Coinbase Wallet and how to integrate it. And you can find more details on our prizes available on our Discord channel.
00:51:51.202 - 00:51:52.530, Speaker H: Happy hacking.
00:51:56.230 - 00:52:10.390, Speaker A: So anybody who integrates Coinbase Wallet will be splitting $6,000 equally for their teams. So that's an amazing pool prize category. And next up we have Lyra Finance.
00:52:16.430 - 00:52:23.050, Speaker E: Hey everyone, this is Mike from Lyra. We're building a permissionless options protocol that's native to optimism.
00:52:23.550 - 00:52:26.038, Speaker B: Lyra creates two way options markets on.
00:52:26.064 - 00:52:28.122, Speaker E: The biggest crypto assets using a novel.
00:52:28.186 - 00:52:32.030, Speaker B: Automated market maker that manages risk for liquidity providers.
00:52:32.450 - 00:52:34.666, Speaker E: Options are the most composable primitive.
00:52:34.778 - 00:52:36.538, Speaker B: They can be used to manage risk.
00:52:36.634 - 00:52:46.526, Speaker E: Generate yield, and build any payoff structure. We're offering up to $8,000 in prizes to teams that build on Lyra. Whether it's a new option, vault, arbitrage.
00:52:46.558 - 00:52:49.106, Speaker B: Bot, or something entirely new, we know.
00:52:49.128 - 00:52:55.234, Speaker E: You'Ll come up with something awesome. Check the Hack Money website to get some more ideas or reach out in the Discord.
00:52:55.362 - 00:52:56.310, Speaker D: Good luck.
00:53:02.410 - 00:53:42.978, Speaker A: And to summarize the liar prizes, there is $4,000, $2,000 and $1,000 for the first, second and third category winner place. And then a pool prize of $1,000 that you can split for a meaningful integration. And then we have swing. This is Avec from the Swing team and we're super pumped to be supporting hackmoney this year. There's two reasons why you should be building with the Swing API. With a single API and SDK integration, you get access, instant access to multiple blockchains liquidity sources and cross chain bridges. Also, we help developers cut down their integration time from weeks to just hours.
00:53:42.978 - 00:54:31.422, Speaker A: Check it out. We support about 20 plus blockchains, nine bridges, and 40 plus liquidity sources out of the box. You can see a full list on our documentation page as well. We're giving out about $8,000 in prizes this year, and if you have any questions, check out our docs at documentation swing XYZ or message us at the Hackmoney Discord channel sponsor Swing happy hacking guys, look forward to seeing all the work you guys put in amazing. And to summarize the first place will receive $2,000 for the best integration of swing second place will get 1303rd, place will receive $1,000. The pool prize is split between all projects for 4000. And with that, let's go into the remaining prizes.
00:54:31.422 - 00:54:58.140, Speaker A: So next up we have Polygon. So there's a lot of prizes you can win for Polygon. $6,000 for pool prize. Category that's going to be split between six projects. So every project will get 1000 and the first 2nd 3rd place will be receiving 5000 3000 to 2000 each for the Ave grants, prize and integration. First place will get 7502nd place will get 45 and third place will get 3000. And the fourth place will receive 1000.
00:54:58.140 - 00:55:19.966, Speaker A: Bydx Grants Program is also offering a lot of amazing prizes for the best integrations. The first place gets 5002nd place gets three. And the third place gets two. For unstoppable domains. You can get 2000 100,000 for 1st, second and third and 3500 for a pool price category. So any integration will split that equally. Then we have graphs.
00:55:19.966 - 00:56:15.370, Speaker A: So the graph 1st, 2nd, 3rd places are 2000 500,500 but it's split into two tracks, which is the best use of an existing subgraph and a best new subgraph that is contributed to the Protocol and the Explorer for that category. Then we have Arbitrum where you have 2500 for the first place and 1500 for the second place. Then we have Connect, where the best use of a cross chain DAP that uses permissioned calls will receive $3,000 and the best use of a crosschain DAP that uses permissionless calls will receive $1,300. For integrating with Connect. Then we have Chainlink, where Chainlink is offering $1,000 in link tokens to the top four projects that use the chain link. SDKs Waku is offering $1,000 for the first place for the best integrations, for sending and receiving messages in a decentralized manner and a pool price category of 2000. Then we have Fuel Labs.
00:56:15.370 - 00:57:05.590, Speaker A: Fuel Labs is offering 2500 for the first place, $1,000 for second place and a $500 price for third place for the best integration with Fuel and a pool price category of four that will be split equally for all meaningful integrations. Then we have EPNS, where you will receive 2100 and $500 for the first, second and third place for the best integrations. Then we have Odos and you can receive $500 for a cross chain token swap or an NFT swap idea. $500 each. Then we have Maker Dow and Maker Dow is offering a $4,000 pool prize where 4000 will be split equally for all maker integrations for your projects. Then we have Chainstack and Chainstack. You can receive 2000, $500,000 and 500 for the first, second and third place for integrations.
00:57:05.590 - 00:57:48.510, Speaker A: Then you have Gnosis Safe. So there's a lot of interesting things that we can do here. For the Roles moderate, the best use of Zodiac Roles modifier on Gnosis will receive $2,000 as the winning prize. And then the best project on top of Gnosis just in any given category, will receive 2000 prize as well. For the best integration. Then we have Urine Finance, and there's a pool prize of $4,000 that's going to be split between anybody who uses urine for a meaningful integration. Then we have Redstone, where you can receive $3,000 for first place and 500 for second and third place each for a most efficient use of a cost efficient Oracle integration.
00:57:48.510 - 00:58:43.442, Speaker A: Then we have Teller, where you can receive 2000 $500,500 for 1st, 2nd, 3rd for an Oracle integration on top of Teller. Then we have Covalent, who are offering a $4,000 pool prize for the best integrations for a Covalent API for getting on chain data, we have Nervos, and you can receive $2,000 and $1,000 for the first and second place for a nervous integration for your project. And then we have compound finance. Compound Finance. So best integration that uses compound protocol or an upgrade to the protocol will receive $3,000. And there's a full price category of $1,000 that's going to be split between all projects. Then we also have Spiron, where the top ten projects who have Spiron for hosting their web app will receive $200 each for making a decentralized storage network integration.
00:58:43.442 - 00:59:26.770, Speaker A: Then we also have a $4,000 prize from Transact for a Transact integration that's going to be split equally between all teams. Oasis is offering the best privacy integration, where the best integration will receive a $4,000 prize. And to kind of summarize all these things, all of these prizes are listed with a lot more detail, especially with workshops, documentations, and nuances around what qualifies and what doesn't. On this URL, you can head over to DFI Evgobal.com prizes. And finally, just to close up logistics before we go into all of our amazing talks, we really want you to have fun here. Please pace yourself.
00:59:26.770 - 00:59:43.270, Speaker A: This is a couple of week long event. We really don't want you to tire yourself out or compromise your sleep over building cool things. We don't want this to be exhausting for you. We want this to be about experimentation and learning. So have fun. Ask us questions if you're stuck. Ask all of our partners questions if you need help with something.
00:59:43.270 - 01:00:05.040, Speaker A: And you don't necessarily have to stay up at 02:00 A.m. To watch some talk. If it's not in your time zone, everything will be recorded, and we're going to make sure that you are able to catch up if you miss something. This is designed to be asynchronous by nature. So with that, happy hacking and we'll see all of you on Discord. And for those of you who are joining us for the summit, welcome again. And let's get started.
01:00:05.040 - 01:00:51.760, Speaker A: All right, so let's go into the summit. Today is our kickoff summit, and we have an amazing set of speakers that are going to be talking about all the interesting things that are happening in DeFi. So to give a quick overview of today's schedule, we're going to have Alexis first talking to us about squeap. Then we'll have Arjun talking about how we do DeFi in a cross chain world. Then we're going to talk about how DeFi is making the rest of the world permissionless in a super interesting and a unique way. Then Kaido will be talking about treasury and sustainability and how do we actually manage these things and treasuries at scale. And then how does zero knowledge proof actually change how we think about DeFi? Elena will be coming on and talking about DeFi and privacy and how all of that is important.
01:00:51.760 - 01:01:13.000, Speaker A: So with that, let's get started with our very first talk. So I want to bring on Alexis here to talk about squeep. For those of you who don't know what squeat is, I won't spoil this for you. I'll have Alexis give that intro. So, without further ado, let's welcome Alexis on stage. Good to see. Alexis, how's it going?
01:01:13.610 - 01:01:19.382, Speaker G: Good to see you. Going well? Excited to squeeze well?
01:01:19.436 - 01:01:21.666, Speaker A: Perfect. Oh, the stage is yours.
01:01:21.778 - 01:01:22.440, Speaker B: Amazing.
01:01:24.030 - 01:01:47.342, Speaker G: Okay. Awesome. Yeah. So really excited to be here, excited to chat with everybody about squeath. You're probably wondering what a squeath is. And by the end of this talk, you'll know you'll be able to tell all your friends that you're squeathing. So today we're going to kind of start off by talking about options, what they are, like, how they work.
01:01:47.342 - 01:02:31.920, Speaker G: Then we'll dive into some of the problems with options and how squeath came to be in the first place, and then we'll talk about what squeath is and how it works. So let's dive into it. So, first of all, why do people use options? Well, people typically use options for one of these three things. They're either looking to get leverage, earn, yield, or to hedge themselves. And when we built out the first options in DeFi at Open, this is what we noticed people were using options for. It wasn't just like options for the sake of options, but for one of these three specific things. And we'll come back to this.
01:02:31.920 - 01:03:25.758, Speaker G: So now what is an option? There are two main types of options. There are put options and call options. And today I'm going to focus on call options. So we'll chat about what call options are. First, talking about this kind of fancy formal definition, but then we'll really break it down, go through an example, and try to just wrap our heads around what this actually means. So the definition of a call option is something that gives you the right, but not the obligation to buy an asset, which we call the underlying asset at a given price, which we call the strike price on a certain date, which is the expiry date. Now, that's a mouthful of a.
01:03:25.758 - 01:03:52.280, Speaker G: Definition. Let's break it down. So let's take an example. Let's say that ETH price is currently $3,000, but I'm feeling really bullish. I think that by the end of the month, ETH is going to be $5,000. And I'm really excited about that. Then what I can do is I can buy this call option.
01:03:52.280 - 01:04:49.740, Speaker G: And what this call option basically tells me is that, hey, at the end of the month, I can buy ETH for a price which we call the strike price, no matter what the price of ETH actually is in the market. So I think that ETH is going to be $5,000 at the end of the month. So maybe I buy a call option with a strike price of $4,000. Now, what that means is, say we get to the very end of the month, and ETH is trading at $5,000. Instead of having to pay $5,000 to buy ETH, I can just use my call option and buy ETH for $4,000. So even though ETH is trading at $5,000 on the market, this call option lets me buy it cheaper than the market at $4,000. So that is kind of what is really powerful about call options.
01:04:49.740 - 01:05:35.980, Speaker G: And the cool thing is, if I were to buy ETH right now, I'd have to pay $3,000. But if I were to buy this call option, I pay some sort of premium, say that premium is like $100. Then I'm paying $100 right now for the right to buy ETH at $4,000 at the end of the month. And so I can actually just pay $100 right now to be able to buy ETH cheaper than the market at the end of the month. If I'm feeling really bullish, basically, kind of just what we talked about, I'm bullish ETH. I think ETH is going to go up beyond $4,000. So if ETH price goes up beyond that, I can still buy that ETH at 4000.
01:05:35.980 - 01:06:13.830, Speaker G: So kind of mapping that back on to the definition that we talked about. Our underlying asset is ETH. That's the asset that we're thinking about here, the one that we are saying, hey, I think this particular asset is going to be above $4,000. $4,000 is the strike price. That's the amount that I'm trying to buy this underlying asset for, even if the market price is greater. February 20 Eigth is my expiry date. So I can do this on February 20 Eigth at the end of the month of February.
01:06:13.830 - 01:07:02.722, Speaker G: And I actually have a choice. This is actually really interesting. So you might be thinking, okay, ETH goes up to $5,000 at the end of the month. Why wouldn't I want to buy ETH for $4,000 for cheaper than it's on the market at 5000? But what if we go the other way and have some sort of, like, bear situation where ETH is at $2,000? Then do I still have to buy ETH for $4,000? Am I locked into this price? And the answer is no. If ETH goes down, you don't have to use your call option. You have the choice to use your call option. So if ETH went down, I probably wouldn't use this call option.
01:07:02.722 - 01:07:36.720, Speaker G: I wouldn't buy ETH at $4,000. But if ETH went up to 5000, then I'd want to use it. So you have this nice choice, which is that right. Not obligation that we talked about. So what does this look like? Well, the cool thing here is you actually have limited downside and unlimited upside. So I'm paying $100 to buy this call option. If ETH goes down and I don't want to use the call option, then all I've lost is this $100.
01:07:36.720 - 01:08:16.640, Speaker G: And if ETH goes up, I just keep making more and more and more as the ETH price goes up. Say ETH price goes up to 8000, I can still buy it at 4000. So that gives us this really nice property of limited downside and unlimited upside. And we have a fancy word for this property. So if you've ever heard the word convexity, all people are trying to say is limited downside and unlimited upside. So that's what people are talking about when they say convexity. And it's this really nice property that you get here.
01:08:16.640 - 01:08:58.058, Speaker G: Okay, cool. So now you might be thinking, well, that's great. Unlimited upside, limited downside. Like I want that. So who is trying to sell this to you? Who is taking the other side of this bet? Well, these are people that are actually earning premiums for selling you that really nice choice, that really nice payoff. So when you buy that option for $100, that $100 is going to this person on the other side of the trade that's willing to take on more risk. So for them, the maximum amount that they can earn is that $100.
01:08:58.058 - 01:10:02.880, Speaker G: So if ETH price goes down and you don't use your option, they just get to keep that $100, they're happy. But if ETH price goes up and you exercise your option, they're forced to basically take that other side to sell it to you at $4,000, even though it's trading higher on the market. And they earn a premium for taking on this risk. While you, the option buyer, has a choice about whether you want to use your option, this option seller has no choice. They are forced to take the other side of your trade and they get paid for that. So for people that think, hey, there's no way it's going to hit $5,000 at the end of the month, I'm willing to take on this risk, then they can earn this kind of steady premium for selling you this call option. Okay, now what are the problems with DeFi options? What have we seen so far? And there's a couple of problems that have popped up that we've seen as we've been building DeFi options.
01:10:02.880 - 01:10:43.530, Speaker G: One is that there are tons of different expiries that you can have for these options. So we were talking about a call option that expires at the end of the month, but you could have an option that expires at the end of the week at the end of two months. At the end of three weeks, you could have literally any expiry. And so that means that you need to constantly be thinking about that. You can only use your option on that expiry date, and then maybe that expiry date comes around and you're like, hey, I still want this choice. Then you have to manually kind of roll over your option to the next expiry. And then you have to make that choice up front.
01:10:43.530 - 01:11:40.160, Speaker G: Like, do I think Eats going to hit 5000 at the end of this month? No, maybe the end of next month? No, actually next week. And so there's kind of a lot of choices that you have to make. And if choosing X Breeze wasn't enough, you also have to choose your strike price. So maybe you think ETH is going to go up to 5000, or maybe 3000, or maybe 3500, and then you have all of these different strike prices. And when you take all of these strike price and expiry combinations, those are all individual markets. So the $4,000 call expiring at the end of this week is different from the 4000 call expiring at the end of the month is different from the 3000 call expiring at the end of next month. And so you end up with liquidity fragmentation because you have all of these different separate markets that you have to build liquidity around, and that makes things really difficult.
01:11:40.160 - 01:12:38.240, Speaker G: And so we were like, okay, there's all of these problems with DeFi options right now, how do we solve them? So we went to the forest, the literal forest, and we were like, how do we solve these problems? And it was there in the forest that we found squeath. And squeath solves these problems. Squeath is like a call option in terms of its payoff. You still have that really nice unlimited upside and limited downside, but you have no expiries, no strike prices, and that means you can have one liquidity pool. So we're building liquidity around one instrument. We're taking out all of those choices and those things that you have to think about. And you're still able to get the heart of what you're getting with a call option, but in a much more liquid and simple way.
01:12:38.240 - 01:13:13.222, Speaker G: So what is squeath? Well, long squeath is very similar to a call option. This blue line here is squeath. And you can see that you have this unlimited upside and limited downside. It's like a call option, but it's more curvy. So the call option is kind of like that, and squeep is like even curvier. So it kind of gives you this convexity, but in a better and more perpetual form. And so that's kind of one way to think about squeep.
01:13:13.222 - 01:14:00.970, Speaker G: Like a call option, but with no strike price and no expiry. But there are also a couple of other mental models that can be useful to help us understand squeath. So just starting with the name, what does the squeath name mean? Well, it's squared ETH squeath. And so this blue line here is literally the right side of a parabola. Like if you were to take X squared and plot it on a graph, that's what this blue line is. So we literally are taking ETH price and squaring it. And that's kind of this blue line that you get here, you can also compare it to something like two X leverage.
01:14:00.970 - 01:14:47.542, Speaker G: And you can see that kind of compared to two X leverage. When ETH goes up, you do better with squeete than with two X leverage. When ETH doesn't move that much, you're kind of getting about the same payoff. And when ETH goes down, you get liquidated with two X leverage, but you don't with squeeze. And so another kind of way to think about it is as perpetual leverage without liquidations. So those are kind of a couple of mental models to think about squeeze. To start, to wrap your head around it, we see that it's got similar properties to the call option in terms of that limited downside, unlimited upside, got that nice curviness, which you don't get with the kind of two X leverage or perpetual swaps.
01:14:47.542 - 01:15:33.166, Speaker G: You have no liquidations similar to a call option. But your payments, you're kind of paying a continuous payment, which is a little bit more similar to perpetual swaps versus like a one time premium that you pay with a call option. So some mental models about how to think about squeeze. So now you're probably thinking, okay, that's great. Now I get this perpetual call option thing. I have even more unlimited upside and limited downside. Who's taking the other side? And pretty similar to going short a call option, the person on the other side is willing to take on some risk in return for earning fees.
01:15:33.166 - 01:16:31.110, Speaker G: So in this case, they are earning those continuous funding payments for being short squeezed and kind of taking the other side of that position. And the way this works from a mechanism standpoint is actually very similar to something like MakerDAO. If I wanted to go short squeep, I could put down some ETH collateral into a vault and then I could mint some squeep the same way I would put ETH collateral into a vault and mint some die. And then to go short squeath, I would sell that squeath that I just minted on uniswap. So squeeze trades on uniswap V three. If I wanted to go long squeeze, I would just buy the long squeeze, ERC 20 token from uniswap. And if I'm going short squeeze, I'm selling that same ERC 20 on uniswap.
01:16:31.110 - 01:17:06.594, Speaker G: And so that's kind of how things are working behind the scenes. Now, why is this relevant we'll get into that in just a second. So we have this Crab strategy because when you're going short squeeze, like I mentioned, it's similar to MakerDAO, like you're putting down collateral into a vault. You're minting squeeze. And so that means you need to be thinking about things like your collateralization ratio and your liquidation price. It's a bit more of a managed position. So to make that easier, we built this thing called the Crab strategy.
01:17:06.594 - 01:17:52.322, Speaker G: And the Crab strategy is an automated strategy that uses short squeeze to let you earn funding without you having to worry about the nuances and details of your collateralization ratio, liquidation price, et cetera. So the strategy is managing that for you. And what this strategy is doing is its goal is to make US. Dollar returns. You're trying to earn funding without necessarily taking a view on ETH. So remember how I mentioned that when you go short squeep, you have to put down ETH collateral into a vault? Well, that means that you have some ETH exposure. So what this strategy does is it hedges out that ETH exposure.
01:17:52.322 - 01:18:20.298, Speaker G: So you're just trying to earn funding. And so you can deposit a strategy, earn the funding fees, and not really have to think about your liquidation price or collateralization ratio. Of course, this comes with its own risks. Like you're going short squeeze. You're paying those rebalancing fees. But it's a much simpler way to kind of take the other side of the Squeath trade. So those are kind of some of the fun ways to squeeze.
01:18:20.298 - 01:18:49.750, Speaker G: But we've got a couple more ways to squeeze. So, like I mentioned, Squeath trades on uniswap. So that means that you could be a uniswap LP for Squeath. And the main pool is the Squeath ETH pool. And there are a couple different ways that you can LP on uniswap. So when you're Lping on uniswap, you need to provide two assets. You need to provide ETH and you need to provide Squeath.
01:18:49.750 - 01:19:42.134, Speaker G: So there are two different ways that you can get that Squeath to LP with, and each way gives you a slightly different payoff. So you could buy squeeze or you can mint squeeze like we talked about by putting down ETH collateral and then minting some squeeze. So let's start by talking about buying squeeze. You go to uniswap, you buy some Squeath, you bring some ETH, and you decide you want to LP it. Well, what does that return actually look like? Well, it turns out that's this blue line right here and the payoff of buying Squeath and Lping, it is actually ETH to the power of 1.5. So the same way that Squeath is ETH squared, buying an Lt is actually east to the 1.5 power, which is pretty cool.
01:19:42.134 - 01:20:51.818, Speaker G: It's like slightly less squeathy squeath? So you're earning this kind of nice leverage payoff. You're still paying funding because you're long Squeath. You bought Squeath, but you're also earning fees because you Lp'd on uniswap. So it's basically like you're offsetting some of that funding payment with the LP fees that you're earning on uniswap, and in return, you're still getting leverage, but you're slightly less levered than normal long sweep because you're kind of paying less in the aggregate. So it's a nice way to still get some leverage but not pay as much and kind of not have that full E squared profile, but a nice eat to the 1.5. So that's kind of what buying and Lping is. And then if you mint an LP, you actually get a very different kind of payoff where you are earning the LP fees, but you could be earning the LP fees and earning funding because in this case, you had put down your ETH collateral into the vault.
01:20:51.818 - 01:21:38.738, Speaker G: You minted some Squeath, and then you put that minted Squeath and ETH into the uniswap pool. So now when you start, you actually start with a payoff that's kind of similar to long ETH. But as the pool moves and people buy and sell Squeath, you could end up with a short Squeath position because the amount of Squeath debt that you minted could be different than the amount of squeeze in the uniswap pool. So say I put down some ETH collateral and I minted ten squeeze, and then I put that ten squeeze and some ETH in a uniswap pool. Now my debt is ten Squeath. Say people trade against the uniswap pool. And the amount that I have in the uniswap pool at the get go was ten Squeath.
01:21:38.738 - 01:22:12.790, Speaker G: It was neutral. But now people have traded against the pool, and my amount in the uniswap pool is less. It's like five squeeze. So now I'm short five squeeze, which means I'm earning funding and LP fees. So it's a pretty cool way to be able to earn both of those fees. Now, of course, because you do have a vault, you do have to be thinking about your collateralization ratio and liquidations. But that's like another fun way to squeeze is minting and Lping on uniswap.
01:22:12.790 - 01:22:58.790, Speaker G: So we talked about a lot of different ways that you can squeeze. You can go long Squeath and get a nice two X leverage without liquidations kind of payoff. You have that unlimited upside and limited downside. You can go short Squeak and earn funding to take on that risk. You can participate in some of the short strategies like the crab strategy, or there's tons of other really interesting short strategies that can be built. We talked about the buying and Lping and minting and Lping strategies, but there's also a lot of other fun things that you can do with sweep. You can actually use Long Squeep to hedge an ETH USD uniswap LP position, and we have some blog posts that dive deeper into that.
01:22:58.790 - 01:23:48.774, Speaker G: That's like a whole nother fun rabbit hole. You can use Squeath as a volatility oracle because Squeath kind of represents a bunch of different options condensed into one. It's like if you took the whole options chain and put it into one instrument, squeath funding can actually give you a bit of a vault oracle, which is very exciting. So we're looking at ETH VIX through Squeath funding, which is another kind of fun topic to dive into. So, basically, there's lots of interesting things that you can build with Squeath. And if you're excited about that, we've got some blog posts about those things and happy to chat more about it. And, yeah, if you want to try out Squeath, you can Squeath at Squeats Open Co.
01:23:48.774 - 01:24:15.306, Speaker G: If you try that out, definitely feel free to ping me with any questions or thoughts that you have. Very excited to answer questions. We're always trying to improve the Squeath. If you want to chat about Squeath or have questions, join us at Discord Open Co. And if you want to build Squeath, we are hiring at Jobs Open Co. Cool. So it was very fun squeezing with Y'all.
01:24:15.306 - 01:24:20.640, Speaker G: If you have questions, definitely hit us up on Discord. And yeah, thank you.
01:24:22.370 - 01:24:44.326, Speaker A: Thanks, Alexis. That was an amazing intro to how Squeap works. And I'm just looking at some of the comments on the chat, too, and this is so clever. So I'm glad that we got to do a beginner, friendly version of how all these things work. Sweet. All right, well, if there's any other more questions, we'll relay them to you directly. But one comment we did get was if we can have access to the slides.
01:24:44.326 - 01:25:11.220, Speaker A: So if you want to send that to us after, we'll share that with everybody. Thanks so much. All right, with that, we are ready for our next talk. So next up, I want to invite Arjun to talk about interchange DeFi and how Connect makes that a lot more convenient and simpler. So, without further ado, let's welcome Arjun, and I'll let you take over from here.
01:25:11.830 - 01:25:42.454, Speaker E: Awesome. Thanks so much, Kate. Hi, everyone. My name is Arjun. I'm one of the founders of Connect. Enables fast, trust, minimized communication between blockchains and roll ups. We've been in the space for a very long time, heavily researching layer twos since, like, 2018, and then started working on cross chain last year, and right now have a live product that works on transferring funds between chains that is now being upgraded to do more generalized messaging.
01:25:42.454 - 01:26:25.400, Speaker E: And I'll kind of go into what that means in a couple of minutes. This talk is about crosschain DeFi. I know a lot of people have been thinking about what DeFi looks like when you're now in this interchange interval of paradigm. And this talk hopes to illuminate a little bit about what kinds of things can be built in this Crosschain paradigm and what kinds of pitfalls exist when trying to build projects in this crosschain world. So, yeah, without further ado, let's start by just some basic background on bridges, bridge trade offs, and connects. One of the key things with building distributed systems is that there are always trade offs. This is just like the unfortunate nature of being in our space.
01:26:25.400 - 01:27:16.006, Speaker E: And this is especially true for bridges because really with a bridge or an interoperability system, what you want is a combination of three things. You want it to be trust minimized. Obviously you want to kind of maintain the security properties of the underlying blockchains if at all possible. You want it to be generalizable, by which I mean you want to be able to take any arbitrary data and pass it between chains. You can build arbitrary applications and you want it to be extensible, which means that you can take the same system and replicate it on a bunch of different chains and roll ups and other kinds of constructions without having to go and do a bunch of custom work to integrate. And generally what's existed in the past is that any construction that has existed has only ever been able to fulfill a couple of these requirements at any time. So the way that connects works currently, for instance, uses atomic swaps.
01:27:16.006 - 01:28:00.482, Speaker E: And while it is trust minimized and can be deployed easily to any chain, we cannot handle any arbitrary kind of payload. We can do some types of contract calling across chains, but not every kind of contract calling. Similarly, you have MPC systems, Oracle systems, what a large number of people are now colloquially referring to as like multisig bridges. And those include things like layer zero and synapse and things like that. And while those are very easy to deploy to many different chains and they support arbitrary message passing, they're not really trust minimized. You're having to trust this external set of actors that is fundamentally going to have a different security model than the underlying blockchain. Now, in the last few months we've been pushing this idea of optimistic bridges, which was first pioneered by Nomad.
01:28:00.482 - 01:28:50.930, Speaker E: Optimistic bridges kind of take another path along this tradeoff space where they actually fulfill all three of these requirements. They are trust, minimized, generalized, accessible, and they do this by relaying data across chains, optimistically using the similar model to, orus where they post data to chain on the receiving chain. And then there's a certain timeout window, in this case 30 minutes, within which people can prove fraud. Now, as you can tell, there is again another trade off here, which is latency. So while you're able to get some of these highly desirable properties, it now takes 30 minutes to do transactions across chain. Is there a way to beat these trade offs? We think that the best way to do that is through modularity. So one thing that we are working on now with our new upgrade is layering connects on top of Nomad, so that we offer kind of liquidity layer of the stack, nomad offers the messaging layer of the stack.
01:28:50.930 - 01:29:50.518, Speaker E: And by doing this, it's sort of like a positive substitution where we can offset some of the trade offs of Connect and also some of the trade offs of Nomad. And the outcome is that we can actually end up with something that looks as close to ideal as possible while retaining the trust minimization properties of the underlying chain. So for any kind of transfer of funds or an unpermissioned call. By which I mean a call that goes across chains and doesn't actually need to check TX origin, that can happen with two minutes of latency. Which is the normal time that it takes for connects to make a transaction and then for permissioned calls where you are checking TX origin. That takes 30 minutes of latency, which is the standard nomad time. Generally what we've seen is that this is actually okay because in the vast majority of cases, user facing interactions are typically unpermissioned because you don't normally want your broad set of users to be able to call a Mint function on your token or something like that because that's obviously going to be a security vulnerability.
01:29:50.518 - 01:30:49.786, Speaker E: And so generally we found that this works well because user facing interactions can happen quickly with good user experience and then the slower interactions happen with a higher degree of security or I guess they happen with a higher degree of latency, but that's necessary because they need a higher degree of security anyway. All right, jumping into cross chain applications one of the ways that we like to think about what Connect is actually enabling and what this stack enables is that we are pushing Solidity towards becoming Asynchronous. So until now, everybody has built Solidity applications in a synchronous environment. Everything happens within a single block. It's sort of like the AP computer science version of development where you are only building programs that run locally on your machine that don't ever interact with the remote resources at all. But as we know from building web applications and for anybody that's written anything in TypeScript, the reality of the Internet is that it doesn't really work that way. You have remote resources, you don't really know when you're going to get a response from those resources.
01:30:49.786 - 01:31:39.594, Speaker E: And so you have to think about Asynchronous. In short, you have to start thinking about distributed systems. What Connect enables is making these kinds of Asynchronous calls across chains. So we have a function. The core kind of flow for making this kind of call is a function called Xcall, which maps to the lower level Solidity call function. And in the same way that you make a call to a contract on the same chain as you with call data, you would make an X call to a contract on a different chain from you with call data and a destination domain or basically chain address. And what's really interesting about this is that you can actually, again, similar to things like JavaScript, receive a callback and execute that callback back on the origin chain.
01:31:39.594 - 01:32:47.986, Speaker E: So you can go and execute some transaction somewhere else, get data from executing that transaction, bring it back home and then do something else with that data. Now of course there is latency involved in this so you have to think carefully about what that latency means. But this is a really powerful primitive and there's a lot of really interesting types of protocols that can be built using this mechanism where you're able to access resources in different locations at different times. Now, one of the biggest questions that comes up during this is like what does it look like to actually do this? How do you charge fees? How do you actually make this interaction happen? And what we've tried to do is just mimic the existing flow for building applications as much as possible. So we charge gas fees on the origin chain they're charged in the native asset that you're already spending on the origin chain to make a transaction. And similar to how you handle gas fees with every single chain today, the gas cost of execution on the receiving chain of course is variable, but will get executed if you have enough gas to pay for it. And if you don't have enough gas to pay for it, you can bump gas in again the exact same way that you do today.
01:32:47.986 - 01:33:46.950, Speaker E: We think that this actually represents the ideal user experience because the development process for building these cross chain applications then just becomes figure out how much it's going to cost to execute a transaction on receiving chain and just come up with your best guess estimate for this. Send a transaction on the sending chain passing in the gas and then if it isn't enough funds to make that transaction happen within the time period you want it to bump gas in order to make it happen faster. Pretty much exactly what you would do to build an application today. What does it look like in practice? In practice we've tried to, as I mentioned, map to the existing lower level call interface as much as possible. Now there's obviously limits to this because we're limited by what solidity can accomplish. And I think in the long run we can work towards doing more interesting mechanisms like perhaps even building and promises into solidity so that you don't have to deal with some of the annoying things associated with callbacks. But overall it's still a very simple flow.
01:33:46.950 - 01:34:43.878, Speaker E: The entire entry point of this flow is just a simple Xcall function. And the idea is that you can Xcall things and get return data from x calling things and use this as a core primitive to now start building much more, many more complex multi chain or cross chain systems. So now we kind of get into what can you actually build with this primitive and this is where things get interesting. So there is an entire domain space of DeFi applications that exist right now and the. Big problem associated with the multi chain DeFi world that we live in is that users have to think about what chain they're on and they have to actually go to external interfaces like Bridges to be able to go and interact with an application that's running on another chain. And furthermore, you don't have this consolidated, liquidity, consolidated experience between these different applications. So if you use Aave on polygon today, it's actually a completely different application.
01:34:43.878 - 01:35:22.574, Speaker E: To use Aave on avalanche it looks the same but you have to go and do a bunch of things separately from the Aave application to actually interact with Ave on avalanche. And that's just really bad user experience. What we're really interested in is trying to figure out what ways we can basically trying to encourage people to build applications that are just chain agnostic. By default they live across chains. And similar to how you build applications on the web today, they access liquidity and resources from many chains all at once. Examples of these are cross chain DEXes. So allowing you to swap any asset to any other asset across chains potentially with optimal pricing.
01:35:22.574 - 01:36:10.286, Speaker E: And basically either depending on whether you want best pricing or whether you want to go to a specific chain, you can make this an option to the user. You can also build much more interesting yield aggregators. So for example, being able to zap into a yield aggregator vault from any chain. So as a user you don't really need to think about where am I going to get the best opportunity? And then even beyond that aggregating yield within those vaults from any source on any other chain. Another really interesting one is lending. So being able to lend money into something like Aave, migrate Aave positions across any chains to be able to get the best rate that you can on any chains and do things like interest rate swaps and then do more complex stuff like borrow across chains based on liquidity that you've led on one chain. There is so much here, there's a whole world of cross chain DeFi that is yet to be explored.
01:36:10.286 - 01:37:05.910, Speaker E: And if you have original ideas around this, we definitely want to help. Cool last thing that I really not really last thing, this is definitely going to be the biggest chunk of this talk. So what I really would like to talk about is cross chain application design. This is something that not a lot of people have really explored and I think that things start to get a little hairy when we deal with this Asynchronous world. And I want to caution that this is all like early thinking that is still evolving in real time. So as you go about designing your crosschain applications, definitely try to speak to us, reach out to us and that way we can help you think through these ideas and try to be cognizant of the fact that the Asynchronous environment that you're operating in now will have a bunch of pitfalls. What are these pitfalls? Well, one of the first pitfalls to think about when you're building a distributed system is concurrency.
01:37:05.910 - 01:38:31.534, Speaker E: When you're building a distributed system outside of the space you have to consciously be aware of the possibility that some resource that you're accessing, for example if you're trying to update a database may need to be accessed from other systems at the same time. So what happens if you have conflicts within your database because you're trying to update two pieces of the same state at the same time from different origins and the same kind of problem exists in asynchronous solidity as well. And this is where things kind of get a little weird. So imagine for example, you have a DeFi application like a Crosschain AMM where there is a pool of funds on a destination chain and that pool of funds needs to be accessed from several different origins concurrently. A really, really simple example of this is something like Synapse where you have a pool of funds sitting on optimism and then you have the ability for people to swap into that pool of funds from Arbitrum and Polygon and Avalanche. What happens in the case that multiple people try to access that pool of funds at the same time? What happens if you actually run out of funds in that pool? Well, then you have to introduce concurrency control and this is one of the things that you traditionally deal with in distributed systems outside of this space. And you can map a lot of the core strategies that you use to deal with concurrency over to this space quite well.
01:38:31.534 - 01:39:17.198, Speaker E: As well though as we'll see, not all of them are very effective. So the first thing is segmentation. You can split up the state within your pool to make it so that only a part of your pool state can be accessed at any time by any origin. And in this case out of this single destination pool you now have three pools. You basically have three destination pools, sub pools that are created which each map to origin one, two and three. Now the downside of this is of course that you have fragmented your liquidity at the destination and it kind of gets even worse because it's like every time you want to add a new origin you have to refragment your liquidity further and further. And of course that means lower pricing, that means more complexity, that means having to think about oh well, I have an origin that's just not really being used.
01:39:17.198 - 01:39:58.490, Speaker E: Do I need to resegment that pool so then that way I can utilize more of that liquidity elsewhere. These end up being like weird operational questions that you normally don't ever have to deal with in an AMM. Another option is something called serialization. So outside of the space sometimes this is called optimistic locking. But the idea is globally order. The transactions that are going into your destination pool. So if you have a transaction coming from origin one, two, and three at the same time, ensure that these things are ordered within the destination pool based on when they're mined within, basically when miners ordered them within a block.
01:39:58.490 - 01:41:00.450, Speaker E: Now, the weird thing about this is that it doesn't really handle the case with an optimistic lock outside of the space. What you usually do is if the state that you're accessing, the state update that you're trying to make on the state that you're accessing, is no longer valid, then you just kind of drop that update and you go back to the origin chain and say, hey, let's just retry this. In this case, that doesn't exactly work because what happens is you end up in this sort of weird place where, say, for example, you've run out of funds in the destination pool entirely. You end up in this weird case where it's like somebody has paid a transaction on the origin chain to be able to make a transaction to the destination, and now their funds are just kind of stuck. They're just there, and it's very unclear what happens. You could potentially make it possible for them to revert the transaction back to the origin chain and then pull their funds out and submit a new transaction. But that's just like horrible, horrible user experience, and it's really unclear what that even looks like in practice.
01:41:00.450 - 01:41:47.134, Speaker E: A last option that I think has started to be explored is Pessimistic locks. So instead of actually ordering transactions or locking them at the point of the transfer itself, you lock the pool before you start the transfer. This is something that you do with databases where you could set up like a mutex on some part of the database's state while you're executing something over here and accessing the database state repeatedly. And then you release the mutex at the end of your process. So then that way other processes can now start accessing that state at the same time. There are downsides to this even outside of the space. So one of the big downsides is things like Deadlocks, where you have two things now trying to access the same state at the same time.
01:41:47.134 - 01:42:34.670, Speaker E: It becomes kind of weird. You're like, okay, well, which one of these things should happen first? Which one of these things should happen later? And that's actually even more weird when you're starting to deal with liquidity rather than just at arbitrary states. So in this case, if you have a Pessimistic lock, you're now locking sublocking this pool just in time for each transaction. But in order to do that, you actually need to have a lot more messaging overhead. You need to have a message that goes back and forth from origin one to the pool to lock a part of the pool, then the actual transaction, and then another message to unlock the pool. In a database environment, that's not that bad because you can send these messages within milliseconds if that. But on chain, that latency can add up pretty quickly.
01:42:34.670 - 01:43:32.254, Speaker E: Like, if you're using something like nomad, that can eventually be like a few hours for a transaction, which would be kind of ludicrous. But even otherwise, even if you have very low latency in all of these cases, these are on chain transactions. So if nothing else, you have an incredibly high cost. And beyond that, you also kind of get into some of the weird aspects of like, okay, well, how would you handle a deadlock in this kind of a scheme? And it's not really clear you would end up in a situation where if origin One and Two were interacting with this pool at the same time and origin Three tried to make a transaction and got deadlocked then origin three would just kind of be stuck until the others figured it out. Whether or not his transaction would go through would again depend on whether or not there was enough liquidity in the pool. The kind of conclusion of this is that for pools and for this specific use case that we're talking about here none of these options are really that great. It kind of sucks.
01:43:32.254 - 01:44:49.340, Speaker E: We have a lot of trade offs associated with building on top of blockchains and one of the big trade offs is that they are expensive and slow and this is especially magnified when you're trying to deal with something that's as complex as like concurrency. And so while it's true that you could potentially use these sorts of strategies for concurrency control on non DeFi applications, so on applications that aren't necessarily utilizing liquidity you are probably going to run into issues with pricing and complexity if you try to use them within DeFi or within cross chain DeFi. Another really weird thing is synchrony. And this is another kind of assumption that ends up getting made in this space quite a bit when people think about building cross chain applications. But by synchrony, I mean the fact that there is asynchrony across chains means that it isn't possible for any one chain to know the state of another chain at the exact time that it knows its own state. A good example of this is, say, you have, again like our straw man, maybe not straw man, our quintessential example of a crosschain AMM. And you have a pool of funds on the origin chain made up of asset X and a pool of funds on the destination chain made up of asset y.
01:44:49.340 - 01:45:29.666, Speaker E: In order to calculate the price that you swap into asset Y on on the destination chain, you need to know the state of the pool at the time when the swap occurs. So say, when you initiate this swap at t zero, you know that the state of the pool is s zero. And this is what gets transported across chains. By the time it gets across chains, the pool state of X is actually changed to S one. And the reason for this is that of course there are people making transactions going in the other direction. The pool is changing constantly in size. However, at the destination chain, this is actually not known.
01:45:29.666 - 01:46:15.480, Speaker E: At the destination chain, the pool state at T one is still S zero. And it gets kind of weird because it's like one of the fundamental assumptions of AMMS is that you have a constant product, right? As we know the K and X Y equals K stands for constant. But if you have Asynchronous and you're making the synchrony assumption, then you end up with a curve that doesn't actually look like an at all AMM at all. It just looks like something that is not going to be extremely helpful for pricing. Because now your constant is only sometimes constant. How do you synchronize pricing? Well, this one's actually even more difficult. You could use an Oracle to have access to the pool state of all pools at all times.
01:46:15.480 - 01:47:02.920, Speaker E: You can try to use a decentralized Oracle for this, but then once again you're introducing more asynchrony and potentially more assumptions there. If you use a centralized Oracle, then now you've just built Coinbase, so that's not very helpful. Another option is to actually just have the pricing itself just happen entirely off chain. And this is something that's been explored quite a bit in the past. This is originally how Xerox worked and a bunch of other projects have tried to try to build off chain order books that are decentralized. But now you have some of the same trade offs that you did at that time, which are that off chain order books are just really complex and you have to think about what it means for this off chain order book to achieve consensus and things like that. Once again, none of these options are really that great.
01:47:02.920 - 01:48:04.670, Speaker E: Synchronizing things across chains and especially synchronizing pricing is just like a really weird rabbit hole that is difficult to go down and you end up in sort of really unpleasant places. The kind of takeaway from this is that building DeFi's apps is going to be tough and it's not just like building distributed systems outside of space. And the reason for this is that messaging overhead on blockchains and between blockchains is costly. It's not like messaging overhead when you're going between two databases where you can have many, many millions of database updates happening per second if depending on how optimized your database is. Instead you have one update happening every so often and it costs a ton of gas. So you really want to make sure that whatever construction you come up with minimizes the amount of messaging that you're doing between chains to begin with. Secondly, state update ordering actually matters in a database.
01:48:04.670 - 01:49:16.062, Speaker E: It only matters sometimes and in many cases you're able to kind of get away with using other mechanisms like things like Kafka basically queuing mechanisms to be able to handle ordering better and insert things into a database in the correct way. But that doesn't really work as well in this case because again, gas overhead and when you don't get ordering correct or when it is possible to manipulate ordering to change pricing, then you get MEB. Is there a way out of this? I think over time we'll come up with better ways to handle concurrency across chains and to handle some of the design patterns around Asynchronous. And one of the things that will actually be the impetus for this will be a massive reduction in cost of operating on these chains to begin with. Because really a lot of the bridge costs come from the cost of the underlying chain or roll up. So as we drive down the cost of roll ups very significantly by moving to e two and things like that, we will end up in situations where you will have a bit more flexibility on the messaging overhead that you can have and probably better mechanisms around ordering as well. However, for now, our recommendation is to try to build replicated instances instead of fragmented ones.
01:49:16.062 - 01:50:01.226, Speaker E: By this we mean instead of building a cross chain AMM that has pools on many different chains all at once, or a cross chain lending protocol that has borrowing on one chain, lending on another, completely isolated from one another, and then trying to synchronize those states against each other instead actually have replicated AMM. So you have an AMM on chain. A good example of this is something like Sushi, right? You have Sushi deployed on every single chain. And then what you do is you make it possible for users to be able to make transactions directly between these AMMS so that it goes swap to transfer to swap. All of that can happen in a single transaction. And then you allow for rebalancing the pricing between these chains using very cheap and efficient Arbitrage. The mental model here is similar to something like IPFS.
01:50:01.226 - 01:50:41.942, Speaker E: You have a distributed system that has a bunch of replicated states that achieves eventual consistency. The nice thing about eventual consistency is that it's very, very low overhead. It's driven by market forces. In this case, there's very strong incentives to actually achieve that consistency in the form of Arbitrage. And you get to kind of mitigate a lot of these really weird situations that you end up at when you deal with state itself being fragmented on many, many different chains. Now of course this is early. There are a lot of really interesting use cases around protocols and things like that, that actually where it does make sense, especially if you're trying to just go and grab some arbitrary state somewhere else that isn't liquidity.
01:50:41.942 - 01:51:54.734, Speaker E: It does actually make sense to still try to fragment the state or try to use mechanisms like concurrency control to update that state. And a good example is something like PCV in in Faye protocol where PCV is used, the protocol's PCV is used as PCV constants are used as a mechanism to decide how much money can be minted against the protocol treasury. And when you are minting against protocol treasury on other chains, it is possible to just update that Pcdv value on other chains rather than having the liquidity move to other chains as well. So there are kind of like optimization functions written around this, but generally speaking, I would hesitate to do not try to avoid situations where you have user facing pools and other kinds of user facing interactions that are fragmented on many, many different chains all at once. This is obviously like initial steps into building crosschain DeFi applications. There's still a lot to be learned here and we're pretty excited about the direction a lot of this stuff is going. So if you're interested in talking to us about it, definitely message us on our discord.
01:51:54.734 - 01:52:44.690, Speaker E: We have a very awesome community that talks a lot about this stuff and we overall are trying to figure out ways to pioneer some of these standards around asynchronous. You can also follow our Twitter for updates and if you're interested in building on top of us, check out our docs. We have our new upgrade live on testnet right now and it should be fully possible to build things on top of and then it should be going live to mainnet within the next month or so. And lastly, if you do build on top of us and if you're not in the US, apply to our contributor program. We're running a program where people who build projects and otherwise contribute to kinext can earn tokens. Once our token launch happens in again about a month or so. And we think of this as an incentive mechanism to get some of these early applications, early examples of what it looks like to build crosschain DeFi out in the wild.
01:52:44.690 - 01:53:01.594, Speaker E: Cool. Thank you everybody. I appreciate your time. Hey Arjun.
01:53:01.642 - 01:53:02.702, Speaker A: Surprise, it's me.
01:53:02.836 - 01:53:04.786, Speaker E: Hey, how are you man?
01:53:04.808 - 01:53:22.120, Speaker A: Thanks for the talk and thanks for walking us through that. I think we don't have enough time for questions so I'm going to probably have to take you off here. But yeah, awesome talk and I appreciate you coming out and chatting more about SAPS Crosschain apps and the work that's going on at Connect.
01:53:22.810 - 01:53:28.060, Speaker E: Thanks so much. Yeah, I appreciate you having me. Thanks everybody.
01:53:29.630 - 01:53:45.278, Speaker A: Awesome. So yeah, so we're just going to jump into our next chat right away. It's going to be called the Future's Permissionless. It's going to be with a couple of people from the Badger Dow team. So invite them on now. Yeah, so we've got Spataboom in the corner and then we've also got Will from the team.
01:53:45.364 - 01:53:46.366, Speaker E: So I'll let them do a quick.
01:53:46.388 - 01:53:50.740, Speaker A: Little intro about the talk and yeah, let them take it from here.
01:53:52.310 - 01:53:54.238, Speaker F: Sweet. Thanks Jacob.
01:53:54.334 - 01:54:00.420, Speaker B: And thanks to the hack money team. Great event today, and great to hear lots of the other protocols involved. Speak.
01:54:01.130 - 01:54:01.542, Speaker F: Yeah.
01:54:01.596 - 01:54:56.120, Speaker B: Today, if you haven't guessed already, we're both contributors at Badger Dow, myself and Spada Boom. And needless to say, we're really excited about the future of the protocol of decentralized finance and where it's trending towards permissionless. So the word decentralization is tossed around a lot. It exists within sort of our namesake being Badger Dow. It spans across many different aspects as it pertains to our business, but the area that we're choosing to focus on today is really focused at the smart contract level. So, yeah, we're hoping to dig in a little bit to a permissionless future, why we're excited about it, how Badger is trending towards this and what this means for the future. So, Chris, why don't you start us off by sort of digging into.
01:54:57.850 - 01:54:58.214, Speaker F: What.
01:54:58.252 - 01:55:12.940, Speaker B: Permissionless really means at a smart contract level and how perhaps decentralization isn't actualized in reality at the inception of a project, but it's more sort of an intention to improve towards over time.
01:55:14.030 - 01:56:03.542, Speaker F: Yeah, sounds good. Hey, everybody, thanks for tuning off. Well, I want to really hit on that last point and start there because I feel like there's a misconception in general around anybody launching anything on Ethereum, assuming that it's pretty much decentralized from the get go a lot of the times, smart contracts specifically. And then let's talk about the DeFi space in particular. When you launch these smart contracts, there could be a variety of different parameters and controls around them that involve a human. People have obviously heard the term EOA, for example, or multi sigs. These are all just different ways to have certain types of control and mechanics in a smart contract.
01:56:03.542 - 01:56:13.200, Speaker F: So you can have a smart contract that's deployed, that does a certain thing, but the entire smart contract can be changed because it's been tied to an individual.
01:56:35.930 - 01:56:37.526, Speaker E: There we go. I think we did lose you for.
01:56:37.548 - 01:56:38.486, Speaker A: A second, but it looks like you're.
01:56:38.508 - 01:56:39.320, Speaker E: Back now.
01:56:41.610 - 01:56:47.690, Speaker A: But you're muted still, and I think the camera is going in the wrong direction.
01:56:48.110 - 01:56:49.900, Speaker F: Can you hear me okay or no?
01:56:51.810 - 01:56:52.560, Speaker E: Yes.
01:56:53.010 - 01:58:43.930, Speaker F: Okay, cool. I'm not sure what happened there, but nonetheless, as I was saying, when it relates to different parameters around a smart contract, a lot of the times they can be affected and changed by human intervention, and it requires a lot of human involvement for the smart contracts to operate in a certain manner as well. And that goes against really the nature of why smart contracts were actually created. And that's the point that I wanted to really focus on today is when we say the future is permissionless. It's really about what the journey looks like for DeFi protocols and for anyone developing and deploying smart contracts on Ethereum to be able to have this progressive decentralization and eventually get to the point where you have immutable Spark. Contracts that are permissionless in nature and enable if it's users or individuals or anyone, to leverage those contracts and be able to have complete autonomy around putting their capital as an example into a DeFi protocol and isolating their capital as part of that specific contract and or having the ability to dictate exactly what they want that smart contract to be doing for them, for them and them only as an example. So that's really when we talk about the future from Malicious, and I think speaking about Badger in particular, if you look at our protocol, for those who aren't familiar, badger has a variety of different products that was built and released.
01:58:43.930 - 02:00:11.514, Speaker F: Our most popular product is a vault product that enables anyone to earn interest and earn yield on their bitcoin and their bitcoin deposits across ethereum and a variety of other side chains. And those vaults have managed billions of dollars, and those smart contracts have managed billions of dollars. And they've been live on mainnet, many of them, for over a year. And even still, there's certain parameters and controls around certain parameters and controls around how those smart contracts actually progress from progressing to being completely immutable. And if you think about the risks that come with different parameters in place, like the risks associated with having something controlled by an individual or a multi SIG or a two of three versus a five of seven multi SIG or things along those lines, it changes the risk parameters for that specific contract and for the people actually using it. So you need time to obviously mature and be on Mainet for a period of time, be battle tested, obviously go through a variety of different audits before you can even get to the point where you can think about making it more immutable. But I'll stop there for a second.
02:00:11.514 - 02:00:16.160, Speaker F: I wasn't sure if will you wanted to dig deeper there or jump into something else?
02:00:17.410 - 02:00:22.160, Speaker B: Yeah, sir, I need to request that you spin your camera you're sideways on us.
02:00:24.470 - 02:00:25.106, Speaker F: How's that?
02:00:25.128 - 02:00:25.700, Speaker E: Better.
02:00:30.710 - 02:00:34.898, Speaker F: Will you're also oh, there we go.
02:00:34.984 - 02:01:06.990, Speaker B: We're doing good with our tech today, AV guys. No, that was a great intro, Chris. Yeah, maybe. I mean, obviously from our perspective, the best examples come from within. So maybe you can take us down the road a bit on Badger's journey from inception, I guess, December of 2020 at this point, and how we're kind of working towards this and some of the stuff that we're really sort of doubling down on from a deep tech perspective to make this a reality.
02:01:08.050 - 02:02:12.606, Speaker F: Yeah, sure. So, as I mentioned just briefly, we launched in December of 2020 with our vault product, where it enabled anybody with tokenized bitcoin to deposit it in these vault strategies. These smart contract based strategies would take different LP tokens, like a Curve LP token for those who are familiar, and it would do different things with it to generate the primary in the beginning, at least, those initial strategies. The primary functionality was to take curve rewards that are being earned by the LP, sell them for the underlying position, which was bitcoin, and then auto compound those back for the LP. So it takes the work out of the LP having to claim those rewards and saves them in gas and time, and obviously time to actually do the auto compounding. And that was really the core value proposition of those vaults and those vaults in the beginning, of course. And I think this is the nature of DeFi.
02:02:12.606 - 02:03:57.842, Speaker F: But being at the current state of the market with DeFi, when contracts are deployed, if there's quite a bit of excitement around the protocol, and the protocol launch very quickly, there is enormous amounts of capital that are deposited. And touching these smart contracts, as that happened with ours, with the contracts that were deployed by badger, which within the first couple of months, there was billions of dollars there. And if you think about any type of, regardless of how much you prepare and audit and review and do everything leading into a mainnet deployment and having it in production for anybody to leverage and use, it's next to impossible to get the type of maturity in that contract and have it be battle tested enough to be ready for that type of capital. And that's where certain levers and certain controls around the smart contract and around the parameters of that smart contract, for example, upgradability actually in Badger's position, actually reduces the risks and better manages the risk parameters. Because if there was an issue or something needed to be changed because of the immaturity of that contract, it could be upgraded through appropriate governance, through the token holders, through the community. But just having that capability is very important in those early stages. Now as that progresses and becomes more bouter tested and those strategies get better leveraged and they're in production for a longer period of time, then you can get to a point where you can remove that upgradability, you can make these contracts more immutable.
02:03:57.842 - 02:05:06.646, Speaker F: And then the other side of that, and I think this is really the basis of the conversation around permissionless nature when creating those contracts. Badger, Dow contributors and developers are designing what those strategies are in the smart contract. So when you deposit a token into that contract, what that contract actually does with that token is defined and those parameters are detailed by the developers. And again, that's another level of, I guess you could say, control and risk management. And we see that with a lot of protocols today. And again over time. Once those strategies have been deployed across a variety of different LP tokens on the same platform, leveraging the same staking mechanics, testing out different things like auto compounding versus optimizing those rewards by taking them and selling them for a percentage of bitcoin and ETH and stablecoins versus just auto compounding.
02:05:06.646 - 02:06:23.314, Speaker F: You can get to the point where. Anybody can actually dictate what they want the vault to do and the protocol to do with their deposits and have the ability to actually deploy these themselves and manage the different functions associated with that contract, like harvesting and doing things along those lines. And that's when you get to the point where you have complete autonomy and complete self custody. And that's where we're really trying to go with the Badger protocol, is moving from being an app where different contributors dictate strategies, deploy these vaults. Users come to the app and deposit into those specific vaults and strategies to more of a base layer protocol where anyone can build on top of our underlying tech and they can permissionlessly deploy their own vaults with their own strategies for their own capital and manage that really themselves. Without, of course, that's the whole point of the smart contract. It brings that automation without actually having to manage it, but being able to do that themselves and then build on top.
02:06:23.314 - 02:07:06.500, Speaker F: You think about all the different opportunities that can come from applications and other protocols building on top of yield and vault strategies like that, the opportunities become endless. So that's where we started. We started with vaults with more human controls around. The smart contract for risk mitigation to removing those controls but still having human input around what those actual strategies do to a point where anyone can deploy those strategies and dictate what the strategies do and have a level of or have complete self custody around those vaults and build on top of the protocol themselves.
02:07:08.790 - 02:07:39.690, Speaker B: Yeah, so I think it's fair to say, right at inception, for the most part, you need some level of human intervention. Decentralization isn't fully realized at that point. It's more of a well intended thing that can kind of trickle down into other aspects. Right? I. E. Governance, doing your best to sort of source decisions or involve token holders in those larger decisions. So they're sort of like a decentralized decision making process to an extent.
02:07:39.690 - 02:08:25.290, Speaker B: But rather the intention is behind building the tech towards what becomes this permissionless thing into the future. So I guess it's a bit of an on ramp into where do you see this taking us, the tech in general. I think from what you've said so far, the opportunity for Badger really lies in being this really strong foundational layer one. And like you said, you have to battle test. You have to take time to build the right smart contracts. You have to test them, you have to make sure they work. It would be silly to think that you could put Immutable contracts out there right at the gate.
02:08:25.290 - 02:08:44.480, Speaker B: So I think this is a great approach. But where we are today, to where we're going in six months, to twelve months from now, where do you see this having the most impact for not only Badger, but potentially the DFI ecosystem as a whole and beyond that?
02:08:48.610 - 02:09:36.580, Speaker F: Well, I think what's important is this is a lot of the contributors that have worked at Badger. This is the collective's. I don't want to say goal, but it's more like this is at least how we believe there should be a progressive state of decentralization. That doesn't mean it's right, doesn't mean it's wrong. It's, you know, how the contributors kind of push things forward at Badger and I know many other protocols actually see it a different way and actually deploy mutable contracts from the get go with limited upgradability and things along those lines. But nonetheless, I think it's important just to speak to those specifics. Right.
02:09:36.580 - 02:09:55.800, Speaker F: There is no right or wrong as it relates to the next six to twelve months. I think we're going to see more and more of this. We're going to see more protocols mature, further refine and build better tech.
02:09:58.350 - 02:09:58.966, Speaker A: Protocols.
02:09:58.998 - 02:10:14.880, Speaker F: In the past, as they've matured, those protocols changed quite a bit and they get to a point where the smart contracts themselves are living and breathing organisms doing their own.
02:10:30.050 - 02:10:31.870, Speaker B: I think you cut out there, Chris.
02:10:36.390 - 02:10:50.662, Speaker F: You're just on just said, I apologize for cutting out. I'm not sure what's going on, but what was the last point that it cut out before?
02:10:50.716 - 02:10:57.994, Speaker B: Well, you were just talking about the future potential for other protocols looking to build on top.
02:10:58.192 - 02:11:55.870, Speaker F: Where we're going with that? Yeah, it's less about Badger, I think just more in general. We're going to see more and more protocols mature, the tech mature, and these smart contracts that are living in production, removing more of those guardrails and becoming things that there is enormous amount of confidence for other people, other protocols, and in turn other contracts to build on top of and build with. And that's the journey that we're intending to be on. We want really anyone that's any individual or any protocol that's looking for unique reward management and composable yield strategies that want to have the ability to dictate, almost like a factory what LP asset, where that asset is potentially going.
02:11:55.940 - 02:11:56.720, Speaker A: What the.
02:12:09.850 - 02:13:17.580, Speaker F: You'Re back. I'm not sure what's going on. Zoom just keeps booting me and then just bringing me right back in. I'm not sure what's going on. Yeah, very OD, but yeah, I'm not sure we're cut off. But the point that I was trying to make or what I was saying was really we want any protocol and any even individual that's looking for the ability to customize and tailor their yield strategies and have confidence in. The underlying security and the underlying management of those strategies to be able to build on top of badger and again, have that level of customization around what the strategies are actually doing versus maybe potentially having the ability to integrate an existing strategy or vault, for example, which people probably heard the term of, and instead actually dictate what that vault does.
02:13:17.580 - 02:15:01.790, Speaker F: I think that's really what we're trying to progress towards and we're trying to build tech around to enable that because we're not there yet. Some of the tech that we use, we leverage some off chain functionality for the purpose of distributing rewards, optimizing those rewards. As an example, if the yield strategy is to take a curve op and to put it into convex, you would then be earning two sets of rewards, CVX and CRV. What you do with those rewards is really what and this is obviously just a basic yield farming strategy, but what you do with those rewards is really the layer that we're talking about here. Because you could take those, sell them back, as most do, but instead, if you can take 26% of one of the rewards and sell it for a stable coin that is then automatically deposited into another LP position and stake to earn more, and then 44%, that's doing something with a different asset, that level of customization. And if you think about how that expands in the future, when it's not just basic yield farming strategies, from large dow treasuries to apps that have specific, functionalities specific features that they're trying to offer to their users, like maximizing XYZ or a self repaying loan like Alchemy, for example. Being able to have that level of customization, I think just opens up a whole new world of opportunities.
02:15:01.790 - 02:15:38.550, Speaker F: And ideally as we continue to build that out, we can obviously build confidence in the technology because of its overall history in production and the security posture of it. But as well give the ability for these new protocols and new applications to come up with really cool use cases for what to do on top of that without having to have that level of domain expertise, knowledge and workload resource allocation actually do the yield management part of that stack.
02:15:40.650 - 02:16:49.920, Speaker B: Yeah, for sure it makes sense and it kind of paints a clear and from from I guess from our angle, from Badger's angle know the future is really double down on the tech and focus on building this sort of permissionless opportunity for folks and other protocols to build on top. And obviously in doing some of that, you obviously take some human intervention touch points out of the process which I guess could be good and bad. But at the end of the day, the reason we're a sponsor of Hack Money is to hopefully work with some great individuals looking to build with Badger and in decentralized finance. What do you think the future spada looks like for those who want to contribute and the future of sort of building with badrick as it feels like if in general the ecosystem moves in this direction, it's definitely going to be tech heavy with a lot of opportunities to continue to innovate and build towards the future.
02:16:51.830 - 02:17:45.780, Speaker F: Yeah, I think things like Hack Money are so fantastic because it gives an opportunity for builders to come together and collaborate with really just other builders that may have protocols that have been built that are looking for more eager builders to come and build on top of or integrate with or just collaborate with. So I think naturally in the DeFi space and if you want to talk about the culture within Dows is to just get involved. Right? And if you look at for this hackathon in know one of our lead developers, Alex, he's done a great job putting together a mix of.
02:17:49.730 - 02:17:59.326, Speaker B: We lost Chris. Yeah, there he is. You were just talking about was just.
02:17:59.348 - 02:19:25.870, Speaker F: I was just saying know alex has done a great job at making it easy for anyone to start building on badger and to get up to speed relatively quickly on our code base and how everything works and the different ways to actually start building today with a variety of different examples. Regardless of someone's experience building in the space, building in DeFi or not, I think what's important is it should be easy for anybody to start building and that's as much like what you're actually building on top of as is the tools that enable someone to start building quickly. So I feel like we've worked really hard, especially over the last six to eight months, to make those tools more accessible. And as part of this hackathon in particular, I feel like there's a really good way to get started and to kick start things. So I'd encourage anybody that's looking to build anything around bitcoin looking to build anything around automated yield strategies to dig in and help us work towards this place where yield strategies are completely permissionless, almost like a factory, where anyone can choose what goes in, how it comes out, has the ability to deploy it themselves and have that complete level of autonomy.
02:19:27.250 - 02:19:55.462, Speaker B: Yeah, for sure. I think this idea of a permissionless future is a good mantra, right. Like getting involved in decentralized finance or working at a Dow is a very permissionless endeavor, I would say, right. Jumping in, taking the plunge, bringing something to the table and then just building the future together. So I think that makes a lot of sense. Yeah, I guess we can close things off. Chris with just know we're excited to be a part of hack money.
02:19:55.462 - 02:20:18.670, Speaker B: We've got some great prizes up for grabs if you hit the prize page. We've got a lot of resources. We've done our best to sort of put enough content to make the process permissionless for you to get involved and yeah, I guess we can wrap there. Chris it's been a great chat and I'm excited for the future and I'm excited to just keep building and meet some new folks as they come through the door.
02:20:19.730 - 02:20:24.800, Speaker F: Same super pumped. Awesome.
02:20:25.410 - 02:20:32.420, Speaker A: Thank you folks. We still have a couple more minutes. I was wondering if I could maybe ask a question from the audience on this.
02:20:32.870 - 02:20:33.778, Speaker F: For sure.
02:20:33.944 - 02:21:12.320, Speaker A: Spiderman, you mentioned sort of this kind of framework of progressive decentralization of DeFi apps and going from humans can intervene to humans can intervene via governance and then even maybe as far down the road as, like, burning the key. I wonder what your thoughts are on protocols in general, what the role is for protocols in actually kind of educating the people who are using their contracts on maybe what stage they're at or maybe the ecosystem in general kind of setting some standards for sort of giving people more predictability on what kind of level of decentralization they're interacting with.
02:21:13.250 - 02:22:17.630, Speaker F: I think it's critical. I think transparency is the highest standard across the board that we want to uphold, not saying we as an industry. So when anybody's interacting with these contracts, they should have a level of understanding of how decentralized or not decentralized they are on which stage and path of that journey those protocols are on. And that smart contract in particular, those smart contracts are in. And that in itself and the willingness to be transparent, I think, is like that first flag. Right. I think we should be moving to a place where if the humans behind the protocols that are building them and building these smart contracts aren't open to bringing transparency at that level, that in itself should be something that would make a potential user that's interacting with that contract weary.
02:22:17.630 - 02:22:54.720, Speaker F: So I do agree that it should be something that is highly transparent and I think as an industry, and we should be doing a lot better at this because there is a lot of ambiguity. And we hear the term Aping. There's a lot of Aping going around, not board Aping, but legit Aping. And there is a lot of money that's being put into these contracts and being used nowadays versus a couple of years ago. So now more than ever, it's important that the users that are interacting with them have an understanding of what they're actually interacting with.
02:22:57.010 - 02:22:57.760, Speaker A: Awesome.
02:22:58.290 - 02:22:58.714, Speaker F: Cool.
02:22:58.772 - 02:23:19.330, Speaker A: Well, thank you both for your thoughts and your questions and the talk of the last little bit. We appreciate you taking the time to chat with us for hack money. And thanks again for Badger's support. And like we said, feel free to take a look at the prizes and also the tech behind Badger and how you can use it in your hacks. Thanks so much, folks.
02:23:19.490 - 02:23:20.920, Speaker B: Thanks for having us.
02:23:22.090 - 02:23:23.186, Speaker E: Awesome. Okay, cool.
02:23:23.228 - 02:23:35.834, Speaker A: So we're going to move on to our next chat, which is going to be with Kaido. So the title is called treasury and Sustainability $10 billion Opportunity. So, yeah, Kaido, when you're ready, feel free to yeah.
02:23:35.872 - 02:23:36.730, Speaker F: There you are.
02:23:36.880 - 02:23:40.846, Speaker A: Awesome to have you back on the ETH Global stage, and I will turn.
02:23:40.868 - 02:23:42.046, Speaker E: It over to you.
02:23:42.228 - 02:24:17.396, Speaker D: All right, thank you so much. And thank you, ETH Global, for organizing this. This is great. I'll share my screen really quick. Give me 1 second. All right? Can you guys see it? Okay, perfect. So today I'm going to be talking about treasury and sustainability.
02:24:17.396 - 02:24:49.830, Speaker D: A $10 billion opportunity. Hope that's a good enough cash line for everybody. So first a little bit about me. I work on incentive design llama Dow. My work encompasses governance design, tokenomics, liquidity management and my goal is to create systems to help protocols achieve their vision in this very cyclical market. And at Llama Dao we're building the economic infrastructure for DAOs. And here are some partners we're working with, or have worked with in the past, such as Ave, Uniswap and many others.
02:24:49.830 - 02:25:46.584, Speaker D: And previously I was with Trader Joe, which is a decentralized exchange avalanche which with about 2.4 billion TVL at its peak. And this is where when I joined, we had about 40 million TVL. So during my time there I saw firsthand the explosive growth these protocols can have and also a problem when this growth becomes hard to sustain. One day a protocol could have billions of dollars at its disposal and in a few weeks that become a 10th of that. And in a few months they can't even sustain their team and have to lay people off and eventually close the project. So I've become interested in the sustainability of crypto projects and I have also went on to propose some sustainability projects for game economic designs and liquidity system to combat this very cyclical nature and this sustainability problem.
02:25:46.584 - 02:26:41.610, Speaker D: However, sustainability of a project is multifaceted. So in this talk I will focus on one thing, which is Protocol Treasuries and how can we use that to ensure longer sustainability. So the goal for this talk is to answer a few questions. So the first one is what is protocol treasury? Why should I build for it? The second one is what are the current solutions in the space? And lastly, the most important to you guys, which is what can you build? You may have known by now I'm not really great with PowerPoints but I hope this will be a fun and actionable talk to you all hackers out there. So what is treasury and what is the problem here? So protocol Treasury's definition is a very general one. It's assets owned by protocol for future development. And this is really broad by design because we want to encompass this different functionalities here.
02:26:41.610 - 02:27:29.700, Speaker D: So maybe a few examples would help us to understand what this really is. So few examples of what? Protocol Treasuries are used for grant programs. We see the price pool for tech money and these are given from protocols. And normally people would incentivize others to build on top of their own protocol. Another big spending is on ecosystem building where you want to build partnership with other protocols and sometimes that involve monetary value transfers. And lastly, which is actually the biggest part, which is budgeting. So you need to pay your salaries for your team, you need to pay for operations, you need to pay for your marketing and also events and outreach and out of these treasury use cases.
02:27:29.700 - 02:28:09.332, Speaker D: The last one budget is actually the biggest on the high end. Next we're going to just switch gear really quick and talk about how big is this space. So on the left you can see that this is just a time series plot of total treasury value across time starting last year ending this year. So right now there's currently about $9.5 billion in these protocol treasuries and it has increased ten X in the last ten months. And if you remember, in the last ten months, there's not really any bitcoin or ethereum price actions. So a lot of these come from native protocols launching and dow building up.
02:28:09.332 - 02:28:37.150, Speaker D: And when I first heard about it, I had an overwhelmingly positive response. I was like, this is amazing. These protocols are doing amazing things and they have so much capital to attract talent and innovate. However, there's a catch. Most of these protocol treasury is made up of its native token. And I will showcase in this slide how concentrated that is. And in the next slide I'll discuss why this may not be a good thing.
02:28:37.150 - 02:28:57.220, Speaker D: So we first start off with Unisoft's Treasury makeup. So Unisop is a decentralized change on ethereum. It's the second largest protocol treasury. It has the second largest protocol treasury at 1.6 billion. However, 99.9% of that value is its own uni token.
02:28:57.220 - 02:29:39.280, Speaker D: UDX is another project, Algo Stablecoin Living on Salana with the third largest protocol treasury at 620,000,099.4% of its total value is locked in its native token. And maker Dow, one that everyone a lot of people is very familiar with, is the 14th largest protocol treasury value and 99.2% are in its native token. And some people might think I'm cherry picking here I am a little bit. But while a few projects protocols have a little bit more non native assets, the percentage is still very high. So right now Lido is one of the ones who's doing extremely good.
02:29:39.280 - 02:30:05.064, Speaker D: They're decentralized. E 2.0 staking solution provider. Even though they're doing really well, they have the fourth largest treasury treasury, they have the fourth largest treasury value. Still, 88% of this treasury is in its own native token and the one is Mango Market on Salana. Out of the 500 million, they have 88%. So you can see this trend as in most protocols where most of these $9.5
02:30:05.064 - 02:30:55.672, Speaker D: billion we're talking about here are actually highly concentrated in different native tokens out there. So why is this a problem? There are three main problems with this high level of concentration. Number one is the market is very volatile, so there can be sharp decreases in your treasury value. These downturns where most people in crypto are very used to, nowadays, your valuation can drop 50% to 95% just in a matter of weeks. For example, unisop, in the last six months its total treasury value dropped by 65%. And the second thing I want to stress on which is the most important thing is growth normally requires cash but not native token. I'll try to elaborate here a little bit.
02:30:55.672 - 02:32:03.490, Speaker D: What does that mean in a very simplified model? If we think about how these things work is treasury rewards people and people drive growth, right? However, in the end, people still need to trade with the market to exit your native token to pay for their daily expenses. However, native token is really hard to exchange into cash or ethereum or other very liquid assets. For example, if we use 1% of uniswap's treasury 1%, which is about 2 million uni tokens, it will cause uniswap's price to drop 40%. And if you want to use 10% uniswap treasury, it will actually make uniswap's price go to zero. So this is extremely harsh for the protocol itself and also its community. And lastly, why this is a problem is the Huddle, what I call the Huddle versus sustainability problem. Imagining you're a protocol founder or your protocol member within the team and you want to tell your people, tell your community members that we need to diversify or we need to sell our tokens to give to others.
02:32:03.490 - 02:33:05.116, Speaker D: How can you be a team? Tell your community members to Huddle and at the same time dunking your own token. This requires careful communication and more importantly, an important and explicit agreement with the community that what you're doing is okay and everyone agrees and is on the same page. However, that it's very, very hard to achieve. So if cash is so important, the question we should answer is how can we generate cash from treasury? And in this slide I want to talk about basically what are the current solutions for Protocol Treasury to achieve this, to achieve sustainability, to generate cash, to continue growth. As you can see here, I put potential in parentheses because some of these projects are not live yet or has not gained significant traction due to its complexity or just for other protocols to utilize. For these current solutions, I divide them into three categories. So I call them innovative solutions tried by solutions and low hanging fruits.
02:33:05.116 - 02:33:53.292, Speaker D: However, these categorization is not meant as seeing which layer is better than the other because many times simplified solutions actually wins. However, I do believe we're still in the searching phase in which we're trying to find more optimized solution to handle protocol treasuries. So on the bottom here we have the low hanging fruits, what I call them. These solutions are already established and have been used by protocols. The middle one are trapI solutions. These solutions basically borrow existing established ideas from corporate finance and implement them into on chain contracts. On top are innovative methods and these solutions are less utilized in the traditional world or less known to most people but brings promising ideas to crypto.
02:33:53.292 - 02:34:35.228, Speaker D: I also added in a risk spectrum because a lot of these things involve risk. The things on the right would have more risks than things on the left. However, you should know that these are all relative risks and these risks are very different based on different projects. So first on the low hanging fruits, there are a few very simple low hanging fruits, right? You can sell your token on the market which I would suggest using MEB Protected Trades and also using Dex aggregators. The second is native yields. So for example, if you are protocol, your treasury has USDC and you're not spending them, you can deposit. You can basically be a lender on Abe or Compound to earn negative yield.
02:34:35.228 - 02:35:14.040, Speaker D: Or you have Ethereum, you can exchange or stake ETH with Vido to become 2.0 staker. And on the far right we have these what we call yield aggregators such as Year Finance, Convex, Pull Together and many others. And what they do is you don't know which one has the best yield for your assets. So you just give it to them and they help you optimize that. In the middle are Tritify solutions. There are three main buckets for tritify solutions I talk about here fixed rate lending, debt issuance and private investment in public equities.
02:35:14.040 - 02:35:57.812, Speaker D: And I'll talk more about what Pip means a little bit later. So fixed rate lending is very straightforward. You have some amount of capital you're not utilizing now, can deposit them for a fixed amount of time for normally a higher Apr or guaranteed Apr. Right? Now, element Finance, Notion Finance and many other projects support this. That issuance is very similar as in some cases you collateralize your native tokens and you borrow money against it. And then you can basically use that money to generate income or you can use that money to pay your paper growth. And the two very prominent figures here are Porter Finance and Debt Dow.
02:35:57.812 - 02:36:38.932, Speaker D: Their mechanism is a little different, I'm not going to dive into it but they have very interesting design choices. Lastly is pipe. This is just sort of like if X Six and Z wants to invest in a coin that already is public. So what they can do is what people call a strategic investment. Sort of these OTC deals facilitated by OTC trading firms such as Genesis Trading. And lastly are what I call innovative solutions or these solutions that are less familiar to most people. So we have uma, we have Lock, we have Faye and Ribbon and each of them have very different design choices.
02:36:38.932 - 02:37:27.304, Speaker D: I'm also sure there's a lot others out there that I don't have time to cover to fit into scrap. And then in the next few slides I just want to quickly go over each of these innovative solutions to give you guys kind of an understanding what they're trying to do and how maybe you can combine different ideas together. So first is uma, success token and in the past I talked about OTC deals and normally what would happen is let's say for example, a six and z wants to buy lido. What would happen would buy some Lido token. What would happen is it would contact the lido dow and then they're going to have a real life legal contract. And for example, if lido right now is one dollars, they're going to buy it at $0.6 per lido or $0.7
02:37:27.304 - 02:38:08.848, Speaker D: per lido and lock it for two years. The problem here is that it's very hard to generate community buy in and you have to go into a legal agreement through OTC decks. One example that didn't pay now was for Sushi swap. They were trying to diversify but they couldn't because community voted down. And what Uma does is that instead of buying it at a discounted price for these private investors, they can buy a current price. But their upside is that if the token price increase above a certain price or what they call a strike price, they can have more upside. Next is block protocol streaming auction.
02:38:08.848 - 02:39:19.736, Speaker D: So in the past, protocol sales only is a fixed price. And the problem is that it's hard to agree on token sale price for a community because everyone have different opinions and it's hard to make sure everyone is happy. And what law does is it's a continuous streaming option based on twom as a specific set of automated market maker and people can basically commit capital and withdraw online capital at any time. And this movement will change the implied price of these government tokens. Next is Faye protocols turbo and in the past basically what you can do is I have mentioned is that protocol can deposit their tokens into Aave or compound and use that as collateral and borrow against it. However, most protocols do not meet the risk parameters to be listed on Abe or they do not meet the parameter sets for using something as collateral because those needs to be really liquid and there's losses the amount of risk Abe has to protect against the lenders. So what faith protocol does is that you can collateralize your native token and you can earn interest on its cash value with Turbo.
02:39:19.736 - 02:40:26.528, Speaker D: Meaning if you have 100 million in your native token, you can deposit that, you can borrow $10 million, which is 10% of that, and then use that $10 million, maybe generate five hundred K per year, a 5% stable yield to pay for your different expenses. Ribbon here, this is Ribbon Treasury and in the past, basically most protocols do not have a diversification plan. They don't explicitly say when we're going to sell our tokens for cash. And the problem here is that because it's just hard to agree on diversification during a bull run right when the price is increasing. No team wants to talk to the community that we're going to sell 200 million or 2 million or 5 million tokens on the open market because that doesn't make anyone happy. So what Ribbon does is I create discovered call vaults which basically. Give protocol the freedom to diversify based on some price target and earn premium at the same time ahead of time.
02:40:26.528 - 02:41:52.396, Speaker D: So you can decide during a crab market or a bear market that sometime in the future this is something we're going to do and in that case everybody knows ahead of time and that's very easy for people to generate buy in. I've been talking a lot about these different ideas, what people are building and now the question is what can you build? Just by looking at this you may seem like actually most things already exist. However, if you remember I mentioned that although these are solutions they're only potential solutions. A lot of these tools are extremely, extremely hard for developers to understand and especially for those who doesn't have a strong finance background and the trade off of different parameter choices for any of these projects is very hard to visualize. So the adoption of the system in Protocol Treasury is still very low and this resonates back with the $9.5 billion slide which 90% to 80% of treasury still sits in stablecoin, still sits in its native token not really earning anything or producing anything. So what can you build in this part? I basically want to give you guys three kind of methods to think about this problem or three angles to think about this problem.
02:41:52.396 - 02:42:33.128, Speaker D: So the first thing is to build something that can there's something existing and we want to decrease the trust assumptions of that. Essentially we want to code agreements on chain. So there's two examples I give here. The first one is the token swap contract. What token swap is it's a way for protocols to exchange their treasury tokens with other protocols to build partnerships. For example on protocol A they're protocol B we want to engage in some mutual relationship. What we can do is that we can exchange our treasury token so we own some value in the other project but at the same time we can engage in governance and many, many other things.
02:42:33.128 - 02:43:35.192, Speaker D: However, there's not a very great way to code this contract and for every time you want to engage in this relationship normally a new contract will be right, will be written. The second thing is the private investment in public equity or we can think of this OTC trades mostly right now happens off chain. However, there could be some simple contracts people can cook up for a hackathon where you can think about how can we make that on chain in a way that not just OTC desks can utilize them but also other people and also other Dows without legal entity can engage in these transactions. Next is to decrease the coordination friction. Basically these are two kits to manage these positions. Like I said, it's really complex for people to think about what's the correct strategy or even maybe the correct strategy doesn't exist. So some very simple ones are simulators for payouts.
02:43:35.192 - 02:44:41.404, Speaker D: I think based on some past data, based on some heuristics, this is what we think the payout will be. Or what are some risks on downsides, on sensitivity analysis, these very traditional finance stuff. The second I think is very underrated, which is easy to understand front end. I know we have team building on decentralized UIs. I think those are very important and also important is to make sure they're easy to understand for users because if I am a uniswap token holder, I shouldn't be an expert for treasury diversification or management. So how can you present something that the voters or the governance token holders can understand and engage with? It's very important. The last one is brainstorm new ideas for you, maybe heard some idea back in your graduate econ class or undergrad math class or any kind of class, any kind of concepts outside the crypto world and bring them into the crypto world through making an onchain transaction.
02:44:41.404 - 02:45:10.570, Speaker D: And I think those are the three main ways for a hackathon project. I think it will be great to see some innovation in those fronts. And if anyone is interested in talking about these, feel free to reach out to me on Twitter at zero Xkaido and I'm very happy to help you guys out, to narrow down your space, search space and et cetera. And that is the end of my talk. I still have a little bit of time so I would love to answer a few questions if anyone have any.
02:45:17.190 - 02:45:20.580, Speaker A: Thanks Kaido. I'm just taking a look at the chat, see if there are any.
02:45:32.590 - 02:45:38.720, Speaker D: Just a quick question, Jacob. What is the general background for these hackers we have?
02:45:39.890 - 02:46:21.590, Speaker A: Yeah, it's a good question. I think it's a very mixed bag of people but certainly the main focus is everybody's very interested in DeFi. So I think it's largely a group of people who want to build the things that you just built, I think, or you just defined. So I think that's interesting. I guess one question that comes to mind about the talk that you mentioned right now. We are seeing this big advent of treasuries growing in the last couple of months. As you mentioned, we are kind of still in quite a bull market, which makes it difficult, like you mentioned, to sort of trade away from growth.
02:46:21.590 - 02:46:42.722, Speaker A: How much of this problem do you think is simply mathematical almost like a liquidity problem versus how much of this actually ends up being inner Dow politics or treasury politics and being able to win people over? How much of this is math and how much of this is feeling do you think?
02:46:42.776 - 02:47:35.460, Speaker D: Yeah, I think that's a great question which goes to this slide about your friend is not your exit. What do you mean? In my opinion, I think most projects who think about long term, they know this is a real issue. It depends on project by project basis. But for most of the projects I engage with, I think the team and the general community realize we need to build a word chest for a potential bear market. And I think that's very important and I don't think there's a lot of inner politics against this. I think it's more on the communication, maybe, as in how do you communicate that from the inner circle of the project to the outside circle, people who maybe have a more speculative bet on the token price.
02:47:38.230 - 02:47:38.898, Speaker E: Got you.
02:47:38.984 - 02:47:39.860, Speaker F: Very cool.
02:47:41.370 - 02:48:12.734, Speaker D: And I think that the low hanging fruits is not enough right now. So that's also why I don't think we see a lot of hype in the space. And the reason being if you think about these low hanging fruits, what it requires, that requires non native assets. So if you don't have non native assets, those doesn't really work very well. And that's where the triedfi solutions come in to generate those non native assets. And I think they're good and they're great. I think they're a very good first step.
02:48:12.734 - 02:48:20.980, Speaker D: However, at the same time, how can you innovate on top of that at the same time moving forward while keeping it simple and for people to understand and use?
02:48:22.630 - 02:48:23.540, Speaker B: Got you.
02:48:24.230 - 02:48:24.980, Speaker A: Awesome.
02:48:26.070 - 02:48:26.820, Speaker B: Cool.
02:48:27.750 - 02:48:30.126, Speaker A: I don't see too many other questions in the chat.
02:48:30.238 - 02:48:30.900, Speaker D: Perfect.
02:48:31.430 - 02:48:40.662, Speaker A: Yeah, this is a great talk. Thank you so much for putting this together. Sharing, obviously it's a big topic right now. It might not feel that way because things are going up.
02:48:40.796 - 02:48:41.346, Speaker D: Yeah.
02:48:41.468 - 02:48:48.314, Speaker A: But it's going to be very obviously important in future where things aren't always going.
02:48:48.512 - 02:48:58.494, Speaker D: Yeah, exactly. All right, thank you so much for having me and great event and thank you for organizing and I'll see you guys soon.
02:48:58.692 - 02:49:12.820, Speaker A: Thanks so much, Petto. And also invite up Cree from our end who's going to intro Elena, and I'll just share my screen for that too. And yeah, I'll let both Cree and Eleanor show their video and let Krie intro.
02:49:19.130 - 02:49:40.522, Speaker H: Hey everyone, welcome. Yeah, so thanks. Kaido loved your talk. Also he did a talk for us for Dow hacks, so you can find that on our YouTube as well. So the east global YouTube So highly recommend watching both of his stuff. The Dow hacks was a panel actually though. But yeah.
02:49:40.522 - 02:49:53.438, Speaker H: So we have Alana coming up. She's going to talk about why everyone should know ZKPs. And yeah, Alana from Ironfish, thanks so much for joining us. Come off mute and do your thing.
02:49:53.604 - 02:49:54.078, Speaker G: Cool.
02:49:54.164 - 02:50:33.610, Speaker H: Thank you so much, May. Cool, yeah. Thank you so much for having me here. So, yeah, this is a talk that's going to be about why everyone should know zero Knowledge Proofs or ZKPs for short. And before I get started, I kind of wanted to share my own background and how I got onto crypto because it was actually through going to hackathons like this one that have led me to this space. So in a previous life, I was a software engineer. And in about 2017 2018 era.
02:50:35.310 - 02:50:35.674, Speaker E: I.
02:50:35.712 - 02:51:19.366, Speaker H: Started going to hackathons. So the first one that I went to was ETH Waterloo, which was in 2017 and that was the first Youth Global Conference or hackathon. And it was such an amazing environment. Everybody was there, like Vitalik was there, his dad was there, the maker people were there. Dan Finlay from MetaMask helped me debug my project. It was a really special place and I started going to more and more hackathons and doing talks and conferences and that was like the 2017 2019 era. And at the first hackathon I actually set myself on a path that led me to discover zero knowledge proof.
02:51:19.366 - 02:52:13.478, Speaker H: Zero knowledge proofs, which is kind of what I wanted to share with you today. So the hackathon that I was working on relied on something called video transcoding. You don't need to know what video transcoding is, just that it is a heavy computation. So it's really expensive for your computer to actually do video transcoding. And so I was kind of obsessed with this question of how do we do honest computation? How do you prove honest computation in a trustless, adversarial decentralized environment? Meaning can I make a system such that I give to a different computer a really complicated task to do like video transcoding? They come back with a result and I can very cheaply verify that the result was computed correctly. And so I started asking around and finally I discovered zero knowledge proofs. And zero knowledge proofs were built for exactly this problem.
02:52:13.478 - 02:53:06.620, Speaker H: They were built for honest computation. Now, unfortunately, zero knowledge proofs are way too early to do anything as complex as video transcoding, but they were kind of built in Ethos for this exact problem. So brief kind of history about zero knowledge proofs, what are they? They can be used to prove something about hidden data. Now, they were invented in the 80s by Shafi Goldwater, Sylvia McAuley and Charles Rakoff and some of these names might actually be familiar to you. Sylvia McCauley is working on a crypto project currently. Shafi is actually a professor at Berkeley. And initially Xeronge proofs were an interactive protocol, meaning that the verifier and the prover had to have interaction in order for the proof to take place.
02:53:06.620 - 02:54:01.150, Speaker H: So what are zero launch proofs? There are a ton of zero knowledge proofs and I'll get to that in a few slides. But what they are essentially is they are a proof that satisfies these three properties completeness. So if the statement is true, an honest verifier will be convinced by an honest prover, meaning that you just need the proof to verify the statement that you're proving. Loudness. If the statement is false, no tree improver can convince an honest verifier, meaning that you have to set up a system such that only the honest proof will be valid in the system. And it has to be zero knowledge, meaning that if the statement is true. And if the proof is true, the verifier learns nothing extra about the statement.
02:54:01.150 - 02:55:10.750, Speaker H: So again, zero launch proofs can be used to prove something about hidden data. And so why is that useful and why is that useful today? So it's useful for three things. So one thing that is useful for is computation, meaning that I can potentially do fairly expensive computation off chain and then just prove it or give a proof for the final state on chain. And so currently I'm kind of really thinking about cross chain transactions, I think as a lot of people are. And so in theory, you could potentially prove that a certain action has happened on one chain in order for a different action to happen on a different chain scalability. So because unlaunch proofs are used to prove honest computation, you could actually prove that state transitions happened correctly and all you need to do at the end is provide a single proof and the final state. So if you've heard of zero knowledge proof roll ups, for instance, this is where the scalability aspect comes from and the other one is privacy.
02:55:10.750 - 02:55:59.570, Speaker H: So you could prove ownership of something the user wants to keep hidden. So I could say, for instance, if you're familiar with Aztec or to no cash, which I will get to in a minute. You could use your knowledge proofs to say something like, look, I have a note, or I have some hidden ETH or some hidden asset, and I would like to spend it or move it somewhere, but you don't need to know what I've done with it. So in 2018, I quit my job as a software engineer at Airbnb to focus on crypto full time. And I kind of made this bet that even if this blockchain thing is going to go away, zero knowledge proofs are here to stay. And in 20180, launch proofs were arcane tribal knowledge. It was really hard to understand how they work.
02:55:59.570 - 02:56:43.140, Speaker H: It was really hard to figure out who to even ask for help. There were very few projects working with zero knowledge proofs and the ones that were had people who were academics and PhD cryptographers, like world class cryptographers. So it was kind of hard to break in. And materials on zeolagic proofs, especially back in the day, went from super high level. So if you ever looked into what Xeonological proofs are, I think you've all kind of seen this example of this cave. And then there's like Peggy and Victor or Alice and Bob, and they're running through this cave to prove that they know something. So most materials kind of went from this super high level to extremely low level.
02:56:43.140 - 02:57:49.830, Speaker H: So when Dusty and I were working on trying to figure out what serial proofs are and digging through academic papers, we would find statements in the abstract, like in the summary of the paper, that were as complex as this one. For instance, one knows through the construction that the sextic twist will be the Dtype, which means one doesn't have to count points and lift a curve to check their order. It was really hard to get into zero knowledge proofs. However, fortunately, today we have plenty of access to really, really good material and extremely great tooling to make zero knowledge proof development fun and accessible and easy and fast, which I guess is kind of the more important part when you're working on a hackathon project. So I kind of want to go over slightly more history about zero knowledge proofs. I want to highlight some of the evolutions that kind of have happened that led to the geological proofs that we have today. So in 2011 there was a first paper that coined the term ZK snarks and ZK snarks just stand for Succinct nonractive arguments of knowledge.
02:57:49.830 - 02:59:08.580, Speaker H: That paper was authored by Alessandro Kiesa and Aaron Tromer, both of whom you might have heard of. They were both Zcash bounty scientists. And then in 2013, we had a paper that made ZK snarks more kind of applicable to general computing, meaning that before Zonal proofs were again fairly difficult to use. And then in 2016, Jan's Groff, who's a professor at University College of London, made a paper in 2016 that actually made ZK snarks pretty darn efficient to use. And if you guys have heard of Zcash, for instance, the Sapling protocol of Zcash, their main privacy mechanism is based off of cross 16, as well as quite a bit of ethereum based or proof. Ethereum smart contracts are based on cross 16 as well. So I'm not going to go into exactly how ZK snarks work, but I do want to give you guys the intuition behind how they work so that you know their limitations and what they can do, but also so you have the necessary knowledge to go and read up on these concepts on your own.
02:59:08.580 - 03:00:15.320, Speaker H: So a Stark construction has these five steps. And for the first four steps, meaning how you go from a computation. So like a statement to a quadratic arithmetic program or Cap, there is actually a great tutorial by Stefan DeMille from Decentric that kind of goes over exactly how computation goes from a statement, like an if statement, even to a rank one constraint system. And for the last step of how you actually make a snark, there is quite an amazing tutorial by Maxime that actually goes over the intuition of how polynomials can be used to prove certain information. Now, the most efficient curve for cross 160 launch proofs is BLS twelve three eight one. Unfortunately, ethereum does not support it, despite a lot of EIP and a lot of efforts. But there is a great article that explains the curve and why it's so efficient, so kind of a huge overview of how ZK snarks work.
03:00:15.320 - 03:01:37.710, Speaker H: For Snarks, we have kind of a predictable way to transform a statement into what's called a language of polynomials and like with any proof system, there is a prover that is trying to prove something and a Verifier so approver here can be the end user and a Verifier can be smart contract on Ethereum. And there is a challenge meaning what is this prover trying to prove? Maybe this prover is trying to prove that I have some hidden state in a game or I have a note that has some balance that I'm trying to spend and the Verifier could be a smart contract that actually validates those statements. Now, we do need to make this challenge non interactive and so we need to kind of hard code this common reference string which is part of the trusted setup. When you actually set up this like a smart contract, for instance, you do need to go through the step of setting this up and this is such so that the challenge or the proof that the user gives you can actually be validated. Now, for graph 16 in particular, this is kind of done by using elliptic curve pairings, which I won't go into today. But not all zero knowledge proofs kind of have this property. So I am going to focus a bit on cross 16.
03:01:37.710 - 03:02:47.922, Speaker H: And so why is cross 16 so great? Now, zero knowledge proofs are typically graded on three things which is prover time, proof size and verification time. Prover time means how long does it take for me to actually make the proof. Proof size means how big is the proof, which if you are dealing with an Ethereum smart contract, this is an important part for you to consider. And then verification time. So given the proof, how fast can the validator actually validate the proof? And graph 16 has actually pretty good metrics for all of those three things, even on curve what was it, BN 124 that Ethereum uses. So it has pretty good prover time, it has great proof size, 192 bytes is really good and it has constant and fast verification time which again is exactly what we need for a blockchain based crypto system. So the other things that geoloch proofs are sometimes graded on is again the size of this common reference string, cryptographic assumptions.
03:02:47.922 - 03:03:55.006, Speaker H: So for instance, cross 16 uses elliptic curve pairings and that is for instance not quantum secure. And for instance, cross 16 does have a trusted setup which can lead to some disadvantages. So the trusted setup, I have a great tutorial here that kind of explains how it works. But I do want to put kind of a caveat that we do have kind of tools in place to make this less scary and less quote unquote trusted for you to set up a system and I'll get into that in a minute. So in 2017 onwards, there was this huge, huge push in academia as well as in companies and commercial kind of activity as well, to figure out how do we do zero knowledge proofs that don't have this trust had set up. And there were a couple techniques that were being kind of experimented with at the time, most notably this paper that came out in 2010, sometimes referred to as KCG. And I have a great explainer for what that means.
03:03:55.006 - 03:05:14.840, Speaker H: This paper kind of led a pretty big explosion in activity for discovering new zero knowledge proofs that don't have a trusted setup. And to kind of give you guys an idea of how many zero knowledge proofs kind of erupted that did not have a trusted set up from 2017, we had several that were published in 2017, we had some in 2018, we had a ton in 2019, and we had some in 2020 as well. So for those of you who might be overwhelmed by the slide, kind of want to highlight these three that I would kind of pay attention to. Halo Two is being backed and developed by CCASH, and I believe their next upgrade is going to be using their new privacy mechanism is going to be using Halo Two. Plonk was originally developed by the Aztec team and now there's more of a community building up to support tooling for Plonk, which is really cool to see. And then Starks are kind of guided by Starkware and things like, was it Starkx or StarkNet? Which is their layer two solution using Starks. So that was quite a bit.
03:05:14.840 - 03:06:37.150, Speaker H: Which ones should you pay attention to today? So, again, I think Raw 16 actually is still one of the best kind of solutions or best approaches for you to use, primarily because we have such great, great tooling around it. It does require trusted setup. However, I believe this was started by the Ethereum Foundation, which is this project called the Perpetual Powers of Tau. And whenever you do a trusted setup, there's actually two steps to get to that final common reference string, and the first step can be done through multiparty computation. And this project, Professional Powers of Tau basically has a system such that anyone at any given point can contribute randomness to the trusted setup such that future projects that use it basically have this trusted setup that's been organized by, I think, hundreds of people around the world. At this point, if only one of those people is honest, meaning that they throw away the randomness that was used to create this common reference string, then the entire system is honest. Which I think is a really cool project because it kind of shows that graph 16 and the stressed setup is not that scary because we do have mitigating ways to reduce risk.
03:06:37.150 - 03:07:05.930, Speaker H: And the most recommended tool set for Zlaunch Proof Smart Contract development, in my opinion, by far is Circum. They have really great documentation. The project has been developed on for, I think, three years at this point. It started off as a JavaScript project. Now they've moved entirely to Rust. It's really efficient. There are implementations that let you generate the proof in the browser, which is pretty great for app development.
03:07:05.930 - 03:07:54.730, Speaker H: And they also have a smart contract, Verifier, so you can run a command and it kind of auto generates a smart contract with the Verifier in place, so you can deploy smart contracts pretty easily with it. So I want to kind of point out some notable examples of projects in the Ethereum ecosystem that not only use Circum but are also based in Gras 16. One such category is gaming. So as we all know, Ethereum is a public state. So if you want to create a game that has hidden state, it's kind of hard. Like, for instance, how would you make Battleship on Ethereum when the state is totally transparent? It's pretty hard. So one notable example is Dark Forest.
03:07:54.730 - 03:08:40.354, Speaker H: I don't know if you guys are familiar with it, but if you're not highly, highly recommend it, it's probably one of the first genuinely fun games that are based entirely in Ethereum, at least in my perspective. I know there's like a ton that have come up recently, but I personally have spent an embarrassing amount of time playing Dark Forest. And the idea behind it is you can claim planets on Ethereum with the help of zero knowledge proofs, such that your opponents don't know which planet you claimed. So it's a pretty cool game mechanic. The other notable example of things you can do with geological proofs today on Ethereum is private transactions. So. For instance, I mentioned tornado cash earlier.
03:08:40.354 - 03:09:32.870, Speaker H: Tornado Cash is, I think, one of the biggest zero, like a privacy kind of mechanisms for Ethereum today and is based on Circum, which is pretty cool. You can check out their GitHub, you can check out their circuits, you can kind of use that code base as an example of a production ready project that runs in the browser and uses Circumstance main circuit generator. So the other one that I want to point out is Plonc. So Planck is another xerologic proof system. And remember how I said that xerologic proof systems are graded on these three metrics, which is prover time, proof size, verification time. And so overall, Plonk still lags behind Gras 16, but not by much. And it actually does outperform graph 16 for Ethereum based curves for operations like MIMC and Peterson commitments.
03:09:32.870 - 03:09:46.278, Speaker H: Now, Plonk does require a universal setup. So instead of doing a trusted setup for every time you update your circuit, meaning every time you update your genealogy proof kind of logic here, you don't.
03:09:46.294 - 03:09:46.970, Speaker G: Have to do that.
03:09:47.040 - 03:10:31.420, Speaker H: So you can use a universal setup. So you can actually use the phase one of the perpetual powers of Tau that I mentioned earlier. You can kind of skip this entire step. And the most recommended tool set for this, again, is Circum. Circum is probably one of my favorite kind of open source projects for Zoom knowledge proof tooling today. And you can actually write a smart contract like your Logic in their DSL, which is domain specific language. And then you can choose whether or not you want to use Plonk or Cross 16 as the underlying proving system, which is super cool, because that means you can start with Cross 16 today to kind of get the benefits of things like prover time, improve size.
03:10:31.420 - 03:11:26.830, Speaker H: But then as Plonk catches up in popularity or in efficiency, you don't have to rewrite your entire circuit. You can just still continue using Circum and choose Plonk as the underlying circuit compiler. Plonk is pretty cool, and I kind of highly recommend you guys to dig in further. And the best kind of low touch but still know still thorough tutorial that I found is actually this one by Vitalik. The other tools is to consider is Cairo. So, Cairo is based on Starks, and again, it's a domain specific language, or DSL, and it's being developed by Starkware. However, in my personal opinion, if you are thinking of building Ethereum Xenolage proof based kind of applications today, the most obvious choice is Circum.
03:11:26.830 - 03:12:19.710, Speaker H: If you want to actually learn a lot more about zero launch proofs, I found this great compilation of tutorials on Zero launch proofs, and all these slides will be posted later for you to click on these links. So that pretty much concludes my overview of zero knowledge proofs. I hope you have found this helpful in your kind of brainstorming of projects to build. And before I go, I do want to have this shameless plug. So if you want to work on a privacy preserving protocol full time, I'm working on something called Ironfish. Ironfish is a layer one with only private smart contracts, and our goal is to bridge to Ethereum so that we can give every Ethereum asset the best available privacy. So if you have any more questions, let me know.
03:12:19.710 - 03:12:38.980, Speaker H: All these slides will be posted on my Twitter, and I highly encourage you, if you're curious, to learn more about Zero Bruce, is to click through some of the links I provided so you can kind of learn more deeply about how they work and how you can use them today. And with that, I think that concludes my talk.
03:12:40.570 - 03:12:41.174, Speaker E: Awesome.
03:12:41.292 - 03:12:52.090, Speaker H: Thanks so much, Elena. Yeah, I'm definitely going to go check out Dark Forest now, because that looks super cool. I was Googling it as you were talking, so yeah.
03:12:52.160 - 03:12:52.538, Speaker G: Awesome.
03:12:52.624 - 03:13:01.020, Speaker H: Well, thanks for joining us again. And, yeah, everyone go check out her slides where she linked them. Cool. All right, thanks.
03:13:03.630 - 03:13:04.186, Speaker G: Awesome.
03:13:04.288 - 03:13:22.670, Speaker H: And, yeah, thank you, everyone, for joining us for the Hack Money Summit. I hope it was very informative and you learned a lot. I certainly did. And, yeah, super excited to now kick off Hack Money. So happy hacking everyone, and I'll see you in Discord. Bye.
