00:00:06.330 - 00:01:03.840, Speaker A: My name is David. I'm a product manager at Ave companies doing social products, including Lens Protocol. And I'm here to chat with you all today to give a quick overview of the Lens Protocol, why we built it, what are some of the design decisions we went with? We're going to touch a bit about the Lens API, drop a little bit of alpha as to some things you can build with Lens, especially here at the Hackathon today at Amstam. So let's get into it. Web Two social media is broken from a fundamental perspective. There are three kind of key issues. First off, networks sell your data every free service you're used to facebook, Instagram, Snapchat, but even other services, things like OpenTable or Eventbrite, they are taking your data and they're selling it.
00:01:03.840 - 00:01:30.230, Speaker A: And that's okay. That's a trade off I think many are willing to make, but we don't really have an option to matter. Second off, user data is not portable. These networks own your data. It is in their custody. They're using it to monetize and because of that, they have no desire to share it with other platforms. When I post a video to TikTok, it doesn't automatically show up in YouTube shorts or Instagram reels.
00:01:30.230 - 00:02:11.602, Speaker A: I have to go and do that myself. And it makes the switching cost very significant if I as a creator, want to leave a platform and go somewhere else, like many creators had to do when musically shut down and became TikTok or vine shut down, and many tried to go to Instagram or other sites or YouTube, it's really hard to bring an audience. You lose that connection, and if you're deplatformed, you lose your connection to your audience again and to your income stream. And that's not a great way to be. And then lastly, these data centralized and we already know what can happen in that situation. There are hacks. I already get a ton of spam between the spam bops on Twitter lately and Ledger and Trez are getting hacked.
00:02:11.602 - 00:02:55.154, Speaker A: I don't need more email spam and people trying to steal from me. So how do we fix that? We can fix it with Web three Social. And I would say that the idea of Web Three Social is to bring power back to users and creators by making data self sovereign again. So let's see social media through a new lens. The Lens Protocol allows developers like you to build social apps and tools on a singular composable and decentralized social graph. This allows you to focus on user experience and better algorithms instead of user acquisition. And for users and creators, Lens Protocol allows you to own the links with your community.
00:02:55.154 - 00:03:30.266, Speaker A: It allows you to monetize in ways that you see fit and it forms a fully composable and decentralized social graph. So we got that thesis out of the way. Let's dig a little bit into what exactly Lens is. Our Social protocol revolves around an NFT infrastructure layer. Now, these NFTs aren't board apes, they're not punks, they're not going to have a cute little image. They're a little bit more powerful. The first NFT we build around is the profile NFT It's minted upon creation.
00:03:30.266 - 00:04:13.680, Speaker A: It contains an array called Publications, which is updated with all of your posts, all of your comments, all of your mirrors, which is our term for a share. And additionally, if you've worked with ENS or Unstoppable, it may look very similar. The next thing it also has is following. There is some follow logic that when succeeds, will mint a follow NFT. So if I, David go to follow Alan and I pass his follow logic, I will receive an Alan follow NFT. Its ID is going to have the Token ID is based on the order of following. If I'm Alan's fifth follower, I will have Token ID Four because we are developers and we start all counting at zero.
00:04:13.680 - 00:04:53.450, Speaker A: The follow NFT contains some built in governance. So if I'm a creator like one of our devs on the team, Josh josh does really great solidity tutorials. He can poll his audience to see if he should be doing more videos about maybe Ave V Three, or if instead he should be doing things on solidly or other experiments in the ecosystem. And this governance is compatible with Snapshot Open, Zeppelin Governor and the Ave governance as well. In fact, the community, Lens community, has already created several strategies. So yeah, lastly, post comments and mirrors. Again, our term for shares.
00:04:53.450 - 00:05:37.446, Speaker A: These are these live inside of a profile NFT, so they are always permanently linked with the original creator. That said, we have the ability to mint derivatives, which we call collect NFTs. So if I have a really awesome photo of me speaking here at Amsterdam, and I choose to post it on Lens, on my Lens profile, I can set some collect logic. I can say that this photo can be collected five times at one matic each. And should that price be paid, a collect NFT will be minted with an identical content Uri, so you would receive an NFT of that exact publication. Additionally, there can be included mirror fees. So again, mirrors our term for share.
00:05:37.446 - 00:06:22.018, Speaker A: If Alan were to mirror my publication and Bradley, a friend of ours in the audience, would collect it off that mirror, alan could receive a piece of the fees. And so Lens also has tools to incentivize good curation as well. Now that's kind of the base. How can you extend Lens if you're a Web Three developer? The first thing you should really start to look at with Lens is these things called modules. Modules are ways to run arbitrary logic that return some boolean value that will result in either the mint or rejection of some action. There are three types a follow module, a reference module, or a collect module. So let's start with the follow module.
00:06:22.018 - 00:06:46.094, Speaker A: The follow module is set on a per profile basis. So I'm at David. I'm able to set some follow logic that will be checked before someone is allowed to follow me. It can be as simple as anyone can follow me an unlimited number of times. I think we call that the empty follow module. I could monetize my follow. You have to pay me one ETH in order to follow me.
00:06:46.094 - 00:07:19.254, Speaker A: It's a bit steep, but I promise I have really good content. We can do really complex actions. There was a team that created what they called the carbon neutral Follow. So it would be five matic to follow. It will automatically zero X, swap that into a certain amount of carbon credits and retire on chain, making the entire action carbon neutral. Arbitrary logic means arbitrary logic, and I'll let you interpret that as you wish, especially as you guys think of things to build. So again, that's the follow logic minting.
00:07:19.254 - 00:07:57.670, Speaker A: Follow NFTs. The follow logic controls yes or no. The reference module comments and mirrors have to refer to some other piece of publication if you've ever used Twitter. And you can say you can only reply or retweet this if you are a follower of mine or only people tagged can reply or retweet. This is a very similar logic, except unlike those fixed categories, again, reference logic can be arbitrary. You can only comment on my post if you hold a board ape NFT. You can only mirror my content if you have 32 FWB or more in your wallet.
00:07:57.670 - 00:08:23.846, Speaker A: You can only comment or mirror on my posts if you follow the At Lens protocol account, which you definitely should do right now. And lastly, the collect module. The collect module controls the minting of collect NFTs. This is the monetization logic that I mentioned earlier. Things can be really simple. As I said, anyone collect can collect an unlimited number of times. You could do it that there's a limited number of collects.
00:08:23.846 - 00:08:45.410, Speaker A: We call it the limited collect module. You can only collect this ten times once per address. Or we could do you can only collect ten times in a 24 hours period. Again, these are just examples that we've included in the repo and on the testnet. But you are more than welcome to create your own and again, arbitrary logic. Your mind is the limit. There's a team today that did an Ave collect module.
00:08:45.410 - 00:09:21.450, Speaker A: I'm paid ten matic for one of my pieces of content. It is automatically deposited into Ave and the resulting eight tokens are sent to my wallet. Imagine NFTs with composable DFI So let's go back to kind of our goal. We want to foster a broad, diverse and evolving social ecosystem. Again, all of our content, all of our profile data, everything is fully composable and transferable on chain. It can bring in your existing DeFi and NFT applications and anything else that may be built in the future. Follow NFTs have built in governance mechanisms including snapshot and delegation.
00:09:21.450 - 00:09:57.174, Speaker A: By default we can create these new concepts of social dows. These aren't social dows centered around some ERC 20 Token or an NFT. We can evolve a bit beyond that and actually do social dows and governance and organization based around based around actual onchain verifiable action. Do you follow with me? Do you engage in my content? Then you can be rewarded with voting power. We have modules that can be built to do arbitrary logic as well as to include a governance managed treasury fee back to composability. Users can take their graph to whatever experience you want. Don't like the algorithm over on Twitter? Bring your content over to another clone.
00:09:57.174 - 00:10:36.550, Speaker A: Your content, your followers, your following and as a creator, your audience move with you to wherever you want in modularity. Again developers you can focus on the front end. The network effects are up to the protocol. Your job is to make the best possible experience, the best way to express your creativity in order to create a great social experience. In times we've seen apps that were great and novel lose out to network effects. We had a group called Meerkat decide to do live streaming and then Periscope came along and they eventually lost their IP over to Twitch because they had the greatest network effects. I think we all remember Clubhouse and how it was soundly defeated by Twitter spaces.
00:10:36.550 - 00:11:10.706, Speaker A: New ideas and paradigms have lost out frequently due to network effects and Lens is a chance to change. That another thing we've done at Ave companies. We've produced a lens API. We've openly said that Web Three social media is a long game and we are creating our own model implementation. We've decided to open source the same tools that we are using to build our own front end. It is an API that allows anyone to use Lens as if it is a standard Web Two API. With GraphQL, all you have to do is focus on building an experience to onboard the next billion into Web Three.
00:11:10.706 - 00:11:34.602, Speaker A: You don't have to worry about indexing or querying data. We're going to be on polygon, so you don't need to worry about reorgs or the speed of fetching the data. You don't have to worry about prefilling contract data or validating it, especially when using with SIG functions or metadata. Just pass arguments. Let the Lens API take care of all of the formatting. Again, you get a Web Two style interface to interact with the protocol. Especially if you are new to the world of Web Three.
00:11:34.602 - 00:11:59.630, Speaker A: This is a really approachable place to start. Leave the modules and complex logic to solidity developers. If you want to build with Lens, here's a great easy entry point to start playing around. And if you're an application on a different chain or an application that's off chain and you want to use and write and read Lens data, feel free to use the API. It's a great way to get started and do something. Low effort as you dip your toes into web3 social. And again, there's no huge learning curve.
00:11:59.630 - 00:12:25.020, Speaker A: Focus on the stuff you want to build. Our API is in beta. Our developers are in the discord around the clock, fixing in features and adding new ones. When people need new endpoints, it's a really great place to get started sharing a little bit of alpha. Some ideas to kind of get you started. Front Ends lens is just a social graph. A social graph isn't useful unless it has a front end for people to interact with it.
00:12:25.020 - 00:12:56.786, Speaker A: The Facebook social graph isn't useful unless you're using Instagram, WhatsApp or Facebook. While Lens we have a community run implementation called Lenster. There are tons of others. Over 50 front ends were done through previous ETH global hackathons. You can be the next big one and is a chance to really lay your claim as one of the first web3 social applications. And it doesn't have to be limited to traditional social. It's very easy to build something that we think of with social like Snapchat or Instagram or a Twitter clone, but I encourage people to dig a bit deeper.
00:12:56.786 - 00:13:48.562, Speaker A: Things like OpenTable or Eventbrite can all use the same kind of data structure. If you're an advanced developer out there and want to start exploring MultiChain, lens is a really great way to do it that as I said, modules use arbitrary logic. There's nothing saying that the arbitrary logic can't be I have received a valid message from some contract running on another chain. Imagine selling polygon NFTs but receiving payments over on Avalanche or receiving payments over on Salana. If you want to experiment with messaging protocols such as Layer Zero, chainlink CCIP or any call from any swap team or many of the other cross chain oracle solutions, it's a cool way to experiment with MultiChain in a non DFI context. And lastly social dows. I genuinely think the next kind of innovation to come off of Lens is the evolution of social dows.
00:13:48.562 - 00:14:22.942, Speaker A: We've seen people start with ERC 20s social tokens. We've seen a change over to concept of maybe using NFTs to organize people socially, whether that be experiments like links dow. But now we have the opportunity to do social DAOs that are coordinated around actual social action verifiable on chain. We can even have a shared profile put on chain. Additionally, a chance for Dao tooling to be made social. It'd be really cool that right now Twitter accounts for DAOs are controlled by individual users. It can get really nasty if there's a governance fight.
00:14:22.942 - 00:15:04.742, Speaker A: Imagine if we took a profile and locked it in the contract such that let's say for example at Aave was controlled by the Aave governance. But Aave governance could delegate so that a few different people on the marketing team or a marketing subdow had the ability to post on behalf token holders still retain absolute control. There's tons of new tooling and primitives that can be built out when Dows and other contracts are given first class status. So that's all I have for today. I encourage you to join the over 115 developers and 55 projects building on top of Lens. We're currently on the Polygon testnet. We're on our fourth testnet and we really do take developer feedback.
00:15:04.742 - 00:15:40.182, Speaker A: We've rewritten the contracts pretty much from the ground up several times based on feedback from working with developers like yourself. And we really want to make sure that what we build becomes the standard for web3 social in the future. And we always do that when we're building with a community. So thanks for taking the time to listen today and was always going to drop a little bit of alpha. Please scan the code to come join us over at Ave. Would love to see you guys throughout the weekend over at the Lens and Ave Station down on the first floor in the back over by Wallet Connect and Gearbox. Our team will be there all weekend and look forward to working with you guys.
00:15:40.182 - 00:15:40.980, Speaker A: Thanks very much.
