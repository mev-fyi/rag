00:00:10.840 - 00:00:11.950, Speaker A: Stream is good.
00:00:26.830 - 00:00:48.660, Speaker B: Cool. Thank you, everyone who's joining via YouTube or who's going to join this call, we have Brandon Millman from Zerox, who's going to show you how to access all the liquidity on decentralized exchanges using the Zero X API. Thanks, Brandon. I'll let you take it away.
00:00:49.110 - 00:01:19.734, Speaker A: Yeah, for sure. Cool. Thanks for the intro, Heather. Everyone, my name is Brandon from Zerox, and today I'll be talking about how to access all Dex liquidity through the Zero X API. So, first, just a little bit about myself. I've been working on the decentralized exchange problem as part of Xerox since 2017. I currently manage two different engineering teams that are working to bring decentralized exchange to the mass market, and one of which is responsible for bringing you guys the Xerox API.
00:01:19.734 - 00:02:02.038, Speaker A: So, yeah, really glad to be here showing it off to you guys. So what exactly is Xerox Labs? Well, Xerox Labs is a company that's building decentralized exchange technology with the goal of driving value in three main areas. So those three areas are, one, servicing better prices within existing markets. So think ETH dai, USDC, et cetera. The second is establishing new markets where none currently exist. So think about futuristic assets like Governance, tokens Protocol, Tokens LP shares, et cetera. And the third is to create novel trading experiences that extend market access to a broader segment of users.
00:02:02.038 - 00:02:45.186, Speaker A: So basically bringing Dex to the mass market. So how do we drive value in all these areas? Well, we have a couple different ways of doing that. First is the development of the Xerox Protocol itself. This is our core Dex technology that lives as a combination of smart contracts on ethereum and advanced off chain infra that helps connect traders that want to trade with one another. The next thing that we have in house is Periscope Trading. Periscope is a crypto native trading desk that helps surface competitive prices and bring liquidity to DFI and other Nascent P to P markets. Third is matcha.
00:02:45.186 - 00:03:31.400, Speaker A: So matcha XYZ, which is the URL. After nearly four years of building the Xerox Protocol and enabling others to build great DFI products, our team has had a ton of new ideas for how we can make it easier for more people to access exciting new markets. And thus Macho was born. If you haven't tried out yet, here's some cool new features from the product. So, here's a Dex depth chart, which is something that doesn't really exist anywhere else. This actually shows you in aggregate as a global liquidity pool. What do different decentralized exchanges offer in terms of liquidity? Matcha also has limit orders, historical charts, basically everything that you would expect from a modern trading experience.
00:03:31.400 - 00:04:14.674, Speaker A: So, yep, just quickly plug Matcha again. So if you go to Matcha XYZ, if you want to give Xerox API a spin or any of this stuff a yeah, check it out. And then finally, the last project which we have, which is in service to driving value to the kind of the three things I talked about earlier is XRX API, which again, powers matcha and then will be the focus for the rest of the talk today. Cool. All right, so just a little bit of outline about what we're going to go over. So first we already went through a bit of intro and context. Next we'll talk about what is the Xerox API and what do you use it for.
00:04:14.674 - 00:05:01.550, Speaker A: After that, we'll talk about why would you use Xerox API over other solutions, how do you actually use the Xerox API, and afterwards we'll reserve some time for some Q A. All right, so first up is what is the Xerox API and what do you use it for? Cool. So what is the Xerox API? So in a nutshell, let's say the Xerox API is quote unquote, an API for aggregated Dex liquidity. So that is a phrase with multiple acronyms in it. So what does it mean exactly? So let's break it down. So, first word API. This could mean quite a few different things, but in this case it just means that it is just a simple Http API.
00:05:01.550 - 00:05:36.094, Speaker A: So you send a request to the Xerox API and you receive liquidity, quote unquote. Next word starting from the back liquidity. What is liquidity? So liquidity is assets that are ready to be bought or sold at any. So to illustrate that a bit better. So here's a screenshot from Coinbase Pro. The way Coinbase visualizes liquidity is two different ways. There's an order book on the left, which you probably recognize, and then a death chart here in the middle.
00:05:36.094 - 00:06:10.102, Speaker A: So up here is everyone who's willing to sell BTC at the moment. Everyone appears down here is people willing to buy BTC at the moment. So that's what we mean by liquidity. And yeah, the next word or acronym rather, is Dex, which stands for decentralized exchange. Decentralized exchanges are sources of liquidity that live on the ethereum blockchain. So some examples to highlight zero, X balancer, uniswap, kyber curve, et cetera. Probably heard of all these different things before.
00:06:10.102 - 00:06:58.150, Speaker A: These are what we would consider to be decentralized exchanges or sources of liquidity that live on the ethereum blockchain. And then the cool thing about Dex is not only do they allow you to trade kind of in a permissionless and noncustodial manner, they tend to be the best and fastest places to get certain types of assets. Like for example, Dai compound tokens or other yield farming related tokens. They tend to be kind of the first movers there. And a lot of these assets are available first there and tend to trade most of their volume on DEXes as well for a lot of different reasons. Most recently because of their ease of compatibility with other yield farming type applications, it's really easy to jump between pools, et cetera. If you're using a dex.
00:06:58.150 - 00:07:34.690, Speaker A: All your assets live on your ledger or however you want to manage. Cool. And then the last keyword in this phrase is aggregated. So we just saw a list of different decentralized exchanges that are integrated intoxic's API. We all know there's a lot of fragmented liquidity nowadays, especially with recent liquidity mining trends and whatnot. As a retail trader, it's really hard to figure out where and when to get the best price. So you can think of Xerox API as your one stop shop for solving this problem.
00:07:34.690 - 00:08:15.518, Speaker A: As a retail trader, a developer that's serving retail traders, how do you figure out when and where the best price is? So, if I can draw an analogy, think of Kayak, for example. So as a consumer of flights, there are so many airlines, airports, and routes that you can take to go from point A to B. It's really hard to get the best possible bang for your buck. And similar to Kayak, Xerox API helps you find the best bang for your buck as a trader. So check out this depth chart again, which is available on Matcha. These are available in all the different markets on matcha. You can play with them and see them in action.
00:08:15.518 - 00:09:09.330, Speaker A: Here, you can really easily visualize the aggregation and get a sense of how potential order sizes might be split across different liquidity sources. So, for example, here, if you wanted to sell 515,000 die for USDC, it'll show you kind of like how we would intelligently route that across different sources in order to get you essentially the best price and best bang for your buck. Cool. So, yeah, all that kind of brings us to our final phrase. Xyrex API is an API for aggregated Dex liquidity. It's a simple Http API for accessing assets that are ready to be bought or sold across multiple decentralized exchanges all at the same time. So we can go over a quick example of what it means to use the Xerox API or a simple request flow with the API.
00:09:09.330 - 00:09:58.718, Speaker A: So first a trader comes and he says, I want to buy or trade. I want to trade 100 die for USDC. So the first thing that happens is that an HTP get request is issued to the Xerox API. The Xerox API basically does some magic returns in step two returns an unsigned ethereum transaction in the form of JSON, back to the original requester. The third step, the requester signs the transaction using whatever method they choose. And then the fourth step is that transaction, once signed, gets sent over to the ethereum mempool. Also through kind of whatever method you prefer, whether that's running your own node, inferior alchemy, et cetera.
00:09:58.718 - 00:10:36.186, Speaker A: So, yeah, just at a high level, that's kind of the basic flow. We'll go more into depth later, but this is just kind of a high level overview of the flow to help with your understanding. Cool. And here are some examples of what you would use xerox API for. So basically, you'd use Xerox API if you want to build an application that needs access to liquidity. And so here's some examples of customers of the Xerox API at the moment that do just that. So first of all, DeFi saver if you haven't used it before, it helps users save CDPs by accessing Dai and ETH Liquidity.
00:10:36.186 - 00:11:15.050, Speaker A: That's one user, Zarian, they build kind of this dashboard for DeFi users if you ever use their exchange functionality. That's also being powered by Xerox API, helps users make smart trades. Next customer. MetaMask this is actually coming out today, hopefully. So this is similar to Zarian MetaMask leverages Xerox API to help users make smart trades with deep liquidity. And of course, there's Matcha as well. Cool.
00:11:15.050 - 00:11:52.146, Speaker A: All right, so we just went over what the API is and what you might potentially use it for. The next thing we're going to go over is why you would use Xerox API over other competitors. Cool. So the TLDR here is that you would use XRX API versus others because of performance. It really is all about the performance of the service that you're providing. And I think that we have the best and most thorough performance benchmarking across the whole, I think, decentralized exchange space in general. And we can go into a little bit of our findings.
00:11:52.146 - 00:12:39.250, Speaker A: But first, how do we actually measure the performance of our API? So we track kind of three metrics pretty closely. The first metric is adjusted price. Adjusted price basically means the price that you get for a trade after fees. So it's how much money ends up in a trader's pocket after fees. The second thing that we go on is reverts, keeping them low. And the third thing that we go along is reliability and response time and kind of classic web API performance metrics. And then, by the way, all the charts that I'm about to show, all of them are from our latest blog post called a Comprehensive Analysis on Dex Liquidity Aggregators Performance.
00:12:39.250 - 00:13:09.790, Speaker A: And we're actually doing kind of like a live AMA on Reddit as well, actually right now. So if you guys have any questions that you feel like weren't answered or want to learn more, I'll be sending out some links to everything that I referenced in the talk after this. But feel free to jump on Reddit or jump on Discord and our discord and stuff. I'll send some links afterwards. But cool. Let's just kind of dig into these different metrics. So first, adjusted prices.
00:13:09.790 - 00:14:31.750, Speaker A: So let me go walk through this graph. So this graph shows the percentage of time that Xerox API produces the best trade, including fees for different types of trade sizes. And so you can see there's different bars here. One for the low trade side range, trade size range, $100 to $500, and another bracket for all the way up to yeah, so basically the TLDR here is that about 72% of the time, the xerox API will actually produce the best outcome for a trader, and just a little bit about the methodology that we use to produce these results. So these results were actually used using comprehensive simulations across the most popular assets and most popular trade sizes, up to $1 million. Trades, which we actually see quite often made by users in Matcha, actually have seen someone trade $10 million at once through Matcha, which is just insane. And the reason why we chose to do this simulation based methodology is that it's really hard to produce a fair comparison between swaps if they're not sufficient variables normalized.
00:14:31.750 - 00:15:18.114, Speaker A: So trades can occur in different block times, trades can occur just with different conditions. So these simulations just really try to normalize as many different factors as possible to create the fairest comparisons. Again, the exact methodology that we use is described in more detail in the blog post that I'll send out afterwards. And we're also doing like a reddit AMA as well where we can get way into the details. Cool. So how do we actually produce such great prices? Well, one of the pieces of the puzzle is adjusted gas prices. The reason why we're able to produce these results is because of our efficient gas usage.
00:15:18.114 - 00:16:00.310, Speaker A: So this graph comes from the same simulations I just described, and it shows that the XRX API outcompetes all other options besides uniswap when it comes to gas usage. However, if you've ever tried to trade large size on Uniswap, you know it does not perform well in terms of pricing and slippage. So I don't know if anyone's ever tried to trade $1 million at once on Uniswap, but definitely don't do that. You're going to get mega wrecked. So, all things considered, gas cost routing and all of that, we're able to kind of produce these adjusted price winners. Cool. All right, so next thing I'll go over is reverts.
00:16:00.310 - 00:17:13.862, Speaker A: So similarly to before, the results up here are produced using simulations. These graphs show the percentage of these graphs show revert rate or percent of times different liquidity APIs will revert given different time delays. So basically, we'll try to understand how different aggregators perform given different types of mem pool conditions, let's say like two or four blocks go in between actually getting that transaction and then landing and getting mined on Ethereum. How is that going to impact your revert rate? So we've done a lot of work in kind of gauging how that would play out and have also shown that matcha zerox API has a superior revert rate versus other competitors. And yeah, everything I've talked about so far has been simulations. We also do quite a bit of on chain data tracking as well. This is the on chain data pulled from a bunch of different aggregators on Dune Analytics and also shows the on chain revert rates being quite low in addition to simulations.
00:17:13.862 - 00:17:51.830, Speaker A: And of course, these revert rates are not normalized. So the types of training activity happening on one venue are not necessarily the same as the other venue on chain. And so take that how you will. Cool and then the last thing that we measure quite rigorously is reliability and response time. So here's a graph of the response time that we've measured from a bunch of different competitors. In the graph, you see the API, again, outperforms liquidity APIs in terms of response time. This means if you use the Xerx API, you get your trades faster.
00:17:51.830 - 00:18:35.202, Speaker A: One thing to note, uniswap is a little bit out of place here because they don't have an API. You would sort of get trade information from them by contacting inferior using your own Node. But all of these other aggregators use a very similar kind of web API based method. Cool so, yeah, that's it for the metrics. And so as a result of all this optimization, we produce the best outcome for traders who need liquidity, especially for those who need large volumes. So take these transactions for example. I'll link these afterwards.
00:18:35.202 - 00:19:15.540, Speaker A: Again, so in this example, we actually had a trader come through Macha that wanted to trade 7000 ETH at once into USDT and was actually able to convert that 7000 ETH into $2.3 million worth of USDT in one transaction. And this pricing was actually only made possible because of routing across uniswap and Sushi swap, actually in this example at the same time. And then here's another example, this user came along. This is an even larger trade. But by the way, these trades, if you look at the timestamps, both happened within the last 24 hours. These types of trades are being made all the time.
00:19:15.540 - 00:20:09.346, Speaker A: This trader traded 8000 ETH into $2.7 million worth of WBTC. And again, this pricing was only made possible by routing across multiple sources, in this case, uniswap and balancer. So Xerox API lets these traders move huge volumes with minimal pricing impact and no requisite understanding of how exactly they're being routed. But over time, these large traders have come to understand that API is the best place to make these trades, and it's just evidenced by the huge volumes that are going through. Cool all right, so now that we talked about why you would want to use the XRX API versus other competitors, let's talk about how you would actually use the API. Okay, so we're going to look back at the example request flow that we kind of walked through earlier.
00:20:09.346 - 00:20:48.900, Speaker A: In this example, a trader comes along and they say they want to trade 100 die for USDC. They issue an Http get request over to the API. And let's dive in a little bit here and see what exactly that get request would look like. So again, we have the goal of the trader, I want to trade 100 die for USDC. And below we have the example request that that would map to. So first, the trader expresses 100 and this gets expressed through this cell amount parameter in orange. Note that the cell amount is actually in way.
00:20:48.900 - 00:21:56.674, Speaker A: In other words, this is 100 with 18 zeros at the end. So that's a small gotcha with using the API, but with so many different tokens with all different types of decimals, this is the best way, no pun intended. And next, the trader expressed that he wants to sell Dai by specifying the sell token parameter in yellow and they express that they want to receive or buy USDC by leveraging the buy token parameter in blue. So altogether you get this final request that expresses that trader wants to trade 100 die for USDC. This request goes through to the API and the API sends back an unsigned Ethereum transaction in the form of JSON in order to get signed and sent over to Ethereum. So if we zoom in a little bit on that, this is kind of an abbreviated version of the JSON that you would get back. It has all the primary fields that you would need in order to interact with the contract on Ethereum.
00:21:56.674 - 00:22:53.194, Speaker A: So we have the two field which represents the address that you're sending this transaction to, the value which is the amount of ETH that you send with the transaction. Yeah, so that's the amount of ETH that you send with the transaction, which is important because sometimes you actually want to be selling ETH and the best way to do that is to send ETH along with the transaction. So that's something to note. Next field is data. This is the actual call data that's going to be sent to this contract up here and then the estimated gas that's going to take as well as the gas price that you should set with the transaction when you send it. Yeah, so that's a little window into what that response looks like. Again, the response comes back to the user and the user signs the transaction kind of with whatever method they want.
00:22:53.194 - 00:23:32.594, Speaker A: So some people run their own node, some people use MetaMask, some people just have their own tooling. Whatever you want to use, you just need to sign the transaction and send it like you would normally. And yeah, once the transaction is signed, can be sent over to the Ethereum mempool through any method you prefer. Again, some people run their own nodes and then other people use something like Infira or Alchemy to do that. And then yeah, once the transaction is mined, the trade will be complete. So here's kind of a little bit of laundry list of other advanced features that we also support in the API. Everything's in the docs.
00:23:32.594 - 00:24:22.598, Speaker A: Again, I'll send the Docs over after this. But different things that you can control for slippage. You can use Xerox API in conjunction with Metatransactions if you want to actually send transactions on behalf of users. Other stuff that's available in the response, there's detailed information about how the order is getting routed across different venues. You can add affiliate fees on top of your transactions if you want to monetize the order flow. And you can also actually also use Xerox API in conjunction with custom smart contracts. If you actually want to pass call data directly into a custom smart contract and use a swap in conjunction with some other on chain actions, you can do that as well.
00:24:22.598 - 00:24:51.438, Speaker A: We have guides for all these things. They're in the docs and again, I'll send the links. Cool. So that's about it. If you all have any questions, now would be a great time to ask. Just in case you have some questions later or if your question doesn't get answered, here are some other ways to find me. So we have an ETH Online sponsor channel.
00:24:51.438 - 00:25:15.446, Speaker A: In the ETH online. Discord it's. Hashtag sponsor Xerox Labs. We have a discord which the link is here, but I'll send the link also as well out to another venue. But that's a great place to get support from me or any other member of Zerox. And also just feel free to email me directly at Brandon at Zero X.Org as well.
00:25:15.446 - 00:25:18.600, Speaker A: And that's it.
00:25:19.770 - 00:25:21.750, Speaker B: Awesome. Thank you so much, Brendan.
00:25:21.830 - 00:25:23.034, Speaker A: Yeah, for sure.
00:25:23.232 - 00:25:30.220, Speaker B: Everyone is in this zoom call. You can unmute yourself if you have a question for Brandon, so go ahead if you have any.
00:25:35.010 - 00:26:39.540, Speaker A: Hey, I got a question. Yeah, for sure. What's the roadmap for NFT support? Yeah, that's a good question. So this API is definitely geared specifically towards ERC 20 trading. In terms of NFT support, I think this specific API is not going to help you out, but Xerox protocol as a whole is compatible with NFTs and there are quite a few applications, including the Gods Unchained marketplace that use Xerox to trade NFTs. And we have kind of like a specific set of tools and stuff and guides and everything that are geared specifically towards that. And so let me just jot this down, but I will send out a link to kind of everything that we have for that.
00:26:39.540 - 00:27:52.780, Speaker A: But yeah, unfortunately this specific API is not for NFTs, but overall we do support NFTs. What about layer two networks like Xdai? That's a good question. So not natively. I'm not 100% sure of all the details of XDI right now. We're purely focused on basically making sure that we have the best performance and offering on layer one. And basically we're waiting out a bit longer to see how layer two shakes up just because it's quite open ended still. But in terms of layer two in general, we actually have sort of an orthogonal project going on in the company called Zero X Chain that is a Zero knowledge proof based L two scaling chain that's sort of like in an R and D phase at the moment.
00:27:52.780 - 00:29:23.990, Speaker A: If you use something like loop ring similar in UX to that you deposit and then make a bunch of high speed trades and then withdraw later. But, yeah, at this very moment, we're just kind of still waiting to see how L2 shakes out. What we're seeing, I guess, in the market and in the data at the moment is that the vast majority of trading happens in conjunction with other actions that you would take on other Ethereum applications. So, for example, someone has their Dai in a yarn vault, they decide it's time to take that dye out, and there's a better opportunity to go over to become a Uniswap LP. So one thing that they might do is withdraw their Dai from Wi Fi, exchange half of it into ETH, and then put both of those requisite asset pools into Uniswap to become an LP. This solution is perfect for them because they're able to do those swaps directly in their wallet versus if they have to go to an L2, it's pretty much a non starter because it's way more transactions. They just want to kind of get quickly in and out, just kind of different user profile.
00:29:23.990 - 00:29:43.500, Speaker A: And, yeah, we're kind of seeing most of the volumes be dominated by that specific user profile at this moment. That's not to say that stuff won't shift around. Obviously, every week is different in crypto, so something that we're definitely tracking very closely. Thank you. Yeah, for sure.
00:29:51.200 - 00:30:08.156, Speaker B: Sweet. Does anyone else have any burning questions for Brandon or the Zero X team? Silence is golden. Thank you so much, Brandon.
00:30:08.268 - 00:30:09.120, Speaker A: Yeah, for sure.
00:30:09.190 - 00:30:10.050, Speaker B: It was great.
00:30:10.660 - 00:30:11.856, Speaker A: Yeah, of course.
00:30:12.038 - 00:30:14.130, Speaker B: Congrats on the launch today.
00:30:14.500 - 00:30:32.900, Speaker A: Yep. Thank. And know I have a bunch of links that I referenced throughout the presentation. I'll work with Heather. Just kind of send that out to you guys in the best way possible. If you have any other questions, please join the Sponsor Channel. We have our own discord.
00:30:32.900 - 00:30:41.576, Speaker A: Send me an email and I'll hopefully have time to get to otherwise. Yeah. Thanks, everyone, for tuning in.
00:30:41.758 - 00:30:42.600, Speaker B: Sweet.
00:30:42.940 - 00:30:43.590, Speaker A: Thanks, everyone.
