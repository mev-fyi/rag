00:00:05.420 - 00:00:38.548, Speaker A: You. All right, let's start. Okay, welcome everyone. Thanks for joining the talk. And today is going to be a very handsome workshop and it's going to be a workshop talking about how you can build on top of better and make your game a e four game to my size using the Setter game SDK. So first a quick introduction about Setter network. By the way, I'm Mo from Setter.
00:00:38.548 - 00:01:41.116, Speaker A: And Setter is this layer two construct that accelerates blockchain. It doesn't only accelerate the blockchain payment transaction, but also accelerate any kind of generalized smart contract transaction. The underlying technology it uses is called Generalized State Channel and the generalized state channel is extremely suitable for the application scenario where there are a lot of interactions between participating parties like frequent payments, pay per use services and paper use cases. And also this kind of interactive games like a chat game, like a Gongko game, like any kind of board game or any kind of interactive game that involves esports to have people coming back and forth at each other. So the center network architecture in general contains two parts. One is the technology construct called Cstack consisting of the C channel which is the lowest state channel construct. It has all the state channel specification and we have open source all the smart contracts as well.
00:01:41.116 - 00:02:23.368, Speaker A: Feel free to check out our GitHub. And then on top of that is the multi node routing problem which solves a very critical problem in the layer two network to route payment efficiently without actually causing a lot of congestion in the network and using up all the liquidity stored in the network. And then on top of that is the ethical layer where we call cos. And on top of the Cos, which is the topic of the day's call, which is the Setter Activating SDK. So it was this way. The Setter Activating SDK that I'm going to introduce to you guys today is a wrapper around the underlying therapy. So there are actually a lot of more functionality you can realize in the underlying theta SDK, but I'm just omitting them for now.
00:02:23.368 - 00:03:36.352, Speaker A: And then there's another whole stack which I'm going to impart omitting in this talk, which is talking about the economic aspect of standard network, that is how the off chain state is actually secured in the network. So we recently launched our mainnet ARPA and in the mainnet ARPA we launched essentially three things. One is called Ceramic which is a user based application which is specifically targeted in a small very specific niche that is esport real My games. And then we also launched towards common game developers, non launching gaming developers, something called FAIRX Gaming SDK. And this is targeted for the normal game developers to launch their game on blockchain without any kind of blockchain experience, with only two lines of code, which is the stuff that we're going to talk about today. And then the Setter web SDK which is going to be replaced very soon by a Setter Web Three client. Right now the Setter Web Three SDK runs as if you run a client locally, which is Go client, then you can connect the JavaScript SDK to this Go client using our PDF service.
00:03:36.352 - 00:04:25.180, Speaker A: We are very soon going to change that format into a native, into a pure JavaScript SDK or pure JavaScript client connecting to the Setter network. So what is setterx? Just like kind of a quick intro or a quick demo. This is what Setterx looks like. You can download this application at Setteract app and you can play with your friend or play match with anyone in the world with these games. It can be a single player game where high four wings or it can be this interactive game, like a board game. This game is like an Asian China board game called a connected Five or Gomoco. And in the end of the game, what happens is that whoever wins game will get the other guy's entity, essentially.
00:04:25.180 - 00:05:11.904, Speaker A: So what happens under laying is that there is a off chain conditional payment paid towards each other, towards the two opponents in the beginning of the game. And whoever actually wins the game will finally get resolved into the correct condition or the conditional payment. One will get resolved two and one will get so this is like how network works in general. It enables the functionality to enable conditional payment option, conditional payment. So through this entire process, you see no delay, no transaction cost, no kind of any blockchain soldness. That is because we are all running this part on the layer two construct, which is a very important scaling aspect of the network. So these are like old data.
00:05:11.904 - 00:05:46.308, Speaker A: In seven days we have been running this for about a month. So right now we have processed $1.4 million prices total in total for about eleven K players playing about 300K matches from 88 different countries. So this stuff is actually being used. We're probably one of the most frequently used around the world. And many of the users in the application are not actually crypto users. They previously don't have the cryptocurrency experiences.
00:05:46.308 - 00:06:27.250, Speaker A: We try to make this onboarding experience and also gaming experience so familiar to them that they cannot distinguish whether they're using a blockchain application or they're not. So these are the users distribution. So these are some of the testimonials we received from the users. One were to sum it up, the user experience is very similar to native, but there are also a lot of challenges we see and a lot of lesson learned. And this is stuff we're going to talk about in today afternoon's Talk. That is a lesson learned when we are actually operating this non cost study and decentralized layer two network. Okay, now let's start.
00:06:27.250 - 00:07:42.556, Speaker A: Okay, so the immediate question to bear is, okay, so I showed these two games. Can we all build some game using as a standalone hyper? Do I need to understand Serra's technology? Do I need to handle off chain payments? Do I need to instantiate off chain clients? Do I need to open a channel? Do I need to write a lot of smart contracts, manage users privacy, and so on and so forth? We got asked this question a lot and the answer to all of those questions are very simple. No, you don't need any of them. So what you need is actually just any HTML Five game out there, any HTML Five to just pull it from the GitHub and add two lines of code and there's zero blockchain experience needed. And then developer can build on top of Setter and start to integrate their game into a full age, decentralized, fully blockchainized esport competition game. So how does that work by the way? We are actually offering a $1,000 bounty for the Thick Gamer Award and also will become featured in the application with about tens of thousands of users. If you actually submit your game in the East Boston hackathon, we'll feature that as East Boston special.
00:07:42.556 - 00:08:19.390, Speaker A: Kind of a feature in the first front page of the application. So now we enter the hands on part of this workshop. Okay, so if you have your laptop, feel free to go to this part Setter network. And there is some example called Setter apps. Example go setter. And this is an extremely simple HTML Five game. Let me show you what this is.
00:08:19.390 - 00:08:35.104, Speaker A: I think I actually open here. So, yeah, just like do a very simple NPM start and we have this game.
00:08:35.222 - 00:08:36.432, Speaker B: Yeah. All right.
00:08:36.486 - 00:09:52.552, Speaker A: So anyone recognizes this game? By the way, we just kind of adopted this dinosaur jumping game where when your Chrome dies, you can play this dinosaur jumping game to cute time, which replaces this to our small math socket. So this is just extremely simple app and you have final score of 42. So how can we change this non blockchain, actually like zero blockchain, touch the HTML Five into a Setter based game? Well, extremely simple. Let me show you how. So to change it to by the way, the Developer Doc is here, developer Setterx app. You can always refer to the Developer Doc here and you just look at the document section and this is a kind of a solo game which is the most simple way to integrate a Setter. That is, you have a solo game that is playing for school and there are a couple APIs here where there's a Setter app Start, which actually underline triggers all the starting logic of matching of the cryptocurrency payment and every logic underlined to actually set the stage for the game.
00:09:52.552 - 00:10:56.220, Speaker A: And then you have Sarah Guest Match will get you some of the basic matching information. One question you guys might immediately ask is that okay, you are playing with real cryptocurrency, which basically equivalent to money. Is this stuff even legal? Are we actually touching on the gambling space? Well, no, so there's actually a very distinct difference between gambling and scale based game in the United States and also in 180 different countries. So in 39 different states. If your game meets certain qualifications, I'm not providing legal opinion but we will review the game for predominant test case, then your game is entirely legal. So for example, for the fish junk game we just saw, the only requirement is that if two people are actually competing against each other, as long as the sequence of different cats and feed that they are seeing is the same basically, they are seeing the same game. They're playing the same kind of game or using the same first hand in any kind of, let's say, card game.
00:10:56.220 - 00:11:55.488, Speaker A: If they're having the same starting stage and with the same kind of random sequence number generator along the game, then this stuff is 100% what this function is here is trying to do. One of the functionalities is to get you the shared random C. So we are actually implementing this in a pretty advanced way. That is that this shared random CD is not generated by a server but actually generated by message exchanging between the two opponents with the commit and review process. Like basically you kind of mix this two commit the hash together and then later review them to kind of generate the two randomness on the client side so there's no one can actually cheat the initial randomness of the game including the server. So and once you have that shared random city, you just kind of use that as your randomness source and then in the end of the game, you just do a submit score. So that's kind of like the main API here.
00:11:55.488 - 00:12:40.860, Speaker A: Is there anything else? No, that's it. There's literally like maybe three two lines of code. So how do we actually integrate this? Let's say in the beginning of the game, this function just gets called like reset game. It's basically resetting the state, resetting every canvas and there's five canvas. And what we need to do here is just get the mesh and also from the mesh you kind of use this global seeding function to just see this entire running this process and then in the end what's going to happen is, you know, there's.
00:12:42.880 - 00:12:43.468, Speaker B: In the, in.
00:12:43.474 - 00:13:36.496, Speaker A: The end of the game what happens? That okay, you just have some score in here like basically for whatever score that this guy won't, you just send me a score here in the game. That's the whole process of integrating setter into your HTML Five game. Now I know there might be also another immediate question jumping out here that is okay, what about you think that this function is very straightforward. That anyone can just call this function and just kind of type this up and submit whatever score it is. So this is the part that we kind of go beyond just a blockchain, but actually also have a pretty intelligent matching engine to kind of generate the distribution of scores of a game. So if there is actually an outlier in the distribution, we pick that out and we put that in a separate bucket. Basically we'll only let the bots match against each other.
00:13:36.496 - 00:14:46.628, Speaker A: So we actually already see this in some of our games where someone is trying to build a bot, not necessarily just directly by hacking the game because the game itself also have authentication. The HTML Five game also runs inside of a application and this score is not just a JavaScript call, it actually goes through application authentication process. But even with that someone is trying to build a bot to kind of really automatically apply the game. Now to weep that out, we actually quickly single out these guys and then just let them match with each other. So we kind of having different level of matching with different tier of capabilities so people can all enjoy the game. So if you build a game now, there's actually a very fair ground before users to play. Now the immediate thing also to ask is that okay, so yeah, it's very easy to integrate but what does it mean for the developers? Well, so instead of we are trying to create a sustainable developer ecosystem here to generate a sustainable monetization for the developers.
00:14:46.628 - 00:15:19.664, Speaker A: So starting from the end of October, we are starting to kind of charge in the transaction process and the charges will go to the developer who submitted the game. So basically if there are more people playing the game, let's say two people are both putting in one dollars, the winner will only get $1.6. Where are the $0.40? Those $0.40 goes to the developer directly. So that's kind of like the incentive we build up for the developer. And it also has been working very well that we have right now.
00:15:19.664 - 00:16:19.072, Speaker A: Let me see, we have about 153 games submitted through our network portal that people are actually submitting game. We have a pipeline for about 20 games that is coming up that's going to be released using that same kind of model. Now the integration is not the end. Basically the next question is that okay, I have written this part of the code then how can I run this stuff? Actually in the Setter Act application, like the Setter Act application, how can I run that stuff? So we actually build extremely easy to use sandbox environment for the developers. So this is just a sandbox environment. You can register your account at Portal setterapp app and then create your own game. You can just go through this creation process, give your game a name, description and choose the device orientation.
00:16:19.072 - 00:17:22.650, Speaker A: Let's say you want to choose Landscape because we're doing this kind of dinosaur game and you can choose a different color of anything and you can choose between total bit game, high four Wing, low score wing and also an entirely different class of game called term based game which actually use generalized state channel contract, which I haven't actually touched on. I will briefly touch on that. And if you enable smart contract will actually allow you to connect to the generalized state channel construct which is the advanced part or even more decentralized part of the setter, specify some parameter and just click Create. Now what happens if you click the Create is you are going to see something like this. So after you create this game, you can upload the application asset, just a package of the code, the JavaScript code you just have and upload it here. And then what you can do is you can just immediately start cutting the game. I actually don't have the internet here.
00:17:22.650 - 00:19:32.526, Speaker A: Do any of you happen to have setter acts and also Internet? All right, so the gist of the idea is that in setter acts there is this kind of a magnifier button and you can click on this magnifier button to scan this QR code and immediately you will be able to cast it on your phone directly by trying out the competition with your front view. So in this whole process, there's literally no part of the process that you need to interact with the blockchain and also you need to kind of send payment or do anything like that. The entire process is just kind of entirely automated and hidden away from this developer experience. So it's actually extremely easy to use if you download some open source game with the right license and maybe build your own very interesting brain user game and submit at the Portal CenterX app and just shoot us an email at developer at sarah network or ask us any questions. In the discord we're giving out a sick gamer or probably one of the easiest bounty in Tara Axon but also pretty fun and also has monetization features that we're going to support in the future. And also we'll release the game as kind of a feature game from the Esports Max in the so another advanced, more advanced example is that for those who are in Blockchain community, you guys probably know about this game already because we have been using this everywhere to demonstrate the capability of something called Generalized State Channel. And generalized state channel is a constructor where you can put this entire game into an off chain smart contract.
00:19:32.526 - 00:20:59.694, Speaker A: And this makes every interaction a fully decentralized interaction for the you know, we have open sources the entire game of this and you can reproduce this entire process for creating this game by looking at this four repos. This report the first report C app used in our GitHub gives the generalized state channel smart contract template and also an example, which is basically this particular example. And you can adopt this example and adopt the template to build any kind of generalized channel contract and then you have the third X example Comoko, which is the HTML five part of the front end. This part demonstrates how to connect the front end to the back end of a generalized channel. And then we also have the JavaScript SDK open source and you can see how we actually utilize the underlying capability of the Setter SDK to build the Setter X SDK which is a gaming specific SDK. And finally with all this combined, you can just again submit a code to the portal and test the application on the developer portal. So I extensively talked about the Setter X SDK, but we also have a web SDK today that makes the Setter network itself an open platform and extremely easy to build.
00:20:59.694 - 00:21:43.206, Speaker A: You can build financial derivatives and market on it, non cost cryptocurrency exchanges and very importantly micro payment services of any kind. So one specific primitive that I want to bring up is something called off chain conditional payment that is through the Setter network. If you are familiar with Lightning, lightning can do off chain payment with extremely low cost across the entire Lightning network. But the payment is very simple, it's basically just get paid. But instead what you can do is that you can send an off chain payment across the network, but the off chain payment is not a result, it's more like you just committed this payment. But that payment may depend on a condition on the blockchain. A verifiable condition on the blockchain.
00:21:43.206 - 00:22:54.066, Speaker A: What is a verifiable condition? It can be a scorical offer and you can connect this with chainlink's Oracle to say that okay, I'm sending you an off chain conditional payment conditionally depending on whether tomorrow rains or not. And it can create this kind of a friendly social back application. It can also create very interesting stuff like a kind of peer to peer derivative market that you're kind of just sending each other conditional payment. And these kind of conditional payment, as long as they can cancel each other, we will automatically merge them together to save liquidity in the network. So this is a very cool building block and we have already seen a lot of interesting use cases built around this like usage with the car insurance, peer to peer electricity metering payment system and peer to peer social batting verifying grain metering hosting services with some certain sort of Slaa guarantee. This example is basically saying you're paying a hosting service and the hosting service is there's Oracle to testify the hosting services availability. You're sending all micro payments of conditional payments based on the availability of the service.
00:22:54.066 - 00:23:36.560, Speaker A: If the service is not available for a certain period of time, the Oracle flips. Even though you're still kind of sending the payment, the payment is actually going to be automatically resolved to fault and you're actually not actually sending the payment to the hosting services and many other examples like this. So with that, I think I'm right on time for the talk and you're very welcome to use our SDK and I'll be around in Hackathon and also I'm also going to be on Discord to support you guys. So with that, any questions is that I can answer?
00:23:38.930 - 00:23:43.426, Speaker B: Yeah, can you talk really quick more about the web part seller and how.
00:23:43.448 - 00:23:52.420, Speaker A: Does that so today the web part of the setter looks like.
00:24:06.710 - 00:24:07.394, Speaker B: This is better.
00:24:07.432 - 00:25:14.054, Speaker A: Way too short. If you go to Setter network and there is a developer section, and if you click Setter SDK, which is now Setterx SDK, and you'll find Web SDK and also a client library. How that works today is we make this client as kind of a local client because the entire backend technical stack is built around Go, so it's compiled Go client, and the Go client holds an RPC service for the JavaScript client. To talk to this Go client, So to use a setter in a web environment today, you need to run a Go client and let the web interface talk to the Scope client. So it's almost somewhere like the outer node, if you may. But we are releasing a pure web client very soon, end of this month, end of June 3. And that web client itself is going to be a standalone client that solely lives inside of the web environment and talk to any kind of a web.
00:25:14.054 - 00:25:24.426, Speaker A: Three things like cloud things like all the other kind of web providers can directly use that unless there's the right permission to use that.
00:25:24.448 - 00:25:37.030, Speaker B: Basically, can you go back to the slide that had the full that was a quadrant for monetization options like.
00:25:41.080 - 00:25:51.940, Speaker A: Which part going down? Yes, this part?
00:25:52.470 - 00:26:30.120, Speaker B: Yes. Okay, I think it was one more slide. Yeah. Four options for monetization. Whether or not it was peer to peer, game to game. I guess my question was that for example, with the dinosaur game you could change the icon for the dinosaur. Is there a way to, I guess, monetize the icon if you had various types of icons?
00:26:30.300 - 00:27:07.772, Speaker A: Yeah, I think that's a great question. This is something that we also are talking with some other game developers that is like including micro payments into kind of a collectible buying process. And it's definitely possible you can say that in the game. There's also an option. If you spend $0.10, which is like a very small money, you spend it on the blockchain, it's going to be like insanely expensive. But if you just spend it here, it will be able to give you this kind of collateral and that's a perfect use case for off chain conditional payment.
00:27:07.772 - 00:27:46.872, Speaker A: If you think about it, it's something like, okay, I'm going to pay you $0.10, but that is not going to be immediately resolved. That is going to conditionally depend on the ownership of that collapse. And let's say I pay twenty cents and the collectibles ownership actually change to me only when that happens. The option conditional payment actually goes through. So that is actually a perfect use case to kind of have hotel almost like atomic swap of option payment and also the flexible exchange. Yeah, that's a good concept.
00:27:46.936 - 00:28:02.834, Speaker B: Thank you. Your bounty is mainly towards the gaming SDK for HTML Five that goes on your seller, right? Not for the standalone web.
00:28:03.032 - 00:28:38.060, Speaker A: Well, so you're definitely feel free to build it using standalone web. And we'll kind of also evaluate this is like more towards kind of a this is literally the first time we're trying to test out the gaming SDK and that's why we set up the monkey this way. But feel free to build using the native web SDK, especially using this kind of generalized option conditional payment functionality. Any other questions?
00:28:45.770 - 00:28:51.494, Speaker B: One more. I know you said you were going to be here today. You have a plan on leaving. What time do you plan on leaving?
00:28:51.622 - 00:29:22.114, Speaker A: I'm going to just be here generally the entire day. I have to talk also scheduled this afternoon to talk about the operational aspect of the day channel. But yes, I'm just going to be generally here. And also we have Discord Channel. And this email directly goes to the entire group email, including mine. So if you have any questions, just shoot us an email or join the Discord Channel. There are going to be the our team is always watching the Discord group.
00:29:22.232 - 00:29:29.140, Speaker B: Thank you. Appreciate your time. Oh yeah. All right.
00:29:29.590 - 00:29:32.160, Speaker A: Okay, I guess that's it. Thank you all for.
