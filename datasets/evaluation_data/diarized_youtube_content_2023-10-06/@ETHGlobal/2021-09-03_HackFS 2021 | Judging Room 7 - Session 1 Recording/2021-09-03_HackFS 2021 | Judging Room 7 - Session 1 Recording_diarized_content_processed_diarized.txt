00:00:00.410 - 00:00:00.960, Speaker A: You.
00:00:02.530 - 00:00:12.270, Speaker B: Hello. So, yeah, now that both judges are here, feel free to turn on your cameras, and then we're going to get started with the webinar.
00:00:13.090 - 00:00:14.894, Speaker A: Okay. My camera is on, yeah?
00:00:15.012 - 00:00:15.982, Speaker B: Yes. You're good?
00:00:16.036 - 00:00:17.360, Speaker A: Okay, good.
00:00:20.830 - 00:00:25.740, Speaker B: So I'll just give it a few seconds for teams to filter in.
00:00:33.550 - 00:00:35.402, Speaker C: Hey, Anosh, nice to meet you.
00:00:35.536 - 00:00:37.260, Speaker A: Hey, nice to meet you, too.
00:00:40.990 - 00:01:07.394, Speaker B: All right, so I'll get started now. So hello, everyone. Welcome to Hack FS judging session. After nearly a month of working and over 650 hackers from 61 different countries and 18 time zones, we're finally at the home stretch. But before we get into the judging, I just want to tell you a bit about what's going to happen today. So the judging format will be as follows. Each team will get four minutes for the demo, followed by three minutes of Q and A, which means seven minutes total.
00:01:07.394 - 00:01:49.802, Speaker B: And teams, while you're presenting, try and keep your eyes on the chat, because I will be giving you 1 minute warnings and telling you when the time is up for each section. After approximately 68 teams, we will take a ten minute break. So, judges, get a break from judging, and then each team will be evaluated on five aspects of their project the technicality, originality, practicality, UI, UX, and DX, and just the overall wow factor. But I'd like to stress that this is not a competition. You're here to learn, explore what's possible, show off your own projects, and take advantage of any and all feedback you might receive. Finally, let's introduce our judges. So, with us today, we have Soroop from Powerloom and Anwar from SwapX.
00:01:49.802 - 00:02:06.390, Speaker B: A huge thank you to both of them for taking the time out of their schedules to volunteer as judges. Now we can go ahead and get started with the demos. So as soon as the first team is ready to go and promoted you, feel free to turn on your cameras and start your presentation.
00:02:38.920 - 00:02:39.476, Speaker A: Hello.
00:02:39.578 - 00:02:44.368, Speaker D: This is our Hacka best 2021 submission. We've created rada the events driven payments.
00:02:44.384 - 00:02:45.140, Speaker A: Protocol.
00:02:45.640 - 00:03:02.910, Speaker D: Let's introduce the Rada team. This is Jordan, Levi, Franz, and Kevin. We've worked together over the last few weeks to bring you the Rada Pay DAP and the Rada Protocol. We start our story off with Mark and Carrie. Mark, the buyer, has a great startup idea, but not enough money to fund.
00:03:03.280 - 00:03:04.030, Speaker A: Sorry.
00:03:08.320 - 00:03:55.832, Speaker D: Not enough money to fund someone to build it. Carrie, the seller, is a professional developer and really likes Mark's idea, but she wants to make sure she gets paid for her work. We will now explain how the Rota Protocol solves Mark's cash flow problems while also simultaneously guaranteeing Carrie's payment. Mark and Carrie use a Rotapay DAP, which provides an interface for decentralized event driven payments on Rodapay. Mark can create a job, and Carrie can connect with Mark to agree on submission and payment terms after the job is posted, the Rada Smart Contracts act as an escrow between Mark and Carrie. Once Carrie submits her work and Mark agrees, a payment stream is automatically set up through Superfluid. Rada will track the chosen events, such as downloads from Mark's app and will pay Carrie based on the frequency of chosen events.
00:03:55.832 - 00:04:25.200, Speaker D: If the emitted events increase, payment is increased. If they decrease, payment is decreased. Then using the graph, Mark and Carrie can query their payment streams, see how much they're getting paid and when they're getting paid. Now let's take closer look to how those events are tracked. Again, we have Mark and Carrie here using the Rotapay DAP to track events. Rotapay connects to an event tracker API. The API will listen for events based on Mark's job and change the payment stream on Superfluid per the terms negotiated between Mark and Carrie.
00:04:25.200 - 00:05:06.756, Speaker D: From there the API connects to textiles through NDB where log data is sent and uploaded to IPFS. IPFS is then able to show every event that is registered so Mark and Carrie or others such as potential investors, can easily access all the information from their deal. Now we will move on to a video demonstration of the protocol and the interface. Before Mark can get Carrie's assistance, he has to use the radar app to set up some basic info about the job. He sets a description and a down payment of 1000 ether. Then he connects the Rada app to listen for downloads of his soon to be published application. He sets a target of ten app downloads, after which point the payment stream to carry will be increased by 20%.
00:05:06.756 - 00:05:38.780, Speaker D: Finally he adds some final basic details including the final contract value. He clicks next and waits for the submission on Kerry's side. She can now see Mark's job from the table below. She can review the terms and click apply. This will create a transaction which will on the blockchain confirm that Kerry is an applicant for the job. There are several stages to this job, but for brevity we will skip to the final stage where Mark has the final sign off and starts the payment flow. Mark now has to choose the job from the payments section.
00:05:38.780 - 00:06:34.860, Speaker D: And here he is taken to the payment flow screen which after a short delay shows that he is streaming 750 guy to Kerry per month. He clicks start flow and the rider application along with Superfluid will handle the setting up of all the required payment streams between him and Kerry. There is nothing more for either of them to do. Now, after the stream has started, we can see money streaming between Mark and Kerry. This is thanks to the graph and the subgraph integration between Rada and Superfluid showing the streams between Mark and Kerry. We can also see the threaddb textile integration with IPFS showing that Mark currently has zero events recorded for his app downloads. In order to increase these app downloads, we must imagine a hypothetical scenario where someone wants to download Mark's app, they go onto the App Store and click Download and rada listens to the number of events that are downloaded to check whether or not the payment streams carry needs to be adjusted.
00:06:34.860 - 00:06:59.050, Speaker D: Returning back to the dashboard, we can see eleven downloads for Mark's application over the threshold of ten that he said before. We should increase the payment streams to carry. Moving on to the payments dashboard, we can check this. As Mark navigates to the dashboard, his original 750 die per month stream to carry has in fact increased to 900 die per month. So we can see that the protocol has successfully worked.
00:07:11.120 - 00:07:14.460, Speaker A: This project accept different cryptocurrency.
00:07:16.080 - 00:07:20.320, Speaker E: At the moment, we've only tested it with using Superfluid flow.
00:07:22.980 - 00:07:36.390, Speaker C: Good job, guys. There was a lot of different integrations, which is very impressive. You can answer any of them either what was the most challenging one to implement or what did you have the most fun doing.
00:07:37.800 - 00:08:00.220, Speaker E: I can start very quickly. I worked a lot on the front end and integrating with the Superfluid contracts, and we found it was a really powerful tool. But we said this to Superfluid. We had a couple of challenges getting everything set up and working in a seamless way. There's a lot of smart contract work to do and a lot of small gotchas that we had to work through before we got it working effectively.
00:08:02.960 - 00:08:24.290, Speaker A: Yeah. What do you think is the next step of this project? Like, what do you think in the future as a future plan? What's the next step you want to open? What's missing? You want to focus in the future if you want.
00:08:25.780 - 00:09:02.930, Speaker E: For our point of view, and I'll let Levi follow up. We think that we can build a protocol that can be taken forward in the future to be extended to not just app downloads and not just one currency, but to basically listen to any stream of events and connect it to any stream of payments. At the moment, Superfluid have done a really, really good job with payments, and we think that this can be extended to make proper event driven payment systems like you might see in Google Pay per Click or similar situations. We think that could be something that we would like to take forward and explore further past this. Levi, I don't know if you'd like to add anything. No, you took my answer right out of my mind here.
00:09:08.180 - 00:09:31.336, Speaker A: Okay. Another question. I saw the window, the manager job, and there is multiple buttons there when you show a demo. Is these all these to interact with the smart contract? Okay, yeah.
00:09:31.518 - 00:09:47.820, Speaker E: Essentially for the job there, there has to be multiple signings between the Carrie and Mark in that example, and then that just shows all the different signings that they have to do in a quick and easy presentable way for the hackathon.
00:09:48.720 - 00:10:20.010, Speaker A: And with each signing it limits the number or which specific methods they can call. Like, for example, when a job is created, the job creator can set a bunch of different parameters. But once they choose a final applicant to that job, they get locked out of editing any of those parameters and then they do a sign on that job. And then the developer can submit the work before both of them do a final sign. Or actually just the job creator does a final sign off on it to confirm everything.
00:10:22.380 - 00:10:35.710, Speaker C: Further. Just few things that I noticed as you guys were showing the demo. Is it like 100% decentralized or there's a little bit of centralization right now for convenience, for the sake of user that you guys have.
00:10:36.160 - 00:10:51.120, Speaker E: Yeah, there's a small centralization piece on the API that caches events. And that's the exact thing that we'd like to research, how decentralized the entire data structure, all the data is decentralized. It's just that one bit of logic that we didn't want to run on a smart contract.
00:10:51.960 - 00:10:53.348, Speaker A: Makes sense. Yeah.
00:10:53.434 - 00:10:54.596, Speaker C: Good job, guys.
00:10:54.778 - 00:10:55.764, Speaker E: Thank you.
00:10:55.962 - 00:11:12.650, Speaker B: All right, thank you so much. Now we'll be moving on to the next team. So Team Radha Pay, please turn off your cameras and microphones. You'll be demoted back to attendees soon. And Team Sprout, feel free to begin your presentation whenever you're ready.
00:11:30.280 - 00:12:01.310, Speaker A: Okay, Sprout is a decentralized content platform. Just going to talk over the video here. It's best thought of as a combination of Medium and Twitter, powered by smart contracts on Polygon with content hosted on IPFS. So here's the demo. So you start by connecting your wallet. Once you connect, you're asked to create a new garden, which is a smart contract. That's what's happening here.
00:12:01.310 - 00:12:29.450, Speaker A: Notice that it cost 0.1 matic, which goes to the treasury for the creation of the garden. Once the smart contract has been deployed, you're asked to plant something. This is a content piece, like a tweet, a blog post, or both. The sprout is equivalent to a Tweet. It's a short message. And then there's an image and a title, optional title and a plant, which is a longer form post, like a Medium post.
00:12:29.450 - 00:12:58.108, Speaker A: Once the image has uploaded to IPFS, then you can plant it. And that requires another transaction only gas here, which on Polygon is less than a penny to mint your NFT. And there it is. So here you can see a few features get exposed here. One is you can follow this. And following currently costs 0.1 matic.
00:12:58.108 - 00:13:22.536, Speaker A: 90% of that goes to the creator and 10% to the treasury. You can also like posts, and that's also controlled by the factory contract. But it's 0.1 matic. It costs you less. It's a bit of a micro payment tip that are going to the creators here and a small amount to the treasury for future development. Another button here, you'll see is the sell button.
00:13:22.536 - 00:13:45.680, Speaker A: Now Openc doesn't typically index new NFTs that fast. That's why we got the 404 page here. But I'll show an example of one that was minted a little bit earlier. Here it's going to switch accounts. You can see when I switched accounts, I got to a different publication here. And here we are in OpenSea. We can see the infinite gardens.
00:13:45.680 - 00:14:08.840, Speaker A: Post. There's the image. And here it's already recognized that it's owned by you. And you can sell it, create an auction if you want, maybe as a sponsorship. I think that would be a unique way to do selling the NFTs of your posts and your sprouts. Here's an example of front end based on medium. I call it sproutium.
00:14:08.840 - 00:14:51.796, Speaker A: But all the content from these smart contracts stored in IPFS, shown in a medium type of a format, you have the long form post you can click through to and read them, you can follow, et cetera. And finally there's a Twitter example. Same content but shown as shorter sprouts here, like Tweets. You can like you have the images here, there's images included. And you could even post short sprouts here. And again, less than a penny in gas to mint that and we'll post. And I think that's basically the end of the video.
00:14:51.796 - 00:16:18.270, Speaker A: So in general, I think this is a proof of concept of combining things like blockchain smart contracts, distributed file systems like IPFS, this post to IPFS via the NFT storage service. I think it's just a good example of how in the near future we can combine all these things to do things that weren't possible before. And I'm really excited about the possibilities. I hope this example sort of shows one vision of how that might go in future. Yeah, very cool. How did you manage the data? Did you store them in decentralized? So the way the flow works is first you create, the smart contract gets deployed and the smart contract holds the NFT tokens, including the token Uri that is basically an IPFS link to a JSON file, that is the content of the post. So the JSON file in IPFS has a link to the image and the short message, the long message, which is included.
00:16:18.270 - 00:16:27.620, Speaker A: Markdown support is included for that and it's stored on IPF in a decentralized manner. Nice.
00:16:29.350 - 00:16:38.040, Speaker C: Yeah, this is pretty cool. I think I've seen a lot of implementations. It's awesome that you've I mean, it looks like you're the solo hacker on this project, right?
00:16:38.490 - 00:16:39.602, Speaker A: I am, yeah.
00:16:39.756 - 00:17:01.920, Speaker C: Two different things. Great use of IPFS plus Maddok and getting these themes in place, which is, I think, more important to attract people. So I'm curious about do you wish to pursue this and would you sort of work on it by yourself? Sort of get community involved? I'm very curious about that. I think technically I sort of understood most of it.
00:17:02.610 - 00:18:03.794, Speaker A: Yeah. I think, as I said, it's a proof of concept and if people are interested, I'd really like to have others join my vision for it could be sort of an open source software project. I sort of give examples of Medium and Twitter, but it's also like WordPress in a way, but a decentralized way, WordPress. So I can see even a Dao operating sort of managing and governing both the software development as well as the factory contract. And it's a DeFi component here where I call it yield gardening. So that's a unique aspect here where you can publish, you can earn Maddox when people follow you and like your content, and you can claim that I didn't do a claim transaction in the demo, but that all works as well. So I think that one thing it needs for sure is web design.
00:18:03.794 - 00:19:01.030, Speaker A: I've leveraged some web templates and frameworks here to show the proof of concept. But definitely with a team of people, it can be expanded, a better UI with a proper markdown editor, and there are other features and tokenomics to consider. Right now, it's Maddox and the prices are fixed. That's probably not feasible in production. Maybe it's an ERC 20 token rather than sort of the base currency of the chain and that the Dow would sort of manage that and govern the prices and things like that. I have a question. When you click, like you said, you tip who post the article or the tweet.
00:19:01.030 - 00:19:39.730, Speaker A: If I press, like, can I modify the tip? Or it's like a fixed number in the demo and the prototype, it's fixed. But that's an interesting question I've thought about, and it's an open question. I mean, should creators be able to set this or should it be fixed but set by the Dow? I'm not sure what the answer to those are, but those are things that would probably need to be discussed and figure out. But, yeah, it's an interesting consideration.
00:19:44.310 - 00:19:59.734, Speaker B: Right, so that's seven minutes up, so I have to stop there. Great presentation, though. So, Team Sprout, if you can turn off your cameras and your microphone and then we'll move on to Defy Gulak 1.0.
00:19:59.772 - 00:20:07.990, Speaker A: All right. Hello. I'm audible.
00:20:08.570 - 00:20:09.800, Speaker B: Yes, you are.
00:20:10.330 - 00:20:52.480, Speaker A: Hi, guys. Hi. So let me share my screen. I start with first video, right? 35 project okay. Hello. Where you can create a basket or particular token or currency, and then you can lock them for the particular time period. After a particular time period.
00:20:53.380 - 00:20:54.690, Speaker B: Can you pause for a second?
00:20:55.720 - 00:20:56.644, Speaker A: Hello? Yeah.
00:20:56.762 - 00:21:05.450, Speaker B: Could you mute your microphone while playing the video? Because there's a little bit of feedback. So there's an echo when you start playing the video, just mute your microphone. That's okay.
00:21:06.860 - 00:21:08.730, Speaker A: Let me check. Sure.
00:21:10.460 - 00:21:12.504, Speaker B: That's too difficult. Don't worry.
00:21:12.542 - 00:22:04.562, Speaker A: Yeah, sure. I understand. Holding is approved one of best residual crypto because you can see what is the price before four year. If you have the holding power, then you can so basically, we will give that to you. So let's go to what are the tools and technology we have used? Actually, so we have created a smart contract basically here so we can see what is the DeFi we have defined here link and as a token choose required earlier. Okay, so the smart contract is here. We have tested actually and we have get the reference from several other projects here also.
00:22:04.562 - 00:22:32.254, Speaker A: So yeah, this project is a factory contract and yes, factory contract basically create good luck to us. So it is deployed on the polygon scan. It is also deployed also we have created a subgraph for that particular contract. So, here is subgraph and here you can see the subgraph. Here is currently two detail. I think now it should come like three detail. Yeah, here it is.
00:22:32.254 - 00:23:17.786, Speaker A: So you can see the address of the contract and all that. We can check also over the polygon scan. So yeah, let's go to the website. We can see on the home page basically we can see different currency, what price. So if you want to create for that z Quick and these are the currency which currently we are giving on the polygon scan network. Okay, so let's see first do the transaction also currently we are get here the transaction. Okay, you can create your wallet.
00:23:17.786 - 00:23:45.720, Speaker A: So let's create one of Quick. Let's create for ybts because I think ybt we don't have maybe because let's create Quick because Quick is I think we did not register Quick and you can select the date. Okay. And you can select the bonus token. Maybe you get bonus. Okay, let's create this. So metamox will pop up.
00:23:45.720 - 00:25:12.562, Speaker A: Sorry for that. Yeah, I think metamox will pop up. It should come. Yeah. So let's go to help and come again. Maybe we can find this data which is coming from subgraph actually I think currently I think there is an internet connection issue. So we open website previously we are getting three data now I think it is coming four it it it you can see new here.
00:25:12.562 - 00:25:29.050, Speaker A: Transaction is gone from here also you can see new yeah, that's it. Actually video is little bit I have recorded at late night demo of this.
00:25:29.120 - 00:25:39.360, Speaker C: Somewhere that we can see later, maybe not right now. I have a question but I was just wondering since it looks like you've completed some parts of it but the video wasn't very clear.
00:25:40.450 - 00:25:42.462, Speaker A: Yeah, I have the link demo link.
00:25:42.516 - 00:25:44.142, Speaker C: Okay, I'll check it out.
00:25:44.196 - 00:25:44.798, Speaker A: Awesome.
00:25:44.964 - 00:25:56.100, Speaker C: Just like basic questions. How are you sort of analyzing the APIs on these things? Especially when you go into production? What do you have in mind to solve that?
00:25:57.190 - 00:27:43.174, Speaker A: Currently we actually taking the reserves whatever the token which user give based on the reserve. Like if the gulag size is very large according to that, people get more rewarded. Based on that more people can join more reward and more that part and other ill part. Currently we had not decided as Aathan project but we can try to do the farming on the compound and other projects. So we can earn more money without holding that on the smart contract only but that part which not done it but because just as currently we have the concept for the holding part because I am in Crypto from following like a 2018 the prices keep moving fast but people don't have a patient right now to holding their currency on their wallet on MetaMask. If you have MetaMask you can spend anyway on any Ido or somehow but if you can keep on smart contract and hold it for some and get extra other token also so it will be rewarded actually yeah. How is it when and the team when there is set lock window can be this modifier or manageable or just 30 that means it's 30 days? No, then it will it is locked for the amount and duration which has for that you cannot hold withdraw in between.
00:27:43.174 - 00:28:43.080, Speaker A: So that's actually the holding part before the starting the website you get the info where you can see that you can hold that particular amount and it will have the expire amount of this date. It will expire but I'm thinking about the redeem amount also redeem part also like people can redeem in between like 30 that they don't have to hold but in between they have to redeem their amount so I think they have to pay the extra fee. That concern came into my mind after seeing other apps also so yeah that we can add in the future project. Currently it is a fix if it is 30 days gulak anyone can create on Gulak. So yeah, you can invite your family member to hold the crypto on that particular wallet for particular amount of time and can reserve their token over there but here currently not in between, you can get that amount.
00:28:46.110 - 00:28:49.882, Speaker C: And do you wish what is it that's missing right now?
00:28:49.936 - 00:29:01.134, Speaker A: 1 minute sorry actually I'm living near.
00:29:01.172 - 00:29:12.100, Speaker C: The airport no worries I have an air base close to me as well what is it that's missing? Let's say before you maybe can launch this in production. I'm very curious about it.
00:29:13.190 - 00:30:47.114, Speaker A: Yeah, I have two, three things. Like I have to create our own token where people can earn that token as an initial whoever joining the projects so as a reward they can get extra token so that more people can get with holding the creating gulag also get like currently you get other token. So instead of in that token, you can extra get the other token also there how is the reward system works? When you say reward, how does it work currently? What is there? We have the reserve tokens on the other part so currently we have two, three gulak on the platform right? Suppose currently I am thinking this way like we have the gulak of quick they have the expire in 30 days for example and other have the gulak of like expire in 20 days so I have already have that. Token in my hold, which I have to give after day. And previously I have to give the 20 day people that reward token. So I will take that token from that there, and for them I can give their yield. Whatever the extra yield generated from there for longer period tokens, I will give him them to smaller period of holders.
00:30:47.114 - 00:31:13.810, Speaker A: To them, it is not a small, big bonus, but it is a little bit bonus like you. Can say for if you're holding a ten token you can get 0.1 quick only it is currently the small yeah but it will get from reward from the wet we have the larger bullock and so based on that some of the thing which we get. So all the shiba.
00:31:30.370 - 00:31:34.510, Speaker B: If you can turn off your camera and microphone, we'll move on to Team Blizz.
00:31:35.810 - 00:31:36.880, Speaker F: Hey hello.
00:31:38.610 - 00:31:44.094, Speaker A: Hi, let's start. Hi.
00:31:44.132 - 00:32:24.030, Speaker F: We are Bliss team. We are a company that helps game developers to integrate NFTs into their games. And in this hack we are going to show you our latest development, an NFT that can evolve, ready to use in the V eight in video games. So let's start to see what is an NFT that can evolve. We are going to create an NFT. So we are going to start creating a regular NFT. So we are going to create the NFT with the image, the description, the quantity and now we are going to add evolution to this NFT.
00:32:25.410 - 00:32:26.160, Speaker A: So.
00:32:27.970 - 00:33:11.930, Speaker F: We are creating the first evolution and we are going to create a second evolution. So this is our NFT. With the evolutions we are going to mint the NFT as a regular NFT. In the blockchain we confirm the transaction and these NFTs we are going to see right now how to evolve the NFTs. So there are two models, two ways to evolve the NFTs. We try to simulate two business models in the game industry. First way to evolve the NFT is playing.
00:33:11.930 - 00:34:23.478, Speaker F: We want to simulate a free to play mode. So imagine the player has this NFT, he's in a game, he's playing with this NFT and when he achieves some mission, gets some gold, the game rewards the player with an evolution code. This is an evolution code, this is just an IPFS has. So with this evolution code that the game gives to the player after achieve some gold, the player goes to our web page and with this code he can evolve the NFT. So as you see, we are going to launch one transaction and this NFT now with this evolution code is going to evolve to another NFT that has different properties, is more powerful, so it's increasing in value and utility into the game. So this is a good way to create a free to play model with NFTs. But there's a second way to evolve an NFT that is paying.
00:34:23.478 - 00:35:28.310, Speaker F: This is the pay to win business model in games. So to pay for evolve this NFT, we need a payment code. This payment code can be get in the video games web page. So we are going to use one of them. So imagine you go to the game and in the game there's a code that say, okay, with this code if you pay one ether, you are going to evolve this NFT to the most powerful version. So we get the evolution code, the payment code and in our web page just launch a transaction with this evolution code and the NFT is going to change to the most powerful version. So we are waiting why this is evolving and we see the NFT has evolved.
00:35:28.310 - 00:35:46.430, Speaker F: So these NFTs, we think we can use them in the video game industry and this is a way to encourage video game creators to use IPFS and blockchain technologies. So we hope you've liked this demo and thank you very much.
00:35:46.580 - 00:35:47.390, Speaker A: Bye.
00:35:50.630 - 00:35:51.380, Speaker F: Okay.
00:35:58.630 - 00:36:14.390, Speaker A: Yeah, very cool. And when you say that layer achieves some goals, is it based in other platform games?
00:36:14.970 - 00:36:45.170, Speaker F: Imagine you are playing yes. Imagine you connect to a game, you get the basic NFT and you start to play and the game say, okay, the ten first players who defeat this monster in these conditions, I'm going to give them an evolution code to reward them. And then only these ten players can evolve the NFT and the other players have to pay if they want to evolve the NFT. This is to encourage the free to play model in video games.
00:36:45.750 - 00:36:46.740, Speaker B: Oh, nice.
00:36:51.430 - 00:36:52.340, Speaker A: Go ahead.
00:36:53.050 - 00:36:58.022, Speaker C: So the game developer is generating these unique codes, right? That you're yes.
00:36:58.076 - 00:36:59.238, Speaker F: The game has an API, like a.
00:36:59.244 - 00:37:02.070, Speaker C: Redeeming how we used to do it for skins.
00:37:04.570 - 00:37:23.630, Speaker F: The game has an API or SDK. We rate them. So in that moment they generate they sign a message and generate evolution code. It's just sign a message and store the result in IPFS. So in this moment of life, they review the code. But you have to pay the gas to evolve the NFT.
00:37:24.930 - 00:37:31.346, Speaker C: And how are you preventing I mean, these codes can't be on the blockchain, right? Because anyone can.
00:37:31.448 - 00:37:46.310, Speaker F: The code only works for the player. The address of the player is inside the message. We signed, the regulator signed. So if you pay the last of this message, you are going to evolve the NFT of this player, not your NFT.
00:37:49.530 - 00:37:51.400, Speaker A: Have you tried that game?
00:37:52.970 - 00:38:04.860, Speaker F: We are trying. We are talking with game developers and we have a company that use NFT and interacing games and we are just looking for a game that wants to try this technology.
00:38:05.970 - 00:38:07.360, Speaker A: Awesome. Nice.
00:38:10.210 - 00:38:20.100, Speaker C: It's a very nice use case. If you can get it to ship and then sort of you're trying to do the evolution around it. Yeah, it's fun. Nice. Good job.
00:38:21.110 - 00:38:22.420, Speaker F: Okay, thank you.
00:38:23.110 - 00:38:24.100, Speaker A: Thank you.
00:38:25.270 - 00:38:47.914, Speaker B: So if there's no more questions then I guess feel free to turn on. Thank you so much for your. Presentation. Feel free to turn off your cameras and microphones and we'll move on to the next team. So, yeah. Next team is Bald NFT Storage. So as soon as you are ready to go, feel free to present your screen.
00:38:48.112 - 00:40:10.760, Speaker E: All right, how's it going? A backend system for storing NFT metadata on NFT storage. We use a local Http server to serve the data. Then we use the NFT Storage client to serve up that data and push it up to NFT Storage. We can see we've now pushed the data up to NFT Storage, refreshing the browser. We can see our asset created an ERC 720 derivative and upload it to Rink B test network using Ethers. Now the contract has been deployed on Etherscan. So the next step is to try minting a token using JavaScript.
00:40:10.760 - 00:40:42.260, Speaker E: So we can see token has been minted, see it on the Rinkp Ether scan and we can now go and see if it will show up on OpenSea. It turns out that our NFT Storage NFT is now listed on OpenSea and all of the properties also went through.
00:40:58.960 - 00:41:17.960, Speaker C: I was curious sort of what was technically the most challenging part here for you guys. I saw you guys use Hard at bit of Solidity and then sort of pushing things to IPFS and I think I also saw deals. So which means you're using five coin right behind the scenes.
00:41:18.620 - 00:41:19.370, Speaker A: Yeah.
00:41:19.740 - 00:41:59.844, Speaker E: So it actually wasn't that hard because the first thing I went to was the Protocol Labs talk and they talked about NFT Storage. So all the stuff that I thought I was going to have to build just kind of existed. So I just uploaded everything to there. I have a really demanding job, so I just kind of use this as more of a way to build out the systems, you know, helping some friends launch this NFT collection. So kind of the goal was just a way to sort of automate that process.
00:41:59.962 - 00:42:19.180, Speaker C: What was the part that you had to sort of work on? And it's actually a good thing if you're able to reuse existing services because then you're reducing the complexity of, let's say verifying what you have done. But what I'm trying to also understand is what makes you different so that you can launch this as an actual platform for many others.
00:42:19.250 - 00:42:19.870, Speaker A: Right?
00:42:20.800 - 00:42:35.760, Speaker E: Well, I don't know if that's not my goal. Maybe that's wrong for me to be here. It's all on GitHub, but just like it's there an easy way to just a template that people could go up.
00:42:35.830 - 00:42:37.568, Speaker C: That's awesome. That's even better.
00:42:37.734 - 00:42:59.370, Speaker E: Yeah, just load up. Basically all they would have to do is fill a JSON with or sorry, just a directory with the images they want and also metadata. And then run that server and run those three scripts and deploy all this stuff. So if someone wants to use that.
00:43:00.700 - 00:43:06.380, Speaker A: Is this limited just to upload file like with the NFT?
00:43:08.720 - 00:43:45.320, Speaker E: Yeah, I mean, I made a custom smart contract, so the bigger thing here is I want a gumball machine effect so they have, like, a limited set of characters and want it to mint in a random way. So kind of like you're opening a pack of cards. So there's a lot of custom stuff in the smart contract that I'm working on to do that. But mostly I didn't know how to store NFT securely, so I joined this, and now that's why I made yeah, I don't think it's, like, groundbreaking.
00:43:47.820 - 00:43:58.620, Speaker A: What are the next step for this project? What do you think? It's really nice project. I really liked.
00:44:00.480 - 00:44:28.948, Speaker E: Well, I guess the project is the NFTs. The creep kids. NFTs are kind of this set of characters based off classic American horror movies, but they're kids kind of trying to match that gap between Garbage Pail Kids and sort of crypto punks. So that's like, the big project, and that will get lots of promotion and all that stuff. But I just needed to build the kind of backend system for that.
00:44:29.114 - 00:44:31.030, Speaker C: Do you see it like a developer tool?
00:44:31.720 - 00:44:32.708, Speaker E: I'm sorry?
00:44:32.874 - 00:44:42.136, Speaker C: Do you see it as a developer tool that you would want to publish on? I mean, you've already pushed it on GitHub, so I was curious, how do you want to maintain it? I think that's what Anwar yeah, I.
00:44:42.158 - 00:45:01.920, Speaker E: Definitely would like to clean it up more and just have it be more something people can just use. Swap it out with any ERC 721 and there like I said, they just pop the stuff in a directory and then it all happens. So, yeah, just try and keep the open source community alive.
00:45:02.340 - 00:45:03.090, Speaker A: Yeah.
00:45:03.460 - 00:45:04.450, Speaker C: Good job.
00:45:04.820 - 00:45:05.570, Speaker E: Thanks.
00:45:10.020 - 00:45:15.872, Speaker B: All right, if there are no more questions, we'll move on to the next team. Thank you so much, Lucas, for your presentation.
00:45:16.016 - 00:45:17.030, Speaker E: Take it easy.
00:45:19.320 - 00:45:25.690, Speaker B: Now, Team Saturn. Feel free to present your screen and start your presentation whenever you're ready.
00:45:27.660 - 00:46:29.180, Speaker G: Hello there. Introducing Saturn, a peer to peer file sharing application without any limits. Think we transfer, but way better. The problem is that today's file sharing system is broken in web two authenticating the prevalence of a file is impossible without relying on trusted and siloed third party. But web3 is bringing new opportunities with new infrastructures, like IPFS, a peer to peer storage system based on content Identifiers, therefore providing immutable addressable data. We have Falcons, which is a new economic incentive layer for data to be stored on IPFS. And we have decentralized identity protocol, such as three ID connect from ceramic, which allows the creation of a generalized trustless identity with any blockchain wallet to authenticate as a user.
00:46:29.180 - 00:47:15.224, Speaker G: This is why we are introducing Saturn, the simplest way to send unlimited files around the world in a trustless way and with a certified prevent. To use Saturn, a user needs to connect to the three ID connect system with a signature from their ethereum wallet to create an account. They then sign a second proof that links their Ethereum address to a did. They can then upload a file and enter a list of intended receivers to log the content. This is optional. The file will get uploaded on IPFS through web restoreage. This upload will be signed with his Ethereum address and accessible by anyone with the transfer link.
00:47:15.224 - 00:47:49.060, Speaker G: The file transfer history is tracked using seremink's streams, streams that are linked to the user, the ID, and therefore to their Ethereum address. Let's see that in practice. Okay, so here we are on our website, which is deployed on click on IPFS. The user can just connect the wallet. MetaMask wallet, for example. It will then be prompted to connect to the three ID. So I can connect with a new ID because I don't have one with this MetaMask account.
00:47:49.060 - 00:48:41.316, Speaker G: All signed to control my identity through this decentralized identity protocol. And now I can link my identity to my Ethereum address through my MetaMask. Once finished, I can do the final signature. And now that I'm connected, I can start uploading a file. For example, upload my beautiful penguin. Can I title penguin with my message? Hey, check this out and then transfer. So, very simple.
00:48:41.316 - 00:49:24.710, Speaker G: It's very similar to we. Transfer will be uploaded and once uploaded on IPFS through the web3 storage, a link is then created and this link can be copied and shared. So for example, if I open a new tab, I can then go there, say, okay, here's the penguin, I check this out. What's interesting is I can have the wallet address sent me this file, so I can prove, check the provenance, I can have the ceramic link proving the stream of information and then I can just download the files and there we go, we have it.
00:49:32.110 - 00:49:32.860, Speaker B: Nice.
00:49:37.490 - 00:49:41.440, Speaker A: Did you encrypt the file or just transfer us?
00:49:42.690 - 00:50:19.260, Speaker G: No, the file is not encrypted, so it's publicly uploaded on width on IPFS. It is. One of the next steps is to have a full encryption using ceramic and IPFS. They are providing tools for this, but we have added the features where you can add the list of intended receiver and then the file is locked to only the people who has the right ETM address. But this lock is only on our website directly to log the contents. But it's still a new cool feature that we didn't show in the video.
00:50:21.310 - 00:50:22.060, Speaker A: Nice.
00:50:24.350 - 00:50:50.180, Speaker C: Sorry. Yeah, that looked pretty cool in terms of I think I was trying to see how the recipient check is done. So is that something because we have to look at how end users want to use it, right? Who don't really understand wallets. So the easiest one is an email. Correct? That's generally how we transfer things anyway. Like the first thing I do is I take a dropbox link and then I share with people. That's the easiest thing I do these days.
00:50:50.180 - 00:51:13.222, Speaker C: So is that something you guys can prevent. I think with an email link, with a unique link, it's fine because it's secret enough and you can have a timer or something. But I think how Anvar said about encryption and then how do you make that? I'm very curious how you plan on making it easier for end users to sort of have something private, even if it's not fully encrypted.
00:51:13.366 - 00:51:56.250, Speaker G: Yeah, for the privacy, it means that the user has a blockchain wallet. In some ways, anyone can connect on the website and still use it, download files and share it, but it will not be encrypted. But for the encryption with ceramic and IPFS, you have a way to include the blockchain wallet address, public wallet when downloading the files and therefore it will be encrypted with this public key and only them connected with the right accounts can decrypt the files. So this is the main requirements and this is the main features that we have with Ceramic and IPFS.
00:51:58.030 - 00:52:23.460, Speaker A: Nice. Also it's interesting topic. Now, sharing something like file or like transfer, like considering also the time limit for sharing something if you sign it, it's a big topic. It's also dependent in a decentralized storage itself. Can handle these things with the signature. Yeah, it's really cool.
00:52:25.590 - 00:52:32.370, Speaker C: Do you guys plan on monetizing the service or would it be something fully decentralized?
00:52:33.350 - 00:53:16.290, Speaker G: For now, it's something that can be fully decentralized and because Filcon is fairly new and everything is, we can host most of the thing on IPFS and for not that much. So we don't have a lot of costs, so no much commercialization. But there is an ID where you also include for the receiver a signing of the document, kind of a proof of downloading of the files. And there you start having kind of business contract features for dows to utilize, where the dows sending the files will authenticate the sending and the dows receiving the files will also authenticate the receiving. So we had some idea of starting in this direction. Could be quite interesting, providing utility.
00:53:18.390 - 00:53:19.154, Speaker A: Good luck, guys.
00:53:19.192 - 00:53:20.614, Speaker C: That was pretty good demo.
00:53:20.812 - 00:53:21.894, Speaker A: Very nice.
00:53:22.092 - 01:04:46.732, Speaker B: Thanks. Thank you so much. So feel free to turn off your cameras and microphones after this team. We're going to take our ten minute break. So yeah, see you guys back here in ten minutes. I'll put a two minute warning in the chat just like so everyone is aware. All right.
01:04:46.732 - 01:05:23.700, Speaker B: Hello everyone. Ten minute break is over. So judges, if you could turn on your cameras, turn on microphones, and we'll start with the next team who should be let me check real quick. Team out of the ether, if you could please raise your hands. All right, so you've been promoted to panelists. Feel free to present your screen and start your presentation whenever you're ready.
01:05:25.350 - 01:05:46.374, Speaker H: Yes. Hi. I'm going to be speaking over the video, if that's okay. So you should be able to see my screen. So out of the Ether is just a proof of concept for one click NFT Minting of the current application state. Excuse me. So what you see here is just scaling rectangles out of an Ethereum logo.
01:05:46.374 - 01:06:39.290, Speaker H: It's more so just meant to convey that there's this animation taking place and you can one click Mint, a static NFT of the current animation state. So in the application, as you see, you can click Mint. You can complete the transaction through an injected wallet and the image data is stored in the IPFS and an NFT is Minted. And also in this application, there's just a wallet, basically just to see your collection of Minted NFTs for the address. So you see there, that's the NFT that was just Minted. And that's about it. I'll stop sharing.
01:06:43.970 - 01:06:47.422, Speaker A: Any challenges of difficulties you face.
01:06:47.556 - 01:07:27.260, Speaker H: Sure, yeah, relatively. Right. For what it's worth, I started the hackathon a little bit late and I was working alone. I'm pretty comfortable with front end development. I have a lot of experience in DeFi, et cetera, but I'm new to Solidity, so this was sort of my first app to just get moving. So I use Scaffoldies and a bit of my time was just spent getting comfortable with the code base, learning the integration, et cetera. So I suppose to answer your question, just sort of the full integration of yeah, cool.
01:07:27.630 - 01:07:37.340, Speaker A: Do you enjoy it? I see the front end. It's beautiful. In terms of working the smart contract, do you enjoy it?
01:07:38.450 - 01:07:38.910, Speaker H: Definitely.
01:07:38.980 - 01:07:39.166, Speaker A: Yeah.
01:07:39.188 - 01:07:57.010, Speaker H: I mean, there wasn't too much actual solidity work here. Smart contract work. It was literally just the Minting of the just for what it's worth. So the canvas itself is being converted to a data Uri and then that's being stored in IPFS.
01:07:58.410 - 01:08:01.560, Speaker C: Hey, Ali. It was very cool demo.
01:08:02.890 - 01:08:03.842, Speaker A: I was curious.
01:08:03.906 - 01:08:14.614, Speaker C: So it's completely random, right? Like you're just like sort of whenever I Mint, the chances of what I'm generating is most probably unique because what you're generating using canvas.
01:08:14.742 - 01:08:20.970, Speaker H: Exactly. So it's whenever the interaction actually gets propagated. Yeah, it'll mint one.
01:08:21.040 - 01:08:51.894, Speaker C: And since you mentioned, I guess you didn't have much time, I was curious about the user interface. Since you're a front end designer, are you planning on sort of improving that? Because this looks more like one of those fun hacks which is less about trying to prove a point. And that's kind of how NFDS are popular too, right? Because a lot of people started having fun with it. So I could see that element. So I was very curious, if you had more time, so let's say post the hackathon, what would you want to sort of improve on?
01:08:52.012 - 01:09:33.570, Speaker H: Yeah, I appreciate it. So the next iteration, so to speak, so this was sort of more so a proof of concept. The next iteration would be to actually create a little bit more of an evolved game and basically implement this as a feature to allow capturing screenshots of the game state. And perhaps more generally, just taking that principle of, for example, just as a Chrome extension for being able to mint an NFT of whatever the window the browser windows state is. But that would be the next just actually creating a game and then implementing this sort of as a quote unquote feature would be one idea that you used for this. Pardon me.
01:09:33.720 - 01:09:37.074, Speaker C: What tools did you end up using to get the hack to work?
01:09:37.192 - 01:09:50.490, Speaker H: I used Scaffold ETH boilerplate and expanded from there. So, I mean, that includes hard, hat, ethers, JS, et cetera.
01:09:51.390 - 01:10:06.574, Speaker A: Now, when you do screenshot and you meant it, is there a way to modify the screenshot or it's run with the Mint when you capture it with the Mint, yeah.
01:10:06.612 - 01:10:23.310, Speaker H: So from actual event propagation in the browser to conclusion, it's straight through the pipeline of converting the image and minting the NFT. So there's no opportunity here to edit the image.
01:10:23.390 - 01:10:24.020, Speaker A: Okay.
01:10:25.590 - 01:10:27.142, Speaker C: Which I think is the fun part.
01:10:27.196 - 01:10:27.366, Speaker A: Right?
01:10:27.388 - 01:10:29.846, Speaker C: Like, you're just capturing the what do.
01:10:29.868 - 01:10:39.046, Speaker H: You get sort of mean. The animation is not too involved at the moment in what you saw, but.
01:10:39.068 - 01:10:45.818, Speaker C: It could be like gamified. Like, I was thinking of how you could have certain more randomness. That's basically what you're trying to create here, right?
01:10:45.904 - 01:10:58.554, Speaker H: Sort of. So, for example, let's say in the next implementation, it's like creating Conway's Game of Life and being able to take a screenshot of the tick states of because that's a little bit more of an intricate UI.
01:10:58.602 - 01:10:59.902, Speaker A: Makes more sense. Yeah.
01:10:59.956 - 01:11:00.846, Speaker C: Pretty cool.
01:11:01.028 - 01:11:02.400, Speaker A: All right. Appreciate it.
01:11:03.090 - 01:11:04.000, Speaker H: Thank you.
01:11:05.730 - 01:11:44.190, Speaker B: So if there's no more questions, we're going to move on to the next team. Thank you for your presentation. And then the next team will be Internal Story. So I believe you're already promoted palace, so feel free to turn on your camera or microphone and then present your screen whenever you're ready. I'm sorry.
01:11:45.040 - 01:11:45.356, Speaker A: Okay.
01:11:45.378 - 01:11:46.110, Speaker B: There you.
01:11:46.500 - 01:12:37.920, Speaker I: Yeah. Hi. So I'm from the team Internal Story, and our idea is to provide a platform of decentralized inventory management system, kind of like Shopify. So the plan is to help move from web two to web3. And we see a lot of stories in news that Amazon servers went down and some of the businesses were totally affected, and they incurred a lot of losses. So in order to avoid that, my plan was to provide some alternative or kind of like a clone of Shopify in decentralized world. Okay, so let me get started with the presentation.
01:12:37.920 - 01:13:06.300, Speaker I: Okay, so here's the video that we made. Give me a second, please.
01:13:22.840 - 01:13:30.650, Speaker B: I cannot hear any audio from the video. Did you make sure to check Share Sound when presenting your screen?
01:13:31.340 - 01:14:29.396, Speaker I: Yeah, I did. Let me try that again. Simple platform for Shop owners to manage their store and sell their products and make transactions and using crypto. So here we have created a simple website where this is a simple landing page. And in this we have three pages, which is where they can manage products. We are using textile. So in order to each owner will have their own bucket in which all of their data is stored in that threaddb database provided by Textile.
01:14:29.396 - 01:15:25.592, Speaker I: So here we can see the owner can add a product name, brand image, URL for the thumbnail and product ID. They can create a product, update the product, and delete product. In order to update and delete product, they would need to provide a product ID which is provided by the owner. And here, all the products are listed which are uploaded in the threaddb database. And you can see all of the we have used dummy data happy Socks. So all of the different socks are here. And this is a payment window where we ask our buyers to make transactions to this wallet address and they can copy it and paste it in their wallet to make transactions.
01:15:25.592 - 01:15:40.850, Speaker I: We verify this transactions using Etherspot SDK Events and we can make sure whether the user transaction went through or not. So that's a project. Thank you.
01:15:50.900 - 01:16:16.440, Speaker A: Yeah, it's kind of marked or something like this. When you say there is two things you said delete from when you say delete, you mean delete it from Wave. When you say there is a button for deleting, I cannot leave you're muted.
01:16:19.680 - 01:17:11.692, Speaker I: Okay, thank you. So deleted from the database. So there are two parts for this project, and one is kind of like the admin thing, and another front will be front end, where buyers can view all the items that they can buy and make a transaction, send the transaction to the wallet address. And so what you saw was the kind of like admin based where people can add in their products and update it and then delete it from the database if the item is no longer made available for users to buy. For buyers to buy. And we have still more milestones to achieve in this. The admin board needs to be added, more features needs to be added, and kind of like polished a bit.
01:17:11.692 - 01:17:19.100, Speaker I: And also a front end thing should be added. So that's the plan for the next features.
01:17:20.820 - 01:17:27.410, Speaker C: I think I missed the part about how you guys were collecting payments. Is this some third party that you were using?
01:17:29.700 - 01:17:50.264, Speaker I: We use Etherspot SDK, so we are generating a wallet address and we would be using events for that kind of like a third party. We didn't create any wallet or payment contracts. And another feature which different chains and stuff.
01:17:50.302 - 01:18:08.412, Speaker C: I guess because you wanted to support all kinds of crypto payments. I'm just curious. Not that it was core focus of the project, but did you guys figure out if you could sort of use like either an ERC 20 or maybe even the native token? I was trying to check what's the stack you guys used.
01:18:08.466 - 01:18:08.732, Speaker A: Okay.
01:18:08.786 - 01:18:18.464, Speaker C: You guys are using Polygon so there was Maddox, which is the de facto token. Or you could go with a more stable coin payments to collect that as well, right?
01:18:18.662 - 01:18:40.250, Speaker I: Yeah. So first, initially we plan just to use some stable coins like tire USDC so it would make it easier to keep it in sync with the real world right now because we haven't transitioned whole to web3 crypto world. So yeah, first we plan on using some stable coins and then maybe support some tokens which we would want to.
01:18:44.620 - 01:18:52.780, Speaker A: What kind of database do you use? When you say database, is it central decentralized?
01:18:53.760 - 01:19:36.244, Speaker I: Yeah. We are using Threaddb from textile. So one of the challenges which we faced was to implement the Cart system. We were figuring out how do we add on schema, how do we design schema for that? Because when we add in Cart and the transaction comes to place in the whole ecommerce thing, we can manage all the products database until up to carp. But when we add transactions, non asset based databases shouldn't be used to manage transactions. So it wouldn't make sense for us to use non asset compliant databases because threaddb is document based. Kind of like MongoDB.
01:19:36.244 - 01:19:49.150, Speaker I: So we kind of got lost and took us a while to figure out. But we still implemented it in three DB, but the functionality is still to be fine tuned and added on to it.
01:19:50.420 - 01:19:56.370, Speaker A: Nice. Just a quick one. Is it the ID? The product ID is in a smart contract. Also.
01:19:58.180 - 01:20:01.328, Speaker I: We haven't implemented any smart contracts yet.
01:20:01.494 - 01:20:05.636, Speaker A: Okay. It makes sense. Okay.
01:20:05.818 - 01:20:06.260, Speaker I: Yeah.
01:20:06.330 - 01:20:08.470, Speaker A: Okay. All right, thanks.
01:20:08.920 - 01:20:12.390, Speaker I: Yeah, thank you. Any other questions?
01:20:13.320 - 01:20:20.730, Speaker B: Actually, I'll have to stop it. Sorry? Because it's seven interrupts so I'll have to stop it there. But thank you so much for your presentation though.
01:20:22.860 - 01:20:25.080, Speaker I: Yeah, thank you. See you guys. Bye.
01:20:27.500 - 01:20:39.630, Speaker B: So we will now start with the next team, which will be team three NFT. The airtable says to ask you to add subtitles to your video when you present it.
01:20:40.640 - 01:20:56.092, Speaker A: All right. Reimagine is an NFT. We use repurposed to currently NFT like photo audios.
01:20:56.256 - 01:20:58.010, Speaker B: Could you turn on the subtitles please?
01:20:59.100 - 01:20:59.896, Speaker A: Sorry?
01:21:00.078 - 01:21:09.690, Speaker B: Would you be able to turn on the subtitles? Yeah. All right, thank you.
01:21:11.900 - 01:22:09.576, Speaker A: Reimagine NFT is an NFT reuse repurposed to currently NFT like photo videos, audios and other digital files are only used for an avatar, personal entertainment or either inside wallet or blockchain. NFT can achieve more than that. Use it in your daily life. Embed the photo music video into the invitation, email, digital postcard or zoom virtual background and more and share the beautiful NFT with friends and family. And after connect the wallet, you can burn NFT or create a new design into an instagram post, postcard or whatever. From here you can see your NFT collection retrieved from the Covalent API. Instead of direct burn, the NFT user can create a memento of NFT before burn.
01:22:09.576 - 01:22:44.490, Speaker A: It may various, but it's still fun to do it. In this demo, there are two sides of frame for the NFT memento. After done editing, you can click on the button burn admin and the new NFT is created. Next, we can create an Instagram post or postcard with NFT. It's like a canva for NFT. With this image editor, you are free to edit your NFT up. You can add in text on it.
01:22:44.490 - 01:22:56.830, Speaker A: After complete the editing, you can mint a new NFT, send to your friend directly, or let them redeem with a unique link. Renft reimagine. NFT. Thank you.
01:23:03.250 - 01:23:14.670, Speaker C: So that was a good demo. I was curious, so is that editor that you seem to have built, is that something you built from scratch for creating all the NFDS?
01:23:15.010 - 01:23:19.890, Speaker A: No, this editor is an open source plugin. Nice.
01:23:19.960 - 01:23:28.434, Speaker C: And it can sort of do multiple things. Is it is it only for pictures or is it also like I was trying to understand what currently I think.
01:23:28.472 - 01:23:33.080, Speaker A: It'S only for picture. Got it. Yeah.
01:23:33.530 - 01:23:39.800, Speaker C: And how are you connecting that to the like, what other stack are you using to connect this?
01:23:40.170 - 01:24:17.380, Speaker A: Just react and I'm using the hard template. Did you store this NFT photos somewhere? Where did you currently not yet, because I started this project quite late, so I only half day to complete it. Oh, nice. That's good. That's really good. Did you enjoy your sorry, did you enjoy your project? Yeah. Okay.
01:24:17.830 - 01:24:33.370, Speaker C: What is it that you wanted to add to it? I think I saw in your notes that the deadline you were not fully sure, and so you had to implement whatever you had made. So if you had a little more time or let's say beyond the hackathon, what would you want to work on?
01:24:33.520 - 01:25:24.150, Speaker A: Actually, I think there is one more interesting feature, which is integrate the audience, the music sharing protocol. So when you create a postcard, you can create a postcard with music. So the postcard NFT can combine with your own NFT and the music from Marketplace. So this idea come up because recently there are many type of avatar NFT. So I'm thinking, is there any new usage for NFD other than just for our dub? So this idea came up. Cool.
01:25:25.560 - 01:25:32.420, Speaker B: All right, if there are no more questions, then I guess we'll move on. Yeah. Thank you so much for your presentation.
01:25:33.560 - 01:25:34.310, Speaker A: Thanks.
01:25:35.260 - 01:26:01.170, Speaker B: All right, and that was actually our last team for the day, so we're just going to wrap up now. Thank you again so much, judges, for taking the time to come give feedback to the projects. Hopefully you enjoyed seeing some of them as well. And yeah, that is it. Feel free to leave the call now.
01:26:02.980 - 01:26:03.776, Speaker A: Thank you.
01:26:03.878 - 01:26:07.090, Speaker B: Yeah. All right. See you, everyone.
01:26:07.620 - 01:26:08.030, Speaker A: See you.
