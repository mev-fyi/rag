00:00:06.410 - 00:00:22.814, Speaker A: So without further ado, let's welcome our very first official talk which is Tony from Diagonal. And Tony's going to be talking about how do we actually successfully manage subscriptions in web3. So, Tony, please. Welcome. Well welcome, you take it from here.
00:00:23.012 - 00:00:24.774, Speaker B: Hey Carter, how are you doing today?
00:00:24.932 - 00:00:26.200, Speaker A: I'm doing great.
00:00:26.730 - 00:00:45.930, Speaker B: All right, then let me kick it off. Okay. Share my screen, please. Just confirm we're all live. Okay. All right guys, so my name is Tony Rosler, I'm a co founder of Diagonal Finance. And today I'm going to talk to you guys about web free subscriptions.
00:00:45.930 - 00:01:21.558, Speaker B: So the agenda of the talk today is threefold. First we're going to look at why on chain subscriptions are a hard problem and why largely we haven't seen much in this space kind of largely up until now. Secondly, we're going to talk about the benefits of streaming subscriptions. And lastly, we will talk about why crypto native payment rails are important. All right? So let's just kind of set the stage. So first, we all familiar with web two payments and how subscriptions work. With web two payments, the way they work are essentially the bank pulls, let's say $10 a month out of your account once a month.
00:01:21.558 - 00:02:28.198, Speaker B: Now this works okay, because you trust the bank to pull money out of your account and if the bank acts maliciously, then your account is FDIC insured and you can always claim the money back. Now the issue is a little bit that if you try and move this model to blockchains, you kind of run into some problems. So the first is there is no native way to pull tokens out of a user's account simply on the execution layer in blockchains. Now this is largely because by construction blockchains are push based payment systems where every change in state requires a transaction and every transaction requires an elliptical curve digital signature from the user's point of view. So what that means in a very naive way, if a user wants to submit a $10 a month payment, they'll have to manually sign a transaction and to kind of submit this payment. However, that's not really the full story because we can build kind of certain approval based applications on top of the execution layer. However, these payment systems have certain flaws.
00:02:28.198 - 00:03:27.438, Speaker B: So all of these kind of pull based payment systems largely boil down to this mechanism where a user will infinitely prove a contract and then a bot will, on a kind of schedule, will schedule a transaction and execute transaction, pulling money out of the user's account and then paying the merchant at the end of the month. Now the problems with these payment systems are firstly that they have trust assumptions. So when you are infinitely approving a smart contract, you are giving that smart contract the opportunity and the right to essentially empty your entire account for that token. Now we have seen time and time again smart contracts have these bugs when it comes to infinite approval. And there have been plenty of exploits around this area. And now the kind of important thing from a user's point of view is my wallet is not FDIC insured. So if the smart contract or the bot executing a transaction acts maliciously, there's no way for me to get my funds back.
00:03:27.438 - 00:04:16.650, Speaker B: Now, this is a real problem. The second point is counterparty risk. So because payments are essentially enforced by external actors, the bot has to make a transaction once a month to execute that payment. If the bot fails to execute that transaction, you will not be paying the merchant and essentially the merchant will cancel your subscription and you will not have access to that service. Now, this is an issue because suppose the bot just disappears, then, yeah, there's no way for you to essentially contact that bot or sue that bot because in kind of ethereum and smart contracts, agreements are enforced by code, not by courts. Lastly, an interesting point is kind of the lack of scalability. So having kind of these scheduled transactions requires end payments to make end transactions.
00:04:16.650 - 00:05:17.330, Speaker B: So the question kind of becomes so who first of all pays for the gas? And then what happens when a cost of execution of the transaction is greater than the fees earned from the bot for executing that transaction? So should the costs be pushed to the merchant side, as in kind of it should be cut into their profit margin. Should the user pay the fees so it becomes more expensive of them than it would otherwise? Or should the service provider, the payments provider, pay the fees? Now, okay, there are many different ways you can go here, but if we perhaps look at some numbers so this is based on analysis I did last February. Granted, things may have changed, but I looked at USDC and kind of the average on a 30 day kind of average, what was the average? ERC, 20 transfer on cost in terms of USD and Arbitrum, we have roughly a dollar. Same optimism in Maine. I was roughly ten. This is way more expensive than it would be in traditional fiat payment rails. So if we kind of summarize the problem with one thing, it's the beach problem.
00:05:17.330 - 00:06:03.662, Speaker B: What would happen to your subscription if your payments rider went to the beach and essentially your subscription would cancel? So this is not a decentralized payments provider and this is not, I believe, kind of ecosystem we want to be building. So how does streaming solve this? So, first of all, streaming has zero trust assumptions. So the user pushes money continuously from their account to the merchant's account. They are not approving anyone. Money is pushed continuously. Secondly, there is zero counterparty risk because payments are settled continuously. So this is incredibly important for businesses where essentially they provide a service to the user throughout the month and then expect to be paid by end of the month.
00:06:03.662 - 00:06:48.494, Speaker B: A good example of this is, let's say an RPC provider like infuria Alchemy, where you are allowed to make RPC calls, and at the end of the month, they send you a bill and they expect to charge for that bill. Now, these merchants have a massive problem, which is essentially that users can rack up huge bills that they are not able to pay for. And there's really no clean way to mitigate this because you cannot settle continuously. You cannot settle every time you basically give value. So with streaming, you can do that, which is quite beautiful, where essentially every single second, the payment is settled and money is leaving your account and entering your account. So this reduces the risk for the merchant dramatically. Lastly, scalability is incredibly important.
00:06:48.494 - 00:07:30.746, Speaker B: So you only have to submit a single onchain transaction to open a subscription and a single on chain transaction to close a subscription. And lastly, something which is very cool and also important is capital efficiency. So merchants are paid every second, which essentially means they can always put their money to work, always be earning yield, and just dramatically increases their capital efficiency. All right, then. Well, let's also kind of think a little bit more broadly. So why is streaming not only better on those verticals we touched, but why is it largely better in general? So let's consider Netflix. So as we know, Netflix has been in news a lot recently for essentially they've been struggling in terms of their revenue and their business model.
00:07:30.746 - 00:08:05.350, Speaker B: So if we look and this is not all that surprising really, if we look at Netflix's business model. So Netflix charges $10 a month. Now, this is a bad business model because essentially you have a cohort of people who have a higher willingness to pay than $10 a month. And these people are getting a bargain where they are paying less than they're willing to pay. You also have a code of people who are not willing to pay $10 a month. They're willing to pay less than that, but they're being priced out of a Netflix subscription. So this means that Netflix is just capturing a very small area under the demand curve and leaving a lot of money on the table.
00:08:05.350 - 00:08:38.850, Speaker B: Now, if you introduce streaming, something very, very interesting happens. So first of all, if you just make Netflix a $10 subscription, a streaming subscription, you essentially now are creating an infinite number of price points. The land curve, there is now a price point for a user who wants to subscribe for just 1 second a month. There is now a price point for a user who wants to subscribe for 2 seconds a month. Or maybe you just watch ten minutes of Netflix a month. And now the total revenue is just integral into this area. And as you can see, the total revenue captured by Netflix is much, much larger.
00:08:38.850 - 00:09:36.558, Speaker B: Now, that's just with one package. We can consider a multi packaged setup where you have a team, family, whatever. And what you essentially see is that you can now capture all area under the demand curve. Okay? Now another important thing is that when we are dealing with streaming payments, we are dealing with on chain verifiable payments, payments which are by construction, crypto, native. And this really allows us to reimagine and rethink from first principles how we think about and if we look at the history of crypto and DeFi, one thing that you should always keep in mind is that you should maximize for composability at every vertical of the stack. So there's a reason uniswap tokens and V two tokens, we RC 20 and B three tokens are 71 similar with a tokens, the C tokens or ERC 20. So by moving state into a tokenized state, you become composable.
00:09:36.558 - 00:10:10.560, Speaker B: And in the context of subscriptions, that can mean quite a lot. But we will discuss two things. The first is that subscriptions themselves can be composable. They can be represented in the form of NFTs. All right? So let's just imagine for a second you owned an NFT, saying you were the first subscriber to the Joe Rogan podcast. Now clearly this NFT would have economic and social value in today's society. However, sort of along the way, Joe Rogan would have experienced a lot of benefits as well because the moment you bought the NFT, you now acquired a real stake in his success.
00:10:10.560 - 00:10:56.750, Speaker B: So the better Joe Rogan does, the better, the more valuable NFT and the better you do. Similarly, this provides Joe Rogan with organic distribution because essentially now Joe Rogan's subscribers are now his greatest brand ambassadors because incentives are aligned. And lastly, this can be very interesting from Joe Rogan from a business point of view because he can now essentially identify his subscribers. He can identify who was early and he can reward them appropriately. You can assign them property rights, for example, early access to podcasting episodes or special meet and greets at standup gigs. And he doesn't even have to provide all these services themselves. People can build services based fundamentally around these kind of building blocks because again, the subscription is fundamentally composable.
00:10:56.750 - 00:12:04.130, Speaker B: Now another vertical which is very interesting to kind of investigate is your service or your business itself being on chain composable. So what you see on the screen here is something which is a little specific to Superfluid and also what we're doing at Diagonal. But nevertheless, I think it was interesting to share. So the way Diagonal represents your business is that we represent your business as an NFT in the form of specifically it's an NFT and a super app. Now, a super app is a smart contract where users stream money in to the smart contract and then the smart contract redirects that money automatically to the merchant and pays them every single second. So what you now have is you have a business which has predictable on chain verifiable revenue, which means it can do things like take out under collateralized loans because now external actors can see this is a business, this business makes this amount of money every month. It's this reliable and we can actually offer you a loan based on your risk profile, not the one of some risk agnostic pool.
00:12:04.130 - 00:13:02.520, Speaker B: Okay, another kind of interesting area about this is that you can also sell your business on exchanges like OpenSea or even potentially fractionalize your business, creating kind of shareholders and distributing value to your community. Now lastly, we want to touch on why are crypto native payment rails important. So we'll perhaps only touch on two of these verticals, but let's start with Dows. So as we know, there's a kind of a B, two B Dow service industry that's really booming at the moment and has been for a long time. And essentially all of these services are SaaS services which are providing services for Dows in return for compensation. Now, the one thing Dows will have common is they want to settle in crypto on crypto native payment rails because interact with Fiat is a massive headache and more specifically, if they can pay in their own token, that is a huge benefit. So clearly in this scenario, having crypto native subscriptions and encryptionated payment rails is very important.
00:13:02.520 - 00:14:10.102, Speaker B: Secondly, you can think more in the future, perhaps gaming. So if we consider metaverse such as Decentraland, where you can create your metaverse, do your own space, you can even I remember reading Snoop Dogg was hosting concerts in decentraland. And the kind of economic activity which you can do in these metaverses is becoming increasingly sophisticated and I really believe eventually will be just as sophisticated as the economies we see in the real world in today's society. Now, this means there will be service providers and this means people will be demanding crypto native payment rails because they won't want to settle in token. I find it very hard to believe that one day, let's say Decentraland or Sandbox will redirect you to a Fiat gated checkout link where you have to put your credit card down and dodge yourself to, let's say, buy an in game item. Okay, so that was kind of the talk and again yeah, I'm Tony work at Diagonal Finance. If any of this sounded interesting to you and you think streaming subscriptions are powerful, please get in touch either through kind of Twitter or you can even reach myself on Twitter or our website.
00:14:10.102 - 00:14:15.920, Speaker B: And finally we're hiring for several engineering roles. So, yeah, have a great day everyone.
00:14:18.370 - 00:14:42.440, Speaker A: Tony, that was an awesome talk and a really great overview. I'm super excited and obviously good to see you on the other side after being a hacker too. My only kind of question is you kind of talked about how all these things are working now and what you are able to do. Curious what you think is missing in this space and what would actually supercharge yeah.
00:14:43.370 - 00:15:39.110, Speaker B: So what I think is missing is frankly a clean abstraction to use this technology. So streaming payments is like I think we will discuss for quite a while, is very cool and this is very powerful. However, if you want to bring this piece of technology to the masses, to businesses or even other protocols, every protocol is not going to write the solidity to integrate this themselves. They're not going to pay the money for the audit, they're not going to build off chain monitoring infrastructure to make sense of the payments, they're not going to build the relevant dunning flows and the SDKs to integrate into their existing payment systems. So if you really want to bring this to the masses, you need a clear abstraction which truly makes it just as simple as integrating string payments as it is to integrate stripe or whatever it may be. There really shouldn't be a trade off from a developed point of view and I don't think there will be in the future. So this is why I really think is missing here and also largely what motivates us at diagonal.
00:15:39.110 - 00:15:40.294, Speaker B: I see.
00:15:40.332 - 00:15:50.300, Speaker A: Got it. It's not like we think we need a new opcode or a new framework for everybody to generalize deploying. You manifest that.
00:15:50.750 - 00:16:30.280, Speaker B: Yeah, that's interesting. I don't necessarily think we do so. There have actually been people who've suggested opcodes in the future previously, but this was rejected tremendously. And I think there's a nice blog post by Vitalik why something like an alarm opcode doesn't make sense specifically doing asynchronous actions. It becomes very complicated and yeah, you don't want to do this at execution layer. This is a protocol layer problem. And then the question becomes do you want to do stuff based on external actors and trust assumptions or do you want to have on chamber reliable value transfer? And we think it's this one.
00:16:32.810 - 00:16:56.302, Speaker A: I don't think many people will disagree on you with this. Well, that's awesome. Well, I am super excited to kind of see Dagna finance progresses and just generally the fact that you can now use this thing to make a new way to think about under collateralized loans is to me super exciting. So hopefully that becomes more and more common and really appreciate you taking the time and giving this amazing talk.
00:16:56.436 - 00:16:57.980, Speaker B: Sure, no problem. Thank you very much.
