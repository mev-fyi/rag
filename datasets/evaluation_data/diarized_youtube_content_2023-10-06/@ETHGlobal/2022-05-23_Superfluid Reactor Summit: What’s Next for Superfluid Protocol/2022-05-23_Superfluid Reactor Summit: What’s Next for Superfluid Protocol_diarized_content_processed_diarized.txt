00:00:06.330 - 00:00:34.920, Speaker A: We are ready for our next talk. So you kind of got a preview of all the building blocks that we think are needed or we need to in a way perfect, but that leaves a lot of room open for what we think we can do with the world of streaming money. So without further ado, I'd like to welcome meow is going to talk about what is upcoming in the Superfluid Protocol. So welcome to stage and feel free to get started whenever you're ready.
00:00:35.690 - 00:00:54.422, Speaker B: Yeah, thank you. Kartik. Start share the screen. Yeah. Thanks everyone to join our first Superfluid Reactor summit. So I'm meow on my GitHub. It's hellwolf.
00:00:54.422 - 00:01:21.670, Speaker B: And I'm CTO. And co founder of Superfluid Finance. So today I'm going to talk about what's next to the Superfluid Protocol. So maybe let's first look at Superfluid in railway mirror. So, how it was started. So, exactly 440 days ago, probably 441 now. After a few hours we deployed to Polygon.
00:01:21.670 - 00:02:06.050, Speaker B: That was a transaction and we had two packages for builders to start with and deployed then also to XDI, both of network. I changed the name, if you remember, it was called Matic and now it's called Polygon and it was XDI. Now. It's called Gnosis chain. So that's how we got started. So how is it today? Now we have vibrant development activities in the Monoreppo. So we have a lot of forks on 27, we have a lot of stars and we have quite consistent commits to our Dev branch.
00:02:06.050 - 00:02:47.810, Speaker B: And our Smart Contracts project is also evolving. So we have just added the access control list to our CFA constant flow agreement. And we also switched to Hard Hat for functional testing. We also integrated with Foundry for additional Fuzzing testing. We recently actually yesterday also introduced Hotfuz, a new test framework for superfluid applications. That means your super apps also. So you can now use something called Hotpass which uses Echidna from Chill Bits for even more sophisticated Fuzzing testing.
00:02:47.810 - 00:03:14.966, Speaker B: Now we have more than two packages. We have new and better packages. JS SDK is being deprecated. You should really switch to SDK core. And we have also a redux flavor of SDK. We now put all the network support on Subgraph. We have quite good support there and Hot Fuz recently.
00:03:14.966 - 00:03:43.940, Speaker B: And we also have something called a spec haskell. I'll talk about that later. Now we have also many more examples. So there is even an archive folder now because there's just too many, which is good. There are more docs. So if you haven't visited our docs, go to docs goofley Finance. You'll see the Protocol Overview developer section, things about Sentinel and all the peripheral resources you could find.
00:03:43.940 - 00:04:19.678, Speaker B: And we also have continued contributions from our community. So here are the badges for our contributors. Some of them actually joined even our team full time. We're always committed to contributing back to the community. So we have pull requests to the Truffle suit, for example. We have pull requests to the Truffle plugin verify, we have issue reports and technical feedback to the Graph. And we have also pull requests to Ekina, for example.
00:04:19.678 - 00:05:16.260, Speaker B: Many, many more, actually. And we adhere to the open collaboration and free and open source philosophy. So that's part of our way of working. As a result we have continued the usage from builders. So now according to GitHub, we have 98 almost 300 repository depending on our Ethereum contracts projects and there's also continued download from our NPM packages from npmjs and also we are live on many more chains now. So we just recently launched on avalanche a while ago we also launched on layer two Arbitrum optimism motocon. Also we have cumulative flows going up so that's so far the figure that I can share.
00:05:16.260 - 00:06:35.370, Speaker B: So what's coming next to superfluid more networks? Of course first in order to do that we're going to enable minimal deposit so that's only for networks with high fees. We're talking about things like Ethereum Mainet and some of the layer twos also have relatively high fees comparing to Polygon and Gnosis chain for example. We're trying to make it more profitable for sending out closing the microstreams meaning that those streams have really small value and deposit and with minimum deposit that will make it a slight more profitable. We're also targeting for more community engagement. So we have now a framework deployment guide updated many times and each time we go to new network it's always our community member deploy to the new network. We also have made the deployment of ERC 20 wrapper easy for almost a network. You just need to go to one of the Ether scan like scanner and click a few button.
00:06:35.370 - 00:08:14.730, Speaker B: Then there is a Yasi 20 wrapper of super token. We're going to create more going to do more work on the custom super token templates for you to create your own pure super tokens and if you need more custom features you should also look into it and we'll do more work on that to make your custom super token creation process more smooth and sleek. We're going to also support token lists standard. One of the frequent asked questions how can we know the list of super tokens? There are these so we're going to work on a bit more making that available on the token lists. The next big thing for us is to do some formalizations so there will be a yellow paper, so we'll be citing existing papers so things like existing EIPS, things like existing research on the theory of mining and payment system and we'll keep a fairly high standard of intellectual honesty. So we'll be reusing existing terminologies trying to generalize existing framework if possible, not just to flag just for the sake of it. It's not about your idea versus my idea, but at the same time we also want to highlight the original idea and the contribution from superfluid money in the process.
00:08:14.730 - 00:09:17.200, Speaker B: So the yellow paper also use a technique called embedding the certification where it will be written in literate hoscale. This is one example. They're defining something called decaying flow agreement. And the benefit of doing so is that we will have well defined terminologies which basically equivalent of saying well defined types. And we also define some of the language in a more rigor definitions which is also equivalent to say have testable properties. And the idea of Superfluid protocol will actually become a haskell program even, right? So the whole process will make it a sound platform for research topics. So what are the research topics? So we'll be experimenting a bit more exotic agreements, things like decaying flow, general distribution, step flow, this kind of thing.
00:09:17.200 - 00:10:09.150, Speaker B: We also explore it a bit more regarding different solvency models. Currently our system is using so called buffer based solvency. You might be familiar with the concept of buffer if you have programmed on our protocol, but there are other techniques such as syncing the time as opposed to using buffer, et cetera. So money units models can be also a topic to be explored. We're all familiar with account token model that's quite widely used on EVM, in fact a de facto one. There might be also a chance for we to make an Eutxo model so that's our research topic and composability models. So we use extensively callbacks to implement super apps.
00:10:09.150 - 00:11:15.140, Speaker B: But there are other techniques to do composability, perhaps using state syncing as opposed to synchronous callbacks. All those can be good research topics. So the work done in the formalization will provide a very solid reference for additional superfluid money implementations. But what it can't be EVM, Superfluid V Two, a non EVM system or Superfluid enabled blockchain self, right? So these are open question. So additionally, we're also going to develop a protocol validator so it will become a simulation environment for new ideas and concepts. And with that it can also provide a very good functional specification testing tool for new implementations. So you can visualize the account balances during a test case, for example.
00:11:15.140 - 00:12:12.322, Speaker B: But at the same time, we also need to do some deep refactoring of our existing EVM implementation. We'll deliver the functional style agreement refactoring, so we'll split the pure code from the side effects. Side effects. We're talking about things like reading protocol parameters from Governance, EVM, storage operations callbacks to super apps, this kind of thing. In doing so, it will make it also easier for formal verifications of each component, especially each agreement. And it will make ways for more feature development, right? Another thing we'll be doing is called a token centric interface. We're phasing out of the usage of core agreement you might be familiar with if you have done some development on Superfluid.
00:12:12.322 - 00:13:45.990, Speaker B: So that means you'll be using more Idiomatic token kind of interface, right? So for example, it'll be token create flow, it'll be token update flow token delete flow and the IDA, the instant distribution framework you might be familiar with will become a multipurpose index. So you'll be using Token create index instead as a subscriber to the index. You'll do like token subscribe to index, token approve index and you might be familiar with the IDA that it does distribution instantly, right? So then it become token distribute to index. What about something called token update distribution flow rate of index? Very wordy mouthful, but it's something called Gda I will introduce shortly. And something about decaying flow agreement. Token update decaying flow rate of Index right? So the index really become a multipurpose instrument for publisher to influence balances of all its subscribers, providing more design surface for your superfluid applications. So all we are doing here is trying to complete the jigsaw, a jigsaw puzzle.
00:13:45.990 - 00:14:32.110, Speaker B: So that's so called superfluid payment modalities metrics. What does mean? So payment before superfluid money, there's only one that's one to one and instant. For example ERC 20 everyone familiar with, right? So sending from one account to the other instantly payment with superfluid money. So we have a metrics here. So we have one to one and we have one to L from one dimension, from the other dimension we have instant versus streaming. So one to one instant we have also a name now called a transferable balance agreement. One to one streaming that's basically constant flow agreement or the decaying flow agreement one to N instant, that will be the IDA.
00:14:32.110 - 00:15:18.450, Speaker B: So it will be Gda with instant distribution aka IDA we are familiar with and one to N streaming that will be Gda with constant or decaying flow. But it's not there yet. But it will be there at some point. So called Gda is general distribution agreement. It is a multipurpose index with instant distribution with constant flow, with decaying flow or something else. So beyond corporate coast, there's also many things ongoing. One of the goal is to make the sentinel more profitable.
00:15:18.450 - 00:16:18.230, Speaker B: So we'll make the sentinel more than just for solvency protection from hostile actors. We want add some civilian services to the sentinels. So for example, closing stream for you by end date, right? I mentioned that we had a feature now called Access Control list. So basically you allow a third party to close the stream for you or even update stream for you. How about a wrap up more underlying token for you when your balance is running low? So these are the civilian service we can add to sentinel in a decentralized manner. Also we want to add more power to our subgraph implementation to the protocol. So the problem we are facing at the moment is that superfluid distribution index is too powerful.
00:16:18.230 - 00:16:59.170, Speaker B: Because an index can change balances of oil subscribers. A subgraph indexer unfortunately cannot scale as much as in its current architecture. So we're working with the Graph team to find a solution to tame it. We're also adding more features to the SDKs. That means the SDK call the SDK redux. So I would call for everyone to be part of it. So in order to join this journey, we have a Biweekly protocol public forum.
00:16:59.170 - 00:17:32.478, Speaker B: It's on Wednesday, 230 GMT. If you're interested, join our Discord and ask for invitations. Also check out our bounties on Monreppo. There's a tag called Bounty. Also can check out our bug bounty for smart contracts on Immunify, a shout out to them if you want to join us full time. There's also jobs available on Jobs superfluid Finance. So that's it.
00:17:32.478 - 00:17:42.302, Speaker B: Thank you. And the slide source code you can also find from our Wiki page. So that's it. Thank you. Amazing.
00:17:42.436 - 00:18:22.510, Speaker A: Well, thank you so much for kind of going through basically the, I think, early look in that roadmap of how we think money will change. Maybe just a couple of questions I have on sort of how you're kind of thinking about this thing and also what the learning spin over the last 440 days? My kind of first one is how do you kind of decide to focus on a new chain? Is that just like, we can just deploy the same code there? Or do you think you see a different demand coming in from those users that have different needs on different kind of destinations? What kind of goes on and what are some observations that you've had from using different chains?
00:18:23.410 - 00:18:47.970, Speaker B: Yeah, so currently we have an EVM implementation, right. And we don't necessarily decide. We call for deployment and we'll wait for you for the community member deploy first. So it's more of a community driven at the moment for EVMs and on non EVM, it's more of the research side. So it's nowhere near the deployment.
00:18:48.810 - 00:19:14.030, Speaker A: Okay, awesome. Well, that clarifies the question I was going to ask, but I think one question from the audience is if you can send us a link to the slides, we'll share that with the chat and everybody there. And then we'll also kind of explore that, put that on our Discord for anybody who's hacking and wants to see that same thing. So thank you so much and I really appreciate you giving us here lukon next version release of Superfluid.
00:19:14.690 - 00:19:15.100, Speaker B: Thank you.
