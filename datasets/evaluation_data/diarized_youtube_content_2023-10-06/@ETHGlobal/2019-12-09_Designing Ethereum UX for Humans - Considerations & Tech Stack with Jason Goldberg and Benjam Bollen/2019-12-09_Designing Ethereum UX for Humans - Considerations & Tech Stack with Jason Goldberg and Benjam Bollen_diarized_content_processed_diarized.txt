00:00:00.650 - 00:00:26.646, Speaker A: Ready. Okay, cool. So today we're going to talk about designing crypto user experiences for humans. So, talking about user experience, design and how to build products that people actually need and they want and they use. I'm Jason Goldberg and this is Benjamin Boland. We are two founders of Peppo by OST, and we've been working together since early 2017. And Ben's been working on a lot of the problems that we've been trying to solve since 2014 15.
00:00:26.646 - 00:00:54.874, Speaker A: And I've been building Web two apps since 1998. The first product I worked on was AOL chat rooms. You might have some of you heard of AOL chat rooms. I then built several Web 20 companies and learned a lot about product design along the way. So, to start off, talk a little bit about the UX prizes that we're going to be having for hackers today or this weekend. We have three prizes. One is best overall.
00:00:54.874 - 00:01:24.950, Speaker A: UX the second is the runner up for best overall UX. That is completely technology agnostic. We don't care what you build on. We're just looking for great UX innovations, problems to be solved. And then we have a third, more specific prize, the best Web wallet innovation. So we're looking for innovations around how to enable better experiences around web wallets when it comes to user experience and security. We'll talk more about that at the end of the presentation.
00:01:24.950 - 00:02:35.502, Speaker A: So let's talk a little bit about how do we design crypto user experiences for humans and what do we mean by this? Well, the first thing, let's start with what are humans? And so I think we all have a little bit of experience in this domain. But as product managers, as engineers, developers, we often think very functionally, but humans are more emotional. And so when designing product, it's very important to think about not necessarily just what function that the user wants to accomplish or what task they're trying to accomplish, but what is the actual job that they want to get done, which is very emotional. Usually when they decide, let's say I want to get in my car and drive to Starbucks to get a cup of coffee, it's not the functional aspect of do this, do this, through this. It is I want coffee and I'm thirsty and I want caffeine to perk me up. And it's the emotional aspect, is that I want to feel that jolt of energy that helps me through my day. And so as product designers and engineers, we need to think about not just what functionally the user is trying to get done, but what is the real goal of what they're trying to accomplish when they use our application.
00:02:35.502 - 00:03:08.326, Speaker A: Otherwise they won't use it. And users are very needs driven. And this is whether you're dealing with an end consumer or you're dealing with developers or user product, everyone's got something they're trying to accomplish. It's typically very emotional. They're looking for whether it's more convenience or something that helps them get the job done faster or helps them to get more enjoyment or more pleasure or to learn something. But users are very, very needs driven. Now, you said the other side of it.
00:03:08.326 - 00:03:31.854, Speaker A: What is the user experience? This is where there's often a misperception. User experience is not design. So a lot of people think about user experience. They think about graphics and pixels and imagery and icons. That's not user experience, that's graphic design. User experience essentially is problem solving. It's identifying a pain point that someone has and helping solve that pain point.
00:03:31.854 - 00:04:34.270, Speaker A: Or another way I like to put it is user experience is finding people who are stuck and helping them get unstuck. And that could be a consumer who is trying to accomplish something. It could be a developer who's trying to accomplish something and just taking the number of steps that it takes for them to get that thing done and shortening it by, let's say five to four to three to two to one to help them get that thing done better. One of the clearest ways you can find if they actually have a real need and a use case is if you see people who are building little hacks in order to get things done. So you have people who are stuck and they want to get the job done so badly that they build their own solution. And so this we often see this actually in crypto, where you see people who let's say they're early crypto adopters and somehow they get some tokens through some application or through some service. And it's so hard to cash out though, so they're stuck, right? But what you see them do is they go through five different hoops in order to get unstuck.
00:04:34.270 - 00:05:27.480, Speaker A: So they'll move, let's say, their token into Dai and their dai into Coinbase, and then Coinbase they'll then cash out to, or maybe they'll go from some other exchange that doesn't have kind of the fiat pairing they're looking for. And then they'll move that into Coinbase, then cash that out into something. They get it to their bank account even though it takes three days. And they might go through five different steps to get done what they want to get done. And then you think from a product designer or an engineer, our job here, how do we help them get unstuck and kind of take the hack they're doing and just make that whole compress, that whole thing. So if you see people, for instance, that are, let's say I think we all know like onboarding is a complex problem in our community or key management, but we still see people going through all these different hoops. When you see people that are doing their own hacks in order to get it done, that's an area you can kind of step in and say, okay, can we build something to help them get unstuck and have them rely less on hacks and more on product or more on our technology.
00:05:27.480 - 00:06:20.594, Speaker A: So another way I like to put it is that a great user experience results in pull rather than push. And the whole concept here is that most of the time when we build product, unfortunately, what we do is and I've done it myself, is we have this great notion of kind of a problem needs to be solved. And we then build our best idea of what that solution that problem is. And then we spend months and months developing something, and then we push it out on people to try to get them to try it. So we say here try my new product. And we do, let's say a product hunt or a hackathon and we try to get people to try it, get people to try it and most of the times people don't use it right? And the reason why is because we're pushing the product at them rather than getting them to pull it from us. And the only way to get pull is to actually talk to people and have them be part of the solution from the very beginning.
00:06:20.594 - 00:07:32.486, Speaker A: So it's identifying the problem and building kind of the solution to the problem based on what the end user wants, whether that's consumer or developer figuring out very specifically how to solve their problem, not our idea of what their problem is. And then getting them to want the solution so bad and be part of building it with us so bad that they're actually pulling it from us and saying can I please use your product? If you're doing user interviews or you're talking to say people who might be users of your product, one of the best early indications is when you're describing the potential product to them and they say when can I use it or can you let me know when I can try it? That's a little bit of pull. And then when you give it to them and they say does it do this? And then you say well tell me why you want to do that. And they start to explain their use case then you're getting whole, then you're getting them to build the product for you rather than you just pushing the product on them. And then the summary of all this and we'll get into showing some products is way like to put is great. UX is basically product that solves a real pain point to help people get unstuck. So you have identified something where the product we've developed has a pain point that is not just something that's in our head but something we've validated in the community, is validated with real potential users.
00:07:32.486 - 00:08:31.470, Speaker A: We understand what that pain is, they've helped us to understand it and develop it and that when we build this thing for them, they're so excited for it, they pull it from us because it helps them get unstuck and helps them do better than what they were able to do before. Another way to put it before I show you is that everyone has to switch from something. So you think about when someone uses your product, they are inherently switching from some other product, or they're switching from, say, complacency or doing nothing, but they're switching from something. There a finite amount of time that people have in their day that they have to take some of that time and give it to you. And you're trying to figure out, what is it that you're building that's going to say, okay, I'm going to spend more of my time in your product than what I was using before, because it helps me get unstuck and solves a need that I have. So the last thing is, you know, you've hit great UX is when you've kind of delivered these wow moments that you have a product where people, they're opening up the box, and they put it in their ears, and they tap the button, and it's like, wow, this thing just works. I didn't have to connect anything.
00:08:31.470 - 00:09:20.798, Speaker A: It just simply works. Or I talk to my Alexa and ask her, what's the weather today? And say, wow. She tells you something that you didn't expect, that it's possible that this AI machine could know it's, that there's wow moments of kind of unexpected delight that also give you that convenience to help you get your job done kind of better, faster, easier. So today I want to show you some examples through the Peppo app of how we built some crypto UX. And the point here is not to do an advertisement for Peppo. Peppo is an app that we launched at DevCon about four weeks ago, I guess three weeks ago. And the idea here is to show that the types of things that are possible when you talk to users and you think through the experience first and then the technology second.
00:09:20.798 - 00:10:03.898, Speaker A: So one of the hallmarks of how we've built our company over the last four years is we've always started with the user problem and the user conversation and then said, okay, therefore, what technology stack do we build? Or what technology decisions from an architecture standpoint do we take? But we always start with the user problem first. So one of the first things I'm going to show you is the onboarding to the Peppo app. And so the best way to show it is if everyone here just downloads the Peppo app so it's live in the App Store and on Google Play, and you can be logged into the app. Create your own wallet with a noncustodial wallet with a six digit Pin recovery in less than 30 seconds. So if you have an iPhone or an Android, this is the interactive part of the workshop. You just search for peppo. Don't worry, you're not giving us any information here.
00:10:03.898 - 00:10:16.660, Speaker A: Search for Peppo. Just when everyone experience, I'll walk through it, but when everyone just experience the onboarding experience inside the app. So while you're doing that, I'll show you how people are using Peppo. And so this is from DevCon five.
00:10:19.030 - 00:10:50.694, Speaker B: With Alex, Oscar and Jody. This morning I read on Twitter that men in unicorn shirts will cause the apocalypse. Well, you know, I tend to disagree. I think we can work together. And for that, you should now join Abby's workshop on human collaboration. And definitely tomorrow at 925, the Talk by Britt Green on realigning incentives. Promo, promo, promo.
00:10:50.694 - 00:10:57.466, Speaker B: Let's save the world. Let's not cause the apocalypse. Yay. What's up, Dario? Jesus. I'm looking for some shabu shabu.
00:10:57.498 - 00:11:03.230, Speaker C: Dinner, everyone. We're in Osaka taking a taxi from Kickstarter.
00:11:04.530 - 00:11:56.494, Speaker A: So we built an app to showcase the wallet SDK that we developed that enables you to embed an ethereum wallet seamlessly into any application. And from the very beginning, we said, we want to show that we can create an experience where it's a DAP that feels like an app and really for people not even to even know that it's a DAP if they don't want to. And in order to do so, we took several design decisions that then resulted in technology and architecture decisions and showing you this. So as you're thinking through things, we're not saying build this, we're saying think through these things as you're building your apps. We've had some great early users who've kind of said things like, Simona from Bounties, that's the first DAP that feels like an app. We had Decrypt who said, this app shows that Blockchain is actually ready for primetime, but ultimately, it's the users that matter most. And the key decisions that we took with the app.
00:11:56.494 - 00:12:34.186, Speaker A: Well, actually, the purpose of the app so the app is 32nd video updates from people who are creating really interesting things in crypto. And so it's developers, makers, designers, enthusiasts, just talking about what they're working on, providing updates. And then we have a crypto component, which I'll show you in a second, is that while you're using the app, there's an embedded wallet you can tap on basically a reinvented like button. And every time you tap the like button, transfer the token seamlessly from you to other person. You can also send people tokens directly, person to person. And the tokens are used for curation. They're used for personalization using them soon for bond curves and other things.
00:12:34.186 - 00:13:04.210, Speaker A: I'll show you how this all works. But first, how many of you have gone through the onboarding? 12345. All right, cool. So the first thing on the onboarding is we took a decision to have the initial onboarding, the initial sign up be through Twitter, and in the future, we'll enable other ways for people to connect. But Twitter was basically we built an app for the crypto community, and we talked to them and where's the place where crypto people hang out the most on Twitter. So rather than forcing them to do some, everyone to do something different. We took the decision based on the community and said, well, it'll be very easy for people to log in with Twitter.
00:13:04.210 - 00:14:06.490, Speaker A: The second thing is, we wanted to make that claiming of a wallet to be as simple as possible without people really feeling like having to think twice about what is this that I'm signing up for? So if you look at the screen here, the first thing we did is we give people a welcome gift so they claim the wallet, and then we give them basically six digit Pin is all you need in order to secure wallet with Recovery from Smart Contract. And if you have questions on how we do the six digit Pin recovery from Smart Contract, we can get into it. And then the next thing so when you set up your wallet, we put a private key on your device, and then we put another keys on your device, which are session keys which interact with a Gnosisafe multisig. And the session keys are able to execute small value transactions for you, or basically instructed to by your key up to a certain limit for a certain period of time. And this is a really key innovation because it enables is that the user doesn't have to manually sign every transaction. They don't have to open up another browser or go to another app or use a MetaMask or something. They can just tap the like button and it instantly transfers a token.
00:14:06.490 - 00:14:10.140, Speaker A: Ben, you want to talk for a second about any of the elements here?
00:14:11.470 - 00:14:59.674, Speaker C: Hey, I was supposed to use this even though yeah, so also, just because this is a hackathon, just repeating the main point. So we want to find great UX innovations and we're not putting any technological constraints. So you don't have to use our stack, but our stack is fully available. So we built Peppo with the full open source stack that you can find, and I'll point you to those places as well. So there is a wallet SDK for iOS and Android, and it does all this key management that we were describing here, right? So it deploys agnosis Safe Multisig, a session contract with EIP 1077 for the session key, meta transactions, the wallet recovery module to the Gnosis, all those things are handled by the SDK. You just have to integrate it. But still, it's a hackathon, so you can probably build a full app.
00:14:59.674 - 00:15:38.982, Speaker C: So that's why we're not putting any technological requirements here, but then on the session keys. Yeah, another point is that we don't want the user to pay for gas, right? So that also allows us to spend the tokens, whereas Peppo just pays for the gas. Why we're also able to pay for the gas is because all these contracts run on layer two on top of Ethereum, which makes it a lot cheaper for us to fund the gas or the deployment of the Gnosis Safe contracts. Et cetera we can do this at scale because it's reduced costs. I'll go into where you can find all the stuff later.
00:15:39.036 - 00:16:23.570, Speaker A: So if you look at the experience we're showing up here right now, the user is browsing through the app like any other, say, Web Two experience. Then they tap the P button here, the inverted heart, and is transferring a token from one person to the other just by tapping the button there's. Me, you can click on someone's profile as well, and from their profile you can click the P there button there and you can send any amount you want. So basically you can price it in dollars or you can price it in the token within the app and there's a price oracle that converts it. You see, the transaction happens in milliseconds. We're using basically optimistic UI. Once we have enough information on our side to know that the transaction is likely to pass, we basically execute the transaction and then we only would alert the user afterwards if the transaction happened to fail.
00:16:23.570 - 00:17:06.670, Speaker A: So the user doesn't have to wait 18 seconds or 5 seconds or 3 seconds for block confirmations, where immediately, once we have the first signal from the back end that the transaction should pass, we're then basically processing the transaction on the behalf of the user. And this is another one of those elements where you create those wow moments. Whereas anyone who's ever used crypto and is used to waiting and waiting and waiting, the first time we see them kind of do this, they go wow. And they say this is really, really fast. But yet it's still on a blockchain, it's a public blockchain where all the transactions are being finalized. So the crypto, as I said, is being used for a number of things within the app. So it's another thing that gets to solving an actual pain point or use case for the user.
00:17:06.670 - 00:18:09.890, Speaker A: It's not just about having a wallet, it's actually having crypto make the app experience better and more engaging for users. So in this case, every time you are tapping the P button to send someone tokens, it's actually helping train the algorithms and personalization and also curating content for other people. So it's creating more signals and less noise to be able to get people more relevance. And then, as I said, we're adding over the next few weeks ways to be able to use Tokens for things like messaging, to be able to say how much you want to pay to someone has to pay in order to message you or to reply to videos and as well for people to share in the rewards from content getting popular as well. So if I support an article or some content or a topic and that, let's say, goes viral, then it's not just the original poster, but everyone who supports it who can also earn from that. And then another part of the UI is actually making the whole thing usable. And part of making it usable is we took the approach of creating an app that is first regulatory compliant.
00:18:09.890 - 00:18:44.100, Speaker A: So it's basically regulatory and fincent compliant, so it doesn't require money transmission licenses in the current format. And then the next step was getting it approved by Apple and Google. And it's actually the first crypto powered app that's approved by Apple in the App Store. And it has in app purchase. You can top up your tokens using your Apple Pay in the app as well as we worked on a very creative solution for cash out. So people can take their tokens in the app. They can convert them to stable tokens called we call them unicorns because it's part of our community.
00:18:44.100 - 00:19:32.178, Speaker A: And then once you buy your unicorns, you can then actually cash out your unicorns. Today it's for a variety of you go to the Pepo.com store, a variety of gift cards. So our user research again, we talked to users and they told us that anything under $200 a gift card is just the same as cash. And if they can get an Amazon gift card, they care about that just as much as say, getting fiat in their bank account. If they can get actually $200, let's say, or $100 Amazon gift card, they'd much rather have that than say, pay a 10% transaction fee of kind of going or 5% transaction fee or lose or loss in going to fiat. So this was, again, following the users and giving a user centric solution, but also one that actually works with the app stores and so is regulatory and fincent compliant and provides user so.
00:19:32.178 - 00:19:47.720, Speaker A: And then all this actually is on blockchain. And so what we're showing here is we provide a wallet SDK that anyone can build their own pepper with and maybe Ben, you want to talk through some of the particulars here, maybe not.
00:19:48.730 - 00:20:24.340, Speaker C: We're definitely available for any of the questions you might have, but basically the thinking is that you have an identity contract, which is the multisig. So for any device you have, you have one public address in that multi six. So it's one out of N. If you can scan with a QR code and add multiple devices. And it will just then add the device keys of the other devices in the same multi sick contract. And then there's sort of an interaction contract to interact with the Peppo coins that deals with the session keys. Right? So we already talked about this.
00:20:24.340 - 00:20:37.240, Speaker C: If you're interested in how we can do this, like add layer two, then also just come talk to but it's a different talk. But maybe I would like maybe a moment where I can go to.
00:20:41.930 - 00:20:42.246, Speaker A: You.
00:20:42.268 - 00:21:27.566, Speaker C: Can click on it. Yeah, fair enough. I'll click on it if you do want to try out this or after the hackathon. So if you want to run against Robson, then you can go to platform ost.com and you can just click register. Now you register and it basically walks you through to setting up the whole token so you can get started very quickly. So it will deploy a token contract on Robston the necessary contracts for the layer two scaling, set up your user contracts on the layer two side, and then you can just start integrating the SDK.
00:21:27.566 - 00:22:16.438, Speaker C: And there's also server side API for orchestrating users. And so then secondly, we've taken some effort to also describe it's all here. Okay, cool. So it links to dev ost.com where we sort of describe how we thought and why the design choices that we made for this SDK, right? So see, the idea is really to try to make web two applications that function on a blockchain or the UX of web two applications. Then the SDKs are all open source. So there is an iOS one, an Android one, and a react native one.
00:22:16.438 - 00:23:12.342, Speaker C: For iOS and Android you will find that there's a demo application which has like these popcorn tokens. So it's a full app you can fork play around with for iOS or Android. But again, I think for a hackathon, this is too big a scope. So is the next slide. Yeah, specifically what we really want to achieve here is just as a community and contributing to this, right, is how do we get crypto into hands of people that don't know anything about crypto and how do we get them to use it so that they can start transitioning over. And so I think the reason we're right now mobile only is because with the SDK we can use a secure enclave on Android and Apple to manage these keys properly. The biggest problem and the biggest challenge is how do you do a web wallet properly.
00:23:12.342 - 00:24:27.954, Speaker C: So we've last year introduced this idea of a burner wallet that it's okay to store a private key in local storage, but it's a high liability environment. And so I would love to see any push and ideas and innovation of how do you either do some hybrid form of having a web wallet experience that you secure with a mobile experience or maybe use smart contracts to back up this web wallet. Or there's an initial point where the user can start on a web wallet experience but then permeate persist, probably better by now having some money in it and deploying contracts and making that a proper web wallet experience or persistent one. So that's really something that I think would be awesome to see. And so I suggested some things that are potentially interesting. So there's the burner wallet. There's also a project that I like a lot, hedgehog audience co they currently don't really allow you to deal with a lot of value, but they have very nice way of setting up like a username and password for initial entropy and recovering that entropy MetaMask has.
00:24:27.954 - 00:25:15.280, Speaker C: Now these plugins or snaps that you can also play around with and maybe integrate code so that the Web Wallet experience becomes better. Maybe there's a session key in the Web Wallet and just under the hood talks to MetaMask the whole time to sign the Safe knows. The Safe guys, they have an extensible architecture where you can write modules for safe contracts. So, like, basically anything go crazy. But this is what I would love to see, and we're happy to give you money for it if you come up with good ideas of how we can push the Web Wallet experience forward. Web only or web like hybrid with a mobile logging in or backing up. That would be awesome to see.
00:25:15.650 - 00:25:38.118, Speaker A: So we do have a submission form for the UX prize. Any project can submit to it. But we do ask you to submit the form so we can hear about what problem you're trying to solve and how your team went about trying to solve it. So it's not just about the code you submit. It's also about the explanation of the user problem, kind of going back to the designing crypto experiences for humans. So that's it. Any questions for anyone? Yes.
00:25:38.204 - 00:25:39.334, Speaker B: How do you manage?
00:25:39.532 - 00:25:40.600, Speaker A: Yes. Good.
00:25:40.910 - 00:26:04.530, Speaker C: So right now, like I was sort of saying, only on mobile. So the ownership keys of the multisig, right? They're stored on a secure enclave, and you can only access them with the six digit Pin or the Biometrics. The SDK can get it out of the secure enclave.
00:26:05.350 - 00:26:05.906, Speaker A: No.
00:26:06.008 - 00:26:28.310, Speaker C: Yeah. So also we feel very much that we need to build for the future. Right. No offense, but like a custodial solution isn't the one that's going to work for 7 billion people. So just forget about it. Maybe there are some requirements. If you build some custodial form solution, I'm probably not going to give you an award.
00:26:29.210 - 00:26:37.674, Speaker A: So every user of the Pepo app, the first thing you do is secure your own wallet. You're putting a private key on your device right then. And we don't have any access to the user's funds at all.
00:26:37.712 - 00:27:03.074, Speaker C: It's encrypted on the client side. Yeah. I mean, it's encrypted in the secure enclave on the client side. Right. But decision keys, for example, they're less securely encrypted on the client side. Yeah, I mean, it should be everywhere on dev dot osc.com. If you don't find it, then dev Osd.com
00:27:03.074 - 00:27:34.458, Speaker C: is super high level for integrating the SDK. But let's talk afterwards. I'll try to point you documentation. Yeah. So there's two points to speeding up the transaction speed. Right. So, first of all, the layer two solution, the way we were able to extend the EVM is because we run an again, canonical BFT.
00:27:34.458 - 00:28:18.054, Speaker C: So like a supermajority vote on the smart contract side, on top of layer one, Ethereum, the side chain gets finalized and then Ethereum has a higher level of committing. What has finalized? The way we get to the subsecond confirmation time is because it's. Not so much the block confirmation that a transaction got accepted into a block. It's whether, is this transaction valid? And given everything that I know about the Mempool, will this likely succeed or not? And so that's what we also as a relayer evaluate when you use the SDK, we take the transaction first of all, like, is it validly, signed?
00:28:18.102 - 00:28:18.458, Speaker A: Sure.
00:28:18.544 - 00:28:59.910, Speaker C: But then do we see anything that will have you not be able to have the budget. So we do pessimistic cash and we just calculate the worst case scenario for everything that we've seen now, will this transaction still succeed, yes or no? And so if that would still succeed, then we already on the connection to the web wallet, say, like, yeah, this will succeed because with 99.99%, it will get into some history of the chain. Because as a user, I don't care in which block it gets. I care that it will get into a block. And so if we feel that we're like 99 point percent sure that it will succeed, we'll be sure to push it into a block. Like it spreads over the network anyway, so it will get included.
00:29:00.570 - 00:29:14.300, Speaker A: Okay, I think our time's up. Do one last shoot of Peppo of everyone. So thanks everyone, for coming out for the designing, crypto experiences, procurement, and good luck with your hacks. And we'll see you on Peppa. Cheers, everyone.
