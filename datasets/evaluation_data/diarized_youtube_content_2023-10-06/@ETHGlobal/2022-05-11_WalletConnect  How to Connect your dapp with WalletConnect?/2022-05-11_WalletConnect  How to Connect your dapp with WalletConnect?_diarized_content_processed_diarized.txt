00:00:11.860 - 00:00:25.776, Speaker A: Great. Thank you everyone for joining us. Pedro will be doing a talk about how to connect your DAP with Wallet Connect. If you have any questions, just leave them in the zoom chat and he'll be answering them throughout the presentation. You can go ahead.
00:00:25.838 - 00:01:18.016, Speaker B: That awesome. Thank you. So thanks everyone for joining. This will be my first virtual workshop and I've prepared some slides for it. But I definitely would like to have as many questions as possible because I think that for this workshop to work well, I need to listen to what you guys need to know and from that we can develop what is more useful for you. But these slides kind of provide like a background to Wallet Connect and also cover how to connect wallets to your DAP using Wallet Connect and the stack that we're going to use. I also will include links with QR codes that you can scan very easily so you can actually go and visit the GitHub pages that we have.
00:01:18.016 - 00:02:05.704, Speaker B: And yes, let's get started. So hi, my name is Pedro. I'm a co founder of Wallconnect and I've created Wall Connect as an open protocol for connecting wallets to DApps. In a short sentence. Wall Connect is a secure remote signing protocol. It allows a mobile wallet to remotely sign transaction or a message to a desktop or even another mobile app where you have your DAP that will format a transaction and then that needs to be signed securely on the mobile app. And we provide this end to end encrypted protocol that allows the message to be received by the wallet in order to be signed or the transaction, and then it's sent back into the DAP.
00:02:05.704 - 00:02:50.364, Speaker B: And you can use your favorite library like Webtree, JS and Nitterjs and build your DAP with smart contracts or anything you're working on for Hack Money. So Wallet Connect is supported by any wallet. We have more than 100 wallets, including leading wallets in the space like MetaMask, Mobile Trust, Wallet, Rainbow, Argentosafe, so on and so forth. Like, your favorite wallet will be included in the stack and it's also widely supported by DApps. You might have seen Wall Connect already when you use a DAP. And we are growing and we have hundreds of DApps using it. And in the future we're going to have your DAP that you're building at Hack Money.
00:02:50.364 - 00:03:46.110, Speaker B: So it's widely supported by community and it has a lot of downloads. We crossed 180,000 downloads with Wall Connect, but the workshop is about how to integrate in your DA. You may have seen this before. It's this very simple modal that when you press Connect wallet or just connect, you see it pop up for the user to actually select the options. And maybe you're not familiar about the options, but to cover perhaps the most popular ones like MetaMask and Wall Connect, you essentially have the option of connecting either with your mobile phone with Wall Connect or with your browser extension on MetaMask. And this uses a library that I've written, also called Web Three Model to make this experience easier to integrate multiple providers. But in this workshop we're going to cover using MetaMask and Wallet Connect.
00:03:46.110 - 00:04:40.476, Speaker B: So the first thing is that you can visit Webtreemodal on GitHub and I'll share links for that. And basically it's a single ethereum provider solution that makes it much easier for you to not have to understand all the options that are out there. And you can for example use NPM or Yarn and you do NPM install Webtree Model and Wallet Connect, Web Three provider and these two libraries alone will allow you to support MetaMask and Wallet Connect together. The reason for this is because Webtree Model will support MetaMask given that the user has the browser extension installed. So after you have installed you have to configure it. It's actually very simple to configure it. You import your modals especially if you're using Webpack or any other es modules library.
00:04:40.476 - 00:05:27.292, Speaker B: If you're building react, this will be built in into your Create react app and you then instantiate a new Web Three model that you can configure the network that you're going to use for example Mainnet. If you're using for example, Rinkby, you just write Rinkabee. Or if you're using I don't know, Gorli or COVID or if you're using what's the other one like Polygon Mumbai, it's also supported here and optimism and arbitrary. So you just write your network name and that will be enough for the Web Three model to understand what you need to do in order to connect to MetaMask and Wall Connect. Then Wall Connect requires you to insert infuria project ID. You can go to infuria.com and get in project.
00:05:27.292 - 00:06:19.070, Speaker B: ID. The reason for this is because Wall Connect will allow you to sign messages and transactions from your wallet on your phone but then you need to read from the blockchain nonsense and balances and all of this information is read from an inferior ID. We also provide documentation in more detail about how you can actually configure other providers like Alchemy and Quicknode or Pocket Network. But for ease of use we actually added this inferior ID that you can add right now. After you configure it, you want to display this user model and this is exactly how it's actually displayed. You have this promise called Connect. So you do await Webtreemodel Connect and this will be enough from the configuration that you had before to display the options.
00:06:19.070 - 00:07:12.380, Speaker B: In this case I have an example of showing it MetaMask, Wallet Connect, ToRs and Coinbase. But if you only configured Wallet Connect then you're going to have MetaMask and Wallet Connect. So the configuration will then change how it actually displays to the user and it's the user choice that's actually going to change how the promise resolves. So the promise will handle how the user connects to one of these options and then once it's successful, it's going to return to you. So that's why you see the return of the promise as the provider. That means that you don't need to know what provider the user chose, you just need to build your DAP and allow webtreemodel to handle how these providers work under the hood. And then it's very easy because you can just insert that or inject that into your web Three by creating new Web Three object and inject the provider.
00:07:12.380 - 00:08:40.190, Speaker B: And it makes it very easy for you to support any of these providers by just delegating that responsibility to Web three model. It's important also to understand that these providers comply to a standard called EIP 1193 and they have very important events. So when you use Web Three JS or Ether JS, you're going to see that it exposes accounts and it exposes a chain ID for you to understand what is the accounts that the user has exposed to this tab and what chain ID is it currently connected to. And to do that you can also have this point where the user will actually switch in the wallet and you need to subscribe to these events to understand it. So if you don't subscribe to these events, you're going to think that the accounts are still the same but they actually change and that's going to make your transaction fail. Or the same thing can happen with chain ID where you are going to make a transaction, let's say on Rinkbee, and then the user chose Mainnet and at the moment if you don't listen for these events, then you're going to break your app because then you don't know that the chain has changed. So we have two events called Accounts change and Chain Change will then pass down the data from the event that will actually tell you which accounts and which chain ID were provided so you can update your app.
00:08:40.190 - 00:09:30.828, Speaker B: Another thing, most providers actually have a disconnect button, while MetaMask doesn't have this, most providers do. So it's important to actually include this logic in your DAP as well, where you can allow the user to disconnect from the current wallet that they have by doing a promise, a wait provider disconnect. And because you're using web3 modal, it also allows it to cache the provider. So it means that next time the user comes back to the DAP, it will always choose the same provider. So it doesn't have to be always choosing. So you might want to clear the cache provider from webtoon model. When the user has disconnected, the user gave the intent to disconnect, therefore you should clear it.
00:09:30.828 - 00:10:26.350, Speaker B: The reason I say this because in previous hackathons we've seen people that have kind of spent hours debugging why is my Web three modal always selecting the same provider? And the reason is because sometimes you have to dig a little bit into the docs and this is one of the recommended parts I think that's something that I should improve on the docs. But I'm telling you now, make sure that you clear the cache provider. So yeah, I covered pretty much the basics here. I want to make sure that we have questions and we kind of have back and forth. You can see that in the Web Three modal docs we have instructions for multiple providers from Wallet Connect, Coinbase, Wallet, Fortmatic, Torres, Portis and all of these. And then you can configure your Web Three model with as many as you want. I definitely do not recommend that you use more than six or even eight.
00:10:26.350 - 00:11:17.512, Speaker B: I think four to six is kind of like a sweet spot to not overwhelm users. And we also have documentation about different APIs and how to actually update themes because you can have a dark mode if you want and you can follow this QR code to have more information regarding the Wall Connect docs where we have a little bit more detail regarding the infuriads. And we have these tabs where you can see the differences between using a custom RPC or an inferior ID. You can go to the docs, wellconnect.com, different QR code now. And then we also have documentation for Ethersjs and Web Three JS because you want to perhaps use different libraries depending on which one you're more comfortable with. My personal recommendation, honestly, would be Ethersjs.
00:11:17.512 - 00:11:52.404, Speaker B: But some people find that Webgs has a more developer friendly API. It's really a very subjective matter to make it easier for you guys. So it saves a little bit time. I've created the React app that already implements Webtream model with Ethers. And you can fork this right now and you basically scan the secure code and you will just build your DAP on top. It's a very bare bones react app. And from this bare bones react app, you have Wallet Connect, you have Web Three model and you have Ethersjs.
00:11:52.404 - 00:12:31.560, Speaker B: And from this you can basically just build anything you want. And it just kind of covers this integration part that we talked right now. So, first question, is SafePal included in the Wallet list? SafePal supports Wall Connect. You can actually visit Wallconnect.com where you can see all the wallets that are supported. And I'm pretty sure the SafePal is part of the wallets that Wallconnect is supported by because it's an open protocol. You must understand that there's hundreds of wallets and every day we see a new wallet show up.
00:12:31.560 - 00:13:15.988, Speaker B: And I'm pretty sure put the repo link in the chat will do. So you can go, which repo link, Leonard? Because you have this repo link which is for the example. And then you have the Wall Connect dogs. And if you're talking about the registry, the registry can be found@wallconnect.com slash registry. So Jordan, can I use Wallaconnect to test using hard hat and ganache? So that's actually a very interesting question. You can do that.
00:13:15.988 - 00:14:36.988, Speaker B: So Wallaconnect is Isomorphic library which means that it will work even on React native. It will work on browsers like React View, angular, whatever library you want to use, and it will also work with Node JS. However, in order to use Hard, Hat or Ganache, I think that you might not want to use Webtoon Model because Webtream Model is a browser specific library. So I would recommend if you want to test it with Hard, Hat or Ganache, that you go to the Wall Connect docs that are right now displayed and you actually go through the Webtree providers by itself, don't use a Webtree model for hardat organs. I want to make sure that I didn't go too fast. It's made very easy for a reason. But I definitely think that you don't forget that we are on Discord as well, because some problems might not be as apparent now, but in the future they can come around.
00:14:36.988 - 00:14:52.820, Speaker B: And I know that this is a virtual hackathon. You have 30 days, and it's not as stressful as the weekend hackathons, but definitely make sure that you try to cover as many questions now so you can focus on building your project and not have to spend hours debugging.
00:14:54.840 - 00:15:16.288, Speaker A: Yeah. If you do have any questions, just bring them over to the ETH Global Discord page and under the Wallet Connect channel. I don't see any more coming in now. We do have a few more minutes. If anyone does have any questions, it looks like we don't. Well, thank you, Pedro. That was very informative.
00:15:16.288 - 00:15:23.130, Speaker A: It was great to have you. If anyone has any questions, bring them over to Discord. We do have another talk with oh, we do have one more that just came in.
00:15:24.460 - 00:15:51.344, Speaker B: So web3 UI kit. I'm actually not familiar with this library, but I would say probably not. I mean, if you see the interface that looks like this, maybe the answer is yes, but you can't customize this interface that much. The one used by Morales. Maybe not. Maybe they have their own. I actually haven't looked into it.
00:15:51.344 - 00:16:45.060, Speaker B: I'm familiar that some people use webtree react and wagme and onboard JS These are Popular Integrations for web3. Do you plan to become a full authentication manager and help DApps do Twitter, Discord, Connect? I don't think so. The goal is to still stick to Web Three, and I think that Web Three model, as it says in the name, might expand beyond ethereum in the future, supporting other blockchains like Solana and Cosmos and Polkadot and near. But I still think that the best value can provide is almost as a generalized authentication for blockchain. So you could think of it as almost like a sign in with Web Three rather than sign in with Twitter or Discord.
00:16:48.440 - 00:17:02.516, Speaker A: Perfect. Thank you very much. Great. Thank you, everyone, for tuning in as well. We do have one more workshop with Abe tonight at 530 Eastern Time. And with that being said, we can head over there soon. Thank you very much.
00:17:02.538 - 00:17:09.130, Speaker B: Peter awesome. Thanks, everyone, for coming. And if you have any other questions, go to the if Global Discord at Sponsor wallet Connect.
