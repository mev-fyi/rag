00:00:00.570 - 00:00:38.540, Speaker A: So welcome, everyone, to second day of Judging. At East Online. We are just give you an overview. This is a hackathon with over 700 hackers and 1000 applications came in. We have hacking teams from 65 countries across 19 time zones to sort of give you a sense of the scale. And 175 projects have been submitted and will be judged in these coming days. I'll briefly run through the format of how this will go.
00:00:38.540 - 00:01:12.850, Speaker A: This will be the same for every demo. There's a four minute video, no longer than four minutes. So as teams join, the first thing you'll do is you'll share your video. So as you join, you just keep your video camera off, share screen, and share your demo video. Then as soon as the demo video is done, turn your video cameras on and unmute. And then you have four minutes of questions with the judges. Andy, my colleague here, will be keeping the time, and he'll try to give a 1 minute warning.
00:01:12.850 - 00:01:57.058, Speaker A: And then he'll, in a friendly way, interrupt at the end of the four minutes and try to keep things on time. And then around the halfway mark, we'll have a ten minute break. And this is sort of how, in general, we've set up the criteria. There are these relatively broad categories, but we judge on technicality originality, the practicality of the hack, the UIUX and DX. And then there's sort of the wow factor. If it's just like a cool idea or presentation. And like all the ETH global events, we're really serious about that.
00:01:57.058 - 00:02:28.330, Speaker A: Although there's competition, this really isn't, at its core a competition. We want to set these things up so people get to the end of these and have learned a lot. We're not aiming to build all these things to be businesses. It's really up to all the hackers, whatever direction they want to take things. There's no emphasis on that, per se. We just want really cool, interesting projects. We hope people learn, and that in this session, the team should really look at this as an opportunity to get some really good feedback.
00:02:28.330 - 00:02:59.254, Speaker A: I'm going to quickly introduce our judges for this session. We have Sashav Toady from Lemniscap, Sergey Koons from 1inchh and Xiao Wang from DeFi Alliance. Thank you for your time. We very much appreciate you guys showing up here and lending your judging talents to this event. And now, with no further ado, we.
00:02:59.372 - 00:03:00.040, Speaker B: Will.
00:03:04.510 - 00:03:17.370, Speaker A: I actually have to promote you. Stand by. This is my this is me. Multitasking.
00:03:19.390 - 00:03:20.250, Speaker C: Boom.
00:03:22.710 - 00:03:31.730, Speaker A: Okay, Andy, if you could announce the first team and we'll get underway.
00:03:32.150 - 00:03:39.240, Speaker D: All right, so our first team will be overlay. If you could start sharing your screen, that would be great, and we can get this started.
00:03:40.650 - 00:03:44.360, Speaker B: Sounds good. Can you guys hear me okay?
00:03:44.970 - 00:03:46.278, Speaker D: Yeah, we can hear you.
00:03:46.364 - 00:03:50.200, Speaker B: Perfect. Can you see?
00:03:51.370 - 00:03:52.120, Speaker D: Yeah.
00:03:52.910 - 00:04:54.000, Speaker B: Perfect. We'll start the video. We are the overlay team. We built a platform to trade any DeFi data stream, long or short, with leverage using on chain price Oracles. How it works traders come in and build positions by locking up synthetic OVL tokens native to the protocol. In a protocol offered market contract at time weighted average prices fetched from the Oracle, traders receive ERC 1155 position tokens upon locking up their OVL and on position unwind the market contract dynamically mints or burns OVL to pay the trader back their profits. Protocol revenues come from trading fees where 50% are burned to manage the OVL supply and 50% are sent to a community governed treasury with rights to ovel espot market liquidity providers and governance participants, the demo.
00:04:54.000 - 00:06:14.566, Speaker B: So, as you can see, when I log in, I see my OVL balance, I see trading view chart, but if I click, I can select different markets that the protocol offers. So there's ETH USD there's dai USD. So if I want to go and build a position on BTC USD, just click this button, build new position refresh to make sure the price is up to date. And I'll go long, say about ten OVL with seven and a quarter leverage. When I build the position, what you see is the OVL being locked up into the position contract, 50% of the fees getting burnt, 50% being sent to the community treasury. And then if I come back and click unwind, I'll see my positions that I can potentially unwind for BTC USD. The new position that we just made, seven and a quarter leverage the lock price.
00:06:14.566 - 00:06:57.698, Speaker B: So if I want to take profits on a prior position, all I have to do is click on wine position here. We'll unwind most of it. And what you'll see is the protocol minting new tokens to compensate me for my profits. There you go. So how's it made? There are three main contracts. There is an OVL token contract, only one deployed. And then there are pairs of OVL position OVL feed contracts.
00:06:57.698 - 00:08:03.850, Speaker B: Each OVL position contract has admin mint burn privileges on the OVL token contract. The OVL feed contract acts right now as a proxy for chainlink price feed data, which the associated OVL position contract calls on build unwind for price data. And each position for the OVL position contract is an ERC 1155 with a unique Identifier. That's a combo of the position attributes the lock price, long short side and the leverage factor. And then I can go send those, trade those wherever on secondary markets. Future work. We want to finish up the uniswap V two Oracle feed contract, which allows us to then use OVL ETH with enough spot liquidity to provide a way for traders to hedge their OVL risk treasury, staking governance and liquidity mining contracts for the initial distribution keeper bots for liquidations and mainnet.
00:08:03.850 - 00:08:11.600, Speaker B: You can check it out at Overlay exchange. We're live on testnet right now. Thank you so much.
00:08:13.090 - 00:08:16.720, Speaker D: All right, that looks good. The Q A will begin now.
00:08:19.490 - 00:09:24.526, Speaker B: Hey, Chow, here just a quick question so I better understand the product. So basically the P L is settled in the OVL token, is that right? Yes. Sorry, can you hear me okay? Yep, I do. The P L right now is settled in the OVL token and all trades are in OVL. So the problem is, well, why do I care? Because what I really care about is making profits in ETH, right? So the future work that needs to happen is providing enough liquidity on the secondary markets where, like for uniswap, you have traders going in and out of OVO ETH providing an incentive for uniswap LPs to actually put liquidity there. The thought process right now is the fees that the OVL platform ends up generating in OVL end up going to the people that stake those uniswap LP tokens in an OVL Treasury contract. But that needs to actually be implemented.
00:09:24.526 - 00:09:30.102, Speaker B: The point of the hackathon was really just to build the actual mechanism itself. Does that make sense?
00:09:30.236 - 00:09:30.630, Speaker C: Yes.
00:09:30.700 - 00:09:31.174, Speaker E: Got it.
00:09:31.212 - 00:09:31.960, Speaker C: Thank you.
00:09:33.370 - 00:09:55.630, Speaker E: Just to understand, how does the liquidation work? Basically, you're using your own native token as the collateral, right, which would have much lesser liquidity, especially in the start, and much higher volatility. So how do you handle all of that within your protocol?
00:09:57.330 - 00:10:50.442, Speaker B: So I guess it kind of feels like two questions, but correct me if I'm wrong. The first question with the liquidations, all the liquidations occur in OVL. So basically we're incentivizing people to liquidate. Essentially. Right now, in 50% is an arbitrary amount, but they get 50% of the amount that's locked up in the position and then the rest in terms of the volatility in the OVL token. I think that's kind of similar to the previous question. With the spot price, the hope is with enough spot liquidity on uniswap or on balancer, you can offer an OVL feed for OVL ETH.
00:10:50.442 - 00:11:25.498, Speaker B: Right? And then traders can take two positions. They can take a BTC USD position, an ETH USD position, and an OVL ETH position at the same time to try and hedge out any sort of OVL risk. And then it becomes a problem of managing the currency supply of OVL for enough people to feel comfortable in holding the OVL token and not thinking the supply is going to astronomically go up or increase, at least in theory. I don't know if that answers your question, but that's kind of the thought process.
00:11:25.584 - 00:11:30.714, Speaker D: I'm going to interrupt. There's just a reminder. There's one more minute left in the Q and A.
00:11:30.832 - 00:12:25.760, Speaker B: Okay. We have a white paper because this is an idea that my partner had previously come up with a couple of years ago, and we just never implemented it. And it's on the GitHub repo as well, if that helps for more detail. But at least when he did some agent based simulations, he showed that fees themselves could end up significantly reducing the supply over time. And he's not really taking into account tail risks of everybody winning at the same time. But the thought process is at least those fees could end up reducing the supply enough, where if you have somebody win out really big, it kind of net offsets that big payout. That's in theory, but the whole point is to try and build it and we'll see.
00:12:25.760 - 00:12:51.718, Speaker B: But hopefully that kind of answers it, at least in my mind, if the currency supply is managed well enough with the right incentive scheme, the thought process is there's enough confidence in the protocol where people don't feel like they're just printing some virtual token and it's going to be worthless when they exit their position. But that could be wrong, right?
00:12:51.884 - 00:13:17.850, Speaker E: It's not completely. So it's workable in the sense that synthetics does the same. Right. The only thing is it takes liquidity and confidence, which works against for us. When you're starting out right, you should have a plan of liquidity to start off with, because that would be success or failure of the product. It depends on secondary market liquidity.
00:13:18.010 - 00:13:20.960, Speaker B: Yeah. Does it make sense to you guys.
00:13:21.430 - 00:13:24.820, Speaker D: To stop you guys there? Q and A is over now.
00:13:25.510 - 00:13:27.410, Speaker B: Thank you. Appreciate it.
00:13:27.480 - 00:13:47.000, Speaker D: Yeah, thanks. So we'll give a ten second delay before introducing the next team. It all right. So, next up is the team Alethea. If you guys could start sharing your screen and we can get that started.
00:13:47.530 - 00:13:49.290, Speaker F: Yes, I'm audible.
00:13:54.510 - 00:13:55.370, Speaker E: Yep.
00:13:56.270 - 00:13:57.018, Speaker F: Okay.
00:13:57.184 - 00:14:53.486, Speaker G: Hello, everyone. This is Arthri Vijaykuma here, presenting for Alethia. Now, Alethia is a profile management application that is built on top of Ceramic Network and that implements the IDX protocol. Now, Alethia is built to unlock a whole new web3 experience with decentralized identities and basic profiles being made universally accessible, such that any application that uses three ID connect, IDX protocol, or Alicia itself, we plan on creating a library very soon will be able to access and retrieve these basic profiles. Now, without wasting a lot of time, I'll quickly get in the demo itself. All right, so we get the startup screen and if I click on Get Started we can choose MetaMask and we get this iframe on top of here of three ID connect. If we click on Continue, we'll have to sign on our MetaMask for access and in about a couple of seconds we will have a profile that loads up.
00:14:53.486 - 00:15:20.550, Speaker G: So essentially, we are retrieving a did using three ID Connect, which is again built by Ceramic Network and the team at three box. There we go. So we have the profile that loads up a couple of details, some noji description, et cetera, et cetera. We can also see a bid that's displayed over here. We can further click on Edit and change any of the fields. Let's choose an image. I'll choose the same one once again.
00:15:20.550 - 00:16:00.252, Speaker G: And the image is of course, being uploaded to IPFS itself directly. And we can change any of the other details if I want. Let's see, I'll just write student college and I'll update it and once again another couple of seconds we will get back the previous screen where it's updated. There we go, it says student and college. This is all once again being stored decentralized and the user gets absolute control over the data. That's the advantage. And as I mentioned, it's being stored on ceramic as smart documents and at the same time IDX protocol helps with the routing and being able to access and fetch these basic profiles.
00:16:00.252 - 00:16:58.150, Speaker G: Now, if I just quickly copy my did here and what we will do is we'll head over to the Explorer route. Now, the Explorer route exists simply for allowing users to access any other did profiles apart from their own profiles. So let's say you have a friend's did, you could just paste it and click on Resolve and you'll be able to fetch their profile. Of course you will not be able to edit any of the details through to explore a section. It's simply to be able to fetch different DIDs and sorry, fetch different profiles using the DIDs, in just about a couple of seconds we will see the same profile that appears and there we go, the same details are once again fetched over here. However, we can see that there's no edit option here, we just have the back option and that's about it for a demo, we try to keep it as short and straightforward as possible. Thank you so much for your time.
00:16:59.240 - 00:17:02.230, Speaker D: Yeah, looks good. Q a will begin now.
00:17:02.760 - 00:17:40.450, Speaker F: Yeah, I think before the Q A, I'd like to just add one small thing. Before we couldn't include it in the video but about the future plans. So as I think I just mentioned, we plan on creating some kind of a library or some way in which other websites will be able to access these profiles. And secondly, our main idea was actually about doing this for the medical sector where we can store the healthcare records and the doctors can actually sign each of those updates. Plus at the same time the prescriptions of the medicines can be verified at the medical store by the pharmacist. So that was kind of the larger picture. But during this hackathon we could just with this much into our project to get started.
00:17:44.780 - 00:18:01.564, Speaker H: I have one question Henry. What about encryption of the data itself? So I have seen if I have this idea, I can access the personal data. Do you plan to encrypt that?
00:18:01.762 - 00:18:02.172, Speaker F: Yeah.
00:18:02.226 - 00:18:10.930, Speaker H: Did you thought about that the problem because you would have problems with regulatories with not encrypted personal data out there.
00:18:11.960 - 00:18:12.372, Speaker B: Yeah.
00:18:12.426 - 00:18:46.540, Speaker F: So regarding that, the basic profiles are meant to be public. Obviously the did is not known to any application as such, you have to sign your MetaMask to resolve and get the did itself. So that kind of helps with it. And once you do. The basic profile is kind of more or less public, where you can get the data, but for something like healthcare records, which are future plans, that will definitely be encrypted. So Ceramic Network has something as a format specifier called diagose, I believe. We had some trouble setting it up, so we didn't push those changes into a hack project itself.
00:18:46.540 - 00:19:04.420, Speaker F: But yeah, so Dagose would essentially work as a JWE, and we can encrypt it and store it on IPFS itself, and that kind of helps. Plus there's version control, too, so we can actually go back and see the previous versions. And that's kind of the idea for the long term.
00:19:08.200 - 00:19:08.612, Speaker C: Thanks.
00:19:08.666 - 00:19:18.680, Speaker B: Yeah. Didia, how would you bootstrap the initial critical mass of users? Because this requires some sort of network effect right at the beginning. True.
00:19:18.750 - 00:19:56.276, Speaker F: So we don't have a concrete plan as such. I think the first aim was to play around with this whole new tooling. We really love the idea of decentralized identities, and what it presents is the whole new opportunity that it presents. And considering how new the tech is, we definitely wanted to get our hands dirty with it, test out something and see how it goes. We don't have a concrete plan for that, to be very honest. But we hope that people recognize how important it can be to take control of your own data. And I think that the technology itself hopefully can convince a lot of users to try it out.
00:19:56.276 - 00:19:59.270, Speaker F: And, yeah, that's kind of how we thought of it.
00:20:00.040 - 00:20:10.776, Speaker B: One thing you can potentially try is some sort of financial incentive at the beginning, some sort of token governance, whatever. Just thinking out loud, but just an idea.
00:20:10.958 - 00:20:13.050, Speaker D: There is 1 minute Q and A.
00:20:13.820 - 00:20:29.900, Speaker F: We'll keep that in mind. Thanks for that. We actually open to a lot of feedback and suggestions because this was, as I said, something of an experiment for us. We actually started with a different idea, but pivoted because we wanted to challenge ourselves. We don't want to be too comfortable, and any feedback really helps.
00:20:30.480 - 00:20:31.870, Speaker B: I like it a lot.
00:20:34.820 - 00:20:37.090, Speaker E: I hope you had fun building this.
00:20:37.540 - 00:20:38.688, Speaker F: A lot of fun.
00:20:38.854 - 00:20:43.090, Speaker E: You look really out. Fresh out of college. Are you still in college? Yeah.
00:20:43.560 - 00:20:44.676, Speaker I: Still in college.
00:20:44.858 - 00:20:45.444, Speaker B: Yeah.
00:20:45.562 - 00:21:13.370, Speaker E: It's a good output for a hackathon, right? What I would think you should pursue the project is actually build applications on it or actually have partner with DApps, who will build those users either through an API, which is a better route to get users and have a service layer instead of treating yourself as a DAP developer. But, yeah, I hope you've learned it's been a good drive for you.
00:21:13.740 - 00:21:14.392, Speaker F: Definitely.
00:21:14.526 - 00:21:15.804, Speaker G: It is a lot of fun.
00:21:16.002 - 00:21:18.910, Speaker D: All right, that's the end of the Q A. Thank you very much.
00:21:19.780 - 00:21:21.024, Speaker F: Thanks so much.
00:21:21.222 - 00:21:22.064, Speaker B: Thank you.
00:21:22.182 - 00:21:29.010, Speaker D: All right, so next up is a Team Rupia. If you guys could start sharing your screen, that would be nice.
00:21:35.860 - 00:22:15.360, Speaker C: Today I'm going to talk about Rupia. This is my Ethanline Hackathon project submission. So the reason behind doing this project is there is an emerging DeFi opportunity in India. This is due to emerging use cases which have skyrocketed due to the Pandemic, such as insurance, automation, sports betting, retail, investment lending. They're moved away from cash transactions more and more towards digital currency and using. So there is a strong need for that. However, it's difficult to use existing Rupee based stablecoins for beta use cases because many of them are still in beta and they are also quite centralized.
00:22:15.360 - 00:23:26.200, Speaker C: So what are the requirements for a good Indian stablecoin? First thing it needs to have crypto gateway via imps or an immediate payment service. This will reduce the transaction fees. Needs to have a simple user experience so that it doesn't turn off the users and also it needs to have an interest rate greater than 4%. So this is an incentive for users to all this in mind. What is done for the Saturpan is simpler, sort of an MVP where the user tries to put Rupees using a sandbox environment and this is then converted to die. This die the matic network is then compared with which is using cryptocompire or an open API and with this open API the price variation used to then convert or lend your stable coins. So I've run the react script and then what you see is that will show the user directly buy that in the matic network.
00:23:26.200 - 00:25:13.930, Speaker C: So and I've given my wallet address and this will then convert it now to like a just an account created so that speed up the process what you see is like in the staging environment all the code for this is available in GitHub so you can integrate it confirmed. So the next bit has to be done manually by the customer which is basically we'll have to scan this QR code and make a payment using the bank app. Once it's done, then he can then see on his email address. For example, this amount of time to the wallet currently the wallet has like thousand 300. So it should be increased now to this is the current transaction. Under the hook there's a contract which is deployed already and that is basically using an open APA like cryptocompat to get chain link node and this just gives you exchange rate between Die and Rupee which is 76.7 or Rs76 and 77 pi same and the code is available on GitHub and have a look and you can see that it's joint converter There are some issues with collateralization and it's not fully done work in progress which needs to be made.
00:25:13.930 - 00:26:06.650, Speaker C: The next steps for Rupees is to integrate it with interest rate forecasting model which I developed in a previous hackathon this will enable good interest rate prediction and more efficiency so once that is done then I can launch Rupee automatically in parallel I've already been in discussions with Transat to get rupaya listed on Transa. This will enable interest rates to be redirected directly to the bank account of the user. This enables exciting use cases such as insurance for example where claim automation can be done with user paying premium via INR and then having this to enable payouts as well. Smart contract automation. Thanks for the opportunity.
00:26:11.520 - 00:26:11.932, Speaker G: Yeah.
00:26:11.986 - 00:26:13.340, Speaker I: Done with the presentation?
00:26:15.200 - 00:26:16.924, Speaker D: Yeah. Q A will start now.
00:26:17.042 - 00:26:17.710, Speaker C: Yeah.
00:26:19.940 - 00:26:50.330, Speaker E: My main question here, Vijay, would be considering how volatile INR itself is compared to US dollars, right? Do you see a demand for people holding INR once they've converted crypto and not holding US dollars itself if they wanted to be stable? Because INR generally be going down. All third world currencies have been on a slippage, right?
00:26:51.660 - 00:28:00.360, Speaker I: Yeah, exactly. So what is happening is that this whole idea started because I was trying in a previous hackathon to build like an insurance claim automation and run it. And when I spoke with other insurance companies and so on when I reached out in India what they were saying is that it's quite volatile, the rupee and that's why they wanted something which is stable. But if you try to convert it to US dollar and the US dollar itself is also not that stable but if it is for example somewhere it is collateralized with Dai there is actually an opportunity for many of them but they want it to be as simple as possible. So that's why this need emerged. But you are right in the rupee itself is quite volatile and it has had like more than 15% or 10% variation over the last six months. That's why if you track it and if you provide like an interest rate which is greater than 4% then there is some sort of an incentive for them to switch and also have pay premiums directly as rupees.
00:28:06.030 - 00:28:09.606, Speaker B: Vijay, why did you choose to build it on top of matic?
00:28:09.798 - 00:28:23.354, Speaker I: Yeah, really good. So initially I wanted to build it on ethereum and then I wanted to have it for example like any other stablecoin like Dai running on that. But the biggest problem is the gas transaction and the second thing is user experience.
00:28:23.472 - 00:28:23.800, Speaker C: So as.
