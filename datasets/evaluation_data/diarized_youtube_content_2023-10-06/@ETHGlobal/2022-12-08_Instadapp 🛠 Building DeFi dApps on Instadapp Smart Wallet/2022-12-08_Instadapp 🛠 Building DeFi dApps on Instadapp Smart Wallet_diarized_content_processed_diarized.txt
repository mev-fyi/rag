00:00:06.170 - 00:00:13.406, Speaker A: Okay, cello guys, I think we can get started. I hope you guys are on channel two. You are able to hear me? All good.
00:00:13.508 - 00:00:15.290, Speaker B: And me? Am I audible?
00:00:15.450 - 00:00:47.546, Speaker A: Great. So, hello everyone. Welcome to the third edition of ETH India. It's really great to see you, everyone in person after like long three years due to the COVID So here, myself, Trilok and my teammate Shreya are here from the team instead App. And we are going to show you how to build the DeFi DApps on top of App smart wallet. So, Shreya, I have a question for you. So, I have a question for you.
00:00:47.546 - 00:01:03.134, Speaker A: So, I have some idle ETH lying in my wallet. So I was thinking maybe to deposit that in Lido for some rewards. They were mentioning that I'm getting almost 4%. So what do you think? What's your opinion on that?
00:01:03.332 - 00:01:11.666, Speaker B: Well, Trilok, you're right. Lido is offering around 4% rewards of Staking on your ETH. But how much idle ETH do you have?
00:01:11.848 - 00:01:14.286, Speaker A: Around 100 ETH.
00:01:14.398 - 00:01:26.162, Speaker B: You're a big man, Trilok. No, but although, what if I tell you that not just 4%, but using your 100 ETH, you can gain almost as high as seven to 8% rewards?
00:01:26.306 - 00:01:29.466, Speaker A: Whoa, that's really interesting. But how is that even possible?
00:01:29.648 - 00:01:54.286, Speaker B: So, Trilok, it's possible by using a financial strategy called as leverage. So leverage is when you sort of increase your exposure to some assets. So if you can see that, this is how your position will look like. In the first case, this is you just holding your stake deed, earning the regular 4% Apr. And in the second case, you are going almost two X leverage, earning around 7% Apr.
00:01:54.478 - 00:02:00.302, Speaker A: Whoa, that's really interesting. But how is this even possible? In DFI. Decentralized finance.
00:02:00.446 - 00:02:22.460, Speaker B: So in DFI, this is how you should go. Now, this is you holding your 100 stake death. Now you can deposit your 100 stake death into Ave. Now, on Ave, you can borrow against your stake death up to 72%. So now you borrow some ETH from Ave. You swap this ETH into stake death. And now you deposit it back.
00:02:22.460 - 00:02:38.814, Speaker B: So as you can see that your collateral has sort of increased. So you can obviously borrow more against your collateral. So you borrow 28 ETH more to sort of go to X, which is 200 staked ETH. You swap it back and you deposit it again. So there you have it, your two X position.
00:02:38.932 - 00:02:41.646, Speaker A: Oh, whoa. So like this, I can earn up to 7%?
00:02:41.748 - 00:02:42.814, Speaker B: Yes, that's right.
00:02:42.932 - 00:02:54.446, Speaker A: But here, if I see it almost took like seven transactions, I think it will be a bit time taking. And for me to research how I don't think it might be feasible.
00:02:54.638 - 00:03:17.146, Speaker B: Well, look, you're right. It is time consuming. And don't just get me started. This is you going just two X. Let's say you want to increase your rewards even more and you want to go three X or even as high as 3.5 X leverage, which is the maximum that you can go. And if you see that it takes you almost 16 transactions to go three X leverage, but your Apr at the same time is going to increase to 10%.
00:03:17.146 - 00:03:20.880, Speaker B: And in 3.5 X it's almost as high as 12%.
00:03:23.330 - 00:03:31.310, Speaker A: But I would really like to have more than 11% here, but I'm not sure if I can do more than 16 transactions.
00:03:31.810 - 00:03:52.802, Speaker B: Well, Trilog, so this is where Insta DAP comes into play. Instadap provides these complex strategies available to the users in just one click. And such strategies are available on top of so many protocols like Uniswap, Ave, Compound, et cetera. And you would be shocked to know that Instadap is currently managing around 1.7 billion TVL.
00:03:52.866 - 00:03:54.840, Speaker A: Whoa. Isn't that very huge, guys?
00:03:55.210 - 00:04:23.382, Speaker B: Well, it is. So now let me tell you how you can sort of achieve this transact. This strategy available in one click. So to achieve this in one click, we sort of use something called as a Flash loan. So now, mind you guys, you will be just doing one transaction, but I will be breaking that down into a set of actions that will be performed sequentially. So this is your action stack. Now, again, we started with 100 stake deed.
00:04:23.382 - 00:04:55.180, Speaker B: Now we flash borrow 100 ETH. We swap this to stake deed. We deposit the 200 stake deed that I now have, I borrow 100 ETH, and using the borrowed amount, I pay back the Flash loan. Now, since this is a transaction, but it has not happened on chain, so it has not yet executed. So we need to execute this transaction so that your balance get updated on chain. So we cast this action stack and this is how your position looks like in the end.
00:04:58.350 - 00:05:22.900, Speaker A: Oh, that's real. Oh, that's really cool. So if it's really taking one transaction, I think it's like doable I would love to see how is that even possible? Maybe I would try to go by 3.5 X to get maybe the 11% that you are showing in the previous slide. Is that even possible?
00:05:23.590 - 00:05:48.426, Speaker B: Well, yes, Trilok. So here's the catch. Now, we just went two X. Now, even if you have to go as high as three X or 3.5 X, you can see that your Apr is increasing, but your number of transactions just stays the same. And that is possible because now you're just taking a higher amount of Flash loan. So now, Trilok, I have sort of conceptually explained you how you can achieve this.
00:05:48.426 - 00:05:51.934, Speaker B: Will you be able to show our fellow developers how you can code this out?
00:05:52.052 - 00:06:56.638, Speaker A: Sure, I think that would be interesting and everyone is looking forward for that. So instead, App offers an advanced web3 based online editor that lets you to interact your DFI right from your browser and that we call it as playground. So in the playground, we have TypeScript and HTML supported too. I guess most of you guys would be using Vs code or some code like editor, right? But what if you had the same visualization for Vs code in your browser? The playground is built using the same architecture or the same libraries to give you the same Vs code like feel. And then have you ever wondered? You can import your NPM packages in your browser? It's possible using the ESM automated library import. And not only that, in your browser or in your playground, you can use natively big number library axiom and then the await. The top level await I hope in Blockchain or DeFi.
00:06:56.638 - 00:07:01.890, Speaker A: You guys might have to do a lot of Asynchronous calls that you can do it easily.
00:07:05.510 - 00:07:14.680, Speaker B: Okay Trulok. So I think you can get started. And don't forget to log in using your GitHub or email. So you can share me a link and I can cross check whether you have written the right code.
00:07:15.370 - 00:07:46.782, Speaker A: Sure. So let's get started with the demo. So I'll be showing you guys how to code in just like ten minutes, how to code a leverage strategy. So before that, before that I'll just give you an understanding of what's playground and how the playground is connected with our main application. So this is our main application. This is our instead of main application. So in this application we have a feature called something as simulation.
00:07:46.782 - 00:08:16.822, Speaker A: So when you turn on the simulation, you can actually do all your work like whatever you want to try it without really spending. So that means it's like a testnet environment. You're actually converting your main application into your testnet environment. So I've turned on the simulation. So let's assume that we have turned on the simulation. I've turned it on over here. And in the same way, once this has enabled, it will show you that this model that you can do all this like all the transactions.
00:08:16.822 - 00:08:39.490, Speaker A: Like let's assume that you want to before using your real funds. Maybe someone is like putting real money. Then before doing all the real transactions, you can really test it out on the simulation. So now the simulation mode has been turned on and it gives you 1 hour of time to do whatever transaction you want. And then this is the playground.
00:08:39.830 - 00:08:41.330, Speaker B: Top up the balance.
00:08:43.590 - 00:09:16.046, Speaker A: And here also I'll link the simulation. I'll link the main application simulation with the playground. So I'll connect like this. So once it's connected, both the playground, the code over here and over here, it's connected. So let's see. So when I go to Ave V two so do you see any funds over here? No, right? It's currently empty. Now this is already like the prescript written that whenever you kind of first time go to it, you'll be able to see this.
00:09:16.046 - 00:09:48.998, Speaker A: So what this basically does is that it tries to deposit ETH. This is the ETH address that we use to have a proper convention. And this is the connector. So instead of smart wallet, so instead of smart wallet can interact with the protocols using something called as a connector. A connector is an intermediate contract that helps the DSA to interact with the protocol. So the connector has all the logics. Suppose let's say you had to give the allowance and then deposit.
00:09:48.998 - 00:10:19.038, Speaker A: So the connector handles allowance and the deposit for you. So you just need to call something like this. And also you guys might be wondering why this is in JavaScript and why not in solid and how I'm exactly interacting. So the playground is built on top of a DSA connect SDK. What it does is that you can interact with your DSS smart wallet directly with the JavaScript. So you can just write the code. This is the connector.
00:10:19.038 - 00:10:33.880, Speaker A: That how you are going to interact. So now here I'm just going to change the amount. Maybe let's take one, three, four, I think one, I think one, 3.45. This is the amount that when I run it.
00:10:38.390 - 00:10:41.062, Speaker B: You don't have balance, you need to top it up.
00:10:41.196 - 00:11:25.650, Speaker A: Okay, I think I don't have a balance. So on simulation we have a feature that you can get the test funds and we just call the top up function over here and then we just put 100. And once that is top up you will be getting like it's like your test tokens. If you have been on a testnet or anywhere, you will be going to the faucet, right? So the same way we have our own thing called as top up where you will be able to top up 100. So once this is top up, I'll call it and now it's showing casted to spells and the transaction hash. So let's see what happens. Now I'll try to reload the DAP.
00:11:25.650 - 00:12:13.800, Speaker A: Since the internet is a bit slow, it's kind of taking time to load it. So here if you see I've deposited whatever, the amount that I've entered over here was exactly deposited over here. So you will be able to see. So that's how you can connect the playground with the real app and then you have a visualization to also look into it. So now I've explained you what's playground and then what's the main application, how they both are connected. And also one more thing, just to give you a short brief of what are the components there on the playground. So this is the left side is the online editor, right side is the console.
00:12:13.800 - 00:12:45.296, Speaker A: If you remember I've said it supports HTML too. So when I click on the Toggle at the bottom, it shows me the HTML editor and the right side the preview of the HTML. So for now I'll just turn it off. This is the simulation button where you can connect the simulation with the main app. And then we are supported on five chains. Here you can see the five chains. Then a person or an owner can own multiple DSA accounts.
00:12:45.296 - 00:13:16.476, Speaker A: So since he can own multiple DSA accounts, you can toggle between them. So now for now, what I'll do is that I'll create one more DSA on our main application to get started with the leverage strategy. So this is how I'll be creating. I'll be just calling the new over here and then it will create a new DSA for me. So the new DSA is this actually. So this is the ID. So you can see the ID over here.
00:13:16.476 - 00:13:40.740, Speaker A: And this is my DSA address. And a DSA can have multiple authorities. So this is the address that I'm currently on MetaMask. This is my EOA address and this is my owner. So my owner, my MetaMask address controls this DSA. There are different types of authorities. Also, I'll explain you later when we go on to that slide.
00:13:40.740 - 00:14:19.310, Speaker A: So now I've created a new DSA. Let's see here also if it's there, here if you see it's 35820. And here also three five, sorry, it's two three at the end and it's two three at the end. So now I'm on the same DSA. So let's get started with the leverage transaction before starting. As SRIA explained, I initially had 100 stake ETH. So let me top up 100 stake ETH.
00:14:19.310 - 00:14:53.018, Speaker A: So here it shows me I've added 100 stake ETH. So in my balance, I should be seeing 100. So now we have our requirements set up. Let's get started with the coding. So I have some pre code written. Those are just like addresses and all the stuff. You can just find it over the Ether scanner anywhere.
00:14:53.018 - 00:15:31.338, Speaker A: And the amount that I'm going to start is with the 100. Since you all guys know we can't directly use the Ether format of a number or amount, we have to convert it into V. So we have converted this amount into V format by multiplying it with the ten to the power of 18. And now the leverage factor. So in the leverage, as we have seen in the diagrams, I'm going to explain you with only the leverage factor of two. So the leverage factor is two, the leverage amount. So if you guys see over here in the leverage factor of two, the amount was 200 stake it.
00:15:31.338 - 00:16:06.866, Speaker A: That is I need to have at the end 200 stake it. So the amount that is going to be over here is going to be the amount in V times this one. Now, as Tria explained, first we need to take a flash loan. Have you ever wondered like, what if there was an autocomplete where you just call take flash loan and it automatically gives you the flash loan code. You just don't need to remember. You can just use it directly. See, it gives you the autocomplete.
00:16:06.866 - 00:16:54.726, Speaker A: And here is the where you add the spells. So in Flash loan you have to mention the address that you want to take the amount and the route the flash loan fee and everything, you can dive deep into it on our docs which is available for now, those are set as constant five and the flash loan fee is set as to five basis point. So the flash loan token. So here in the example we have taken 100 ETH. So in the same way I'm going to take 100 ETH, also we have the Rapid address as Autocomplete. So if I just type Rapid and press Enter I get this or else since I've already saved at the top, I can just use that one itself and the flash loan amount. So now how much amount do we need? We need 100.
00:16:54.726 - 00:17:33.618, Speaker A: So the amount in V would be the flash loan amount. So that's it. So you have the flash loan ready, flash loan spells ready, you have to just add the required spells and also once you have taken the flash loan there was a requirement to swap the ETH into stake ETH. So now again for the swap we use one inch. So to use one inch there are a lot of setup you have to do. So we have simplified that on our DSA and also we have Autocomplete for swap. That's it.
00:17:33.618 - 00:18:22.500, Speaker A: You can see you have a swap spell also ready. You have to just mention the sell token. That is what we are going to sell. We are going to sell the Rapid to stake ETH and the amount would be the flash loan amount and the slippage, I'm setting it to 1%, you can increase it according to your requirements. And this is the swap spell here the swap connector ID. So all the connectors on our smart contract level are linked with an unique ID and you have to just mention that so you don't have the hustle of remembering the connector address and stuff. We faced that in DSav one so we made it easy for you.
00:18:22.500 - 00:19:53.040, Speaker A: So this is the ID and the name of the action is sell the byte. Sorry, I'll try to buy Rapid, I'll try to buy stake it and I'll try to sell Rapid and the amounts, the Uwent and everything you don't need to know right now you can go into it maybe whenever you're diving deep into the docs. So now I have the spells also ready for the swap. Now I think I have only two spells required that would be deposit and borrow. So now how will I get the connector ID of Ave V two? Let's say in the first thing I've been shown you. So you can go to our docs, you can navigate to the connectors, the main net, you can go to Avev two and here you can see a deposit spell, the deposit spell, the connector ID and then the arguments, a description for that is also available. So again I'll be using autocomplete to have the basic structure of the spells to add ready and then I'll be just entering and then I have to deposit what I'm going to deposit the stake it did you guys have any question or anything? Why here it's 200 and why here it's 100 you had any questions? Maybe we can do it in the Q and A for now.
00:19:53.040 - 00:20:35.752, Speaker A: So we'll be depositing the stakeholder and the amount. So the amount would be the leverage amount. So we are going to deposit 200 and then the set ID and get ID is zero. You can understand them later maybe once you dive into the docs. Then the other spell that is required is borrow. So I have to borrow 100 e so that I can pay back the flash loan. So I'll be again calling add spell autocomplete.
00:20:35.752 - 00:21:15.936, Speaker A: I'll be writing away v two A borrow. And I'll be just mentioning the parameters. So these are the parameters. Now we have our leverage spells ready. The only thing here if you have also seen okay, so the payback of the Flash loan was already added over here when I have used the autocomplete for the Flash loan. So it's already there. So that I've skipped.
00:21:15.936 - 00:22:08.696, Speaker A: But now, since we have all the spells ready in a sequence for the leverage strategy, now I have to just cast them. So executing the action stack or the spells. So here transaction hash rate cast. So this is how I cast it. And I'll be getting a transaction hash. So let's again jump into the Ave dashboard on our main application here you'll be see it's empty, we have hundred stake it all the requirements looking good. The next part would be just casting so I'll be calling this and now it tries to cast it and gives me a transaction hash the transaction was successful.
00:22:08.696 - 00:23:04.998, Speaker A: Now let's see what happens what I see over here so here if you see 200 stake ETH and 100 ETH the same thing what Shia has told you, that how the position would be looking. So in the two X leverage 200 stake ETH, 200 stake ETH, and then 100 ETH. And now the Apr is 7.2. Here you can see the net APY. Also, the rate is currently 7.2. And that's how you can do that's how you can build your own strategies or the spells, and then you can connect them or maybe create your own application or a D five DAP. Also, you guys might be wondering I've said that you can build your DAP, but there is no UI.
00:23:04.998 - 00:23:37.430, Speaker A: It's only the script. So for now, since it might take a bit of time me to explain HTML. So I already have the pre code written where if I turn on and I have a UI also ready and then I can share this link with Shria. So Shria can actually just enter the amount and will automatically do the two X leverage for her. So now we have built a DAP just in few minutes using playground and that's playground.
00:23:39.530 - 00:24:07.134, Speaker B: Well trilok the demo was really amazing. So, as you can know that Instadap also has a product which is the Instadap Lite, which also uses the same strategy, which is the St ETH leverage Staking and provides around eight to 9% of Apr on the yields. It is currently managing around $200 million of TVL. And you almost wrote that code around the 70% of the same code in just 15 minutes.
00:24:07.332 - 00:24:08.640, Speaker A: Isn't that amazing?
00:24:10.210 - 00:24:25.874, Speaker B: It feels so yeah. So building just on top of Insta DAP and DSA account is just as easy as this because of the playground and the development environment available. So let's switch on to some question and answers.
00:24:25.922 - 00:24:32.200, Speaker A: If they have yeah, if you have any Q A, you can ask them also.
00:24:36.910 - 00:24:40.540, Speaker B: No, it's fine. Sorry.
00:24:46.830 - 00:24:55.342, Speaker A: So you guys have any questions, any doubts? Just a second. Let us wear the headset, then you can ask.
00:24:55.396 - 00:24:56.000, Speaker B: Yeah.
00:25:00.380 - 00:25:01.870, Speaker C: Hello? Can you hear me?
00:25:03.280 - 00:25:04.840, Speaker B: Very faint noise.
00:25:04.920 - 00:25:06.012, Speaker C: Can you hear me now?
00:25:06.146 - 00:25:34.398, Speaker A: Not exam, not able to hear. Hello? It's come, but the mic that mic is not coming. Yeah, I think it's working. Hello? Yeah, it's working.
00:25:34.564 - 00:25:43.810, Speaker C: So I was wondering if does the SDK or the playground provide anything that the website does not provide out of the box? So can you give me an example of a strategy?
00:25:44.630 - 00:26:36.820, Speaker A: Okay, so currently, whatever the strategies that we have on our main application are also built using the same SDK, that is the DSA connect and the SDK and the application also use the same set of sequence of the spells. So maybe if you want to have a strategy that is not available on our main dashboard, could be lot, it could be person to person. But we have only added the top most strategies which our users were looking for. So that's why we have added maybe if you want to build something, maybe a new strategy where let's say you want to do something like this. You want to borrow sorry, first, let's say you want to deposit ETH into Ave, borrow die and then deposit into compound. Maybe let's say there was some strategy that was yielding you much higher yields. So in this you can just combine them in the sequence of series and then you can build it and then you can share it as I've shown you how to share it.
00:26:38.150 - 00:26:39.426, Speaker C: I do have another question.
00:26:39.528 - 00:26:39.914, Speaker A: Yep.
00:26:39.982 - 00:26:47.494, Speaker C: So does the SDK support only the platform supported by Instadap or can I go for a custom platform like some other lending protocol?
00:26:47.622 - 00:27:25.858, Speaker A: Okay, so that's a nice question. Over here. So basically, as I said, the instead of smart wallet and the protocols can only interact via the whitelisted connectors. That means first we need to build the connector that is written in the solidity or the smart contract. And once that is written and that has been whitelisted once that's whitelisted and then you will be able to interact. So now assume that instead app is like an OS. So once we have added the connector to this OS platform you can create N number of combination with the other strategies.
00:27:25.858 - 00:27:50.160, Speaker A: But we have to add that connector because we kind of follow some standards and some security concerns where it makes all the things whatever I've shown you makes simpler for you guys. Anything else? Thanks. Okay, great. Anyone, any other questions? My question is actually extension of.
00:27:52.130 - 00:28:00.346, Speaker D: Why DSA is controlled by an EOA, an owner. So why can't owner do any arbitrary.
00:28:00.458 - 00:28:05.650, Speaker A: Transactions from sorry, sorry, what was the last thing any arbitrary.
00:28:07.670 - 00:28:21.110, Speaker D: Right now owner has to do the transactions from list of connectors. So it can only interact with only certain amount of protocols. But why can't owner do arbitrary calls to any contract?
00:28:22.010 - 00:29:09.806, Speaker A: Okay, so now as you all know, EOA can do only one transaction per time. So EOA is an external own address or the MetaMask address, whatever you see it can only do one transaction like one action because we don't have a batch or anywhere. There is no like a standard that's been followed where you can batch all these things. So insteadap has done that for you guys where we have created the standards where all the protocols as I said, the connectors follow a standard which makes you composable between different protocols. So now what do you say? A DSA can be owned by any address. Any address that can do a small kind of transaction that could call the DSA. The owner can be an EOA, the owner can be a Genosis or any other smart contract, anything.
00:29:09.806 - 00:29:41.742, Speaker A: Owner can be anything. And then in the authorities you can have different levels of permission. This is not available on the main application yet, but currently we have only one kind of owner that is the full access owner. You could have manager, guardian and the automation. The manager is now whatever. The owner has access, right? He can access all the connectors. That means he can access the security, he can access the funds and everything.
00:29:41.742 - 00:30:16.982, Speaker A: But the manager has only limited amount of access. Maybe let's say he can just interact only with the compound. Only with the compound he can't interact with the ave. So that's a manager type of authority. Then the guardian guardian just helps you to recover in case you have lost the owner address. Let's say your MetaMask private key, maybe the guardian can help you. And then the automation automation is just like a thing like whenever the market is crashing or something the position you have seen, right? In those cases, if it has to save, it has a limited fixed strategy that it can execute.
00:30:16.982 - 00:30:29.054, Speaker A: So automation can execute a fixed strategy. So that's like an automation authority. So was your doubt clear? Yeah, that's right. I just wanted to ask that is.
00:30:29.092 - 00:30:35.566, Speaker D: There any way a connector can be added? Connector allows arbitrary calls.
00:30:35.678 - 00:31:10.670, Speaker A: Okay, so for the security reasons we haven't added a connector that can do an arbitrary calls. Like you can't just call any direct random contract that's for the security reasons. So if you want to maybe in the hackathon, if you want to build, you can build a connector. You can add it to the insta app on the testnet or on the main net folk. So if you want to building on top of where you need a custom connector. Then you can build your own connector and then you can just create like a main net folk environment and then you can do it. But currently the adding of the connector is done by the dow.
00:31:10.670 - 00:31:17.120, Speaker A: All right, makes sense. Thank you. Any else question? Any other? Okay.
00:31:19.250 - 00:31:23.838, Speaker B: So the other team also has a workshop, so we won't maybe after this question.
00:31:24.004 - 00:31:47.010, Speaker A: Okay, so I think we are running out of time. We'll be at the booth and we'll be around. So this is our discord channel. You can just connect and ask questions. That's our Twitter handle and our email address. If you're building on top of Insta app and if you have any questions or anything, we'll be around or you can email us or you can come onto discord. All right guys, all the best for your hack.
