00:00:02.650 - 00:00:05.310, Speaker A: Tina, do you want to introduce the next speaker?
00:00:05.730 - 00:00:14.100, Speaker B: Yes. Next will be Georgios. Is thing on? Can you hear me?
00:00:14.550 - 00:00:15.970, Speaker A: Yeah, we can hear you.
00:00:16.120 - 00:00:35.014, Speaker B: Okay, great. And now you can probably also see my screen. Cool. Is the screen on too? Yes. Okay, fantastic. So thank you all for coming. Thank you Carl, for the very energetic presentation.
00:00:35.014 - 00:01:17.634, Speaker B: As usual, my presentation is going to be a lot more vanilla and we'll make a lot of assumptions about what the audience already knows because we've already heard a lot. So, skipping through, I'm Georgios, I work at Paradigm, a venture capital firm and I'm a research partner here. So let's talk about mev. And before we talk about mev in layer two, maybe it's worth kind of understanding what the questions we should ask when talking about mev are. And firstly, let's preface this by saying that I don't think that we can remove it fully, but we can minimize it. And there's various layers of the system which we can touch on towards minimizing mev. One of that is on the protocol layer.
00:01:17.634 - 00:02:37.778, Speaker B: On the very base layer, there is a lot of parameters. There is how block producers are chosen, because maybe the block producers, as we saw earlier in the discussion, are random, but maybe they're predictable. And if they're predictable, what are the implications of that for MVV? Maybe if many block producers are predictable, maybe it's more likely that they collude and that they end up maybe doing multi block mev extractions like time banded attacks. It's also another good question to ask is are transactions in the clear? So are transactions submitted to the sequencer encrypted or are they submitted clear text? If they're encrypted, what is the mechanism to decrypt them and so on. With respect to ordering, who owns the ordering? Is it always the sequencer or the block reducer or the miner that owns the ordering operation? Or is there some consensus enforced operation? Which randomizes transaction ordering? This is also very important. What about finality? Does the protocol have finality? How long is that finality? Finality is a big factor when you're thinking about time bandit attacks. Again in the multi block MV extraction scenario separately from that, on the network layer there is a question to ask around Byzantine fault tolerant proof of stake versus the proof of stake that we have.
00:02:37.778 - 00:03:56.102, Speaker B: In Ethereum, for example, in Tendermint, there is no notion of time banded attacks because once a block is mined, once a block is validated, there's no way to roll it back. But perhaps the mev extraction happens at the network layer during when the gossip protocol plays itself out and validators try to decide which transactions they should mine on the network layer also because I didn't add it, because we've talked about it a lot and after all, we're in Flashbots Mev roast. There is Flashbots also which allows you to basically, instead of having the main communication channel, you try to introduce another one such as the flashbots kind of like second mempool. And that allows you to introduce new rules on the network layer there. Finally, on the application layer, there's things which you should consider around mev, such as thinking about it from first principles, mev is exposed on the application layer. It gets exposed when there's races towards touching the same piece of state, for example, when there's, let's say, an order on uniswap and they both touch all orders touch the same reserve variables. So something that could improve things, or for example in the liquidation.
00:03:56.102 - 00:05:22.550, Speaker B: So something that could improve things would be that maybe you try to introduce some ordering on the actors that try to go after an mev opportunity. And an example of that would be Keeper Dao's K compound protocol, where instead of allowing anybody to liquidate, they just allow certain parties to execute liquidations based on the Dao elected liquidators, similarly done by B protocol, again on liquidations. So, like the general notion is that you try to remove this sort of anybody can liquidate, anybody can ARB, and you try to introduce different structures in the way that actors interact with the system. So now that we have kind of the basic questions on how we should be approaching the problem, it's worth maybe looking at it from the angle of layer twos. So just to say the very basic things, the layer twos, like since the dawn of layer twos with the side chains papers, what they were saying is that they let us experiment without fear of the layer one. Like weird things happening to layer one, so we can start introducing crazy features on the layer two while being relatively conservative on the layer one. But the kind of layer twos that we have right now, which are mostly roll ups, whether it's the optimistic or the ZK variants, more or less, the mental model should be that it's just another layer one again with respect to mev and the previous questions, and that it just has some additional mechanism which allows it to inherit ethereum security.
00:05:22.550 - 00:06:29.100, Speaker B: Beyond that, there is nothing too specific to the layer two. And something to note is that whenever the layer two is more programmatic, for example, fuel is a slightly more restricted computational roll up compared to, let's say, starquare or ZK sync or optimism and Arbitrum kind of if you think about it in a spectrum. And so more programmability always will mean more mev. So that's how it should be thought about on the layer two layer. And then something which was also mentioned earlier, earlier, is that when mev gets extracted on layer two, that means it does not get extracted on layer one. So in a sense, we are not really removing mev by introducing layer two systems, rather we're just moving it from one place to another and we introduce certain rules there. And these rules may either be mempool things, the block producer election, the things that Carl just talked to us about or transactional randomization or who knows what else, and kind of zooming in on that.
00:06:29.100 - 00:07:39.118, Speaker B: On the mev auction. I have slightly more opinions, and Carl and I may disagree on this, that in a way the mev auction forces everything to be on the sequencer and the rational sequencer probably would want to extract as much mev as they want or as they can. And it remains to be seen if kind of operating this benevolent sequencer model is good enough. There's another approach that we've seen by Arbitrum which says that instead of kind of having one sequencer that decides on the ordering, you introduce a BFT protocol on top and you have all the parties in that BFT protocol agree on the transaction ordering. Again, that maybe works, maybe doesn't, for reasons that Phil has talked about in his blog post and in his talk. And that is because how do you elect these people? What happens? Does that move? Again, the mev from the actual consensus layer to the networking layer before when the parties are trying to figure out what transaction ordering should be followed. So the takeaway basically is that there's no free lunch in any kind of mitigation that you introduce.
00:07:39.118 - 00:08:44.498, Speaker B: And other approaches of course, are classic cryptography based techniques for kind of separating execution from ordering, which Ellie alluded to some of them. And we've had these discussions in the past, in the previous roasts. Something to note about mev and optimistic rollup is specifically there is a statement which goes like because miners can search through a fraud proof for zero cost and by censoring a fraud proof they can get paid counterfactually after fraud has been executed. You can say that all the funds in the nocturnistic roller could be considered mev because, well, the sequencer could go loot with the miners, or the miners could be a sequencer and they would make an invalid state transition and everything would be censored for the entire dispute period. So if you're thinking about this completely in a vacuum, you're just thinking sequencer miners, that's it. Sure, I'll take it. But in crypto there is lots of complex interactions and we will see why this attack kind of collapses.
00:08:44.498 - 00:09:16.350, Speaker B: And the reason is quite simple. We should think about it from two cases. One where miners just do a 51% coordination and they orphan any blocks which include the fraud proof. So this would be a chain split scenario where some miners decide to create them to accept the fraud proof, some others don't. And effectively you have two Ethereums. This ain't going to happen. Miners are long ETH any kind of attack on ethereum in that way directly destroys their investment.
00:09:16.350 - 00:10:19.170, Speaker B: So that aside, there's also another approach which would be that maybe all the miners somehow get convinced to put their hash rate and say this transaction is bad, we should ignore it. Or this transaction is rather we got bribed by this party to censor this transaction. So I don't have a formal proof for that or some kind of intuitive game theoretic argument, but I don't see this possible as possible at all. It destroys Ethereum's base settlement assurances, and it seems like a complete non starter to me. So there is a very small nuance here that we just talked about transactions which would be good but get censored by miners. But what about transactions which are, let's say, bad, for example, somebody doing, let's say, money laundering on optimism, and they want to withdraw these funds. So should miners accept a transaction that allows a money launder to exit their funds? And on that, I have no opinion.
00:10:19.170 - 00:11:03.086, Speaker B: Ideally, if the base layer is properly distributed, this should never occur. Like the protocol behavior that is not able to distinguish here. But who knows what will happen, right? Our understanding of blockchains evolves a lot over time. And just to kind of hint at things, because I know that we have a talk in the next mev roast about crosschain mev, but just to kind of drive the point home, it's not just that. The simplest systems and the most complex systems have various degrees of mev. And of course, with systems with variant kind of degrees of composability or interoperability. But anytime any of these systems tries to talk with each other, it exposes mev.
00:11:03.086 - 00:11:44.340, Speaker B: And anytime a message is relayed from one place to another, there is a party that does this relaying, the relayer, you call it whatever you want. And this relayer will have the ability to insert their own transactions, delay inclusion of your message, maybe reorder the transactions, and so on. So the question I posed to the audience is, like, as blockchains start to become more complex and the interactions between them go up, will we be able to keep up with this complexity of mev extraction? And how will our tools evolve on all this? And that was it. Thank you very much. And I'm happy to answer any questions, if any.
00:11:47.270 - 00:12:03.880, Speaker A: Thank you, Giorgios. Great talk. Any questions? Again, great presentation. No questions from chat. Oh, Alex has a question.
00:12:04.890 - 00:12:08.760, Speaker C: Yeah, but Justin, if you want to ask yours first, if you have any.
00:12:10.590 - 00:12:18.762, Speaker A: I always have one question in my back pocket, just in case no one has questions. I'm happy to go. After you, Alex. Go ahead.
00:12:18.896 - 00:13:04.826, Speaker C: All right, so I'm still wrapping my head around layer two, so thank you, Georgia. That was a great presentation. So I have a question related to layer two. Submitting the roll up batches that were with transactions within that layer two already sequenced within that roller batch to the data availability layer, so Ethereum, or to a shard in Ethereum. And if someone is doing cross layer two arbitrage, would they be concerned about which roller batch is processed first by the data availability layer? Or does that not matter at all in the sense where you care about the sequencing of which batch is submitted first between two different layer tools. Does that make sense at all to you? Or am I missing something here?
00:13:05.008 - 00:13:24.654, Speaker B: So you're saying that there's two layer twos, two sequencers, two data availability layers. Each one of the sequencers submit the data availability batch to their own system. And I am a party doing cross chain arbitrage. And the question is so it's nearly.
00:13:24.702 - 00:13:29.458, Speaker C: That it's two sequences, two layer twos, but the same data availability layer. Right.
00:13:29.544 - 00:14:07.390, Speaker B: Doesn't matter. I mean, maybe it does matter depending on the protocol implementation, but it shouldn't matter from a client side perspective. All you need to know is that the data has been published somewhere. So for you as the Dex trader or whatever, medium, small size, it doesn't matter. What matters that you have the guarantee that the data is there. Yeah. So from the perspective of the individual protocol, I don't think that you need to care much about what happens on the remote layer.
00:14:07.390 - 00:14:53.882, Speaker B: Okay, cool. Thank you. There's a question from the chat about do you think Infuria Alchemy, et cetera, are going to start extracting mev soon? So, firstly, Infura and Alchemy are not miners or validators, to the best of my knowledge. They are just node providers. So they don't have any specific roles in the system or the ability to reorder transactions in whatever way. Whether they would do there's maybe like a dark scenario in which Infuria just starts censoring transactions or start copying traders that use it. That's one possibility.
00:14:53.882 - 00:15:06.820, Speaker B: But in reality all the kind of legit traders, they use their own nodes and they have proper peering with peers that are well peered and so on. So no, definitely not.
00:15:13.430 - 00:15:20.680, Speaker A: Okay, so it looks like we have two more questions. Question from YouTube. Do zero noise proofs affect mev extractability at all?
00:15:22.890 - 00:16:04.180, Speaker B: If you bought the argument that I made earlier that the optimistic roll up is not affected by the attack that I mentioned from miners, then in practice I don't think that layer two and zero knowledge has kind of like any added benefit over optimistic plus mev. So I don't think so. I don't think that zero knowledge proofs affect me. Unless of course you mean that you introduce a zero knowledge proof to maybe do the secret leader election or to do some things in the VDF and so on.
00:16:06.010 - 00:16:28.170, Speaker A: Okay, fantastic. And I think we have just 1 minute. And also I'll ask my question, which is it seems that paradigm is going big on mev, like hiring a team internally that specializes in that, but also investing heavily in the broad mev ecosystem. Can you talk about the investment thesis around hiring all the mev gigabrains?
00:16:29.390 - 00:16:55.330, Speaker B: I don't know about us hiring any of the mev gigabrains. We're very excited to be working with Flashbots. Of course. I think that mev is like an important trend that we identified early on. Both Charlie and I were looking at this from a while back. So I think that mev is one of the most important topics for Ethereum's future. And of course, we care a lot about Ethereum.
00:16:55.330 - 00:17:02.600, Speaker B: So it seems very reasonable to me that we'd care about mev and try to be close to it.
00:17:03.690 - 00:17:13.690, Speaker A: I see. So it's kind of like a defensive investment, kind of a hedge. You have all this ETH. You want to defend it because the mev is kind of a systemic risk.
00:17:14.110 - 00:17:34.580, Speaker B: I don't think it's necessarily a systemic risk or well, maybe the nice way to put it is that we want to try or like I would want it to be a force that makes us improve our systems and make them more stable. So you can call it defensive, but maybe there is like, a positive angle to it, is all I'm saying.
00:17:35.030 - 00:17:48.030, Speaker A: Okay, fantastic. I think we're up on time and we have our panel next with I think Georgia is still on panel. Barry and Stanny. And David.
