00:00:00.250 - 00:00:13.790, Speaker A: Of Scale Labs and I head up Solutions engineering at Scale Labs. And so today we wanted to chat about deploying smart contracts onto layer two, and to show you what that looks like as far as ease of getting started this hackathon.
00:00:15.330 - 00:00:26.406, Speaker B: And if you guys have any questions, you can always interrupt because we have a small number of people. So if you have any questions or anything is not clear, tell us.
00:00:26.588 - 00:00:40.330, Speaker A: Right? So before just diving into the code and showing you what that looks like via adapt, rock, paper, scissors, we'll first talk about the problem. And the problem that we face is something that Stan can explain to you, right?
00:00:40.400 - 00:01:25.014, Speaker B: So you guys probably all know what DApps are, and everyone loves DApps. People program in solidity. Probably most of developers here at this hackathon program Solidity. So they program Solidity, they program Remix, truffle. These are very normal tools that everyone uses. So there has been lots of activity in developing DApps, but what we've seen for the last two or three years is that people developed literally like thousands of D apps. But none of these D apps reach enough of exception to be business, something of business relevant, something like mobile apps, where people have billions of users, right? We don't have any D apps like that.
00:01:25.014 - 00:02:02.430, Speaker B: So there's a significant gap and a problem between this huge success of Solidity and D apps and stuff, and the actual user exception of this. And so we are trying to solve this problem. And in this problem, the most important thing, which everyone kind of knows, is scalability. And it's actually very simple. And what scalability is. Let me just give you a couple of examples, right? If you doing a transaction on ETH main net, you're paying now about ten cents per transaction. And if you are storing something, you're paying the same ten cents per two hundred and fifty six bytes.
00:02:02.430 - 00:02:06.834, Speaker B: So it's pretty significant amount of money that you need to pay, right?
00:02:06.952 - 00:02:35.678, Speaker A: And if that's not all, as you're all familiar with, as you are running the transactions you're familiar with, knowing that you have to wait 40 blocks or ten minutes before something is considered finalized. Now, to think that's the best we can do in the industry right now is kind of absurd, because we want to bring DApps to feel more like applications today, and right now, it was just not meeting that threshold. So let's figure out, well, what are some of the solutions that we currently have today and how is it solving it?
00:02:35.764 - 00:03:07.858, Speaker B: Yeah, that's a great question. And again, to repeat, first we need to solve the problem, because we need to be able to support billions of users. Facebook supports billions of users. Twitter supports billions of users. Google supports billions of users. So to be able to match non centralized applications, we need to have the same type of performance. And so people been trying to solve this problem one type of a solution many people tried is just move some computations to a centralized server.
00:03:07.858 - 00:04:05.420, Speaker B: For instance, is Delta a decentralized change doing some of its computations in a centralized server? Many games do this, decentralized games, hosting websites, doing some of the game dynamics. But this part is really against the whole idea of blockchain, right? If you have a significant part of your D app running on a centralized server that then you can't really guarantee anymore the decentralization and security. And you've seen with many centralized exchanges, how easy are them to hack. And this hacking comes from them being centralized. So this replacing decentralization with centralization doesn't really work. Another thing which people are working on is decentralized file storage. Many of you know, for instance, there is a project named Filecoin and for storage, it's a very promising technology, but it's still two or three years away.
00:04:05.420 - 00:04:34.718, Speaker B: Then there is definitely ETH 2.0. As you know, ETH 2.0 is going to have much faster transactions than ETH 1.0. But again, we are going to see it in two or three years from now we're going to see the CTH 2.0, which is going to have about 1000 transactions per second for the entire world, pretty much. And then finally you have side chains. So we are at scale, we are working on side chains.
00:04:34.718 - 00:04:45.560, Speaker B: And for the rest of this talk, I'm going to talk about side chains. Sidechains is actually a very simple concept. It's just another blockchain, fully ETH compatible and connected to the main net.
00:04:46.410 - 00:04:59.942, Speaker A: So Stan, being our CTO is very close to the project, building a lot of the consensus layer and everything that kind of makes our project work. So talking about how that works, Dan, what would they expect from scale?
00:05:00.086 - 00:05:26.046, Speaker B: Yes, that's a very good question. So as I said before, a side chain is a very simple concept. It's just another blockchain. So you don't need to learn much. It's solidity compatible, it's remix compatible, Truffle compatible. You can reuse all of your skills that you've learned. It looks to you like another ethereum chain, but it's fully owned by you while being run on a decentralized set of computers.
00:05:26.046 - 00:06:03.646, Speaker B: So it's still a blockchain, still preserves decentralization. And then when you run a D app, what you do now suddenly you have two chains instead of one. And what you do, you try to perform most of your computation on the side chain. And then there is still some computation left on the main net. And this is related to users depositing money into your system and then withdrawing money. And then there is an interaction between the side chain and the main net, which we provide actually for you using our scale development framework. So you don't really have to think much about it.
00:06:03.646 - 00:06:35.654, Speaker B: It's done automatically for you in a secure way. And then let me give you an example. Let's say you have an application which is doing games. So you would implement most of your game dynamics on the side chain. So like for chess, you would do moves and chess rules and check and mate. All of this stuff you would do on the side chain. And then what you would do on the main net when the game completes, you would need to pay so the losing party would need to pay to the winning party.
00:06:35.654 - 00:07:27.958, Speaker B: And then that you would do ultimately on the main net. And for this, we have a special framework at scale which connects the main net and side chain. And you can transfer tokens from the side chain to the main net and back. And the way it's done under the hood, when you transfer easer from the main net to the side chain, what happens? You freeze this easer on the main net and clones for it are securely created on the side chain. And when you want to exit, when you move to move your money to the main net, you burn these clones on the side chain and you get some amount of money, the same amount of money unfrozen on the main net. It's actually a very simple concept which is done automatically for you, and that's actually very simple. And then another important thing is that there is Webster JS, which is a library.
00:07:27.958 - 00:08:22.554, Speaker B: Probably all of you guys know that's pretty much the major library people use to interact with these blockchains. So the only difference which happens is that instead of one single copy of Web Three JS, you have two copies in your browser. One copy points to the main net, one copy points to the side chain. Other than that, other than this complication, you continue programming in Solidity almost as simple as you would do it for the main net. The only complication being that you have now have two chains. So you have to apply some thinking, how do you split the computation? And as I said, usually you try to move most of your computation to the side chain because computation on the side chain is very cheap and very fast. We have subsecond transaction times which people also like because they enable real time game dynamics.
00:08:22.554 - 00:08:39.518, Speaker B: If you have like, chess moves or you have some other games, you can literally write every move immediately to the blockchain. And so this works pretty well. And then you don't have to learn much. You reuse your use of Solidity and Truffle and remix.
00:08:39.614 - 00:09:17.242, Speaker A: All right, so as you can hear, we've been pretty busy at scale, but what that means is we've also taken a look at how to make this easy for you to actually implement something like this. So let's get into what this will look like, actually creating this, putting this into a DAP that we built. So I have this DAP called Rock paper scissors. I have it deployed to rinkabee. So most of you, as you're coming to this blockchain event, you're thinking you may use Rinkabee as your testnet when you're testing things out, right? A lot of times the submissions require to go through there anyway. But let me show you what an experience like that looks like for DApp developers. So I have MetaMask attached to rinkby.
00:09:17.242 - 00:09:48.566, Speaker A: I have some rinkby fake ETH. If I enter in this game. This is tied to a smart contract on the back of my application called Rock, Paper, Scissors. Anyone want to play with me? Which one? Okay, what do you want to bet? Rock. All right, good move. So we're going to do this through Rinkopi, and we're going to wait because that is what we are used to now working with the blockchain. So it might take 10 seconds, it may take 45 seconds, it may take two minutes.
00:09:48.566 - 00:10:23.170, Speaker A: But if I were a real end user, I would have already closed this game down and went to another website. So this is not the experience we want to create for most of the users that are entering into this space. And even now, it's not back. Well, we'll continue on, and maybe that transaction will come back as we're looking at the documentation. But what does this look like? Bringing scale into the picture? So we've built out this dev portal that gives you step by step instructions on how to get set up. Now, the getting started is pretty much as easy as one, two, three. Prepare your scale chain by requesting it from us.
00:10:23.170 - 00:10:55.114, Speaker A: Migrate your smart contracts. If you're using Truffle, you're already familiar with this and then simply just testing out that transaction. So what I'm seeing here is that I only need to replace the private key and the scale chain. Well, the private key everyone already has. So if you want to get a scale and chain endpoint, you'll just hook over into our discord and you'll receive something like this. So here, when you reply to us, we'll give you a scale chain. If you need http HTPs WebSocket, we have you covered.
00:10:55.114 - 00:11:28.030, Speaker A: You're not just limited to Http here, but I'm just going to use this one for simplification of the demo. And let's go ahead and go over to my code and see what it would look like adding that in. So you see here a very similar format that everyone's familiar with deploying to Rinkby. So let's go ahead and add scale in. All right, perfect. And then we'll copy this. Because as I promised, it's the exact same format as if you were deploying to Rinkbeat.
00:11:28.030 - 00:12:03.162, Speaker A: And that's really it. Nothing much changes for you when you were trying to deploy to a side chain. Now, more on how to make this more usable for other users. We're going to go over that tomorrow. Today we're just going to talk about implementation. So if I go over to my console here, and what I'm going to do is enter a command that most of you are familiar with as well I'm going to reset, and I'm just going to call that network for scale and let that run. Now, what's going to happen here is similar to deploying to Rinkby or anywhere else.
00:12:03.162 - 00:12:36.254, Speaker A: You're going to go through the migration scripts. It's going to deploy. But one of the things you will see that is different from deploying to Rinkbe or any other network is that it's going really fast. A lot of times it goes, contract wait, contract wait, contract wait here. We're almost completely through the deployment here. So I'm going to let that run in the back end and let that finish. And then what I'm going to do is I'm going to head to the documentation again here, because when we provide you with the scale chain, we're also going to provide you with a faucet where you can get your own test ETH.
00:12:36.254 - 00:13:13.518, Speaker A: We don't have to give that to you. And we're going to provide you with a Blockchain Explorer, which, as you can imagine, has to be dynamic, because every DApps on scale chain belongs to them and them alone. So you're not going to have another DApps transactions appearing here. So if I go ahead and copy this endpoint, I'm going to paste this here, and what you'll see is all the transactions that are coming through, because I just deployed those smart contracts. We do do something where we are testing liveliness and deploying an empty box. So I filter all those out. But if you just want to see that A Blockchain is working, just go ahead and turn that on.
00:13:13.518 - 00:13:41.146, Speaker A: But I'm going to go ahead and hide this and let's go back here and test this out with my new scale chain. So it looks like the deployment completed, I'm going to come back here, and for Simplification, I'm going to change into MetaMask. Tomorrow we'll show you how to not use MetaMask for this. Switching it to my scale chain, refreshes everything. So let's add the blockchain back in there. All right, now, who else wants to play with me this time? Yes.
00:13:41.328 - 00:13:41.910, Speaker B: Scissors.
00:13:41.990 - 00:14:10.754, Speaker A: Scissors, scissors. And we didn't get to see if you won, but Ringbeak took too long, so we'll do it again. All right, well, scale, you notice how we waited forever and we didn't get a reaction here? It's almost like real time. So this feels like an actual application, like we're not dealing with the normal day to day operations of A Blockchain. And so this is what we're trying to achieve here, usability. Not just for the end users, for the DAP developers. It goes beyond that.
00:14:10.754 - 00:14:50.074, Speaker A: There are a lot of features that Stan talked about, such as that interchange messaging feature. If you're dealing with ERC 20, ERC 721, we have you covered. We're building built in features to make it easy to deal with those type of tokens, but it goes beyond that, too. If any of you have even thought of spinning up an IPFS node to be able to store something on a blockchain. Well, we tried to make that process even easier by adding in file storage. Now, file storage allows you to simply use an NPM package, upload files, download them, delete them, share them with the world, or share them with your browser directly here. And all of this is made possible directly within the scale chain.
00:14:50.074 - 00:15:06.240, Speaker A: So you don't have to figure out how to set all this up on the back end by creating your own IPS node. All right, so we covered a lot. Any questions about that question?
00:15:06.610 - 00:15:13.600, Speaker B: Yes, I think it says.
00:15:18.130 - 00:15:42.470, Speaker A: Yeah. So the validators, we're building out the validator network as we speak, so it's being built at the same time that we're onboarding early customers. And so the whole idea here is that we're going to do a phased approach to onboarding validators, but it's completely decentralized. So the validators are not scale. It's not friends of scale, necessarily. It's going to be pretty much like the world. Anyone who wants to spin up a node will be able to do that.
00:15:42.470 - 00:15:58.640, Speaker A: If you want to learn more about validation, right behind you. We have Liang. Sorry to put you on the spot here, but he is the one leading the charge on building out that validator network. He's doing a pretty good job at it as far as getting a lot of people lined up. So that way when we're ready to launch a main net, they are too.
00:15:59.410 - 00:16:05.760, Speaker C: What trade offs are you approach apart from these different chains at layer two?
00:16:06.610 - 00:16:08.174, Speaker A: So I'll let you take that one.
00:16:08.212 - 00:17:20.386, Speaker B: Yeah, that's a good question. I think, first of all, what we learned through this entire kind of our own experience with blockchain, we think that pretty much with main net and side chains, you can create pretty much anything. You can take any website now on the regular Internet, like Ebay or Facebook or Twitter, and you will be able to do it using either sidechains or mainnet or combinations. So what it looks like is that this entire ecosystem of solidity and remix and truffle, all of these things, what's going to happen, like, five years from now, ten years from now, is that the ecosystem is going to evolve, but it will stay in a very much the same way that there was this first web browser, Mosaic, and then there was Google Chrome and Internet Explorer and Firefox and everything. And we don't have the Mosaic anymore, and we don't have the JavaScript as it was like in 1993. But it got evolved. So we still have JavaScript.
00:17:20.386 - 00:18:18.230, Speaker B: And what looks like historically, what's going to happen, what we are waiting on is that this ethereum ecosystem has so much momentum is that ten years from now, it will pretty much stay the same. It will never be a revolution. It will be evolution. So it will be still solidity, still EVM, and still all this stuff, but it will be much more powerful. So this idea of side chains is very reasonable. Now, when you have a side chain, you're definitely making a trade off because on Ethereum main net, theoretically you have like infinite number of nodes which provide you this infinite security, but at a price of a very high computation cost because you repeat the same computation essentially on a very large number of nodes. So necessarily you need to make a trade off between the number of nodes when you make the computation and the price pretty much because someone needs to pay for this computational capacity.
00:18:18.230 - 00:19:32.290, Speaker B: So the trade off is definitely it's a smaller number of nodes, but the developer decides when you run your deep, if you run an exchange, maybe you'll pay for 100 node side chain. If you run a simple social network, maybe it will be enough for you to have 20 nodes. So the degree of decentralization may be different. But what we see though is it's a very interesting thing is that this internal security problem of validators becoming malicious or Byzantine. It starts to play actually less and less role because what we see is that Validators themselves are becoming more of a small businesses and medium sized businesses and not just people as they used to. So there isn't this reputation and there's much less possibility for things getting bad. So what's probably going to happen ten years from now you will have the world where the validators there will be small businesses around the world, there probably won't be just people because it will require lots of it experience to run those validation nodes, especially at high speed, at high security.
00:19:32.290 - 00:20:57.678, Speaker B: So the world which is we're going to see ten years from now is going to be the world where you'll see these small businesses like the small fish creating these large fish and that's how the world economy is going to evolve. And then you will have these validators which presumably will have reputation and long term objectives and you'll be like selecting out our network, you'll be selecting randomly validators for a particular side chain and rotating them. And the security problems for the most part we see as coming from outside, as coming from outsiders, hackers and not Validators themselves because Validators actually have long term economic interest in the entire reputation, in the entire system becoming good. And it's not only a question about slashing, just like if you misbehave I take $100 of your money, but it's a question about your reputation. If you're a doctor, right, and you make a prescription which is wrong and you are fined $100, then you're not only fined $100, but you destroy your reputation, professional reputation, and your patients will not come to you. So we're probably going to see very much things very much the same happening in the validator space where being a validator will be like they can be a doctor. You will cherish your reputation because your investors will come to you and stuff.
00:20:57.678 - 00:21:47.786, Speaker B: So these people will be pretty much caring about security. And then still there will be this trade off to make smaller chain, larger chain. And there is another important thing which one can help make to protect security is if security is very important, you can increase validator deposits for a particular chain and make these validator deposits as a last resort to guarantee payments happening on the side chain. So let's say you run decentralized exchange on the side chain. You can have mathematical possibilities as last resort. If there's a double spend or something bad happening on the side chain, you use the money that the validators deposited to guarantee the user money. So essentially you're shifting responsibility from users to validators.
00:21:47.786 - 00:22:34.780, Speaker B: But this is only limited to the amount of capital that validators put on the side chain. And then users actually pay for this capital because that will increase the fees you pay to the validators, because the validators will have to lock more capital. This will be economically determined, I think, by the real life. And we don't know exactly how is it going to play, but in the years to come we see lots of very great things happening, lots of people becoming digitalized validators, people trying to do all kinds of networks. So we did see this new economy, which is very interesting because you have the small fish all around the world creating the system, which is much more effective economically, I think. And that's really exciting part of this stuff.
00:22:36.350 - 00:22:47.326, Speaker C: Another question in case there's like a supply chain failure or some kind of exit mechanism for the fund locked up on the main net.
00:22:47.428 - 00:23:38.714, Speaker B: Yeah, so there are several mechanism to recover funds. First of all, there is a possibility to go back with transactions for a particular day. Let's say your chain was working yesterday and there was a checkpoint. So the chain actually makes side chain makes checkpoints. You can make the checkpoints every certain number of minutes or hours, whatever, usually once a day, and you pay for this. So you can go back to the previous checkpoint and then you basically lose transactions which happened for the particular day. And the way this would probably happen for the side chain is that if there's a security compromise, you as a side chain owner would vote that you had a security compromise.
00:23:38.714 - 00:24:40.100, Speaker B: The foundation we are setting up scale foundation, there will be set of computer experts, I'm sorry, I have a jet lag computer experts, they will vote that you had a computer, a security compromise. And if both the DF owner and the security experts vote there was a security compromise, they will be able to roll back the state of the chain to the previous checkpoint, which would be like the previous day. So that would be a bad thing, but not a catastrophic thing. And I think definitely one need to make provisions like that because it's impossible to guarantee computer security for infinite amount of time. You see, security compromises are happening all the time. So the best thing about security is to be proactive and actually honestly predict that sometimes things will go wrong and have some security response procedure to fight back.
00:24:43.820 - 00:24:56.590, Speaker C: All right, if there's a token deployed on the main net, usually what we have to do is also deploy that on the side chain and then do some kind of transaction to make sure that everyone has a one to one ratio. How do you guys handle that?
00:24:57.120 - 00:25:27.444, Speaker A: So you won't have to worry about handling that. We do that for you in our documentation. We actually just have just kind of like a quick example of what that would look like for the methods. You would call in our smart contracts on the main net and on the side chain. So on the main net, what you would do is call deposit, and what we do is we put that in a safe deposit box for you. From there, we automatically make clones of that same token on our side chain for you to be able to use. So it's always going to have a one to one correlation for what's on the main net.
00:25:27.444 - 00:26:08.376, Speaker A: Now, whenever you want to exit and send it back to, I don't know, the winner or a new user or the same user from the side chain, you would then be able to call an exit script or an exit method to then trigger that transaction to exit from the side chain. And what happens is we just burn the tokens on the side chain and we release the funds on the main net for that user. So that process we're building for you because, again, we're really concerned about usability. Just trying to make sure that developers don't have to do a lot of the heavy lifting for this. Cool. All right, well, that ends our session. Before we go, we do have a few prizes here for the bounty.
00:26:08.376 - 00:26:27.920, Speaker A: So if you simply just run through that same demo I just did, change the endpoint deploy to scale, you qualify for one of these prizes. So try it out. If you want to get a scale change, just chat with us on scale chat, which will put you into our discord or come see us at the booth. All right, bye, guys. Bye.
