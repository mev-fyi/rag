00:00:07.130 - 00:00:24.898, Speaker A: Awesome. Hey, guys. Hi, everybody. My name is Fabio. I'm one of the core devs at Push Protocol. And today we're going to be talking about what Push Protocol is, what problem it's solving, how it's solving. And by the end, we're going to see different ways of how you can integrate Push Protocol into your mobile app, into your DAP, into your smart contract, or into your wallet.
00:00:24.898 - 00:01:25.778, Speaker A: This so the first thing is, everything starts with a notification, right? So, for example, whenever we receive a new email, we always receive a notification alerting us that we have a new email. Or whenever someone makes a transfer money to our bank account, we always receive a notification. So notification has been proving over the years that it definitely increases user experience, but also increases user engagement in your community. The thing is, before Push, there was no way for protocols to reach out to the users, right? So protocols, they expect users to go back to the protocol themselves and fetch the information. For example, when will my ENS domain expire? Well, I have to check it. It's not something that I know by heart. And with a solution like Push Protocol, we can notify you, for example, one week before you lose your ENS, or we can notify you before you lose money on Avi, before you lose your collateral, or we can notify whenever new streams or superfluid starts.
00:01:25.778 - 00:02:16.454, Speaker A: So the solution, that the problem that we have currently in the Web three ecosystem is, first of all, for DAOs. As of now, DAOs, they have no way to reach out to users to alert them that there is a new governance proposal, right? So, for example, myself, I'm part of multiple DAOs. How do I know there is a new governance proposal, right? I have to go to Discord, I have to go to Twitter and be very active to see that there are new proposals for a user experience. It would be way better if I receive on my phone a notification alerting. Hey, new proposal zero x ABC has started. Do you want to vote? Then you click on Notification, then you can get redirected to Snapshot or any other application to cast your vote for defy. The same thing for user experience, way better to receive a notification before you actually lose money, right? I think we all agree on this.
00:02:16.454 - 00:02:44.298, Speaker A: And for NFT marketplaces. It's way better. UX. When you receive a notification, whenever someone places a bid on your NFT, I have an NFT, I want to sell it. Whenever someone places a bid, I want to get alerted. I don't want to give my email, I don't want to give any other information, and I don't want to go to the protocol myself to fetch the information. So the solution that Push Protocol is building, it is first, it is a open communication layer.
00:02:44.298 - 00:03:07.862, Speaker A: That means that anyone can simply go to the network and fetch the notifications and the chat messages. It's all open, everything is encrypted. All the chat messages are encrypted. Notifications, they can be encrypted and not encrypted. But the end is the layer is open. Anyone can simply fetch all the chats and notifications. The notifications, they are completely dynamic in two ways.
00:03:07.862 - 00:03:48.630, Speaker A: First of all, how you're going to trigger the notification, it is completely up to the developer. Do you want to trigger notification manually? You can go do you want to trigger a notification using Smart contracts? Please go ahead. Do you have subgraphs? And then you want to notify your users using subgraphs? You can do you want to notify your users on your server? You can. And lastly, the notifications, they are also dynamic in a sense that notification itself, they can contain any arbitrary payload. It can contain a governance proposal. It can contain a YouTube video. I can receive a notification with a YouTube video.
00:03:48.630 - 00:04:14.606, Speaker A: It can contain random text. It can contain pretty much anything. There's no restriction of what the notification should look like. And the notifications, there are multi chain, we're on ethereum, you're on polygon binary smart chain with more chains soon and also non EVM chains very soon. It is gasless. So for sending notifications, there is no fee involved, nor for receiving the notifications. And lastly, for me, that's the most important.
00:04:14.606 - 00:05:04.184, Speaker A: It is the platform agnostic delivery part that means is the user doesn't need to go to the Push protocol interfaces to fetch the notifications or to fetch the chat messages. Push protocol is an infrastructure protocol. We build these SDK, sort of APIs, we have these nodes, but anyone can import the SDK and have the exact same look and feel that we have in our website or a mobile app, in their own wallets, in their own DAP. So in the end, users don't need to know that Push protocol exists. We're just this infrastructure protocol that send notifications, that send chat messages, but how the users are going to see the messages in a chat message. Any front end can simply import the SDK and provide this experience to their community. So Push, we have sent over 30 million notifications so far.
00:05:04.184 - 00:05:42.236, Speaker A: We have 85,000 different users that have opted to receive the notifications and have had over 500 different use cases of notifications. And we have notifications that go from DFI, Dows, NFT, Metaverse, infrastructure, social media and services. And I think the difference. So we see that we have a lot of use cases for notifications. What I like to point out is the notifications that are completely pick and choose. So, for example, let's say that I'm a very active user on Lens. I just go to the Lens, I just opt in to receive notifications from Lens, and I will only receive notifications from Lens, nothing else.
00:05:42.236 - 00:06:37.360, Speaker A: If at any given moment I want to stop receiving notification from Lens, I just opt out. I sign a message, then I'm not receiving notifications anymore from Lens. So the end user has 100% control of what the user wants to get notified and the user can always opt out and there's no fees involved in just subscribing to this. So, as I said, we started Push Protocol, started as a hackathon project in Nithglobal, like just a normal project and we have been building for almost three years already and we started with notifications, but now we have chat. And the thing about chat is that chat has been built on top of this notification layer. And why does it matter and why is it important? So first of all, the experience that we have in web Two messaging system, we're bringing this into Web Three. That means that whenever I receive a chat message on the protocol, I will always receive a notification.
00:06:37.360 - 00:07:11.200, Speaker A: So for example, whenever someone messages me on Push Protocol, I receive a push notification on my phone saying, john east has sent you a message. Then I have this very similar user experience that we have on Telegram. For example, we also receive a lot of notifications on Telegram. So we're replicating this into push and of course in the future we're going to be able to fine tune the notifications. So probably I just want to receive a notification for that user, but not for that other user. So then we can fine tune this. But the goal is the end user will always have the control of what they want to get notified.
00:07:11.200 - 00:07:48.140, Speaker A: And here the left we have our website and here is the mobile app. And the idea is the website and the mobile app has been built using our own SDKs. And the idea for this is just showcase that you can have the same UI in your own protocol. Of course we provide the UI, but the idea is just that you can build exactly this in your own UI. Users don't need to go to Push to fetch all the messages or the notifications. So with chat wallet, wallet chat, I mean, the applications are endless. We're just an infrastructure protocol and how the system are going to be used is completely up to the developers.
00:07:48.140 - 00:08:32.580, Speaker A: Here in the middle we see that we have group chat. So a couple of months back we announced group chat and token gated group chat. What that means is now we have a web Three native way for people to communicate. So for example, I can create a group chat for my dao, I can create a token gated group chat. So that means is only people that are allowed to join this group is if they hold a certain amount of my governance token, let's say. And I can create a public group or a private group. So imagine I have my Dow, I have my Token, and then I create a group where I say, okay, all the chat messages for this group is public, so anyone can see all the chat messages, but only if you hold a certain amount of my governance token.
00:08:32.580 - 00:09:16.698, Speaker A: You can send messages. So you can see how nice this can be for Dows for online communities. So we are building this framework for better and more transparent communication, so we don't rely on their current chat systems that we have in web two. And of course, we have SDKs for both notifications, for both chats and also for groups as well. Yesterday, something very nice which calls Push Video. So it's a new form of communication that we have built on top of push chat. So the push chat is built on top of notifications and video is top of a push built on top of pushchat.
00:09:16.698 - 00:09:37.434, Speaker A: So we're building these communication Lego blocks that we build on top of each other. And push video is literally wallet. Wallet FaceTime. I have a wallet. My friend has a wallet, so we can call each other. So here's me calling Madur, he's a guy that work for us. So we're going to announce the SDK for Push video probably by next week.
00:09:37.434 - 00:10:12.116, Speaker A: And the idea now protocols or websites or mobile apps can now provide this service, which is Wallet Wallet Video calls. As of now, it's wallet. Wallet? Very soon we're going to announce group video call. So I cannot just create a group. I can call all my friends, but instead of calling their phone numbers, I'm going to call their Wallet addresses and then we can just FaceTime everybody. Here I have two videos. So here the left is just showcase how to log into the mobile application.
00:10:12.116 - 00:10:36.860, Speaker A: But as I said, you don't need the mobile app to interact with the protocol. And here on the right, the video is updated. We changed a lot the UI, but here on the right, we can see how we can start a video call. It changed so much already, I should have updated the video. But see, like, we always receive notifications. Whenever someone calls you, you receive a push notification. Say for example, Maduro E is calling you, like on my phone.
00:10:36.860 - 00:10:55.730, Speaker A: And then I can click on the notification, then I can start the video call. And here on the left is how the notifications look like and also how the chat looks like on the phone. See here, in the end, we saw how the notifications and then all the chat here.
00:11:02.270 - 00:11:02.634, Speaker B: Cool.
00:11:02.672 - 00:11:44.918, Speaker A: I can go for some code demos, how to integrate Push before I go that, does anyone has any questions so far about Push? Otherwise I just go into the code and then we can do the Q A in the end. Cool. So let me go into the push staging app. So what does the app looks like? You as an end user? Let's say I want to start receiving notifications from Push. So how does it work? So we have our app here on Mainet. Let me just close everything. Cool.
00:11:44.918 - 00:12:37.020, Speaker A: So on Push protocol, we have a concept of channels, and the channels is exactly like a YouTube channel. So me, as a user, I can subscribe to channels to receive notifications, right? So, for example, there is this Shapeshift governance channel. I can just come here, opt in. All I have to do as end user, just sign a message and then that's it. Whenever there is a new governance proposal for Shapeshift, I'll start receiving a notification, and the same will for land snapshot maker Direct. So the user can completely go and pick and choose what notifications they want to get notified notifications. They can come here on your inbox, as we can see here, they can come here on the browser extension as well, or on your phone.
00:12:37.020 - 00:13:19.590, Speaker A: Let's send a notification on our testnet because I have a channel created here. So the first step is if you want to send a notification, the first thing that I have to do is you have to authenticate yourself into the protocol so you can send a notifications. For this, you have to stake around $15 worth of push tokens to the protocol to prove that you're actually a legit person that won't notify the users. But I have a channel here, call it Demo channel. So let's send a notification. So the notification there are three types broadcast notification, targeted notification, or subsets. Broadcast means notify everyone who has subscribed to my channel.
00:13:19.590 - 00:14:00.450, Speaker A: Target means notify one wallet, and subset means notify an array of wallets. In this example, let's just notify everybody. And on here on the right, I have just this wallet that I have opting to this channel here on the right. So let's send a notification, which means hey, and my notification message, I'll call it Notification message. Then I can add an image to the notification. And I can also add a call to Action Link, which is whenever the user clicks on your notification, they can get redirected anywhere. But for now, let's call this send just this notification.
00:14:00.450 - 00:14:30.400, Speaker A: All I have to do is just to sign this payload. It is free, no money involved. And then I have received my notification here. If I come here to my inbox notifications here. If I come to the browser extension notifications here, and if I open my phone, my notification is here. If there is any wallet that integrates push, the notification will be everywhere. So notifications dispatch to everybody.
00:14:30.400 - 00:15:06.540, Speaker A: We can send also the same notification here. Bavia code. All the code here is deployed already. It's on GitHub in our push protocol GitHub. So for sending notifications, we have this rest API SDK. To send notification, all I need is the Push protocol SDK and the Ethers library because we need to sign messages. So I just import the private key from the wallet that created the channel.
00:15:06.540 - 00:15:45.286, Speaker A: So I created a channel with this wallet here. So there are two things. I can get the private key for this wallet, or we can do other thing that I do recommend for staging, it's fine, but for production I would add a delegate here, which means another wallet that can send notification on your behalf. I can add my other wallet here and then use the private key from this other wallet. So you don't use your private key for your main wallet. But since this is staging fake money, there is no problem at all. The channel address here is going to be this address here, the address that created the channel and the receiver.
00:15:45.286 - 00:16:24.230, Speaker A: I'll be notifying this address here, which is this guy here. Just double check, zero X-F-D six. And this looks about right. This is my notification title and this is my notification body. I'll change it to this because why not? And this then I'm just calling the SDK and all these properties here on the SDK, on the documentation itself. And I'm adding a call to action link. Whenever I click on the notification, I'll be redirected to YouTube and that's it.
00:16:24.230 - 00:17:11.136, Speaker A: So if I come back here so let me just run this, I send my notification. So if I come here, oh, I have this huge payload here. See, if I refresh here, the notification is here. And if I click on the notification, I go to YouTube and also here and also on my phone or any front end. We also provide react components because the idea a lot of protocols ask us like, hey, I want for my users to see the notifications on my own tab. I don't want the users to stall anything from push and that's the end goal. And for this, we provide react components for this.
00:17:11.136 - 00:17:53.388, Speaker A: So for you, all you have to do is to import this. So we have this react component here which is called Notification Item. And you can install it from pushpro called UI web. You just pass the notification array that you get from here by calling the SDK. You call the SDK, you get a notification array. Then you pass the notification array down to the components that we provide. So if I run this, how does it look like? See all the notifications that we saw? They're also displayed here, the exact same notification.
00:17:53.388 - 00:18:25.652, Speaker A: So if I click here, I also go to YouTube. Nothing changed. See, there it is. It's a platform agnostic. Anyone can display the notifications and chat messages and also have this button here called opting to channel. Because for an end user to receive the notifications, the user has to opt in to give consent to receive notifications from that protocol. Otherwise the notifications go to the spam box and what we say is users can go to the push protocol DAP and opt in to receive notifications.
00:18:25.652 - 00:19:05.920, Speaker A: Like I can come here and opt in to receive here or you can import you can use our SDK to create a simple button. Then when you click, you can opt in here on your DAP itself. So let's say your user is filling a form like on your DAP. And then they say, hey, do you want to get notifications about this on your own DAP? Then you can display this opting button here. When the user signs in, the user clicks sides a message under the hoods push protocol. But the user doesn't need to know that Push protocol exists. We have chat as well.
00:19:05.920 - 00:19:41.210, Speaker A: So here how chat looks like. See? So we also have video call here, and from the SDK itself, you can also send messages via SDK using our Rest API SDK. So for this, everything is detailed in our docs. So let me just where the docs are. If you go to docs push, let's go to docs push. Here we have developer docs. And if you're a developer, there are two things.
00:19:41.210 - 00:20:36.426, Speaker A: If you want to send notifications, you click here. Then you can send notifications from a smart contract manually using the DAP, using the SDK, using the Scaffold solution that we provide using subgraphs. Or you can even customize your notification, right? You can add bold text, italic bot and italic add URL. And if you want to integrate chat, you have here push chat for webtree integrating Push chat. So here we have some explanation about the chat SDK, but most of the explanation should be here on Push SDK. SDK packages rest API chat. Here's the documentation for chat, where we explain how to send chat messages.
00:20:36.426 - 00:21:14.986, Speaker A: And this code here copy and paste, and I paste it here. So if I go to Push chat, source chat send message this one. This is how I send a message using the SDK. We're going to change this a lot, but for now, that's it. So, first of all, I get my user information from the protocol itself. I decrypt my private key, because whenever you log into Push chat, we generate a new encryption keys for the user. We don't sign and encrypt the messages using the wallet private key because we don't want to touch it.
00:21:14.986 - 00:22:07.010, Speaker A: So we generate the all encryption keys that are encrypted using our main Ethereum wallet or Polygon wallet or Ethereum binance Merchant wallet. Once you have that decrypted key done, you can just send a message. So if I come back here and I run this message has been sent, and I send a message to this guy here, zero f D six, which should be this guy here, zero xFD six, which is nice. So if I come here to chat and open here, what did I send? I sent hello, Tokyo. Hello, Tokyo is here. Let me just change this to this. Yeah, looks about right.
00:22:07.010 - 00:22:39.380, Speaker A: Let me send this. Yeah, I receive a notification and the message is here. That's pretty much an overview. All the different ways how to integrate Push everything in the documentation. We have been working a lot on documentation to make super easy for developers and then. Yeah, I think that's it. Any questions so far? First of all, thanks so much for the attention.
00:22:45.080 - 00:23:05.516, Speaker B: Hi, thank you for your presentation. I was wondering, for the chat app, is there a way for me to contextualize it? So if I have an inbox with ten different wallets that I'm talking to, how do I know who I'm talking to? If I'm just browsing through it, can I rename and be like, oh, that's the guy that minted the same NFT? Or how do I yeah, so we.
00:23:05.538 - 00:23:31.636, Speaker A: Have these features just not exposed on the SDK but we can add sort of a tags of course, because when we're talking like you're talking to Xerox Abcdeft and I don't know the wallet addresses for all my friends so then we display ENS names. So if they have ENS we're going to see like Peter ETH. Then we have a picture that we can rename this. You can add like my friends or friend one. Then you can rename this just not exposed on the SDK yet.
00:23:31.738 - 00:23:37.936, Speaker B: Okay. So the priority is always ENS first and if there's no ENS then it's the wallet address.
00:23:38.058 - 00:23:51.550, Speaker A: Yes, that will be like ENS first and wallet address. Actually the first one will be like the name that you set it like friend one. If there is no friend one then we'd splay ENS. Then if there is no ENS we'd display the raw address.
00:23:52.560 - 00:23:55.692, Speaker B: Okay. And then is there an option of.
00:23:55.746 - 00:23:59.710, Speaker A: Changing a photo or something not on the SDK yet.
00:24:08.050 - 00:24:23.966, Speaker C: With the group chats? I don't know whether I missed an example of that but can you leave a group chat and still get notifications for everything else? Or do you have to get notifications from all of the group chat as well as all the other notification?
00:24:24.078 - 00:24:35.574, Speaker A: Yeah, when you leave the group chat then you stop receiving the group chat messages, then you can no longer read the messages. I don't know if that's your question. Like if I leave my group then that's it.
00:24:35.692 - 00:24:48.242, Speaker C: But you can't pause the notifications for a group chat or a single person? Sorry, you can't pause or silence the notifications?
00:24:48.306 - 00:24:54.060, Speaker A: Yeah, that's actually a good question. Yeah, not yet. Not yet. Yeah, that's a very good question. Not yet.
00:25:04.940 - 00:25:15.896, Speaker B: Thank you. So if you're planning for the Dow in a group so do you need to have the push token or you can get your own token or another token?
00:25:16.088 - 00:25:47.752, Speaker A: Right, so no push token at all. Like if you have your own dow with your own token or let's say you have a dow that's token gated by NFT, you can all do this. So when you create a group, on the process creating a group there is a section called token gated then you can pass the address of the ERC 21 or ERC 20. Then you pass there and the number of the tokens there. Then you token gate the group and then you select if it's a public group, that means all the message content, it's public. Or if it's an encrypted group, then only the group members can read the message. Okay.
00:25:47.806 - 00:25:51.610, Speaker B: And you can connect your group to the Discord group too.
00:25:52.620 - 00:26:31.860, Speaker A: Discord private group, right? On this group chat you cannot fetch messages from Discord. But what I mean, on Discord, you can link to this like, hey guys, let's try to move this. But there's no link between Discord and this group chat. We'll try to build not alternative to Discord, but we would want to give another solution for online community to interact like a more web three native way, which is open source, community owned. And that's the idea. We want to provide an alternative. Of course it's up to the community to decide what's best for them, but we just want to provide another alternative and question what we currently have like, hey, I think we can do things differently, which is open source, community owned.
00:26:31.860 - 00:26:35.492, Speaker A: In the end, it's up to the community to decide what's best.
00:26:35.626 - 00:26:37.430, Speaker B: Okay, thank you so much.
00:26:39.160 - 00:27:24.340, Speaker A: As a user need to install extension or app so via this protocol to receive the notifications. So when user want to receive this notification, so does user have to install this application or Google accession? Right, you can I think that's the easiest. Like if you install the Mooch mobile app, then you receive actually a push notification on your phone. That's what I personally use for my personal notification, I just open, start my day, see my notifications, my web three notifications, that's what I personally use, which is easier. But currently I would say yes. Okay, thank you. That's not the ultimate solution, but that's what we currently have.
00:27:24.340 - 00:27:38.370, Speaker A: Okay, thank you. Any more question? Yeah, I think that's it guys. Thanks a lot.
