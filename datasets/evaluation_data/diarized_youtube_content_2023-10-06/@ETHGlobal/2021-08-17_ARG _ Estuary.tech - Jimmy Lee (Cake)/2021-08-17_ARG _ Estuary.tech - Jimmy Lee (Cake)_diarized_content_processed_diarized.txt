00:00:00.170 - 00:00:14.000, Speaker A: I want to introduce our next speaker, Jim. Jim works with the application research group, helps lead them at Protocol Labs. Needs no further introduction. I'll let him take it away from here.
00:00:17.330 - 00:00:52.842, Speaker B: Hello, how's it going? Just share my screen. So wow. Yeah. Thank you for letting me present about estuary at Hackabs. I'm going to give a little walkthrough about this project we've been working on since around like April, March. What is the arg, though? We're building applications on top of amazing technologies in the Follicle ecosystem. And so it's me, it's Y, Chris, Elijah, a lot of ecosystem collaborations, to name a few.
00:00:52.842 - 00:01:23.042, Speaker B: Textile fission, Arzora, a lot of people from Protocol Labs, a lot of technology that's made there is absolutely amazing. And we're hiring. So maybe if you want to roll with us and make cool software, let me know what is Sjua. So I was thinking about how to describe suary and I think it's a story for the most reliable way to upload public data to the filecoin network. And our methodology is we work in the open. So we're hoping that others take from our open source code and just learn and improve on it. I think we break it up into three parts.
00:01:23.042 - 00:01:54.480, Speaker B: It's a hosted example of an S ray node stack that anyone can run and a documentation platform to discuss. And iterate with the community. And it's a familiar place, I think, for IPFS devs who work with HTP. We support the IPFS pinning standard and I think we really try to improve on the filecoin storage deal experience. And I'll get into more of this later when I give a walkthrough of the features. But we reliably make deals against the filecoin network at six six replication. So we make a ton of deals for better or for worse, and it's been a lot of fun.
00:01:54.480 - 00:02:26.630, Speaker B: So we're running an S three node at HTPs estroy Tech. You can use any language you want to interface with. Our hosted API, we configured it to be invite only. We could change this in the future, but if you don't want to get an invite web3 storage, empty storage don't require this kind of gatekeeping, so you can use those today. We're testing optimal performance instructions and integrations. So as we make mistakes and as we get feedback, we will continue to iterate improve on what we're doing. And someday you'll be able to run your own node.
00:02:26.630 - 00:02:55.694, Speaker B: And so here's some of the I guess like the proof is in the pudding or people want to see data and our performance. So we've put over 3 million files onto the file coin network, over 3000 deals, over nine terabytes, over 29 terabytes of sealed storage on filecoin network. And we're working with 96 miners. The goal is to work with a lot more if we want to. So we're curating miners and trying to figure out which miners we want to work with. And we have a couple of power users. One power user put over 2 million files.
00:02:55.694 - 00:03:29.440, Speaker B: Another power user put over eight terabytes of data. And we're just testing the ceiling, seeing how far we can go. And so I'm going to give a feature tour of what you can experience when you look through the website and kind of talk through some of the parts and then also go through a feature tour of what it's like to be a node operator and what you can see and manage. So we put commands everywhere. There are commands for everything all over our documentation, marketing pages. So we really want to show that this is like a developer tool that you can just kind of use without going to the GUI. The GUI is kind of like the least important part of the product, I think.
00:03:29.440 - 00:03:59.914, Speaker B: You can just run these commands wherever you are. You can use Lotus to retrieve. You don't have to use anything that we made. And we have clickable links everywhere, so you can see the files that you've uploaded. And so here's one from the marketing page. We think it's really important that you can verify your CID. So what I mean by verify your CID is that you want to know it's on filecoin and you want to know which miners that it's on specifically, and you want to be able to see details around that.
00:03:59.914 - 00:04:47.186, Speaker B: And you also want to see a receipt for that storage deal so you know how long it's going to be on chain. And so we created an experience around this where you can basically make a deal, see the deal successful, see the start end date, see the collateral, see everything. And I think that transparency makes file easier to understand. And we'll keep fine tuning this experience so people, I think, get a better grasp of what's happening with our data. We obviously want to add more like what location the miner's at, compliance. A lot of things for us to explore. We added upload via you know, there's a default way that you saw in the beginning of this presentation where you can just drag and drop files, but you can upload a CID as well upload via API.
00:04:47.186 - 00:05:25.422, Speaker B: So our documentation is editable. You can upload files from the docs itself, so you can just copy and paste the curl command even, and do it from the command line. We wanted to just be really open with all our process and make the whole thing a playground that people can play with. We do public performance analytics so you can see basically how well this node is doing in the public, so nothing's kept secret, even our failures. We keep a graph so everyone can see the performance. And we also keep a list of every single Miner sorry, provider that we work with. And you can see the stats, deals and errors.
00:05:25.422 - 00:05:54.570, Speaker B: And if you go here, you can see I'll skip ahead. You can see some of the logs that we help show. So this makes it really easy to work with the providers on bugs and figure out what's going on. We can skip a meeting. Makes things really quick. So we have a cool thing around batching. Batching is kind of an example of what happens when people are uploading like four kilobyte files or something really small, like small text files.
00:05:54.570 - 00:06:39.580, Speaker B: We have a way to automatically batch that into a bigger deal. And the reason why we do that is because every miner or provider has in their maximum piece size, minimum piece size, kind of like a maximum they'll take and a minimum will take. So we're still experiencing the best way to do this, but we don't want to overload miners providers with a whole bunch of really small padded files. So this is a great way for us to kind of batch things together and make a more valuable deal. And we provide the provider details on estuary so they're public pages. And in the future we basically can show error logs, we can show price, we can even show like compliance and a whole bunch of other really cool things. And so see how much time I have left.
00:06:39.580 - 00:07:19.894, Speaker B: Cool. So now to get into tools for network operators as we build out those things, for kind of like the client experience for network operators, we're focused on stress testing the capability of our node today. So whatever we achieve, we will provide the steps for you to do the same. And so horizontal scaling with Shuttles, it's a cool new invention. I'll get into that more later. Or you can talk to me about it. Offline block storage capacity eventually inventing new techniques to store more data on a single node, faster writes and reads and built in filecoin address support.
00:07:19.894 - 00:08:05.334, Speaker B: So you can run your own verified address and make deals on your own. You can even just use a normal filecoin address if you're willing to spend filecoin without making verified deals. And I think Alan covered that really well in his last talk. And if you want to talk more about verified addresses, we can talk about that offline as well. And so one of the coolest things as a network operator when you're running your own sjua in the future is that you can curate your preferred providers and you can see all the logs and have a relationship with them where you know why deals are failing or succeeding. And if there are problems and you don't have to make deals against all of these providers, you can basically just suspend them for a little bit. It'll show up on their profile page and you can basically talk about the issues and then work through them together and then re enable them.
00:08:05.334 - 00:08:50.434, Speaker B: So I think this is kind of like a step in the right direction when it comes to a relationship between a client and a provider where we can debug things together and figure out what's the issue is. It data transfer, is it network issues, et cetera. You have a filecoin address if you run your own S Three node so you don't have to verify it. We have an address right here, has a balance of filecoin and this address is for holding. We can move that amount to Escrow and whatever moves into escrow gets used for making a ton of deals. And so you are in total control here and we'll add a lot of different features that make it so it's much more manageable. You can set limits, you can maybe even limit by user.
00:08:50.434 - 00:09:40.280, Speaker B: And so we're still exploring this and we have great ecosystem partners that we're working with to help figure all this stuff out. Shuttles are a really cool invention. I know that there are a lot of clients out there that have a ton of data. It's just not easy to move sometimes petabytes over to wire and you probably shouldn't because if you're using the cloud, you probably pay for network ingress on that and it's going to be very expensive. And so Shell is like an option before offline deals where if you really don't want to do an offline deal, what you could do is you could have us create a shuttle really close to you and then you could upload your data directly there and maybe save on some of the ingress cost. And so we're experimenting with this right now and it's been great. It's actually helped people who are in Europe upload a ton of data instead of going through US East One or whatever.
00:09:40.280 - 00:10:28.494, Speaker B: There's a lot of user debugging tools that we're going to be releasing as well. So network operators can debug problems for clients by impersonating them. I was kind of hesitant to show this feature because I think it puts a lot of responsibility on the network operator to be a good actor. But at the same time we've had users that have really stress tested Estuary and it was really nice to be able to go into their account with their permission if they gave us their API key and kind of like find the bugs at a million files and see why things aren't paginating correctly. And when you run your own S ray node, you can actually make your S ray node open to so or you can make your node like as a service, like an invite only. And so we chose to be invite only for now. And so you can see this page where we can generate invite keys and we can invite other admins.
00:10:28.494 - 00:11:25.320, Speaker B: So right now S Three is actually managed by a few other people to create invites and allow people to come use the product. The last thing I think is one thing that's really cool about running this Estuary node is that you can also see the hardware system analytics. And so this is a really bad screenshot. It doesn't show all of the details, but I really want to know how things fail. I think that's like a great step forward to figuring out how to improve your product and so we keep track of the failures, we check the deals attempted and we also have hardware stats so you know how much hard drive space is being provided by the box that you're using. I think as we fine tune this, we'll give users a lot of control over how they want to run their S three notes. So hypothetically, you could run one on a cheaper machine somewhere and as long as you curate your providers and users in a certain way and set expectations, you can even support filecoin deals that way without having to have a super robust system that we have.
00:11:25.320 - 00:12:33.040, Speaker B: And so yeah, that's pretty much a quick overview of all of S tray. Hopefully I didn't go through it too fast, but if you have any questions about it, you can ask me and I'm going to play actually a little teaser of what's to come in the future. So we are making videos to describe some of the technology that we're creating to make estuary work. And so in the future you'll see videos from the application research team that will look like this and they'll have a lot of different examples of how to use the product, how to get an invitation. I think what we actually really need are more technical deep dives. So we'll probably do some more deep dives on the stack and how to run your own and all the different modules that we've built such as like Fill client and et cetera. So stay tuned for more videos that kind of walk through how the product is used and how the stack works and kind of like even some discussion around what direction we should go in the future.
00:12:33.040 - 00:12:45.100, Speaker B: Yeah, I placed through that pretty fast. Stay tuned and happy to field any questions.
