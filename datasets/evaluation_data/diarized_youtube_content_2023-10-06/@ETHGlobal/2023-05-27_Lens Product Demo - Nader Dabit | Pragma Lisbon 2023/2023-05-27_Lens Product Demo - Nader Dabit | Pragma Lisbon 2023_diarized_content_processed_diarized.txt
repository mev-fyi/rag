00:00:07.610 - 00:01:08.082, Speaker A: So today I'm here to talk about Momoka, which is the scalability solution that we introduced to Lens a few weeks ago. And I want to talk about what it is, how it works, and then do a quick live demo. So the challenge that we have, I think in Web Three in general that we consistently see is giving users the full control of their content, providing them with all of the characteristics like sovereignty, ownership and things like that. But we still want to offer the ease of use and the UX that people expect from traditional applications. So bringing the really powerful and important things that we love about Web Three and blockchain and then still giving them the UX that they have. So therefore offering a better product and a higher polished and better, I would say, value proposition for coming into this space. Because even though we care a lot about blockchains and we care about all of the stuff that we're geeking out about here, the average user is kind of not as bought into a lot of this stuff.
00:01:08.082 - 00:02:00.014, Speaker A: So ultimately providing a better UX overall is going to be kind of how we win the masses. Even though that's kind of like a meme at this point, we truly do want to bring in a lot of new users into this space. So some of the values that we think out of in general blockchains and Web Three provide are things like permanence, immutability, sovereignty, censorship, resistance and ownership. And these cannot be brought into these applications using traditional infrastructure. Therefore blockchains and similar technologies do. So currently our system and a lot of applications that are quote unquote Web Three are essentially on chain, meaning they're using either like an L one or an L two. And these different technologies have different trade offs, mainly around scalability, cost, security and time to finality.
00:02:00.014 - 00:02:55.060, Speaker A: So obviously L ones were brought to the market, became popular, we realized they didn't scale. We now start seeing things like L two S and even what you would consider maybe like an L3s. And these again, have their trade offs. But for something like Lens we realize that everything doesn't need to be on chain. Things that are financial, things that are collectible. Yes, but if I want to post a comment or if I want to post a picture or something like that and I don't really care that if someone can collect it or not, it doesn't necessarily need to be on chain. So why would we continue using these types of technologies if there is an option that still offers the permanence, immutability and ownership, but without the cost and the scalability concerns that we've seen on blockchains? And a good kind of example of why this is so important is Twitter itself.
00:02:55.060 - 00:03:43.380, Speaker A: I think around when World Cup was happening was hitting around 50,000 transactions per second. The most scalable blockchain that we know of today that actually might work in theory is really closer to something like 10,000 transactions per second. And these blockchains are shared infrastructure, meaning that there are thousands of apps, each with tens of thousands of users, possibly all sharing kind of like a compute environment that doesn't scale beyond that. So imagine saying, oh, we're going to build an application that scales to tens of thousands of transactions per second. We literally don't have a traditional blockchain that can do that right now. So therefore, we needed to explore other options. And when I say we, I'm always talking about the amazing engineering team at Lens who I'm kind of here speaking on behalf of.
00:03:43.380 - 00:04:46.040, Speaker A: So traditional blockchains are not optimized for data storage, so why would we use a traditional blockchain for data storage? Well, we've done that because there really wasn't maybe another option that offered both permanence and Immutability. We had Immutability with things like IPFS, but we did not have permanence. But there are options that are out there that offer this. But the challenge at the time was that they did not offer the finality that was needed for the type of UX that we wanted. So, for example, Rweave is technically not really a blockchain. It uses a blockchain like structure that is more like a graph database if you kind of wanted to compare it to a data storage mechanism as opposed to kind of like a distributed ledger. But Arweave's main purpose isn't to facilitate a decentralized currency or to prevent the double spin problem, which is kind of what most blockchains that we know of are really there to provide.
00:04:46.040 - 00:05:23.970, Speaker A: The main purpose of Rweave is to provide data storage. So with Rweave, they don't really care about some of the concerns that you might have with traditional blockchains. And the main way that this is done is through their consensus mechanism. Again, it's not the same as what you might think of in a traditional blockchain. What they use is something called proof of access. And this consensus mechanism isn't focused around securing transactions or keeping up with the network state on every single transaction that happens. The main thing that it's focused on has to do more with data recall and data permanence.
00:05:23.970 - 00:06:17.846, Speaker A: So what was realized is an optimal system would actually use both. It would be like a hybrid model that would use traditional blockchains for financial transactions for anything that needed to be collected. But you could also possibly use Rweave for data storage. And with newer protocols built on top of Rweave, like I'm going to talk about in just a moment, bundler network, you're able to get that very low latency finality that would be not possible directly on Rweave while providing immutability and permanence. So if you wanted to distill what momoka is, it's kind of that it's a hybrid of using on chain for what needs to be on chain and using everything else going to bundler with Rweave. And you could say that Rweave is on chain. But it's not on Chain in the sense that we often think about it.
00:06:17.846 - 00:07:01.150, Speaker A: So with Momoka we provide significantly increased throughput and reduced costs without sacrificing user sovereignty allowing us to realize our vision of scaling Lens to the world. And the flow looks something like this. Without going into a lot of technical details we have a lot of this stuff available online that I'm going to pull you to some resources. The client, instead of sending a transaction to the network, to the Polygon network, which is what we've done in the past, we introduced two new pieces of infrastructure. One is the Momoka submitter and one is the Verifier. The submitter simulates the transaction on Polygon and gets the simulated transaction result. So it would be like as if you actually transacted on Polygon.
00:07:01.150 - 00:08:05.362, Speaker A: What would that result be? You can actually just simulate that. You don't actually have to store that. So then you take that data and you store it on a less costly network which is Rweave. So you take that simulated data it still is technically the data that would have been stored on Chain but you're storing it on a less expensive network. We then have the Verifier that's running and it's kind of like a listener and it listens for the transactions that are happening on the submitter on the Rweave network and it will check to verify the validity of that. And if that transaction is valid then the network APIs can pick them up and then surface those to the client facing applications momoka is gasless and signless. We think that one of the most important reasons why Lens is being adopted by so many people and so many applications is that it provides the UX that people expect from something like Twitter or Instagram or one of these other social networks where you're obviously not needing to pay for your transactions.
00:08:05.362 - 00:08:41.010, Speaker A: When you make an update into your app, you're not waiting for it to finalize. You have optimistic updates and it just feels really good. So we continue to kind of provide that with Momoka. And again, one of the reasons that this is now possible is using a network called Bundler, which is a protocol built on top of Rweave. And it basically enhances the scalability of Rweave by making everything faster. And it has instant uploads and instant retrievability. And it's significantly less costly than our previous EVM network.
00:08:41.010 - 00:09:10.726, Speaker A: I would say main focus. So with Bundler we're seeing transaction costs up to 1000 times less expensive. Typically though more in the range of hundreds. So what are the results of this? We launched this a couple of weeks ago. This screenshot was taken a few hours ago. 64,000 transactions at a cost of $26. That's less than one transaction on Ethereum, obviously and about the cost of a handful of transactions on some of the other layer.
00:09:10.726 - 00:09:57.706, Speaker A: Twos, this is 64,000 transactions. So what I want to do is quickly show you how to run a momoka Verifier. And before I do that, I just wanted to give a huge shout out to the Linchen engineering team, Josh, specifically, because they're just incredible and unbelievable, and I get to come here and talk about this cool technology, but they're the ones that are actually building it and doing the hard work. So I just wanted to give that shout out. So what I want to do is quickly just show you what this might look like. So here we have a couple of new GitHub repos that show and kind of just all this stuff is open source, so anyone can run this. And I'm going to run a Verifier in just a moment.
00:09:57.706 - 00:10:30.850, Speaker A: So we have the momoka Verifier, and then we've also built out like a UI that will allow you to explore and see the transactions as they're coming in in real time. So we have the Verifier and then we have the Explorer. You can think of the Explorer as something like a block Explorer. And of course my Internet's kind of slow, but let me see if I can get that fixed. I'm on my own mobile network here. But as that's loading, anyone can run a Verifier. And you don't really need to actually download any software to run a Verifier.
00:10:30.850 - 00:11:04.574, Speaker A: As you're about to see, you can just actually use NPX and all you need to have is an archive node that you can actually spin up with Alchemy or some other provider in just a few seconds. And we're going to test that out in just a moment. But here is the explorer. My Internet's really slow. I don't know if someone well, here you go. Just starting to load up a little bit, but I was hoping to do a demo that might not work if my Internet is really slow, but I'm going to give it a shot anyway. But anyway, this Explorer just shows the transactions as they're coming through in real time.
00:11:04.574 - 00:11:27.350, Speaker A: And to test this out, I wanted to create a post and then see it coming through in real time and also run a Verifier. So I'm going here to my command line. I already have the Verifier running, actually, it looks like. Go ahead and clear that out. I don't have anything. I know that's very small, but let me zoom in a little bit here. I don't have any software installed to run this Verifier.
00:11:27.350 - 00:12:31.690, Speaker A: The only thing I am doing is running this CLI command NPX at Lensprotocol momoka passing in the environment, which is the network, which is polygon passing in my archive node, which is something I spun up a few minutes ago at Alchemy and then passing in the concurrency, which means how many transactions can be processed concurrently. And what I can now do, make this smaller, is go ahead and run this and we will start having our own Verifier running locally. And while that's running, I would love to create an image to upload here using Mid Journey. But again, I think this might be kind of too slow, but I have this prompt that I'm going to use real quick. Has anyone used Mid Journey Five? Yeah. Mid journey five is, like, really good. So I'm just going to say imagine speaking in front of a large group of hackers in Lisbon, futuristic looking, cyber funk anime vibes.
00:12:31.690 - 00:13:07.630, Speaker A: And I like pink and neon colors, so I'm adding that as well. So I'm going to let that run for a second and then we're going to go back here. And if this doesn't work in the next minute or so, I'll probably have to just not do this. Or if someone has a faster WiFi that I can connect to, you can let me know. Oh, is there an Ethernet? Okay, cool. So I'm going to try this, see if this works. So just turning off the WiFi.
00:13:07.630 - 00:13:51.998, Speaker A: Okay, I'm just going to go test to see if this is working yet. It looks like it might be loading now. Can I take questions after this? Okay, cool. One or two questions. Yeah, I am running over on my time, honestly, but I would love to take a couple of questions. So I guess I'm going to just check on this. Oh, it looks like it's loading.
00:13:51.998 - 00:14:16.202, Speaker A: Okay, cool. So I'm just going to take this image and okay, it looks like we're getting somewhere. Momoka running. So now what's going to happen is we're now listening to any new transaction that gets posted to Momoka. Now remember that Momoka is only adopted now. I mean, it's starting to be adopted by a lot of apps, but not every single app has picked up Momoka. So we have Orb, we have Leinster, a bunch of the main apps are.
00:14:16.202 - 00:15:34.894, Speaker A: So if a user is posting to one of those networks and they are one of those apps and they've decided not to make their publication collectible, then it should show up. And I'm going to try to rerun this because I'm thinking that after disconnecting, it might have messed something up. Okay, still having some WiFi issues. Try this one more time. But if not, I will post this later on Lens and then you can go and check it out. But okay, while that's doing that, I will guess take a question or two and then if this doesn't work, then unfortunately the demo didn't work. There's no trust because every transaction that has been simulated on Polygon has all of the metadata stored on Rweave, which can then be replayed using either your own software or you can run the Verifier, which kind of automatically kind of has all that set up for you.
00:15:34.894 - 00:17:15.508, Speaker A: And then essentially it is Verifiable, but it's not on Polygon, it's on Rweave, which again, has the same characteristics that I guess you would be concerned about immutability and permanence. So I guess I'm not getting the question. The only point of centralization that could be considered would be the intersection of Bundler Network and Rweave, which has some delay, but Rweave is permanent and it's been around for quite a few years now, longer than most L two S. So I think that with that what's that? So I don't think I understand the question there. But no, there shouldn't be no trust in the way that this is architected if you kind of go through and maybe understand how re works and how the simulations are happening on the network. Any other questions? Okay, if you want to check out and maybe learn more and maybe for yourself, dive into the actual blog post that we have released that kind of goes into some of the more technical details we have. Mir XYZ Lensprotocol ETH this is a pretty in depth explanation of momoka that goes a lot further than what I went into here.
00:17:15.508 - 00:17:27.010, Speaker A: And I would also check out the GitHub which is equally as well documented and completely open source for you to dive into the code and answer questions like that on your own without trusting me. So that's it. Thank you.
