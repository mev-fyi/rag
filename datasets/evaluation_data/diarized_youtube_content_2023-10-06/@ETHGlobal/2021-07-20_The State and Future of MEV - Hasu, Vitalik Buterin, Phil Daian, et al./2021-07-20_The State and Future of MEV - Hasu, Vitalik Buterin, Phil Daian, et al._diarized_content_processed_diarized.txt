00:00:00.250 - 00:00:28.150, Speaker A: Up next, we have our medic panel hosted by Hasu, and it is on the state and future of Mev. And we have here our panelists, vitalik, Phil, Mahimna, Giorgios, and Dan. So, Hasu, anytime, when you're ready, the stage is yours.
00:00:28.810 - 00:00:40.730, Speaker B: Yes. Thanks, Tina. Yeah, I'm super excited to moderate this very stacked panel with you guys. Why don't you start by introducing.
00:00:45.070 - 00:00:45.434, Speaker A: Okay.
00:00:45.472 - 00:00:52.910, Speaker B: Sorry, start my video. Okay. Why don't you start by introducing yourselves with, like, one sentence, starting with you, Vitalik.
00:00:54.210 - 00:01:00.160, Speaker C: Yeah. Hello. I don't know. I'm Vitalik. I make posts on youth research from time to time.
00:01:01.810 - 00:01:02.670, Speaker B: Dan.
00:01:03.490 - 00:01:04.106, Speaker D: I'm dan.
00:01:04.138 - 00:01:14.260, Speaker E: I'm a research partner at Paradigm, and I have to mention that both for Me and Georgios, it's an investment firm, but none of what we say is investment advice. And these are our own views that we're representing, not those of the fund.
00:01:14.970 - 00:01:17.622, Speaker B: Mahimna hi, everyone.
00:01:17.676 - 00:01:24.230, Speaker D: I'm Mahimna. I'm a PhD student at Cornell, and a lot of my research has been focused on fair ordering protocols.
00:01:25.050 - 00:01:26.230, Speaker B: Okay. Phil.
00:01:27.950 - 00:01:37.078, Speaker A: Hi, everyone, I'm Phil. I'm a PhD student at Cornell also, and co founder of Flashbots and coined the term Mev.
00:01:37.254 - 00:01:39.382, Speaker B: Great. And finally, Georgios.
00:01:39.526 - 00:01:50.810, Speaker F: Hey, everyone, I'm Georgios. I also work at Firedam. I'm a research partner. I do a lot of engineering and research work on Mev and have worked with Flashbots since the very beginning. I'm very excited for this discussion.
00:01:50.970 - 00:02:38.606, Speaker B: Thank you. Just in terms of structure, please. I'd like this to be a fluent conversation, so just feel free to interrupt each other and follow up on each other's points. That would be great. I start with maybe a controversial thesis. So Charlie Noyes has argued in his first talk, one of our friends from Paradigm, that we have entered the era of Mev, and it's basically only going to go up from here. But with all the amazing innovations that have already been showcased today and some more that we will see in the next block, could the Mev era end much sooner than we expect? And just feel free to take it.
00:02:38.606 - 00:02:39.680, Speaker B: I don't have any.
00:02:45.670 - 00:03:04.470, Speaker A: Go ahead. I was just going to say that would be amazing. I'd be so happy if that happened. And Flashbots can pivot to building the fairest markets out there. But, yeah, that is the goal. I think it's one that will take a long time to truly achieve, but it's definitely my goal.
00:03:05.130 - 00:03:51.458, Speaker C: I think there is definitely important types of Mev that are not going away no matter how hard we try. One simple example is just uniswap price arbitrage, right? Like, in between one block N and block N plus one, there's 12 seconds of market movement on any exchange that's not on the ethereum blockchain itself. And so you can make uniswap trades off of that. You can make trades on every dex on top of that. And so I don't really see how something like that can even conceivably be removed entirely. I do expect that Mev will be reduced just because there's a fairly big incentive to reduce it. But there's also other types that seem to be harder to reduce.
00:03:51.458 - 00:04:09.020, Speaker C: And I do think that gains from specialization in being a block builder and is something that's going to continue to exist in the long term future to enough of an extent that we need to worry about it and design around it.
00:04:10.030 - 00:04:58.730, Speaker E: I agree with that. And I think not only are there kinds of mev that can't be eliminated, but attempts to eliminate them or naive attempts to do so often cause greater problems. And so yeah, first rate of a block, first rate after a price movement. The way that this is resolved in traditional markets is just whoever gets their order executed first. And while that seems like the goal of a lot of sort of anti mev research or a possible goal, what that means is that there's a massive market in Colocation and in these arms races to communicate at as close as possible to the speed of light and have minimized isn't as much as possible, which is just totally wasted. And so that's where the mev in traditional markets goes is basically toward research into fiber optic cables and colocation fees. New York, Manhattan real estate.
00:05:00.430 - 00:05:02.380, Speaker B: Yeah, I think that's exactly right.
00:05:04.850 - 00:05:32.360, Speaker A: I fundamentally do agree with you Dan. And as much as I'm excited about reducing mev, I think that was my original research agenda. However, I think for a large amount of structural opportunities and a large amount of market design issues, it is necessary and it is kind of fundamental in my opinion. I have a blog post about this. People disagree. But I think for that kind of remaining mev that we do need democratizing, it is really the key.
00:05:34.410 - 00:06:14.740, Speaker C: One interesting anecdote here was back from 2017, back when the very first kind of gas market shenanigans started happening with ICOs. At the beginning people were trying to get in front of everyone else by raising their gas prices. But then some projects really naively bans that by just banning gas prices above 50 GWe. And what that led to is like instead of trying to get ahead of everyone by me by sending one transaction with 1000 GWe, people just got ahead of everyone by sending 20 transactions with 50 GWe to increase the chance one of them would get in first. And so you ended up replacing competition with competition that has even more negative externalities. So it's definitely a good idea to try to avoid that.
00:06:15.190 - 00:06:37.770, Speaker A: Yeah, and I told them that that would happen when they asked at one of the DevCons whether that was a solution. And I was like no, people are just going to spam. And then it happened. So it was really funny. And I think that's a good analogy to also other protocols where people are like oh look, there's no leader, everything's probabilistic, there's no mev here. But oftentimes just because you've made something probabilistic doesn't mean it's still not worth playing.
00:06:38.910 - 00:07:00.820, Speaker D: I think. I feel like there's some kind of mev that will exist in the system always and that can be some kind of good mev like Arbitrage. But I do believe that most of the other mev that comes from ordering manipulation can be removed and to the point, or at least to the point where it's not worth it to go after that mev. And I think that's the goal that we should try to go for.
00:07:01.910 - 00:07:54.530, Speaker B: I'd like to get your view vitalik and also Dan's, on an earlier point that you made about sort of Arbitrage dex arbitrage never disappearing from ethereum. So I kind of see two counterarguments to that. So for one, the share of RFQ orders among all Dex orders seems to be only going up. And this is a sort of decentralized exchange approach that does not generate any onchain mev as far as I know. So first, what do you think about that? And second, couldn't you in theory design a decentralized exchange that gives the exchange operator sort of a first look in every block? So exchange operator has an onchain cemented right to be the one who performs the arbitrage and only after that everyone else can trade?
00:07:55.830 - 00:08:32.160, Speaker C: I guess my answer to that would be like number one, yes, that's true and that might reduce mev somewhat, but it's not going to reduce it by anywhere close to 100%. And my answer to two was like, yes you can, and that's great, but that's not mev minimization, that is mev extraction. And then it could be democratization depending on where the revenue for sort of auctioning off the first dibs ends up going to. But that's not something that's in the minimization camp that's just kind of shoveling the mev around.
00:08:33.250 - 00:08:39.346, Speaker A: Yeah, I think one example of that is IDEX. So when I first gave the Flash boys talk, a lot of people asked.
00:08:39.368 - 00:08:39.826, Speaker C: Me what to do.
00:08:39.848 - 00:09:06.970, Speaker A: And I said, I think my favorite design right now is, like, just having a centralized sequencer. And yes, all the mev is still there, but if you're legally obligated or business incentivized or whatever not to extract it, that's probably practically the best design for users where they get the least exploited, but it's also the least decentralized, because in some ways, you're centralizing that trust. So there's also like, in my opinion, a fundamental trade off between mev and trust assumptions that's kind of inefficiency.
00:09:07.310 - 00:09:31.780, Speaker F: Also, if you want to add sort of mev mitigation measures in your system, you reduce overhead. So if you wanted to lock, let's say, the first transaction to a certain person, you introduce an extra load operation, an extra state load operation on every transaction for every user, which is not ideal if you're trying to mitigate some certain component or exploit in your system.
00:09:35.000 - 00:09:58.110, Speaker B: Okay, yeah, moving on. Another point that Charlie made in the same presentation was he argued that time Bandits attacks, the fabled Time Bandits attacks from your paper will finally become real and quote unquote, short term, meaning wonderful block reorg frequency may increase. What does this group think about that?
00:10:01.040 - 00:10:22.550, Speaker E: I think so far, every time I've underestimated how sophisticated mev would get an mev extraction tools. This is well before we invested in Flashbots, but every time I underestimated and Charlie would say like, no, they're going to do this crazy Sci-Fi thing, and then they started doing the crazy Sci-Fi thing. So I think in this case, yeah, I think multi block mev is only a matter of time.
00:10:25.080 - 00:10:52.380, Speaker A: I'm kind of surprised or skeptical if it isn't happening already. I think this is a question that we as Flashbots should probably answer for the space in terms of our data efforts. But we've seen Uncle Bandit attacks, we've seen inadvertent uncles and the way they affect bots and kind of block producers and arbitragers. So since we've seen these and they're benign and people are okay with them, who's to say that a few of the benign ones weren't actually intentional?
00:10:53.040 - 00:11:40.460, Speaker F: There's also a post e two world where there's a small change in the protocol where instead of having the block producers being randomly elected now, you know all the block producers for the next, let's say twelve minutes, which means that potential collusion will be more likely there. Or as a validator, maybe I get pseudo randomly assigned two or three or many continuous slots, and that would make the extraction easier. Vitalk, I think, may have some thoughts here. In particular, the example use case I have on my mind is just manipulating Uniswap Oracles. You insert the last transaction in the block, and then you insert the first transaction in the block, and you do this for many blocks and you manipulate the TWAP.
00:11:41.360 - 00:12:12.164, Speaker C: I see it again. I guess that particular attack would be possible and maybe Uniswap would have to redesign their Oracle. I guess. I don't know. I haven't thought about the details of that. There are other things that the completed switch to proof of stake will do, though. One of them is that it'll make short reorgs basically impossible, right? Because unlike the current proof of work design where the fork choice basically has like one actor per block, the proof of stake fork choice has hundreds of actors that contribute to the fork choice in parallel.
00:12:12.164 - 00:13:13.630, Speaker C: And so unless you control close to a majority, there just isn't a way that you can revert someone else's block. So that's one way in which proof of stake will improve things. Of course, predictability of proposing is definitely an issue now. Of course we are going to add a single secret leader election at some point, and that will probably come with penalties for revealing ahead of time when you're going to be the proposer. But if that happens, then collusion will get harder, but it'll still be possible for individual proposers to detect when they're going to have two or three blocks in a row and there's going to be things that I guess are possible as a result. But at the same time there is the question of like, well, how much is possible? That just isn't possible in the status quo world where sometimes you do just have one single block for a span of 45 seconds. I don't know.
00:13:14.000 - 00:13:21.464, Speaker D: So I think even with single secret leader election, you might be able to collude off band and prove to someone that you are chosen.
00:13:21.512 - 00:14:00.440, Speaker C: Yeah, you can, right? Yeah, you can. So this is why I suggested adding this, what I call an anti pre revelation game, which is like if the people who are colluding really trust each other, that's not going to solve it, but that'll still reduce the risk. Like basically if someone else tells you when they're going to create a block, then you can sort of anonymously predict that and if you predict correctly that you can penalize them. I think still it will be possible to especially for kind of single pools to do mev extraction off of a couple of blocks in a row that definitely will exist.
00:14:01.840 - 00:14:24.496, Speaker B: So Phil, I don't think it's possible today for a searcher and Flashbots to propose to a miner to perform a reorg attack. What would it take for this to become possible? And where do you stand on sort of allowing or disallowing the proposal of such blocks? I don't know.
00:14:24.518 - 00:15:14.530, Speaker A: I think hop on the next roast and let's talk about it. I don't want to claim to speak for Flashbots here since Flashbots is kind of a collective and we have to exercise the collective in making any decisions. That being said, we have no current plans to support anything like multi block reorgs. It is an incentive in the system, however, and our general philosophy as an organization is that in order to build systems that are robust, we should kind of either mitigate or work around any incentives that might have negative consequences to the system. So that is one of them. So a few approaches that could be possible. One could be just letting it burn, trying to incentivize reorgs as much as possible and gaining robustness from statistical evidence that the incentive isn't strong enough for the reorg to happen.
00:15:14.530 - 00:15:42.780, Speaker A: I think the big risk there is, especially around Black Swan events, reorgs become much more attractive. Another option could be a more active kind of economic kind of meta game design in which you create a system in which reorgang and attacking the system is less profitable than doing the right thing. And I think that's more the direction that we've been thinking in. But yes, definitely want to consider it in our security model and build tools around it because it is a real possibility.
00:15:44.320 - 00:15:57.600, Speaker B: You once mentioned to me that you will allow miners or stakers to express preferences for the sort of bundles or block templates that they can buy. Would this be one of those preferences? Possibly.
00:16:02.500 - 00:16:35.150, Speaker A: It'S hard to say. So I think the mission of Flashbots is to allow anyone to express any programmatic preference that is ethical to do so in a sustainable way. So the question is, can we allow that preference to be expressed ethically? I think if we have broader mitigations and we're using that in a principled way as part of a broader system, I don't see anything wrong with adding that feature. I think just adding it like willy nilly probably will destabilize the system needlessly and break social norms. So we don't really want to do that either.
00:16:36.480 - 00:16:49.330, Speaker B: I see. And I have a last question for you about Flashbots. So could you briefly walk us through where you see Flashbots in two years and what are the biggest hurdles to getting there?
00:16:51.780 - 00:17:22.600, Speaker A: It's really hard to say. Like I said, Flashbots is very much like a research collective. So we're trying to answer in this next phase we're kind of transitioning from phase zero, which was proving the concept, proving that there is a need to solve these questions and a strong market need. And I think we've done that very kind of well. And now we're transitioning into a phase where we're thinking, okay, now Flashbots looks like it's going to be around for a long time. What is its role in the ecosystem? What does the organization kind of look like? So I think those are all questions that are still being answered. We welcome people to participate.
00:17:22.600 - 00:17:45.330, Speaker A: My personal vision is like, I would like to build kind of a Turing complete market for any kind of bot style preference and kind of an associated game around that much in the way we've been doing on top of ETH today. So very much want to keep that momentum going and keep building community and also keep doing fundamental research and community events like this one.
00:17:46.440 - 00:18:19.900, Speaker B: I see. Thank you. So what was really interesting to me in the last block was the entire section on fair ordering. So Mahimna, you earlier defined sort of quote unquote sent ordering as ordering transactions in the order that they were sent. And you describe this as fair. In your opinion, why does this not just succumb to the high frequency trading that you know? And this sort of picks up from what Dan said earlier, but I think it's a very interesting angle to explore.
00:18:20.640 - 00:19:25.344, Speaker D: So I was thinking about send ordering in sort of an ideal world where you have user trusted timestamps at the user side and you have some kind of synchronous network. So for send order in particular, there's no impact of the actual network delay. So it doesn't actually become high frequency trading. What you might be referring to probably is like receive order fairness, where you're thinking about sending the transaction and you're timestamping it at the time in which each node is receiving the transaction, which technically has the potential to be similar to high frequency trading if not done correctly. So in our paper we distinguish between two different networks, like an external network and an internal network. So the external network is this network between the users and the protocol nodes. And if you can basically control this entire network so you're this global adversary that can control the access for all users to that protocol nodes, then you can still arbitrarily reorder how muchEVER you want.
00:19:25.344 - 00:20:04.080, Speaker D: But in practice this should not be the case. The other point I tried to make is other sort of networking layer solutions can be used for that layer, in particular fair ordering, more so deals with once the transactions have been received. How do you classify fairness in terms of the ordering that were received in? And other sort of network layer solutions can be used for the first stage of sending the transactions from the users to the protocol nodes. So you can use things like hiding the transaction data so you can't front run based on it in that layer or other orthogonal techniques.
00:20:07.380 - 00:20:09.250, Speaker B: Any follow up on that guys?
00:20:09.860 - 00:20:32.676, Speaker F: How do you feel about fair ordering? Basically requiring that you corrupt the set that creates the ordering rather than just having one party. In a way it does not seem to me that you're solving the problem, rather you're increasing the cost to attack by a constant.
00:20:32.868 - 00:21:06.160, Speaker D: So it's not actually a constant because you're not corrupting the set. So let's say if you are in an l two permission network, right? So you're taking the proposals from most of the nodes in the network. So not like a constant, but if you have N nodes, then you're taking them from two thirds of the nodes. So you do require a substantial more amount of corruption power. So it's not just a constant number that you're corrupting, it's basically almost all nodes that you need to corrupt.
00:21:07.380 - 00:21:24.584, Speaker E: It seems to me that even if you have perfect send ordering, you're just incentivizing an arms race and essentially like processing and responding to news, right? There's still some kind of race where this value ends up going to whoever runs the fastest one of that. And that seems like a wasteful use of resources, right?
00:21:24.782 - 00:21:31.332, Speaker D: So send order as I said, doesn't actually be affected by the network latency. So it's not like not the network latency.
00:21:31.396 - 00:21:40.140, Speaker E: Literally your transaction sending latency like something happens in the world and you react to it. Your reaction speed, your reflexes are what determines it. Right?
00:21:40.290 - 00:21:54.610, Speaker D: Right. I mean that you can argue provides some kind of unfairness, but I would say it's an open problem to whether that can even be solved. And that's something that even exists in any solution that you can find. I think.
00:21:56.600 - 00:22:22.680, Speaker B: I have one thesis which is that applications shouldn't try to have a heartbeat that is faster than the heartbeat of ethereum itself. So the twelve second block time and so one consequence of that would be that you should use sort of batched auctions, for example, in a decks. Wouldn't this be just fundamentally even more fair than even the fairest ordering solution?
00:22:24.620 - 00:22:50.004, Speaker D: Yes, that's a good question. I'd like to talk a little bit about batch auctions. So when you're talking about batch auctions what you're saying is there's some l. One ordering service. And any transactions that are posted to this contract or smart contract that does this AMM it will take the transactions from the l. One. And the transactions that are relevant to it'll batch them according to how they're posted on l.
00:22:50.004 - 00:23:19.308, Speaker D: One. But that still hides the fact that the person ordering on l. One can take advantage of their power on l. One. So they can exclude transactions. They can reorder even arbitrarily far right. So batch auctions, when you're considering it like a smart contract setting, is not really batch auctions because of the fact that or it's not really fair because of the fact that whoever controls the L One ordering can control the quote unquote batches in layer two.
00:23:19.308 - 00:24:00.830, Speaker D: Now, I would like to draw this comparison between batch auctions and fair ordering, where you can think of batch auctions in a centralized fashion. So suppose there's only like one server for the exchange and you send it to that server. Now you can consider a batch auction based on transactions that were received by that server in that batch time, right? And what Fair ordering tries to do is tries to distribute this over a network of servers. So now you don't have just one server that's receiving transactions, but you have end servers that's receiving transactions or potentially like a large global network. Now, the question is, how do you do batches? Which is not obvious, right? You need to change the L One protocol, which is exactly what fair ordering does.
00:24:04.000 - 00:24:10.568, Speaker B: How do you see the trade off between having mempool privacy and fair ordering?
00:24:10.744 - 00:24:20.572, Speaker D: So when you say mempool privacy, does it mean hiding particular transactions in the mempool so you know they exist, but you don't know what they are or the entire mempool is dark?
00:24:20.636 - 00:24:31.952, Speaker B: I guess that's a good question. And as I understand it, is there even a way to make the entire mempool dark, right? Because the miner can always see their own transaction.
00:24:32.096 - 00:25:20.980, Speaker D: I don't know. So in the case of when you're adding privacy to the mempool, I think there's still problems. Suppose you encrypt transactions that are in a mempool and you choose some random ordering within the mempool that still leads to a problem of a flooding attack where you can just send thousands of transaction. And because the block space is limited, you can have a higher probability of your transaction being selected in the block. Right. On the other hand, with fair ordering, what we're trying to do is have a definitive way of ordering transactions that get processed into the network. So basically, in order to you can't do the same kind of flooding attack in a fair ordering protocol because you would still need to send those transactions at the same time.
00:25:20.980 - 00:25:34.280, Speaker D: Like in a random ordering protocol, you can send those much later than a user transaction you're trying to front run. And if you send thousands of them with high probability, at least one of them will be sequenced before in a random ordering.
00:25:35.340 - 00:25:48.910, Speaker B: I see. I have one for Georgia and then Vitalik. So why do you think that fair ordering protocols are often presented as sort of the diametrical opposite to what Flashbots is trying to do?
00:25:52.000 - 00:26:29.130, Speaker F: Firstly, I don't think anything is a solution that solves everything. So basically I think that instead of having them as diametric opposites, we should have them as more like as you did in your talk, as more synergistic approaches, we use one to minimize the surface where possible and where whatever remains, we try to auction it off in another way compared to the normal one. So honestly, that narrative seems a bit misplaced to me and I would prefer that it was more synergistic than not.
00:26:31.280 - 00:27:28.348, Speaker A: I would agree with that. I think there's a lot of mischaracterization of the Flashbots narrative which is possibly expected because I think Mevgeth was a relatively opinionated software release and it had a relatively widespread effect on the ecosystem and it's a very accelerationist piece of software. That being said, Flashbots does not start and end at Mevgeth like has a number of other research streams, activities, projects that I encourage you to take a look at and get involved with and fair ordering has been there since day one so we're definitely interested. If anyone wants to work on fair ordering, please reach out, we're happy to fund that or help you do it in whatever way we can. Because I think I personally see it exactly the way Giorgios does, where if it can be minimized and you get the same effect, why not do that? That's like a no brainer. That being said, I do still think it's somewhat fundamental, which is an open question and open research question as well.
00:27:28.514 - 00:27:52.980, Speaker F: And just to add on that Phil minimizing does not mean that the total number will not be large. The Mev surface is so large that I don't think that any minimization, let's say techniques would get us to a point where searchers are not making money or miners are not making enough money from Flashbots bundles.
00:27:54.360 - 00:28:28.400, Speaker A: Yeah, I think that's true because fundamentally searchers provide a service to the network. They're the ones that liquidate transactions and do the ARBs and every single Flashbots transaction is doing some service for adapt, otherwise there wouldn't be any money in it except the ones that are hacking or doing other kind of unexpected things but like the vast, vast majority of them. And yeah, I think that the bots need to get paid enough to survive because that's like an existential thing for those applications. They need those bots. So in the long term equilibrium, I do agree with Giorgios that there will be some very tight and efficient, but still kind of profitable marketplace.
00:28:30.260 - 00:28:41.460, Speaker B: Dan, from you, I'd like to hear a bit about your experience in building unisop. So how much did you think about mev when designing unisop V three or even prior versions.
00:28:45.000 - 00:29:03.210, Speaker E: For unisoft V three specifically? I think that a little obviously about how it affects the Oracle. The big discussion was about this weird sandwich attack that becomes more feasible in V three than V two and that we've actually started to see now the strange variant on a sandwich attack.
00:29:04.960 - 00:29:45.770, Speaker B: Yeah, this was going to be my next question, so maybe to give the listeners some context. So, over the last weeks we have seen a new type of sandwich attack that doesn't target traders anymore, but LPs. And the way this works is the front runner deploys tens or even hundreds of millions of liquidity to Unisor pool just in time to front run an incoming trade and then capture the fee and then withdraw their liquidity right after. And as a result, they capture the fee without any of them permanent loss. So what are your thoughts on that? And does it mean that market makers and miners are actually converging right now?
00:29:46.220 - 00:30:27.808, Speaker E: So we thought about that a lot. I think there are some ways that you could prevent it by charging a fee on depositing liquidity or withdrawing, but all those have trade offs and hurt other things. I think ultimately what this is, is helping the user. You're improving the price that the trader gets when they trade. And this is only profitable to do when the user is getting a worse trade than some centralized market maker would be able to give them. So yes, you are sort of allowing someone to essentially use uniswap in the sort of hackish way, use it to provide price improvement to users and therefore intercept some of the fees yourself. This was always possible in uniswap.
00:30:27.808 - 00:31:00.640, Speaker E: I think in V three makes it easy because it requires less capital. Ultimately it's an inefficient way to do this. And so if it's actually because you don't do two transactions and you got to buy the mev if you're going to do this, I think that means there must be like a big opportunity. And so ultimately I think those are going to be competed away anyway. So I think right now it's probably better that it happened within uniswap than outside of it. And if you don't allow it like this, then a big opportunity like that certainly is going to get seized somehow by dex aggregator, by someone else. So ultimately I didn't think it was a big problem.
00:31:00.640 - 00:31:03.730, Speaker E: We'll see though experimentally, we'll find out whether it's a big problem.
00:31:04.820 - 00:31:28.324, Speaker B: Yeah. And I'd also maybe point out that concentrated liquidity does a lot to mitigate mev, actually. Right. So I covered this in my own presentation earlier. But sandwich attacks are a function of price impact that you cause with your trade. Back running opportunities are a function of price impact that you cause with your trade and the lower the price impact of your trade is going to be. Hence the less mev you generate.
00:31:28.324 - 00:31:33.790, Speaker B: So I think even so, PC does more than meets the eye in that regard.
00:31:34.800 - 00:31:35.790, Speaker E: That's right.
00:31:37.040 - 00:31:55.330, Speaker B: Yeah. So if we have no further comments on the deck section, then I'd move on to the last block. Vitalik. If you had the chance to completely redesign Ethereum and I guess you do a little bit with these two with mev in mind, then what would you.
00:31:57.780 - 00:32:43.330, Speaker C: Mean? I would definitely just look into some of these ideas that allow you to separate block building from block proposing more. Aside from that, it's not super clear how much can actually be done at protocol layer. Just find ways to design the protocol around the, around the expectation that kind of transaction selection and mempool logic is going to become more specialized. If you're going to accept that there's a lot of other gains that you can get right. Like for example, you can make account abstraction much easier. So I guess think about and do some of all of those things.
00:32:46.580 - 00:32:59.830, Speaker B: Yeah. So I think roll ups are a great place to experiment with some of the protocol layer approaches to mev that have been discussed today. Are there any that you're particularly looking forward to?
00:33:00.700 - 00:34:15.810, Speaker C: Well, I think some of the kind of thought leadership that optimism has been doing around this idea of like, hey, let's auction off sequencer rights and then take that revenue and use that revenue to fund public goods. So I guess they've been talking about for at least over a year now and is potentially really interesting. I kind of like this idea that basically Ethereum can do some of these things at layer two and so you can preserve the economic simplicity of the base layer. But then if you have public goods funding at layer two and then you can kind of get back some of the benefits of these platforms that have on chain treasuries of different kinds, but you get those benefits without actually interfering with the monetary properties of the base layer itself. So that's interesting. But the one thing that I think would still needs to be done is like you don't just want democratized extraction. You do also I think, want at least some minimization and basically ways to kind of detect sequencers that are doing a bad job and potentially voting them out or something like that.
00:34:15.810 - 00:35:12.528, Speaker C: Basically I do think that there's an opportunity to be sort of a little bit more governance activist there because the costs of governance breaking are lower than if those costs were at layer one. Because ultimately you still have your fallbacks, you're still guaranteed safety, you're still guaranteed censorship, resistance, after a delay and so forth. The other interesting thing that Roll Ups potentially could do is they could add some notion of transaction pre selection and transaction. This was the OMG proposal back then. I'm not sure how much this OMG is actually implemented, right, but they wanted to have some kind of more like delegated proof of stake style consensus that would make off chain agreements on transactions and then they would give users fast reconfirmations and then they would submit badges to chain once every couple of minutes.
00:35:12.694 - 00:35:43.230, Speaker F: We could also do that with e two, I guess, providing pre confirmation because you know the validator ahead of time. I also think that Solana does a variant of that where if each block, let's say, takes 400 milliseconds to get produced, you can anchor your transaction into, let's say, sub slot times. So we could try doing something like that to improve latency on our system.
00:35:45.360 - 00:36:26.436, Speaker C: Yeah, I think that stuff's interesting too. The other thing that Ethereum sharding is considering is staggering the publication of the Shards. So there's always going to be one shard that publishes something within 1 second. And so if you want to get data in quickly, you can just select the shard that does that. And then theory would be that roll ups would have a way of kind of building around that. But I guess we'll see how that goes. Because making experienced block times faster is itself a type of mev minimization, right? Because if you have two N transactions, then the amount of reorderings is like two N in brackets factorial.
00:36:26.436 - 00:36:30.760, Speaker C: But then if you split them in half, then you have N factorial squared and that's strictly smaller.
00:36:31.120 - 00:36:41.790, Speaker F: There's also the argument, though, that shorter block times make it easier to mask short reorgs, which would be very possible.
00:36:43.840 - 00:37:06.710, Speaker C: Well, I guess in this particular case, one of the benefits of the Ethereum sharding is that there's just lots of different actors involved, there's lots of different block proposers, there's these large committees of attesters, so it is hard to do any of that stuff until you get fairly close to the 50% mark. But so far this is all conjecture, so we'll see how it goes.
00:37:08.680 - 00:37:20.600, Speaker B: What we haven't really seen so far, but I'm sure we will see a lot of in the future is cross chain mev. George, could you maybe give an example of how that could look like in practice?
00:37:22.160 - 00:38:07.940, Speaker F: Maybe we have chain A and chain B. Let's say one is optimism, the other is Arbitrum. Or maybe two are optimism chains. Doesn't really matter. If you want to send a message from one chain to another, you need to somehow relay the message after you've committed to it on the sending chain and relay to the receiving chain. And if there's many messages and there's no way to commit on the ordering on the sending side, firstly the relayer could just reorder the messages as they relay them on the receiving chain. Or they could simply if ordering is committed, maybe they can simply choose to delay and just not publish a message on the receiving chain.
00:38:07.940 - 00:38:51.060, Speaker F: And an example would be if you're doing a cross chain arbitrage, where your transaction needs to get somewhere within some time, because that's the window when it's economically profitable, but maybe the relay takes too long to relate, and as a result, it doesn't work. So probably what will happen with crosschain transactions will be that we'll have some form of liquidity providers and channels to make transaction latency lower, or some other protocol like Cellos Optics by James Freshwich, which would be some alternative to having lower latency message passing while preserving some notion of ordering.
00:38:52.760 - 00:38:55.080, Speaker B: Okay, thank you. That makes sense.
00:38:55.230 - 00:39:03.080, Speaker F: And also maybe like in the cosmo somewhere where that thesis will be stress tested, I think will be probably the Cosmos ecosystem with IBC.
00:39:04.060 - 00:39:33.670, Speaker D: I would like to argue, actually, and this is a point I made in my talk as well, that if you have two sort of cross chains that each have some kind of fair ordering protocol running on it, the cross chain mev might not be actually large as you would expect, because even if they're different definitions of fairness, their orderings might actually not be that different. This is just a conjecture, but I think it's an interesting open problem.
00:39:37.000 - 00:39:48.612, Speaker B: Yeah, I'm actually out of questions since we skipped a few. So if we don't have any questions from the audience, we can check the chat, the Zoom chat.
00:39:48.676 - 00:40:01.070, Speaker A: I have one while we wait without knowing anything, in two years from now, you guys need to make a massive trade. Are you going to go on the Fair sequence roll up, or are you going to go on the Mev auction roll up?
00:40:05.130 - 00:40:06.440, Speaker F: Why not both?
00:40:10.410 - 00:40:14.918, Speaker A: Because okay. Both at the same time. You'll do half your trade on each one.
00:40:15.084 - 00:40:18.786, Speaker D: See, here's the thing, Phil dollar cost average.
00:40:18.818 - 00:40:20.370, Speaker A: Georgios, is that what you do?
00:40:20.540 - 00:40:40.766, Speaker D: Here's the thing, Phil. Everyone here except me has vested financial interest in one of these solutions. I literally have no vested interest in chainlink, no vested interest in Arbitrum, no vested interest in you know, follow the money and you'll reach your answers. Everyone.
00:40:40.948 - 00:40:48.690, Speaker A: I don't think Flashbots has a business plan. So other than Dan and Know burning their VC money under our auspices.
00:40:51.670 - 00:40:53.090, Speaker C: Sorry, LP.
00:40:53.990 - 00:40:57.170, Speaker D: Some know a flashbox is funded by Paradigm.
00:40:57.250 - 00:41:11.340, Speaker A: Yeah, I mean, obviously we do want to be sustainable, but I think at least my goal is not to make money. My goal is for cryptocurrency to succeed. And I think my track record on that front kind of speaks for itself.
00:41:14.440 - 00:41:25.560, Speaker E: I would trade it on the Fairer sequencing chain. I don't know why you wouldn't. I think the argument that mev is inevitable is different from the argument that you should just walk right into an Mev wall if you have another choice.
00:41:26.060 - 00:41:42.590, Speaker B: Yeah, I'm actually with Dan here, like as a user, why shouldn't I prefer, in that case the ordering chain, right? It's fine that the operator or some public funding source gets the mev that's extracted on that chain, but doesn't mean that I get it.
00:41:44.080 - 00:42:02.692, Speaker A: That is true, but I also didn't say the liquidity or usage is equal. So I think your assumption that you'll get better execution is what I would call into question making the personal decision myself. But I see your point and totally reasonable decision. I don't disagree necessarily, I just wanted to troll a little.
00:42:02.826 - 00:42:11.700, Speaker B: Yeah, certainly successful. So you would argue that basically the mev chain would get more adoption and more liquidity. That makes it better.
00:42:11.850 - 00:42:22.264, Speaker A: I don't know. I think optimism versus Arbitrum is the first round of this testing, this hypothesis. So I'm open to whatever happens. Either universe is, I think, fine.
00:42:22.382 - 00:42:55.312, Speaker D: I mean, I would argue how many users would actually use selling to the highest bidder if they knew the true cost. So just to kind of give a very weird example, like Robin Hood, right, it offers free trades, but users actually don't know the cost of the free trades that they're giving. There was this filing from the SEC last December that users, if they just used some other brokerage that didn't offer free trades, they would have made like $34 million more even if they paid for those brokerage trading fees than they would just make like using Robinhood.
00:42:55.376 - 00:42:57.220, Speaker A: Yeah, but that's a terrible argument.
00:42:57.960 - 00:43:06.820, Speaker D: It sells order flow and actually users get a worse price. They would have made way more money even if they just paid for transaction fees in another brokerage.
00:43:06.980 - 00:43:36.528, Speaker A: I agree with you, although I think doing that study without thinking about the market impact of the order flow activity is probably how it was done and is like a little bit of a flawed methodology, but on that I agree with you. But my counterargument is that payment for order flow is like the number one model right now as is same as ad revenue on the internet. Right? They're both very suboptimal models but very clearly what the market wants. And every single brokerage is moving towards it because they don't have a choice because people don't want to pay for trades anymore because they're just not used to it.
00:43:36.614 - 00:43:44.380, Speaker D: No, it's because they realize they can make more money that way. The brokerage can make more money that way. Like Robin Hood made $300 million of.
00:43:44.470 - 00:43:52.884, Speaker A: They make more money because people want to trade there and pay the higher implicit fee versus the higher explicit fee, right? Like if they charge $20 a trade and people wanted to pay that go.
00:43:52.922 - 00:44:01.960, Speaker D: The real cost of what their transactions are actually costing them, would they want to do something like that? Would they actually want free trades? Who knows?
00:44:03.100 - 00:44:09.290, Speaker A: I think it's an open question. Like would users want to pay for Facebook to not have their data sold? I think is another version of the same question.
00:44:11.980 - 00:44:12.536, Speaker C: Yeah.
00:44:12.638 - 00:44:18.944, Speaker A: As much as I wish the answer was different in both cases, to me, the market has very clearly spoken in both. So?
00:44:19.062 - 00:44:37.810, Speaker B: Yeah. I don't know. Okay, great. Guys, who wouldn't have guessed that the last six minutes after I ran out of question would be the most entertaining one? So thanks. Vitalik Dan, george OS, mahina and Phil for joining this panel. And thanks, everyone, for listening. Have a great night.
00:44:38.180 - 00:44:38.750, Speaker E: Thanks, everyone.
