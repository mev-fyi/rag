00:00:06.330 - 00:00:27.110, Speaker A: Hello, good morning, good afternoon, good evening. Depending on where you're calling in from, we have Nandit here from Lighthouse who will be doing a workshop on perpetual storage and building token aided applications. If you have any questions, they can go into the Zoom chat and we'll be more than happy to answer them. And with that being said, I'll will pass the mic off to Nandit.
00:00:30.430 - 00:01:18.450, Speaker B: Awesome, thank you. So hey everyone, welcome to Lighthouse. So today I'll give a session on what Lighthouse is and what do we mean by perpetual storage and how you can store your data on Lighthouse and build token getted applications using the Lighthouse SDK. So if you have any questions, meanwhile, just drop in the chat, happy to answer them all. So we'll just go through a basic overview and then even show you a live demo as yeah, like George Orwell once famously said that who controls the past, controls the future, and who controls the present, controls the past. Again, like referencing to the issue of information control and manipulation. And in the past we have seen libraries being burned down and scholars being buried.
00:01:18.450 - 00:02:18.620, Speaker B: Most famously, Library of Alexandria was destroyed in India, there was very famous Nanda University which got vanished, and most recently Kerath National Library got bombarded. So the point being, data physically is not totally secure. It can be destroyed due to various reasons, although most people might think that data digitally on the Internet is secure, but also that's not the case in web two. The data is also transient and it faces two key problems of link rot, which refers to like broken links. As it was seen that around 25% of links in the New York Times article do not even point to the original content. And the second thing is content drift. This again refers to the issue of content manipulation, data laws or let's say DNS changes pointing aside to again like a manipulated or a different content which was previously meant to be.
00:02:18.620 - 00:03:10.986, Speaker B: And in web3, again, we see like this problem still persist with your files. Web three, we have seen there have been user owned DAP concept and we are creating experiences and NFDS in which user owned their data. But the problem again has like the records and transactions of all of these data is permanent on gen ethereum, but the files are not. And hence we saw recently with FTX as when the centralized platform got down NFT or the FTX NFTs eventually broke. And also on OpenCV realized that many NFTs due to their centralized point of failure, do not even point to the original link. And in many cases, like this case, it says not found. So that's why we thought, okay, let's build Lighthouse.
00:03:10.986 - 00:04:17.918, Speaker B: And we identified like there has to be four key properties on the storage layer side to make it work for all kind of use cases. First is persistence. So with Lighthouse, when you store data we store it on IPFS and file coin and ensure minimum replications of your files and that your files are stored long term forever. So let's say rather than renewing your filecoin deals, you can pay once and need not renew Deer again and again. So permanent storage on filecoin and underlying there is this endowment pool model that pays for your file still perpetuity. And the second thing is a lot of users demanded us like can we store private data on IPFS or filecon using your SDK? So then we even built this feature into the Lighthouse SDK where you can not just store even private data but even token gate your resources and files which I'll also demo today. And third thing is again, this property then we inherit from using IPFS and filecon underneath which is like being temper proof and distributed.
00:04:17.918 - 00:05:20.390, Speaker B: So Falcon has a big minor network and has like around 18 exabytes of data capacity onboarded which again allows us to serve big scale data as well and distribute your data on a bunch of miners. And the fourth thing is, again, many people complain that distributed storage systems are quite slow. So we even have dedicated gateways using which you can store and retrieve back all kinds of files be it image video, you can even stream 4K video out of it. So it's quite fast. And yeah, as I was talking about, underneath Lighthouse, we have the Smart contract based growth endowment Pool, as we call it, which ensures data files as total perpetuity and hits like MultiChain. And it's controlled by a dow. And when you pay for a file, some part of it goes to the filecoin miner and remaining part goes to this Endowment Pool, where it accrues fees through various protocols.
00:05:20.390 - 00:06:17.634, Speaker B: And yeah, as of now, Lighthouse suite contains three things. One is our CLI tool, next is our SDK, which I would highly recommend using in your hackathon projects which is like this NPM package that you can either import on your website front end like react view or whichever framework that you like. And another thing is like backend in node JS as well. And third thing is again our website which is Lighthouse Storage and I'll also demonstrate our Lighthouse files app right now. So yeah, this is our main site and the URL is Lighthouse Storage. So you can as for starters you can come here and click on the Store Files now button and then you can log in into whichever login method that you prefer like through MetaMask if you prefer any other chain or Google GitHub email login as well. So we also support like filecoin wallaby as a test network.
00:06:17.634 - 00:07:01.474, Speaker B: So given like this is a FM hackathon so I highly recommend you to connect to wallaby and build applications around it. Yeah, but you can easily log in through your MetaMask wallet and view all the files that has been uploaded. So if you want to upload like a public file. Let's say this file that again the upload is quite fast and all of these functionalities that I'm showing you, you can do these from our SDK as well. So this is like just as a demo purpose. That what all functionalities you can do with Lighthouse. And let's say if you want to upload an encrypted file, you can turn on the encryption and let's select one of these files.
00:07:01.474 - 00:07:53.298, Speaker B: And again, for this encryption, you need to sign in from your wallet to authorize. And then you can view this, connect to your wallet, sign again, and then you should be able to view this file which you just uploaded. And if you try to download it from the IPFS network, you will be able to but then that will be encrypted file. And only the authorized persons can view this file after signing from their wallet. But that's not just it, you can even do like more things with it. So since it's an encrypted file, you will see there's a blue button here called as apply access control. So if I click on here, I can add a condition and I can add a condition like let's say if you are on Wannabe which is like the filecoin test network and if you want only the owners of a particular NFT collection to view this particular file.
00:07:53.298 - 00:08:52.442, Speaker B: So you can select whichever token that you want to have the logic on. Let's say ERC 721 which is the NFT token and then you can mention the contract address here. And let's say I want only the users who have more than or equal to three of these NFDS on wallaby chain to access this file. I can mention more than equal to three and then create access condition and I can also create multiple conditions as well. So let's say three tokens, NFT tokens on Wannabe chain but thousand uniswap tokens on polygon chain. Even like that can be done like cross chain logic can be built around it. So I can then put in like let's say if this is the uniswap token address, then create access condition and then I can create like a combination of these conditions as well like C one and C two.
00:08:52.442 - 00:10:02.362, Speaker B: So now what it means is like the user in their wallet has to satisfy both of these conditions and only then they will be able to view this file and then you can create access condition and then again authorized on your wallet. And then if I now share this file link to whoever I want to when if they satisfy those two conditions in their wallet after signing in, they should be able to decrypt the file and again, this is something that you can do from our Lighthouse SDK which is like the key purpose for this hackathon. You should be using Lighthouse SDK to qualify for the Bounties as well, which I'll talk about. And yeah as for developers, you can come here, get an API key and again sign from your wallet to generate that API key. Copy this API key and then here's our documentation link which you can also find from our main site as well, clicking on this documentation page. And here we have a bunch of code examples. Let's say if you want to try out our CLI, but let's say if you want to integrate into your browser front end or node JS backend.
00:10:02.362 - 00:10:46.222, Speaker B: So we have a bunch of code examples here. So let's say if you want to upload the file here, so you can just copy paste this code, enter the API key here and just start uploading files to Lighthouse. And even on access condition side which I just demonstrated. So there are like bunch of code examples here, like on node JS you can apply the success control conditions and mention whichever chain and what the condition has to be. And the access conditions are multiple. Like I showed you how you can add in like an ERC 721 logic to token gate your file or ERC 20 logic. But you can also even apply time based access control as well.
00:10:46.222 - 00:11:42.426, Speaker B: So let's say if you want to time lock a file for let's say next one day, or if you want to unlock a file only after next one month. So accordingly you can specify that block number here that only allow to access this file only when this block number has passed. So again, this is pretty interesting feature that you can use to build some useful app on in this hackathon as well, which I highly recommend. And coming back to our presentation, your Lighthouse files for this SDK as I just showed you can go to our documentation, this is the link for that. And here are some of the use case that I would love to talk about. So for example, Ocean Protocol, we did an integration with them recently. So now all the ocean economy and ocean ecosystem DApps will be able to store data on filecoin through the Lighthouse SDK.
00:11:42.426 - 00:12:39.074, Speaker B: And then there's just another great project called as OK Contract. So they created something very interesting like these web two widgets, sorry, these web3 widgets that you can embed into any front end, be it any web two or web3 front end. So let's say if you want to have an NFT functionality so you can rather than implementing it from scratch, OK contract, build this on Lighthouse that they had this minting NFT functionality and the data is being stored on the NFT data is being stored on Lighthouse. And now anybody can just go and use OK Contract widget into their front end and then start storing files on Lighthouse. And then Link is another gaming project. So they are storing all their gaming assets on Lighthouse as well. But yeah, I think as part of this hackathon there's already an idea list which I think you can find on the spacewarp site.
00:12:39.074 - 00:13:21.658, Speaker B: But this is like another bunch of examples that you can take an idea from what is possible with Lighthouse. But again, this is just some basic roof examples. You can even build some more interesting examples. But yeah, if you want to try something like paper view, media, time lock retrieval, those things can be interesting to experiment. Or you can use it generally for your Dao storage or NFT storage if you are using any of those ideas into your projects. And as part of this hackadon we are sponsoring in total of $2,500 which will be divided among five projects. So let's say $500 per project.
00:13:21.658 - 00:14:48.086, Speaker B: So for the best use of Lighthouse SDK yeah, so here is our website, Lighthouse Storage and this is our Discord. You can also find that again on the website as well. But feel free to scan this link and happy to answer any questions. So it says how would we so one question is how would we whitelist wallets to view? So, yeah, again, this is something that you can do through our SDK as so, like, just to show you the UI interface of it, let's say, rather than doing this apply access control part, you can just click on this Share button and enter all the addresses here, like all the public address you want to share. And then those addresses will be whitelisted, and only then they can do this file. This functionality again, you can implement from our SDK as well, there should be code example how to whitelist public addresses who can view this file. Next question is can we how do the conditions get applied? Can you provide insights into how these work behind the hood? Yeah, I think that's a very interesting question.
00:14:48.086 - 00:15:50.922, Speaker B: I think we also had a blog around it as well on our site on how this encryption works. But yeah, underlying we use like this Threshold cryptography. So every file gets its own unique decryption key and encryption key or decryption key, whichever you want to call it. And then that key is splited using Threshold cryptography like BLS cryptography and split it across various Lighthouse nodes. And none of the nodes know the full key part of the file so they cannot decrypt the file on their end. But when you as a user, you authorize from your wallet as I was showing on signing to your MetaMask, so all of those Lighthouse nodes verify on their individual end that does this user have access to the file and then they share their key parts which is aggregated on the client's end. So we also open sourced our SDK as well.
00:15:50.922 - 00:17:00.430, Speaker B: So for if people want to use it for other storage systems as well, you can do that, let me call it coverage. So underlying it uses Threshold cryptography to make this magic happen and let me see what's the another question, how many sites have integrated the wallet? I'm not sure what does that mean? How many sites have integrated the wallet? If you can again ask, what do you mean by that? And Manu asks, can we use Lighthouse SDK with Ionic framework or app gear? I'm not sure about these frameworks. I think these are primarily front end frameworks. If yes, then just post it on our Discord channel. One of our team members should get back to you on how should you do it. But essentially, if Ionic already supports NPM package, then you should be able to do it. And then there's a question on how do endowment pool.
00:17:00.430 - 00:17:48.954, Speaker B: So right now, this endowment pool is not totally live. It's like live on test network, but we just got it audited last week and then it will go live main net in the coming month. But yeah, what you can imagine how endowment pool works is you can imagine it like a Dow, which is controlling the spool of funds. And the spool of funds ensure that the files is total perpetuity. So when you pay for a file, some part of it goes to the Falcon miners, as per the replications we have asked for. And the remaining amount, the buffer amount goes to this smart contract based endowment pool, which is collective for all the users buffer amount, not just you, but every user's buffer amount goes to this endowment pool. And it will be transparent.
00:17:48.954 - 00:18:50.138, Speaker B: So you can check, okay, what's the estimated amount in the pool and how many estimated number of years this pool can support. And this also accrues fees through DeFi protocols, through our encryption bandwidth and other functionality usage, as well as those generate fees. And yeah, another question is will we will support hyperspace testnet? Will it support yeah, definitely. I think it should be added in couple of hours hyperspace testnet. But right now, Wallaby is already live, but hyperspace should be done soon. So we'll update on the Discord as well when it's done in couple of hours or by the morning. And then the question is, how does Lighthouse decide a judge what a good implementation is? So I think just make something which could be interesting.
00:18:50.138 - 00:19:51.486, Speaker B: Again, it's tricky to say what would be the best implementation, but I think there's like bunch of projects that you can refer to in the Heat global projects history as well. So just see, okay, what are the winning projects and what are the common trends between them. One thing that I would definitely encourage as whatever you do, you have enough time, so make that thing live, host it on a let's Reversal or any other platform that you prefer. Just make it live so that people can actually users can actually go and use it. So I think making the product live as much as possible, as much as usable, and not just keeping it local host or on your GitHub would definitely be important. And Lighthouse SDK, you can use it either for storing your data or it can be used for this encryption and token gated functionality as well. So obviously if somebody goes far to leverage all the functionalities that we have, that makes up extra marks for them.
00:19:51.486 - 00:20:39.930, Speaker B: But generally you can also use it for storage, like even public file storage as well. That should be no problem. And another question is what's the maximum storage we can use for free? So right now whenever you sign up, like using your wallet, you get one GB free. So this increasing the storage capacity part will go live officially in the coming week. But meanwhile, you can message us on Discord if there's more amount you want for this hackathon purpose, we can manually top it up as well. But yeah, I think those are some of the questions and happy to answer if there's any more questions from the audience.
00:20:41.630 - 00:21:18.838, Speaker A: All right, I guess that's all the questions for now. As Nada said, if you have any more questions, it looks like someone's asking if you could post the GitHub URL, but otherwise if you have any questions, feel free to join the Lighthouse Discord. It is posted in the onsuit Lighthouse Discord channel on the Space Warp Discord and I'm sure someone from their team would be more than happy to answer and the Discord's right there and otherwise Nidit, thank you so much for actually I think you're getting a couple more questions if you want to answer them.
00:21:19.004 - 00:22:44.130, Speaker B: Yeah, so I've posted GitHub link as asked by Julio and shekhar is asking what specifically a data dow is. So I think that's a very interesting question and I think there are a bunch of resources as well that you can refer to on Google around this. But essentially I think how most of the DAOs that we have seen on Ethereum are collaborating around just pool of funds. I would say datadao users can have control over data, maybe they can even contribute to that data together and even monetize that data as well. So let's say somebody like even, let's say OpenAI, which is like one of the most great examples of what's happening in the AI right now with their chat GPT model. So imagine if a lot of users together come together and have, let's say genetic data in one place, and let's say all hospitals in a place, they collectively pool data resources and they control and they can, let's say, monetize that data. And also, let's say if somebody wants to use that data they can let's say have on chain royalty or something like that to access it.
00:22:44.130 - 00:23:47.800, Speaker B: But I think this is something a topic that you can learn more about filecoin site as well. But generally you can imagine it like a way to collaborate, bring data together and even monetize data and I think that could be very interesting use case that people should explore. So for example, I know one of the projects which is building on FPM right now they build something called as glacier dow. So, like how GitHub had their Haptic code world. I think Glacier Dao is doing that same thing with, let's say users can bring in their code repos and then that is stored together and maybe there's a way to monetize that. And maybe in future somebody can run compute on that. Let's say GitHub has their own GitHub copilot, but somebody in future can use glacier dow's data and Glacier Dao contributors can get paid whoever as per their contribution to this.
00:23:47.800 - 00:24:30.824, Speaker B: So but I think even Heathglobal, there was a summit previously. So there's a video on this like Fevm submit unlocking data dows with Fevm. So must check this, what these guys are doing with Glacier Dow, Lengrass, Dao, et cetera. So those could be a starting point. But yeah, I'll also drop in some of these resources in discord as well. And is there any other question? So retrieving data from Lighthouse can be data time specific. Again, this is something that maybe you can ask in our discord right now.
00:24:30.824 - 00:25:13.060, Speaker B: I think it's like on the block time. So let's say if you want to access control, it that the file can only be viewed after some specific number of blocks. Then maybe I think you can multiply that with whatever the block time is and then get the amount for which the file will be locked. But if you are asking specifically for, let's say, lock discontent for next one year, this is something you can ask in our discord. But I think right now we support just block times. Well, I think Anna, you are muted.
00:25:13.960 - 00:25:37.356, Speaker A: Yeah, no, thank you so much, Bandit, for taking the time to do this workshop. And thank you so much for the rest of you for tuning in and asking so many questions. Definitely feel free to keep asking any questions you have in their discord channel. And with that being said, I hope everyone has a great rest of your day. And the hackathon officially starts tomorrow. So excited to see what you all build. Thanks.
00:25:37.356 - 00:25:38.350, Speaker A: Bye, everyone.
00:25:39.040 - 00:25:41.000, Speaker B: Goodbye. Thank you. Bye.
