00:00:07.370 - 00:00:17.310, Speaker A: I want to bring on Ahmed from Biconomy to just share what they've been working on with their new recent launch of how we can make account abstractions a lot easier. So please welcome Ahmed on stage.
00:00:21.970 - 00:00:36.982, Speaker B: All right. Hello, everyone. How's everyone? I'm doing awesome. Good to be here. Thanks so much to the E Global team as well for making this really amazing event. Yeah. Everyone.
00:00:36.982 - 00:01:29.130, Speaker B: My name is Ahmed. I'm one of the co founders at Biconomy. I'd love to quickly just talk to you guys a bit about what we're doing, but also just a launch that we'd love to share and announce with everyone. So I kind of rejigged the slides after Vitalik sort of gave a really interesting presentation about the history of account abstraction a couple of days ago. And I thought it was just really important just to sort of reshare some of the things that he talked about. And what's really interesting is one of the clear things was that we have seen some forms of counter traction before in the past couple of years, and that's what Biconomy was essentially built on. We essentially built Relays to enable Gases transactions.
00:01:29.130 - 00:02:42.750, Speaker B: And this essentially powered over 200 projects to enable a better experience for their users, which essentially helped many applications and enterprises that we worked with. And essentially, this was our first form of account abstraction. However, Ethereum and L two UX is still a nightmare, right? Like, gas's transactions are great, but it's still not there yet, and so more needs to be done. And of course, this is why EIP or ERC four three seven has come to the picture to essentially rethink how the UX should look like just within the beginning of the transaction, the onboarding lifecycle of the user. And so four three seven is now something that is becoming a standard. Everyone knows about this, and I don't really need to go into the details here. For us at Bicon, we've been working on the can abstraction for, I would say since Q one of 2022, so early last year.
00:02:42.750 - 00:03:36.882, Speaker B: And since April, when we launched our SDK, we've been sort of just trying to really bring as much adoption to account abstraction as much as we can, partnering with applications or wallets. And this is sort of some of the stats on Polygon, where we sort of focus our initial efforts on. But account know has promised a lot more. There's still so much more that can be done. The user ops that we're seeing is not in the millions or the tens of millions that we'd like to see, and we want to see more programmability. And sort of when we sort of look at these and I think in the last panel, Eli discussed it very briefly about EOAS and smart accounts. We are living in this EVM world where all the users are right, we're seeing a lot of L two S people are using this.
00:03:36.882 - 00:04:48.196, Speaker B: And so when we look at this of course intersection and sort of the difference between how users could move over from EOS to smart accounts. We'd like to think of it as the move from a telephone to an actual smartphone, right? Because for us, it's sort of the clearest way we could sort of visualize it and see why people would want to move because you could program so many cool things. And so for us the question is imagine if you could really add programmable plugins to your accounts. Like what are the new use cases you could enable, what could we see? And essentially every plugin that could be added to an account could be a new capability. They could be customized for any use case and it could be built really by anyone in the community. And so for us, the way we like to think about it is to simplify Ethereum's UX. The smart account framework is like an iOS plugins and modules are like apps and they essentially provide a great and slick UX.
00:04:48.196 - 00:05:43.896, Speaker B: So this is sort of in a way a form of a promised land that we are working towards. And this is why I'd like to announce our V two, our truly modular smart accounts, which is live right now and it will be live in Isdk in the next couple of weeks. And it's really built on these three core pillars. It's modular from the get go, it's as stateless as possible from the actual contract itself and it's programmable and so developers could actually customize the user journey in any way they want. And so this is, we feel really important for the next wave of adoption. I like to show like a quick demo and this is with one type of plugin which is session keys. And that's the idea of essentially not having the user to always sign every transaction.
00:05:43.896 - 00:06:49.088, Speaker B: They could give some authority to the DAP. So here's what a gaming application would look like before account abstraction or before the Biconomy SDK. So here the user is essentially choosing the play in the game, selecting the racetrack, selecting the car, but for every interaction they have to keep signing. And we actually support adapt that works like this on Polygon they are using Metatransactions essentially, but literally all these transactions are you always have to sign them. And so this is definitely not a UX. We feel this prime for Web Two adoption. And over here, if we look at what the UX would look like with session keys, the user has to approve just once to enable a session and sign only once.
00:06:49.088 - 00:07:53.460, Speaker B: And then when they start the game and go through the game for any on chain interaction, it's as simple as just moving through the app, right? This is what we're used to. This is what web two users are used to as well. So it's just a very simple demonstration of what a plugin, which we just talked a bit about before, how that could empower smart accounts even more. And for users, I don't want to spend too much time on this slide, but this is essentially sort of what our modular SDK looks like. It's essentially bringing what we like to call truly modular smart accounts to Ethereum and to the broader L Two ecosystem. And for us, the reason why we wanted to start with modularity and enable modularity is because for the SDK itself, we work with a range of partners that maybe just want to use the smart accounts layer and that's totally fine. There are folks that just want to use the infra layer and that's totally fine as well.
00:07:53.460 - 00:09:13.010, Speaker B: And so modularity is really built into the core to really enable DApps and Wallets to easily have account abstraction capabilities. And for us, literally, the goal is to increase the adoption of smart accounts because otherwise, if there are no smart accounts, how will we get to user ops? And this infra being built high level sort of use cases on what plugins and modules could look like. These are some of the plugins that in a way, we are launching with the launch of our smart accounts. So we're having pass keys and session keys live in the next couple of weeks. Account recovery is still being built, but we also know that the community will build different types of plugins. They will essentially enable different ways that users could actually program the smart accounts even more as well. And so we will see a module marketplace, a registry, and of course, we've seen the community also moving to a standard of the IP 609 hundred to enable composability between different modules and different smart accounts as well.
00:09:13.010 - 00:10:02.224, Speaker B: So, moving forward, these are sort of the buckets that we're really going to be focused on. When it comes to the smart accounts layer, standardization is really important, especially when it comes to these EIPS that we're seeing. I was just speaking to someone here about hooks. They're a very powerful concept and it will enable way more features as well. Security is really important. As we all know, when it comes to any form of smart account, for users, security is always of the utmost importance. Intents this is a sexy topic, it's been in the past couple of months, but we are seeing more use cases for how smart accounts could be.
00:10:02.224 - 00:10:27.060, Speaker B: Intent centric, which is really cool. And right now our SDK actually supports a couple of mobile apps and we're seeing more mobile apps actually coming to market and so really just enhancing that experience as well. So we like to welcome you all to the Erosmart accounts and we really feel that we're here to supercharge Ethereum Zox. Thanks a lot for listening.
