00:00:00.330 - 00:00:15.066, Speaker A: Application on Harmony and if you have any questions, please post them in the chat. You can also get on Discord after this workshop to engage with the Harmony team and Ganesha. So without further ado, I'll let you take it away. Ganesha.
00:00:15.098 - 00:00:56.138, Speaker B: Thanks, Kathleen. Hello everyone. Welcome to Hacker Money Hackathon. My name is Ganesh, I'm an engineer at Harmony. I work on a core protocol developing SDKs ecosystem and more recently I'm managing interoperability or building bridges between Harmony and other blockchains. In this workshop I'm basically going to provide you all the materials that you need or where to find them to get started on building on Harmony. To begin, one place you can first start is Docs Harmony.
00:00:56.138 - 00:01:45.150, Speaker B: One where you can find basically everything that you need to get started to start with general information about Harmony. And then there is a section on developers. We have been working recently a lot on improving the developers documentation to help you guys get started building on Harmony really fast. And the third section is about networks, where it's mainly about validators delegators and token holders and so on to begin at any point in time. If you have any questions, feel free to post in the zoom chart or in YouTube. I'll be able to take some of the questions towards the end. To begin.
00:01:45.150 - 00:02:47.758, Speaker B: Harmony is a layer one blockchain which has proof of stake and also it's a sharded blockchain with currently running four shards overall 1000 nodes securing the network. And Harmony has about two second transaction finality. And out of the 1000 nodes, currently 800 of them are run by the community and Harmony still runs around 200 nodes. If you look at Harmony's Roadmap. Mainly we are keen on improving the adoption of our blockchain by helping developers build on top of Harmony. And also we are focusing more on making our interoperability solutions to connect with other blockchains in a manner that is both efficient and in terms of cost and time. And finally, we are also very focused on fully decentralizing our blockchain.
00:02:47.758 - 00:03:34.100, Speaker B: So that whole blockchain and everything is run by the community. You can read more about Harmony and its technology under the section here. Key features being consensus and sharding, randomness proof of stake, token economics, et cetera. I won't spend a lot of time on this theory. Another aspect of harmony is its horizon bridge. Some of you guys probably already have used the bridge. Currently it has over 5000 unique users and over 30,000 bridge transfers already done in few months.
00:03:34.100 - 00:04:31.278, Speaker B: Feel free to check out. I'll be talking about how you can build application using the bridge SDK in few minutes. Horizon Bridge is basically a bridge connecting between Harmony and Ethereum. You can find some materials on how to bridge it's. Basically user guides over here that lets you connect MetaMask and bridge between Ethereum and Harmony. You can bridge any kind of ERC, 20 tokens, ERC 721 NFTs and also you can bridge Harmony native tokens like one and also HRC 20 which is an ERC 20 of Harmony to Ethereum. You can also look at some of the existing DApps that were built as part of some of the hackathons.
00:04:31.278 - 00:05:45.280, Speaker B: For example also the partners or the products or the projects that have built on top of Harmony. For example, in terms of DeFi, there are multiple decentralized exchanges like wiper, mochi and so on. And there's also recently we had released NFT Marketplace DA Vinci that's also attracting a lot of users. And also there are other forms of applications that you can take a look. And in terms of harmonious ecosystem, you can see in this map there's a lot of products and partners that are integrated with Harmony and more coming in this year. And there are various channels to interact with the Harmony community. And there's also a well established grant program where if you want to take your project beyond hackathon, you can apply for grants and you can see it all the way through to mainnet and attracting users and so on.
00:05:45.280 - 00:06:43.060, Speaker B: So, without wasting a lot of time, let's go to the most important section which is developers. As I believe a lot of you guys are looking to build on top of Harmony. And in terms of if you are coming from the Ethereum world, harmony should feel very familiar for you guys building on top of Harmony because Harmony is fully EVM compatible as well as Ethereum Tooling compatible. What I mean to say is that you can use all the Ethereum tools like Truffle remakes, wallets, MetaMask, web3, et cetera. Right out of the box. Of course, we had some minor issues that along the way we fixed and right now most of these libraries are fully compatible with Harmony. And you won't hit the major roadblock here.
00:06:43.060 - 00:07:32.122, Speaker B: The first place to start is just exploring the Harmony blockchain via JSON RPCs, for example. Here we have some examples. For example, if you want to look at, let's say protocol related method, want to see Harmony's latest header, there are few example kernel commands that you can use to query the blockchain. That is like first way to get feel of the Harmony blockchain. If you want to take further you kind of create a wallet. Harmony follows a Beck 32 address format which is called one address. It also follows hex address that is in Ethereum.
00:07:32.122 - 00:08:41.190, Speaker B: Both are works well with Harmony. So either of them you can use and in terms of development environment, there's main net testnet and also a local net that you can spin up. And there are test faucets using which you can obtain some one tokens to begin your development. And there are currently explorers where you can look up the transactions for a major difference between Harmony and Ethereum is basically in terms of development, harmony transactions include Shard IDs, which is not the case in Ethereum, but we have kind of able to abstract it away so that all the Ethereum SDKs can be used. Libraries and SDKs can be used out of the box. I'll go over some of the SDKs and examples in a bit. So we also have some sample smart contract deploy tutorials.
00:08:41.190 - 00:10:06.820, Speaker B: For example, if you go here in the GitHub repo, there's some examples here on how to deploy contract, how to programmatically interact with the wallets like MetaMask math wallet or one wallet at any point in time apart from when you are developing on Harmony during this hackathon or beyond. Of course we have a dedicated channel for this hackathon where you may feel free to ask any question. We'll try to respond as soon as possible. Apart from that, you can also ask your questions in Talk Harmony one which is a forum for Harmony where we have a dedicated developer subforum where you can ask your questions apart from this forum. There's also a Reddit Harmony Developers channel where innovative ideas are currently being discussed. So I encourage you guys to check it out. And for immediate responses, there are also a couple of discord channels, links are provided here and there's also a Telegram channel where you may be able to find kind of a faster responses sometimes.
00:10:06.820 - 00:11:36.670, Speaker B: We still encourage you post your questions in Talk Harmony One so that it can benefit other developers as well. There's a known limitation which is currently being worked on all the cross shards generally, I mean all the smart contracts are right now deployed onto Shard zero and the contracts won't be able to interact with the contract deployed on other shards. So that's one item that is on our roadmap where we want to make the contracts deployed on different shards interact with each other. You can find more information about for example Ethereum compatibility. We are maintaining a GitHub repo here that constantly being we try out all the new tools, wallets, et cetera for check for compatibility and you can take a look at this GitHub repo to know whether certain tool or library is compatible or which one to use and so on. In terms of network and faucet already this in the Getting Started guide here as well as you can find it here. Let's go.
00:11:36.670 - 00:12:19.902, Speaker B: Deploying on harmony. There are different as an Ethereum developer you guys already know you can deploy using Remix which is most convenient. And then next is Truffle that you can use hard Hat is most convenient then directly with three JS. We also have Harmony JavaScript SDK which is kind of most popularly used. But right now web3 JS is something that is even more convenient to use. So let's see how to deploy certain contract using Remix. It should be fairly quick.
00:12:19.902 - 00:13:13.070, Speaker B: I just open the Remix ID and make sure MetaMask is compatible. So let me increase the font. Just make it easier here. So you can add how many networks like testnet and mainnet into your MetaMask. It's a custom network, very standard, where you go here and add the RPC URL and the chain ID. This information is also available in Docs how many? So after you configure that, you load the Remix and let's go back here and let's say copy this simple counter contract just to see it working. Create a new file.
00:13:13.070 - 00:14:11.050, Speaker B: Let's create a new file solidity and paste this code and go here and compile. Very standard, nothing fancy, there's no error, just a warning. That is fine. Select injected web3. It is automatically connected here to Harmony testnet and then let's select Counter and deploy. So MetaMask transaction up here, confirm should be able to see yeah, it's deployed so you can see the address here. Then you'd be able to interact with the contract.
00:14:11.050 - 00:14:49.600, Speaker B: So it's fairly straightforward, right? Exactly the same way you do it in Ethereum. There is no difference. You just have to come and add your Harmony network into your MetaMask and then that's it use as is. So we saw a contract deploying and the next step is there's also a Harmony version of the Remix that is customized to work with Harmony one wallet and Math wallets if you'd like to use that. It's also possible. It looks, look and feel wise. It's exactly same.
00:14:49.600 - 00:15:56.658, Speaker B: There's a customized Harmony deployment interface where you can select wallet that you want to use and do everything that is similar to Remix. And then if you don't want to use Remix there's also Truffle in which case it's also straightforward. Just make sure to use more recent Truffle version. The previous Truffle had some issues with respect to hasty wallet provider. Otherwise it's fairly straightforward. What you need to do is in the Truffle config add Harmony networks with the RPC URL and also how many users different derivation path for reading the address out of the Mnemonics. So it's not exactly same as Ethereum, it's slightly different.
00:15:56.658 - 00:16:43.780, Speaker B: So make a note of that if you are trying to load an account from the Mnemonics. Most times developers face this issue where they assumed the particular address and they have some funds there. But when they are trying to deploy using that account, it's creating another account which doesn't have funds and so they encounter deployment issues. So just to note down that fact, if you're using private key, nothing needs to be changed. It will directly work as is not on the network ID if you are using minet. Basically there is a different network ID for that. Rest of the stuff deploying using Truffle is exactly same.
00:16:43.780 - 00:17:34.606, Speaker B: And hard hat I also provided here. I really like this hard hat tutorial. So I just referred to that tutorial here in the step number seven. That is when you try to deploy your contract to a live network, that is when you basically specify hard hat config where you specify how many network here I'm saying testnet with the regular RPC URL and loading my private key. That's all I need to do. Simply run hard hat deploy script and point it to the network. So one thing like you guys noticed, deploying on Harmony should feel exactly same as Ethereum.
00:17:34.606 - 00:18:33.060, Speaker B: There is no less learning curve or resistance in terms of deploying. And then we also provided a guide standard web Three using Web Three JS how we can deploy and Harmony. This one also uses Solidity compiler programmatically to even compile your Solidity file and deploy. So in this tutorial you don't even need to compile it externally, feel free to check it out. And there's also how many JS JavaScript SDK which you can use to deploy Harmony. This example demo repository contains all the relevant code for this tutorial. We also have a Tuple box for Harmony which you can pull and right away get started.
00:18:33.060 - 00:19:21.362, Speaker B: Okay yeah and then there is deploying HRC 20. HRC 20 is basically nothing but the ERC 20 contact on Harmony token on Harmony. There's a tutorial here that basically says how to deploy HRC 20 on Harmony. This uses a repository HRC. But even there is an even easier way to deploy your own HRC 20 token which you can find under Learn tutorial. Currently tutorials are limited but we keep on adding more and more tutorial. Plan to add more tutorials here.
00:19:21.362 - 00:20:50.678, Speaker B: So, for example, in remix, if you want to do, let's say this famous GLD Token HRZ 20, you can basically let me close this here, go back here and create a new file GMB that one here compiled and then go here. Same connected to Harmony testnet select GLD Token requires initial supply set then it's the fastest way to deploy your own ERC 20. My opinion? And similarly you can do the NFT deployment. We have added small tutorials here and I learn expect us over the next week or so. Add more and more tutorials to help even help more for the developer to get started. That's about deploying on Harmony. And then we have as I mentioned several SDKs.
00:20:50.678 - 00:22:09.160, Speaker B: Popularly Web three JS is still you can use because most of you already probably have some applications built on top of Ethereum so you can easily bring it over and deploy it on Harmony. So Web Three JS being still I see being a most popular option. And then JavaScript SDK and there's also Golang CLI that currently we are adding more and more features to even do the smart contract interaction using Golang library there's a Java SDK as well. Python recently had a PR that added several features to this Piharmony library using which you can perform various things not only interacting with the blockchain but transaction signing and also staking feature. Of course if you want to use Web Three Pi that is also even better. That should work just right out of the box. We are going to add more tutorials in this SDK section or more examples in the coming week.
00:22:09.160 - 00:23:07.160, Speaker B: So that's about SDKs and there's API methods. What are all the blockchain APIs JSON RPCs that are available here? I think most up to date place is still API. HMNY IO is a place where you can find and try out all the it's similar to Ethereum JSON RPC wiki. So that's about APIs in terms of wallet most popular MetaMask. This section of the wallet is going to provide examples on how to interact with wallets programmatically. This is one thing that you need for DApp development. So there are some great examples here even interacting with one wallet and so on.
00:23:07.160 - 00:23:40.130, Speaker B: Nice place to look and tools. Yeah, it's still improving. But we have added some tools. For example, horizon SDK. As part of this hackathon, we want developers to build more and more DeFi NFT gaming cross chain applications. So you may find this horizon bridge. SDK this is the SDK to operate with our Horizon Bridge in a programmatic manner.
00:23:40.130 - 00:24:29.246, Speaker B: So basically there are two versions of the Bridge that are currently deployed. One is on mainnet at Bridge humming one. There is one testnet version that you probably want to use when you're developing. And there is already a bunch of examples provided in the Bridge SDK repository, which I think I have it here. As you can see it's in Harmony Bridge SDK. And there are several examples on going from Harmony to Ethereum sample application using node JS. There's also application that integrates with browser and there are more examples.
00:24:29.246 - 00:25:38.018, Speaker B: So let's just walk through this r1 quick. Let me open my command and let's say I create a test and I create a sample repository and pull the Bridge SDK. I'm going to demonstrate how to use SDK to the testnet. Bridge is connected between Ethereum covenant testnet and Harmony testnet. So in this small demonstration I'm going to show how to send over some BUSD tokens that lies in coven testnet to Harmony using SDK. So I created a sample node JS repo and then I pulled the Bridge SDK. And then after that I basically create this file that will do the Bridge operation.
00:25:38.018 - 00:26:19.618, Speaker B: So while it is installing packages, let me go over this example here. You can see first thing I do is from Bridge SDK, pull some classes and configs. The SDK has several log level where you can get the full detailed information or only success, error ratio, et cetera. And you can also turn off the whole log and you basically have to connect to the Ethereum wallet. Remember, this is bridging from Ethereum to Harmony. So you need to have tokens in the Ethereum wallet. So you provide connect to that wallet.
00:26:19.618 - 00:27:48.290, Speaker B: Then you initiate an operation of sending tokens bust amount receiver one address and sender X address. That's it basically a simple here I think this is done. So let's create just simply run that particular program that says one wallet balance before creating an operation ethereum to harmony sending BUSD token, amount, Ethereum, all this and then creates an operation. And the bridging has several steps approving bridge manager and locking the tokens on the Ethereum side and then waiting for enough number of confirmation so that on the Ethereum side we are able to reach finality. And then finally minting on harmonica. So you can take a look. This is where it should be straightforward and after that when completed, you can go to the Testnet Explorer and you can see here the operation that I created is under progress that is currently waiting for penalty.
00:27:48.290 - 00:28:34.058, Speaker B: So that's how you basically use the Horizon Bridge SDK to kind of programmatically interact with the bridge. I have few minutes, so let me rest through a little bit. So you can also find other tools here. Graph also integrated harmony. There is a docker file that you can run to run your own local graph node. A good example is that Horizon Bridge currently has a subgraph that's being utilizing the graph. And then there are other tools like Ganache, Harmony, React and also Oracles like Band and Chainlink also exists.
00:28:34.058 - 00:29:12.410, Speaker B: You can also find several examples along with the source code under Showcases and Hackathon. Currently our wish list for developers to build. And more importantly, there are also bounties that you can take. Like there are many of them already. There are several developers have contributed to these bounties in the past. Yeah, I think that's about it. Thanks for participating and hope you guys enjoyed building on Harmony.
00:29:13.310 - 00:29:29.986, Speaker A: Thanks ganesha, I don't know if you've had the chance to address every question in the chat as we're going, we're running out of time, so I can send it to you directly if you want to address them, any of them that is remaining in the main channel.
00:29:30.088 - 00:29:34.946, Speaker B: I'll post this answer to these questions in Hackathon Harmony channel.
00:29:35.128 - 00:29:49.890, Speaker A: Yeah, exactly. So everybody here, if you have more questions for Ganesha, please just hop over on the sponsored channel that is in the public discord that you guys have to talk directly with Harmony.
00:29:50.050 - 00:30:03.614, Speaker B: Yeah, there's already all the information that you need here. Under the resources you can find discord channels, telegram beyond the Hackathon channel. You can also use these channels to ask your questions and get answers. Thank you.
00:30:03.772 - 00:30:09.050, Speaker A: Thank you Ganesha. Thank you everyone for joining us today. And we'll see you on Discord.
