00:00:08.490 - 00:00:11.680, Speaker A: Jacob getting.
00:00:25.370 - 00:00:26.120, Speaker B: It.
00:00:29.050 - 00:00:38.680, Speaker A: All right, we are good to go. Looks like we got the stream live and everybody's here, so I will hand it off to Jacob to get started.
00:00:39.210 - 00:00:59.630, Speaker C: All right, awesome. Well, thanks to everybody who showed up for this. Looks like we're already almost 40 people strong. Welcome to the first event officially of ETH Online, which we're really excited about. So it for our first Know. This is going to be a sponsor workshop hosted by Matic. I'm sure that the Matic team, Angela and Sandeep will fill you in on everything.
00:00:59.630 - 00:01:18.760, Speaker C: But if you're going to build with scale and try to tackle a large number of users and keep things fast, then you probably want to use Know. I guess I'll hand it off really quickly. I don't think there's too much more else to say. I hope everybody enjoys the workshop and yeah, I'll turn it over to the Matic team.
00:01:20.090 - 00:01:37.930, Speaker B: Awesome. So let me share my screen. I hope you guys can see my screen, right?
00:01:38.780 - 00:01:40.090, Speaker A: Yeah, looks great.
00:01:46.780 - 00:01:48.250, Speaker B: It yeah.
00:01:49.900 - 00:02:06.416, Speaker D: So we wanted to primarily speak more about how using the scalable tools like Matic Network, like Scalable side chains, layer two on top of Ethereum, how can.
00:02:06.438 - 00:02:11.072, Speaker B: You build the applications to onboard the next million users on blockchains?
00:02:11.216 - 00:02:38.236, Speaker D: And we are already seeing that trend with some of the applications and I'll kind of walk you through that how you as developers can kind of build these applications which will have scalability as well as the user experience, which can actually match the user experience, which users are generally kind of more used to in terms of using their web.
00:02:38.258 - 00:02:39.016, Speaker B: Two applications.
00:02:39.048 - 00:02:41.468, Speaker D: And then Angela is going to give you a demo.
00:02:41.554 - 00:02:45.144, Speaker B: That how you can build blockchain applications.
00:02:45.192 - 00:03:15.876, Speaker D: Which can build it in a decentralized and censorship resistant way, but still be able to kind of make blockchain invisible using the toolings. And then as we all say, that the decentralization and the censorship resistance is all a spectrum. So how can you build superlative user experiences but then give people, give users advanced users the advantages or kind of features where if they want to interact directly with the applications or the blockchain.
00:03:15.908 - 00:03:16.884, Speaker B: They can directly interact.
00:03:16.932 - 00:03:20.248, Speaker D: So those are the things that we'll cover. And then Angela is going to have.
00:03:20.254 - 00:03:23.610, Speaker B: A full blown programming demos and everything.
00:03:25.600 - 00:03:36.816, Speaker D: So basically the assumption here is that you already know a bit about Ethereum and then you have programmed previously on Solidity and on Ethereum and have the.
00:03:36.838 - 00:03:40.988, Speaker B: Basic kind of knowledge around these topics.
00:03:41.164 - 00:03:53.584, Speaker D: So the talk, as I already said, that it's about building these applications which have scalability and yet are decentralized and censorship resistant. And then how can you build superlative.
00:03:53.632 - 00:03:55.430, Speaker B: User experiences on top of that?
00:03:56.440 - 00:05:02.328, Speaker D: First of all, why Matic and what exactly is Matic? Let me also give a brief intro on that. So Matic is a layer two, generalized layer two which wants to support multiple kind of layer two approaches on top of Ethereum. And we believe that every application, every business has their kind of requirements. And there's no kind of silver bullet wherein one solution fits all for all the applications. So the main net that is live it is a proof of stake plus plasma hybrid side chain wherein you as a developer can choose that if you wanted to have Ethereum Provability and Ethereum kind of asset ownership defined by Ethereum only then you can choose a plasma backed kind of architecture for your assets. Or if you want to rely on the proof of stake validators of the Matic side chain which is again fairly largely decentralized, like 100 plus validators which is fairly decentralized for proof of stake.
00:05:02.344 - 00:05:07.710, Speaker B: Number, you can rely on the proof of stake capabilities of Matic completely depends on you.
00:05:08.800 - 00:05:18.304, Speaker D: Basically, you can already see that in one layer two kind of platform, you can pick and choose that as per your application as a developer, what level.
00:05:18.342 - 00:05:19.792, Speaker B: Of security you want, right?
00:05:19.846 - 00:05:51.688, Speaker D: So that's the kind of brief idea about Matic network. It's a layer two which will offer multiple such security and decentralized execution platforms as per your kind of requirements and the business logic around it. Why Matic? Coming back to the question that it offers you that kind of developer friendliness as well as freedom to choose the level of security and the other trade off, like user experience, how much ease.
00:05:51.704 - 00:05:53.516, Speaker B: Of use you want, your application and.
00:05:53.538 - 00:05:55.496, Speaker D: All that stuff that is completely defined.
00:05:55.528 - 00:06:03.100, Speaker B: By the developers rather than anybody else, or rather than defined by the infrastructure.
00:06:03.620 - 00:06:16.656, Speaker D: So we all know this blockchain's biggest barriers of adoption. We have slow transactions, high transaction fees. We already know user experience also suffers because of high transaction fees as well.
00:06:16.678 - 00:06:20.180, Speaker B: As slow block times and everything.
00:06:20.250 - 00:07:03.424, Speaker D: So Matic kind of solves these things. So what Matic actually builds is basically it is a layer two and then on the layer two side you have a public side chain which is a shared chain. So it's not like a DAP specific chain. So it's a shared chain. Multiple applications can build on top of it and then can utilize the composability benefits and which kind of is one of the biggest importance or biggest kind of selling points for Matic. Many applications that are building over there, they get to utilize the network effects. And with the advent of DeFi, we all know that how these Composability and money Legos thing can compound over time.
00:07:03.462 - 00:07:07.360, Speaker B: To build really cohesive network effects.
00:07:07.440 - 00:07:20.616, Speaker D: So Matic public side chains are a side chain, is a shared chain where multiple apps work together and then we expect to have more execution environments like.
00:07:20.638 - 00:07:24.010, Speaker B: Optimistic roll up ZK roll ups in future.
00:07:24.540 - 00:08:07.056, Speaker D: But the present offering is the public side chain which offers you hybrid plasma and POS capabilities. And these are like full blown EVM chains wherein you can deploy your entire solidity contract. All the Ethereum like we have built it in a way that all the Ethereum Developer tooling, be it wallets, be it your middleware utilities, everything work out of the box. Like Graph protocol, if you need things like that. Your MetaMask works out of the box. Your Truffle and your Remix and all that stuff also works completely like that. And developers are completely shielded from managing the infrastructure.
00:08:07.088 - 00:08:08.916, Speaker B: Just like on Ethereum, you connect with.
00:08:08.938 - 00:08:10.384, Speaker D: Your MetaMask, you pay for the gas.
00:08:10.432 - 00:08:12.728, Speaker B: Fees and you and your users are done.
00:08:12.814 - 00:08:42.128, Speaker D: So that's how and we also keep saying internally that if you are an Ethereum developer, you're already a Matic developer. You don't need to learn anything new. To start utilizing Matic, just switch your MetaMask RPC and then you have this network which you are connecting to and in the background it is having all these validations and the validators community validating it and then putting it on the checkpoint on the Ethereum main chain. All that security aspects, those are completely.
00:08:42.214 - 00:08:44.160, Speaker B: Abstracted from the developers.
00:08:45.780 - 00:09:18.856, Speaker D: This is the side chain I was talking about, that you have this Matic side chain which is being produced. The blocks are produced by this layer only. So randomly out of 100 plus validators, few validators get selected to produce the blocks. For every like we have concept of sprints and spans. So few validators get selected for a particular sprint and then they have multiple spans in between where individually they produce the blocks and all other validators validate.
00:09:18.888 - 00:09:23.116, Speaker B: And put a checkpoint on Ethereum which is kind of a cryptographic proof of the major.
00:09:23.218 - 00:09:30.576, Speaker D: So you can clearly see that validation and block production using the randomization techniques have been separated from each other and.
00:09:30.598 - 00:09:32.736, Speaker B: Then the blocks are being produced here.
00:09:32.838 - 00:10:04.228, Speaker D: And then the validation happens on this layer. And the whole concept of as I was saying that you don't need to learn many new things because it utilizes a lot of open source technology. So this layer is built with a get like EVM kind of system. That's why it's highly compatible. This particular your layer is built on tendermint and then this tendermint based consensus bases this consensus, these validators put checkpoints.
00:10:04.244 - 00:10:05.704, Speaker B: Onto the main chain, right?
00:10:05.742 - 00:10:41.236, Speaker D: So what does Matic offer? So, Matic offers you a very highly scalable chain, like 7.2K transactions per second. And then the block confirmations are also around 2 seconds right now. And the fees also is very low right now. We are already seeing fees to the tune of 100,000 times lower than Ethereum. So basically in one dollars you can easily do somewhere around 100,000 transactions to 500,000 transactions. That is because the network is starting up and there's a lot of validator rewards.
00:10:41.236 - 00:10:44.008, Speaker D: So that's why this is like the.
00:10:44.014 - 00:10:45.092, Speaker B: Fees are this extreme.
00:10:45.156 - 00:10:57.756, Speaker D: But even in the kind of matured way where many many applications are there, we easily expect a differential of 1000 to 10,000 times lesser fees than what.
00:10:57.778 - 00:10:58.872, Speaker B: Would be there on Ethereum.
00:10:58.936 - 00:11:25.936, Speaker D: Plus focus on user experience. As I already said that we support all these MetaMask and all the Ethereum tools plus meta transactions kind of services. Plus your block times are like 2 seconds. So if you can use metatransactions and the piece is very low so you can actually think of it as you buying out a $20 server on AWS for a month for your users. So your transactions can be all on Metatransaction base and for the users it's.
00:11:25.968 - 00:11:27.908, Speaker B: Like a click click kind of experience.
00:11:27.994 - 00:11:34.680, Speaker D: And two second block times also help in that. So user clicks something happens within 2 seconds and then he gets his result.
00:11:34.750 - 00:11:37.960, Speaker B: So the user experiences can be superlative on that.
00:11:38.110 - 00:12:00.912, Speaker D: And happy to tell you that Matic is like right now one of the fastest growing DAP platforms worldwide. And in terms of games, specifically Games and NFTs, I'm pretty sure if you talk to at least every three games out of them one or two would be already either already be on Matic or would be in higher stages of.
00:12:01.046 - 00:12:03.468, Speaker B: Exploring and building on top of Matic network.
00:12:03.564 - 00:12:17.568, Speaker D: And similarly we are also seeing a lot of things on the DeFi side prediction markets. For example Auger is in fairly advanced stages of kind of exploring and they have put out multiple things about discussed.
00:12:17.584 - 00:12:19.232, Speaker B: This in public multiple times.
00:12:19.386 - 00:12:30.536, Speaker D: Then decentraland like virtual worlds is a very big example gaming side, as I already told you that bigger games like Neon Districts and Mega Crypto Policy and multiple ones.
00:12:30.638 - 00:12:34.840, Speaker B: They are currently right now moving to Matic network.
00:12:37.180 - 00:12:40.048, Speaker D: And then Developer Community is also growing.
00:12:40.084 - 00:12:42.396, Speaker B: Very fast and since it kind of.
00:12:42.418 - 00:13:06.576, Speaker D: Derives its benefit from Ethereum and EVM so it's like the documentation around it and everything, you get it at a fairly detailed level when you're building with Matic technical advantages. I think I've covered most of it here but on a snapshot you can see that it's highly decentralized. If you use Plasma your asset ownership is still defined by Ethereum.
00:13:06.608 - 00:13:08.724, Speaker B: So user could exit to Ethereum and.
00:13:08.762 - 00:13:30.632, Speaker D: Then this is kind of an older slide but we did a testing around with 110 validators and we could see the chain could achieve easily 77.2K transactions per second and the gas fees extremely extremely low. On the main net we are seeing even lower than that. You could easily go to Explorer Matic.
00:13:30.696 - 00:13:33.964, Speaker B: Network and see for yourself, you could.
00:13:34.002 - 00:13:38.336, Speaker D: See transactions happening every few seconds and you can easily see the kind of.
00:13:38.358 - 00:13:40.610, Speaker B: Gas cost that is there.
00:13:41.060 - 00:13:58.544, Speaker D: And as I already said that if you are a Ethereum developer you are already a Matic developer. You don't need to learn too much of things. Simply hop like switch your MetaMask to this Rpcmbai matic today, this RPC link and get some faucet tokens and then get going. Like if you are a CM developer.
00:13:58.592 - 00:14:04.090, Speaker B: You don't need to learn anything new and then build slowly on top of it.
00:14:04.460 - 00:14:16.824, Speaker D: I have already covered 100% compatibility with EVM chain only the deposits and withdrawals becomes like one additional UI layer. If you think that your users are going to use a lot of depositing.
00:14:16.872 - 00:14:25.170, Speaker B: From main chain and withdrawing back to main chain, otherwise everything works just it was working with.
00:14:27.060 - 00:14:35.388, Speaker D: So from here I would hand it over to Angela and then let's go directly to the demos and where Angela.
00:14:35.404 - 00:14:40.870, Speaker B: Can walk you some parts of the code. So, yeah, that's about it. From my side.
00:14:47.400 - 00:14:52.010, Speaker E: Can you give me host access so I can share my screen?
00:14:52.380 - 00:14:56.250, Speaker B: Sure. I think Angela, now you can share your screen.
00:14:57.100 - 00:15:05.240, Speaker E: Okay, I can just is my screen visible?
00:15:06.700 - 00:15:07.160, Speaker A: Yes.
00:15:07.230 - 00:15:08.330, Speaker E: Okay, awesome.
00:15:10.080 - 00:15:58.456, Speaker F: I'll be talking about the developer side of things. So moving over to why exactly do devs love Matic? So one thing is that there are no new skills that are required for you to port your either pre existing DAP on Matic or build out a new DAP on Matic. The skills that you're already familiar with, you can use them to start developing. And so the two ways that you can start interacting with Matic network is one is that you start building a new DAP, which is as simple as just heading over to Remix and deploying your first smart contract. I'll be demoing that as well. And the other is, if you already have a DAP, you can use Matic as a faster transactions layer. So in that case, you can have your ERC 27, 21, or double one, double five mapped over to Matic network.
00:15:58.456 - 00:16:55.368, Speaker F: And as soon as it is mapped, you'll be able to deposit your assets over to Matic and then you can do the transfers and then you can withdraw from Matic. So connecting to Matic from your backend or your front end requires no other effort. So if you already have a library that uses an ethereum provider, you can switch over to Matix RPC. So this is one of the RPCs that we have and the other RPC like an infura like provider, which is Blockvigil, also provides an RPC similar to the Infura's experience. You can register your DAP on the dashboard and you can get an RPC. So Swaroop from Blockvigil will share the link in the chat so you can head over and request your link there. So next is I'll be demoing a few bits of how you can start interacting with Matic.
00:16:55.368 - 00:17:14.692, Speaker F: So these are the two links that you can open up if you'd like to follow along or if you'd just like to see the helper doc that I have put together. So this helper doc will help you to get back to whatever is being discussed right now so that you don't have to open the video. So in this helper doc, I'll just.
00:17:14.826 - 00:17:21.952, Speaker E: Switch my screen to the doc. So that it's?
00:17:22.016 - 00:17:22.244, Speaker D: Yeah.
00:17:22.282 - 00:17:38.220, Speaker F: Okay, so this is the doc. So basically I'll be going ahead with connecting the RPC to your Truffle project or your MetaMask and then deploying your first contract via Remix. Next is I'll be talking about the network Agnostic transactions feature.
00:17:38.880 - 00:17:40.332, Speaker E: I'll just open this here.
00:17:40.386 - 00:18:32.328, Speaker F: Okay, so the agenda would be this. Basically, the first two parts of the demo would be how you can switch over to Matic as soon as possible and how quickly you can switch over your code to Matic. The next part is how you can make it seamless for your users to switch over to layer two, because most of the cases, users might not be familiar with adding RPC links to MetaMask or their own Web Three provider. And the last part is I'll mention and I'll share a few code snippets, wherein cross chain transfer of assets can happen through the SDK that we have. So starting off with interacting with Matic. So let's say we have a MetaMask account, and you just have to add your own custom RPC.
00:18:32.424 - 00:18:58.900, Speaker E: And I'll just add over here, Matic. Today, the chain ID is 8000 no. Anyway, it's optional. And I'll just add matic. Okay, so this should be it.
00:18:59.050 - 00:19:01.796, Speaker F: And this is how my MetaMask is.
00:19:01.818 - 00:19:03.264, Speaker E: Now connected to Mumbai.
00:19:03.392 - 00:19:16.412, Speaker F: And so there was also a question in Chat, if Matic uses Solidity. Yes, it does. So this is what I'll demonstrate right now. So my MetaMask is connected to Mumbai, and I'll just deploy this very simple.
00:19:16.466 - 00:19:23.176, Speaker E: Smart contract on Is, which so Mumbai.
00:19:23.208 - 00:19:34.480, Speaker F: Network is child chain to Goldie network. So in case you'd like to transfer your assets. So the parent chain that you would want to use is goldly. And I'll just simply deploy.
00:19:36.980 - 00:19:43.520, Speaker E: Confirm. Okay, so I've got my smart contract.
00:19:43.600 - 00:19:46.368, Speaker F: If I head over to our Explorer.
00:19:46.544 - 00:19:51.576, Speaker E: Which is Mumbai Explorer, you should be.
00:19:51.598 - 00:19:53.784, Speaker F: Able to see your smart contract over.
00:19:53.822 - 00:19:57.930, Speaker E: Here so you can interact with the Explorer as well.
00:19:58.460 - 00:19:59.556, Speaker F: This is the transaction.
00:19:59.588 - 00:19:59.876, Speaker E: Ash.
00:19:59.908 - 00:20:31.652, Speaker F: So next, what I'd like to share is so this was how you can deploy your first smart contract on Matic. There aren't anything new that I've done. So the only skills that were required was how to interact with Remix and how to write Solidity. So the next part is, let's say you have your own Truffle project. And so this is like a built already built app. So it is like a simple token transfer app. And it has contracts, like one contract, and it has a front end, which I'll just run.
00:20:31.652 - 00:20:46.424, Speaker F: So let's say my entire code is deployed on Ganache or any other blockchain network. So first I'll just compile the contracts and make sure that they compile all.
00:20:46.462 - 00:21:07.184, Speaker E: Right, and they migrate. All right. So I'll just quickly copy this private key because we'll be needing it. So let me just import okay. And switching over to localhost. So my contracts have compiled to Kanache. Okay.
00:21:07.184 - 00:21:10.610, Speaker E: And I'll just.
00:21:14.020 - 00:21:32.952, Speaker F: Okay, so this is my deployed application. So this is connected to so the front end is on localhost, and the back end, which is ganache. It is deployed on port 85 45. And I'll just simply connect it.
00:21:33.006 - 00:21:35.048, Speaker E: And let's see my balance over here.
00:21:35.134 - 00:22:06.916, Speaker F: Okay, so I've got my balance, basically. So let's say this is my application. Now I'd like to migrate over to Matic. In case you have your built Truffle project, the only thing that you'd have to add is this particular object in your Truffle config, which just specifies Matic's RPC and the particular account that you'd want to use to deploy your smart contracts. And that is it. So this is the only thing that is required. And I can just simply now switch over.
00:22:07.018 - 00:22:35.630, Speaker E: So I can just remove Ganache now. And let me just close this as well. Okay, so I'll just migrate over to Matic. This will probably give me an error, I think, because I haven't just a second. So basically, I have to export my private keys, which is in Env. Okay, now it should.
00:22:37.360 - 00:22:43.428, Speaker F: So all the process remains same. I have compiled my contract. Now I'll migrate over to Matic network.
00:22:43.624 - 00:23:06.724, Speaker E: And once it's migrated, I'll switch over to okay, so it's probably already there. I'll just switch over to Matic from my MetaMask and see what do we have here? Okay, so probably it was this account that's already connected. Yeah.
00:23:06.762 - 00:23:29.272, Speaker F: So I've got my balance here. So this is how it's done. So basically what I just did was I had my already built application using Truffle, which had a front end and a backend. So the backend were the contracts which are deployed on any chain. I switched over to Matic. I added the RPC. So this was possible only because Matic is an EVM compatible chain.
00:23:29.272 - 00:23:37.330, Speaker F: So anything that is compatible with Ethereum is already compatible with Matic. So now that my MetaMask is on Matic network, I can see my.
00:23:41.940 - 00:23:46.832, Speaker E: Hello. Okay, I'm sorry, I just heard something.
00:23:46.886 - 00:24:13.864, Speaker F: Okay, so now that my MetaMask is connected to Matic network, I'm able to see my balance. But right now in this entire application, what we are expecting from the user is that they know how to add custom RPC. So basically, we're expecting each and every user of our application to add a custom RPC and add all these details in any of their Web Three provider that they're using. Now, to bypass that, what we have is a network agnostic feature.
00:24:13.992 - 00:24:16.764, Speaker E: So I'll just switch over here to this.
00:24:16.882 - 00:24:45.108, Speaker F: Okay, so network agnostic transactions is something that can so basically, the user doesn't need to know that the transactions are going over to a separate layer, and they don't even need to know if the transactions are going to a blockchain or not. So basically they just need a Web Three provider wherein they'd be signing messages. They don't need to have funds for gas or anything. So for this, I have a demo ready here. So first of all, I'll just show you what is happening.
00:24:45.194 - 00:24:46.548, Speaker E: Okay, just a second.
00:24:46.714 - 00:25:02.388, Speaker F: So this is like a simple demo. So herein, like, we had a simple transfer app of Tokens that we deployed. This is also similar to that. We have a Token address which is deployed on Mumbai and let's just switch over to a different network.
00:25:02.564 - 00:25:03.284, Speaker E: Gordley.
00:25:03.332 - 00:25:05.436, Speaker F: Okay, so now we have switched over.
00:25:05.458 - 00:25:06.440, Speaker E: To a different network.
00:25:06.520 - 00:25:15.464, Speaker F: And this is the token. And let's say I'll just make so this account has zero ETH. Let's just switch over to an account that doesn't have these tokens as well.
00:25:15.602 - 00:25:20.748, Speaker E: Okay, this account so this account has zero tokens, zero ETH.
00:25:20.844 - 00:25:54.860, Speaker F: And what this person would like to do is they want to mint some tokens and then transfer some tokens. And these two actions will happen on Mumbai network. So let's say I first meant about 200 tokens here. So this is not a transaction pop up on MetaMask. This is a message signing pop up. So the only requirement in an application that uses network agnostic feature is that the web3 provider should be EIP seven one two compatible. So the specifics of which I have linked in the doc only.
00:25:54.860 - 00:26:24.260, Speaker F: So that should help you. Basically it's just a very nice way and a prettier way of displaying the message that you'd like to sign that you'd like to get the signature from the user. So I'll just simply sign it. I haven't given anything as the gas. So this is the signature that was relayed over to this server. So this is a very simple server that this is just one script. So this is in no way a production ready server in cases like this.
00:26:24.260 - 00:27:03.404, Speaker F: What is expected is that a network of relayers is running that are picking up these signatures and that are executing the signatures for you. So what this post Call does is it just takes in the signature function. SIG and the intent. So intent is the function SIG signed over by the user and the contract address where this transaction has to be relayed to. And once this is done, what it returns is so this server returns the transaction hash this is coded in such a way so I didn't switch over to Matic network. I'm still on Gurley.
00:27:03.452 - 00:27:05.516, Speaker E: And if I take this transaction hash.
00:27:05.628 - 00:27:42.540, Speaker F: And I open on Mumbai's Explorer, I'd be able to see this. Transaction executed. So before getting into the details of how this happened, I'll just reload and see that I in fact got 200 tokens on Mumbai. So what exactly happened behind the scenes was one thing is that the user signed on a message. That message was relayed to a server and that server then interacted with the blockchain. User didn't interact with the blockchain and neither did he pay for gas. So the function that was called on the particular contract was execute meratransaction.
00:27:42.540 - 00:28:07.716, Speaker F: And in the logs, you'd be able to see that internally, this particular function called the other function that we actually wanted to execute, which was transferred from address zero to this, basically minting these. Tokens and similar to this, we'd be able to transfer funds if we'd like to. Let's say we now like to transfer two of these tokens similar way we just sign and signature is relayed to.
00:28:07.738 - 00:28:18.184, Speaker E: The server which will then display the result hash over here. So the post has happened. I get the result hash and just.
00:28:18.222 - 00:28:19.656, Speaker F: Similar to this, I'd be able to.
00:28:19.678 - 00:28:22.536, Speaker E: See it on Mumbai's network. Okay.
00:28:22.638 - 00:29:09.828, Speaker F: If you'd like to also get into the details of how to make a contract network agnostic. You can actually look over to the code here, which is this particular function has to be present in any contract that you'd like to make it network agnostic. So basically it just expects a function signature and the user address. Who is executing the transaction. If you not want to spin up your own server, you can use Biconomy's MexA SDK. And this entire strategy was also put together by Biconomy, which is like a standard meta transaction strategy for any contracts and all contracts on Matix network. So any child contracts that you'd interact with or any contract that you have deployed.
00:29:09.828 - 00:29:28.656, Speaker F: So basically any child ERC 20, which is deployed on Matic network will already be compatible with this feature. So you don't have to worry about how to implement it, you can simply start using it. So, yeah, moving ahead. This was like a brief demo of.
00:29:28.678 - 00:29:29.980, Speaker E: The network Agnostic feature.
00:29:30.060 - 00:29:53.304, Speaker F: Next is if you'd like to now do the cross chain asset transfer. Basically by now if you are comfortable with using layer two and if your users are also comfortable with using the layer two. In your application. One thing is that you'd want to now transfer assets from main chain to Matic chain and then also back to.
00:29:53.342 - 00:29:54.424, Speaker E: Main chain if you'd like.
00:29:54.462 - 00:30:52.408, Speaker F: So that thing can be handled by Matix SDK, which is just two simple function calls which is approve for the deposit and transfer for the deposit. The code one to six happens on main chain. So basically, these two function calls happen on main chain. And what the second function? Call is doing is it is transferring those tokens on deposit. Token is so how the asset transfer is handled by Matic's contract is that when you transfer over to Matic, your contract on main chain, so the deposit manager on main chain locks your asset and then it mints on Matic's chain. And when you'd like to come back from Matic's chain to mainchain, you'd just simply burn your token on Matic network and give that proof of burn. So that transaction hash to mainchain contract.
00:30:52.408 - 00:31:47.340, Speaker F: So basically deposit is the function. That deposit is two transaction calls. So let's say we are transferring from Goldie to Mumbai so it is two function calls on goldly and for withdraw it is one function call on Matic and the other function call on Goldie. And this particular thing of two function calls is only in the case of, ERC 20 token transfer. If you'd like to transfer ERC 721, you can simply transfer it to the deposit manager and the deposit will be handled for you. So the final part that I'd like to mention is in terms of cross chain asset transfer is using of Widgets. So if you already have your DAP logic set up and now you'd like to use Matic network just as a transactions layer, then you can simply use our drop in Widgets.
00:31:47.340 - 00:32:17.188, Speaker F: You'll find relevant documentation in our website. And so basically, you just have to register your application on the Dashboard and you'd be able to get a code Snippet, which can simply be used in your application giving your DAP ID. And it's just as simple as having this Drop in Widget on your application wherein users can simply deposit and withdraw their assets. So only the setup has to be.
00:32:17.194 - 00:32:18.740, Speaker E: Done via the Dashboard.
00:32:20.140 - 00:32:28.696, Speaker F: So, yeah, this was all that I had to mention and if there's anything so these two links should help you.
00:32:28.718 - 00:32:33.868, Speaker E: That I have mentioned in my presentation as well.
00:32:33.954 - 00:32:56.216, Speaker F: So the second link is for the code that I had run here. So this shuffle code, this was the network Agnostic code and the shuffle code here. So you'd find the code in this particular link and the notes or the helper doc in the first link. Moving over to who is building on Matic.
00:32:56.268 - 00:33:02.340, Speaker E: I think I'll hand it over back to Sandeep.
00:33:09.160 - 00:33:13.910, Speaker B: Yeah. So I will once again share my screen.
00:34:03.530 - 00:34:07.862, Speaker D: Angela, can you maybe share the slide again?
00:34:07.916 - 00:34:12.966, Speaker B: Because I think I'm having some yeah, yeah, sure. Yeah.
00:34:13.068 - 00:34:20.300, Speaker E: Just a second. Okay. It's visible, right? Okay.
00:34:21.870 - 00:34:22.426, Speaker B: Yeah.
00:34:22.528 - 00:34:30.050, Speaker D: So I briefly already spoke about it. So let's take maybe one more minute on that. So these are some of the bigger.
00:34:30.070 - 00:34:32.958, Speaker B: Ones, like decentraland and somnium space.
00:34:33.044 - 00:34:51.262, Speaker D: These are two bigger kind of VR spaces ethworth also now moving to Matic network and all that. This is like a very small this thing on the DeFi side, the kind of bigger prediction markets, almost all the bigger prediction markets are looking to be on Matic network.
00:34:51.326 - 00:34:55.750, Speaker B: So these are some of the globals angela, we can go to the next slide.
00:35:05.290 - 00:35:06.790, Speaker D: Did we lose angela.
00:35:08.730 - 00:35:11.240, Speaker E: I have switched over to this slide. You can see.
00:35:12.890 - 00:35:13.638, Speaker B: Yeah, yeah.
00:35:13.724 - 00:35:28.270, Speaker D: So please move to the next slide. So, as we said that we are in this together. We help a lot of teams who are building applications on top of Ethereum or on Matic network by providing a lot of grants.
00:35:29.170 - 00:35:30.942, Speaker B: And then we have a very big.
00:35:31.076 - 00:35:43.646, Speaker D: $50,000 a month kind of Gitcoin grant program going on, wherein right now around 17 teams are participating and then they are getting a lot of public grants.
00:35:43.678 - 00:35:43.922, Speaker B: Also.
00:35:43.976 - 00:35:48.740, Speaker D: Apart from that, they get like, overall a pool of $50,000 also.
00:35:51.530 - 00:35:52.834, Speaker B: From Matic.
00:35:52.882 - 00:36:15.738, Speaker D: Side to build their applications. And this build and earn program is for early stage teams who want to grow. And take their product to the next level of these things. So we also help our teams to get the early users. So Matic has one of the largest communities now in the blockchain space. Our Twitter handle is also followed by.
00:36:15.824 - 00:36:21.214, Speaker B: More than 55,000 people now I think 55, 6000. And then our Telegram group is also.
00:36:21.252 - 00:36:36.866, Speaker D: Like real 3000, 30,000 members over there. So you get all this community to initially support your product and then we do a lot of campaigns, grant programs, investment connects, investor connects and all that.
00:36:36.888 - 00:36:39.010, Speaker B: So for example, the Gitcoin Kernel program.
00:36:39.080 - 00:36:41.474, Speaker D: Also we have already funded like three.
00:36:41.512 - 00:36:42.550, Speaker B: Four teams over there.
00:36:42.620 - 00:36:47.686, Speaker D: So if you are building something interesting which requires scale and you want any.
00:36:47.708 - 00:36:49.318, Speaker B: Help on taking their application to the.
00:36:49.324 - 00:36:59.338, Speaker D: Next level, definitely we would love to help you out and we provide fairly close handed support for application developers to.
00:36:59.344 - 00:37:01.098, Speaker B: Take their applications to the next level.
00:37:01.264 - 00:37:01.846, Speaker D: Next slide.
00:37:01.878 - 00:37:02.860, Speaker B: Angela, please.
00:37:03.710 - 00:37:25.102, Speaker D: So these are some of the examples, some of the PRS that we kind of do for our partners and all that. Next slide. Developer Support Program is also like we have now increased the overall pool size of the Developer Support Program to around $5 million. We provide technical guidance.
00:37:25.246 - 00:37:30.322, Speaker B: Once you are building an application, we kind of have a fast track channel.
00:37:30.376 - 00:37:36.886, Speaker D: With you guys and then we help you with the technical guidance side. On the security audit side, also we.
00:37:36.908 - 00:37:39.378, Speaker B: Are connected to multiple security audit firms.
00:37:39.474 - 00:37:41.366, Speaker D: So we kind of rope them in.
00:37:41.388 - 00:37:42.262, Speaker B: Also to help you.
00:37:42.316 - 00:37:45.514, Speaker D: Investor Connects are already part of that.
00:37:45.552 - 00:37:48.170, Speaker B: And joint marketing also. Next slide.
00:37:50.670 - 00:38:06.382, Speaker D: So we are backed by Binance and Coinbase and some of the other investors. That's pretty much it from our side. Any questions? So Trent, where should we look for the questions?
00:38:06.436 - 00:38:08.430, Speaker B: Like one is the chat forum?
00:38:08.930 - 00:38:27.480, Speaker A: Yeah, I just dropped something in the Zoom chat and then there are a few in the YouTube stream as well. But we're going to prioritize the people in the Zoom chat as well. So if anybody wants to unmute and ask their question verbally or write it in the chat, sure Sandeep or Angela would be more than happy to.
00:38:29.290 - 00:38:29.606, Speaker B: Give.
00:38:29.628 - 00:38:56.960, Speaker A: You the information you need. Let me just scroll through the chat to see if we have any one of the questions from YouTube is, is Matic the base token for the network? What are gas fees paid in?
00:39:00.790 - 00:39:03.774, Speaker E: Yeah. So yes, Matic is the base token.
00:39:03.822 - 00:39:14.566, Speaker F: For paying gas on. So basically you'd need to deposit Matic tokens onto the network to be able.
00:39:14.588 - 00:39:15.830, Speaker E: To pay for gas.
00:39:16.330 - 00:39:29.686, Speaker F: Actually, I'll just also quickly share our link to the faucet if you'd like to test out quickly. There is a faucet that we have and also the link to the Mapper.
00:39:29.718 - 00:39:31.340, Speaker E: Application that we have.
00:39:32.510 - 00:40:17.290, Speaker D: Another question I see from Andrew. Are there any example projects that we can look? Definitely. So like on the gaming side, you can look at let's say blockchain QTS or maybe decentral games is one interesting inside decentraland you might want to check that. Like on the gaming side you will find a lot of this thing like Synergy of Sierra you can go and I'm thinking of some games where you can play it with meta transactions on that. Like there's one that recently went live badbit?
00:40:17.790 - 00:40:18.538, Speaker B: Yeah.
00:40:18.704 - 00:40:19.274, Speaker F: Is it bad?
00:40:19.312 - 00:40:24.106, Speaker B: Bit. Yeah, so bad bit gate they have.
00:40:24.128 - 00:40:46.546, Speaker D: A full blown metatransaction integration. So I think that would be a good application to kind of explore how the user experience can work on Matic. So many applications like that plus we will be having our DAP radar and Dapreview.com kind of applications like integrations very soon and then you will be able.
00:40:46.568 - 00:40:49.940, Speaker B: To then quickly have it all within one place.
00:40:53.530 - 00:41:14.060, Speaker A: Another question I've seen come up is we can leverage your experience. What sort of things are you excited to see built on medic? I know you guys talk a lot about high throughput applications like games or social media applications but are there any specific things you can imagine people building for?
00:41:17.090 - 00:42:12.506, Speaker D: So on the application side, as you said, that gaming and gaming and NFT Matic is already maybe one of the biggest. Only after ethereum, I think. And these are still very early days in our main net it went live like two months back or whatever. And then on the social network side, for example, the bigger ones, like Sapien Network and Murmur, all these are building on Matic and about to go live. Apart from that recently we are also seeing a lot of DeFi. Then there are projects like EasyFi Network who have folked compound protocol and then on top of that they are kind of building micro credit functionalities plus you have projects like Ave Gotchi very famous project building on top of Know using this. So they are also in fairly advanced.
00:42:12.538 - 00:42:20.078, Speaker B: Stages of exploring Matic network for example pretty actively doing development on multiple fronts.
00:42:20.174 - 00:42:28.834, Speaker D: So on the DeFi side also synthetics for example is a big field where people can build applications and then now.
00:42:28.872 - 00:42:30.594, Speaker B: On the side chain you can have.
00:42:30.632 - 00:42:33.926, Speaker D: Some of these protocols available over there.
00:42:33.948 - 00:42:36.338, Speaker B: For which you can build during your hackathons.
00:42:36.434 - 00:43:28.214, Speaker D: Plus like chain link for example, there is a very high chance that Matic will be the second chain only after Ethereum where chainlink main net would be live. And they have also talked publicly about it. And once that is available, you can kind of imagine having real time price feed every 2 seconds because the block time is 2 seconds. So how will it impact or lead to DFI applications which will be more secure especially which are getting in Oracleized data. For example, a compound like lending protocol on the side chain, can it go for a lower collateralization ratio instead of 150%? Can it do like 125% because the transactions are happening at a much faster rate. The price feed is getting fed into.
00:43:28.252 - 00:43:29.414, Speaker B: The system very fast.
00:43:29.532 - 00:43:31.138, Speaker D: So is that a possibility?
00:43:31.234 - 00:43:33.142, Speaker B: Those kind of things would be really.
00:43:33.196 - 00:43:37.786, Speaker D: Cool to imagine that when DFI has this kind of scalability available, what kind.
00:43:37.808 - 00:43:39.162, Speaker B: Of applications can be built.
00:43:39.216 - 00:43:51.214, Speaker D: So gaming NFT social network sure, but if you guys want to explore on the DeFi side, we would be very happy to see and then I think Biconomy is also there.
00:43:51.252 - 00:43:52.714, Speaker B: I think we'll be offering some joint.
00:43:52.762 - 00:44:14.166, Speaker D: Bounties with Biconomy so you can build applications and then be eligible for both the kind of bounties, build it on top of Matic network and then integrate metatransactions with Biconomy. So that would also be pretty cool to see and kind of the user experience we would like to see where you can build like a robust web two kind of experience where it's like.
00:44:14.188 - 00:44:18.920, Speaker B: A click click experience. So these would be some of the areas we would like to see.
00:44:22.490 - 00:44:58.180, Speaker D: How can we get started on the process to work. So Angela has already given you the faucet and the testnet contract so you just need to take that and then configure that RPC on your MetaMask on the testnet, get some tokens and then you can start deploying using your remix or Truffle. It's exactly like ethereum, right? So you can get it started from there and then Trent, I'm thinking that we'll have a discord channel also over there so you can reach out to us directly to me or Angela, any kind of help you guys need and.
00:44:59.270 - 00:45:02.440, Speaker B: We can kind of directly help you on anything like that.
00:45:03.290 - 00:45:27.146, Speaker A: Yes, definitely. We should be opening up the sponsor channels today. So anybody who has questions from this or anybody from the YouTube stream who wasn't able to join the Zoom call and is staked you will be able to join there and get help with any integration with the Matic network that you might need. I think all of the questions are covered. There might be oh, there's one more.
00:45:27.248 - 00:46:24.734, Speaker D: Question from how can we about smart contract which need on chain data? So I think the question from Stanley is about having the data from Ethereum. So we have a state sync mechanism stanley so you know, you could use that state sync mechanism to sync some of those values from Ethereum to Matic side chain and vice versa. There are few teams like Wild Cards who are building Dows where the voting on the Dow happens on the layer two because voting needs to be low cost. But then the results of the Dow voting goes to the main chain and from there the actions on the funds of the Dow actually get taken. So something like that, if you need something like that or if you don't need a decentralized form of it and you want to have an Oracleized feed into main chain from the main chain to the side chain for the need of your application, that is very easy to do.
00:46:24.772 - 00:46:33.406, Speaker B: You can read it from main chain like some events and then fire a particular small transaction on the side chain. That should also be easy to do. Sorry, Trent.
00:46:33.438 - 00:46:51.094, Speaker A: Yeah, you're saying no, that's great response. Let's see, there's a question about Matic relating to ETH two. Not super related to the hackathon but I'm sure Sandeep would have an answer for it.
00:46:51.132 - 00:46:52.438, Speaker B: I would love to take that. Yeah.
00:46:52.524 - 00:47:08.654, Speaker D: So on the east 2.0, Matic is a layer two on top of Ethereum. So I think E 2.0, whenever it comes, I think that's very helpful because that gets our so for example, Matic checkpoints right now go to E 2.0.
00:47:08.692 - 00:47:12.014, Speaker B: Every minutes because of the gas fees and congestion issues.
00:47:12.132 - 00:47:39.510, Speaker D: If E 2.0 is there, those checkpoints can become like five minutes. So you get like an eventual finality on main chain within five minutes. And then the other question would be that whether E 2.0 will make any other scalability solution like especially layer one. Definitely it will make a lot of layer one solutions to be redundant. But on layer two, what we believe is that and our vision is that even if age 2.0
00:47:39.510 - 00:47:40.086, Speaker D: comes in and.
00:47:40.108 - 00:47:42.306, Speaker B: Then it has 60 to 64 shards.
00:47:42.338 - 00:48:49.006, Speaker D: And each shard is, let's say is comparable to the current Ethereum main chain, right, which has let's say 13 to 15 TPS. Let's assume that it goes to 30 TPS for each shard, right? Even then with 64 shard it will be like 1800 to 2000 transactions per second. Very good for the current level of scale. But the kind of scale that we are thinking onboarding like the decentralized applications looking to onboard next million, 10 million users onto main chain. But we believe that the moment the supply of those transactions go up, like TPS on the Ethereum main chain goes up, you will see even more innovation on multiple applications which will again surpass that kind of demand and you'll start seeing a lot of similar kind of scenarios because even that TPS is not inverted. So what we believe is that layer one, Ethereum would be a very good settlement layer. Maybe the layer one will become like a pure DeFi blockchain and then the other kind of business activities, social networks or like gaming, NFC use cases, they might remain on the layer two.
00:48:49.006 - 00:48:52.158, Speaker D: So that's what is our belief and.
00:48:52.244 - 00:48:54.800, Speaker B: I think hopefully that makes sense.
00:48:55.410 - 00:49:10.886, Speaker D: And plus also like E 2.0 still many of us believe who are tracking the development like it's still 1.5 maybe two years away, like full blown multi shard 2.0 available for you to build applications. So I think there's quite a bit.
00:49:10.908 - 00:49:12.920, Speaker B: Of time to go when that happens.
00:49:14.570 - 00:49:40.250, Speaker A: There's another question in here about Dev contacts. Sandeep, Angela, a bunch of the Matic team will be in the sponsored discord starting today. So that's specifically the discord you should already be in if you're hacking for ETH online and then that channel will be opened up and you'll be able to ask your many questions to them and they will probably, I hope, know the answers.
00:49:40.590 - 00:49:41.370, Speaker B: Yeah, exactly.
00:49:41.440 - 00:49:46.414, Speaker D: But yeah, I mean we'll be there in the group and then anytime, feel free to tag us. We'll be there at a very fast.
00:49:46.452 - 00:49:49.040, Speaker B: Like we have a very good response time on that.
00:49:49.350 - 00:50:27.446, Speaker D: One important question Carlos asked, that I believe that the major gap is MetaMask and custom RPCs. We completely agree with you Carlos. So there are two things I want to tell over there. So one, Angela, if you can share that tutorial. We have already built a way if you use Meta transactions so the users don't need to switch from mainnet to the sidechain like users can still remain on the main chain. Your application knows the context. So when user is doing a transaction on the side chain, he essentially just signs the transaction rather than doing it on main chain and that the signature actually is relayed via the Meta transactions on the side chain.
00:50:27.446 - 00:50:58.978, Speaker D: So user can remain on the main chain, he doesn't need to switch the custom RPC. So that's one way of doing it. If you want to use MetaMask, second way is all the major wallets like your Taurus as well as your Fortmatic which is now magic. All of these like arcane wallet, all of these wallets support, you know, default from their SDK implementations. If you don't want your end users.
00:50:58.994 - 00:51:00.806, Speaker B: To switch the RPC, simply you can.
00:51:00.828 - 00:51:29.842, Speaker D: Use these email based wallets like web browser based wallets to kind of relieve them of this pain. And also in future we believe that MetaMask is going to come up with plugins wherein all these things could be automated. So yeah, hopefully that would also bring in the solutions for MetaMask. But for now you can use either of these two and you can see Angela is already trying to do something wherein the user is on the main chain itself.
00:51:29.896 - 00:51:43.338, Speaker B: He doesn't switch this thing and he's doing a transaction on like he or she is doing a transaction on the side chain only by popping up a kind of transaction.
00:51:43.454 - 00:52:42.354, Speaker D: So that's one thing how Matic is different from other layer two solutions, ZK roll up or optimistic roll up. So on the ZK roll up I'm not sure if we have already like a production ready. One thing I would say is the difference is the production ready implementation, optimistic roll ups, especially from the optimism team, they are really awesome. I think they are going to make a lot of other layer one solutions completely redundant because if you get that kind of scalability with optimistic roll ups which is as good as ethereum level security with optimistic rollups, I think that could be really cool. So how Matic differs is that for example, ZK roll up, I will not take it up right now because ZK roll up, we don't have a production ready implementation. I'm not sure, but optimistic roll ups is like optimism. Team came up with the testnet.
00:52:42.354 - 00:53:40.746, Speaker D: The difference between the optimistic roll up and Matic kind of side chain is would be on the scalability side of things. So on optimistic roll ups, all of your transactions actually the call data is being pushed on Ethereum main chain so it will be slightly costlier. Also in Matic side chain, what is happening is all the transaction data is kind of being merged into a checkpoint and that goes onto main chain. So definitely with optimistic roll ups, when all of your call data is going on to Ethereum, your provability on Ethereum is much higher. But then the scalability is also limited because at the end all the call data is going on to Ethereum. So I feel but for kind of DeFi kind of applications that makes a lot of sense, right? But on the Matic side chain, the scalability, that's why you will have much higher scalability, faster block times and everything on this thing because in the background it is putting one particular cryptographic checkpoint on Ethereum instead of putting all the.
00:53:40.768 - 00:53:42.102, Speaker B: Transaction data on Ethereum.
00:53:42.166 - 00:54:15.766, Speaker D: That's how optimistic rollups and Matic differ about ZK for example, loop ring, if you would want to compare so loop ring currently, if I'm not wrong, they support only payments and decks kind of use cases whereas on Matic network you can build your EVM. So developer yeah, one thing where from optimistic roll ups or ZK roll ups or loop ring or any other ZK sync, also one thing that you will find very different would be the developer experience. Like right now, if you want to utilize, let's say Zksync or loop ring, you will have to learn a lot.
00:54:15.788 - 00:54:17.586, Speaker B: Of new things, the new programming language.
00:54:17.618 - 00:54:29.402, Speaker D: On that side and then you will be able to build here within a matter of few minutes you will be up and running. So that's I think on the positive side of things, the scalability is higher.
00:54:29.456 - 00:54:36.060, Speaker B: Developer experience is much better is what I feel. And then.
00:54:42.800 - 00:55:26.264, Speaker A: Yeah, I'm just looking through the questions now. If you see any other ones, just go ahead and grab them. But before you jump into any last things, it looks like we only got a few minutes left. So before we lose any other people and we wrap up, I just want to make the pitch for if anybody is on this call or watching on YouTube and you haven't applied to ETH online but you're still interested in doing it, please make sure to apply today, tomorrow, before the 30th. The 30th is the cut off September 30. So if you're trying to get the rest of your team to apply or you just haven't found the time to do it, please make sure to do that ASAP. We are nearing the cap on the number of people that we're going to have in this event.
00:55:26.264 - 00:56:00.512, Speaker A: So you want to make sure to do it as soon as you can. And then on top of that, if you are not aware, you do have to stake to get into this event. This is something that we return after you submit a project, so there is no worry about losing your funds. This is just a tool that we use, a mechanism to ensure that people are focused and they're committed to completing the event out. I think it's only about $20, and again, you get that back at the end. So make sure to apply is the first directive. And then once you've applied and been accepted, stake and link your discord.
00:56:00.512 - 00:56:10.536, Speaker A: And then that gives you access to all of the ETH online channels. All right, cool. How about we got time for one more question, sandeep, if you can see one.
00:56:10.718 - 00:56:19.316, Speaker D: Yeah, I can see one question from Carlos, but I'm not entirely sure what he's exactly trying to say, so I will just ping him.
00:56:19.438 - 00:56:53.068, Speaker A: Yeah, maybe we'll follow up in discord. Awesome. Well, this has been an amazing first workshop for ETH online, starting off the week and basically the entire month. Really strong. So thank you again, Sandeep and Angela, for sharing a little bit about the Matic network and how Devs can integrate it. They linked a ton of stuff in the chat, so we'll make sure to port that over to the discord and get all this information in the hands of hackers. Thank you, everybody, for showing up, and Jacob, for doing a little bit of MC.
00:56:53.068 - 00:56:58.810, Speaker A: And we'll see you in the discord. Remember, remember to apply and stake. We'll see everybody.
00:56:59.500 - 00:57:03.670, Speaker B: Thanks, guys. Thanks, Carl. Thanks, Jacob. Thanks. Bye. Thanks, everyone.
