00:00:06.170 - 00:00:50.650, Speaker A: Hey, everyone. My name is Jacob. I'm one of the co founders of Zora. Really excited to be kicking off the hackathon today with a presentation kind of going deep on the concept of hyperstructures. So I'm going to be speaking about what hyperstructures are, why they are important, and then some of the implications of what they mean in terms of how you build on the blockchain, how you build in web3, and then some of the cool and weird circumstances that I think kind of arise from this new paradigm. Okay, so what is a hyperstructure? Very simple definition. So hyperstructures are crypto protocols that run for free forever without maintenance, interruption, or intermediaries.
00:00:50.650 - 00:02:36.478, Speaker A: This sounds very simple, but is a very, very powerful idea that is native and kind of a net new form of infrastructure that is made possible by Trussell's blockchains. Like ethereum and hyperstructures exhibit a number of characteristics, and you can kind of use these characteristics as a checklist to kind of pick a protocol run through each of these characteristics and you can kind of have an objective measure of like, does this satisfy the hyperstructure definition or not? So I'm going to go through each of these individually, starting with Unstoppable. Okay, so if we think about traditional infrastructure, so, like power grids, highways, railroads, any form of infrastructure to keep these things running and operating, they require consistent maintenance by a trusted operator. And they require a trusted operator to make sure that the power is still on, the roads aren't falling apart, trains can still operate and go where they're supposed to, which kind of introduces this kind of dynamic we're used. To with infrastructure, which is you typically see a single entity that runs the entire thing and then an economic system which often means that single entity gets monopolistic control and the ability to seek rent from those systems. And that's not inherently bad, it's just the nature of that type of infrastructure because we have not yet figured out a way for these things to magically operate themselves in perpetuity. But with blockchains, when you deploy a protocol on a blockchain, you can actually do exactly that.
00:02:36.478 - 00:03:50.854, Speaker A: You can deploy once, and then your protocol can run for as long as the blockchain does. So this means that if you look at the Uniswap protocol, for example, deployed once, and then that team could disappear off the face of the Earth, their website would go down, but their protocol will run for as long as the blockchain does with no ability to stop it. So unstoppability is kind of this very core and unique superpower to deploying protocols on a blockchain, which kind of unlocks a huge amount of new possibilities for how we think about the economics of the system and how to basically build these things. And it's just to kind of give some examples as well to help understand the difference between something that's unstoppable or not unstoppable. If you think about exchange. For example, Coinbase operates off chain, the market kind of whips and operates on trusted servers, which gives it great features like being kind of free to interact with and very fast. But it means that sometimes that service goes down versus uniswap by nature of running on chain does not stop runs as long as the blockchain does.
00:03:50.854 - 00:04:42.566, Speaker A: And the website may go down, but you'll always be able to interact with it through ether scan or through a node directly. Or maybe other websites that are built on that very same protocol. And then same thing in the NFT side too. So for Openc, the market runs off chain in their servers and databases, which gives the superpower feature of being free but also prone to stopping sometimes because running large scale systems like that is very difficult versus something like Azora protocol which runs on chain and gives you all the benefits of running on chain which is it does not stop. Our website may go down, but there are many other websites built on that same protocol. So if you really need to interact with it, you always can. What this means is that there is really no further labor or capital required to keep a protocol running.
00:04:42.566 - 00:05:45.610, Speaker A: So, as I was saying, if a team did disappear, that after deploying a protocol, that isn't necessarily bad because the protocol will run exactly as designed for as long as the blockchain will. So this unlocks a whole bunch of new superpowers. As a developer, when you're building a protocol like this and then importantly changes, I think, the economic nature of how these pieces of infrastructure run on the internet. So let's talk about kind of the first thing, which is the level of freeness of these protocols. So, because there is no operating cost, I think the default natural state for these protocols over the long term is that they will always default to running exactly at cost. So there will be no like you basically just pay the gas costs required to interact with and utilize that protocol. And I think it'd be very difficult for protocol wide fees to be added on top because the cost of fork is negligible.
00:05:45.610 - 00:06:52.250, Speaker A: All of these protocols are deployed on public blockchains, can be quite simple to fork and if you introduce a fee, you introduce the incentive to fork in a low cost environment. But there are fees in these protocols and there are fees that are very crucial, I would say, to the success of these protocols. And I like to kind of make a distinction between protocol wide extractive fees and then protocol wide expansive fees. And expansive fees are basically built in business models or incentives that can be utilized by anyone adding value on top of the protocol. So these fees are transparent, anyone can see them, anyone can use them, which kind of incentivizes third parties, independent parties to build on top of your protocol because they have a built in incentive to do so. And examples of fees like this I think the most notable is probably the uniswap LP fee. So this is the built in incentive for LPs to provide liquidity directly to the protocol.
00:06:52.250 - 00:07:56.342, Speaker A: And importantly, those fees go directly to the LPs themselves, not to the uniswap protocol. And then similarly in the Zora marketplace protocol we have a notion of finders fees where it's like any developer with their own front end or application or their own protocol themselves, if they're finding bidders and buyers or people listing, they earn fees directly from that and that goes to those developers. It does not go to Zoro. So what this means is that there is an incentive to basically propagate and proliferate this protocol or the hyperstructure as far as possible because there's a direct incentive to do so, which expands the hyperstructure. Hence the term expansive here. Okay, another really important characteristic is permissionlessness. It's probably a word you hear all the time in crypto and Web Three and it's widely associated with a lot of the chaos and adversarial nature of Web Three too.
00:07:56.342 - 00:09:03.514, Speaker A: But permissionlessness is important because it means that the protocol is universally accessible to everyone and anyone can utilize it without prejudice. There is no way to stop anyone from using that protocol. And then importantly, it also means that the protocol itself cannot be changed. So this is kind of directly related to unstoppability in a sense, too. But once deployed, the operating functionality cannot be warped or changed or augmented, which is again kind of like a net new capability that comes with deploying something on a blockchain that creates very important conditions that allow for these hyperstructures to kind of thrive and be adopted. And from a developer standpoint, if you think about a lot of the pain points of Web Two, there's no API keys required to utilize or build on a hyperstructure, there's no deplatforming, there's no censorship, there's no ability to be rugged. Or if you're building a business on top of this thing, you basically get the blockchain guarantee itself that it cannot be ripped out from under you.
00:09:03.514 - 00:10:16.046, Speaker A: Which is huge if you think about early social networks or Twitter API keys getting turned off or Facebook platform getting changed and ruining entire companies on a whim. That is not possible in this environment which kind of leads to this kind of state of credible neutrality, which is if you haven't read this essay by Vitalik, would highly recommend it. But kind of harvest at this point which know hyperstructures are credibly neutral because they provably do not discriminate for or against any specific people or developers who are building on top of this infrastructure. So the sum total of all of these things leads to this kind of positive sum environment which means that you basically can see competitive actors utilizing the same shared system instead of everyone trying to do it themselves. We do not see LPs all trying to create their own uniswaps. We see all LPs trying to use the same uniswap because there is this collective benefit liquidity effect and network effect that comes from building on that same environment and the fact that there's no protocol wide expansion. There's incentives for them to do so.
00:10:16.046 - 00:12:08.950, Speaker A: And then they get the blockchain guarantee that, hey, this thing isn't going to go down or you're not going to get kicked off. It means that there's really no reason for competitive actors to fork that system unless they have some new or novel addition or improvement to the underlying system itself, which, yeah, again, positive sum environment means you're going to see this continually expanding network of people who are competing against each other, which is kind of a cool property to see. And then I guess the kind of big open question and a very timely debate right now, is that okay if you have these protocols that are deployed only once, there's no further labor cost to maintain or operate the thing and there's no protocol wide extraction, is this valuable or not? I think if you look to kind of like the uniswap fee switch debates right now, I think there's two sides. There's the side that's like, well, maybe uniswap protocol can turn on a fee and that there is enough stickiness to that volume that there can be protocol wide extraction that is defensible and although that there will be an incentive to create a fork that perhaps that the current implementation could survive that. And then there's the other cab which is like, well, the switching costs are very low and it's very trivial for someone to redeploy a version of this protocol and LPs can easily move across. Like this is something that should remain free. But obviously there are other governance controls of that protocol that sit outside of just fees that are important and contentious to control and that's where a lot of value is being derived.
00:12:08.950 - 00:13:21.600, Speaker A: And then I guess the reason the Nouns goggles are here, the nouns glasses, is that there are now new dow constructions that earn value and treasury outside of any fee extraction or revenue extraction at all. It's purely brand based ownership and governance control which may be conducive to actually governing public protocols themselves. So it could be the case that the uniswap protocol may be better governed by a dao that follows a similar economic structure to nouns, if not nouns itself. So we're at a really interesting time, which is we have a new type of infrastructure that is kind of live, working and operational that changes a lot of the established models of both operation and then also value capture. So we're heading into this whole big period of the unknown and experimentation, which is like, well, these things clearly work. These things clearly power a huge amount of value exchange on the Internet and are very important and increasingly going to be so. How do we value and relate to these things? And what does it mean to build around the edges? Which is why we're heading into this very exciting phase right now.
00:13:21.600 - 00:14:29.762, Speaker A: So, yeah, to summarize like hyperstructures, they kind of exhibit the following characteristics. They're unstoppable, they're free, they're expansive permissionless, incredibly neutral, positive sum, and then valuable, maybe with a PBD right here. So when building hyperstructures, I think there's a few things to keep in mind and I kind of just copy pasted this from the original essay I wrote. But I think they're important to call out, especially as we're in a hackathon. So if you're planning on building a protocol, these are some great things to keep in mind. I think one of the core, I think the thing at the top here is probably most important, which is like when you are building a hyperstructure like this, you need to be thinking about millions of interfaces, not just your own. So any design trade off or implementation trade off that may make it easier for you individually or as a single platform may come up with a trade off of compromising the easiness of other platforms building on top of you.
00:14:29.762 - 00:15:21.250, Speaker A: So to the extent you can keep the protocol as generic and as simple as possible is kind of one of the core decisions you should be making the whole time. Because your hyperstructure will only be successful if there are multiple platforms and competing platforms built on it, not just a single one. Think about fees as a way to expand and incentivize adoption of your protocol, not extract from it. It may be the case that there could be protocol wide extraction in the future, but that's not something that you should be thinking about in the short term. In the short term, you should be thinking about how can you convert as many platforms and competing platforms as possible to build on this shared infrastructure. This may be somewhat obvious, but if you're building a hyperstructure, like the hyperstructure is the thing to focus on. So developer adoption is crucial.
00:15:21.250 - 00:16:18.690, Speaker A: Maximizing integrations and then build that network effect that can kind of cement your protocol as the neutral thing and the default. And then, yeah, liquidity is kind of like a core network effect that I think a lot of people and developers obviously look to. You may find that there's always an early subset of developers and platforms that want to take the leap because there's no other great option, which is good. But as you become more established, liquidity will kind of be a core measure that the ecosystem will look to decide if they build on a protocol or not. And then you think about governance. I would say that the most important thing here is remove as much governance as possible. If you don't need an admin for a thing or you don't require an upgrade for a thing, just remove the option entirely.
00:16:18.690 - 00:17:28.810, Speaker A: Because the lesser amount of governance, the lesser amount of surface area for things to change, the more confidence that platforms and developers in the ecosystem have that they're not going to be deplatformed or rugged or run into any critical errors or flaws in the protocol. And then, I guess, the general approach for deploying protocols. Although it's software, it kind of feels more like a hardware development cycle. Just because you see these large deploys, it can take a lot of energy to migrate the ecosystem from one version to another. And then you need to go through because you're deploying things one way, any mistakes will live on forever. So it's very important to test and audit and go through public review and those things all add a lot of time into the build cycle compared to shipping something onto a website and be able to deploy a hot fix minutes later. You can't do that in this context, it's important to acknowledge that there's a longer build cycle here and the general state of mind is you're building a thing to be built on.
00:17:28.810 - 00:18:33.810, Speaker A: So it's just like that's kind of like a simple phrase and thing to keep in your mind is you're building protocols like this. You're building something to be built on, it will be eventually used and precipitate up into user interfaces and apps and platforms, but you're building for builders. Why does any of this matter? Well, it's like, well, if web free is going to achieve its ambitions of being a new Internet, then the protocols that are being built right now will eventually be powering most, if not all of society's value exchange. So if crypto is giving us the opportunity to create this public infrastructure that can be free of monopolistic control, that's an opportunity that we should probably take and then that is something that we can aspire to and measure against. And I think the hyperstructures essay definition is meant to illuminate that. One, this thing is possible. And then two, let's create a shared kind of checklist to actually make sure that we're holding ourselves to those ideals.
00:18:33.810 - 00:19:35.874, Speaker A: And yeah, I guess given their immutable and impermanent nature, we do have that opportunity to create essentially civilizational scale infrastructure that can outlast even our own lifetimes given the permanent nature and the unstoppability, all of which is native to the Internet. So we just happen to be the lucky people that get to do it first and experiment it, which is kind of wild but a lot of fun and exciting. So as you're building through this hackathon, it's good to always remember that it's like, well, damn, yes, there is a lot of complexity. I think there's still rough edges in developer tooling generally and most of the things that are to be built are yet to be discovered and understood yet. So yeah, take the opportunity for hackathons like this to think about the most out there version of what you're trying to do and put it out there and you might find people that want to help you do that very thing. Cool with that. I will end it and then we can go out there and the hackathon and time to start building.
00:19:35.874 - 00:19:40.680, Speaker A: But yeah, I'll pause there and thanks for listening. Awesome.
00:19:41.530 - 00:20:07.200, Speaker B: Thank you so much. This was a super awesome intro and I'm glad that you covered so many interesting things. And also just the framing around how do you actually apply that for this hackathon was really good. Maybe the most obvious kind of question is are you able to sort of in a way indirectly answer this thing too? But are you able to answer that directly for how Zora is applying all these principles and sort of what does that look like in terms of how you improve the protocol moving forward?
00:20:09.010 - 00:20:51.280, Speaker A: Yeah, I guess we kind of use this as our launch checklist. We one way deploy everything. We do not have protocol wide fees that are turned on. Any upgrade has to go through basically a new deploy. So, yeah, I think that we kind of hold ourselves to a pretty high standard, which can make our build process pretty painful sometimes. But yeah, we basically use this hyperstructure checklist as part of our launch checklist in the essay as well, which I can give a link. I kind of use Zora as like an example against each of these things as well as uniswap as well because I think that's the most prominent and working example of one of these types infrastructure today.
00:20:51.280 - 00:20:52.960, Speaker A: Nice.
00:20:53.650 - 00:21:13.290, Speaker B: Well, I don't think I have anything else. It'd be great if we can get a copy of the slides. And what we'll do is that because we are a little bit ahead of schedule, we will take a short break and we'll just kind of turn on some of the amazing lo fi beats for everybody to enjoy. And then as we're ready with the next speaker, we can resume with the rest of the summit.
