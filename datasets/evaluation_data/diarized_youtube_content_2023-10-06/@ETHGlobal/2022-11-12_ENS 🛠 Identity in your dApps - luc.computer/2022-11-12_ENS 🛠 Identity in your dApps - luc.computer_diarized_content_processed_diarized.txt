00:00:06.330 - 00:00:25.170, Speaker A: Hello there. Let me see if I can grab this. And there we go. I'll hold it. I think we'll figure it out. Can everybody hear me? Sweet okay, so good morning, afternoon, or evening, if you're watching this from the recording. But to those of you in the room, I suppose it's just afternoon.
00:00:25.170 - 00:01:11.826, Speaker A: Um, I am zero x two two five F 137127, D, 906-778-8314 BC, seven FCC, one F 3674. If I make a mistake, correct me. Six A, three C, three B, five, otherwise known as loop computer or loosens E if you want to go the OGE ENS way. And that right there is my too loud. The core premise of ENS ENS, the ethereum name service, is simply the ability to convert human readable names, like Nick, ETH. I should have probably full screened this into machine readable names, such as zero XB eight, C two, C two. Okay, I will I'll cut you the pain.
00:01:11.826 - 00:01:32.858, Speaker A: All right, this way. And obviously backwards. Sweet so ENS allows us to turn the general DAP experience that would look like this. Right? This is my zero x two two five, F 1373. You know the drill to this luke computer, my DNS name. I've been clicking on the wrong slides. So this one's behind.
00:01:32.858 - 00:01:59.970, Speaker A: Lovely. It's going great. Okay, so if you're here and you already know ENS, I hope most of you do, you might want to keep watching because I do have some cool stuff to show in no particular order, and that is going to be chaotic. Let me run you through the agenda. First, I'm going to talk about what ENS actually is and how the core logic works, all the fun stuff. Second, I'm going to be talking about resolvers and the DNS integration. There we go.
00:01:59.970 - 00:02:28.726, Speaker A: That went great. The DNS integration for all sorts of fun stuff you can do with that. Records and resolvers and essentially how text records work, storing data on chain off chain resolving and all that fun stuff. Cross chain interoperability, like I just mentioned, how to implement it. And last but not least, if you are new here, how to register your first DNS. Sweet before I do all of that, I want to point out some milestones. We're absolutely thriving.
00:02:28.726 - 00:02:57.314, Speaker A: We've currently got 2.75 million names registered, which is ridiculous over 506 integrations that I am in group chats with. So I think that kind of explains my suffering. But there's a ton more. And if you do end up building a super cool project and you end up scaling and you end up needing my help beyond these walls, then feel free to send me a message. We'll start up a group chat and I'll happily help you out. And 593,000 different people who have their own ENS name.
00:02:57.314 - 00:03:36.594, Speaker A: Sweet. So let's look at another practical example, right, because we saw the lovely one I showed earlier, and you're probably all familiar with DApps, but let's do it anyway. This is tic Tacso, a stupid DAP that I built a hackathon project back in two, three months ago now in Paris. I had a bit of time left over and I said, screw it, I'm going to build TicTacToe and solidity because I'd like to not sleep tonight. And yeah, it might not look good, but it works. And if you look right there in the top right corner screen is too much brightness. You can see V three X E, which is back then, my ENS name, ENS, by the way, lets you swap between what currently your primary name is.
00:03:36.594 - 00:04:06.694, Speaker A: And I'm pretty bipolar, so I keep switching between V three X studied, loop computer, and looseman studied, but all of those will end up at my address. So that's me right there in the corner. I should have probably zoomed in earlier. So, yeah, now, your favorite DAP obviously has all this cool stuff, and you go, okay, is that all ENS does? Lame, but bear with me here. You want to invite your friends. So you press Create Game, and then right there, you can type the address or you can type their Ensname. So you type in Nick ETH, because casual flex.
00:04:06.694 - 00:04:34.958, Speaker A: I played a game of TicTacToe with the founder, and right there, his name, his profile picture, and his address show up and you can verify it's the right Nick ETH. You're not getting rugged. It's a tic TAC toe game. Who cares? And then you press Send Invite, and then he accepts. And then you can play TicTacToe with Nick ETH. And regardless of my shitty tic TAC toe skills, it's not my strong suit, okay? I'm a developer. This is the core idea of ENS, right? We have my name there, his name there, and our profile pictures.
00:04:34.958 - 00:05:34.550, Speaker A: Sweet. So what you saw there, the simple DAP, decentralized DAP shows just one of the things ENS does, which is usernames and profile pictures, but we do a fair bit more. So this is me, looseman ETH again, looseman E, three X E, all the fun stuff, but it stores a whole ton more than just my cool profile picture and my address. Nick ETH is a better example because I don't have half of these set up stores. His ETH address stores, his BTC address, his Doge address, his Litecoin address, his website, his email, his discord, his Twitter, his Reddit, his telegram, his GitHub, and who he delegates to, or at least his delegation page, if you want to know more about him and being part of the Dao. And it's just a forum link, who cares? And obviously, most importantly, the Avatar, and specifically this is in a specification to link towards his NFT that he uses as his profile picture. But this could be a simple HTP URL, this could be HTPs, this could be on our Weaver, this could be on IPFS.
00:05:34.550 - 00:06:18.070, Speaker A: So how does all of this work? ENS is pretty simple. We have a couple core contracts and they work as follows. The core contract, and this is specifically the ETH section, stores the following information the name loosens e, the registrant, the person who is currently in charge of the domain. So that is me, zero, X, two, two, five, F 1373. Okay? Yeah, when it expires and the current resolver. So a smart contract address that stores the rest of the information, the avatar, the telegram, the discord, all the other fun stuff and the ENS delegate link. The only difference between a ETH name and a DNS name or a subdomain is simply we don't store the expiration date because it's handled externally.
00:06:18.070 - 00:06:44.826, Speaker A: So it stores that for Nick ETH, for Vitalik ETH, those are real records and for everybody else. So what you do is you go over there and you're saying, hey, I'm looking for Nick ETH. And then the smart contract says, all right, here you go. Nick ETH registrant, expires and resolver. And then what you do is you look at the resolver, or at least the tooling does this for you. You don't have to put any effort into this. It grabs the resolver address, it goes to the contract because it's a smart contract.
00:06:44.826 - 00:07:13.318, Speaker A: And the smart contract then gives us back all of the fun information we were looking for. But this is a little cooler than it seems. This is the public resolver. It's a simple smart contract that has a key value pair and key value pair storage. And you can edit your records in there. But this could be your own contract, which means that you can write your own logic and you can change your profile picture depending on the day of the week, the current balance in your account happy face. Sad face.
00:07:13.318 - 00:07:40.190, Speaker A: Very sad face. And whatever else you'd like. And a ton of other cool stuff. So this allows us to do all sorts of fancy things. I hear you say, like, this is cool fun, but we're still stuck on ETH main net. I want the new stuff, the shiny stuff, the fancy things, right? I want to build on all these things. I want to play my hackathon prize bingo, and I want to tick all the boxes.
00:07:40.190 - 00:08:08.970, Speaker A: So do we. Well, not the hackathon prize thing, but playing with the fancy things, right? So I've got good news for you. You can, right? You can play with all of the fancy things. We can play with optimism, we can play with polygon, we can play with galosis, you can play with whatever the hell and off chain. The way we do this is using a spec that was written by a combination of people, but one of which was Nick, our founder. And it's the cross chain interoperability protocol. I misspelled protocol.
00:08:08.970 - 00:08:24.526, Speaker A: Shoot. This presentation is old. Oh, work me. Okay. Well, CCIP for short. Let's just call it CCIP and forget about the typo. So the cross chain interoperability protocol protocol allows us to do all sorts of cool stuff.
00:08:24.526 - 00:09:04.182, Speaker A: It allows us to fetch data on chain whatever chain you'd like off chain on a roll up on a layer. Two using zero knowledge, using Https if you really fancy and you like April Fool's Day jokes from the IATF using HTCPCP, the hypertext coffee pot control protocol using your toaster or using anything else, which gives you a lot of control. It's pretty cool. So how does it work? Thank you for photographing my face. This is going to haunt me, isn't it? So this is CCIP. I would recommend photographing that one. And essentially, this is a simple example of what Ethers does when you store something on optimism.
00:09:04.182 - 00:09:35.166, Speaker A: So the way that it works is the client library reaches out to ETH Mainet, grabs the resolver from the ENS core contract, goes to whatever smart contract is attached to it. In this case, zero x 49, seven, whatever. And the smart contract just throws a cross chain interoperability error, or in this case, off chain data. It says, this is optimism, this is the contract on optimism, and this is the call data you should give to optimism. And then optimism will tell you where to go next. So then it goes back to Ethers. Ether says, oh, shoot, this transaction failed.
00:09:35.166 - 00:10:09.054, Speaker A: It was an off chain data error, okay? And then it reaches out to your HTP server, to your toaster, to your coffee pot, or to optimism, which all scale just as well. It goes to optimism, your optimism smart contract, and decides what to do with it, returns your avatar, returns whatever other records you'd like to set, and voila, it works. Zero extra effort on your part, might I add. So all of this is happening behind the scenes. All you do is use ENS name in your React app and it magically works. It's phenomenal. It's also half of my nightmares, but I make sure that it's phenomenal for you guys.
00:10:09.054 - 00:10:40.454, Speaker A: So I recently built a cool example of this using off chain lookup. I'm running an Http server. It connects to Twitter. It simply does some lookups and it has some heavy caching on it because I'd not like my API key abused. It's called Twitter NGO. It's a web two domain that I ported over using DNS SEC. And the way that it works is you just go to any Twitter username, twitter NGO, the ENS smart contract on mainnet or previously on Gorely will then tell you here's error off chain data.
00:10:40.454 - 00:11:04.550, Speaker A: Lookup, this is Luke's server address. This is the data you need to feed it. And then my server will start running. Reach out to Twitter, fetch your Twitter data, get your username, see if there's an ENS name in there, do resolution there, and then return your address, your profile picture and your description. And then eventually you get something like this. So you go to Nicksdjohnson, Twitter NGO, and then everything magically loads in the background. And then ta DA.
00:11:04.550 - 00:11:27.640, Speaker A: So now we have his address, his URL, which links to Twitter, his avatar, which is his Twitter avatar, and his Know. I don't know. I thought it was a fun use case. So this works in almost all the libraries out there. Ethers, Wagme in SJS that was supposed to be on the same slide. I don't know what happened here. My presentation is going great.
00:11:27.640 - 00:11:57.022, Speaker A: Ethers, Wagme in SJS, web three JS web three J k ethereum web three Pi, Go, ENS whatever library is on this list. If your library is not on this list, message me and I'll add it next time. But all of these support CCIP and it's super cool. So how do you use this? Right forward resolution, super simple. This screen doesn't like my cool colors. I guess it's too white contrast. But for Ethers, you simply just say Provider resolve name.
00:11:57.022 - 00:12:14.402, Speaker A: You give it v three x ETH and it will output you. Zero x two two five f one three seven. Okay, you get the drill. And with Wagme, the react library hooks. For Ethers, you simply do UCNS address, address v three x e or the actual address, and it will return you with the address. Sweet. And you can also do reverse resolution.
00:12:14.402 - 00:12:51.470, Speaker A: So if you have the address, you can turn it into a name and a profile picture using Ether's lookup, address and wagme's use ENS name or use ENS avatar and a bunch more. Obviously, there's so much cool stuff to cover, I haven't even talked about subdomains, but that's a whole other rabbit hole. And you can build resolvers to control subdomains. And we have a new thing coming out, the Name Wrapper. That's essentially a resolver contract that allows you to sell subdomains as NFTs and control them that way. So you can transfer them to people and make it fully Spec compliant. If you'd like to find out more, you can check the documentation.
00:12:51.470 - 00:13:09.814, Speaker A: This is Docs ENS domains. I technically maintain these. They need another cleanup, but that's all right. If you have any questions outside the docs, just come to me and then I'll happily help you out. Now, if you're sitting here and you're going, this is kind of cool, I don't have an ENS name. Seems pretty cool. I'd like one.
00:13:09.814 - 00:13:33.166, Speaker A: How do I register? You can always come to me, I'll happily help you out. Or I'll even give you one. But otherwise you can use the ENS manager or any of the other cool things. So there's the ENS ferry. It's an application written by one of our community members. It allows you to give names at lower gas costs to new users. So instead of having to purchase the name, then change the records to the other person's address, and then transfer the thing and then get them to set it as their primary name.
00:13:33.166 - 00:13:56.774, Speaker A: You can just do it in one transaction, which is super cool. Still two, but costs less gas and it looks nicer. It uses the new design system. You can do it directly from Rainbow. Rainbow. The mobile app has a built in coinbase hands out subdomains of CB ID because again, any valid DNS name is a valid ENS name and you can verify them using DNS SEC. If you just enter your.com
00:13:56.774 - 00:14:26.666, Speaker A: or IO or whatever in the ENS app, it will magically tell you all about it. Lens if you have a lens profile, add XYZ behind it, lucemans Lens XYZ and magically it'll work as your ENS name. Argent does it with Argent XYZ, there's a whole bunch more cool stuff. There's also some alpha. I'm going to drop again. Yay, we have the new Alpha Manager coming out soon. TM it's fully mobile compatible and we have a whole new design system for it because our current Manager is slightly outdated.
00:14:26.666 - 00:14:52.426, Speaker A: So we've put a ton of effort into this one. It has cool animations, it does Caching, it does all sorts of fancy stuff, and it also works on desktop. And if you want to test it out and you happen to have Gorly ETH, then you can check out alpha ENS domains. There we go. My slides are also on my website, luke Show, so can't be that bad. Alpha ENS domains I'll say that one more time. So the Events Manager in its current state, let me walk you through it real quick.
00:14:52.426 - 00:15:26.914, Speaker A: So this is the ENS Manager. I know the alpha one looks cooler. App ENS domains, right? Seems pretty self explanatory. What you do is you click the box right there, you type, find your name, alice ETH, if that was hypothetically still available, and then you go to register your name. So the way uns names are registered is there are five USD a year, as long as it's five characters or longer, and then there's gas fees, et cetera, depending on the network situation. So you might want to register for multiple years because it might save you some gas. I think currently it's not too bad, but it used to be pretty bad because Ethereum so yeah, you register your name.
00:15:26.914 - 00:16:08.914, Speaker A: It does it in two transactions. The way that works is it uses a Commit Reveal system, so it hashes your name doesn't really matter, but it does a cool stuff, so it prevents people from front running you. So if there's anybody between you and the ENS smart contract, whether that is Wallet Connect, whether that is Infura or Alchemy, or your fancy RPZ provider, or a JavaScript Library, or your ISP, they're not going to know what name you've registered until you've already gotten the name, which is super cool. You wait 60 seconds because of the Commit Reveal situation, and then you do the second transaction, send over five USD worth of Ethereum, and then you have your name. This is the new Manager already. It looks super cool. I'm too excited about it, so it looks cool.
00:16:08.914 - 00:16:31.178, Speaker A: You sit there you look at this and you go, okay, how do I set my avatar? Right? It's not that bad. This is the old manager. You go over to the fun add or edit your records button. You click it and then you go to the avatar, which is like down here somewhere. You set it. In this case, I set it to an IPFS link from NFT storage and then that's it. You set your profile picture and you're done.
00:16:31.178 - 00:16:44.634, Speaker A: Sweet. One last thing, and all of you are probably going to harass me for this one afterwards, but that had to be in the presentation. I'm Luzman studies v. Three Xteath. Luke computer. Luke contact. Whatever.
00:16:44.634 - 00:17:01.474, Speaker A: Luzmanznl on Twitter if you have any questions. I'm also hacking. I'm upstairs at the moment. I'm building a whole cool thing, or at least planning on working on. I don't know, we'll figure it out. So, yeah, keyboard go burr. If you have any questions, feel free to reach out to me.
00:17:01.474 - 00:17:29.146, Speaker A: I'll happily take a slight break, walk around and answer any questions you might have. If after this you go, oh my God, I really wanted to build something with ENS or I didn't get it included in my DAP. Just reach out luke contact. It's a website, it's an actual domain. My Twitter's on there, my telegram's on there, my email, my phone number. Yes, my phone number is on the public Internet and my address, yeah, I have regrets. Reach out to me and I'll happily help you out.
00:17:29.146 - 00:18:00.200, Speaker A: Happy hacking. That picture is off the screen. It and if you have any questions right now, you can ask them as well. Go for it. Yes. Sweet. So the way that it works is if you go to the docs, we have a template smart contract, also on GitHub available.
00:18:00.200 - 00:18:34.110, Speaker A: And essentially there's just a smart contract function, and all of the functions get called with the name the person is trying to look up. So if I write a smart contract for Twitter, NGO, or I did it on chain, what I'm doing right now for verify ETH, what you can do is the smart contract will just get called and the function will be called with hello, verify ETH or Foo or whatever. So the smart contract gets it as a parameter. You write your logic on how to reply to that and then the library takes that in. Hope that sort of answers your question. Sweet. Awesome.
00:18:34.110 - 00:18:44.300, Speaker A: Otherwise I'll happily help you out. Awesome. Any others? Speak now or forever. No? Okay, you can always ask. Sweet. Awesome. Thank you.
