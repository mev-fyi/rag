00:00:29.580 - 00:01:04.506, Speaker A: Hello. So my name is Warren. This is my colleague David. We are at Street Labs today. We are presenting something called the other Submarine, which was just for web3. We're really excited about it. It's a collaboration between Columbus Dow, which is a project that's a collection of a bunch of people kind of involved in the Fendora ecosystem, fendora foundation, and then also Discrete Labs.
00:01:04.506 - 00:01:34.774, Speaker A: So Discrete Labs is about 60 people across five different continents. 80% engineering, design, product, so they can build stuff. Really excited about the application and just a few disclaimers to set the stage. So this is an MVP on testnet. We literally just finished this basically yesterday. It's going to be super buggy. We're going to be crossing our fingers that it works.
00:01:34.774 - 00:02:07.342, Speaker A: It's running on Robson. So there were some issues yesterday, I think, with infuria, as everyone probably knows, there will be dragons, I'm sure. And then obviously every project has trade offs, so there's some trade offs here and we can kind of walk through those a little bit. There may be some trigger words. If they're trigger words and you see them just breathe, it'll be okay, we'll get through it. But we're all in this for the long haul. And then there are some limitations.
00:02:07.342 - 00:02:49.550, Speaker A: So this DAP is actually only goes one direction. The fully complete version will go both directions, so we can kind of explain what that means a little bit. Also just to give you kind of a high level overview of what the Fendora multi chain architecture looks like. So Yellow Submarine is built on top of Fendora, which kind of serves as the primitive for a lot of the cryptography. Fendora is a layer one EVM compatible blockchain with UKB privacy. There's what we call native chain, which has UTXO and Staking. There's a query server, UTXO, RPC, and then a Z library.
00:02:49.550 - 00:03:19.426, Speaker A: The Z library has a lot of cryptographic primitives in it. Fedora native chain runs bulletproofs, so it allows for private transactions. It also allows the ability to issue private tokens. So you can think of, I think, Vcash shielded assets kind of has this in test. This is actually live on main net. So Fendora was launched in April, the main net was launched in April 2021, so it's been running for about a year. We've been through stability phase, which is super painful.
00:03:19.426 - 00:04:02.994, Speaker A: We're emerging out of stability and finally getting into a phase where interesting things are happening. Fendor runs tenerment consensus and then over on what we call the Fendora smart chain. This is actually our EVM implementation. So we implemented the sputnik EVM and rust. We're a big rust shop, so any rust developers shout out, definitely love to collaborate with you. So this provides the runtime. There's an account module, of course, EVM, RPC, and then the actual storage layer is actually shared by both native chain smart chain, so it's middleware and database.
00:04:02.994 - 00:04:33.518, Speaker A: And then there's an RPC call. So what actually binds these two together is something called Prism. Prism is a trustless swap protocol that can actually interconnect or intra connect the Fendora native chain with the Fendora smart chain. And this is one of the perimeters that actually allows Yale submarine to work. So that being said, we're going to offer up a toast to the demo gods and hopefully this thing will work. And my colleague David's going to run through the demo.
00:04:33.684 - 00:05:32.018, Speaker B: All right, let's give it a shot. All right, so just a quick explanation of what we have here. So what we're trying to do with yellow submarines is to transfer ESC 20 assets from one EVM compatible chain to another without while making it pretty much untraceable to break the link somewhere in there so that it can't be actually traced to the source EVM chain and source address. So in this demo, we're going to do from BSE testnet to Robson. And we're just going to use this BC 20 asset that we've deployed on both sides. So it's just a GLD, our own version. So we're going to go from there.
00:05:32.018 - 00:06:04.330, Speaker B: So let's just do and for the receiving address. So I have both accounts loaded here. This is the account we'll be using as the source. And this will be the destination address. So just going to go and copy. Okay, I'm ready to go. And there was this connect your wallet step, of course, before this, but I already did that.
00:06:04.330 - 00:07:05.020, Speaker B: So what's going to happen first is and then we'll show a diagram of this to kind of better walk through. But basically what's happening here is we're granting the permission for the GLD year 20 contract to spend 1.5. So that this is a Columbus contract. Columbus contract is the main smart contract that is going to be providing all the logic for this operation. So we're allowing it to spend 1.5 of our GLD. So this gets approved first, and then after this, you'll see it'll ask me to actually just do a deposit.
00:07:05.020 - 00:08:13.560, Speaker B: So this deposit transaction is going to invoke the Columbus Bridge. And then the bridge actually talks to the Columbus contract to go ahead and do the transfer from the GLD contract to itself and thereby locking the funds. And then while this is going, once that happens, actually, what is going on in the background is should I cut to the diagrams or not yet? Let it go. Basically, it's going to start the process of doing the actual cross chain bridge. So by the time we get to step two, the assets will have already crossed over to the Hydra EVM and then over to the Hydra Etxo. And then that'll be where step two kicks off. Bar to a bar.
00:08:13.560 - 00:08:32.040, Speaker B: There we go. Cool.
00:08:32.110 - 00:08:32.600, Speaker C: The demo.
00:08:32.670 - 00:08:33.930, Speaker B: God, yes.
00:08:34.380 - 00:08:36.970, Speaker A: Praise. Yeah.
00:08:37.500 - 00:09:07.540, Speaker B: So bar to a bar. This step is where we turn a UTXO into an anonymous asset using our Plunk implementation and disclaimer here. I'm not a cryptographer he didn't make it. So I'm not going to be able to explain to the depths what is going on. Yeah. So Bar stands for blind asset record. It's the same as etxo.
00:09:07.540 - 00:09:54.560, Speaker B: It says blind but it is fully public. And then an Abar is an anonymous blind asset record. So that's what those stand for. So we've successfully converted the Etxo to a private asset. So anonymous asset here and what we're doing now is consuming the A bar and then turning it back into a normal UTXO and that is successful. So here basically we're crossing the chain back to Robson. Well, not back to Robson, forward to Robson.
00:09:54.560 - 00:10:33.820, Speaker B: And the last step here is the check. So there are a few steps in between here, the completion and there. So we're not going to be able to see the full. Yeah, so deposit interesting. This is where the bar to A bar happens. So here we take the do you guys see that? Barely. All right.
00:10:33.820 - 00:11:22.450, Speaker B: Okay, so what's happening here is we take the original input and then consume that and then turn it into a commitment basically. And then that'll be the A bar. And then this asset type is basically it'll show you our custom asset type on the Thunder chain. It's a GLD token, pretty straightforward. And then second transaction we'll see that A bar was actually consumed in order to produce a normal UTXO. So this one and then.
00:11:25.080 - 00:11:25.728, Speaker A: Cross chain.
00:11:25.744 - 00:12:14.950, Speaker B: This is basically invoking the smart contracts for the bridge and what is actually going to transfer over and target network check. So see if it actually showed yet. It's probably not there yet because what's happening here is actually it's crossing the bridge. There's the relayers that are doing the proposals to make this transaction. Billable on the roughston chain. And also on that side there's a bunch of smart contracts that need to execute in order to release the GLD on that side of the bridge to the destination address. So it'll take a little time, but we'll keep this going some point we'll see 1.5.
00:12:14.950 - 00:12:27.246, Speaker B: Not done yet. Yeah, the interface, there should really be another, but so that one would go for a long time.
00:12:27.268 - 00:12:36.020, Speaker C: Just to be clear, you are directly transferred like Google. That's right, you are not going to.
00:12:41.750 - 00:13:31.904, Speaker B: Cool. Basically the really simple user version is we connected the web, three wallet, selected the source and destination networks and click Go. Pretty much that was it. The more detailed version. Let's really kind of dig in a little bit into the inner workings. So keep in mind though, we literally just finished this. So the workflow probably isn't, the diagramming probably isn't like 100%, but it is very close, so it'll give a great idea of what's actually going on.
00:13:31.904 - 00:14:32.900, Speaker B: So we're going to start from the green bubble, which is the source address. And this is when we start to interact with the actual front end. So the front end firstly asks for approval, like we saw for the Columbus contract down here, to spend a certain amount of USC and then spend it to itself. And then after that is all done, the front end will call deposit. So in this deposit we include a bunch of metadata which includes the recipient ID and of the recipient Etxo address, which is generated in this step, and then also the destination chain and then the amount and the asset type and a few other things. And it invokes this bridge contract. So the bridge contract will actually call the columnist pool contract to go ahead and lock up those funds.
00:14:32.900 - 00:15:25.984, Speaker B: And then we have this bubble here to indicate that, yes, we did have to provide liquidity on both sides of this transaction. Of course, in the future this could be a liquidity incentive contract of some sort, but right now we just directly provided to that contract. So to make it work. Yeah. So after it's confirmed that everything is all the funds are locked up and we go to, this contract will actually emit an event for the relayers to pick up for the bridge. And after voting proposal stuff, we'll do an execute proposal. And this bridge contract, this is the Fendora site now, by the way.
00:15:25.984 - 00:16:15.430, Speaker B: So on this side we'll execute that proposal and it will in turn invoke our Columbus relayer contract because Prism plus plus is a generic contract. So this helps with that interaction. Basically what happens here is there are Mint transactions that are placed in this Prism contract. And at the end of every block, the Fendora account ledger will check that and consume those Mint transactions. So those Mint transactions, once it's consumed, it will mint those assets on the Fendora UTXO. So that's how it makes it over to the Fendura native chain. Okay.
00:16:15.430 - 00:17:07.410, Speaker B: And then here is really the meat of it anyway. Step ten. So this is where bar to Avar happens. The blind asset record becomes anonymous, blind asset record via a variety of cryptographic commitments. So for example, actually I had a list, but they're not here. If you're interested in exactly how this works, it's readily available in code to look at. So this is already live on testnet live on our, what was it? Yeah.
00:17:07.410 - 00:18:19.332, Speaker B: So and then in the middle here we have the anonymous wallet. So basically all the parameters that came from creating this A bar are stored in local store by the front end because we're going to directly use it to create this transaction number eleven, which should be up here in this arrow in order to convert it back to a normal exit. So during this process, basically right here, bar to a bar, we know you can trace where the A bar came from based on the bar. There's a link between that and cryptographic proofs to prove that that's where it came from. But at this step number eleven, you actually don't have any way of knowing which Avar was consumed to create the bar. So that's where the link is broken. Makes sense.
00:18:19.332 - 00:19:12.730, Speaker B: Okay, cool. Yeah. So then we start the process to go to routestem, basically. So we burn the Etxo call Prism plus plus and the contract will begin the process to call the relayer contract and the bridge contract in order to send this asset over to the second EGM chain, which is awesome. So there's the relayers that both propose and vote and then execute the proposal for this particular transaction. And what happens at the end, really is that this Columbus pool contract that already has GLD in it because we funded it previously, will release GLD to the destination address.
00:19:14.380 - 00:19:28.960, Speaker C: How do you make sure the steps ten and eleven are bound to each other? They're not because it happens. Yeah, match them together, right?
00:19:29.030 - 00:19:33.312, Speaker B: Yeah. Okay, I would get the question.
00:19:33.446 - 00:19:51.090, Speaker C: So maybe go back slide and we can see what is actually basically bar to a bar and a bar to bar. You can just listen and you will figure out the link between first fendora UTX 1 second.
00:19:51.700 - 00:20:26.810, Speaker B: Yeah, that's a great question. So the question was because the steps ten and eleven have an equipment succession, it's pretty easy to relate them or infer the relationship. Yes, that's true. But that's because right now there is actually no transactions happening of this type except for via this application. Right, but if there were really just a few more, then it would be actually like adding a random delay or.
00:20:34.840 - 00:20:45.720, Speaker C: It will be some type of asset. So you are not enforcing, you are not mixing the same asset, you are mixing different assets, different values as well.
00:20:45.790 - 00:20:46.810, Speaker A: So you can.
00:20:55.050 - 00:20:56.680, Speaker C: Same amount.
00:20:59.680 - 00:21:17.636, Speaker B: Yeah, that's true. But you can see maybe it wouldn't take that many transactions at the same time to do that of the same type. If there were ten and then all ten go somewhere else, then you can only say that these ten inputs somehow made it to the other ten.
00:21:17.738 - 00:21:19.796, Speaker C: But those ten have to be the.
00:21:19.818 - 00:21:20.390, Speaker B: Same.
00:21:24.520 - 00:21:42.494, Speaker C: Amount and same. You have one in ten chance that you will figure out which one it is. But even if you have ten choices, you can probably check out all the.
00:21:42.532 - 00:21:43.120, Speaker B: Ten.
00:21:45.670 - 00:21:53.830, Speaker C: You will need to do this multiple times and take some amount of.
00:21:56.750 - 00:22:15.320, Speaker B: Yeah, that is completely true. Yeah. Cool. Okay, so next? Yeah.
00:22:17.310 - 00:22:39.982, Speaker A: All right, so obviously we're at developer conference. So the question is how can you build this? So our initial goal was to finish the DAP, build the SDK and rattle the documentation. We basically got one of those three done. So we finished the DAP. It's working. The team is quickly putting together an SDK. There's going to be a follow up in a week or two.
00:22:39.982 - 00:23:15.952, Speaker A: So we're going to open up the SDK for developers to be able to build their own versions of this and be able to fork experiment and there is an existing toolkit. It's basically everything is built on open source Fendora GitHub.com Fendor network. All the repos are there, everything we use is all there. It's kind of a patchwork of repos. So you would really have to know exactly what repos and how to use them in order to actually build this. So we're going to basically abstract all that away and build the SDK on top of that.
00:23:15.952 - 00:24:30.930, Speaker A: So that's coming soon, but definitely stay up to date with the project and we hope to see kind of built because we think value proposition also. So not just doing asset transfer or like actual private swaps, but you can build a whole bunch, like a whole new category of Daws that are all private, including vaults, dark Pool, DEXes, money markets, NFTs, Asset Pooling dows as we're experimenting and there's more traffic on the network, we anticipate that there'll be more of these. This is all kind of building towards people are calling it private DeFi or Prifi. We think that this could help unlock a lot more capital that's kind of sitting on sidelines that they don't want to participate in market because it's too transparent. So I think privacy can help to unlock and kind of help crypto meet more mainstream. So again, my name is Warren, CEO of Discrete Labs. David our CTO.
00:24:30.930 - 00:25:26.916, Speaker A: This is a collective project kind of under the Columbus Dow. There's a lot of different people all over the world are contributing to this in various different time zones. It's all being built again, entrepreneur as primitives. So you can kind of check out all the projects and follow everything yelp submarine is going to be because we just finished everything, it's going to be updated on GitHub and we'll share everything out so we can expand the network of this. But we do think this is one of the first practical DApps for actually leveraging zero knowledge for DeFi. We recognize there's lots of other projects that are actually building the Zkvm and everything, but we didn't want to wait, we wanted to see something and push it. So we're actively contributing.
00:25:26.916 - 00:25:45.710, Speaker A: We have a pretty big cryptography team that's constantly working on trying to advance the state of the art for zero knowledge. And that's pretty much it. I don't know if we have time for questions, probably have time for a couple of questions.
00:25:51.020 - 00:25:56.120, Speaker C: Like Bright File, how do you compare it with Dark file?
00:25:56.720 - 00:26:56.736, Speaker A: So the question is, how do you compare the project Five with Dark Five? I'm actually not familiar with Darkfi, but I think okay, yeah, there's obviously we think that privacy is critically important and we're supportive of any project that's building out privacy. We want to collaborate and want to contribute. In the best case scenario, every project has optional privacy and we think that that would be a big win for the industry and it will help to increase more mainstream adoption. If you look at your historian the internet before when browsing traffic, everything was very public. There wasn't a lot of use cases. It was hardly new payments, hardly new commerce, when actually you could start browsing in a way that kind of unlocked a lot of lot more use cases. So we think that crypto is going to do the same thing.
00:26:56.736 - 00:27:00.050, Speaker A: So. Yeah, I'm not sure. I definitely want to check it out, though.
00:27:04.590 - 00:27:09.370, Speaker B: I have a question about what's coming next for pandora.
00:27:09.710 - 00:28:12.378, Speaker A: Is the yellow submarine the first? Yeah. So that's kind of a good question. So kind of going back to, I think, this slide, the question is, what's next? So columbus dow is going to probably increase in size in the participants. And I think on the roadmap, they have things like private vaults, dark pool, DEXes to prevent front running attacks, private money markets. Once you start to increase the level of privacy in crypto, it unlocks a lot of new behavior, and actually it helps to build more fair markets as well. So without bots front running, you can actually realize true price, true value. And we think that's super important thing with NFTs, 80% of the art world is actually private auction.
00:28:12.378 - 00:28:46.920, Speaker A: Right. So NFTs are really, obviously really popular. Everyone likes to show their portfolio, but we also think there's a lot of trapped capital right now wants to participate in the market. Especially like high network individuals that want to be able to deploy capital without revealing actually how much they paid for a punk. Even though everyone likes to brag about how much they paid for a punk. We think a lot of people don't want that, but that's why we think privacy should be optional. Right.
00:28:52.270 - 00:28:52.682, Speaker B: Cool.
00:28:52.736 - 00:29:00.060, Speaker A: Well, thank you very much. Yeah. Check us out again. Follow the projects here and appreciate. Thanks for coming out.
00:29:02.430 - 00:29:04.640, Speaker B: Thank. Discord here if you guys want to.
