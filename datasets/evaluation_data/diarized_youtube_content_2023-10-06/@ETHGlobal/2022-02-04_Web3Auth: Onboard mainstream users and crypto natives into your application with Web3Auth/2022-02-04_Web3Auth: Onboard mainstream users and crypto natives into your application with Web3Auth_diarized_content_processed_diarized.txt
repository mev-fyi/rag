00:00:00.090 - 00:00:19.870, Speaker A: And reaching out to the team in Web Three afterwards in a discord channel to keep this conversation flowing. And I believe he'll be taking questions throughout the session. So post them in the chat as we're going along and you'll have your voice heard. Really glad that you're able to join us, Shai. I'll give you a second to introduce yourself and kick it off the floor is all yours.
00:00:21.170 - 00:01:05.298, Speaker B: Awesome. So hi, everyone. My name is Chai. I'm head of engineering at Taurus, or Web Three Auth, as we are called now. So I'll be conducting this session today. Okay? So I just want to onboard you guys onto what we do as a company and just guide you into how you can use Web Three Auth in your projects and then how you can onboard mainstream users and crypto natives into your application, okay? And we want to help you with this vision where we want to make Web Three accessible to everyone. Okay, so let me just go through this first.
00:01:05.298 - 00:02:04.062, Speaker B: Before I talk about Web Three Auth, I want to talk about the evolution of authentication as a whole in general. Okay? So authentication basically gets more complex as the need for security increases. Initially, we have simple passwords, and then we had to move to complex passwords managed by Vaults, and we also had to add two of A on top of it to bring more security. We had to add authenticator apps, and we have OTPs, those annoying SMS which you get every day. Now, in case of Web Three, we need to memorize seed phrases and a bunch of other things which go along with it in terms of how to be more secure, how to manage your seed phrase very securely, and how to make sure that you connect your wallet only to secure sites and everything. So in the blockchain space, key management is usually very hard. Okay? Over the last 30 years of technology, customers were never accustomed to manage their own private keys.
00:02:04.062 - 00:02:57.814, Speaker B: So the PGP keys and all have been existing for the past 30 years, to be honest. Okay, but the regular users never had to actually learn about them. All of it has been handled in the back end, and people were usually in general, protected. But in case of Web Three, where we own our own privacy, where we are focused about privacy, and where we own our own authentication stack, et cetera, the key management becomes a more imperative problem. Okay, so coming to the applications in the Web Three space right now, it takes around greater than ten minutes of onboarding time, and C Trace are like, for regular users. I mean, have any of you guys tried to explain what C Trace are and how they're supposed to be secured to any of your parents or grandparents? You would have had a hard time. Okay.
00:02:57.814 - 00:03:34.560, Speaker B: At least I did. And around 3.56 million bitcoins were lost in terms of just lost private keys alone. So key management and security and storing that is really hard. Okay, at Web Three Auth, our fundamental agenda is to make key management simple and secure for all users. And by all users, I mean actually everyone, including your parents, your grandma, everyone. Okay, so we have this saying that Web Three Auth is supposed to make blockchain in general easy so that even your grandma can understand.
00:03:34.560 - 00:04:17.342, Speaker B: How do we do that? Okay, so web Three Auth lets you sign in with any of your traditional OAuth providers or your own OAuth provider, let's say. For a simple example, you can have just sign in with Google to reconstruct your cryptographic keys and generate blockchain wallets for your applications as well. So I'll just go through more in depth about how this works in general. Before that, there are no more questions. How does it generally work? So web Three Auth is powered by the taurus network. Taurus network uses something called as distributed key generation. So distributed key generation works in the following way.
00:04:17.342 - 00:05:15.950, Speaker B: So a user's key is split into multiple parts, and each part of that key is stored with one node of the taurus network. So as you can see, these nodes are run by a couple of big stakeholders in the ecosystem. As you can mean, the logos are not really clear, but it's polygon ENS scale coinbase, a bunch of others, binance, et cetera. So all these nodes, basically they store a shard of your private key. And when you log in with Google or any other OAuth provider in general, all the shards are then brought to the front end and they're reconstructed in the browser to make your own private key to generate the private key. And on top of this, you can add additional authentication factors, which includes like user device share or recovery share, which is sent to your backup email, or you can just download it, a recovery share. You can also add a password, et cetera.
00:05:15.950 - 00:05:52.538, Speaker B: So all of these factors combine to form your final web Three Auth private key. Okay? So this way we can guarantee that this seamless experience is completely non custodial to the end user because at any point the taurus company does not have access to any of these shares, right? I mean, this recovery share is only present with you, the user device is only present with you, and you need a minimum of two out of these three factors, let's say, to access the full private key. Okay, I think I have some chat.
00:05:52.634 - 00:05:52.894, Speaker A: Yeah.
00:05:52.932 - 00:06:34.810, Speaker B: So it does use shamir secret sharing? Yes. I'm not sure about voltron in general, but yeah, coming to the next slide. So as you can see, the private key in general consists of, let's say, three shares, where one share is stored on your user device. The second share is reconstructed using your login service provider. Let's say it can be Google reddit, et cetera. The third share can be a backup share option or a password, et cetera. So how is it secure? So the device share can be secured by your biometrics, which uses your mobile or desktop browser biometrics within your browser.
00:06:34.810 - 00:07:14.502, Speaker B: How is the login service provider share secured? It's secured via the taurus nodes. Your login service provider is basically split across the taurus network. And let's say your login service provider is a private key, right? So it can be split across nine taurus nodes, and then each node will basically store one part of that share. Okay? You only need five out of those nine to actually reconstruct your final private key to construct your login service provider private key. And you can also have a backup share which is kept secure by your device specific authentication entropy. Or it can be just your password or some security questions or something of that sort. So all of these in tandem in generate your final private key.
00:07:14.502 - 00:07:53.198, Speaker B: Okay? This is a sluggrung secret sharing here. So at any point, unless you have access to any two of these authentication factors, you cannot reconstruct your private key. So that is why it's completely in the hands of the user and it's completely noncustodial to taurus. Okay, so Web Three Auth currently powers some of the biggest blockchain applications. As you can see, these are all the companies which use Web Three Auth in their stack. You have Binance Chrome extension. There are hundreds of products on the Solana blockchain as well zilliqa Tezos Chain, Terra Sequence, good Dollar, cash ChainSafe, and CoinDesk.
00:07:53.198 - 00:08:39.646, Speaker B: Okay, so all of these companies have used Web Three ODS key Infrastructure Management to secure private keys for their users. So what is the advantage you get so you get familiar Web Two flows for Web Three applications. So we don't want Web Three applications to be hard, okay? We don't want users to feel like they have to learn a lot of new things in order to just interact with their favorite gaming DAP or favorite Just NFT platform. They want to just have a minimal interaction with it. So if they can use a familiar Web Two point flow in the Web Three application, it would basically increase the conversion rate for the DApps. Okay? And we are the most user centric, non custodial key management in the market. And our code is entirely audited and our code is also open source.
00:08:39.646 - 00:09:23.006, Speaker B: Okay? You guys can visit GitHub.com Torus Research or GitHub.com Web Three Auth to actually look at all of our code, okay? And we've also been audited by a bunch of audit companies who had multiple audits over the years. You guys can reach out to us to actually see the audit report. We have currently more than 500 apps wallets integrated, and we have more than 1 million active keys under management, okay? It's monthly active users of 1 million. We have more than 8 million keys under management on the taurus network at this point. Next, I can just demo Web Three Auth to you guys right now unless there are any more questions right now.
00:09:23.006 - 00:10:05.146, Speaker B: Okay, so there are no more questions. So at this point I would like to take a moment to demo this. So this is one of our demo examples which we have built just for this hack. So this demo example allows you to customize and use the Web Three Auth SDK in the way you want. Okay? So right now I can just use a hosted example and connect to the taurus network of testnet and you can say that you want to connect to, let's say, Polygon and you want to use the default UI with all of the social logins enabled. And when I click connect so it shows me a modal with all of the logins which I enabled on the left. So you can just connect to Google, Facebook and all other your auth providers.
00:10:05.146 - 00:10:49.130, Speaker B: You can also do passwordless and you can also connect with an external wallet. So in case of external wallets, we currently support Wallet Connect, the Taurus Ethereum wallet which people love and use, which people are very familiar with, which is app Torudus, I mean so that and you can also connect with MetaMask. So why don't I just connect with my Taurus Ethereum wallet here? So right now, as you can see, it is using my biometrics here to log into my account. So I just clicked on Touch ID, I don't know if you guys saw that and boom, I'm logged in. So as you can see, I'm connected to my Taurus Ethereum wallet. You can see that here. And I have some USD on the polygon network.
00:10:49.130 - 00:11:31.580, Speaker B: I can just get some user info, I can click on some, send some ETH on the matic network. On the polygon network I can sign a message as you can see, I can get some details about my account and get my balance of my account, so on and so forth. The UI is also fully white labelable as you can see. I can just change bunch of that. Okay, I'll need to just connect to a different network. Yeah, as you can see you have the new white label UI and you can continue with the rest of the stuff. Okay, so I can also just do a simple login of Google here.
00:11:31.580 - 00:11:59.650, Speaker B: Yes. And I'm connected with my Open login account. Okay, this is a Web Three of native account and I can do the same stuff again, as you can see, I can get my chain ID, get the balance yeah, so on and so forth. So the entire code base for this is Open Source. Again. You can find it on GitHub.com web3 authriot.
00:11:59.650 - 00:12:55.438, Speaker B: Okay, so everyone can look at this and then go through with it. Our documentation is available on Docs web Three IO, as you can see. So, depending on your stack, if you're building a web, three DAP or a wallet, or if you want to plug in your own auth, let's say, your application already has an auth using, let's say, email password or password, however. So you can bring your user base onto the taurus network and then you can manage them with zero migration. Okay, so if you're building a web 3D app, we have a bunch of guides for you depending on the network you want to use and depending on the prodorus product you want to use and depending on the network you're targeting. Okay, so let's say if you're targeting polygon or Ethereum or binance smart chain, et cetera, depending on that, you can use one of the guides and then just start integrating. And before you start those, you can register under our dashboard to get your client ID.
00:12:55.438 - 00:13:29.738, Speaker B: The dashboard is very seamless to use and we have several, how do I say this, promotions running on the dashboard. So once you log in, you'll keep seeing more and more details about it. Yeah, let me just log into the dashboard. I think I'm already logged in here. Okay, yeah, so this is how the dashboard would look like for a regular user. So by default, you would start with your plug and play and you can create certain projects. And let's say there's a web3 demo project which I created.
00:13:29.738 - 00:14:32.386, Speaker B: I get a client ID, I would use this client ID in the application. You can also whitelist certain redirect Uris and yeah, the creating a project is just a click and then you just write a new thing, demo two and yeah, you're done. So you can whitelist more redirect Uris here and take it forward. Okay, you can read the docs here and you can also just go to our integration guide which has code which you can just indirectly start using. Okay, yeah, I see some messages in the chat. What is the chance that two addresses create from the different wallets can have same security? I mean, the probabilistic chance is very low that it's more than one by the number of atoms in the universe. Okay, so it's almost impossible, I would say, considering the current cryptography mechanisms which we have.
00:14:32.386 - 00:15:15.502, Speaker B: Do we have an on ramp or partnered with one? Yes, we do. We do have multiple on ramps in our wallets and you can actually use any of them to make sure that your users can buy with credit card. Does it work with polygon testnet? Yes, it does. I just showed you the polygon main net in the demo, but the same will work with polygon testnet as well. So for the on Ram part, I can just log into my taurus wallet. As you can see, it's just asking for my biometrics again, because I previously logged onto this device and set up biometrics. So in the top of page you can see we have a bunch of providers and all of these providers are more active depending on the region and they all have different fees and different currencies which they support.
00:15:15.502 - 00:16:04.402, Speaker B: So this top up page is also available through an API. So you can just integrate this top up page irrespective of the Web Three authorization you're using and provide a seamless experience for your users to top up using their credit cards. Yeah. So continuing with the presentation, any chance the Webjack team could work out react startup is a challenge because of the new making changes with Webpack? Not really. Okay, so I think we do have an example with the React Create React app. I'm assuming that's what you mean by the Starter kit. Yeah, we do have some examples of the Starter kit, and the Web Three documentation also suggests how to resolve those challenges with the Create React app, to be honest.
00:16:04.402 - 00:16:44.206, Speaker B: Okay. It's pretty straightforward and yeah, let me just examples here. So, as you guys can see, we have a simple plain JavaScript example here and we have a View example here, but the React example is also pretty similar. And please reach out to us on the Discord and we can help you out with any specific issues with react integration as well. Okay, I already posted some info about how to resolve that issue with the React one and I'll be glad to help out more people. And we'll also simply add a React example here. Okay? That's not a big deal.
00:16:44.206 - 00:17:18.422, Speaker B: It'll become up by tomorrow. So the basic idea is that the Web Three wallet allows anyone to log in with Google authentication, so there's no need to use the wallet password or toll seat. Yeah, that is true. You can log in with Google, Facebook or your favorite authentication provider, and you don't need to memorize any passwords or memorize any seat fails and secure them. We want to make authentication so simple for everyone that people don't need to worry about the complexity. All of the complexity is handled by us and it's hidden away from you. Okay? So you'll be secured in that way.
00:17:18.422 - 00:18:05.000, Speaker B: So, continuing with the presentation, I think this is the most important part which everyone cares about here we have three prizes for the sackathon. The first prize is around 2500 USD, the second is 1500 and the third is 500 USD. The judging criteria would be based on the viability and the practicality of the use case. At Taurus, we value the UX UI which is built, and as you guys can see, most of our products are consumer focused and we believe in providing the best UX possible for the users and making the onboarding into Web Three as seamless as possible. So this quality of UX UI built is a pretty important criteria for the judging in this case of in this hackathon. And we also obviously reward the technical complexity. Yeah.
00:18:05.000 - 00:18:42.580, Speaker B: Everyone can join us on Twitter at Web three Auth and on Discord Discord GG web3 auth and on Telegram. Okay, so please feel free to reach out to us on any of these platforms. Our team will always be active. I mean, we work in different time zones, so at least one of us would be available in your time zone to help you out with your issues during the hackathon and yeah, expecting lots of integrations. Continuing with the messages here. Yeah, I think that's it. So I think I'll just open the floor for any more further questions which any of you guys may have before we can wrap this up.
00:18:49.510 - 00:18:52.946, Speaker A: It thank you. This has been excellent.
00:18:53.138 - 00:18:53.782, Speaker B: Yeah.
00:18:53.916 - 00:18:55.560, Speaker A: Anyone have any further questions.
00:19:02.430 - 00:19:37.940, Speaker B: Right now? The sessions work based on the tab which is open. Okay. So we rely on session storage to determine the session of a user. Yeah. If the tab is closed, usually the session is lost and the user will have to relog in again. If you're having difficulties integrating Web Three Auth with React yeah, you can just reach out to us on the Discord group, which is set up by the brilliant team at Rotoweb Three and E Global. So you can just reach out to us on Discord and then either I can or people of my team can definitely respond to all of the issues that you have.
00:19:37.940 - 00:20:04.960, Speaker B: And does Web Three out allow us to get to users at the rate Twitter in order to use it on the page? It depends, actually, if the user is willing to share that information with you, you'd be able to get it if the user declines it, of course you can't. So it depends on the user's consent. Yeah, we do have an API for that. Perhaps an office server. 20 minutes for React folks, auth session context. Yeah, sure, we can do that. Definitely.
00:20:04.960 - 00:20:38.780, Speaker B: We can most likely create a small video going through the React integration and just putting that out there. And we'll also definitely add a sample to our Web Three repo. Okay. As you guys saw, the previous sample is available. The host sample is available at demoop Web Three IO, and it's also available here in the View app here. So the React one would also be like, very similar, but we'll definitely add include one. No problem.
00:20:38.780 - 00:21:02.350, Speaker B: Any other questions, guys? I see a lot of great questions from you guys. Oh, by the way, did I say that the model is fully white labelable? I think I did, right? I just log out and click on Connect. Yeah. So you guys can see the logo changes and all the colors change. It's fully white labelable.
00:21:05.250 - 00:21:22.566, Speaker A: Pretty killer. Thank you. Thank you for such an excellent presentation. I see a few more questions here and we still have a little bit of time, but I would recommend everyone reaching out in Discord. A lot of great opportunities there to Connect. I know that y'all already made some plans to do that. Thank you for everyone.
00:21:22.566 - 00:21:42.358, Speaker A: Thank you, Chai, for lending us your time today. And your mind as well. It's been enlightening. Always glad to have you. Very excited to see what our hackers do with Web Three Auth over the weekend. We'll be, I think, ending the session here. I encourage everyone to reach out in discord.
00:21:42.358 - 00:22:01.498, Speaker A: As I just stated, there are going to be a lot of opportunities to connect and continue asking questions to both Chai and the team and the mentors as well. If you have any issues there, highly recommend DMing us and we can help sort you out, get you ready for the finale. But thanks again to everyone. Looking forward to seeing you guys later on our next session.
00:22:01.594 - 00:22:10.950, Speaker B: All right, so thanks, everyone. And yeah, I'm hoping to see a lot of integrations with Web Three Auth. Really cool projects.
00:22:11.770 - 00:22:15.060, Speaker A: Sure you will. All right, guys, we're going to be closing the session here.
