00:00:02.410 - 00:00:09.402, Speaker A: Yes. Cool. This look good. All right, great. Hi, everyone. I'm Tom schmann. I'm a partner at Dragonfly Capital.
00:00:09.402 - 00:00:54.938, Speaker A: We're a crypto venture fund. And this is fantastic extractable Value and Where to not find it, which may be a little different than the title that was given just to be totally self contained. I'm going to give a very brief overview of Mev. Generally speaking, you smart contract platforms or blockchains, they specify transaction, correctness? But they don't really ordering. So there's sort of an assumption that, hey, within a block, transactions should be ordered by gas price, right? They should be ordered by people who want to pay the most to people who want to pay the least. It's an auction, but it's not actually mandatory, it's not specified. And even within there, it's difficult to know, hey, if two people want to do the same transaction and how do we know which transaction was broadcast first? The mempool is sort of global.
00:00:54.938 - 00:01:54.430, Speaker A: It's really hard to know. How should transaction ordering be done? Fairly and normally. This isn't really a big deal, right, with something like Bitcoin? If I were just sending money back and forth, I don't really care that much if you send your Bitcoin before I send my Bitcoin for most purposes. But on a smart contract platform, these transactions have economic value where maybe there's a really good trade opportunity and I want to get it before you do, or maybe there's an arbitrage or maybe there's a liquidation and I want to get it before you can get access to it. And so there's actually really large amounts of value being held in the ability to sort of arbitrarily reorder or exclude transactions from a block. And so mev sort of refers to this idea, which is there's value in transaction ordering, specifically when there's economic activity occurring. And so a lot of the problem space that we explore, sort of discusses around, well, how do you minimize mev? How do you redistribute mev? Who should actually get access to that value? Because it continues to grow, the more so economic activity actually occurs on these platforms.
00:01:54.430 - 00:02:58.390, Speaker A: So a couple of different, very more specific flavors of what that looks like when we talk about liquidations. Most lending platforms today compound Ave Maker when a loan becomes under collateralized or sort of under the required LTV threshold, anybody can step in and basically recapitalize the loan and penalize the initial borrower with a small penalty so I can come in and basically top up your underwater loan and get money for it. And for most designs right now, it's a first come, first serve scheme where the first person to actually go in and recapitalize a loan gets that 5% bonus or 13% bonus or whatever it happens to be. And so there's this massive race to actually win that money. And we sort of see this in the chart on the right, which is duetx liquidations over time, which slowly and slowly get more competitive. This is every new color is a new address and you can see they're all sort of competing with each other to design new strategies and be the first one to get that very limited set of opportunities. So liquidations are only a very small percentage of the total mev space but they're very competitive.
00:02:58.390 - 00:04:07.146, Speaker A: Another sort of segment and chunk that we talk about is sort of around decentralized exchange and there are a couple of different flavors again within here. Front running again pretty straightforward. If you see someone who's about to get a good trade deal, their transactions are sort of floating in the mempool, maybe you should go and get it before them and you can sort of get a really cheap asset before somebody else has a chance to buy it back. Running is similar but a little bit different where with an AMM if I make a trade and maybe I introduce too much slippage so the mid price of the AMM moves dramatically off of market. An ARB opportunity pops up where someone else can come in and basically sell that really overpriced asset back to the LPs, back to the AMM and lock in a nice profit that way. Sandwiching is sort of a combination of the two where if I see you about to go make a large trade I can buy that asset before you. So sort of move up the price that your trade is going to get executed at you're now going to buy at a higher price and get a worse execution and then I'm going to then come back and sell that really marked up asset back to the LPs and so I'm sort of profiting both ways.
00:04:07.146 - 00:04:55.798, Speaker A: So there's even more flavors like that within the deck space but at a high level overview, these give you maybe some more concrete ideas of what does mev mean when it comes to being in DeFi and why are we even talking about this? This sounds kind of esoteric. Well, it's actually a pretty big deal. Millions of dollars a day get made by reordering transactions and extracting this mev by winning these liquidations, winning these arbitrages and there doesn't really seem to be any sign that it's slowing down. It just continues to grow day over day, month over month. I think a kind of bigger point beyond just the monetary angle is mev doesn't exist in a vacuum. When mev gets really large it can really degrade the user experience. People really want clean deterministic experiences when they use a blockchain.
00:04:55.798 - 00:05:51.740, Speaker A: They don't want their transaction to fail when they want to make a trade because someone's front running them. People want good executions, right? People don't want to get their faces totally ripped off. And so if experience of using a blockchain or using something like ethereum can use to degrade, that can be really bad and sort of stop us from achieving the vision and the mission that we have. Additionally, mev kind of must be extracted for chain security, which is a point Phil made in his blog post, which I tend to agree with, which is basically you want everybody to be making as much money as possible if they're a miner because if you don't, you have sort of adverse selection. Right? The people who can make more money mining are going to mine more often and that might centralize control of the chain within their purview right? If I have really cheap electricity, I might be able to mine more than someone has inexpensive electricity. And the same thing happens with mev where if I'm able to make more money per unit by extracting this mev, I'm going to be mining more than you will. And that obviously affects chain security.
00:05:51.740 - 00:06:18.898, Speaker A: We've sort of seen mev is a big thing. It's important for reasons beyond sort of the clear monetary reasons. I think the analogy I sort of think of is when there's high gas prices, devs start to optimize for low gas users. Right. They start to gas golf their contracts to drop down the actual gas price of executing. They look at other chains, they look at roll ups. They try to do things to minimize gas usage.
00:06:18.898 - 00:07:16.710, Speaker A: I think right now we're in sort of a high any view environment. So what are Devs doing basically in response to sort of this change in the ecosystem? And I think sort of one way to think about it is it's sort of like any ecosystem where when there's outside pressure, there's outside influence, it's going to change. Things are not static so this is the Tawny owl. It's an owl in sort of northern Scandinavia generally comes in sort of one or two colors, sort of this brown color on the left which obviously blends in better with the woods and then the sort of gray white color on the right, which blends in better with the snow. And basically, as a result of climate change, winter is getting warmer, there's less snow. And so basically, this brown variant of the owl has sort of been outcompeting. And winning out over this white version of the owl and I think of mev and sort of similar sort of evolutionary pressure where you have this new predator, you have this new thing that's entering the ecosystem and you have to figure out what you're going to do.
00:07:16.710 - 00:07:52.094, Speaker A: You basically adapt or die. And I think that's sort of the most interesting area of exploration for me right now. Within DeFi, specifically, what do if you're a developer? Well, one option is you can just sort of roll over and die. And so this is just some random block that I pulled off of the Polygon explorer, but it's pretty endemic. And I think most people who use polygon on a regular basis will sort of relate to this in some way. Where getting a failed transaction, getting front run, having someone else scoop in front of your trade. It's a pretty common feature.
00:07:52.094 - 00:09:08.250, Speaker A: And so I think if you don't do anything, of course profit motivated individuals will go and find ways to go extract mev and that could really ruin the user experience. If you're a protocol dev or if you're an application dev, another sort of thing teams are doing is basically embracing it and saying, hey, mev is going to happen, but we should at least benefit from it, right? Like, someone's going to get screwed either way, so let's find some way to actually capture some of that for ourselves. And as was sort of discussed in the past few panels, a lot of L two S are looking this way, where they're like, hey, we should actually be able to get some of the mev that's going to occur in our roll up because we don't want to give that away. It's a potential business source and I'd rather have it be internal than have it be sort of externalized and given away to some random bot. And I think there's maybe even a path forward where maybe DApps take their own mev and they give it to token holders or they hold it in the treasury. To a certain extent, all users are equal, but maybe some users are more equal than others and maybe some people deserve the mev more so than some random bot or some random miner somewhere. I think the third option is kind of the most interesting and more likely, most likely, which is you can prevent it by adapting.
00:09:08.250 - 00:10:03.390, Speaker A: And so when I think about what's the problem here? What are sort of the constraints that we can play with? The main issue basically, or the main sort of problem, is that transactions on ethereum, they can most of the time be made by any arbitrary address. And the transactions are all the information within the transaction is public. And while the transaction is waiting to get mined, it's sitting in a public mempool. So anyone can come in, they can see exactly what you're doing, and they can see your actual transaction while it's waiting in that public mem pool. So you're just sort of a sitting goose or sitting duck while you're, while you're just waiting there waiting for your transaction to get mined. So we sort of have this RBOT deployer on the right, just absolutely copying this random user, trying to make a nice little trade. So I think when we think about the design space, it's like, well, how can we change some of these assumptions? Right? How can we make it so maybe it's not any arbitrary address.
00:10:03.390 - 00:10:38.722, Speaker A: How can we make it so it's not a public mempool? How can we make it so it's a public mempool, but maybe the transaction contents aren't public. And that's sort of the place that I would say most devs are sort of sort of playing with. So you want to prevent mev, what do you do? Well, one option is just hide it. And with hiding it, again, takes a couple of different forms. One of the more popular forms, especially for application devs, is to get rid of that public mempool that we just talked about and instead just send the transaction right to a minor. The mempool is not required. I can just pay a miner directly to mine my transaction and then I avoid the whole mev issue entirely.
00:10:38.722 - 00:11:15.300, Speaker A: So One Inch has this integrated archer swap, has this integrated where I can check a box and they will send my transaction not to a mempool, but they'll send it directly to Flashpots or Tai Chi network and then a miner will just mine it. It's great because my transaction is not going to fail and I'm not going to get front run. And so we see more and more devs moving this way. And I suspect that this will also be an increasingly popular option as it becomes more easy to integrate. So again, you just sort of get rid of this public mempool issue. Unfortunately, you also do have to trust the person that you're working with in order to do it right. You could send this to Tai Chi network and then they could go and frontrun you.
00:11:15.300 - 00:11:50.874, Speaker A: So probably not an optimal long term solution, but certainly it's feasible. Right now, another option is sort of playing with like a semi private or semi public mempool. So it's not quite the same as the private transaction, but it sort of achieves the same effect with no trust. So Keeperdao's Hiding book is sort of like this where it's only really accessible to whitelisted bots so people can see it, but they can't really get access to it. So I can submit a transaction and you can submit a transaction. It's sort of hiding in this sort of pseudo public mempool. These whitelisted bots can come along, see our transactions, mine them for us, and then they can send that mev back to users.
00:11:50.874 - 00:12:49.410, Speaker A: So it's kind of a public transaction, but it's kind of not a public transaction, but in any scenario, that mev is still sent back to us at the end of the day. And then the last sort of solution here is again, these are public transactions in the public mem pool, but the contents of the transaction are not public. So again, sort of throwback one of the popular ways people used to do this and I think Micro actually covered a lot of this in her talk is using Lisa Marine or submarine sends, which is a commit reveal. Scheme where users basically send transactions, send first transaction that has the content of their transaction and sort of the value that they want to send. But it's obviously all encrypted. And then in a later transaction, maybe even in a later block, then they send the reveal which actually executes the transaction. And so obviously there's a lot of UX overhead and it's not ideal for all scenarios, but you're still going through a public mem pool and you're still sort of having a minor mine you.
00:12:49.410 - 00:13:43.298, Speaker A: But because the actual transaction contents are encrypted until a later date, you're kind of safe for the most part from flash bot coming in and totally ripping your face off and sandwiching you or arbitraging you or whatever it might actually be. So there's a couple of different scenarios people use to hide mev either by sort of isolating themselves from the mempool or sort of encrypting the transaction contents. But another sort of scenario or another sort of solution that some people are employing is to just unionize. So instead of hiding the nev, let's at least take it for ourselves. Instead of just letting anybody else, like let a minor let a bot take it. So B protocol is an example of this where B protocol holds onto users compound positions and then co invests. So in reality, your liquidation buffer is actually a little bit better than it would normally be because they sort of co deposit alongside you.
00:13:43.298 - 00:14:43.730, Speaker A: And so that means that if you fall below that new liquidation buffer from what B protocol is invested alongside you, you're not actually liquidatable on compound because you still have this buffer on compound itself, but you're liquidatable on B protocol, right? They say, hey, actually you're below our liquidation buffer, but you're not below the liquidation buffer on compound. And that means that whitelisted addresses within deep protocol can liquidate you and sort of recolateralize the system, but those profits are then redistributed back to yourself. So hey, maybe you get liquidated but you get account of that fee. And so in reality, it's a little bit better than just sort of being raw and being exposed on something like Compound and going back to an earlier slide keeper. Dao and the hiding game. It's sort of a generalized version of this, but they have a very directly applicable version with K compound sort of the exact same idea where, hey, let's create our own little sort of like pseudo little network or pseudo ecosystem within something like compound or within something like Maker. And then it's only accessible to whitelisted addresses.
00:14:43.730 - 00:15:41.334, Speaker A: And then when people do those liquidations, we distribute the fees amongst all the users as opposed to having some random compound bot come in and sort of knife you with the liquidation. But these are all sort of co op model, right, where it's, you know, some of these go back to a Dow Treasury or some of these go back to token holders. But this is also possible on an individual level. So Blocksrat has made this service called Backrun Me where if you're going to make a trade on an A M such as Uniswap or SushiSwap, they will then see if you're introducing a backRunning opportunity, basically an Arbitrage like are you moving the mid market price too much? And they will come in and they will basically create a bundle. They will backrun you on your behalf and give you a cut back of the arbitrage that you introduce. So instead of having it be sort of co op know, you sort of have this handshake agreement with Blocksroute where they just give you back a cut of the arbitrage of the slippage that you're introducing. So it's again sort of unionized, but not in sort of this token holder dow style way.
00:15:41.334 - 00:16:23.330, Speaker A: It's just someone's providing a really nice service for you. DeFi Savers are doing the same thing with B protocol as well, where DeFi Saver will just go and sort of save your position for you, but they won't actually sort of distribute it to some sort of dow or something like that. And so ultimately there's maybe a little bit of a risk here. You don't want the pinkerton miners to come in and bust the faces off of a bunch of DeFi Dgen traders. There's definitely risk to unionizing. And so maybe the answer is instead of unionizing, maybe we should just evolve, maybe we seem to change. And I think this is definitely a possibility where some protocols might just be too mevable to be salvaged.
00:16:23.330 - 00:17:19.626, Speaker A: It's like trying to make a faster horse. And you see this a little bit with a lot of the on chain order books in the early days, like Oasis or arguably Kyber was sort of their reserve model, where it's like, okay, maybe even earlier version of synthetics, where it's just like there's just too much back running, there's too much front running. It's just too easy to get mev'd. And so this maybe isn't really a feasible model for the stage of ethereum that it's at today. And so maybe we just need something to do, something different. And I would argue that sort of the rise of RFQs in the last few months or so are sort of representative of this where this graph on the right is one inch volumes by protocol and excluding dodo which I think had sort of a weird sort of fluke or sort of spike over the past month or so. RFQs when you look at the one, which is native RFQ, zero x cash flow, all those RFQs combined now they're second largest source of liquidity, second largest source of volume behind uniswap e three.
00:17:19.626 - 00:17:55.460, Speaker A: So they're larger than curve, larger than univ two, larger than Sushi, because these RFQ models don't have mev. When you make a model with RFQ, when you make an order, you specify a specific taker address. So again, you don't have this arbitrary address issue where some random bot can come in and sort of fill your order. Your order is made for you, specifically made for your address. And so it can only be filled by you. And if it's not, then no one else can come in and take it. And so it's actually like a sort of novel approach to sort of old school, but sort of a novel approach to how to get around mev and get around some of these gas issues.
00:17:55.460 - 00:19:01.930, Speaker A: And I think maybe Phil was mentioning this earlier, but again, this is all maybe even a little bit of throwback to sort of centralized coordinators matching engines on some of the early order book DEXes like Paradex or dYdX, where we all can sort of sign our intents to trade. We have one trustworthy entity that actually does all the executions, so there's no arbitrary address, no one else can come in and fill. And it's in their business interest to fill correctly, right? Like if you're the matching engine on FTX or on dYdX, you don't want to be ripping off your users because if you are, they will see it and they'll move and they'll go somewhere else. And so you want to be as fair as possible when it comes to actually doing execution. Cowswap is, I would say, sort of the closest analog today where they hear sort of a decentralized network of participants that basically act as a matching engine where different people sign their intents to trade again, sort of like a bid out. Order and ask order and then when they overlap, they have their sort of decentralized group of bots actually do the matching. So when you limit the number of addresses that can actually interact and you sort of delegate it to them, you can actually get rid of a lot of any of that that exists.
00:19:01.930 - 00:20:09.760, Speaker A: And sometimes you don't even actually have to modify the protocol that much. Maker is a great example where Maker liquidations, V One, where again, we're sort of in this classic style of lending liquidations, where it's first come, first serve, massive bonus to whoever could come in and recapitalize the protocol. But in reality, sometimes that was way too punitive when Volatility was low. Maybe it was not punitive enough when Volatility was super high. And so Maker has moved to using Dutch auctions in V Two, where basically people can enter and do the liquidation at the price that they think is fair, as opposed to having one fixed price and having everybody sort of rush to enter. And so Euler is working on sort of a similar thing where basically the liquidation penalty increases by the amount that the loan is underwater. And so having these sort of scalar compensation systems, as opposed to having some one fixed compensation and having everybody sort of rush in the door to sort of fit in is sort of a way to get around MVV because everyone sort of choose the price can choose the price that they think is fair, as opposed to having one fixed price and having everyone sort of try to outbid each other.
00:20:09.760 - 00:20:48.882, Speaker A: So a couple of different options you have as a developer right now. But what is this thing going to look like? The space is evolving so quickly, it's kind of incredible. Where do we think the future is going to go. One possible scenario is everyone just constantly getting their face ripped off forever and it just kind of sucks to use ethereum but you got to use it. But I think maybe another potential scenario is sort of more dowification where maybe you have to be part of a particular dow and a dow can take many different forms. It can be holding a token, it can be holding an NFT or whatever. Maybe you have to be part of this dow in order to trade on a particular AMM or use a particular protocol.
00:20:48.882 - 00:21:54.714, Speaker A: If you're a bad actor or you're sandwiching people, you're a bot, then you get kicked out and you don't get access to this thing. Or maybe use products like Archx or Know your farmer to look at people's past on chain activity as sort of a civil resistance mechanism. So hey, if you haven't traded on Uniswap in the past six months maybe you're a bot and if you try to trade on our exchange we're going to ban you. And so again you're sort of getting around this sort of arbitrary address issue and certainly you could say hey, maybe this is exclusionary but it's only exclusionary to sort of bots and people who would maybe civil attack by spinning up a bunch of addresses. If you're a normal human there's plenty of ways to get access to these things. So maybe that's sort of what the future looks like is we don't allow just any random address to interact but we have some sort of minimum bar that people have to get over in order to use these things. I'm assuming applications also even experiment with running their own application specific roll up, right? Like if I'm uniswap or if I'm compound, why do I want my mev going to spark pool or coinbase or random bots that should be going back to Uniswap and the treasury and uni token holders.
00:21:54.714 - 00:22:47.666, Speaker A: So maybe I run my own chain, I extract that mev and then that goes back to uni token holders or uni treasury. So again, it's sort of going back to that sort of unionized co op model but taking even a step further where we're sort of circling the wagons. I also think just the mev space continues to get more competitive compressing margins on mev bots, mev clearinghouses and miners mining dow being a great example of this where they sort of take what Flashbots is doing it but doing it sort of all on chain. And so again, the more transparent, the more accessible you make these things as Flashbots is obviously done with mev overall sort of the more you just compress margins because you have more players with more information. Additionally, mining right now is sort of very specialized and inaccessible. The vast majority of people don't mind. But what happens when anybody can be a miner with POS, right? There's going to be way more people running nodes or using a node mining service.
00:22:47.666 - 00:23:40.370, Speaker A: Maybe in that case extracting Mev is a lot more palatable or a lot more accessible, right? Like maybe the steakfishes and the stakes and the lidos of the world. Maybe they end up offering generalized front running as a service and they have to sort of offer that to users because the overlap between Ethereum users and miners becomes a lot tighter than it is today. And maybe this is just a sort of temporary blip in the history of Ethereum. I think the jury still out when it comes to what happens in a proof of stake world. I suspect a lot of large mining pools or a lot of large staking pools such as Coinbase or Binance or Lido might refuse to participate in mev just simply due to the negative optics, right? If I'm Coinbase, I'm a public company, I'm not going to be known for ripping users'faces off by participating in Mev. I'm just going to allow the PGA to happen or whatever. I'm not going to actually participate in it.
00:23:40.370 - 00:24:33.642, Speaker A: Or maybe I introduce some sort of other fair ordering mechanism. But I think a lot of these people are not necessarily maximally profit motivated and so they might have a lot of issues with actually extracting nev. And I think generalized again roll ups might just take any present for themselves which sort of excludes searchers. So optimism just does it themselves and searchers sort of sort of get excluded or maybe protocols sort of enforce using verifiable delay functions in order to randomize transaction ordering. And so again, all these are sort of potential ways that we might see sort of the mev market space sort of decline over time where people refuse to play ball, people refuse to participate in this transaction ordering game or it just becomes not even feasible to participate at all. So thank you. These are all sort of just thoughts and ideas that I've had but I think the mev space is obviously super interesting and very much evolving.
00:24:33.642 - 00:24:37.620, Speaker A: So I look forward to continue investing and and researching with you all.
