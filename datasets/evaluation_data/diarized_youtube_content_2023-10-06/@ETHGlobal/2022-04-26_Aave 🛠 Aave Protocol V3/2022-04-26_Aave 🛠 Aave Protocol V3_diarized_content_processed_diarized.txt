00:00:09.310 - 00:01:14.434, Speaker A: So welcome everyone for coming to this talk. We are talking about AB three. My name is Tabith, this is my peer Michael. Yeah, we are going to learn more about the Ave protocol new features of AV Three. First of all, what isabe basically Ave is a decentralized protocol liquidity market that allows users to supply cryptocurrency, provide liquidity to the protocol and head some yield of it. There's also other factors, that is the borrowers that can draw liquidity from the protocol, but putting collateral first, they can use collateral and support the market like ether die. And also there is another actor is the ligadors that take care of the healthy, making the borrower healthy.
00:01:14.434 - 00:02:17.260, Speaker A: They basically liquidate positions, basically paying back the death of borrowers to have risky positions or they are near quality. Well, we launched Abe B three, like, one month ago. It has received a lot of well, it was well received by the Abbey community. And basically we caught the avalanche market that is now with around four billions of liquidity located at the protocol. And by using liquidity incentives by the avalanche project and also we have the auto markets that are with a liquidity around between 5 million and 40 million with organic growth. We do projects in six networks, six different networks. And yeah, we also have more markets like the Amma market.
00:02:17.260 - 00:02:30.430, Speaker A: And now Miguel will talk about the new features of Abel Three. Yeah, you found.
00:02:30.580 - 00:03:48.630, Speaker B: Thanks David. So yeah, the third iteration of the Abe protocol builds upon the foundational elements of the Abe protocol which are instant liquidity, the A tokens, different interest rate strategies and so on and so forth with new groundbreaking features that spans from the increased capital efficiency to enhance decentralization. So yeah, let's dig into some of the new features of this third iteration of the protocol. First, in terms of capital efficiency, we have portals. So yeah, given the fact that we live in a MultiChain and multirolap gold, having a way to migrate tokens from one chain to another in a seamless way is more and more important these days. While the previous iteration of the protocol, the version two, goes into play on multiple networks with meaningful TBL, it's true that there was no way to have all the supply assets flowing seamlessly from between chains. So this is the point of Portals.
00:03:48.630 - 00:04:43.174, Speaker B: Portals is a new feature of the core contracts of the version three of the protocol that allows the supply assets to flow seamlessly between chains. So in high level, it leverages the unique design of the A tokens. So whitelisted bridges are able to take a tokens from the users in one chain and mint those eight tokens into another chain. So first we will need breaches that plug into the portals. These kind of bridges will be named as ports. Once they are kind of registered in the system, they will need to call a couple of functions, new functions that are in the pool contract. These functions are mint and backed and backed and backed.
00:04:43.174 - 00:06:41.658, Speaker B: The first one allows the bridge to mint and backed a tokens which means that these a tokens don't have the underlying assets with them and then they will need to use the other function which is called back and backed which allows to back those a tokens that were already minted. So portals essentially allows these bridges to supply assets in a fair manner. So when a user wants to move their a tokens from the source network to the destination network, first the bridges will take the a tokens from the user in the source network, then instantly mint brand new a tokens in the destination network and redirect it to the user. And once the underlying assets, the real liquidity has been moved through the bridge could be the canonical bridge of the chain or whatever bridge in the ecosystem, then they will be able to back those already fresh new minted a tokens with the underlying. So at the end the destination network will have all the eight tokens with the corresponding underlying assets. So as you can imagine, this feature is really interesting because it allows the users to move the a tokens from one chain to another without losing a penny of a dollar and without the need of unwinding the position which is really cool. Also the efficiency mode, this tries to increase the utilization of the capital that is sitting in the protocol because as you already know, there is a lot of assets and capitals that are currently sitting idle in the protocol.
00:06:41.658 - 00:08:01.982, Speaker B: So this is mainly caused because the risk parameters, the risk parameters in the system. There is one of the risk parameters in the system which is called the collateral factor. The collateral factor determines how much of an asset a user can borrow using an asset as collateral. So having a 75% collateral factor on die means that a user can borrow up to 75 die with 100 die as collateral. So if the protocol is able to increase this collateral factor, they will be able to increase the borrowing power of the users and thus increase the capital efficiency of the protocol which is really good. So as you can imagine, so the collateral factor of the assets in the previous iterations of the protocol were a bit conservative because all the assets has its own characteristics, its nature and even different price volatility. So as you can imagine, it's not the same having a user borrowing USDC against ETH than having the user borrowing USDC against Dai.
00:08:01.982 - 00:09:01.710, Speaker B: The later position is less risky for the user and also for the protocol. So this is mainly because both assets are stable coins and also because those assets are correlated in price. So that's the main point of the efficiency mode. What if we are able to group the assets in categories with the same characteristics, same nature or the same price volatility? So we can increase the borrowing power of the users in that cases. So in the protocol v three there are high efficiency modes categories. We have the stable coins category with USDC die USDT or even the Euro pairs. Also we could have BTC variants or ETH variants and let's see what's coming from the community in the future.
00:09:01.710 - 00:10:19.640, Speaker B: It's going to be interesting. So when a user enters emote in one of these categories, let's say for example stablecoins, the user will be able to enjoy high borrowing power using stablecoins as collateral but they will only be able to borrow stable coins. So they still can supply other assets and even use them as collateral. But only with stable coins they will only be able to maximize their borrowing power. So right now users in stablecoins emote they enjoy 97% of collateral factor which is really good because they can borrow up to 97 die with 100 die as collateral. So these features will bring wave of new use cases and new tools in the ecosystem like for example high yield farming strategies, high leverage tokenized positions, also diversify risk, market risk because you now can split your assets in categories. So yeah, it's going to be nice.
00:10:19.640 - 00:11:45.250, Speaker B: Now more on the risk and security side. First we have the supply and borrow caps. This security measure is pretty intuitive because this security measure allows the community to set hard caps on the amount of the supply assets and the borrowing assets. So in this way the protocol can control and modulate the exposure to certain assets in some way. Supply and borrow caps together with isolation mode is a good combination, an interesting combination to moderate disclosure as I said, but also to list assets in a more secure way. So until now, assets when are listed in the protocol allows the users to use that assets as collateral and borrow any kind of assets in the protocol. So theoretically we could have a user borrowing the whole capital of the market using one single asset as collateral which is far from ideal because that will mean that the protocol is completely exposed to that certain asset.
00:11:45.250 - 00:13:20.830, Speaker B: So isolation mode which is inspired by the MakerDAO, I don't know if you know it, but in MakerDAO you have different vaults. This vault has a particular asset for each and they also have a depth ceiling so you cannot mint more than the epceiling using that specific vault and that specific collateral. So installation mode works in a pretty similar way. Users, the community can list assets in isolation mode and users using this asset as collateral which is isolated, they only will be able to borrow up to a certain limit of assets. So for example, in this case we have the token two which is listed in isolation mode with a debt ceiling of 10 million and that will mean that users can use that token two as collateral but only they will only be able to borrow up to $10 million worth of assets in stablecoins. So as I said, this is an interesting way to modulate exposure and also list assets in a more secure way. And yeah, all of you can imagine having a new asset into the Protocol first listed as in installation mode, then keep on going with supply and borrow caps.
00:13:20.830 - 00:14:11.342, Speaker B: Finally maybe without any other security measures at all, which is good. Also the price. Oracle sentinel. This Oracle is really specific for layer twos and increases the experience of the users in those networks. This price Oracle Sentinel allows to handle eventual downtime of the sequencer. As you may already know, the sequencer are the entities that are in charge of submitting and settling transactions in the network. So if this concert goes down then the network essentially stops working.
00:14:11.342 - 00:15:28.966, Speaker B: So during this downtime we could have price variations and these price variations could affect the users positions in some way. So when the sequencer goes up and the network starts working again, these users could have these positions affected since all the price variations come into play at once. So in order to mitigate this scenario, the protocol introduces a grease period which is a duration of time that the users are able to fix their positions in order to don't get liquidated in some way. Yeah, decentralization. In the third version of the protocol there were also some improvements in terms of decentralization. In the previous iteration we already have some permissioning system where all the roles were specified with their responsibilities. But in this version this permissioning system is more fine grained and more sophisticated.
00:15:28.966 - 00:16:44.466, Speaker B: And also there are some new roles in the system that brings new ways of doing things let's say. So we have the risk admins and also the listing asset admins. The risk admins is a specific role of the system that has the ability to change the risk parameters of the reserves without the need of a governance vault. These risk admins could be Dows or any other entity or even automated agents that react to specific events or metrics and change the risk parameters accordingly. They can change the risk parameters or also the interest rate strategies of the research as well. And also we have the listing admins, which has the ability to list assets without the need of going to a governance proposal, which is also interesting because we could have some new strategies of listing assets. And this is a kind of a way of delegating the governance of the community of the protocol to some other entity out there.
00:16:44.466 - 00:17:48.290, Speaker B: So one of the discussions that has been in the community forum is the permissionless listing. So what if a community of users are able to decide which asset they want to list so they can stake a part of these assets in the protocol and use these assets as a backstop in case that something happens. So yeah, really cool. Also as you can imagine there is a bunch of new features in this third iteration of the protocol. Some of them are more user facing features, some of them are more in the technical side but yeah, for example it's good to mention the repayment with eight tokens. So now this increases also the experience of the users. As you can imagine, users now are able to repay their debt with eight tokens.
00:17:48.290 - 00:19:05.840, Speaker B: So if a user has a debt of 100 USDC, they can provide 100 a USDC to repay the debt. This as I said increases the user experience but also helps the protocol just in case the underlying assets gets locked in the Abe pool contracts for some reason. Also there is the introduction of the permit function and the EIP seven one two to the credit allegation function and also the introduction of a simplified version of the flashland function with a reduction of 20% of gas cost. This is only in the case that the user wants to flash loan one asset instead of assets. And yeah, there is many many more but in general the code was reorganized and also optimized so there has been a reduction of ten or 15% of gas consumption across the board. Across the board which is really nice. Yeah, that's pretty much all.
00:19:08.850 - 00:20:12.050, Speaker A: Yeah. We created some tools to help you to build on top of Ave. The first one is the Abe sandbox that these tools allows you to integrate or to fork a network that has been deployed with a simple command and it spins a hardcut node to say market. It also allows you to faucet the assets that are listed in that market in an easy way. And also it allows you to connect the Abe open source frontend to this local sandbox or to this local node. In this way integrators can will safely the top of markets in production but also in the same time a local host that is much faster to develop. The only dependency that you need is node JS.
00:20:12.050 - 00:21:10.710, Speaker A: You can find the repo, the Guarcode and also GitHub.com Ave samples. We also have some NPM packages with smart contracts and also some utilities, some helper factors that help you to develop new frontend for Abe or different dashboards that you need. The utilities contain all the helpers to interact with the protocol and also contains all the math related with the protocol. So it's quite nice you need to rebuild the wheel well. As always you can check the code at the different repositories. Right now here at the hackadon we have the prices we are rewarding for the most innovative integration.
00:21:10.710 - 00:22:05.320, Speaker A: You can see the list of the prices, some resources like the developer docs that are quite complete and it contains all the definitions, all the contact that runs Abe protocol. There is also the link you can request for proposals. Maybe you have an interesting idea to build on top of Ave as a community member and here you can request a grant to develop that idea and execute that idea here. Next Sunday we have rabbit. So yes, here is a Monus code that you can use. It's hosted by the grandson staff and that's it. If you have more questions, feel free to ask to us.
00:22:05.320 - 00:22:23.210, Speaker A: Okay? So that's it. Thanks everyone for coming. You have one question. Okay, of course. Here is the code.
00:22:27.260 - 00:22:49.600, Speaker C: Something so I would be free. Did any of the core smart contract exchange to handle funds in the sense that when you deploy version of a central DAP, there might be introduced like security risk. So is that the case with this deployment or was more like an overall.
00:22:52.900 - 00:22:55.492, Speaker B: Gladiator minus hake, could you reprise? Yeah.
00:22:55.546 - 00:23:03.370, Speaker C: So I'm wondering if deploying a new version of the protocol introduces security risks, that might.
00:23:05.660 - 00:23:33.490, Speaker B: Yeah, I mean like any other protocol, if you deploy any version, you need to take into account how the Aggress is going to be. Of course, if you are using some kind of proxy pattern like Avidas, you need to take into account the storage layout and keeping things retro compatible maybe wherever. So you need to take also things into account in that way. Sure.
00:23:34.020 - 00:23:35.840, Speaker C: Version two with version three are running.
00:23:35.910 - 00:24:01.704, Speaker B: At the same time now. They are running at the same time. There is also some discussions in the forum to upgrade the contracts of the B Two market to B Three. And that's going to be a challenge. That's going to be a real challenge because yeah, exactly. So it needs to be bargains compatible. Also take into account all the functions, all the storage layout, these kind of things.
00:24:01.704 - 00:24:02.970, Speaker B: So yeah.
00:24:08.300 - 00:24:09.530, Speaker A: Any more questions?
00:24:13.660 - 00:24:27.790, Speaker B: Nice guys, thank you so much for coming. Reach us out if you want to talk about Ave or any hackathon idea or just about Ave B Three or what's going on on Ave companies. Thanks for coming. Thank you everyone.
