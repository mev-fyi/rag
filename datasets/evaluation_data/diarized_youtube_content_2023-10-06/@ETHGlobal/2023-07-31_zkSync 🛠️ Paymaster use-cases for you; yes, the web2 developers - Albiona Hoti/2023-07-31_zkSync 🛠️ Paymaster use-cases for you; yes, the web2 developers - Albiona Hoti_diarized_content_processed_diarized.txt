00:00:07.690 - 00:00:39.702, Speaker A: Welcome to the workshop to building on ZK Singhira by using Paymasters. I am yep. Let's start. Today we'll talk about Paymaster use cases to build on ZK Singhra. And the general agenda would be all around use cases, right? As we are here at Youth Global and will attend the Hacker the Hackathon. We are trying to build something that is meaningful. And the meaningful part would come to the end user.
00:00:39.702 - 00:02:29.398, Speaker A: How we can onboard end users to blockchain or Web three? And how can we make their lives easier? How can we lower the barriers for them to get started? So the agenda includes us talking about what is Paymasters and why is Paymasters so important for us at Zksync and also for our mission, the features that Paymasters enables and how is that directly connected to the Zksync mission. We'll go through the examination of a Paymaster, how we can build using Paymasters feature. How does that look like on smart contract developer perspective? And then on the perfront perspective, what are those key components that connect things together? And then we will brainstorm. We'll go through each of you guys to ask you questions such as what do you want to see? What do you want to see in the next three months? If you're here and attending another hackathon, if you are like a hacker or a sponsor or a partner, that's not important. What do you want to see being built? What do you want to see for your users to kind of experience when they get on Web Three before diving in? I am Adbioti and I am Developer Advocacy Person at ZK Sync under Devrel team, mainly focusing on hackathons and workshops and things like that. But to give you an insight for the team, we are growing our Devrel team with engineering members. So we are very much looking forward for the next three months to provide tools and use cases for you to use on the way while you develop on Zksync.
00:02:29.398 - 00:03:32.078, Speaker A: And yes, we had some other conferences that we introduced a lot of things and one of them was the in memory node. So we do have an engineer down at the booth. If you want to go and learn what is that and how you can use it, go and search for Nick because he will walk you through that. Yes. So Paymasters and how is that connected to our mission at ZK Sync is that ZK Sync is a layer two protocol trying to lower the barriers and increasing not only the throughput for transactions, but we really want to build on the foundational values and those are the self sovereignty, freedom and decentralization. But not just that. We want to have it not just for a small group of people, right? We don't want to go through the world, attend hackathon, attend crypto conferences and be free and meet those people once in three months.
00:03:32.078 - 00:05:31.366, Speaker A: We want all of the world to experience that yes, that is connected to the freedom that we want to achieve from a human perspective and then Paymasters what can Paymasters do from user perspective or developer one, when they start to build things is that you have the opportunity to remove the gas fees in different use cases. It depends on what you want to build. It depends on the creativity and the perspective and what exposure you were having earlier on in your careers when you were building tools or applications. But it's very connected to the application layer of like how do we want to bring those users and use web3? This is one of the ways and we really are relying on this big feature as ZK Singh and we want to make it big as it is because I feel like no one is knowing because there's a lot of noise going around. Some paymaster features are you can pay with any token that you want and then yes, those are very basic right? Get those NFTs allowing them to get access to something that is very exclusive or not exclusive or whatever. But we were thinking for some use cases that can be like as a developer for the developer experience walk through it's like how can we make developers not suffering to going to each of the possible faucets to get some quarrely ease or whatever? How can we make their lives easier? And we want to build a tool that can just remove the gas for people who are deploying through the tutorials that we have. So that is one of the templates that we want to do on our docs for the next three months with our team and I'm very happy to share that and yeah, we are on the way.
00:05:31.366 - 00:07:01.858, Speaker A: So yes, basically imagine all of the innovative ideas you would want to build on Ethereum and then getting those users to use your idea without the need for them to pay something with their money. So it is based on incentives and it's a very big one. And on the code level, like what will you see when you go through the big example that we have, the Hello World example that you will see to get started with Paymasters is that those three sessions are very important. Paymasters is a smart contract, that's it. And you can implement any logic that you want to implement to remove the gas fees and then those two functions which are the validate and pay for Paymaster transaction and post transaction are important. The first one is the most important where the logic goes in and then we have the built in flows that are the ZJ Sync era that provides two flows approval based ERC 20 tokens and then the general for the others. Here's a very Hello World example on the side that shows you about yeah, when you go through all the custom Paymasters tutorial on the docs it's very long but don't get distracted and don't get lost because there is light at the end of the tunnel and it's not that hard.
00:07:01.858 - 00:08:14.090, Speaker A: And then on the front end integration side, you will deploy and fund your Paymasters via your front end or application perspective. And then based on your logic of who will get the incentive part to remove the transactions for the users, then you will add that logic there and then you will just fund your Paymaster contract via front end to the back end that interacts with the contract. There is a params encoding which is like Paymaster payload using get Paymaster params from Zksync best free library and then you have the overrides to send the encoded Paymaster parameters as transaction overrides inside custom data, whatever. These are some specific information that you would want to check. Checkpoints that you can kind of go and search on the doc when you go through the tutorial. The good thing is that we did created a repo that has four examples, real life examples. They are not live for Paymasters and you can go and play around with the front end connected to those four examples.
00:08:14.090 - 00:09:40.214, Speaker A: We have a QR code by the end so you will get to see it but I also will go through it on the repo so that you're aware but just search Paymaster examples that you can actually use to build on top your hackathon ideas or use cases. Those four examples are these the gasless paymaster seamless covers fees for any account allow less paymasters which you can read it yourself now. And then ERC 20 fixed BayMaster and then ERC 721 gated Baymasters handle fees for accounts that possess a particular NFT. Those are like built up there so you don't have to just have some small examples on the dogs they are already there and then you can just fork it and go on the way we do have the bounty tracks for this hackathon and I don't know how we can kind of expose that. Users actually can build full stack applications. They don't have to focus on web3. Something related, right? It's like do an application to one demo that I am building right now is, you know, the monkey type thing if you write very fast and that is like how fast you type basically.
00:09:40.214 - 00:11:01.082, Speaker A: And they have an open API for a leaderboard. So I just want to give some kind of free NFT to people who achieve some type of level. So I have to do the full stack app, build it up with that API and then just connect it with the results of the incentivizing site. That okay, if you did this, you're a nerd, then go use this application on web3 and you don't have to pay for gas because I have $100 that I can spend for you. But yes, we are focusing on those type of applications generally based on around social media interaction with users. Whatever it takes when it comes to interacting with users, keeping them or building traction. Whatever you want to build on with your audience that you have on your socials, you want to interact in a way or another, then you are like, okay, let me build an email subscription model with Paymasters that I can onboard my users slowly to Web three and we can test things out in different perspectives, right? I feel like there is a huge perspective that we never went to think around because we are very focused into very infrastructure level development.
00:11:01.082 - 00:11:35.670, Speaker A: But yes, you have a huge document on our tracks and there are more descriptions on those examples that we provide. Another thing that we really want to see being built at East Global is developer tooling. As I mentioned earlier, our devrel team and protocol built an in memory node for testing. It's awesome. I can share on YouTube. We have the YouTube from Erad dev Day that we organized. We got a feedback of like it's better than the tooling at Ethereum.
00:11:35.670 - 00:12:23.510, Speaker A: So it's a very good thing to share and for you to go and test it around. But yes, any type of dashboards that can interact with CK, Sync, Paymasters or account abstraction workflow that you can put alerts and let the developer know what's happening on the way. It would be great to be added on a developer tooling perspective. And yes, how Ziggy Singhira developer experience, how it is for you to get on board it. We do have smart contracts that you can write on Solidity and Viper. And then we have our compiler. It's different from what you're used to for the EVM it's the ZK Sulk and the ZK Viper for both languages.
00:12:23.510 - 00:13:32.838, Speaker A: And then we have our SDKs, the JavaScript one, which is the most famous one. And also the hard head tooling like plugins over there for deployment. When it comes to the deploying Zksync like smart contracts, the reason why there is another deployment plugin is that the bytecode is different when it communicates to our Zkabm. But yes, for more technical diving deeper into the technical aspect, let's meet after the workshop and I will push it to Nick and our other engineers who build it up. We do have a CLI that you can deposit funds to Zksync Era, which is one of the most important things. Withdraw funds to layer one and scaffold a hard Hat project that makes your life easier so you don't have to go through all of the libraries to install. We do have hard Hat plugins, as I mentioned, the compiler and the deployment, the proxy contract, the verification unit, tests to write tests, do not forget to write tests.
00:13:32.838 - 00:14:04.570, Speaker A: And also the deployment that I mentioned. And on the SDK's perspective, we do have JavaScript SDK with ZK saying web3. Library. Go python JavaScript. We do have a lot of challenges on the way, but whatever you go through, you give feedback. We iterate that's why we are here. In a way, we are also in a hackathon from an organizer perspective and partner.
00:14:04.570 - 00:14:57.770, Speaker A: And yes, here are some numbers when it comes to our position right now, this is a little old from another hackathon, but yes, ZJ Singh, there's a lot of volume, there's a lot of users. But yes, for me the most important part is the developers. So yes, these are some links which you will get access from our QR codes here. The first one that is in black is the developer relations team and all of the activations that we had here as devrels at ECC. And the second one is my personal one. In one of them you will have the paymaster examples that I showed earlier. And yes, feel free to go through that and if you do have any questions, let me know.
00:14:57.770 - 00:16:10.870, Speaker A: But I wanted to integrate the audience in this case and to ask questions such as what would you want to see being built in the next two or three months on a user or developer experience? Like, what are your challenges that you're having that you really want to see being fixed from your perspective that you would contribute to being fixed or from some other team's perspective if someone wants to volunteer to share some idea. No, everything like vex free related that you're here in this room. I feel like you are around layer two world. So yes, I would like to know more about the audience and get to know from where you're coming from in a building aspect in layer two world or even an introduction about yourselves. And how do you feel about today at UC yet? Global? Do we want to start so this time?
00:16:14.120 - 00:16:39.420, Speaker B: Hi everyone. I'm Claire from Blobzo. So basically I'm building smart contract wallet compatible with Tor three seven and very happy to hear actually it's my first hackathon, global hackathon. So yeah, listening rate. Sorry. Yeah, I'm with my team together, but yeah, we are also trying to build another project this year.
00:16:39.490 - 00:16:39.964, Speaker A: Yeah.
00:16:40.082 - 00:16:41.390, Speaker B: Thank you so much.
00:16:46.900 - 00:16:47.650, Speaker A: Hello.
00:16:48.340 - 00:17:13.610, Speaker C: Hi, my name is Liam, also my first hackathon. I'm a hacker and I'm building a multi lender platform for farmers and yeah, we're also looking into account abstraction. We need to use it for holding four different types of tokens and paying for gases fees. So keen to explore what's out there and see if we can integrate ZK Sync as well.
00:17:14.380 - 00:17:21.450, Speaker A: You're more than welcome to go through the docs and reach out to us. We have a huge team here ready to help on site also.
00:17:22.720 - 00:17:28.764, Speaker C: Yeah, that's awesome. Yeah, I'll reach out to you guys when I'm free. And yeah, keen to take a look.
00:17:28.882 - 00:17:30.428, Speaker A: Great. Fast by.
00:17:30.514 - 00:17:54.748, Speaker D: Yes. Hi, thanks. I'm Sven. I'm a researcher and I'm researching IoT payments through probably Cksync. Maybe. And yeah, I'm still searching for a team or other people that are interested. So if you are here and interested in IoT payments using second layer protocols.
00:17:54.748 - 00:17:56.256, Speaker D: Just reach out.
00:17:56.438 - 00:17:57.170, Speaker A: Great.
00:18:07.660 - 00:18:36.608, Speaker E: Hi, I'm Lucas. I will be building something maybe related to AI, but I wanted to ask you how account abstraction in CK sync relates to account abstraction in the new ERC that is coming for Ethereum. Whether you're going to, I don't know, adapt to the new standard or how we will have to deal with that.
00:18:36.694 - 00:19:25.710, Speaker A: Yeah. So our account abstraction is natively implemented and the big difference is the transaction flow in Ethereum with EIP 4337, it goes out of the main transaction flow and it does something over there. Not that technical to answer that, but for us it's like natively supported. And we do have the library ready to be used when you go through the docs. I don't know, something else to share is like just part of our transaction flow and not outside of it. Well, thank you very much for coming.
