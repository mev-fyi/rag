00:00:23.050 - 00:00:47.314, Speaker A: We're good. Welcome, everybody. This is the first time I get to say this, but happy end of week one. It's been quite a week. I know a bunch of you have been attending stuff since week zero. There was a couple of workshops last week and now there was a bunch this week. So kudos to everybody who has been coming out to these workshops and all these sessions.
00:00:47.314 - 00:01:28.140, Speaker A: It's been a blast so far. I know I'm learning a ton. And people who are building stuff are probably learning even more as they're digging into all these projects and all these sponsors. So, as the event title suggests, this is the Hack feedback session, and as the first one, it's going to be focused on ideas, the big picture of what you're building. And to help give feedback, we've got a bunch of experts in IPFS, Filecoin, Web Three, all sorts of good stuff with us here. That includes Martin from the graph, juan from Filecoin, carson and Andrew from Textile. See who else we've got.
00:01:28.140 - 00:01:57.860, Speaker A: Tegan's here from the graph. I hope I didn't forget anybody. Don't hold it against me, but yeah. So what the format will be is hackers. We're going to limit it to one person per team speaking. So if you have multiple team members, just pick one person to speak for your team and you'll have two minutes to talk about what you've been thinking about. Try to keep it general.
00:01:57.860 - 00:02:40.974, Speaker A: We want to have you talking about the ideas you've come across, what you're considering integrating, any sponsors you're thinking about. Just try to give us a general framework of your idea and any challenges you think you might face and what you're considering to be building for the next few weeks as part of hackath. Okay, that might be enough talking for me. Does anybody have any questions before we get started? Give me a wave or drop it in the chat and I can answer. Juan has a question. Hey. No really? Question.
00:02:40.974 - 00:03:10.970, Speaker A: Just super excited to see what everybody's working. Yeah. And one of Juan's suggestions was that we do this, we take notes in a collective doc so we can kind of collect all the links that are suggested. I'm going to get that started. Typically what we'll do is we'll have people sign up ahead of time, but this is a little more loose. So we'll just take people jumping in as they are ready. So whoever would like to volunteer themselves, go first.
00:03:10.970 - 00:03:51.698, Speaker A: Now is the time to do that. Who's going to be brave? Karate. You've beat out Titus by 1 second. So unmute yourself. Give us maybe a one or two minute summary of what you're working on, and then you'll get some feedback. All right, well, thank you very much for the opportunity to speak, and I want to thank you all specifically for all the content you've already produced and given me for the low, low price of free. I still remember when I used to have to pay thousands of dollars for all this education? I have dated myself, and I did go to Berkeley, not Stanford.
00:03:51.698 - 00:04:25.678, Speaker A: All you bastards. But anyway, so aside from that, my app is Describer, and it comes from the word to scry, which is doom scrying. Most people don't know it's not doom crying, it's doom scrying. Although everyone here is smart, you guys probably know more about it than me. And so Describer is to describe to basically unobscate this secret knowledge. And that's the title of it. And so, essentially, my actual goal, I'll give you the real goal I didn't put it in there, is to build a platform for people to publish on the decentralized web and be able to do subscriptions and maybe eventually do patreon and all those other things.
00:04:25.678 - 00:05:00.054, Speaker A: Okay? But I have it very tight right now because I have a tendency to design these wonderful products that nobody's ever seen anywhere, because they're all, like, about 66% finished in a trash can somewhere. So, basically what I've learned this week is how to integrate the different platforms together. I was already looking at Textile and Powergate before I came in here, but Fleek really is coming in really strong. I was very impressed with Space Demon yesterday. And what I'm basically going to be doing is I'm building user stories. I have a Trello board on my repo. I am hacked solo.
00:05:00.054 - 00:05:16.094, Speaker A: I know I didn't come up with that name. Someone else did, but it's stuck. And that's also because I want to learn how to build an entirely integrated application on that. I don't actually quit working for Amazon to build a decentralized web. I quit about a year ago. And this is what I'm doing. So that's the technologies I'm tying together.
00:05:16.094 - 00:05:32.402, Speaker A: It's going to be ethereum. IPF. Beth I might use Wire, which I didn't mention. Those of you guys all know Wire, right? Because people need to have multiple onboards. And the kickoff for this was that I was trying to subscribe to the Defiant. Those of you who use DeFi, they know she has a wonderful blog. She used to work for Bloomberg.
00:05:32.402 - 00:06:12.420, Speaker A: But all the friction, like Bankless Defiant and all this, it's hideous onboarding. It's terrible. And then they want me to use a credit card that I'm trying to get rid of. So that's really what the rule is. And I got that from Eric Raymond, the guy who wrote The Cathedral in the Bazaar, which is, if you're the rule of being a hacker is to solve your own problem because someone else probably has it and solve it once done. Sorry. Everybody should be able to unmute, but it looks like the setting may be a little finicky right now.
00:06:12.420 - 00:06:52.062, Speaker A: Yeah, there we go. I managed to mute. Yeah, that's really cool. Could I ask a couple of questions and then just to see if I can be helpful? Yeah. Can you maybe talk me through how you're thinking of integrating the pieces or maybe what components do you expect to have? What are the kind of architectural components of your app? So right now, the current infrastructure is I'm going to use something like Jekyll, which is a form of basically static blog that you can post to the web. That's the first part. I'm thinking of using Textile Buckets with creating an organizational key by the administrator, the platform administrator that I'm going to send an invite, create a group for each month.
00:06:52.062 - 00:07:14.726, Speaker A: Each month will have an encrypted group bucket that when the user subscribes, they get a key to that, right. And they forever have access to that content because that's how it rolls. Right. They get a month and that's it. And so I thought about doing the first month free, and then the way the address is, it's probably going to be array on a smart contract when they send the transaction to it. And then basically you can read from it there for free. That's the basic idea right now.
00:07:14.726 - 00:07:44.682, Speaker A: It's pretty rough. Yeah, that's it. Yeah, I think that workshop. Yeah, that's pretty good. I don't know if other folks have other feedback. Do you have any questions that we can help answer? Like maybe I don't know, maybe about how to model the content or anything? I should have a prototype up by, like I'm going to say Tuesday, because I have experience with development. So my goal is to have it done by Sunday.
00:07:44.682 - 00:08:05.320, Speaker A: So I'm saying Tuesday I should have something that somebody can click somewhere. And again, I want to thank Austin. I don't know if Griffiths is on don't. I don't think he is, but anybody who didn't see his presentation watch that video today. Yeah, it was definitely a good session earlier. Highly recommend it. Even with the Hiccups You experience, it's still great.
00:08:05.320 - 00:08:28.494, Speaker A: If there's not anything else for karate, we can move on to the next person. All good. All right, just as a reference, if you guys want to go next, just add your name on that doc and we'll use that for taking notes, suggesting links. Titus, I think we had you next. Yeah, okay. Hello. Thank you for having me present here.
00:08:28.494 - 00:08:49.590, Speaker A: Can I share my screen? Because an image gives more than thousand words. Yeah, sure. Just remember, I hope you don't have a huge presentation plan because we just want to keep it short. It's one screen. That's the best. Go ahead. Okay, so I did this mockup today.
00:08:49.590 - 00:10:24.580, Speaker A: I had some preexisting stuff, but do you get my screen? Okay, so the idea is I have been building this content Identifier, which is basically a fingerprint, so it preserves certain components. For example, if you have a JPEG image and a PNG image with the same visual content, then this part of the Identifier would be identical. And so it takes different perspectives on the data and on the Parsed data and this is an Identifier that everybody can create from the open source code that I have been building. And the idea for Hackfs is to build a registration application where you can register your content in a smart contract on Ethereum, which would just simply drop an event that this ICC Identifier has been registered here by this address. So this would be the signal to the world and maybe put some metadata and preview data and detailed granular fingerprinting data on IPFS or filecoin and then basically give the user back a short Identifier which is owned by him. And multiple people might register the same content and get a different short Identifier so it could be registered anywhere else the content. So that's the basic idea.
00:10:24.580 - 00:11:11.070, Speaker A: Yeah, very cool. I hear there's a smart contract and then there's some registry of information tracking that. How are you modeling the registry? Well, the registry is basically it's a meta registry. So the short code that comes up is basically by parsing the contract events and maybe even parsing other blockchains. So you could register this ICC code on any blockchain which implements the protocol. And you have a meta registry indexer. I have been thinking about maybe the graph would be a match for that if they integrate more blockchains.
00:11:11.070 - 00:11:53.982, Speaker A: So you basically watch the immutable stream of events and create these short IDs which are then basically binding. The ID is short owned and binds the content to the identity who registered it. And from one short ID you can find all the other people who have registered the same or similar content. And from a full Isuc you can find all the short IDs. So stuff like that, basically. Yeah, got it. These events happening on a chain or multiple chains that are creating these kind of individual items that are being added over time and they're getting a short code registered to them.
00:11:53.982 - 00:13:05.254, Speaker A: Does that make sense? Are you kind of grouping together those? Is your plan to kind of have a process outside of the chain that gathers all of those and then links them together into a chain of its own so that you can see the entire registry or you kind of keep them separate? Basically, it's just a protocol. We might have an open source implementation which you can run to build that index and it will depend on what metadata and how we standardize metadata, what you can do with it in the end. But the idea is to have an open public space of standardized fingerprints and data, which enables developers to collect data on which basis they can build like concept matching stuff or whatever they want. Because today you cannot do that because all this fingerprinting data is owned by big corporations, it's proprietary and internal. Google and other big companies hold all the fingerprinting and matching information for all the content and we want to democratize that and standardize that. So that's the idea. Yeah.
00:13:05.254 - 00:13:47.480, Speaker A: Got it. Probably my suggestion would be think through even without having to actually build any of that, think through two or three use cases for ISTC. Meaning think of a concrete ways in which people would be using the metadata itself that you're aligning so the title, description and any other information you're trying to gather. And then as you think of those use cases, consider whether or not you need to make use of that index or not. Because if you do, you may have to do a lot more of the kind of modeling of that index itself and how to make it part of the protocol. Meaning it may be beneficial to just establish that there's going to be for sure an index and so on. And here's how it works.
00:13:47.480 - 00:14:34.050, Speaker A: But it kind of depends on the use cases. Maybe my feedback would be get some more concrete perspective over those use cases and how to serve. Yeah, okay, there are quite some use cases. We have a lot of collection there. We are talking to ISO or we have an ISO working group and we have experts from 30 countries, from the commercial publishing industry which we are discussing use cases with. So there are basically many. The idea is to have some content Identifier that is in the usual sense does not just identify data.
00:14:34.050 - 00:15:25.730, Speaker A: Because I think what the CID from IPFS is doing, it is identifying data. It's not a content ID, it's a data ID because it's a cryptographic hash. And what we're trying to do with ISC, is have a higher level of abstraction because it really identifies in a more abstract manner the perceptive content. Are you talking about the metadata? Because you can model the metadata as parts of the graph and you can use CIDs to point to metadata. Are you saying I think the benefit of putting a smart contract on it is that you have a stable Identifier that can mutate right. So if you have a stable Identifier that you can then map to updating the metadata so for example, you add to the metadata in the future without changing the Identifier. I think that's the utility of having it on a smart contract.
00:15:25.730 - 00:16:15.410, Speaker A: If you don't need the Mutability at all, then I don't think that you need a smart contract at all. You can just model that metadata. You can put all of that metadata in, say, a textile thread, and you can be building up this registry with all of the data structures that you're describing, like title, description and a whole bunch of other metadata. And you can accumulate all of that in a chain of claims and a chain of records that doesn't have to be rate limited by a blockchain. So then you can grow way faster and don't have to deal with a transaction cost of a blockchain. But if your goal is to have mutable Identifiers, then definitely, yes, definitely use a smart contract and mutate that but at that point really make use of that. No, I'm more of talking about having Identifiers that basically preserve.
00:16:15.410 - 00:16:58.178, Speaker A: Now, you see, this is a JPEG image with color. And this is the TIFF image, smaller in black and white. So it has completely different data. And if you decode the ID, you can see that the data and the instance ID are different for the two images. But the content ID and the meta ID, which is then generated from the metadata, stays the same. So it's basically a hash that changes gradually depending on how much the content changes. And you can index the Identifier itself because it's a 64 dimensional vector which puts the syntactic identity into a 64 dimensional space, which you can search.
00:16:58.178 - 00:17:46.500, Speaker A: So you can search similar or near content just based on the Identifier itself. So that's the main idea. Awesome. Any final comments for Titus? I have one question I would be interested in how maybe I'm not sure if it makes sense to integrate the IAC format or Identifier into the multi formats world. I could use help there, maybe? Yeah, I think it would be I'd love to kind of look at the demo more closely and play around with it and give you a bit more feedback. Would you mind dropping a link to the if that's live somewhere, would you mind dropping a link in the notes? Yes, of course. Do you want to have this demo or the site? I send you both.
00:17:46.500 - 00:18:09.210, Speaker A: Yeah, whenever you have it. Don't do anything special for me. I can definitely just come in as you progress in your hack and so on. But, yeah, I'm happy to play around with it and give you more feedback. Great. Thank you, Titus. And remember, anybody it doesn't have to be just one giving feedback.
00:18:09.210 - 00:18:34.190, Speaker A: Anybody can jump in. If you have a question or a comment, feel free to take part in this. This is meant to be a collaborative collective thing. Next up, sharif. Are you ready to go? Hey, how are you? Good. Okay, so we're not as technically advanced as a lot of the people on this group. I think we just have a good idea.
00:18:34.190 - 00:19:11.494, Speaker A: And we started learning Columbia Group maybe two months ago, three months ago. So definitely not experts. I think what we could use help on is maybe a little bit of guidance. But I'll tell you the idea very quickly. It's a concept where we're trying to create a brokerless environment so that you get into the situation where you have a much more transparent environment between the tenant and the landlord. And we're trying to create it in a way where you have a nice front end, where you can actually start bidding for the different apartments that you'd like or don't like. And at the same time, you have a previous tenant that can show the apartment and get a rebate on their rent.
00:19:11.494 - 00:19:48.886, Speaker A: So I'm going through this quickly. Because I know we have two minutes, but I think the core idea was to be able to do that off the blockchain. So we did work on solidity a bit and tried to code that. Our issue was marrying the front end with the back end. So the middleware, I guess, is what it's called. And finding the best way to create a verify way to verify some of these users coming onto the platform. Because the core part of this is really just taking in all the deposits that these different users put in and lumping them together to be able to get a better rate at the bank or whatever.
00:19:48.886 - 00:20:33.826, Speaker A: So that instead of getting peanuts off of the interest of the deposit that you leave with the landlord within a year, you're actually getting some real money back. And you can also give some to the landlord and of course, us for creating that environment for you. So I think the simplest concept is trying to create a platform where someone can go in bid for a property. The landlord has the ability to see the property sorry, the bidder's bid, as well as their credit score and their background and be able to quickly make a decision. And once they've sort of selected that person automatically, they get their account deducted. That money goes into the landlord's account, into our account as the service provider, and the first month's rent is paid. And then continuously you do this off the blockchain.
00:20:33.826 - 00:21:27.734, Speaker A: And essentially what happens is when you have a number of users, instead of just my deposit worth $3,000 of rent, it becomes way more. It becomes maybe $100 to $200 million worth of rent deposits that are put into a bank that you could start making a spread, you could do a lot of financial products off of the back of that. That's the concept in a nutshell. I think what we're struggling with is trying to find a way where that front end fluidly goes into the back end. Also the ability to store this data in a way where it's beneficial for the future as well for us, in the sense of building a database on these users and actually being able to offer them much more services going forward. So I don't know how much depth I need to go to in those two minutes to be able to explain this because I'm sorry, I heard a lot of different presentations and I understand the concepts. I just don't know how to bring things together.
00:21:27.734 - 00:21:52.730, Speaker A: Technically. Our team is sort of trying to struggle with that. We're still virgins, if you want to call it that, at this game. So any help on that would be lovely. Awesome. Thanks for the summary. First question is, what have you looked for? Are you building your own claims network or Verifiable claims framework data? I think that's something we would probably outsource.
00:21:52.730 - 00:22:36.030, Speaker A: So that's something we're looking to see. What channel is there that we can like, for example, I did use an app or website before where I did rent out an apartment. I had to fill an application and part of the application was a verification of my credit score and my background. And it goes to Experian and I can't remember the checker, I think that was called. And then it automatically gets that file to the landlord. So that was part of what we're trying to build into here. But I think the key for us is really being able to do all this through the blockchain so that, again, this is a secure, solid contract that's automatically paid without any of the complications that you have in dealing with a broker and someone trying to up you on the price.
00:22:36.030 - 00:23:03.880, Speaker A: Everything is transparent. Everything is there. You take away the middleman and the landlord saves money, tenant saves money. I think this is a scenario where everyone saves money in the process and actually can make some money as well. Anybody have any comments or feedback? Sure. What about something like, I was just trying to think of how to get rid of the credit and everything? Yeah, please. Awesome.
00:23:03.880 - 00:23:43.822, Speaker A: This would be a two step process. What if you just let the renters stake and so you could put up, say, a year's worth of rent for the opportunity, and then you only get that back when you're done renting. Now, what do you do for renters that can't afford that? What if that stake earned an interest? So as long as the stake existed, the person who's renting you the place would pay back to the interest because they get this guarantee that you'll keep paying. And so you could have other people stake for you and earn an interest on that stake that they make. That's an interesting concept. We haven't looked at that angle honestly. You could socially ask people, like a guarantor.
00:23:43.822 - 00:24:19.710, Speaker A: I could ask my family to stake for my rent because I want to get it like a guarantor. That's a good idea. I think the only concept that comes to mind is how fast can that sort of pick up versus the individual trying to do it on his own in just that month? But I think the optionality of that is actually a brilliant idea, actually being able to give someone the chance to also make a lot more interest on their money just sitting there. Idling. Yeah. I feel like my landlord, if they knew that rent was guaranteed, they'd happily give me, say, two, 3% off, 6% off, but instead just have that go back to the stake pool. Yeah.
00:24:19.710 - 00:24:51.066, Speaker A: And then the person who controls it there you go. No, that makes a lot of sense from my side. So that sort of takes care of that side. We're trying to tie it in so that it flows nicely into the blockchain there's. JavaScript there's a lot of different things that we're sort of learning as we go. And I'm wondering is that the right approach or is there some technology that we should be looking at that's a little bit more advanced and can save a little bit of that effort? I don't know either. I'm not your guy for this.
00:24:51.066 - 00:25:36.610, Speaker A: I just had an idea. Thanks Andrew, I appreciate that. I think my suggestion, it's a really cool idea, by the way, and I think it's a lot of potential there. I would also note that there's a lot of countries around the world where they don't have very good financial infrastructure for this precise kind of problem. And so being able to use the kind of like the superpowers of DeFi to enable all of this I think would be amazing. And you could get a lot of markets to be a lot more secure for a lot of folks without having to rely on the local infrastructure, without having to rely on local notions of credit or anything like that. I think leaning into the advantages that you get from the DeFi landscape I think will be really useful.
00:25:36.610 - 00:26:54.702, Speaker A: In terms of the suggestions for the technical side of things, I would probably recommend I think that there's a fair amount of complexity here in terms of building the application and deploying it as an app that people can look at as a website and then kind of user accounts and dealing with the smart contracts and whatnot. I think if everyone in your team is super new to all of this, you'll probably struggle with a lot of those pieces. And so I would recommend either trying to find trying to level up your team's knowledge by maybe finding another teammate that is still another person that might be still looking for things or working or finding a way of getting a lot of guidance over time through office hours or discussions on chat of like, hey, we're trying to do X. How should we do that? And just asking for a lot of help on architecting the platform because I think if you kind of nail that architecture up front then you may be able to kind of make it through the whole hack without having to learn a ton about all the pieces. But if you're trying to figuring out as you go, then I think the knowledge is going to be really key and so having somebody in your team that can sort out a lot of those pieces will be really important. Thank you so much man. Appreciate that.
00:26:54.702 - 00:27:18.802, Speaker A: We'll definitely reach out to you guys in the hours and try to see how we can work this out. Really appreciate it. Definitely a big project for sure. Karate, you want to give one last comment? I wrote some notes in the docs and you may already have these answered and that's totally fine. You can just feel free to delete or erase them. So the main question I had is this is an online brokering market. For example, the MVP is for properties first, so it's going to have the ability to list these properties.
00:27:18.802 - 00:27:58.434, Speaker A: And so there's going to be an order book type of component. There's going to be basically a matching component, right? Then there's going to be the smart contracting component. And so the things that I said was when you design your MVP for something like this, I'm very good at, so you want to break these into modular components so you can build a very basic system that you can present, right? And then get out there as quickly as possible so that people can see it. And so I just wrote think about the data structures. What is mutable, what is not mutable, what is identity, what is not an identity, what is going to be browser based, what is going to be on chain, what is going to be off chain? And then you can look at what's already been built. There's a lot of stuff out there already you can look at and then you can compare it and make it better. But there's so much this product is like it just goes on forever.
00:27:58.434 - 00:28:31.146, Speaker A: As a property owner, I could imagine if I could move there's so many things the service market, there's so many services that would love to integrate with this. I'm talking about I recently had a leak, I'm in a condominium. It's the controlled building, right? So I'm the owner, so I have to deal with all these things. There's insurance markets. So this idea has that's exactly, you hit the nail on the head. I mean, I think what we're trying to start with is get the traction and then all these ancillary services that can support the rental market is going to kick in. After that, I think people will want to be we call it the block.
00:28:31.146 - 00:28:47.398, Speaker A: Absolutely. Pick it up? No, not yet. We're working on it. We got deep fryer, man. Thank you so much. Thanks guys. Thank you everyone.
00:28:47.398 - 00:28:59.830, Speaker A: Appreciate it. Sorry. Thank you. No worries. Next up, Geoweb, where you at? Hi. I'm graven. I got Cody Hatfield on here with me.
00:28:59.830 - 00:30:10.654, Speaker A: I'm not sure if any of our other team members are on here, but we're working on a project we're calling Geoweb. Essentially we're trying to build decentralized infrastructure and an administration system for a new type of web experience where user geolocation is the navigation, the primary navigation mode instead of domain names. So the idea is as we go from smartphones where we have a discrete interaction, open up an app, go to a website, as we go to Smartwatches and Smart classes where it's just a quick check or I'm walking down the street, you can create a frictionless user experience if it's done in an orderly way and you're actually providing relative good content. So essentially the Linchpin is a DNS like registry, but instead domain names, it's plots of land. There's one owner for every plot of. Land on Earth, and they have the right to link content to that. And then the second big piece, because there's other kind of AR property things on the blockchain, is utilizing a harbor tax system.
00:30:10.654 - 00:31:05.182, Speaker A: I'm not sure if people are aware of what that is, but it's kind of like a blend between private ownership and shared ownership. And it's got some really simple rules that can be implemented with a smart contract. Essentially, anyone could buy a piece of land, but they have to self assess the value of that land and they pay a tax on that, so they don't want to over inflate their price. But the catch is that anyone can buy that land, force a sale by paying that self assessed price. So you get to that market equilibrium, you get allocative efficiency, and you get essentially, hopefully, the good actors owning the piece of land and do it in a decentralized way rather than having to verify are you the real landowner? You get the digital land near world version. So it's a big project. We're focusing on kind of the infrastructure and administration as it grows out.
00:31:05.182 - 00:32:09.250, Speaker A: There'll have to be like a browser that interacts with this for different types of content. There'll have to be different resolvers. If you guys are familiar with how ENS did their DNS structure and what else is there? I guess the other really cool thing why I think this is awesome for IPFS is because people looking for content will be geographically clustered. So a peer to peer method for transmission has the opportunity to be really efficient rather than the client server because everyone's standing right by each other questions? I guess I forgot to say what it could be used for. I said AR, but it really could be any type of digital content from like simple data feeds. You walk up to a restaurant and it shows you how long to wait for a table. Or it could be something like high fidelity augmented reality content anchored to a location.
00:32:09.250 - 00:33:25.760, Speaker A: So you go to a park, you see some art, you go into a museum, and everyone can have that shared experience of the augmented reality sculpture. You mentioned ENS, and you're probably looking at a bunch of other things, but what other prior art have you looked at and have you found any errors that you're planning to try to avoid or kind of how are you going to structure it differently than instance, this is the way that it's already been approached previously? Yeah, it's definitely ENS was a big time help. They've got a pretty elegant implementation. We're looking at different things for how to define land and whether it's just geocordinates, like a polygon defined, or whether Google has an open source tool called plus codes that they've essentially gridded out the whole Earth and they're all unique. So some work to do there. I'm not sure what the best method is there. As I mentioned, there are other augmented reality platforms on blockchain, but I think the big thing is the harbor tax and getting that allocative efficiency to make sure the right people have the land.
00:33:25.760 - 00:34:29.010, Speaker A: And I mean, it's meant to be open source, meant to be a public good so that tax revenue can be reinvested back into the system to create more social good. I think this is really cool. Really awesome idea. I think that there's a lot of potential for creating a virtual registry of physical land and there's a lot of applications from AR to games to all kinds of things. I think that the idea of a bunch of the ideas on how to do the tax and so on, really cool to explore those. I'd probably break up the idea into individual modular components that can provide useful can be kind of like a useful building block for something else. Meaning when you think of the whole idea and the whole platform, there's probably a lot there and way more than you can finish within the time frame.
00:34:29.010 - 00:35:32.840, Speaker A: So really kind of figuring out what the MVP of the hack is and ideally thinking about these different components that could be used in ways. Yeah, I think getting to that definition would probably be a really good next step. And then from there you can derive what are the technologies that you actually need to use and how you get a couple of prototypes working out. I would probably emphasize getting to something you can test out with actual users before settling in too hard into a model for the registry or a model for the app and so on. Just think of the first few prototypes with users as a way to get a lot of understanding of how people are actually going to be using this, because you might accidentally think the registry should be shaped like a and then once you go and spend many weeks building that, then you realize actually there was some important fundamental difference that users really needed. That puts you in a different spot. So I would probably aim to go to working prototypes quickly.
00:35:32.840 - 00:36:04.060, Speaker A: Yeah, I appreciate that. We've gone back and forth whether we need to show the user experience or the administration first. So that's good feedback. I appreciate it. Anybody else? I know Carson has a ton of mapping knowledge that he can help comment on. Yeah, we'd love some more. Yeah, it's my old stomping ground.
00:36:04.060 - 00:36:19.400, Speaker A: Be happy to. Andrew too, actually. Our whole team has a geo background. Awesome. We'll definitely hit you guys up. Cool, thanks. Craven and Cody, I think it was your jimmy.
00:36:19.400 - 00:37:05.720, Speaker A: Next up is Jay Carpenter. Show us what you got. All right, well, thank you. This is really cool. So I guess the question is what's missing here? What's missing out of this decentralized web and space? And so, you know, we've already had at least two projects, geoweb as well as Titus's Project. The ISCC that's starting to touch upon some of the points that are missing. And I think some of the points that are missing are the need for like a Global Directory.
00:37:05.720 - 00:38:25.572, Speaker A: And we are working in a similar direction on a Global Directory, basically, but it's something that sort of sits above everything that we've talked about ethereum Protocol Labs, all that sort of thing. Many of these projects are looking for discovery, decentralized identity, all of these things. We keep hearing this use case over and over and over. So the name of our group is called Phoneword Workshops and we have five team members and we also have another person that's associated with us who's hacking on his own who's also on this session, randy Graham. But Chad Islander is one of the team members. But the idea is to stand up a blockchain that basically consists of very little information other than a pointer and a public key and strip it down to the bare bones essentials. We plan to use Go and Lib P to P for the construction of this directory chain, let's say that anybody and everybody can use.
00:38:25.572 - 00:39:49.340, Speaker A: And the other part of it is it has to be Swiss neutral so that nobody can ever own it, it can never be bought or sold and it's basically as open as possible. So I'm past my two minutes, I'll leave it at that and open it up for questions. So just off the bat, maybe Juan can speak to this even better, but building a new layer one is very hard. It's a big, big problem. So have you thought about how you might contain sort of limit the scope to the next few weeks? Because like I said, it's going to take a lot of effort. Sounds like a big project that you've been thinking about for a while, so want to make sure that you're setting yourself up for a successful project over this next short time? Well, first of all, I've been amazed at the tool sets that have been presented. Every time I think I know what a particular tool set is at Pinata Textile Unstoppable Domains and I sit in on these sessions, there's always an AHA moment where I see something that can be applied to this tier One directory we'll call it.
00:39:49.340 - 00:40:35.000, Speaker A: And Trent. You're right. I've been in this conversation about building a tier one directory for a long, long time, so I've encountered many of those issues. But basically we're looking at three minimal pieces. Number one is a very stripped down blockchain that I'll call a Spartan blockchain. Number two is some sort of example of the user experience and how all of us will be able to interact and put our data associated with this set of pointers. And number three is a key piece to this working is there has to be a marketplace for the pointers because the pointers are not just plain vanilla.
00:40:35.000 - 00:41:21.484, Speaker A: One pointer is the same as another each pointer has certain unique characteristics, much like geoweb, there will be more desirable pointers than others. It's sort of like cyber real estate. So those are the three elements. Very simple blockchain, very clean. Number two, what does the user experience start to look like? And number three, what is a marketplace for these pointers start to look like that's our minimal objective. I've never seen a fairly simple blockchain. Basically, what is the consensus algorithm? Have you any plans on that? Yeah, this is a new type of consensus algorithm with a new type of skin in the game.
00:41:21.484 - 00:42:25.024, Speaker A: And that'll be defined as we go along, but I'll call it for the consensus algorithm, proof of property. Right. Okay. So that's it. And another key piece, part of this tier, one piece is how do you get people to adopt it and how do you get people to or how does it scale? Does it have scaling capability? And another big piece that I see many people kind of overlooking is how do you create a marriage between human friendly and machine friendly? So those are some of the key elements that we're working on. Yes, Juan? Yeah, I think I'd probably echo the same thing that said, blockchains are extremely complex to build. And especially if you're making anything new and consensus, be ready for a very large group of researchers having to spend years of work to produce a thing.
00:42:25.024 - 00:43:25.430, Speaker A: Potentially, if you're going to do something that hasn't been already kind of low hanging fruit that has been already made, I don't think you need that. I think what you need is just a trace and a record of you need that directory. But you don't need to make your own blockchain. I think you should totally just use something like Ethereum or some other chain to maintain the record and then just think about how to model the chain of claims and the registry itself. And you could probably just do that over the same way that ENS does it on top of Ethereum. You could also do it as a textile thread that you add and then you just stamp into Ethereum or into Falcon or things like that. And I would maybe focus entirely on the directory part and what is the utility of the names and rebinding those and so on, and actually making the marketplace for buying these names and thinking about how those names get mapped to content and other things like that, and just get that part of working.
00:43:25.430 - 00:43:51.100, Speaker A: Don't get sucked into the whole building an entire new blockchain thing and just use the tooling that's there now. Later on, if you find a very strong need for making your own chain and so on, you can address that. But but I would claim that that's extremely unlikely. Thank you. Thank you for all your feedback. Appreciate it. All right.
00:43:51.100 - 00:44:14.464, Speaker A: Yeah. Jay, if you could if you have anything written, feel free to because it's a big idea you're trying to convey. So definitely, if you have written things, share those in the chat and people can also look at that. All right, we're going to move on so we can get through some more people. Entangled storage, are you still here? Yes, that's me. Go ahead. Remember, keep it short so we can get through, everybody.
00:44:14.464 - 00:44:42.670, Speaker A: All right, so first off, I'm glad to make it to the end of week one. Thank you very much for the great programming. It's really learning a lot of stuff, meeting cool people. So the idea itself is fairly straightforward. We just want to build erasure coding layer on top of IPFS. So I am familiar with erasure coding by itself. I'm kind of new to the Lip P to P world, so I'm fortunate to have met some people who are more well versed, who are part of the team.
00:44:42.670 - 00:45:26.968, Speaker A: So the basic idea is to use this novel form of erasure coding called alpha entanglements, which allows you to use redundant blocks, reuse redundant blocks for more than one data block. So with Read Solomon encoding, for example, you just have a data block that you could use for oh, sorry, heard some background noise. But yeah, with Read Solomon coding, you'd be able to use redundant blocks only for one certain data block. But for entangled storage, you can actually use redundant blocks for more than one kind of data block. So for different files that are on the network, you can use them. And it's fairly straightforward. It works with XOR, so that's all there is to it.
00:45:26.968 - 00:45:54.880, Speaker A: In terms of the idea, I think the challenge so far has been for us, I think this is just a research phase. We haven't even gotten to development yet, which will probably be like, next week. Yeah, it is going to be. Finding out where to put it in the IPFS stack. So I'm kind of new to the world of IPLD Lib PDP in general. I've heard a lot of stuff there. I've done some stuff initially when I came into the hackathon, I was thinking of integrating it with the distributed hash table layer.
00:45:54.880 - 00:46:52.228, Speaker A: I was thinking something like, have it in Cademlia itself. In certain branches, you'd have redundant stores or redundant data blocks across the branches so that it's accessible even if data blocks go down in a bunch of branches. But I've heard about IPLD and the capabilities offered there, so I'm kind of looking into that to see how we can leverage it. So that's pretty much it, as a description goes. So what is the use case? So in the end, are you trying to recover data where you have bitrot and be able to recover data where the full data is not there by using erasure codes? Yes. So either that or we also want to simulate I think the end goal for us is to simulate a lot of node churn, either very high node churn, or very unstable node churn. So very randomly, nodes just keep dropping off.
00:46:52.228 - 00:47:21.648, Speaker A: I think that's the end goal for us. We'd like to maybe benchmark it with just standard IPFS, then read Solomon codes and then alpha entanglements. I don't know how ambitious that is at this point, but I guess we'll find out over the next couple of weeks. Another thing I'll add is I think they're doing similar stuff in swarm. I think the exact same team with Veronica. I think she's the one who wrote the paper, veronica Galinianis. And yeah, I'm kind of in touch with her as well.
00:47:21.648 - 00:47:56.852, Speaker A: They're super helpful to kind of give advice and stuff. Yeah. And I'd also appreciate any advice. I know there's an open issue from 2016 for the Reed Solomon coding, so if anyone knows of any work or that's happened so we don't have to reuse a lot of work, that would also be really cool. I don't know if you've interacted with Ignacio from the textile team. He's not on this call, but I'm volunteering him to give you some feedback on that. He did some work on this.
00:47:56.852 - 00:48:26.100, Speaker A: We had an internal team hackathon where he implemented just basic Reed Solomon for Filecoin, and I'm sure he'd be more than happy to share any details here. I'll put a link in the slack just to that demo. Yeah. Thank you very much. This is really cool. It's awesome. I think that there's a ton of utility in a lot of different ways that this tooling can be useful in a bunch of different parts of the stack.
00:48:26.100 - 00:49:39.500, Speaker A: Also if you decouple kind of how you use different schemes of erasure coding with what specific algorithms you're talking about. Meaning, like, if you create a pluggable thing where maybe you implement one at the beginning, but it's relatively easy for other people to create different schemes, that could become a pretty useful library that you can plug into a bunch of different projects. It's been, like, a very long standing to do for the entire stack to think about how to integrate this in a bunch of layers. I think you have a lot of room of exploration and a lot of really valuable pieces along the way. It may depend. Maybe the advice would be think of a very concrete kind of achievable goal for the hackathon to show something that either produces a library and then integrates it into one of the pieces of tooling. I think maybe Powergate might be a good example of if you add it in as a feature, either on top of or underneath of or alongside Powergate, it might be a really good integration point.
00:49:39.500 - 00:50:29.150, Speaker A: Another point would be to go deeper, lower level on the stack and start looking at seeing it as a library right before you hit IPFS, where instead of things writing to IPS, they write to this other tool first. They break up all the they chunk everything, and you get the actual blocks of data and the actual graph, and then you take that and import it into IPFS. That might also be a really good integration point. I'm happy to talk to you through different approaches to writing this tooling. I've thought a lot about this problem, how to combine many different kinds of schemes with an interface that is pluggable into different libraries. There's a lot of thorny parts of this where if you go one route, you make it very difficult to use in some other context. So happy to walk you through that later point.
00:50:29.150 - 00:51:17.944, Speaker A: And I would say maybe look for an easy to implement algorithm at first. I think that there's a lot of really awesome stuff in there. Asia code, land. I would just use a library that already exists that you are comfortable with. Don't have to implement a lot of the stuff yourself, unless your goal is to actually get some experience building that algorithm. But you might just spend most of your time getting that working really well, as opposed to getting the integrating it into products and integrating into other things part. So maybe really figure out what you want to achieve in this time period and what will be like sorry, there's like some other thank you again.
00:51:17.944 - 00:52:03.800, Speaker A: I think it's a really cool idea. Really great to do the entanglements. You could also think of I'll throw another potential application for this. Think of creating a contract or a standalone application where you add your data to it and it will entangle it with everybody else's data and keep producing this very large record of stuff that keeps getting erasure coded into different, different shares. So then you produce this large collection of content that is very difficult to delete, right? So you can create the notion of a public record that is extremely difficult to lose. So that's like an application of things like alpha codes and so on, but that's less on a per file basis and a per small piece of content. And you're creating like a very large ocean of data that is all entangled together.
00:52:03.800 - 00:52:32.744, Speaker A: So a lot of really good papers from the Think talking about this where people were building systems entirely to entangle all of large, large amounts of data together. All right, I hate to cut it, but we're going to have to move on. I'm sure Juan will have plenty of links to drop. Thank you. Thank you, Gov. Before we move on to the next team, let's try to get everybody to throw on their video and just throw up a one for the end of week one. We'll just get a screenshot.
00:52:32.744 - 00:53:00.590, Speaker A: This is the closest we can get to a group photo, so I'll wait for a couple more people to throw on their video, see if we can get it full anymore. Hold the pose. Hold the pose. Awesome. Cool. That wasn't so bad. All right, we're going to keep moving.
00:53:00.590 - 00:53:41.416, Speaker A: Next up is social activism platform. Nestor, hello. Thank you. First of all, thank you for present. Okay. The project that I'm working is basically a platform of semi private profiles of tech and not tech savvy John Shenchmakers and social activists to build an Immutable profile that allows civil society organizations to allocate resource efficiently. So the products that I'm planning to use are smart contracts, pinata, Unilogging, the Stoppable Domain, and Textile, which I don't have.
00:53:41.416 - 00:55:23.524, Speaker A: It clear how to implement it, but I'm open to ideas. So the feedback that I would love to have are mainly two. First, ideas on a profitable business model on it, and second is on the part of semi private profiles because the idea is to have this contract, smart contract where change makers can create a record and multiple record of their actions. And there is the tricky part because I want to allow the change maker to create action on the blockchain that could be public sometimes, but sometimes private because let's say you're an activist that participated in an international democracy program, but you live on an authoritarian regime. So you would like to still add that opportunity to your profile, but at the same time you want to keep it private. It means encrypt, but at the same time you want to provide some sort of an expiration key to an organization you are applying for an opportunity, for instance, let's say an organization that is on the platform, create a new opportunity for a democracy program number two, or for 2021, and you want to apply for that. So you want to share your profile and say, okay, you can access to all my records and some of them are public, but some of them are private.
00:55:23.524 - 00:56:26.670, Speaker A: But you want to have to give some sort like this key. But this key have an expiration date in order to come back and lock the information that you think should be private to you, but only open that information for a specific opportunity in a specific period where they need to analyze you as a change maker of social activists to decide if you are a right candidate or not. So basically that's the idea. And I'm open to any ideas. So just to summarize, you want to be able to reveal and conceal different bits of information at different times. Exactly, but at the same time have it in a blockchain immutable to prove that you already did those actions at a specific time. Build that trust.
00:56:26.670 - 00:57:20.290, Speaker A: So the first thing that comes to mind is Macy, which is minimal. Look it up. Minimal anti collusion infrastructure, which is sort of similar, but it gets into ZK stuff, so it might be a little bit too I mean, I'm not a developer, so this is all too advanced for me. But it might be a little bit difficult to kind of wrap your head around something like this and integrating it. But basically it allows you to do a vote on something without being able to prove what your vote actually was. So it eliminates some blackmail attacks or bribery attacks for certain voting schemes. I put it in the notes for your section, so maybe that's something you want to look into, but I'm sure other people here might have a little bit more knowledge on that and other schemes that you could possibly use.
00:57:20.290 - 00:58:11.250, Speaker A: Thank you. One thing I'd mentioned, so pattern we've recommended a lot of people utilize in your scenario when you want to use, say, private information that you only want available at certain times. The cool thing about IPFS is you can put data into it, but you don't actually have to share it to the network. You can still get that hash or the content Identifier back. So what you could do in your scenario is say, you could run your data through the hashing algorithm and then put that hash on the blockchain without actually hosting that data for the rest of the network. So then at a later point in time, what you can do is you can say, hey, this hash proves that I did this at this point in time. But now that I want you to have that information, I'm going to actually upload it to a node and share it.
00:58:11.250 - 00:59:04.652, Speaker A: All right, yeah. Thank you. But the idea that I'm not clear is how to create this revocable key, this key with an expiration in order to, okay, you have the information store, a private event store in the blockchain with a hash, just with a hash that is in IPFS. But how you could provide some sort like a URL to an organization when you are applying for an X opportunity in order to say, okay, you can read all my traceability of all the actions that I did for this time that you are deciding if I'm the right candidate or not. But after that, revoke that access. That's where I would like to. There is a basic problem that anything you put into the matrix stays in the matrix.
00:59:04.652 - 00:59:48.680, Speaker A: So even if you could revoke access there, once it's on IPFS, you never get it out. Potentially. I think it's true about the entire Internet, though. Once you disseminate some information anywhere, it's very difficult to pull back. I think a good direction with this is being able to selectively decrypt some pieces of the content. There's a lot of really good work on this. I think what you're talking about, Nestor, is getting to a point where you can gather a lot of different claims that are themselves verifiable encrypt those claims and make it easy to decrypt only individual claims and show them to another party.
00:59:48.680 - 01:00:32.984, Speaker A: Now, if they go ahead and leak that claim to the rest of the network and show it and so on yeah, then it's kind of hard to get around that. That's just a general problem with computers. You can't really prevent anybody from leaking something they want to leak. But at the very least, you can definitely get the ability to have immutable records of claims that are kind of like mutable in the sense that it's an append only log of records and claims that's growing. But then you're selectively decrypting for specific parties. And I think there's a few libraries around that I recommend looking at how Zcash did this for. They allow you to selectively decrypt only some of your transactions so you can show them to a certain party.
01:00:32.984 - 01:01:32.820, Speaker A: Like if a party is trying to audit you or something, you can selectively decrypt a portion of your transactions to that party. And it's this kind of work. There's other works in kind of like medical record space where people have been thinking about this problem of how to do specific decryption of only a subset of a data structure. And I think this might be something really cool to build on top of textile threads, where it might be really useful to have a textile thread where you're accumulating all these records and you're kind of like pointing to all these data structures that accumulate these claims. But the claims themselves are encrypted with individual keys. So then you are able to kind of just hand out those keys and selectively decrypt those pieces, and that will solve kind of like, most of your problem in terms of aggregating the records for a specific party. Then from there to create this broader registry with a lot of people and so on, that takes it in a different direction.
01:01:32.820 - 01:01:53.620, Speaker A: I would probably encourage you to kind of break this up into pieces and then find one piece and get a demo working for that piece during the hackathon. Right. The other thing I would just one tip. Maybe have a look at proxy re encryption. Yes, look that up. That's exactly what I was going to say. So, perfect timing.
01:01:53.620 - 01:02:16.504, Speaker A: Okay, got it. Thank you. Yeah, combining that with threads would be probably great. You encrypt it one time and then use proxy re encryption for specific parties. Awesome. I put a bunch of these comments in that doc, so make sure to check that out. Nester all right, we're going to keep pushing.
01:02:16.504 - 01:02:56.500, Speaker A: Next up is Josh Purcell with web3 context. Thanks, guys. Hopefully this will be quick. I've had this big idea, and I've tried to boil it down to something that's really doable during the hackathon, but it's an automatically updating contact app. So you would just put your contact information in this app. Eventually it would be like a mobile app, potentially, but then you would share that with other people, and then you would be able to request information hold on 1 second. Sorry about the background noise.
01:02:56.500 - 01:03:43.716, Speaker A: But you would be able to request contact information from other people, and then you would slowly build up an address book and that contact information from other people. They would be able to update it. Themselves. You don't have to worry about it. My grandma would not have to worry about remembering what my new number is. But over time, you would just have this address book that would be automatically in sync. I'm thinking about a threadsdb would be a perfect database for this, but keeping it in sync and also changing out the information to the new hashes, that's something that I haven't figured out entirely, but so far I'm not running up against any particular blocker.
01:03:43.716 - 01:04:40.430, Speaker A: I'm interested to hear what you have to say. Yeah, I mean, without trying to make this into the thread show, I think that's a perfect application for that. And essentially, if you have a well defined structured identity or address book schema, then the automatic update of those would happen. It's mutable. So the thread DB handles the sort of mutating state through all these Immutable updates. So the cool thing there is that you'd end up with syncing context states, but you'd also have a record of the history of that so that you could trace back and say, I swore that so and so's address was blah and you could actually trace back and see when that address changed. Potentially audit your friends.
01:04:40.430 - 01:05:22.248, Speaker A: That's always fun when you can correct your friend in a conversation. Oh, actually, I think you changed your address on this date, so yeah, I mean, that seems like a perfect fit. The mobile piece is a little bit more tricky, but something we're really interested in supporting. So we'd definitely like to talk to you about that. Yeah, I think that the schema around the profile would be ceramic looks awesome. Three box and ceramic are both really like that's. I think one of the reasons why I'm here at the hackathon, so that plus textile are the big technology I'll be focused on.
01:05:22.248 - 01:05:39.890, Speaker A: Awesome. Yeah. And Andrew just posted in the chat here, if it's a react native web app, that's actually good to go. We do have libraries working there, so it could be a good MVP. Awesome. Thanks. Perfect.
01:05:39.890 - 01:06:20.444, Speaker A: Let's keep moving with the next hacker up, which is Andre and Video Call. Hello, everyone. I'm Andrea, and just to clarify, I started coding three years ago and when I found open blockchains like Ethereum, so my knowledge is really focused on Web Three. I don't know so much about Web Two, so maybe I say something that is anyway, our goal is to build a fully decentralized app. So we thought we could do like a kind of video vault for a content creator. So a kind of Teachable.com but decentralized so that they can store their content.
01:06:20.444 - 01:07:27.810, Speaker A: And we were thinking about using a smart contract type like Uniswap to give them the possibility of every content creator to sell his own authentication token and make people only who have that token on the wallet to be able to see the content. And that's more or less what we're trying to do. We are looking a bit about textile, about the way for storing the content in a private way. And we are trying to research if we can make multiple steps of private data and more or less is what we are trying to do. Our goal is to make it pretty simple. Like just if you buy like a full time membership, like buying the tokens of the content creator and being able to access the content. I don't know if it's clear or not that's what we're trying to do.
01:07:27.810 - 01:08:15.730, Speaker A: So at the moment, I have not so many questions, but I will have them in the next days. So I hope I can reach you out. Yeah, I'm assuming you staked for the event, but Unlock Protocol is the service we use for that and it provides a really similar functionality. So if you're looking for inspiration or want to see some projects that have already done some work in this, look up Unlock Protocol. And I know there are probably a few others in the Ethereum space, especially there's a lot of content creators. I'll have to find which ones I can't remember the names now, but Unlock is definitely very similar to what you're talking about. Okay, thank you very much.
01:08:15.730 - 01:09:21.350, Speaker A: Mint Base. Yeah, I think that there's a lot of really good use cases there of just being able to kind of share content and media that you can unlock either for a fee or with a specific token, potentially just doing something maybe on top of a bucket or something, where you make it easy to produce a website that is itself encrypted. Most of the content is encrypted, but it has kind of like the part of the web app that allows you to put in the key or something. And then, so you can give people a link. They open that link and it gives them a box where they put in a key. If you get that piece working, then you can integrate something like unlock or some other protocol to figure out the payment and whatnot to then turn that box into a pay here to unlock this content. And so you can have these self instead of thinking about a large platform, you can think of these individual statically hosted sites that are kind of like pay per view in a sense.
01:09:21.350 - 01:10:14.884, Speaker A: And sure, somebody could pay once decrypted and reshare it or something, but you could also record like a Netflix stream. That's why I have no solution for that at the moment. I think with enough friction, it's good enough and you can get a pretty good prototype of it working and then you can solve the harder problems later. I'd probably recommend Buckets for that, where you can have a little file system in a bucket for that individual site. And so it would be think of making the HTML page that allows you to do the decryption directly in the browser. So we could use subdomains of crypto in order to make every single content creator associated to subdomain. You totally could do that.
01:10:14.884 - 01:11:01.620, Speaker A: And if you want to go the more platform route, you can definitely create a thing with subdomains, and you can have the accounts of users and show the activity and so on. I kind of see that is kind of like a fork in the road for you, where doing one of those things is going to be doing the platform route or making the encrypted piece working will be quite a bit of work. So you may want to focus on one of those and get to a really good MVP with that and then think about how do you integrate the other components. So, yeah, maybe narrowing down the map will help you decide what you think is more valuable for the next few. Thanks. Any final comments? I have something for you. You might want to look into LCP.
01:11:01.620 - 01:11:26.748, Speaker A: It's an open source kind of content protection system. I'm not sure if it's a good fit. It's called LCP and it's coming from the ebook industry. Can you add a link in the chat? I try. I have to look it up. Perfect. All right, let's move on to Will.
01:11:26.748 - 01:12:27.890, Speaker A: There you go. Will, if you're talking, we can't hear you. Let me see if I can unmute you. Will, can you hear us? Try this again. Calling Will. If you're using wireless or Bluetooth headphones, sometimes they have issues connecting with zoom. No, still nothing.
01:12:27.890 - 01:12:55.352, Speaker A: Yeah, Will, why don't you try to get that figured out and we'll swing back to you next. All right, Elijah, if you're ready to go, we can hear you. Yeah, can you hear me? Go ahead, Elijah. Okay. I'll try to solve this with Will. All right, cool. Thanks.
01:12:55.352 - 01:14:00.120, Speaker A: Thanks for organizing the hackathon. I've been learning a lot. Our idea is kind of to solve a very specific problem that we're having with a platform that we're building for. It's essentially an ad network for VR. One of the problems that an advertiser might raise with us is they've got a lot of pixel data that they send over to us from a unity game, and they want to make sure that we don't own this data, that this information is kept kind of by them. But we also need to have access to this information in order for us to calculate the conversion on our ads. So when we put up some sort of ad creative on our end, we can understand where these we have some sort of unique Identifier for the user.
01:14:00.120 - 01:15:08.980, Speaker A: And essentially what we're doing is we're doing a set overlap calculation over some sort of Identifier, such as an IP address, and then we kind of calculate the set intersection with what we have and then what the advertiser might send to us. Essentially, we want to decentralize that so we don't own any of the personally identifiable information. So that stuff like GDPR is complied to and the ad kind of business and industry has always been really bad about this sort of stuff. And yeah, essentially we're hoping to use IPFS, hopefully encrypting this PII, sending it to IPFS and then doing some sort of computation on it, some sort of third party. I think there's a lot of uncertainty around where this computation would be done. And I've looked through kind of a lot of the issues in IPFS and the GitHub and there's been, I think, some chatter about how private information is. It really private if it's encrypted and it's available to everyone, that sort of thing.
01:15:08.980 - 01:15:56.944, Speaker A: So would love to hear more about your thoughts on the idea, sort of the uncertainties and a good path forward for solving this with IPFS. And I've also looked into the textile white paper and I think there's some solutions there and so yeah, I'll stop talking. Yeah, I think this is really cool. You get into a lot of very interesting problems. I think that the question of, hey, you have some ciphertext and people might leak them, will always be there. I mean, it's there right now, we're right now talking over some encrypted stream. Somebody could be grabbing the packets over an entire video stream later, breaking the key, like extracting the keys and then decrypting the entire stream.
01:15:56.944 - 01:16:27.324, Speaker A: That's always there. Definitely the problem worsens when you have the ciphertext permanently addressable. So not only do you have to catch them, but it's very easy to get them. But I would say that problem is going to get solved over time with protocols about collateralizing, this kind of thing. Meaning you can collateralize protection of a ciphertext, where if you find that ciphertext publicly at round, then you slash them like very significant collateral. So you can think of tooling like that existing. You may not be interested in doing that.
01:16:27.324 - 01:17:23.570, Speaker A: You just kind of can assume that will exist in a certain amount of time. It might not be in the next year, but I would predict that in three or four years this will definitely be kind of easy to do. Maybe the more interesting part of what you're describing is the ability to do that computation and say, okay, great, you have some data stored in a bunch of places. How do you do an interesting computation market around that? Computation in general is pretty hard. You get into not only the concerns of the data, but how do you verify that the computation was done correctly. There's a lot of different potential worlds there. I think what you were talking about in terms of set intersection, sounds like you're doing proper verifiable computation using some set of cryptographic methods for this sounds really cool and I think you could totally create a little cloud of verifiable computation for some specific problems.
01:17:23.570 - 01:18:30.340, Speaker A: I think if you don't already have a library for that, that you could rely on. And maybe I would recommend some of the Starcore stuff or a bunch of the Stark libraries that people are doing. You may spend many months getting that to work because the tech is really raw and really rough and one mistake here blows out the entire one small mistake can blows the entire encryption. So I would maybe recommend find a library that already does kind of what you want and then focus on the task scheduling of how do you go from people submit data, people want to apply a function over it and then you kind of run that. The other direction you could take is instead of doing verifiable computation, do something way simpler, which is create a reputation market for this. You have these nodes that have some important reputation, they stake money on that reputation, they run some computation and if people submit claims that they've acted unfairly, you can have a public way of handling that. You could even call in arrogant courts or something like that and if the stake is big enough then the reputation system will kind of sort out.
01:18:30.340 - 01:19:18.340, Speaker A: A lot of people have gone after the fully decentralized anonymous computation cloud and a lot of the tech is not there yet. A lot of the verifiable computation you can't really do general purpose verifiable computation fast enough to really be super meaningful for a lot of use cases. Sorry. You could also do SGX or some trusted execution environment type of thing. I think SGX is super hated for a lot of really good reasons. It's a bad model if you only have a few hardware developers on this, but broader use of SGX my impression is a broader use of SGX will be a good thing because it'll cause more developers to produce other hardware. So you could also go that route.
01:19:18.340 - 01:19:45.550, Speaker A: Gotcha. And yeah, I guess this would for our application, this is just for ads, but you can kind of extrapolate this out to other kinds of competition. There is also an issue with you would need some sort of data schema so that you know what you're doing the computation on. Okay, cool. I will definitely look into all these. I really like the reputation market idea. Thank you.
01:19:45.550 - 01:20:22.756, Speaker A: Cool. There's no other feedback for Elijah. We can jump to the next one. Tarun, you want to talk about Parcel? Hi, everyone. I'm Tarun from Team Parcel. And I'm a member from Team Parcel. So what Parcel is, is we're trying to build a service for managing crypto roles, crypto payrolls, and we're doing it through money streaming using savlier and multiple token swaps in one tab.
01:20:22.756 - 01:21:17.388, Speaker A: So we are trying to ease the process to manage crypto role and essentially so why we're doing it through hackath because the data that is available for the companies, it's confidential, right? So we need to store them in a decentralized way and in an encrypted form. So that's why I think it makes sense for us to use something like IPFS filecoin and Textile. So right now I think it would be a good time for us to discuss about the architecture that we're trying to build. So I'll give it to Taransour to give it a shot. Yeah. So for the decentralized and this encryption thing, the architecture we are planning is to planning to use Textile for it. So let's say for each user we have this FFS instance ID and that ID can be stored in a smart contract in an encrypted form.
01:21:17.388 - 01:22:10.232, Speaker A: And that encryption key can be easily deterministically calculated via user's private key so that he can just interact with Textile and just store any encrypted data on it. This is like the basic user authentication and encryption sort of thing we are planning. So it does make sense and we want feedback on it. And what do you guys think overall? I don't know if our team member Aaron is on the call, throw him under the bus. Was curious. I was actually just curious. The FS tokens, I don't know if you can set those deterministically.
01:22:10.232 - 01:22:48.772, Speaker A: So that might be one consideration there. I think the Powergate only generates them. But maybe you're talking about buckets because there are two different no. So Powergate definitely provides this token. Right. So what we are planning is we'll take the signature from user and our smart contract will store that FFS ID in an encrypted form. In the smart contract, whenever you want to interact with Textile, your authentication part interacts with our smart contract and that encrypted Ffsid is extracted and decrypted locally.
01:22:48.772 - 01:23:27.332, Speaker A: And after that you just get the data from IPFS sorry, from Powergate and just see that data and that key which is encrypting. The data is deterministically calculated using signature and its got it. Okay, cool. So what's the benefit that you're getting from doing that flow? Because I'm not actually familiar that much with the space of your area that you're working on. So yeah, just curious. So what we're trying to do is we're trying to manage crypto payroll for companies. So we're trying to make that easy.
01:23:27.332 - 01:24:05.596, Speaker A: So how to manage that in a decentralized manner. So right now there's no service that provides crypto companies to manage payroll. Right? So what we're trying to do is we're trying to store all the confidential data in IPFS and filecoin in encrypted form so that data privacy is maintained and there's no leakage of data. Plus what we're trying to do is we're essentially doing so right now. The problem is that the employer has a different token to pay and the users or the employees have different token to take. So what we're trying to build is a feature where employer can come with any token and we will swap it and give it to the employees. And that can happen for multiple employees in one single tab.
01:24:05.596 - 01:24:55.408, Speaker A: So these kind of features we're doing and we're also integrating money streaming and we're also thinking of having a delegated credit line from Aave to provide to employees. So there's a lot of features that we're trying to cover in the DeFi space, but data privacy is crucial for the project to succeed, I think, because it doesn't make sense to not have decentralized yeah, I think I've been previously. I was also into this social key recovery architecture. But now we have lot more tools to develop such a decentralized, fully encrypted application. So previously it was not there. So I think that's why we are totally focused on a decentralized service. Cool.
01:24:55.408 - 01:25:33.612, Speaker A: Do you have any README or anything written up? Yeah, for sure. We have a video demo and as well as any other feedback. I have a couple of thoughts. I think it's a really good idea to be able to properly have infrastructure for doing this kind of payroll and accounting and so on in a decentralized setting. I think there's been a lot of hope for that. And yeah, the private information piece is what prevents a lot of organizations from jumping on there. So I think you're totally right that that's really key to do.
01:25:33.612 - 01:26:20.212, Speaker A: I think we now have at least a subset of primitives that can put us in a better spot. Again, you could probably do not only end to end encryption, but also controlling which parties get access to the data. You could do a little bit of a policy restriction there to decide which groups it's only the employer and the individual users who end up getting those hypertexts. So maybe that can help. I would recommend looking at Aragon. Aragon has done a lot of work on building a bunch of UIs to do the payroll and all that kind of stuff. So maybe one direction you could take is think of hacking with Aragon and just figure out how to make all the information that it captures be end to an encrypted by default.
01:26:20.212 - 01:27:03.850, Speaker A: So bring end to an encryption to Aragon might be a way to do this, where instead of having to do all of the UI and UX and so on, on top, you focus on that. Yeah. You could also take a different route and just focus maybe on the payroll piece and try to narrow down the scope, but I think you could easily just spend a ton of time making a thing without kind of getting it fully working end to end. And so, again, like we've said, also before, narrow the focus on something you feel like you can do in the next couple of weeks. Right. Anything else? No, I think yeah, that's pretty much it. Thanks a lot.
01:27:03.850 - 01:27:40.132, Speaker A: Thank you, guys for context parcels, actually, they got their start or were heavily involved in hack money, so we're excited to see them coming back for another event. Cool. So it is 530 sorry, it is, well, 530 Eastern. If anybody has to drop, I totally understand, but if there's anybody who can stay, I think we'll stay for a little bit more. We have looks like one and maybe two if Will comes back and we can get his audio working. So if everybody's good, we're going to do one more, at least maybe two. Cool.
01:27:40.132 - 01:27:56.040, Speaker A: Awesome. This has been really great so far. So without further ado, peter, you want to talk to us? Everybody, can you hear me? Yes. Awesome. Really enjoying hearing about everybody's projects. Having a good time in this Hack FS. Thanks to the organizers.
01:27:56.040 - 01:28:46.900, Speaker A: Our project is I started off solo, ended up getting a bunch of four other collaborators to join in. So now we're a group of five. So we called our project pygate, and what we're trying to do is bring Python to the Filecoin and IPFS ecosystem. So right now, a lot of the tooling is for JavaScript and Golang developers. So I'm very keen and interested in doing what Elijah talked about. My day job is a digital archivist, and I work in a digital preservation field, and I see a lot of potential in decentralized storage on IPFS and filecoin. And we do a lot of pipeline processing of large batches of documents and government records and all stuff that needs to be private, but that's a bit of a long term goal.
01:28:46.900 - 01:29:55.388, Speaker A: And so my short term goal is to be able to build something like that with a Python framework where I'm comfortable. So for the Hack FS four week project, I just kind of mapped out a bit of a roadmap, and then, like I said, I ended up having four great collaborators join me on this. So the first step that we're working on right now, if you guys can see that little concept diagram, is creating a Python gRPC client for textiles, Powergate, so that we can make all our calls from a Python library via Powergate and get all the good functionality that we get through Powergate. So we had our first Hello World milestone with that yesterday. So we created an FFS through the Python client, and so we're making good progress on that. And then as a second step, hopefully we'll start on this next week, we're going to use the Python Flask framework, which is very popular in the Python world for Web app as it's a web framework for creating web apps. So we're going to move to creating a web application that uses that pygate gRPC client to move data to and from the filecoin network and then to monitor storage deals.
01:29:55.388 - 01:30:38.296, Speaker A: So very baseline functionality from a web app. And then this is a theory that we're all working on. None of us have tried this before, but there's some people out there in the community that have done this. They've put Flask as a backend into Electron. So it's running an Electron desktop client. So that's going to be our third step, is move that Flask application into an electron shell and then allow for drag and drop files from the desktop and then add more sophisticated monitoring of the various deals when they expire a bit of arbitrage like finding the best deals, that kind of stuff, some visualizations and monitoring. This was planned before we heard about Slate.
01:30:38.296 - 01:31:26.204, Speaker A: So I'm very interested to hear about the Slate workshop this afternoon. This is very much, I think, kind of overlaps with what Slate does, but obviously for JavaScript developers. So I think there is going to be a bit of overlap. But it doesn't hurt to have yet another tool to be doing something similar and again opening it up to different world of developers. And then if we get that far, ideally what we like to do is add an Ethereum smart contract that's going to be escrow. So let's say I'm a user and I don't want to be monitoring deals every week, every month, every year, every day. So I'm going to put $200 in my escrow account and say tell the pygate client to renew deals every day, every week, every month, like keep shopping around in Arbitrage for the best file coin deal out there.
01:31:26.204 - 01:31:57.704, Speaker A: And have that handled through a smart contract. So the user can toggle the settings on what they're comfortable with as far as risk and what they're looking for as longevity. And then reliability, how many different replication copies they want on the filecoin network. And then obviously Bithandle retrieval deals as well. So that's our project. And then the idea is to make these all each four component a standalone component that can be reused by other projects. This is really cool.
01:31:57.704 - 01:32:33.380, Speaker A: This is awesome. I think the gRPC client for Powergate will be really useful to a ton of things. I think even that with a few example demos of plugging it into other things like IPython notebook and other tooling, I think could be really good. I think one definitely come to the Slate Workshop. I think you'll get a lot of utility out of looking at that because Slate, yeah, it's on Electron, it has a lot of the UI components and so on. Slate is meant to be modular, it's meant to give you a bunch of components that you can plug and play and so on. Definitely it is JavaScript.
01:32:33.380 - 01:33:39.624, Speaker A: What you may come out of from the workshop is just a better understanding of the work around all of those deals. And then something that I would encourage you to do is think of all the science application use cases of information flow in Python. And then what you could do is instead of doing an Electron app, instead of trying to replicate a lot of the Slate functionality in Python, maybe consider using Slate itself and using the Electron app that's there. And then think of the next thing. Think of then building, hey, what would be like a really cool application for some of those science use cases of maybe it's about mixing TensorFlow with this or IPython notebook with this. Or maybe it could be a back end for your notebook files. Or there's a whole bunch of interesting integrations there where if you think of Slate not just as a good model to replicate, but think of it as components to build on, then maybe it can save you a bunch of time and you can move on to a direct application use case.
01:33:39.624 - 01:34:12.614, Speaker A: I think it still is kind of like this Python oriented component and it would be kind of mixing the Python gRPC client plus some way of integrating Python components into Slate itself. And then that could be a really cool platform for doing all kinds of scientific data programming. Yeah, we think there's a whole world out there filecoin Apps hasn't tapped into yet. So that's part of the motivation. So thanks for that suggestion. That's really great. I love all this.
01:34:12.614 - 01:34:53.990, Speaker A: Obviously I think it's super cool. But yeah, the Python stuff, you're just unlocking so many different directions you could go from there. That's really cool. So really excited to see where you go. I dropped in another one that I've been mowing in my mind for a different use case, but it's basically being able to write postgresqls foreign data wrappers in Python. So then you could open up another whole world of data people that could use basically IPFS and filecoin deals in their PostgreSQL tables, the actual data behind the deal. So that might be a future hackathon, but it's just like an idea of how Python just opens all these different possibilities.
01:34:53.990 - 01:35:53.830, Speaker A: Yeah, we haven't decided on the database backend for the Flask app yet because that could easily postgres as well. We might just run SQLite to begin with for an MVP, but totally, that's a good super cool. And actually we do have a we really for our client, we really accounting on encryption and we love the fact that that's now bundled with Buckets. And I think I've asked you this in the Slack channel before, but I guess we were kind of hopeful. We heard at some point, I think maybe that there's going to be Bucket support in the Powergate API. Is that true? Will we be able to have bucket like functionality? Will we be able to use the Powergate API to use the bucket encryption functionality? Or do we have to use buckets separately? Yeah, maybe just an explanation of the motivation there. The Powergate library is really meant to be a library that you can plug into different chains, so it doesn't have really strong opinions about how you format your data.
01:35:53.830 - 01:36:37.282, Speaker A: Like it just takes a CID and we'll start doing things with it in IPFS or Filecoin. Everything that buckets does with encryption and folder management feels to me like a whole different set of problems. So we don't have a plan to shove it in so that it's just there with the power gate. But Sander has been from our team has been working super hard. On getting Buckets carved out to be a standalone thing so that you could run alongside whatever power gate you're running. You could just run a Bucket component so you could basically chain things through so you could run Buckets, get everything formatted just like Buckets does. Use the encryption flow if you want, and then push it to your powergate instance.
01:36:37.282 - 01:36:52.970, Speaker A: And so you'll get everything you want there, but you just would run it as two different components in the same service, if that makes sense. Yeah, that's right. That's what we're thinking of doing already. So we're sprinting hard on that for you. Cool. So no guarantee there because I don't want to put Sander under too much stress. But we're working hard on it for you.
01:36:52.970 - 01:37:03.390, Speaker A: Guaranteed to work right away with zero bugs. Yeah, count on it tomorrow. Not a problem. Cool. Yeah. Love all the tooling, love all the like. It's great, guys.
01:37:03.390 - 01:37:23.670, Speaker A: It's a great ecosystem. Really enjoying being part of it right now. Awesome. We've got a wrap very soon for the 06:00 session, but if we can maybe sneak in. Will, let's give one last try for your audio. Okay? Can you hear me? Yes. All right.
01:37:23.670 - 01:38:10.302, Speaker A: It's the webcam mic I'm worried about reverb. So I'm going to mute you all for just a minute and as I go through it real quick, I am working on a distributed proofreading system, and I wanted to real quick, can you all see my screen? Can you all see anything you can? Okay. I'm working with the Hugo and Nebula award winners. It's just I wanted a problem that I really wanted to solve. And this is a collection that I would really like to exist and have available. My question that I was going to ask, since I have just a minute and I'm going really quick. This is for anyone who knows about textile.
01:38:10.302 - 01:38:56.260, Speaker A: I want to use force directed graphs to do the navigating of these collections to where this is the data that I've loaded from the Internet speculative fiction database. So you have an award and then a year, and then an award category, and then finally a book. And I want to have these books. Currently, I can use the covers because the covers are not copyrighted in the same way as the works. But I eventually want to have it's getting complicated. I'm running out of time. My main question is whether or not for a graph type structure like this, if textile is appropriate and I'll stop carson, I'm going to leave that one to you.
01:38:56.260 - 01:40:14.058, Speaker A: I don't know. I'll give you first pass on this. Yeah, I mean, threaddb is appropriate for graph style structure in that any document type store could be appropriate for a graph type structure, but it is not a graph database, so it's not optimized for graph based queries and things like that. But before I shoot myself in the foot and you find something else, we do actually have some people in the textile slack community that have been doing some GraphQL wrappers on top of threaddb to facilitate true GraphQL style queries. And you can certainly represent relationships between entities using foreign keys and IDs between objects. So for sure it's doable. So you wouldn't actually store the database would be really just representing the relationships between entities and things, not the actual raw works.
01:40:14.058 - 01:40:55.580, Speaker A: Right. So it'll actually eventually resolve to the content references. I was thinking that they'd have a force graph like this, but when they click on an actual book, or they hover over a book, they'll see initially just the covers, but eventually through a distributed ledger. I want to distribute fuller content. And I can for some there are some copy left books in this set, and there's also some public domain stuff. So when they browse down to a book, I want them to be able to see the contents of that book. Right, so then you'll definitely want to use buckets for the actual binary book data.
01:40:55.580 - 01:42:03.120, Speaker A: So it'll be a combination of sort of content addressing the actual content within your structured database. But yeah, I think it's doable, Andrew. It's just kind of like a linked data challenge, but it seems all doable. But it going to take some planning is all. Okay, maybe what I would add is oh, sorry, maybe just add one more thought, which is depending on the size of the graph database here, look, browsers are really fast and can deal with a lot of data now. So you could actually just my impression is you could probably treat storing all the data in a thread anyway, in a textile thread anyway, or a bucket, and put the entire whole app alongside like all the static front end app and so on. And then if a graph is not super big, then you could actually just load most of it into the browser, if not all of it, and then just process it there.
01:42:03.120 - 01:42:42.166, Speaker A: It might just let you work with graphs of hundreds of nodes and that might be fine. So if you think about maybe partitioning the data that way, you could just have it working that way. If your goal is to make a much larger graph when you're dealing with millions of nodes, then at that point you probably have to yeah, the architecture would be harder. Okay. Yeah. I was wondering about the size constraints for these types of databases and whether or not I was going to hit scaling. But I chose specifically these collections because they're relatively I mean there are thousands of entries, 2000, 3000 entries, but they're not huge, they're not in the size of millions.
01:42:42.166 - 01:43:11.826, Speaker A: I would say just try benchmarking it, just try getting it all into the browser and then see if it works. And then later after you do that, then apply the force graph. My impression is that resource hog will be the force graph, not the database. Okay, cool. Wow, this was a really amazing session. I'm glad we actually ended up getting through everybody and that everybody stuck around for giving feedback. Really great session.
01:43:11.826 - 01:43:56.974, Speaker A: We're going to wrap quickly because like I said, we've got to get to the next session slate at ten minutes. But last quick plug. At the end of week one, we started a new thing with some of the people on the Protocol Labs team. We are encouraging people to go to the showcase channel and share either short videos of their project or just a small update short video of you and your city with the words Hackaths written on a piece of paper. We're going to put it all into big compilation at the end. It's really cool to have people from all around the world, so we want to celebrate that. So there's two different kinds of videos you can make as well as they're looking for just a few sentences on why you were inspired to join Hack FS.
01:43:56.974 - 01:44:30.894, Speaker A: And then that written section is going to go into a filecoin blog post. So go to the showcase channel, share your successes, make some short videos and write a little bit about why you think Hackafest is important, why you think the DWeb is important, stuff like that. And then to add to that, monday will be the first official check in. We've actually had people asking, when is this check in going to be? I've been missing my check ins. Don't worry, we do them weekly. And the first one is Monday. So there'll be a little the place where you staked, the place where you did your application, you're going to go there.
01:44:30.894 - 01:45:07.126, Speaker A: You will write a quick, very short, four or five bullet check in, just about where you're at with your project, any blockers sponsors you plan to integrate. It's very short and it just helps the ETH Global team keep track of where you're at and help you resolve any issues. So go to the showcase channel. Check ins are Monday and we're going to have a ton more things scheduled starting tonight, setting up for week two. Great workshops, office hours, AMA days. The fun is going to continue. Thank you again to the people who showed up to give feedback.
01:45:07.126 - 01:45:14.120, Speaker A: This is really great. Solid content, solid stuff. And with that, we will wrap this up.
