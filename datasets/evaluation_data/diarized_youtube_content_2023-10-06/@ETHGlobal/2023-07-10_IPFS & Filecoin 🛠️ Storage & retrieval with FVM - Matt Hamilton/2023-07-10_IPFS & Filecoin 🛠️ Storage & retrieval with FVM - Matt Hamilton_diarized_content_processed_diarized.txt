00:00:07.370 - 00:00:47.002, Speaker A: Hello. My name's Matt Hamilton. I'm a developer advocate with Protocol Labs working on Filecoin, and specifically the Filecoin virtual machine, Fem. So what I'm going to talk about today is storage and retrieval using Fem and a little bit about Filecoin set the scene for people that maybe are not quite aware about Filecoin and about IPFS for example, and the differences between them. So let's just talk a little bit about what Filecoin's Grand Vision is, the Filecoin Master plan. So step one is build the world's largest decentralized storage network. Well, we've done that and we're continuing to build.
00:00:47.002 - 00:01:29.766, Speaker A: The current storage network is about 14 exabytes of data. So that's 14 million terabytes of data. So it's about 1% of the total data center storage capacity worldwide at the moment. And continuing to grow step two onboard and safeguard humanities data. So we're taking data on currently from a number of different data sources. So things like scientific data and anything from scientific data to NFTs, everything in between that people want to store on a decentralized storage network to keep long term. And then step three is bringing compute to the data and enable web scale apps.
00:01:29.766 - 00:02:10.598, Speaker A: And that's where really it gets interesting at places like ETH Global. And talking about Fem, the Filecoin Virtual machine, because Fem is the element that allows you to do programmable storage on Filecoin, so you can kind of think about it as various sort of layers. So right at the very bottom, we have a peer to peer network based on Lib P to P, which is also another technology from FalcoIn. And you've got things like IPFS. IPFS is another decentralized network by Protocol Labs. You might be familiar with it, especially if you've done anything recently with NFTs. It's used very much a lot for that.
00:02:10.598 - 00:02:56.740, Speaker A: But IPFS is kind of a non blockchain solution. It's just a decentralized storage network, but it doesn't have the crypto economic model that Filecoin has. So with IPFS, when you store data well, I'll go into this in a little bit more about the kind of the approaches you have with regards to storing data and why we now have things like Filecoin. But you can think of layer zero, Filecoin as being the storage layer. You think of layer one as being Fem, the compute over state that we now have that Fem enables. And then layer two will be things like what, hopefully people within this room and here at this event might be building on top of Filecoin. So decentralized applications and solutions built on top of this.
00:02:56.740 - 00:03:29.230, Speaker A: You might notice a little corgi there called Biscuit. Biscuit is Filecoin's mascot. And you'll see a little bit more about Biscuit as we go along in this talk. So this is kind of the evolution of storage, kind of starting from things like IPFS, which was now, I think about eight, nine years old now through up. Filecoin is now about three years old. The FVM was launched earlier this year in March. And so these are kind of like the evolution of decentralized storage.
00:03:29.230 - 00:04:17.214, Speaker A: So I talked about the different kind of approaches and if we look at, for example, IPFS, so IPFS gives you various ways in which you can store your data. So the first one is that the client can have their own node or nodes. They can run their own nodes and store their own data. So you can spin up your own IPFS node, run it locally on your laptop or whatever, and pin data to that and it can be then replicated on the network. The problem being is that if you turn your laptop off or whatever, then that data is no longer available. Another approach is you can run nodes with a community. So you can get a whole bunch of people within your community that are all running nodes as well.
00:04:17.214 - 00:04:58.710, Speaker A: So collectively between you, you are storing that data and there is no one single point of failure. But again, this relies upon your community to all be storing that data. And then another one is just the client storing it on their own in which they use something like a pinning service. So that's to prevent the situation, like I said, where you turn your laptop off, whatever and suddenly your data is now inaccessible. So services like infura Pinata you might have heard of, offer IPFS pinning services. So you pay them a fee and they will pin your data on the network. Pinning is the process by which a node says I want to keep this data on the network.
00:04:58.710 - 00:05:39.686, Speaker A: It might be stored on multiple other nodes, effectively cached, but pinning is keeping it live on that node so it won't ever expire from that node. Now, one of the issues with this being is that if you're using something like one of these centralized services like Pinata and suddenly your credit card expires or they go offline or whatever it might be, then suddenly there's nobody pinning your data. Potentially your data may cease to exist. Valcoin is an attempt to solve that problem. So Valcoin is actually a separate network to IPFS. It uses a lot of the same technology as IPFS. So you might have seen with IPFS what are called Content IDs.
00:05:39.686 - 00:06:42.762, Speaker A: Content Identifiers, if you see an IPFS address, it normally starts slash and then a long string of what might seem like random letters in that address. Now that address is actually a content Identifier. It is a hash of the data that you are storing. And actually my colleague dawn has a really good analogy for this. Now imagine you are going the difference between content addressing and location addressing with location addressing, which is what Http uses would be the equivalent of say, saying to somebody look, I need you to go and get some my favorite cereal from the grocery store. They say, okay, well, what is it? You say, well, it's on the third shelf on the left, second up, and it's the fourth box along. You go along to the supermarket and maybe that box has moved, they've done a restock, or they've moved stuff around, or some kid has been messing around with stuff, then suddenly it's not in the right place, and you don't necessarily get back what you expected.
00:06:42.762 - 00:07:20.694, Speaker A: Whereas with content addressing, you're actually describing the content itself. So you might say, okay, my favorite cereal has got a picture of a red bowl on the front of it. Its UPC number is this, it's 750 grams. And you can describe the contents of it. And it doesn't matter where it is, somebody can find it within the shop, right? They can go in there and find the box of cereal that matches that description. And the great thing being is it might not be in just one place. They might have, say, a special offer on or a sale or something, and it might be up near the cash register as you walk in.
00:07:20.694 - 00:07:37.022, Speaker A: And you don't have to necessarily traverse the whole shop looking for it. It might be right there in front of you. They might have it in multiple locations. And a Content Identifier is a bit like that. A Content Identifier is a hash of the data. It describes the data itself. Not where it is, but what it is.
00:07:37.022 - 00:08:27.330, Speaker A: And one of the advantages with that is when you get that data down, you can check the address against the content you have received, so you can be sure, without needing to trust any other service, that the data you have been served is the data that you were expecting. That's used on IPFS. It's also used on filecoin as well. For storing data on filecoin, they both use these Content Identifiers CIDs. So with Filecoin, the data is stored off chain. You negotiate a storage deal with what's called a storage provider to store some data for a certain amount of time at a certain rate, right? So I want to store 4GB of data for two years, and I'm willing to pay this amount for it. Now that data is transferred effectively, well, it can be transferred off chain.
00:08:27.330 - 00:09:38.260, Speaker A: It's transferred off chain through various mechanisms. It can be downloaded by Http, could be using one of the IPFS protocols, like bitswap that IPFS uses. It could literally be a station wagon full of hard drives turning up with the data on. Remember, the data network FalcoIn is designed to store petabyte ranges of data. So it's very flexible in how you actually get that data to a storage provider. Once the storage provider has that data, they then seal the data, which is a process, cryptographic process, at which the data is transformed into a form in which they can run proof of spacetime validations over that data. So what happens is the blockchain, every 24 hours, queries or sends a challenge to the storage provider to say have you still got the data? Right? And there's two proofs, proof of replication and proof of spacetime that are used by the client, by the storage provider to prove that they still have the client's data and they haven't lost it.
00:09:38.260 - 00:10:42.614, Speaker A: Now, the storage provider and the client both put up some funds for this storage. So the storage provider has to put up some collateral and the storage client puts up their fee. So if you were to store the data for say, two years, then the fee which you put up gets put in an escrow and then paid out to the storage provider over the space of that two years. Again the storage provider also puts up some collateral and if for whatever reason they lose the data, then that collateral is slashed. So there's a financial incentive for the storage provider to keep the data online. This is the bit that gives you the decentralized equivalent of pinning on IPFS, right? So the Filecoin blockchain contains a whole series of proofs that the data is stored and information about the storage deals which storage providers are storing the data for how long. Now, based on top of that, we now have the Filepoint Virtual machine.
00:10:42.614 - 00:11:36.270, Speaker A: So the filepoint virtual machine is a polyglot virtual machine. It uses WebAssembly, has a WebAssembly runtime in which you can build additional runtimes on top. So the first runtime we built, which is why we are here, is the Filecoin Ethereum runtime, the Fevm. The Fevm allows you to run Ethereum bytecode directly on the filecoin layer one network. So anything that you write in solidity that you can compile down and run on ethereum or Polygon or whatever, you can run on Filecoin as well. That allows you to then build on top of that decentralized apps, DApps, data, dowels, tooling like Bridges, all that kind of stuff because you're using the same technology that is being used on other EVM blockchains. So it makes that a lot easier and that enables things like decentralized compute as well.
00:11:36.270 - 00:12:22.918, Speaker A: So either compute over the state that we have on the Filefoint network or off chain compute over the data itself. So Filefoin the Fem doesn't allow you to run to access the actual data. And if you think about it, the reason why is if you're storing gigabytes of data you don't want to be trying to load gigabytes of data into a smart contract, especially not when you've got a blockchain that's ticking along 30 seconds per block. By the time you've loaded all that data in, you'll be out of execution time. So any heavy lifting and compute you would do off chain. You could then record the results on chain, for example through something like an Oracle. You can also build some interesting DeFi use cases.
00:12:22.918 - 00:14:06.190, Speaker A: So I mentioned before about how the storage provider has to put up some collateral and the client puts up a fee that is paid out over time. So you can build things like loans that are collateralized on that future revenue that the storage provider will be receiving. So this is equivalent of invoice factoring in the traditional business world, right? A storage provider can prove on the blockchain that they have this future revenue due to them from the storage deals that they have and they could potentially lend or borrow against that revenue. So you get some very interesting DeFi use cases in which you actually have bare metal ultimately at the bottom of this DeFi system and you actually have storage providers collateral there. So I mentioned the Fevm is fully EVM compatible and so it's built, like I said, as a polyglot kind of WASM runtime that you can create additional runtimes on top of. So the one that we're interested in is the one in the top right here the EVM runtime that we have, right? So that allows you to use Hard Hat, Remix, MetaMask, all the tools you'd usually use for Ethereum development you can just put in the filecoin RPC endpoint and deploy and execute directly against filecoin in the same way that we would do something like Ethereum. So in terms of runtime, we're also working on a thing called Interplanetary Consensus IPC.
00:14:06.190 - 00:15:05.300, Speaker A: So this is the next layer of scalability for filecoin and you can think of as like a layer two execution layer for filecoin but also gives subnets. So it's like sharding the network into horizontal scalability with subnets that you can use as well. We're also working on allowing what we call native user defined WASM actors. So in the filecoin world we refer to smart contracts as actors within the network and soon you'll be able to actually compile directly down to WASM and run WASM actors. So you might be able to write your smart contracts, for example in Rust or TinyGo or assembly script and compile down to WASM rather than in Solidity and things like new foreign blockchain runtimes. So we can run additional runtimes on top. So we might have say a Solana runtime for example, on top of there, for example.
00:15:05.300 - 00:16:07.796, Speaker A: So what can the Fem solve? Here's an example of things like data dowels. So this is effectively a two layer. It's meant to look like a cake there, but on the bottom layer we've got some primitives that Fem enables things like repair workers. So I mentioned about how a storage provider has to prove that they have the data. Still, you could have a smart contract that actually checks that. And if one of the storage providers is not able to provide your data, that the smart contracts could negotiate a new storage deal to replace that failed one from a known good one and automatically effectively heal the data. You could have renew workers so you could have perpetual storage when the data comes to the end of its storage deal or when the storage deal comes to an end rather that a smart contract could renew that storage deal and continue on further, you could create new storage deals as well.
00:16:07.796 - 00:17:06.712, Speaker A: So you could have something like a data dow. So building on the next layer now this green layer on top, you have things like governance tokenomics, things like endowment management. So you could create things like data dows in which you have a decentralized autonomous organization in which the participants are voting on the funding of storage. Imagine something like commons good data. For example, somebody had the example of a film festival in which a film festival, the participants within the film festival could effectively vote on the films that were showed in the film festival, but also on effectively what would become the long term storage of that data as well. Do things like endowment management. So a smart contract could actually actively invest funds that it has been supplied with and use those funds in something like a DeFi lending pool and use the interest earned from that to fund the long term storage of the data.
00:17:06.712 - 00:17:51.636, Speaker A: So you could have some perpetual storage in that way. So I mentioned Biscuit, our little corgi mascot from FalcoIn. So I'm going to give you an example of a datadao called the Biscuit datadao. This is an example datadao we've come up with mainly my colleague Sarah, who has a very active imagination and loves corgis. And so we're going with this, the Corgi Biscuit datadao. So Biscuit datadao is a community of corgi dog owners that want to better understand their corgis. So as an example, you might have a bunch of corgi owners that submit data to a data dow about their dogs.
00:17:51.636 - 00:18:40.180, Speaker A: It might be behavioral data, might be video data, I don't know, biometrics of corgis, maybe corgi fitbits. That's not a crazy idea as it sounds. I actually worked for a startup that was going to pivot into dog fitbit type tracking. It was a crazy idea. But anyway, the idea being is that you could take this data from these individual participants of this Dow, store the data within the Dow, and then the smart contract could do things like wait until the data reaches a certain level. Maybe they have to upload data in some periodic time fashion. Like maybe they have to upload the data every Monday to Friday and get like a streak, for example.
00:18:40.180 - 00:19:08.672, Speaker A: They maybe have to get a five day streak. And if they do that, then they get some kind of reward. So smart contract could mint some sort of token. It might be something like an NFT. It might be a fungible token that could be used to reward the corgi owner for supplying their data to the network. Right, and what could that data be used for? That data might be used for things like training AI. Right? So imagine you've got all this corgi data.
00:19:08.672 - 00:21:02.672, Speaker A: Now you could actually use that to train an AI model. Maybe that AI model is used to create almost like a Robo Vet, for example, that allows you to ask questions about your corgi's behavior. Maybe this AI could then refer to that data and the training of that data is paid for by the Dao and the corgi owners. Maybe they get a governance token, they can vote on the actions that happen, whether that's some training data that happens, they might get some rewards that could be used for services within the Dao. So again, things like veterinary services for example, you could get some discount reward for supplying the data but could then be used against real world services as well. So the Dow Treasury, once the Dow takes these funds in, the Dow Treasury could then potentially actively invest those funds through things like liquidity pools, DEXes lending pools for example, that then support the Dow going onwards. So it could be effectively self sustaining by generating revenue that way that then funds the persistent storage of that data, the renew, the repair, the replicate that I mentioned before to keep this data active and the end result healthier, happier, corgis achieved, right? So that's an example might seem a bit of a trivial example but it hopefully gives a bit of a flavor of the kind of thing that you can build up using FVM, using filecoin, using things like data Dows on top of the network and you can access things like off chain compute.
00:21:02.672 - 00:22:23.768, Speaker A: So protocol labs have a project called Bacchiao that is a decentralized compute platform. And there's a bridge called Lilypad that allows you to from a smart contract pass. For example, like a prompt to stable diffusion running off chain. That could then generate an image that could then be stored in IPFS, that could then be returned back to Fem to mint an NFT that points that image that was generated and that is stored on IPFS. So you can kind of go full circle there between on chain and off chain with data there's a bunch more Fem compatible tools so there's things like there's a filecoin localnet docker image that you can run, you could spin up on your laptop a local effectively filecoin network and run locally. You can then play both sides of the equation by being a storage provider yourself, right? So you can actually not only create storage deals but accept those storage deals, reject them, whatever. There's cross chain bridges, sealer and Axler for example, both on the token side and on the general message passing side oracle things like Teller Access Control, Lit Lighthouse which is a storage aggregator a number of DeFi protocols as well that are being created.
00:22:23.768 - 00:23:36.150, Speaker A: So there's a project called Glyph that's that top icon there you might not be familiar with in the top right, glyph has created a big lending pool that allows you to do staking of filecoin token and that can be lent out to storage a number of network analytics APIs. So Zondax have a network explorer called Barracks that allows you to interrogate the network. There's one by Protocol labs called Starboard as well, decentralized Compute backyow I've mentioned that allows you to run decentralized compute jobs. So there's a whole bunch of stuff within Fem and more stuff kind of coming as we go along. And if you want to find out more, there's a QR code there. If you want to scan that QR code or go to that link tree address at the bottom there, that will take you to a list of resources, including if you're doing a hackathon, you'll see a link there to the hackathon, what we call a hackathon cheat sheet. That is a document we have on GitHub that gives you a sort of full list of various different resources around Fem as well.
00:23:36.150 - 00:23:52.552, Speaker A: So there we go. I think that's the end. Yeah. So thanks very much. Here's a bunch of the Fem team. There's actually a lot more than that. This is actually a bit of an old photo now, but yes, it's a big project.
00:23:52.552 - 00:24:22.530, Speaker A: It's been built by Filecoin over a number of years now, but finally live and allows you to run smart contracts directly on the FalcoIn network. So thanks very much. If anyone has any questions or if you want to grab us actually, probably even easier. We're just in the booth, just literally on the left as you go out the door. If you want to come and have a chat to us at the the Filecoin booth, we can chat there. Thanks.
