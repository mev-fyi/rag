00:00:06.650 - 00:00:19.002, Speaker A: Hey. Thank you Vitalek. Thank you John. Hey, I'm asway. I currently lead strategy at Flashbots and I will talk to you about decentralizing sequences. Wait. It's all PBS.
00:00:19.002 - 00:01:26.054, Speaker A: Yeah, always has been. So in this talk I will convince you roll ups are in the process of decentralizing their sequencer. So every roll up has a decentralization roadmap and all of these roadmaps have some plans for decentralizing the sequencer. However, the way that sequencing works in layer two, it actually combines what is the equivalent of a layer one proposer and layer one block builder in the same role. And this creates a variety of problems unless we start to address it by separating these two roles on layer two just like we did on layer one. In addition to that, even if we do PBS on layer two, there are novel challenges involved around privacy, cross domain mev and lower latency than we are used to on layer one. And so we will get into these in the talk as well and we will see.
00:01:26.054 - 00:02:22.442, Speaker A: PBS is essential but it is in itself not enough. We also need to decentralize the builder role itself. So, decentralizing roll up sequences, what is a sequencer? There are basically four steps involved. So as a user you send your transactions to a layer two sequencer who orders them according to some policy and then gives the user some receipt to the user. So Talik was talking about pre confirmations, that is step step number three here. And then the sequencer sends the ordered batch to the DA layer where it basically becomes finalized from the perspective of the layer two. So this particular diagram is taken from StarkNet, but the above is how it works in pretty much every layer two.
00:02:22.442 - 00:03:34.042, Speaker A: So there might be some small differences. For example, in StarkNet A, the sequencer is also the prover so they have even more responsibility, but all of these can be stripped out and would be stripped out over time. So why is decentralizing layer two sequences important? Well, because as Vitalik was alluding to because roll ups are becoming more and more important and more and more volume and liquidity is moving over to these new execution layers. And I don't think we have even started to imagine the end state of how blockchains will scale as we are kind of seeing with these different roll up providers who are now not even just focused on building their own roll ups. No, they are focused on they have all pivoted to kind of roll ups as a service. And I think it's quite possible that we will see a future where spinning up a new blockchain is kind of like spinning up a new smart contract today. And so we will have many roll ups and these roll ups all will have sequences.
00:03:34.042 - 00:04:40.630, Speaker A: So we'll have many sequences and today all of these sequences are centralized and centralized. Sequencers can censor the user, they can go offline, they can charge arbitrary prices, they are regulatory choke point and they can see the user transaction before it gets confirmed and they can do various things with this transaction that is hard to attribute. And so while roll of safety is great guarantees, so we can get always a transaction mined through the layer one and the sequencer cannot force an invalid state transition and so on, then there are still a lot of problems with them and that's why we need to decentralize them. There are various proposals for how to decentralize sequences. One is the layer one or quote unquote other chain sequenced approach. So that includes the based sequencing that Vitalik was talking about. There are also other approaches, for example about shared sequencing so that's when one blockchain sequences many other blockchains so shout out to Espresso for example who have put forward this vision.
00:04:40.630 - 00:05:59.360, Speaker A: You have the optimism style sequencer block auction where the right to propose the next block or next series of blocks is auctioned off every now and then. And then what stargate is planning random selection from a proof of stake set. So in that case you have basically a consensus mechanism on top of your roll up and a proposer is selected randomly and they get to propose the block. This is very similar to how it works in the layer one and then finally you can have various committee based solutions and the most common one would probably be first come, first serve. This is where a committee just looks what transaction the different nodes are first and then come to some kind of consensus on that. And yes, we were saying already in the summary in the layer two right now what we understand as the term sequencer actually combines the equivalent of a layer one proposer and a layer one builder, especially in the leader election mechanism. So that is the proposer part and then the ordering mechanism, that is the building part.
00:05:59.360 - 00:07:05.714, Speaker A: And so if we go back to these different proposals that have been put forward so they actually have different lead election mechanisms, different ordering mechanisms. But what I would like you to take away from this slide is only that the innovation that is inherent to these proposals is almost entirely in the leader election mechanism. So nobody has any credible plans about the ordering mechanism, right? So they are only focused on the leader election mechanism today. And that is a problem because if you do layer twos without proposer builder separation, then what you do then you have the two roles bundled like they used to be bundled in ethereum layer one. Before mev was a big deal, but now mev is a big deal. And what will happen is you recreate the dynamics of pre PBS days from ethereum layer one on these roll ups. And what you get? You get priority gas auctions again.
00:07:05.714 - 00:08:16.810, Speaker A: You get front running, you get failed transactions in a clocked up PDP layer from the searcher strategies who are being forced to compete at inefficient mev auctions for the Mev. And because the auction is less efficient, you will also get a lower proposer revenue that leads to a threat of vertical integration between searchers and block builders. So all of these problems that we talked about two years ago on Ethereum, boom, they are back now on layer two, making their comeback. And so that's why I'll actually say when we talk about decentralizing sequencer to date sequencer as a service, I think it would be more accurate to actually talk about proposer as a service because that's what it really is. Right? We are only looking at the proposer today, so we need to start separating these two roles on layer two, just like we did on layer one. Here's a quick refresher for you what PBS actually does. So the effect that PBS on Ethereum is it shields the proposer role from the centralizing effects of mev by making the most valuable block available to all proposers equally.
00:08:16.810 - 00:09:25.698, Speaker A: Whether it's a small solo validator or it's a big staking pool like lido or coinbase, they all make the same from mev and that is a huge achievement. It also unlocks competition on features from block builders that don't require any protocol changes to Ethereum. And this has created more privacy for bidders, more explicitity for bidders. And here I would particularly highlight the introduction of the bundle by flashbots that decoupled the position of the transaction from the price. Because in the public mempool, you were only able to express basically these two dimensions through a single unit, which was the gas price, the removal of negative externalities from the chain that were the result of these bad searcher strategies and maximizing revenue for the seller. And so we can see these map one to one to the problems that we laid out earlier. PBS solves them all, which is amazing.
00:09:25.698 - 00:10:48.394, Speaker A: So we need PBS and explicit mev options to maximize protocol revenue and minimize negative externalities on these layer two networks and their users. But PBS on layer two also faces novel challenges that were not necessarily here when we designed PBS on layer one. So a big one, arguably the biggest one, is privacy. So all of these centralized sequences have gotten the user very addicted to the idea of quote unquote, easy privacy. Right? And now I think it's a very hard choice, like do you remove privacy when you decentralize the builder or do you try to decentralize it? I think both paths are very hard and it's not clear that either of them is necessarily better or easier than the other. And I think this kind of speaks to the difficulty of Rollups just taking these shortcuts through a centralized sequencer in providing the users better UX. And now it's going to be very hard to either move away from that UX or decentralize it.
00:10:48.394 - 00:11:46.480, Speaker A: So how do we recreate privacy in a decentralized way? So one is maybe you still have centralized block builders, but at least these centralized block builders are competing with each other in a sort of competitive market, right? But the downside here is that these builders all have different they all have their own unique form of trust. And so as a user or as a blockchain, you need to decide which builder do you trust, which builder do you not trust. And this really risks enshrining some builders over others. And it also creates a big incentive for vertical integration between different supply chain participants because you're always more willing to trust yourself than you are willing to trust someone else. And so this option, I would argue, still very centralized. Second one is, again, the aforementioned committee based solutions like threshold encryption or First Come, First Serve. These might also work together.
00:11:46.480 - 00:12:56.346, Speaker A: And then option three, just having one homomorphic. So I mentioned the second one because this is basically a way of privacy and easy mode, if you will, because it's much easier to go stand under the idea of an encrypted mempool or any system, really, where audio back, okay? Any system, really, where different parties share the same type of privacy. Where if you trust the privacy zone, then you can also trust everyone within it. And so, for example, what this would mean, you send an encrypted transaction to a mempool and you know it's going to be kept private no matter who interacts with it going forward. And so this is what we're working on with Suave. But it's also super hard. Then you have cross domain mev.
00:12:56.346 - 00:13:47.362, Speaker A: Just when you think you're out, they pull you back in. Even if you have competition between these centralized builders, you still have the problem of cross domain mev. The builder market is already naturally very centralizing due to economies of scale. But layer twos, just because of their existence, they make the problem even worse because the more fragmentation, the more domains there are, the more fragmented liquidity and trading volume is, the more cross domain there will be. And this creates a strong centralizing pressure on the builder role through demand for atomic transactions. And then finally there is latency. This I would put in the same category as privacy.
00:13:47.362 - 00:14:50.650, Speaker A: So roll ups, they all wanted to have, or at least at Arbitrum, and they wanted to have based sequencing originally. But then it turned out that users liked faster confirmations so much that they have had to switch to a centralized sequencer with faster pre confirmations. And this lower latency, this is a big friction with decentralization. We need geographical decentralization for neutrality and decentralization and other things. But for that we need our systems to be insensitive to latency. And if you lower the block time too much, then what you get is you encourage vertical integration, geographical integration between proposers and block builders, and you discourage participation from anyone who is not able to vertically integrate, who is not able to co locate in that same geographical area. And so that's why PBS is essential, but it's not enough.
00:14:50.650 - 00:15:56.938, Speaker A: We also need to look into decentralizing the builder role itself. So that's what we're trying to do with Suave. There are other proposals as well. But the idea is building the best mev auction and making it decentralized. Because that's what allows us to do the heavy lifting on ordering for these other chains, removing all elements of trust. And flashbots and searchers and block builders from the system, making it private so that participants have the ability to trust the auction and trust others and don't have this need to vertically integrate with others in the supply chain and making it scalable because by connecting many different domains we allow for the expression of cross domain preferences as well. So John Chabonet, our host, has this great diagram here that actually shows the roll up transaction supply chain in the future, possibly.
00:15:56.938 - 00:16:42.560, Speaker A: And it shows that the sequencer really becomes the proposer. Right? And you can have proposers that basically sequence many chains, but you still need the block builder. And because you have decentralizing effects on the block builder, you also need the block builder to be decentralized. So in the roll up endgame, we're going to need all three, we're going to need the decentralized sequencer, we're going to need the decentralized builder and we're going to need the private mempool, otherwise it's not going to work out. And dear roll ups, please make mev a more central element of your decentralization roadmaps. Remember, sequencer equals proposer plus builder. Don't ignore the last part, we need to decentralize both.
00:16:42.560 - 00:16:57.660, Speaker A: So come reach out to us to learn more about swap and come to our forum, collective. Flashbots. Net. That's it for me. Thank you very much. And yeah, happy to take any questions.
