00:00:07.610 - 00:00:22.958, Speaker A: Next up, we have Arc to talk about Cellos transition to thinner ML two, and we want to make sure this is more in depth around what you can look forward to. So instead of just talking about high level what's happening, we're going to actually.
00:00:23.044 - 00:00:24.982, Speaker B: Talk about the specific.
00:00:25.076 - 00:00:35.174, Speaker A: So how do we actually make affordable transactions happen? So, without further ado, let's welcome Marik here on camera. And we'll either get started thanks so.
00:00:35.212 - 00:00:40.330, Speaker B: Much, it's really great to be here. I'm just going to bring up my slides.
00:00:43.660 - 00:00:45.560, Speaker C: Cool, sure.
00:00:45.630 - 00:01:17.536, Speaker B: Good to go. How are you guys doing today? Cool. Well, once again, it's really great to be here. My name is Marikoshevsky, one of the co founders of Cello, and I challenged myself this year to do all my presentations using emojis. So you're going to see a lot of emojis here today. And if you like the format, definitely let me know on Twitter. I'm at Marek underscore.
00:01:17.536 - 00:01:19.124, Speaker B: And then likewise, if you have any.
00:01:19.162 - 00:01:21.524, Speaker C: Questions or any follow ups, definitely do.
00:01:21.562 - 00:02:45.580, Speaker B: Not hesitate to reach out. And so I just wanted to start, I don't know if there's a chat here or not, but sometimes it's nice just to kind of start with a bit of interaction. I like to ask just how many people here either are regularly using web Three products themselves, or have friends who might be normies who are using them. It looks like folks are watching on YouTube, so it's a little hard to kind of provide feedback. That's okay, because I've asked this question in conference, in person conferences, and typically, actually, every time, the answer is very few people are actually raising their hand on the order of maybe 5% or so. And that makes vitalik sad, I would say, shown here in the form of a sad cat emoji. Why not? And it's a real shame because I think this is the future that we want, right? We want millions, millions and billions of people streaming into the house of web Three, or, I don't know, the best Buy of web3 here on a Black Friday.
00:02:45.580 - 00:03:34.156, Speaker B: But it's sadly not the reality that we have today. The current reality looks a little bit more like this. There's just a few of us running around in a really exciting Bed, Bath and beyond. We get to have all the fun, but others are sadly not having that. Luckily, a big part of why we don't have a lot of normies using web3 platforms is around scalability. And of course, Ethereum has a really exciting roll up based scalability roadmap and we're super excited to be part of that with kind of the transition from an L one to an L two, which we've started talking about over the.
00:03:34.178 - 00:03:35.870, Speaker C: Last couple of weeks.
00:03:36.720 - 00:04:42.470, Speaker B: And so before we get into kind of the L2 design and what we're doing there and why we think it's super exciting, I wanted to just share a few slides about what Cello is today, in case you're new to it. And I think first and foremost, not surprisingly, celo is a fully EVM compatible network. It's currently a proof of stake network and it's a proof of stake layer one. It's been around for three years, it's been running really well, it's only had one production incident and so it's definitely been hardened, I would say, over those three years. And it's a really elegant proof of state consensus protocol with a lot of scalability and a lot of decentralization. But I think the thing that makes Cello unique is really its focus on ease of use. From the get go, we built Cello thinking about what would it take for people to build DApps on top of Cello that were just easy to use for anyone in the world.
00:04:42.470 - 00:05:33.060, Speaker B: And that meant really great mobile support. Cello has a really amazing ZK Stark based, like client. It has this protocol called Social Connect that we'll talk about a little bit at the very end, which lets you send value to phone numbers. It has all of these really nice mobile features and a lot of really exciting and big popular DApps on Celo are in fact built in a mobile source manner. To be really good for ease of use, I think you need things like gas abstraction. And so from the beginning, Stella has supported paying for gas with tokens natively, using EOA addresses, so without the need for even account. That's really amazing.
00:05:33.060 - 00:05:57.336, Speaker B: And then to top it off, Stella was the first network to offset its CO2 emissions programmatically using block rewards. And so that's just a really nice cherry on top. And because of that, first of all, other networks have followed which we're really excited about. But also Sello has become kind of like a home for refi projects.
00:05:57.368 - 00:06:00.510, Speaker C: There's just a lot of refi happening on Celo, which is really cool.
00:06:02.480 - 00:07:00.960, Speaker B: And one of the really nice things about focusing on ease of use is that it enables a lot of real world use case type applications to be built on top of Cello. And one thing that's really nice about real world use cases is that they aren't really tied to the crypto cycles. So there's a lot of folks building payment products, community currencies, micro lending products, earning projects where you can earn on your phone using earn micro credits on your phone, and then also universal basic income projects. And all of these are not really tied to kind of bears and bull. So that means that they've been able to actually grow quite nicely even in this bear market. And you don't have to take kind of my word for it. All of this is invisible now on Dune.
00:07:00.960 - 00:07:30.440, Speaker B: And this is kind of what the active addresses look like on Sello, which is pretty cool to see a lot of growth since March of this year, which is just unusual, I would say, in this market. And Nansen has a really cool table that shows kind of compares the chains that they're tracking. And if you look at the last month, you look at the last six months, the active address changes on Cello.
00:07:30.780 - 00:07:33.464, Speaker C: Are higher than any other chain that Anson tracks.
00:07:33.592 - 00:07:37.272, Speaker B: And I think if you look at the current data, we've also overtaken Phantom.
00:07:37.336 - 00:07:38.830, Speaker C: Which is really cool to see.
00:07:39.440 - 00:07:52.016, Speaker B: Okay, so that's just what Cello is. Hopefully we're now all on the same page, but we're here really to talk about the L2 roadmap for stello. And so I wanted to kind of.
00:07:52.038 - 00:07:54.530, Speaker C: Dive into that right now.
00:07:55.140 - 00:09:14.700, Speaker B: And one of the interesting things about creating or transitioning an L One to an L2 is that you end up with some constraints that I think are different and a little challenging, I would say, compared to if you're just launching a new L2 from scratch. And so what do those challenges look like? Like, I would say there's two really major ones. The first is around throughput and transaction costs. And this is hence the title of the Talk on Sello. Because we have a very scalable state consensus protocol. We can process a lot of transactions per second, which means that gas fees are very low on Sello and that's attracted a lot of applications that require really low gas fees, right? Like those payment applications where people are sending stablecoins around to each other. Or the micro lending DApps which are most useful in emerging markets where people are more price sensitive and then also just community currencies.
00:09:14.700 - 00:09:23.292, Speaker B: Anytime that people are using crypto rails for medium of exchange use cases, people tend to be a little bit more.
00:09:23.346 - 00:09:26.732, Speaker C: Sensitive around fees than elsewhere.
00:09:26.796 - 00:11:14.240, Speaker B: And so we have a lot of those use cases on Sello and it's difficult for us to transition to an L2 and then suddenly increase gas fees to the order of tens of cents because we need to store transaction data on Ethereum. And so the solution for this problem is to use Eigen Layer. So Eigen Layer, for those of you if you're not familiar with it, it's a really interesting restaking protocol on Ethereum that effectively allows Ethereum Validators to opt into running additional services. Eigen Layer likes to talk about this as creating a marketplace for trust. So if you think of each Ethereum Validator as kind of an operator on or actor in the network that offers some degree of trust right, that they're going to validate the blockchain correctly, then Eigen Layer effectively allows people to tap into that trust and purchase additional trust for their services. And since there's a ton of Ethereum Validators, there's a lot of trust there that can be tapped into, which is really exciting. And one of the very first apps, or middlewares as Eigen Layer is calling them to be launched on eigen Layer is kind of this flagship middleware that the team, the Eigen Layer team themselves.
00:11:14.310 - 00:11:16.880, Speaker C: Are building, which we're calling Eigenva.
00:11:17.400 - 00:11:27.476, Speaker B: And so Eigenva is effectively bringing Dank Sharding to Ethereum potentially one or two.
00:11:27.498 - 00:11:31.210, Speaker C: Years ahead of when Dank Sharding will actually roll out.
00:11:31.660 - 00:12:07.796, Speaker B: And that's really exciting because Dank Sharding, for those of you who have been following it effectively, is a much more bandwidth favorable way of doing data availability. It turns out that data availability, even in a decentralized network, is an embarrassingly parallel problem. It's only hard if you can pair it with consensus. If you only do data availability, then you can actually do it for significantly cheaper than it is to, for example, pay for data availability on Ethereum on.
00:12:07.818 - 00:12:09.030, Speaker C: The l One today.
00:12:10.600 - 00:12:28.504, Speaker B: So that's exciting. It allows us to really dramatically lower the cost of l Two transactions and then challenge number two. And then of course, by lowering those costs, you're also able to increase the.
00:12:28.542 - 00:12:34.750, Speaker C: Throughput of the l Two as well, which is also really important.
00:12:35.760 - 00:12:48.130, Speaker B: Challenge number two is Cello has a lot of node operators, a lot of validators, a lot of full nodes, and it'd be a real shame to.
00:12:50.180 - 00:12:50.976, Speaker C: Just.
00:12:51.158 - 00:13:36.320, Speaker B: Give all that up and move towards kind of a single sequencer. It really feels like it'd be a step backwards. Now, of course, I think many l Two S today are looking at ways to run their sequencers across multiple nodes. But alas, we're not there yet as a whole industry. And so one thing that we're excited to do is contribute to the future by effectively taking our production ready consensus protocol that, again, I mentioned, has been running live for three years and turn it into a decentralized sequencer and really make it a public good that anybody.
00:13:36.390 - 00:13:40.610, Speaker C: Can also use to decentralize their l Two as well.
00:13:42.100 - 00:14:28.796, Speaker B: And then challenge number three. And for those of you who've been following very closely, you may remember I said there were only two challenges that we thought of at first. But alas, nothing is that simple. As we were looking into this, we learned that there are actually additional things that we have to worry about. And this kind of additional challenge, this third challenge really is one around finality. So Celo has offered one block finality since the network launched three years ago, and many l Two S today, they don't offer that same one block finality. And it's primarily for two reasons.
00:14:28.796 - 00:14:39.876, Speaker B: I think you can have reorgs that happen on the l Two side, but you can also have reorgs that can happen on the l One side that.
00:14:39.898 - 00:14:41.830, Speaker C: Then affect the l Two state.
00:14:42.520 - 00:15:50.852, Speaker B: And so in the design that we put together, we address both of these. The first is on the l Two front. Since Cello already has some economic security that guarantees this one block finality rule using Slashing for equipment, it's possible for us to reuse this and make it so that validators today or decentralized sequencers tomorrow, won't have to will be punished if they ever cause a reorg. And so that gives us some economic security. Again, on the l two front you won't have reorgs. And then the other idea is around slowing down deposits and forced transactions a little bit so that they are only executed on the l two side. Once you get finality on the l one side and this has the downside that it makes kind of bridging just a tiny bit slower.
00:15:50.852 - 00:15:58.696, Speaker B: But on the flip side you end up having this resilience. Anytime the l one reorgs, you won't.
00:15:58.728 - 00:16:00.190, Speaker C: Have to reorg as well.
00:16:01.200 - 00:16:31.736, Speaker B: And so what does all of this look like together? I created this little example demo here that I wanted to run through. I think this makes it a lot easier to kind of understand what the design of this looks like. We have three main actors and then the Ethereum chain. So we have decentralized sequencers on the left, you have the eigenva nodes in the middle and then you have the l two full nodes on the right. And then we have kind of all.
00:16:31.758 - 00:16:34.570, Speaker C: Of Ethereum down on the bottom.
00:16:35.260 - 00:17:06.344, Speaker B: And so, as with any chain, the first step is to effectively collect a bundle of transactions that have been gossiped throughout the network. And in this case the leader in the BFT consensus that makes up kind of the consensus protocol that these decentralized sequences are using. The elected leader, which changes for every slot, basically proposes a set of transactions.
00:17:06.412 - 00:17:11.460, Speaker C: That will constitute the transactions that go into the next block.
00:17:11.960 - 00:17:41.212, Speaker B: And so it will then gossip that around to all the other sequencers. And then using BFT consensus which is a multi step protocol that I'll just simplify it into one step, eventually this leader will get back an aggregated multi signature of all of the signatures of all of these decentralized sequencers and the bit factor. So you have accountability that shows who.
00:17:41.266 - 00:17:44.940, Speaker C: Assigned that particular bundle of transactions.
00:17:45.760 - 00:18:25.416, Speaker B: And once you have this, then you know that for this slot height the decentralized sequencers have committed to this set of transactions. And so we're ready to kind of post that to eigenva. Eigenva will then return an eigenva certificate which is also a multi signature, threshold based signature. And then the leader will then have everything he needs to effectively commit this transaction action bundle to Ethereum. And it does that just by posting.
00:18:25.448 - 00:18:28.780, Speaker C: The I canva certificate to Ethereum.
00:18:30.480 - 00:19:01.012, Speaker B: Once that is on Ethereum, then any full node that's interested in following the lt chain can download that certificate. It can use that certificate to get the data from the data availability layer by querying eigenva that gives it the transaction bundle and multi signature and the bit vector. And from that each of these full nodes have everything they need to effectively.
00:19:01.076 - 00:19:05.832, Speaker C: Derive the l two block. And so they can do that here.
00:19:05.966 - 00:19:07.604, Speaker B: Once they derive it, they can execute.
00:19:07.652 - 00:19:11.000, Speaker C: Them and they're off to the races.
00:19:12.080 - 00:19:37.636, Speaker B: And so this is really nice and elegant and pretty simple but there is some latency to having to go through Ethereum in this way. And one thing that Op Stack and optimism does that's really nice is that they have this concept of a network, an L2 network where you can gossip around what are deemed unsafe blocks so that full nodes can kind of.
00:19:37.658 - 00:19:41.780, Speaker C: Follow the network a little bit faster with a little bit less latency.
00:19:42.840 - 00:20:05.436, Speaker B: And so that's something that this kind of design is compatible with, with the one caveat, and this is true in Op Stack and optimism as well sometimes you may find that what you pull from Ethereum later on will not match.
00:20:05.618 - 00:20:08.270, Speaker C: What was gossiped around before.
00:20:09.200 - 00:20:19.344, Speaker B: And so, in the case of most l Two s today, that will cause a reorg. And you have to reorg because I think the Ethereum view of things is.
00:20:19.382 - 00:20:22.880, Speaker C: The final view and it takes precedence over everything else.
00:20:23.030 - 00:20:37.060, Speaker B: And so the best we can do to avoid those reorgs is to effectively make it economically very expensive for nodes.
00:20:37.480 - 00:20:41.476, Speaker C: To effectively equivocate across both of these different paths.
00:20:41.668 - 00:20:54.270, Speaker B: And the way we do that is by right. And so if you don't do that, you don't have one block finality, but bring back one block finality. The way we solve this is by.
00:20:54.720 - 00:20:58.750, Speaker C: Adding slashing for equivocation in this way.
00:20:59.360 - 00:21:03.880, Speaker B: And because we have the bit vector, we can also see exactly who equivocated.
00:21:04.040 - 00:21:10.268, Speaker C: Across these two different blocks and then we can slash just those validators.
00:21:10.364 - 00:21:19.124, Speaker B: And this is something that we have today already in the L One. And so it's actually quite easy for us to bring this over to the L2 design because all the code.
00:21:19.162 - 00:21:22.324, Speaker C: Is already written and it's been in production for three years.
00:21:22.522 - 00:21:30.996, Speaker B: And it's really nice because it effectively makes it very economically expensive to equivocate to the point where nobody on the.
00:21:31.018 - 00:21:35.370, Speaker C: Cellar network has done that since the network has launched for three years.
00:21:36.380 - 00:22:18.856, Speaker B: So this is really nice. And so maybe just summarize, this design gives you scalability and low gas fees by leveraging eigenva. Eigenda, as I mentioned, is kind of bringing the design of Dank Sharding to Ethereum many years before Dank Sharding will be rolled out and it's still run by Ethereum validators. And so it still offers really nice trust assumptions. And because it uses that Dank Sharding like design, it effectively allows you to cut the transactional costs on the L.
00:22:18.878 - 00:22:23.770, Speaker C: Two side by 95%, which is really nice.
00:22:25.260 - 00:22:35.692, Speaker B: We, of course also get to maintain the current level of decentralization offered by Cello, which is just really nice for.
00:22:35.746 - 00:22:40.300, Speaker C: Increased uptime and for better censorship resistance.
00:22:41.520 - 00:22:47.944, Speaker B: And then finally we worked really hard to also keep the one block finality.
00:22:47.992 - 00:22:52.144, Speaker C: Design that Cello offers which does come.
00:22:52.182 - 00:23:09.210, Speaker B: At the cost of a slightly slower native bridge but ends up having much better UX. And we've started chatting with Eigen Layer as well about how we could add additional economic security here. This design only offers Cello economic security.
00:23:09.820 - 00:23:11.896, Speaker C: To enforce this one block finality, but.
00:23:11.918 - 00:23:13.252, Speaker B: You can actually go a step further.
00:23:13.316 - 00:23:18.490, Speaker C: And also opt into a restaking nodes that can add additional economic security.
00:23:21.340 - 00:23:42.784, Speaker B: And ultimately I think this makes Seller potentially like a really nice place to roll up to if you're building an L three because you get these short block times. This kind of nice guarantee about not having to reorg, not to mention the.
00:23:42.822 - 00:23:47.680, Speaker C: Cheap data availability that you effectively inherit through the cheap transaction fees.
00:23:50.520 - 00:24:16.732, Speaker B: That's the design you might be know what the timing is and what's. So, you know, we just posted this design in a very detailed proposal to sello Governance just at the start of ECC, which was just a few weeks ago. Since then we've gotten just an incredible amount of really amazing feedback and just.
00:24:16.786 - 00:24:20.220, Speaker C: A lot of, I would say excitement for this direction.
00:24:20.640 - 00:24:40.964, Speaker B: It's been pretty cool to see other L ones now also kind of following suit and talking about making a similar change. And so I think in the future we're going to see ultimately this large amount of maybe coalescing around Ethereum which.
00:24:41.002 - 00:24:43.076, Speaker C: I think is really again amazing for.
00:24:43.098 - 00:25:15.472, Speaker B: The Ethereum scalability roadmap and I think ultimately just really great for users as well. And we're just excited to be at the forefront of that. Since the proposal went out, we also had a temperature check governance vote on it, which passed with just a ridiculous amount of, I guess, folks in favor of it. And so that was really cool to see as well.
00:25:15.526 - 00:25:18.732, Speaker C: So generally the cellular ecosystem is excited.
00:25:18.796 - 00:25:38.084, Speaker B: About this and so that means that now the hard work begins. And of course it wasn't easy coming up with that architecture and that design and we spent a lot of time working on it before making the proposal. But now we're working hard to turn.
00:25:38.122 - 00:25:45.160, Speaker C: That into an actual deliverable that we can use to then upgrade the network.
00:25:45.980 - 00:26:39.604, Speaker B: But when it comes to folks here, especially developers who are participating kind of in the hackathon this weekend, you might be wondering what this means for you. And there the good news is that beyond all the benefits that will come from this, the increased alignment with Ethereum, the better Bridging, better security, all of those things, all of those things will effectively come for free because this will be hard forked into the network. Again, assuming that the folks running the actual Sello network are excited about the final deliverable, but it seems like that's the case. Based on the Governance vote, this will ultimately be deployed through two hard forks.
00:26:39.652 - 00:26:45.900, Speaker C: That will upgrade Stella and transition over to the cell two and hard forks.
00:26:46.960 - 00:26:50.748, Speaker B: Just like on other networks, are very.
00:26:50.834 - 00:26:54.600, Speaker C: Non disruptive for people building DApps on top of the network.
00:26:54.760 - 00:27:52.976, Speaker B: And so that means that you can effectively start building on Sella today and start benefiting from this future design and from all of the amazing features that sell offers today. And since I had a lot of time for this talk, I thought maybe it would make sense to just spend a few moments talking about some of these cool features that are available today and what you might be able to do on sello both today and tomorrow. But before I get into that, I think research shows that people's attention span tends to wane after 25 minutes. Most people just naturally need a little bit of a break. And so I just wanted to do like a 1 minute intermission. And so if you've been watching a lot of talks and just needed a breather, now is a good time just.
00:27:52.998 - 00:27:55.824, Speaker C: To grab a drink, maybe take a.
00:27:55.862 - 00:28:05.216, Speaker B: Deep breath, maybe stand up, and we'll get started in just 30 seconds.
00:28:05.408 - 00:28:39.610, Speaker C: And I'm going to take a drink there as well. Let me just put that don't force me to get me little prophet.
00:28:43.280 - 00:29:20.920, Speaker B: Awesome. So hopefully you had a moment to just take a deep breath, maybe get some water, stand up, and yeah, be ready for the next part of this talk. It's going to be much quicker than the first part. It's just a few more slides to go. But I thought frequently when chatting with builders, people are always very interested in learning about what's different, what can I do that's uniquely available on sellout that I can't do elsewhere.
00:29:21.420 - 00:29:27.290, Speaker C: And so I thought it would be nice just to have few slides to cover that.
00:29:29.260 - 00:29:34.988, Speaker B: There'll be three of these cool things. There's actually many more, but it's just.
00:29:35.074 - 00:29:37.468, Speaker C: Not too much to go through in any one talk.
00:29:37.554 - 00:30:33.976, Speaker B: But I would say the very first cool thing that you may want to experiment with today on sello, if you're building kind of a hackathon project, is kind of Sello's native gas abstraction that I mentioned before. So again, you can pay for gas with tokens on sello. These tokens have to be allow listed through on chain governance. And right now there's three tokens that are available. A us dollar stablecoin, a euro stablecoin, and a brazilian real stablecoin. I think there's about five additional stablecoins and actually some non stable kind of DAP currencies as well that are going through governance right now. They're at various different stages of going through governance.
00:30:33.976 - 00:30:58.452, Speaker B: And so this list will expand pretty quickly. But even just for the current assets today, one of the really nice things about building DApps that support paying for gas with these is you can build use cases, like payment use cases where you can send the stable coin to someone. It can be a completely new wallet and you never have to worry about.
00:30:58.506 - 00:31:05.912, Speaker C: Them having to figure out how to go get gas money to then be able to send it on to someone else.
00:31:06.046 - 00:31:18.284, Speaker B: And so you'll never have that really frustrating feeling where I'm sure folks here know sent USDC either to themselves or to someone else, to a new wallet and then only to realize that those.
00:31:18.322 - 00:31:22.830, Speaker C: Funds are kind of stuck until you're able to get some ETH over to that address.
00:31:24.640 - 00:31:56.932, Speaker B: And so if you're interested in experimenting with this, I would say VM is probably one of the best ways to play around with this VM. For those of you if you're not familiar with it, it's kind of a TypeScript focused alternative to either web3 JS or to Ethers JS. It's created by the folks who built Wagme. It's really quite elegant and they have now native support for paying for gas.
00:31:56.996 - 00:32:01.800, Speaker C: With tokens on sello in their transaction objects.
00:32:02.380 - 00:32:26.576, Speaker B: So this is really cool if you're interested in playing around with this, learning a little bit more. The PM who worked on this, he gave an ACC talk a few weeks ago and he has a nice GitHub repo with the slides to his talk and with some demos of this that you can find over at I think his account is zero xarthur XYZ, and.
00:32:26.598 - 00:32:29.488, Speaker C: Then he has this ECC presentation repo.
00:32:29.584 - 00:33:28.180, Speaker B: So definitely check that out. Second cool thing is around address abstraction. So this is a little different than account abstraction. Cello has, since the beginning, made it possible for people to send payments to phone numbers and in effect, map phone numbers and other social Identifiers to wallet addresses. And this enables you to create some really cool experiences. The current incarnation of this offering is called Social Connect, and you can use Social Connect to effectively build apps that let you send cryptocurrency to phone numbers instead of to wallet to address, sorry, publicly derived addresses like the ones that are plaguing all of us in crypto today. And so this is really neat.
00:33:28.180 - 00:34:02.556, Speaker B: It actually does this in a privacy preserving manner, which is really cool. It uses some really elegant multiparty computation to do that. And so it's a really cool design. And you can build apps to let you send value to phone numbers even before the recipient creates a wallet. But you can also just build apps that tap into kind of this data and effectively allow you to tap into what I believe is the biggest social graph in the world, which is kind of the amalgamation of everyone's contact lists.
00:34:02.588 - 00:34:04.130, Speaker C: On everyone's mobile phone.
00:34:04.820 - 00:34:23.556, Speaker B: This is arguably bigger than kind of the Facebook social network, so definitely check that out. You can learn more just by going to SocialConnect dev. It's really neat. Of course, Cello also supports account abstraction with 4337, and there's a whole bunch.
00:34:23.588 - 00:34:27.432, Speaker C: Of API providers that offer that too.
00:34:27.486 - 00:34:28.904, Speaker B: And so if you're excited about account.
00:34:28.942 - 00:34:33.390, Speaker C: Abstraction, definitely check out Cello as well.
00:34:34.320 - 00:34:36.380, Speaker B: And you can pair that with address.
00:34:36.450 - 00:34:40.860, Speaker C: Abstraction as well to build some really amazing experiences.
00:34:42.080 - 00:35:37.052, Speaker B: And then finally, and this is the final kind of set of slides, the third really neat thing that I think is pretty exciting is something that we're calling Wallet Shortcuts. Now, this is really hard to create a series of emojis to represent shortcuts. So this was the best I could do. And shortcuts are a feature now being offered by Velora, which is kind of a flagship wallet on Sello. It's funded by some really incredible investors, including Polychain, Andreessen and SPAngel as well. And you can learn more about Velora at Veloura XYZ. Think of it as kind of a wallet designed for normies.
00:35:37.052 - 00:35:42.604, Speaker B: We try to make things as easy as possible for all the users, leveraging.
00:35:42.652 - 00:35:45.650, Speaker C: All of the awesome features that Sella has to offer.
00:35:46.260 - 00:36:15.064, Speaker B: But one thing that Veloura has been doing now know Veloura supports has a DAP browser. You can connect your wallet to DApps, interact with all of these amazing mobile DApps on Sello with it. But a lot of builders who are building these DApps, they're excited about offering tighter integrations with the wallet, ways to make it possible for people to interact with their DApps without having to go.
00:36:15.102 - 00:36:18.044, Speaker C: And load the DApp browser and load a web page and everything.
00:36:18.242 - 00:36:52.744, Speaker B: And so shortcuts and generally hooks in Veloura are a nice way to do that. You can use hooks to help Velora figure out how to price your asset. You can use hooks to help Valora figure out how to price DAP positions. So if you have an LP token position for something and you want to price that, you can do that. And then finally you can build these shortcuts that effectively allow your users to interact with your DApps with just one tap natively in the wallet without having.
00:36:52.782 - 00:36:56.890, Speaker C: To leave the wallet and go to your DApps web page.
00:36:58.700 - 00:37:14.024, Speaker B: So obviously really useful for claiming rewards. But generally you can use these to kind of push people through the lifecycle of your product one step at a time. And Veloura is working to also make it possible for you to send push.
00:37:14.072 - 00:37:20.320, Speaker C: Notifications to your users to kind of guide them through those steps.
00:37:20.820 - 00:37:36.596, Speaker B: And so if this is interesting, if you built a DAP and you're trying to get more engagement with your users, you're trying to find ways to make it easier for people to go through the funnel of all the operations that you want them to do without having to necessarily load your DAP, you can.
00:37:36.618 - 00:37:39.300, Speaker C: Just do it directly in this popular wallet.
00:37:39.660 - 00:37:41.736, Speaker B: Shortcuts might be for you, and you.
00:37:41.758 - 00:37:48.440, Speaker C: Can learn more about that at Docs xyzoverview.
00:37:49.740 - 00:38:06.464, Speaker B: So I think that's everything I had, and I think that brings me pretty close to time. Yeah. Thank you so much. Really appreciate you guys listening. And I'm not sure if it's possible to take questions in this format, but.
00:38:06.582 - 00:38:12.130, Speaker C: If so, I have five minutes left and happy to answer anything that's on anyone's mind.
00:38:16.900 - 00:39:06.396, Speaker D: Hey, thanks again for all your time jumping for Kartik. But yeah, thanks for the presentation and for being a part of this. I did ask if there's anybody who has questions in the chat, so if they kind of ask any questions. I'll surface them here. I mean, one of my questions around this presentation was just sort of understanding how you sort of made the decision and maybe just your decision matrix around Ethereum versus not transitioning to Ethereum within the Ethereum Ecosystem, like choosing the Op Stack versus kind of all the other opportunities out there. There's a lot of great stuff happening all over the Web Three Ecosystem and would love to just kind of hear a little bit more color around how you're thinking about Op Stack versus other opportunities and what you consider yeah, it's.
00:39:06.428 - 00:39:36.204, Speaker B: A really great question. Yes, I think the Ethereum decision was a no brainer for us. Stella's origin story was actually we tried to build that wallet that I just shared, Valora, and we tried to build it on top of Ethereum five years ago. We wanted to build basically a global venmo, global cash app, global revolut, accessible to anyone in the world. And not surprisingly, back then it was difficult to build that on top of Ethereum and make it easy enough to.
00:39:36.242 - 00:39:38.284, Speaker C: Use for anyone in the world, especially.
00:39:38.322 - 00:39:39.436, Speaker B: If you wanted to also make it.
00:39:39.458 - 00:39:42.190, Speaker C: Decentralized and connect with the Light client and everything.
00:39:44.160 - 00:39:55.068, Speaker B: And so that took us down the path of working on, you know, in our mind, we were always part of an extension of the Ethereum Ecosystem. We were just kind of the mobile.
00:39:55.164 - 00:39:58.592, Speaker C: Real world use case extension to the Ethereum Ecosystem.
00:39:58.736 - 00:40:02.164, Speaker B: And back then, there was no other way to really accomplish what we wanted.
00:40:02.202 - 00:40:07.430, Speaker C: To do without launching our own EBM compatible layer One.
00:40:08.040 - 00:40:44.160, Speaker B: But times have changed and Ethereum has this incredible scalability roadmap that uses roll ups and it just made sense for us to propose to the community to transition into an L2, to be part of that roadmap and almost to have this kind of coming home moment, right like coming back into the fold, so to speak. And we were just really excited to see that.
00:40:44.230 - 00:40:52.364, Speaker C: The whole ecosystem was very excited about the direction and we saw just how many people voted yes on the proposal.
00:40:52.412 - 00:41:46.868, Speaker B: And I think also the Ethereum Ecosystem has been just really amazing about celebrating this as well. So that's on ethereum. Why? Op stack. I think that's also a great question. I think Op Stack has a really nice modular design that I think really fits our needs really well because as we talked about, there's a few things that we are working on that are different from other L2 S that we think are important for Cellar users. And the Op Stack code base just is very amenable to making those changes. So I think that's part of it.
00:41:46.954 - 00:41:53.784, Speaker C: We're obviously very excited about the broader kind of Op network and we have.
00:41:53.822 - 00:42:03.544, Speaker B: Developers who are actually started off on Sello and have been building bedrock that we're close to and we just generally.
00:42:03.592 - 00:42:11.070, Speaker C: Like the folks in the Op Stack ecosystem. And so I think that's another big part of it.
00:42:12.480 - 00:42:41.924, Speaker B: I will add that since making the proposal, we've actually had a lot of inbound from a ton of really great projects in the Ethereum ecosystem that are, I think, offering to collaborate and find ways to potentially speed up the deployment of this. That was, I think, a surprise, but certainly a welcome surprise.
00:42:41.972 - 00:42:46.810, Speaker C: And so it's just been really interesting having those conversations now as well.
00:42:47.740 - 00:42:48.344, Speaker B: Amazing.
00:42:48.462 - 00:43:15.840, Speaker D: Yeah, it's been great to see how much support the proposal's got overall. Seems can you almost call it unanimous, I would say, based on the mean, I even saw that Vitalik jumped in with some questions on the proposal as well. Lots of interest, lots of support. Really excited for the work that you are doing and the work that you presented here and excited to see that we'll roll out back on top of Ethereum.
00:43:16.180 - 00:43:19.600, Speaker B: Woohoo. Let's make it happen. Amazing.
00:43:19.750 - 00:43:26.080, Speaker D: Well, thanks so much for your time. Really appreciate it. And yeah, have a great rest of your day, have a great weekend and.
00:43:26.230 - 00:43:35.140, Speaker B: Going to move on to the next talk now. Awesome. Likewise. Thanks for having me. Have a great everyone. Bye.
