00:01:51.280 - 00:02:59.960, Speaker A: All right, welcome everybody. And this is our final day of Hack Money DeFi hackathon demos. I am Kartik, one of the co founders of Ape Global. And for those of you who are joining us today on Sunday afternoon, this is the last day of us going through all of our judging for the projects that were submitted for Hack Money. So for those of you who don't know on the live stream, hack Money was a hackathon organized by Eight Global. And for the past four weeks, we had over 350 hackers from 40 different countries and over 15 different time zones participate and build on top of D Five protocols in this ecosystem, we had people from all these amazing countries. We had over 40 mentors who were there to help our developers and our hackers with anything technical, product or marketing related, and an amazing set of sponsors who made this happen by dedicating their time and resources and making it easy for all of the teams to really use their SDKs and extend the composability aspect of DeFi.
00:02:59.960 - 00:03:40.536, Speaker A: So let me just say this one more time. We had 350 hackers, spent four weeks working on projects that they wanted and they had on their own wish list. And as of last Sunday, a week ago, when we finally got in all the submissions for the projects, we had 118 D Five projects come out of this hackathon. Now this is absolutely incredible. I think I can comfortably say that we've doubled the D Five projects in this space just in the past five weeks alone. And we're using this entire week to showcase everything that's come out of this event. And today is going to be no different.
00:03:40.536 - 00:04:16.548, Speaker A: So I want to quickly walk through the logistics of how the next 2 hours are going to work. We're going to have 13 teams present their demos to our judges and everybody else on the live stream, where each team will have four minutes to showcase what they're built. And we will have three minutes for questions and feedbacks. This gives every team about seven minutes in total. And just to save and minimize any technical difficulties, we've asked the teams to pre record a video demo which they will get to play to keep everything else on track. A quick overview of how the event was structured. The rules and criteria for this event were simple.
00:04:16.548 - 00:05:11.984, Speaker A: We had teams that could work on a project and each team could have up to five members. You were still allowed to work individually if you chose to. And the only rule that we had was every team must incorporate a D Five primitive. And that's kind of what made it hacking on Money. And just like any other hackathon, all code that was submitted should have been written over the course of the hackathon. So everything we'll be seeing today was a result of four weeks of work and the way we're going to structure our judging is going to be on these five categories, where primarily our judges are going to be scoring every project on how technical, original, or practical it is. And then on top of that, how is it to use from a Usability standpoint, whether the UI UX is suitable for the audience they're aiming to build this for, and if it's a developer tool, how easy or how high level are the abstractions for the end developer.
00:05:11.984 - 00:05:47.970, Speaker A: And of course, in case something isn't accounted for in those previous four categories, we have a general catch all category called Allow Factor, which lets us offset and outline any outliers. And just to kind of be absolutely clear, this is not a competition. The hackers are here to learn and really share their excitement. They've been working on these projects for the last month and they just really want to show this off. And we're excited to see what they've done. And the judges are here to give feedback. Their comments, their questions, will help them, will help our hackers not only improve the projects, but also understand how they can communicate and share their stories better.
00:05:47.970 - 00:06:18.444, Speaker A: Just another disclaimer, not everybody is trying to become a business. That's not been the intent or our goal. So some projects are going to work on and go and publish them to let anybody else be a user of them. But we are not aiming for businesses to come out of this thing. This is purely about experimentation and increasing the size of the space. So with that, this is our schedule for today. We're going to have these 13 teams come on and show their demo.
00:06:18.444 - 00:06:55.712, Speaker A: And a quick reminder for everybody else as well. After today's session is done, which concludes our judging. We're going to be having our finale livestream, which will be this coming Tuesday, June 2, from two to 04:00 p.m.. Eastern, where we're going to have Andreas on topolis, thomas Britanni, Ashley Chat, Robert, Leshner Vitalik Buterin and Stanny Koch. Look at our top teams from this entire set of 118 projects. And we'll use that as a way to celebrate the really cool projects that came out of this event. So be sure to watch out for this Tuesday.
00:06:55.712 - 00:07:53.390, Speaker A: If you are a hacker, you would have been already invited to the event to check your calendars, and then everybody else can sign up by going to the Eve Global Twitter. So with that, I want to call up our three judges who are doing all the hard work today, and we're extremely thankful for them giving us their Sunday to judge and give feedback to these projects. I want to welcome Lasse from one KX, brandon from Pull Together and Ken from Ethereum Foundation to say hi. And with that, we're going to kick off with our very first demo, and that is Project Maximus. So we'll be sharing their video from our end and the team will be there to answer any questions after so I'll kick off Maximus. Hi, I'm Andrew. I'm a GP member at Byzantine Capital.
00:07:53.390 - 00:08:10.658, Speaker A: Hey, I'm calvin. I'm a developer, blockchain developer. And also I'm very interested in DeFi products. Hey, I'm Shane. I'm a software engineer and architect. Hey, I'm Gary, I'm a full stack engineer. Hey guys, we're Team Maximus.
00:08:10.658 - 00:08:57.460, Speaker A: We're building a fully on chain decentralized bank, very similar to MakerDAO. Where we differentiate ourselves from maker is that we are community owned, meaning that those that provide value to the bank are those that earn ownership of the bank. And so there are two ways. I think we're having some choppiness here, so we'll give it around two here. This is generally expected and we still hope to minimize all these errors, but give us another second to make sure that this is done properly. I'll try to share this on my end where I think I have a bit more stability on the internet side. So let's kick that off.
00:08:57.460 - 00:09:16.774, Speaker A: Hi, I'm Andrew. I'm a GP member at Byzantine Capital. Hey, I'm Calvin. I'm a developer. Blockchain developer. And also I'm very interested in DeFi products. Hey, I'm Shane.
00:09:16.774 - 00:09:52.082, Speaker A: I'm a software engineer and architect. Hey, I'm Gary, I'm a full stack engineer. Hey guys, we're Team Maximus. We're building a fully on chain decentralized bank, very similar to MakerDAO. Where we differentiate ourselves from maker is that we are community owned, meaning that those that provide value to the bank are those that earn ownership of the bank. And so there are two ways to earn ownership of the bank. The first is to take out loans from the bank credit creation, also known as Minting a CDP.
00:09:52.082 - 00:10:18.562, Speaker A: And the second way is to provide liquidity to a uniswap pool between the bank's stablecoin and ether. So yeah, we hope you guys enjoy. I'll let Shane take the product demo from here. Awesome. Hi, I'm Shane, part of Maximus. As you can see, we've already connected a MetaMask account here. This is on localhost, although we do have a deployed version on Rinkbee.
00:10:18.562 - 00:11:14.506, Speaker A: But for Brevity we don't have enough time. So here we have a lot of methods here. We were very ambitious with our contracts, but this works a lot like the compound contracts for the liquidity and money market parts. So what we do is we give the contracts access to move our tokens around and we explicitly enter the markets for the currencies that we're trying to lend, to supply or to borrow. And so what we might do is we might lend ethereum in order to enter the market and have some collateral. And we can do this here too, but we might collateralize some ethereum. And then you see, there's actually a lot of USDM.
00:11:14.506 - 00:11:46.410, Speaker A: The system here is supply and there's no borrows. So we might go over here and we might try to borrow some USDM from the system and enter it that way. This is happening really fast here because it's all local. So if we refresh here, we can see there's now 100 USDM. And pardon my numbers, this is not the actual interest rate. I'd have a wrong order magnitude here by negative 14. But there is a borrow interest rate right now and supply is still super low.
00:11:46.410 - 00:12:17.800, Speaker A: So you can also repay your loans, you can withdraw your ether and you can withdraw your USDM. And then there's the uniswap pools as well here where you can add and remove liquidity. And here's the remove. Yeah. And so there's a lot here. We intend to do governance as well in the future and more management features. But this is our demo.
00:12:17.800 - 00:13:11.830, Speaker A: Hey, thank you for the videos. We're waiting for questions. Quick question. It seems very complex, which is a scary thing just from the security aspect. Is there a reason why you also make your own stablecoin? So one of the reason is we want to make something very similar to Dai, but we don't want the governance to be controlled by one organization. Even though it's a decentralized organization, we want more something similar to what you experience with a bank today. So everybody who participate will become a shareholder, essentially for Dao.
00:13:11.830 - 00:14:06.370, Speaker A: In order for us to do that, we can't really use a third party stablecoin. So we're just using what MakerDAO made as like a great example. And then we just want to extend the idea for different purposes. You said that MakerDAO is too centralized. To my knowledge, it does have really sort of token holder governance. Can you elaborate how that would be different? So the whole premise here is that makeadao even though it's a decentralized organization, the ownership is heavily concentrated to a certain organization or influencing people. We want to break that out and make it more like a shareholder structure.
00:14:06.370 - 00:15:03.000, Speaker A: I'm not saying that it's not a decentralized organization, but if you think about any governance token, if over 50% is owned by a group of people, a small group of people, it's not going to be just like blockchain. If it's owned by 51% of the validator, it's not going to be a good thing. The presentation kelvin. Oh, I was going to jump in. I just have a quick technical question. Did you effectively fork the Maker system or did you write these smart contracts from scratch? So CDP is so complicated, we didn't have time to do the whole thing. So what we did, we actually fork a compound and because the compound collateral system is very similar, so that's what we did in the demo.
00:15:03.000 - 00:15:34.410, Speaker A: So it's not complete even with compound. There's so much work to do. So we basically just fog compound and make it mirror ACDP behavior. Okay, right on. I'm looking through the this is really cool because I like the equity distribution and kind of how it's broken down. It reminds me more of like a mutual bank, which kind of has the people in mind. Right? How did you come up with the allocation, the equity allocation.
00:15:34.410 - 00:16:27.230, Speaker A: And what does the Dow actually do in, I guess, the 30% that it's owned? Are they the only ones that have governance or can participate in governance? Or what happens the other 70%? So the governance part is really conceptual right now. It's not part of the demo. But definitely we thought about this when we first started. We're thinking about we're just going to AirDrop the token, the Governance token, to encourage people to provide liquidity. And we created this uniswap pool originally, but we want people actually to own some governance token. We haven't thought like the actual implementation in the real world scenario. So I think it makes sense for us to retain a 30% just like a phase one of Compound.
00:16:27.230 - 00:16:57.926, Speaker A: You have an organization running the development and everything, but eventually you convert that into the Dow. So that was the beginning of the concept. We want to distribute like 70% of the token to the people and then incentivize them to fund the uniswap. And then we will maintain the 30% at the beginning. At some point when we completed the development, then we're just going to decentralize that pie as well. Cool. Thank you so much, Team Maximus.
00:16:57.926 - 00:17:33.628, Speaker A: We're going to now move on to the next team, the second for today, which is D 502. So please welcome them to the stream. Hello, I'm Doug Hoyt. My teammate was Richard farr, and we built d five two as our hack. It's a smart contract wallet that uses 502 security tokens for all key storage and signature support. It's command line native. It has a lot of DFI integrations.
00:17:33.628 - 00:17:58.760, Speaker A: For example, compound uniswap ave and open gas station network. The advantage of using a Fido token over a custom hardware solution is that they're very common and useful. You can use them for everything from logging into Google or GitHub to SSHing into your servers. They're also very cheap. You can pick up a solo key for $20. Let's continue to a demo. Dfido Two is a C plus plus command line application.
00:17:58.760 - 00:18:48.370, Speaker A: You can run the application with no arguments to list the available commands. The first command you should run is the List command, which will show all the currently active 502 devices on your computer. Next you should select the device you would like to use and then run the init command. At this point, you'll have to enter the Pin for your Fido Two device if it has one, and afterwards it's waiting for the user presence activation. So a physical press of your UB key is what you need to do at this point. You'll have initialized a JSON file. We can look at that and see that it contains a public key and a Credential ID and some metadata, but it does not actually contain any private key material that being stored purely on your 502 security token.
00:18:48.370 - 00:19:26.554, Speaker A: The next thing we should do is deploy our D 502 smart contract to the network. This is our contract address. We can check to see how much Ether we have. By using the Ether command, ETH balance will tell us the first thing we might want to do is deposit some ETH into the wallet from our sender. Let's deposit ten E. Now, if we check, we see that ten ETH has been moved into the smart contract. If we, however, try to withdraw one ETH now, we need to actually go to our security token for permission.
00:19:26.554 - 00:20:02.998, Speaker A: So enter the Pin, do the user presence, and it will invoke a method on your smart contract and withdraw one ETH back to the sender. Now, if we look at the ETH balance, we can see that one ETH has been removed. The first DeFi integration I'd like to show is compound. Let's check our compound balances. It says we have zero C ETH and zero C die. Let's mint some C e. How about five pin and present? Now let's check our compound balances.
00:20:02.998 - 00:20:38.502, Speaker A: Now we see we have a ce balance. The next step is to enter the market for C E. Again, every operation requires permission from the security token. And now, finally, we can borrow. Let's borrow ten C die. Now we should have ten die in our wallet, which we can check with the ERC 20 command. Let's use uniswap two to change some of these die to something else.
00:20:38.502 - 00:21:29.590, Speaker A: First, approve the uniswap for die trading. Next, use the dedicated uniswap integration to swap, say two three die for wrapped ether success. Let's just make sure by checking our wrapped Ether balance. Thank you for watching and be sure to check out our GitHub repo for future updates. Cool. From my side, it's more like hopefully helpful suggestion that the security token, there's a different association with it. You're technically correct, but a lot of people at the beginning, for a while, I thought you were doing something with tokenized securities.
00:21:29.590 - 00:21:46.726, Speaker A: Good point. Yeah, this is true. Yeah, I guess we should be a little more explicit in our description. Not a big deal. Yeah, it's not a big deal. It's just like some people might go for the first 1020 seconds down the wrong road, that's all. Yeah, thanks for the suggestion.
00:21:46.726 - 00:22:35.786, Speaker A: I mean, I guess this being a DFI hackathon, we should be more cognizant of our wording there. What we really wanted to do was to provide an alternate interface to these decentralized finance contracts because I think it's very important to not just rely on these websites as the interface that are obviously centrally hosted. They have centrally issued SSL certificates, but to also have alternative interfaces that people can use to interact with them. And being able to use your security keys for key storage, I think is quite powerful, too, because it adds an extra layer of comfort for people. That's really interesting. Doug, Richard, I like what you guys have built. I'm just curious, just in terms of a little more technical detail.
00:22:35.786 - 00:22:52.800, Speaker A: I'm not as familiar with these UB keys as you are. So it's not a cold storage wallet. Right. So it doesn't actually have the public private key on the device that's compatible with Ethereum. Right. You're not sending, like, a transaction to have it signed. This is a slightly different process.
00:22:52.800 - 00:23:31.494, Speaker A: Correct. It doesn't actually sign an Ethereum transaction on the device, but it does actually keep a public private key pair elliptic curve public private key on the device. And what happens is that we have a smart contract written in solidity that can validate those signatures. So the command line application creates a message and then hashes that and then sends it to the security token for the signature, and then that is what's sent and validated by the smart contract. So it's sort of like signing a Meta transaction. Right. So you could actually sign it by anybody as long as what you're signing includes the signature of the UB key, that can be interpreted by the recipient smart contract.
00:23:31.494 - 00:24:02.278, Speaker A: So it's kind of like a public function that can verify an additional layer of security. Exactly. Yeah. And anyone can send the transaction to the smart contract as long as it, as you said, has the right signature. And our plan is to incorporate the open gas station network to handle the incentives for other parties to send. Like, for example, you could pay and die. And just one more quick point, is that it's really interesting that the actual public and private key pair isn't completely stored on the UB key.
00:24:02.278 - 00:24:28.160, Speaker A: It's actually derived every time by providing the Credential ID. So it's really a neat design in that you can store an infinite number of public private key pairs, even on these very small devices. And this is exactly how the Web authentic standard works. You can have thousands of different websites and all have their own public private key pairs. Works the exact same way here. You could have a thousand different smart wallets, and you just one would UBK can handle them all. Cool.
00:24:28.160 - 00:24:56.656, Speaker A: Thank you so much, Team Defydo too. Thanks for joining us. And we're welcoming the next team to the stage, Metabadges. Hi. Hey. Welcome. You're sharing your video? Great.
00:24:56.656 - 00:25:46.080, Speaker A: Yeah. So we are Team Metabadges. I'm Nadzareno, I took care of the smart contract, and Scott Erin took care of the front end and back end via Merkel service. We worked on CDIP for MakerDAO, a community development initiative proposal on non transferable badges for maker ecosystem activities. So how it works, we propose an incentivization mechanism to enhance activity on MakerDAO ecosystem. This is like an overview of the smart contract. We integrated also NGSN, and essentially we interact with the MakerDAO system, checking redeemers on chain.
00:25:46.080 - 00:27:39.172, Speaker A: For example, if they accrue one die interest on Pot, or if they are currently voting on a governance pool, or if they are the high bidder in a bid for collateral auctions. And then we keep track of redeemers checked on chain and off chain via the graph and then they can redeem a badge for their activities. And this is a preview of the user interface. And now we'll launch them. Hey, looks like the audio isn't streaming so we can only just see the video. So would you mind quickly pausing it and sharing the zoom again? So still working or or I don't think you've screen shared. Okay, I will try again.
00:27:39.172 - 00:28:07.292, Speaker A: Just make sure that the checkbox is there from start over. We can just go on the yeah, so we can scroll back to a few seconds but everything else is good now, I think. Okay, start over. No, just a demo. Okay, it looks like we still have a problem. We are not getting audio. So what I'll do is I'll just share it on my side.
00:28:07.292 - 00:30:12.090, Speaker A: Okay. This is Nazareno Masari on MakerDAO ecosystem. This is checked on bidding collateral auctions then the redeemer insignia dao keep tracks of the redeemer checked on chain and then for redeemers checked off chain. We are using Merkle tree via Merkle service and then Insiniadao is linked to badge factory where is formed by batch factory and batch roles inherit badge roles where leveraging on access control of OpenZeppelin. We created a new role templator that can create a new template and then the redeemers checked on chain or off chain they can redeem activate the badge via activate badge and then there is not transferable and then they can burn eventually. The badge now show you a quick demo of how to create a new template. So any work now we can check pending it worked.
00:30:12.090 - 00:32:39.138, Speaker A: Now we can try to activate a badge for off chain checked redeemer that we already set the root ash. So we need to insert the leaf and we can run now we can check the transaction spending and it works now we can see that the events badge activated redeemer. This is the redeemer that is this account, this account here and it's transferred from account address zero to our account. Also we worked on Opengsn and you can find all the integration in the smart contract in Opengsn branch where I worked also on creating a badge paymaster that has already been funded to pay for transaction. Thanks Nazarino. I'm just going to jump in here with some technical questions. I think it's just to clarify.
00:32:39.138 - 00:34:02.340, Speaker A: So we're doing on chain sort of proofs that they accomplished something, I guess with a protocol and then they're using those proofs in order to mint themselves these badges essentially, yeah. So we check on chain redeemers for activities they are doing in real time. Like if they accrue one or more die interest on Pot if they are voting on a governance pool or if they are high bidder in a collateral auction in the present moment. And then we store the arch of the address and we keep track of the redeemer check on chain and then off chain we check for activities from historical data from events and then we store in a merkel tree on back end mercury service. And then both redeemers can activate a specific badge via badge factory through activate badge and they can redeem those badges. Other NFTs yeah, are NFTs and also we added non transferable feature. So the redeemer mints the batch and it can transfer.
00:34:02.340 - 00:34:49.220, Speaker A: So it's a batch. So it's something new. Very cool. It starts building a reputation for this address. Yeah, it's kind of interesting because on one hand you're using on chain data to create mint these NFTs which can then be used, I guess to say, for example, to unlock community forums or other features and whatnot. But it's interesting to me that if the data is on chain then can't they just check that on chain data? But you mentioned something about real time and so that's kind of interesting is that you're able to, I guess, have a history of this activity even if it vanishes or if it gets deleted or something. So that seems like that's the advantage in this.
00:34:49.220 - 00:35:11.180, Speaker A: Interesting. Interesting. Thanks. Cool. So thank you so much Manabadges. And we're going to welcome the next team up to the stage league of Pools. How should I raise my hand? Hello.
00:35:11.180 - 00:35:56.390, Speaker A: Perfect. Hello everyone. Here we're presenting League of Pools. It was aimed to be a gateway for users to be able to deposit and withdraw very easily in liquidity pools like Ave Compound. Uniswap Balancer. We chose to make it a contract where we can create a League of Pool factory pool. We can create a pool for any provider and any underlying accepted currency.
00:35:56.390 - 00:37:16.738, Speaker A: And we have pools so we can create providers that are uniswap Ave Compound. We can register currencies that are link die and create pool for the specified provider and accepted currency through a function that calls a factory that is specific to the provider, for example. And each factory implements the Create Pool function specific to this provider. This is the Ave implementation, the Ave factory implementing the Create pool function. And the pool implements an interface with deposit and redeem functions that have and here is the implementation for the Ave pool and that receives an underlying accepted currency in the constructor like Dai. And this was the back end side and then in the front end we made a game. Okay, I'll take it from here on the front end.
00:37:16.738 - 00:38:15.650, Speaker A: Our idea was to make a very user friendly interface to interact with the different providers on the form of an easy platform game. So you have a level for each provider where you get to a very easy game. The idea is not to make a hard game, but to get to know about the different providers. So maybe if you go to the box, to the box down here or here, you could get tips to get more information about the different providers, and in the end, you can invest. So maybe you set the dice. You want to invest and you do it right now, the functionality is not working. We also have implemented the logging with portis to get your crypto wallet, and we loaded with Skynet.
00:38:15.650 - 00:38:57.682, Speaker A: You will get the link on our submission. And we also wanted to make another view where you get the different providers you invested in with your profile and the different tips you got and the tips remaining to learn more about them. And this would be a live game because every time a new provider gets to the world, we could include it here. And that was our idea. Thanks a lot for listening. Thank you. Yeah.
00:38:57.682 - 00:40:04.440, Speaker A: So our idea is not finished, but we just wanted to get some feedback what we could have done. So I think I've seen a few of these sort know interfaces to add liquidity to different pools, but what I did find very original is the UI and the UX to kind of gamify that. That seems very cool. Yes. Our idea was just to make the user experience very easy. So you don't have the impression to be learning complicated things, but while you play, you get to discover new tips, like in a game, but the tips actually mean something and they mean information that you can use to make money while playing. But sadly, we didn't have enough time to get it to a nice end.
00:40:04.440 - 00:40:50.230, Speaker A: That's okay. You could continue working on it. Yes, we will for sure do. So currently, the game itself is not related to what you guys want to do. Right. I guess in the future, as you guys keep working on this, what kind of game do you envision would be a part of this? That actually does teach people a lot of these primitives. We had different ideas we start working on because we wanted to make a contract that handles the user information and invests in the different liquidity pools.
00:40:50.230 - 00:41:55.354, Speaker A: But it was a bit more complicated than we thought because we encountered some problems during the coding. So in the end, we tried to switch to the idea of a completely free game that would be the front on SIA, free to everyone to just learn about cryptos and get into this world. Yeah. At the beginning we wanted to do the contracts, but then we changed our mind and we didn't know. At the end we had this dilemma of either doing it all web3 or trying to do it also in contracts with ERC, 20 of the shares in the pools. What do you think would be better? Yeah, I think you should definitely keep playing around with this, I think. Right.
00:41:55.354 - 00:42:34.454, Speaker A: Especially I like the UI idea. I think that it's like a cool road to go down to and just have more fun with it. Okay, thanks. We will let you know if something cool comes. Think I think the way you guys are heading in terms of keeping it all on contracts and keeping all on chain would be I think that's awesome, right? I think you can actually start tracking stuff there. Yeah, I think that is probably way more preferred, especially because then sorry, you're at time. But yeah, if you all keep it within kind of the user and have it all on MetaMask, you can just get in, jump in, in and out.
00:42:34.454 - 00:42:58.654, Speaker A: I think it makes it a lot easier and more seamless when you actually do want to invest, or I guess not invest, but be a part of play around with. Awesome. It is awesome. Thanks so much, league of Pools. We're going to bring up the next team to the stage. Project is liquidify. All right.
00:42:58.654 - 00:43:43.878, Speaker A: Hey, guys, we're liquidify. I'm just going to share my screen and show you guys the video. Hello, everyone. Welcome to this presentation of our project, Liquid DeFi, which is about democratizing DeFi liquidation. So what we build is a shared liquidation pool because existing liquidations were quite inaccessible to many users of DeFi applications. But at the same time, the yields they gave are pretty high. So what we did is we allowed people to pool their funds into a smart contract, and then these funds are used by our liquidation bots to liquidate underwater positions.
00:43:43.878 - 00:44:34.640, Speaker A: Then the profits of these liquidations are shared among all the investors in the pool. So this is a team, and now we'll dive right into our demo. So we built this dashboard that shows you the pool, the entire pool, and we're just going to deposit 100 die in there because we want to make some money. So that gives us a MetaMask pop up. Just going to up the fee to 100 because we want this transaction to be fast. It's a demo. So we're going to put the gas to 100 again.
00:44:34.640 - 00:45:43.410, Speaker A: So here we see that we deposited 100 die into the pool, which right now corresponds to about 80 shark die. And that is because the value of one shark die is going to be higher than the value of one die because the pool is always making money. So to sort of simulate our liquidations, we're just going to be sending some adai to our smart contract to the pool, which is sort of simulating the pool, making money. So let's say we're going to be sending 100 adi to the entire pool, and again, we're going to up the gas price. And then what we're going to notice here is that we're going to see the value of our die change. So we're going to have the exact same amount of sharp dye and the exact same share of the pool. But we and everyone else in the pool is going to make a little bit of money on this liquidation.
00:45:43.410 - 00:46:35.406, Speaker A: We basically made five die on this simulated liquidation. So let's just go through how this works technically for a little bit. So basically the way it works is that we have our liquidation bot, we have investors in shark dye, and then we have people that are getting liquidated. So the investor turns some of his Dai into shark Dai to Rex and Noobs. And what happens is this contract silently puts the investor Dai in Aave, in Adai, stack the yields of Adai on our own yields. And then at some point there's going to be some price crash on something and there's going to be an underwater position that our bot capitalized on. And what's great about our contract is that it ensures that the investors in the pool must actually make a profit.
00:46:35.406 - 00:47:10.990, Speaker A: So there's no way for the bot to scam the pool. So that happens, we get collateral back from Ave and we swap this collateral back to Dai with Unitrop. Then at some point, the investor gets back their Dai from the pool and probably has made some money. So this is our future plan. We want to launch on Mainnet. We want to support more liquidation platforms than just Aave. We want to support more yield tokens as well, make bot improvements, gas token, anything to be more efficient.
00:47:10.990 - 00:47:53.690, Speaker A: And of course, we want to hear from you what you guys are looking forward to in liquid DeFi. All right, that was the video. When do you take profits? Right? Because if there's a crash in price, or if there's a crash, it keeps going. Right. I think when we have automated so with the alga trade, I mean, this is the most fun. Right. At what point do you pull out? The assets in the pool are just in Dai and as soon as there's any profitable liquidation position, our bot takes it and immediately turns the collateral back into Dai.
00:47:53.690 - 00:48:26.386, Speaker A: So that's basically how it works. So just like immediately. Got it. I really like this idea. I think this makes so much sense to democratize that aspect so everyone can start earning yield on that. Out of curiosity though, I feel like there's a lot to be said here for knowing how much of that liquidity you're utilizing. Because if you're liquidating fairly small positions and yet there's millions and those profits are being spread evenly across all those deposits.
00:48:26.386 - 00:49:14.100, Speaker A: So it seems like have you thought about constraints you'd want to put on the different sort of pools or do you just see them as the market getting so big that they just utilize everything out of the Singular Pool? I guess we're probably going to see some sort of equilibrium where people are because the more people are in the pool, the less yield it's going to give because the profits are going to be shared by them. So we've thought about this and we don't have a real strategy for that. We think that there will probably be some market equilibrium for that. Interesting. Yeah. You just have to let the experiment play out. Cool.
00:49:14.100 - 00:50:04.710, Speaker A: Basically the bots are running on your server or how does it work? Yeah, so basically our smart contract sort of acts as an interface between the bots and the actual thing we're liquidating. So in our case Ave, but could be any other platform as yeah. So basically our bot calls the smart contract, which is called through to the Ave liquidations. Jump in for one more question, one more technical question. So the bot could be a person as well, right? It could be anything because the smart contract ensures that there's no kind of custody of the funds essentially at any point. Right. It sort of controls the in and out.
00:50:04.710 - 00:50:29.820, Speaker A: So the function is also callable by anyone because like you said, it's enforced by the smart contract that the pool must make money. So could be anyone. Great. Thank you so much, liquid DeFi. We're going to move on to the next team, which is urban scale. Welcome to the live stream. Hey, thank you.
00:50:29.820 - 00:51:29.890, Speaker A: It looks like your audio might not have been shared. Oh, yeah. Take the screen share off and make sure when you do share again you're clicking the Audio Share button in the zoom menu. Okay, thanks for pointing the talk. Hi folks. This is Ahmed and this is my hackathon transmission by the same name. It's a platform for government institutions to issue public bonds.
00:51:29.890 - 00:52:28.766, Speaker A: Public bonds are a common mechanism used to finance different government projects and it's also a good form of investment as the returns on these bonds are guaranteed by taxpayers based on whoever's issuing the bond. So, quick demo. Whenever someone signs up, whenever someone visits the application, they get to see a list of bonds that's currently available and it's easy to go and purchase. So that's a big part of my application because public bonds even today are like it's meant to be accessible to everyone. But unlike stocks or anything, it's often directly traded between two parties. So while it's available for anyone, it's kind of difficult for them to access. And that's where my project comes in, where I'm converting the bonds into ERC, 20 tokens and their trade and purchase is much more easier.
00:52:28.766 - 00:53:14.782, Speaker A: Done online through this platform, it supports different social logins. So let's quickly log in with one of my accounts when you're into the system and let's have quick look at how the creation process works. So you get to fill out a form with basic details about what your issue would be like. I'm going to jump the video forward to a point where it's pre populated. The data is being fetched from Emma, which is a website which currently displays all the bonds that have been issued publicly. Let me fill this up and quickly jump forward. So here we are back to a populated farm.
00:53:14.782 - 00:54:01.840, Speaker A: I fetched the information from the Mr website and it's an issue by the city of Long Beach for the recovery of taxable for the economic redevelopment of a certain part. The parts that I filled in were these. So the principle that they were trying to gather, the kind of returns they could guarantee and this is something that the number of tokens that we are going to issue this. So each token would effectively be priced this divided by this. So let's quickly jump forward and issue it. Pause again. So the bonds be issued and it ends up on a page like this, which gives us basic information about the bond and views to purchase it.
00:54:01.840 - 00:55:16.780, Speaker A: It's been listed with along all the bonds available that are on the platform and a user can just click onto it, move ahead to purchase it. They specify the number of tokens that they would like to purchase and it's currently integrated with MetaMask that's your local wallet or it also integrates with or stuff like this I think makes it really easy for a common user to just go in and purchase a bond. After the purchase is complete, I'm redirected to a page like this which has the certificate containing all the details about the bond that we just purchased and it's also verified through this QR code. If I check my portfolio it lists all the bonds that I have purchased and I can trade the bonds have been issued as uniswap compatible ERC, 20 token. So future work would be enabling trade for this across all across different participants. So there's a secondary market for bonds. That's it.
00:55:16.780 - 00:56:59.160, Speaker A: Thank you Hip, for a question. So what happens under the hood? You're basically essentially creating different ERC twenty s and then how would you think that will connect to the city of Long Beach eventually? How will that end up as money in their bank account? So it's meant to be a platform that's supposed to be used by the government institutions. So the way they ensure the tokens are issued, it's supplemented by Emma. So it's playing along with the existing institution because when someone issues a bond like this, it can only be done after they complete the due process through the government agency and in a sense they are the ones ensuring that the bond issuers are fulfilling their demands. But that's actually a two ended thing like the government body needs to ensure that the returns are being met out. And also the platform can enable whoever is in possession of the tokens to make sure that there are dispersals reach the correct individuals. Does that answer your question? Sorry, coffee grinding in the background.
00:56:59.160 - 00:57:56.264, Speaker A: So I have a question. How do you see this actually happening? What do you need to move this forward and see it realized? Well, I guess having interacting with or being in connection with a public institution or government bodies who might be interested to issue their bonds on an online platform like this because right now it goes through banks and it would be an alternative means of issuing such bonds. Have you thought about if they effectively default on these bonds, what is the course of action for the lenders? Right, so that's a responsibility on behalf of Emma. Like the other ones ensuring bonds are issued and the other ones who ensure the bond is respected. Honored. Great. Thank you.
00:57:56.264 - 00:58:40.120, Speaker A: Thanks so much, amit. Thank you. Urban scale. So we're now going to take a five minute break before the next presentation. So chance to stretch your legs, grind your coffee, whatever you need to do then. We'll be back after five minutes with the rest of the teams for today's session. Are we just live streaming at five minute break? Do we just hang out here? I think we are still live streaming.
00:58:40.120 - 00:59:07.780, Speaker A: We're welcome to chat over the break slide. Ken, if you want to have a conversation, how about the world right now? Ken, how are you doing? How's your neighborhood in all right? It's all right. The protests are pretty crazy. I'm not going to lie. Actually, I just hear a lot of sirens outside. Today is not as bad as yesterday, but it's ACAP. ACAP.
00:59:07.780 - 01:06:18.340, Speaker A: I'm just going to mute myself or get in trouble. Fine. We're just doing like a morning show, but yeah, we'll call it for a couple of minutes. Okay. Welcome back, everybody. The next team up is Defend Money so we can get them live on the stream.
01:06:29.900 - 01:07:12.020, Speaker B: Hello and welcome to the Defend Money presentation. I'm your host, Chris Powers. First, a look at the team. Jack Tao su and Shadowfly from China and powers from the US. What did we build? Defend Money is a decentralized insurance pool. It gives users the ability to hedge crypto asset risk without sacrificing the price upside users will pay for downside price protection for volatile assets. How does it work? Once a user deposits their asset into Defend Money to insure, it automatically splits these funds into two groups.
01:07:12.020 - 01:07:54.336, Speaker B: 1st 5% is converted to Dai lent out on ave. This is the risk based capital pool or could also be considered the insurance premium. This is used to compensate in the event of a price decline or as payment for protection if the price increases. Second, the remaining 95% is deposited into Uniswap to earn trading fees. As time goes on, the price will go up and down. When a chooser uses to exit, there are two possibilities. If the insured asset increases in value, then the user will only receive the 95% that was deposited on Uniswap.
01:07:54.336 - 01:08:44.784, Speaker B: If the insured asset decreases in value, then the user will receive the same 95% plus additional funds from the risk based capital pool to compensate for their loss. Here is a diagram walking through the steps for when Alice wants to insure the account. Defend Money uses chainlink for price information and records the price of the token in the insurance account. And then when Alice wants to liquidate or redeem the price information is fetched from chainlink and compared to the previous price recorded in the Defend Money insurance account. Let's look at a live demo. First select Start to begin the insurance process. Next, choose the token to defend.
01:08:44.784 - 01:09:25.890, Speaker B: Right now there are seven tokens. Once the token is selected, you will go to the main page. On the left you can see the status for the entire Defend Money insured pool. Right now only Aave and Link are included in the insured pool. And then in the middle you can see the status for the entire Defend Money insured pool. On the right you can see the rate of the return for different assets over time. And then in the bottom right each user can see their own profile for the insured amount.
01:09:25.890 - 01:10:17.890, Speaker B: If the user wishes to withdraw assets, they can, or if they would like to insure additional ones, they can also how it was made the first thing was brainstorming the different architectures, particularly the compensation logic and also separating the insurance pool. Then the team tested it and deployed to the chain using Remix and Solidity and then purchased the Defend Money URL interface and use Infuria to connect all of the web3 stuff and then render with view framework and deploy it to the server. In the future we hope to integrate new features, add compound and also add more tokens through chain link and that's it. Thank you very much.
01:10:26.560 - 01:11:06.100, Speaker A: Cool. It's kind of a little bit like an option, right? You're buying this sort of security option against the price. Can you specify what happens? Let's say I buy it at e 200 and then it's ETH is at 150 and I withdraw. How exactly does it work? Yeah, so I think if you would think about the number of ETH, right, you're kind of ensuring the number of ETH rather than just like the dollar amount. So we have the one we are setting at is 95%. So 95% of the ETH would kind of be set aside, right. And then the 5% is converted to die.
01:11:06.100 - 01:12:16.556, Speaker A: And in the event that there is a redemption, you would get back the 95% of ETH, whatever that would be, plus the die. And presumably in that case, because if ETH has gone down to 150, then you would be getting more because that 5% of your asset that would have gone down to 150 is converted into die. Obviously it would be a bad investment if ETH would go up, right? Because then you would sacrifice the 5% and then that 5% is in the surplus pool which would hopefully be able to compensate in the event where ETH went down to 150 again. Got it. Thanks. Into a stable coin to sort of hedge or make sure you don't are less exposed to volatility. And then if you want to sell, you get that back if it's dropped.
01:12:16.556 - 01:13:18.390, Speaker A: If you want to sell and you get that back, you don't get that back if it's gone up. So why wouldn't I just do that on my own? Why would I use the insurance protocol if I'm getting that right? Yeah, I think two things. I think, one, there is a little bit of a shared risk in this, right? So the compensation can be determined. You would need to have more than potentially what you could set aside to compensate for the downside risk, if that makes sense. So in the long term, it would be better so that people can get compensated for things that they can't insure themselves, like in that amount, but that takes a certain amount of the pool growing in that time. But I think to your point, I think this is a good product for anyone to just do it themselves. And so whether this is just like a DeFi zap kind of product, too.
01:13:18.390 - 01:13:43.630, Speaker A: All right, great. Well, thank you so much. Defend money. And we're going to move on to the next team, which is Tsunami Wallet. Welcome to live stream. Hi there. Can you guys see my screen? Well, everybody good? Yep.
01:13:43.630 - 01:14:10.890, Speaker A: Good. So sorry I didn't prepare a video. I apologize, I didn't have time. So Tsunami Wallet is a mobile privacy wallet for ethereum. Sorry about the lack of a video. And so the premise was, can we provide mobile privacy on ethereum? And so if you think about the easiest ways to leak privacy today on ethereum, that would be address or accounts, and then your IP addresses. The first thing I tried to target was IP address linkability.
01:14:10.890 - 01:14:52.630, Speaker A: Because of the lack of SPV, it's kind of hard to do that to have any type of IP address privacy on mobile, simply because you have to connect to up to a node. And then the general question I had was, know, we all love infira. They're doing good work, but what if they were evil? If they were evil, they could do a lot of nasty things, such as link IP addresses of accounts together, keep track of which IP addresses are in charge of, which are interested in which contracts, and they could even do pretty interesting timing analysis to try to correlate. Like, let's just say you're using a VPN to connect up to infuria. They could well, you know, this VPN IP looked at these three addresses all in unison. Those three addresses might be linked. And so the question know, can we approve this? The best way would be through tor.
01:14:52.630 - 01:15:25.186, Speaker A: And so I'll touch on that in a moment. And the challenges I had with that for address privacy, we now have zero knowledge proofs, which is cool. I started actually working on Aztec because I really like the ability to send any amount as opposed to tornado. Unfortunately, they don't have any address privacy on Aztec right now. On Aztec Two, they will, but until Aztec two, no privacy. So I went with tornado. Tornado is cool, but of course, it doesn't have a really good SDK, and it only allows you to create fixed amount notes, which kind of is less than fun for spending.
01:15:25.186 - 01:16:16.274, Speaker A: But anyways, I went with it. So when I decided to move to Tornado, I started to play around with it. The first challenge I had was how do I actually get Tornado proofs to be generated on mobile? That wasn't so simple, but eventually I decided to just do it in Android JS sorry, in JavaScript and an Android WebView, the things that I tried to prevent the user from doing when they're leaking privacy, even while using Tornado, is one a relayer. Like when you use a Tornado Note, you have to relay it to an address, and so you want to make sure that that relay is done through Tor. You have to calculate the total anonymity set so that'll be the total amount of deposits that have occurred since your first deposit, which I think 20 is a pretty good number. I could touch on that later if you guys are interested. And then timing, just making sure they don't immediately deposit ten ether and then immediately withdraw ten ether, that doesn't really provide very much privacy.
01:16:16.274 - 01:16:43.834, Speaker A: And other things were just like UX, issues of keeping track of notes. That's really frustrating. So what I was doing was I was actually storing and encrypting the notes using the private key of the private wallet. In terms of the mobile environment. It was really painful, actually. I wanted to do this on iOS to start, but I couldn't simply because Tor, there's not a really good toy library on iOS. And even if you do connect to Tor on iOS, you can't proxy it through WebView, so you can't really use JavaScript.
01:16:43.834 - 01:17:35.690, Speaker A: So I initially started from a fork of blockstream green, which is a cool bitcoin wallet that has really good Tor support on cross platform. But it would have meant that I had to recode all of the zero knowledge libraries in C, and I didn't really feel like doing that. So I just dropped iOS and then I forked Samurai Wallet, which is another privacy wallet on Android, which worked quite well. And I was able to actually start doing communication through web3 through Tor on a mobile device. And so what I was hoping to actually have at the end, but I failed, was that you'd have this mobile app that has two wallets. You have your regular wallet that's not using Tor, and it won't let you send directly to any of your private wallets, which I'll touch on in a second, and you can look up your balance anytime. And then you would press a button, it'd take you to your private wallet, and this would be an entirely different wallet, but you can only transfer from your regular wallet to your private wallet through Tornado cash notes, but it takes care of all of that for you in the background.
01:17:35.690 - 01:18:11.446, Speaker A: It only connects through web3 through Tor. It encrypts all of your private notes and keeps track of them. It calculates the anonymity set of all of your notes, but kind of obfuscates that from you. So just like it only lets you redeem notes that are anonymous enough and it doesn't actually let you send directly back to your other wallet just so that you can't accidentally transfer back to the regular wallet from the private wallet. Eventually, it could be a web3 DAP browser, but that's pretty a lofty goal in terms of how far I got. Unfortunately, I got pretty close. I was able to generate proofs in JavaScript and relay them in Tor, but I kept on gotten invalid proofs.
01:18:11.446 - 01:18:43.442, Speaker A: After going back and forth with Tornado cache team, like a bunch, they were able to explain to me that I was using the wrong keys and that they kept keys in a different repo that wasn't really documented. That was a little frustrating because it's really hard to debug zero knowledge proofs, but I was pretty happy with how far I got. I think I have, like, a model for how you could build a private wallet on Ethereum. It'll probably take a bit of time to actually complete it, though. So that's what would have been my video had I actually made one. Thanks. This is super cool.
01:18:43.442 - 01:19:13.280, Speaker A: So when you said it failed, is it really just the ZK proof that failed with Tornado or did you have more things in the way? Well, I got so stuck up on that problem that I just continued like, I didn't finish the rest of the right, like, because I was like, man, I can't get this thing. It was frustrating because I worked on anyway. Yeah. But this is where I stopped. I got stuck up on this problem for a while, but I do intend to continue going and building the rest of the app now that I have the framework. Super cool. Yeah, very cool.
01:19:13.280 - 01:19:37.880, Speaker A: You got it. Yeah, it's ambitious. I think it's fair enough that this didn't work out right away. It's pretty complicated technology, so kudos for that. Thank you. Vice versa. I really like this idea, and I feel like it should be built into a lot of our different wallets, if not as an option.
01:19:37.880 - 01:20:11.262, Speaker A: And you might want to have a look at NIM. So NIM is like Tor, but it actually times the packets so that they can't even do sort of statistical analysis across the edges. It's a really cool piece of tech. I don't know how far along they are with public deployments or testnets, but might be worth checking out. Yeah, I would love for something on iOS I'll look into, see if there's any type of NIM library on iOS. But the challenge I had was that on iOS, you can't proxy web views. Like, on Android, you can proxy all the traffic on a web view through a port which Orbot will open.
01:20:11.262 - 01:20:28.790, Speaker A: Like your Tor port will open but on iOS it just doesn't seem like that's possible. So I think the only way to do on iOS is to create like a NIM VPN that your app would create. I don't know, it would be a little cludgy but that's a good idea. Thanks for the tip. Interesting. Yeah. Good effort.
01:20:28.790 - 01:21:09.010, Speaker A: I have one more question. So with the private wallets, do you envision it to be someone would just set up different private wallets or do you think each one is sort of ephemeral and you kind of have disposable private wallets in that way? It really is kind of an extra layer. If Aztec 2.0 pulls it off you could actually just kind of not really even really know because you could just keep all of your notes in Aztec because they're kind of like UTXOs and just spend however much you want. But with tornado I think it's kind of ephemeral wallets because they're fixed amounts so you can't really do anything but have ephemera wallets until that. Yeah, that makes sense. Cool.
01:21:09.010 - 01:21:19.554, Speaker A: Great. Thanks man. Thank you. Tsunami wallet. We're going to bring up the next team to the live stream which is the Wall. Hello. Hi from Madrid.
01:21:19.554 - 01:21:53.518, Speaker A: I'm going to share my screen. Hi from Madrid. Thank you very much for permitting us to be in hacking money. Let us present the wall. We are two core computer engineers specializing finance in Madrid and we had built an idea that is a decentralized deal of last resort. It mainly is a crypto fund that tried to profit from this kind of spike movement that happens in crypto space. As we have seen, price discovery doesn't work very well in crypto.
01:21:53.518 - 01:23:03.350, Speaker A: Market is not so efficient to address liquidity when we see irrational DDAs price. And that's because mainly because liquidity is scarce, maybe in the data that are not well known and it's not so much connected. And with volume, you can really put prices at levels that are very rational. And sometimes this returns very fast to the fundamental price. For sure there will be prices that will be fundamental but sometimes they are out of spike movement and that's mainly because it's very cheap to move the price so speculation profit from that environment. So liquidity happens sometimes via lending protocols have been liquidated even flash loans to have liquidity for free. This price affects for best knowledge investor that sometimes sells in that kind of moment and speculation strategies and other stated agents that commission have commissioned for every trade for sure profit from that volatility and high volume usually even we have the early initiatives that try to organize like this kind of capital in order to avoid irrational price.
01:23:03.350 - 01:23:31.410, Speaker A: What occurs from the McKinell in the issuance of makeda foundation with the MakerDAO stock. So the world tried to make profit from that kind of spikes. And in some way they try to make more expensive to move the price. Because it makes sense that we. Will call last. And we know that there are a lot of capital right now sitting on protocols like compound, like Aveta. They don't want to take too much risk, they want to be too exposed to interest rate.
01:23:31.410 - 01:24:54.460, Speaker A: But probably if they believe in the project and they will be willing to take about asset price we will be probably willing to buy Ethereum at $8 that will define this kind of ground and selling prices where we are going to buy and to sell in order to sell in these kind of stream positions we are going to do it in that way as smart contract we will have this investment in the traditional protocols of lending with low risk and very good interest rate. But we are going to put this liquidity imbalance when we see an expect moment and to take profit in that moment that can put efficient to be at $8 or even after that to sell at $200. So in our demo we have seen we have to deprecate an environment where we can really have this kind of simulations and that's where we are right now showing you that we have simulate. In that case, we assimilate an attack the price. With the attack we will put the value probably 1918, we put liquidity in that moment. So we stopped the price in 173 and even we put 90% of commission. So we profit a lot and we really defend the price in that case.
01:24:54.460 - 01:25:41.260, Speaker A: So really the main conclusion with that is basically that it's possible to do a smart contract. The smart contract really can be mostly invested in interest rate in either compound without risk. But we can trigger in some way this liquidity to buy in some kind of moments and with putting a commission of 90%, you know, to profit more from that moment that really doesn't care about the commission. So you can even to be more costly at commissions. So next steps will be to do it for different assets. Not only that to put a line stop if you buy and you don't want to sell and to study more efficient way to move liquidity from that. Thank you very much.
01:25:41.260 - 01:26:52.300, Speaker A: Okay, if I understood it correctly, it's basically it sits in interest yielding money markets except for massive price crashes or a specific price that you specify before. And then it just buys ETH should have fallen to a certain price. Is that what it is? Yes, that's what it is. Really, it like a crypto fund that can put liquidity if you are willing to do it in certain price of the moment, in certain price of the digital assets. So to move very efficient in a balancer and to profit in that trading that with high volume occurs with this spec trading. Just trying to understand here, I'm trying to follow all the different bits and pieces. So basically you use like compound as your oracle effectively to see, okay, if the price of ETH is dipping, then you have some trigger set somewhere to buy ETH.
01:26:52.300 - 01:27:31.290, Speaker A: And so is that triggered by a person then in this case or anybody balancer? Yes. Right now we are right now looking for the balancer price because at the end we are going to buy imbalancer for the price. But I think in the future we will see auctions like set protocol. We will see like an auction balancer auction in order that people can really balance as fast as possible. Because in that moment, speed is very important. So we are going to pay for people who rebalance in that moment with the first. We will be paid for that.
01:27:31.290 - 01:28:19.518, Speaker A: So in the case of balancer, could you have those then the weights then would dynamically adjust to kind of encourage the ETH purchasing. Is that the kind of idea is that you have some smart contract governing that? Yeah. The good thing about balancers, you can put either liquidity dies in that moment and it's like you are buying really. So you can put your balancer like more in capital in order to you can put a lot of US dollar in order to buy. And with that kind of configuration you can manage that in order to put the liquidity in that moment to buy all the assets. Okay, great. Well, thank you so much the wall.
01:28:19.518 - 01:29:12.618, Speaker A: And we're going to move on to the next team. Bring them up on the live stream and that is Blockcheets. Welcome to the stage. Give us one moment folks. Just trying to get them onto the live stream here. Okay, looks like they may have lost connection. I think we're just going to move on to the team after that.
01:29:12.618 - 01:30:26.050, Speaker A: If we can just promote them to the live stream in 1 second. So just hold on everybody for 30 more seconds and we'll keep going. It okay. Welcome Unabove from Project Parcel. We'll let you take it away with your presentation. Okay folks, continuing to run into a few technical difficulties here as we make an adjustment. Anubhav, can you hear me right now? It looks like you're muted.
01:30:26.050 - 01:30:45.178, Speaker A: Okay, Ken, if you do have any jokes now, let's really be the time. Anubhav, you there? Yeah. Can you guys hear? Yes. Yes. Thank you. Sorry about the last minute change there. Do you have a video you're going to share with us? Yeah, sure.
01:30:45.178 - 01:31:07.550, Speaker A: I'll start over. Great. All yours. Demo for parcel. Parcel is a service which allows users to deliver multiple transactions in one click and above looks like you're not actually sharing the screen. Okay. So just use the Share screen option in the bottom of the zoom menu.
01:31:07.550 - 01:31:51.790, Speaker A: Make sure that you click Share Audio and then we'll be able to see your video. Great. Anaphav Parcel is a service which allows users to deliver multiple transactions in one click. Who am I? I am AnUpov I am a blockchain developer at Byconmy. What I've built I've built a service which is called Parcel which lets users send Ether or tokens to multiple addresses in one single transaction. How it works, it uses patch transactions for multiple calls. So there's a for loop running over a hash call data which is calling different contracts.
01:31:51.790 - 01:32:48.690, Speaker A: We have used uniswap V two integration for swaps. What that means is if the user has come with ETH, let's suppose and he wants to send die to someone else, we use uniswap to swap ETH to Dai and then send it to the recipient. Also has an integrated compound in our way for DeFi. So what that means is we built a customized pass transaction system where users can come and build their own money like this, swap some tokens and send it to multiple addresses in one single transaction. Now, so let me this address, let's send MTR to this address as well. Try to parcel it. Let's confirm the transaction.
01:32:48.690 - 01:33:55.606, Speaker A: Transaction sent successfully. The transaction has been confirmed and as you can see, Ether was swapped to Dai and MKR and sent to the receipt address. Future course of action is to integrate ENS to make it better and clear for the users also to go token agnostic meaning that right now it supports Ethereum as the main currency. We want to be able to support every token. The users can come and send any tokens and swap and get any tokens to the recipient. And obviously the plan is to go to mainland soon. Feel free to check out parcel is live on and thank you so much for your time and question from my side just to make sure I understood it.
01:33:55.606 - 01:34:54.488, Speaker A: So that wallet only had ETH in it and then that transaction basically went to Uniswap, bought Dai, bought MKR and sent it to the destination addresses, is that correct? That's correct. And you can do it for multiple addresses in one single transaction. I like first of all how you denote everything in ETH. I think that shows you're an ETH maximalist. Having that as the base currency dispatch transaction is now a very common feature amongst a lot of different wallets. But I do think it's interesting that you're talking about sending this money to many different recipients at once. Do you see this being tied into sort of like being triggered by say, a prediction market or do you have a sort of broader vision for these multiple transactions being sent out, these batches? Yeah, so there are multiple use cases that I could think of.
01:34:54.488 - 01:35:57.628, Speaker A: I think the plan is to open source it so that DeFi community or the gaming community can use it. So for gaming, what I thought was let's say game owner wants to send multiple tokens at once to all the players so they could use that for DeFi. I think there could be a lot of use cases for wallets and other DeFi protocols could also integrate and use it. But to precisely pick out. I don't think I have any specific use case in mind, so that's why I wanted to open source it. Perhaps this is more of a suggestion. So, working on pool together, I found that we've now been trying to optimize a lot of these withdrawals from other protocols because we have, say, for example, six different deposits in compound that we all want to pull out.
01:35:57.628 - 01:36:38.444, Speaker A: So we effectively batch them into a single pool, which we then can distribute as we wish because we just save hundreds of gas. So I do see there is something valuable here in the sense that if you're sending all these different types of tokens, if you can collapse those into single swaps or withdrawals or what have you, I do think there's some potential there to kind of abstract that. So that might be an avenue worth pursuing. And it's something that you're already looking like you're already kind of working on. So, yeah, there might be something there. Yeah. The idea is to build a better front end after the hackathon and let people come and do multiple transactions at once.
01:36:38.444 - 01:37:19.210, Speaker A: So I'm working at Biconomy and we send payments through crypto and we are a team of eight people. So I think utilize this service instead of sending single transactions to eight people, we could use that and save gas also. It's more convenient than the usual process. You might want to have a look at sabler as well for streaming payments. I feel if this is batching possibility there as well, or some kind of integration. Yeah, I was looking at that but did not have the time to look at it completely. But it's an interesting prospect here.
01:37:19.210 - 01:37:40.060, Speaker A: Great. Okay, thank you. Thank you, Parcel. Appreciate the change around there. Just for everyone on the watching the stream. We've just got two teams left to present, so we'll bring up the next one now. Blockcheets, welcome to the stage.
01:37:40.060 - 01:38:03.250, Speaker A: Hello, everyone. I'm sorry about that. I had some bad technical difficulties. Beyond that. My name is Ty Cooper. I am the creator of Blockcheets. I'm just trying to no, hold on.
01:38:03.250 - 01:38:32.460, Speaker A: My computer is frozen. Can you guys still see me or hear? We can hear you, but your video is frozen. Same thing. Do you want to try sharing your screen? Or maybe we could try and play your video for you. Yeah, play the video for me. That'll be best because I cannot move my mouth at all and my screen, so I can't see anything. We'll queue that up and just roll with it.
01:38:32.460 - 01:39:27.596, Speaker A: Thank you, everyone. This is the introduction to block sheets. It's essentially all of your assets right into one spreadsheet. It's a little bare bones right now, but here's the main application. So when you come here, you want to make sure you have MetaMask installed, which I do here. And then when you connect the MetaMask, it's going to show up here and then all your token balances are going to be sent right here. There's still some more added features I'm going to add as far as getting a CSV file, having people be able to export their balances and so much more.
01:39:27.596 - 01:40:25.250, Speaker A: And if you don't have MetaMask, let's say I open this up on let's say I don't have MetaMask and open it up on a browser. Then I could just go to another address here, and then I could just enter the address here and get the token balances for those addresses. That's essentially how it works in a nutshell. And then if you want the recent transactions, you can press Get Transactions. Or if you already have it connected here, you can just press this button here and then it's just going to load in the most recent transactions. It's going to take a bit because this address has a lot of them, but you can see as they load there. So that's how it goes.
01:40:25.250 - 01:41:00.708, Speaker A: Very simple and lightweight. Okay, I'm just going to say that was a lot better than what I was about to do. And let me see if I can share my screen. I actually updated it quite a bit, so I was somber. I was actually a little more enthusiastic. I don't know if most of you know, but I was actually getting hacked while I was making the video because I made the video Sunday night. And so right when I had uploaded code to GitHub and pushed it, updated everything, I was getting hacked.
01:41:00.708 - 01:41:33.168, Speaker A: So I was getting notifications via my Gmail that I was losing a lot of money, but I had to stay strong and make the video. Regardless of that, I'll show you the updated version of it. So you could already see here project lightly referenced. I had got my little 15 seconds of fame in decrypt. And again, same thing occurs. I already got address here, so that way I don't have to go scramble. So you just want to add it here and you get token balances.
01:41:33.168 - 01:42:38.120, Speaker A: The idea behind it was for people to be able to auto generate auto loads in all their tokens that they'll have associated with the wallet. And for some reason my MetaMask, I don't know, it was working perfectly fine until just today. Everything broke. Regardless of that, people are able to connect MetaMask and it'll load in all their token balances via the address. And not only that address, the attempt was to be able to get all of their other addresses from MetaMask, but we're having difficulties executing that as well. And one last thing I also want to add into was for people to be able to calculate how much ETH or how much of their address was at a particular point in time. So have a graph of their portfolio per se or this address portfolio just to automatically show an update like that.
01:42:38.120 - 01:43:12.164, Speaker A: And that's it. That's the application. Not too complex, not too spectacular in a sense, but just something simple for people to use real quick. Any questions? So it's like a lightweight kind of like ether scan, like personal ether scan for my addresses. Precisely. Global, like that cool. It's a lightweight ether scan because one thing I like ether scan, but it's just so much to consume all at once.
01:43:12.164 - 01:43:48.770, Speaker A: But this is supposed, in a sense, is your own personal ether scan. Precisely. So I like your idea around tracking the history of your portfolio. I think that's kind of interesting. I think you should look at the graph protocol because they have a really interesting feature now where you can just tell it what block you want the data from and so you can essentially code it as if it's real time so that you have the most up to date data. But then you can go back in time at any point with the block number. It's pretty cool.
01:43:48.770 - 01:44:48.470, Speaker A: One other question, though. I might have missed this, but how do you detect what tokens they have? What approach did you take? Right, so I was having difficulties with that as well. My initial idea was just to have a lightweight JSON object with the top 200 or so tokens, and if it detects a balance above zero or detects it, that it's a number. Because there's also an issue where if you input an empty field, it just returns not a number. So I was going to have a lightweight approach to it, and then if it detects that's why I have pre generated tokens right there. If it detects that they have tokens above that amount, then it'll just automatically show those and hide the rest. In a sense.
01:44:48.470 - 01:45:14.670, Speaker A: That was the initial approach, but I'm still trying to find ways to do it automatically. Awesome. Thank you, Ty. Glad we're able to figure out the technical difficulties there. We're going to bring up the last team now for today's judging session and the last team for any of the live streams until the finale on Tuesday. Please welcome Potion Insurance to the stage. Hey, guys, good to meet you.
01:45:14.670 - 01:45:51.412, Speaker A: We're very excited to introduce you to Potion, a new way to insure yourself in DeFi. Please meet our team christian on UX, gilem on contract logic and finance, fabian on front end, kristen on the back end, and Geordi on financial engineering. This is what we did. We built the first perfectly priced Put AMM system. It's based on black scholes pricing and Uma priceless, oracling. Potion introduces three key innovations. First, it uses a single pool of collateral to mint puts of any strike, expiry, or insured asset.
01:45:51.412 - 01:46:29.428, Speaker A: Second, from this single pool, potion is able to write insurance on any asset, whether it's crypto assets like Bitcoin makerlink, et cetera, or fiat assets such as Gold, Tesla, the S and P 500, et cetera. Thirdly, Potion uses Blacksold's risk neutral premiums settled with uma priceless technology, achieving risk neutral pricing for both buyer and seller let's see it in action. Welcome to Potion. In this section of the site, we're able to buy Put insurance potions. First, I connect my wallet. As you can see, we're able to buy Put contracts on several assets. Let's say I want to protect my maker position.
01:46:29.428 - 01:46:52.344, Speaker A: I want to get three contracts, strike 300 expiry, let's say three weeks from now. Let's make a potion. I unlock my die. Notice that I'm being asked to pay 63 die as a deposit for these potions. Unless there is some crazy volatility, I should be able to get back some of that since I'm buying three. The total amount is 190. Go ahead.
01:46:52.344 - 01:47:06.880, Speaker A: Great. The potion has been created. Okay, now I go onto my Potions section of the site. Here I am able to manage my potions. You can see that I have one potion here that I just created. Let's try to exercise it. I select the quantity I want to exercise three.
01:47:06.880 - 01:47:43.800, Speaker A: Let's pretend that the price has come down below the strike. So it's now 200. So we should be able to withdraw $100. The system is asking me to stake five die. I will lose this money if the values I provided are disputed and the dispute is successful. The liquidation went well, and now I'm able to withdraw the money after the liquidation. The amount you see on screen is the combination of the $100 of each of the contracts plus all the volatility that we overpaid at the beginning.
01:47:43.800 - 01:48:20.232, Speaker A: After this withdrawal, I will have paid perfect Black Scholes pricing. Perfect. The withdrawal was successful. This is how pricing works at Minting, the user deposits a worst case scenario premium deposit at liquidation or expiry. The option is priced with the actual volatility observed during the life of the contract using a Black Scholes risk neutral approach. The difference between the premium deposit charts that Minting and the Black Scholes premium calculated at liquidation is sent back to the user, resulting in effectively perfectly priced Black Scholes Put contract. We think it's super cool.
01:48:20.232 - 01:49:16.424, Speaker A: Potion uses Uma's priceless oracling system during Minting or exercising, the user is able to freely submit pricing data. Sponsors actively monitor these prices. When the prices are fine, no Oracle needs to be called, resulting in savings in transaction costs and time. If the pricing is wrong, sponsors are able to dispute the pricing and invoke the human DVM Oracle to produce a neutral price and settle the transaction fairly. On chain. Users risk losing money if they are disputed, and so they're incentivized to always use correct prices. Future steps include getting price Identifiers approved by Uma, optimize the gas consumption of the Minter, create a UX for the liquidity providers, deploy liquidator bots, deploy the protocol on mainnet and as new assets are available as price fit Enuma, add them to the platform.
01:49:16.424 - 01:50:08.964, Speaker A: You can check the system live at Potion Finance and read our documentation at Potion GitBook IO. We're very excited about everything that could be built on top of a general purpose put AMM system. We very much look forward to your questions. So basically at the end, when I exercise, basically the less volatility there was, the more money I make. Or how does it maybe just simplify a little bit how these options work? Yeah. So they work exactly like normal options. So you have a strike.
01:50:08.964 - 01:50:39.328, Speaker A: And like the question you asked earlier, if the price of ETH is 200 and you buy an option with strike 150, if the price goes down to 100, you will be able to take 50 out of the contract. Okay. The innovation here is that normally with options, the premium that you pay for the insurance is calculated on expected volatility. Because we're in the present and I'm insuring into the future. I don't know what the future is going to be. So we have to kind of work out what Volatility is going to be. We do it differently.
01:50:39.328 - 01:51:06.584, Speaker A: We basically take a deposit from the user. We wait for volatility to take place. And when you do have liquidation, at that point, we measure what the volatility was and we work out what was the fair pricing that someone should have paid had he known what volatility was going to be. But because we do it at Expiration, we actually know what volatility is. And then we call it perfectly price. That put option. Understood.
01:51:06.584 - 01:51:34.772, Speaker A: Very Interesting. Very Cool. Thank you. Well, I just want to chime in here. I thought the presentation was great, and I really like your interface. I'm still trying to follow along as to just finding out what a put is to begin with. You want me to try and explain super simply? Yeah.
01:51:34.772 - 01:52:03.612, Speaker A: If you've got an eli five even less so than less so, that'd be great. Of Course. So it's just totally regular insurance. So say that you have Bitcoin or Maker or Link and you're concerned that prices are going to drop. You can buy a potion insurance, for example. You could buy potion on Bitcoin 8000 and then basically you start making money when Bitcoin goes below 8000. It's that simple.
01:52:03.612 - 01:52:36.200, Speaker A: And you can think of it as an insurance policy. The cool thing is that this insurance policy is fully loaded on chain. So if I'm giving you insurance on bitcoin going below 8000, I'm going to be locking 8000 on chain. So you're guaranteed that you'll be able to cash back that policy if price goes down. And the other cool thing is that you can do this on any asset and you can fully customize the option on what limit you want to choose. So that's why we call it like an AMM. Because this is a contract that you can always go to and it will always sell you an option.
01:52:36.200 - 01:53:19.344, Speaker A: You can choose any parameters and it will produce an option for you. How does it work on the liquidity provider side? Yeah. What am I risk? What risk am I taking as a liquidity provider? So as a liquidity provider, basically you're taking a position on the market. Like if the market goes down, then you're likely to experience losses. If the market continues to go up, you're basically collecting yield because you're collecting the insurance premiums that people are putting through. So liquidity providers are playing like a yield game on the expectation that prices are going to go up. But that's it, right? Because it's sort of pooled.
01:53:19.344 - 01:53:56.340, Speaker A: So I don't know exactly when I'm going to get stopped, when I pay or not. It's just roughly if prices go down, I lose, if prices go up, I win. That's right. And because we're able to write options across multiple assets and across multiple limits and so on, you're basically diversifying your risk. So we think that the experience as a liquidity provider is probably less risky than if you're just exposed to one asset. Interesting. So it's similar the pooled liquidity provider model, similar to Hedging, which had some challenges.
01:53:56.340 - 01:54:42.488, Speaker A: Okay. Yes, that's right. In fact, originally we wanted to buy to build a perpetual hedger. We wanted to use Hedging options or Open options to create a perpetual insurance product. The problem we found is that these solutions don't scale very well for liquidity providers in particular, like Open, for example, there are not that many markets, right? Like there are put options at 200 or 180 and if you need something else, you're kind of stuck. So that's why we wanted to build a general purpose option writer that was efficient for the liquidity providers but also predictable for the users. Great.
01:54:42.488 - 01:55:32.568, Speaker A: Well, this concludes our demos for Hack Money. I want to just make sure that I correctfully highlight that over the past seven days, we ended up demoing 118 projects from this hackathon. And with this thing, I want to congratulate you guys to the last demo. I think this is a really cool project in general and so far we've seen so many amazing things. So I want to just make sure that we get to thank every team that took the time to work on their projects for the past four weeks. Everybody from this 45 different countries, 18 different time zones, and just generally being available to work with this on the schedule. Whether these are our judges or our hackers or mentors, all of you made this possible.
01:55:32.568 - 01:56:20.068, Speaker A: And I also want to give a special shout out to the ETH Global team that also put the same amount of time in to make sure this event goes up to our goals and standards. And I think we can safely say that this was a mission accomplished. So with that, we're wrapping up the judging for Hack Money entirely today and be sure to tune into our finale, which is this coming Tuesday from two to 04:00 p.m.. Eastern. We'll be demoing our top projects and we'll be following up with all the teams in the next 12 hours with respect to who the finalists are. So we'll be sending a discord message and an email, and we'll kind of continue that. And we'll have the next two days to prep and making sure that everything else goes smoothly for the finale.
01:56:20.068 - 01:56:31.380, Speaker A: So thanks again to our judges. Thanks again to every hacker who participated. And with that, we'll see you for our next event, and I hope you have a great rest of the evening.
