00:00:12.010 - 00:00:12.654, Speaker A: Hi guys.
00:00:12.772 - 00:01:05.834, Speaker B: Hello, I'm Shubham from Web Three Auth and we build key management solutions as a service. So yeah, let's get started. So the motivation for us to build this is the number of web3 users active. Number of web3 users we have signed up in past couple of years have been rising exponentially. We have hit more than 100 million users or keys active at some point in time. So the current de facto solutions don't fit the use cases which still requires us to scale from 100 million to a billion users or more than that. The key management part is hard the key management because currently the wallets that are de facto which are let's say Chrome extension wallets, use a seed phrase flow and it requires users to backup the seed phrase.
00:01:05.834 - 00:01:42.730, Speaker B: It requires users to be aware that if you lose the seed phrase you're going to lose the access to your keys. There's no forget password button. The sign up flow results in like a bad UX experience because it takes more than ten minutes to sign up a user on the wallet. Another responsibility is to keep the seed trace secure. And more than 3 million bitcoins have been lost just because of private key management. So that's the part we want to optimize. So how do we onboard the next billion users? So we have a three point tragedy.
00:01:42.730 - 00:01:53.410, Speaker B: A simple secure and noncustodial wallet. The key management system that we have is simple because we leverage the Web 2.0 login solutions like Google, Facebook.
00:01:57.030 - 00:01:57.346, Speaker A: You.
00:01:57.368 - 00:02:27.930, Speaker B: Can have your own JWT login, you can have your own watch server linked to the login solutions. It's still secure because we still have flows like multi factor authentication that you can add. The SDK is customizable and at the same point the entire system is non custodial. Meaning at any point in time user is in full control of his keys. So how do we do this? So we use something called as shamir secret sharing. What it allows us to do is split the private key into multiple.
00:02:30.510 - 00:02:31.260, Speaker A: Sorry.
00:02:32.750 - 00:03:04.178, Speaker B: It allows us to split the private key into multiple parts. So we take the private key, we let's just split into three parts. We assign one of the parts to the Google login, we assign one of the parts to a device and you can pick the third one to back it up. Or it can be a password share and it can also be a security question. So let's say you lose one of the shares, let's say you lose your device. So you can still log in from Google and get your input, your password and you are in. If you lose the access to Google account, you still have your device and the setup is really scalable.
00:03:04.178 - 00:03:13.740, Speaker B: You can go from two out of three to two out of N. You can have your laptop as a phone as redundant shares. So even if you lose one of the devices, you still have access to the other ones.
00:03:18.580 - 00:03:18.944, Speaker A: Yeah.
00:03:18.982 - 00:04:00.840, Speaker B: So the experience looks like this, as you can see. So the first options are like social logins and you have your email password, you click input your email, then you can go to your email address and just click on the link and then yeah, you're logged in. So DAP gets access to the key that easily. So what makes us unique? So even with this setup of using custodial like Google login or email password login, it's still noncustodial because there are multiple shares. So no one can get access to the keys unless you want them to. We still get to leverage the Web 2.0 login flows, which a lot of more than billion users are already comfortable with.
00:04:00.840 - 00:04:38.776, Speaker B: People are used to email passwords, people are used to logging in with their OAuth accounts. And the best part is, even if you have your own OAuth setup, you can plug that in into the SDK and it'll just work. So here are some stats. So, we've been building this for past three years, and we have more than 3000 DApps which are using us at this point. More than 7000 developers have registered their interest on our dashboard. We have about 9 million keys on our network. And here are the few DApps which are using us.
00:04:38.776 - 00:05:15.990, Speaker B: So Finance uses us in their Chrome extension. Kepler uses us in the wallet. Hundred thieves recently did their integration for the NFT AirDrop. We have a wallet on Solana, we have a Unity SDK for games and the list goes on and on. The SDK essentially works on Web, it works on iOS devices, Android devices. We have SDKs for react native as well. And to add some more stats, binance reported that the user conversion rate on their extension was increased by 74%.
00:05:15.990 - 00:05:47.184, Speaker B: Cash IO is one of the applications on Terra Blockchain. They have about half a million monthly active users, and we get like three support tickets a month. 100 Thieves did their NFD launch with us two months ago, and we were able to onboard more than 300,000 users in just a matter of seconds, so matter of minutes. So the system really does scale with the number of users as well. And yeah, that's the end of it. So how can I help?
00:05:47.302 - 00:05:48.530, Speaker A: Any questions, guys?
00:05:52.120 - 00:05:54.180, Speaker C: Can you talk about the bounties?
00:05:55.320 - 00:05:56.070, Speaker A: Right.
00:05:59.740 - 00:06:02.650, Speaker B: I'm not aware of the exact numbers, actually.
00:06:10.020 - 00:06:13.190, Speaker D: So the first place is $4,000.
00:06:13.720 - 00:06:14.470, Speaker B: Yeah.
00:06:15.400 - 00:06:27.110, Speaker D: Second is $2,000, 3rd is $1,000. Then there's a UX price. Two UX prices for $500 each and a business case for $500.
00:06:28.220 - 00:06:29.528, Speaker B: Do you have a slide that I.
00:06:29.534 - 00:06:30.090, Speaker A: Can.
00:06:33.180 - 00:06:43.230, Speaker B: Okay, it's fine. We are always available nearby. We'll post it in the group as well. Any other technical questions or something I can explain a bit more?
00:06:46.290 - 00:06:47.200, Speaker A: Yeah, hi.
00:06:51.990 - 00:06:52.738, Speaker B: Which one?
00:06:52.824 - 00:06:54.050, Speaker C: To which extent?
00:06:57.190 - 00:07:34.286, Speaker B: Got it. So let's take the first part. Right, so the SSO login, so even the share or the private key which is associated with your login is split into nine nodes again. So we have a network of nine nodes. The nodes are run by big companies in the industry. Binance runs one of our node polygon ENS ontology they all run one of our nodes. And in this set of nine nodes, let's say log in from Google and after that the share sort of shares get redirected to the browser and we reconstruct the key in the browser itself.
00:07:34.286 - 00:07:40.240, Speaker B: So at any point in time there is no server involved and as soon as you close the browser the key is gone.
00:07:42.450 - 00:07:42.814, Speaker A: Yeah.
00:07:42.852 - 00:08:16.620, Speaker B: So that's become the second part. The first part is your browser is so let's say you go to your browser, there's a local storage available, session storage available, we keep one of your shares in there. So at any point in time, any one of the shares does not have the same context as the other one. So it's only user action which can help to sort of get the final private key. Because a login provider would not have access to the first 1, second one would not have access to the first one.
00:08:17.630 - 00:08:24.000, Speaker C: As you said, Binance is running a node and a few other companies. And what's the plan?
00:08:29.010 - 00:08:59.420, Speaker B: Yeah, so we have plans of launching auth network. So currently the system is permissioned. We want to launch an Auth network within which anyone can join and become a node operator. And applications can choose if they want to keep keys on which nodes depending upon the few certain parameters. And it will be like a fully MPC wallet. Currently the key has to be constructed to make signatures, but we have plans to further that.
00:09:03.320 - 00:09:13.504, Speaker C: There are many companies which are doing identity. So many companies like retention for instance, and a few other ones.
00:09:13.562 - 00:09:15.930, Speaker D: Do you think there will be only one?
00:09:19.500 - 00:09:38.412, Speaker B: Okay, so we provide the key management part. Even with the DIDs, I'm not very aware on the specs, but you still need like a key or you still need some sort of key management set up to sign transactions, sign messages for that matter. You still have to prove user identity.
00:09:38.476 - 00:09:39.090, Speaker A: Right.
00:09:41.780 - 00:09:47.280, Speaker B: So it can be used in complementary in my understanding.
00:09:53.090 - 00:09:53.840, Speaker A: Yeah.
00:09:59.230 - 00:10:13.110, Speaker B: Anyone else? Okay, thanks guys. We'll be around at any time. We're going to be online on our discord as well, so just ping us. Thanks, bye.
