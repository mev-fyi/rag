00:03:46.350 - 00:04:21.378, Speaker A: Good morning, good afternoon and good evening everybody. My name is Kartik, one of the co founders of ETH global. I want to welcome all of you to the unicode finale. You're all watching this on ETHGlobal TV and for those of you who are watching this for the first time, I really encourage all of you to log in and say hi and customize your avatar are. And if you have any questions or anything about events, you can ask them on the chat and we'll be to relay those questions and answer them directly. So this event is organized by ETH global. And for those of you who don't know, ETH global is an organization with a very simple mission.
00:04:21.378 - 00:05:04.486, Speaker A: Our goal is to bring on thousands of developers into the web3 ecosystem and we do this thing by running hackathons and summits. And this brings us to unicode. Unicode is a very special event for us. For this event, we had over 340 people from 40 different countries spending 17 different time zones working on really interesting projects on top of the uniswap ecosystem. And on top of that, we had such an amazing representation from so many different parts of the world. This is just a map of where everybody was coming from. You can see the immense diversity in number of cities being represented, and we're super excited to share that and tell you about all that happened over the last two weeks for Unicode.
00:05:04.486 - 00:06:10.910, Speaker A: In addition to the hackers, we also had 20 ecosystem mentors and six technical mentors and seven ecosystem partners that were here all along, helping all of these hackers with their projects. And all in all, this event has been absolutely incredible. We can't wait to share what came out of it in the next few minutes. And after submissions finished, we had over 61, we had exactly 61 projects come out and we're going to be looking at ten of our finalists on this live stream. So with that said, I want to get into these ten teams, want to congratulate in no particular order, syndromes, unistrategy, Uniram, skyfire, dow, superfluidity, airlift, finance, uniswap, API, explorer, crosscash, hero, swap and Caravan. For being our ten finalists, we'll be bringing them on one by one today and they'll be demoing live what they built over the course of the last ten days for this hackathon. And from there we'll go into the prizes which I'm sure all of you are waiting for as hackers.
00:06:10.910 - 00:07:17.874, Speaker A: And as we were looking at these ten teams, we noticed some really great and kind of common themes. A lot of them are tackling education about this ecosystem, especially with what's happening in DFI and the pace it moves and changes. We have projects that are tackling liquidity management and just strategizing for how you can take advantage of a lot of these protocols. And on top of that, we have some really fun and useful utilities and tools that help you manage anything from liquidity to integrations to just understanding and making your developer life easier. So we'll be going into that, and you'll see all these ten projects highlight good and bad of each of these categories. And before I bring on the very first team, I want to quickly take a second and thank all these amazing 51 projects for participating at the hackathon and really taking the time to learn and explore and experiment with what is possible in this ecosystem. Just because you were not one of these ten teams does not mean you were not good enough, or something was not great about what you did.
00:07:17.874 - 00:08:04.846, Speaker A: The goal is for us to highlight some really cool things that everybody's excited about. And for all of you, I really encourage all of you to work and continue building what you were aiming to do for this hackathon. Given that this was a ten day event, I'm sure there are so many things that you couldn't implement and would like to implement. So if you need any help after this ends, and if you need any support, whether it's on the technical side or understanding or talking to people that you would like to get some feedback from, please ping us on the Gold Discord or on the email, and we'll be happy to help each of you. So with that, let's jump right into our first of ten demos. We're going to bring on three different teams at the same time here. We're going to start off with uniswap API.
00:08:04.846 - 00:08:16.780, Speaker A: Explorer Then we're going to bring on Sandromes and then Skyfire Dow. So without further ado, let's welcome our very first demo finalist for the day, and Evan will talk about what he built. Welcome.
00:08:25.710 - 00:08:48.910, Speaker B: Hi, everyone. Thanks so much for the opportunity to present today. So. My name is Evan Jacobs. I'm a software developer based in Seattle, Washington, and I'm one of the folks that Kartik talked about. I'm brand new to web3. This is actually my very first project building with Web Three or Crypto or DFI.
00:08:48.910 - 00:09:21.386, Speaker B: I don't have a background in any of those or even in traditional finance. So this was very much of a big learning experience for me, but it was really great. But one of the first things I noticed when I started to get into this, using the Uniswap app, for example, was that it's a great app. It almost seems too easy. It feels like magic. And I kind of wanted to understand a little bit more what was going on under the covers behind the scenes. And so I built this app called Uniswap API explorer.
00:09:21.386 - 00:10:06.362, Speaker B: It's just a JavaScript app. It's built on top of the polywrap API and also uses Skynet as deployed as a Skynet home screen application. And so you can see it here. Uniswap primer on my home. Yeah, let's just jump right into it. So, again, my goal here was to help myself learn about Uniswap document what I discovered along the way and maybe build an app that could be helpful to other people like myself who are new to this world. So just going to run through some basic concepts and explore them by making API calls and seeing what we get back.
00:10:06.362 - 00:10:42.114, Speaker B: So obviously the first element we want to look at is this idea of a token. Tokens are kind of the basic element. So with this there's a list of tokens. You can representative list of tokens that you can look at. So if we look at something like Ave, we're going to make a couple of API requests and get back some token data and this total supply. So we're calling a couple of different APIs. One of the things that was interesting to me, I didn't really realize this until I started looking deeper.
00:10:42.114 - 00:11:20.430, Speaker B: And what's noted here in this observe section is that some tokens have this nice round number for the amount of total supply, but others don't. If you look at Ether, for example, it's kind of this ever changing number. So I thought that was an interesting observation. So once we understand a little bit about tokens, I think the next thing to look at, of course, is pairs. So these are just a combination of two tokens. So let's look at, again, maybe something like Ether and uniswap. So we fetch against the same data about those tokens.
00:11:20.430 - 00:12:09.918, Speaker B: But now we have this new concept called a pair. And again, the observation here is that and which is highlighted over here, is that these numbers now represent the number of tokens that are in this liquidity pool for the pair. And in some cases there's a lot of liquidity, in some cases there's not. For example, I think if you do something like some of these lesser known tokens, maybe like Uniswap to Chili's, for example, there isn't actually a pair that gets returned for this. And I think that's a result of the fact that there isn't a liquidity pool for that pair. So again, that's just an interesting observation. So once we have a pair now we can start to again kind of layer on some additional complexity.
00:12:09.918 - 00:12:45.626, Speaker B: We want to talk about this concept of a route. And so we can create a route for the pair above. And now the observation here is that now this unordered pair that we had has been transformed to a path. So it's an ordered list now going from Ether to uniswap in this case. And then if we look down further below, we see there's an input token and output token. Okay, this is starting to look like a transaction that we're going to conduct. And then finally, or at least as far as I got during the hackathon, was this concept of a trade.
00:12:45.626 - 00:13:26.774, Speaker B: So this even moves it even closer to the idea of actually generating a swap. And so we can create a trade based on the route above and the observation here. Now is. So I've hard coded 1000 of the input token, but assuming that we put in 1000 of the input token, we can see down here in this output amount. So for 1000 of the input token ether, we can expect to receive about 170,000 of the output token of uniswap. So that's as far as I got during the hackathon. I think for next steps, what I'd love to do is just keep going deeper.
00:13:26.774 - 00:14:34.494, Speaker B: There's obviously a lot to continue to investigate and explore here. I think what's really interesting, like I noted above, about pairs, even some of the error cases where, hey, there's not a pair yet for these two tokens, maybe that could be a jumping off point for learning about liquidity pools, for example. And so we can start to go down that direction. Like I mentioned, this is built on polywrap, on the polywrap uniswap V Two. And I know, I believe the team, the polywrap team is working on V Three, so I would love to port this over to that when that's available, maybe even describe some of the differences between V Two and V Three. So I think there's a lot of room to keep going here. And yeah, I just wanted to wrap up by saying thanks to the organizers of the hackathon, I thought it was really well organized, great communication throughout the ten days, and then also thanks to the sponsors, I thought the information sessions were awesome.
00:14:34.494 - 00:14:46.440, Speaker B: I learned a ton and then whenever I got stuck or had a question, I could just drop a note into discord and someone was always there to help me out. So, yeah, thanks very much. Thanks for the opportunity to present today.
00:14:47.130 - 00:14:47.926, Speaker C: Thank you so much.
00:14:47.948 - 00:14:55.846, Speaker A: Evan. This was an awesome demo and hope you continue building this for all future releases and possible APIs. So thanks again.
00:14:55.948 - 00:14:57.170, Speaker B: Thanks, Kartik.
00:14:57.330 - 00:15:02.780, Speaker A: Next up, we have sandrums. So whenever you're ready, let's get right into the.
00:15:10.100 - 00:16:04.164, Speaker C: Hello. Hello everyone. Let me share my screen and get started. So hello everyone and welcome to Sandoni's Team project. Together, me and Simone are going to present a novel idea regarding on chain uniswap V Three Oracles. But what is the problem? Until now, protocols that needed to reliably get on chain price data had to rely on off chain solutions like the official Uniswap P three lens quarter or to use to store prices in their own smart contracts, which means to pay high gas fees. We iterated on the existing design of the Uniswap overacle library to create a quarter that fits into solidity view function.
00:16:04.164 - 00:16:40.912, Speaker C: So that's easy to call and doesn't cost any gas. And it gives quite a reliable instant price. So this is how we do it. The solution. First, we check how much is the swap and if the price impact the price impact related to it. If the price impact is greater than the nearest tick, we skip to it and we perform another simulated swap, we rinse and repeat the process until all liquidity has been swapped and that is how we get the final price. Possible applications? Well, of course.
00:16:40.912 - 00:17:19.548, Speaker C: Now, protocols can access the quarter using a view function. It means that anybody can integrate the quarter on chain in your own contract without using uniswap official front end, without paying other external providers, et cetera. Or to reinvent the wheel with exotic designs that may be subject to attacks. So now let's go to the demo. You can follow the link. Just remember to switch on coban we will be using mainnet fork for easier pricing. Okay, so let's get started.
00:17:19.548 - 00:18:09.020, Speaker C: I have uniswap interface and our quarter interface. We'll start with a simple swap, swapping wrapped ether versus link. And I will use just one as the token. Okay, we just implemented a few. Just remember, one of the things is Uniswap is routed. So I will use just one route. And as always, the nice thing of live streaming.
00:18:09.020 - 00:18:18.990, Speaker C: Yeah. Okay. You can see a small difference in this price because of the main net fork. It's quite old, but the on chain, the lens quarter is giving the exact same price.
00:18:20.400 - 00:18:21.164, Speaker A: It's routed.
00:18:21.212 - 00:18:27.280, Speaker C: This is routed, right? Yes. Try one not routed. Okay.
00:18:27.350 - 00:18:27.984, Speaker B: Like this one.
00:18:28.022 - 00:18:41.970, Speaker C: Let's try a bigger swap with 1000 wrapped eater and 0.3%, quote 1000, not one. Yeah, 1000. 1000.
00:18:42.700 - 00:18:44.904, Speaker A: But you have one there.
00:18:45.022 - 00:18:46.648, Speaker C: Oh, yeah, that's right. Sorry.
00:18:46.734 - 00:18:47.370, Speaker A: Okay.
00:18:48.220 - 00:19:50.790, Speaker C: Yeah, the coder was quite incorrect. The good of live yeah, as always it yeah, obviously it's running in the but it's running an integration, so it takes some time, but it always gives a good result as long as the pool exists if it's not. Okay. So pretty consistent. You can see 123583. Finally, just to conclude, we are going to test buy, which is the if you know the difference, it's exact output, single uniswap coder and that's die versus uni to try another pair of tokens. So I will try one die, one unit sorry.
00:19:50.790 - 00:20:21.820, Speaker C: And see how many dies I get for swapping one unit. So 0.3 and I get what I ask for, one destination token. Okay, it's 26 80. Okay, it's 80. 68. So perfect.
00:20:21.820 - 00:21:09.100, Speaker C: We believe. Just to conclude and wrap up, such a tool is really needed for the widespread of uniswap P three in existing protocols like liquidity aggregators. And for the future, we foresee to turn a discorder, which now is a bit clunky but gives good results, into a fully fledged time weighted solution so that it's reliable even when you need to withstand flash loans and mine extractable values and other price manipulation attacks. I want to thank the organizers and the sponsors for their support throughout the Akaton and for all viewers, even if you want to drop a feedback, just put on the chart of Ath Global. Thanks everybody and see you.
00:21:10.510 - 00:21:17.258, Speaker A: Thank you so much. That was an awesome demo. And of course, live demos can be tricky but this all worked out really well.
00:21:17.344 - 00:21:18.026, Speaker C: Exactly.
00:21:18.208 - 00:21:29.280, Speaker A: Congrats. And next up, we have Team Skyfire demo. So I'll let everybody turn on their cameras and kick off with your demo.
00:22:02.050 - 00:22:59.310, Speaker C: Hello, everyone. I'm be Wolf, and I'm talking to you guys directly from Inezgeris, Brazil. We are Skyfire Dao team, and our project is a way of gamify liquidity mining events. So Liquidity Mining is the event by which projects AirDrop tokens in exchange for users providing liquidity for their token pairs. We hope to make this process more fun and more intuitive by gamifying it. By using Uniswap Merkle Distributor, we make a fair game using the hash saved in a Merko tree. We integrate the uniswap staking contracts.
00:22:59.310 - 00:23:51.982, Speaker C: We provide a variety of integration options. Additional challenges via Skyfire Dow tokens Customization on this project is a possibility. We support adding more custom game features for payment in Skyfire Dao Tokens. So how does it work? Users can play the game to get a score in the letterboard every epoch, the Oracle converts leaderboard scores into token distribution claims via Uniswap Merko Distributor contract. The claims are verifiable per epoch using a single contract. So partners can integrate uniswap staking contract and Skyfire dao distributor. Additionally, conditions such as Pay LP Tokens to play can be enabled.
00:23:51.982 - 00:24:51.090, Speaker C: So, for example, let's say that Bob has a Dao and he wants to get more people to participate in his community. So he runs liquidity mining event using uniswap stake contracts. In order to increase participation, he buys Skyfire Dao Tokens and integrates the game as an option for his users by connecting the stake contract to the Miracle distributor. So let me show you guys how the actual game for the project is. So you play as an Olympian hero, and the gameplay is a little bit similar to Angry Birds. You pull the character and you drop it. After you've beat all the little minions, the boss appears and you can get your score by collecting coins and making combos.
00:24:51.090 - 00:25:36.500, Speaker C: After you finish the boss, you will be taken to this screen where you see your score and you will be able to claim the rewards here to your account. So for the next steps, we hope to make this game live by January the next year. We're looking for partners and users to use it, and you can try it by yourself on the link that I will be dropping on the chat and on the discord. So if you guys want a game for your liquidity event, just contact us. Thank you.
00:25:39.350 - 00:25:47.686, Speaker A: Thank you so much for that awesome demo. This is a really cool way to think about community engagement. So I'm really glad that you were able to present this live.
00:25:47.868 - 00:25:49.734, Speaker C: Thank you. Thank you.
00:25:49.932 - 00:26:07.370, Speaker A: All right, so with that, we are ready for our next three teams. So I'm going to invite Uni Strategy, crosscash and Uniramp here on stage. And without further ado, let's get into the demo for Uni Strategy. Whenever you're ready, Sylvia.
00:26:07.810 - 00:26:50.170, Speaker C: Yes, I'm ready. Hi everyone. Share screen. All right. So our project is called Uni strategy. And this is the team Aizen, Me and okay, so our idea is to build a simple strategy to manage Unimitry position on optimism. And in this first implementation, we just placed a base order centered around the price using a rebalance function that DOPS to keep us at 50 50.
00:26:50.170 - 00:27:38.440, Speaker C: So with respect to current available solutions like bison charm, we implemented the swaps inside the strategy. Regarding the architecture, straightforward user can deposit and withdraw shares from the vault. The other important smart contract is the strategy smart contract that sets the base order length and the swap parameters. Then there is a keeper that can trigger the strategy and the balance. The vault communicates with uniswap and do all the swaps and minting and boarding necessary to provide the strategy. Let's look at the product. So this is the front end to which can be possible to interact with the vault.
00:27:38.440 - 00:29:26.720, Speaker C: So let's try to deposit, meet and die faster. Of course I can deposit unequal amount of WD and I as the process of rebalance will take care of keeping the values 50 50 in order to have a rebalance strategy. Wait, so once the deposit happens, then the vault would mint shares now and then the user can see the balance in the same. All right, worked balance is updated, can withdraw as well. So this would according to the put the amounts in the vault to swaps and give the user back its initial tokens. So the other part we built is a rebalance function. So the one that is activated by an external account and takes care of computing the amounts to swap in order to keep the strategy 50 50.
00:29:26.720 - 00:30:13.130, Speaker C: We think to build this product on layer twos in order to be able to provide higher frequency strategies. So here you see that the balance worked. We have zero eats and zero die left in the vault. And this means that all liquidity has been employed in a 50 50 proportion in the units of base order. We conducted some back test of the strategy. You can see here which was summer period. These are all the rebalances which happens much more frequently than other currency 16 solutions.
00:30:13.130 - 00:30:58.890, Speaker C: This is also because gas fees on layer two allows to do so. We are able to keep 50 50 composition as well. And also like regarding performance, we are very close to holding. So for being our first try, we are rather happy. Regarding next steps, we want to refine the strategy and then do more testing. Again, as I said, we want to be focused on layer twos as these expand a lot the scope and the reach that these such strategies can have and we are ready live on optimist testnet. If you want to try, then I provide a link and of course then we would add more pairs and rebalance options.
00:30:58.890 - 00:31:24.260, Speaker C: For instance, user could maybe choose other proportion than 50 50 according to impairment loss preferences. If you're interested you can contact us aggregate. As I said, there is a demo live so give it a try and that's it. Thanks for organizing Zakaton. It was very helpful to meet these people and we will learn a lot.
00:31:25.910 - 00:31:41.846, Speaker A: Amazing. Thank you so much for that awesome demo and yeah, it's really great to see DFI on L2 becoming more of a priority for everybody. So this is awesome. And with that we are ready for our next demo and we're going to invite Team Crosscache and Nike is going to talk about what they built.
00:31:42.028 - 00:31:42.470, Speaker C: Welcome.
00:31:42.540 - 00:31:48.330, Speaker D: Thanks Karthik. We're going to have Mark handle the presentation.
00:31:49.710 - 00:31:50.170, Speaker C: Okay?
00:31:50.240 - 00:32:34.938, Speaker D: So one thing we were thinking about as we were thinking about how to build this hackathon is that there were a lot of great L2 chains out there that could make some great DApps possible but they're not used. The problem is that it's expensive to transfer money to those chains. And also why would you move money to a chain with no DApps? And why would you write DApps for a chain with no users? It's a catch 22. What if you could put money in one place and spend it anywhere? Call any contract from any blockchain? Well, that's us. We are crosscash. We're a cross network bridge for instant liquidity. Well so the next thing we're going to show you is a UI demo.
00:32:34.938 - 00:33:28.234, Speaker D: We forked MetaMask to show you what it looks like for the user experience. First you go to your favorite DApp mine's Uniswap. And I'm not just saying that because it's the hackathon. You make the swap and then when you go to your MetaMask window you will see two options. One to trade Ethereum on Mainet and one to trade Ethereum on optimism. Now you can notice that with the transaction fees the transaction differences is way, way lower on optimism. And if you go into the transaction cost, even though there are more things, if you go to the L One mainnet costs, it's just gas fees on moving you trade to L two, you have to do the transaction cost of doing the swapping and then there's a lending fee which we'll talk about later.
00:33:28.234 - 00:33:54.494, Speaker D: This is the magic of how this works. So pretend you hit confirm. Here's what happens on the back end. Before you have money on Mainet and a lender has money on optimism. As soon as you hit submit one you create a bond and you deposit money into it. This bond only opens under conditions that you set here. It's when a swap is made.
00:33:54.494 - 00:34:25.670, Speaker D: Two, the lender does the swap and deposits it into account of your choosing. This earns them a claim key. This key is an NFT and it can be bought and sold however the lender wants it to be. Now, in between two and three, the claim key will move to mainnet. This takes a week for optimism. And then finally three. Whenever a bond and a claim key are on the same blockchain, the bond can be settled and money inside can be withdrawn.
00:34:25.670 - 00:34:44.174, Speaker D: But now you may notice that your money is right now stuck in L2. To get your money back into L One, you can do the whole thing all over again with another lender who has liquidity in L One. So one, you create the bond. Two, the lender sends you money on L One.
00:34:44.372 - 00:34:45.022, Speaker C: Three.
00:34:45.156 - 00:35:19.660, Speaker D: Between two and three, the claim key moves to optimism. And three, finally, the lender can take money out of the bond inside of optimism. But the beauty of this system is that you don't actually have to do that unless you want to call a contract. In L One, this whole thing isn't invisible to the user. Wherever your money is, doesn't matter, because with a system of borrowers and with the system of lenders everywhere, you just call contracts. You don't have to think about how it works. And it's even cooler than that.
00:35:19.660 - 00:36:02.470, Speaker D: In order to implement this, we use zero knowledge proofs so that all amounts are confidential. In addition to the UI demo, we have written contracts in our repo. We've done this with and without ZK proofs. The way a ZK blockchain works is pretty simple. The same way you would submit transactions to a blockchain to change its state, you submit proofs to a ZK blockchain to change its state. Here on the left, you see the direct version doing a direct transfer. And on the right, you can see the ZK version, where you would first generate a proof and then submit it to the ZK blockchain to be verified.
00:36:02.470 - 00:36:33.726, Speaker D: Now, full disclosure, this is done on Aztec 1.0. Aztec 2.0 is out, but the code on the right would actually cost you about 2 million gas. So you're really not saving any money here. But in Aztec Two, you can roll up your transactions into a single transaction. This amortizes the cost of gas per transaction on main net down to about 2000 gas per transaction. This is now direct transactions cost about 40,000 gas.
00:36:33.726 - 00:37:07.710, Speaker D: And that's basically how we can get our cost savings spending money on l One. Okay, and that's us. My name is Kwakon. I worked in the back end on the contracts. Mark controlling the presentation, worked on the UI demo. And there's one last thing on the next slide. The next thing I think that we want to do with this is that, well, this system, if you can recall the system of bonds and claims, there's nothing really about payments and transactions.
00:37:07.710 - 00:37:36.840, Speaker D: Anything that you can verify by software, you can use to unlock the bond. Which means you can buy things that don't even exist yet. Imagine if you've ever hired a plumber or a software engineer and you thought, man, am I going to get what I paid for? Well, on the blockchain, you can you can guarantee that you'll get what you paid for. I think that's really powerful, and I hope you're excited about it, as I am. Thank you.
00:37:39.770 - 00:37:48.810, Speaker A: Thank you so much for that awesome demo and what a great way to stitch together potential new technologies and what's out there right now. So this was really great. Congrats.
00:37:49.230 - 00:37:50.266, Speaker D: Thank you.
00:37:50.448 - 00:38:00.400, Speaker A: Right, and next up, which is our last project for this category, it's Chris from Uniram. So, Chris, whenever you're ready, feel free to demo what you built.
00:38:06.690 - 00:38:16.640, Speaker E: All right, give me 1 second here. All right, can everyone see what I see? My screen?
00:38:19.090 - 00:38:19.838, Speaker A: Yeah.
00:38:20.004 - 00:39:13.998, Speaker E: Okay, so some of you might be familiar with the Uniswap dashboard. And I think for folks new to the Uniswap community, you might not necessarily know what pools are, what trading pairs are, and what liquidity even means or what sort of implication there is. So I put together an app called Uniramp, which onboards users into the Uniswap ecosystem in a more gentle manner, leveraging folks that might already be familiar with Ethereum or using Web three MetaMask. So the core functionality is to log in with your existing MetaMask account. You can find, share, and create liquidity pools on the Uniswap platform. And then lastly, learn and earn rewards in the Uniram project for completing tutorials or contributing to a liquidity pool and understanding risk. So let's show how this works.
00:39:13.998 - 00:40:11.822, Speaker E: So, first of all, you connect with your MetaMask enabled wallet or any sort of Ethereum enabled wallet, and you're taken to the homepage where you can do a couple core actions, in particular around understanding what Uniswap is and how to find potentially the best pools to contribute to and potentially deploy your own pool. So the tabs on the top, I'll go through each of these, you can discover pools, and I'll talk about that in a minute. You can swap directly from this product. You can learn about core uniswap concepts and also understand risk. And in particular, this project ties in visor finance and some of the hypervisor concepts to show what happens when you act as a liquidity provider on those pools. And what sort of benefit or risk are you assuming when you do that. So, from the Learn tab, we already leverage a lot of the existing documentation, and Uniswap put together a lot of really great material.
00:40:11.822 - 00:41:03.890, Speaker E: But how do we get it down to a very condensed view on each core concept? So, we have the high level things here, like swap what's a pool. But we also have more advanced concepts like automated market maker, what's, a hypervisor and impermanent loss. So these are some more of the higher level concepts that this product onboards you into and then hopefully tries to get you more comfortable with, so you can actually act as a liquidity provider and earn rewards. The swap page is as simple as it sounds, so you can. Do it directly from this product. So if I wanted to swap between USD and we just go ahead and click Trade, and it plugs directly into the technology that Uniswap already created. I'm not trying to reinvent the wheel here or use existing functionality, but many people might not necessarily know about how to do that or how to initiate that.
00:41:03.890 - 00:41:06.238, Speaker E: Uniramp just ties directly into that existing.
00:41:06.334 - 00:41:07.720, Speaker C: Interface to do that.
00:41:08.490 - 00:42:12.390, Speaker E: Discovering pools is the core functionality of this product and for every sort of pair. And this is using the uniswap graph API. We pull down the latest transaction info about what the most popular pools are because anyone can create a pool, but which ones present certain fees? Which ones are getting the most volume? How can we present that in a different way or give them more insight directly off the Graph API? And these are all the whitelisted sort of pools that exist and be able to find which ones are the most popular, as well as dig into any sort of hypervisors that might be related to those pairs of pools. So in this case, I clicked a random one and it just so happened to have a hypervisor associated with it. Right now, this is just a rendering of what's coming back from Visor Finance, but you could click into that hypervisor, see what that contract potentially offers, or extend and build your own hypervisors based on these particular pre existing pools. Lastly, understanding risk. So I actually didn't know what impermanent loss meant when I started this project.
00:42:12.390 - 00:43:07.030, Speaker E: And it's a very important concept when you act as liquidity provider because the position you're actually taking, the underlying assets, whether it's ether or die or any sort of ERC 20 token fluctuates in value. And I have an example here where, let's say, wrapped ether changed 100% while you're acting as a liquidity provider, which is not unheard of in this environment. What sort of loss would you be taking or impermanent loss would you be taking on that position over a given time frame if you actually acted as a clutter provider? And that's actually very well defined, and there's a formula on the web that corresponds to that. But this is a visualization of where you possibly lie on that curve based on the projected change for a given currency if you're involved in a pool. Lastly, all the code is on my GitHub, so I encourage you to check it out. But that's pretty much the Uniramp project. And thanks for your time.
00:43:07.960 - 00:43:23.656, Speaker A: Thank you so much, Chris. That was a really awesome demo. And again, it's not just about cool. DeFi integrations education is such an important piece here because that's what really brings more people in. And this is a really amazing project that gives you the technical and non technical interview overview of what's possible.
00:43:23.838 - 00:43:24.890, Speaker C: This is great.
00:43:25.260 - 00:43:45.090, Speaker A: So thank you so much. And next up, we're going to bring on our remaining four projects for the demos. We're going to start off with Caravan, then airlift finance and Euroswap. And then our last demo of the day will be superfluidity. So, without further ado, let's welcome Andrew and Joel from Caravan. Whenever you're ready, feel free to get started.
00:43:48.740 - 00:43:49.490, Speaker C: Wow.
00:43:54.100 - 00:44:05.750, Speaker F: Hi, we're Caravan, a new market for liquidity positions. My name is Dwelling, I'm a fourth year studying computer science at UC Berkeley. I fell in love with Web Three over the summer and I'm super excited to be working in this space.
00:44:06.140 - 00:44:14.410, Speaker G: Hey guys, I'm Andrew. I'm a junior at UC Berkeley studying EECS, and I got into crypto in 2017 when I started mining ethereum in high school.
00:44:15.740 - 00:44:39.600, Speaker F: So we are basically a secondary market for liquidity positions. We originally started this project at Calhacks, where we implemented the Renting Mechanism. Basically, we allowed people to rent out liquidity positions and receive an upfront payment. Whoever is renting the position could then collect fees earned by the position for the duration of the rental. Since then, we've implemented buying, selling and options. So let's talk about buying and selling. This is pretty straightforward.
00:44:39.600 - 00:45:19.100, Speaker F: Someone who owns a position puts it up for sale on the market for a certain price, and the buyer can then buy it at that price. The main use case we see here is when a liquidity provider pulls out their liquidity, right, the position still exists, it still keeps track of the ticks. So if someone else wants to have a position within that tick range, they can simply go and buy it instead of minting a new one. This will allow users to save about 60% on gas fees when creating new positions. The second thing that we've implemented that we're very excited about is options. So for buyers, options allow you to fix your cost basis when buying into a token. And they allow sellers who are liquidity providers to lock in profits on their liquidity positions.
00:45:19.100 - 00:45:53.940, Speaker F: Let's talk about how they work. The owner of a position sells a covered call using a percentage of their liquidity position. They also pick a token in the pool which they want to long. The strike price of the option is set by the upper or lower tick of the position. Depending on how the pool is configured, the buyer can then exercise the option when it becomes in the money. Basically, when the exchange rate crosses the upper or lower tick boundary of the position to purchase the longed token at the strike price. So, for example, if you want to long ETH, you can buy an option with a strike price that's like 4000 die per ETH.
00:45:53.940 - 00:46:10.030, Speaker F: And when the option becomes in the money, for example, the exchange rate goes to something like 5000 die per ETH. You can earn that ETH. You can exchange 4000 die for the one ETH, so you would gain a 1000 die profit. Now, Andrew is going to go over the demo.
00:46:10.720 - 00:46:48.216, Speaker G: All right, so this is Caravan the first thing we're going to do in our demo is go to the Create tab and this is where you can create all the different kinds of listings. I want to create an option listing. I want to sell a call on ethereum. So going to my uniswap, I have some die eat positions. So this one is nine through three nine. So let's just put that in. Let's put in whatever price we want to sell it for the day, the amount of time that we want this option to until it expires, and the percentage of the ethereum within our liquidity position that I want to use to.
00:46:48.238 - 00:46:49.064, Speaker C: Sell the covered call.
00:46:49.102 - 00:47:32.888, Speaker G: In this case I want 100%. And finally, the long token address here I'm going to put the address of wrapped ethereum because this is the address of the token that the buyer of this call will be long. So the buyer of this call will be long wrapped ethereum and I will be selling a covered call on wrapped ethereum. And so I will confirm this transaction. And what this does is I'm approving the contract to take my liquidity position and put it into escrow so that I can do all the things related to exercising and show it on the listings page. Speaking of the listings page, here it is. So this is where you can see all of the liquidity that's available for rent and also available to be bought and as well as all of the options that are available.
00:47:32.888 - 00:48:12.390, Speaker G: So you can press Buy to buy, you can press details. And this opens up a new page where you can see more details and a nice graph of the daily volume of the pairing and the recent swaps and what prices they occurred at. Going back to the listings page, let's see if that option appears now. Yes, so here it is. This is the option that I just sold, nine through three nine. And so now if I switch accounts, I should be able to purchase this option. So let's refresh the page and then I'll be able to purchase this option and then it should appear in my NFTs tab after I purchase it.
00:48:12.390 - 00:49:04.804, Speaker G: So now, going to the last tab, which is my NFTs, this is where you can see all things related to liquidity positions. So this first section here is all of the liquidity positions that you own or that you've put up for sale or put up for rental and all the options that you own. And then down here is rented liquidity. This is any liquidity that you've rented and you have the option to harvest, which it just collects any fees that you've accrued during the duration of the rental. And if we refresh, the transaction is probably confirmed and we should be able to see our option nine through three nine. And here it is. Our we call that we just purchased with a strike price of however many billion die expiring on Thursday and you have the option to exercise it here as well.
00:49:04.804 - 00:49:09.536, Speaker G: And so that's all for the demo. Let's go back to Dwalin for the next steps.
00:49:09.728 - 00:49:58.032, Speaker F: So by the end of November 2021, we plan to launch our V One on the main net. We also plan to implement swapping of liquidity positions, renting of liquidity positions, and the auctioning of liquidity positions. In December 2021, we want to implement Options pricing model so liquidity providers know how best to price their premiums. We also want to explore using our percentage of liquidity positions as collateral for loans. And by February 2022, we want to implement an automated market making protocol for options so we can cover the bid, ask spread and provide liquidity to the liquidity market using this automated market making protocol. We want to implement caravan vaults later in 2022, which will allow users to deposit money into the automated market maker and earn returns. And that is all for our presentation.
00:49:58.032 - 00:49:59.690, Speaker F: Thank you so much for your time.
00:50:01.020 - 00:50:17.950, Speaker A: Thank you so much for that awesome demo and super exciting to hear that you want to continue building this into a real final robust protocol. Congrats. With that, we are ready for our next team and that is going to be Airlift Finance. And Mark, whenever you're ready, feel free to get started.
00:50:21.780 - 00:50:53.120, Speaker C: Thank you. My name is Mark Kerry. I'm from Toronto, Canada. I'm here to present airlift finance. Airlift Finance is leveraged exposure made easy. Basically it's vaults and strategies, although there's only one vault so far and more can be added in the future. But the goal of the current strategy is to provide leveraged exposure in an easy and risk mitigated manner.
00:50:53.120 - 00:51:34.092, Speaker C: The initial strategy is basically two times wheat, so it aims to provide double the exposure to ETH. And what happens is wheath is deposited in Aave, where it earns yield and rewards automatically. US dollar stablecoins are borrowed against that and then they're swapped for more wheat, which is also deposited in Aave. The rewards are harvested, swapped for wheat and compounded. Now we'll do a quick demo and I'll come back and explain what happens behind the scenes. So here we are in the interface. I'm already connected and we look down at the bottom here.
00:51:34.092 - 00:52:02.276, Speaker C: We can see what's in the vault. Currently the TVL is basically five we. That's basically the net asset value we can see in the vault. There's actually ten weath right now, but there's also debt of 24,000 die. So I'm going to basically double this. So I'm going to approve five we. And this is running against a fork mainnet right now.
00:52:02.276 - 00:53:14.068, Speaker C: So if you go to Airlift Finance, you'll see the UI, but you won't be able to actually interact with it. The price oracles between Aave and Uniswap or on Testnet don't really agree, so it didn't really work well on Testnet. Not sure why it's not approving here, try this again. Try it again. With two. Just in case there's an issue here's. Hard to say why this is not working.
00:53:14.068 - 00:53:48.730, Speaker C: I did test it earlier and it was working. Proof failed. Switch back to this other user, maybe it'll work better. Let's try that again. Five proof. There we go. Looks like it's working.
00:53:48.730 - 00:54:45.480, Speaker C: So while this is waiting, the key thing here to realize is that we're trying to double our ETH exposure. And Ave won't let you borrow 100% of your balance of your collateral. So the way we solve that there we go, it's deposited. So now we can see at the bottom, even though I deposited five ETH, the vault assets went up ten ETH, ten wheat here. And now the vault debt of course has also doubled to 48,000 die. So what's happening behind the scenes is using Uniswap flash swaps. So what happened there in this example is that a flash swap for about twenty four thousand k of Dai for five wheat was initiated.
00:54:45.480 - 00:55:30.396, Speaker C: But the contract doesn't have any dye at all. But because it's a flash swap, uniswap provides the five wheat up front, which the contract then deposits on Ave, which increases the collateral levels enough to borrow 24K die to send back to Uniswap to complete the swap, which happens all in one transaction on a withdrawal. The same thing basically happens in reverse. You're swapping the wheat for Dai, which is used to repay some of the Dai on Ave and so on. A third type of uniswap flash swaps is used to swap debt. The interest rates on USD stablecoins like Dai or USDC can vary a lot. Sometimes one is much better than the other.
00:55:30.396 - 00:56:25.020, Speaker C: So what's possible here is a debt swap, which is the same kind of thing, except you're swapping Dai debt for USDC debt and you don't have to withdraw the collateral at all to make this happen. Because Uniswap provides the Dai, the Dai gets repaid and that increases the loan to value ratio, which enables you to borrow enough USDC to complete the flash swap. Mitigating risk. This is a risky strategy, but the Ave health factor can be monitored to assess the risk. A strategy manager can call a rebalance function to adjust the risk profile. The minimum health factor can also be adjusted and monitored by off chain keeper. Bots could constantly monitor and adjust the risk profile, especially to guard against a flash crash scenario.
00:56:25.020 - 00:57:00.388, Speaker C: In summary, airlift finance's leveraged exposure made easy. As an investor, you only have to deposit and withdraw. You don't need to borrow anything. You don't need to worry about margin calls. You receive two X wheat tokens, which represent shares in the vault. It's a lot riskier than sort of a yield maximization strategy where you're just trying to maximize the interest rate and compound rewards. But it's intended for those who are bullish on ETH, who are willing to take risk but don't want to manage the risk.
00:57:00.388 - 00:57:33.330, Speaker C: That's the goal here. Next steps considering a polygon first launch. Also more vaults and strategies. You can imagine a BTC bullish strategy that's very similar for those that might be interested in that. And that is basically it. If you're interested. I'm at empty hacks on Twitter and you can also see my discord handle there if you want to reach out, and that is Airlift Finance lifting you up.
00:57:35.300 - 00:57:46.948, Speaker A: Thanks so much, Mark. It was a tricky moment there where we weren't sure if it's going to work out or not live, but it did and we're safe. So congrats. This is really cool and I hope you deploy this thing to mainnet.
00:57:47.124 - 00:57:47.848, Speaker C: Thank you.
00:57:47.934 - 00:57:55.230, Speaker A: Congrats. So, next up we have Hero Swap and Rajma and Calvin are ready to present what they built. So welcome.
00:57:56.640 - 00:57:58.060, Speaker H: Thank you, Kathy.
00:58:02.320 - 00:58:03.070, Speaker C: Hi.
00:58:03.440 - 00:58:39.444, Speaker H: We are Hero Swap. So what is Hero Swap? Hero Swap is a compliant uniswap. And I'm Calvin. I'm based in Las Vegas, United States. And my teammate Ashmore is based in Calcutta, in India. So the first question most people would ask, why bankless want to be compliant? If you've been following the news, you realize there are a lot of pressure coming from the regulators to the DeFi world. So how do we make a Uniswap compliant? We implemented this using the Molecule protocol.
00:58:39.444 - 00:59:25.476, Speaker H: Molecule was another hackathon project last year with East Global. The concept is very simple. We implemented a middleware protocol, basically inject between any kind of sender and the CPN transfers, and we check for the compliance. If it's approved, then we'll let the transaction go through. Otherwise we'll stop the transaction and we use both NFPs and Oracles. So how does that work? If you have an ethereum wallet, you can submit a KYC through a service provider such as Bloom, and then you receive a ERC 721, the NFP token representing your KYC. And then you can go to a Hero Swap or any swap that implements a Molecule protocol.
00:59:25.476 - 00:59:50.210, Speaker H: So the reason that we want to do this, centralized changes already have the compliance in place, but they are more expensive and custodial and decentralized exchanges are non compliant. So with the Hero Swap, we combine the best scenario for both worlds. So it's non custodial and compliant. And I'm going to pass to Ashmore to do a technical demo.
00:59:51.300 - 01:00:37.228, Speaker C: Thank you, Calvin. So the Heroes are project mainly consists of four smart contracts. We have the uniswap V two factory uniswap V two router molecule proxy contract, and molecule NFT contract. First, we will check the NFT balance for account two in the Molecule NFT contract. So the account two has NFT balance in the Molecule NFT contract. Now we'll switch to account three and we'll check the balance. So the account three has no NFT balance, which is not whitelisted, and the account two is whitelisted.
01:00:37.228 - 01:01:36.500, Speaker C: So we can try adding liquidity using these accounts. We can try adding liquidity. So the front end has been deployed to the crsky and we have the Skylink for interacting with the project. I'll try to add liquidity. So the account selected is account three, which is not whitelisted address, so the transaction should fail. We will select the Token A, Token B pairing toggle so it's taking time. I'll just try it once again.
01:01:36.500 - 01:03:34.870, Speaker C: We are approving Token A and Token B for spending. So we'll get a reward message from the EVM stating it is not whitelisted address. Now we can just switch the account to account two and we can try to add the liquidity so the transaction would be successfully done because it is whitelisted address with the molecule NFT, we'll try with that, we'll try the Token A, Token B pair itself. The transaction is enterprised, so we have to try it again. Same pair is selected. So since the account two is selected, the transaction should go correctly because it has the NFT balance in the molecule contract. So the transaction is successfully done and we can see this transaction in the ringabitasnet.
01:03:34.870 - 01:03:39.640, Speaker C: So I'll just hand over to Calvin for the rest of the part. Thank you.
01:03:44.250 - 01:04:17.380, Speaker H: Thank you, Ashma. So I want to summarize the reason we want to do the compliance from going unbanked, going to the bank, the mainstream, the liquidity and market size is tremendously bigger. And then also we want to be preemptive about regulations so that we want to be illegal operator. And there are a couple of questions. If anybody's interested, feel free to reach out to us on how the next steps are and everything. Thank you so much.
01:04:20.230 - 01:04:45.120, Speaker A: Calvin. Najwal, thank you so much for that demo and what a cool concept. And not only that, you're solving a problem that's been already surfaced in this space, but the thing that I got most excited about is that you used your own projects from the past hackathons and the composability on top of it. To me, that's just awesome and great to see you thinking ahead in so many different levels and making something super useful. So congrats and hopefully continue building this.
01:04:45.570 - 01:04:46.142, Speaker C: Thank you.
01:04:46.196 - 01:04:55.380, Speaker A: All right, with that, we are ready for our 10th and our last demo. So without further ado, let's welcome Kyle from Superfluidity to showcase what he built.
01:04:57.190 - 01:05:34.102, Speaker C: And team. Hello, everyone. My name is Kyle. I'm part of the team that worked on Superfluidity, along with my teammates Jacob, Antonio and Umar. For the sackathon, we focused on creating a new way to manage and optimize concentrated liquidity pools and deliver higher returns to liquidity providers. Superfluidity pools allow users to deposit liquidity which is then streamed in real time between concentrated liquidity positions which follow the price of an asset. This means that our users maintain a higher proportional ownership of active liquidity, earning them higher returns and fees.
01:05:34.102 - 01:06:01.730, Speaker C: For those of you unfamiliar, liquidity pools are the backbone of uniswap. They provide the assets that their automated market maker needs to make sure that when you purchase a token, it's there waiting for you. So I'm going to show you in our demo. Here how this works in the user perspective and give you a bit of insight into how we're approaching this on the back end. So first off, we're going to sign in using MetaMask. We built our front end using stealth, and right now we're running off of a fork of the main net using Ganache. We've got nice fast transactions.
01:06:01.730 - 01:06:36.250, Speaker C: Here you can see our dashboard where the user can view and manage their positions. So we're going to start off by heading over to pool rankings, which sends us to uniswap analytics, which gives us a good idea of what's in demand right now. Based on that, we're going to come on back and set a new position up here. So looks like wrapped ether and USDC look good. So we're going to put those in. We're going to deposit five ethereum, 15,000 USDC, and down here is where the user can define their range. So even though Superfluidity pools keep up with the price, we still want the user to be able to define their own exit characteristics.
01:06:36.250 - 01:07:05.466, Speaker C: So, for example, if I want to remove liquidity once ethereum is above 5000, I can do that here. So you can see the position come up down below, wrapped ether, USDC. Our position value over here and over here is where you're going to see the fees begin to accumulate and the profit percentage. Once the user is done, they can go over here to remove liquidity, which closes the position. Right now, this function is unfinished. In the future, we want the user to be able to determine how much liquidity to withdraw. For now, that's everything with the front end.
01:07:05.466 - 01:08:02.338, Speaker C: So we're going to log out and we're going to discuss our approach. So what's going on in the back end? Well, once the user sets their position, they deposit liquidity to a custody smart contract, which manages funds for them inside of the Superfluidity pool. It does this by defining a flow rate using uniswap's Oracle, by comparing the time weighted average price from one moment to the next, letting us know how quickly the price is moving and how quickly our streams need to flow to keep up. It also defines a capital distribution curve around the current price, which sets targets for the percentage of liquidity that needs to be streamed to any open position. Statistically, it's relatively unlikely for the price to move more than a certain amount in a given time period, which is why we taper off this curve as it gets further away. Those of you familiar with bollinger bands may recognize this strategy, which uses some of the same principles. Biggest challenge we faced was in optimizing our gas efficiency.
01:08:02.338 - 01:08:44.058, Speaker C: So our main approach was to aggregate and batch interposition transactions using that central custody smart contract, driving down the relative cost to each individual user. Similarly, superfluid relies on a fixed gas cost for the distribution contracts which also benefit from this kind of scaling. In terms of our next steps, as I mentioned, we want to finish integrating our back end and front end by completing the Remove Liquidity function. We want to finish integrating Superfluid protocol and we're considering our layer two solutions such as a bridge to optimism for certain asset types which function well with delayed custody. For now, that's everything we've got. So thank you for listening. We've got exciting things coming soon so we hope to see you again.
01:08:44.058 - 01:08:45.100, Speaker C: Thank you.
01:08:46.990 - 01:09:30.166, Speaker A: Thank you so much. That was amazing. Thanks for trying out all these new ways to look at liquidity and this is just cool. I love new feature technologies being integrated and tested out, so this is great. Congrats once again and I want to thank all ten of our projects for coming on and demoing to everybody here live. Definitely not easy to do this thing live, but also it's incredible that we saw so many amazing things come out from just nine days of hacking. And for those of you I know some of you have already talked about how do I learn more about these projects or can I see the source code or demos and the websites? You can check out all the projects, not just these ten, but all 61 of them.
01:09:30.166 - 01:10:31.100, Speaker A: By heading over to Showcase Global you'll be able to see everything that came out of this hackathon and anywhere from the demos to the source code, you can check all that out there directly. So congrats to all the teams and again, I really encourage you to all continue building what you started. I know there are anywhere from time constraints to a lot of features you want to add, so if you're ever stuck in one help on any of these things, please feel to reach out to us on Discord and we'll be able to help you with any next steps. So this concludes our ten demos for this event. What we're going to do is just cover some of the next steps which is mostly prizes that I know a lot of you have been waiting for. But before that, I want to quickly thank a few of our teams and our partners that made this event possible. So unisoft brands, program, Aztec, Visor, polywrap, Omni, analytics, KyNet and as an optimism that we're here supporting all of us hackers So I want to really give them a big shout out and round of applause for making this event happen.
01:10:31.100 - 01:11:08.230, Speaker A: So let's get into sponsor prizes. I'm going to list all the prizes and talk about who won them and for the teams. If you are one of the recipients of these prizes, we'll be following up with you over email and connecting with anyone from the sponsors themselves directly or we'll be dispersing them directly through on our end. And just give that a couple of days and you'll see everything in your inbox. So first up is the Uniswap grants program. So the best innovation category prize winners are crosscash and REIT. crosscash receives $6,000 and REIT will receive 4000.
01:11:08.230 - 01:11:54.258, Speaker A: The best hack for the government's category will go to Gitburn for $6,000 prize and Regulus for 4000. The best grantees category, UNIBOX wins $6,000 and blnt wins 4000. The best hack for the trading category 4000 goes to TX Strip and then as Uniswap receives 6000, the best tax in the swapping category, air of the Finance will get $6,000 there and Caravan will get 4000. And we'll get into the rest of the details in a minute. Next up is Aztec. So the winners of Aztec's prizes are actually a four way tie. So cross cash, azuniswap and credit swap and reed will all receive $500 in ZK die plus Aztec swag.
01:11:54.258 - 01:12:45.110, Speaker A: Congratulations. Then we have Visor Finance and we have a lot of projects who have won the Visor Finance prize. So the best use of runner up and run up for the strategy category are robusta with 1500 and as Uniswap for 1000. The best use and the runner up for the tooling category are Uniram for 1500 and Focus for 1000. Cargo wins 1500 for the most novel use case and Uniswapchain receives $1,000 for being the runner up in that category. And then Cargo and Uni Ramp will be splitting $250 each from the pool prize category. Then we have polywrap and for the polywrap winners, polywrap versus Vs code wins the best improvement of the tool chain award for $2,500 and Uniswap APX Four wins the best Uniswap wrapper award for $1,500.
01:12:45.110 - 01:13:38.870, Speaker A: Congratulations. Then we have optimism and the best use of V three on optimism goes to Uni Strategy for a $2,000 price. And then TX Strip will receive $2,000 for the best cross chain application. Then we have Omni Analytics and UNIBOX will receive the $1,000 prize for the most innovative use case of Omni. Then we have Skynet and we have a lot of incredible teams winning the Skynet prize. So we have stablecoins converter, Alepp finance easy send, unilearn education swap, hacking NFT, uniswap API Explorer, uniflash, uniramp hero swap that'smart and Unicode discord bot that are all going to share $4,000 equally. So $4,000 will be divided twelve way from Scanner.
01:13:38.870 - 01:14:33.910, Speaker A: And once again, if you missed any of these names or you were near to catch this or you're watching this thing later on from the recording, you can just head over to showcase Ecobot.com. And if you go to the project name on the right side, you will see the prize you won as yourself, but also any other prizes any other team won that's going to be associated starting now to the project profile on the showcase. All right, so before we wrap this up, I want to say a few thank you to some really important people that made all this happen. I want to quickly start off by giving a big thanks to the Uniswap grants program, boris. And Ken have been incredibly helpful in making all this happen. This wouldn't be possible without their support and help and coordination. So big shout out to the Unisoft Grants team for making this a I want to also thank all of our judges.
01:14:33.910 - 01:15:16.610, Speaker A: They were the ones who looked at all of the project submissions over a really tight window right after submissions were due. And they kind of were there to give feedback, encourage people to work more, give them more comments on how they can add new things or they can make their lives easier or add just a lot more new stuff and encourage them to keep working. So thank you to all of our judges. Want to also thank all the amazing speakers there that spent all of the two weeks of this event doing anyone from workshops to technical talks to answering questions, to doing office hours. They made all this possible by giving a lot of their knowledge and just know how of how everything works here in this ecosystem and encouraging more and more people to come in and learn and contribute. So thank you to all of our speakers.
01:15:16.770 - 01:15:17.094, Speaker C: Then.
01:15:17.132 - 01:16:16.566, Speaker A: I also want to thank all of our partners. There's so many people behind the scenes that were anywhere from helping you get unblocked, from using some SDK or protocol, to just helping you understand what will be possible and what is possible. And without these amazing partners, you would not have the 24/7 support that you needed to kind of get unblocked and finish and get to the finish line for your project. So thank you to all these amazing people from all different parts of the world helping out everybody on Discord. And I also want to thank our technical mentors for being there, running office hours, doing workshops, and really just getting into the weeds of technical errors that everybody was experiencing. And without their help, whether it's front end or uniswap specific or just solidity, they were there to make sure that you understand how something works under the hood and really get people involved in making something really cool. And also, I want to thank our volunteers.
01:16:16.566 - 01:17:07.926, Speaker A: So a lot of this stuff happens online with hundreds of people behind the scenes and doing and coordinating all this thing. You think whether it's judging or this very live stream requires a lot of people and you may not always notice them on camera, but these amazing people were there to coordinate everything and the background can make the experience really ideal for all of you. And lastly, I want to quickly give a shout out to the global team. Thank an OAS, Nisha, Sharp and Luke, emily, andrew, Jacob, Heather and Liam for kind of doing all the work behind the scenes to make this experience really memorable for all of you and making sure that all of your needs are addressed and you have the best experience actually getting more comfortable and getting into the Web. Three ecosystem. So thank you so much to everybody that made this event possible. And before we conclude, we want to talk about the finalists.
01:17:07.926 - 01:17:51.142, Speaker A: So we had ten teams present today and they showcased what they built over the last ten days. And they really did amazing work on the live demos and the goals for what they wanted to do. And we call them finalists because we don't want these events to be competitions. There's no notion of first, 2nd, 3rd. We want other people to kind of come and build something that they're interested in learning, even if there is no continuation, or even if they want to just do it for fun, for just that one time. And our hope is to get more people to experiment and really do things that they're excited about. And that's why we call a finalist, because when we call somebody a finalist, we want them all to be equal in terms of being some of the key and really interesting projects coming out of this event.
01:17:51.142 - 01:18:40.030, Speaker A: And as part of that, all these ten teams are officially our winners for this hackathon. And that means they're all coming in first from a pricing standpoint. And what that means in practice is that each team will be receiving $5,000 from the Unison Grants program. And in addition, the Youth Global team will be giving $1,000 to every member on each of these projects. For being our finalists, I want to congratulate all of these teams for really working on really cool projects and demoing them here today. So congrats to all of you. Just one more time, I'll say this again a few more times, but for all of you who participate in this event, we really want you to keep working on these things and whether that's continuing your project for the next hackathon to just asking us questions on, hey, I'm stuck.
01:18:40.030 - 01:18:49.926, Speaker A: But I'm going to continue adding features. If you need any help, please don't hesitate to ping us. So congratulations to everybody and this concludes Unicode.
01:18:50.038 - 01:18:50.746, Speaker C: Today.
01:18:50.928 - 01:19:33.942, Speaker A: I want to just thank everybody one more time for being with us for the last couple of weeks and being here on this live stream and really making this event memorable and special for all of us. And of course, this wouldn't be a new global event if we don't talk about what's next. So without further ado, I'd like to announce that our final event of this year is going to be kicking off this Friday. We're super excited to be running Web Three jam in partnership with Protocol Labs. So we'll be kicking this off this Friday. It's going to go on for another two weeks and this will be the last E Global event for 2021. And right after that, we're going to give some really cool hints and talk about what's next for E Global in 2022.
01:19:33.942 - 01:20:05.710, Speaker A: So if you're interested in continuing to build your project, or if you are catching this right now and you are not able to hack on unicode, I encourage all of you to head over to jam eglobal.com and sign up for web3 jam. So with that, I want to wish everybody a great rest of the week. We'll all see you this Friday for the kickoff for web3 jam. And thanks again for tuning in, and we'll see you online. Take care. Bye.
