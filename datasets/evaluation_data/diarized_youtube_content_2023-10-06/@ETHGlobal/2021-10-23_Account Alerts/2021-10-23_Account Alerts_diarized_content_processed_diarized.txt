00:00:05.370 - 00:00:13.600, Speaker A: And for that I'd like to invite Patrick who is going to be talking about account alerts. So Patrick, welcome. Feel free to get started whenever you're ready.
00:00:14.770 - 00:01:18.964, Speaker B: Hey guys. Yeah, it's great to be here. Let me share my presentation and then I'll get started. Okay, so so stake signal. So this is a project that I built with Compound Grants Dao, as well as with Paperclip Labs, as they mentioned before. And the really cool thing about how it all started was that Compound Grants and Larry actually got me in touch with Paperclip Labs because basically there was a skill set complement that they could provide. So part of I think what Grants does and the community does is even if your skill set is very particular, you can contribute a lot and you'll be sort of able to find people that complement your talents and that will help you contribute to the Dow.
00:01:18.964 - 00:02:19.336, Speaker B: Even if you think I'm really good at doing X, well, then X will be super helpful. And in a sort of decentralized way, we can get your skill set into interesting projects. So you can find my GitHub at Century Ape on Twitter as well. Sentry Ape. So I'm going to cover basically five topics today. First is just working for a Dao, and then I'll demo Stake Signal, and then I'll cover a couple topics just in terms of the code mechanics of interacting with Compound, getting data building apps or DApps with Compound, and then a little bit of a roadmap for the future of Stake Signal. So the first thing about working for a Dow is you can choose your level of involvement quite a bit.
00:02:19.336 - 00:03:01.690, Speaker B: So I'm still working my day job, and if you are working your day job, you can still hang out on Discord and you can get paid in crypto to do a real project. And it truly is that easy. You just need to be able to take the leap. And you get in there, you say, well, for me, my strength is mainly in back end with some front end. And let's say you need to have someone help you with design, or you need someone to help you with solidity or something like that. You can find someone to help you. Or if you're good at solidity, then you need someone who can do the front end or do integrations or something like that for you.
00:03:01.690 - 00:04:05.036, Speaker B: That all exists. And this is sort of what Compound Grants exists to do, is to enable you to do cool projects. So Compound is a protocol that's handling billions of dollars, but for a protocol handling billions of dollars, you think how much work that entails. It requires a lot of work in a lot of fields. So whether you're a solidity developer, front end, back end, a designer UIUX, a data scientist, a hacker, test engineer, or if you're just good at project management, that's incredibly needed right now. And then if you're good at integrating with third party tools, for example Flipsight crypto, or for me, integrating with SendGrid and Twilio for sending emails, sending text alerts. That is all work that needs to be done.
00:04:05.036 - 00:05:20.580, Speaker B: And for me, really focusing on what I was good at and being able to hook up with paperclip labs to provide a lot of help on the design side was super helpful. And I think if you have something that you want to build or if you want to look at the RFPs that are there, then you're going to find quite a lot of success working. And I highly encourage you to make the leap and to try. So how did stake signal get started? It was actually started with a Tweet by Robert. Basically we need someone to build a margin call system and then how's it going? Well, now Stakesignal app is live and you can go to the website right now and you can also check it out and set up alerts via email right now. So compound as a DAP, you can save money, you can borrow crypto, but it doesn't contact you in any sort of way. It's an entity sort of existing on the blockchain.
00:05:20.580 - 00:06:23.230, Speaker B: But there are events. For example, when I started, basically the day I got my grant was in May when the market was crashing and there were like tons of liquidation. So that was a day when Stake Signal was needed, but no project of that sort existed then. And then the day I got my grant I started getting cracking on making it so that a website can react to events like price changes or health changes and then send you a message. So that's sort of the need for Stake Signal. So I'm going to share the app, so I'm going to switch over for a second and okay, so here's Stake Signal. Basically you can connect your wallet with MetaMask.
00:06:23.230 - 00:07:16.240, Speaker B: You log in, it shows you alerts. So here are all sorts of rules that you can set. I'm borrowing more than 70% when 65%, email me when Ave is below a certain number, comp is above a certain number, sushi is above a certain number. And the way that Stake Single is going to message you is it's only going to message you once per day. It's not going to spam you or anything like that, but you get in, you can create an alert. So you can set a price alert example, set a price target for ETH at $3,200 and then you can create the alert. So then we've got a new alert for ETH right down here at the bottom.
00:07:16.240 - 00:08:31.130, Speaker B: Okay, so that's sort of what was built. Let me go back to the presentation. So basically right now for Shake Signal we've got email contact and I want to sort of talk about getting started basically because for me I was a developer only working in Web Two. I haven't written or deployed a smart contract. I haven't done anything in web3 before, but it was really helpful for me that entry level Ethereum is almost entirely in JavaScript and much of the development experience and tooling is in JavaScript. And for building an app, there's so much stuff that you can do just using JavaScript or Python or whatever, you know, and you don't have to touch solidity because there's tons of work that doesn't require actually getting into the guts of the smart contract. And decentralized protocols like Compound need a lot of talented developers and will pay for you to do interesting work in crypto.
00:08:31.130 - 00:09:20.042, Speaker B: And for example, one super high priority right now is to maintain an open source and JavaScript front end and do other types of apps for the protocol. So just a quick note about sort of how Stake Signal was built. First of all, login with MetaMask. So that's something that a lot of websites will be needing to use. Getting forward, I've included a link here login with MetaMask demo. This is how I learned how to implement login with MetaMask for Stake Signal. So if you're looking to do something on your own, if you're looking to do something on your own, this is exactly what you can do to get started.
00:09:20.042 - 00:10:16.442, Speaker B: It's got an example front end app, it's got an example back end app and you can take what exists there and just turn it into your app. So the second part here is sorry about that. So for logging with MetaMask, the important part here is the web3 e personal sign. And you just have that in there. Your users will sign the message, it'll send the signature to the back end, your back end. Your back end can check the message and then return a JWT to authentic to hit the user. Next, working with data from Compound on the back end.
00:10:16.442 - 00:11:26.894, Speaker B: So compound JS API is super helpful. So how do I get health information back from Compound? Well, it's this request here. So require Compoundfinance, Compound JS and then you just await Compound API account and that will give you basically a list of addresses, all of their health statuses, things like that. So you can just pull this and get account health from Compoundjs API and then use that data for your own app. And then the next one is how do you get prices and query on chain data? So there's public code that I have at my GitHub compound Oracle Util. Basically it's the same as interacting with any ETH smart contract. Using web3 JS, you basically pass in the contract abi, you pass in the contract address and then you'll be able to grab read functions from the contract.
00:11:26.894 - 00:12:22.530, Speaker B: Or if you're building a more advanced DAP, then you can actually interact with various contracts. So for example, with Compound you can supply or take out loans or do something like that. And then here's just a laundry list of what I found was useful in building Stake Signal. As a developer, this is something you want to learn in terms of building something that interacts with Compound. So compound JS, all the data from the protocol is there web3, so basically being able to interact with MetaMask and with Infura and other data sources and the blockchain for login with MetaMask. Check out the GitHub that I posted. But also this is how I implemented it with SIG util ethereum jsutil and JSON web token.
00:12:22.530 - 00:13:30.746, Speaker B: For stake signals, API was node JS express and JWT decode for automation. For JavaScript automation I used both and then for securing things like secret environment variables, I used M and then other useful tools to learn sort of as a blockchain developer. Building apps is use Infura for on chain data, use Firebase to rapidly deploy and redeploy your app and then bull and redis for your worker processes. So that's how I got the automation that drives Stake Signal. In is by learning bull by using it, managing the automated polling, the automated triggers, all that stuff. So it's super helpful in terms of building out an automated system and then sort of a roadmap for where stake signal is going. So I don't have too much time left, but I'd like to conclude here text alerts is the next major thing.
00:13:30.746 - 00:14:28.086, Speaker B: So I have the text alerts I need to work out sort of all the things with subscribing unsubscribing and things like that. I'd like to provide public data on protocol health. So basically have a downloadable CSV, just consume the data from my website, turn it into a CSV provided for the users. And then I think last but most important is the way safety rules originally envisioned with email and text I think is not quite right. I think for crypto, lots of people value their privacy and having a service that is consuming your email and your phone. Even though for me I'm encrypting everything, there's no way for somebody reading the database to get it or link the unencrypted email or phone to your account. I still think that a lot of people prefer to have a higher level of privacy.
00:14:28.086 - 00:15:11.020, Speaker B: So I'd love to get suggestions, feedback, things like that, on what sort of API I can build that will let people get secure but also timely notifications on their account. And I think that's sort of like for the next year where I want to take stake signal. So yeah, thank you guys very much. And that is it. I highly recommend people work for Compound, whatever you know how to do. There is a place for you super open community and literally it's as easy as just log into Discord and say what's up, I'm here to help. Thank you.
00:15:12.830 - 00:15:43.282, Speaker A: Amazing. Thank you so much, Patrick. That was such a good presentation and just a cool utility. I mean, this is clearly something that Compound and so many other projects need to I think you kind of brought up one interesting point, which I want to highlight for everybody watching. You don't necessarily need to know how to write smart contracts to be part of this. So much of what we're doing integrates and still works really well with the web two world. So if you're a back end developer, a front end developer, you just understand how to work with APIs to do certain things.
00:15:43.282 - 00:16:00.534, Speaker A: Those are still valid options and utilities. And exactly what you're just building on is a perfect example of that. You can still tie this into how emails work and people still need this. So that shouldn't be barrier to entry. And you've kind of proven that with that. Excellent product. So that's amazing.
00:16:00.534 - 00:16:20.220, Speaker A: I was going to say, I think one obvious thing that you can think about is just having web workers in the background. So instead of running and tying into different services, you can just have web workers do a push notification directly and it'll just be a cool one because then you can also offload the infrastructure on the client side. But that's awesome. Cool.
00:16:20.670 - 00:16:21.320, Speaker B: Thank you so much.
