00:00:00.410 - 00:00:38.870, Speaker A: Thank you. Good morning, good afternoon, and good evening, everybody. My name is Kartik, one of the co founders of ETH Global, and I'm super excited to welcome all of you to the ETH Online 2022 finale. You're all watching this on ETHGlobal TV. This is already a fun start. And for those of you who are joining us for the first time here, this is what we've been using for the last month to watch everything. So all of our Summits, all of our opening and closing ceremonies and everything else is going to be live streamed from this.
00:00:38.870 - 00:01:07.614, Speaker A: This also lets us understand who everybody is so we can give a POAP. So if you are not log in to say hi. You can also ask us any questions or comment on what you're going to see today. And for everybody who watched all the Summits, this is how we will be contacting you with the email you signed in to share. So this event is brought to you by ETH Global. For those of you who don't know what ETH Global is, it's an organization with a very simple mission. Our goal is to bring in thousands of developers into the Web Three ecosystem.
00:01:07.614 - 00:02:02.046, Speaker A: And we do this primarily by doing two things. We run hackathons and we run Summits. These are educational events for developers, designers, and anybody who's interested in becoming more involved in the Web Three ecosystem to come in and learn and use that as a way to understand and explore what is possible. And ETH Online was our biggest event of this year. And we did an amazing set of Summits where we organized five different individual summits on different topics. We had a whole summit around what's the latest in all of the devtool world when you're building in Web Three, we talked about how we can do coordination at scale, especially as we see the rise of a lot more dows. We ran the live stream of the merge, where we had over 25,000 people tune in live to see the ETH transition into the next era of the execution and the consensus layer.
00:02:02.046 - 00:02:52.302, Speaker A: Then we hosted a summit on what the future of Ethereum looks like from the optimism team and how optimism is helping extend the vision of Ethereum. And last Friday, we hosted our last Summit for this event, where we talked about the impact that Ethereum has made and the amazing set of progress we have made with the people and the projects in this space. That was just the summits. We also, in parallel, had a hackathon. That what we're going to talk about today. And I am super excited to announce that this has been our biggest event ever in our entire five year history. We had 1780 hackers from 100 countries spanning 22 time zones participate and build incredible set of projects.
00:02:52.302 - 00:04:07.034, Speaker A: This map keeps getting more and more full every time we generate one. And it's so exciting to see so many countries and so many cities around the world represented. Not only that, we also had 35 amazing partners and 100 plus mentors who were there answering questions, helping unblock you from using any protocol that you were excited to build on. And to top it all off, we were also giving away over $350,000 in prizes, all of which is going to be announced later today. And the thing that blows my mind is that we had 360 projects come out of this hackathon, which is the most we've ever seen, and not only the most we've ever seen ever, but the most amount of quality projects we've ever looked at from any event we've done. And this is absolutely incredible, because we're going to see some incredible projects through all of the last three months worth of work from all these amazing teams. Before we go into everything about the demos and the prizes, I want to quickly thank all the amazing partners that have been part of this event, and they'll also be announcing some of the winners of the prizes that they were giving out.
00:04:07.034 - 00:05:09.882, Speaker A: And on top of that, they're just incredible people to work with. So, without further ado, I want to thank Optimism superfluid avi grant style scale polygon IPFS filecoin WorldCoin ENS and uma aurora and push protocol the graph kronos lifepeer urine finance AP wine hyperlane unstoppable domains connect lens spruce covalent table land QuickNote NFT port vallast debris teller streamer sysmo oasis network and OD protocol ceramic unlock protocol Xmtp. And let's go back to the 360 submissions. We saw 360 projects come out on Sunday. On Monday, we did live judging for all these teams. In a 24 hours period. We had 30 plus judges look at everybody's projects, talk to the teams, ask questions, give feedback, and we compiled the list of 14 incredible finalists.
00:05:09.882 - 00:05:55.694, Speaker A: We're going to bring them on today. They're going to do back to back demos, and then we're going to jump into all the prizes. So without further ado, I want to congratulate these 14 teams as our finalists. So big shout out to telescope carry protocol ENS everywhere l two Optimizers Stacker network zero X sauce water drops refi INRI synth turbo dipass flow theory new wallets and lensmo interplanetary fonts and no cost subscriptions These are our 14 amazing teams. They represent some of the most interesting, creative, and technically impressive projects that our judges were excited about. They're going to come on one by one and demo what they built. So you get to see these amazing projects in action in a live demo.
00:05:55.694 - 00:06:42.698, Speaker A: And before we go into that, I want to take a quick second to thank the 346 projects listed here on this slide and the next. This has been the most impressive event we've ever done. I get to look at every single project that comes out of it, and I have been continuously impressed and blown away by the quality of every single project here. Just because you did not make it to one of those 14 teams does not mean you were not good enough, does not mean there was something wrong with it. It's just a representation of our judging process, where the teams that get bubbled up are the ones that our judges are excited about the most. And it does not mean that you should give up or stop working on what you built. You should absolutely continue extending your project.
00:06:42.698 - 00:07:38.270, Speaker A: The three weeks you had to build all these amazing things is just a small amount of time that you get to do. And if you extend it, and if you continue continuing to improve what you are starting, this will be no short of an incredible feat that you get to achieve. And if you need any help in being unblocked, getting introduced to somebody in this ecosystem that you want to talk to, to get feedback or improvements or anything else around it, do not hesitate to ping me directly or anybody on the ETHGlobal team, whether it's through email or discord or any other means, and we'll be more than happy to help you. And for those of you who are tuning in, you get to go to Ethglobal.com slash showcase to see all the projects live right now. You get to check out everything that they did, from demos to the source code to a lot more detail around how they built it and why. So, without further ado, let's get started.
00:07:38.270 - 00:07:47.234, Speaker A: I want to bring on our very first demo for today, and that is Project Telescope. So let's kick this off. Welcome. Cool. Hi.
00:07:47.272 - 00:08:13.190, Speaker B: The project that I built for ETH online is called Telescope. It's a crosschain EVM transaction explorer dedicated to help onboard the next billion users into web3. One of the bottlenecks to the mainstream adoption of crypto is the lack of an easy access to understand transactions. Today end users often rely on block explorers to view their transactions. But block explorers often have two issues. One, they tend to overwhelm. Beginners with advanced blockchain concepts such as network block, difficulty, hash rate, who mind the latest block, et cetera.
00:08:13.190 - 00:08:46.258, Speaker B: When in reality, all that most users care about are the basics of a transaction. Did it go through? When did it go through, did it go where it should have gone, et cetera. Two, explorers often are confined to a single chain, causing confusion to users when taking cross chain actions such as bridging. So this is why I've built telescope. Telescope is a cross chain transaction explorer. Think of a transaction explorer as an infrastructure layer, one layer abstracted from block Explorers, where transactions, not blocks, are first class citizens providing the most intuitive experience, understanding the movement of funds across CVM chains, with a strong focus on user experience. Now, enough talking.
00:08:46.258 - 00:09:04.698, Speaker B: Let's go into the live demo. First, you'll head over to Telescope O and be greeted by the simple landing page. Now, just like a block Explorer. You can search by account or contract address or transaction s. But here ENS is first class citizens by default. So I'm going to search for my ENS here. Now I'm going to be greeted by the account overview page.
00:09:04.698 - 00:09:47.794, Speaker B: On the left we have a summary of all the tokens in this account. Not only do we have an aggregate balance shown here across all the supported EDM networks, but a nice pie chart to visualize the tokens along with a clear list of showing the individual token balances. More importantly, on the right side here we see our first class citizens, the transactions neatly organized in a single list. Now, a couple of points to highlight here. First we're crosschain supported by default where you can see all of your EVM supported network transactions here in a single view. Now, we also kept our focus on really high level transaction details like exactly when did the transaction happen, with what address, with popular contracts like uniswap whitelisted here and exactly what type of transaction or contract call was made. And finally, an easy way to read the exact token that was transferred doing that transaction.
00:09:47.794 - 00:10:42.030, Speaker B: Furthermore, we also removed the decoupling of transaction types such that there's no tabs dividing a normal transaction to an ERC 20 to a 721, instead all aggregated in a single view. Now, if we choose to look into an individual transaction, we arrive at the transaction detail page where you first see the same high level details as shown earlier in the list. But below we see additional data geared towards more advanced users and developers. On the left side we see details like the fees and the block number and what's commonly known as the state difference on Etherscan, easily visualized as changes in account balances. Below you've also thought deeply about how to best showcase input data in a smart contract, all knowing how challenging this could be to parse on other Explorers. So on the right side, as you can see, we not only have a table showcasing the exact token transfers that happened during this transaction, but an execution trace for developers to easily follow up on what exactly happened during this contract call. Now, one of the worst user experiences in crypto in my opinion is the Bridging.
00:10:42.030 - 00:11:13.182, Speaker B: From one network to another, people often say bridging is like depositing into a black hole. So I've built an easy user experience on telescope for bridging users to understand the progress of their transaction based on the number of confirmation and estimated time required for the funds to arrive such that users don't ever feel lost during a bridging experience. Awesome. So that's the core transaction related features. But I asked myself how can we take this an even step further to understand accounts from Bird's eye view for users that may not be technically or number savvy. So what I've built is something called the Graph view. As you can see in this view, your accounts.
00:11:13.182 - 00:11:56.890, Speaker B: And all the accounts you've interacted in the past are showcased in a single graph based on edges representing transactions and nodes representing accounts size proportional to their balances. On top of that, if you click into, let's say, a particular node, you'll be able to expand that node into a sidebar that showcases all the transactions you've had with that particular account, where the edge has expanded into the transaction, showcasing the direction of the movement of funds. If you hover over a single edge, you can see that the highlighted transaction is shown on the sidebar next to it. So an easy way to clearly visualize where your funds are moving at a glance. Now, let's take a more specific use case. As an example, imagine your wallet was compromised and hacker stole your favorite NFT. Wouldn't it be great to be able to easily visualize where this hacker took your NFT? So let's say that this hacker took your NFT.
00:11:56.890 - 00:12:35.642, Speaker B: And below I have a little search bar where you can search for the NFT's token address and Token ID. And once you do that, it'll allow you to easily trace where this NFT moved. Let's say the hacker moved it over to a publicly known service like OpenSea. Now that I can see that this hacker used this account to try to, let's say, sell my stolen NFT, and I'd be able to go to OpenSea and try to block that sale by reporting that this hacker is in this address. So that's another use case. Finally, an easy way to basically drag around the nodes to your liking such that maybe you can understand better the movement of funds on a particular account, especially if there's been a hack at a bridge, for instance, and try to track where the hacker took the money. So that's pretty much all the features on Telescope.
00:12:35.642 - 00:12:50.354, Speaker B: As you can see, Telescope provides an intuitive way to understand transactions cross chain, which is critical for us to onboard the next billion users into crypto. Thanks so much for tuning into my presentation. Shout out to the ETH Global team for organizing an amazing experience, had a lot of fun, and feel free to connect to me on Twitter. Thanks very much.
00:12:50.392 - 00:13:12.890, Speaker A: Bye bye. Amazing. Thank you so much for that incredible first demo. And all of you can check this out by heading over to Telescope. Oh. All right, next up, we are ready for our second demo, and that is Team ENS Everywhere. So without further ado, let's welcome David, Callie, and Charlie.
00:13:12.890 - 00:13:15.674, Speaker A: Your screen okay, cool.
00:13:15.792 - 00:13:34.462, Speaker C: Well, I'll get started. Hello, everybody. My name is Kala and I'm going to present ENS everywhere. On this project. I've been working with two buddies of mine, David and Charlie. Together, we kind of COVID the full stack pretty neatly. And the insight that spurred our sorry, I'm going to start my video.
00:13:34.462 - 00:14:15.806, Speaker C: There we go. Hey, guys. And the insight that spurred our project was the insight that ENS is one of the most successful products on Ethereum. Not only has it proven itself to be a core primitive of the sort of new ecosystem and identities, but they're also racking up just an insane amount of fees competing with some of the biggest DFI protocols out there and even Bitcoin. Now, despite that, ENS hasn't really migrated to l Two S. As transactions and activity has moved to L2 S, you can't buy or trade or even get some of the gas savings that you could expect from other types of assets. Now they've added subdomains like you can see here with the Coinbase example.
00:14:15.806 - 00:15:13.274, Speaker C: But the primary use case of ENS domains is top level domains and the identity that goes with it. So if we don't have that in l Two, we're also losing out on a lot of fee revenue. So our solution to this is ENS Everywhere, which lets you buy, trade and bridge ENS domains to l Two. Now, for us to be able to build this solution, we had one very big problem in front of us, which is that how do you get around the gas fees on layer one? What we want to do is take orders and collect them on layer two, have a relayer go and register that domain on layer one and then bridge it back to layer two. But there isn't really a way of doing that without incurring the l One gas costs and then passing that on to the user on layer two. So how do you go about solving that? Well, what we did was we rewrote the ENS registrar contract for ENS. So now it's possible to do bulk orders on ENS.
00:15:13.274 - 00:16:04.500, Speaker C: And this is a contract that would be available to anyone on layer two as well. But what this enables us to do is now that we're collecting orders on layer two, we can go and register all those orders on layer one and pass on the gas savings to layer two. We would have to work with the ENS Dow to get to implement this. We already have connections with the team and so we're going to work on adding this as a core functionality sort of benefiting the entire community. And then what that's enabled us to do is get these type of gas savings up to 34% gas savings on the biggest pools of people, but even up to 9.3% gas savings on two people pooling together. Which is still great given the fact that we're going to take transactions and do them on both l One and l Two.
00:16:04.500 - 00:16:28.934, Speaker C: Now, enough talking. Let's go through and have a look at the product. So this here is CNS everywhere. If we go on this site, we can basically connect our wallet. And in the same way as you would with any other DAP here, you can choose whatever the network you're on. Let's say we're on optimism and I want to register Cal ETH. Okay.
00:16:28.934 - 00:16:32.070, Speaker C: Cal ETH is taken. I'll do ASE ETH.
00:16:32.150 - 00:16:32.778, Speaker A: Great.
00:16:32.944 - 00:17:16.006, Speaker C: Now the registration process looks very similar to what you'd expect on layer one, but there's one big difference here, which is you can see this estimated bulk saving. So if I go here and confirm my registration using MetaMask, what's going to happen? Is it's going to pass me on to this next step? What's going on here? It says Pen in registration zero and waiting eight. This is the pool of people that are currently purchasing ENS domains on layer two. And we're just waiting until enough people have pulled together on layer two, where the time waited relative to the savings you can have is sort of optimal. And we've set that number at eight. And as soon as this number has.
00:17:16.028 - 00:17:19.138, Speaker A: Reached eight, we're going to take this.
00:17:19.164 - 00:17:47.826, Speaker C: Entire bulk, send it to a relayer on layer one, who will then go on and interact with the ENS contract and settling this on layer one. Bulk is ready. We need to complete our registration and sign it. And then now the registration is being settled on layer one. As this thing is going through and it's ready, it's going to give us a confirmation and now we can go and look at the domains that we have registered on layer one and on layer two. If you have a domain now on.
00:17:47.848 - 00:17:49.826, Speaker A: Layer two and you want to move.
00:17:49.848 - 00:18:16.460, Speaker C: It back to layer one, you can bridge it to layer one by going through the Bridging process here. Or even if you have an ENS domain on layer one and you want to start trading it on some type of NFT platform on layer two, you can do that as well. And that's basically our product. We want to take this to market. We want to launch this on all the big L two S and get this out there. Thank you guys for watching.
00:18:19.070 - 00:18:39.982, Speaker A: Amazing. That was really cool and can't wait for others to also try this thing and just do a lot of block registrations. Hopefully we minimize some of the hoardings, but this is great. Hopefully we get to see all for all different chains. Cool. Congratulations. And with that, we are ready for our third demo for the day, and that is Team Stacker Network.
00:18:39.982 - 00:18:43.940, Speaker A: So I'll ask both of them to turn on their cameras and get ready with the demo.
00:18:46.810 - 00:19:17.946, Speaker D: Hey, let me just share my screen. All right. Hey, everyone. So I'm here to talk about Stacker Network, which is an SDK for building application specific, optimistic rollups on a decentralized network of sequencers. So the problems today is that general purpose EVM rollups are redundant and data heavy because they have to support a variety of features from variety of applications. So if a particular application wants to run, so it needs to share its resources. So that's why general purpose roll ups are redundant.
00:19:17.946 - 00:20:09.566, Speaker D: And most likely you don't really need the native VVM storage because you can do fine for some use cases with the call data storage itself and you can just have a tailor made roll up for yourself and it is not a walk in the park to build your own roll up. So even though roll ups are simple but it's not everyone's piece of cake to just build it. So developers would rather focus on building the application itself rather than building the support infrastructure and even if it means that they need to sacrifice optimization for it. And also like running a sequencer itself and building it is a cumbersome task. So we are here to help. So first of all, what it isn't, it is not a brand new blockchain or a network or it is not isolated from Ethereum, it is not a separate EVM roll up and definitely not an Ethereum killer. What it is, it is a set of tools for building non EVM and later EVM roll ups easily and efficiently on top of Ethereum itself.
00:20:09.566 - 00:20:38.674, Speaker D: So basically it's an infrastructure provider for Ethereum. So how does it work? So you simply run NPX, create roll up, you submit your directory name and you are done. That's all you require to build a roll up. So what happens under the hood is roll ups are very simple state machines. They work on the principle of state and state transition. So if you have a state which gets mutated by a transition rule, all the inputs and the final state are stored on chain. And with this SDK, the developer only needs to focus on the state and straight transition.
00:20:38.674 - 00:21:19.954, Speaker D: And all the heavy lifting of things that goes behind a working of a roll up happens by the SDK itself. So a lot of roll ups have a lot of things in common which is like 70% to 80% of stuff. So we just extracted those out and let the developers build only on the 20% of stuff. So we are following a three layered approach which is the underlying base layer at the bottom. Then on top we have a sequencer network and on top of that would be an application development SDK which will also be the execution layer for the project. So in the application layer it will be like an environment in JavaScript or any other general purpose language which will connect to the sequencer network through APIs. Developers can choose whatever kind of compression that they want to use.
00:21:19.954 - 00:22:15.030, Speaker D: They can also we'll also be bundling a bunch of other tooling necessary for them to build their applications. Next to that is the decentralized sequencer network which we are planning to run on a piece of proof of stake model and since we will be having a consensus model built into it, we are planning to reduce the time to finality as well for any roll up. And at the bottom would be the base chain which could be any EVM compatible roll up and either EVM compatible chain or roll up and we'll be posting all the call data from our network to this chain and modes of operation. So it actually functions in two roles. You can actually build your own roll up, you can choose whatever data structure you want, however you want to use it and we can also provide like for more generic use cases. We can provide pre built node which the roll ups can connect to using normal web two APIs. So let's see it in action.
00:22:15.030 - 00:22:56.162, Speaker D: So over here I have a local hardat instance running and on this side I have a sequencer network running. So right now it's just one sequencer, we'll be soon be starting another sequencer. So I'll just do NPX create roll up chess and it will ask me a bunch of questions if I want to deploy a new roll up or connect to a pre configured node. So I'll just select a load up and select local development for the environment. And once this is done setting up the project, I can just CD into this directory and show you what's inside it. So you'll see that we are providing a bunch of stuff already with the roll up. So all you need to build your own roll up is just extend the roll up base class, provide the game state as well as the state transition function.
00:22:56.162 - 00:23:06.806, Speaker D: So right now it's the move, the chess move and it will update the root and submit the transaction to the sequencer for bundling. And this is just like two bots playing chess with each other. And now if I go ahead and.
00:23:06.828 - 00:23:10.346, Speaker A: Deploy the roll up so once this.
00:23:10.368 - 00:24:20.378, Speaker D: Is done deploying, you should see the sequencer being able to index this roll up easily and start accepting transactions, right? So you can see a roll up registered event was created and now if I just start the game so this is two bots playing chess with each other doing some moves and all of the data is going to the sequencer and once it has a bunch of transaction, it will bundle it together and submit on chain. So let's wait for a couple of more transactions and you can see a batch submitted, transaction was done and if we come into the block Explorer and check it out, you can see that indeed the game state was stored on chain using call data and since it's a network, I can anytime start a new sequencer. And once this is done, you can see that the roll up is now sending data to both of them. So they are like balancing the transactions. So once I stop this now the other thing which I talked about was roll up as a service. So this I will start as a pre configured node. So this is a payments roll up which includes L one to L2 token bridge as well as a roll up for doing token transfers.
00:24:20.378 - 00:24:59.690, Speaker D: And if I go into this directory and show you what's inside the SDK. So you'll find out some adapters to connect to the sequencer and the actual application. So you'll see, it has simple APIs for performing deposit and then signing messages and transferring tokens from one address to other. And if I go ahead and build this quickly, once it's done, I'll just do this. And what it will do is like, it will do a bunch of deposits from l one to l two using the bridge. And once the addresses have tokens on the bridge, it will just do a transfer. So let's just wait a couple of seconds.
00:24:59.690 - 00:25:37.402, Speaker D: So you can see like on chain, like a deposit event was occurred and inside the roll up. Okay, I think we have an error, but yeah, never mind, that was something else. But if you notice closely, the tokens indeed got bridged from l one to l two. So both of these accounts had 50 tokens and now one account has reduced tokens and another one had like increased tokens. So it's just the beginning. We are trying to build an entire ecosystem around this and we are looking out for people to support us. So if you think that this is interesting, please reach out to us.
00:25:37.456 - 00:25:54.240, Speaker A: Thank you. Amazing. That was an incredible infrastructure project, especially as we kind of think about how rollups evolve. So, congratulations. And with that, we are ready for our next demo. So we're going to go right to Michael with water drops. Whenever you're ready.
00:25:54.240 - 00:25:56.522, Speaker A: Thanks, Kartik.
00:25:56.586 - 00:26:14.786, Speaker C: Good morning, everyone. Go ahead and share my screen. All right. So hello everyone. My name is Michael Gen and I'm here today to present water drops. These are claimable airdrops with automatic vesting. In a traditional AirDrop, tokens are received in a lump sum.
00:26:14.786 - 00:26:45.010, Speaker C: As a result, they get dumped right away by many of the participants in airdrops where tokens are vested. The drop requires recipients to continuously return to the app and execute claim transactions. This takes time and money. Water drops are an improvement on the traditional airdrop. A recipient of a water drop executes one claim transaction to start the automatic vesting process. The tokens from the waterdrop are then streamed to the recipient. This means that the recipient receives tokens every second automatically without having to execute additional claim transactions.
00:26:45.010 - 00:27:26.160, Speaker C: This saves the recipient time and money and prevents them from dumping a lump sum of tokens on the market after they claim their drop. Water drops tokens show up in your wallet and can be used immediately after they received in other decentralized financial applications. Creating a water drop is simple. You set an emission rate of the tokens, a duration for how long the recipient will receive those tokens, and a deadline for when the drop expires. Next, you transfer tokens you're going to drop into the contract and add a list of recipients. Recipients can then add the claim can execute the claim transaction to get their water drop. Started after the claim, the recipient will receive tokens in their wallet every second.
00:27:26.160 - 00:28:11.720, Speaker C: Now, let me show you a demo of how waterdrops works. I'll start by showing how to create a new water drop. So, as you can see here in the Polygon scan user interface, the deployer and owner of the water drops contract can start by specifying the token they want to drop, the rate they want to emit tokens, the duration and a deadline. Then what they can do is add users. Using the Add User claim, the owner can add as many recipients as they want. The recipient can then go to the waterdrops user interface, which can be easily rebranded by the creator of any waterdrop. After executing a claim transaction, the recipient will be able to claim their tokens.
00:28:11.720 - 00:29:07.650, Speaker C: So here we'll go ahead and execute the claim transactions. Immediately after executing the transactions, the tokens will be received and settled in their wallet on a second by second basis. These tokens are immediately available to be used in other DFI applications because they're compliant with the ERC 20 token standard. Here you can see that after the claim, the balance of your tokens received just increases at the rate specified. You might be asking yourself what happens when the recipient stream reaches its end? For that, we use Gelato keepers to pull for when to close the stream to the recipients, and we execute each closure transaction for each recipient. Waterdrop smart contracts are built and tested using hard hat. We use superfluid, super tokens and continuous flow agreements to stream the tokens to the recipients.
00:29:07.650 - 00:29:53.720, Speaker C: Gelato is used to automate the closure of the streams when they reach their conclusion, and waterdrops is deployed on the Polygon network where transactions are fast, inexpensive, and handled by an ecofriendly network of nodes. Up next for waterdrops is a pilot program with the Luo Finance and Ricochet Exchange, a project that I previously did at Scaling ETH 2021. To be eligible for a Ricochet token AirDrop, you'll need to deposit at least $100 or more into the app Luo Finance for at least 30 days. The AirDrop is going to happen 37 days from now, so you'll have one week to make the deposit. And remember, you'll need to keep your funds on deposit for 30 days. So thanks for taking the time to view my submission for Ethol line 22 and keep an eye out for announcements about the first water drops, which will be happening on Polygon very soon.
00:29:55.290 - 00:30:15.120, Speaker A: Awesome. Thanks, Michael. It was an amazing demo and a really good step in the direction of how we think people should be tied directly to making sure the ecosystem is successful. All right, with that, we are ready for our next demo, and I'd like to welcome Emma Jane to talk about inari synth. Welcome.
00:30:15.730 - 00:30:33.410, Speaker E: Hey, cool. I'll just share my screen. Okay. Hi. My name is Emma Jane. I'm the solo engineer and designer behind the Anari synth project. Anari synth is a decentralized image synthesis.
00:30:33.410 - 00:31:07.950, Speaker E: Social media DAP that integrates Lens protocol with stable diffusion. So I start by connecting my wallet and then signing in with Lens protocol. And once I'm signed in, this prompt box appears. So now I can craft a prompt for an image that I'd like to synthesize. So you can write whatever you want. I'm going to write portrait of a fashionable female ethereum hacker. And I'm going to add some kind of like, modifiers to it that I know usually turn out pretty well.
00:31:07.950 - 00:31:35.346, Speaker E: But again, you can literally put whatever you want in illustration, say art station, that's usually a good one. And then art by art germ and Alphonse hookup. Okay, inference steps. I'm going to bring those down just to have the synthesis run faster. And I'll bring up my guidance scale to around 13. Width and height I can change, but I'll keep the same. And then I click synth.
00:31:35.346 - 00:31:43.194, Speaker E: It usually takes around 20 to 30 seconds for the images to actually synthesize. Going to check that the call actually went through.
00:31:43.232 - 00:31:43.434, Speaker A: Cool.
00:31:43.472 - 00:32:24.200, Speaker E: It's running. There's been major issues with the replicate API. It often goes down and a top priority of the project is actually moving away from relying on replicate for the synthesis as quickly as possible and instead having it done through like DIY local notebooks. So why an Ari synth? Why does it matter? Well, social media today makes a ton of money, and all of that goes to the platform owners and not any of it for us. So breaking that stranglehold on money, power, self expression, it's an obvious good. And that's why decentralized social media. But just because we have these stronger channels doesn't make it any easier to create great things to share.
00:32:24.200 - 00:32:53.540, Speaker E: But open source image synthesis is different. Now we can build synthesis into literally everything, including social media. So I did. So sometimes you get this returned, which means the API thinks that there's not safe for work content. So I'm going to just change up my prompt a little bit. But I also actually did some previously, so you can see some of the cool outputs. This was from a similar prompt that I ran just before.
00:32:53.540 - 00:33:39.070, Speaker E: So how it's made? I made it with NextJS TypeScript tailwind wagme, Rainbow Kit and Web three storage. For the social layer, I used Lens protocol. And for image synthesis, I used stable diffusion via the replicate API for to do, as I mentioned, major priority, moving away from the replicate API to avoid NSFW filters and just in general, a lot of the limits. Also, full implementation of the Lens collection module and having curated fine grain token based permissioned feeds. So hopefully that went through cool. You can see here from this prompt, I got some pretty amazing outputs and I can choose which ones I want to put through to my post. I'm going to choose this one and this one.
00:33:39.070 - 00:34:09.850, Speaker E: And I could just post now, but I can also run image to image. I'll do that while kind of posting, just because I don't know if we'll have time, but I'll resynt those. And in the meantime, I can write some description to go with my post. So I'm going to write. I love hacking on ethereum. Then I click create and I sign the transaction with lens protocol. And then I also can post and publish that on chain.
00:34:10.270 - 00:34:11.098, Speaker F: So cool.
00:34:11.184 - 00:35:01.278, Speaker E: I'll have that running and I think the other one's yet running as well. So I also got here you can see some of the image to image and how it outputs, which is really cool. So documentation, usually in hackathon projects, documentation is an afterthought, but I find it frustrating when I can't find documentation. So instead of making standard docs, another major part of this project was creating a place where all of the fascinating open source research from the community can come together. And it's not just for image synthesis, but also for how to set up and run your own Ethereum node, because that's top priority after the merge. So I could also you can see here some of these cool variations. Now I can go to my stream and on my stream I have a curated feed of all of the different publications from Anari synth.
00:35:01.278 - 00:35:21.700, Speaker E: You can see this is the one from just before, but there's a ton of others. And every publication also shares the prompt that was used. So you can see how other people are creating their content. So it's live now at Anarisynth XYZ, still in beta, but you can try it out and yeah, that's it. Thank you.
00:35:23.910 - 00:35:45.320, Speaker A: Awesome. This is great. And just a new way to kind of think about content generation and building just a more niche network about what you're interested in. All right, thank you so much for that demo. And with that, we are ready for our next demo, and that is Project Flow Theory. So I'll ask all three of them to get started. Welcome.
00:35:45.320 - 00:36:35.310, Speaker A: Hi, I'm Sonny, here to present Flow Theory, a fixed rate credit protocol that aims to bring real cash flow to onchain lending with real time interest payments. Flow Theory is brought to you by Mahal Sonny and Banky, a team of believers. Web three interest cash flow is actually somewhat mythical. Currently, borrowers don't actually pay down their interest until they go for repayment, causing lenders to have delayed and unreliable cash flow. This results in higher rates for borrowers and lower rates for lenders, which is unfavorable. And yet this idea of continuous interest payments is very real in traditional finance, where we pay down our loans and installments and lenders realize cash flow continuously. And so this brought us to introduce the Flow Theory.
00:36:35.310 - 00:37:31.500, Speaker A: The idea is that the automatic repayment of onchain debt or interest will incentivize better terms of credit in onchain lending markets. So what the Flow Theory protocol offers is a fixed rate credit protocol where interest must be paid in a stream and lenders don't have to claim interest as it shows up directly in their wallets. This direct ruining of interest mechanism is made possible by superfluid, where we accept interest payments in the form of a stream and route it out directly to lenders using the Superfluid Instant distribution agreements. As a result, the Flow Theory contracts hold no total value locked in the form of accrued interest from borrowers as it is swept directly out to lenders. Flow Theory makes use of superfluids real time finance. Rails Polygon Optimism layer twos, as well as the graph. Let's get into demo.
00:37:31.500 - 00:37:33.162, Speaker A: All right, cool.
00:37:33.296 - 00:38:03.080, Speaker C: Thanks, Sonny. Hello, everyone. So in Flow Theory, a user can either lend money or they can borrow money. And as a lender, they can start earning interest. So to lend money out and start earning interest, all they have to do is deposit some liquidity for this demo. I've already deposited liquidity into the Flow Theory contracts, and this user will actually start to earn interest once per day. So let's switch over to the borrower side so I can also show you how that works.
00:38:03.080 - 00:38:24.554, Speaker C: So as a borrower in Flow Theory, I have two options. I can either manage my collateral or I can manage my borrows. For this demo, I've already deposited some collateral for this user. I've deposited 420 wrapped ether, so we can actually take a borrow against that collateral. So let's go ahead and do that.
00:38:24.592 - 00:38:25.180, Speaker A: Now.
00:38:26.430 - 00:39:11.500, Speaker C: I'll just borrow 3000 USDC. As we can see, the collateral ratio gets updated automatically. And we also show the user how much interest they're going to be paying. So let's confirm this transaction. So in the background, as Sunny talked about, what we do is we create a new superfluid stream which starts to stream the user's interest from their accounts into the Flow Theory contracts. In addition to this, we also pay out that interest once per day by calling a Superfluid Instant deposit agreement. So this 3000 USDC, after this transaction is done, will actually be transferred from Flow Theory into the user's account.
00:39:11.500 - 00:39:50.986, Speaker C: Try to speed up this transaction. Okay, actually, it's done. Okay, cool. So now we can see that the borrow has been completed. And if we actually go to the superfluid dashboard, we can see that the user's interest is starting to be paid out in a stream from their account. We can look into this in more detail, and we see the total amounts that the user has streamed in interest from their accounts to the Flow Theory smart contracts. If we go ahead and refresh our page here, we can also see on the Flow Theory page the interest amounts.
00:39:51.098 - 00:39:52.800, Speaker A: That they have paid so far.
00:39:53.730 - 00:40:14.040, Speaker C: If we take a look at the superfluid console as well, we can also take a look at all of the streams that are active for the Flow Theory contract. So we can see that multiple users can actually be streaming interest using Flow Theory contracts. And with that, I'll pass it back to Sunny to conclude the demo.
00:40:19.630 - 00:40:33.598, Speaker A: Thanks Frankie. That was flow theory. We're bringing real and direct cash flow to Web three credit. Follow us at Ox Flow Theory on Twitter where we are marching towards production and you can get all the alpha there.
00:40:33.684 - 00:40:34.606, Speaker C: And if you want to have a.
00:40:34.628 - 00:41:07.910, Speaker A: Deeper conversation on Flow Theory or just want to talk about this idea of real cash flow in onchain credit, you can find me at Sunnyjaser on Telegram or Twitter. I'd love to talk. Thank you so much for your time and attention. I'll turn it back to Kartik. Awesome, congratulations. And yeah, can't wait for more people to use this and give it a shot and try this out in a more interesting DeFi use case. All right, with that we are ready for our next demo and that is Team Interplanetary Font.
00:41:07.910 - 00:41:57.820, Speaker A: So Eduardo and team, whenever you're ready. Hi everyone. We're interplanetary fonts. We are four developers for different parts of the world and our idea is a decentralized NFT marketplace and collaboration platform for creators and collectors of funds. The main problem we want to issue with this product is that funds are usually incomplete and they cover only a specific scripts, mostly Latin. So for font professionals, they only develop one part of the product and the font users only want to pay for what they need to use. That's why we need more multilingual fonts to have a better chance to support all languages all over the world.
00:41:57.820 - 00:42:59.934, Speaker A: Our solution is a collaboration platform which allows creators to add value to fund projects by expanding the support to more regions and be readily visited in real time for their work. And an NFT marketplace that provides collectors a flexible way to buy funds according to their needs and to contribute the expansion of the existing ones. The app interacts with smart contracts with deployed on polygon and the blockchain data is retrieved. With GraphQL. The users are able to fund projects, pay creators using superfluid streaming protocol, mint funds NFTs with IPFS storage and create projects only after verifying with a proof of personhood using Warcoin which also will be good to avoid piracy problems. To encourage connections and collaboration, we will use Lens and EPNS. Okay, now it's demo time.
00:42:59.934 - 00:44:06.860, Speaker A: So here's the home screen of the app. Here you'll have a feed with the recent projects. You can connect your wallet and when you connect you'll have now access to your profile. In your profile you'll have like the creator and collector profile. In the creator profile you have all the projects you have created. You'll have the ability to create new projects, all the collaborations you are involved in, and a treasury which will have the active fund streams you have running and your balance as a collector you'll have all the NFTs you have bought. This is the NFT data.
00:44:06.860 - 00:45:07.680, Speaker A: And you also have the fund stream. You have found it here you'll have access to the superfluid dashboard which I'm already connected. And you also have the ability to fund this stream or collaborate if it's an open stream for a project collaboration. Okay, so now let's go to a font project. Here is the information about that project. And this is the specimen of the font. You can test it and here you will be able to choose which characters you want to buy.
00:45:07.680 - 00:46:25.766, Speaker A: You can toggle between preset char sets or you can choose a custom selection. And when you're satisfied with your selection, you will be able to mint the NFT. Okay, here we see the transaction that is going to be confirmed. And when the transaction is completed, you will be able to download your font. Okay, this pop up window are EPNS notifications that will allow you to know when something's happening with your projects. Okay, so I will let me go back to the presentation. So the next steps are finalize the MVP.
00:46:25.766 - 00:47:10.930, Speaker A: We want to connect the font engine with the Smart contracts, complete the contract for Superfluid streaming, implement Lens on Workline and share the first version with users for UX Research and deploy to mainnet. Okay, thank you. Awesome. Thank you so much for that demo. This is a really nice way to think about discretizing thoughts and a lot of information for artists. All right, with that, we are ready for our next demo and I'd like to welcome Carrie Protocol team. So Ren, whenever you're ready.
00:47:10.930 - 00:47:46.008, Speaker A: Hi. Hello everyone. So we are carry Protocol direct to wallet advertising platform. Okay, cool. The problem we're solving is that marketing in Web Three is hard. Community driven marketing is great for the early stages, but it's not easy to scale to the next millions of users. And in Web Two, data driven advertising is a 500 billion dollar industry and have proven to be extremely effective.
00:47:46.008 - 00:48:41.976, Speaker A: So we thought that we wanted to experiment on how we can leverage on chain information for marketing purposes. So what is Kari protocol? We're a platform that allows web Three companies to advertise to specific customer groups based on their on chain data and interactions histories. So one examples we like to guess is, let's say if you're working on a new gamefight project, initially you might want to target it or advertise to axe or step in users who are essentially already 1ft into the Web Three world as opposed to someone who doesn't even know how to create a wallet yet. So, for a demo, there's two parts of our demo, the Ads Manager and then also the Ads Receiver. Let me just switch to this. So this is our ads manager. I'm going to pretend that I am the marketing team from the Aave Protocol.
00:48:41.976 - 00:49:23.096, Speaker A: Let's create a campaign, create a name. You can select your audience here. For instance, if you're ave, you might want to target people who have interacted with the compound smart contracts before, but never uses the Ave contract before. And this is the estimated audience size, actually the actual data that we query from the graph. But for this demo, we're probably going to do a smaller user size just for efficiency. Confirm. You can also attach some incentives to kind of like incentivize people to basically read your ads.
00:49:23.096 - 00:50:14.750, Speaker A: So you can attach some money there, put in some content, upload an image and then confirm upload the image IPFS. So take a little bit and then attaching Cintus. This process usually takes around like 10 seconds. Essentially what it's doing is it's minting the tokens in the polygon testnet and then put it into the incentives contract, click Create, sign and then back to the dashboard. So essentially the bass is already sent. You could come back to the dashboard and essentially this is a place where you can look at the metrics for different ads campaign. You can also use this chat bot to chat with the carrier protocol team.
00:50:14.750 - 00:51:02.550, Speaker A: So if you're from the list of people who receive the ads, essentially you'll come to our website and you receive these content come in, you can basically consume the content, look at the images, and then you can claim your AirDrop here. I'm just going to do it very quickly. And done. There's also a link to the website if you want to attach a link. If you go back here, refresh a little bit, basically your earned earnings will goes up and yeah, so that's the demo. Thank you for listening. So we're planning to continue working on this platform after the hackathon.
00:51:02.550 - 00:51:29.570, Speaker A: We want to build the APIs to connect with more advertising spaces in addition to our DApps like Wallets, Metaverses and websites. Feel free to reach out to us on Twitter if you want to use our platform and thank you for listening. Awesome. A full advertising platform that is on chain and native. This is amazing. So hopefully you get to launch this and others get to try this out. And congrats for demoing.
00:51:29.570 - 00:51:39.220, Speaker A: All right, next up we have L2 optimizers. So Ben and Matt, whenever you're ready. Awesome. Thank you.
00:51:40.170 - 00:51:57.574, Speaker C: Going to go ahead and share my screen. So our submission to the ETH online 2022 hackathon is called the L. Two optimize. Sorry, my team told me I had to do it that way. And speaking of the team, it consists.
00:51:57.622 - 00:52:01.782, Speaker A: Of Matt Solomon, Ed Mizurich, David LaPrad.
00:52:01.926 - 00:52:40.214, Speaker C: Gary, Harriet and myself, Bendy, Francesco. We're all engineers at Scopelift, a crypto focused dev, shop building, smart contracts and more in the Web Three ecosystem. So for this hackathon, we built a series of gas efficient routers for L2 applications. Let me tell you a little bit about how and why these work. So, as you may know, layer two networks share security with mainnet by posting transaction call data back to layer one. In particular, roll up style networks do this. As a result, layer two users actually have to pay their portion of this main net gas when executing their transactions on layer two.
00:52:40.214 - 00:53:26.850, Speaker C: Now, because layer one gas is much more expensive than layer two gas, 25,000 times more expensive or even greater than that, paying for this call data on layer one ends up dominating your l Two transaction costs. So by recognizing this reality, we were able to write a series of custom contracts that optimize for call data using much less of it, and as a result, significantly reducing the actual transaction costs that users pay. So how well does this work? Well, to find out, we wrote, deployed, and tested routers for three popular protocols. On the optimism network. On Ave, we saw up to a 27% reduction. In particular, when depositing and withdrawing ETH. For Superfluid, we saw a 34% reduction when starting a stream of USDC.
00:53:26.850 - 00:53:41.370, Speaker C: And for Connect, we saw up to a 46% reduction when testing the token bridge. This was on the optimism testnet, by the way. Now it's time for a quick demo. Hopefully, the demo gods will be with us.
00:53:41.520 - 00:53:42.746, Speaker A: I'm going to hop over to our.
00:53:42.768 - 00:54:21.650, Speaker C: Front end, and for this demo, I will deposit zero One ETH into Ave. I'll go ahead and confirm the transaction while we're waiting for that to be mined. I should note that while we built a custom front end in order to demonstrate this for the hackathon, there's really no reason that you need to have a custom experience. In fact, the user experience isn't changed by our contracts at all. The only thing the user should notice differently is that their transaction fees are lower because they're using our optimized contracts behind the scenes. So if we head over to our Ave dashboard, we should be able to see there it is. Zero One ETH has been deposited on our behalf.
00:54:21.650 - 00:54:50.062, Speaker C: We could come back here and we could do the withdrawal transaction as well. The optimized withdrawal. In the interest of time, I'm instead going to show you a couple of withdrawal transactions that we've done in the past on Etherscan. This first transaction is not through our optimized contracts. This is through the standard Ave contracts. So we perform the withdrawal, and what you see reflected on Ether scan down here is this reality that I was discussing earlier. We have our L2 gas and the L2 gas that we use.
00:54:50.062 - 00:55:18.362, Speaker C: But that L2 gas is very cheap in GUI terms. Now our l One gas, we use much less of it, but it's much more expensive in the GUI that we use. In this case, we use 4700 l One gas and we're paying 16 guay. If I hop over to now an optimized version of this same transaction, it runs through our custom router contracts. Those router contracts call into the same Ave contracts that we used before. So it's doing the exact same action. It's just optimized for call data.
00:55:18.362 - 00:56:06.470, Speaker C: And what you see down here is that our L One gas used went down by about 1000. And because the L One gas cost is much more expensive in GUI terms than the L2 gas cost, the amount of savings is significant here. So to expand on that, let me hop over to this spreadsheet where we summarize the results that we saw and give you a sense of the assumptions that we're making when we provide these numbers. So you'll see our savings for different actions on the order of 20%, 27%, 10%, 47%, et cetera. The assumptions that we're making here are 25 GWe main net gas, one L2 gas. This is reflective of reality and one $600 ETH price. Not as reflective as reality right now, but hopefully that goes back up soon.
00:56:06.470 - 00:56:53.666, Speaker C: What you'll notice is if we increase the L One gas price to say, 250 GWe, and we've definitely seen that in the past, the actual cost of the transaction scales by ten X as well. So this goes from about fifteen cents to about one dollars 50. And the amount that we're saving also goes up by ten X. So as L One gas prices go back up in the future, as demand for block space increases, the optimizations that we're doing here also scale by the amount of L One gas and become even more important. So with that, I'll hop back and just talk very briefly about the future. For optimizer, we'd like to build out more routers for other popular protocols and get this working on other layer two networks. The same principle applies to any roll up and we'd love to help integrate these routers directly into front ends for protocols.
00:56:53.666 - 00:57:13.118, Speaker C: Like we said, there's really no reason the user experience needs to be any different. They just need to interact with these optimized contracts. So if you work for a protocol and you're interested in saving your users gas fees, please get in touch. We'd love to help you out. We also invite everyone to take a look at what we've built. You can check out our contracts repo, our front end repo. You can also use the demo.
00:57:13.118 - 00:57:23.090, Speaker C: Note that it is hackathon level code, so use it at your own risk. And with that, I'll just say thank you to Eve Global for a great hackathon experience and thanks to you all for your attention.
00:57:24.710 - 00:57:48.150, Speaker A: Thanks Ben. Thanks Matt. It's way too early for me to introduce you originally with the proper name, but this was a great demo and hopefully this also becomes a great project like umbra, congratulations. And with that, we are ready for our next team. So I'd like to welcome Zero XOS and TZ.
00:57:51.230 - 00:58:23.174, Speaker F: Hi guys. I'm going to share my screen. So hi guys. We're Zero XOS and this is our hack on Ethereum Online 2022, where you're building the guard for the future NFT Financialization. And let's get saucy. The presentation agenda includes four parts, the motivation key features of our current product, the product demo, and lastly, we include our tech architecture in the appendix. Over $100 million in NFT have been stolen in the past 14 months.
00:58:23.174 - 00:59:36.466, Speaker F: In addition to stolen NFTs, over $8 million of the fund have been laundered using NFT to prevent cybercriminal scam and fund laundry centralized NFT marketplace such as Openc blacklisted suspicious assets and freeze them from trading during the investigating period. However, this will cause a problem of this. Compromised NFT may flow into the permissionless decentralized protocols and cause unfair trading for the on chain users. With the emergence of more and more decentralized NFT financialization protocol such as NFT AMM, NFT Loan and NFT fractionalization, there is a solid need to source NFT before users can treat or perform other tasks. So above is our motivation for Zero XOS. We're here to build an on chain NFT sourcing Oracle and we want to contribute to make a healthier and more ethnical NFT ecosystem. So here is what we have firstly we build an on chain Oracle and we deploy it to ethereum optimism and polygon mainnet.
00:59:36.466 - 01:00:16.122, Speaker F: Our contract is Callable and developers can call to source NFT before performing other tasks. And then we set up off chain subgraph and created data streams on dual analysis for developers to make convenient query. And lastly, we build a front end website for users to check any blacklisting information. We set our push channels and we used Covalent to monitor several criminal address in transactions. And let's take a look of our product demo. So, here is our home page. Users can enter any counter address and item info to query if NFD is suspicious or not.
01:00:16.122 - 01:01:16.074, Speaker F: Here we have a Board Ape address and this is for token ID 21 62 and if we make the query it should be blocked and check on open say yes it is blocked and if we switch to 21 61 and we should be good, yes. So storing and updating each blacklist item is expensive on chain we perform a markle tree data verification. Data verification so instead of storing all the address and item ID, we only need to store a 32 bytes markle tree root for each collection. And then we save the rest of the markle tree leaves on IPFS. So under the collection page we have listed six blue chip collections. Our current data source come from mainly two places. First is OpenSea snapshot.
01:01:16.074 - 01:02:01.020, Speaker F: We constantly query from OpenSea API and take snapshot of all the blacklisted items from OpenSea that are tagged by OpenSea. And secondly we query all the scam address that are labeled by Certic, Slow, mist and scam sniffer. And we regard all the NFT under those scam addresses as all blacklisted. We know the current data source is not perfect and we will do multidata source for cross validation. And maybe further like the high reputation Webster identities could be our potential data validators. And those two are. On our priority in the to do list.
01:02:01.020 - 01:02:50.954, Speaker F: Under the notification page we have the subscribing button and subscribers of our channel will be updated with the most recent NFT blacklisting information. And here is our subgraph. Developers can easily to query our most updated token proof in the subgraph. And here is our documentation. So in the documentation we show the example of how to verify NFT source before doing NFT swap in solidity. And for more information, welcome to check out our GitHub repo. Thank you guys all for watching.
01:02:50.954 - 01:03:21.842, Speaker F: And zero's exos is consisted by two DeFi and blockchain security engineers. We're chain agnostic and we focus searching for vulnerability in solidity and other smart contracts. We want to bring fairness and security to blockchain. Thank you eastglobal and thank all the rest of the teams. We really enjoy this hacks on journey. And here is our technical architecture illustration. Welcome to DM us on twitter or submit any pull requests on GitHub.
01:03:21.842 - 01:03:23.800, Speaker F: And that's it. Thanks.
01:03:24.890 - 01:03:42.620, Speaker A: Thank you TZ. This was awesome. And hopefully everybody also gets to use it and check it out and keep their NFT safe. All right, this was demo number ten. We have four more to go and then we're going to get to the prizes. So without further ado, let's welcome Igor from refi. Igor, whenever you're ready.
01:03:42.620 - 01:04:13.810, Speaker A: Yeah. Hi everyone. Just shared my screen. Okay, so we are team web phi. My name is seager. I'd like to present our project that we build for ETH online 2022 revenue based DFI lending marketplace. So what we build is a bridge and a marketplace connecting web two revenue generating companies such as ecommerce companies, SaaS businesses, direct to consumer businesses, gaming or app development firms.
01:04:13.810 - 01:04:55.784, Speaker A: And we connect those with DeFi investors wanting to invest in a new asset class. So the best way to explain a project basically would be with a demo. So what we have here is our marketplace, a front end dashboard, basically. So what I'll do first is I will connect as a borrower. So basically what I've connected as a company who wants to borrow money. What I would go is go to the borrow tab and start the process. So the first step would be to connect to my sales platform such as stripe.
01:04:55.784 - 01:05:43.900, Speaker A: So what I would enter here is stripe key. So what happens now is that we connect to stripe. We pull the revenue report about that company and present it to the user so we can see how much money this company has generated over a period of time. So what I do is fill the information about my company or the thing that's needed specify how much money I want to borrow. The interest rate is preset at 10% and usually this step takes the longest. So I'll explain actually, what's happening here whilst the transaction is happening is that when we press Mint, the system would take the information about the company that the user pre filled would take the revenue report data, that is. Pulled from Stripe and upload those to IPFS.
01:05:43.900 - 01:06:48.164, Speaker A: Then the system would mint this NFT and upload the data to IPFS to metadata of that NFT. So looks like the NFT has been created here. We can see this information. So it's created company name how much money I want to borrow and then the revenue that I've generated which is pulled from Stripe so what I'll do next is I will connect as a lender so the other side of the marketplace would connect my wallet and as a lender, what I do is browse all the available loans that have been created by borrowers. Here is the latest one that I've created you can see the company information all the company data, how much money the company wants to borrow, how much revenue this company has generated. And then if I like this, what I could do is lend to that firm so we can see again the amount of money that the company is asking for. So let's say, let's fill it fully.
01:06:48.164 - 01:07:16.636, Speaker A: I can do it pay via crypto or pay via an onramp. So for this example, I'll use Pay via crypto for my crypto. Wallet. So here what happens here is that the money is being sent from the lender crypto wallet address to the borrower account. The money is being sent hopefully transaction. Yeah, there you go. Successful transaction.
01:07:16.636 - 01:07:36.572, Speaker A: We can see the hash, all the loan details, and then I've sent money, basically, to the borrower. So what I would do next, actually, is log in as a borrower. Back to the dashboard. My wallet again. It's quite a lot of hopping. Around here. That's the problem of marketplaces.
01:07:36.572 - 01:08:05.004, Speaker A: A lot of users. So what I could see on my dashboard is I could see that the loan request for zero automatic has been filled by the lender, which I have done. Before. So what I could do is withdraw those funds and then use that money to grow my company, hire more people, go expand to different markets. And let's say I've then generated some revenue and I'm ready to repay. The lender. So I specify how much money I want to repay usually would be a percentage of the revenue that the company is making.
01:08:05.004 - 01:08:55.524, Speaker A: And then we can connect directly to the Stripe account to see how much money company is generating like it and repay the lender, let's say five matic. Five matic. And then here the money is transferred from the borrower account to the lender wallet. And again, hopefully the transaction is not being delayed for too long there you go repayment has been successful so I can see basically just by refreshing the page is that what I've done? Is I repaid five matic five I take off eleven matic back to the lender. And what it does is it shows the entire process basically, of our DeFi marketplace. So how it's made. So we use NextJS for the front end.
01:08:55.524 - 01:09:29.372, Speaker A: We connect to Stripe to put the revenue reports about the company. We use Alchemy to connect front end to the blockchain. We sign in with Ethereum for the session management and the login. The application is utilizing and using polygon blockchain on the back end. For this specific example, we're using mobile testnet ERC seven to one standard for the NFT creation. And we store all the company information and Stripe revenue data to IPFS. And for the future, what we envision is utilize Ave credit delegation function for the lenders.
01:09:29.372 - 01:10:10.130, Speaker A: We also want to build a scoring mechanism to help improve the assessment, basically of the borrowers to the lenders and also build on and off Rams to help Web Two companies to be on boarded to Web Three. So, thank you very much. It's been incredibly fun to work on this project with my team and let's help to build more bridges between Web Two and Web Three companies. Thank you very much. Thanks Igor. Hopefully all of us get to use this thing because it's such a nice way to think about bridging with real world assets and using Web Two and just normal information to actually amplify what you're doing as a business. So I can't wait for others to also try this out.
01:10:10.130 - 01:10:22.196, Speaker A: Next up is our third last project for today. Want to welcome Turbo Dipass to demo what they built? Whenever you're ready.
01:10:22.298 - 01:11:04.640, Speaker D: Okay. Hello everyone. Just a moment. Okay, we're live. So we built True Body ipass, which is just no code web free integration solution allowing everyone to create integration workflows without using any code. So the project really systems integration that everyone can use just using GUI configurations to do it. And it's based on robust integration engine we built with pluggable integrations.
01:11:04.640 - 01:12:20.504, Speaker D: And it supports multilayne integration pipelines with conditional transitions. Additionally, we created expression. We used very powerful Expression parser which allows us for very sophisticated data mappings. And it's basically front end graphical designer that anyone can use and back end integration engine that runs those integrations. So, user interface are really based on three things activity Editor when you create activities and transition between them, shared resources that you can share between many activities, and output mappings that you can remap in other activities. So I will demo it in a moment, but possible use cases for now are limitless. So be it monitoring, be it crosschain integration, automation, business process modeling, things like that, or even Arbitrage bots, or allowing anyone who just don't know how to code and would like to do something free to integrate with it.
01:12:20.504 - 01:13:18.632, Speaker D: So our future plans are to expand this product, basically add new activities and make it easier even for user to use. So I prepared some live demo. So for the starters, this is how it looks and let me create some simple integration. So, let's start with scheduler that just runs only once. And we are just now creating new we are creating new activity. I'll add Abi to be able to connect to the EVM and also generic EVM connection in the first step. So having that done sorry, having that done, I can now pin it shared connections.
01:13:18.632 - 01:14:02.296, Speaker D: I can see the functions to invoke right now. I'd like to get latest round data and as you can see here, it automatically gets the data from there. We also have resolution from ENS and Idris. This is our first step in the workflow. So I'll skip a few things just to show you how it's created. So then I just create two additional transitions from this invoking of smart contracts. One just says that it's too pricey and we are doing nothing if the price is too big.
01:14:02.296 - 01:14:50.552, Speaker D: However, if it's below certain threshold, we are invoking second activity which is our decentralized exchange. And lastly, we just lock if it fails or is successful. So let me now save this flow and start it. Of course it's life on testnet so it will take some time in order to run, but we'll see. So for example, if it succeeds here, we will just log that transaction. Okay, I think that we have it just to see if it's here. It's still pending but come on.
01:14:50.552 - 01:15:45.476, Speaker D: So it will be done in a moment. We also have some additional examples. For example, if you want to pay some payroll system based on Ethereum crosschain. So we have this smart contract that we can call. So let's see that the contract itself is built on Ethereum but we want to pay someone on a polygon. So we are just creating this simple integration and when the time comes, it will be actually sent to the smart contract. It will listen for the events and if something happens, it will pay the user.
01:15:45.476 - 01:16:21.350, Speaker D: So in this flow so first we listen for the event, then we are getting some metadata about the user. Then we are invoking smart contract deed. For example, chain ID Free, which is EVM Robson or Mumbai? We are using different addresses, however the same APIs to do so as you can see, it was sent even twice because I clicked it twice, but it works. So that is all for the demo and I hope you liked it.
01:16:28.240 - 01:16:44.770, Speaker A: Sweet. This was great. All right, just give me 1 second to make sure everything is on track for the next demo. And yeah, thank you so much.
01:16:45.140 - 01:16:46.370, Speaker D: Thank you very much.
01:16:46.820 - 01:17:09.080, Speaker A: Hopefully we all get to use this thing and I can't wait for no code EVM architecture design. That sounds fun and risky at the same time, but more fun than risky. This is great. Well, thank you so much. And with that, we are ready for our second last demo for today. So without further ado, I'd like to welcome Corbin to talk about Noob wallets and lensmo. Hey, Corbin.
01:17:10.460 - 01:17:39.584, Speaker C: Hey everybody. All right. Hi guys. So for ETH Online this year we created noob wallets. Noob wallets are a non custodial smart contract wallet for newbies or for mainstream users. It's tied to any social media account like a twitter, a GitHub, or a discord ID. But the unique thing about noob wallets is you don't create a noob wallet for yourself.
01:17:39.584 - 01:18:16.792, Speaker C: You create them for other folks. So your friends, your family, celebrities, really anybody on the internet, you can create a new wallet on their behalf and send any type of NFT or assets to that wallet and they can claim it when they're ready to onboard into the web3 economy. We think that this is a really powerful crypto primitive that can be used for all types of interesting use cases. Things like NFT airdrops to twitter followers without needing to collect an ENS. You can send it straight to their twitter username. You can send NFT birthday cards to your mom. She doesn't need to install or set up a MetaMask wallet.
01:18:16.792 - 01:18:48.916, Speaker C: You can just send it to her email or her twitter username. Businesses can set up noob wallets on behalf of their customers with no onboarding required. And folks like charities can accept donations straight from their twitter handle rather than having to set up any type of custodian. So noob wallets is the protocol layer. We also have an application layer called lensmo that I'll demo here in a second. So what problem are we solving? Mainstream user onboarding. So centralized exchanges and confusing non custodial wallets just aren't doing the trick for mainstream users.
01:18:48.916 - 01:19:18.812, Speaker C: These aren't traders, these aren't investors. These are just folks that want to do fun stuff online and then get on with their life, right? So we want to have a wallet for this big part of the adoption curve. And we think new wallets are going to be that. We think everybody on the planet really should have a web3 wallet and kind of start contributing to the web3 economy. So as I mentioned, noob wallets are noncustodial smart contract wallets tied to your social media account. They're also completely composable. So we actually tag every noob wallet that's been created.
01:19:18.812 - 01:19:47.932, Speaker C: This is our leaderboard on dune, and you can see we've set up noob wallets for twitter. Elon musk, twitter vitalik. This is GitHub, linus Torvald. This is twitter jack and on down. I actually did a twitter AirDrop earlier this week, and anybody that retweeted this tweet, I sent them $10 in USDC. They got a new wallet set up in the background and they can use their twitter account to then claim that value. So let's go ahead and do one.
01:19:47.932 - 01:20:16.320, Speaker C: So I'm switching over to the lensmo app again. This is the application layer. With lensmo, you can actually send cross social network airdrops as well as sending tokens to anybody with a social media account. So I'm going to check out twitter jack here and check out his noob wallet. So this is jack. He's been airdropped 15 USDC. I can give him more tokens or send him one of my membership NFTs.
01:20:16.320 - 01:20:58.130, Speaker C: And if I'm actually jack here on the page, I can claim through this flow, claim all the assets in this wallet. If we go back, we're actually going to do an AirDrop. So I've set one up here to AirDrop to a couple Twitter users. This is Drake the Rapper, Cristiano Ronaldo, and then a charity that helps folks with medical debt. I don't even know if this charity actually accepts crypto, but I'm going to go ahead and send it to their new wallet tied to their Twitter account and they can claim it when they're good and ready. I'm also going to be sending to some of our favorite folks on GitHub, Lens and ENS, all in the same transaction. So let's come over here, input it here.
01:20:58.130 - 01:21:52.170, Speaker C: We're going to do an approve and then send it out. Now, note that Lensmo sends to both web two and web3 social networks. So for things like Lens Protocol and ENS, we're not actually setting up a new wallet because the users have a wallet associated with those accounts, right? They're web3 social networks for Twitter and GitHub. Obviously, there's no connected wallet, so we're setting up a new wallet in the background so that they can claim those assets when they're ready with the social attestation. This is taking a bit to mine, so you can see here I have a transaction from earlier of the AirDrop kind of all going through. So how does this work? Flipping back over here. So noob wallets are built on top of the nosis safe or the Safe Dao.
01:21:52.170 - 01:22:37.486, Speaker C: We use a custom zodiac modifier to do the social attestation for a user to then claim their noob wallet once they're good and ready. And we drop a soul bound token to that wallet, which actually gives us the tagging of Twitter Elon Musk that can be used in Dune or Portfolio tracker apps or other DApps kind of across the Web Three space. We're really excited about this primitive. We think noob wallets can help onboard millions and millions of users into the crypto economy. We think it has the ability to kind of mature itself into a full flung protocol over time. So if you'd like to do a Twitter AirDrop or if you're interested in partnering in any such way, DM us at Paymagic on Twitter and we'd love to collaborate. Thanks so much to all the eflow online community.
01:22:37.486 - 01:22:40.800, Speaker C: We had a blast, as always with our hack, so thank you.
01:22:41.810 - 01:23:20.538, Speaker A: Thanks so much, corbin, Rory and Mike. This was awesome. We also got a comment from the live stream saying if you want to check out Sendcrypto money, you can also combine this thing with a way to receive payments to an address that is not claimed yet. So seems like there's a lot of opportunity in this model, and I regret not retweeting that a few days ago. So thank you so much, hopefully we all get to see this and hopefully the medical dev charity accepts cryptoc because this will be a really awesome thing if it works out. Maybe if all of us retweet, maybe they pay enough attention to actually set that up. So thanks again.
01:23:20.538 - 01:24:25.090, Speaker A: And with that, we are just about at the tail end of our last finalist demo for today. We have our 14th team that is no cost subscriptions, we're just getting them on to live stream here so whenever they're ready, we'll get them to start the video and go in with the demo. One interesting thing that I'll kind of preface with our last demo is that we weren't sure if they were going to be ready in time. The team is based out of Florida and they are just about to be hit with Hurricane Ian. It was not an easy time for them or anybody else in that state right now and we kind of weren't sure if things would work out from a timing standpoint, but looks like we're about to just onboard them. So we'll give it a few more seconds and see if they're ready. And if not, we do have a backup plan which is we knew about this ahead of time and we have a recorded video of their demo that we looked at last night and we'll play that if we run into any technical difficulty.
01:24:25.090 - 01:25:15.330, Speaker A: So I'll check if the team is good to go here, but if not, then we will play the video. But in the meantime, as we're getting them set up, there might be some latency issues here set up. It's been incredible to see just a variety of what people are excited about. We've seen a lot of infrastructure projects, we have seen people caring about how to bridge things with real world. We have seen people use DeFi in more interesting ways. One obvious theme which keeps becoming more and more prevalent is streaming money. Just people finding way more interesting use cases of streaming money in real time.
01:25:15.330 - 01:26:40.410, Speaker A: And it's kind of been pretty interesting to kind of say hey, all these ways we think about what crypto can do, what smart contracts can be used, are just making things a lot easier for us to make more and more consumer ready apps. And I am excited to see what this kind of gets us in a few months because the progress has been so immense and it's so fast that it gets me super excited. Not only that, one thing that as we were looking at some of the stats for this event, it was pointed out by one of our team members, is that we measure our success by seeing how many people in this space we bring on and how many people stick around after we have different metrics. We look at retention, we look at how many individual brand new people coming into web Three. We look at their skill sets and the step that kind of blew my mind that we learned and computed just about 30 minutes ago is that the number of individuals that are participating in this ETH Online 2022 as individual hackers is more than all the people that participated in all of 2020 in ETH Global. And that just blows my mind because that is incredible growth. This is just one out of the 16 events we're doing at similar scales.
01:26:40.410 - 01:27:30.830, Speaker A: And it is just insane that we're seeing so many people get more and more excited about what they can do in Web Three. So I can't wait for the next Heathon line because I think we need to ramp up our team just so we can handle the number of projects we're going to see. And not only that, there are a few more hackathons we have left this year alone, so we're going to see if we can break our own records, and that'll be a good shot. So with that, looks like we are still running into technical difficulties. What we'll do is play the video that we already got from this team, and if they come on, we'll kind of just bring them on at the end. But without further ado, let's welcome our last demo no Cost Subscriptions.
01:27:33.330 - 01:27:56.046, Speaker G: Hello, everybody. My name is Joel. I'm from no cost subscriptions. And thank you, East Global, for hosting these fantastic hackathons. No Cost subscriptions are a new subscription model that enables users to support their favorite businesses by saving money with them at no cost to the user. It's somewhat similar to how pulltogether works. We scroll down to our subscriptions.
01:27:56.046 - 01:28:38.980, Speaker G: A user can subscribe to a product or service by saving or staking to initiate a no cost subscription. The membership is represented by an NFT that is received after staking. For example, Apple can park some of its 17 billion in cash into an AWS no cost subscription to gain access to cloud services. And then Apple could withdraw or switch to monthly billing at any time. At a smaller scale, a discord community can create a subscription that allows users to gain access to different channels and resources, and the user can return the NFT and claim their stake at any time. So let's go ahead and create a subscription. We'll call this one streaming service, and we'll give it a value of one for our demo.
01:28:38.980 - 01:29:32.832, Speaker G: Then we'll go ahead and do that transaction to create the subscription. No cost subscriptions allow businesses an alternative to monetization without ads, which track sensitive user data. Instead, they create revenue by aggregating liquidity for global DeFi markets through the NCS protocol. In the future, subscription creators can select their risk level by choosing between different yield aggregators or safer yields like Aave Stablecoins. When their client subscribes to their business by staking or depositing, the yield from the deposits is redirected to the business. All right, so our subscription should be created. We'll go ahead and refresh, and we'll change our theme up and we see that our subscription is right here.
01:29:32.832 - 01:29:34.560, Speaker G: So let's go ahead and subscribe.
01:29:47.700 - 01:29:48.064, Speaker A: And.
01:29:48.102 - 01:30:33.840, Speaker G: We'Ll confirm that that would actually go and create the subscription. So while that loads, I do want to show you our tech stack. NCS is a set of smart contracts deployed on the polygon and optimism blockchains and is built on a VJs frontend. The primary smart contract is the NCS Subscription Factory, which is responsible for creating the subscriptions. The subscriptions themselves are also smart contracts that can deploy NFTs, deposit into Aave and distribute yield to the creator. We also use NFT port to validate if users own a subscription to give them a dynamic view in our UI. We also included a hard hat configuration with unit testing in our GitHub repo.
01:30:33.840 - 01:31:33.270, Speaker G: All right, so we should be subscribed now. So if I refresh that Tile will update and we'll see that we are subscribed. So we could also do a deep dive here and look at the actual transaction, and we'll see that our money was deposited into Ave and that we also received the NFT, which acts as the membership for that subscription. And now I have access to that streaming service as an example, then at any time I could go back and unsubscribe and swap back to a monthly subscription with some additional time. We would have loved to build up a ramp up model where maybe the user doesn't have to deposit 100% of the stake at once. Instead, if they deposit 50% of the stake now, they have a 50% discount on the monthly subscription, and over time they could continue to build up their stake with that company and eventually hit that 100% mark. That makes a subscription free.
01:31:33.270 - 01:32:16.530, Speaker G: The mass adoption of no cost subscriptions will create more accessible liquidity to the global DFI markets by driving more locked liquidity into DFI protocols, promoting healthy financial behavior for consumers, a sort of saving to consume model, and allowing for monetization without farming sensitive user data. Imagine a future society that incentivizes people to focus on building up their savings to gain access to the services around them. It seems to me that this is a much healthier society. It is as if every saving milestone achieved unlocks a new feature in the world around you. Thank you.
01:32:20.680 - 01:32:52.190, Speaker A: Awesome. That was a recorded demo of the no code subscription team they're building just as the name applies a way to do subscriptions without any cost. I said code before, it's no cost subscriptions and kind of similar to pull together. You get to think about a better way to subsidize and amortize the cost here. So it's a really unique idea and a really awesome demo. So hopefully people get to try this out and make this more of a known concept. Just as a note to everybody, we have heard back from them.
01:32:52.190 - 01:33:39.320, Speaker A: They are safe. We are in contact with the team. There's just connection issues with the Internet there. So we just want to wish everybody in Florida our best and hope that everybody stays safe out there and hopefully there are no serious damages because of the hurricane. So those were all of our 14 demos. And with that, I'd like to kind of continue off and congratulate all 14 of these teams. Telescope carry Protocol, ENS everywhere, l Two, Optimizers, stacker network, zero XOS, water drops, refi INRI synth, turbo, dipass, flow theory, new wallet, interplanetary fonts, and no cost subscriptions.
01:33:39.320 - 01:34:27.016, Speaker A: For being amazing and doing live demos here today, an amazing kind of common theme here is that almost everybody is ready to be used by you. They're deployed, they have a website, you can check it out in the demos if you just scroll back and see the URLs. And these are things that are being made for people with specific needs and just things that people are building because they need them too. And it's awesome to see more and more of this continue as a pattern. And I can't wait for more people to build more things that others want. So for those of you who joined us in halfway, you can head over to Ethglobal.com Showcase to see all the 360 projects that came out of ETH Online, including our 14 finalists.
01:34:27.016 - 01:35:05.524, Speaker A: They will be able to see a lot more detail around what they built, screenshots, source code, websites for live demos and everything else. Now, let's get to the stuff that I know a lot of you have been waiting for, which is prizes for this whole hackathon. There's over $350,000 being given away in prizes, so I will get us started now. First up is Ave Grandstal. So a lot of prizes to a lot of teams here. For the credit delegation category, Loki wins first place with $3,000 and Loaned wins 1000 for the runner up. For the stablecoin growth category.
01:35:05.524 - 01:35:40.284, Speaker A: For using Ave protocol. No pool, no game wins. First place for 3000. In appear finance gets runner up, $1,000 prize. For the best Ave Forex Tool category, big Shot gets 3000 for the first place and Rush as the runner up for $1,000. The best accessibility related hack using Ave Senate gets 3000 and no cost subscriptions will be taking in 1000 for the runner up price. And the transaction builder category using the Ave SDK one stop order, dispatch takes in the first place $3,000 prize and Token Flow for $1,000.
01:35:40.284 - 01:36:02.084, Speaker A: Runner up. Congratulations to all these teams. Next up, we have polygon. Lots of winners for Polygon as well. They had a category for how do you scale decentralized applications on polygon? By deploying and using Polygon as your destination. Tribiz wins first place, $5,000. Proof of Product takes in second place, $3,000 for this category.
01:36:02.084 - 01:36:48.152, Speaker A: And Epoch Protocol will be taking in $2,000 for the third place. And the most innovative DAP built on polygon goes to noob Wallets for a $3,000 prize. Congratulations to all four of these teams. Not only that, these seven projects are also on the top seven runner up prize, receiving $1,000 each. So congratulations to Isekai protocol aspis Markle PO n finance proof of people and reputable. Next up we have Superfluid best overall hack goes to AVO Bankless, receiving $4,000 with the best Superfluid integration. And there are three best DPI hacks using Superfluid winners receiving $1,000 each.
01:36:48.152 - 01:37:30.452, Speaker A: So congratulations to fluidy JPEG X fluid and fluid options protocol. There are also a few other categories that Superfluid is offering. So the best now hack goes to Proof of Loyalty and Onram Quest, receiving $1,500 each. And the best gaming hack using Superfluid is Arbo and they're going to receive $3,000. And then D Event and L, two optimizers are going to receive 1500 each for the best futuristic hack using Superfluid. On top of all of that, there's 42 teams that are qualifying for the prize for the pool project. The pool prize project.
01:37:30.452 - 01:37:53.496, Speaker A: I just looked at the comments on the chat and you are absolutely right. But that's the fun part. There's going to be 42 teams that are going to be receiving the pool prize, which means $4,000 will be split 42 ways. So I will not be able to read all 42 names, but congratulations to all of you. You can screenshot this, but if you don't, you will still let you know what you've won. But there's a lot of winners using Superfluid. That's incredible.
01:37:53.496 - 01:38:36.728, Speaker A: Next up is WorldCoin. All right, the best overall app that uses WorldCoin proof of preservation of person hit protocol is Ranger Up, receiving $4,000. The best social app is the Event, receiving $3,000. And we have five honorable mentions receiving $1,000 each and that's PAYD digital Coupon, NFT D, News, Manufy and Nature to earn congratulations to all seven of these teams. And then there are 20 teams that are going to be splitting $8,000 for the pool prize category. So congratulations to all of these teams for being the winners of the World coin pool prize. Next up we have optimism.
01:38:36.728 - 01:39:11.844, Speaker A: All right, a lot of categories for optimism. So best NFD infrastructure prize goes to ENS everywhere, receiving $5,000 for the best NFD infrastructure on optimism. And then two $2,500 prizes go to Open Proof and on Ramp quest. Then the best optimism game prize goes to no Pool, No Game and Arbo, and they're going to be both receiving $2,500 each. The best community infrastructure prize goes to Senate and Bounty Granter. Both are going to be receiving $2,500 each. And these ten teams on remquest Open Proof ENS everywhere.
01:39:11.844 - 01:39:51.236, Speaker A: No pool, no game. Arbo senate bounty granter Git, Anchor Zkauth and Cybersquirl XYZ are also going to be considered the top ten. Optimism integrations receiving additional $250 each. Next up we have scale. So the grand prize for the best scale integration goes to send crypto for $5,000 and you'll be receiving $5,000 in scale tokens. And then there are four projects that are going to be receiving the Metaverse and the Gaming NFT integration projects prizes for using scale. They're going to be receiving $2,000 in scale tokens each.
01:39:51.236 - 01:40:31.148, Speaker A: So congratulations to Comma. Timely task. Decentralized job board and NFT ticket. Then we have the best partner integrations for scale and that goes to Telescope and NFT Ticket that are going to be receiving $2,000 each. And these eleven teams are going to be receiving and splitting 5000 each from the pool prize. So congratulations to Send Crypto Telescope NFT timely task, decentralized job, board comma metamase uchi Petsfundme rock Age and Digital coupon NFT Next up, we have push protocol previously known as EPNS. So the best use of Push goes to FlexiPay.
01:40:31.148 - 01:40:49.348, Speaker A: Then we're going to be receiving $4,000. Etube ethub. Ethube. I don't know. I'm sorry. I apologize for messing this up. Is going to be our second place winner for 2500, and Carry Protocol will be receiving third place best push Protocol integration for $1,500.
01:40:49.348 - 01:41:24.684, Speaker A: And these five teams are the runner ups, receiving $400 each. So congratulations to Metadata RapidX near Friends requesto and Dchat. Next up, we have AP wine. The Wine Connoisseur category goes to NFT Metaverse, and they're going to be receiving $5,000 in APW Tokens. And the scholar category winners are Map here Finance, and they're going to be receiving $2,500 in APW tokens. Next up we have Aurora. So there are three winners here for the best use of Aurora.
01:41:24.684 - 01:42:01.980, Speaker A: Telescope wins $5,000 for the first place and best integration on the near EVM. Aurora Bridge Blockhead gets second place for $3,000. Napier Finance will be taking in $2,000 as the third place best integration of Aurora. Then we have urine finance. Napier Finance will be taking in $5,000 for the best use of urine as well. AVO Bankless comes in second for $3,000 and LAN will be taking in $2,000 for being the third place winner. Then we have ENS.
01:42:01.980 - 01:42:36.436, Speaker A: Lots of amazing projects using ENS as well. So the platinum category winners are sublettis going to be receiving $3,000 for the best ENS integration for the Obelisk category. ENS Everywhere will take in $2,000 for being the best project. World Hash will be taking in 2000 as well for being the best. Bob category prize integration. The ETH Classified gets 1500 for the fried X category, and Nick's favorite is Caramel, receiving $1,500. So congratulations to all five of these teams.
01:42:36.436 - 01:43:15.700, Speaker A: Then we have hyperlane previously abacus the best use of Hyperlane is going to be Heat and Finance, and they're going to be taking in $4,000 each. Congratulations. Next up is the best DFI integration on Hyperlane and that is Easy Swap for $2,000. Mint Your Love will be taking in $2,000 for the best NFT integration on Hyperlane. And the best infrastructure project on Hyperlane goes to D Oracle for $2,000 as well. So congratulations to all four of these teams. Then we have live peer.
01:43:15.700 - 01:43:49.424, Speaker A: Cherry TV will be taking in $4,000 for the best Live Peer on Demand API integration ligmax will be taking in 2500 and Raindrop will be our third place winner for $1,500. And then there are two honorable mentions. That is Dchat and D event. They're going to be taking in $1,000 each for the best live peer integration in their project. Then we have, uma So the best use of the Uma optimistic Oracle goes to decentralist. They're going to be winning $5,000. Then we have Park Three as a second place winners for $2,000.
01:43:49.424 - 01:44:33.160, Speaker A: And on Ramp Quest will be taking in the third place $1,000 prize. Congratulations. Next up we have Unstoppable Domains, and the best use of unstoppable login integration goes to zero X Mail. They're going to be receiving $1,500 and a $1,000 free domain credits on Unstoppable. Second place goes to requesto for a $1,000 prize and 750 in domain credits. And third, BNB goes to we'll take in the third place for $700 and $500 in unlock unstoppable domain credits. They also have 14 teams that are going to be split between the pool category.
01:44:33.160 - 01:44:58.736, Speaker A: And congratulations to all of these teams. I won't be able to say all of them here, but we'll be pinging everybody with the list of all projects they've won. Next up we have covalent. Yeah, that's a lot of winners for covalent. So we have six first place winners. They're going to be receiving $300 each. That is Rapid X new wallet, cherry TV, bug Buzzer telescope and my precious.
01:44:58.736 - 01:45:40.896, Speaker A: We have 16 2nd place best covalent integrations, and that is 16 teams that are going to be receiving $150 each. So they are block books, lab stream, harbor zero exhaust, q audit, VChAT, unchecked trankers, smart, trend, consents, multisig molecule, NFT whitelisting DAP vault, my NFT gallery RM, three Dow core, eight split and coursealize. And then seven third place winners that are going to be receiving $100 each. So that is these are teams dehiras arbit inside dow UC. Requesto metadata and wallet NFT checker. A lot of covalent winners. There's a lot of good use cases for data being used on projects.
01:45:40.896 - 01:46:14.012, Speaker A: So congratulations to all of those teams. Next up is Lens Protocol. So the fast publishing category was the big classifier for what they were excited to see as Lens Integrations. And focalize will be taking in the first place as $3,500 prize and Lens Node will be receiving the runner up $1,500 prize. Next up, we have spruce. So the best use of sign in with Ethereum goes to the giving Dow. They'll be taking in $1,000.
01:46:14.012 - 01:46:48.168, Speaker A: And then we have two runner ups, blockstate and Arbit that are going to be receiving $500 each for the best use of Seaweed. Next up, we have connect. So the best original project built on Connect goes to L. Two optimizers for $2,000. The best cross chain augmentation of an existing protocol goes to Dchat, and they'll be taking in $2,000. And then there were a lot of submissions that they were not able to review and carefully look at in time. So there's a pool prize category and those winners will be announced soon.
01:46:48.168 - 01:47:34.436, Speaker A: So keep an eye out on Discord and also your project page. And we'll be messaging all the teams with the specifics of you being a recipient of the Connect School prize. Then we have NFT Port. 63 teams qualified for the NFT port integration and they'll be splitting in $5,000 equally for making the best use of NFT port NFT infrastructure APIs. Congratulations to all 63 teams. And I'm in the background just constantly blown away by how many teams are here as part of this event. It's very unusual for me to just know what the quantity is compared to all the previous events.
01:47:34.436 - 01:47:38.810, Speaker A: And here a single project is.
01:47:40.700 - 01:47:41.396, Speaker C: Exceeding.
01:47:41.428 - 01:48:22.256, Speaker A: The average combination of every other event combined. I am just shocked and despite my team members encouragement, I will not be reading 63 names, unfortunately. Next up we have table land. A lot of prizes on Table Land as well. So the most innovative use for Table Land goes to Cryptoquests and they'll be taking $1,000. And Runner Up goes to Q and they'll be getting $500 as the second place most innovative use of Table Land and 46 other teams use Table End in their project, so they'll be splitting in $3,500 each. So congratulations to all 46 of these teams.
01:48:22.256 - 01:48:43.820, Speaker A: This is amazing. Then we have dbridge. So the most innovative crosschain application leveraging, dbridge is going to be Minty. They're going to be taking in $2,500. Then Do Transfer is the second place winner with $1,500 prize. And D four, X will be taking in $1,000 for third place. That's the bridge integration.
01:48:43.820 - 01:49:26.872, Speaker A: Then we have Teller protocol. So Teller Protocol is giving pool prizes for any team making a meaningful use of Teller. And this is divided as follows. So Arbo will be taking 1750, Polyglot will be taking in 1250, JPEG, x will be getting 1000 and Q will be receiving $1,000. So congratulations to all five of these teams. Then we have Unlock Protocol and the most inventive use cases leveraging the Unlock membership SDK and APIs goes to Homebase for $3,000. Raindrop will be the second place winner at 1500 and Impact Self will be the third place unlock winner at $500.
01:49:26.872 - 01:50:02.916, Speaker A: Congratulations. Then we have Odd Protocol and then the first place goes to Bounty Granter for 1500. And then the second best integration, which is the team's choice, is Leapockdow for the Team Choice Award for $500. Then we have xmtp. So the best use of Xmtp goes to Dchat for $2,500, game Jitsu for 1500 and Tahitas for third place, $1,000. On top of that, there are 47 teams that used Xmtp. That is a lot of messaging related use cases about to prop up.
01:50:02.916 - 01:50:39.804, Speaker A: So you now have seen a six month look ahead on what this space is going to look like. So all of these 47 teams are going to be also receiving $100 each. So congratulations then we have Streamer. So the best use of Streamer goes to ETL Network for $2,500, store Crypt for 1500 and Charity TV for $1,000. For first, second and third, congratulations on making a good use of the Pub sub messaging layer. Then we have Vallast. So the best projects published on Vallast with the SDK, there are three winners for this category.
01:50:39.804 - 01:51:26.000, Speaker A: So we have Metamase, Zero, X, Spy and NFT. So all three of them are going to be receiving $1,000 each. And then there are 28 teams that also used Valus and they'll be receiving the pool prize, which is $2,000 split 28 ways. So congratulations to all 28 of these teams. And those were all the prizes that we were able to round up. There are 360 projects that everybody had to review in 24 hours and as you can see by the number of winners per slide, it was not an easy task. So for IPFS, the Graph, QuickNote, Sysmo, Oasis, Kronos and Ceramic, the teams are still reviewing the winners and they will be notified in the next 48 hours.
01:51:26.000 - 01:52:26.176, Speaker A: So please be patient with us and with these teams, we're going to send a message so you don't ping everybody saying, who are the winners for these teams? It's a long list that they had to review and this will take a little bit more time. So the winners for all seven of these teams will be announced fairly soon. And of course, what's going to happen soon is all these prizes will start showing up in the next 24 hours on your project page on the showcase. So in case you missed or if you saw something on this slide and it doesn't show up on your project page, you can message us then. But all the teams will know which prizes they won by just simply going to their own project page on the showcase. Everything I talked about will be soon visible on your right sidebar on that website and you will get to know exactly what you won. And you will also be able to log in directly on your dashboard and just see the total prize you have all received.
01:52:26.176 - 01:53:33.524, Speaker A: So this is the most complex event we've ever done and I am so happy that there are so many winners because nothing brings me more joy than seeing hundreds of projects get excited about seeing others appreciate what they've done and being able to show that this was good because they won actual money. All right, so quick note before we end everything on the prize delivery, everything that we talked about is tentative and not final, which means that there are a couple of things that we have to make sure before we deliver any prize, which is making sure that nobody cheated on their projects. We'll be verifying everybody's code base, which is why you are required to keep your repos public. And of course, we are still waiting on a few more prize winners from a few of our partners. So all that will happen this week and then we'll start the review process and all prizes will be delivered by October 18. So that's about three weeks from now, right after Defcon. We'll obviously try to make sure that we are ahead of this timeline, but at your worst case is that all prizes post verification will be in your wallets on the 18th.
01:53:33.524 - 01:54:19.320, Speaker A: So please be patient and we'll communicate that again on multiple different channels. So before we close this off, I want to say a few thank yous to people that help and helped make this event possible and successful. Of course, there are a lot of partners that we work with and a lot of parties that we have to rely on to help out and make sure that we're able to offer the best experience here. So I want to thank all of our judges, mentors, volunteers, speakers, and partners. But also, before I do that, want to also thank all of you as hackers. So there were amazing 30 judges here that spent the time looking at literally 300 projects, talking to them in real time, and offering their feedback and things that they got excited about. So I want to thank all the judges for giving us majority of their Monday.
01:54:19.320 - 01:55:11.828, Speaker A: I want to thank all of our amazing mentors and volunteers who helped run a lot of things in the background and answer questions that all of you had as hackers. There were five summits that we did. Four of them were with speakers, one of them was the official Merge Livestream. And there were so many incredible people that shared what they were excited about, talking about what's coming in their projects, in their DevTools, what they're excited about, how to do things at scale. And I want to thank everybody here for giving us the time and making something super valuable come out of your talk so others can learn from you. And this giant list of our amazing partners, you don't see all of them directly everywhere, but they are in the background making sure all of you are successful and are able to get unstuck and unblocked and get inspired. So thank you to all of our amazing partners.
01:55:11.828 - 01:56:04.424, Speaker A: And of course, I want to give a huge shout out to the ETH Global team who constantly ensures that you have the best experience, no matter what scale we have to deal with at our events. I want to give a huge shout out to Chloe, kevin, Kay Kevin, Ivan, Cree, Guichi, Minnie, Anna, Moaz, Luke, Emily, Andrew and Jacob. There are the people that make all of this thing happen in the background. And anytime you see them, whether it's in person or on discord, be sure to thank them because they are the effective people that are keeping all of this in check and making sure that you have the best experience. All right, I've been saying about to end soon for a lot of time. So let's actually get to the closing. I'll try to wrap everything up in the next three minutes, and we'll do that by actually telling you what's going on next.
01:56:04.424 - 01:56:36.724, Speaker A: So you saw all the partner prize winners. We saw 14 teams come up. You saw 360 projects getting highlighted at this live stream. And for those of you who are joining us for the first time, you may not know this, but ETH global's goal is to make sure we give people that chance to experiment with what's possible in web3. So they can stick around, learn and build some interesting things that either were not possible before or we just never thought to think about solving a problem in a particular way. And as a result, we don't think about this as a competition. There is no 1st, 2nd, 3rd.
01:56:36.724 - 01:57:09.564, Speaker A: There are definitely partner prizes that are independent from our own process. And we call them finalists because effectively all 14 of these teams came first. And there effectively our winners for this biggest event we've ever done in our history. And as part of being a finalist, each team member on each of these 14 teams will be receiving $1,000 from the ETH Global Team. So I want to give a big shout out to all of these 14 teams that came in and demoed. But not only that, I know there's a finalist winners that we just saw. You saw a lot of partners.
01:57:09.564 - 01:57:35.972, Speaker A: And of course, we recognize that not everybody wants something and that's okay. But we want to make sure that you have a great experience. You also are get excited about doing things at scale. This is a lot of fun for us to coordinate things. We had to coordinate this with 100 countries. I've never thought of something that big, not only on a short notice, but also just seeing the scale and the excitement that people bring in from six different continents. It's absolutely incredible.
01:57:35.972 - 01:58:18.532, Speaker A: So as part of that, anybody who submitted a project will be receiving a free T shirt for this hackathon. This is what it looks like. We're working on the final sides of the logistics of giving this to every single country that participated. So there's a lot of stuff happening in the background, but we will be able to ship this thing for free to every country. And these shirts will be available to you on Friday, so we'll be emailing you how to claim them. We'll be sending a discord message too, but congratulations to everybody who submitted a project here, and you'll be receiving this shirt. So hopefully when we see you next, you say hi to us in one of these shirts, and we'll also wear them the next time we see you.
01:58:18.532 - 01:58:59.024, Speaker A: So with that, congratulations to every single team that presented today that participated over the last three weeks. And let's close this off so this wouldn't be an ETH Global event without us telling you what happens next. So before I say the last final thank you, I want to talk about the next few hackathons we're doing, starting off with Eat Bogota. So all of you who are joining us in Colombia next week will be there in person as a team hosting ETH Bogota, which kicks off just before Defcon. So we'll see you all there. There's still three more days to sign up for this hackathon if you're interested in meeting us in person. This is an in person event only, which means you cannot participate online.
01:58:59.024 - 01:59:51.852, Speaker A: So we'll see you in Colombia then, a few weeks after that, which is November 4, we'll be hosting one of our biggest events in person, and that is EEP San Francisco on November 4 to 6th. So if you're nearby, if you're interested in seeing another in person hackathon by EEP Global, find us in San Francisco on November 4. And this is also part of the San Francisco Blockchain Week, so there'll be thousands of people that are excited about Web Three, and we'd love to meet you there as well. Sign up is open on asset Ethglobal.com. So hopefully we get to see a lot of you in person. And the last event we're going to do this year is going to be Asia's biggest hackathon in partnership with debtfolio, and that's going to be ETH India in Bangalore. So for those of you who are in that part of the world or are interested in meeting us in Bangalore, we want to see you in early December.
01:59:51.852 - 02:00:16.296, Speaker A: This is December 2 at one of our biggest and the last event we're going to do in 2022 before we talk about what's in 2023. So we'll see you at ETH India. Those are three in person events and a couple more in the works that are online. So all this information is available on Ethglobal.com. You can just head over there, click on the events page and see the upcoming hackathons. We hope to see you again. And with that, I want to sign off.
02:00:16.296 - 02:00:46.580, Speaker A: I want to thank all of you for taking the time to be part of this live stream, part of this whole amazing month with us. And we'll see you all in a few weeks. And until next time, enjoy some Lo fi Beats. And of course, before I get there, I know I'm going to get this question asked 50 times in the chat. The poaps will be delivered in the next 48 hours to all of you, including the people who watch the merch live stream. So don't worry, the poops are coming along with all the prizes and the amazing T shirt. So thanks everybody.
02:00:46.580 - 02:00:54.320, Speaker A: Enjoy some lo fi beats. And it's been a pleasure spending the last four weeks with all of you here. Take care. Bye.
