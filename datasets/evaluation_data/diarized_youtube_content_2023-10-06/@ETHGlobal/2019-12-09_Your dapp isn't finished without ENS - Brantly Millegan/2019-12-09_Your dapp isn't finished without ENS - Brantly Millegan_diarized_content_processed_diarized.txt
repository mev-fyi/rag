00:00:03.690 - 00:00:24.558, Speaker A: My name is Brantley Milligan. I work for an organization called True Names Limited which is a nonprofit based out of Singapore. We manage we're like the de facto managers of the Ethereum Name Service which is an open source project. We're on GitHub. That's our website. Our lead developer is Nick Johnson and our initial patron was the Ethereum Foundation. This is kind of the outline of what I'm going to talk about here.
00:00:24.558 - 00:00:40.440, Speaker A: So first, naming systems. So a lot of people overcomplicate what a naming system is. So a naming system is just a lookup system. That's it. That's all it does. It's super, super simple. You provide a name and it provides you with information.
00:00:40.440 - 00:01:12.882, Speaker A: Your system then might do something with that information but that is separate from the naming system. So a lot of people think, for example, that with ENS we send your transaction onto the wallet or something like that. We don't do that. We just tell the wallet where to send it and then the wallet does it. So why do we have naming systems? Obviously because what makes sense for computers with computer Identifiers doesn't make sense for humans and vice versa. So naming systems are a bridge between them. We have a naming problem in the blockchain world, by the way.
00:01:12.882 - 00:01:35.020, Speaker A: We could be solving that naming problem with the domain name system of the Internet, the current one. So you can store any information there. We could be storing Ethereum addresses, Bitcoin addresses, but why don't we do that? Well, DNS, it came from the 1980s. It's fairly centralized. It's insecure cryptocurrency. You're dealing with money. This could be bad.
00:01:35.020 - 00:02:00.590, Speaker A: And blockchains and smart contracts allow for a better system anyway. But I just wanted to point out that we could be using DNS. DNS can name anything. So why are we better than DNS? Well, we have simpler infrastructure. We've replaced servers with just a couple of smart contracts, zero downtime because it's just on the blockchain. You can even have your own local copy. That can't be DDoS attacked decentralized, so it's more censorship resistant.
00:02:00.590 - 00:02:32.878, Speaker A: We have built in cryptography and individual ownership. So DNS was actually developed in the 1980s, came out in 1985 back when public private key cryptography was illegal to use. I don't know if you guys know the history. In the 90s there was the whole fight with PGP led by Hal Finney, which got that changed, which is great. But at least in the United States, I should say, where it was invented, it was illegal to use. So there's now a cryptography system for DNS called DNS Stack, which is an attempt to kind of put that on it. It's not widely used in our system, of course.
00:02:32.878 - 00:03:08.582, Speaker A: It's built in programmability and interactivity with other Ethereum smart contracts. So this is something that's completely unique to our system, obviously that you can program your names to do things based on other things happening in the Ethereum ecosystem that maybe have nothing to do with naming. That's a really powerful, powerful feature. We, of course, have. ETH is our native top level domain. I'll say more about that here in a bit. But we have over 310,000 of those registered, which actually would make them one of the most successful new top level domains on the Internet.
00:03:08.582 - 00:03:32.922, Speaker A: We also have integration with other DNS, TLDs, XYZ, Lux, Cred, Art, and most of the rest of them coming soon to work on our system. Top level domains that's like the suffix, the kind of end of a namesake.com. Org. We have 37 wallets signed up for our cryptocurrency wallet naming. We have Native integration. Opera. If you have any other browser, you can use MetaMask.
00:03:32.922 - 00:03:58.358, Speaker A: We have a partnership with IPFS, with Protocol Labs. We're actually in an ICANN accredited registrar already in Circa. We also have special integrations in Truffle Suite. So how does ENS work? So a key thing to know is that we have no servers. Like, we don't run servers anywhere. We have no servers. You don't need our permission to use ENS or to register a ETH name or anything like that.
00:03:58.358 - 00:04:24.406, Speaker A: It just entirely runs as a set of smart contracts on Ethereum. This often can confuse people. Say, oh, hey, how do we get to your API? Or something like like we don't have one. You just have to interact with it on Ethereum. Another thing. Why is ENS called the ethereum name Service? It's not because it's a naming system only for the Ethereum Ecosystem. We do serve that, obviously, but it's because it's a naming system built on Ethereum.
00:04:24.406 - 00:04:53.482, Speaker A: So we do serve the Ethereum Ecosystem, but we do much more beyond that. This is what a lookup looks like. So you have a name. You query the Ethereum blockchain, the ENS registry smart contract on the Ethereum blockchain. You say, hey, I have this name. Where do I find the records? It spits back the answer, and then you go look up the records on chain at that location. The reason we have that extra step is that you can create your own record sets if you wanted to.
00:04:53.482 - 00:05:24.094, Speaker A: Now, we have kind of a standard record set, but if you didn't want to use that, you could create your own. So that extra step means that the record sets are not hard coded into the system. So our standard record set we call Public Resolver. And this is what it looks like. We have a field called Address for an Ethereum address. We have fields called other addresses for other cryptocurrencies, like Bitcoin, Litecoin, anything you'd like. We have a content field for an IPFS or Swarm hash.
00:05:24.094 - 00:05:48.250, Speaker A: Actually, this is incorrect. Tor any addresses actually do work. Now, I'm sorry about that. Text records, voluntary personal information. We actually support traditional DNS records, although we're not doing much with that right mentioned. I'd say more about top level domains on ENS. So ENS really is naming infrastructure.
00:05:48.250 - 00:06:23.330, Speaker A: It's not a namespace. So a lot of people think ENS is ETH, and that's not entirely true. So we are naming infrastructure that, yes, created ETH as a name that works on our system, but we could serve any name on our system. And as I mentioned, we're actually working to integrate the DNS namespace to work on our system. So this already works for XYZ, like I mentioned. So, for example, I own Brantley XYZ in the DNS system, and I claimed it and own it on ENS as well. Same name, but two places for the records.
00:06:23.330 - 00:06:58.846, Speaker A: And we're rolling that out to most of the rest of the DNS namespace in the next two months or so. It's like you could have Brantley.com is your ENS name, not Brantley ETH. Brantley.com. All right, so how to integrate? So our goal with ENS, which is the goal really, of any naming system, is that every time a user might otherwise see a cryptocurrency address or a content hash or any kind of computer Identifier in your DAP, they should instead see an ENS name. That should always be the case. They should never be seeing these scary computer Identifiers.
00:06:58.846 - 00:07:26.154, Speaker A: It's just bad UX. There's no reason for it. So the easiest use case with ENS is a cryptocurrency. It's called Cryptocurrency Address Forward Resolution. So what does that mean? It just means that let's say I have a recipient field. I'm going to send cryptocurrency to somebody where I could be putting the crypto address, right? I instead put an ENS name. And then your program grabs the appropriate address.
00:07:26.154 - 00:07:58.920, Speaker A: And when they send it, you send it to that address. But from the user's perspective, they're sending it to the name. So that's super easy. So, name to address. We also do Ethereum address reverse resolution. Right now we only have this for Ethereum addresses, but reverse resolution is just the opposite. So let's say I'm logged into your DAP with my Ethereum account and you're maybe identifying me by my public Ethereum address.
00:07:58.920 - 00:08:30.320, Speaker A: That's bad UI. So what you can do is actually look up to see is there an ENS name associated with that Ethereum address? Oh, there is. Let's display that instead. That's much better. So usernames very similar to reverse resolution. If they don't have a name, maybe already set up or something like this, get your DAP ETH or something like this as part of the user onboarding process. Give them a subdomain off of that.
00:08:30.320 - 00:08:52.226, Speaker A: Like braintley is the man. Yourdap ETH lets them choose their username and then they can name it. And then you can display that in any place where you would have a username in your DAP. And there are projects doing exactly this. Like Universal login with Alex Vandesan Ethereum. Other projects are doing this as well. So IPFS swarm toward onion resolution.
00:08:52.226 - 00:09:31.380, Speaker A: So this works like I said in Opera, I think it's like in their beta browser, you can put, like, yourdap ETH and it will resolve like a normal website. Even though it's stored on IPFS and using ENS, it's not touching any of the normal part of the Internet. And then if you have MetaMask in Chrome, that will also work. We have a project called ETH DNS, which Bridges DNS to ENS and IPFS. Basically, we own ETH link on DNS and we've set up a special server there so that if you have an ETH name and you don't have MetaMask or something like this, just add link to it will resolve like a normal website.
00:09:31.750 - 00:09:35.782, Speaker B: Where do you go to register? Search if it's existing or not?
00:09:35.916 - 00:09:37.670, Speaker A: Like if you want to register a new name.
00:09:37.740 - 00:09:38.360, Speaker B: Yeah.
00:09:40.090 - 00:10:03.662, Speaker A: Okay, great question. So just app ENS domains. In fact, if I have time here, I could show you that here in a second. So. Tor onion resolution. So if you have the Tor browser, and since it's Firefox based, you can get all the Firefox plugins. If you have MetaMask enabled, we actually have names set up that solve the Tor onion naming problem.
00:10:03.662 - 00:10:35.494, Speaker A: If you're familiar with that in that space, you can go to Duck, Go, Tor ETH and it will resolve to their onion version of the website. DNS records. We actually have some projects set up with some people in the DNS community to basically use ENS as replacement name servers. I could say more about that, but not super relevant to what you guys will be building here. But we have a ton going on in the DNS world. I just got back from Montreal. I actually came here from Montreal from an ICANN conference, their ICANN 66.
00:10:35.494 - 00:10:51.914, Speaker A: And people are extremely excited about ENS. Okay. It's incredible. Okay, and then so then everything we haven't thought of. Like I said, you can always customize your records if you want. If you have a new use case. In fact, if you have a new use case, standardize it and submit it to us.
00:10:51.914 - 00:11:10.420, Speaker A: We may include it in our standard record set. In fact, that's how we got Tor Inning address resolution. There was a hackathon project at ETH New York, added the Tor in thing. We loved it and then we added it. It was great. These are some useful links. And here I can show you guys some examples here real quick.
00:11:10.420 - 00:11:59.004, Speaker A: So this is chrome with MetaMask enabled. I can actually go to Brantley East. This is an IPFS website just loaded up. If I didn't have MetaMask, I can go to Brantley East link and that just loads up like a normal website. I can also show this real quick tour going here. In the meantime, I'll show you our manager. So if you go to App, ENS domains is how you register a ETH name, or it's also how you would claim a DNS name on there.
00:11:59.004 - 00:12:15.324, Speaker A: But that's a more complicated process. Go to Brantley ETH. You can see what the records look like. So I'm the registering controller there is an expiration date. You have to renew it. You can pay ahead if you want, though. Resolver.
00:12:15.324 - 00:12:41.640, Speaker A: That's just where the records are. So this is just the standard record set. I've got my Ethereum address, a content hash here, IPFS. I've got all my other cryptocurrency addresses here. You can send me bitcoin things like this to Brantley ETH Text Records here. This is like the voluntary person who is it's actually an interesting website that somebody made. ENS Monster.
00:12:41.640 - 00:13:11.350, Speaker A: Our text records are sort of new, but you could build this into your DAP. But you can put in an ENS name and see there the personal information that they've done here. It's kind of cool. If I wanted to register a name, let's say ETH Water. Let's see if ETHWaterloo ETH is available. It's not available. Let's do ETHWaterloo test.
00:13:11.350 - 00:13:32.330, Speaker A: ETH? Okay, that is available. So if I wanted to register this, I'm not going to do it now, but it would take about two minutes or so. It costs about $5 a year. I can register for more years if I want. I would just click Request to register. There's like two transactions. To get it, you have to register on main net.
00:13:32.330 - 00:13:57.136, Speaker A: We're on the testnets, so you can test there too. And our docs are at docs ENS domains, which explain more about that. In fact, we also have test, I think, on Gurley. I think that you can do testing. All right, any questions about anything? Yes, so I was reading through the.
00:13:57.158 - 00:14:10.390, Speaker C: Documentation earlier, and it looks like it's a little bit of an involved process. Like, you have to go through the registration portal, then write a smart contract to indicate what your resolver is.
00:14:12.040 - 00:14:40.140, Speaker A: Yeah. So once you register the name, I'll just show you here. So once you register the name, it's a two transaction process. And the reason for that is that it prevents a certain attack called front running with miners, which I won't explain, but it just takes like a minute and then yes, so you have to set the resolver, and basically that just says what your record set type is and where it is. So you set that, and then you can start setting records.
00:14:40.740 - 00:14:43.564, Speaker C: So you don't have to write out a smart contract and solidity.
00:14:43.612 - 00:14:53.670, Speaker A: You just write it inside of you don't need to make any new smart contracts or anything like that. No, you can just use our system. Yes. Oh, I'm sorry.
00:14:55.000 - 00:15:02.630, Speaker C: So you said this doesn't have to just be an Ethereum DAP. You could point it to, I guess, a static web page running on EC Two or something like that.
00:15:03.800 - 00:15:24.750, Speaker A: You could, but there's no browser. That would be like resolving that right now. If you want to use it as, like, a website, I recommend putting your files on IPFS and putting the IPFS hash in the content record, and that will resolve, like in MetaMask with Chrome, with MetaMask and things like that.
00:15:33.140 - 00:15:38.610, Speaker B: There's a little bit on which to use. But what would you recommend?
00:15:39.880 - 00:15:42.260, Speaker A: A lot of people like ethers. JS.
00:15:43.960 - 00:15:45.110, Speaker B: Do you know why?
00:15:46.120 - 00:16:05.516, Speaker A: Because some people think web3 JS is too, like, big and unwieldy, whereas they think Ethers JS is more efficient and better. It's just your personal preference. Ethers JS is a lot of people like us. But any of these will work to.
00:16:05.538 - 00:16:06.540, Speaker C: Piggyback off of that.
00:16:06.610 - 00:16:31.910, Speaker A: What would you use the JavaScript client library for that? You can do some of these types of add certain functions to your DAP without having to do all the coding. So they've put most of that code in the library. And then what you can do is for your DAP, you say, oh, I have my code plus this library. And then at certain points, you can easily do those functions without having to write out all the code yourself.
00:16:35.320 - 00:16:42.470, Speaker C: What is the tool to look up? Do a reverse lookup, like put in the hash for your MetaMask address and didn't find out the person has.
00:16:47.260 - 00:17:07.936, Speaker A: You can set that up in our manager. And then if you're adding that to your DAP, depending on which library you use, just like a line of code or something. I can actually show you a cryptocurrency resolution, though. I just thought of this. Say I'm here in MetaMask. I want to send to Brantley ETH. There you go.
00:17:07.936 - 00:17:09.650, Speaker A: So it has my Ethereum address.
00:17:12.020 - 00:17:21.200, Speaker C: Okay. Is there like some sort of website that just lets you put in your Ethereum address? Like just the raw hex and it shows you the nestling?
00:17:21.640 - 00:17:26.390, Speaker A: Oh, that's a good question. I don't know that we do have that. Maybe you could build that.
00:17:27.560 - 00:17:32.330, Speaker B: I saw something called reverse. Reverse something.
00:17:34.460 - 00:17:36.970, Speaker A: Would not be what do you mean?
00:17:38.220 - 00:17:39.690, Speaker B: I saw that on the.
00:17:42.940 - 00:17:57.548, Speaker A: Correct yeah. So that's if you have an Ethereum address and you want to look up, see if there's an associated ENS name no, that is what he was asking. He was asking though, if there was like an app somewhere that you could just put that in and just demonstrate it.
00:17:57.714 - 00:18:00.990, Speaker C: That's like an embeddable widget. It's not like a website you go to.
00:18:01.300 - 00:18:35.000, Speaker A: No, it's not like a website. It's a function. So basically all that is, is that on Ethereum, you can set it up so that your Ethereum address is linked to an ENS name, like in the opposite direction. So that if a person queries the ENS smart contract on the Ethereum blockchain and says, hey, I have this Ethereum address, is there an ENS name there? Then that will work. But it's just a mapping thing on the Ethereum blockchain.
00:18:37.260 - 00:18:44.350, Speaker B: Brantley, I'm just able to create the resolver. It is zero x zero zero.
00:18:46.720 - 00:19:13.102, Speaker A: Okay, so that means you don't have a resolver set yet. So you registered a ETH name, you're saying, and then you just hit set and hit to click use Public Resolver and then set that and that'll be a transaction. And then after that you can start setting individual records. And it works right away, the parent one.
00:19:13.236 - 00:19:28.450, Speaker B: Now each, let's say, contract that I register, like I'm going to issue a bunch of non fungible tokens. I want to use nonfundable token one, I'm going to create all of them using this resolver.
00:19:29.270 - 00:19:56.918, Speaker A: Okay, so you're talking about creating subdomains. You can do that? Yeah. So you just go here up to the top, says subdomains, and you can hit add subdomain. And then you can create like, let's say wallet Brantley ETH or something like this. And then subdomains in terms of the records function. Exactly. So some terminology that's called a third level domain.
00:19:56.918 - 00:20:27.474, Speaker A: And so like this Brantley ETH is called a second level domain. And see like ETH, it's called a top level domain. So it's like top level, second level. So it's like you're going down a hierarchy. If I had Wallet Brailley ETH, that's a third level domain that functions exactly the same as a second level domain. In that you have set up a resolver, you have your own separate records, its own completely separate thing. No, there's not an expiration actually for that.
00:20:27.474 - 00:20:46.874, Speaker A: That is the difference. So the records work exactly the same. We only have expirations for second level domains, but then subdomains or third level domains are free and have no expiration date as long as you keep the second level domain current. So it's like a hierarchy of control going down.
00:20:46.912 - 00:20:51.514, Speaker B: Yeah. Once the parent is gone, you're not going to be seeing the children.
00:20:51.632 - 00:20:52.154, Speaker A: Exactly.
00:20:52.272 - 00:21:00.266, Speaker B: Okay. And then again, what is the resolver all about? Why do I need to should I use this public resolver?
00:21:00.298 - 00:21:44.222, Speaker A: Yeah, just use public resolver. In fact, we're actually going to be making a change where everything it just defaults to that. All that does is it's saying here is the record set that I'm using and where you find it on the ethereum blockchain. That's what that is saying. And the reason we have that extra step is that, one, we can easily upgrade the record set without having to change the whole ENS system. And also if you had a custom use case, instead of using public resolver, you could put your own resolver in there and with your own record types, most people are just using the public resolver, like 99.9% of people.
00:21:44.222 - 00:21:48.910, Speaker A: If you had a special use case, you could have your own record types if you wanted to.
00:21:49.060 - 00:22:00.030, Speaker B: And once I created a name using Gurley testnet, that domain is also valid if someone from Mainet tries to claim that domain. Now the Gurley.
00:22:02.630 - 00:22:17.126, Speaker A: No, so it'd be completely separate. So if you own a name on Gurley, that's just there, it's not on Mainet. If you wanted to also own it on mainnet, you'd have to also register that on main net. Hopefully it's available.
00:22:17.308 - 00:22:33.318, Speaker B: Amazing. And if you could scroll down for the addresses. So if, let's say someone sends you bitcoin to Brentley E automatically go to the bitcoin address. It's not going to go to the bitcoin cash address.
00:22:33.424 - 00:22:34.080, Speaker A: Correct.
00:22:34.610 - 00:22:37.518, Speaker B: It's automatically querying, to be exact.
00:22:37.684 - 00:22:41.310, Speaker A: Yeah. I mean, the wallet has to be querying it correctly.
00:22:42.210 - 00:22:51.760, Speaker B: Okay, so if you use a rinkby address and set it over there, the system already knows that that's going to be address.
00:22:53.490 - 00:22:54.240, Speaker A: Yes.
00:22:54.610 - 00:22:56.080, Speaker B: It's not going to work.
00:22:58.570 - 00:23:14.040, Speaker A: It just I mean, it depends on the wallet, so the wallet decides which to grab. So as long as the wallet is doing it correctly, then it should work. All right, so I think we're done on time. Okay, well, thank you very much. If you have any other questions, you can talk to me afterwards. Thank you.
