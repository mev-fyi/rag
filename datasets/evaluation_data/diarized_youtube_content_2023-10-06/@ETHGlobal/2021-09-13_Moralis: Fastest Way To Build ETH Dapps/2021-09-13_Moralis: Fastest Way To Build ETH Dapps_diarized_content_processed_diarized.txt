00:00:00.250 - 00:01:01.776, Speaker A: Let people file in. Appreciate your patience. Well, thank you. Everyone who's joining us right now, I want to give a quick introduction to Ivan, who's going to be leading this session. Ivan, you can probably introduce yourself better than I can, so I'll hand things over to you right now, but I believe we'll be doing some Q A at the end. So if anyone has any questions, feel free to put them into the chat on Zoom and we will get to them at the end. If we don't get to your question, obviously link up on Discord.
00:01:01.776 - 00:01:03.968, Speaker A: Ivan, it's all yours.
00:01:04.144 - 00:01:27.900, Speaker B: Perfect. Thanks Luke, and great to be here. Today we're going to discuss how to build DApps, how to build them quickly, and exactly the tools that we provide at Morales. And my name is Ivan. I'm the co founder and CEO of Morales. And something we have to understand that all DAP developers need to reach some kind of success. We all have some kind of success picture, and it can be different for different people.
00:01:27.900 - 00:02:01.128, Speaker B: But at the end of the day, in crypto, we want users. The success in crypto can, I think with great certainty be defined the number of users or the total value locked or something of that nature. We want people to interact with our creations. And you may have different ideas. I may have different ideas. For example, for all of you watching, maybe have idea about NFT marketplace, maybe some kind of wallet, maybe some kind of DeFi dashboard, cross chain bridge exchange and so on and so forth. And something that unites all of these different ideas is that they all need exactly the same things.
00:02:01.128 - 00:02:35.472, Speaker B: Developers, whatever idea you have, we all need to figure out how to log in a user. All DApps need to do that. We all have to figure out how to fetch balances from the user, whether it is token balances, whether it is native balances, whether it is NFTs. We need to fetch transactions, we need to fetch smart contract events. So when something happens on chain, we have to know that we need to watch the different topics and we need to get that in real time. In many cases, we have to build an index. So we need to create some kind of subgraph or to index data in some way.
00:02:35.472 - 00:03:17.248, Speaker B: Basically that we update a state based on on chain transactions and we have to send the transactions. If you really think about most of the use cases, most of the use cases you think about, they all need this. The problem in crypto, especially in crypto development, is that everyone is reinventing this wheel over and over again. You start a new project, you have to build this whole infrastructure. And of course, when you reinvent the wheel and everyone has to reinvent the wheel, the industry moves slowly. It doesn't move as quickly as it could have been moving. If we did not reinvent the wheel and the mistakes and the problems really start with projects deciding to use RPC node as the beginning of their project.
00:03:17.248 - 00:03:43.684, Speaker B: Because RPC nodes are really very primitive, low level technology. RPC node cannot tell you a lot about the blockchain, it has all the data. But accessing that data is very difficult. You cannot construct a query and run it against the RPC node. You need to look transaction by transaction, block by block. In many cases, you have to build your own database with all of that or do a subgraph. It doesn't support filtering nor aggregation.
00:03:43.684 - 00:04:22.372, Speaker B: So filtering, for example, if you want to get some kind of transactions with specific condition or Aggregation, if you want to get some kind of aggregate number, maybe the total volume for your DAP, or maybe total volume for users and so on and so forth, it cannot do filtering, cannot do aggregation, and requires massive, massive code base around it. So this is normally how it looks like. You connect to your PC node, you start your project connect to our PC node. Your first problem is to how to log in a user, how to authenticate user. Well, you have to verify their signature. So you have to build that. If you have some kind of real time app, real time DAP communication, you have to figure out sockets, you have to build that.
00:04:22.372 - 00:04:42.120, Speaker B: You have to figure out user lifecycle. What is that? The user logs in. You need to figure out how to fetch transactions, how to fetch their balances, how to fetch their NFTs. The node cannot tell you that. It can tell you specific NFTs for specific smart contracts. But you cannot just ask a node hey, give me all NFTs for this user. You need to fetch transactions, you need to sync smart contracts.
00:04:42.120 - 00:05:09.648, Speaker B: It's a lot. So basically you build this entire monster, this entire monstrosity of infrastructure. Whenever you want to start something, you have an idea and you want to go to market. And not only do you have to build that, you also have to provision infrastructure. If you have a lot of users, you have to scale database, you have to maintain it, debug it. You will make a lot of bugs when you do this first time. If you do this for first time, it's going to be a lot of bugs, scale it and so on and so forth.
00:05:09.648 - 00:05:38.824, Speaker B: So this leads to what? This leads to slow iterations. When you have an idea about a new feature, for example, it's difficult for you to build it. Why? Because you have to make it work together with everything else. You have to make it work with your entire tech stack that you've built around your RPC node. It's difficult to test because it's complicated. It's long time to go to market for you to go to market with all of this, probably a few weeks, at least, maybe months. And all in all, it leads to increased failure rates.
00:05:38.824 - 00:06:22.408, Speaker B: Because in crypto, in any startup, in any new project, you have to be fast, you have to be trying new features fast, you have to be trying new concepts fast. So of course, if you have this baggage, you have this baggage holding you back with all of this tech that you run and maintain around your node, it's going to be horrible. So of course the answer is that we don't build like this. This is not how DApps should be built, at least now in 2021, because this is the exact back end that all DApps have to figure out. You don't have this back end. You cannot build a meaningful DAP today. So of course the question is if there only was a solution, a prepackaged solution with this standard boilerplate backend that each and every DAP needs.
00:06:22.408 - 00:06:44.764, Speaker B: If only there was such a solution. If there only was a simple SDK with all of these features built in. And of course I'm here to tell you that there is a chance that there is such a solution. And it is called Morales. It is Morales server and Morales SDK. You can think of Morales kind of like Firebase of crypto. If you've been building websites, you've been building mobile apps, you probably know about Firebase.
00:06:44.764 - 00:07:34.848, Speaker B: So building with Morales is very similar to how you build a mobile app in Firebase. Basically you sign up for Morales and you get the Morales Server. So Morales Server is basically this backend with all of these features we discussed, already built in with all of these features that you shouldn't build yourself. For example, authenticating users, getting all transactions, syncing smart contracts and so on and so forth. And the way to use it is through a very simple JavaScript SDK. We also have SDKs for Unity, if you want to build Unity games, mobile SDKs coming soon. But all in all, if you want to log in a user one line of code, morales, Webster, Authenticate, as soon as the user clicks login in their MetaMask, you instantly have a database of all the data about the users, all their NFTs, all their transfers, all their token transactions.
00:07:34.848 - 00:08:10.136, Speaker B: You get a finished database already with all of this. Most importantly, this database updates in real time. If your user moves their assets on chain, this database reflects it instantly. So all the time you have a database that has everything you need about your user tokens transactions, NFTs and so on so forth. Most importantly, cross chain. If the user address is active, on Ethereum, on Binance chain, on Matic, on Avalanche, on any other EVM chain, it's all there. It's all already by default.
00:08:10.136 - 00:08:50.676, Speaker B: And what did you do? You wrote one line of code. Just imagine what kind of infrastructure you would have to build in order to make this work. Moreover, this is infinitely scalable. You don't have to worry about provisioning, database, scaling it it's already infinitely scalable. And of course in order to make use of this data, we have a wonderful SDK. So you want to read from database while line of code, morales, web3 get transactions to get all transactions about the user to get the balance while on of code, get native balance to get ERC 20 balances, get token balances. Very very easy way to build basically a wallet.
00:08:50.676 - 00:09:37.284, Speaker B: You wrote four lines of code here plus one line of code to log in the user with five lines of code altogether. You now have a dashboard with the user, all their funds, all their NFTs, cross chain, cross chain and it's updating in real time that's most important. And you just did five lines of code. This is of course completely new paradigm for that building because normally you have to have this ginormous monster around the RPC node like we discussed in the beginning. Now something very important is that this database that we give you, the Morales database, it is a database that you can do any query. I mean you can have filtration aggregation, you could never do that on a node. With RPC node you cannot do anything in terms of querying.
00:09:37.284 - 00:10:51.628, Speaker B: Here you have a database that you can do any query you want. It's instantly querable and you can get real time alerts through sockets. So for example, here is with two lines of code you can see at the bottom we do all new ERC 20 transactions, you can subscribe to them and in real time all your clients will be getting that through WebSockets. So you don't have to know how to set up WebSockets or if you know that you don't have to spend time to do that and maintain that it's already all figured out. So already now this is unlimited power in many ways because imagine you get an idea you can quickly with few lines of code, get it working quickly, show it to users quickly, go to market quickly, test is this idea even good? Is this something I should be pursuing? Especially in hackathons like this when there is a limited time, you need to have a tool like this in order to deliver quickly, try things quickly and move quickly ahead. Now we've been talking about the user, how to log in user, get transactions about the user, get balances of the user and of course you can do the same things with smart contracts. You can give Morales a contract address and event topic and instantly you will be getting in real time updates for that particular event topic.
00:10:51.628 - 00:11:22.116, Speaker B: And you can also get all past transactions, all past occurrences of that event. So this means that you don't need to build your own subgraph. You can just tell Morales hey, this is the contract, this is the topic and you can update the database in real time and have some kind of state that you build based on on chain events and you do it with two lines of code. You just specify contract event like this and you subscribe to it. That's it. And also you get all the past occurrences in the database. Something we focus a lot on is the docs.
00:11:22.116 - 00:12:00.552, Speaker B: If you go to docs Morales IO you find a lot a lot a lot of information there. We spend a lot of time on video, on code examples and so on and so forth and so we've been discussing how to get information about the user, how to log in user, how to get all transactions, how to get all smart contract events and how to build index. Let's talk about how to send assets because one of the things you discover when you use Ethereum is that to send an ERC 20 token you need to construct this whole data structure with Abi. I mean, it should be just one line of code. And this is what we give you, one line of code. Morales transfer to transfer native assets. And you provide just an option field like this.
00:12:00.552 - 00:12:24.624, Speaker B: That it's. Native type, native amount and receiver a vinyl of code. Morales transfer to transfer ERC 20s. Because in the options you just specify that you want to transfer token. And this is the amount and this is the receiver and contract address. The same thing with NFTs. So as you can see, the goal of Morales is to basically put all of this complexity, underlying complexity of the blockchain as far below in the stack as possible.
00:12:24.624 - 00:13:29.668, Speaker B: And already now in the few minutes of this short presentation, you see how with a few lines of code we have login user with patch balances, fetch transactions, fetch smart contract events, real time alerts for users and smart contracts. We can build an index so you don't have to have a sub graph and we can send transactions and this is 99% of the features that all DApps need. This is the common border plate that everyone today needs to reinvent from scratch. But there is more but wait, let me know if you've seen this but wait there is more, there is more what is more plugins you see Morales is infinitely extendable through plugins. So right now for example, we have one line of code for you to have a fiat onramp morales plugins fiat buy and you just write violence code and your user gets a fiat onramp pop up and you can already pre fill their address. So you know of course the address of your users from MetaMask. So you can just have this one of code and you specify as argument the user address and it's already prefilled in the onboarding in this fiat on ramp and that's it, that's how easy it should be.
00:13:29.668 - 00:14:03.884, Speaker B: We also have plugins right now with one inch with paraswap as well which means that you just write one end of code Morales plugins, oneinch swap and you can swap any asset to any other asset through one inch, just one of code. You don't have to know any smart contract, anything like that. You just need to know simple JavaScript. Because for example, with one inch they already have figured out the smart contract. We just write one line of code to swap. So we have a lot of plugins in our plugin store. And you can build your own plugin, by the way, and it is crosschain by default, we already mentioned that.
00:14:03.884 - 00:14:45.384, Speaker B: But it's very important that we reiterate why it's so important? Because as you know, all DApps right now have to be in some way a bit cross chain. You look at OpenSea, one of the biggest DApps, of course, of course they have polygon. They have probably more chains coming up in the future. But something very important with Morales right now is that we do support ETH binance polygon Arbitrum Avalanche, meaning that your DAP is cross chain by default. And in the near future we're also adding Solana, we're adding Elrond, because guess what, even Solana and Elrond apps, what do they need? Exactly the same thing. Login user fetch transactions. Which means that we can have a unified API, unified SDK for all current blockchains and all future blockchains.
00:14:45.384 - 00:15:12.912, Speaker B: Whatever is hot in the future, whether it is Arbitrum layer two, whether it is something else, you don't want that risk. You don't want to be locked into something that may not be relevant in the future. You want a unified crosschain SDK, which is Morales. And for Morales, a new blockchain is like a new printer. It's like Windows operating system. You don't care that tomorrow there will be a new screen and that your computer will not talk to that new screen or a new printer because Windows will handle that just like Morales. A new blockchain is like a new printer.
00:15:12.912 - 00:15:42.732, Speaker B: It will work with any blockchain. But of course our heavy focus is on Ethereum and EVM based chains. Right now that is what we support. We don't support Solana and Elrond yet, although that is on the roadmap. So basically using RPC nodes, basically building in this fashion that we discussed in the beginning, building in this fashion, when you build your own things around the RPC node, it's using primitive tools. For example, you don't have an excavator, you have to dig by hand in the dirt. It's very primitive tool.
00:15:42.732 - 00:16:20.916, Speaker B: You have to spend so much time, you have to organize so much people just to build something that looks like a mud hat. And of course, using Morales and Morales SDK, you can build complex things because you move faster, you try things faster, you excel faster. It's a whole new level of abstraction. And so in that sense, talking to our PC node directly and building around it is kind of like you want to build a website and you talk to CPU. You should never talk to CPU if you build a website. Imagine if you had to talk to CPU when you just wanted to build some HTML and CSS, we would never get anywhere with the web. But this is unfortunately how crypto works today, that we all talk to CPU and sorry, we all talk to RPC node.
00:16:20.916 - 00:17:00.384, Speaker B: And RPC node should be way somewhere in the sky because it cannot give you a lot of info without robust infrastructure around it. RPC nodes are not that useful. And this is really how we're seeing now, this blockchain space transform. Now, of course, we have a lot of tutorials, for example, how to clone Zurian in 20 minutes. Because if you think about Zurian, it's logging in user, getting transactions, getting all of the data about the user and sending transactions. So you can see how you can do it yourself in just a few minutes using Morales Cloning Ether Scan in a few hours, cloning Wearable in 24 hours. We do all of these different series where we explain how to rebuild different things in crypto.
00:17:00.384 - 00:17:38.720, Speaker B: Because when you come into crypto, you kind of think that you can do what Etherscan does. But without a tool like Morales, if you just speak to the node, you cannot do Ether scan. You cannot get, for example, all tokens of a user just talking to RPC node. And of course, we have all kinds of different tutorials on different topics there on Morales Web three channel. But right now we've saved some time, some time for Q A. So I'm very happy to answer Q A. Of course, join the discord channel in the server, but also we have our own server if you want to join our community at Morales IO slash mage.
00:17:38.720 - 00:17:46.388, Speaker B: And yeah, I'm happy to take any question and answer if you guys have any. And Luke, you probably know that I.
00:17:46.394 - 00:18:03.848, Speaker A: Think we have a few questions in the chat. More than welcome to post any that you might have come up with. Now I think we have a few more minutes. Ivan, thank you for an incredible presentation. I'm really excited for Morales and the future of what you guys are doing over there. Somebody's asking, is the database centralized?
00:18:04.024 - 00:18:30.784, Speaker B: Yeah. So that's a great question. When you build your DAP, you have to have centralized solution to handle off chain data. I mean, that is how it is the database. We give you the database. And so right now, everyone is building their own database. So of course, by definition, when you're handling off chain data, for example, when you want to index the blockchain, when you want to have all of this off chain data, it is right now, in many cases, in most cases centralized.
00:18:30.784 - 00:18:58.350, Speaker B: I mean, this picture is a typical DAP right now. Now, the good thing is that most important things are decentralized. All the assets. Morales doesn't hold any node, any keys, all the assets, all the smart contracts and so on and so forth. That is what should be decentralized. But of course right now when you look at a backend for crypto handling off chain data, I mean off chain data by default is off chain. So Morales off chain database is of course also off chain in that sense.
00:18:58.350 - 00:19:04.224, Speaker B: I see some more questions in the chat. So Luke, should I take them myself or do you want to read them?
00:19:04.262 - 00:19:05.648, Speaker A: Go for it, go for it.
00:19:05.814 - 00:19:41.340, Speaker B: All right, we see some more questions. For example, Korsik asks how does it compare to alchemy? So Alchemy is nodes while Morales is this whole solution for all kinds of things for logging, user fetching, balances transactions and so on and so forth. What's the business model of Morales and price for developers? So right now we do have a free plan for most of the things you can do. 3.6 thousand requests per second and soon we're going to launch paid plans. But our free plan, it's more than enough for 99% of the use cases. And our whole strategy here is to be as free as possible.
00:19:41.340 - 00:20:15.924, Speaker B: As free as possible for DDoS reasons and for spam reasons. It's not going to be fully, fully free, but for 99% of the use cases it's basically no cost. So you can try it as soon as possible. And our business model, it is support. We have many projects that come to us and they say hey, we love the technology, but you better help us if something goes wrong. So that is a paid feature, of course, that we have real time support, chat support and of course, if it is heavy, heavy DAP with tens of thousands of users, then it costs us. Yeah, cool stuff.
00:20:15.924 - 00:20:49.484, Speaker B: I will try to understand what is the risk associated with using Morales? What type of control is sacrificed? Well, what you sacrifice in terms of control is basically the database. Although you can export it, you can always export all the data at any time. And you sacrifice a bit of control when it comes to communication with the database. So for example, when it comes to sockets, I mean, we give that to you. When it comes to API, to the database, we give that to you as well. But think like this when you want to build something, you want to do it quick. And if your DAP becomes big, feel free to build your own backend.
00:20:49.484 - 00:21:25.576, Speaker B: Start using Morales, build something quickly, get up to speed, get users, get adoption and then you can worry about being completely independent. And of course, in many cases it does make sense to be completely independent. And Morales is a tool when you are starting out and you want to be big and you're not big currently. And so when you're not big, it's not a problem for you that you outsource some of the features. Like for example, all of this basic boil plate to something like Morales. And in most cases you're still using some kind of provider whether it is infura alchemy great providers, but you're using them. I mean, you're still reliant on some provider.
00:21:25.576 - 00:22:09.800, Speaker B: But yes, I mean, when you come big, you can run your own nodes, you can run your own backend at that time it makes sense and you can afford that. But many people, they prematurely optimize. I mean, they're not even anywhere in their project and already they're thinking about how they're going to be completely independent. So it's all about your strategy and when you're starting out, it's important to be quick, it's important to try things because the risk is you build a lot, you build all of this yourself and then nobody cares about your idea because you didn't try it, you didn't go to market and you didn't test it. So it's better to use Morales, try it out, you become big, perfect. Then you can build your own. If you want to be completely independent, let's see what's in the works.
00:22:09.800 - 00:22:45.232, Speaker B: So Bob, when it comes to what's in the works, we are adding more chains like Solana and stuff like that. I mean, our goal, we're not there yet, but our goal is one unified API across different chains. So if you use Morales, you know that you are on Solana, you're on ETH, you're on Avalanche, you're also on all future chains. Because just look at the ETH ecosystem. Just a year ago, we did not have Polygon Arbitrum, we did not have optimism, and so on and so forth. And so when you build on blockchain, you have a big uncertainty. Will this chain that you build on be the best chain for you in one year, even if it is ethereum? Ethereum is fantastic.
00:22:45.232 - 00:23:20.268, Speaker B: But now it's all about how do we scale? Do we go to Polygon? Do we go to Arbitrum? Do we go to Immutable X? Where do we go? So why not just be everywhere? And if a new chain comes tomorrow, we're going to integrate. It going to be the same API for everyone. And it's decreasing that risk of that you pick the correct horse. And it's very difficult to pick the correct horse because even the best horse in town, ETH right now is also scaling into even faster horses for different use cases. But look at Arbitrum, look at all other ZK sync coming out. So that's important. And ethereum is now a whole ecosystem.
00:23:20.268 - 00:23:44.436, Speaker B: When I think about ethereum, I'm not only about thinking the ethereum blockchain. Ethereum is now everything that we're seeing. Optimistic roll ups, zero knowledge roll ups. And all of them have their own chain. And you have to be there somehow, otherwise someone else will be there and you will not capture as big market as you could have. Are there any hackathons for Morales? Yeah, of course. Well, this is a hackathon.
00:23:44.436 - 00:24:11.232, Speaker B: For example, by the way, we have twelve K. You can go to the ETH Global Price page, you can find all of the prices there. So we picked the maximum twelve k that we could give to everyone who uses Morales. And then we're going to have our own hackathons as well. We had one during the summer. So go and join our discord to keep an eye and of course join If Global Discord and there you can see our channel as well. Any plans to build awesome Morales? Like awesome.
00:24:11.232 - 00:24:43.992, Speaker B: Polygon. I'm not sure what that Najash, I'm not sure what that is. Let's see this sounds useful, but I'm missing something. Do you see DAP storing some historical contract events of chain in Morales? If so, does the DAP dev verify the backend isn't hacked when they query for events, so yeah, exactly. You can specify that this is the contract you want to watch and this is the topic that you want to watch. And you get all historical occurrences when it comes to verifying. I mean, at the end of the day, whatever node you ask, you don't know if that's correct.
00:24:43.992 - 00:25:22.072, Speaker B: I mean, even if you talk to RPC node, how do you know that they have the correct information, that the actual node has correct information? So as long as you don't run your own node, you can never be 100% sure when you're using a provider, whether it is Morales or any other RPC provider. So of course you can have some of your own verification and stuff like that. But if you are worried, number one, this is a worry you may have when you are already big. Like I said, if you want to build your own back end and if you're not running your own node, you always have to verify. You always have to check with many nodes anyway. So it's difficult to overcome that if you're not running your own node. But great question.
00:25:22.072 - 00:25:46.432, Speaker B: Are there any yeah, that one we discussed. Can we discuss the cost? Ten users. So Corset, if you want to discuss, go and join Morales IO Mage and write to Crash Emir. So just join our discord and we will help you there. We are all very active there. Thanks for the question. I found Morales recently, never worked with it, but are you cross chain? Yeah, exactly.
00:25:46.432 - 00:26:15.608, Speaker B: We're cross chain right now. We support Binance, Polygon, ETH and ETH. We are adding Arbitrum. So we have by the way, RPC nodes for Arbitrum, but it's not full integration into the server, but Arbitrum and Avalanche coming this week, full integration. So basically the entire ETH ecosystem with ETH, Polygon, Arbitrum and also we're going to add ZK sync, we're going to add optimism. We wanted to add optimism some while ago, but it was closed. So if they're fully open soon, we're going to add them.
00:26:15.608 - 00:26:37.704, Speaker B: And then of course Solana, Elrond and even non EVM chains. But I already discussed this, so I don't want to repeat. So yeah, you can go back and watch or you can also go to Morales web. Three YouTube channel and you can watch the pinned video and you get basically a version of this presentation there. Kartik, thanks for a great session. Thanks, Karthik. Thanks, Karthik.
00:26:37.704 - 00:26:44.544, Speaker B: Okay, guys, thanks a lot. Thanks a lot. Thanks for this live stream, guys. It was fantastic. And thanks for great questions from you.
00:26:44.742 - 00:27:10.084, Speaker A: Yeah, this has been an incredible session. It's really great to see everyone so participatory. Thank you, Ivan, for walking us through that. A reminder, everyone, if you want to follow up with him in our discord or in his discord, by all means, continue the conversation. I think there's a lot of things that you guys can still discuss, but thank you, everyone, for joining us. We will be ending the live stream here. Unless there's one last question we can get to in a few seconds.
00:27:10.084 - 00:27:12.570, Speaker A: But I think this should be good to go.
00:27:13.500 - 00:27:17.476, Speaker B: Thanks, guys. Thanks, Luke. And looking forward to discuss more in the discord. Goodbye.
00:27:17.508 - 00:27:20.710, Speaker A: Absolutely. Good luck. All right, guys, we're going to end it here. Take care.
