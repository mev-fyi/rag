00:00:00.570 - 00:00:27.640, Speaker A: All right, so we're now moving into our last talk of the day. We have Ben Jones from Optimism talking about roll ups and especially using roll ups with the data availability that ETH Two will soon offer us. This is the most creative title award won today. So, Ben, I'll let you take it from here and explain this really important topic to us.
00:00:29.290 - 00:00:42.220, Speaker B: All right? Thanks, Josh. Hang on, let me go ahead and share my hello. Hello, everyone. Let's see here. Wonderful. All right, we're in. Hey, guys.
00:00:42.220 - 00:01:05.602, Speaker B: Thank you, Josh, for that wonderful intro. I will take that title of Most Creative Talk title, but I actually have to give it to the rest of my team because we ran an experiment where I gave them control over my talk title. So that's what we were left with anyway. Cool. So, hey, everyone. My name is Ben Jones. That is my real name.
00:01:05.602 - 00:01:53.582, Speaker B: Not an internet pseudonym, I promise you. And I work with a team called Optimism, and we're building something called Optimistic Ethereum, and it's basically a scaling solution that makes ethereum super extra awesome because it's already amazingly awesome. And today we're going to talk about, as Josh said, sort of roll ups and ETH Two and how they fit into the sort of ethereum scaling landscape and ecosystem. And also I'm going to talk a little bit about the synergies there, really in particular because I think that that's very important to cover. Cool. So I guess I came at this talk with the title of the thing in mind, which is The Future of Ethereum. But I do think that before we talk about the future, we need to understand a little bit about the past.
00:01:53.582 - 00:02:36.510, Speaker B: So I'm going to share a little bit of very brief points of context before I talk about the future. And the other thing that I want to say is that the reason that this is not a recording and I'm sitting here in front of you guys talking live in a way where I'm going to almost surely say something embarrassing and slip up, is that you all can ask questions. So I'm going to try to keep this quick because I'm much more interested in responding to people that are tuned in around the world than me just doing something that could be recorded anyway. So bring the questions on, get them ready. I want good questions, but we'll go over some slides first. Okay, so let's talk about the first little bit of context. And this is ethereum scaling as a general concept.
00:02:36.510 - 00:03:12.922, Speaker B: So I've talked a lot about these concepts. I've actually done an ETH global talk in the past where I talked about what I called the Cambrian Explosion of layer Twos. And I think really, it's even accurate to say that there's a Cambrian Explosion of blockchain scaling generally, and certainly ETH Two. And Sharding, while it may not technically fit into the category of layer two because it is a layer one I think it's worth talking about. And that's the important thing that I want to drive home about what's been going on in Ethereum is that the number and designs and space of scaling this chain is just booming. It's absolutely exploding. Right.
00:03:12.922 - 00:03:49.080, Speaker B: Cambrian Explosion. One thing about the Explosion terminology, actually, that I don't really like in some sense, is that it sounds, like, very violent and things are moving away from each other in this sort of explosion. But remember that the Cambrian Explosion resulted in a very diverse ecosystem where everything worked together. And that's what I'm going to talk about today, is how some of these things work together. And in particular, I'm going to talk about e two sharding and roll ups, and really particularly e two phase numero one. Numero uno. E two phase one.
00:03:49.080 - 00:04:30.290, Speaker B: Okay, so the other crazy thing that I wanted to say is that the other alternative to Explosion that I was thinking about for Cambrian Explosion, because that has a negative context, is implosion. Right. Because somehow what I want to communicate is that there's a lot of energy going on in scaling right now, and it's really important that it all comes together. And so I Googled implosion, and it turns out that the first Google image result is like a high level diagram on creating a nuclear weapon, which I just thought was ridiculous. And I figured if I'm on the list, I'll put you all on the list, too. So, very interesting, and maybe we'll even get back to that diagram. Okay? So that's the first sort of point that I wanted to make, is that things are popping off right now.
00:04:30.290 - 00:05:03.854, Speaker B: Super awesome. The second little bit of history I want to share, or at least catch people up to speed on is what is going on with e two and sharding. And in particular, what I really want to do is work in this joke that I've been trying to crack for a very long time, unsuccessfully, which is to say that e two phase one is like a hotel during COVID because it has a lot of availability. Okay. I've been trying to figure out how to get that idea into a good joke form. I tried to do a visual pun. It's okay.
00:05:03.854 - 00:05:33.030, Speaker B: I don't know, but I hope you can see that I put way too much effort into it with some photoshop. Cool. Okay. So what does data availability actually mean? This is something that the term data availability right. I think is thrown around a lot on the Twitter sphere and the sort of crypto community. And I think it's worth diving into a little bit more about what that means. But the approach that I don't want to take is diving into what it means by sharing things like this.
00:05:33.030 - 00:06:14.066, Speaker B: Right. So this is like this crazy e two sort of spec, and I think it's too much into the weeds. So what I'm going to share is my Quick TLDR high level vision, simple description of what we can think of e two phase one as what does it mean that there's a bunch of data being made available? Okay, so I'm going to do that by recommending a great website that some of you may have visited called Downforyonerjustme.com. Okay, so this is a very useful website. You can just go to it if a website isn't working, and this website will tell you whether it's working to them. Right? So if you go to Google or in this case, I tried to go to Rollupblockdata.com and down for everyone, or just me, also tried to go there and check whether or not the site was up.
00:06:14.066 - 00:07:05.666, Speaker B: And of course that was just a made up URL. But of course it's like, relevant to what I'm going to be talking about, but it was down. So the very simple way of imagining what e 2.0 is, is we take that functionality of a website or another party checking for you whether or not they can download some data, right? Download this web page and we decentralize it. And there's a lot of stuff about random sampling and proof of stake and all that sort of super important stuff in that spec and in how it technically works. But at the end of the day, the way to think about e two phase one is that we select a decentralized pool of people and they all start downloading the block data from each other and making sure that everyone else can access it because what they want to do is make a censorship resistant chain. This is one of the awesome properties of blockchains, and we really want to preserve it, but we want to scale it.
00:07:05.666 - 00:07:44.126, Speaker B: And so this is like sort of a funny high level intuition for how we do that. Okay, cool. And then the last context that I will share is just a little bit about roll ups. And in particular, I'm going to talk about optimistic roll ups because it's the thing that I am spending all my time on and the basic intuition for why this thing that's a roll up, which I'll talk about later is called optimistic is. I think this slide is like the best summary that I've seen is you don't go to court to cash a check. You go to court if the check bounces. Right? So this is a very obvious statement, but if we think of a blockchain as a court, it can give us a lot of intuition for what an optimistic scaling solution does.
00:07:44.126 - 00:08:20.090, Speaker B: Okay, so we can go into a little more technically what that means. Right? It's relatively simple. So you have up here your L one, which is ethereum, of course, in parentheses. And this will be e two in this sort of synergistic future I'm going to be talking about. And of course, we have an L two down below. And this is what we call the roll up, the optimistic roll up. And the basic idea is that you start off with some state, say, state zero over here on the left, and then you have a process that picks a transaction, and along with that transaction, someone proposes what the result of that transaction is, right? So, fairly simple.
00:08:20.090 - 00:09:27.102, Speaker B: If we started off with state zero and then TX zero sent Alice some money, then state one would have bought Alice with that much more money, right? And then we could do the same thing for TX one, and that would produce state two and so on and so forth. Okay? So the important thing about an optimistic scheme is that it is expensive to calculate what the result of TX zero is on state zero, especially in a decentralized consensus with this crazy low gas limit that we have in Ethereum and crazy spike in gas prices. So what we do instead is we simply post that data, but we do not do any computation on it. Instead, what we do is we basically say, we're going to make this notarized, we're going to cement this as this new proposal. And if we ever get to a point in time in which there's a fraudulent proposal, right? So transaction two here, let's say, shouldn't result in state three, but someone proposed it. Only then do we go ahead and prove fraud, right? We say, hey, look, I'm going to prove it to you. We didn't want to at first because we wanted scalability, but I have no choice.
00:09:27.102 - 00:09:56.360, Speaker B: Now. Let's execute this transaction and show you what really happens because it's not S three, right? And that's a fraud proof. And this allows you to basically, in a happy case, know that the chain progresses for cheap. But in the sad case, you can prove that it was misbehaving or some party was misbehaving. Cool. Okay? So normally if I had, like, a chat in front of me, I'd be like, all right, does that make sense? I'm just going to have to believe that it makes amazing sense to you all. But if it doesn't, now's the time to write down your questions and ask more.
00:09:56.360 - 00:10:35.640, Speaker B: Okay? And then the last thing that I'll talk about is just in practical terms, one of the most important things to us about this system is that execute L2 TX can be execute EVM TX. So this took a lot of work for us to figure out. And we have a deep dive article called OBM Deep Dive if you're interested in checking it out. So we call the version of the EVM that can work in this execute OVM TX. We call it the optimistic virtual Machine instead of the Ethereum virtual machine. And we're very, very excited that we can have something that is so close to Ethereum but works on L2. So worth even giving the classic mind blow GIF, which I do pronounce it.
00:10:35.640 - 00:11:29.802, Speaker B: Okay? So I guess the last thing that I'll say is as I was putting together these slides, my mind kept coming back to this nuclear Bob diagram. And I actually realized that it's kind of, at least graphically speaking, a good analogy for the synergy that I'm talking about. Because if I go back a few slides, this rolled up, right? This notarized, as we call it here, is exactly the same thing that ETH Two Phase One gives us. If I keep going backwards here, because obviously the most important property of keeping this system secure is that if TX One or s two, you could not download them, then you could never pass them into this function. You could never make the transaction that proves fraud because you can't give the inputs. So it's very, very important for this optimistic roll up system to work that the data is made available. And that is exactly what E two, Phase One, does.
00:11:29.802 - 00:12:06.530, Speaker B: It makes sure that it's not down. It's up for everyone, including me, right? Okay. So if we were to imagine this diagram as sort of what we're talking about here, what we can imagine is on the outside we have these roll ups and they are able to basically surface disputes inward. And then in the inner part, instead of a subcritical mass of plutonium 239, we have a supercritical mass of E two validators. You guys just saw the talk on how to spin up a staker. Go do that. Get us to that supercritical mass and we will explode with so much availability.
00:12:06.530 - 00:13:08.422, Speaker B: And then, of course, at the end, what happens is not nuclear fallout, but it's sort of a nuclear ethereum adoption explosion, right? If we can get transactions down cheap and we can make them fast and we can make them easy to do, then we can really drive ethereum adoption, which is super, super awesome because right now things are very expensive and it's hard for people to be able to use it. Okay? So that is sort of the high level description that I would use to describe what E Two Phase One is what roll ups are and how they relate to each other and why that's so critical that both of them come hand in hand. Wonderful. And the next thing I'm going to talk about is just a little bit about the system that we're building and sort of our philosophy and how we're approaching building optimistic ethereum cool. So one of the big important pieces of philosophy that I think we are taking is Pragmatism. So very important. Scaling is an issue today, right? Gas prices are going through the roof on the ethereum main chain today.
00:13:08.422 - 00:13:46.542, Speaker B: And it's extremely important that we solve this issue. It's not a hypothetical. It's not a research problem that we can sink years into. We have many awesome research things coming together, but we need to find and use solutions today. So it's extremely important that we do that and the other philosophy related to Pragmatism that I think is relevant is don't reinvent the wheel. So on one hand it's a great thing that the EVM can be used for developers because who wants to rewrite their application to deploy it to a more scalable version. But what's equally as important is that we can reuse all the infrastructure that Ethereum uses.
00:13:46.542 - 00:14:24.398, Speaker B: So down here in the bottom I have a little diagram which you may not a little clip art which you may or may not be able to see, but that is a diff. And the point is that it is a git diff that is very, very small. So not only do we provide EVM just like developers know and love from an interface level we have actual implementations of Geth and of the EVM that are very similar. It does not require changing an entire architecture to be able to get the OVM to work and to scale the EVM with optimistic roll ups. Cool. So that's one of our philosophies. Let me see if I can click there.
00:14:24.398 - 00:15:00.330, Speaker B: Another very important philosophy for us is collaboration. So we're a public benefit corp and we think it's very important that we have a charter that promotes access to scalable and cheap financial infrastructure. More concretely, the two things that we've been making sure that we do that's very, very important one is develop out in the open. So if you go to our code base, every single commit, everything that you look at there is public and there's no staging. You can just go and see the weird things that we're trying and maybe sometimes failing at. And the other thing that I think is super important for us to do is to lean very heavily into ETH. One point X.
00:15:00.330 - 00:15:42.970, Speaker B: So I think we had a talk from Alexei, from Turbogeth earlier today. There's a very awesome, very large community of people working to make Ethereum core infrastructure better. And the great thing about having a tiny diff is all of the things that people do to make Ethereum better, we can use to make Ethereum better. And all of the things that we do to make our system better, ethereum can use to be made better. So we're super excited about that. And the other thing is that it's very hard to get Ethereum forks because there's a very high coordination cost. You have to get a core dev call going, you've got to have some people angry on Twitter and discussions there, right? But layer twos, because they're smart contracts have permissionless, innovation, a much lower switching cost.
00:15:42.970 - 00:16:25.606, Speaker B: And so we're very, very excited about being able to do things like stateless Ethereum. So I found a cool stateless Ethereum diagram on the internet very exciting and also things like parallelizing Ethereum, which is something that's very, very important. Cool. And then the last thing that I'll say is as far as our philosophy goes is that iteration for us is extremely important. So it's very important that we don't build in a vacuum, and we take a lot of care to make sure that doesn't happen. We've launched two test nets, and every time that we've done that, getting real users using a system has taught us so much about what we need to build and what people desire. So we learn from the community and we work for the community.
00:16:25.606 - 00:16:40.426, Speaker B: So if you want to teach us things, you should reach out. And if you want to work with us, you should also do that. Speaking. Oh, man, I did that transition and I forgot this was the next slide. But I guess I can't pretend it's intentional. Now we'll pretend it's intentional. Yes.
00:16:40.426 - 00:16:58.562, Speaker B: As I was saying, you can find us on the Internet unsurprisingly. We got a Twitter here. We got our website, which has a link to our discord in it. Go check that out. And like I said, all of our code is open source and ready to be torn apart and viewed by anyone watching. So go check that out. Okay.
00:16:58.562 - 00:17:05.700, Speaker B: How are we doing on time? Great. Okay. I wanted to leave time for questions, and I think we've succeeded, so that's my talk.
00:17:06.970 - 00:17:22.940, Speaker A: Awesome. Thanks, Ben. Yeah, we do have some questions, so let's jump right into it. How long do you estimate the existing Ethereum chain data will get us assuming full roll ups? Until we hit capacity and need additional layer one data provided by e two?
00:17:24.910 - 00:17:31.914, Speaker B: Hey, Josh, I can't hear you. Okay, you're back. Sorry about that.
00:17:32.112 - 00:17:34.446, Speaker A: Did you hear my question at all or I'll just say it over again?
00:17:34.468 - 00:17:37.902, Speaker B: I'm going to be honest, up until that point, I heard nothing. Ask it again.
00:17:37.956 - 00:17:49.714, Speaker A: All right. How long do you estimate the existing Ethereum chain data will get us assuming full roll ups? Until we hit capacity and need additional layer one data provided by e two?
00:17:49.912 - 00:18:37.140, Speaker B: Right, so the e two data availability gets us, like, orders of magnitude better. Right? And this is sort of the point of sharding has been from the beginning, by the way. E two phase two is all about doing the same thing that it does for availability, which is just like your ability to sort of timestamp things into the Ethereum chain and makes a very provable, very accessible, very downloadable for everyone way to put some data. But of course, the other thing that Ethereum does is give you a trustless way to do computation. This is your smart contracts. So both of these things are massively improved by e two in some phases, but the easier phase, thankfully, and also the most important phase for roll ups is that data availability. And so e two has been on a long track, knowing that we need to scale orders of magnitude up today.
00:18:37.140 - 00:19:22.666, Speaker B: That said, we can get a lot of transactions out of ETH one in the short term. And this is like the important Pragmatic thing. It's why we're not building a system that uses E Two availability. First, we're building a system that uses ETH One availability, and so you can get ten to 100 x scalability. The scalability for a roll up is interesting in that it is a little bit dependent on what you're scaling. So, for example, if you are scaling transactions that are very large, but then only a very small bit of computation is done on them, it's not as useful in roll up because you still have to pay your transaction fee to make sure that that big data is downloadable for everyone. And all that you save on is the tiny little computation.
00:19:22.666 - 00:19:47.880, Speaker B: Whereas you could have a very small transaction that is not a lot of data to post, but then it does a lot of things, a lot of addition and subtraction multiplication, storage, storage loading, storage setting, creating other contracts. Then that's going to give you a lot more scaling. But we can throw around ten to 100 x 3000 TPS. There's lots of numbers you can throw around. The truth is, it's really a little application dependent. Okay.
00:19:48.250 - 00:20:12.730, Speaker A: And kind of a follow up to that, just understanding how these things fit into each other in sequence. Once we have data availability from phase One, from ETH Two progress, will there be any reason to use roll ups that use ETH One data availability? Or at that point, is it just going to make sense that really all authentic roll ups are going to be using E Two data availability?
00:20:12.890 - 00:20:56.158, Speaker B: Right? So I think it depends on what you mean by makes sense. So on one hand, the point of E Two phase One is going to be making available data way cheaper. And so it definitely makes sense if you think that the roll up, even a roll up centric E One is getting congested to move that to ETH Two because it's going to be cheaper. So there's no question there. And really what it comes down to, again, I'll go back to pragmatism. The answer to that question will really just be what is the development changes that we need to make? How do we get available data into the computation layer where we do disputes? But as soon as we can do that, it makes a lot of sense. Got it?
00:20:56.324 - 00:21:17.060, Speaker A: Okay, moving on. Are there any really major open problems that need to be solved before this is possible? Or is it really just a matter of like, look, optimistic roll ups need to be on mainnet for a while, and of course we have to deploy data shards, but once we have those things, are there major unsolved problems or we should be able to implement at that point?
00:21:17.690 - 00:22:01.090, Speaker B: So I love research, and so I would be very sad if the answer to that question was no, everything is solved. And so that's definitely not the case. What I can say is that I and other members of my team spent a lot of time working on plasma, which was the scaling technology before that, and doing research. And one of our motivations for its time to act on roll ups was that it was a very pragmatic, very implementable thing as it stands today. And so I think that's very true and very important. Certainly there are tons of things beyond that that are going to be important in my opinion. Some of the biggest are basically what I said before, which is all of the ETH One point X stuff.
00:22:01.090 - 00:22:22.140, Speaker B: So state Bloat is a huge problem on ETH One and we can do crazy awesome things that ETH One point X. People have been trying to figure out how to do and actually deploy them in a practical manner on roll ups today. And so I think that's very exciting. Those research problems are underway, but that's some examples of future important research.
00:22:22.670 - 00:22:36.830, Speaker A: Okay, and we got a couple of questions specifically about optimism as well. So let's jump in there. What are the advantages of optimism's roll up solution as opposed to arbitram's optimistic roll up solution?
00:22:37.890 - 00:23:09.660, Speaker B: Spicy question. So, I mean, the first thing that I'd say is everyone takes their own approach. And so the answer to this is going to depend on the system that you're building. Absolutely. The things that I will highlight are honestly things that I've already highlighted about the OVM, which is that we are reusing everything from the EVM humanly possible. And so our view is that taking that approach to the roadmap is going to have huge payoffs as the ecosystem evolves. I think that's going to be really important.
00:23:09.660 - 00:23:31.200, Speaker B: Yeah, I can tell you, having spent a lot of time working on doing things in the EVM, I've become so grateful anytime that we can do something that has already been done with the EVM because it is so much easier than reinventing the wheel. So that would be the main thing that I would say.
00:23:33.570 - 00:23:43.490, Speaker A: I mean, kind of building on that. What, if any, extended capabilities do you want to add to the OBM that's beyond the baseline of what EVM gives us today?
00:23:43.640 - 00:24:34.046, Speaker B: Yeah, I'll hit you again, Josh, with the ETH One point X. But one of the coolest things that we've done in this release is built out something called account abstraction. So this is a concept that you can go and read tons of ETH research posts on all over the place. But basically what it comes down to is ditching the notion of ethereum wallets as being something that is enshrined and ethereum transaction formats as being something that is enshrined and instead just making everything be smart contract wallets. Right? And so this sounds sort of obvious and smart contract wallets are especially because of meta transactions are really booming at the moment. But the ability to do this natively in the protocol is super powerful. So that's one thing that concretely.
00:24:34.046 - 00:25:17.840, Speaker B: We have now the other things, like I said, I'll just keep harping on ETH. One point X is Stateless clients are going to be huge and especially when we have a lot of data available, statelessness is super awesome. Another one that I'll lay out is parallelism. So right now the EVM is sort of this single threaded beast, but we're going to be able to basically split that out into something that is asymmetrically relevant or asymmetrically biased towards the people that are defending the chain. And so we think that's going to be something that's super exciting and it's going to basically get us a higher gas limit without having to sacrifice in other areas. Got it.
00:25:19.190 - 00:25:51.850, Speaker A: And can kind of continue on this thread a bit. Actually, I should say, if anyone watching is interested in learning about account abstraction, we had a great talk earlier in the day from Sam and Angstar. So check that out. It's going to be on our Twitter, it's going to be on our YouTube. You can go check it out. But continuing on this thread, Ben so we presume that Officen will roll to a version one, but still have some things on the roadmap, subsequent versions, et cetera. What does upgrading from authors and V One to V Two look like in practice?
00:25:52.510 - 00:26:53.998, Speaker B: That is a very great question and that's something that we've been thinking a lot, a lot about as we gear up for a main net release. So the first thing that I'll say is that we want to make sure that people have optionality and there's sort of a trade off sometimes between giving users optionality and giving them a horrible experience. But one thing that we've been very strongly opinionated about is making sure that the actions that you take in Rollup are as generalized as sort of the EVM was, if you compare it to Bitcoin. And so what this means is that there's not really actually any sort of function in the OVM that is like deposit or withdrawal. Instead there is what you could consider a message passing layer. And so instead what happens is you have a contract that holds deposited money on L One and a contract on L2 that makes deposited funds appear if they are held on L One. And these two contracts have an authenticated way to communicate with each other.
00:26:53.998 - 00:27:43.914, Speaker B: So anytime you lock up some money here, it mints it down here and if you want to withdraw it'll, burn it down here and it'll release the funds to you up here. And so this sort of arbitrary message passing construction gives you a lot of flexibility in how you want to design an upgrade mechanism. The thing that we are a big fan of is basically opt in or opt out mechanisms where you have a period of time in which the state is going to be forked to have basically a better improved VM or better improved contracts. And users will have. A period of time where in that time they will be able to say, I want to use this upgrade. And they'll basically be able to convert their tokens into the same amount of about to be upgraded tokens and they'll go there. And so that's one approach.
00:27:43.914 - 00:28:19.306, Speaker B: Another approach is using that mechanism in the opposite way and saying by default there will be some governance mechanism that will promote an upgrade. And if you don't like that upgrade, then you can do the exact same thing to opt out and you will be left behind in the old chain which will still continue running. So yeah, that's how we think about it, is basically like give people flexibility and when you do upgrades, make it a new chain. Don't destroy the old chain and make a new one, just make a new one and give people an easy way to migrate over. Great.
00:28:19.488 - 00:28:33.280, Speaker A: Okay, if you still got time, we got two, I think what should be relatively short questions and then we'll wrap this is right from the chat just very recently. Is the fraud proof executing the entire transaction or sampling certain steps of it?
00:28:33.970 - 00:29:09.874, Speaker B: That's a great question. So it honestly depends on how you define transaction. I think the way that I would assume you're defining it, the answer is it does the whole thing. So there are a pretty large design space actually of ways to sort of distribute interactivity into these fraud proofs. But again, our focus is pragmatism and the pragmatic way to do it is you just run the transaction. So that's what we've gone with because this is like the fraud proofs are the sad path, not the happy path. And so we have something that works, we want to get it to people because we really need to scale.
00:29:09.874 - 00:29:10.670, Speaker B: Ethereum.
00:29:12.930 - 00:29:24.270, Speaker A: Okay, next, what techniques do you use to keep fraud proofs attractable size rather than having to replay massive blocks or full transactions entirely on main chain.
00:29:24.690 - 00:30:08.090, Speaker B: So that is a great question. So there's two things that I'll say. So the first thing is that this is yet another example of us being so thankful that we're able to reuse the EVM because something that the EVM has that's very important is gas metering. And because the EVM has it, the OVM has it. And so you can bound transaction size and therefore fraud proof size if you're playing the whole transaction by having a gas limit on a per transaction basis. So that's one part of the answer. The other part of the answer is that we have a bonding system whereby anyone who might be able to take an action that you would have to prove fraudulent to secure your funds requires that you post a bond.
00:30:08.090 - 00:30:34.022, Speaker B: You basically take some ETH and you lock it up and you say, hey, I promise to tell the truth. If I don't tell the truth and fraud is proven, this money will be slashed. And so not only does the money get slashed, but some of it is also used to pay back for the gas that people spent doing the fraud proof. And so this is the other sort of MVP detractor from fraud proofs being big and expensive on L. One is make sure people get reimbursed. Got it.
00:30:34.076 - 00:30:45.130, Speaker A: Okay, final question. Ben, it seemed like explosions were on your mind earlier. It appears that you're joining us from a bunker right now. Tell us a little more about your environment.
00:30:45.470 - 00:31:10.720, Speaker B: Tell you a little more. Oh, great. Well, I'll DOX myself a little say that I'm in the wonderful city of New York. What you are looking at above me is not a bunker, actually. It is a shelving unit that I took a hacksaw to and cut some slots in and put some of the shelving things across between these two shelves. So there's another shelf there, and my bed is actually up above me right now.
00:31:11.250 - 00:31:25.478, Speaker A: Okay, we had lots of guesses coming in the chat. I hope that someone won some money on that. Okay. Thank you, Ben. Really appreciate it. I think there are more questions in the chat. If you've got a minute to jump in and chat with people, I'm sure that they'd appreciate it.
00:31:25.478 - 00:31:30.470, Speaker A: And of course, you can find Ben on Twitter, I'm sure, and maybe he'll answer there as well.
00:31:30.540 - 00:31:38.582, Speaker B: Oh, yeah, at Ben underscore chain. It's another horrible pun. That's my Twitter handle. I totally didn't put that, but appreciate it. Josh all right, take care, everyone.
00:31:38.636 - 00:31:38.930, Speaker A: Thanks, Ben.
