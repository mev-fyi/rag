00:00:05.770 - 00:00:27.234, Speaker A: It's all good. All right. I'm going to be standing behind the podium because there's no, like, click or anything, but we'll make it happen. I'll try to be as out here as possible, but yeah. So should we get started? Thanks for the wait. The song I was playing is by Franco You. It's called the provider.
00:00:27.234 - 00:00:51.530, Speaker A: Hey. It's a lit song on its own. Not only, but also it's lit because it's terribly relevant to some of the content I'm going to be talking about at this workshop. So just want to throw it out there. Anyway, I'm getting ahead of myself. All right, let's really get started. I think this is the first talk of the hackathon, so I'm going to take the pleasure in saying, welcome, everyone in this room to Eve, Amsterdam.
00:00:51.530 - 00:01:22.898, Speaker A: Yeah, y'all probably flew in from all across the globe, safely landed here. Now we're going to spend the next three days, like, building cool stuff. How exciting is that? A quick intro about myself. My name is JM. I'm an engineer on the Coinbase Wallet team, specifically building on the browser extension and the Coinbase Wallet SDK. Today, my talk is really going to be about wallets. Specifically, I'm going to be focusing on the ideal wallet integration setup for your DAP.
00:01:22.898 - 00:02:03.250, Speaker A: And why, without it, your DAP is not going to make it. Yeah, I wrote that title for the workshop, and, yeah, I'm really proud of it because it's super spicy. My talk is going to be divided into three parts. First, I'm going to talk to you all about Coinbase Wallet and all the exciting features that our team is building behind the scenes. I'm going to share with you all the reasons why you should use Coinbase Wallet and try to FOMO you into using it as an end user. Yeah, by the end of it, you're going to be like, this guy's so shamelessly shilling his product. I kind of love it.
00:02:03.250 - 00:02:41.198, Speaker A: Better go try it out. Eh, part two, I'm then going to be talking about taking a step back and talking about wallets in general and the importance of wallet for you as a DAP developer, and also going to be talking about how your DAP actually communicates with these very wallets. And finally, we're going to be wrapping up by talking about the ideal multi wallet modal setup for your DAP. And walk you through some code snippets, maybe even do a live demo on how you can really get kick started on your project, especially for this hackathon. Sounds good. Yeah. All right, if you have any questions, we'll try to have some time at the end to answer any questions.
00:02:41.198 - 00:03:03.590, Speaker A: I do want to make this room a little more engaged and fun, so I'm going to try to ask questions during the talk so you guys can raise your hands and answer. And to give some incentive to answering, I'm going to give out free swag for anyone who answers correctly. Coinbase swag. Wow. This room is like not about the swag game. What's going on? Usually when you go to a room, you're like free swag. They're like, Swag, swag, swag.
00:03:03.590 - 00:03:44.626, Speaker A: They're usually like Seagulls and Finding Nemo, but you guys are just like so low key today. It's been a long week, really. How about we all just stretch breathe? Yeah, y'all probably did all the whole COVID test waiting for the registration and stuff. So not but yeah. So with all that said, we'll probably get started. How about a show of hands? How many of you guys heard of wallet? OOH. How many of you guys have you used Coinbase Wallet? Okay, how many of you guys use Coinbase Wallet as your primary wallet? Wow.
00:03:44.626 - 00:04:24.918, Speaker A: No swag for you guys, man. And Shanna, you can put your hand down because Shanna's on our team. All right, knowing that stats, we'll get into it. Assuming that you don't know about Coinbase Wallet because there's folks watching this live stream too. So most of people know Coinbase as their centralized exchange and also the Super Bowl QR code that bounces around, but not a lot of people know them for their self custody wallet. And so Self Custody Wallet is here to optimize your experience using DApps of all different kinds, whether it's in DeFi or NFTs or DAOs. It's offered natively on Android and iOS.
00:04:24.918 - 00:05:05.182, Speaker A: And as of last November, we also launched a standalone Chrome extension to really optimize your user experience and making it super easy for you to interact with various steps. Now, I do want to hit on some common misconceptions. Coinbase Wallet is not our retail exchange app, not the custodial app. It's also not a KYC wallet, it's a no KYC wallet. And third, it's a self custody wallet. And we fully embrace the idea of nacho keys, nacho crypto, and a lot of users are using it. We're known to be the fastest growing extension in the United States.
00:05:05.182 - 00:05:50.618, Speaker A: We're also the number one mobile self custody wallet in the US. And finally, what I think was our biggest advantage is we have the ability to take the more than 89 million users in our entire Coinbase ecosystem and we hope to move them all on board into web3 using our self custody Wallets. A lot of eyes are here like sheesh. How are you going to do that? Well, we're going to do that by focusing on dead simple user experience. And what I mean by that will be shown with some of the features I'll be showcasing here about our wallet. So what are the features on our wallet currently? We support a unified portfolio so that you don't have to be lame and change through different tabs to go through networks on your wallet. It's all there in front of you.
00:05:50.618 - 00:06:28.934, Speaker A: Unified EVM and you see your entire aggregate token balance at once. We also have support for NFTs send and viewing your collections all in your browser extension. We also have a native Dex experience where you can swap your different tokens inside the extension without having to leave the extension and use adapt currently supported on mainnet and polygon. We also have capabilities like sending through ENS, speeding up and canceling pending transactions. We also have new support for ledger so you can connect your cold wallet to the Coinbase Wallet extension and use it safely and securely. I see someone clapping there. Nice.
00:06:28.934 - 00:07:14.630, Speaker A: And finally, what we think is a real killer feature is we have the ability called Coinbase Pay that newly launched, that allows you to on ramp Fiat into crypto from within your self custody wallet by connecting it to your coinbase exchange app and being able to seamlessly on ramp crypto into your wallet without having to go through another exchange and send it and input your address, et cetera, et cetera. So these are some features why we believe it's super simple and super beginner friendly for users to be able to use Coinbase Wallet and onboard onto Web three. Now, you already see some bored faces. They're like, yo. I'm not a beginner. I didn't come all the way here to Amsterdam to hear some beginner friendly UX. I'm a true DJ.
00:07:14.630 - 00:07:59.640, Speaker A: Is that the know? I flip NFTs in my sleep, I move farms in my toilet. CoinGecko notifications are my morning alarm, right? I see some faces. I'm a true crypto DJ and I breathe and live on DApps. What user experience do you have for me? And yes, you fellow DAP connoisseur, that's a good question. So we're going to play a quick game of asking yourself how many different ways are you able to connect to your favorite DAP using Coinbase Wallet? And I'm actually going to give you time to think about it. And then I'm going to ask you and then whoever gets their actual answer is going to get some free swag. All right, y'all think of an answer.
00:07:59.640 - 00:08:18.342, Speaker A: All right, raise your fingers to indicate how many different ways are there to connect to your favorite DAP using right. All right. Not a lot of fingers. Come on, just throw a guess. You could win some free swag. Okay, I'm seeing some numbers. I'm seeing some folks also who saw me in Barcelona.
00:08:18.342 - 00:08:32.926, Speaker A: You're disqualified because you saw the same talk. I see one. I see two. All right, wow, six. I see three. I'm just going to pick one. What is that number? All right, she got it.
00:08:32.926 - 00:08:50.418, Speaker A: Congratulations. Four different ways to connect to your favorite DAP using Coinbase Wallet. Four. Is that possible? That's a lot of different ways you can connect to your DAP. And I'm going to walk through step by step how to do it. And congratulations. You should come by later at our booth and we'll give you some free swag.
00:08:50.418 - 00:09:16.906, Speaker A: Free coinbase swag. All right, let's go through the options. First option, how to connect to your favorite DAP. Pretty standard using our standalone browser extension easily connecting experience. Just sign and submit transactions through the pop up that shows on your extension. Pretty standard you've seen with other wallets. Second option, you can actually keep your keys on your mobile phone if you believe in better sandboxing.
00:09:16.906 - 00:09:58.998, Speaker A: You want to be a little more security conscious and be able to connect your wallet on the mobile to our extension through a QR code and be able to sign and submit transactions directly from the phone. That's option two. All while using your desktop DAP. Option three for those who are a little more security conscious who don't even deal with hot wallets. I want to stay cold as I can. You're able to connect with your hardware wallet through our desktop extension and sign and submit transactions directly from your ledger. And finally, let's say you are a true NFT connoisseur and you're on a train and you're so busy you want to hit the next mint of the next moonbirds, next new Hot NFT Drop.
00:09:58.998 - 00:10:22.946, Speaker A: So you have to do everything on your phone. And so you pull out Safari or Chrome on your phone as a browser and go into your DAP to mint your NFT. Then what Coinbase Wallet SDK offers is an ability to deep link directly into our in app DAP browser so you can seamlessly automatically connect to your DAP and be able to sign and submit transactions from the mobile phone. So. Yeah. Djen's here. Let's hear it.
00:10:22.946 - 00:11:18.136, Speaker A: Do you like these? Yeah. Whether you're an NFT sleeper, flipper, you're a toilet farmer, or an actual CoinGecko, we got you covered. There's so many different access points for you to enter into your favorite DAP using Coinbase Wallet. Now, we've talked a lot about all these different ways that Coinbase Wallet benefits you as an end user, but what am I talking about? Because I have a group of here who are actual DAP developers. So I want to ask you the question in turn. What is the role of a wallet? Why does a wallet matter to you as a DAP developer? Anybody? Come on, why wallet? You just shout out answers, connected. It's what makes this whole thing possible in a lot of ways.
00:11:18.136 - 00:11:35.660, Speaker A: Okay, yeah. We don't need to go through bank. Yeah. In my case, I use a lot of words to actually authenticate. Yeah. Sorry, say that louder. To authenticate what are you authenticating.
00:11:35.660 - 00:11:45.580, Speaker A: Yeah. What did you say? Transaction. Exactly. Yeah, say that louder. Yeah. Transaction. Signing transaction.
00:11:45.580 - 00:12:11.848, Speaker A: Signing messages, confirming transaction. All of that. All of the above. Yeah, exactly. So as a DAP developer, you got to ask yourself, like, why am I in this workshop? Why does a wallet matter to me and I'm building a DAP? Why is that important to me? And it's all about the ability to sign messages and submit transactions. And I like to simply think of a wallet as more of a key management software. It's a bit of a boring name, not as catchy as wallet, but that's sort of how you can think about it.
00:12:11.848 - 00:12:32.888, Speaker A: Let's take an example. Let's say you're building the coolest DAP. Let's say you built uniswap. For example, imagine if I, as a user, have to go to your DAP. And log in with my private key so that you can send transactions on my behalf on your DAP. And I have to do that for every DAP. Logging in with my private key.
00:12:32.888 - 00:13:32.188, Speaker A: Would you do that? No. That's crazy, right? Because the amount of trust you have to give to each and every DAP with your private key is significant and that will truly get you rugged. And so what a wallet offers is taking that burden of trust off your hands, being able to hold your keys and manage it for you and facilitate safely and securely signing and submitted transactions on your behalf. So really a wallet is all about managing keys. So in essence, what it does is helps you as a DAP developer, your DAP and the end user, their relationship to stay enlarged, trustless. Now, the reason I emphasize the fact that wallets and users are differentiated because I have a lot of friends who conflate the two wallets accounts. I have a friend who said, I want to try rainbow wallet, but I can't use it because all my funds are stored on my MetaMask wallet.
00:13:32.188 - 00:14:22.050, Speaker A: And I'm like, no, your funds are not stored on your MetaMask wallet. Your wallet does not store your crypto. Your crypto is associated with the account on your public ledger that accessible through your private key, right? So the on chain account is not bound to a wallet and it's pretty much wallet agnostic. And you can always import a key that you have on one wallet to another wallet, like coinbase wallet. A little shill there. And yeah, and another thing that a wallet does for you is facilitate, again, being able to sign and submit transactions on chain and interact with an ethereum client. So yeah, that's sort of, at a high level, a very simplistic view of how the wallet is really important to you as a DAP developer really offloading that trust.
00:14:22.050 - 00:15:13.816, Speaker A: So the question here is in a little more practical sense, so then how does my DAP. How do I, as a developer, actually communicate with these very wallets? How do I send transaction requests to a user? How do I listen to state changes when a user changes their account on the wallet or changes network on the wallet? How does that interaction actually happen? What's in this question mark, I want to know. Well, it's not that surprising because just as any other system interacts with one another, there's an API. It's pretty standard that every wallet exposes their API, especially on the Web. As a JavaScript object on the web page that you from the front end of your DAP can easily access and interact with. And that wallet API is not called wallet API. It's not called key management, API.
00:15:13.816 - 00:15:56.736, Speaker A: It has a lovely name. It's called the provider. Hello, Frank Ocean. And yeah, so it's very standard that there is a provider, this Wallet API that's given provider that's pretty motherly name, isn't it? Provider like provide. So how about for a minute you scratch thinking about an API as some abstract thing, the Wallet API, forget about it and just think about a mother providing for their child. Except the mother here is feeding their child and the mother is the provider and the child is the DAP. What's going on here? Yeah.
00:15:56.736 - 00:16:31.292, Speaker A: And you're asking yourself, well, what is the provider actually providing? Right, well, the mother provides the child with milk and sustenance, for example, and the provider provides the DAP access to ethereum. Some ethereum milk, you can call it. So yeah, let's unpack that word a bit. Access to ethereum. What does that really mean, access to ethereum? Well, I can unpack it in two ways. It's really about reading and writing from on chain access to ethereum. The provider really enables the DAP to do two things.
00:16:31.292 - 00:17:09.668, Speaker A: One, make JSON RPC requests, and two, listen to events, aka state changes that are made on the wallet from the user or on the Ethereum client. Requests and events, requests and events. Hey, let's go, let's go. Requests and events. That's all you got to remember. So capturing this imagery in your mind for a SEC, the mother feeding the child, the provider feeding the DAP, anchor that in your head. And we'll jump back into the actual API, starting with the Request API.
00:17:09.668 - 00:17:43.228, Speaker A: What is the request function? The request function is really just a wrapper function that allows you to make JSON RPC requests from the DAP super simply. And we have the interface defined right here, just a few lines of code. So if we walk through it simply, you're going to call Provider request from your DAP. And all you have to pass in is, one, the method, the JSON RPC method that you want to use, and two, the relevant parameters of that method. Let's actually walk through some examples to make the super concrete. And I'm going to walk you through very familiar examples. First connect wallet.
00:17:43.228 - 00:18:34.336, Speaker A: Everyone loves connecting wallet. You connect the wallet button. What actually happens behind the scenes? Well, it's standardized under EIP eleven two, it's about the user giving authorization of the DAP to have access to their Ethereum address. And how that happens is simply calling Provider Request and you specify the method ETH underscore request accounts, you don't even need to provide extra parameters and it'll give you back an array of the approve accounts that the user has approved on the pop up. Another example, adding and switching networks. You've seen this a ton of times on various DApps that actually support multi chain. For instance, you'd be able to ask the DAP, ask the wallet, hey, provider, can I request to switch Ethereum chains to this particular chain ID? And then maybe the DAP checks and says oh, the Wallet actually doesn't have any information about this chain ID.
00:18:34.336 - 00:19:07.100, Speaker A: Let's fall back and have another request called Wallet add Ethereum chain. And let me give you all these parameters so that the user from the DAP can seamlessly add a new chain onto the wallet without having to google how do I add polygon onto MetaMask? And then you go and Google that and copy that onto your wallet. None of that super simple from the DAP. So that's another example. And this is standardized under EIP 33 26 and 30 85. Final example is another example called Watch Asset. Super familiar, probably for a lot of you.
00:19:07.100 - 00:19:44.472, Speaker A: If you use DApps, you go to it and there's a custom token maybe for that DAP and it's the first time you're on the protocol. Then instead of also having to Google what this custom token is, maybe you go to Ether Scan and you copy the wrong token address or something and things start screwing up. The DAP will you to send a request to the Wallet so that the user can approve. Do you want to add this new token to your wallet? And so that's what Watch Assets does. So, just like any other request, you simply specify the method Watch Asset and you add some of these parameters to specify what this asset is. So here are three concrete examples of what the request function does. Does that make a lot more sense? Yeah.
00:19:44.472 - 00:20:26.816, Speaker A: So it's all about sending JSON RPC calls through request. Now let's take a look at what the Events API does. This is more of reading and interacting and responding to state changes. For instance, the Events API extends a very similar API on Node JS called event emitter. And by specifying the same methods on that API, specifically on and Remove Listener, the DAP has the functionality to subscribe to these events. So for instance, in this example here, if a user goes to Wallet that supports multi account and changes account, then the DAP is able to listen to those changes, get the new account and be able to render changes accordingly. Same thing with changing the chain.
00:20:26.816 - 00:20:58.508, Speaker A: And you're able to also remove the listener and add the listener using these two methods. Some common five core events is connecting disconnecting account and changes in the account and the chain and finally be able to pass around messages. And really this is intended to be more of responding to state changes. So that's the events API. So all you really have to remember just to recap bring you back to the delightful mother. It's just requests and events. That's all a provider gives you and it enables you to do things like making RPC requests and listening to these events.
00:20:58.508 - 00:21:53.596, Speaker A: So, yeah, and the child you the DAP, just say yes mother, and drink the Ethereum milk yeah, all making sense. All right, so the real kicker here is that this is not unique to coinbase wallet by any means. This provider is actually standardized under another EIP called 1193, and it's universal. Almost every wallet provides its own provider that conforms to the same specifications of having requests and accounts. Now, why is that awesome for you as adapt developer? Well, that's awesome because you don't even have to think about what wallet your user wants to use. Just write your requests and listen to those event changes according to the specification and let the user decide, can I plug and play whichever wallet I want to use on your DAP and writing the actual code on the front of it? It's super simple to make that happen, dude. God bless EIPS.
00:21:53.596 - 00:22:49.072, Speaker A: Really? Right? So, yeah, that's really the kicker here. And so let's say I wanted to do that plug and play maybe on my depth. I want my depth to look more like this, where I have multiple wallets that are able to simply come in, multiple users from various wallets come into my depth and be able to use it seamlessly, all due to the standardized EIP provider. Now, maybe we want to use something like this as an ideal setup for your DAP, a multi wallet modal. So the next final part of this talk is going to be talking about how you can actually set this up, how simple it is, and why this is important to you as a DAP developer when multi wallet modal. So right now, I'm going to ask some of you, 95% of you, when doing various DAP tutorials, have probably encountered the provider in some capacity. In fact, it's very easily accessible on the browser if you have an extension installed.
00:22:49.072 - 00:23:10.280, Speaker A: Can anyone name to me what specific property on the browser you've always called when building your DAP to access this provider? I'm hearing it, I'm hearing it. Sorry. Yeah. What's it called? Ethereum. And where is it hosted under? Window. Yeah. Window.
00:23:10.280 - 00:23:27.760, Speaker A: Ethereum. Exactly. Right. Window Ethereum is where we normally get our provider. Right. And this is something called injected provider. When you install an extension, the extension will automatically take the provider that it has and save it under the property Ethereum inside the browser web page.
00:23:27.760 - 00:23:59.528, Speaker A: So that on your DApp front end, all you have to do is access window Ethereum and you'll be able to start making those requests and listening to those event changes accordingly. Now, what's the issue with injected provider? Well, it's just one property on the browser. What does that mean? That means there's only one room for one provider, for one wallet. That's kind of like, not what we want, right? We're talking about plug and play. We're talking about wallet interoperability. Having a single provider is not going to help that happen. Right.
00:23:59.528 - 00:24:50.244, Speaker A: So that's the issue here. Where is my plug and play? Where can I actually get to that multi wallet state. So what is ideal here is being able to create that multi wallet modal and actually use the various different providers from various different wallets such that when the user comes to your DAP, they can simply say oh, my wallet is provided right here. Choose that wallet and start using your DAP seamlessly. Now, you can also think about it as last time, all these different mothers being able to provide for your child on your DAP, access to Ethereum in all the various ways you want to have all those mothers providing on your DAP. Yes, because that's going to expand your user base and allow any user who uses any wallet to be able to connect to your DAP and seamlessly use it without friction. So that's the importance of the multi wallet modal.
00:24:50.244 - 00:25:43.012, Speaker A: Now, how do we actually implement this? Well, one way you could do it is actually vanilla. Just download all the different SDK providers, create a custom modal yourself from scratch, provide an on click method such that you could connect send requests according to the ETH requests account and be able to use each and every provider individually. So a lot of manual setup and we don't do that because we're lazy, because we love open source. We want to stand on the shoulders of giants who've already built awesome open source libraries to do this a lot more seamlessly. So what I want to recommend is that how we should go about doing this is using various, what I call wallet provider aggregator libraries for you to connect to various wallets from your DAP. Now, there's a lot of aggregators out there, but I want to cut it down to two buckets. The first category is headless libraries.
00:25:43.012 - 00:26:22.452, Speaker A: So libraries that come with no custom UI for you to use and build your UI on your own and you just hook up the providers on the back. And the second type, which is actually the one that I recommend for something like this hackathon, is a built in modal that actually comes out of the box solution with a UI. The headlift libraries, the ones I recommend is web Three react and something called wagme hooks. And for the out of the box solution there's something called web3 modal that some of you might already know and web3 onboard. So these four libraries have been very well established and very well maintained by the open source community that I highly recommend. So let's take a quick example. At a headless library is Web Three react.
00:26:22.452 - 00:26:55.250, Speaker A: It's the most widely used library by far and it's used like well established apps like Uniswap. The one thing you have to remember, you have to build your custom UI. However, the setup is super simple. Let's just look at the code. You just have to initialize some of these connectors, which are basically providers using a different name. And then wrap this provider wrapper component around your app, feed them these provider options through the library, and then import this Huck that gives you access to activating the wallet, deactivating it, get your accounts, get your network. A very good abstraction of all the things we talked about.
00:26:55.250 - 00:27:30.300, Speaker A: Now, the second option is using a built in modal. And again, this is super simple. Why? Because in the previous slide, we took away anything related to actually building that modal on the front end. If you just want an out of the box solution, you can use Web Three modal. You just initialize the provider options like this, just like you would have anyway using the vanilla way. And then you create and initialize the Web Three modal and you pass in the provider options. And all you have to do is Web Three modal connect and it'll be able to give you what your user saw and chose on that modal for you to use throughout your app.
00:27:30.300 - 00:28:13.820, Speaker A: So, because I love Web Three modal so much, I'm going to show you a quick demo of how to do this and show you how simple it is. So here's a quick demo. So, I have in front of me a code sandbox that has integrated using simply the injected provider. So it's a simple DAP, and I have it open here so you can see better where if my wallet is not already connected to this DAP, it will reload. Code sandbox is actually really lovely. You can connect your wallet like this using the injected provider that we talked about, that the Coinbase Wallet extension has already injected into the web browser in window Ethereum. Going to connect your wallet to the DAP and use it to switch network sign messages, et cetera.
00:28:13.820 - 00:29:01.348, Speaker A: Now, how simple this Multi Wallet provider is, is as follows. Here's the code snippet you saw in the slides where I specified these provider options. And then all I did was initialize the Web Three modal by passing in their provider option we wanted. Here the coinbase. Wallet SDK and wallet connect. And all I need to do here, and hopefully I could do this while holding a mic on one hand, is await Web Three modal, connect and save that and see that reload and disconnect again my extension from the DAP and make it reload again. And then all I have to do is press Connect Wallet and I see this beautiful UI.
00:29:01.348 - 00:29:27.688, Speaker A: What hard work that I did. That was like copy pasting like, ten lines of code and that was like two minutes. And I can connect seamlessly to Coinbase Wallet and use it throughout the DAP. Quite simple, right? Shortest live demo you've seen. All right, so that was a live integration demo. Now, maybe after you've seen all this, you're like, this is great. I love multi wallet modal.
00:29:27.688 - 00:30:03.440, Speaker A: And I love this. I'm going to use it throughout my debt, but I'm at a hackathon, yo, I don't have time for this. I need to prioritize my. Contract, I have to prioritize the different functionalities that my cool protocol is going to offer to my users. That's why we prepare for you just more than actually our workshop. But the reasons why to take a step back, just to give you a recap of the talk, is that first we talked about Coinbase Wallet is super awesome. And then we talked about how the wallet interacts with the DAP through the provider.
00:30:03.440 - 00:30:39.976, Speaker A: And finally we talked about the multi wallet modal, where you can offer various multiple wallets on your DAP through this modal. And now the actual catch that I got to a little quick too soon is that we're offering various hackathon bounties to incentivize you to actually try these modals out. And what I mean by that, we're offering the top three teams who win our bounty the following prizes. Third place is one point five k. Second place, two point five k. And first place is five k. And not only that, a meeting with the prestigious Coinbase Ventures.
00:30:39.976 - 00:31:24.008, Speaker A: How about that? So, yeah, and all you really have to do is build a simple DAP that has good UX UI, that has technically sound capabilities, and three, has somewhat originality creativity and potential for future growth. And then just install Coinbase Wallet through the couple lines of code that we showed you and then do a quick feedback form. How was that experience? How do you like coinbase wallet? And that's all you really need to do. And Shauna and I is going to be judging on Sunday to see which DAP has done this best. Pretty simple, right? So, yeah, we also have future gitcoin bounties. If you're not interested in building a DAP during this hackathon, totally fine. We also have various bounties that are super, actually simple, up to two k.
00:31:24.008 - 00:32:02.036, Speaker A: If you able to find bugs on our SDK, bugs on our documentation, if you want to go to one of these aggregate libraries and add Coinbase Wallet or fix our implementation and also just create a tutorial like here's how to implement Coinbase Wallet and show it to us. We're like, Dude, that's fabulous, and we'll be able to award you with some gitcoin bounties. Moreover, we're actually here looking for great talent, and we know everyone in this room is super capable. The fact that you're here in ETH Amsterdam just shows to me your resilience and drive to build. And so we have a ton of job postings. We're hiring super aggressively. So please go check that out.
00:32:02.036 - 00:32:34.200, Speaker A: We have also another big announcement. You're probably wondering, I've been waiting 69 years for Coinbase to finally drop this really Hyped NFT Marketplace. What's going on? And believe me, you are trolled because we were waiting for the 420 drop coinbase Wallet NFT Marketplace. Oh, Coinbase NFT Marketplace is live on beta. You can go if you have access through your waitlist, go to NFT Coinbase.com, try it out. Really nice user experience.
00:32:34.200 - 00:32:53.760, Speaker A: You can follow your friends admire their collection. I heard there's also a way you could leave and read comments. I heard they're super spicy, so go check that out. And yeah, check out Coinbase NFT Marketplace. And finally, we'd love to connect with you. Go on our Twitter. Follow us if you want to hear updates on Coinbase Wallet.
00:32:53.760 - 00:33:33.916, Speaker A: And also check out our documentation if you're actually going to implement during this hackathon. We have literally all the code sandbox examples, not only web3 modal, but also web3 react, and all the different libraries that we showed all up there on the documentation that you can just fork and copy and paste and use that in your hackathon. You'll still be qualified for the bounty. Also check out more about Coinbase Wallet if you're curious, on our developer docs and our actual Coinbase website. If you have a minute. We have a link tree on the QR code scan that offers feedback for not only our product and documentation, but also this actual workshop for me to improve as someone giving talks. And so, yeah, I think that's pretty much a wrap.
00:33:33.916 - 00:34:00.980, Speaker A: Thank you for listening for this extended talk and my name was JM on the Coinbase Wallet team. This was Coinbase Wallet and hope you have a great rest of your day. Thank you. It. Yeah. Any questions? Everyone's good? It was flawless.
