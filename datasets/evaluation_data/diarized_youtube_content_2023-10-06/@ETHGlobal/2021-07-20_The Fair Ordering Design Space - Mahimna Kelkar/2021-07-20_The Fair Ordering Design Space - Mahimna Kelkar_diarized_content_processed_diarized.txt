00:00:00.410 - 00:00:47.142, Speaker A: So hi everyone. I'm going to talk a little bit about the fair ordering design space today. So just to briefly get started, I wanted to just introduce who I am because I haven't sort of interacted with this community quite a bit. So I'm a PhD student at Cornell, and the reason I'm giving this talk is I am the lead author on the papers that developed the first protocols on fair transaction ordering. This started with Equitas protocol, which was published at Crypto last year, and the extension in the permissionless setting which is available on Eprint. And feel free to reach out to me with email. In this talk, I'm going to be mainly focusing on a design space and understanding the nuances of fair ordering rather than focus on the specific protocols that I've designed.
00:00:47.142 - 00:01:32.710, Speaker A: So, let's begin. Basically, Ethereum is decentralized as people think it is, but it's not because miners have complete control over the transaction inclusion and ordering in the blocks that they propose. This is what we call like an Ephemeral centralization for ordering. And this is sort of the Achilles heel in my opinion, that stops Ethereum from being truly decentralized, or any blockchain for that matter. So I'll talk a little bit about mev, but I'm sure everyone here has talked before me. But I will make one axiom for this talk in particular. So, almost all of the quote unquote bad mev will come from adversarial manipulation of transaction ordering.
00:01:32.710 - 00:02:38.522, Speaker A: For example, something like censorships or insertions of malicious transactions or reordering user transactions. And this is exactly what fair ordering protocols try to prevent, trying to prevent this adversarial manipulation of transaction ordering. So what exactly is fair ordering at a high level? Fair ordering tries to say if there's some property of transactions in the input ordering, then you want to guarantee some other property in the output ordering. So fair ordering, of course, tries to set definitions on how would you take the input ordering of transactions and in some fair way create an output ordering of transactions. So, just to give one example, this is one we had in our paper for Iquitos protocol is if most nodes, or if all of the nodes receive a transaction m before M prime, then M is output before M prime. So sort of a first in, first out notion. So fair ordering at its core is sort of decentralization.
00:02:38.522 - 00:03:48.854, Speaker A: By democratizing ordering, you're taking into account everyone's proposals instead of a single miner or a single block proposal. And fair ordering protocols provide a quote unquote fair way to combine different proposals from these protocol nodes or miners. And I'll talk a little bit about what this fairness means in a while, but essentially this is the diagram. In, say, a permissionless setting, instead of having one minor add on to the next block in the blockchain, you can think about choosing a random assortment of miners and somehow creating a joint proposal from which the final transaction ordering can be extracted. So it's this multilateral decision making that makes fair ordering more decentralized than just standard consensus. So why should we study fair ordering? Fairness, as fair ordering defines it is in terms of being beneficial to the ordinary users of the system and improving user experience. It's independent of application design, so it targets mainly the protocol layer, but it can also be accommodated for application design.
00:03:48.854 - 00:05:05.198, Speaker A: But here's the hot take mev solutions, especially like minimization ones. I would say fair ordering is even more general than other mev minimization solutions because it targets the whole broad spectrum of attacks that can be done by reordering transactions or insertions. Any form of adversarial manipulation as opposed to privacy techniques, let's say, that defend against attacks based on transaction data themselves or random ordering that can be susceptible to flooding attacks. But the cool part is that fair ordering can be combined with these above techniques so they are orthogonal and you can use them in tandem with each other. I will make one point though, in comparison of fair ordering with other approaches like democratization as something that's done by flashbots or mev auctions in general, is that selling to the highest bidder is not in the true spirit of decentralization. It's basically centralization with extra steps. And I want to illustrate this with another sort of controversial or hot take is there was this notion of mev minimization and democratization or opposing views, which is something that I also thought about for a while.
00:05:05.198 - 00:05:47.450, Speaker A: And there's been a couple of speakers today that talked on. Maybe they're not so at opposed at ODS with each other. Right. You can have mev minimization approach and a democratization approach and they can sort of work together. But here's sort of my claim is mev minimization is the true democratization, selling to the highest bidder is not the definition of democratization. The true definition of democratization is coming up with a fair notion based on the joint proposals of the miners, basically. So minimizing mev is actually the democratization.
00:05:47.450 - 00:06:44.142, Speaker A: Mev auctions are just fake democratization. With that kind of in point, I would like to move to defining what I mean by fair ordering. So let's take a step back and try to look at what fairness would mean in an ideal world, a world full of sunshines and rainbows. So I'll argue that if we had trusted user clocks and a synchronous network, then the unequivocally correct ordering should be based on the transaction send time. So whenever a user sends a transaction, it's locally timestamped at that time and that's the ordering that gets put on chain in the final ordering. And of course we're assuming trusted user clocks here, synchronous network here, but this should be unequivocally the correct ordering because it leaves zero room for mev. Obviously this is a strong assumption and not at all practical in the slightest sense.
00:06:44.142 - 00:08:09.480, Speaker A: So what can we actually do? So what's a good definition for fairness that we should use in practice. So number one is that it should come as close to send ordering as possible, possibly only up to network latency in a non adversarial network. And even in an adversarial network it should be sufficiently close enough. It should also provide a good trade off between the strength of the mev minimization that the definition can provide and of course the efficiency and practicality of the protocols that can be constructed. So just to lay out all the designs on this line here you can look at the leftmost side of send ordering which prevents the most attacks but also has the strongest assumptions, the most unrealistic assumptions. In my work we proposed two definitions of receive order fairness and batch order fairness which prevent most mev and they have slightly weaker assumptions than send ordering but still not as efficient as we would like them to be but definitely provide resistance to more mev attacks. And then you can look at other end of the spectrum where you're designing for simpler assumptions or more efficient protocols which other concurrent works have also done, which Klaus will talk about in the next talk as well.
00:08:09.480 - 00:09:10.810, Speaker A: I want to talk a little bit about a bunch of nuances surrounding fair ordering that I'll get to in the next couple of slides. So the first one is permission versus permissionless mev. So permission versus permissionless fair ordering. So in permission or L2 fair ordering you could technically have some sort of subtle censorship if the nodes that are running this permissioned l Two system try to go against you. So if not done correctly then censorship could actually be a problem. Whereas permissionless fair ordering you can actually achieve true decentralization but possibly less efficient protocols in l Two. You can also be more application specific so you can interact with different definitions of fairness for different protocols and possibly be easier to incorporate into existing systems whilst permissionless is more fundamental but harder to change the actual design of protocols.
00:09:10.810 - 00:10:49.126, Speaker A: One more thing I'd like to point out is you should be careful with any kind of mev minimization in L2 because let's say for example roll ups or sequencing services essentially transfer the ordering power from the minor to the roll up sequencer or the fairness sequencer, right? So the sequencer, you don't want it to have the ability to arbitrarily manipulate ordering. Otherwise this will essentially move the mev from L One to l Two. The other thing with L One and l Two fair ordering protocols jointly existing is that if we have only l Two protocols that are fair and the underlying consensus layer still has unfair ordering, then you could imagine this composition between the two layers posing threats to mev. But what might work out in the end is you can have stronger fairness guarantees in the altu network and some kind of weaker guarantees in the permissionless network because they're harder to implement and that should probably be okay. Let me end with some open research directions and invite anyone who wants to join to come collaborate on fair ordering related research. So one thing I would like to talk about is interoperability of different blockchains or different L two L one layers, as Phil has mentioned in his blog post and also repeatedly to me is no one true definition of fairness can exist. But here's my conjecture, which I think is probably true, that kind of answers.
00:10:49.126 - 00:11:44.890, Speaker A: This is the mev from Composition of two good fair ordering protocols. So good in the sense as I talked previously on the definition is probably way smaller than mev, just as a general composition of two protocols. And the idea for this is that the distance between the two fair ordering protocols is small, as both of these are close to send ordering. So if we had a system where there's different fair ordering definitions coexisting at the same time, even on an intrachain level and an intrachain level, still the mev that results of their composition can be small enough. So I would like to argue that fair ordering can be used to minimize both intrachain mev and interchain mev. And this is of course an open research problem. The other thing I'd like to talk about a little bit is rational designs.
00:11:44.890 - 00:12:44.340, Speaker A: So all the fairness protocols that we know of currently require some kind of honest majority or supermajority assumptions of the nodes or miners that they're interacting with. So the real question is can we handle all or most nodes being rational rather than just honest? So this is, I would like to highlight, currently an open problem, but it is an unrealistic expectation. For example, proof of work and proof of stake is not completely resistant to rationality either. For example, it's like rational to mount a 51% attack on the blockchain while shorting the system externally. And even though this is technically rational, we don't see that happening in practice because people don't want to destroy the system. And you can use similar incentives for fair ordering protocols to get enough rational resistance in practice. So I don't think this is really a caveat for fair ordering protocols either.
00:12:44.340 - 00:13:39.502, Speaker A: The other cool thing is the fair ordering protocols are already resistant to non colluding honest users. So non colluding rational users. So as long as the honest users are not colluding, even if they are completely rational and want to work in their own interests, it's still fine. So for example, if there was a bunch of users that wanted to front run a bunch of miners that wanted to front run a user transaction and choose to front run a different transaction ahead of the user's one, the honest user's transaction will still get sequenced first in a fair ordering protocol. So as long as the rational miners are not colliding with each other up to some threshold, fair ordering protocols should still be resistant. Obviously, there's more research to be done here, but I would say that the lines are promising. And that's pretty much it for my talk.
00:13:39.502 - 00:13:49.650, Speaker A: If you want to reach out, that's my email address there. And I would love to chat with you about ordering protocols in general. Thank you. Thank you, mahindra.
