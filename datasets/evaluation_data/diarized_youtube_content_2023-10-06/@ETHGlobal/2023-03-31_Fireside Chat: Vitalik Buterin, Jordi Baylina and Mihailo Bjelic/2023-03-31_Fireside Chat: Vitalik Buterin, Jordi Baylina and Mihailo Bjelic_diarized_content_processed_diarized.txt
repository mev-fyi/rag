00:00:06.650 - 00:00:21.200, Speaker A: So with that and with this excitement, we will continue with a Fireside chat. And we will invite now, Vitalik and Jordi to stay in. And no better person to take this Fire chat on than Mihilo. Take it on.
00:00:22.130 - 00:00:53.738, Speaker B: Thanks a lot, Grace. I'm not sure that I'm the right person to this now, given how super exciting it's super fun. And yeah, luckily, it turned out very well. Yeah. Hi, everyone. Again, I'm very excited and honored to have a very quick chat with two people that I tremendously affect. And I think without further ado, let's go into that, right? So I think maybe we can just start emotionally.
00:00:53.738 - 00:01:15.394, Speaker B: If that's fine, then we can back to rational conversation. So just tell me, how do you guys feel about what just happened? Just, do you have any current emotion that you can maybe share? And what do you think about this event? Is it really an important milestone, as we believe? And is it really a gift to the community? Just anything that you can just share.
00:01:15.432 - 00:01:17.220, Speaker C: About how you feel about?
00:01:18.790 - 00:01:43.360, Speaker D: Yeah, I feel like we're very happy and excited for what's to come. The whole Zkvm thing is just something that I think we've all dreamed about and talked about for such a long time. And actually seeing it happen on main net and seeing all of the pieces come together and just work is just so amazing.
00:01:45.090 - 00:02:35.210, Speaker C: For me. Okay. It's a strange feeling because I've been dreaming for this moment for two years. But at this point, once you get there, and even the days before, I'm more excited for tomorrow, for the day after tomorrow and what will happen tomorrow and the day after tomorrow that we will plan what we are going to do next and how we are built. And we have a lot of things in the backlog because in the last three months, we have been working very much in security and not doing anything new, just checking and checking the code many times and all that. And we have a lot of things to improve and to do it better. For me, the most exciting of this event is that, okay, we will finish this space and we will continue building and improving.
00:02:35.210 - 00:02:47.774, Speaker C: This is just a milestone. I think it's an important milestone because it's having something that was impossible. Okay, no, it's here. It's a CKM. It's possible. We can build that. But it's a long path for scale.
00:02:47.774 - 00:03:27.520, Speaker C: We are just starting to scale. This is just the beginning, and now we need to really scale. And it really means making many transactions, going faster. I think it's an important step because this will really scale. Well, we'll start this edge of scaling stadium, and we finally will see applications that were not possible because scaling now make them possible with security of ethereum. So I think this is a really important moment for the space.
00:03:28.370 - 00:04:05.050, Speaker B: Thanks so much, guys, for sharing this. Okay, let's switch back to the rational conversation and maybe a little bit more technical, but maybe we can start for the sake. We have more than 10,000 people, I believe, signed up and hopefully, yeah, that's the info that we got from Eat Global Friends. And hopefully a lot of them are newcomers, right? And we want to onboard as many newcomers as possible. So for their sake and everyone's sake, maybe if you can just recap again, what is the importance of these layer two solutions and Zkvm itself, just briefly, in your own words, just for everyone, maybe it's always useful to recap.
00:04:05.470 - 00:04:05.882, Speaker C: Yeah.
00:04:05.936 - 00:05:11.978, Speaker D: So I think for almost since Ethereum launched, I've been talking about scaling as one of the most important problems for Ethereum to solve. And I think for me, at the beginning, for the first few years of Ethereum's growth, that was definitely pretty theoretical. We knew that Ethereum had to scale somehow to be able to serve future millions of people user base. But at the time, transactions were cheap for the users that Ethereum has, ethereum worked fine. But then, especially in the last few years and in the last bull run, it just became clear how expensive the Ethereum main net is. I remember visiting Argentina and just seeing how everyone is using a binance account, right, and from their perspective it makes perfect sense because binance to binance transfers don't have fees. But at the same time, I think as a crypto ecosystem, we do want to ultimately move beyond the centralized approaches.
00:05:11.978 - 00:05:17.202, Speaker D: And I'm sure even a lot of people in binance feel that way as well.
00:05:17.256 - 00:05:17.474, Speaker C: Right?
00:05:17.512 - 00:07:08.626, Speaker D: But making something that's decentralized and practical for people to use at the same time is just so much harder than making something centralized and easy to use, right? And then last year we saw the FTX situation and we just keep seeing all of these incidents that just remind us in a very real and practical way why yet decentralized access to the chain being possible and being a reality is just so important? Because if you don't have that, then you have this kind of like centralized on top of decentralized Frankenstein that seems to just sometimes be even less secure than just doing the whole thing centralized top to bottom, right? And so I think scalability and decentralization at the same time is like this really I hugely important thing. And for the last couple of years, I think the Ethereum ecosystem has been focused on roll ups as a primary strategy for scaling. Basically just because Ethereum core developer time is limited, the Ethereum network's ability to handle complexity is limited. And so we didn't want to give every responsibility to the layer one and we wanted to leave open some room for independent innovation to happen. We've recently had this layer two ecosystem start to emerge. Well, I think these days the layer two ecosystem has existed for some time, right? But for me, 2023 in particular is the year when I want to see the layer two ecosystem really mature. And for me the biggest part of maturity is layer two is becoming actual layer twos.
00:07:08.658 - 00:07:08.950, Speaker C: Right.
00:07:09.020 - 00:08:27.898, Speaker D: In the sense of you don't just have some claim that we're going to have a proof system in the future and actually we just have a multi SIG. No, you have proofs right. And you have a system where your coins in the Lear Two are actually protected by math instead of being protected by some group of five out of nine people, or whatever the number is. Where if they want to go and grab up your $29 million and enjoy a retirement in some tropical beach country that's not Montenegro, then you don't really have much defense against. I think polygon make so much progress from just in terms of improving its security model over the last couple of years has been truly amazing and it's something that I look forward to seeing the rest of the layer two ecosystem do as. I mean yeah, I'm just excited to see scaling not just be this kind of theoretical thing but actually be something that Ethereum already has solved in practice such a gain.
00:08:28.074 - 00:08:30.430, Speaker B: Thank you so much Alec. Over to you Jody.
00:08:30.770 - 00:09:31.778, Speaker C: Well, it's a magic of not so we are not that theoretical. We are just taking the theory and just bringing to the solve real problems. And when I entered the space for me was amazing but because, okay, you can do so many things but actually when you want to do the things you just start discovering the limitations of. But I want to use this because I think it's amazing. So this is what I've been working on is, okay, what we need to put this amazing technology in people's hands and extend that to that anybody in the world can use it. Well you see there are many things but security usability but scaling was fundamental. If you can do just, I don't know, 30 transactions per second, this is not enough.
00:09:31.778 - 00:10:14.754, Speaker C: It's not enough for the world but it's not enough even for a relatively small community. So how do we have to do and have been thinking a lot about that state channels, we think about the plasma. A lot of efforts happens when roll know. Remember this blog post from vitali people just working on they say they happens. It's like we start seeing the light and it's like, okay, this is a path. There splitting the data availability at the execution and okay, it's a long path but we just took this path. Now, Ethereum Foundation, I think, is doing a great advance in the data availability here and so on.
00:10:14.754 - 00:10:44.394, Speaker C: And the ecosystem is also working a lot on these roll ups and these layer tools. And everything is looking that it's a long journey, but everything is looking that in few years or even months we can have this technology available to the people. I think that's what's about thank you so much, guys.
00:10:44.512 - 00:11:44.166, Speaker B: This was really great. Maybe let's go just a little bit deeper, a little bit more technical and as we see recently there have been multiple projects that started working on Zkvm and we at Polygon and I'm sure Vitalik as well, we're very happy that that's the case but that introduced the need for a little bit of clarity. Ideally what Zkvm is are there some different types of Zkavm. And Talik recently introduced helped a lot on that front by publishing blog posts about four different types of Zkavms, basically that way introducing at least some initial nomenclature for this great technology. And I wanted to ask you guys a little bit more about that. If you can chime in both you vitalik and Jordy first about polygon Zkavm, where it is, which type of Zkav it is, what is going to be in the future, and maybe about the nomenclature itself. Vitalik.
00:11:44.166 - 00:12:11.670, Speaker B: If you now from this perspective, would you consider changing anything in the nomenclature and just generally how you feel about the whole nomenclature? Basically, does it mean for example, that the type one is by default the best solution or it's not that black and white will chat about that a little bit in the context of polygon zkvm and in general about nominator of zkvms.
00:12:13.850 - 00:12:16.646, Speaker D: Maybe Jordy answer the polygon question first.
00:12:16.828 - 00:13:12.540, Speaker C: Yeah, I think that was this blog post about classifying. I think this clarify a lot of things because at the moment, there were a lot of different roll ups doing different things and the marketing people just putting things and bringing. And this clarify a lot, because at the end, from the technical perspective, is what it is. And the things in the case of the polygon, we define ourselves as a type three. I think we fit very good in the type three and we are going in the direction to be a type two that's a little bit the path that we are. So the idea is to get closer and closer to Ethereum. We want to implement some precompiled smart contracts that are not ready yet and there are some small details this new type of transactions and there are some small details that we want to get closer to that front.
00:13:12.540 - 00:13:46.820, Speaker C: We are going in that direction and I think this is a good the fact that for example, in our system the people don't have to reuse the tooling so they don't have to use a different tooling so they can reuse all the ethereum tooling. So you just use Solitary, you just use Remix or just use Hard Hat and you just build and you just connect with Ethereum and you go there. This compatibility is really good for the end user so I think this is a good compromise for having lots of users using.
00:13:50.250 - 00:15:06.158, Speaker D: Yeah, so I guess so from my perspective the way that I would summarize the type system in one sentence is basically that the lower the number of the type is, the closer it is to basically being an exact copy of Ethereum's EVM. And the higher the number of the type is, the further away from that it is. But the reason why you might want to do a higher type EVM is because either it's easier to develop or because if you do some things that are a bit different from the EVM, then you can get some efficiency benefits that you can't do otherwise. Right? So the difference between Type One and type Two, for example, is type One requires perfect compatibility to the point where you can verify Ethereum's existing execution layer. And that involves some fairly snark, unfriendly things like potentially verifying a huge amount of Ketchack, right? And if you want, you could go and replace Ketchack with some more stark friendly hash function. Right? And that's something that's possible, but probably is the correct thing to do for layer two is today. And five years from now probably will be even the correct thing to do for the layer one.
00:15:06.158 - 00:15:11.322, Speaker D: But it does mean that today you're not going to be the same as that layer one anymore.
00:15:11.386 - 00:15:11.902, Speaker C: Right.
00:15:12.036 - 00:16:09.166, Speaker D: So I think my view of what the ideal is is I think the ideal for a Ckvm implementation is for it to be configurable and support all the types, right? Like, I think an ideal Ckvm would have settings so that if you want, you can turn it on to run with Ketchiak, Merkel, Patricia Tree, and then it can verify Ethereum blocks or you can set it to run with some more CK optimized stuff and it'll be more efficient for you. It'll might even have different pre compiles depending on what you want. And you'd be able to kind of choose to what extent you want compatibility and to what extent you want efficiency. And that should be more of a project by project choice. And I think it should be possible to make CKVL implementations that make it possible to hit all sides of that. And I feel like it probably shouldn't be too hard to do that if you're starting from the higher types and moving toward the lower types.
00:16:09.198 - 00:16:09.394, Speaker C: Right.
00:16:09.432 - 00:16:15.380, Speaker D: Because you had your previous code anyway, right, so you just kind of make it open either way.
00:16:16.710 - 00:16:17.460, Speaker B: Thanks.
00:16:18.070 - 00:17:19.130, Speaker C: One of the things that I want to add here is I did myself the exercise to say, okay, you get all this technology because when you are doing this, you learn a lot. It's a challenge every week and it's like, okay, with this technology, if you want to do okay, forget about being theoretical compatible and let's try to do a deficient roll up. Let's see how we would do it. The interesting thing is that I would not change many things the way that we were able to optimize. There are things that probably yes, I know. There are things like memory alignment, things that are a little bit tricky in Ethereum and probably I would remove some of these pieces, but not that many. The way that we are computing, for example arithmetics in different pride fields, the way that we are computing Ketchups, the way that we're computing hash functions, the way that we are working with the storage, the way that we are executing the programs.
00:17:19.130 - 00:18:17.020, Speaker C: Yeah, it could be some differences but it's much less that you may think when you start and that's because the rate of optimization that we get just and be compatible. So for us the requirement is okay, we want to be Ethereum compatible, so that's the specification. So let's see what we can do with that and we melt that much in this process. So we come up to some really good tricks and really good algorithms that okay, this is even better than if we were doing something different to that. So that's a little bit the conclusions that we're getting. Of course there are things that is a spectrum of things we should go like piece by piece, but many pieces should not be very different.
00:18:18.510 - 00:19:29.650, Speaker B: Thanks a lot guys. I would have so many questions in addition to this but maybe let's just touch on one and then we can slowly wrap it up because we have to adhere to the schedule, I guess. So we are very happy that we deliver this, right? And we believe we are generally mainnet ready, right? We have multiple external audits, multiple internal audits. We have testnet that has been running for months and all of that. But still it's very important to say that this is very complex technology, this is new technology that hasn't been delivered before and it's important to be responsible with that in mind. Vitali published another blog post very recently where he speaks about proposed basically milestones for zkav and roll ups or roll ups in general when it comes to introducing or slowly removing some sort of training wheels and security measures. So I know we have a basically security focus panel in a while but if you can just one sentence maybe share your thoughts also about maybe this Vitalik's proposed roadmap or model and just anything in general about the KVM when it comes to this responsible.
00:19:30.390 - 00:21:43.782, Speaker D: Yeah, sure. So I think that blog magician's post was also motivated by just seeing this kind of confusion and definitely this kind of weird marketing situation where there are a lot of different projects in this space that call themselves layer. Twos. And people don't really understand what actually makes a layer two a layer two? What makes it not a layer two? What makes a layer two decentralized? And all of these things, right. And the goal of the post was basically to kind of help people sort of zero in on the thing that matters, which is security, right? And the thing that matters in security which is basically this kind of complicated trade off of when do you trust put more trust in the people and when do you put more trust in the code, right? And it's like a complicated trade off to navigate, especially because we're dealing with this fairly young technology that inevitably has bugs and probably is going to continue to have bugs for some time. But basically the challenge is on the one hand we want to actually start moving away from just that systems that claim to be layer twos but actually just require completely trusting some small committee, right? We don't actually want a system where a four or seven multisig can run off with $29 million and have a vacation in a drop go island country, but at the same time we want to try to do it responsibly. And if you kind of on day one just to get ahead of everyone else, push out a release and say, okay guys, code is law and then people throwing $29 billion and then it turns out that there is a bug, then that's pretty bad too, right? I think that what I tried to do is kind of structure things and identify a couple of middle grounds.
00:21:43.782 - 00:22:11.346, Speaker D: So the three stages that identified are I call them stage zero, stage One and Stage two. And Stage Zero is basically like full trust the people, right? So basically something that has kind of like the scaffolding of a roll up and you get submit transactions, you have backup channels, you have all these things, but at the same time there is some kind of override mechanism and ultimately the override mechanism can decide where the money goes with a 51% threshold.
00:22:11.378 - 00:22:11.574, Speaker C: Right?
00:22:11.612 - 00:23:20.802, Speaker D: So it's like a full training wheels thing. Stage Two basically says you're fully running on the code. Now there is kind of one nuance that I did kind of allow in the Stage Two definition, which is that what you can do is have a mechanism where if someone can prove that the code disagrees with itself, then you could flip an emergency switch and let humans come in. Right. Code disagreeing with itself could happen in two different ways, right? Like you could have two different Zkavms, you could have one Zkvm and the switch would be like if someone can successfully prove two different state routes for the same data, there's lots of different ways to do this. Or on the other side if no one submits a valid thing for an entire week, right, that would also suggest that something is broken. But otherwise the idea would be that if the code is running correctly, the humans have no ability to override the code, right, and that's a long term goal, but that requires being pretty confident in the code and the code's ability to not have certain kinds of really serious bugs.
00:23:20.802 - 00:24:07.482, Speaker D: Stage One is this kind of middle ground where basically it's kind of like halfway in between, right, where for Stage Zero you need 51% of the humans to override and move money to wherever they want. For Stage Two, you need 101% of the humans, right? 101% greater than 100%, so you can't do it. And then for Stage One, you need 75% of the humans. So the thing that I suggested was at least six of eight, where there's enough people in that multi SIG that are outside of the organization so that the organization by itself can't just go and move the funds wherever it wants to. And with this kind of threshold, you still have the ability to intervene if things really go wrong.
00:24:07.536 - 00:24:07.850, Speaker C: Right?
00:24:07.920 - 00:25:10.970, Speaker D: And I've been in multisigs a lot, right? And if really serious stuff happens, then generally you pretty quickly can get almost anyone, right? Like almost everyone, especially if they're professionals. But at the same time, it's like getting to stuff. It's much harder for 75% of people to collude and decide to go to a shopical island than it is for 50%, right? So it's this kind of middle. And my goal for 2023 has been that I want the Layer two ecosystem to basically move to at least the equivalent of Stage One. And I think it's okay to stay in Stage One for a pretty long time, right, because I think we do want to be confident that the technology works before we put even more trust in it. But if you're in Stage Zero, then you're basically not really yet giving any decision making power to the code at all, right? And it doesn't really matter if you're a ZK roll up or an optimistic roll up or what kind of roll up. Ultimately you're just a multi sync controlled by the Security Council.
00:25:10.970 - 00:26:42.522, Speaker D: So in Stage One, you're basically saying, okay, we have an actual proof system and the proof system has actual power, but we don't necessarily yet quite give it all the power. And if there is room for some Security Council, if there is strong agreement inside it to override what the proof system says in case of a bug. So I think Stage One is this nice middle ground where we're not just talking about these very centralized things that we've had so far. We're talking about actual proof systems, whether they're optimistic or ZK that have teeth and that actually have a strong influence in what happens on chain, but at the same time, we leave some room for error and we don't kind of trust things fully. And this is something that I think should be achievable for at least many both ZKE EVM and optimistic EVM projects this year, right? I've also talked to a couple other ones, and I know Arbitrum, for example. They want to open up their approved system really soon, and I think they have some Security Council parameters that are even more stringent than what the Stage One requirements are. So I would love to see Polygon really join the Stage One camp soon as well and really kind of set the standard for like, hey, you have to have an actual proof system.
00:26:42.522 - 00:27:07.720, Speaker D: The proof system has to actually run and the proof system has to actually have some teeth, but still in a way where we're not kind of like turning the trust over from zero to 100% from day one and we can be a bit careful and still kind of scoot for a couple of years while we make sure that everything really is completely safe and then we keep going forward from there.
00:27:09.850 - 00:27:40.842, Speaker C: Just to mention here that Polygon SIG AVM means well, it's a stage one actually. We changed the multi SIG this morning in six out of eight. It was four out of seven that quit this morning. We change it to six out of eight just to be on the stage. But the cool thing is that we are quite prepared from the code perspective to be stage two. Actually, we could be a stage two if you want. Of course we don't have to be until we feel safe.
00:27:40.842 - 00:28:15.034, Speaker C: We want at least but one of the pieces, the pieces that we are missing to be a stage two is well, first of all we need to enable the force transactions. We will probably enable in a few weeks because this is an important mechanism. This is something that we disabled the last minute for some issues, but we will enable it two or three weeks. Probably. The reason other thing is removing this Q switch. This is probably the hardest part because we need to feel comfortable that the security is there. So this will probably stay.
00:28:15.034 - 00:28:53.240, Speaker C: We are setting that want to be running the system at least six months without finding any critical issue, at least. So that will take a little bit while on that. And the other is the time lock for the availability right now is ten days. We need to increase that to 30 days in order to be the plan is there. It's more about getting comfortability. We will continue running back bounties and audits and probably some of the engine there. So we'll stay here for a while.
00:28:53.610 - 00:29:07.754, Speaker D: Yeah, no, I mean I definitely really appreciate the commitment to security and I'm so happy that we finally have a layer two with Keith running on Mainet now. So big congratulations there.
00:29:07.952 - 00:29:08.890, Speaker C: Thank you.
00:29:09.040 - 00:29:40.674, Speaker B: Thank you so much. Both again, I can just share my humble opinion. I totally agree. As we saw, as Greg said, polygon Zkv is formally, I guess, type one, sorry, a stage one when it comes to these wheels. And I totally agree that this targeting basically stage one for 2023, as you said, vitalik is the wisest, the optimal and responsible approach because we really want to transition to full safety gradually.
00:29:40.722 - 00:29:40.934, Speaker D: Right.
00:29:40.972 - 00:29:58.940, Speaker B: And full permissionless solutions. Great. This has been a fantastic discussion. Thank you guys so much. And just if you have any closing messages or anything that you would like to share with the community, any sort of message or advice or anything, and then we can slowly wrap it up.
00:30:02.030 - 00:30:19.550, Speaker C: My site is just give a try. It's a network, a new network there. It's zkvn there. So if you are a developer, if you are a user and just make a try and see how simple it is just to build on top of the polygon. Ckvn.
00:30:22.130 - 00:30:28.680, Speaker D: I have tried sending two transactions and it's been easy so far. So do recommend.
00:30:33.050 - 00:30:34.610, Speaker C: Graceful stage door.
