00:00:06.090 - 00:00:20.080, Speaker A: Apps with one unified API for one of our Hack FS workshops. I'm super excited to have him here. And with that being said, questions go into the zoom chat and Leibing, feel free to take over.
00:00:21.970 - 00:00:22.670, Speaker B: Thank you.
00:00:22.740 - 00:00:28.518, Speaker C: Thank you, Anna. Hi guys. This and hope you're having fun.
00:00:28.604 - 00:00:30.150, Speaker B: At hecfs.
00:00:31.530 - 00:00:52.198, Speaker C: I think Cobilan has been in a couple of the hackathons that ETHGlobal has put up and every time the theme is very interesting. And we are touching on a really important and interesting development within the blockchain world. File systems, distributed file systems.
00:00:52.374 - 00:00:52.774, Speaker B: Right?
00:00:52.832 - 00:01:20.870, Speaker C: I hope you're having fun and today I'm just going to introduce to you one way that you can get data on chain data in your Web Three application, be it NFT data, crypto data, or any other smart contract data, right. Using the traditional rest method. This method is really fast. It gets you aggregated data, MultiChain data, and you're free to try.
00:01:21.020 - 00:01:21.382, Speaker B: Right?
00:01:21.436 - 00:02:18.870, Speaker C: So let's get started. I'm going to cover four things today. I'll quickly touch on some of the trends in webtree. Where do we come in as Covalent? What is the Covalent Network? And also I'll give you some project demos. So I'm sure by this point you wouldn't need me to go through how Web Three is different from Web One and Web Two, right? People in Web Three pride ourselves as being open, trustless, permissionless, composable. And instead of just doing read and write, it is like read write, execute or read write own technologies that's being brought forth by cryptography and smart contracts, right? No matter if you develop an ethereum or any other blockchain, those properties are available. So by 2025, we see.
00:02:18.870 - 00:03:14.346, Speaker C: And by we like here at Covalent, we believe that there will be millions of critical information on public blockchains. And in fact, that vision has already been accomplished, right. There will be dozens of single use and multi use blockchains and this vision has already been accomplished. So maybe we should change it to 2023 or 2022 because these things are already happening. Thousands of application powering our lives. Now, that has not happened. But we believe, like, after the bear market consolidates, there will be a new generation of apps or DApps that is going to fundamentally change how the Internet works and how we relate to each other in a lot of ways, right? Because being able to transfer value so quickly through so many tokens on such a fundamental way is unprecedented in human history.
00:03:14.346 - 00:05:03.100, Speaker C: And just like Facebook, there will be like billions of users on chain, right? So with that vision, our job as developers is sometimes a little bit difficult, right? Like, so, okay, we can't do this multi chain thing so easily. Every chain is its own ecosystem and every chain probably has its own language, its own protocols, its own development suite of tools. Although we are seeing a broad trajectory converging onto EVM equivalents or this side of things, there's still many blockchain projects that's pushing the grounds with their own languages, developing their own ecosystems, right? So how do you get consistent on chain data? Things like transactions, things like balances, things like portfolio holding or event locks across different chains. Sometimes you have to write complex queries through SQL using any of those available methods. And the most annoying part is when the data that you get is very inconsistent, they are missing because of the structuralist manner in which Web Three conducts itself, right? And also if you want to query it on a large scale, it is sometimes very expensive to host an entire node. And if you want to query for archival data, it is extremely, extremely expensive in terms of just storage, right? You need probably like 1 TB for just hosting like full Ethereum Archival node. So for most of us, that's not possible.
00:05:03.100 - 00:06:48.334, Speaker C: So that's where Covalent comes in. We see that there's a gap in all these developer experience and we see ourselves as the middle layer. The blockchains themselves produce the data and it's exposed to us through notes, via most of it, via JSON, RPC, and we aggregate all the data across many different blockchains and make it available to you guys that you can use on your applications. So specifically, we see ourselves as a single API, like a unified API, which means that our query string is very consistent across different blockchains. You just need to kind of use one kind of query that you're very familiar with to get the same kind of data, whether it is Arbitrum, whether it is Clayton, Polygon, Avalanche, Phantom, and soon a lot of those subnets and supernets as well, right? The app chains, you'll be able to use an API that you learn once familiar with, apply it to all different chains to get the data that you need. You can query it from anywhere and technically, you don't need to know code to use it. You can either put it in a browser and copy and paste JSON response and then format it on your own, or there's also a no code option that I'm going to show you later on our website that you can use as well.
00:06:48.334 - 00:08:16.314, Speaker C: So, yeah, it enables you to get multi chain data in a matter of minutes, super easy, super fast. And the Covalent network is our step as an organization to move towards progressive decentralization, because we really believe that the future of Web Three data, something as critical as Web Three data, must not sit within a centralized infrastructure. But when we started out, you needed that kind of centralized organization to create the right kind of incentives for the people to make sure things move fast, that coordination is done well and the work happens, right? But once that threshold has been reached, we have already taken steps to make sure that the data providers are a decentralized network that is supported by validator nodes. So just like how ethereum. The data from ethereum is served from nodes. The data from covalent, as of now, is also being served from nodes. Some of the nodes are operated by the community partners and I believe will eventually gradually expand the number of nodes and operators that's going to be so that it can really be resistant resilient as well.
00:08:16.352 - 00:08:17.034, Speaker B: Right.
00:08:17.232 - 00:08:31.978, Speaker C: So underlying it is a tokenomics that is supported by CQT, which is the token that we use. And, yeah, the vision, the ultimate vision is to have a universal, decentralized data model for multi chain indexing and querying.
00:08:32.074 - 00:08:32.430, Speaker B: Right.
00:08:32.500 - 00:08:40.834, Speaker C: So all of these you can find out more if you google block specimen producers covalent block specimen producers covalent on Google.
00:08:40.952 - 00:08:41.618, Speaker B: Right.
00:08:41.784 - 00:09:05.900, Speaker C: And this is the rough infrastructure that we have currently set up. Our users tend to spend across analysts and crypto developers. And here we go. For the bounties that we have for hack FS, I believe let me just check that.
00:09:07.630 - 00:09:08.620, Speaker B: Oh, no.
00:09:11.890 - 00:09:20.334, Speaker C: This is not the right one. Let me just pull up the right one here. Just give me a SEC.
00:09:20.452 - 00:09:49.850, Speaker B: Sorry about that. So this is the right one. Just gonna paste it here and share my screen again.
00:09:52.780 - 00:10:47.450, Speaker C: All right, so the bounties that we have for this hackathon, we are putting up a $5,000 USD pool price pool for any project that makes meaningful use of any of our endpoints. For your builds, we've kept it really open, what ETH global likes to call, I believe, green grass type of bounties. I think someone used that term to me before when we tried to make it pretty narrow. But, yeah, we decided that we like to keep it open so that you can work on any kind of project that meets your fancy. And all you need to do is to integrate our API into your project in a meaningful way for you to be able to qualify for the pool price. It says here that participants can now see your application. Okay.
00:10:47.450 - 00:11:20.356, Speaker C: Yeah. So you just need to use it. And if your app is a really novel idea, it is a well implemented idea, and really use the API in a creative, useful, and in a good way. There is a top price of 1500. And if you participate and if you use it correctly up to our standards, you will qualify for a minimum price of 300.
00:11:20.538 - 00:11:21.270, Speaker B: Right.
00:11:21.720 - 00:12:02.772, Speaker C: So, yes, that's all. You can read up more about our price on the e global prizes page. And let me just quickly share with you some of the hackathon resources that you can use for those who are new to covalent API. The first one is, of course, our API reference. This is your bread and butter. It teaches you everything that you need to know to use the API. First of all, of course, you get an API key, and then you can start trying it out through our API reference page.
00:12:02.772 - 00:12:51.848, Speaker C: So, for instance, get token balances for address. It returns you any addresses, token balance. You can even click run here and it should be able to get you the token balance of the address specified here. I think this particular example here holds a lot of tokens, as you can see, like 126 different kinds of tokens. And, yeah, these are all this wallets token balances. It holds really lots and lots of token. USDC, Ether, Univ two, et cetera, et cetera.
00:12:51.848 - 00:13:25.256, Speaker C: Right, let's check out another one. Get someone's historical portfolio value over time. Sometimes the examples that they kind of hardwire into here load kind of slowly. It depends on which address that they use. And that is also a trait of web3 data. Sometimes if the address that you input just returns like millions of rows right, then it is foreseeable that the response.
00:13:25.288 - 00:13:29.752, Speaker B: Is kind of slow. Yeah.
00:13:29.826 - 00:14:02.648, Speaker C: While that loads, I can just go through the broad classes of the endpoints. We have what we call class A endpoints and class B endpoints. Class A endpoints refer to data that is available across all different blockchains. So, for instance, balances data will be available on Ethereum, on Polygon, on Avalanche, any of the layer ones, right? All layer twos NFT data, they'll all be available across it.
00:14:02.734 - 00:14:03.370, Speaker B: Right.
00:14:04.220 - 00:14:42.912, Speaker C: In comparison, we have class B endpoints, which are protocol specific. So not all layer ones would have DEXes. Well, of course, like most do, but class B endpoints allows you to query specifically protocol specific information. And by protocol I mean things like Uniswap, things like ave, things like compound, et cetera. We used to have those endpoints, but I'm not sure why right now we only have endpoints for DEXes. So x y equals to K. If you're not familiar with DEXes, it is the constant product formula.
00:14:42.912 - 00:15:09.700, Speaker C: And so any of the pools that follow the constant product formula will be able to get return responses in the data. For instance, if you query the Ethereum endpoint using this one right, which will get you the pools on both Uniswap and SushiSwap.
00:15:09.720 - 00:15:10.770, Speaker B: Let's give it a try.
00:15:13.780 - 00:15:16.176, Speaker C: Okay. You need to specify the Dex name.
00:15:16.358 - 00:15:27.032, Speaker B: And I don't think you need to specify the contract address. There you go.
00:15:27.086 - 00:15:36.500, Speaker C: So this gives us the number of the pools that's currently available on Uniswap.
00:15:36.580 - 00:15:40.670, Speaker B: So let me just can I zoom out?
00:15:45.840 - 00:15:57.116, Speaker C: Okay, so you see here you have one pool. And what's the tokens in this pool? You have got token zero, which is a Crest token, apparently token one, which is wrap ether.
00:15:57.228 - 00:15:57.600, Speaker B: Right.
00:15:57.670 - 00:16:16.456, Speaker C: So that's a Crest wrap Ether trading pool. And what is the total supply here? The total liquidity within the pool right now and the number of swaps in the last 24 hours. Very powerful tool for you to find what's going on within any pool at.
00:16:16.478 - 00:16:21.924, Speaker B: Any time on the biggest, two biggest protocols, dex protocols on Ethereum.
00:16:22.052 - 00:16:42.450, Speaker C: And of course, like on Matic, you have things like Quickswap, SushiSwap, you have got SushiSwap Spooky Swap, spirit swap on Phantom and all these will follow the same kind of response formats and you're able to get the volume fees, total supply, the number of pools, basically.
00:16:45.620 - 00:16:46.610, Speaker B: What else.
00:16:48.900 - 00:17:00.372, Speaker C: You can also get the more in depth detail about the pool if you have the pool address. Right, so I think what this one.
00:17:00.426 - 00:17:03.636, Speaker B: Shows I'm going to just show you.
00:17:03.658 - 00:17:13.480, Speaker C: Here is it shows the number of swap counts, it shows the liquidity what you got from the response just now as well. But in addition, it shows you the total supply.
00:17:15.740 - 00:17:17.980, Speaker B: And things like seven day.
00:17:18.050 - 00:18:19.824, Speaker C: Volume code, which is quite useful if you want to know what's the depth of the amount of transactions that has gone through in terms of value in terms of USD for the last seven days. Right, so, really useful. So that's our class B endpoints and of course we've got some pricing endpoints. And to integrate this into your application on a front end or client side application, you just make a standard rest API call and then you can choose to display the response, chop it up, use available fields, pretty standard stuff and yeah, give it a go. Right now I believe we have rate limit of five requests per second. It will always be free, right? Our product will always be free and five requests per second is pretty good.
00:18:19.862 - 00:18:20.450, Speaker B: For.
00:18:23.140 - 00:19:09.756, Speaker C: When you're in the development stage as well as maybe testing stage for a production kind of applications. You can, I suppose reach out to our team. And we're currently in talks to develop a pricing tier as well so that you can get way more volumes for your queries that you need for your application. And that is about it. One question that I get a lot as well is what are some of the ideas that you can build using our API? We see lots of wallets. Most of it is like display pages. Our API is a read only API.
00:19:09.756 - 00:19:51.980, Speaker C: We can't do write to the blockchain. So what you can do is to have those transactions. So wallets you have NFT dashboards, you have analytics dashboards. You can look at the lock events emitted from a smart contract. For instance, in this one you can get all the lock events by a contract address. You can get lot of events by topic hash and that enable you to do a lot of on chain analytics, right? Yeah, the sky is the limit. And be creative.
00:19:51.980 - 00:20:11.804, Speaker C: Even if you want to dabble a bit into like a full DAP development, you can, you just need to implement our API on the client side to perhaps make some calls to the data that your back end smart contract has.
00:20:11.862 - 00:20:15.668, Speaker B: Emitted and then build an interface for.
00:20:15.674 - 00:20:29.000, Speaker C: It for the front end user as well. So that kind of concludes most of my call. Most of this webinar, I'll open it up to questions for now.
00:20:29.070 - 00:20:36.740, Speaker B: I think going to take a look at the chat. Okay.
00:20:36.830 - 00:20:39.004, Speaker D: All right, thank you very much. Please.
00:20:39.042 - 00:20:40.140, Speaker B: Can you hear me?
00:20:40.290 - 00:20:41.708, Speaker C: Yes, I can hear you.
00:20:41.874 - 00:20:42.460, Speaker B: All right.
00:20:42.530 - 00:20:48.932, Speaker D: Good afternoon from here. I so much appreciate your lecture.
00:20:49.096 - 00:20:49.424, Speaker C: Please.
00:20:49.462 - 00:21:14.820, Speaker D: I have a question. I don't really understand how this API can be utilized. For instance, now I have a personal brand, an exchange brand. Just like a vendor, I buy crypto and I exchange it for Fiat. So how can I utilize this API now in my transactions?
00:21:14.900 - 00:21:15.690, Speaker B: Thank you.
00:21:16.860 - 00:21:36.796, Speaker C: So let me try to understand where you're coming from a little bit. So what I hear is that you are doing an exchange, right. Let's say you are an investor or something like a personal retail investor, and you want to exchange your crypto for.
00:21:36.818 - 00:21:38.750, Speaker B: Your Fiat, right.
00:21:42.800 - 00:21:43.924, Speaker D: To crypto.
00:21:44.072 - 00:22:31.760, Speaker C: Yeah. In that case, our API is probably not what you're looking for. What you're looking for, you can go to centralized exchanges to do an exchange, right? And you can use Finance, you can use Gemini, any of those. Or you can use like, Uniswap if you're familiar with the full decks options. Our API is more catered for developers who want to show on chain data on their Web Three application. So let's say you want to create a website. You want to create a Web Three website where you want to show some statistics on how many people actually interacted with this particular protocol on this day.
00:22:31.760 - 00:23:14.670, Speaker C: What are the transactions that has gone against this protocol? How much volume? What's the prices, for instance, of that token at this time? So all these data is available for you to get from our API. So we are kind of like a data warehouse, right? We're kind of like a data supplier. You can't go to the data supplier and say, I want to exchange, I want to do a trade, because that's not a service that we provide. What we provide is for you to use that data to build an application. Hope that kind of answers your question.
00:23:15.600 - 00:23:17.468, Speaker D: Yeah, you did.
00:23:17.554 - 00:23:19.550, Speaker B: Thank you. No problem.
00:23:22.800 - 00:24:08.828, Speaker C: We got another question. Is it possible to get all NFTs for a specific user? And if so, what chains would this work on? Is it blockchain agnostic in the sense that all EVMs are supported? Great question. It is possible to get all NFTs for a specific user. And the endpoint that you want to use is get token balancers, actually for address under this endpoint, because NFTs are essentially also tokens, right? They are also tokens. They are ERC 721 tokens. All your coins are ERC 20 tokens. So we support ERC 721 and also ERC 1155, which is another NFT standard.
00:24:08.914 - 00:24:15.968, Speaker B: Right? So what you do is you specify set to true.
00:24:16.134 - 00:24:24.372, Speaker C: So once you set NFT to true, it will also return all the NFTs of a specific user. So let us try, right?
00:24:24.426 - 00:24:28.084, Speaker B: Maybe we will use maybe we will.
00:24:28.122 - 00:24:40.320, Speaker C: Use this address and let's see what NFTs does this person have?
00:24:50.460 - 00:25:06.796, Speaker B: Not too sure. Why this time of the day, this interface is a bit slow. Yeah, not really. Okay.
00:25:06.898 - 00:25:19.280, Speaker C: But in any case, typically, normally it should be way faster than this. In any case, the answer to your question is yes. You can get entities it is using this.
00:25:19.350 - 00:25:28.710, Speaker B: Typically it would yeah. I think there's some technical error here. Not sure what's the problem.
00:25:29.160 - 00:26:11.036, Speaker C: And you would be using this endpoint. All right, so what chains would it work on? It will work on all these chains, every single one of these 30 chains that we currently index. And is it blockchain agnostic. It is Agnostic to the extent of it being here. Like, only if we index it, then it will be available. You can't use it on a chain that we don't index. Is there a way to watch the movement of crypto whales using covalent? Yes, someone has actually developed a whale alert application using our API.
00:26:11.036 - 00:26:51.480, Speaker C: Actually, I don't think I have the link with me right now, but yes, will alert, like a Twitter based one. So using an API, they get updates when there's a huge movement in price, and then through their backend client, they develop some code right. To be able to see that, oh, for this amount of tokens, we consider it will. And then once that happens, it triggers like an automated post on Twitter informing everyone else that whales have moved. So you can do that for every single address, obviously using API?
00:26:51.640 - 00:26:57.546, Speaker B: Yep, exactly. Yep.
00:26:57.598 - 00:27:16.666, Speaker C: You can follow any data set that is on chain. How data is formulated on chain is that most of the data are on emitted from the smart contracts.
00:27:16.778 - 00:27:17.102, Speaker B: Right.
00:27:17.156 - 00:28:02.230, Speaker C: So every single application, most of the applications are a set of smart contracts, like Ave, like Compound Uniswap. So you can either put the smart contract address to look at what all of them is doing behind the scenes, or you can also supply the wallet address of any wallets that you are following and you'll be able to get updated data. Okay, so I'm going to repeat this question. Is there a cap on the amount of tokens that are returned? Or would you need to use Pagination for, say, a list of 1000?
00:28:02.300 - 00:28:03.350, Speaker B: NFTs?
00:28:03.930 - 00:28:13.002, Speaker C: We use Pagination, so there is no cap because we return as many tokens as the person has.
00:28:13.056 - 00:28:13.660, Speaker B: Right.
00:28:14.110 - 00:29:11.704, Speaker C: We can't cut off what the person is holding because that will be untrue. And if a person has lots of token holdings, we just need to, you know, you just need to supply the Pagination. Like, I believe the syntax would be something along the lines of, like you can increase the page size from the default hundred. You can increase it to like 1000 or even like 15,000 so that the page returns up to 15,000 entries of tokens or NFTs or balances. Yes. If there's no more questions, we are reaching the end of our time here. Thank you so much everyone for coming.
00:29:11.704 - 00:29:46.136, Speaker C: And if you have any more questions, do hit us up on our discord. Or you can also DM me on Twitter. My handle is musings on DeFi on Twitter. One last thing. If you are building Web Three applications, we are currently developing this Web Three resources library. With this library, it'll make it super easy for you to integrate any of our tables and data that we have into your application.
00:29:46.238 - 00:29:46.504, Speaker B: Right.
00:29:46.542 - 00:30:19.460, Speaker C: You just copy the whole table and it'll supply it to you. Web three data. For instance, something like this is what we are currently building as well. You can get with one address, you can get all the transactions that, ERC, 20 transactions that this person has done. So, yeah, you can go to this URL. I'm going to drop the URL into the chat here. You can go to this URL, give it a star to follow it and you'll be able to see lots of goodies that's going to come out this quarter.
00:30:19.460 - 00:30:21.670, Speaker C: Yep. Thank you guys.
00:30:23.000 - 00:30:23.508, Speaker B: Awesome.
00:30:23.594 - 00:30:53.376, Speaker A: Thank you so much, Leiving, for taking the time to do this workshop for Hack FS Hackers. And thank you to the rest of you for joining this workshop and asking really interesting questions. As LeVian said, he is reachable on the sponsor covalent discord. Just tag him or via Twitter. And with that being said, we have another workshop in half an hour. So hope to see you all there and otherwise. Have a great rest of your day.
00:30:53.558 - 00:30:55.568, Speaker C: Thank you, Anna, for having me.
00:30:55.734 - 00:30:56.850, Speaker B: Take care, guys.
00:30:57.380 - 00:30:57.950, Speaker A: Bye, everyone.
