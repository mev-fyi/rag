00:00:00.570 - 00:00:44.684, Speaker A: It and yeah. Well, we've got the first team here, so are we ready to get started? Yes. Sweet. Let's have you guys. You should be able to share your video. Which one of the actual people here has the video? If you could raise your hand in, we can give you permissions. Anybody? Sorry about the silence.
00:00:44.684 - 00:01:06.224, Speaker A: I thought I was oh, yeah. Just stand by one moment as I finish promoting the full team. Okay. There we go. It cool. Yeah. It looks like we're set up here.
00:01:06.224 - 00:01:43.788, Speaker A: So as long as you've enabled audio, I think we're ready to start. Hi there. My name is Chris. I'm going to introduce you to Batua, a wallet concept for India designed for a world where everyone is making everyday payments using crypto. This is running on a layer two with gasless meta transactions for nice user experience and an Indian Rupee stablecoin. This introduces Rupesa, the basis for all payments in India. QR codes are already commonplace.
00:01:43.788 - 00:01:55.430, Speaker A: There are almost 700 million smartphone users. This would be deployed on layer one for security. This would be on layer two for scalability. So I'm now going to hand over to Aditi, who's going to talk about UX research and UI design.
00:01:55.880 - 00:02:38.868, Speaker B: Regarding the UX and UI, we started off with some detailed user personas from diverse Indian cultures, ranging from a teammaker who's a complete beginner to this entire concept, to a crypto nerd. Stepping into the user's shoes, we realized we have to keep the app super simple to optimize it for a beginner, like a teammaker who can easily accept payments through the Butwa app. Our user research suggested that nine out of ten users in India do not use English. They use many regional languages, very much a part of the Indian culture. So we decided to keep the app multilingual that supports eleven languages. We built some super simple onboarding flows, making the user choose their language, briefing them about Butwa followed by really simple interaction with the wallet. And yes, we did work out both the light and the dark modes here.
00:02:38.868 - 00:02:50.376, Speaker B: Really dived into making the payments flow very easy for the user to make hassle free payments. We tried to keep a beginner's mindset to craft a simple user journey while sticking to the Indian roots as a brand. I'd now like to hand over to Bo.
00:02:50.478 - 00:03:38.064, Speaker A: All right, my name is Bo and I'm going to talk about the stablecoin. So this is going to look quite a bit like MakerDAO. The core is the exact same as MakerDAO. When MakerDAO launched, they didn't really have too many oracle options, so they rolled their own. These days we have chainlink and Uniswap are both really nice modern oracles that are hard to manipulate. We pulled from cryptocompair, went through a chainlink node to supply the peg price and this governs how much of this rupee stablecoin you can get for your ETH collateral. And then Uniswap is where you go to pay the fee in Cow uniswap Oracle is kind of nice because it gives us a real price for a stablecoin that we can compare to the Peg and then auto adjust the stability fee without needing a governance vote.
00:03:38.064 - 00:03:39.844, Speaker A: So now I'm going to hand it off to Shivani.
00:03:39.892 - 00:04:17.524, Speaker C: Hi, my name is Shiv, and I'll talk about layer two payments. Layer one is pretty expensive and it doesn't make sense to do small payments. Layer two matic to the rescue. We can use their POS bridge to deposit our RSAs from layer one. Our layer two child tokens already have native meta transactions built into them. So once we have our funds on layer two, our app that talks to Biconomies relayers and help us to send transactions gaslessly. All right, so let's see.
00:04:17.524 - 00:04:19.380, Speaker C: App in action.
00:04:23.960 - 00:05:28.112, Speaker A: Yeah, I've got a lot of money. Okay. So I'm gonna love so this is how you can simply pay using butwa a bitcoin maximalist promoting ethereum application. Pretty cool. Now we're going to move on to the questions and judging and the next part. Yeah. Great job, guys.
00:05:28.112 - 00:06:25.594, Speaker A: I mean, this looks really good. What was the hardest thing that you ran into? I mean, there's a lot of moving parts here. And what was the most difficult thing you ran into? I think for me it was keeping all those moving parts working end to end. All the different pieces that need to get pulled together to link sort of a price oracle governing a whole heap of different moving parts, all the way through to making sure the user experience was good for a chaiwaller, like trying to manage that whole thing. Anyone else got something to say? Well, the hardest thing about the price Oracle is that we didn't have one to start with, so we kind of had to go from the roots to get the price off chain onto on chain. A lot of the other currencies have price Oracles already on chain, and I just spin our own. Yeah, I'm really impressed by the scope of what you that's it's really cool.
00:06:25.594 - 00:06:41.300, Speaker A: Chris, nice to see you, by the way. Good to see you, Brendan. Yeah. So one question I had though, is what is the connection with Biconomy? I didn't fully understand that. Integration. That part of it. Shiv, do you want to talk about that?
00:06:43.350 - 00:07:11.734, Speaker C: Biconomy has built this meta transaction standard based on EIP seven one two, and that allows us to and they have the relayers so we can submit a signed transaction to their relayers, which can then submit the transaction on chain. And since the native transaction part is built into the ERC 20, you can do that gasless transaction.
00:07:11.862 - 00:07:41.010, Speaker A: I see. So they provide the venue transaction layer for Maddox then. In that case, yeah, this is what allowed the UX to be like, no gas, no settings, just straight payment. And gas gets handled in the background. Right on. Because I know you have Chris on your team and he's at UX Fanatic. Did you test this with users? Did you have any experience actually putting in the hands of you talk Shiv?
00:07:43.290 - 00:07:51.270, Speaker C: Well, yeah, did ask my parents. And then this video was shot at Cocoon.
00:07:54.250 - 00:08:37.910, Speaker A: They're only three pages, so a lot of people were kind of blown away by how simple it was. So it's just a website, so is it even safe? How is it safe? And then showed them the magic word backup and they kind of amazed by it. Had full payment functionality with just a few screens of yeah, the one question was like, what? There's no login, there's no username password. How does this work? It's magic. So we did get it in the hands of some real users who are kind of curious to see how it worked. And the guy in the video was also kind of someone who was one of our first user testers and he was a bitcoin maximalist, apparently. It's something I joke about with him now and again.
00:08:37.910 - 00:08:46.970, Speaker A: So now I have it on camera, him admitting that he's a maxi. So there you go. So converting one at a time. Okay, this is good. Awesome. Slowly, slowly.
00:08:47.470 - 00:08:58.620, Speaker D: What do you guys think about next steps? What's next for your team? What are you guys thinking about on ramping, off ramping, anything of that sort?
00:08:59.170 - 00:09:27.110, Speaker A: I think from our perspective, it's all about getting stable oracles to govern some of these stablecoin systems. So that's kind of like where I'm putting a lot of my focus, like getting an Ethinr feed. Bo, do you want to talk? Yeah. Because for the hackathon we just had one API endpoint, put it on chain in one spot. But when we deploy this for real, we got to get more than five data sources aggregate and medianize it properly.
00:09:31.130 - 00:09:49.630, Speaker C: We are planning to connect it with India's UPI system, which already lets users to make peer to peer transactions because we have open source API for all banking information here. And that would be easy for super.
00:09:49.700 - 00:10:06.014, Speaker A: Smooth on ramp from UPI onto a stablecoin. I hate to cut everyone off here because yes, this seems very cool. Next time I'm going to give you a heads up 1 minute before the timer ends, but we are out of time for questions. We got to move along. Thank you, Henry.
00:10:06.142 - 00:10:06.882, Speaker E: Sounds good.
00:10:06.936 - 00:10:37.680, Speaker A: Thank you guys. Thanks everyone. Thanks guys. It's very cool. The next team will be Sigh Finance and if they could join here and share their video, that would be great. And I'll sound like a broken record by the end of this, but yeah, make sure you enable audio. So we're skipping ipdb for now.
00:10:40.610 - 00:10:57.006, Speaker F: We have created Sci Finance, which is a money market protocol while also supporting a financial model driven by the Token PSI. So to understand how it works, the first thing is that Psy tokens are inflationary and it will have a 1% inflation rate for the initial 96 days and then it will keep getting halved.
00:10:57.198 - 00:11:28.790, Speaker A: Yeah. Is there a video? I don't see a video, sorry. Yes, we just see your desktop right now. Two screen I think and also jumping in we will get to ipdb but they're just not here at the moment. Hey, there we go.
00:11:28.960 - 00:12:32.610, Speaker F: Hi everyone. So as a part of this hackathon, we have created Sci Finance which is a money market protocol while also supporting a financial model driven by the token PSI. So to understand how it works, the first thing is that Psy tokens are inflationary and it will have a 1% inflation rate for the initial 96 days and then it will keep getting halved every year for next ten years. It also has a loss minimizing distribution mechanism. What we mean by that is that we are distributing these tokens among the market participants based on the losses suffered by their supported market over the past 24 hours and this speed is adjusted every hour and the distribution is being done on a per block basis. Another thing is that we have a value aggregation mechanism. What we mean by that is that we have a treasury model where we regularly purchase bitcoin and the overall idea is that the bitcoin purchased in 2020 or 2021 that will be kept within the treasury and sold back in around like 2027 or 2028 to purchase our tokens back from the market and burn them.
00:12:32.610 - 00:13:45.210, Speaker F: So the inherent idea is that the initial total supply which will be 5 million PSI tokens should be equal to the final supply after ten years. This will be achieved by capturing the value from bitcoin and other crypto assets and then driving it back within the protocol by purchasing our tokens back after we get some sufficient profits from the treasury reserves. So this is the overall distribution mechanics, efficiently catching data and better basis and it add them to markets based on the losses made by that market over the past 24 hours basis. So what it inherently achieves is that as you can see here, the blue line is the actual graph of a crypto set, for example bitcoin. And the red line is a value adjusted graph which will be experienced by our protocol participants. So inherently whenever the market goes down, we are providing them our tokens. So implying that we are resolving the crypto volatility issue pertaining to the money market use case.
00:13:45.210 - 00:15:11.286, Speaker F: For example, if you deposit bitcoin worth $12,000 today and although you are earning interest, but if the bitcoin's value itself goes down, then you will still be in losses. We are inherently trying to resolve that and over time we are planning to take it forward by adding the custodial infrastructure and trading tools over our treasury and adding digital investment assets as a markets which will be supported by our protocol. So the website is live as you can see here. It is still being in active development and we are constantly adding and developing it every day. We are planning to take it live on common testnet in terms of allowing everyone to basically use it and interact with it, which we plan to achieve by next week. As you can see here, you can supply asset borrow, asset redeem asset and this is the treasury model, it uses the zero X API for getting the data and executing the transactions. So here you can see the sell amount, the purchase amount that will be bought and the price and the guaranteed price.
00:15:11.286 - 00:15:41.280, Speaker F: We can execute the trade, although this is currently not working on common testnet. The trading part itself, 40 X API that needs to be tested. And for the getting the data, we are using our subgraph and the Marlin protocol to reduce the latency basically. Yeah. So this is our submission for this hackathon. Thank you.
00:15:42.930 - 00:15:48.400, Speaker A: Very cool. Moving on to questions and I will remind you when you have 1 minute left. Yeah.
00:15:49.730 - 00:15:52.900, Speaker F: Hi Cypher and team here open to questions.
00:15:53.350 - 00:16:23.462, Speaker A: Yeah raul, thank you for that presentation. It's interesting, you covered a lot of ground, I have to say. So I would love to just pitch it back to you for like an explain. Like five basically, people deposit their assets in and there's a basket of assets that are supported due to the Oracle necessity and a governance token is being distributed. Governance over this treasury, and it will go to the worst performing asset in the basket.
00:16:23.526 - 00:17:11.702, Speaker F: Right. Another thing is it is actually not a governance token so it won't be basically used for voting because if we look at the comp distribution that is based on liquidity that is being provided. But what we have created is kind of a financial model which is trying to address a certain use case. So we don't think that it should be used for governance because it is not kind of capturing the actual you can say liquidity or the participation value that an individual lender is providing to the protocol. What we are kind of trying to do is minimize the losses. And another thing which is different from comp or AV is that although during launch we will be having cryptocurrencies basically like Bitcoin and Ethereum and all that. But going forward we basically plan to add, you can say financially engineered products, so basket of tokens.
00:17:11.702 - 00:18:07.550, Speaker F: So it won't be like individual cryptocurrencies, it will be like market indexes, like the thing like tokens that sets is doing or the kind of vault based strategies which are being introduced but that will be tokenized and that will be supported. So inherently what it means is that you can buy a market index and if the market itself goes down, we are trying to cover that losses basically. And since the governance tokens, the initial value is basically decided by the market. But going forward, let's say once we have a certain value, let's say we get 10 million market cap basically. Then we'll buy a certain bitcoin and then basically we're kind of like capturing permanent value basically. And like 2025 onwards we'll be starting to sell that purchase our tokens back. Because we think basically we're kind of going long on this market and at a later point of time we are supplying that value back to the protocol.
00:18:09.090 - 00:18:27.310, Speaker A: The buyback and burn made sense to me in terms of increasing the value of the token, I guess. Right, so now that you're saying that this token is issued to the entire basket, it sounds of all these different assets, then how is the distribution differed based on the ones that have dropped?
00:18:27.390 - 00:18:56.560, Speaker F: Is that still basically we are capturing price snapshots. So every hour we take a price snapshot. What is the current price? And to adjust the speed, we compare it with its price which was 24 hours back. And if it is reduced, only then they are provided our tokens. So if you are making profits, then you are not getting any token. So it's kind of like the distribution is kind of taking a short view of the market and capturing the losses while treasury is going long over the market.
00:18:57.570 - 00:19:02.080, Speaker A: Yeah, this is really interesting. So what's like your plan for this project?
00:19:03.090 - 00:19:34.380, Speaker F: I plan to basically take it live. The thing is I want to get it audited. So currently I am kind of testing it and developing it and integrating it. So after this is done, in terms of financial modeling, that is completely off chain. So that will be like Aibh, we can have Python libraries and all that. So I'll be also doing that and then looking forward to getting some audits because I think I want to do it properly, so I don't want to launch an audited kind of thing.
00:19:37.550 - 00:19:54.478, Speaker D: I have two questions really quickly. So number one, when you say that you let people create indexes, anyone can create their own index. Like I'm allowed to create my top 50 cryptocurrencies or like top three non bullshit protocols. Is that something I'm allowed to do or how does that work?
00:19:54.644 - 00:20:08.210, Speaker F: I think we will provide that service, but in terms of adding that to the lending protocol, allowing your created market to be provided side tokens, that would be based on governance.
00:20:08.630 - 00:20:09.234, Speaker E: Okay.
00:20:09.352 - 00:20:18.870, Speaker D: And then second question, when you say you're going to take profits and keep it long on the underlying asset, you said you were going to do it in bitcoin. Is there a reason why you chose Bitcoin over Ethereum?
00:20:19.210 - 00:20:55.550, Speaker F: Because I think currently institutional money is starting to come in and it is currently 3%. Like 3% of total bitcoin is within the institutional treasuries basically. So I think over the next five to seven years it will move to 50%. And another thing is that this is kind of a bootstrapping model. I kind of pitched a private equity based token I tried to my company, which is an investment bank and they are kind of slow. So during this COVID time, I kind of just created it and I think it can help me bootstrap my overall idea. And the treasury thing is, over time I want to make it blockchain Agnostic and add the custodian infrastructure.
00:20:55.550 - 00:21:07.826, Speaker F: So we can also add security tokens and all that. It's not limited to cryptocurrencies. Initially we are beginning from cryptocurrencies, but it's basically tokenized.
00:21:07.938 - 00:21:12.498, Speaker D: Okay, so you actually want to have like a diversified portfolio in underlying assets to take profits in so that you're.
00:21:12.514 - 00:21:13.046, Speaker A: Holding it all in.
00:21:13.068 - 00:21:14.198, Speaker D: Okay, that makes sense.
00:21:14.364 - 00:21:36.718, Speaker A: Okay, we are a little bit over time, so we're going to have to cut it there. Thank you very much, Rahul. And we're going to move on, which is onboarding MTO. Emito. I hope I got it right. If you could share your screen and make sure that audio is on, that would be great.
00:21:36.804 - 00:21:58.160, Speaker G: Hello guys. I'll be sharing my screenplay. I need to share my audio with the screen sharing.
00:22:03.060 - 00:22:03.810, Speaker A: There.
00:22:06.040 - 00:22:58.390, Speaker G: Boarding Mito that is trying to make Ethereum simpler to use. So we're working on Mito that is a separate project and we're tokenizing containers. And we want normal people without prior knowledge of Ethereum to use it. So we had to simplify the user experience for them. So we're trying to make Web Three, in this case Ethereum, intuitive and familiar. Basically we need to make the creation of wallets and transactions simpler. So the requirements were remove key management, no signing transactions, no prior knowledge, and to make Web Three filas web Two.
00:22:58.390 - 00:23:47.780, Speaker G: So how does it work? We got on the back end on board Money API that handles the theorem. It's a wrapper that generates an abstraction so we can manipulate the elements in a much more simpler way. So private keys are stored on their servers. We only have a node JS server that handle US users. And on the front end we got bootstrap and a ESJ for the presentation. So the app is up and running on simple Xyc. So here I'm going to log into an already existing account.
00:23:47.780 - 00:24:17.470, Speaker G: So go to test. So we're in our home, we got some F balance and we have our address here. This is our token. So we're going to have a destination address. That will be my Gorely Destinate wallet. Here we can see I got zero six F. I'm going to send some of it.
00:24:17.470 - 00:25:04.810, Speaker G: So I want to send this amount in way to my address I'm going to send so it won't prompt me for any sign in transaction, nor do I need to know anything about gas prices. So all this is handled in the onboard Money API. So we can see there. I just received Ether into my account and I send it from here. Cool. So we can check the balance again. Nice.
00:25:04.810 - 00:26:02.010, Speaker G: Also we can create accounts. So I'm going to create a test 10 account. I'm going to do a password I'm going to create account. This is also handled by the Onboard Money. So the pathing, it also takes a few seconds for everything to transact that could be fixed by saving the requested intention of the user on the server or server and then requesting from or server to Onboard Money and in a later time update everything. So, yeah, there we go. Password.
00:26:02.010 - 00:26:09.200, Speaker G: So there you go. Ethereum made it simple.
00:26:13.510 - 00:26:26.642, Speaker A: Super questions. I have a question. You had XYZ for your website. Was that chosen for the ENS benefits or is that just coincidence?
00:26:26.786 - 00:26:35.274, Speaker G: No chose it really, because it was, I think the cheapest one.
00:26:35.392 - 00:26:37.258, Speaker A: Right. XYZ things are.
00:26:37.424 - 00:26:58.510, Speaker G: But we're planning to use because using it's much simpler for users also so they don't have to use the hex decimal address. We were also thinking of using it in a later stage.
00:27:00.390 - 00:27:05.940, Speaker A: Full disclosure, I work for ENS, that's why I'm bringing it up. But I support you adding ENS to this project.
00:27:09.190 - 00:27:13.240, Speaker D: How was using Onboard Money, how was that?
00:27:15.370 - 00:27:47.120, Speaker G: It was pretty easy after getting the handle of it because it's a very new project and being developed, there are some bugs still, but after we got it up and running, it's pretty good. It doesn't fail much and we can get good information of the errors that happened so we can talk to the team and get feedback and solve the problems we're having on the run.
00:27:48.450 - 00:27:51.122, Speaker D: Okay, so the team was available, you spoke to them?
00:27:51.256 - 00:27:51.842, Speaker G: Yeah.
00:27:51.976 - 00:27:52.820, Speaker A: Very cool.
00:27:56.470 - 00:27:57.970, Speaker D: Who do you envision using this?
00:27:58.040 - 00:28:11.560, Speaker A: Sorry, Brennan, I was going to say I just want a little bit of clarification. I didn't follow exactly. So you basically created a docker, I guess container for an EVM, like a death node kind of thing, is that right?
00:28:12.090 - 00:28:50.610, Speaker G: Yes, actually. We're tokenizing containers that are going to be exported from Brazil onto Venezuela. And it's an investment opportunity for people because the container is crowdfunded, so people can buy very small amounts of the enterprise. So people that will be using this will have no knowledge of Ethereum. We are only using it as a register, basically. So users are normal people that are trying to invest in importing exporting of elements.
00:28:51.750 - 00:28:55.382, Speaker A: So are these docker containers effectively their wallets then?
00:28:55.436 - 00:29:54.766, Speaker G: From what I know how does it work is Onboardmonic provides an umbrella wallet that lets us create I call it smaller wallets. So the beep wallet let us handles the request. So we got this wallet address and we got the user's wallets. What Onboard Money let us do is send transactions on behalf of the users user or wallet address so that allow us to handle gas requests. We use the gas in our main wallet so users don't have to own any Ether to create transactions. And it is indeed in a docker. Onboard uses a docker.
00:29:54.766 - 00:30:06.220, Speaker G: We have a server that talks to our main wallet and we send our intentions to their server and transactions are sent to Infuria, I believe.
00:30:07.230 - 00:30:14.718, Speaker A: Okay, I see. Makes sense. And so the idea would be that you cover the cost of Gas just in a direct transaction cost to the.
00:30:14.724 - 00:30:22.210, Speaker G: End users, then, yeah, we are subsidizing the transactions for users so they don't have to own any pre or gas.
00:30:23.830 - 00:30:40.326, Speaker A: All right, that is our four minutes. Thank you so much, Santiago, and very good work. Next team will be Share Myrpc. And when you join in here, make sure you turn on audio for the.
00:30:40.348 - 00:31:28.390, Speaker H: Video using payment channels from Raiden. Hello and welcome to my talk on Share My RPC decentralized infuria using payment channels from Raiden. Next to the problem, running an Ethereum node is costly. Providing the JSON RPC interface is voluntary and it does put a strain on both bandwidth and computation. The JSON RPC does things like Estimate Gas for you, you can send transactions to it and you can also subscribe or filter for events. Currently, most apps rely on Infura for their RPC calls, which means there's a big risk of centralization. Now, my solution is to send money with each JSON RPC request to incentivize people sharing their JSON RPC servers.
00:31:28.390 - 00:32:14.066, Speaker H: Now, my contribution is a Golang package for the easy interaction with a wrapper around Go Ethereum's ETH Client, which is the default way in Golang to interact with Ethereum. And it can be used as a drop in replacement for ETH client. And what it does is it basically sends a payment attached to each JSON RPC request over the payment channel. And I also added some small changes to Go Ethereum so that the RPC server waits for a Raiden payment on incoming RPC requests. And I created this little demo app that executes some commands. Now to the demo app, on the left top side you can see the Raiden node. And on the bottom left side you can see a Gaston node running disconnected to Gurley.
00:32:14.066 - 00:32:52.158, Speaker H: And on the top right side you can see the Raiden Wizard, which contains our current balance in Wiz. And on the bottom right side you can see Share My RPC. And I'm now going to start a little demo. And what this demo does, it sends some RPC queries to the Gas node and pays for them using Raiden. So for example, here we query for the highest block number and send for this to the Rate node. Here we estimate gas. We ask for the pending nons for some account or we send a transaction.
00:32:52.158 - 00:33:31.274, Speaker H: The next test, we send some money to another node. So not the Raiden node and see if the Raiden node still listens to our requests, serves our requests. And as you can see here, we send money to the zero node, which is not in the Raiden network, so the payment is not executed. And you can see on the left side, the Gath node says that no payment was received for a call. So it received the JSON RPC call, but no payment over the network, so it returns an EOF and the RPC call failed. The raiden package. The raiden package uses the raiden rest API.
00:33:31.274 - 00:33:51.010, Speaker H: On the right side, you can see an outline of all the functions available to interact with the Raiden network. It can be easily imported and used by other Golang projects, and it makes working with Raiden really easy. Thank you for your attention. I hope you like my talk on Share my RPC let's decentralize infura.
00:33:54.250 - 00:34:18.910, Speaker A: Fabulous. We got four minutes for I mean, go ahead. Sorry, I was going to ask. I was going to say, so pull Together hits millions of requests per day with infura. So we do definitely feel this pain of needing to distribute this workload a lot. So it's interesting to see this project in your mind. I kind of have two questions, I guess.
00:34:18.910 - 00:34:33.090, Speaker A: One, who have you optimized the payment from, like, either the users of the DApps or the DApps themselves? And two, do you envision any kind of discovery, like a marketplace for discovery for these nodes?
00:34:36.310 - 00:35:11.360, Speaker H: So, regarding your first question, I don't know. I just developed it as a drop in replacement for the current ETH client package. So I'm not sure whether, like, in the end, this cost will be paid by the dep developers or the users. So probably it will be, in the end paid by the users, but maybe not in the beginning. And I already forgot your second question. Sorry.
00:35:11.810 - 00:35:16.160, Speaker A: Second question was just is there going to be, like, a node discovery? Like a marketplace sort?
00:35:18.210 - 00:35:48.940, Speaker H: Well, I think you could build something like this. Yeah, that would be really nice. To be really honest, I just needed something to work on, and this was, like, the nicest project in the list. And I'm not really planning to continue it, but if someone is interested in it, I would love to provide some feedback and provide some pointers how to spin this out and move this forward.
00:35:50.190 - 00:36:19.780, Speaker A: Well, somebody needs to continue it because we do need to decentralize infuria. Infuria is great. I'm not against infuria, but we do need other options. I mean, the infuria people would probably agree, and this is right. This is an interesting way of doing it. It's too bad, though, that you said you don't plan on working on it necessarily further. But now that you're somebody who's attempted to do this, what would you say is the hardest part of decentralizing Fiora, since now you've thought about it.
00:36:20.710 - 00:37:24.310, Speaker H: Well, the hardest part in the project definitely was working with Raiden because their documentation is a bit outdated and creating a wrapper around their API was a bit hard. I think in general, from the programming side, it's not that hard. I think the biggest problems would be around incentivization, like how to because most DAPs use infuria and most smaller depths also use infuria for free. So there's not much incentive for them to. Move to a paid model only for centralization. So I think, yeah, that's one of the biggest issues I would envision with this project in the long term, just to get people actually to pay for the API requests or to accept that they should pay for the API requests.
00:37:28.190 - 00:37:31.100, Speaker D: What was the hardest thing you came into?
00:37:31.870 - 00:37:32.682, Speaker H: Sorry, again?
00:37:32.736 - 00:37:35.580, Speaker D: What was the biggest problem that you ran into?
00:37:38.430 - 00:38:19.180, Speaker H: Yeah, the biggest problem was that it's not easy to get your balance from Raiden. Well, it's easy to get your balance, but it's not easy to subscribe to a new event. So you don't get notified when someone sends you some money. This was a pretty big challenge. So you always have to poll for new updates. But this is like I abstracted everything away so that you can just call a function and if something changed in the last whenever, then you get the payment back. The last payment back.
00:38:20.350 - 00:38:33.150, Speaker A: All right, and that's our time. Thank you so much. Thanks, bye. Next team will be etherealm. You can share your screen and make sure you turn on audio.
00:38:36.370 - 00:39:45.640, Speaker E: Hi guys. Just a second, sorry. Hi everyone. My name is David and I'm here to present you my project named Ether Realm. So basically the purpose of this whole idea is to create NFT games from scratch, which means basically to enable a website where you could enter all the rules and the conditions of your game. And it will be created on a blockchain with smart contracts generated automatically. So I just prepared here a little slide to show you how I wanted to divide the website.
00:39:45.640 - 00:40:31.730, Speaker E: So basically, when I think of a game which is NFT based, I thought about three different things. The first one obviously is the collectibles. This will be basically modeled by an ERC seven to one smart contract, then the tokens and in the end, what are the rules that define the game. So I want to show you a demo of the website. So here you can see you can create a new game, min collectibles or upgrade game contract. We will focus on create a new game. So here you can choose a category.
00:40:31.730 - 00:41:18.180, Speaker E: So let's say city for example, and then you get basically from Wikidata all the available cities that are registered in Wikipedia. So that's pretty awesome stuff. Basically you can create any game that you want with any collectibles and it will be like ready here, let's take for example, I don't know character from Star Wars. Let's say just random ID. So here you have all the characters. We will take an example with less items. So let's say planet of the solar system.
00:41:18.180 - 00:41:58.990, Speaker E: There are only eight. Yeah, makes sense. So basically these will be my NFTs. If there is some item that I don't want in my collection, I can remove it and that will define my first step, which is the collectibles. Then I can define tokens. So here, let's define gold will supply 1 million, silver will supply 10 million. Let's say, I don't know, this will create basically for each line here, it will create an ERC 20 contract.
00:41:58.990 - 00:42:36.970, Speaker E: And then here in the last step, we can choose our set of rules. Let's say, I don't know, we mint a new NFT. So we transfer to the address automatically. 1000 gold. That's it. Once this wizard is done, basically the purpose is to deploy a smart contract for each part of the flow. So collectibles token and rules and then you can start playing and deploying your game to wherever you want.
00:42:36.970 - 00:42:47.230, Speaker E: And it's like made so easily. So that was my idea. Of course I'm available for all questions and thank you guys for listening.
00:42:49.090 - 00:42:53.170, Speaker A: Pretty cool. We got four minutes for questions and I'll remind you at 1 minute.
00:42:54.470 - 00:42:55.220, Speaker E: Hi.
00:42:57.190 - 00:43:10.178, Speaker D: Man, that was super cool. How did you come up with the motivation behind this? What were you thinking? Because when I look at this, the first thing that comes to my mind is like Dungeons and Dragons, I would love to have this. And Sunday nights. Me and the homies.
00:43:10.354 - 00:43:58.200, Speaker E: Yeah, exactly. So that's an awesome question. Basically you're totally right. I'm building this platform so I can build a game that I personally want to build. And I thought if I'm building this game, why not building some layer on top of it? That would basically be the factory for other games like this. So I have an idea of taking all the living people in Wikipedia and do some game out of it with some conditions, like stuff that would be taken from Oracles as well. Like if some external event happens in the real life, then it can have consequences also in the game.
00:43:58.200 - 00:44:14.700, Speaker E: That's an idea that I didn't choose to show in the hackathon because it's not defined yet 100%. So I prefer to show this layer of how to build games like this.
00:44:15.790 - 00:44:17.180, Speaker D: That's super cool.
00:44:18.990 - 00:44:39.140, Speaker A: Yeah. David. Good job. I think it's really interesting. So you've now built this wizard for NFTs and ERC 20s. What would the next step be? Do you want these games to start interacting with each other or do you want to instead blow out the sort of individual game kind of maker aspect of it? What do you kind of envision this thing going?
00:44:40.230 - 00:45:33.780, Speaker E: So I don't think I would want to interact between games. I think the purpose of this wizard is basically to enable some people with great imagination and I'm sure there's a lot of people who have billion ideas of games interacting on the blockchain with NFTs and tokens. So the purpose is simply to enable them to do that without touching the code, without writing solidity contracts and simply using this. Potentially I would monetize it by adding some token that will be for the use of the website, but I'm not sure. Maybe I will just keep it open source, I don't know. We'll see.
00:45:34.950 - 00:45:51.260, Speaker A: Be careful about adding a token, because once you do, then you're like, locked into having that token. You know what I mean? Be careful about that. No, this is really cool. So you plan on further developing this and having this in production and everything?
00:45:51.790 - 00:46:11.630, Speaker E: Yeah, there's still a lot of stuff to mean. The contracts are not generated from A to Z. There's a lot of work yet, so I plan not continue working on this. I showed you only the UI, but all the back end is not done yet. Totally.
00:46:13.250 - 00:46:16.174, Speaker A: Did we watch something that's entirely fake or is there a smart contract?
00:46:16.222 - 00:46:38.060, Speaker E: No, it's not fake. It's not fake. There is some stuff, but it's not done. Like all the third steps with the rules. I think there is some complex stuff on this side, like further than only Mint. When you mint an NFT, getting some ERC token, I want to enable different kind of rules. And that's not yet.
00:46:38.060 - 00:46:42.220, Speaker E: I didn't program it yet. I didn't have the time.
00:46:44.110 - 00:47:00.740, Speaker D: Whose help do you need in order to take it to the next level? Like, say this is now an open source wrapper or open source platform to just build lots of games. Who do you need to make this something that we all kind of engage with?
00:47:02.150 - 00:47:20.246, Speaker E: I think I need basically more time and more resources. I'm not sure yet. I don't think I could answer you with an exact thing that was missing. I will think about it if you want and get back to you.
00:47:20.428 - 00:47:21.942, Speaker D: Yeah, that'd be awesome.
00:47:22.076 - 00:47:26.262, Speaker A: All right, that's our four minutes. Thank you so much, David. It's a very cool project.
00:47:26.396 - 00:47:28.040, Speaker E: Thanks, man. Bye bye.
00:47:28.490 - 00:47:35.350, Speaker A: The next team will be mainstream crypto. You could share your video and share your audio.
00:47:51.970 - 00:48:27.826, Speaker I: Hi. I'm Viraj anjan for ETH online hackathon. I worked on mainstream crypto. What is the purpose? The purpose is to make crypto mainstream by improving user experience and abstracting out complex terms. I want to create useful products for daily use. What are the features? It will include fiat earnrum for crypto dollars that is USDC. You can easily send, receive, or stream crypto dollars that is USDC using mainstream crypto.
00:48:27.826 - 00:49:03.222, Speaker I: Sending or receiving USDC does not require ETH since it uses Metatransactions. How it works metatransactions is powered using Biconomy API. It uses transfer with authorization for sending USDC and permit for stream USDC approval. USDC stream is powered using Sablier. Now, let me show a demo. Once you're logged in on the homepage, then you will be redirected to this UI. Over here you will see a buy button when you click on this.
00:49:03.222 - 00:49:31.460, Speaker I: Then you will be redirected to Fiat onramp where you can buy USDC. And then your account balance will increase. Now, since I already have balance, therefore I'll try to send one USDC to this address. I'll click on send. Here. It uses transfer authorization. So here I'll generate a signature, and then it will use Biconomy API to send the transaction using a relay.
00:49:31.460 - 00:50:55.550, Speaker I: And the thing to note is it won't be required for sending USDC. I successfully sent one USDC to the recipient without using ETH, using metatransactions. Similarly, I can create a Sablet stream where I stream the USDC to the recipient from the start time to the end time. And here for the USDC token approval, I'll use metatransactions again using the permit method. And finally, the recipient can then enter the stream ID and the amount to claim the stream amount later. What are the future use cases? One product that I want to build is streaming funds. This will be a venture fund powered by smart contracts.
00:50:55.550 - 00:51:26.880, Speaker I: Using a stream, multiple verified liquidity providers can stream USDC to fund manager. Here the idle funds will be deposited to a protocol to earn interest periodically. Stream funds can be claimed by fund manager. Liquidity provider can stop the stream anytime by paying penalty. All compliance and fund allocation will be recorded using smart contracts. This concludes the demo for mainstream crypto. Thanks.
00:51:28.850 - 00:51:53.320, Speaker A: All right, fabulous. We've got four minutes for questions and I'll warn you at 1 minute. Yeah, so I've got a question. This is great. Good job. So we've seen there have been other projects out there attempting to do something like this. How do we make it as simple as possible? There was one kind of a high profile, one UniLogin, which actually shut down because they just kind of ran into lots of problems.
00:51:53.320 - 00:52:03.186, Speaker A: In your opinion, what would you say is the hardest problem to solve? Making crypto payments easy for the mainstream.
00:52:03.378 - 00:52:44.870, Speaker I: So one thing would definitely be login and the other thing would be to solve for high value transaction cases where, say, you could charge a transaction fee for gasless transactions and creating similar products on the top of them. So my focus would be on high value transactions like, say, remittances, like, say, from abroad, you're sending it back to your country or say, for example, a venture fund on the top of this where you use a stream to where the investors use streams and a fund manager manager. So these are the high value transactions, so where you can definitely charge a fee if you make the experience more easy and if you improve the UX.
00:52:51.720 - 00:53:08.296, Speaker A: Thanks, Paraj. Yeah, that was interesting. So you've enabled essentially metatransactions, but it sounds like your intent is to have the cost of those covered based on them supplying that money to essentially a fund. Is that right?
00:53:08.478 - 00:53:09.208, Speaker I: Yeah.
00:53:09.374 - 00:53:18.092, Speaker A: Okay, that's interesting. So that's what you're getting at in terms of having sort of a minimum sort of transaction size to sort of justify the cost of the meta transaction, right?
00:53:18.146 - 00:53:18.652, Speaker I: Yeah.
00:53:18.786 - 00:53:29.490, Speaker A: Okay, interesting. And so do you have any plans for that hedge fund kind of portion of it, of that sort of, I guess, the investment vehicle or is that sort of external to your system?
00:53:30.900 - 00:53:49.960, Speaker I: I plan to write smart contracts for that and whoever wants those, they can partner with me for that feature. Like, say, if a fund manager wants to start. So consider something like a rolling fund similar to that, but in crypto.
00:53:53.820 - 00:53:58.730, Speaker A: Okay. So it's actually sent to a person who can then go and invest it.
00:53:59.180 - 00:54:11.950, Speaker I: Yeah. So basically there'll be a fund manager who uses platform, and he will then have his own investors and he'll do the verification, and then only KYC permitted users would be able to stream to him.
00:54:13.040 - 00:54:19.360, Speaker A: I see. Well, that's a complex problem. That's a lot of bureaucracy. I think if you're not doing it. Smart contract.
00:54:20.820 - 00:54:28.740, Speaker I: Yeah, it will use smart contracts, but definitely there will be some layer of, you know, because these will be high value transactions.
00:54:29.320 - 00:54:31.670, Speaker A: Okay, right. Makes sense.
00:54:33.880 - 00:54:39.960, Speaker D: How do you plan on doing the KYC? Are you planning on automate that, or do you plan on doing individual kind of like sign ons.
00:54:41.500 - 00:54:41.864, Speaker A: Right.
00:54:41.902 - 00:54:55.150, Speaker I: I'm considering different options. So one thing we could also consider Bloom if it's ready for production, if they have the features or maybe some other option. But I haven't gone in deep with that aspect as of now.
00:54:56.480 - 00:55:16.704, Speaker D: There's also, like, Everest. I think Everest has a tokenized KYC. And I think back in the maybe like one or two years ago, people working on TCR KYC. So there's application there, so you don't actually know. That would be interesting. Okay, very cool.
00:55:16.902 - 00:55:17.650, Speaker I: Yeah.
00:55:20.260 - 00:55:23.680, Speaker A: We got ten more seconds. Any final comments?
00:55:25.240 - 00:55:26.436, Speaker D: I think this is awesome.
00:55:26.538 - 00:55:28.640, Speaker A: Yeah, very cool. Thank you for the presentation.
00:55:28.800 - 00:55:29.508, Speaker I: Super.
00:55:29.674 - 00:55:41.800, Speaker A: Thank you so much. And the next team will be ipdb. I almost said IPFS, but that's not the name. Thank you. So let's start the presentation.
