00:00:07.690 - 00:00:42.422, Speaker A: Hello everyone, thanks for coming and it's my honor to be here and thanks for having me. I'm Andy, I'm an engineer from Quant and at Quantstamp we are like the security company. So today I will be talking about how constamp helps secure the past, present and future here and just share some stories, interesting stories we had from our experience. So who are we? We are a security company. We try to secure the future of Web Three. And as a security company we are very lucky. We can get involved with different kind of clients.
00:00:42.422 - 00:01:38.278, Speaker A: A lot of them are top projects within this industry and we are also a global team so we work remotely, like all of our coworkers are from different places around the world. I think it's probably the same for a lot of blockchain companies unless we're probably one of the earlier smart contract auditing firms and we're also trying to continuously improving ourselves and that's what we're trying to share today. So as always Them said, the best defense is a good offense. As a product developer or as a protocol company, the way you want to get your user is you must make sure your user can trust your product or your protocols. So you need to make sure your security is of the highest standard. So like user would be able to be comfortable interacting with your protocol or your product. And to do that, that's what we're trying to serve.
00:01:38.278 - 00:02:10.246, Speaker A: We provide audit services, that's our core service. So we usually do audit for smart contracts that include for instance like NFT DeFi and a lot of things. And today is an Ethereum conference so a lot of them would be in solidity. Aside from smart contract, we also help auditing since the layer one blockchain itself. For instance, these are some of the audit we did for the east .0 client. Also we also help wallet or key management scenes as well.
00:02:10.246 - 00:02:50.082, Speaker A: Aside from that, we not only do audits for Ethereum, we also help Solona, we did their system contract audit and also a lot of layer one or layer twos. Like we also help Boba to do their optimistic Rob audit as well. And we also usually treat our client as a friend. As a friend we help. So we try to increase our impact not just from auditing. There are times like client would come to us that they are not sure what's the best way to implement things and that's how we come to help because we were able to look at other protocols or how other people do. So we can for instance, help them figure out what's the best algorithm to do.
00:02:50.082 - 00:03:40.302, Speaker A: So there's my personal experience. One day we have a client, they're trying to write a Staking smart contract. So as people probably know what Staking usually is like you provide your liquidity and then whenever there's a reward, you get sort of reward depending on your portions of liquidity. And at that time the client, when the call come to us, were immediately like, oh, this looks a bit weird because the way they're sharing the reward was like they run a for loop, they just run through all the stakers that's registered and they give them the reward. So it's like immediately we're like, oh, this would have some gas issue. And that's the time we're helping them, we're trying to help them like, oh, so we see a lot of other DeFi, how they use. It's like if people developing in DeFi, they know it's usually using like reward per share algorithm.
00:03:40.302 - 00:04:31.666, Speaker A: And that's why we share with them. We tell them like, hey, actually there's a blog telling how you do this algorithm and there's even sample codes. And the client eventually updated their algorithm and then we were able to finish our audit. Another interesting story is from like we have an optimist Rob clients. So not sure if you're familiar with layer two or not, but whenever you're breathing things from layer one to layer two or layer two to layer one, you have different kind of messages that have to be relayed from either from layer one to layer two or vice versa. However, usually the protocol team would help to do that, but it is super expensive, as you can imagine. All the transactions, I mean, they're layer two, but sometimes if they want to bridge things back to layer one, those messages or those transactions, they're helping you to relay back to layer one and they have to pay a gas fee for that.
00:04:31.666 - 00:05:24.834, Speaker A: So we are discussing how we can solve this and we also try to provide some potential solutions because I think currently there is no perfect answer for this yet. Yeah, so that's another interesting stories we had from we are helping out our friends and clients. So as a security firm, we're very lucky. We are able to look at so many different kind of things and we are able to get enough and also we have to keep ourselves alerted with different kind of hack or exploit during the period. And so we are able to learn a lot of things from the past. So one of the really epic things we had, we participated before was the MakerDAO Black Thursday. Not sure if anyone here was still in this industry in that time.
00:05:24.834 - 00:06:11.810, Speaker A: It was a few years ago. It was like, I think three years ago, 2020 March. So what happened at that day was there was a time, I think it was a bear market, but it started to get up and then all of a sudden in the day dropped around like 40% in the price. And that itself, it doesn't break things yet. But then the problem was, I think nowadays all the gas are super expensive if you are interacting with ethereum right now. But during that past years, the gas fee was actually pretty cheap, like five g way was like the normal and ten G way is already like, oh, that's expensive. I think nowadays, if you are interacting, it's like, oh, ten, that's freaking cheap.
00:06:11.810 - 00:07:04.100, Speaker A: So it was the opposite situation compared to now. So what happened that there was a price drop so fast on the market. So everybody is trying to either run away from exchange or they're trying to do whatever things they think is better for them to hedge the risk. So there's a lot of transaction happening on the Ethereum at that single day. So what happens? Like the gas price suddenly goes up from a very low level, and then when the price goes up, it start to break things that's off chain, which was like people wasn't imagining. So the first thing that started to have an issue was their Oracles. And Oracle was kind of like the backbone of the infrastructure of D Five, if people would know, because you need the Oracle to provide the price on chain, otherwise the smart contract on chain wouldn't know how to get those things.
00:07:04.100 - 00:07:54.866, Speaker A: So what happened at that time was like the gas price goes so far, the Oracle was not able to send their transactions to the chain to update their price. So their price keep saying like the old level. And then all of a sudden, when the Oracle transactions eventually get in, the price drops so fast, it start to break all the healthy threshold for the wait. So how Megada work is like they have a lot of collaterals and they use collaterals to mint their. So when it dropped their healthy threshold, those collateral would be sent into an auction for sale skills. Like you're lacking money, you need more money to cover your that's. So that's how it started, because Oracle price couldn't get in.
00:07:54.866 - 00:08:36.366, Speaker A: And then when they get in, boom. A lot of things just started to break. And once those auctions got into there, there's another thing started to break the same way because of the gas price. So, Record Dot did provide some software for the users to run and then so they can automatically beat those auctions to buy those collaterals when they're liquidated. But the problem is, those software also have the gas price issue. Let's set a gas limit that's not high enough for them to guess through these kind of situations. So those bidding transactions wouldn't pass through as well during auctions.
00:08:36.366 - 00:09:12.214, Speaker A: And until one attacker realized this. And so the only thing he did is he just increased his gas price and he do a very weird bid. He just buy an ease with zero die. And it started went through and a few attackers also realized this. And then all of them start to attack in this way because all the other people who's using the original Mechadot software, they just couldn't went through their bit. So only those bit they're just buying with zero Dai went through. And all the Ethereum from the mechadao collateral just been kind of stolen.
00:09:12.214 - 00:10:05.310, Speaker A: But although they're just following the protocol so that was what happened during the Maker Dow Black Thursday and it was around like, I think 8 million of loss for the protocol itself. It doesn't look that bad compared to a lot of current hacks, but it was a very huge one during that period of time. Specifically like it was before a DeFi summer or just around the DeFi summer. So to solve this eventually there's a community group called the Die Backstop Syndicate. They're trying to sort of come here and try to resolve this problem. So they come up with a solution which is they mint more maker tokens like their governance token. So they mint their governance token and to do auction for their governance token to try to compensate those collaterals.
00:10:05.310 - 00:10:47.734, Speaker A: However, just in case if that doesn't work, because they set a very huge limit, I think it was like 50K. Unless you're buying fifty k of those tokens, then you can't really participate. So in case those wouldn't work out into Imbo, like the retail users to participate in this kind of auctions, there's a group called Syndicate, and they provide a Syndicate contract. During that time, what Constant Help was like, they had this we joined this group of community people and then they have this contract, and we immediately audited it. So I think the hack was happening on the 24th, if I remember correctly. And then this contract was audited just one week in within a week. So it was a very fast reaction.
00:10:47.734 - 00:11:30.634, Speaker A: I mean, the things still happen, the hack is still like the loss is lost. But I think all the other process, especially this is from the community, it went through pretty fast. Compare. Yeah, so that was the first one to talk about and the second one, one of another historical event we used to help was like the Voltage finance. So we didn't really help directly on the Voltage finance hack. So this hack, it was a compound related hack. So I think if you have ever been developing solidity contract you would be know about reentrancy issues.
00:11:30.634 - 00:12:10.806, Speaker A: So this is a hack due to reentrancy. But the problem and how they did is like this is a voltage finance is a fork of the compound. But it was fine in compound because the compound never interact with, I would say like weird ERC 20 tokens because there are some kind of ERC, I mean, they're not really ERC 20. They are following ERC, probably another protocol. But then they have a hookback functions, so whenever they are receiving the tokens or they are sending the tokens. So those kind of protocols allows the tokens to be reentrant during two other protocols. But then in the compound they have a governance process.
00:12:10.806 - 00:13:19.180, Speaker A: So they do a due diligence for all the integrated tokens to put on their pools where a lot of fork wouldn't do the same, they would probably fork the code and then they just put it and they just started run it. So that was the main issue here. So this team, they fork the compound code but they didn't follow or they might not know like they actually have other security operational process to help mitigate some of their risk. So without knowing that they come up with this kind of hack because they allows integration with those kind of more unstandard tokens. In this case, what we helped was we had a lot of our clients that's working on compound fork as well. So when we realized this, I think during that period there are more than this, I think there are another few hacks with the same issue. So we immediately alerted the people or the teams where we know they're using the compound fork as well and we helped at least two of them to avoid this problem from happening on their protocol, although another probably searching was fine.
00:13:19.180 - 00:15:08.198, Speaker A: So that was how we sort of help out on our past clients and how some of the past exploit and we try to learn from them. However, we're living in the prison world and as a security firm we have to continuously improve ourselves to be able to catch up with the newest things and to catch up with the newest hack because they always come up with new ways to attack. So to do this within our company we are doing a monthly heck roundup. So we have engineers every month we actually will try to look at what happened during the past month, how many dollars were lost and we try to understand and learn those things, how those hack happens and how can we prevent it from happening again. So one very interesting one is like deforce, it is again reentrancy attack but this time a little different is a View reentrancy attack. So a typical reentrancy attack you have a state change and before you finish in all the transactions you go back to the function again, that's how you start the attackion but in here the View reentrancy attack usually a view function is solidity, you won't be able to mutate the state. So what it does is it's actually calling another function that would change the result of the view function and then when you're integrating with this protocol, if you're calling the view function you'll get a round value and that's how they attack it and usually it happens for those functions that's providing the price for liquidity pool tokens.
00:15:08.198 - 00:16:18.634, Speaker A: So for instance, if you are integrating with Curve and you want to know how the Curve LP tokens price would be, you might call one of their functions to get the price of LP token. But these functions could be gamed in their reentrancy way because as you can imagine how you would calculate the LP price, it will be like you have a pool with two tokens. So you'll be like how many tokens of token A is in the pool and how many tokens of token B is in the pool and times their market price divided by the total balance or total supply of your LP tokens. That's how you will calculate how each LP token would have its own value or what the price it is. And during the reentrancy, for instance, if you are, let's say, withdrawing the liquidity, then when you're withdrawing liquidity, first you will burn the LP token because you are sending the LP token back to trying to get your original token from the pool. So you will burn the LP token. This part is probably fine, it's probably hard to reentrance but then whenever they're sending back the original tokens, then this part could potentially trigger the reentrancy.
00:16:18.634 - 00:16:45.020, Speaker A: When they send back, they can trigger the reentrancy. Then in this part you have three variables. One is like the token a token B and an LP token. The token B is still not changed yet. So you will have a round formula in here if it's reentrance and you can reentrance the integrated protocol where it would get a round value. So you will be calculating the round value of your LP token. Then everything could be wrong depending on how you integrate it with it.
00:16:45.020 - 00:17:58.000, Speaker A: So that's one very interesting attack that we've seen. Although this specific vulnerability has probably been announced around a year on curve but depending on the protocol they might not be aware of it. Another very interesting takeaway we get from this kind of monthly hack run up is we realize sometimes the hacker or the attacker might not have an exit plan. So they are very smart, they come up with a plan to attack you but they didn't come up with a plan. How do they withdraw those money out to real life? So I think one time we see a hack and the hacker are actually using their own ENS that's probably linked to their Twitter account. I think after two or three days the guy was arrested after that just because he didn't really do too much effort on that part. And also a lot of tokens like USDT, they can immediately blacklist your address if you didn't try to mix it up to another address fast enough.
00:17:58.000 - 00:18:47.470, Speaker A: So that's another interesting takeaway we get from our monthly hack roundup. Beside of that we also have restore retreat which in Japanese we kind of call it like shugil. So we try to log ourselves for a week in probably Yung. I mean, in real life it's been hotel. It wouldn't have really been in the temple. But we try to log ourselves in a hotel and for that way we're just discussing about, for instance, what some potential hacks for some kind of new ecosystems or for new kinds of architectures. What are some of the weakness? Or sometimes we just discuss what are some new tools? So for instance, I think for next one we'll probably be discussing about how we can use trade GBT to do our audit potentially.
00:18:47.470 - 00:19:50.238, Speaker A: So we gave a lot of generate a lot of our talks or our papers from this. And so for instance we had last years, for the last two years we discussed about what kind of potential hacks could be happened on bridges because actually a lot of bridges nowadays are still pretty centralized. Not sure if people are aware of this and even not centralized they're still like how bridge handles reorg. Usually they didn't really handle it very well. So we realized this after we do the research. Another thing last year we did was we're reviewing all the rob systems and usually people when they come to rob they'll think oh, it's a layer two, it should be very decentralized. But then because of their sequencer are usually still nowadays I think it's improving but it's still centralized sequencer and they don't have a very decentralized way for them to exit from the layer two if there indeed have some issue for the sequencer.
00:19:50.238 - 00:20:42.930, Speaker A: So that was another research we were trying to do and then we had also have a short paper for that as well. So these are the things we do try to keep ourselves up to date. Aside from that, usually when people come to us you feel like we are third party, we are a bit farther distant away from you guys. But there are times we try to actually be more integrated to your protocols. For instance like in Claddin, which is a blockchain itself, not sure if people know that. I think it's from Korea so it's probably more popular there and we actually try to stake and try to join their governance. So we try to be part of them and we also run our own validation nodes for them to secure the network and this help us as well.
00:20:42.930 - 00:21:45.368, Speaker A: So we learn more knowledge and that's how we can get more deals and get more deals we learn more knowledge and we can use it as a good cycle to improve ourselves. So as our missions is to secure the future of web3 so we not only try to do those things, we also help train new talents because in the future it will be a new generation that's working on the blockchain space or even the AI with blockchain space perhaps. So we have engineering helping this for instance before we work with the DeFi talents. I think it's a program that's trying to train new engineers working on DeFi platform. So we have a biweekly call with them trying to share some of our knowledge and try to share some of potential career paths with them. We also have an engineer currently teaching in a university in Taiwan. I'm not sure it's a blockchain or D five course but he have a course there.
00:21:45.368 - 00:22:21.860, Speaker A: It's a four semester course and I look at their agenda. It's pretty deep. I think it's from 101 blockchain 101 to all the way to very complex device contracts. Yeah, that's how we are trying to help in this industry and so far our product has or our service has been helping to secure before launch. That's why we do audit so we help to ensure your quality before you're deploying your contract. Although, like a lot of clients deploy their contract and then after a while they come to us. That's another story.
00:22:21.860 - 00:23:28.270, Speaker A: But usually our security, we usually help before you deploy, but we are also trying to see how can we actually continuously helping our people to help secure them further on? Because it's an ongoing game. It's not things that you finish after deployment. So we have a subsidiary called trendproof and they're trying to provide sort of like a guarantee, like an Ebol care. So whenever you have an audit and we are happy with your quality, then we can potentially give you this kind of guarantee, which in the future, if some exploit does happen and we didn't catch it during our audit, then we will be able to refund you into a certain degree. And also we will provide a continuous monitoring service that's where we would be able to alert them, like, hey, I think this is weird. You probably want to take action to pause your contract or to do certain actions within probably like an hour to try to mitigate the loss of your exploit. That's what we are trying to do in the future and continuously improving this.
00:23:28.270 - 00:24:20.300, Speaker A: So that's pretty much it. Thank you everyone. Any questions? What's the name? Oh, it was called DeFi Talents but I think it was a bit weird like a bit years ago. Yeah, we had another course but that's on the university, inside the university so it's probably not online. Yeah, I think not yet. I tried, it will provide certain insight, but it's still a lot. First, it has a lot of false positive and it sometimes doesn't really fully understand it as well.
00:24:20.300 - 00:25:48.480, Speaker A: So I wouldn't say yes right now, but given the current status, I think yeah, probably after years it will and we need to figure out how we're going to survive. What in your mind is the most ingenious hack you've seen? Oh, that's a good question. The most ingenious one? Well so the one of the recent one, it's not really ingenious I think. It's not like they use certain things that's super brilliant but one hack I used to see, like they just find one line of block. I mean a lot of hack is like that actually so I found that that's very interesting because they have to spend so many effort on actually looking their contracts and they don't even know which one would have issue. Right. So I probably don't want to name the exploit itself but then I use the C one and then it's really just one issue that's because of the mapping.
00:25:48.480 - 00:26:41.764, Speaker A: When you're mapping, then usually you wouldn't map, like, a zero key, right? You wouldn't have, like, a dictionary, zero equals blah, blah, blah. But somehow during the deployment, during your previous deployment, they accidentally deployed the value to that mapping slot, although in the later deployment, they never used that, so people forgot about it. But then the hacker realized that and then used that as a hack to get a fee. Yeah, so that one was very interesting, and then even worse, was like, everybody can copy the hack. So at that time, there's a transaction there, and then people just copy past their transaction, probably change their address, and they just boom. And the next hack happened, and boom, boom, boom. So originally it was one attacker, and then it becomes a public attack on a wild.
00:26:41.764 - 00:26:54.610, Speaker A: Yeah, cool. I guess if no more questions, then that's it. Thanks, everyone. Bye.
