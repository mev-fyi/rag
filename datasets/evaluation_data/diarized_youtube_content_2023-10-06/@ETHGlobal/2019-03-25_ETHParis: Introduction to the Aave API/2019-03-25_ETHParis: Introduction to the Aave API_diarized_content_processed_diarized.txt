00:00:01.050 - 00:00:56.110, Speaker A: All right. Hey guys, my name is Tani, I'm from Ave and we'll be presenting here with Andre, one of our software engineers. Basically today we're going to talk about how to build decentralized finance and well, decentralized lending. And we'll tell a couple of words what is Ave? So basically, Ave is kind of lending marketplace based on smart contracts called Eatlend. And basically we started to build at lend a couple of years ago and on 2017 we went to Mainet with the product. So basically it's crypto backed loans marketplace built on smart contracts. So basically we have two sided marketplace where we connect borrowers and lenders with smart contracts so they can make secure transactions.
00:00:56.110 - 00:02:02.862, Speaker A: And basically users can pledge over 100 different kinds of collaterals including also ERC, 20 Tokens, Ethereum. And recently we added BTC interoperability. So you can also pledge BTC to borrow, for example, die, Ethereum or other assets. And the marketplace pretty much looks like this. So we have borrowers, for example, who are pledging different kinds of assets and borrowing funds. So we have here for example, a user who borrowed die against zero x tokens and we have for example here a user who borrowed against Civic tokens and he borrowed Ethereum fiat Pegged, well, USD pegged Ethereum which basically was our solution before the stablecoins. And then we have for example, in the lower left corner a user pledging BTC to borrow die.
00:02:02.862 - 00:02:53.358, Speaker A: So the idea kind of is that borrowers who doesn't want to sell their assets could actually get liquidity without selling them. So it's kind of like a tool, for example for trading going long or short or for example to get cash flow liquidity. Yeah. So we recently launched another interesting product which is called Avapay. It's not that decentralized. Basically the idea was to create a gateway for ETLand. So ETLand is basically a decentralized marketplace and the issue is that once you borrow, let's say Dai or Ethereum, you basically have to find your way to convert those funds and spend them in your, for example, real life scenarios, paying bills or buying holidays and so forth.
00:02:53.358 - 00:04:02.166, Speaker A: So kind of like in ATLANT, we are a bit different because we have vertical approach. So we try to build products directly to consumers and thinking like how we can improve the user experience. So basically we came up with Avapay where you can convert funds directly to fiat funds such as for example, Euro and USD and pounds. So it kind of works this way that you insert amount that you want to basically send to yourself or you can, for example, use this facility to pay for example, bills with cryptocurrency. So we have different cryptos you can use for example, Ethereum, Lend, BTC and Dive and basically just insert the amount the person you want to send the bank account number. So now you see my details. So if someone wants to test, you can always send something to me and I will try to send it back and then we show you basically how much Dai you need to deposit to us and we initiate the transaction once we get enough confirmations.
00:04:02.166 - 00:04:53.740, Speaker A: So the rate here is basically Euro to USD and for example in Dai it costs roughly 0.5% to send USD or Euros. And today we're going to talk more about the Ave SDK which enables you the access to build things on top of the Atland protocol and create programmatically for example loans or borrow or just collect some interesting data. And for this presentation Andre will come here and basically do the technical part and explain you guys what you can actually do during this weekend and we present also a couple of things that other people are already doing here. Thanks.
00:04:56.110 - 00:05:44.220, Speaker B: Okay hello guys. Yeah, I will try to tell a little bit about our SDK like Danny told. How is it working? Yeah, that's the main point of our SDK. First of all we are introducing the Sland marketplace to our SDK. On our marketplace you can borrow and land and die ethereum pegged ethereum and land you can create loan offers. It means that you have some cryptocurrency to do. I just had some troubles with the server and I'm just a little bit in still.
00:05:44.220 - 00:06:49.690, Speaker B: Okay, if you have some crypto and you want to have some bonuses from it, you can place it in our marketplace and then we will find some borrower for you and he will get this money and pay you some interest and loan request. If you have some tokens for example but you don't want to sell them right now but you want to use it some way for example you want to pay bills or do something because you trust that these tokens will grow up later, then you create in the loan request placing your collateral, finding the lender for you. That works like that. Okay, when we create in the loan agreement, it's creating the smart contracts. Smart contract and this smart contract has some states related with the loan lifecycle. First of all let's in it and this time we are specifying the parameters of the smart contracts like duration, loan amount and all that stuff. After that we are waiting for collateral.
00:06:49.690 - 00:08:29.550, Speaker B: That means that our borrower should place collateral and when it's placed and the amount is correct we are moving to funding state and on this state we are waiting for funds from creditor and it can be one creditor. Or ten creditors it doesn't matter but when the all loan amount is funded we are going to waiting for payback state and then this time the loan going to our borrower and he can do whatever he want. Okay and after that on this state we are waiting for repayments from the borrower. After each repayment lender can withdraw this amount to his wallet or cannot do that, it depends on him and if repayment will be missed then he can withdraw the part of the collateral with the same amount as he should take. And when we receive in the last payback, we are finishing the loan, returning the collateral to the borrower and that's all the agreement is closed. If during the lifecycle the price of the collateral is going down and then collateral call can happen, it means that the liquidation price is the same like the loan amount, liquidation price, it's the price of the collateral plus liquidation fee not fee. Yeah, fee and interest of the borrower.
00:08:29.550 - 00:09:10.164, Speaker B: Okay. And defaulted state. It means when the borrower is not repaying, then the contract can go to this state. For start working with the marketplace. You should install our library and just create the instance of our class for getting the API secret key. We have documentation for it. You should just call our method with some data like email your password and you will get the access token and after that very important to check the marketplace metadata.
00:09:10.164 - 00:10:04.570, Speaker B: It's the information which collateral can be used, which medium of exchange can be used and duration range available on our marketplace and all stuff like that. And in our SDK we have some endpoints forget the data about the loans placed in our marketplace. You can get all loans, you can get just addresses, you can get just one loan or some loans related with some borrower or with some creditor. It's whatever you need. Also we will include maybe some more filters to make it. During this presentation I will tell about loan requests. Loan offers has more or less the same logic and more or less the same endpoints.
00:10:04.570 - 00:10:50.066, Speaker B: You can read about that later in the documentation. When you planning to create the new loan request, you should specify some parameters and first of all you should understand how much you can get with your collateral. You are making this API call with your collateral amount, what you want to place on our loan agreement type and the currency of the loan. And then you will get the maximum amount, what you can get with your collateral. And also after that you could try to make the loan request. You are specifying the medium of exchange currency. It's a currency of the loan.
00:10:50.066 - 00:12:11.450, Speaker B: You will get collateral amount, collateral type, the type, it's the currency of your collateral MPR. That's the monthly interest rate in a percentage and duration of the loan in month, each month in our system at 30 days because it's hard to manage it in the smart contract site. This month is 28, this is 31. Then we have like a constant 30 days is the month and after that you are calling our marketplace request create function and then you will get the plain web3 transaction object and after that you can expose it in any web3 provider. It can be MetaMask, could be some DAP, it doesn't matter because the logic can vary. That's why we return it just plain JSON object in most part of actions. Later we will need the refresh collateral price method because we might be sure that the data in our smart contracts is correct, the rates of the currencies and all this stuff and before doing some transactions you should check and if the collateral price is not updated, you should call this method.
00:12:11.450 - 00:13:47.068, Speaker B: Okay? And that's the example how to work with the place loan collateral you are checking. First, is collateral price updated? And if it's updated, that's fine, if not, you need to call the previous function and update the collateral price on the smart contract and if state is correct and collateral price updated, we should also check is borrower grant us permission to transfer the funds from his wallet to our smart contract. Because in case of ERC 20 tokens, we cannot indicate that the transaction happens. If we're transferring ethereum, then it's easy to know from a smart contract that it's placed already but if we are doing the ERC 20 transfer, we should make approval for our smart contract to do that. Okay? And if the borrower approved the possibility of making a transfer, then it's fine. And we can do that, because after this transaction, smart contract will try to move funds from the borrower to the smart contract. More or less the same logic in the fund alone.
00:13:47.068 - 00:15:43.560, Speaker B: It's the next one we placed the collateral. And we can also do that. We also should check everything and after that this function and with the pay installment also more or less the same, we should check approval and after that we can make the payback and if installment will be missed, then we can call the partial default. Like I told before, it means that the part of collateral will transfer to the lender and you should check that installment and missed and make this request and after that, if it was many lenders, each lender should also call the withdrawal partial default amount. No, we will transfer only exact amount with the repayment on this moment no, we have for example 200 ETH as the collateral and on this repayment, the borrower should repay only two Ath and then we will withdraw only two Ath from our collateral partial margin call. Yeah, because if for example borrower will not pay all time, then each month we will charge from him. But we will not transfer all collateral in one month because it will be unfair to the borrower because he will everything okay? And what's next on our API? Because at the moment it's not exposing all logic of the athlete.
00:15:43.560 - 00:16:24.948, Speaker B: For example, on Athland we already have the support of BTC and we are planning to add it to our API also soon. Also we're planning to do the notification system. On registration you will specify the endpoint for callback and if something interesting will happen, for example, collateral will be placed or repayment will be missed. Then we will call your API endpoint and tell you that you should do something with that and transfer this information to the borrower or creditor or whatever. Because in this case, you don't need to monitor all the time what happening. You so lazy. And nothing returns.
00:16:24.948 - 00:17:08.250, Speaker B: For our information and also we are planning to integrate the other pay for automatize the liquidation process. Because at the moment, if collateral call happening then we are just transferring the tokens to the lender. But for him it could be complicated to realize that he may sleep in this time and he will lose money and when we will integrate our pay it will be fully automatized and everyone will be in safe and also we will include in our SDK everything what we will do in software. We have a lot of plans about many things, it will be complex okay.
00:17:11.140 - 00:19:21.304, Speaker A: Thanks Andre Mia a couple of things like what you could basically build on the mean it's a fascinating thing because a couple of years ago there wasn't much things around for example decentralized finance. Now basically there's Etlin, there's MakerDAO, there's multiple things that you can actually do and one of the interesting things happening now is that the ecosystem is growing which basically means that you can use different kinds of things to create very interesting products. So one interesting stuff that we have been looking into is basically some sort of like money market fund so you could create a decentralized fund where you have a fund manager and other people can participate into this fund and have different kinds of parameters. For example for the interest rates for the loans, loan periods, loan to value ratios that your fund will accept different types of collaterals for example, do you accept certain ERC 20 collaterals that you consider that are worthwhile funding and worthwhile taking the risk? And of course what kind of type of loan currency is your fund basically lending out dai ethereum or what could be the interest there and of course when you're building on top of atland you could also think about the whole ecosystem. For example you can try to think how you could make this your fund to work with for example MakerDAO compound and other things that are available now on the ethereum protocol and of course you can do other interesting stuff. One of the interesting things I heard here in Paris and the whole week was this interesting project where a hacker is working on building basically interest rate swaps between MakerDAO and the ETLand. So in ETLand we have fixed rate interest and in MakerDAO CDPs you basically have variable interest.
00:19:21.304 - 00:20:52.468, Speaker A: So kind of a way to hedge that exposure and that's pretty interesting. Projects that I'm looking forward to see how it progresses. Then of course, you can do things, for example, listening events from gathering the data for some other use case or just creating some sort of bot to borrow funds, for example, for trading. So there's a lot of things you can come up with and we have some boundaries as well available. I think Jordan knows a bit more about them and yeah it's pretty fascinating stuff. So I really encourage to look upon the SDK, what's inside there and how it's different than others and basically what could be the use case or if you're building into some interesting project now how is there any benefits for example from lending or colorization? Yeah, one other thing quickly want to introduce is basically our idea of getting news contributions about decentralized finance. So currently there's a lot of product launches on decentralized finance, there is a lot of product updates out there and basically what we have felt for the last couple of years is that sometimes it's hard to get exposure for your product.
00:20:52.468 - 00:21:54.052, Speaker A: And secondly there's kind of like a missing place where you could read all the news about decentralized finance. So basically we created a open repository. So it's a open source collaborative way to publish your product launches and product updates or just some articles related to DeFi. So basically you create an issue and once a curator, so anyone can be a curator here you can apply and it's basically just editing proofreading, looking at the article is in good quality and basically will be published at D Fi. And the idea is that we have a place for decentralized finance related news without kind of like censorship. I mean, censorship. You can't post anything that is inappropriate.
00:21:54.052 - 00:23:16.800, Speaker A: But, I mean, whatever you're working on, no matter how small or big the project is, it should be able to be there and people should know about it. Because currently there are telegram groups where you can talk about decentralized finance, but kind of like, would be nice if people can search these things online as well. Yeah, so basically I think it's happy biddling time for everyone and if there is some questions you guys want to ask, we have some time for it. Igor, you look like you have a question. Sure, yeah, that's a good question. I think on the Oracles Andre can answer a bit more. But on the governance structure, basically what we are trying to look now is kind of like for the past we basically have just developed the product, the kind of governance has been on the side.
00:23:16.800 - 00:24:31.880, Speaker A: So what we are now focusing this year is basically looking different governance models and how we could actually put more community into the governance and we're looking definitely something similar that maker has. But one issue is that kind of like we want people to participate and that's a big challenge. Now for example when it comes to voting and how easy it is to vote on different things, one of course difference is that in ATLANT it's pretty open platform because you can create different kinds of loan request, interest rates. So it's basically a matching market. So we don't have for example, liquidity pools which arrange interest rates, but that's something that we are looking now in this year. So I think there's a lot of aspect on governance there and I think that's something where we're going to have lot of community involvement as well. And also we are looking in the governance management basically how we could use Aracon and to simplify the whole voting process and get more of the community to involve in ATLANT.
00:24:31.880 - 00:24:38.350, Speaker A: Yeah, and for the Oracles, I think probably Andre can say a couple of words.
00:24:39.440 - 00:24:53.250, Speaker B: Now we are using Oracle and the services and background of Oracle. We are using the Coin Gecko and providing from Coin Gecko to Oracle and from Oracle we are getting in our smart contract this data.
00:24:55.380 - 00:25:40.412, Speaker A: Yeah, and the interesting part is that because we have so many assets, I mean we are using roughly like 100 assets. So kind of getting prices is pretty difficult. So, for example, in the Usdth price, we can easily use the makers USD price feed. But for example, because we have so many assets, we chose that the user updates refreshes usually the collateral price, which is kind of like a bottleneck on the user experience. But getting, let's say, 100 assets and basically every five minutes will be really costly. So kind of that's one issue. But if there's more adoption, then I think those costs can be shared.
00:25:40.412 - 00:27:13.304, Speaker A: And of course, the price feeds is very difficult because if you look price sources like for example CoinMarketCap or CoinGecko or the exchanges, like what is the actual value or price discovery of a token and all the trading involved. Because one of the decisions that lenders are making when they're funding these loans, they're looking what is the aftermarket? Like how traded the token is. For example, if I get into this exposure, am I able to actually get out of it as well? And that's a difficult question because when we are looking at centralized exchanges, it's hard to tell what volume is real and what not. And it's still very difficult question and roughly it's because of the size of the market we have now. But that's something that we are working all the time and thinking like how we can firstly mitigate the risk failure points and how we can get actual real as realistic data as possible because it's not as easy as connecting to CoinMarketCap or CoinGecko. And I think guys from Oracle definitely knows these issues and it's kind of like what we are struggling as. So that's very interesting that we're following now.
00:27:13.304 - 00:27:24.610, Speaker A: And there's interesting initiatives on Eyes Feed. So yeah, thank you.
00:27:28.180 - 00:27:28.590, Speaker B: You know.
