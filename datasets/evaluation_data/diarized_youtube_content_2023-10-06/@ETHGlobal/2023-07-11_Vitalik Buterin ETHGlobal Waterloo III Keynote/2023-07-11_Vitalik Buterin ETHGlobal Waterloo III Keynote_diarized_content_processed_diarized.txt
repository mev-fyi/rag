00:00:07.530 - 00:00:18.622, Speaker A: When we looked at all the information about who's coming here and what they're excited about, we realized that there's a lot of you who are just getting into this space and wanted to understand.
00:00:18.676 - 00:00:19.838, Speaker B: What could be possible.
00:00:20.004 - 00:00:27.366, Speaker A: So to make sense of all of that, we decided to do a really interesting talk. Really going to spend is I'm going to invite Vitalik here on stage to.
00:00:27.388 - 00:00:28.630, Speaker B: Tell you about what are the possible.
00:00:28.700 - 00:00:30.054, Speaker A: Ideas that you can think of?
00:00:30.172 - 00:00:31.720, Speaker B: Not just yet. There you go.
00:00:32.890 - 00:00:43.526, Speaker A: We're going to focus the next 30 minutes on things that you should think about building in the space where we see there's a lot of progress that could be made, a lot of things that could be made better and things that are just not getting the attention.
00:00:43.558 - 00:00:44.650, Speaker B: That we'd like to get.
00:00:44.800 - 00:00:54.282, Speaker A: And all of that should help you get some ideas for your hackathon projects and hopefully even other bigger projects that can turn into more than just side projects.
00:00:54.346 - 00:01:56.660, Speaker B: So without further ado, please welcome Vitalik on stage. Okay, great. Hello everyone. So today I wanted to talk about some things that I've talked about in various contexts over the last year or so. But basically the focus is on what kinds of things really, does it make sense to start working on right now and what kinds of things are actually really accessible to people that are just getting into the space right now. So the big picture to me is that Ethereum is two decades. Basically the last ten years are solving problems in theory, right? So a lot of discussion around switching from proof of work to proof of stake, a lot of discussion around improving scalability, a lot of discussion around solving privacy problems, around improving security, various other things.
00:01:56.660 - 00:03:21.046, Speaker B: But it was still fairly theoretical. The number of people actually using the blockchain is fairly small for most of this period, but then the next decade needs to be much more of a focus on solving very concrete problems that people in the real world have. So there are many, very many users of Ethereum, crypto, all of these things already today, right? But I think the way that it looks to me is that in many places very few people have found a use for Ethereum or other blockchains aside from trading digital monkeys. In many places very many people have found uses for it, but they're largely using centralized exchanges. So just telling a story, this picture minus the anonymous masks to protect other people's privacy is from my trip to Argentina back in 2021. And I remember visiting and I remember just seeing the really huge ethereum community, crypto community, more general developer community, just the sheer number of people using ETH, using all kinds of cryptocurrencies to save money, which is actually a really big need for them because of the currency situation in the country and even people just accepting it for payments.
00:03:21.078 - 00:03:21.286, Speaker C: Right.
00:03:21.328 - 00:04:06.710, Speaker B: Like I just randomly walked into a coffee shop, and the guy just happens to know a lot of things about cryptocurrency. He happens to have a binance wallet. And I asked, hey, can we pay with ETH? And he said, sure. So, huge amounts of adoption. But there's a catch. And the catch is that even though there's a huge amount of crypto adoption, a lot of it is like actually binance wallet adoption, right? So basically, lots of people who are using both Ethereum and other crypto things, they're actually using it through a centralized intermediary. Now, why are they doing this? Right, so, centralized exchanges are cheap.
00:04:06.710 - 00:04:52.060, Speaker B: Meaning if you want to just send someone money inside one of a centralized system, you have zero fees. It's convenient. In particular, payments are instant. Binance to binance transfer is instant. When I paid out of an Ethereum wallet, the transaction took, I think, something like two to five minutes to confirm. And now this is actually something where we have made some improvements, right? So who here has used Ethereum before 2020? Kohir has used Ethereum in the last six months. Kohira Ruak possibly has noticed how it has become somehow much easier to get transactions reliably confirmed quickly.
00:04:52.060 - 00:06:05.298, Speaker B: This has happened because of two protocol changes. One of them is something called EIP 1559, which is this very kind of weird economic technocratic thing that has a lot of interesting math behind it. But the basic thing that it does is it changes the fee market so that instead of requiring a fixed amount of transactions in every block, the blocks are allowed to be bigger and smaller and kind of adjust to very short term changes in demand, right? And instead of keeping a constant block size, the protocol keeps a constant transaction fee, or what's called the base fee within a block. And that adjusts over time, right? So because of this, instead of a transaction taking some random amount of time that's often minutes, a transaction can be included in about one or two blocks. And then what the merge did is, as a weird byproduct of statistics and the difference between plus OD distributions getting a block every 12 seconds, it turns out that the average amount of time you have to wait until your transaction gets included into a block is divided by two. It's only half as much. So if everyone here is in math proof assignment, prove it.
00:06:05.298 - 00:06:37.514, Speaker B: Due Date 72 hours from now. Go. Ethereum has made a lot of strides on this question already, actually. But when I was in Argentina at the time, the merge had not yet happened. EP 1559 had happened, but the wallet I was using did not yet support it. And now that wallet actually does support it, right? So such wise exchanges are cheap, convenient, protect the user from mistakes. If you screw up, you can go talk to their customer service, maybe KYC again, and you'll get your money back.
00:06:37.514 - 00:07:08.118, Speaker B: With Ethereum wallets, that's something that at least with the status quo, you're not really able to do. You have your twelve word seed phrase, and if you lose your twelve word seed phrase, you're screwed. If someone else takes a photo of your twelve word seed phrase, congrats, they have all your money. So centralized exchanges don't really yet have these issues. Now, there's a darker side to centralized exchanges, right? Kuhir recognizes some of the people in this photo. Yes. Right.
00:07:08.118 - 00:07:49.022, Speaker B: So centralized exchanges are also sometimes not very trustworthy. They do stuff, and sometimes they decide that they're better at having fun with your money than you are. Okay? So how do basically this is a space that is all about decentralization. What is decentralization? We are building systems where you cannot be rug pulled.
00:07:49.086 - 00:07:49.650, Speaker C: Right?
00:07:49.800 - 00:08:26.430, Speaker B: Now, there's many kinds of being rug pulled. There is having all of your money stolen from you. There is being locked out of a PayPal account and them holding your money for 180 days with no recourse. There is being locked out of a social media platform with no recourse. There's all kinds of rug pulling that happens, right? And in a decent, decentralized system, you're supposed to have programmatic rules that are transparent that kind of describe the processes under which things happen in whatever application you're participating in.
00:08:26.500 - 00:08:27.070, Speaker C: Right.
00:08:27.220 - 00:09:03.754, Speaker B: And it's a nice dream, and it's good to try to put more control and power back in the hands of users and communities as opposed to these faraway centralized actors. But there are challenges, right? I think some of these challenges are kind of fundamental philosophical challenges. But some of these challenges, I think people don't appreciate the extents to which they are technical problems that can be technically solved. They just haven't been properly technically solved yet.
00:09:03.872 - 00:09:04.394, Speaker C: Right.
00:09:04.512 - 00:10:16.190, Speaker B: So one is scalability and fees, right? So when I paid at that coffee shop in Buenos Aires, the transaction fee was like something around $3, right? If it was a finance to finance transfer, it would be $0. Now, back in 2013, I remember there was this movement that was really trying hard to get people to accept Bitcoin as a consumer merchant payment mechanism just for people to pay in restaurants, pay in coffee shops. In Berlin, there was even this district at Kreitzburg where people made this movement to convince a huge amount of restaurants in one region to start accepting Bitcoin. This was called the Bitcoin keats. I actually went to a couple of these places back in the day. There was a burger place, there was this nice vegan restaurant, there were a couple of other ones, and there was this really lovely movement, but then that died down over time. Why did it die down? Basically, it's just transaction fees, right? Back in 2013, the main pitch for why you're supposed to accept Bitcoin instead of accepting credit cards is like well, credit cards charge like 2.9%
00:10:16.190 - 00:10:32.614, Speaker B: on every transaction, right? PayPal charges 2.9% on every transaction for international payments PayPal actually charges 2.9% plus 3.9% plus more on foreign exchange fees. It might have changed since then. I actually don't know.
00:10:32.652 - 00:10:32.806, Speaker C: Right.
00:10:32.828 - 00:10:42.794, Speaker B: But this was like the pitch back then, and it was true back then. And the problem is that, well, the whole fees being low thing basically stopped being true.
00:10:42.912 - 00:10:43.580, Speaker C: Right.
00:10:46.430 - 00:10:47.606, Speaker B: That's a deal breaker.
00:10:47.638 - 00:10:47.834, Speaker C: Right.
00:10:47.872 - 00:11:43.106, Speaker B: Like, lots of applications that are totally fine and that make a huge amount of sense if the transaction fee is negligible, stop being true if the transaction fee is $8.43. Jorge is interested in using alternatives to Twitter. Twitters. Jorge would be interested in using alternatives to Twitter if registering your accounts on that alternative cost $8.43. $69.12. $384.41. Okay, so we got some true believers, which is good, right? But the point is that these are kind of a boring topic, but they are a killer of things that otherwise would be extremely promising.
00:11:43.106 - 00:12:29.766, Speaker B: And I think the corollary of that, which is really powerful, is that people should not assume a category of applications has failed just because it has failed in an environment where setting anything up cost $8.31. Problem number three privacy. Who here just loves the idea of broadcasting to all their friends and future friends and family and the government and every company exactly. Who they're making what kinds of payments to? Okay, we got some true believers, which is good, but privacy is valuable, right? So the other challenge is kind of making all of these happen while keeping ethereum, recognizably ethereum.
00:12:29.878 - 00:12:30.154, Speaker C: Right.
00:12:30.192 - 00:13:09.030, Speaker B: So what I mean by this is that there's lots of different groups in Ethereum that are building lots of different stuff. And that's good. That's beautiful. We have an open ecosystem. We have lots of groups operating independently, and it's possible for new people to come in and start building independently without asking for permission. You don't have to apply for an API key. But one of the challenges is that there is the possibility that things end up branching off into totally separate systems that don't really intersect with each other and that look very different and that have very different properties from what already exists.
00:13:09.110 - 00:13:09.546, Speaker C: Right?
00:13:09.648 - 00:13:44.110, Speaker B: So good scaling is being able to do what you do now but paying ten or 100 times lower transaction fees. Bad scaling is when you have some totally new thing and people tell you, TADA, this is ethereum, this scales. But it just looks like a totally different thing. And if your friends turn out to have used a different way of scaling ethereum, you're not compatible with him, and there's no way to move between these things, and it's not clear what the properties of these things are, and it just turns into a massive confusion.
00:13:44.190 - 00:13:44.674, Speaker C: Right.
00:13:44.792 - 00:15:26.494, Speaker B: So there's also a challenge here, which is more like a coordination challenge, right? Which is that actually making sure that all of these different pieces, the scalability pieces, the account security pieces, the privacy pieces, actually work together with each other, right? And this is difficult, right? But this is something that I think we can start moving towards. So one concrete example. Who here wants to build a wallet? Wallets are fun. So in the previous decade of Ethereum, it was enough for a wallet to just support sending people ETH, showing your QR code so other people could send you ETH and possibly logging into a mini web browser so you could go access some depths, right? In the future, this is not going to be enough for a wallet, right? A wallet that actually makes sense in a post scalability world is a wallet that needs to support the Ethereum layer one and also at least all of the major layer two protocols that are being built on top of Ethereum cross layer two. Transfers need to be built in. If I have all of my money on optimism and you have an account or you want your money on Arbitrum, then I should be able to click Send and that should automatically route my money through some kind of cross layer two exchange protocol so that it gets to you. And this is something that should happen automatically.
00:15:26.494 - 00:16:29.990, Speaker B: This is something that you should not have to go and personally fumble yourself and figure out what Hop Exchange is and how to use it. It should all be behavior that just happens as part of the Send button, a way for recipients to express how he wants to get paid. This is another thing, right? It's looking like addresses are not going to be enough, right? An address, just 20 bytes, but your address. Where do you want to be paid on optimism? Do you want to be paid on Oligon? Or maybe you're happy being paid on Ezeksig and Kakarot and Polygon, but someone else has coins on Kakarot and scroll and Arbitram and it turns out that Polygon is a new section and then you just make a direct transfer there. This is the sort of stuff that you just need to do, right? And this is the sort of stuff that TradFi does a lot under the hood. Who here has used a credit card internationally? There's a lot of these under the hood cross exchange protocols going on and realistically cross layer two, ethereum has to do the same sort of stuff.
00:16:30.060 - 00:16:30.726, Speaker C: Right?
00:16:30.908 - 00:17:38.506, Speaker B: Now, the nice thing about this kind of project is that you don't have to invent your own cryptography to do it, right. You don't have to build your own big thing from scratch. All you have to do is just hook together a couple of protocols that already exist, right? You just have to hook together existing tools for accessing optimism, existing tools for accessing a Cksync and you want to hook in Hop protocol. Possibly a couple of other routing protocols have the possibility of adding more routing protocols in the future and have a send button that kind of puts a bunch of actually routes things correctly, possibly create your own format for how to provide the information of where you want to get paid. And then if people like it, then you go and two months later you might end up making your own ERC. So it's actually, I think, within range for a hackathon team, but this type of stuff is the sort of thing that I think we need more of. Another wallet challenge social recovery and multisig.
00:17:38.506 - 00:17:56.850, Speaker B: So if you just go to my blog, Vitalix CA, and if you just control F for social recovery, you can find this incredibly long post I wrote on the topic. But basically the kind of summary of this idea is that existing ways of doing wallets are just incredibly insecure.
00:17:56.930 - 00:17:57.318, Speaker C: Right?
00:17:57.404 - 00:18:11.590, Speaker B: So most wallets are what's called EOAS, externally owned accounts. They're accounts that are controlled by a private key, right. The reason they're called externally owned is because other types of accounts are controlled by a piece of code, which is part of ethereum.
00:18:11.670 - 00:18:12.058, Speaker C: Right.
00:18:12.144 - 00:18:29.358, Speaker B: So the problem with EOS is they're controlled by a single key and if you lose that key, you're screwed. If someone else steals that key, you're screwed. If you make multiple backups of your key to reduce the chance that you're going to lose the key, that increases the chance that someone's going to steal you.
00:18:29.524 - 00:18:30.240, Speaker C: Right.
00:18:34.230 - 00:18:39.970, Speaker B: It's actually not a very good design for a huge number of people.
00:18:40.040 - 00:18:40.370, Speaker C: Right.
00:18:40.440 - 00:19:21.578, Speaker B: I mean, honestly, it's not even sufficient for me, right? Like, I keep my money in multisigs. So what is a multi SIG? It's a wallet where there's multiple keys and you need some portion of the keys to move the money. Social recovery is kind of a closely related concept. Basically, you have a wallet that has one key, but there is a set of backup keys that are going to be owned by other people, and that set of backup keys has the ability to change the main key if you lose it. So social recovery protects only the loss, not against theft. Multisigate protects against the loss and theft. The advantage of social recovery is just because you only need one key to sign transactions, normally it's easier.
00:19:21.674 - 00:19:21.934, Speaker C: Right.
00:19:21.972 - 00:19:42.418, Speaker B: So social recovery is good for a hot wallet and multisig is good for a cold wallet, right? Like multisig is great for storing your life savings, for example. But you don't want to store your life savings in something where the stuff that's needed to just drain all of your money away sits on one device.
00:19:42.514 - 00:19:42.822, Speaker C: Right?
00:19:42.876 - 00:21:17.910, Speaker B: So making a wallet that's actually good at supporting this and then privacy. So privacy is also an important challenge and don't want to get into this in detail, but there's a lot of really fascinating privacy technology that's really worth worrying. So identity, right? So ENS on layer two is happening, right? So Ensure here has a dot name, yay. So it's like a big part of the emerging ethereum identity layer, right? If you want to have a name and you want that name to be decentralized and to really be controlled by you and not sort of be dependent on some other entity, then ENS decentralized system on top of Ethereum, it is the way to do it. Now, one of the problems with ENS is that it's expensive, right? Now, there is the registration fee, there is the $8 a month, and that's about as large as regular DNS fees, but there's also transaction fees, right? So the last time I did an operation to do something with my ENS, I think the last thing I did was when I published a new blog post. And because my blog is geared to IPFS, I need to actually update the IPFS record inside of the contract on ENS, which contains the IPFS hash, and that's a transaction. And I think that cost me about $8.
00:21:18.060 - 00:21:18.566, Speaker C: Right?
00:21:18.668 - 00:21:30.954, Speaker B: So now, what if transaction fees go up by a factor of ten? So, like what they were last year or two years ago, right? Then that transaction fee of $8 is going to be a transaction fee of $80.
00:21:31.072 - 00:21:31.546, Speaker C: Right?
00:21:31.648 - 00:21:48.762, Speaker B: So ENS on layer one is expensive. It may get more expensive. ENS on layer two is the solution. Right. We're doing layer two as layer twos are scaling. But we want Ethereum to, like, we want applications that people actually use to actually benefit from the scaling.
00:21:48.826 - 00:21:49.342, Speaker C: Right?
00:21:49.476 - 00:22:44.910, Speaker B: And there's like, lots of hidden assumptions throughout the Ethereum ecosystem that kind of assume that you're on layer one. And if we want people to actually benefit from layer two scaling, then we kind of really need to start breaking down those assumptions and we need to start looking at the important applications and basically seeing how do we make the layer two friendly. So this is a screenshot from something called Opsnames XYZ, and this is built on a protocol called CCIV. What this does is basically you have a smart contract on layer one, which owns the domain ECC E. And then that contract has logic that is based on the CCIT protocol that basically says if you have a subdomain, of ECC East and you're looking for that subdomain, then you can go to this other place and you can basically check what that subdomain actually is on the optimism network.
00:22:44.990 - 00:22:45.282, Speaker C: Right?
00:22:45.336 - 00:23:29.114, Speaker B: So instead of doing everything on the layer one subdomains of ECC ETH, all get managed, updated, created, destroyed on optimism. And so if you were to have your domain ECC ETH, updating any records only requires being on optimism. It does not require any layer one transaction. And so from a gas fee perspective, everything is vastly cheaper. Now, this is the optimism one. I have asked a couple of other layer of twos if they have equivalents. And like a couple of weeks ago, the answer from the one or two that I asked was not yet, but I imagine they will very soon and very possible some others already do, which is great, right? But this is one example, I think, of something that is good and that we need more of, which is the ecosystem.
00:23:29.114 - 00:24:31.042, Speaker B: Like really actually adapting to layer two scaling and making sure the layer two scaling actually translates into real benefits for users, which is great. Now other things in Ethereum identity, right? So this is an application called Zoopass. Basically it was developed at Zuzalu, which was this kind of experiment in the spring in Montenegro which tried to basically create a kind of pop up sort of mini city that combines Ethereum and zero knowledge tech and a couple of other themes. But one of the really interesting things was this zero knowledge aspect, right? So this QR code contains AZ case scenario. It contains a zero knowledge proof, right? And that's what that zero knowledge proof says is it proves that I am one of the residents of Zeusalu without revealing which one I am.
00:24:31.176 - 00:24:31.714, Speaker C: Right?
00:24:31.832 - 00:25:30.114, Speaker B: So this is the in person use case, right? And the in person use case is basically you have this thing on your phone and because you have the thing on your phone, then basically you could go and you can show it. And you can use things like this as proof that you have the right to enter someplace and without actually revealing your identity every time and letting yourself be tracked everywhere. It's the sort of thing that really ties into a lot of e government stuff, except it allows you to do it without compromising privacy, which is unfortunately the default that a lot of these schemes end up running into. And there's also an online component, right? There's applications like Zoopool, for example, which were basically you log in with Zoopas and so only Zoozaluba residents were able to log in and you're able to get one were you able to make one vote?
00:25:30.162 - 00:25:30.326, Speaker C: Right?
00:25:30.348 - 00:26:31.910, Speaker B: It's a polling system. Anyone can start a poll, anyone can vote on a poll. You're able to make one vote without revealing who you are, but at the same time proving that you are a legitimate voter and that you can't make more than one vote, right? So it's a privacy preserving voting system that is anonymous, but at the same time it ensures that the Kremlin can't go and vote 58,200 times. Basically. I think there is a big story here, which is that with cryptography we actually do have the ability of giving people very high levels of privacy and anonymity. But at the same time for basic actually achieving a lot of these security gains that the sort of pure trying to achieve anonymity by doing no verification at all is not able to achieve, right? So we can get more privacy and more security at the same time. And this is also part of the growing Ethereum identity stack.
00:26:31.910 - 00:27:30.106, Speaker B: Other Attestation protocols. This is the ethereum attestation service EAS. So you can also make off chain Attestations about things and these are systems that are increasingly talking to each other, right? So we have these tools, right? We have names and names that are becoming cheap. We have a growing list of really fascinating ZK tools and growing usability for those ZK tools, we have off chain Attestations, we have on chain Attestations. What can we do with all of this? One example is you can use this technology in decentralized social media platforms, right? So lots of people want to use a Twitter alternative. Who here wants to make a Twitter alternative? Okay, no that's good. It's actually better not to have too many hands because we don't want to have too many Twitter alternatives where each one only has 50 people on it and at some place people just get bored and go back to Elon land.
00:27:30.106 - 00:28:53.110, Speaker B: But Farcaster exists, Lens exists, a couple of others exist too, and some of these are starting to integrate more and more of these ethereum features, right? So with Lens you can use your existing ENS name. Farcaster, I think is going in the direction of ENS integration with CCIP. And then the other thing you can do is instead of trying to copy Twitter, you can try to do some totally new thing designed for new use cases, right? So one of the concerns that I have with kind of this old Twitter approach that everyone is taking is that it's standard startup advice that if you want to make something that really takes over from an incumbent, you can't make something that's 1.1 x better, you have to make something that's ten x better. You can't just appeal to sort of niche ideological appeals. You have to create a whole new category of activity, right? Like Facebook did not kill MySpace by copying MySpace, twitter did not copy Reddit. And if we think about what is the biggest new social media thing that actually has taken over very recently? Well, I mean, realistically it might be TikTok, right? So that's like TikTok is not just a different way to put it, to yell to us in native characters.
00:28:53.110 - 00:29:38.674, Speaker B: And so one other way to think about the social media problem is like okay, let's create something that's web three native that is decentralized, that has these kind of open and transparent rules that are executed within the software, but that is designed for some other use case. One interesting, very natural use case is kind of discussion and governance within communities, right? So existing DAOs are a good potential user of this and possibly even new communities that wants to kind of turn into communities that use or use various web three tools to organize themselves could also be a nice use case. So why alternatives to opaque, centralized mechanisms for some aspects of moderation.
00:29:38.722 - 00:29:38.934, Speaker C: Right?
00:29:38.972 - 00:30:17.570, Speaker B: So antispam proving that you're a human and not a bot, lots of ethereum based reputation stuff that can be used for this already. Just having an existing address on chain requires you to have paid a transaction that's a significant degree of anti spam already, right? Okay. If you look so there's this website called Buyax.com. It's probably worth just like making it transparent. Buyacs.com. You can go and just buy Google accounts, Twitter accounts, and all kinds of things, right? And they accept Bitcoin and ease for payments, so it's all great. Right, and the average cost of an account on these is like somewhere around six or $7.
00:30:17.640 - 00:30:18.066, Speaker C: Right.
00:30:18.168 - 00:31:26.520, Speaker B: So this is what the spammers are paying, right? Realistically, the spammers have far better tools than this, right. So if you're having a new account on Ethereum that has paid a transaction fee, like right now, that's already better antispam than what social media networks or as good anti spam as what social media networks are providing, right. And then on top of that, you can look at do people have posts? Do people have some kind of proof of humanity stamp? If you want to integrate World Coin, have people scan their eyes. My opinion for that is like, that should not be mandatory, but an option. Why not? If people want to, you could use some kind of function over all of the different identity things that people have. You could use EAS attestations. With Zoopas, you're able to make zero knowledge proofs that prove things about what are called stamps, which is kind of a pope or kind of an attestation system that exists within the zoopas system.
00:31:26.520 - 00:31:33.754, Speaker B: You can prove some function over the stamps, what stamps you have, without revealing everything about yourself.
00:31:33.952 - 00:31:34.410, Speaker C: Right?
00:31:34.480 - 00:32:56.478, Speaker B: So there's a lot of alternatives for antispam that you can combine together that are very wealthy native even today reputation, like helping users identify which accounts are worth listening to and which accounts are not serious. Also just another benefit the user owning their identity, and identity being portable and the connections you make within the system being something that's easily portable if you want to switch to another application. Better tools to protect against bad actors while preserving privacy. I wrote this post on privacy preserving applications on ZGS and Arts about a year ago, and one of the really fun ideas you have here is you can have a message board which is anonymous, but at the same time enforces a rule that says that each user basically has a limited amount of reputation. And if some moderation system, which could be anything, could be centralized, could be decentralized, could be downvotes, could be whatever flags some particular post, then you lose one point and your account can only survive for as long as you still have points, right? So you don't have to choose between being totally transparent and being four chan. You can literally explore every single point along the spectrum.
00:32:56.574 - 00:32:57.026, Speaker C: Right?
00:32:57.128 - 00:34:33.074, Speaker B: So a lot of these very powerful new possibilities become available because of zero knowledge proofs. And I highly encourage people to try to look at and explore these kinds of things. DAOs. So what dao governance is like a really hard problem, right? We've had lots of DAOs. But one of the challenges that I see is that there's a lack of originality in terms of thinking about what makes a Dao, right? A lot of people have this mentality that all you do is you create a thing, you issue a token, you give your friends some of the token, they can start selling the token around and then if you have tokens, you can vote, right? And there's like a lot of people who think that this is a dao, right? And I have to admit that that is totally not what I had in mind when I started thinking about the concept back in 2013, right? So DAOs, decentralized, autonomous organizations, basically organizations that have ways of organizing people and communities that involve using some kind blockchain and smart contract based technology, right? There is like a lot of really powerful things that you can do there. But he really wants to go beyond using coin voting because coin voting is broken in all kinds of ways. Now, first advice of doing Dow governance is like governance is hard and if you can avoid it, then you should probably avoid it.
00:34:33.074 - 00:35:32.150, Speaker B: So creating singletons, right, is hard and it invites political problems. As soon as you create a singleton, as soon as you create a single thing that is logically centralized, even if it's architecturally and politically decentralized, if it's like a logically centralized single thing that looks like an actor, then that invites political problems. People are going to have expectations about how it's going to act fairly. People are going to have complaints about was the thing set up fairly? Was this community pre mines to favor some group of people that I'm not part of? So creating singletons is hard, invites political problems. If you can go without a singleton at all, then that's a good idea. But sometimes having a singleton is unavoidable, right? And so try to move beyond token based governance. As I've already mentioned, token based governance just has all kinds of vulnerabilities, all kinds of just problems in how it ends up actually working in practice.
00:35:32.150 - 00:35:40.838, Speaker B: One I think question you should ask is are you decentralizing for robustness or are you decentralizing for efficiency?
00:35:40.934 - 00:35:41.580, Speaker C: Right?
00:35:42.110 - 00:36:10.414, Speaker B: Are you defending against internal threats? Are you defending against external threats and trying to solve for censorship resistance? Are you trying to decentralize because you want a mechanism that helps more people provide input into the decision and by doing that create decisions that are better for everyone? Are you trying to make a decentralized system because you see that will be more efficient in some way or decentralization for interoperability?
00:36:10.462 - 00:36:10.626, Speaker C: Right?
00:36:10.648 - 00:37:22.458, Speaker B: This is a third category. You make a decentralized thing so that it can interface better with other decentralized things, right? If you're making a decentralized protocol, you don't want to build it on top of centralized APIs. Therefore, if you want to serve other decentralized applications, often you have to be decentralized too, right? So I think it's always good to look at which of these reasons for decentralizing things you're going for. And depending on which one of these you're going for, the kind of governance that you're going to have is often going to look very different, right? So this is also something that's worth thinking about, experimenting with new mechanisms, right? So quadratic funding is this interesting thing that Glenn Wile and mostly with some involvement from me, came up with back in 2018 is really nice. It's this kind of sort of democratic, sort of market based way of funding public goods. The idea basically is that you have some central pool of funding and it serves as a matching fund and it allows other people in the community to donate to projects. And the central pool of funding matches projects that get donations from other people.
00:37:22.458 - 00:38:11.670, Speaker B: Now, the matching works in this interesting way where basically it uses this clever formula to compute the matching, where the practical effects are that smaller contributions get a bigger matching ratio than bigger contributions. And everyone's matching ratio is greater if a larger number of distinct people contribute to a project, right? So things that are actually public goods to a wide group of people get a larger matching ratio than things that only benefit a few people. So this is like a really nice idea. And there are various decentralized mechanisms that are actually building on top of this or using this as their mechanism. There is a Clr fund which uses zero knowledge proofs to implement this in a privacy preserving way. So a lot of really nice things happening. Also, retroactive funding.
00:38:11.670 - 00:39:52.810, Speaker B: So retroactive funding is this idea that instead of giving grants to people because you think that they're promising and they will do good work, you give prizes to people after they've done good work. And the idea is that retroactive funding is easier to implement because it's easier to understand what already was good than to try to agree on what will be good in the future. And the general idea of this is that if you have a retroactive funding mechanism, then you can combine that with an investment ecosystem, right? Like you can basically have people actually give investments into projects and they too can get rewarded if a project ends up really succeeding and gets a very large retroactive payout, right? Or you can have independent developers where if there are multiple different retroactive funding systems in the ecosystem, then they can start working on projects and they know that if they succeed enough, then they are going to get some level of reward. So a lot of interesting stuff happening with retroactive funding. Optimism has done two rounds of retroactive funding so far and they've done these very big rounds, like the last one gave out, I think about $20 million. And it just gave funding to a whole bunch of projects that did really good and valuable things to the ecosystem. I believe even some amount of funding ended up going to the people who created the Ketchack hash function and it ended up being a pretty substantial grant, right? So a lot of really good experiments happening with that too.
00:39:52.810 - 00:41:18.278, Speaker B: So this is kind of this other side of really interesting stuff that you could do with crypto, right? Like you can create these mechanisms to try to solve problems that have to do with things that are actually good, not being rewarded enough and not being able to compete with big exchanges offering people like two and a half million dollars. So a lot of really amazing opportunities here too. So I guess conclusions, right? There is lots of valuable stuff happening on ethereum, both on the application layer and on infrastructure. There's some of the big themes. Cross layer two, privacy, continued work on mechanism design, identity, ZK things are also much more concrete than they were five years ago, right? Like five years ago there was a lot of more abstract discussion of like oh, this will solve financial inclusion, this will solve supply chains, this will solve fraud. And I think the discourse has advanced a lot to these much more specific applications where you can't just go saying random words around and like, oh, this will make the medical vaccine ecosystem more trusted because we put QR codes on things and you have to actually think and have things that make sense in the real world and not just the GPT four world or whatever.
00:41:18.364 - 00:41:19.000, Speaker C: Right.
00:41:19.690 - 00:42:17.720, Speaker B: Another I think thing is that this is an era where it's probably easier to come in and help and participate than it was five years ago. And the reason is precisely the fact that there is more of this focus on concrete stuff that's closer to the user. Basically a lot of the deep tech has been solved, right? Or it exists and is being constantly improved. The problems that I talked about today, they're not really problems that involve building deep tech, they're problems that involve taking existing technology and just applying it in the right way, putting it together in the right way, and packaging it in a way that actually makes sense to users, right? And this is the sort of stuff that the ecosystem really needs right now. And so if people wants to work on any of this, then I'd be very happy to see the results. So thank you. Oh, amazing.
00:42:18.250 - 00:42:40.460, Speaker A: Well, hope you enjoyed that giant brain dump of ideas you can work on. And there's a lot of people that actually already talked about doing some of these projects as you were filling out and signing up for the hackathon. So you can get a lot more feedback here from our mentors and all these things and everybody in the audience and everybody who's watching this live stream, especially a whole new bunch from Nigeria. Hope you enjoyed this talk.
