00:10:05.790 - 00:11:13.698, Speaker A: Hello, good morning, good afternoon and good evening everybody. My name is Kartik, one of the co founders of ETH Global and I'm super excited to welcome all of you to ETH Online. We have hundreds of you joining us today and I see that all of you are having a lot of fun on the chat so I couldn't be more excited to get today started and we have a lot more interesting things coming for you today for the rest of the week. Good afternoon and good evening everybody and let's get this show running. So we've been attending online events for quite some time now, but for ETH Online, especially this month, today we wanted to do something slightly unique for all of our audience. So we decided to create this mini shared world computer to really optimize and make the experience unique for everybody. This makes it easy for all of us to experience everything together and in sync and we also have the ability to make it really unique for every given talk that's happening and that's kind of our goal from our side.
00:11:13.698 - 00:12:50.290, Speaker A: So whether it's seeing a broadcast that appears everywhere for all attendees, to being able to change the settings for, toggling different applications on this page, to being able to control the themes, we can do that in sync with all of it. And we hope that you like this experience and we have a lot more coming for the next few weeks. So for those of you who are going to be watching this later on YouTube, this is a preview of what this looks like and we get to really control and make this special unique for all of us. So as you are playing with the chat, as you are playing with all the different applications, feel free to suggest different improvements or ideas and we'll be super interested in making this even better for all of us. So you may know at this point that ETH Online is a hackathon and also a collection of Summits and there's a lot of you on this chat and watching this live stream right now who are part of both and also one or the other audiences. So just to kind of clarify that and just really give everybody an overview of how the next few weeks are playing from our end, ETH Online the hackathon starts from today to the 22nd. That is a three week event that's going to happen asynchronously on Discord and also we have Summits every week that we'll be doing on various topics and all of that is incorporated into the same month of October.
00:12:50.290 - 00:13:45.858, Speaker A: But you can attend either or if you are in one of the other sign up settings and if you are already hacking at the hackathon, you are obviously just able to quickly watch out the Summits. And for the people who are here for just the Summits, we'll be starting the show fairly soon and also doing the same for every Friday. So just a quick overview. The hackathon itself is what I'm going to focus on for the next few minutes, where I want to really cover the logistics of everything that's happening for the next three weeks for all of our hackers. And then I'll be also going over some of the up and coming summits we're going to be doing. And then after the logistics of the hackathon, we'll move over to our summit and kick off with our official talks for the day. So the hackathon, as I said, is three weeks long, starts today till the 22 October, and we'll be going over what you need to know for the hackathon.
00:13:45.858 - 00:14:37.334, Speaker A: As for our Summits, our first summit is this kickoff summit that you're watching right now. And we'll be covering a lot of introductory talks and giving a state of the ecosystem to all of us. And then we'll be moving on to different summits starting next week, where we'll be covering scaling and infrastructure. On Friday, the 9 October, we'll get to talk about everything from scaling to layer two and everything that's happening in that world of more throughput and security. Then on Friday, October 16, we have decentralized finance, so we'll be doing everything and talking about everything DFI and then moving on to October 23, it'll be covering the future of Ethereum, especially from the point of view of Eat 2.0 and beyond. And then lastly, we have our summit on Ethereum's impact and our finale on Friday, October the 30th.
00:14:37.334 - 00:15:32.860, Speaker A: And this will allow us to summarize not only how this year has gone, but also the impact Ethereum has had on the world so far, and also the opportunity for us to showcase our favorite hacks from the hackathon. So you can see all of this thing on our website. If you are a hacker, you'll be getting calendar invites for all these things. If you sign up for just the summit, we'll be sending a lot of emails as the events themselves get closer. So if you ever want to know what the latest information is about a talk or a summit, you can just head over to Ethonline.org. So let's go back to focusing on the hackathon. The hackathon is three weeks long and I'll just be covering some of the logistics for all of our hackers, what you need to know, what we need from you, what you need to kind of do to be successful, and then we'll move on to our first talk of the day.
00:15:32.860 - 00:16:17.190, Speaker A: Now, the thing that makes me super excited about all this thing is that this was our biggest event of the year. We have over 630 hackers that are going to be participating in ETH online this month. And we have over 2200 summit attendees that are going to be joining us for all of our talks and summits. These hackers span from 65 different countries and 19 different time zones. And when we plotted where everybody was coming from. It absolutely blew us away to see so much diversity and interest from all over the world. We have representation from all six continents and I couldn't be more excited about what everybody is going to be building.
00:16:17.190 - 00:17:30.560, Speaker A: We reviewed all of the applications and we saw a lot of interesting themes and it just brings me even more joy to talk about so much variety and the spectrum of how much we're going to see experimentation on for this month. We have people hacking on DeFi and NFTs, people want to do DevTools and storage, people want to experiment with dows and governance. And the best part of all of this is that the most interesting thing for this month is people wanting to play with layer two and scalability as part of their hackathon. So I can't wait to see how this event moves the ecosystem forward starting this month. And not just that. We have over 120 mentors that are here with us and 36 companies, some of the best partners from our ecosystem who are going to be with all of our hackers throughout this whole period to give you your support, help you get unblocked from any technical user or product or security problems, and really help you be there to be successful. These are some of our speakers and our judges and our mentors who are here this entire month and they'll be hanging out on Discord and our various talks and also this live page.
00:17:30.560 - 00:18:41.478, Speaker A: And I can't wait to tell more about everything that all of you are working on to them so they can get excited about all the things that they're about to see. And not just that, we have some amazing sponsors who are going to be with us on Discord and throughout our talks. And they'll be here really kind of helping out all of you as hackers and developers to really get the best out of what's possible with Web Three and Ethereum and also their own platforms. A lot of them are here to just help support anybody who needs help, even if it doesn't directly include something about just their technologies or their company. And really, the goal for us is to offer a collaborative environment for all of us to learn together and improve what's possible and our knowledge. So it's an amazing list of really great companies. And it's not just that these companies are collectively offering $125,000 in prizes for various things that you can do, from using their platform to building on top of a specific problem set or a specific space.
00:18:41.478 - 00:19:45.098, Speaker A: And it's an opportunity for all of you to also win a prize as you continue to build on your hacks of your own choosing. So, just to kind of give you a taste of some of the prizes we have in place, we have all these amounts from all these companies and they'll be here to offer you and consider you for these prizes should you choose to use any of their technologies in your hacks. And this is a massive list of companies offering so many different unique and cool prizes. So if you are not sure or what you want to build, or I'm switching slides too fast, don't worry too much about it because I just want to give everybody a taste of what's there. And you can find all these things directly on the Prizes page, which is available on Ethonline.org prizes. All the hackers can get to this notion doc and just see the list of prizes with all the details on how to be eligible for the prize and what other categories or subcategories are there.
00:19:45.098 - 00:20:32.406, Speaker A: And we'll also be making these things available to you on your dashboard as well as communicating this in a lot more detail over email and on Discord. So let's quickly cover some of the logistics for the hackathon. I'm going to go through this thing slightly fast and I hope that you're able to sort of grasp the basics of it. But this by no means is designed to be the only place where this will be communicated. We'll be emailing you about a lot of these details as well. And we'll be communicating all of this thing in Discord to every hacker, in case you end up missing this video or you end up watching this thing later as a recording. So the most important thing is communication is on Discord.
00:20:32.406 - 00:21:30.750, Speaker A: For everybody who staked, you should automatically see a button to join our Discord channel on your dashboard. And this button automatically gives you access to all of the private channels for this event. And what this really means is that we have really specific channels just for the hackers that automatically cover all of our communications, from Eve Global to the team, from the sponsors to all of the participants, and also for each of you to talk to each other. And it's really important that you are on that Discord because that will be the official place where everything is communicated. And on top of all of that, joining that Discord is also where you get access to all of our dedicated channels for mentor and support. So if you are stuck on any technology or UX or a technical issue and you need help with being unblocked or understanding what's possible, you get to use the same Discord channels to ask for help. And it's like our mini stack overflow.
00:21:30.750 - 00:22:28.942, Speaker A: On top of all of this, for all the hackers, you should have also received calendar invites for all the talks and workshops that are happening this for any given week. You've already gotten the invites for this coming week, but you can always just head over to Ethanline.org, our website, and get the full information on all the talks, the times and what they're about directly from there. And lastly, I know a few of us of you have emailed us about clarifying how these are supposed to work. Should you join all these, or what if you can't? Or do you really want to kind of stay up late? If you're in a time zone that's not fully compatible with a talk? We want to just point out that all these things are asynchronous. This event is designed to support all possible scenarios for all of you as participants. We don't want this to conflict with your job or your sleep or any other responsibilities or commitments you have.
00:22:28.942 - 00:23:24.660, Speaker A: So we're designing all of this to be asynchronous in the sense that if you are able to join anything that works for you, you are welcome to do so. If not, we will put the recording immediately up after the talk ends for you to catch up on if something is interesting for you. And this will also go on for this talk for all the summits. Even if you're not part of the hackathon, all talks for the summits will be made available after we finish with the day. And lastly, I've referred to the dashboard multiple times, and for all of the hackers that have confirmed and participated and staked, you already know how to get there. But in case you forgot the URL, you can simply head over to Hack ETHGlobal Co EOnline to log into your dashboard and see everything about this event as a hacker from there. So let's kind of quickly jump into how the hackathon itself works.
00:23:24.660 - 00:23:54.202, Speaker A: As of right now, the hackathon officially starts. That means you are free to start coding. You can start building your projects. You would have already been in our discords, there's hundreds of you already there. And you can officially start working on your projects and start talking about or working on your check ins or working on the project description. For everybody who's working on a project, you are allowed up to five members per team. That's a maximum of five.
00:23:54.202 - 00:24:58.554, Speaker A: And you have three weeks to submit your project. The way we're designing this thing is that you should have ample time to understand what's possible. This is how the workshops and the talks from our sponsors also integrate. If you are trying to use something that you think may be interesting, it would make your life easier. You get the chance to talk to the sponsors or any of our mentors or even other hackers and learn what they can do with this, and watch the talks or attend the workshops and just see if this actually makes sense for you to integrate into your projects and then take your time in getting it properly integrated for your hackathon project. So you have three weeks to submit your project, and I'll just quickly go over how this is designed from a submission and rules process. The key thing to remember is all work that you're doing must begin during this hackathon, which means everybody who is submitting a project should start working on their projects as of today and you have three weeks to do that coding or design or anything that you're doing for your submission to submit.
00:24:58.554 - 00:26:22.760, Speaker A: And everything we'll be considering must be part of this three week window so we can keep it fair for every other participant and to be eligible for any prize aside from using that particular company's protocol or SDK. The general rule for this event is that your hack must interact with Ethereum in some capacity and that's how we qualify things being on the theme for this event. And of course, if you're in a position where you're not sure if the project that you're working on maybe qualified as something that was previously done, or you're not sure if we can use a certain open source library and call that non brand new work or using other work, you can always ask us and clarify this. So just reach out to anybody on the ETH global team to ask how you can move forward from here. And then lastly, I want to just give a brief overview of how check ins work. So everybody who staked was told that your stake will be returned upon a check in, that's successful. So I want to quickly give a brief overview of what a check in is and how it's designed.
00:26:22.760 - 00:27:12.904, Speaker A: So first of all, the quick summary of all of this is that a check in is something that happens on your dashboard once a week where you just give us an update on what you've done so far and how your project is going. It primarily exists for us to get you the help you need to get unblocked on your project. Whether it's something where you don't understand how to best architect something, or you're just stuck on a technical piece for your project, or you're just not sure how to really integrate something and you need help. This allows us to kind of point you to the right direction, whether that's connecting you with the right people or answering your questions directly. This is the opportunity for us to do so. And this is where the check ins come in. Your stake is returned by responding to check ins and submitting your project.
00:27:12.904 - 00:27:52.980, Speaker A: So as long as you're doing the three check ins and you submit a project, you'll be able to receive your stake back and all this thing happens through your dashboard. And we'll be communicating any nuances or anything separate directly over email and discord as well. But you just have to log into your dashboard and you'll see the check in automatically once you're logged in. And the way we're designing these check ins is so that to give you an idea of how to structure your own progress. There's three weeks for this hackathon. This is one week less than the previously global events we've done. So keep a note that this is a three week event, not four.
00:27:52.980 - 00:29:04.460, Speaker A: And ideally you have the first week, which is the next coming week, to work on your idea. Think about what it is, plan out what you need to do, or find teammates, or settle on an idea, or realize or kind of understand what sponsors SDKs you might be interested in integrating to make your life easier or not repeat everything from scratch. And that week should be dedicated to just having a good idea for what you want to work on. Then week two ideally should be a place where you get to kind of really build out a simple MVP working version of what you really want to build so you can make sure that everything you thought you want to do actually can work together in harmony. And the last week becomes the place where you polish everything to focus on UX UI, making it simple to use and kind of really communicating what you are trying to accomplish for this project. And you also get to work on that video submission for your project for everybody to look at. And of course, we realize that not everybody already has an idea right now or team members.
00:29:04.460 - 00:30:12.560, Speaker A: We want this thing to be very much of a beginner friendly event and a lot of you've already emailed us about this thing, so we want to just make sure that we communicate all this thing as well. But you can always head to Find A Team Channel on Discord and reach out to anybody on that channel to either potentially join their team or if you have one of the skills somebody else is looking for and you want to partner with them, you get to do that by seeing what everybody else is looking for in Find a Team channel. On top of all of that, don't forget to introduce yourself to the Ethanline Intros Channel. We have hundreds of people from so many different parts of the world sharing so many different and unique perspectives. And this is a chance for you to say hi to each other or really get to understand and know what everybody's excited about and also use that as a way to meet new people and potentially work with them for this hackathon. And of course, if you're not sure what you want to work on as an idea, but you have a team. We also have an ideas channel and an ideas doc, which you can find on your info center to be able to just quickly look at a list of potential ideas that we came up with and others contributed to.
00:30:12.560 - 00:31:10.372, Speaker A: Pick one and use that as a way to build your project. And as part of all of that, especially as you think about an idea for the project or how can you make your lives easier by using some of the existing work, whether it's a company in this space or an existing protocol. We have a lot of talks and workshops, panels and AMAs scheduled for this week and this content spans from beginners to intermediates to experts in your skills for web3 knowledge. And we're designing this thing so that everybody can learn something independent of their past experience. So do take advantage of all these talks and workshops. If you are a hacker, you would have received these invites directly. But if you are a Summit attendee watching this thing right now, then you can always check out these talks directly on YouTube and they'll be also live streamed as they happen.
00:31:10.372 - 00:31:53.102, Speaker A: And all the content and the agenda is available on our website. And for the hackers, a lot of these details are available on the Ethanline Info Center for Hackers, which is again available as a link from your dashboard. And as for the summits the summits happen every Friday. So we'll be going back to Live Ethonline.org to check out all of our Summit talks and the schedule for that again, is also available on our website. And the most important thing here is that for the hackers, submissions are due on Thursday, October 22 at 11:59 p.m.. Eastern.
00:31:53.102 - 00:33:05.878, Speaker A: This is really important because this is three weeks from now. And the way submissions are designed is as follows to be considered a submission, you have to record and submit a four minute video of your project that summarizes who you are as a team, what you decided to work on, why you decided to work on it, and how it works by demoing what you built. This video will be what is going to be considered for your judging process from our judges, and also for any prizes from our sponsors. They're going to look at this video as sponsors to award you any of their prizes and ask clarifying questions. So really make sure that you are taking the time to really get the messaging right and communicating what you did and how it works. In this video, we'll be sharing some of the previous examples of how you can structure these videos on our dashboard and also on Discord, but from just our past experiences with this. Do not leave this thing to last minute, because this is the final piece that everybody remembers your project from and also is what will be considered for judging.
00:33:05.878 - 00:33:56.362, Speaker A: So you really want to make sure that it has all the right points you want to hit as somebody, whether it's a sponsor or a judge or any other hacker in the future looks at it can take away. And lastly, the code of conduct for this event, whether it's a hackathon or just a Summit, please be respectful to everybody out there, whether it's on the chat, or a speaker, or on the Q A part or on Discord. Harassment and abuse are never tolerated. And if you think that somebody is behaving in a way they shouldn't, please reach out to anybody on the global team and we'll be acting on that immediately. And before I go on to our talks and our first Summit talk for the day. I want to just make sure that I get to tell everybody that please pace yourself. We don't want this thing to be exhausting for you.
00:33:56.362 - 00:34:42.300, Speaker A: The reason these events are designed to be longer than a weekend is so that you don't have to make a big trade off of sleep or other commitments to get this right. We want these things to be an opportunity for you to learn more and learn about what is possible and experiment with what could be possible. So this is very much about understanding what you can do and learning through it. So don't try to make this a competition or stressful on yourself. This is what you are doing for fun. And if at any point it feels like this may be too much to handle, reach out to us. So we can also help you with this and make sure that you are focused on enjoying the experience instead of making it look like or think like it's work.
00:34:42.300 - 00:35:36.006, Speaker A: So with that, I want to wish all of you happy hacking all the hackers. We have a couple more sponsor talks coming up after the first talk here, but a lot of these details will now be available on Discord. So if you are planning on hacking, you can immediately go and start working on your projects now. So with that, I want to move on to our conference piece for today and to really kind of give you an idea of what today is about. The goal for us is to give you some high level updates on what is happening right now in Ethereum. And then over the next few weeks, for each summit that happen every Friday, we'll cover a lot of details on what's happening in each of those things we're going to cover today. So today we're going to have a lot of interesting talks from speakers like Aya Gucci, Danny Ryan and Merrick and Bartett.
00:35:36.006 - 00:36:24.490, Speaker A: And then we have a few more talks later on. Just having a general introduction to DeFi. How do you actually get to contribute to Ethereum's developer portal, how people are using Ethereum outside of coding and how we're bringing creativity to it. And then a little bit more on how we can make the development process easier and what's happening in the world of gaming. Zero knowledge proofs and just the community itself. So we have all these talks coming today and you can also just open the Schedule app on your live page to see the full schedule of all these talks. And then we'll be ending the day today with Vitalik giving a talk on scaling Ethereum in 2020 and beyond, where you're going to get a preview of how we can use roll ups and other scaling technologies to really scale and speed up transactions.
00:36:24.490 - 00:37:16.090, Speaker A: So before we move on to our first talk, I want to just remind everybody and really point out that it's been a massive year for ethereum. It's not just that the developers are super excited about everything, but we've had some amazing milestones. We have companies like Reddit who are trying to use this technology stack for hundreds of millions of their users. We've had on multiple occasions, DFI crossed $10 billion in total value locked. We've had amazing progress on each two and Serenity and also just phase zero launching. And overall, the sentiment just keeps on increasing for the activity and the community in this space. And of course, I don't have to tell anybody about how much people are excited about DeFi.
00:37:16.090 - 00:38:20.910, Speaker A: So not just that we see the direct first order derivatives of all this at ETH Global because we have thousands of people that have participated in our events this year. And we are just a small piece of this massive stage where we get to contribute and make this even more, better and unique of an experience for all of us. So we can't be any more excited to kind of be part of this shared goal of making Ethereum better. And ETH Global's mission is to increase the number of developers in the Web Three ecosystem. And we're super happy that we're on a great track here as we kind of wrap up 2020 with all the amazing things that are happening in Ethereum. So Ethereum is a global technology and that's kind of our goal to make this move forward even at a much faster pace, whether it's from a community or usage or a developer standpoint, all these things connect together. And this kind of brings up to our very first talk of the day.
00:38:20.910 - 00:38:44.770, Speaker A: And this is where we're super excited to have Aya Miyaguchi who is the Executive Director of the Ethereum Foundation, and she'll be giving us a big overview of how we can discover what else is possible with Ethereum. And without further ado, I'd like to welcome Aya to give her our very first talk of the day and hope you enjoy the rest of the summit.
00:39:12.030 - 00:40:14.720, Speaker B: Thank you, Karik, for the introduction. I feel honored to be the first speaker of the Summit and we really appreciate the work East Global has put together to make this event accessible to hackers thinkers and influencers globally. East Global has done an amazing job over the last couple of years expanding the Ethereum ecosystem to new places. It has been incredible to watch how their newly established monthly hackathons have connected builders around the world this year, and we are proud to support their work. With that, I wanted to talk today about not just how we can continue to expand our community, but also about to expand Ethereum's opportunity in the regions where it can be most impactful. As you know, and like Jess Kaddick just explained, how amazing this year has been. The state of Ethereum is strong.
00:40:14.720 - 00:40:59.490, Speaker B: Ethereum celebrated its five year anniversary and the block number exceeded 10 million. These two phases are making progress, including the phase. 1.4 for the merger of one and two multiple layer. Two solutions have been implemented to provide scalability. And with all these, along with other technical advancements, the community is realizing new solutions with ethereum that bring real world adoption that we hear about every day. I often use the analogy of EF being like a parent of ezeum.
00:40:59.490 - 00:41:47.820, Speaker B: I'm not talking about giving birth, but in the way we want to provide support. We are happy that ethereum is growing and we want to let the organic growth happen as much as possible. Our mission is to ensure the success of ethereum and to do so in a sustainable manner. We also definitely care about the right kind of growth and healthy growth. Without health, no systems, no community, no human can survive long term. As parents prioritize and make trade offs to nurture and support the family, so too does the EF. Today I want to talk about one of the priorities that I cannot emphasize enough.
00:41:47.820 - 00:42:49.530, Speaker B: It is to continue working to discover opportunities in emerging economies. I often tell my team to expand the definition of the ethereum community. By this, what I mean is that we must expand our targets and the types of opportunities where ethereum can create the biggest impact, which I believe is an emerging economy. And I will share my reasons why. About ten years ago, I became an MBA student. That was sort of an unexpected accident, but I met one great teacher who taught me about all the problems with centralized power in the business world and about problems with capitalism. I learned that in order for a business to succeed long term, you need to think about three pillars economic factors impact the growth of society.
00:42:49.530 - 00:43:56.470, Speaker B: But we should also look at both social and environmental problems in building a business. At the end of the day, if your country or this planet becomes unlivable because of social or environmental issues, succeeding with your business or making money means nothing. This should be easier to understand. Now, looking at what's happening in the world, I've also learned that businesses with those three pillars can create more impact and opportunities in emerging economies. In 1976, Mohammed Eunice found that lending the small portion of money to the poor would make a significant difference in their life. He lent 27 US dollar amount to different women in poverty in the rural village in Bangladesh and learned each loan can earn two cent profit. This later became known as Microfinance and he and his grameen bank received the Nobel Peace Prize.
00:43:56.470 - 00:45:01.130, Speaker B: I myself went to Bangladesh and joined a field trip of BRAC, the biggest NGO in the world and another big microfinance operator. I joined their team to watch a program targeting the Utah poor. 99% of time the poorest of women because they have to take care of babies without fathers, often supporting these women to help them learn the simple knowledge for them to run a small business would create a huge economic benefit not only to those women, but also to their beers and to their countries. I watched and saw how simple systemic changes were able to create business opportunities and economic growth. There is a lot we can learn from the way disruptions happen in emerging economies. I will repeat this part, but this is not for charity. These are business opportunities.
00:45:01.130 - 00:46:07.278, Speaker B: Now the stats are showing us proof that companies that perform well in ESG factors show better performance in their return on investment. So investors are paying more attention to emerging economies. So what does this mean for Ethereum and why we are making this our priority? Like I said before, Ethereum is succeeding and the technology is growing thanks to all of your work. Now it is time to think about who will be the next big users. Out of 400,000 babies born every day, 360,000 babies are born in emerging and developing countries. These simple numbers show us something. Also, I just happened to watch chain analysis webinar this week and they showed a map of crypto PTP transactions and this chart of ranking of crypto adoption in each country.
00:46:07.278 - 00:46:51.710, Speaker B: It shows the areas with biggest crypto adoption index are in Eastern Europe and other emerging economies. Do you know why the numbers are big there? My next reason for this priority explains why. So, Ethereum has huge potential to make systemic changes in the world. But making systemic changes is not an easy job. With this, we need to look at regions where changes are absolutely necessary. People adopt new changes quickly when they are really needed, like when something like life or death. We all saw that this year with COVID and other challenges.
00:46:51.710 - 00:47:44.890, Speaker B: It reminds me of one of my favorite inspiring stories from Vincent Casares of Zappo when he was selling bitcoin on the street of Argentina in the early stage of crypto. Before Ethereum, an old man asked to buy a lot of bitcoin with all the money he had. Winsfest said, hey, old man, this tech is still experimental, so you may not want to put all your money into it. And the man said, I lost everything twice believing in our country's currency. So investing into this is nothing. Winston decided to start his company's Apple after this. Here is a map that shows us a few challenges that we have huge opportunities to solve.
00:47:44.890 - 00:48:41.342, Speaker B: And there are some examples of solutions already provided by Blockchain. You may have read the World Economic Forum's case study in Colombia for the e procurement system built on Ethan. And for this challenge in sub Saharan Africa, another community member of Etherisc is providing a solution to this huge challenge and opportunity. Etherisk is solving one of the most challenging issues facing farmers globally revenue loss from unpredictable weather that destroys crop output. The solution is smart, contract driven weather index insurance. Out of 48 million smallholder farmers in SubSaharan Africa, only 3% are insured. I have advised small businesses and entrepreneurs.
00:48:41.342 - 00:49:28.202, Speaker B: And I'm aware that microinsurance is often even harder than micro lending due to the cost of providers to operate. Easter risk solution could serve 14 billion USD market in SubSaharan Africa alone. Also, what Mohammed Eunice discovered was not just a way to save poor people. He established a serious business model just by disrupting the established loan system. Now, the market size of microfinance is 7.2 billion only in Dambes. If you understand what Ethereum can do, there is already a huge opportunity for Ethereum to disrupt what he disrupted to build microfinance.
00:49:28.202 - 00:50:15.710, Speaker B: 3.0 problem with microfinance still exists. Too many middlemen with high overhead costs are still making the system not entirely fair to those entrepreneurs who are lending. The problem isn't necessarily that the lenders are being evil, but rather just the structure of the system is not efficient or effective. Globally, this market is 124,000,000,000. As you can see, this is an opportunity for the entire community, including builders, entrepreneurs, investors, to make an impact here. Lastly, I want to update you all on what the Term Foundation is doing to make this a priority.
00:50:15.710 - 00:51:26.360, Speaker B: We have started local grants program that is providing grants to targeted and undersupported regions with high potential to support those builders and new communities. You might have heard about our community members in Honduras who helped this effort. As the first group, we are continuously working with the UNICEF Innovation Team through their Crypto Fund to support blockchain startups in emerging economies as well. Their second round of investments, supported by EF, invested 125 E in eight different startups in seven countries guatemala, India, Argentina, Turkey, Mexico, Cambodia and Sydney. We are also working with them on their Giga project, which maps out and connects school with the internet. After schools are mapped out, Ethereum can help with the payments to providers and a lot more. We are also working on a new EF fellowship program to work with changemakers in regions that are more in need of systemic changes.
00:51:26.360 - 00:52:10.020, Speaker B: The program is still at the piloting stage, but we will share our progress by the next devcom. And speaking of DevCon and speaking on DevCon, we are excited to say that DevCon Six will take place between August 10 and August 13 of 2021 and we hope to see things continue to improve. Our team is working hard to make this debcon the best, the most improved and the most exciting one ever, and we hope to share more development in the region soon. Thank you very much and I hope to see you in Bora next year.
00:52:22.180 - 00:53:17.824, Speaker A: Thank you so much for this amazing talk. Love it that we just got to hear when defcon is going to happen this year or next year. So with that, I want to thank you for being with us and being our first talk for the day and this is great. We're getting a lot of interesting feedback from our chat on the right side there. So if some questions show up, we'll be sure to relay them to you. But without going to further ado, I want to thank you again for being with us and we'll move on to our next topic for today. So thanks aya and I'd like to bring up the next we want to talk about and that is some of our sponsors are going to be sharing some really cool updates that they've had made for you.
00:53:17.824 - 00:53:42.410, Speaker A: They're designed to be asynchronous so that they can also be on the chat and answer any questions. So we have some of our messages from our sponsors that are going to be talking about. So our first sponsor for the day is going to be Ave and we have Stani from Ave who has made a video for us to watch and I'll have him share the video here and have us watch it.
00:53:44.720 - 00:55:10.780, Speaker C: Hey everyone, this is Stani. I'm the founder of Ave and Ave is a money market protocol built on Ethereum and part of the sponsors of this hackathon. First of all, congratulations for everyone for joining, this will be very interesting experience for you and I think you will grow quite a lot during the next three weeks. So hackathons are very interesting places to learn more about technology and not just technology but meet new people, peers that you can build together projects that you are following or get introduced to new kinds of things in the Ethereum community. And one of the interesting projects here is of course Ave. And what Ave does is that as a money market you can deposit cryptographic funds such as Stablecoins or Ethereum for example into a lending pool and earn interest from that by depositing. And on the other hand, when you are depositing into the protocol, you can also draw credit line from the protocol by borrowing.
00:55:10.780 - 00:56:22.312, Speaker C: So Ave as a project started a few years ago, we built the first lending protocol in Ethereum called Ethereum Lending which started as a very basic proof of concept and we have been evolving our protocol since then. The current protocol, Ave protocol has been launched this year, January and it has grown quite substantially. So there is 1.5 billion locked value in the smart contracts which means that you can actually utilize that value in whatever you're building during this hackathon. Now what makes Ave interesting is that it's quite developers first protocol. Most of the liquidity comes from projects that are actually building on top of Ave or are utilizing our liquidity and not directly from our user interface such as for example wire or DeFi saver. And besides the normal depositing borrowing functionality, we also have a couple of very interesting functions built on such as for example flash loans.
00:56:22.312 - 00:57:29.200, Speaker C: And Flash loans means that you could borrow without a collateral from the protocol as much as there is liquidity and then utilize that liquidity on whatever you are basically building. So in essence, Flash loans allows you to use liquidity without actually having it in the first place. For example, DeFi Saver is using Arbit Flash loans to close MakerDAO CDPs without returning the capital. You could use Flash loan to build refinancing products, for example, to offer the borrowers on Ethereum the lowest possible interest rate on their borrowings despite of what currency they borrowed. And there is many many interesting functionalities that you could actually build. Another very interesting feature that is related to Ave is so called credit delegation. So credit delegation is a function where when you deposit into Ave to earn interest and you're not borrowing, you could delegate your credit line to someone else who you trust or to a smart contract.
00:57:29.200 - 00:58:45.704, Speaker C: For example Wyron's Ya Link vault borrows at the moment 20 million worth of USDC with the credit delegation functionality. And credit delegation is interesting because you can make it completely as borrowings to a smart contract that does some kind of predefined function. Why it's interesting is that if that smart contract doesn't have any credit risk, you could actually use this credit delegation to get capital into one smart contract that might do some sort of interesting function such as yield, farming or so forth. Or you might have a credit delegation vault where actually credit is delegated by based on actual legal agreements such as open law. So the interesting idea and concept about these hackathons is that you always don't need to think about puristically DeFi, you could use DeFi in something else that you're planning to build. It might be related to NFDS, social tokens, e commerce, anything that's very interesting at the moment, privacy or somehow to connect it to the real life and solve real life problems. Now, Avatim is going to help you during this hackathon.
00:58:45.704 - 01:00:13.080, Speaker C: So if you have any kind of ideas or you want some sort of brainstorming help, I'm there for you. I will help you in terms of if you need some ideas, you need some technical help or economical help, I mean in terms of economic ideas, anything that makes your kind of like gets you forward, I'm here for you. You can find us on the Discord as well, our own Discord or in the hackathon Discord. And also from our team there is Mark Zeller as well, one of our integration leads and also David Trong is here to assist you and he's one of our community developers. And our goal is that we make most out of you when you are building on top of Ave or using our protocol and trying to kind of help your implementation and product wise. Currently we're building the version two of our protocol, but you can integrate for the version one and probably at some point during the hackathon you might see version two on testnet. So it's up to you to think and figure out which version you want to actually use for this hackathon.
01:00:13.080 - 01:00:58.580, Speaker C: One of the important thing is there is over three weeks time to hack. So it's quite a lot of time, spend a lot of time to designing the product to make a good architecture. Keep always security in mind, especially if you are taking the project further. And, yeah, create something that's very unique, something that helps people, something that interests you or whatever you actually want. It's pretty much free zone for you. And yeah, ping me if you have any kind of need for help or you're stuck in the documentation or the hack itself. We're here to help.
01:00:58.580 - 01:02:51.960, Speaker C: So I wish everyone very good luck and I hope you guys enjoy this and eager to see what you guys are building. Thank you. Hey, guys, I'm Hart from Uma, and we're super pumped about being here at ETH Online and supporting ETH Global in another awesome hackathon. So, Uma is a protocol for building synthetic assets and other types of financial contracts. We really consider ourselves a platform for your financial innovation, which is why we're so pumped to be here at this hackathon and see what you guys dream up over the next month. So how does Uma work? The protocol is really designed with two interwoven components. What we call priceless financial contracts are one part, and the DVM, or Data verification mechanism is an enforcement mechanism to resolve price disputes from those priceless contracts.
01:02:51.960 - 01:03:56.930, Speaker C: This priceless design is pretty unique and novel in the DeFi landscape, where we are really designing contracts to minimize Oracle usage. And as an example of that, we can look at this yield dollar product that's existed for a couple of months now and had over 20 million of locked collateral, over 40 million of locked collateral at various points, and yet has had only two on chain price requests. We've been able to support the whole product without any form of onchain price feed or price Oracle. And one of the really exciting things about this concept is that it supports a long tail of assets and a lot of innovation. We can get super creative about the types of financial contracts, types of synthetic assets that we can create using this priceless framework because we don't require an on chain price feed or don't require access to any kind of on chain API. So what can you build on? Uma. At the hack money hackathon, Potion Labs built this truly amazing insurance protocol, and they've since gone on to build a real business around this and raise venture money.
01:03:56.930 - 01:05:00.080, Speaker C: This insurance protocol can protect against price drops in any asset, and they did it by inventing a pretty novel form of an options contract that uses this priceless framework. We have other partners, like Perlin, that have built custom synthetic assets using the priceless synthetic tokens that have been collateralized with their own token. A couple hacks ago, Barf was created a Bay Area real estate fund, which was a synthetic token that tracks the price of San Francisco housing. Kind of creative example of a new type of asset class that can be created using synthetic tokens and DeFi concepts. And I think at Boston last year, Swan Dai was created, which was an innovative token margined in USDC that could hedge against any dislocation in Dai. So this is a token that could pay you out, kind of like insurance. If Dai deviated from its peg.
01:05:00.080 - 01:05:49.280, Speaker C: This is just a taste of the types of things you can build on Uma. And we again consider it a really flexible platform for financial contracts and synthetic assets of all types. So what are we doing in this hackathon? In this hackathon, Uma will be rewarding $5,000 worth of the Uma token in prizes. The breakdown is going to be 3001st place, 1502nd and 503rd place. A unique and innovative thing here is we are actually going to have the Uma community vote. Uma token holders are going to vote using a snapshot page voting page to determine the winner of this hack. We'll distribute that link closer to the voting period, but it's a pretty exciting way for us to involve our community in judging your hack.
01:05:49.280 - 01:06:25.016, Speaker C: We have office hours that are shared in our Discord Channel and are also published on our calendar, which is publicly available. So some links about how we can collaborate, please use the Discord Channel. We will be active and prompt in responding to you. Follow us on Twitter, visit our website, check out our developer docs, check out our GitHub. We're entirely open source and would love you to pick through our code. And lastly, of course, I should introduce our team, the people that will be in our Discord and will be interacting with you. On our engineering team, we have Matt, David, Nick, and Chris.
01:06:25.016 - 01:06:37.730, Speaker C: And our community team. We have Clayton, Sean, Tom, Henry and Raya. Please ping us. Please reach out to us. We're here for you, and we're excited to see what cool stuff you guys will build. Thanks so much.
01:06:44.760 - 01:07:31.136, Speaker A: Awesome. Thank you so much. Hart, Uma has been a great partner for us, and as Hart talked about is in his video, we've seen a lot of cool projects over the last two years or a year and a half that have built on top of Uma, and some of them become really cool companies. For example, Potion that Hart just talked about. And we're excited for everybody to play with the Uma protocol for this event as well. So, next up, I want to introduce our next sponsor, and that is Isaac from Bloom. And we'll have Bloom talk about what they do, why they're excited to be part of ETH Online, and also share a bit more about themselves and how you can potentially win Bloom prizes for this event.
01:07:31.136 - 01:07:33.190, Speaker A: So I'll let them take it from here.
01:07:35.800 - 01:07:36.452, Speaker C: Hi, everyone.
01:07:36.506 - 01:08:30.532, Speaker D: I'm Isaac, the CTO of Bloom, and I'm excited to be here at ETH Online today to talk to you about what prizes we're sponsoring and what we're hoping to get out of this. So throughout this hackathon, we're sponsoring $5,000 in prizes, and we want to see projects that help us bridge the gap between the decentralized identity and decentralized finance world. I'll explain in a bit about exactly what we mean by that, but for most specifics, please join us after this in the Ethanline Discord Channel for details on the prizes. Today, Bloom has a consumer application that allows you to monitor your credit and pull in various identity information that you want to store and maintain and share locally. For developers, we have tools that allow you to request data from these users. So it's a simple concept of there's an application where users can get pre verified information and developers can request that from them. It's very simple to share this data.
01:08:30.532 - 01:09:15.696, Speaker D: Here's a quick demo of me sharing an ID document and other KYC information that Bloom has pre verified with an external application. You can see that on the screen. It's prompting me what exact data do I want to share, and showing me who it's going to go to. And on the right hand side of the screen, you'll see that the server has received my ID document and informed me of the verification status. It's very easy as a developer to get started. Here that QR code you can play around with right on our demo site, where you can specify exactly what information you want to request from the user. So this is what we've had for a while now, this system of verifying information and sharing it with the developer.
01:09:15.696 - 01:10:13.488, Speaker D: What we want to get out of this hackathon is understanding how exactly we get this data on chain. We have some specs, we have some ideas for how we think that this data can best interface with on chain lenders and just any smart contract. But we want to hear from the community on how it's useful and if our ideas are sound. So again, $5,000 in prize is to help us figure out these tough problems of now that we have this data verification system off chain, how do we get it on chain? A very specific example would be a smart contract that depends on knowing a user's country of residence. They could use a Bloom Verified ID document as a source for that data, exactly how that happens on chain. Please join us in Discord so that we can discuss it and we really look forward to seeing what you guys come up with after the hackathon. We are also going to start accepting applications for a series of grants to help us build out the next phase of the protocol.
01:10:13.488 - 01:10:34.220, Speaker D: The identity layer is something that we've been working on for a few years now, and it's gotten to the point where it's mature enough that we think that these connections between decentralized identity and decentralized finance are possible. So we have a lot of really exciting stuff coming here and we want to build up a community of people that are going to help us see it through. So thank you and see you in Discord.
01:10:39.380 - 01:11:16.170, Speaker A: Thank you so much, Bloom. So for all of you hackers who are interested in getting your product in the hands of other people, where there is a component of identity. And KYC Bloom is a perfect opportunity for you to integrate so you don't have to do the work yourself and really take advantage of all the work that the Bloom team has done themselves. So with that, we'll move on to our next sponsor demo, and that is from the Teller team. And they'll be talking about what Teller is and how you can use that SDK in your hack. So let them present from here.
01:11:18.960 - 01:11:23.132, Speaker C: Hi, Ethanline. We are Teller. And I'm mike the CSO.
01:11:23.276 - 01:11:25.068, Speaker E: And I'm Brenda, the CEO.
01:11:25.164 - 01:11:54.620, Speaker C: And I'm nick the CTO. And we're a decentralized Oracle network on Ethereum. But more than just an Oracle. We're a permissionless community of token holders, data providers, and validators. And together we put real world data on chain. How are we different than our competition? Well, we're actually decentralized and censorship resistant. We use proof of work competition to bring values on chain and we reward miners for participating and we secure it through a robust dispute mechanism.
01:11:54.620 - 01:12:42.248, Speaker C: So to tell you guys, just a little bubble what you might build here at this hackathon. So we're just kind of an Oracle on Ethereum. If you look at DeFi projects or projects that are currently on Ethereum, and look at the ones that need Oracle, so these are namely going to be stablecoins derivatives, insurance contracts, lending protocols, all of these things need access to off chain information and all of them use Oracles. So if you're building something and you need access to information that isn't natively on Ethereum, you can probably use Teller for a little bit on the bounties. So the first bounty is going to be just the best overall project using Teller. These are going to be some high quality projects and we look forward to kind of seeing what you guys build here. The next one is going to be the most creative use.
01:12:42.248 - 01:13:14.150, Speaker C: So if you have, say, some novel idea that something that hasn't been built on Ethereum before, maybe hasn't been built on crypto in general, it needs access to off chain information and can use Teller, we're excited to see it. And last but not least is just going to be the best implementation of Teller into a pre existing project. So this is where you would look at, say, a current DeFi project that's using a centralized Oracle or one that isn't very censorship resistant. You strip out that awful Oracle and you throw Teller in there and we'll give you a bounty for it.
01:13:14.600 - 01:13:17.940, Speaker E: Our motto has always been to make.
01:13:18.010 - 01:13:29.736, Speaker B: Things that build things that make sense, build things that you can build right now with the current technology and build systems that you want to be a part of, I can't wait to see.
01:13:29.758 - 01:13:31.620, Speaker E: What you actually build with Teller.
01:13:31.780 - 01:13:36.876, Speaker B: And our office hours are from nine to five Eastern time. Reach out to us if you need.
01:13:36.898 - 01:13:39.688, Speaker E: Any help or just want to give us some feedback.
01:13:39.784 - 01:13:41.112, Speaker B: Thank you and good luck.
01:13:41.176 - 01:13:42.060, Speaker C: Good luck.
01:13:44.800 - 01:14:25.290, Speaker A: Thank you so much. Teller, the whole team, I believe they're also on the chat here and we're seeing some of the other sponsors on the chat just interacting with all the hackers. So if you are interested in using any Oracle or if you need to do anything that requires talking to any other service off chain, teller is a great candidate for that and want to thank them for being a sponsor for Meet Online. So, next up, we have Ahmed from Biconomy and he'll be going over what they're able to offer as Biconomy as a protocol and how you can make your life easier by using their SDKs in your project. So I'll let him tell you what Biconomy is from here.
01:14:29.000 - 01:14:31.976, Speaker C: Hello, Eve Global. My name is Ahmed Belari and I'm.
01:14:31.998 - 01:14:33.012, Speaker D: From Team by Economy.
01:14:33.076 - 01:14:58.304, Speaker C: At by economy. Our mission is clear. We are simplifying web3 experiences. We're on the path to unlocking 99% of the wealth who are still not in crypto. So what are we doing exactly? We are a noncustodial gas efficient relayer network that is engineered as a transaction highway for cheap, reliable and secure transactions. We're not a layer two. Think of us as a layer one five for Ethereum transactions, and we are.
01:14:58.342 - 01:15:00.832, Speaker F: Actually compatible with layer two, such as.
01:15:00.966 - 01:15:05.364, Speaker C: Matic Network and Xdite. Our value add really lies in its.
01:15:05.402 - 01:15:08.372, Speaker D: Developer, friendliness and Rich feature set that.
01:15:08.426 - 01:16:00.048, Speaker C: Enables gasless metatransactions, flexible payments and transaction optimizations which have already powered AMMS, liquidity pools and marketplaces. We're super excited to join ETH Global and let me pass you over to my co founder Eniket, who's all the way in India to tell you how we'll be getting involved in the next couple of weeks. Thanks a lot, Ahmed. Hey guys, this is Anikit here from India and I, along with Team By Economy, super excited to be part of Heat Global and looking forward to contribute and learn as much as we can over the next couple of weeks. So, yeah, without wasting much time, let me dive deep into the bounty ideas that we have and also tell you more of the prices associated with them. We are issuing in total 4000 worth of prices and then that can be awarded to four teams with the problem statement as follows. The first problem statement is for $1,500 and it's lay two exits.
01:16:00.048 - 01:16:37.452, Speaker C: We're looking for a solution that can provide instant gasless exits from day two, where a pool of tokens can be maintained both on lay one and lay two. And we expect the entire experience to be gasless by using My Economy. So we. Are seeing a lot of projects trying or already building on lay two. But one of the major problem of exiting Silver is so by this problem we're looking for a team that can come up with a creative idea and solve that problem. The second Problem Statement is for $1,000 and it's for payment of fees in ERC 20 Tokens. We are looking for a team that can find a way of managing the risk associated with paying the transaction fees for the end users in ERC 20 Tokens.
01:16:37.452 - 01:17:17.100, Speaker C: Third problem statement is Biconomy Explorer. And it's for $500. And last problem Statement is an open idea. Guys, you can come up with any solution by using Biconomy in any space, whether it's DeFi gaming, anything that you feel like where Biconomy plugs the most or Biconomy suits the most. We expect you to be as creative as possible and we do have some extra points and bonuses for creativity as well. So here are a list of collaterals that we have from bunch of technical documents to articles written on Biconomy that can help you explore more ideas and more use cases and also some videos that can help you to do integration faster and learn more about Biconomy. Here's an awesome team guys.
01:17:17.100 - 01:17:43.910, Speaker C: I'll be mostly available in every activity that is happening by Biconomy on eGlobal for the next couple of weeks. Also we have other team members always available. We have the discord channels written over there so you can hit them up anytime, whenever you want, ask your queries, we are more than happy to help you and also we have office hours every Saturdays. You can book a slot with us and we are very much happy to help assist and brainstorm with you. So looking forward guys. Thanks a lot.
01:17:46.920 - 01:18:20.130, Speaker A: Thank you so much ahmed Aniket and the Biconomy team. For all of you who are planning on building something in DeFi, you know that the gas may be an issue, slightly an issue over the time. So do check out Biconomy for making that part a lot more easier for all of you. Next up we have Jessica from 1inchh Exchange and Jessica will be telling us about how 1inchh is excited to sponsor this event and I will let them take it from here.
01:18:23.690 - 01:19:04.850, Speaker B: Hey, I'm Jess Solomon and I work for an adventurous project called 1inchh. Our adventurous founders are busy building earth shattering DeFi tech. So I'm just going to take a quick minute here to explain to all you how you too could help us build earth shattering DeFi tech in this awesome ETH online hackathon that we're all a part of. So just a quick bit about 1inchh. We are a leading dex aggregator that's of course the 1inchh Exchange we're very proud of. Also a next generation automatic market maker, Mooney Swap, another cool one. And a team of DFI innovators.
01:19:04.850 - 01:19:57.410, Speaker B: So the MVP was actually built at the ETH new York 2019 hackathon by our founders Sergey and Anton. So we're a great example of how hackers can very quickly become sponsors. The first customers of 1inchh were actually our founders, Anton and Sergey. It was exhausting and inefficient for these superstars to manually check the best prices on all the DEXes. They, like all crypto users, needed an elegant algorithm to search every Dex for the best trading price and instantly deliver on that optimized trade. Of course, the solution came with 1inchh Exchange, a decentralized exchange aggregator that sources liquidity from various exchanges by splitting a single trade transaction across multiple DEXes. Quick look at some of our stuff.
01:19:57.410 - 01:20:27.820, Speaker B: In one year, we've executed over 3 billion in trading volume prices. Best prices on the market. That's the point of the Dex aggregator and the aggregation and some really amazing innovations. Chi Gas Token reduces gas prices on 1inchh by up to 42%. Super cool, very helpful. Pathfinder is a search algorithm for the most efficient swapping route. So basically how all the magic happens.
01:20:27.820 - 01:21:11.180, Speaker B: And I really want to talk to you guys about Mooney Swap because it is out of this world. Mooney Swap. We launched in August. It's a new automatic market maker to increase liquidity provider earnings. The Mooneyswap AMM revolution uses virtual balances to enable liquidity providers to capture profits otherwise captured by arbitragers. This slows down price changes to prevent Arbitrage traders from earning up to 100% the swap slippages. And here's an example of liquidity provider earnings on Mooney Swap, which you guys can actually look at on your own time to see just how beneficial this technology really can be.
01:21:11.180 - 01:21:51.574, Speaker B: And of course, the 1inchh mission solving problems benefiting the overall DeFi space in as many ways as we can. Our founders have been discovering vulnerabilities, saving people from losing lots of money and dramatic hacks redistributing profits to deserving parties like liquidity providers and saving people money on gas. All very beneficial. We're stoked to see our users living their best life because of our technologically advanced products, and we want you guys to help. That's why we have the 1inchh bounties. We have five K die in total bounties 2.5K for the overall coolest, one Inch hack, 1.5K
01:21:51.574 - 01:22:38.882, Speaker B: for second coolest, one k for third coolest. We've got some suggestions. Firstly, an embeddable 1inchh swapping widget that some of our favorite sites might want to add tools to help people launch IEOs on Mooney, with an emphasis on it being better for initial liquidity providers. Take profit and stop loss limit orders with Mooney Swap using Price Oracle since the price cannot be manipulated in a positive direction. A clue for you if e buy price on Mooney Swap is 310 die, then sell one WETH for 300 die. Prices cannot be improved by manipulation on moni swap. Bounty suggestions continue a way to automatically donate part of a swap transaction to some charity.
01:22:38.882 - 01:23:15.954, Speaker B: If you want to do that, a nice flowchart, which shows the complex swap paths from transactions on 1inchh, more user friendly UI for using 1inchh API, and use Mooney swap volume weighted oracles to do some crazy stuff. But be fearless. These are just some recommendations of things we would like to see. Of course, if you have a cool idea of your own that you're excited to build, then go for it. Be our guest. Innovate and here's some contacts for you guys. So hit me up on that 1inchh sponsored discord with your brilliant ideas and questions that I know all you folks have.
01:23:15.954 - 01:23:21.122, Speaker B: So thanks a ton everyone, and can't wait to see you all soon and see what you build.
01:23:21.256 - 01:23:22.050, Speaker E: Bye.
01:23:24.870 - 01:24:20.120, Speaker A: Thank you so much, Jess. This was a great intro to 1inchh exchange, and the best part about all of this is that 1inchh, for those of you who don't know, started as a hackathon project at ETH New York last year. So it's really great to see the 1inchh team giving back to the community and coming on as an official sponsor, making it easy for others to use what they've built to make their lives easier. So thanks again to one inch. Be sure to check out their SDKs and what you can do with the 1inchh exchange protocol and how you can integrate that into your own hacks. And with that, I want to move on to our last sponsor video for today, and that is Barney from Vega, and he'll be talking about the Vega protocol, and we'll kind of go into how you can use that in your project. So I'll let the Vega team share what they have to say.
01:24:26.870 - 01:25:21.166, Speaker C: Hi, my name is Barney Malarins, and I'm a co founder of Vega. Vega is a decentralized exchange, or dex, protocol that supports capital efficient derivatives trading on a fully onchain noncustodial order book. In 2018, when we started designing Vega, we anticipated many of the issues you see in DFI today, like front running or minor extractable value, the need for sustainable liquidity mining incentives, and problems with capital efficiency versus centralized exchanges due to over collateralization. I'm super excited that Vega is participating in ETH online, so I'm going to spend a little bit of time today telling you more about Vega and how you can get involved. First off, let's dig into some of the things that makes Vega a little bit different. Vega is the start of a new generation of decentralized exchange protocols. It runs on its own customized proof of stake blockchain, which gives the Vega designers and engineers the ability to optimize the whole stack for trading from the consensus layer to the APIs exposed by Vega nodes.
01:25:21.166 - 01:26:01.586, Speaker C: The protocol is primarily order book based, allowing for the most efficient price determination, but it will also support passive AMM style liquidity for those who want to support markets on Vega with their capital and earn yield the network's. subsecond block time means that even though Vega is fully decentralized and noncustodial trading is fast and responsive. It feels like using a centralized exchange. Vega initially supports futures with up to 100 X or more leverage for some markets. Vega is designed to make it easy for anyone to propose and create a market on the proof of stake network. But this is Ethon life, so I'm pleased to tell you that Vega works excellently with Ethereum. Vega was always designed to act as a kind of layer two.
01:26:01.586 - 01:26:42.106, Speaker C: All the assets traded on Vega start off on other chains, and the first integration for the Vega blockchain is with Ethereum. That means it'll be possible to connect MetaMask and send Ethan ERC 20 tokens to the Vega network for fast and completely noncustodial leverage trading. Once the Vega network is live and running, the Ethereum bridge will also eventually allow for DFI composability between products and markets on Vega and Ethereum smart contracts. And DApps in Ethereum will be able to deposit and withdraw tokens and trade on Vega just by calling methods on the Vega Bridge contract on Ethereum. As I mentioned, Vega is fast and fully featured. This is a screenshot of the current testnet. This trading DAP uses no central servers and relies on the same APIs that you'll have access to for this challenge.
01:26:42.106 - 01:27:23.622, Speaker C: It has streaming prices and order book depth and a full suite of market data and trading tools. But I'm also super excited to see what the community can build with these Vega APIs. The Vega blockchain exposes tons of detailed trading and risk data completely for free and to everyone. For example, you can find out at what price levels other traders might get liquidated, visualize the settlement cash flows between traders, or look for traders who are making lots of profit and try to copy them. So that brings us to the E online challenge. The judges are awarding $5,000 across three prizes for the most innovative, creative and exciting new visualizations you can build. With data from the Vega testnet, you have access to everything from margin movements to all orders and positions, from price monitoring, circuit breaker auctions to liquidations.
01:27:23.622 - 01:27:52.950, Speaker C: And of course, the balance is held by every public key. The judges would love to see colorful, novel and interesting visualizations of this data. Perhaps you'll show risk and leverage broken down by trader, or maybe capital flows are your thing. Perhaps you want to analyze the data and highlight market opportunities. Or maybe you want to use the data stream to generate procedural music and real time visualizations that show what's going on in a more stylized way. We recommend building something that works in a browser, unless that doesn't work for your idea. And whilst your entry can be a serious trading tool, that's not the only way to go.
01:27:52.950 - 01:28:30.226, Speaker C: And I'd personally love to see some Monarchic, psychedelic and Whimsical entries too, that embody the spirit of this community and showcase novel ways to illustrate and explain what's going on in the market. So that's the challenge. I'm really excited to see what you come up with, but remember, you're not on your own. In addition to documentation for the full APIs at Docs ethonline, vega XYZ, and even more docs and other materials available once you get onboarded to testnet, you can also join the community forums and get help or just chat about Vega and trading at community. Vega. XYZ. We also have a Discord Server, which you can join by the link shown where a lot of the Vega Devon leadership hang out, and we'll be happy to help too.
01:28:30.226 - 01:28:33.060, Speaker C: That's all from me. Looking forward to seeing what you create.
01:28:38.390 - 01:29:39.240, Speaker A: Thank you so much, Barney. For those of you who are interested in using Vega protocol, be sure to check out their docs and also talk to them in our Discord Channel. And there's a lot of cool features that you can now enable by using Vega, so be sure to give that a try and can't wait to see what everybody builds with all the DeFi protocols that I've presented today. So that was our last sponsored video for today and we want to move on to our rest of the summit and I'm really excited to actually welcome our next talk. And for our next talk, we're going to cover what it means when we talk about ETH one, ETH one point x e two, and how do all these things kind of merge together? And how do we actually make sense of all of this to kind of really get to understanding how we build Ethereum for tomorrow? And talking about all of this will be Danny Ryan, who is a researcher at the Ethereum Foundation. So I hope you enjoyed Danny's talk on how to make sense of everything Ethereum and I'll let him take it from here.
01:29:40.190 - 01:29:57.744, Speaker C: Hello. Thank you. Appreciate the intro. Let me share my screen. Okay, great. Thanks for having me. My name is Danny Ryan.
01:29:57.744 - 01:31:13.724, Speaker C: I work with the Ethereum Foundation on the research team. I spend almost all of my time working on kind of core consensus protocol upgrades, and that project is kind of encapsulated in what we call E two. And today I wanted to give you some context on what E two is, what E one is, what these things are in relation to each other, and how they kind of come together to be the future of main net. And if you take away one thing from this talk today, it's that the terms ETH one and the terms ETH two are a misnomer and imply a false sequentiality, they imply one being deprecated for the other, they imply some sort of migration. They imply something that not quite accurate. Instead they represent different layers of the stack, different layers of focus, different layers of optimization and R and D. And I'm going to get in and explain what these two layers are and how the vision of how they will come together in the near future.
01:31:13.724 - 01:31:46.740, Speaker C: So ETH One plus E two is Ethereum talking about the future of main net today. So what is ETH One? ETH One is quite plain and simply the Ethereum we know and love today. Again, if I could erase these terms and use something different, I would. Maybe we'll try to in the future. But ETH one is ethereum, warts and all. It is a single blockchain. It is run by a Proof of work mechanism.
01:31:46.740 - 01:32:58.860, Speaker C: It has tons of DFI activity, NFT activity, identity protocols, all sorts of really cool stuff and it's why we're all here. But concretely, we have implementations of this protocol, kind of accesses into this protocol and gateways into this protocol called ETH One clients. And really what is an ETH One client? Obviously it's an implementation of the protocol but we'll dig a little bit deeper for the purpose of this talk. I'm going to view it as it's consensus and its user layer. And its consensus is Proof of Work, which is actually a relatively simple consensus mechanism. That's one of the beauties of Proof of Work is that it is indeed simple from an implementation and software perspective. A lot of the complexity of the protocol, randomness leader election, dealing with the actual economic asset for the crypto economics that's all handled outside of the protocol in the sophisticated mining hardware, you end up with relatively simple rules and protocol verify some hashes, add up some difficulties and find the head of the chain.
01:32:58.860 - 01:33:53.440, Speaker C: In addition to what I would argue is a thin consensus protocol and software is a highly optimized user layer. When you think about all of the hard work that goes into optimizing Ethereum and dealing with the complexities of state and transactions and all of that, that's really in the user layer. And if you go and look at the diff in guess there's probably almost been no work done on the Proof of Work consensus algorithm for years. Go look at it. I haven't looked at it, probably pretty thin on what's going on there. Whereas all the work is happening on state sync, state management, transaction optimizations, EVM, execution and it's all really like the secret sauce here is how to get that user layer highly optimized. And so I mentioned some of these things, some of the optimizations, you hear people and some of the deep work being done on equal one clients are transaction menpol management.
01:33:53.440 - 01:35:10.500, Speaker C: There's riddled with security issues when people can send random transactions to you, dos, vectors, all sorts of stuff, transaction gossip, optimizations to optimize bandwidth consumption, efficient EVM, state transitions and state accesses. State writes, read and writes and a big one is the active state in Ethereum, quite large. And so managing that from how do you get it, how do you share it, how do you store it? A lot of effort goes into these types of things. This is an extremely oversimplified diagram that I've threw together of an Ethone client. You have the PDP network where you're communicating with peers and sharing information about the protocol transactions, blocks, state sync and you have this proof of work consensus which is at the top because it's kind of the brain. It's ultimately deciding what should be done at any given time with respect to finding the canonical chain, which blocks should be included and viewed as canonical. How should it manipulate the state with respect to that? And if you were producing blocks, if you're a minor, how to go about that? And then you have everything else, and everything else is a lot.
01:35:10.500 - 01:35:58.532, Speaker C: And everything else is again, where a lot of the hard work is done. Managing the EVM state transitions, managing the complex state and the state tree, managing the mem pool and all the complexities that come with that. And so that's neither one client and the bulk of the work is not in that proof of work component. A little side tangent what do we mean when we talk about e one X? E one X is generally a group of people on the internet. Like all these things, we're just random people on the internet focusing on R and D, on the user layer. So all those things, it's not an upgrade of that proof of work. Instead it's really all those other things how do we manage state, how do we manage transactions and execution and how can we make it more sustainable and how can we make it a better experience for Ethereum and the community.
01:35:58.532 - 01:37:03.450, Speaker C: So that's one x focusing on that layer to mention some of the things going on here. They're looking at upgrading the state. Try from this hexary try to a binary try for some efficiency gains stateless block processing as a method for managing the complexities of having a large and growing state so that we can have spectrums of different types of clients interacting the network that don't necessarily have to have all of the states account abstraction to increase open up some interesting types of applications. And some of the stuff I'm really excited about is some of the security implications of having account abstraction, being able to do tornado cash and that kind of stuff in a more secure fashion. Gas fee reform 1559 improving the UX of getting transactions included improving some of the security concerns around minor tractable value again, all in this user layer. So that's ETH one clients. Any questions? No, I'm sugar e two.
01:37:03.450 - 01:37:56.696, Speaker C: What is E Two? We talked about e one. What do we mean when we say ETH two? Really what E two is, is a radical upgrade to the consensus layer of Ethereum. When you look at all of the research for the past five years that has culminated into this E two project, all of the work going on in E two clients and all of the work in this layer and in this subsection of the Ethereum project is on consensus upgrades. Can we upgrade to a more secure, more sustainable and more scalable consensus mechanism? And that's what we mean by e two. And so, again, different layers, different separation of concern, false sequentiality bad terms, ETH one, e two bad terms. Maybe they're here to stay, but let's start thinking about them more as layers of the stack. So it's ultimately this is back, that crappy diagram of an ETH One client.
01:37:56.696 - 01:38:35.204, Speaker C: It's looking at that proof of work consensus mechanism and it's saying, can we do better? Again? Can we make it more secure? Can we make it more sustainable? And can we make it more scalable? Past five years of research, say a resounding yes. I just wanted to include this image because I thought it was pretty cool, pretty worthless slider than that, but great. Decide. Yes. So the plan is to move to a proof of stake and Sharded system, sharded consensus mechanism. And I'll talk to you a little bit about what that looks like. So what then is an E Two client? We have this piece of software called an ETH One client highly optimized user layer.
01:38:35.204 - 01:39:16.390, Speaker C: But what is an e Two client really? It doesn't touch any of that user layer stuff. It's really looking at that brain. What was that? Proof of work brain and it's swapping it for it's building out a proof of stake and sharded consensus. Like I said, proof of work. We get a lot of stuff for free because it's handled in extra protocol complexity. Whereas with proof of stake and a Sharded consensus mechanism, there's a lot of in protocol, a lot of software complexity to make that work. And so all of the work that's gone on in E Two clients in the past two years is to solve that problem, is to handle and manage the complexity of a proof of stake and Sharded consensus mechanism to zoom in into that brain right there.
01:39:16.390 - 01:39:51.696, Speaker C: We solved that problem. Or solving that problem through the introduction of a system level chain called the Beacon. Chain that manages Validators, manages the Core Consensus, manages a system level state called the Beacon State. Has its own P. To P layer, where it essentially manages gossip and communication of system level, consensus level items such as beacon blocks attestations validator exits, that kind of stuff. And ultimately manages is the brain for the consensus of rather than just one chain. My cat, of course, is here.
01:39:51.696 - 01:40:10.164, Speaker C: Rather than just one chain. ETH One, as we know and love today, managing the complexity and consensus of multiple chains. Then we call them Shard chain. So that's what an E Two client is. It doesn't touch the user layer. It's coming to consensus on. It's a sophisticated mechanism to come to consensus on things.
01:40:10.164 - 01:41:05.556, Speaker C: And obviously the stuff that we want to come to consensus on is things that are valuable to users and valuable user layer. But it is more of just a general mechanism to come to consensus. So then, like I mentioned, one of the things we want to come to consensus on is ETH One is the ethereum chain that we have today. And so the plan is to hot swap the consensus of ETH One at a point in the future with the consensus, with the consensus of an E Two client, with that proof of stake sharded consensus. So I've kind of implied and alluded to the fact of where we're going, but we have all this incredible work that's done in East One and on East One clients. GEF is a machine. Like there's awesome stuff going on, nevermind badass stuff going on, all these clients, lots of great work going on in that user layer.
01:41:05.556 - 01:42:23.632, Speaker C: And then in East Two we have incredible work going on in this consensus layer. And so the future of the ethereum stack from a node perspective is really the unification of these two pieces of software into a beautiful cohesive combination that each piece of software handles the sophistication of its designated layer. So let's drill into this image and take a look at what that actually is going to look like in the prototypes of this merge that we've been working on. This looks like an E Two client and an ETH One client, or as we might call it in the future, an ETH One engine running on the same computer connected via RPC. So that ETH One engine, that's that ETH One client diagram that we had earlier, instead of a little proof of work brain, it's opened up its consensus to be controlled via RPC, to be controlled via a remote protocol. Now the E Two client is running in parallel to this ETH One client and it's coming to consensus on things. It's driving, it's building that system level chain, it's building the shard chains and it's communicating to its local ETH One client the state of things.
01:42:23.632 - 01:42:53.336, Speaker C: The state of things from a system level perspective, being like, here is a new block. Rather than the proof of work saying here's a new block, it's saying, here's the new block. Oh, there's actually been a minor reorg here. Update your internal state. This is the new head. And really that E Two client becomes the driver, becomes the brain, whereas the E One client handles all of the user layer, complexities transactions, state sync, all that kind of stuff. This quick zoom in, these are just the two diagrams.
01:42:53.336 - 01:43:44.136, Speaker C: The E Two client controlling to the E One engine via this RPC and getting responses, sending requests, getting responses, a unidirectional protocol, the E Two client being the brain drives. And that simplifies this relationship between the software in the prototypes. There are prototypes of this unification of software and ETH One existing as a shard. Today in these prototypes, we have four RPC methods block production, block validation, block insertion and setting of the head. Produce block is similar to the Git work RPC call. Where on demand today? In ETH one. Where on demand you say, given all the transactions in your mem pool and given your current state, give me a good looking block to build on this chain.
01:43:44.136 - 01:44:16.224, Speaker C: Validate block is I've got this shard block. I do some base validations on the system layer, for example, validate the proposer signature and some other things. But then I say, hey, ETH One client, can you actually validate this with respect to all the user layer rules? Can you actually execute the transactions here and see that things turn out valid? And if so, return true. Great. Insert block. This is kind of a variant on validate block. It's really like insert it into that local ETH One block tree and updates the state and set head handles reorg.
01:44:16.224 - 01:45:08.124, Speaker C: So the E Two client, being the controller of the consensus, understands when the shard chains reorg and need to be reorg. So when you need to update the internal state of what's going on in East One and on that user layer, you can set the head there. Validate block can easily be modified to be stateless, and some of these methods can be stateless, and there might be additional methods that make sense to add. For example, the E Two client is aware of finality and so might tell the ETH One engine that it's time to you can prune these things. This has been finalized so the Ethan engine can be a little more proactive in pruning state and things like that. Okay, this ETH one E two merger work has largely been carried out thus far by Mic I l from TXRX at Consensus, and Guillaume with the Gas team at the EF. They've been driving these prototypes.
01:45:08.124 - 01:45:51.060, Speaker C: It's pretty exciting to see these two pieces of software come together and to see that we can then by keeping the user layer intact, we can leverage existing wallets, existing tooling to interact with that ETH One shard. So, for example, you can check it out. Mikhail has this out on Twitter. I'll retwist it later today. But he has a video of demoing the E Two driving a multi sharded consensus, there being an ETH One Shard and sending transactions with MetaMask unmodified MetaMask. Very cool. So the vision here is really to not modify, to make extremely minimal modifications to that user layer in this migration and upgrade of the consensus.
01:45:51.060 - 01:46:18.712, Speaker C: I got some cool stuff going on. Shout out to some of the quilt team. It looks like they're going to get involved in this ETH One E Two merger effort. Now that we have the base demo in place, there's plenty of work to do, a lot of fun to be had. And if this stuff interests you, please reach out in the coming months. There's plenty of fun stuff to do on the development and the research side. So we're working on the proof of work, proof of stake, hot swap.
01:46:18.712 - 01:47:07.320, Speaker C: Mechanics. So essentially on the live ETH One chain, how we can swap from proof of work to proof of stake safely. Looks like Mick Isles taking the lead on that and doing some R and D and prototyping validator deposits and withdrawals. Once you have the unification of the ETH One chain with the Beacon chain, we can handle validator deposits and withdrawals natively there's some stuff to think through there, especially like on the withdrawals push first pull, who pays gas, that kind of stuff. Shard data fee market at the initial merger there will be one shard chain of state and execution. That's the East One shard chain, but there will be many shard chains of layer one data and we expect this to be very valuable to applications, especially in the roll ups. We need to have a good way to pay for the data and essentially say I want this data to get on chain.
01:47:07.320 - 01:48:03.340, Speaker C: So working through those mechanics. Opcodes additions and reform due to the new consensus mechanism of the Beacon chain, there will be some system level opcodes that would be useful for user applications, namely checking what's going on with validators or even especially looking into recent cross links from different shards so you can make proofs against data and do cool roll up stuff. And some opcode reform. There are opcodes that will need to be thought through once they move into this new consensus mechanism. For example, there is the proof of work difficulty opcode where you can peer into the chain and see what the difficulty is. It's not quite clear what meaning that should take on once we've moved to proof of stake. So we need to investigate some of the existing applications and usages and try to move forward with the minimally invasive path.
01:48:03.340 - 01:48:45.408, Speaker C: So a lot going on. Again, if you're interested in this stuff, reach out. There's a lot of work to do and a lot of fun stuff to work on. So what about statelessness? One of the other major upgrade projects, and I mentioned this in the One X stuff to Ethereum is this major upgrade to the user layer into the State to move to stateless execution. Stateless blocks where essentially you don't have to have the entire state locally to process and follow the head of the Ethereum chain. Instead, bits of the State and proofs about them called the witnesses are included in blocks so that you can perform the execution without having the whole state. And this opens up a sustainable path to State management.
01:48:45.408 - 01:49:54.880, Speaker C: Ethereum in terms of where this fits into the E One, E Two merger, these things because of the separation of layers, can both drive forward kind of unimpeded by each other and there's not really a path dependency on one or the other. The merger can happen and then Statelessness or Stateless can happen and then merger. So we're driving forward on both and then when one's ready, we're going to do it when the other is ready we're going to do it in terms of the long term implications of not moving to statefulness on East Two. If we have Statelessness it opens up the opportunity to potentially have state execution on multiple shards. If we don't have Statelessness, we can't really open that up because all of a sudden you're going to be putting the burden of not just one state but the burden of many ethereum states on all validators to be able to process and validate things. So salesmith does open up opportunities in how the consensus layer and the user layer together grow. But in the initial merge, in the initial kind of immediate future they're path independent.
01:49:54.880 - 01:50:36.876, Speaker C: So what's the end game? I didn't know that Vitalik was going to post that excellent article on I think it was the Magicians forum this morning about a roll up centric map but something that I roll up centric path for ethereum. But this was something that I did want to talk a little bit about in the beginning of an ETH One E Two merge. We have State and execution on one shard. So we have ethereum like world on one shard. And we have a lot of data, a lot of L One data coming from all of the other shards. We expect it, as I said, to be very valuable to roll ups and to scaling in the immediate. And so we expect roll ups today on ethereum.
01:50:36.876 - 01:51:54.740, Speaker C: And one shard might I mean one just ethereum chain might provide a few orders of magnitude scaling. Then once you have 63 shards of data you can get another couple of order magnitudes of scaling. And so once we get to this merge place we're going to have many if we go down the path of roll ups we're going to have many orders of magnitude of scaling which would probably be sufficient for a long time. So the question really becomes we have one shard of State and execution and many shards of data availability and thus tons of scaling. Is it really worth? This is a question, I don't know the answer, but is it really worth at that point adding additional L One complexity to get another ten x 100 x in L One scalability? The end game for me is to get to this E 22 merger and get to Statelessness as soon as possible and at the same time to allow the roll up ecosystem to grow and to mature. I think at that point we'll have a lot better information on how, if and how to expand native execution beyond that initial one shard. And so the end game might look like one state and execution shard, many data availability shards, maybe a few state and execution shards and many data availability shards or the full blown state and execution everywhere.
01:51:54.740 - 01:52:16.880, Speaker C: But we'll see, and I think the next twelve months as the user layer E one develops and as the consensus layer E Two develops. And as L2 and the exciting roll ups develop, ethereums have become better and better. A lot of awesome, cool stuff going on and we're going to have better information on how to make good decisions beyond these initial developments.
01:52:20.180 - 01:52:20.736, Speaker G: Cool.
01:52:20.838 - 01:52:52.680, Speaker C: This is something near and dear to my heart. The merge of East One, East Two is, I think, one of the most important things going on right now. It's an exciting R and D project. Hit me up if you want to get involved and again, if you didn't take anything else away from this talk. ETH, one E, two misnomers false sequentiality. Instead they are separation of layers. That's the better way to think about it and it's really the most informed way that we can talk about upgrades here and talk about the different layers of the stack and the software.
01:52:52.680 - 01:53:07.010, Speaker C: So thank you. I appreciate it. I'm sad that we could not get together this year at DevCon, but I am excited. One day we will all hang out again together. Take care, everyone.
01:53:10.260 - 01:53:38.680, Speaker A: Danny, thank you so much for giving us an amazing overview. Looks like we have a few minutes before our next talk and we got a handful of questions that people have asked on chat. So I'll just kind of ask them to you here and we'll just relay them directly to you. So the first question we have is, I mean, you did a really great job at clarifying the separation of these layers, but if somebody holds ETH today, what do they have to do when ETH Two launches?
01:53:39.340 - 01:54:30.296, Speaker C: Right? So ETH Two is launching in phases. This is to manage iteratively, manage the complexity. It's a major upgrade of the consensus. It's a modification, it's a major upgrade of kind of the core economics of the system. So to do that safely, we're doing that in phases. What happens initially at phase zero, and what we expect to launch imminently is that we bootstrap this new system level chain called the beacon chain, in isolation from existing ethereum main net, meaning that proof of work module, that proof of work brain that's controlling ethereum, continues to control ethereum for now. And then when we're ready for the merge, when we're ready for ETH One to become a shard governed by E two, at that point, the existing state, the existing chain, at this point, before this point, it's going to be governed by proof of work.
01:54:30.296 - 01:55:00.756, Speaker C: And proof of work miners are going to build a Blux and then right after the same state, the same execution is going to be built and governed by the proof of stake validators. And so in doing that, there's nothing you have to do. Applications will continue to run, your ether will continue to exist on this chain. Essentially, it's that swap, I called it a hot swap of the consensus from proof of work to proof of stake. So chill out. Nothing to do unless you're a validator and you want to get involved early and kind of bootstrap this new consensus mechanism, that's great.
01:55:00.778 - 01:55:19.784, Speaker A: I think people are getting excited about hot swaps on the chat here for a live stream. I know this is going to come up again, so maybe just we'll ask this and clarify this one more time. But if somebody is a DAP developer, do they have to do something special? Once ETH One is merged into E.
01:55:19.822 - 01:56:24.960, Speaker C: Two, the intention is no. Because of the way that the state will continue uninterrupted and because of the way that Ethone clients will actually still be the interface into the user layer, the way that applications are built will be uninterrupted, will be the same. And the way that applications interface into that user layer for example, how you send transactions, how a web interface might use Web Three libraries that is uninterrupted because you use the same user layer APIs to interact with e one. Once it's integrated into e two. Something important to note is that although things can continue uninterrupted, capabilities will expand. So we'll have this new charted data availability layer which first and foremost we expect roll ups to highly leverage and use for scalability. But having a scalable data availability layer is kind of a very new thing in decentralized protocols and so we expect there to be a lot of innovation just with that in general.
01:56:24.960 - 01:56:37.268, Speaker C: So keeping your eye and your ear to the ground on developments there and kind of expanding what Ethereum can do rather than fundamentally changing the core is the goal here. Awesome.
01:56:37.434 - 01:57:00.330, Speaker A: And the last kind of two part or two related questions are how can somebody kind of keep up with what they have to do to Stake for Phase Zero? Where can they find out more of the latest information? And then on that same note, for people who are interested in understanding how to keep up with what's happening with all of you too, what is like the best place they can go to stay up to date?
01:57:00.940 - 01:57:37.764, Speaker C: Yeah. So on the Staking front, there's a testnet called Medasha, long standing testnet that's up and stable. If you want to get involved, you can stake on that. We have another dress rehearsal testnet called Zincin that will launch in about a week and a half. If you want to get involved in a Genesis event, which is kind of like one of the more interesting parts of Staking is really getting the chain up and running at the start and then if you want to follow I've been super excited about the ETH Staker community. They started as a reddit community and they have a discord and they're just like super supportive. Like people are asking questions, people are answering questions.
01:57:37.764 - 01:57:53.716, Speaker C: People are talking about hardware, people are talking about different software, security practices, all sorts of stuff. Check out that should be the gateway. Go check out the ETH Staker reddit and the ETH Staker get discord if you want to get involved. And the second question, sorry, just for.
01:57:53.758 - 01:58:00.428, Speaker A: Everything eids to on research or implementation or harvest updates, what is the best place to keep up to date on it?
01:58:00.514 - 01:58:50.600, Speaker C: So I do blog posts on the Ethereum blog every about seven to 14 days, depending on what's going on. They're called e two. Quick update, I try to keep you just informed on the little happenings. If that's not enough, then if you jump into E Staker, that is a great place to follow on the kind of staking side what's going on. And if you want to dig a little bit deeper, there's the ETH Research Forum. And something that has been really exciting development and become really fruitful over the course of 2020 is the ETH R and D Discord, where there's all sorts of conversation, talking about consensus, talking about there's psycho talking about consensus, talking about user, talking about ETH One, talking about E Two, and really technical fun discussions. It can probably be pretty intimidating at first, but lurk.
01:58:50.600 - 01:59:01.856, Speaker C: Just lurk see what's going on. Eventually you'll start figuring out what's going on and probably have something to contribute. So, yeah. Blog post, ETH, staker and ETH, r and D. This is great.
01:59:01.878 - 01:59:15.284, Speaker A: I think your blog Ethereum.org posts are super helpful because they kind of condense it for every day. People just kind of understand what's going on without having their heads fully integrated, the technical pieces. And before we kind of end one.
01:59:15.322 - 01:59:29.112, Speaker C: More sorry, go ahead. Ben Edgerton does what's new in East Two and it's so good. Mine are like short little like I just say what's going on real quickly. He gives some deep thought about what's going on in E Two. So check out Ben. Eddie too.
01:59:29.166 - 01:59:32.830, Speaker A: If I'm not mistaken, that is a substac you can subscribe to, is that correct?
01:59:33.840 - 01:59:40.670, Speaker C: Probably. I trust you. We'll post it on the chat for yes, it is. I forgot what that was.
01:59:41.600 - 01:59:54.370, Speaker A: One last question that we got from our YouTube chat before we move on to our next talk is, can you tell us what is the role or features relating to the BLS signatures in E Two and kind of what the significance of BLS is there?
01:59:54.900 - 02:00:35.650, Speaker C: Yes. So in a sharded Proof of Stake model, we have to do random sampling to send parts of the validator set to different shards at any given time to essentially validate subsections of what's going on. And in doing so, to make the random sampling safe, we need to have a ton of validators. So we expect from the consensus perspective for there to be like on the order of 100,000 of these little validator entities. Obviously a user might run a few of them or even many more, but this helps with the random sampling. But because of this random sampling, because of how many validators we have, we have tons of signatures. Like, they're constantly saying what they think is the state of the world.
02:00:35.650 - 02:01:24.204, Speaker C: And so to do this efficiently and be able to verify and process everything efficiently, we heavily rely on BLS aggregation. So anyone when people agree on something, which if they agree on the head of the canonical chain and the state of a Shard, then we can aggregate their signatures. You can actually aggregate things that don't agree, but what we do is we aggregate signatures that agree and then we bring that all on chain and thus we have much smaller amounts of signatures to process. It's a great cryptographic technique. Obviously there's a lot of networking complexity and stuff that comes out of here and how we actually get all the signatures together and aggregate them, but that's a different layer of stack. But BLS is awesome, aggregation is awesome and it's been a really crucial feature to get this thing to work in a Sharded context. Awesome.
02:01:24.322 - 02:02:07.072, Speaker A: Thank you so much Danny. And for those of you who are interested in Ben's newsletter, that's actually EEP Two news, that's the domain name. So you can just go there directly and stay up to date. So thanks again Danny, for giving us a great overview of how all the ethereum layers stack with respect to each other. And we can't wait for each two. So with that, what I want to do is get ready for our next talk. And this is going to be something interesting because we are going to try live coding on our summit and doing that will be Merrick and Bartek who will be showing us how you can do better trust driven coding for AMMS using Waffle and Filler.
02:02:07.072 - 02:02:18.708, Speaker A: So I'll have them kick it off from here and I'll let them share their talk and their demo. So please welcome Merrick and Bartek hire.
02:02:18.824 - 02:02:45.210, Speaker C: Hey, thanks for having us. We're just about to share our screen. Off we go. Okay, good. So hello everyone. It's absolutely great to be with you here today. And what we're going to do today is we're going to do a live coding of distributed exchange in automated market maker model and we're going to do it all in just 15 minutes.
02:02:45.210 - 02:03:20.724, Speaker C: So how are we going to do it? Let me perhaps hide that first. So how are we going to do it? We're going to use text driven development. So we're going to write test before we write our implementation and we're going to use ping pong per programming. So we're going to keep switching keyboard as we write the test and the smart contract code. The tooling that we're going to use is typical modern smart contract developer technological stack. So we're talking Waffle that was developed here at Itworks for testing smart contracts. We're talking Bidler for running the test and building the whole thing.
02:03:20.724 - 02:04:06.780, Speaker C: We're talking about Eturchjs that was created by Richard Moore for connecting to the test nodes test node. We're talking about type chain created by Chris Kator that gonna give us strong types in our typeships tests for the smart contracts within Solidity. And finally we're gonna start with Solidity template that was created by Raul Saturan. So what is automated market maker tax, you may ask? Well, the model is really pretty simple. Think about the single contract that represents a market per of ERC 20 token. We're going to call it Plume and Kibi for the purpose of this presentation. And you have really only two operations.
02:04:06.780 - 02:04:34.488, Speaker C: One, you can modify liquidity. In our case, just add liquidity. And the way to do that is simply call a function that's going to send some of both of the ERC token and those ERC tokens going to be added to both pools. For both pools, for both tokens. And of course, they need to be sent in the right proportion. And there is a second function used for trading. And again, it's very straightforward.
02:04:34.488 - 02:05:00.572, Speaker C: What it does is it allows you to send a little bit of ERC 20 token and add it to one pool while the subtracted amount from the second pool goes back to the sender pocket. So off we go. Okay, so here we are with our 15 minutes. We're going to talk fast, write fast. So pay attention and stay tuned. Wish us luck. Wish us luck.
02:05:00.572 - 02:05:58.840, Speaker C: So Mark right now is implementing our very first contract, which is going to be a market. It's going to be only the empty hollow of the contract and we're going to go straight to the test. We're going to write the first test just after initiating the file. So when it comes to tester and development, one of the hardest things is always writing the first test. Actually, as you're going to see, I think it's going to take us roughly half of the time to write the very first test. And many times when you're doing that, it comes the question what is the simplest test? What is a simple, reasonable test that you might write? So in our case, and in general, when it comes to working with smart contracts, the very first test is usually the one that deploys the smart contracts and checks if they were deployed anytlies correctly. Now, if we would like to write it all at once, that would be quite a lot of work and that would be quite a big step.
02:05:58.840 - 02:06:51.160, Speaker C: So we're going to start with just one very simple thing, which is deploying the contract without even initialization in the very first iteration. Now, what Bardik is doing is he's writing this very first test and here already comes time chain into play. So what we're going to do is what Bartek already did is he compiled smart contract. So the smart contract is compiled and the types and TypeScript for the smart contracts are already generated. In addition to those types, the factories for every single smart contract are generated. In that case, in our case, we have a market factory that can deploy the market. Now, the market factory has its type and the market has its type.
02:06:51.160 - 02:07:38.840, Speaker C: So when we're going to call functions on market, we're going to see both suggestions and errors if we try to do something that should not be happening. Okay, so we have our first already passing, which is only deploying the contract. And now we need to start implementing the actual functionality of the market. So we're going to pass two tokens to the market which are going to be exchanged on our market. And we're already going to create, of course, we need to import an ERC 20 interface from well known and loved Open Zeppelin. Okay. And probably we're already going to also implement getters for the stored pointers.
02:07:38.840 - 02:08:01.004, Speaker C: A little bit long, a little bit tricky, but that's right. And we're going to create two variables which are going to store pointers to these two assets that we're going to trace. We're going to make them public, I guess a little bit copy paste. Feels a little bit like cheating. Feels like cheating. But I think you will forgive us. Yeah.
02:08:01.004 - 02:08:21.764, Speaker C: And let's make it public. Good. All right, now let's try run tests. I think we need to reorganize the screen a little bit. Running tests. And we expect them to fail because obviously we're not passing the tokens to the contract. Let's see if that's true.
02:08:21.764 - 02:08:36.408, Speaker C: Well, we didn't even need to write a test. You can see when we compile the times, it already show us. Okay, deploy obviously doesn't have the arguments that it's supposed so now it's the time to implement token. That's right. Let's implement token then.
02:08:36.494 - 02:08:36.744, Speaker F: Yeah.
02:08:36.782 - 02:09:04.610, Speaker C: So we're going to implement this one really simply and really in a very straightforward manner. We're going to strike all the necessary pragmas, of course we're going to our contract, it's going to be a token we're going to import. It's going to be a new set, ERC 20 token, of course. And we're going to import an ERC 20 contract this time. Implementation, not the interface from Open Zeppelin. Again. Good old Open Zeppelin, always there when you need it.
02:09:04.610 - 02:09:28.890, Speaker C: Our good old chump. Yeah. We're going to call them ERC 20 constructor and ERC 20 passing the names. That's right. And for the sake of the demo, we're going to mint all the tokens to the user, to the deployer of the smart contract is going to be sender. And let's pass him 2000 tokens, for example. All right, let's make him rich today.
02:09:28.890 - 02:09:43.664, Speaker C: Is there anything? Yes, tokens. You're missing slash tokens. Oh, yeah. So that should do. Token. It's a singular value. That's right.
02:09:43.664 - 02:10:19.400, Speaker C: Good friends. Okay, so let's build it and it's going to be a proper time to deploy it. Almost there. Now that we have a token we need to deploy, we're going to deploy two instances of the same token. One that's going to represent Kibi, one that's going to represent Plume, and you probably already know how to do that, you need to use token factory again, type chain comes very handy. So up we go. Almost there.
02:10:19.400 - 02:11:04.712, Speaker C: Token factory being created. And once we have that, we can create two tokens. Now, note in line 16, we are using Biddler getzigner's method that allows us to get instance of the wallet that we're going to use to pay for deployment. And remember about good old Awaits, always there for you waiting. And yeah, we need to pass parameters. So I think we're going to have our very first test passing any second now. Let's see.
02:11:04.712 - 02:11:47.504, Speaker C: Okay, but we're not testing much yet. We kind of deployed a contract. Well, the test didn't fail, so it seems successful. So we're coming to the very first question, to the very basic question. What should the first test look like? And very simple answer is it just should check if the contract would initialize properly. So in our case, all it needs to do is to see if both contract variables were set up. So test is almost done and when we run the test, we expect the test to fail.
02:11:47.504 - 02:12:34.372, Speaker C: That's fine, we expect it to fail, but when it does, we can actually jump to actual implementation. Yeah, so that example might seem trivial, but actually this is a really important principle of the TDD method that you should, and you definitely should write your test before the implementation and that actually implicates many good characteristics in your development. Yeah, and I think that the implementation is already done so we can jump to the test and see it. And you can see Builder is doing great work for you because when you run tests, it knows if you change the contracts or not. So it's building contracts only when you need to boom, the very first test is passing. So off we go to implementing the contract. So let's write the first function.
02:12:34.372 - 02:13:11.724, Speaker C: I think you remember from the presentation we have a supply function. And the supply function that's right, is going to add liquidity to the contract. And as you can see, the flow is going to look like this for the whole demo and should look like this in the whole process. So you first implement the signature of the function, compile it, generate all the typings and then jump to the test and then continue with the implementation. Yeah. So now the question is what our supply function is going to do? Well, it's going to add liquidity to our market. So it's going to basically just transfer two tokens, some amount of the two tokens, the kivian plumes, to the Smart contract.
02:13:11.724 - 02:14:04.364, Speaker C: How are we going to test it? Very simply, we're just going to call the supply function, send a couple tokens here and there, and then we're going to check if actually the balance of the Smart contract has changed and is proper. Now, when transferring, ERC 20 tokens, always remember about calling the appro function, otherwise it's going to fail and boom, off we go. Almost there. We're adding the first Marcher, which checks if the balance is there. A quick trick, a little detail is we have expect to equal it's fine on the left side. On the expect side it's a big number and on the right side it's a number of a string because Waffle already does all the conversions on the fly for you. So I think the test is written.
02:14:04.364 - 02:14:23.256, Speaker C: We run the test and see if it's going to fail. And if it does, it's good. It means we can start with the implementation. And it is failing. And it is failing for the good reason. So we're starting with implementation and it's going to be really straightforward. It's going to be just calling the transfer from function two times.
02:14:23.256 - 02:14:54.944, Speaker C: So one first time on the X token, we're going to transfer tokens from the message sender from the tokens donor to the address of the market and we're going to pass the X amount. And also we're going to do exactly the same for the Y token. For the Y token, I'm going to just pass Y amount. Okay, here we go. Let's see if that's going to succeed. So I think we're coding now for almost ten minutes. And if the test going to succeed, we actually have a working initialized contract with the very first function.
02:14:54.944 - 02:15:20.810, Speaker C: I know there is still plenty of things missing, but let's now jump straight to the second function and it's going to be a trade function which is going to exchange our assets. So we start with the signature. We're going to pass one argument. You need to type it. Yeah, that's right. And we, for the sake of the simplicity, are just going to pass one argument, which is going to be the amount of tokens we intend to sell. And we will allow only trading one way.
02:15:20.810 - 02:15:46.980, Speaker C: In real solution, you would need to have function that trade both ways. But again, just 15 minutes. Quick demo. So we're going to simplify a couple of things. I think we're almost there. So we're writing the test for the second, for the very second function out of two. So you see that Bardak has to build a contract because the environment didn't see the types.
02:15:46.980 - 02:16:30.032, Speaker C: So that's little annoying thing here, but it's worth investing this extra couple of seconds into compilation because it really helps writing the test layer. The trace function is really similar to supply function. The only difference is it doesn't just receive the tokens of two types, it receives the tokens of one type and sends the tokens of the second type back. So you can see the test doesn't differ that much. And as you're going to see in a moment, the implementation is not that very different as well. Well, what are we doing with DeFi all day long? We're just passing tokens around. Right? So that's exactly what we're going to do.
02:16:30.032 - 02:16:57.764, Speaker C: This time, let me just write the test. Okay, so we expect that the exchange is going to gain 100 tokens, 1000 kiwis. So exactly the amount that we pass to the exchange and we expect the balance to drop below the 2000 for the second token. So the test is failing for a good reason. So we implement. Yeah. So the implementation goes as follows.
02:16:57.764 - 02:17:42.936, Speaker C: First we transfer the tokens that we intended to sell again to the market contract, and then we transfer from the exchange. So the exchange is going to call the transfer function on the token and yeah, what amount is going to be so we're going to go with something really straightforward and really simple, just because the time isn't our best friend today. And it's going to be a ratio of the token, y token supply gathered, y token liquidity gathered on the address of this very contract, this market, and it's going to be divided, it's going to be a ratio. So we shall divide this. Yeah. And I know what you're going to say, that not using SafeMap is not how you do things. That's fine.
02:17:42.936 - 02:18:00.184, Speaker C: This is not production demo, this is demo that shows you how you can code in the hackathon, but also if you have more time, it's a very good way to actually build a production code. Both ways you very quickly get into something that is working and that is something that is very stressed. So boom.
02:18:00.232 - 02:18:01.084, Speaker F: Guys, we did it.
02:18:01.122 - 02:18:30.008, Speaker C: It's already working. It's the, ERC, 20 market. I think we still have a little extra time. So let's do something extra. There is plenty of details missing, so let's start with good old practice. That every single important method that you call on the blockchain, every single function supposed to emit an informative event so that you can gather the data outside of the blockchain, analyze them. So we're going to start again with a failing test.
02:18:30.008 - 02:18:48.572, Speaker C: We're going to assume that supply going to emit an event. We want to see it failing before we actually implement it. I have a hunch that's going to fail and it failed. And it failed for the right reason. That's right. So right now we're adding the event to the contract. It's going to be against pretty simple.
02:18:48.572 - 02:19:24.600, Speaker C: It's going to be just a supply event with two UN passed that's going to signalize. And in the supply function we're going to emit them supply with X amount and Y amount. Okay? So that should the cool thing about per programming is if you make a stupid mistake instantly, the second person can see it. We're running the test now and let's see if it's going to be successful. I think it's going to be any second now. Three, two, one and boom. It's working.
02:19:24.750 - 02:19:26.072, Speaker F: And we still have time.
02:19:26.126 - 02:19:53.920, Speaker C: So let's implement something extra. So we don't have any validation, so let's do validation. In reality, validation code in smart contract is oftentimes as much as half of the code or even more. So let's do that. Let's implement at least one require. We're going to do a very simple require for today. We're going to focus on reverting on trade function.
02:19:53.920 - 02:20:27.256, Speaker C: If it gets your token. Obviously if someone is sending zero tokens to the trade function, that sounds like an error. So we have a code. Let us see if the test fails and if it fails for the right reason and it should. Let's see it fails and it searched for the right reason. So now we say we require X amount to be bigger than zero and if not, then this is the message we would like to it's a double quote. Double quote automatically fixed.
02:20:27.256 - 02:20:49.916, Speaker C: Let's see if the test will pass. Right now I think it's going to pass. What do you think, Bart? Yeah, I think that we are doing really good actually. We could have just now started all adding all these bells and whistles, some fancy formulas for prices, et cetera. But for the sake of reasons, I guess we're good. I think we're good. I know what you think guys.
02:20:49.916 - 02:21:12.356, Speaker C: There's plenty of other things using SiteMark, all the validation and all the stuff. If we only have another 15 minutes, I'm pretty sure we could do a big majority of that. Yeah, and actually if we did this in only 15 minutes, imagine what you can do in half a day or one day of hackathon. I think it's a month actually. Yeah. So this way or the other, quick recap what happened. We use waffle.
02:21:12.356 - 02:21:54.084, Speaker C: Waffle has all these great markers, the two of them you've seen. So expect to emit with Arcs which allows to easily check if particular events were emitted by smart contract. Expect to revert WIP which allows you to see if the function reverted and reverted for the right reason. And there's plenty of others. I'm going to just show you one more which is expect to be called on Contract Whip which allows you to check if your original function that you called also did other calls to other smart contracts and if they were done with proper arguments. And Waffle also have plenty of other features. I would like to raise your attention just to one more which is Mocking.
02:21:54.084 - 02:22:32.064, Speaker C: Mocking allows you to deploy dynamic mock smart contracts. That is a mock smart contract on the chain and dynamically from the smart contract sorry, dynamically from test allows you to define the behavior of the contract, define the behavior so that you can easily test in isolation. We also use Biddler for compiling and for testing. Additionally we use Biddler EVM which is the fastest test EVM that is available on the market. Biddler has plenty of great features. They have automatic verification on netterscan. With single comment you can upload your code and get it verified.
02:22:32.064 - 02:22:56.860, Speaker C: And get it verified on netterscan. Very useful for hackathon. It has console log for solidity which allows you to quickly debug things. And I want to tease. There is a big announcement coming next week so if you do anything related to DeFi or anything related to touching smart contracts that are already deployed on the blockchain, well stay tuned. It's coming. It's really going to be bigger.
02:22:56.860 - 02:23:18.050, Speaker C: Yeah, the presentation is going to be available online so we put all the links here and I think we still have a couple minutes for questions. Let us know if you have any.
02:23:20.260 - 02:23:55.840, Speaker A: There we go. I will just going to kick start this. So thank you so much for this amazing live session. I'm glad that we were able to get something done live without Murphy's laws coming in place. We have a couple questions coming in so anybody who's listening on the chat feel free to ask the questions right on the chat itself. But our first question is to your knowledge is there a good step by step visual debugger that can be used while running tests and if so, what do you recommend people do? And the question also points out that the one for Azure needs Ganache to their knowledge.
02:23:56.740 - 02:24:26.730, Speaker C: Here is the thing, there might be but we are so used to doing test driven development that we never really use the bugger. We never actually even use console log. I think maybe occasionally because we write so many tasks that when they fail we almost instantly know what was the reason. What was the reason? So on one hand we would like to advertise like it's a really cool way of creating smart contracts. On the other hand we encourage you to explore because I think some people are doing some interesting things we just never kind of look into them.
02:24:29.340 - 02:24:48.720, Speaker A: Awesome. So we're waiting for a couple of more questions coming in. I just have to relay them with our live stream, sync and lag. What other tools do you recommend that people try out if they are interested in just learning or being a better solidity developer?
02:24:49.060 - 02:25:33.996, Speaker C: Well, I think the stack that we presented is very good for actual coding, whether it's on hackathon, on production, if you just want to get into the thing. I think there is remix. Remix, yeah. And there is also what's the second one? I think there is now on Ethereum domain there is some kind of what was it? I don't remember anymore. We can try to find it quickly. So there are great tools online that we encourage you to explore and maybe we will just leave it somewhere on the chat. Yeah, but these are again like online tools but when it comes to the tools that you can actually use in your local developer environment I guess what.
02:25:34.018 - 02:25:35.608, Speaker F: We'Ve shown is the state of the.
02:25:35.634 - 02:25:48.852, Speaker C: Art for today in our opinion I guess. And we encourage to explore Biddler and we encourage to explore Waffle and all the other tools because there's plenty of features there that help in everyday work.
02:25:48.986 - 02:26:02.810, Speaker A: Yeah, great. The last question we have is what do you think is currently missing from the Ethereum Developer Suite right now, and what will be your wish list of really great dev tools that would make everything easy for everybody?
02:26:05.260 - 02:26:47.012, Speaker C: Well, I think nothing comes to mind. I think there's a lot of polishing on features that we already have. So for example, tests are running pretty fast now, but I think they could be even faster. I remember originally tests were much, much slower. I think. Also we were just discussing internally, the watch mode would be interesting. We also thought about some deployment tool that will help you organize your deployment scripts, maybe in some declarative manner instead of the imperative one like similar to the tools that you see in the DevOps world.
02:26:47.012 - 02:26:56.024, Speaker C: We think deployment got much more complex than it was a year or two years ago. So deployment is potentially a space. Yeah.
02:26:56.222 - 02:27:08.620, Speaker A: Awesome. We got one more question on our live chat, which is, to your knowledge, what is the best way to integrate your contract with existing DeFi protocol without directly testing on production?
02:27:10.160 - 02:27:17.504, Speaker C: The answer is you need to wait for big announcement from Vidler that is coming next week. So definitely follow those guys.
02:27:17.622 - 02:27:17.856, Speaker F: Yeah.
02:27:17.878 - 02:27:35.940, Speaker C: And definitely this is going to be the answer, but we don't want to we don't want to spoil it from Nomic guy. So Nomicloud, the company behind Biddler that is doing a great job developing this whole Biddler solution and also the whole ecosystem around it.
02:27:36.090 - 02:28:08.370, Speaker A: No, that's wonderful. We can't wait for the Biddler team to also announce this on our discord. They've been a great help to eat global over the last few months. So with that, I want to thank both of you for taking us through this live demo and giving us time to showcase how you can actually really do good TDD. And what we'll be doing is we'll be taking a short break for the next five minutes and then we'll go back on track with our next talk with Sam and Ryan. So we'll just meet everybody else in five minutes and I'll see you soon.
02:28:08.900 - 02:28:11.970, Speaker C: Thank you. Yeah, so thanks for having us. Take care.
02:33:07.470 - 02:33:39.534, Speaker A: Awesome. So hope you enjoyed a really quick break with some lo fi beats and we are good to go on our next talk. So I'm super excited to welcome Sam Richards and Ryan Cordell. We're going to be talking about the new Ethereum.org developer portal. Sam and Ryan have been very involved in kind of rebranding and bringing Ethereum.org to be a lot more user and community friendly and they have a lot more things planned for all of us and just the ecosystem.
02:33:39.534 - 02:33:51.190, Speaker A: And they're going to be sharing everything that they have in the works, especially about the developer portal today. So without further ado, please welcome Sam and Ryan. And I'll let them kick off with their presentation.
02:33:54.350 - 02:33:54.810, Speaker C: Awesome.
02:33:54.880 - 02:33:59.180, Speaker H: Thank you, Kartik. And thank you, Ethanline. Good to be here.
02:33:59.790 - 02:34:00.540, Speaker C: Hello.
02:34:01.550 - 02:34:56.400, Speaker H: So what we want to spend the next call, 20 minutes or so talking about is Ethereum.org. And hopefully provide some resources to all you hackers out there who are looking to get up and running with ETH online Hacktober this month. Give you some idea behind just our vision with this and the community behind it and potential ways that you could all get involved if you so choose to. So, yeah, first question you might be asking is, who the heck are these handsome young men? So, Ethereum.org, in case you didn't know, it's a public website. It's completely open source. All our code and content is on GitHub and accessible and editable by just about anybody.
02:34:56.400 - 02:35:40.140, Speaker H: And we're proud to say there's been hundreds of people at this point who have contributed to the content, code and translations of the site. So definitely a lot of faces that won't get acknowledgement today. But Ryan and I I'm sam what we'd call the lead developer of ethereum.org. And Ryan here is our lead content designer. So we're two of the folks, I guess, who are fortunate enough to work on this full time with support from the Ethereum Foundation. And we're two of the heads, I guess, you can yell at on Twitter if you find any bugs or issues. But yeah, again, whole community behind this website.
02:35:40.140 - 02:36:36.938, Speaker H: So thank you to everyone who's contributed so far. What did we set out to do with Ethereum.org? So, most of you developers out there, I would imagine, are familiar with the Mozilla Developer Network or Mdn. And this is an area where we found a lot of inspiration for what could Ethereum.org be? It's an open source community. It's like a completely open wiki with a pretty great mission to basically just make the web and its technologies more open and accessible to everybody. So as we kind of went through our journey of like, hey, crypto is inventing so many things and innovating in a lot of spaces, but content and education probably doesn't need to be one we innovate in dramatically.
02:36:36.938 - 02:37:36.314, Speaker H: Where else can we look for for just communities and projects that are doing this stuff really well. And yeah, I'm sure you've stumbled across Google in for answers as a developer and hitting Mozilla Developer Network. It's just become the mecca of content and education for web developers in terms of reference, docs, tutorials, learning resources, executable, code examples, all that jazz. So as we were brainstorming rethinking, how could we revamp Ethereum.org? Hopefully you'll see that this was a strong inspiration for us and shout out to the Mdn team. We had the pleasure of talking to them, getting some ideas and tips on how to help bootstrap this type of open education community. So what is the new developer portal and the resources on Ethereum.org?
02:37:36.314 - 02:38:20.320, Speaker H: We'll quick through a live example. We encourage you to go check out Ethereum.org and see for yourself. But a big kind of insight we had from developer interviews and just talking with people in the space and developers in generally everyone doesn't learn the same way, right? Some people like to read through the reference documentation. Some people want to just hop in and start experimenting and learn by doing. And some people want to get a local development environment set up, pull it down, feel it in their own computer and environment and go from there. So you'll see, these are like the three main journeys, at least for now, that we've tried to focus on and provide resources for.
02:38:20.320 - 02:39:44.582, Speaker H: And we talked about how Mdn was a big inspiration for us. Just to give a little more context on what were the problems we identified or what are we trying to solve, what are we doing here in the first place for a lot of you developers out there? I know I personally went through this as a front end developer trying to get into the Ethereum space. I think ultimately it comes down to just an information problem, right? Like the ethereum ecosystem. It's so rich and diverse and incredible and there's so many community resources, but that does lead to just a little bit of disorganization and you end up with a lot of different information silos. And as someone new to the space who's just trying to google around and find a source of truth, we did find some friction with say, the multiple community maintained wikis a lot of overlapping information, not really knowing where to contribute, necessarily running into outdated stack overflow answers, finding tutorials that were outdated with really no way to help update them. And a big one is translations. We now support over 30 languages on Ethereum.org.
02:39:44.582 - 02:40:48.990, Speaker H: We have experimented with some off site translation initiatives to help translate third party content, but we found it's just a lot easier to get our community galvanized around just translating one main source. So that was a problem we thought we were uniquely situated to solve as Ethereum.org. And if you do remember the earlier days of Ethereum.org, there was definitely room for improvement. What our developers page was, was essentially just a big wall of links that at least pointed people to a lot of the projects in the space that are building out a lot of great open source technologies and solutions to make developers lives easier. But it was really hard for someone to kind of piece all the different puzzle pieces together and there wasn't really much background context. So a lot of what we were trying to do is just set a base level of understanding on the site.
02:40:48.990 - 02:41:38.954, Speaker H: Hey, instead of just looking for smart contract testing tools, getting some background on what are the available options, what does it even mean to test a smart contract, what are the different ways of going about it, all that stuff. So the community was very vocal, very helpful in identifying what aspects we could improved and hopefully with this release, we're getting closer to something useful. All right, so let's take a quick look at it. If you go to Ethereum.org, you'll quickly find the developer section. This is what we call, I guess, the homepage of this portal. Here are the three kind of pathways to get started, which I just talked about, that we'll check out a bit.
02:41:38.954 - 02:42:27.390, Speaker H: So say you just want to read up on some core concepts, get a sense of the documentation. What we've built out is kind of just the foundation of a lot of Ethereum specific documentation for primarily DAP developers at this point. So you can get a sense of, hey, if you're coming to this and just want to learn how Ethereum works at a technical level before building a DAP, you can do that if there's a specific topic you're looking for. Say you just want to learn about smart contracts. You want to see some code examples that you can copy and experiment around with. This is the place to kind of come and check out. You will see as you're poking around, we do call out.
02:42:27.390 - 02:43:27.610, Speaker H: A lot of the content is incomplete. And the way we look at this is it's pretty much always going to be a work in progress. The Mozilla Developer Network folks gave us some really good advice. In this area, you don't have enough resources to write all the content, but what they found was a successful method of just create the page, acknowledge that something is an important topic and just tell the community you need help with it. So one thing we've really tried to make as frictionless as possible is if you are an expert on testing smart contracts, with a click of a button you can hop into GitHub, you can see the resource, you can edit it directly and open a pull request and get it deployed to the site, ideally within a day or so. So that's the kind of community and environment we're trying to create. Ryan and I are a very limited resource of knowledge.
02:43:27.610 - 02:44:29.526, Speaker H: Thankfully, we've had a ton of people already helping out, but we got a long way to go in terms of our ambitions. So, yeah, if you're someone out there who wants to participate in Hacktober, want to take a little break from your ETH online project, feel free to come our way. So going back to the other just like, different avenues people could learn about Ethereum, we tried to build out a whole tutorial section, areas that you can filter through, like, say you want to learn about, ERC, 20 tokens. You can click around, you can find community developed tutorials straight on Ethereum.org. Here you can see we tried to make it easy to submit a tutorial. And the reasons for this, somewhat like I mentioned, is really trying to give more exposure to a lot of these community developed resources. There's a ton of amazing tutorials out there.
02:44:29.526 - 02:45:39.338, Speaker H: Unfortunately, not all of them are going to pop up as the first result on Google. When you're poking around and for the ability for the community to see a typo, see an outdated version of the Solidity compiler and to be able to edit that page and update it. We're just hoping this is a good way to kind of just maintain keep these resources fresh and up to date and translate them as well, which we talked about. We built out a Learn by coding section, still very young and early, but giving you the ability to find, hey, what are these tools from the community where I can hop in and test out some code without doing any sort of setup whatsoever. Interactive games. Some of these you guys are probably familiar with, but what are different projects and learning resources where I can just get up and going and play around? And finally a big piece of feedback we've gotten and I know I've struggled with, is just like, okay, I have a project idea. I just want to get up and running with a local development set up.
02:45:39.338 - 02:46:09.960, Speaker H: How can I do that? This we have a lot of ideas to improve this page, but for now, we're hoping this is helpful for you from day one as a hacker looking to get up and know what are projects that I can just grab, get cloned, yarn install, and I'm off to the races. So that is the portal as it exists today. Yeah, feel free to check it out and I'll pass it over to Ryan to talk a little bit about the future.
02:46:11.450 - 02:46:16.614, Speaker C: That was a great little whirlwind tour that you just gave Sam. Thank you. Yeah.
02:46:16.652 - 02:46:18.440, Speaker H: Hopefully not too fast for everybody.
02:46:19.450 - 02:47:11.374, Speaker C: No, it's good. Yeah. So I just want to chat a little bit about, I guess, our thinking about the future when it comes to this sort of initiative and the overarching design and vision that we have. So as I think you'll have seen from going through the platform just then, this is very much sort of a foundation for this platform. We definitely want to do some things around, bringing more Web Three into the space. So not just sort of telling people about how to write smart contracts, how to test them with code examples, but actually bringing as much of Web Three into the learning experience as possible. So actually integrating parts of ethereum.org
02:47:11.374 - 02:48:17.120, Speaker C: with web3 technologies. And as Sam has touched on, this is definitely designed to be a community initiative. We want to build up very much like the Mdn inspiration that we spoke of at the beginning, an army of devoted contributors who want to help us promote Ethereum education, want to sort of spot errors, improve things as much as possible. This is something that we're actively working on in terms of thinking about how do we build up this community around this platform. I think a third point that's really important to talk about is this idea of continuous iteration in the web, especially in terms of just content. There's this idea that once you publish something, that's the job done. We don't think like that and we have a team in place and we're asking the community to help us with this as well.
02:48:17.120 - 02:49:01.340, Speaker C: But this content needs to live and breathe. Ethereum moves at an absolutely blistering pace and we need the help of everyone to make sure that we have this information that helps everyone and is accurate. And we have a team in place to help build on this platform from like a UX and design point of view as well so we can build out new features as and when they become sort of necessary based on community feedback and stuff. So we want to make sure this is something that we're focusing on for the future. We haven't just launched it and wiped our hands of it, et cetera. Next slide, please. Thank you.
02:49:01.340 - 02:50:04.074, Speaker C: But there are definitely some challenges when it comes to creating something like this. Ethereum.org is in this very sort of unique spot where we want to be as sort of agnostic as possible. There's a lot of amazing work that's done in this space, and it's very much a constant battle with a project like this in terms of how much you should speak about certain projects over other projects, because there's also this desire to provide the best experience to the reader or to the user at the end of the day. And there are projects that are better funded and better have more people actively working on them. But there's a real balance that we have to strike in terms of being opinionated versus agnostic in that sense. I just mentioned it, but I think community engagement is a massive challenge working out ways to incentivize the community to contribute to this effort.
02:50:04.074 - 02:51:26.566, Speaker C: I think everyone could admit that they would love a really robust set of resources like Mdn when they start out. And I think we need to figure out ways to make sure that people are sort of incentivized to help out with this effort and to get involved as much as possible. And finally, I think this is a peril in general with open source technology, but making sure that the information that we do put out there is accurate and is helpful and trying to encourage as many people, many as experts that are out there as possible to help us ensure that the information that we're supplying is accurate. And we have a QR code there on the screen which should link to our discord. So if anyone out there who's watching this or listening to this right now has any thoughts or wants to get more involved, please do jump into our discord and let us know. Yeah, so I wanted to put this slide in not only because of my love of the film Field of Dreams, but I think this perfectly epitomizes our stance on this. We on the Ethereum.org
02:51:26.566 - 02:52:26.960, Speaker C: team understand that we're a very small team. We have expertise in design and development. But there's you guys out there hacking today and for the rest of the month that have the real expertise and knowledge when it comes to building with Ethereum. And we wanted to make sure that we built out a platform and the foundations for something that makes it very easy for you guys to come in and help us and help the rest of the community and really embody that sort of open source spirit and make sure that we take this in any direction that the community needs and that we realize that works best for the ethereum community. Because I've tried to stress this is very much a community initiative, open source. We want to help as many people start building with Ethereum as possible. So, yeah, I think the field of Dreams Energy works quite well.
02:52:26.960 - 02:53:40.790, Speaker C: So if you are wondering how you might be able to help, I have noted it all down in this one handy slide. So take a photo if you're feeling generous. I think the main ways that we are asking for help at the moment is generally around contributing content. If you have expertise on any of the topics that we spoke about, I mean, you might not have seen them all from the sort of quick demo that we gave, but pretty much any part of the Ethereum development stack or the background of Ethereum technology, we need content for. The content can always be improved and tweaked. So if you have expert knowledge on any of those or a desire to sort of get involved and start writing content on any of those topics, let us know. As Sam showed you, there's like a bunch of tutorials, so maybe consider instead of considering popping something on Medium or Hacker Noon or whatever, we're now accepting submissions of tutorials on Ethereum.org.
02:53:40.790 - 02:54:45.830, Speaker C: We will be getting them translated as and when our sort of translation cycle happens. But it's a really good place to sort of get your content out there. We're not just open source in the terms of the content on the site. We welcome ideas on the design, the UX, if you have any insight in terms of research, if you have any insights about how Ethereum developers learn or anything like send us your ideas and we can work together to improve this platform and make it a better way for new devs to enter the space. Again, one of the challenges we have is the checking of information. So any reviews of content on the site or of open PRS is massive for us. Everyone that contributes to a page is credited on that page within these developer resources.
02:54:45.830 - 02:55:31.480, Speaker C: And we're working on ways to properly credit people and incentivize more feedback. So we definitely would be very grateful. And we're working on ways to make that a. Better experience for everyone and finally send it to your friend. If you've got people that are interested in building with Ethereum, if you've got friends who are already building with Ethereum but have never been to Ethereum.org, I think it'd be amazing if you could send them our way and give us any feedback that they have. This is the way that we can learn and improve and make this the best possible platform for developers that we possibly can.
02:55:31.480 - 02:56:02.130, Speaker C: So, yeah, that's a really quick overview of the last two or three months of our lives. And also the new developer portal on Ethereum.org. Again. There's the QR code. If you have any questions or thoughts or ideas like, yeah, jump in and let's chat about it. We're also obviously in the ETH Online discord. There's our handles.
02:56:02.130 - 02:56:20.360, Speaker C: We'll be around for the entire hackathon. So if you have checked it out and there's any information that you're after that we're missing, let us know and we can try and make that happen. But yeah, other than that, thank you for having us. And if there's time for any questions, we'll happily answer them.
02:56:23.070 - 02:56:49.460, Speaker A: Thank you so much, Sam and Ryan. This is great. So we have a couple of questions coming in. The first one is just in general, how do you collect feedback for what should go on the Dev portal? Are you kind of waiting for people to email you about things that they would like to see or is it just entirely relying on the community? Is there a wish list that people can kind of point to where they can just get really cool and really updated documentation and how do you think about that?
02:56:51.270 - 02:56:53.940, Speaker C: Yeah, Sam, do you want to go?
02:56:54.790 - 02:57:18.940, Speaker H: I was just going to say, yeah, I think it's a mix of reactive and proactive feedback gathering. I mean, like I said, the repo is on GitHub. That's typically been our best way. We also have an ethereum.org Twitter handle. We've opened up our public discord where people can come in and drop comments. What we're really trying to do is just meet you where you guys are.
02:57:18.940 - 02:58:00.774, Speaker H: We're in a lot of the discord channels, whether that's like Crypto, devs or ETH Online. So, yeah, feel free to contact us in whatever way is easiest. We're also doing recurring, what we call tiger teams of groups of developers in the space who have established themselves, know the landscape to regularly help us audit the site and kind of improve it from their perspective. So I think it's a mix of getting that beginner's mindset and that usability feedback, as well as the pros who are just like, hey, this is structured wrong, or what have you got it?
02:58:00.892 - 02:58:07.020, Speaker A: And is there anything that's next on the roadmap for Ethereum.org that you are able to share?
02:58:10.590 - 02:58:51.894, Speaker H: We got a lot of ideas, that's for sure. I mean, I'd say in short, we'd love to hear back from you guys. I think Ryan dropped some teasers on the web. Three stuff. I think that's where we take it to the next level, right? Like, we went from a list of links to external sites to now we have native content and resources similar to Mozilla. Now can we make it Ethereum Native and give people a gamified learning experience? Can we issue NFTs for people who are contributing? We'd love to hear ideas and yeah, if projects are kind of helping building those tools, we'd also love to talk to you. Ultimately, we want Ethereum.org
02:58:51.894 - 02:59:02.060, Speaker H: to be a sandbox, to be dog fooding, our own technology. So I think that's what we're most excited about in the months and year to come on this.
02:59:04.270 - 02:59:19.602, Speaker A: Awesome. And the last question that I have is I understand that both of you are also hacking at the event. So curious to hear what you are planning on working for the next three weeks for this hackathon or the million.
02:59:19.656 - 02:59:59.600, Speaker C: Dollar question or however much the prize money is. I can't remember. We've got a few ideas of stuff that we want to be working on. It's all based on sort of Ethereum education very tightly related to the developer portal project that we've just demoed. So we're hoping that whatever we do come up with will be a very good addition to what's already there. But yeah, again, we're more than happy to have community feedback feed into that as well. So let us know on all the channels that we've mentioned.
03:00:01.170 - 03:00:15.106, Speaker A: That sounds great. So for all the hackers that are listening in, make sure to really bug Sam and Ryan with every request you have about any tutorial you can get so we can have that up on Ethereum.org for everybody else to also benefit from.
03:00:15.288 - 03:00:16.930, Speaker C: Yeah. Mainly Sama.
03:00:18.790 - 03:01:12.206, Speaker A: Whoever's online on Discord gets the next message. So Sam, Ryan, thank you so much for giving us your time today and can't wait to see how the developer portal becomes even better over time. And with that, we are going to move on to our second half of the summit. So thank you again. Simon, Ryan, what's going to happen from our side now is we've reached the first half of our event and we are going to be taking a quick 15 minutes break that is going to just kind of make it easy for all of us to take a quick break. If you are in Eastern Time or Pacific Time, you can kind of go grab some food or coffee and we'll be back in 15 minutes with the second half of our talk. And up next will be Mariano and he's going to be doing an intro to DFI.
03:01:12.206 - 03:01:19.940, Speaker A: So we'll see you all in 15 minutes. And yeah, we'll stay tuned for our next talk.
03:01:22.190 - 03:01:23.050, Speaker C: Bye.
03:16:30.960 - 03:17:16.360, Speaker A: Welcome back, everybody. I hope you had a great mini break and I'm super excited to welcome all of us again for the second half of our Today's Kickoff Summit. And I want to jump right into it by talking about our next talk. And the next talk we have planned is actually a talk by our very own Mariano Conti, who is going to be covering a very high level and also some depth about DeFi and what's going on right now in the space. And he's going to just cover a handful of things about this. And for those of you who don't know, mariano was previously at MakerDAO and is overall a great guy, so I'll let Mariano take it from here. Welcome, Mariano.
03:17:17.840 - 03:17:57.608, Speaker C: Hi. Thank you so much for having me. Okay, let's get this started. I'm really, really excited to be here. I'm a friend of ETH Global, and I've been to a bunch of hackathons and participated in the last ETH online and really excited to be in this one as well. So this is Intro to DFI, and let me say a little bit about me. Been around Ethereum since 15 was in Maker up until last month.
03:17:57.608 - 03:18:46.408, Speaker C: Did everything from Oracle Smart contracts to helping out with PSI and Dai. I'm currently a retired farmer and DeFi historian of sorts and maybe working on something new. We'll see about that. Today I want to talk about what is DeFi, why we DeFi, a brief history of it as I see it and as I've experienced it, and also a little bit of what is next or what I hope comes next. And it's going to feel a little bit like this. I'm usually the old guy surrounded by young people. I actually enjoy it.
03:18:46.408 - 03:19:29.460, Speaker C: All of you keep me young, keep me curious. So please continue to do that. And if you enjoy this kind of conversations, we can always have them. This is really why I'm in this space and what I enjoy the most. So to me, decentralized finance is, in short, taking control of your own financial destiny in a trustless and permissionless way. I've been living on DFI since 2015, 2016. It works across borders.
03:19:29.460 - 03:20:36.360, Speaker C: It's uncensorable, and most importantly, it's on Ethereum. I am very adamant with this. What everybody has created on the Ethereum blockchain is unparalleled. And while we may end up seeing some bridges and some level two solutions, I don't expect or I hope that the main financial system of the future, decentralized is going to live on the Ethereum blockchain. Let me tell you why we DeFi or why I DeFi. I've talked about this many times living in Argentina. It may be different than why you use decentralized finance, but I use it to escape crappy economy and lousy government and capital controls.
03:20:36.360 - 03:21:27.496, Speaker C: I gave a talk at DevCon last year, October 2019. I just looked up the Argentine peso was around 65 pesos to a dollar. Today, it's 147 to 150 pesos to a dollar. And you can see the Mortal Kombat image on the right. The dollar just obliterating the two peso bill. The five, the ten, the 20, the 50 and now it's between the 100 and the 200 and this is akin to what our brothers and sisters in Venezuela go through in other places. And decentralized finance gives a lot of people an edge to escape this kind of thing.
03:21:27.496 - 03:22:33.020, Speaker C: And the beautiful thing is that before it used to be mostly people in tech, right? Engineers, those who got into bitcoin early then Ethereum. But slowly we've been building UIs abstractions that allow a lot of people to have access to the systems. For example, here we have a restriction that nobody can buy more than $200 legally in banks per month. This has been going on for a while and this also drove a lot of people in Argentina to use dai. And having to use dai sometimes meant using uniswap. And a couple of weeks ago or last week when the uniswap AirDrop happened that was like a UBI for a year. For a lot of people here, I think it's truly absolutely magical.
03:22:33.020 - 03:23:28.828, Speaker C: What is know there's a lot of things that we can do and like I said, it depends on where you are and what your economic status is. But there are plenty of reasons to use decentralized finance. The ones that I care about the most tend to be more to the equalizing societies. It is not the only one and it is not the only valid one. I always say it is fine to make money to speculate, I'm not against open markets, it is not what interests me the most. But if that's why you're in DeFi then it's a total, completely valid reason and I'm not going to say anything about that. But some of the reasons about it you can earn salaries in stable currencies.
03:23:28.828 - 03:24:08.190, Speaker C: That to me has been life changing and to many people that I know, of course a big one. Attractive interest on your capital. We've all seen those memes where banks say oh, we've reduced your APY to 0.1% one and we laugh at that, right? Of course there are risks involved. We can get instant loans without going to a bank. I bought my car with a CDP back in the day. We get access to new financial services, we can speculate on finance and much, much more.
03:24:08.190 - 03:25:06.944, Speaker C: Now, I do want to talk this is a brief history of DeFi from ICOs to yield farmers. I want to give an overview as I see it of what got us into where we are today and I want to start with 2016 because Ethereum Mainet launched in 2015. But really if we want to talk about D five proper, I think we can start with 2015 aka five BC which is of course before Crony. There wasn't much in 2016. I got this from a Tweet today. This was ether delta. It was probably the first decentralized along with maker Market decentralized order book exchange and there wasn't much more that you could do there.
03:25:06.944 - 03:25:49.260, Speaker C: There were a few tokens you could buy them and sell them. And it looked like it was good enough for the time. And truly it was. Of course we got the Dow that can or cannot be characterized as DFI. Maybe the early beginnings, we had Ether Delta, but there were hints of what was coming in the future. So if we go to 2017, aka four BC, we start seeing projects either released to testnet or to Mainnet. Maker released the size Stablecoin at the end of 2017.
03:25:49.260 - 03:26:09.536, Speaker C: We had digix. Auger was around? Of course. Not on Main Net. And sure, we got the age of ICOs. Right. I wanted to share because I just saw it this morning as well. This is the original Sci dashboard.
03:26:09.536 - 03:26:51.696, Speaker C: It was crude, but it showed you everything you needed to know about the system. It took a while to load, but there was no handholding. Right, this is DeFi. Do you want to get a loan in a stable coin? You need to put ether in there and figure out how to do it. But if you managed to do it, it was magical. You could put in your Ether, the native token of ethereum, and get a decentralized stablecoin back that was pegged to the US dollar. And there were markets around that you could easily start to trade this.
03:26:51.696 - 03:27:51.030, Speaker C: And with the launch of Stablecoins inside, we saw the initial boom of decentralized finance, because now we have a stable unit of exchange. And to me at least, and I'm extremely biased, as you know, but to me at least, this was the actual birth and what paved the way to the rest of DFI as we know it. So what did we get in 2017? Of course we got many ICOs, but we got Maker CDPs, which were loans, we got the site Stable coins, we got a few hints of Dows, and I'm going to miss a whole bunch of projects in this presentation. I apologize. This is a brief history. If you want to know a lot more, please read Cammie's book. She's going to be on in a while.
03:27:51.030 - 03:28:37.264, Speaker C: We had a lot of projects on testnet and we did start to see some early adoption. But what we didn't have yet was DFI's biggest strength, which was Interoperability, right? The ability to take things from different projects and having them work together. And that's what we got. In 2018 or Three BC, we started seeing projects like dYdX. Compound Ave was Ethland back then, Uniswap at the end of 2018. Uniswap is not even two years old, but this is what Uniswap used to look like. I couldn't find an earlier version.
03:28:37.264 - 03:29:15.276, Speaker C: I believe this is probably one of the first. But we got the ability to long and short tokens. With dYdX. We had the beginnings of money markets with Compound, we had token swaps. But the best thing about everything is that we started seeing projects that used all of these things together to create new things. And that is what gave birth in 2019 or two BC to a Cambrian explosion of projects and also stable funds.
03:29:15.308 - 03:29:15.552, Speaker G: Right?
03:29:15.606 - 03:29:44.968, Speaker C: But 2019 was when the community, and I don't know if it was also what everybody called the Crypto Winter. We were past that crazy bowl and everybody went back to work. But there was a lot of things to work on. You didn't need to start from scratch anymore. You needed a stable coin, you could get it. You needed a money market. There were a couple available.
03:29:44.968 - 03:30:10.640, Speaker C: You needed to do anything. You didn't need to reinvent the wheel. You could just reuse permissionlessly other projects. We started seeing more. We saw the rise of synthetix and nexus mutual. We saw other tokens from other blockchains starting to appear on Ethereum WBTC. We saw the initial money robots in said protocol.
03:30:10.640 - 03:31:22.740, Speaker C: I think 2019 was the moment when we saw that DFI, at least for me, could really be up to something. We saw the rise of Moloch, February 2019 that gave birth to MetaCartel and all of this investment dows, designer dows, personal dows, any type of dow, which to me are very much DFI as well. And now we get to early 2020 or one before Crony. And if 2019 was a canon explosion of projects, 2020 was the Cambridge explosion of total value locked. Right? That was probably the three letters that I've seen the most this year. It's an obsession to see how much capital people can put into a project and just going, oh, there's $500 million worth in DFI locked. Now there's a billion.
03:31:22.740 - 03:32:50.352, Speaker C: And then starting mid year, we saw that doubling every month or so or every couple of months. We saw the rise of new project curve, balancer, Yearn, Finance, Open and others. And most of this projects, as you can see, their main benefit is that they have a base layer, but they also communicate a lot with other projects. Curve, of course, being an AMM of stablecoins with the popular white pool that used Ave in the background to earn yield balancer. It's a base protocol. But there are smart pools running on top of it, and of course, Urine Finance, which created most of what we've seen for the past couple of months. So what did we get here? We got better token swaps, we got Uniswap V Two, we got smart token pools, we got the ability to exercise options with Open, and we got the search for better yields and yield farming, something that began with synthetics mostly, then compound with the Comp token, and it completely exploded with Yearn.
03:32:50.352 - 03:33:58.016, Speaker C: Right? So I think we also need to stop and talk about the past couple of months and the search for yield. Urine Finance and the Wi Fi token changed the game for good, in my opinion. It not only created a radical new way of launching governance tokens, it showed that you could have a project first revenue, first and then a token later, it revolutionized the concept of a fair launch, which was a big thing for about three weeks. And now I think we're back to some percent VC, some percent team instead of 100% Fair Launch. I don't know which one is fair, which one is not. This is not judging, but it also shows how changing this ecosystem is. After WiFi, everything was a fair launch for three or four weeks, and then it wasn't.
03:33:58.016 - 03:35:00.190, Speaker C: Maybe next week it will be again. And it paved the way for a lot of experiments, some really good, in my opinion, like Yam, which provided interesting aspects of governance, elastic supply, treasury but it also gave way to the food tokens, right? We got the kimchi's, the noodles, the spring rolls, we got many rock pools. These past few months have been interesting, to say the least. They have been risky, they have been a lot of fun if you manage to make some money. They haven't been fun if you manage to lose money, but they have been sobering, right? I think we need to really reflect on what has happened and act accordingly. We got the attack of the clones, we got the sushi swaps, the swerves, the presents. There are more to come.
03:35:00.190 - 03:35:58.450, Speaker C: There are some that were just blatant copies with no innovation, and there are some that actually do seem to want to expand and not just say, hey, we're x bought fair launch to the community. So there's a lot of interesting things to watch out for with the clones that may end up not being clones at all. So where are we now? October 2, 04:34 p.m.. Argentina time. I want to call today one ad, if you will. So one after degents. We already lived through an intense period, and let's try to commit, if we can, to a new era, if you will.
03:35:58.450 - 03:36:30.284, Speaker C: This is the morning after. As my friend David said last month, DeFi has been partying hard in the club for hours. Somebody just turned on the lights. Everybody's sweaty, gross and drunk. Quick, someone turn off the lights. I propose something different. I propose we turn on the lights, we look at each other and we realize that today, now, it's the perfect time to build.
03:36:30.284 - 03:37:11.320, Speaker C: We are also at the first day of a new global hackathon, which is the perfect time to realize that, to build something. But this is what I want to impress on you. I think we should do it responsibly. And well, that's for another slide. Let's not forget the reason why I think we're here. DeFi is a way to take control of your financial destiny in a trustless, permissionless way. I believe this should be our ultimate goal.
03:37:11.320 - 03:37:55.424, Speaker C: And that's why I want to stay 5 seconds on this live, in case you share this mission with me. Look, it's never been easier. I was checking this morning moneylegos studydefi.com. It's a few lines of code to get a flash loan from dYdX, Instant Liquidity, few lines of code to get a flash loan from Ave, same Instant Liquidity. You can do it from Uniswap as well. It's a few lines of code to do a token swap using one inch or using Uniswap. It's extremely easy.
03:37:55.424 - 03:38:46.340, Speaker C: Now, the foundations are all there. This is getting maker dylon. You will forgive us the Taiwanese, but it's still extremely easy. And the protocol and the foundations are all there. 2020 is unlike anything we've ever seen. The kinds of projects that are already there, you can do a lot just by taking all these pieces and putting them together into something new. So my ask to everyone is I'm urging you to build, but with this four tenants, I want you to build responsibly, disclose, try to get audits, talk about risks.
03:38:46.340 - 03:39:14.530, Speaker C: This is still in its infancy. It's a nascent industry. So please disclose as much as you can. I want you to build intelligently. That means you can reuse all of what people have built before, but also build creatively innovate. Don't just copy everything. There's plenty that you can reuse, but there's plenty that you can add.
03:39:14.530 - 03:40:05.490, Speaker C: And finally, I want you to build for scale. And that means thinking about layer twos. And if we want to give people financial independence, we cannot expect them to pay $5, $10 for a transaction that that may end up being half their salary or more. We need to get creative there and we need to use layer twos. And that's the end of my talk. I realized this ended up being a little bit of an intro to DeFi, then a little bit of history and then a lot of maybe just me pontificating about things. But I think it is important that we talk about everything that I mentioned.
03:40:05.490 - 03:40:18.864, Speaker C: And I want to thank It Global for the invitation and if we have time, I'm around for questions. Thank you very much, Mariano.
03:40:18.992 - 03:41:16.410, Speaker A: Thank you so much for that amazing intro. I think you kind of covered all the recent things that are happening and just kind of your perspective on it and particularly like the historical perspective you take for the people who are watching this on the chat. Please ask any questions on the chat and there's about a 25 2nd delay. So we'll kind of get your questions back to Mariano soon. But we have a few questions that are up and coming already and I'll start kind of asking them here directly. So the first question we have is obviously you've been part of DeFi from the start through Maker and most recently you have really kind of direct perspectives into what's happening for the developers who are working in this space. What do you recommend they do for being able to test how things will work in this connected DeFi world without testing in productions directly? And does that change? Is there a better solution? And kind of how do you think about that moving forward?
03:41:17.660 - 03:42:21.836, Speaker C: Yeah, it is complicated because of course there are so many moving parts that the Itesting prod thing ends up being a necessity sometimes because you need to test what happens in the real world with many different protocols that may not have testnet deployments even on the same testnet. But there are certain things that you can do. You can use Ganache to fork the state of mainnet as it is up to the last block and then you can simulate transactions. You can do goth mode where you can impersonate any address or you can give yourself any amount of tokens or you can travel to the future. You can advance a few blocks, advance a few seconds, see what happens. Not only Ganache gives you this dapsis with, HEBM also allows you to test certain things. It's not going to be 100%.
03:42:21.836 - 03:42:52.100, Speaker C: There are certain things that it cannot do. I know the Biddler team, Nomic Labs, they're working on expanding some of this. So I would say look into that. Try to test as much as you can with forks and then if you do need to test on Mainet, try to do it from an account that's not tagged as probably the most watched account on Ethereum.
03:42:54.440 - 03:43:42.310, Speaker A: Subtle. That's great. The other question I have mean, we took a look at everybody who signed up for this event from not just the hackathon but also the summit side and there's lots of people from various backgrounds from kind of traditional enterprise side to startups to people who are not in crypto at all and just want to catch up with it. And obviously the pace DeFi is moving, is super kind of fast and it's just not super easy to keep up. So we're wondering if you were able to sort of just highlight a couple of your current DeFi protocols. Not that your favorites, but just kind of give us an overview of how some of these protocols work and maybe we can start with WiFi and just kind of get everybody an overview of what it is, how it works, why it's unique or why it's interesting and maybe something else you would like to pick on.
03:43:42.840 - 03:45:16.368, Speaker C: Yeah, of course. So Wi Fi at Wire Finance, it's mainly a moni robot that looks for yield and tries to give you more money than you put in. So they have this thing called and that is one part but it has been the main part. Let's say you have a stable coin, either Dai USDC tether through USD or another or you have ether or you have a token and you supply it to one of the yearn vaults. And what this vault does, it looks for ways to put your assets to work and earn you interest on them. And the way they optimize is that instead of having 100 or 1000 people doing it individually with their money, they pull it together and they act as one big fund and they save on gas and they save on management and that is the basic idea. It's a moni robot that looks to make you more money and the token is just a way to capture governance and some of the treasury that this search for yield gives you and that is the gist of Urine finance.
03:45:16.368 - 03:46:25.416, Speaker C: Other protocols that I use almost every day is I use Maker, Ave and Compound, which are compound and Ave are money markets so you can borrow and supply assets and depending I use it a lot I have different tokens, and maybe I need one to put into another protocol, but I don't want to buy it, and I don't want to sell the ones that I have. So either Compound or Avid support the token that I have so I can loan it, I can supply it to the protocol and then I can borrow another token back and I can use that token in another project. And Maker is not exactly a money market, but it's almost the same idea. You supply a token and you create die from it and then you can use that dye to maybe put into one of these protocols to earn some interest on that. Those are the ones that I probably use almost great.
03:46:25.438 - 03:47:26.220, Speaker A: I think a lot of these are actually very kind of common, especially as we look at our hackathon projects. They are currently being utilized a lot in experimentations for DPI. So maybe one other question and we've seen a couple on this theme from the Chat, but it definitely merges with the L two side of the equation here. But right now, aside from all the creative sort of outcomes you can get that beat the traditional financial markets, whether it's better interest rates or just being able to have access to capital without a lot of prerequisites, the gas costs are definitely not sustainable for anybody. You kind of point to Argentina being the perfect audience for this thing. But if the gas costs exceed someone's salary alone, that doesn't help them kind of take advantage of these things fully. So kind of what do you see is like a good way forward towards making these things more accessible or kind of least amortizing these costs? And what is the right way to think about layer two for DeFi?
03:47:29.120 - 03:48:42.068, Speaker C: Well, I don't want to presume to be an expert, which I'm not, but I've already seen layer twos working right now. Gitcoin grants, they use the secret roll ups and that work great. You have loop ring right now where you can fund your account once and then do standard token transfers for pennies that exists now. I don't think the problem is just we need further adoption of this. We still don't have the interconnection of protocols on layer two that we have on mainnet, but for certain things like token transfers that exists today and I'm watching closely, optimism and what synthetics. Has done and they've announced that there's going to be other projects testing as well. And if they can get the projects on optimism, talking to each other, I think that's going to be a huge step forward.
03:48:42.068 - 03:48:58.090, Speaker C: But for now, I would say just go straight to what Loop Ring is doing, what Gitcoin did with their grants, the ability to trade tokens on a layer. Two are live today.
03:48:59.980 - 03:49:27.030, Speaker A: That makes a lot of sense. Just reading over the next questions that we have, I think maybe one question I have for you personally is, I guess what do you think is currently missing in the world of DeFi? I guess from the perspective of these Lego blocks, like, we got money markets, we got lending, borrowing in general, we now have investing in multiple forms of it. But what do you think is sort of like a thing that's not easy to crack right now and things that you get excited about?
03:49:30.920 - 03:50:41.320, Speaker C: I think I would say, and this is probably a boring answer, but we don't have enough auditors around and security experts. I very much did not like this past couple of months, projects going live and on Twitter, tagging different auditing firms going, hey, would you mind auditing my new project for five Ether? I think that was the wrong approach. If we're going to have so many projects fighting for people's attention and capital, the least that we can do is try to play it safe. And I would urge anybody with knowledge of solidity to if they can. I know that security is like a very specific thing. I'm a smart contract developer, and I wouldn't qualify myself as a security expert or even an auditor. I can do certain things, but I will need some more time and expertise.
03:50:41.320 - 03:51:01.330, Speaker C: But if anybody wants to follow that path, I think now and for the years to come, it's going to be extremely lucrative because hopefully we've learned and new projects come out audited. And I know that a lot want to, but there's just not enough people right now to do that.
03:51:02.100 - 03:51:49.810, Speaker A: Absolutely. I think anything we can do as developers to make it easy for everybody to write a bit more safer code is definitely a much needed step, especially when you're letting others play with money. And there's obviously legal implications of all these actions as well. And it gets very wonky super fast as you kind of scale this thing to multiple geographies instantly. So, kind of having just seen how the last few months have played out, I agree with you on how important it is to keep security in mind because you are trusting other people and they're trusting you with their money, and that's personal. So with that, I want to thank Mariana for being part of the Q A and your amazing presentation. I'm sure we'll see you on our discord, collaborating with a lot of hackers and helping them.
03:51:49.810 - 03:52:45.090, Speaker A: So thanks again and with that we'll move on to our next talk. And with that, what I want to do is take this time to welcome Josh Stark, who is also one of the co founders of ETH Global, to just take over for me and help out with the rest of this session. And Josh will be kind of just giving an overview of how the ETH Online event structured for this month. For those of you who came in after we kicked off at a few hours ago, so we'll kind of COVID that a little bit more and we'll kind of take maybe a small break before our next talk. And for those of you who are raving about the radio, we'll give you another chance to play with the radio. And even without that, just remember that you can double click on the radio icon after the talk ends. So I'll welcome Josh and I'll let him take it from here.
03:52:46.020 - 03:53:05.610, Speaker C: Thanks, Kartek. Hey everybody. Very excited to be here. It's been an awesome day so far and I'm really excited for the talks we have this afternoon. As Kartik said, I'm Josh. I'm also one of the global. I do a bunch of things around the Ethereum community and I'll be your MC for the second part of this day.
03:53:05.610 - 03:53:41.840, Speaker C: And for those who join kind of later in the stream, just want to make sure that you have some kind of basic information about us, what it is that you're watching. So ETH Online, which is this big thing we're doing all month, has two components. Component number one is a hackathon. E Global is known for our hackathons, and this is the latest of our big online hackathons. It starts today and the submission deadline is October 22. We've got more than 600 hackers working on everything Ethereum related. They're going to build over 100 amazing projects.
03:53:41.840 - 03:54:21.148, Speaker C: We've got more than $100,000 US available in prizes, and it's all going to happen this month. So if you're hacking, I hope you are either working or watching the stream. And even if you're just paying attention, there's going to be lots of great stuff. You're going to see these hackers are going to build and we're going to see all of that on the very final day of ETH Online on October 30. The other part of Ethan line are the summits. So this is the first summit, the kickoff, and every Friday in October, we are bringing you a different summit on a different theme. So next Friday on October 9, we're talking about scaling and infrastructure.
03:54:21.148 - 03:55:06.784, Speaker C: So this is going to cover everything from the latest layer two technologies, what is happening in the world of dev tools, zero knowledge, technology and other kind of infrastructure that makes it possible for developers on Ethereum to build incredible applications. The week after that, presented by Abe, we have a full on day, just about decentralized finance. So on October 16, you're going to hear from leading projects in the space, leading thinkers in the space. You're going to kind of learn both the basics and the cutting edge. On the Friday after that, October 23, we have a summit about the future of Ethereum. So this is not just about ETH Two. I mean, as Danny explained earlier in the day, ETH Two and E One will continue to work together.
03:55:06.784 - 03:56:07.188, Speaker C: They're different layers of the stack, but about a variety of topics that will kind of influence the future of the Ethereum protocol ranging from things about statelessness to E Two to 8.1 x to certain EIPS like 1559 that are on the horizon and will be an important part of the future of Ethereum. And then as I mentioned on the last day, we have our final day, the final summit, which is about Ethereum's impact. And here's where we cover kind of these bigger picture themes about why Ethereum matters, what kind of impacts it's having today, where it's being used by average people around the world as well as by major enterprises. And this will also be the finale for the hackathon. So just like all our hackathons, we'll have some finalists who will demo in front of an amazing panel of judges and show you what they've built in the last couple of weeks. And of course, don't forget that all of this has happening while a hackathon is going on.
03:56:07.188 - 03:56:54.332, Speaker C: And these submissions are due October 22. So the kickoff summit, which is today, we're halfway through it. So what do you have waiting for you the rest of the day? Here? The next talk which I'll introduce in a few minutes, which I'm really excited for personally is called Ethereum is for Artists. And here we're going to have Andre who records on the name RAC and then Dee and Jacob from Zora talk about how Ethereum is serving artists and kind of helping them disintermediate and take better control over their creative work. After that, we've got an amazing talk from Camila Russo D Five 2.0, kind of about the future of some D Five protocols and trends we're seeing in that space. After that, we've got an amazing talk from Remix, from Rob and Yuri.
03:56:54.332 - 03:57:29.256, Speaker C: And then after that we've got a talk from Brian about Dark Forest, a game that launched recently and it was going to be coming back, the new version relatively soon. You're going to hear all about it from Brian Goo. And then to cap it all off, we've got Metallic coming on to talk about scaling Ethereum in 2020 and beyond and that's going to be at 07:00 p.m.. Eastern. So I think we'll take a couple of minute break here. We've got five minutes before the start of the next talk, so come back in a few and enjoy the Lo Fi radio. Until then.
03:57:29.256 - 04:02:19.324, Speaker C: See you soon everybody. All right, hello everyone coming back here and I'm going to just do a quick introduction. I think we've now got Andre andy and Jacob on. So just talking about ethereum for artists, and this is really one that I personally care a lot know, using ethereum for artistic pursuits, for creative pursuits through NFTs has been something very early, right from the beginning, going all the way back to crypto punks, if you remember those. And recently, this is kind of recent inflection point where you're seeing more and more of this happen. There's more happening both in the art scene and the music scene, using ethereum to help artists. So I'd like to introduce Andre, who records RAC and Dee, and Jacob from Zora.
04:02:19.324 - 04:02:28.340, Speaker C: Zora is a company that is building the infrastructure that allows artists to take control of their creative work. So welcome, guys. I'll turn the screen over to you.
04:02:28.490 - 04:02:29.670, Speaker F: And hand it over.
04:02:31.640 - 04:02:32.148, Speaker I: Awesome.
04:02:32.234 - 04:02:32.692, Speaker C: Thank you.
04:02:32.746 - 04:02:51.960, Speaker I: Thank you for having us. I also just kind of want to take a moment to say how awesome this layout is. It's like lo fi beats and all that. It's pretty sick. I'm pretty stoked about so thank you, Josh. I'm Andre. I make music as RAC.
04:02:51.960 - 04:02:56.540, Speaker I: I've recently been working with the Zora guys. I don't know if you guys want to introduce yourselves.
04:02:57.920 - 04:03:00.044, Speaker C: Jacob, you want to go first? Yeah, go first.
04:03:00.082 - 04:03:00.748, Speaker F: Hey, what's up?
04:03:00.834 - 04:03:23.204, Speaker C: My name is Jacob Horn. I'm one of the co founders of Zora. Really happy to be here today. I think we've got an awesome discussion, a lot to cover. I think the whole space for artists in particular, I think has really kind of evolved probably like, five or six times over in the past six months. So I'm pretty hyped for this conversation. And, yeah, I'll just let Dee introduce himself, and we can kind of take it from there.
04:03:23.204 - 04:03:46.504, Speaker C: Yeah, I'm dee. Super excited to be here. Always love getting a chance to share the Zora sauce with the community and getting to work with Dre. I run everything that's creators and community over at Zora. So if you're a creator and you're thinking about doing a drop, holler at me. If you're a community that's looking to engage your creator, get excited. Really pumped about today's conversation and the future of Zora and the intersection of kind of crypto and culture.
04:03:46.504 - 04:03:48.910, Speaker C: So, yeah, really, really happy to share with you guys.
04:03:50.260 - 04:04:56.000, Speaker I: I guess the theme of this conversation is ethereum is for artists. I think maybe to just give that a broader context, I think it's important to at least address why that's the case or how we even got here, why this is actually important. And I don't want to dwell on this too much because we can easily fill up 4 hours talking about the problems of the music industry or really the creative industry in general. So maybe I'll just kind of talk about very quickly about some of the issues of the music industry, and we can sort of talk about how we're trying to solve that. Okay, where to begin? The music industry I think it's fundamentally broken. I think it's almost beyond repair at this point. We've sort of been in this cycle for the past about 70 years where basically the way that the industry is set up is completely hostile to artists at this point where they basically capture the entire value that the artist is creating.
04:04:56.000 - 04:05:55.496, Speaker I: And even with the birth of the internet we thought that that might shift over and it has to some degree, but we're still dealing with sort of this institutional level. The problems basically and what I'm really talking about is sort of again, this is pretty broad but this is true in almost every side of the industry but basically it's sort of filled with intermediaries. There's services and corporations and various people that basically take all of the profit. I think the average artist gets about 12% of the income generated by their work. To me that is very unfair. Not to say that the industry doesn't add value because I think they do. I think it's important to acknowledge that.
04:05:55.496 - 04:06:42.150, Speaker I: But I think we're at a point where it simply has not working and I think it's brought us to this kind of moment in time where we're like, okay, what can we do about this? I mean there's various different services that are sort of popping up and when I discovered Ethereum about late 2016, 2017, I became kind of obsessed with this idea of disintermediation and creating an infrastructure that was actually fair and that would actually allow a free market to flourish. And I think that's really sort of just the starting point and.
04:06:44.920 - 04:06:45.316, Speaker C: I would.
04:06:45.338 - 04:07:06.620, Speaker I: Actually love to get the Zora guys to sort of talk about it from their perspective but basically that's how we got here. It's like sort of a fundamentally unfair, unreasonable industry that is hostile to artists and now we have this technology that kind of cuts them out of everything and to me that's super exciting.
04:07:07.840 - 04:07:43.128, Speaker C: Yes, completely agree. I think if we think about the reason why the music industry and almost every other creative industry is probably like that and our belief and perspective is that because it's built on the legacy like financial system, the Fiat. Financial system involves corporations, intermediaries. And it has all of the characteristics that I think everyone in ethereum and DeFi are completely aware for, which is aware of which is it's opaque, very limited access ends up being fundamentally unfair. And the only people that can access.
04:07:43.214 - 04:07:44.196, Speaker D: The tools of finance.
04:07:44.228 - 04:08:52.480, Speaker C: And I think the core tool that we're talking about unlocking for artists is ownership. So in the traditional system, corporations and institutions have a monopoly on creative ownership. Like for you Dre, you had to go to a record label in the earliest days of your career because they were the only ones that could cut a check. But to cut that check and pay for your day to day living, you had to give up 50% or more of the ownership over the work and value that you're creating just right out of the gate. So I think when we look to Ethereum and what we're trying to do with Zora, it's like, well, what happens if you can rebuild or kind of take this creative industry and then build it on top of this? Fundamentally open financial system which is transparent. It's universally accessible, it's programmable, it's native to the Internet, where all of this value is being created in the first place, which I think leads like we kind of see the death of the creative industry and kind of the emergence of the creative economy in one way. And that's all built on top of Ethereum and what we're building on for Zora.
04:08:52.480 - 04:09:38.168, Speaker C: So I think where does that land us? It's like, well, entirely new opportunity space because you get all of the goodness of crypto mixed with the kind of expansiveness of the creative industry. And I think we're probably in day zero here. I think, Dre, you've kind of pioneered the way a lot here. And I guess D, I'd love to get your cut as well on this before we jump into maybe your journey as a pioneering artist in Ethereum. Dre yeah, for sure. I mean, I think you hit the nail on the head. There's definitely a monopoly of ownership in the existing creative space, whether that's music, fashion, you see sneaker customizers, like people that we've worked with at Zora along the lines of Jeff Staple, who are getting similar to Dre, where it's 12%, they're getting $5 per sneaker.
04:09:38.168 - 04:10:26.300, Speaker C: Sneakers are selling for $150, reselling for two K. These sorts of issues, I think, are prevalent in the overall creator economy. So any way that we can leverage Ethereum and the dynamicism that it adds to creator platforms, I think we're going to do that all that we can. And I think Dre, as we're segwaying into that is really just leading the way first on how you change ownership of your drops and ownership of your product offerings, but now even how you change ownership of your community and that medium and interaction, again, all powered by Ethereum. This wouldn't even be possible without this amazing suite of tools that the community has developed and allowed us to leverage for creators like Dre. Yeah. So I think, Dre, you've had probably one of the longest artistic journeys in Ethereum.
04:10:26.300 - 04:10:51.844, Speaker C: Do you want to talk about the progression of kind of projects that you've launched that's going to this today? And I guess to cue that up, you started with the Ego Token three years ago, and then just a couple of days ago, you've launched the RAC Community Token. Let's talk and what you were trying to do at the start and now where you've landed at and the learnings and the things you think have been unlocked across the way.
04:10:51.882 - 04:11:19.650, Speaker I: Yeah, absolutely. Okay, so basically, like I mentioned, in late 2016, I stumbled on a video of Vitalik, Buterin talking about Ethereum. And I was like, this is amazing, this is going to change the world. I think a lot of people have that reaction and I was so psyched for it. I was like, this is amazing, it's so cool. Okay. In my head I was like, oh, this could apply to music in so many different ways.
04:11:19.650 - 04:12:01.436, Speaker I: We can sort of build like this infrastructure level pipeline, basically. There's all kinds of issues in the music industry for data and it's all siloed off into different corporations that don't share information with each other, things like that. There's all kinds of things that could be solved with this. And I was like, oh, this is amazing, so cool. Okay, let me look at who's doing anything in this space. There were a couple of projects, but I basically found Ujo music, which they were part of consensus, and I just reached out from there. We started to work on this idea, which was actually super basic if you really think about it.
04:12:01.436 - 04:13:04.368, Speaker I: But basically the idea was I had an album that was going to come out, it's called Ego. That's hence the name Ego Token or whatever, and the album was going to come out anyway, and it was going to come out commercially in all the typical spotify whatever, all the typical places. So I was like, why not? Additionally to that, release it on Ethereum, basically host it on IPFS, create a smart contract that it's like, if $10 worth of Ethereum is deposited into this contract, you get a link to a downloadable link, basically. It's like very basic. Essentially, we have this with Bandcamp. I didn't see it necessarily as groundbreaking necessarily, but I like the idea behind it. And I think that's really what I was hoping to sort of convey is this idea of direct to this direct kind of interaction where I created this product, this album, and I'm basically selling it directly to somebody.
04:13:04.368 - 04:13:19.924, Speaker I: And the only thing in the middle is a contract. And like a self executing contract. It's up there in perpetuity, which I think is pretty cool unless IPFS goes down, which I don't think we're having any wood around.
04:13:20.042 - 04:13:20.710, Speaker C: Yeah.
04:13:23.580 - 04:14:08.260, Speaker I: Okay, so that happened. I thought that was quite successful. Everybody that bought that album also got issued this Token called the Ego Token. At the time we were thinking about it, NFTs are still pretty new, but the idea was actually it is some sort of an NFT, except it's not the idea behind it, the intent was there. So we basically gave the Ego Token to everybody that bought the album off of Ethereum. And then the bear market hit and a lot of projects started to fizzle out and Ujo unfortunately, was a bit of a casualty of that. And I sort of stayed involved and interested in the space in general.
04:14:08.260 - 04:15:04.820, Speaker I: And during that period, I think I looked at various different during this whole process. We had talked about Tokenizing publishing ownership, and there's all kinds of ways to sort of apply this to Ethereum, but I still was excited about it because despite the price or whatever, that's kind of irrelevant. People kept building. And I think that's what really kept me going and interested in the space because I continue to see development regardless of price action or whatever. So during that period, I saw a bunch of projects kind of fizzle out. There was one in particular, Audience, that has sort of launched a little bit after Ujo. And I think they in many ways, they're sort of the spiritual successor and they sort of benefited from a lot of the ideas that Ujo built.
04:15:04.820 - 04:16:11.084, Speaker I: And I think Ujo perhaps was just a little bit too early. I'm sure a lot of people can relate that sometimes when you launch a product, the timing can be kind of a big, okay, I feel like I'm carrying on too long, but basically okay. So audience kind of succeeded there, and I more recently got involved with them as well, which eventually brought us to, I think, earlier this year, where I finally wrote a new album. Like, I kind of spent three years working on that and ready to kind of do that. And I obviously wanted to do something with Ethereum and just sort of continue that path. And actually, one of the guys, Jack from Ujo, from the original team, actually introduced me to Jacob and we started talking about this idea of Tokenizing, a physical product. And I always thought this is an interesting idea, something we had talked about back in the day.
04:16:11.084 - 04:16:28.290, Speaker I: And how do we do this? How do we really make this accessible and easy? And I feel like Zora really kind of nailed it. And basically by the model being you create a market for it first and then at a later date.
04:16:30.600 - 04:16:30.996, Speaker C: You can.
04:16:31.018 - 04:17:16.640, Speaker I: Have sort of price discovery for this physical product using Ethereum and basically using Uniswap at the time, which I think is pretty cool. And then actually, as of yesterday, we opened up Redemptions. So people will essentially burn the Token and we're going to mail the tape to them so they finally get the tape. Okay, I guess. Maybe early. This is somewhat in the beginning, the beginnings of the D Five stuff that started happening and people kind of traded this thing like crazy. And I think we went from $20 to 950 and it was kind of a wild day for me.
04:17:16.640 - 04:17:56.924, Speaker I: I didn't expect that. But I think it sort of answered this really interesting question. It was like, what is the actual value of this limited edition good? If I set that price, if I came out of the gate and was like, this tape is $450, people are like, you are insane. This makes no sense at all. But because we released it at $20 and the market decided, people were like, hey, fair. I mean, the market decided that this is the value of this cassette. Maybe it's speculative, sure, but the market decided and I didn't decide that, the market did.
04:17:56.924 - 04:18:47.416, Speaker I: So I feel like that's a really interesting concept. And something that I love to say about this is like, it turns out that music does have value because so often we've sort of been ingrained with this idea that recorded music doesn't have value, that you're supposed to capture value through selling T shirts or something. That's ridiculous. Music has value. I don't know where we've sort of gone off this track, but anyway, I'll get off my soapbox on that. But basically that kind of leads us to this moment where we sort of saw this moment like where we're applying markets to some degree, this Tokenization. It's sort of maybe a way to measure it or a way to quantify it to some degree.
04:18:47.416 - 04:20:35.410, Speaker I: And I don't mean just financially, I mean actually, if you own a Token, there's some level of ownership over this, whatever it is, whatever you decide it can be. And to some extent we saw that with DeFi, with governance tokens and yams and all kinds of fascinating, interesting projects that popped up over the past couple months, which kind of led us to this path of talking about the RAC Token, which basically, in the midst of COVID again, I have to sort of give this a broader context, but basically in the midst of COVID I started streaming a lot and I started going on twitch, like two to three times a week doing four hour sessions. And this sort of community evolved out of it and it was very fascinating to me, something that I hadn't really experienced. So for example, I average about two and a half million unique listeners every month on Spotify, but I don't have any access to them, I can't even message them, I have no way to reach them. Every once in a while Spotify allows me to message them about tour dates, but even then it's like heavily curated and they get to basically edit whatever I say. Things like, so now suddenly this really powerful thing is happening where my community is talking to each other and they're sort of bonding over that and whether it's Twitch chat and then that moves into Discord. And maybe some of the YouTube community also moved over and basically this Discord server started to become sort of a hub for this emergent community.
04:20:35.410 - 04:21:54.760, Speaker I: I couldn't have faked this, I couldn't have made this up. Maybe my music was sort of the catalyst for it and that was sort of the reason that brought people together to some degree. But once they're there, now they're like playing games together, they're sharing cat photos, they're sharing recipes for certain types of food. We have coders in there that talk about that kind of it's a very diverse group of people and now there's sort of an emergent community, and it's still relatively small, but I found that to be super powerful. Okay, fast forward to this idea of tokenization and it's like, okay, well, why don't we just give them all a token? Why don't we give a token to everybody that supported me over the years, through Patreon, through bandcamp, through merch, through basically anywhere we can have an email or Twitch subscribers, basically anything like that, that we can reach them. Let's give them a token, give them ownership of this community, and let's try to create a community. Let's try to sort of enforce that and give people a say in it and have some sense of belonging.
04:21:54.760 - 04:22:35.850, Speaker I: That's basically as far as we got. And of course, we have all kinds of ideas, and I feel like I've been talking for a while, so you guys should definitely jump in here. But basically we launched a couple of days ago. We gave it retroactively to all these people that have supported me over the years and now we're just starting to first steps, getting people kind of onboarded, getting used to the technology and learning from that and hopefully building tools and things that matter to us that aren't just giving it to Instagram or Twitter or whatever. So it's like we're creating our own little social graph, which I think is interesting.
04:22:36.380 - 04:23:36.932, Speaker C: Yeah, I think to kind of frame what's happening here, we kind of speak about three levels of ownership. There's kind of like at the base level, there is the products and the artworks and the creative output that's being created by artists. So we started with physical goods. And for you, that was like the cassette tape, I think NFTs and crypto artworks or internet native artworks definitely fit in this category of like, okay, we're actually building ownership over things that can now be kind of captured in these different types of tokens and can be held by the community, used by the community. The second level above that, which we've just kind of pushed into, is the communities or the brands of the creators themselves. It's like, okay, there is a group of people who just love and want to be a part of the RAC community, kind of like the Bayhive or Pick your Beehive or the Swifties or the Believers. Now they're just RAC token holders, musicians.
04:23:36.932 - 04:24:21.050, Speaker C: There are these massive communities, but it's obviously the same thing for fashion brands as well. All these brands have cult followings and groups of people who want to unite in some way. And then obviously the level above all that where you kind of invert it, it is the system itself. So the value system being like Zora, then built on top of and empowered by Ethereum. And I think the community piece is particularly interesting because it's like this two way ownership. So, like, you were saying that you move into Twitch, you've got Spotify, you know, all these different platforms where your communities kind. Of come together and interact with you in different ways, but you have not, until, I guess, rec token, you did not have a single place where you could actually own that community.
04:24:21.050 - 04:25:06.664, Speaker C: The best you could do is, I'm going to get an email list and maybe compile that together. And I think a lot of people on Twitter talk about this, how do I exit from Twitter into some space where I can own my community in one spot? But I think tokens are the perfect mechanism for that because if you think about the community end of that spectrum, they don't want to deal with an email list or get updates from you and email back. That's a shitty platform in and of itself. It's a great platform, but it's like shitty for the purpose we're talking about. So the ownership is like you kind of having this single, unified space to bring your community together as one. But then for your community, it's like they kind of have an incentive to take that jump with you because they are getting ownership in it too. So it's like, oh, I don't have to give away my email and do this thing.
04:25:06.664 - 04:26:04.024, Speaker C: I'm actually getting something that might have real tangible value and could empower me to go build alongside the coders in your discord or the people sharing tasks or whatever it is, which is kind of crazy. It does feel like a new paradigm in a way where it's like community creator now have this one place, like unify. And I think if what's happened in DeFi is any clue, it's like with Wi Fi. It's like, all right, now you have people have this token and now they feel empowered to go create the logo for this thing. Or I'm jump in and submit a PR on this GitHub because I'm like, I have ownership in this community. I think what we will see for artists is like, well, what does it mean for artists and community to start creating as one, or like the line between those two things being blurred? I'd love to get like, D, I know you got thoughts here too. I'd love to get your take on how do you think that plays out or what this kind of community token piece looks like with the rec launch that we just kind of got out a couple of days.
04:26:04.024 - 04:26:25.644, Speaker C: Yeah, for sure. I think Dre touched on this and you've touched on this as that second layer of ownership. It's a new medium for direct to consumer. So Dre now doesn't have any platform in between him and his community. It's just if you hold this token, you're now a member of the community. And I think that's super unique in being able to aggregate everybody across these platforms and then the future. I always talk about this at Zora.
04:26:25.644 - 04:27:12.528, Speaker C: I think culture on a whole, the culturally relevant industry, whether that's entertainment, music, or fashion, draving a pioneer, is just waking up to the community, organization, alignment, and incentives that are kind of tucked into crypto. I think crypto has some of the most powerful communities, arguably in the world. There's no place really like it on the planet. And its ability to your point, Jacob, to give people that reason to organize themselves or that reason to take the jump to the new platform, and that reason being the ownership itself in that community. I think that's something very unique to Crypto. People join, you know, coordinate around a dev, and then figure out how to get a logo, and then they get it on CoinGecko. And these are all random people that you never met and that you probably will never meet, all coming together to create value together.
04:27:12.528 - 04:27:51.050, Speaker C: Now imagine what that would be like if it was in pursuit of a Grammy or an Oscar or some of the more amazing real world outputs. I think we're just now starting to scratch the surface there. We wrote this in the manifesto that these communities, if they get organized and aligned properly, they could build cities. Imagine if the Beehive or the Swifties had a shared bank account. You'd be seeing Taylor Swift get her Masters pretty easy, or you'd be seeing statues of Beyonce all over Houston. And so I think that these are the sorts of opportunities that we'll see in the future for community tokens as people start to wake up just how powerful that organization and alignment is when you have that ownership piece.
04:27:52.860 - 04:28:40.350, Speaker I: Yeah, absolutely. Just one last thing to add is that glue that comes from collective ownership is super powerful. And we've seen that probably more on the financial side of DFI, even early on with different projects, even from the 2017 era, but even to some extent ethereum. If you sort of fell into this space, you kind of want to see it succeed. And I think it's sort of like these multiple layers. Obviously, there's some negatives. It breeds a little bit of tribalism sometimes, but for the most part, I think it's a generally positive thing in a way, to sort of organize and create value for each other.
04:28:40.350 - 04:28:47.230, Speaker I: We were maybe going to take some questions, I don't know, because we got a couple of minutes left.
04:28:48.320 - 04:29:01.664, Speaker C: Yeah, we should have a couple of minutes left. If we have any questions in the chat, we can definitely facilitate that. I'll just ask our team behind the scenes what we're seeing in the chat. I don't have all the windows open at the same time. The magicians.
04:29:01.792 - 04:29:02.948, Speaker I: Yeah, I didn't mean to put you.
04:29:02.954 - 04:29:46.912, Speaker C: Guys on the spot. I was just mean I've got a question while we're waiting here. One thing I'm kind of curious. You you just if if Bayhive had a know, you'd see people using that know, fund construction of statues in Houston, how do you think those communities will interact? Right? Because one thing, once everything's in a market, you can have interactions between these communities. You can have people trying to increase or decrease the price of someone else's token. I mean, imagine two artists are having some sort of beef and they're totally financialized. Communities are trying to kind of interact with each other in maybe a positive or negative way.
04:29:46.912 - 04:30:53.684, Speaker C: What do you imagine there? Give me your craziest scenario of what this looks like when it's all financialized. Well, I think the first part of that question was how do the beethive actually organize and what does that look like? Tokens really are like minimum viable Dow in a way it is like, okay, let's just get ownership into people's hands here and that's giving them this kind of loose reason to start interacting with each other. I can very easily see a progression where an RAC token or a brand token like same fame or even real world existing brands like supreme or something like that, they were to take on this method. The progression is, okay, now we have this collective ownership in this thing. Now how can we start to collectively allocate pull use capital to take on some shared endeavor as a community? So I think I would imagine in that Bayhive case it's like, well, you'll have some subset of that community use things like Dows as a way to start pulling and allocating that capital together. Obviously there's a lot that needs to happen in the world for that to change. The very loose tie we have between physical and digital is like let's create a token redeemable for something.
04:30:53.684 - 04:31:35.590, Speaker C: It's going to take a lot for a Dow to pay a physical construction site. And maybe it's not even physical. It's like what we're talking about is the Bayhive funding the construction of statues in crypto, Voxels or Decentraland. Yeah, like a virtual exhibit or something like that. We're applying all these kind of world 1.0 physical concepts into what's going to happen in the virtual world over time. How big does this get? I think the creative industry has been facing all these real problems, but I think there's no reason that this same model of distributing ownership and giving communities control over capital couldn't apply to literally everything.
04:31:35.590 - 04:32:12.080, Speaker C: We just kind of published our manifesto yesterday. We do think that any collective endeavor of humanity can be taken on by just giving ownership and control of communities to the communities themselves. That sounds kind of circular, but there's been no way for communities to own themselves prior to crypto. They've always been disintermediated or they've been intermediated by corporations or platforms. So I think as big as it can get, I mean, it should be the new way of organizing, period. Corporation as a model is dead. Now it's all about community ownership and Dows.
04:32:12.080 - 04:32:47.748, Speaker C: What can the internet do at that scale? Who knows? I want to sneak one thing in for the interaction piece between communities. I had this thought today actually, and I was like, man. Community tokens introduce this really strong concept of accountability to creators, into communities. I think you sometimes see that playing out in personal tokens, but it's kind of cool that I don't know if a community token or a creator token got. This is a crass example, but I'm going to say it. But R. Kelly, all that hits the fan.
04:32:47.748 - 04:33:12.210, Speaker C: Everybody's dumping their community tokens, and R. Kelly's community is now worth nil, as it should be because he committed what are virtually atrocities. Right. I think that's a new accountability mechanism where now the creator is directly tied to the community, has real ownership of the creator value almost, whereas in the sense of the label, they might let R. Kelly continue to make music and whatnot. And, yeah, we won't buy it, but he's still getting supported to some extent. Right.
04:33:12.210 - 04:33:31.700, Speaker C: So there's like a dangerously strong accountability mechanism that I think we'll see prove out there, which is kind of cool. It's cool on the up and it's cool on the down, which I think will be really unique. Awesome. Well, thanks, guys. We are out of time. There were more questions in the chat. I mean, I encourage all you all to go join the chat.
04:33:31.700 - 04:33:51.472, Speaker C: There's an event discord too. There's tons of people who want to work on kind of creative projects, projects about music, about art. So as much as you guys want to hang out in the discord and give people ideas, we'd love to see that. So thank you so much for joining us today. Really appreciate it. And I look forward to the next live stream. Andre, sounds good.
04:33:51.526 - 04:33:52.544, Speaker I: Thanks for having me.
04:33:52.662 - 04:34:27.390, Speaker C: Thanks, guys. All right, so next up, our next talk is from Camila Russo, whose talk is titled D Five 2.0 community owned and meme based. Camila is a journalist and an author. She's the founder of The Defiant, a great source that I read all the time, and the author of The Infinity Machine, which is the first book about the history of ethereum. So we'll welcome Camila up to the stage and I'll let you take over here in a second. Awesome.
04:34:28.080 - 04:34:28.830, Speaker B: Hello.
04:34:29.440 - 04:34:30.092, Speaker A: Hey.
04:34:30.226 - 04:34:41.120, Speaker C: And before we get started, Camila, I want to make sure I can extract this promise from you. In the sequel to Infinite Machine. Will Ethanline be featured? Maybe in an early chapter?
04:34:41.460 - 04:34:48.912, Speaker E: Oh, my God. I mean, I will do anything to get a sequel out there, and that's a really small price to pay.
04:34:48.966 - 04:34:55.110, Speaker C: I would love that. All right, I will look forward to it. I'll pre order it as soon as I can and I'll let you take it from here.
04:34:55.640 - 04:35:30.460, Speaker E: Thank you. All right. Hi, everyone. I'm Camila. Yeah, the founder of The Defiant, a content platform focusing on decentralized finance and author of The Infinite Machine, the book on the history of ethereum that's right behind me. Hopefully everyone has been able to check it out. And, yeah, I will be talking about DFI or the shift that happened in DFI this year sharing my presentation.
04:35:30.460 - 04:36:27.730, Speaker E: All right, so DFI 2.0, community owned and meme based. Okay, there was a major shift in DeFi this year. And excuse my dog Kanga, she likes to participate. So I'm sure you all have seen the explosion that has happened in DeFi in 2020, but it's been more than just reckless speculation buying DeFi tokens. There's been a more foundational shift in decentralized finance, and I will try to make sense of it in this presentation. So there are a few things that are going out of fashion and a few things that are going in.
04:36:27.730 - 04:37:52.620, Speaker E: Things that used to be kind of the standard and pretty well accepted, like having a known team with a track record building in crypto or in the ethereum community are not as important as they once were. Having security audits and extensive testing, while before it wasn't done 100% of the time, it was kind of a requirement, or really kind of appreciated when they were done, especially by kind of the big projects in this space. Before, having venture capital funding was becoming really commonplace, especially after ICOs kind of ended because of the regulatory clampdown. So VCs kind of came in to replace them. Also, tokenless projects were held in really high regard because I think it was like because of the ICO hungover, people didn't trust tokens as much anymore. So projects like Unisop, which launched without a token, were seen as, okay, these guys are in it for the right reasons. Like they're not in it to sell a token and then cash out and make a quick buck.
04:37:52.620 - 04:38:33.370, Speaker E: Really. Before it was more common to have concentrated ownership. Because of these reasons that I said before, VC funding was more common. An established team working on a project. For a long time, these things led to allocations for teams, foundations, VCs. So concentrated ownership was also more common in pre 2020. And then initial exchange offerings and centralized exchange listings were also more common.
04:38:33.370 - 04:39:13.610, Speaker E: In the second half of 2020, these things started to change. So instead of a known team, we had more and more anonymous founders and team members. A great example, of course, is Sushi SOP with the Nomi chef, he or she is a character from a game. Nobody knows who they are. And that was completely fine. And people poured hundreds of millions of dollars into the project without knowing who the founder was. Now it's fine to launch a project.
04:39:13.610 - 04:40:18.424, Speaker E: It's never fine. But I guess the token holders and the community aren't afraid of getting behind projects that haven't been through audits and security tests. And this kind of testing production, meme has really taken a hold of the DeFi space well before there were VC rounds. Now it's no presale. And then a big theme obviously, is token incentive. So token rewards for putting liquidity in projects, and this is obviously known as yield farming, which has become hugely popular in DFI and driven a lot of the value that's come into the space this year. 100% community owned tokens versus concentrated ownership in teams and investors.
04:40:18.424 - 04:41:09.100, Speaker E: And instead of initial exchange offerings, there are initial decks offerings where DeFi projects list their tokens directly on decentralized exchanges like Unisop and Balancer. And then the final last important element that is in in D Five 2.0 is social virality or memes. And we get a lot of kind of projects that are basically an emoji finance and that will attract tons of money. So here are examples of kind of what was more common in the past. These were DeFi giants pre 2020. I lost the Unisop logo there.
04:41:09.100 - 04:42:05.596, Speaker E: But Unisop used to have no token. They had centralized government, they raised millions of dollars from VCs and the team are known and had a track record of building in the space. In MakerDAO, while governance is decentralized, maker foundation did control key pieces of governance. The foundation and VCs own a huge chunk of the Maker token. They've raised many millions of dollars from VCs and again, they're a known team and track record. So with this year, I think these two projects are a great way to show how this paradigm has changed. So with the previous examples, Unisop and Maker, those kind of foundational projects in DeFi, they've also changed this year.
04:42:05.596 - 04:43:22.790, Speaker E: Unisop now has a token and Maker is further decentralizing governance. They want to dissolve the foundation at some point, but these projects really kind of have changed the narrative and changed the paradigm. Urine Finance was the first project in DeFi to launch a 100% community owned Token. That means that at launch there was no investor and no kind of entity or team that had a pre allocation of the token and it became 100% owned by users of the platform. And this really kind of inspired the community and kind of raised the bar so that all of the D Five projects that launched after this, I guess had to consider whether their token would be 100% community owned. And it has become something that the DeFi community and investors and traders are coming to expect. If it's not 100% community owned, at least there has to be a small percentage allocated to previous investors and the team.
04:43:22.790 - 04:44:17.076, Speaker E: For both, there was decentralized governance from the start. Token incentives became key. With yern, users were incentivized with Tokens for putting liquidity in the protocol and in Wi Fi liquidity pools. And with Yam Finance this was taken to the extreme because the UI was basically made to yield farm. It remains to be seen what token holders will do with the Yam Treasury and maybe the team will serve another purpose. But it started out as a project that was basically made to yield farm. Andre Kranje of Urine Finance basically invented this test and prod meme.
04:44:17.076 - 04:45:13.240, Speaker E: And Yam Finance also launched without an audit. The big kind of change that Yam Finance made in DeFi was that it was the first of these meme focused coins. Like, suddenly after the Yam Finance launched, this kind of sweet potato emoji was everywhere on Twitter. And it just kind of made it clear how important it is to have this kind of virality in a project, something that's really easy to communicate, to copy and paste. Everyone has an emoji at their fingertips, basically. So these two projects set kind of like a template for what DeFi would look like for the rest of the year. I mean, they came out between August, July and August.
04:45:13.240 - 04:46:31.528, Speaker E: And from then on, we've seen a real kind of explosion with similar projects launching. So to backtrack a little bit on how we got here, ICOs were the first DeFi use case, and there we saw kind of the extreme at the extremes that people can go with. Speculation MakerDAO launched kind of starting as the first kind of founding project for DFI 2018. Compound and synthetics launched and DeFi continued to grow in 2019. The space kind of lost that fear of decentralized, autonomous organizations that ethereum ethereum community had since the Dow hack in 2019. With Molok, Dow and other Dows that came after it, that kind of fear and stigma was shed. And then this year, I think synthetics had token rewards earlier, but compound token rewards with its comp token really supercharged token rewards.
04:46:31.528 - 04:48:11.060, Speaker E: Because of how quickly the comp token surged and because of the way that the rewards were structured, people saw huge returns in a really short amount of time. And so because of that success and the liquidity that it drew, every other project wanted to create something similar. So with that, the next big milestone, as I said, was wi Fi. Then came Yam, and then came all the explosion of DeFi forts and yield farming and meme coins and all of that. So that's pretty much how we get pasta tokens, hot dog tokens, kimchi sushi, sashimi and cream, a fork of compound swerve, a fork of curve, and all this explosion with really kind of, I'd say, irresponsible UIs claiming a million percent yields and people just diving in. I also wanted to point out other fundraising alternatives are gaining traction. And it's not all about these kind of crazy token projects with, for a nonprofit dows grants with Gitcoin and this really cool experiment with Fairlaunch Capital, which is kind of a no strings attached kind of loan for a project to fund and be able to have an audit at launch.
04:48:11.060 - 04:50:22.584, Speaker E: So after all this kind of crazy explosion of innovation of 100% community owned tokens, no presale, no audits, and decentralized governance at the start, what are kind of the takeaways? Obviously, I think it's important to highlight the risks that have come from this huge kind of yield farming mania. I think for now, one of the important dangers is having misaligned incentives. And so a good example of what could happen with this was with SushiSwap, with the founder chef nomi kind of running off with sushi tokens. He did return them, but it tells you what can happen when you're not incentivizing founders and teams to stick around and build for the long term. An obvious risk when you have this sort of speculation and anonymous founders and launching with no audits is that you're going to get scams and hackers attracted to these projects. I guess a very recent one, which just shows you how crazy the space has become, is the example of eminence, where it's a project that the yearn founder andre krande was working on, and it hadn't even been announced or released, but somebody saw this twitter profile. Andre had retweeted a tweet from the eminence twitter, and just with that, the hacker kind of found the contract for the project after people had already minted eminence coins.
04:50:22.584 - 04:51:57.210, Speaker E: And again, this was a project that wasn't announced, and somebody like the hacker found it and stole the money. So it's this level of craziness that people are just willing to throw their money and crypto at whatever comes out with kind of yield farming and meme coins, and especially if there's like a celebrity DeFi founder like Andrea attached. Another danger of decentralized governance is governance capture, which I think decentralized governance will be better than the way things work. There's one company making the decisions for the protocol, but there's still the risk that one person or a small group of people can buy up all the tokens and just vote in a way that favors them. It's really hard to kind of prevent that. And then like we saw with ICOs, when there's a bunch of money coming in, when there's scams and hacks, when people are losing money, there's a risk that regulators will come in and put a stop to all this craziness. But for every risk, there's a way to see that as an opportunity.
04:51:57.210 - 04:53:58.400, Speaker E: So there is a risk of having misaligned incentives and founders running up with the money or simply not delivering. There's also the opportunity of coming up with better architecture for these DeFi protocols, figuring out a way of maybe having a vesting schedule for founders, having some kind of salary, having a percentage of coins minted go to people working on the project. There are different models for this, but I'm sure that after what we've seen so far, people will start to make these changes so that building in the space becomes more sustainable. With the scams and hats, I think it becomes more and more urgent to make sure that audits are affordable. So whenever you speak with these founders that launch without audits, the first thing they'll say is, of course, I don't want to put my users in danger, but I don't have that money to spend on audits, so what am I supposed to do? Stop building, stop innovating? And I don't think anyone wants that in the space. So there's a big chance of having white hat hackers having grants, having maybe, I don't know, some genius developer take advantage of this lack of auditors and just offer their services a little bit cheaper than kind of the big security firms and also market based protection. So something like Nexus Mutual or options contracts with Open, all of these should become more widespread and stronger.
04:53:58.400 - 04:56:25.010, Speaker E: And then with governance capture, I guess obviously the opportunity with decentralized governance is having greater democratization of decision making of the protocols and there are different kind of measures that you can take to make sure that your project doesn't get owned by whales. And then and I think a good example of this is what happened with BitMEX yesterday, there's a risk of regulatory scrutiny, but because of that, I think the pressure is on to make sure that DeFi is actually decentralized so that there's actually a regulatory shield for DeFi projects. The more that DeFi lives up to what it's supposed to be, which is owned by its users and non custodials, so that protocols aren't actually touching users money, they're not touching users data and they're controlled by their users, the lower the risk that it can become censored and taken down like what's happened to BitMEX. So I think all this craziness, it's bound to bring, yes, scams hacks, but it's also bringing a lot of innovation capital attention to the space. So I'm sure DeFi will come out stronger from this craziness and we will look back and say and take away really great lessons from this that will make the replacement of traditional finance a lot faster. That was DeFi 2.0. Yeah, please subscribe to the Defiant and follow on Twitter and yeah, I don't know if there's any questions or if there's time for questions.
04:56:25.460 - 04:56:26.064, Speaker C: Great.
04:56:26.182 - 04:56:27.248, Speaker F: Yeah, we actually do have a couple.
04:56:27.254 - 04:57:07.768, Speaker C: Of questions if you've got a few minutes. Stick around. Great. So one question and full disclosure is a question from me, but one kind of thing you mentioned a couple of times is anonymity of founders and both the benefits and risks of that and one thing that people in the Ethereum space been working on for a while are credible, decentralized reputation systems. And I wonder if you could comment on how or whether good reputation systems could help alleviate some of the problems you discuss and how those two areas of applications might evolve alongside one another.
04:57:07.954 - 04:58:08.130, Speaker E: I think that's a great point because it also kind of touches on the regulatory risk, right? So you want to be able to trust the people behind the protocol that you're putting your money in. But at the same time, founders want to protect themselves from potential regulatory scrutiny. So how to kind of balance those two things? And I think a great way to do that would be to have some sort of reputation system where you don't have to know the person's name, but you can have some sort of on chain record where you can have some score or some trustless way of verifying that, okay, this person has been building in this space for a long time. They've been paying their CDPs. They have a good track record with their trades or whatever it is that you'd want to check.
04:58:12.050 - 04:58:28.420, Speaker C: So a question from the chat. So it's obviously been an interesting and sometimes crazy year for not only the world, but for DeFi too. And I wonder what events in Ethereum DeFi specifically surprised you? The.
04:58:31.110 - 04:59:13.950, Speaker E: Mean, I think this yield farming craziness, I never saw it coming. I think kind of a good sign of that was that I remember the day that the compound released its token, and we all knew about this in kind of the Defiance Contributor chat, and I assigned kind of topics to write, and I had assigned the compounds comp token as a really small blurb. I didn't see that it would make huge news. I was like, okay, so they're releasing their token. It's a governance token. It doesn't do much. It's not supposed to be traded right away.
04:59:13.950 - 05:00:12.082, Speaker E: So I don't know. I really didn't think it would be a big deal. But obviously the thing kind of exploded and went up like, ten times, I guess, in value in one day and drew in tons of liquidity. So, yeah, I definitely didn't see a yield farming craziness coming. It just showed how powerful token incentives are. And I think, like I said, that's an opportunity to be harnessed, and I don't think DeFi is using them in the right way right now. I think a lot of the rewards are placed in such way that it's very short term rewards and aren't kind of built to incentivize a more sustainable and long term building of the product.
05:00:12.082 - 05:00:22.130, Speaker E: But I think that'll start to change, and I think it's a good lesson to learn that, wow, these things really drive a lot of activity and liquidity.
05:00:22.870 - 05:00:33.194, Speaker C: Got it. Great. Well, thank you so much, Mara, for joining us. That's all the time we've got. We're going to call up our next speakers, but really appreciate you taking the time. Everybody check out the Defiant. Go read Camila's book.
05:00:33.232 - 05:00:34.842, Speaker E: It's great. Thanks so much.
05:00:34.896 - 05:00:44.714, Speaker C: Thanks very much. All right, so up next, we have a great talk from Remix. If you've been around the Ethereum space.
05:00:44.752 - 05:00:45.754, Speaker F: For a while, you're a developer.
05:00:45.802 - 05:01:21.898, Speaker C: You've definitely used remix. I remember using it in the very early days, and it's gone through great transformation since then. So we've got Rob and Yuri coming up to give you kind of a walkthrough of Remix, some recent features and kind of the workflow you expect and kind of what you can use. And Remix, the Web app, remix desktop from importing to deploying and more. So I'll let these guys take it over because they know more about it than I do. Welcome, Rob and Yuri. I.
05:01:21.898 - 05:01:25.250, Speaker C: Think you're muted there, Rob. Good to be here.
05:01:25.400 - 05:01:48.300, Speaker G: Okay, so I think I'll start by sharing my stream and getting onto the presentation. But we're going to go over the interface, the plugin architecture and the differences between Remix Desktop and Remix Web app. So I'll get going with the share.
05:01:54.240 - 05:01:54.652, Speaker C: Okay.
05:01:54.706 - 05:01:58.172, Speaker G: Is it sharing? Hello?
05:01:58.306 - 05:01:59.196, Speaker A: Yes, all good.
05:01:59.298 - 05:02:34.276, Speaker G: Okay, great. So when you come to remix this is remix ethereum.org. It's an online IDE. So when you get here, you probably come to the home screen which is Lists. You can see our Medium articles and our Twitter feed over here on the right. Generally just a general architecture of remixes. Here on the left is the icon panel.
05:02:34.276 - 05:03:35.420, Speaker G: This lists the plugins which are loaded here and here's the home tab. And this is the main panel. And this is a Solidity file which you get from the file Explorer. And there's some default Solidity files here just to try stuff out like well, browser storage and owner. And they come up here. And then when you want to compile it well, actually if go back to the home, generally it's used with Solidity. And with this plugin architecture, to get different functionality or connect to Ethereum like Blockchains, you got to use different plugins.
05:03:35.420 - 05:04:18.730, Speaker G: But we'll load a bunch of plugins with one click when you click the Solidity button over here on the featured plugins. So you get the Solidity compiler, but also you get Deploy and Run and unit testing. But here in the plugin manager you can load a number of other plugins or a lot of other plugins and deactivate them. So first we'll compile this contract. Actually no, I like looking at a light screen. So I'll go over here and there are a number of other themes. And this is the settings panel, which the icon as you get to down here.
05:04:18.730 - 05:05:23.152, Speaker G: And then this file has to use a compiler that's less than seven. But you choose your compiler here. And actually if we had changed this to six and we want to compile it by clicking the compiler here, it loads a lower version so that it will work with this. But if we raise this back to seven and then we can raise this to something else and then it's loading the compiler now and then it's compiled when you see this little green badge over here. And now that it's compiled, you can get compilation details. So by clicking down here. And this is important for getting like the Abi if you want to grab the API and you can grab the Abi and put that in your DAP so I'll get rid of that.
05:05:23.152 - 05:06:47.108, Speaker G: And you can also publish to IPF and swarm here the compiled file. And then you go to the Deploy and Run. So in Remix it comes with a default blockchain which is on the JavaScript virtual machine. And then there's injected Web three which is essentially MetaMask as long as you have the MetaMask extension installed on your browser and Web Three provider which will connect to a local node, a test node, or you could point it to another specific node. And when you use the JavaScript VM, you don't need to approve the contract, the transactions and the accounts we give you, I don't know, ten with some ether on them. Okay, so looking at this interface now, we can deploy it to the JavaScript VM and we deploy that here and the deployed contracts come down here. If I want to interact with the contract to change the owner, I would grab another address here, copy it and then put it in here and change the owner.
05:06:47.108 - 05:07:59.470, Speaker G: And as you can see, something happened, it reverted. Oh yeah, I wasn't the owner because only the owner in this contract is allowed to change the ownership. And so this is when a transaction doesn't go through. And then you can click here to get to the debugger, which I'll show you a bit later. But now that we have the right owner up here and we have the new owner we want to change to, we'll click that and it will go through. So this is a transaction that we're going to put through. But if I want to do just use a View or View pure function, they're in blue and they look like that and that's the return of the view and pure function down here in the editor, as you could see the terminal, you can see where the transactions are displayed.
05:07:59.470 - 05:09:29.040, Speaker G: So if we want to get a payable function here and change this to a public payable, and then we go back to and compile it and then we'll get rid of this and then we'll deploy it, it's now red because that's a payable function. And if you wanted to so that means we're sending value and we choose what value, what unit and what value here. This is not the gas, this is the value and that's how you change it. Okay? But we'll make that back. Put that back to what it so now if we want to change it to MetaMask, so we're deploying it to Gurley in this case, because I've got MetaMask connected to Gurley, I'll deploy and it's asking me for approval. And you give it and then it comes back over here and then it gives the ether scan link and when that transaction comes through, finishes processing, it'll show up here. Let's see, in terms of.
05:09:31.250 - 05:09:32.046, Speaker C: Hackers will.
05:09:32.068 - 05:10:29.630, Speaker G: Probably need to be working in one of the big things you're going to be doing is importing files into Remix or into whatever ID you're going to use. So here I'll get a sample way of importing. If you have a gist, I got a gist that I'm going to show. So we go into the terminal and if you type Remix, it gives a command line, interface code, completion of some commands and we're going to load gist. So it completes that. And I got the ID of the gist and then we load that. Okay, so now you can see the gist is loaded.
05:10:29.630 - 05:10:59.338, Speaker G: This Gist folder showed up and this is what was in the gist. Also, you could load a URL this way too. So like if I wanted to load a smart safe math, then I come back here and I do Remix load URL.
05:10:59.474 - 05:11:00.160, Speaker A: It.
05:11:11.410 - 05:11:25.430, Speaker G: Let'S see, did it get it? Maybe it didn't work. Maybe the path was not correct to that. Oh.
05:11:31.650 - 05:11:32.400, Speaker C: That.
05:11:34.770 - 05:12:29.134, Speaker G: Okay. See, it loaded. And then if we wanted to refer to this file, if we wanted to load safemath into one of this file, you'd do an import, but you'd have to give the entire path to that folder another way to load it. Actually, another thing you should know about is here in the File Explorer and almost in all of our internal plugins and most of the external plugins plugins that other teams have created. There's this book here which will take you to the documentation. In our case, it's on Read the docs, but this link could take you to whatever the plugin documentation is. But if you wanted to connect, the other issue here is the files here are stored in local storage on your browser.
05:12:29.134 - 05:13:46.220, Speaker G: But if you wanted to connect Remix, the web app, to a folder on your computer, you have to have Remixd running. So I'm going to load that plugin and I'm not going to hit Connect because this is the link to the tutorial and also the command that you have to put in a terminal on your local computer because we're connecting to a specific folder. So I'll put that command over here. It's not going to work if I have Remix Desktop running, which I think should be running here. So I got to close that and I'll go over here and I'll run this command again. Because both Remix Desktop and Remix IDE are connecting via Remix D, it's only going to be me in a presentation that's going to have this problem, I think, anyway. So that's working.
05:13:46.220 - 05:15:03.530, Speaker G: And so now when I hit Connect in the File Explorer, I'll have Localhost, and this is the folder that I'm pointing to. And so in this folder, I could share files, I could pull a repo from GitHub and it's going to show up on the online web app. And if I clear my browser storage, I'm not going to lose any files. And if I made a new folder file up here, for example, when I clear my Local storage, this untitled sol is going to go away. Yeah, that's important to know. And so I can pull files in from GitHub or I can pull NPM packages into that folder just like you normally would. Now the other thing to do is I think we're going to go over to Remix Desktop because then you don't have to jump through the hoop of doing Remix deat.
05:15:03.530 - 05:16:35.934, Speaker G: So I'll turn off this and I'll launch Remix Desktop and oops, and it's starting. So here I like the white theme anyway, light theme. And so now here with an open folder, you can point to a folder on your hard drive and I'm going to point you to this one. So now the contents of that folder are showing up in Remix. And the great thing here is that I can refer to NPM packages just with the at symbol here like you would do in Truffle. And then that will compile. Okay, so the difference with Remix Desktop and Remix, the Web app is that in Remix Desktop, there's no MetaMask because it's not a browser.
05:16:35.934 - 05:16:40.580, Speaker G: So there's no browser plugin. So either you have to have.
05:16:42.630 - 05:16:42.946, Speaker C: You.
05:16:42.968 - 05:18:04.586, Speaker G: Can use the JavaScript VM or you can use Web Three provider and that will connect to a local testnet as long as you have it running in the background. And here I'll get that mine running in the background and I connect. So now it's connected. You can see here is the indication of what the testnet is and I can compile owner and I'll deploy it and then that's on that testnet. The other new development here is that we can use a Wallet Connect plugin which I think is activated currently. Yeah, Wallet Connect is activated if I have MetaMask not the browser plugin but the mobile wallet. Sometimes this is a new addition to Remix.
05:18:04.586 - 05:18:33.130, Speaker G: So I'll try to get this to work. I think it might work. The last one. Well, I'm going to clear it probably a bad idea. Okay, well, maybe that's okay. So I'm going to connect. And now I have got Remix Desktop connected to my mobile wallet.
05:18:33.130 - 05:19:14.120, Speaker G: And so now when I go to deploy, I'll switch to Wallet Connect. And now when I go to deploy, there's a window that you can't see because it's on my telephone. And then I have to edit the gas. So I give it a lot more gas than the default is for this deployment and I hit Save. Hope that's exciting for you to watch. Okay, the nonsense too low, but.
05:19:16.510 - 05:19:16.826, Speaker C: You.
05:19:16.848 - 05:19:58.920, Speaker G: Can get that to work. I think we'll clear the current request. I'm not sure it's worth trying it again, but anyway, it work. I don't know. Okay, so what else do we should we cover? We should probably cover other plugins in Remix. So a really great one is the Documentation Generator, which is this one. So if we go to.
05:20:02.570 - 05:20:03.078, Speaker C: We'Ll go.
05:20:03.084 - 05:21:01.782, Speaker G: To File Explorer and make sure we have the owner is the active file and the editor and then we'll compile it. And then we'll go to Documentation Generator and we'll get that. Of course this thing is blocking the top of my screen. Okay. So I guess we're going to go like this so I can see the top and choose Document Viewer. And here is the interface of the contract. So if you're working with team members that are trying to explain your code, you can generate the interface.
05:21:01.782 - 05:22:49.364, Speaker G: And the interface is made from the Natspec comments here. Oh, well, these aren't Natspec comments. So if we go to here and then we use that plugin here, documentation generator and we've compiled it up, compile it and then we go here and we can view the documentation over here. That's a bit better. Okay. Another interesting and it's also important is the static analysis tool and remix and the unit testing. So if I wanted to test owner again, make it the active file and then we generate it and then I want to run this and here it's because it's checking this failure here and it shows you the name of the function that failed and what the issue is.
05:22:49.364 - 05:24:09.560, Speaker G: And there is a number of we have good documentation about this, but also tutorials on our medium publication list. And as long as we're doing that, we could go to we'll just do a quick debugging session too, where we'll compile we'll just deploy this to the JavaScript VM and then change the owner. Also you should know that down here, if you open this up, you can see each parameter will have its own input box. So if there were like five parameters for this function, they would each have their input box. And it's a lot, it'll save you some sanity. Also, if you click this button, it will tell you it will encode the values and copy them clipboard. But if they're not the right type, it will error.
05:24:09.560 - 05:25:04.620, Speaker G: So if we click that, it will say copied because it's the right type. But if we had like that, we'll say error. And that's useful for just knowing that you put in the wrong type. So we'll hit transact, try this again, it and then we'll change the owner. And then we can go to the debugger by clicking over here. And in the debugger we'll see we can scroll, it will show the solidity locals and the solidity state variables. And this will go step by step upcode by Opcode.
05:25:04.620 - 05:26:13.520, Speaker G: And soon you'll see that what the input was for the new owner and the solidity local, which is over here. And similarly, as while you're writing your code, you could turn autocompile on here. And like, if you if you add something that oh, also there's yeah, if you, if you add some code here, then it'll give you an error. So it'll always pop up the errors as you're typing. And those are the essential ones. There's a number of other interesting ones too, including gas profiler. It will tell you how much gas you're using and you can load EPM to download modules.
05:26:13.520 - 05:26:37.150, Speaker G: DeFi Explorer is a great new plugin and it will load all the in this case right now, it's the first one that's working, but it's uniswap. It will load all the protocols files so that you can start playing with them. And I think we could take some questions now.
05:26:45.120 - 05:27:12.630, Speaker C: Great. Thanks, Rob. All right. I will turn it over to my team behind the scenes and see if we have any questions. Mean, maybe, Rob, you can kind of COVID anything else you want to get into about what the future might hold for Remix, kind of features on the roadmap you'd love to see, or even just things that you think are generally missing from the Ethereum developer devtool suite that maybe other people are working on.
05:27:14.060 - 05:27:26.860, Speaker G: Let's see. Well, we're starting to get some of the documentation translated into multiple languages. And what else is going.
05:27:26.930 - 05:27:27.756, Speaker A: I mean, there's going to be some.
05:27:27.778 - 05:28:36.560, Speaker G: More developments with the Wallet Connect plugin because it becomes, like, a nice way of developing an app and Remix that it's more like you're adapt user at the same time you're developing the app. So that's important. And I'd like to see more interaction between how you can be like, a Truffle developer and use Remix for what it provides so we can use the tools together and also an Embark developer and use Remix for what it does. And we're also, like we have a Quorum plugin, so we also have this Remix plugin architecture. So it's interesting to see if this architecture could be used in other projects outside of Remix on a kind of macro level as well. And maybe, Yuri, you have some ideas.
05:28:38.100 - 05:29:07.128, Speaker C: Well, more under the hood. We're making an effort to make the libraries itself reusable in other projects. We have a simulator that Remix uses that can be run on the command line, and you can connect to that simulator. It's useful because it has some debugging functionalities. We also have a command line debugger.
05:29:07.224 - 05:29:10.904, Speaker A: And we're making that debugger also usable as a library.
05:29:10.952 - 05:29:34.780, Speaker C: So other projects can integrate and leverage the same debugger. And one other question. If people want to contribute to Remix, where do they go? Is there a place they should come chat with you? Do you want to direct them to a specific repo if they want to contribute?
05:29:35.280 - 05:29:47.904, Speaker G: Yeah, there's both the getterchat. It's ethereum remix. I'll have it in the slides that I'll share later.
05:29:48.102 - 05:29:48.896, Speaker C: Got it.
05:29:48.998 - 05:30:04.804, Speaker G: And then also the repo is Dashproject, which is our new mono repo. So that's the overarching repo to check it out, pull from.
05:30:05.002 - 05:30:05.988, Speaker C: Got it.
05:30:06.154 - 05:30:06.772, Speaker A: Okay.
05:30:06.906 - 05:30:27.176, Speaker C: Thank you, Rob. Thank you, Yuri. We'll call it there and introduce our next speakers. Really, thank you for the time, and I hope that any hackers watching this get to use Remix to build your product, and I'm sure you can ask any questions you have about it in the getter chat. We'll make sure that that link is dropped into the event chat as well. Okay. Thanks, Rob.
05:30:27.176 - 05:30:27.740, Speaker C: You're great.
05:30:27.810 - 05:30:28.670, Speaker G: Thank you.
05:30:30.160 - 05:30:50.956, Speaker C: All right, so next up, we have a talk from both Brian and Alan from the Dark Forest team. Dark forest is. I mean, I'll let them explain it properly because I won't do it justice, but it is a real time RTS built on Ethereum, inspired by the Three.
05:30:50.998 - 05:30:52.288, Speaker F: Body Problem series of books.
05:30:52.304 - 05:31:09.000, Speaker C: If you recognize the name, the Dark Forest is the second book in that series and they're going to talk about challenges and constraints in ZK gaming. So, Brian Allen, I'll let you take it over from here and please welcome them to the stage. Thank you. Awesome.
05:31:09.070 - 05:31:24.270, Speaker D: Thanks so much, Josh. Let's just get our screen share working first, and then we'll go ahead and do a quick intro. Are you guys able to see this.
05:31:26.640 - 05:31:27.100, Speaker G: Okay?
05:31:27.170 - 05:31:41.456, Speaker D: I think it's awesome. Nice. Yeah. So, first off, thanks for having us. Just by way of brief introduction, my name is Brian. I'm a sort of senior at MIT studying math, and I'm working on Dark Forest.
05:31:41.568 - 05:31:48.756, Speaker C: And I'm Alan. I'm a sort of sophomore at Columbia studying CS, and I'm also working at Forest. Cool.
05:31:48.858 - 05:32:48.296, Speaker D: So, like Josh mentioned, dark Forest is a real time strategy game in a persistent universe built with ZK snarks on Ethereum. And like you mentioned, it's inspired by the Three Body trilogy written by Leo Sashin and translated by Ken Liu. So it's been a lot of fun to work on this project, and we're excited to share with you some of the challenges and constraints that we have found in building games on zero knowledge and on Ethereum, which is what we're going to be talking about today. Cool. So, first off, for those of you who aren't familiar with Dark Forest, like we mentioned, it's a persistent strategy game built with ZK snarks on Ethereum. The sort of experience of the game is one where players are exploring space, they're conquering planets, they're looking to build their kind of, like, galactic space empire. And last month we ran our first semi public play test, dark Forest B 0.3,
05:32:48.296 - 05:33:19.024, Speaker D: with about 300 beta players and broke Robston, which was quite exciting. So I think at peak, the usage of the Dark Forest core contract, as far as gas usage goes, was exceeding the entire Ethereum mainnet combined. So we have some things to say about Scalability at the end, and we're also obviously very excited for Vitalik's talk on Scalability later this evening for this reason. So just to give a quick, almost like, little demo of what Dark Forest actually looks oh, 1 second, I think.
05:33:19.062 - 05:33:19.650, Speaker C: My.
05:33:23.140 - 05:33:28.036, Speaker D: How do think okay, here we go.
05:33:28.058 - 05:33:28.388, Speaker B: Yes.
05:33:28.474 - 05:33:28.772, Speaker C: Cool.
05:33:28.826 - 05:33:48.296, Speaker D: So this is a little just sort of demo video we just recorded on Dark Force V 0.4 gameplay. So Dark Force V 0.4 is the next version that we're actually releasing today. So the first round of Whitelist Keys is going to go out later this evening. But as you can see, it's a space conquest game. There are planets in a large universe.
05:33:48.296 - 05:34:07.910, Speaker D: You can make moves between these planets. Planets have resources. Your goal is sort of to explore and conquer space. And that's sort of the mo of the game. Yeah. And if you're interested in checking out V 0.4, you can go to Zkga me and we'll have contact info at the end as well.
05:34:07.910 - 05:35:33.432, Speaker D: So today we're going to be talking about challenges and constraints in building a fully decentralized, persistent strategy game that is actually fun. So, as we all know, Ethereum as a computer is extremely slow, but there's been a lot of excitement around blockchain gaming the last couple of years, just especially given the potential of games to really showcase the possibilities of technology. So our goal is to create a persistent universe almost like an infinitely modable scriptable Eve Online sort of game with economic value at stake and all these sorts of things, again and have it built entirely crypto natively. So there's no notion of we're not just periodically committing stuff to the chain, we're not having some system where some game assets happen to be like Exitable NFTs or something. It's like the data layer of this application is on Ethereum and anyone can interact with that programmatically however they like. So the first challenge, and the whole reason why Dark Force is built on ZK Snarks is that the notion of incomplete information is really hard to achieve on the blockchain. So what does this actually mean? Well, to understand what this means, first we have to understand the difference between two classes of games complete information games and incomplete information games.
05:35:33.432 - 05:36:40.180, Speaker D: So for those who aren't familiar with the concept, complete information games are games where all players know the full state of the universe. So you can think of games like chess or Checkers, where basically I know where your pieces are, you know where my pieces are, there's no secrets anywhere on the board. On the other hand, incomplete information games are going to be games like Poker or StarCraft where there's some hidden information and not everybody knows everything that's going on in the game. So I don't know your hand necessarily, and you don't know my hand or in a lot of strategy games, there's the notion of a fog of war where you don't know where your opponent's base is until you've explored the map and found them. So traditionally, incomplete information games are often able to offer players a much richer space of possible strategies to execute. The reason being because when you have this asymmetry of information between different players, it opens up strategies like deception or conditional coordination. You get to see sort of these large scale social dynamics or even like emergent player behaviors.
05:36:40.180 - 05:37:24.284, Speaker D: So traditionally, pretty much all popular MMO massively multiplayer online games are going to be incomplete information games. So we think about RTS games, we think about RPG games, all these sorts of things. Unfortunately, if we're trying to build a multiplayer game on the blockchain, well, this is almost at ODS with the affordances that the blockchain allows us. In particular, by design, blockchains and decentralized systems are often systems whose data layers are completely open and transparent. So the EVM state is completely inspectable like everybody knows everybody else's balance. I can look up your balance, you can see my balance. We can inspect the state of this contract.
05:37:24.284 - 05:38:36.344, Speaker D: And so it means that the notion of keeping private state on a blockchain or a decentralized system is actually quite tricky. If I want to move a piece on this board or something like that. Naively, it seems like I have to commit the starting location of the piece and the ending location of the piece and that's going to go onto the EVM and everybody's going to be able to see where I am. So this means that the games that we've seen so far on blockchain are oftentimes we've got games like CryptoKitties, so we've got these trading card games where everybody knows for example, who owns what kitty and what all the properties of each kitty are. But we don't necessarily yet have games with meaningful notions of incomplete information or private state. So how do we get information asymmetry on a blockchain? Well, it turns out that with some zkSNARK technology that was made possible about twelve months ago, we're now able to keep hidden information in DApps and use this to create some class of incomplete information games. So how exactly does this work? Well, let's suppose that we've got some incomplete information game where players are keeping a notion of private state.
05:38:36.344 - 05:39:42.636, Speaker D: So on the left hand side of this diagram we've got this player who has some secret state s one. Instead of committing their private state up to the network, which would make it public, what the player is going to do is they're going to commit a commitment to their private state. So for example, a hash of their private state up to the network and they're also going to associate that with a proof, a zero knowledge proof that that hash does indeed correspond to a valid private state. So by submitting this zero knowledge proof on chain, what they're essentially saying is here's a hash of my private state. If you inspect this proof, you can verify that this does not correspond to a private state where I've given myself extra resources or cheated or anything like that. So what happens when a player wants to make a state transition? Well, if the player wants to transition from private state s one to private state s two, what they're going to do is they're going to publish a commitment to their new private state. So this would be C two along with a zero knowledge proof that there is indeed a valid state transition between the private state's underlying commitment C one and commitment C two.
05:39:42.636 - 05:40:31.660, Speaker D: So morally, this zero knowledge proof is saying something like for example, in a chess like game, you might say something like I'm moving my knight from secret location A to secret location B. I'm not going to tell you where A and B are. But this zero knowledge proof does prove that the knight moves in an L shape. It was a valid move. So in this way the player is able to keep players are able to keep a meaningful notion of private state, but zero knowledge proofs keep them honest and these proofs are going to keep them to playing consistently by the rules of the game. So just to clarify the information that players know, they know their own local private state, but information that any public person just inspecting the network knows, all they're going to be able to see is C one and C two. And that S one and S two is entirely obfuscated.
05:40:33.680 - 05:41:20.030, Speaker C: All right, so I'm going to talk a little bit about trying to actually build a game that's real time on Ethereum and the constraints we have there. So in particular, there's kind of two large problems. The first is that we can't really schedule any sort of tron job. We can't really schedule anything that happens in the future. So traditionally, if I'm going to play a multiplayer game on a centralized server, I can queue some moves and then maybe my client disconnects and then these moves are queued on the server, which is going to modify the game state afterwards. But if I make some moves in Dark Forest and then close the client, then there's no way to actually ensure that these moves are going to be are scheduled to happen at some point in the future. And on top of this, each time I submit a move to the game, it takes a few seconds to confirm because of the Ethereum block times.
05:41:20.030 - 05:42:18.080, Speaker C: So the first technique that we use to solve this is something that we call lazy updating. So in particular, we have some resources in the game which follow some sort of a growth curve and suppose that say, I have energy at some point in time, I have my energy at a certain value and over time this grows. So for instance, at T equals zero, as a player I can move shifts from planet A to planet B and I can schedule them to arrive at time T equals ten. And then at time T equals ten, the number of shifts that I have on that planet is going to change. However, at this point, I can't actually schedule a cron job for the state to change. So what I do is instead I queue the event or I queue the arrival of this event occurring on the planet. Then at T equals 15, after any other player makes a mutation on planet B, I can retroactively apply the event and I can kind of pop the stack and go through every event that's been queued.
05:42:18.080 - 05:43:15.810, Speaker C: So the other solution that we have is that we basically try to design the game around longer timescales in order to circumvent the fact that. It takes time for transactions to go through. So in particular, if we have moves that take on the order of ten to 15 seconds, then block times the three to 15 seconds meaningfully impacts experience. But if our move times take from like ten minutes, like 2 hours, then in this case, the three to 15 seconds basically doesn't make a difference. Now we actually have a nice side effect from this, which is that we not only want to build something which is technically interesting, we also want to build a project that can really target not only people who are really interested in crypto, but can target general consumers. Basically we want to be able to build a game that's really accessible and fun as well. And games that have typically done a really good job of this are games like Pokemon Go or Candy Crush in which you basically play for a little bit at a time and then you check back in a few hours later.
05:43:15.810 - 05:44:02.850, Speaker C: So the way that we kind of see this internally is that this is not so much of a restriction, but it's more of a constraint that we want to lean into, which is that if we build a game, that occurs on longer timescales, it might actually be better for targeting the kind of audience and getting the kind of players that we want. In particular, if we build a game that's really APM sensitive, where the number of moves you make and how quickly you make them meaningfully impact how well you can play the game, this is not only bad for Ethereum, but this is also really bad for casual players. And our last solution for this problem is that we want to build meaningful client side mechanics. So because we have a lot of private state that's all held off chain, we can interact with the game in a way where we're only interacting with that private state. So for instance, planet locations are held as private state and this means that we can.
05:44:04.980 - 05:44:08.310, Speaker D: The weird thing where the screen recording box?
05:44:12.200 - 05:44:13.044, Speaker C: Wait 1 second.
05:44:13.082 - 05:44:16.324, Speaker D: Let me oh, here we go.
05:44:16.362 - 05:44:55.052, Speaker C: There we go. Okay, so in particular, you can explore the universe and find new planet locations and all this happens off chain. You don't actually need to interact with the blockchain at all. So this means that players can play the game for stretches of like ten to 20 minutes at a time without ever actually needing to interact with the blockchain at all. So the other challenge that we have is we want to build a rich and meaningful universe, but we have a constrained environment. It's not only constrained by time, but it's also constrained by compute and by storage. So the way that we approach this is we basically lean a lot into procedural generation.
05:44:55.052 - 05:46:02.100, Speaker C: So procedural generation is a technique that's used a lot by games like Minecraft, where you basically set some number of simple rules for the universe and you can use these rules to generate what the universe will look like. So the picture here shows perlin noise, which is this function that's often used. And you can basically think of this heat map as being analogous to mountains and hills in Minecraft. And this means that we can have dense areas, we can have hot areas, we can have oceans, we can maybe have areas where the planet density has changed or planets are more powerful. And there's also a neat side effect of this, which is that since we need to roll this up into a Snark, this actually means that we can save some of the compute from the contract, because the contract doesn't actually need to be aware of the perlin function. It only needs to be aware of whether or not the proof is correct. So we also lean into this kind of generation on the client side as well because on the contract, the contract is only aware of planets as being some sort of ID with some properties.
05:46:02.100 - 05:46:54.536, Speaker C: It doesn't actually have any knowledge of what these things look like. So the way that we present this is that we deterministically from the hash of the planet, use this to generate all the planet properties and this way people who are using the same client are going to be able to see the same planets. So the thing that this kind of leans into and where this presents another constraint is the fact that DApps are all client agnostic. So people can only if people are using the same clients are they going to see the same planets. But people can all bring their own clients. And the problem here is that if we want it is that typically it's already very hard to design games. And some games in the past, like RuneScape have had problems where they design a centralized player experience for their server and they give people a client, but then people start bringing their own clients and this can do things like show additional stats or maybe queue moves for you in an automated way.
05:46:54.536 - 05:47:32.704, Speaker C: And this is basically guaranteed to happen as long as we're writing games on Ethereum. So again, we try to lean into this and we don't really see this as so much of a restriction but it's more of a constraint that we're able to lean into. So it means that we want to lean into interop and modability. We want to lean into interop where other contracts can be making calls on the Dark Forest client. And the way that we do this is we build a really simple set of rules. We say something like we have a notion of distance and we have a notion of resources, but we don't actually say what these resources necessarily mean. And what this means is that someone could technically reskin the entire client.
05:47:32.704 - 05:47:57.660, Speaker C: They could write ZK Fantasy or they could write ZK Spaceman Spiff and we could write a different version of the client where instead of sending forces between planets, we're sending gold between different castles and there's dragons and flying around and everything. But at the contract level the contract is only aware that there's resources moving around. It's not necessarily aware of the cosmetics or of exactly how the game looks like to the user.
05:47:58.960 - 05:49:06.716, Speaker D: Yeah, and to jump off this, this is not just something that necessarily exists on the cosmetic level, but can also exist on the level of mechanics as well. So even with our last game that lasted about a week, we saw players like modding clients writing extra features. What we're really looking into is this idea of being a very modable boughtable interoperable game from day one. Just as an example of things that might happen with this in a traditional game. If you as a game developer wanted to introduce a trade feature where players can sort of exchange resources, then what you might have to do is like on your Canonical client, you would write a trade button and then you'd write the trade server route and propagate that all the way to the data layer here. All we have to do as developers is we define essentially the physics of the game universe and implement that as smart contracts. Someone else can come in and they can say something like, well, I'm going to spin up an escrow smart contract that says anybody who deposits three ether into this contract, I'm automatically going to send them some amount of silver from my planet to theirs.
05:49:06.716 - 05:50:20.730, Speaker D: And in this way you can get these sort of coordination constructs that are happening at the contract level without any input from some centralized authority that's determining what the gameplay experience ought to be on the client level. What we're trying to look into now as well is with V 0.4 we're introducing an interactive terminal as a first class feature in the game where basically anybody can write and share scripts that perform different automations, for example, sending forces programmatically between planets or anything like that. And what we're really looking to do and what we're really excited about is the prospect of a game that is really built and designed by the community and just leans into the creativity of the player base in order to really achieve its potential cool. So the final challenge that we're just going to briefly touch on is the challenge of scalability. As mentioned, our last play test, which was a private beta with about 300 players, exceeded the total transaction volume of main net, especially with current gas prices. This means that the game is currently unfeasible to be played on E one, L one.
05:50:20.730 - 05:50:56.192, Speaker D: So what we're looking into here is we're looking at all sorts of different strategies for potential like layer two solutions. I know that optimism. They just announced their testnet and there's a lot of great progress going on with ZK roll up as well, which we're super excited for. So roll up solutions in the long term. And as of the current iteration of the V 0.4, we're actually going to be running this one on the L2. XDI stake network, which has a token bridge to Ethereum, is essentially just another EVM swap out the RPC endpoint.
05:50:56.192 - 05:51:20.540, Speaker D: And what this allows us to do is we can introduce the notion of economic value into assets in the game while keeping low gas costs, security guarantees and centralization obviously aren't going to be as great. But as a staging environment, this is a good way for us to be testing out what potentially the future might look like once there are these sort of off chain L2 solutions for cheaper computation and storage.
05:51:22.880 - 05:51:23.292, Speaker C: Cool.
05:51:23.346 - 05:51:58.888, Speaker D: So I guess the last thing that we'll mention is that Dark Force B 0.4 starts today. We're sending out the first batch of invite keys tonight and there's a number of interesting things for those of you who have seen V 0.3 that we're introducing here. One thing is burner wallets. So players in the previous game who would make thousands of moves over the course of a week would have to click that pesky little MetaMask confirm button like literally thousands of times. With Burner Wallets and sort of an in page provider, we're able to hopefully clean that up for a lot of people.
05:51:58.888 - 05:52:54.972, Speaker D: We're on the XDI stake network now, so that allows us to test kind of small amounts of economic value while keeping gas costs low. So shout out to Igor and his team for helping us on with that. We've introduced kind of an interactive terminal so you can write little custom scripts and share automations and things like that. And a big thing for us has been getting the Perlin noise ZK Snark working. And that is only possible because of the work of Jordy and his team at Ident Three on tools like Circom and Snark JS and continuing to make those more efficient. So something as heavy as Perlinoid would certainly not work without the existence of tooling such as that and a number of other kind of fun little mechanical changes and quality of life upgrades. So if you're interested in following Dark Forest, the game, you can subscribe to our mailing list and blog at blog zkga me.
05:52:54.972 - 05:53:08.210, Speaker D: We're also on Twitter at Darkforest underscore east. We love to ship posts about Snarks and we have a Telegram group for general discussion at Zkforest and I think that's all for us. We'll take questions now.
05:53:12.020 - 05:53:41.290, Speaker C: Great, thanks guys. Yeah, we'll see if there's any questions in the chat. While we kind of wait for that to queue up. I've got one for you guys. I would love to know if there's any either gaming or zero knowledge related ideas that you have that you think will be good for hackers to work on at ETH Online this month. Maybe you've got a side project idea you haven't had time for yet that you'd love to see someone ship in three weeks, if you've got any I'd love to hear about.
05:53:42.480 - 05:54:34.456, Speaker D: Yes. So I think that there's definitely a lot of and we sort of juggle this around in some late evening conversations oftentimes as well. But the potential for ZK in gaming we think is really huge. And a few things that we've sort of bounced around are things like if someone put together like ZK Battleship or something. This is hopefully fairly straightforward kind of thing to build, but it would be really great to just showcase the process of building that end to end, putting together a tutorial or something. There's constructions for a ZK, really slow motion agar IO that could be done. And within Dark Forest itself, things like scripts or Reskins or Interop Contracts, smart Contracts can own planets now in Dark Forest V 0.4,
05:54:34.456 - 05:54:56.450, Speaker D: and building almost a nested game inside of the game, which allows players to sort of dictate how a planet resource is allocated or something like that, could be very cool. And we're always really happy to chat about that with anybody who might be interested. I know some folks the last game spun up things like custom miners or other hacked clients. Our stuff's all open source, so if folks are interested, we're happy to share.
05:54:57.460 - 05:55:08.372, Speaker C: Cool. How fast are the keys going out for version .4. And this is a question from the chat. Are they going out quickly or you're trickling them out? How does that work?
05:55:08.506 - 05:55:32.830, Speaker D: Yeah, we're going to be trickling them out over the next couple of days. Usually in the first few days, we start with a little bit of a slower onboarding just to make sure that we can fix any critical issues that come up. But we're hoping to get keys out to a substantial subset of the waitlist for this game in the next half week to one week.
05:55:34.160 - 05:55:50.100, Speaker C: Got it. Question from our team. What was the inspiration for combining these elements into this game? I mean, obviously it's named after the Dark Forest trilogy, but was that the inspiration or was there something else and you kind of figured out the name afterwards?
05:55:51.880 - 05:56:26.248, Speaker D: Yeah, I guess so. The original idea for Dark Forest came from like, I think it was back in summer of 2019. And I think that a lot of these ZK tools had, for the first time, just become viable. So, in particular, Jordy had just published a few months ago what was called Websnark at the time, which made it feasible to generate ZK proofs in browser. Around the same time, we happened to read the three body trilogy. And a couple of days later there's this idea of like, oh, wait a second, we could make a cryptographic. Dark Forest.
05:56:26.248 - 05:56:47.828, Speaker D: Dark Forest is the second book in the trilogy. And for those of you who are familiar, there's sort of this thought experiment around civilizations, like discovering each other in the universe and sort of the interesting dynamics of information asymmetry there. And it was just kind of like, oh yeah, you could do this with zero knowledge proofs. So that was a really fortunate coincidence that we happened to stumble on both of those around the same time.
05:56:47.994 - 05:57:38.560, Speaker C: And some of the stuff in terms of game mechanics and cosmetics are like, these aren't necessarily the only ways to do this, but given from where the ideas came from and given the constraints, they're either one of the only or one of the easiest or one of the most obvious ways to do these things. So in particular, procedurally generated planets. Well, it's like, well, we have the notion of information asymmetry being important and this is where we have this metaphor of space combat because you don't want to reveal your location to other civilizations. And then we have the notion of like, well, we have to use some sort of random generation. And this kind of just led to planets being the kind of main cosmetic thing. So a lot of it just came from the set of constraints. And even for game mechanics, we're constrained to the set of game mechanics that are still good and non degenerate in a world where there's going to be lots of bots.
05:57:38.560 - 05:57:51.720, Speaker C: So a lot of the things just kind of fell into place of the art now and we're still experimenting, but given the set of constraints, there's only so many ways to build the first version of Dark Forest. Got it.
05:57:51.870 - 05:57:52.196, Speaker A: Okay.
05:57:52.238 - 05:58:08.528, Speaker C: Another question from the chat. Do the game mechanics in their current form favor those willing to spend tons of money? I assume that it does. And is that intentional? So they favor those willing to spend.
05:58:08.614 - 05:58:09.312, Speaker F: A lot of money?
05:58:09.366 - 05:59:16.260, Speaker C: Only a little bit, in the sense that it's always strictly better to make more moves rather than make less moves. But this also depends on what our scoring function is because in the current version of the game, in the last play test, we distributed prizes based on just like, the top players. And therefore you had some consideration for like, well, if I want to maximize the chance to get the largest prize, then I want to be spending the most money. But in the future, these incentives aren't super clear because ideally we want to build a version of this game where the planets themselves and the in game assets actually have economic value. So in this case, the game you're playing internally is like, wait, is the amount of money I'm spending actually going to increase the economic value of my empire? And in this case, it's actually not so clear anymore whether or not it's beneficial to be spending all these moves. In particular, this is a constraint that we're aware of, and there's always going to be whales who spend a lot of money and there's always going to be people who write bots. So this is why we kind of take this physics based approach and why from the very beginning of the design we're trying our best to make our system robust to this.
05:59:16.260 - 06:00:13.670, Speaker C: So for instance we have a sort of exponential scaling in planet Rarities and also in planet strength. And this means that once you have a level four planet you basically shouldn't care at all about level two or level one planets anymore because they're just so much weaker that it just doesn't add anything to your empire. So this is a consideration and hopefully this is not going to be a problem. It might be a problem right now but we're hoping, I mean part of this is play testing as well but we're hoping that we'll be able to build something which is robust to this in the future. And if you guys have time we actually have a couple more questions too so I'm just going to keep going. So another question besides games, what are other use cases for zero knowledge tech that you're most excited about? So for example, like ENY has this system that uses zero knowledge tech for an enterprise context. Are there other applications there that you think are particularly interesting or.
06:00:15.720 - 06:00:41.344, Speaker D: I mean I think one of the things that we feel most clearly as a pain point is all the scalability stuff. So once ZK roll ups become more accessible and production ready we want to be hopping on that train as soon as that stuff is feasible. So ZK tech for scalability is huge. I think privacy obviously is a massive one as well.
06:00:41.462 - 06:00:42.288, Speaker C: I guess it's a little bit of.
06:00:42.294 - 06:00:54.036, Speaker D: A basic answer since scalability and privacy are sort of the go to. But yeah, scalability, privacy and gaming are where we sort of think about for the immediate uses of ZK there's one.
06:00:54.058 - 06:01:58.840, Speaker C: Answer which is not so much directly answering this question but might be interesting just in the vein of other things that's cool about this. And I guess this is also not even like a native blockchain thing either but native to ZK but blockchain in general. But one thing that's interesting is because we have access to interop. One thing you could do and Brian mentioned this is you could have infinite worlds within each planet. So the thing we think about here is well you can provide an interface and this is some sort of metaverse where you can have each planet is proxied by some sort of other contract. And the reason why this is interesting outside of the scope of just gaming is because this would be kind of a prototype for what a real world in the sense that people care about things that are meaningful and are connected by space. The really bad example is you could have like a virtual meeting space on some planet and because information is a first class resource and because locality is enforced by the contract and it takes time to move to places well, then this is like a meaningful proto version of a metaverse.
06:01:58.840 - 06:02:15.080, Speaker C: And maybe Dark Forest is not the one who actually builds this, but maybe it's the one that proves out this concept. Cool. Okay, and one more question. So we had someone ask, how did you guys first get interested in Ethereum?
06:02:15.160 - 06:02:16.024, Speaker A: What was the path?
06:02:16.072 - 06:02:21.490, Speaker C: I mean, if it's a long story, we can get the short version, but what was the path that led you to working on this?
06:02:22.340 - 06:02:49.930, Speaker D: For sure. Yeah. So this is actually really interesting to me because I have done some work with the EF on thinking about how to get more university students interested in Ethereum. But for me personally, a mentor of mine was he joined the Ethereum Foundation in 2017. 2018. We interacted through some other tech and math related things, and he was sort of like, you got to check this Ethereum thing out. It's awesome.
06:02:49.930 - 06:03:14.448, Speaker D: People are doing some amazing stuff. So I started going to a few conferences and workshops, and eventually it got to the point where I was like, oh, wait, there's a meaningful thing that I'd actually be really interested in building. But it was really like my entry point was one specific person who basically was like a real evangelist for crypto. And then I guess yeah, I have.
06:03:14.454 - 06:04:08.908, Speaker C: A similar story here, except it's like one order of separation in which for me, the evangelist was Brian, where it was like I met him at some event for college students and I was just working on some random apps, and Brian gave this kind of small presentation on Ethereum, and I was like, Whoa, this is really cool. And also mentioned that he was working on this game called Dark Force. It just so happens that I really like games. And for me, what's really cool about this is that it's pretty rare that you see nowadays in gaming, people tend to just take the same ideas and just turn out sequels over and over again each year. It's pretty rare that you see a technology which forces first principles and new kinds of thinking. So what I really like about Ethereum here is that because of the constraints, the constraints actually force you to design games in new ways. In particular, I've always liked the idea of infinite worlds.
06:04:08.908 - 06:04:24.228, Speaker C: But there's always been a problem in games like Minecraft and no Man's Sky, where the worlds don't really have any meaning. You have these vast infinite worlds, but in practice, they're all the same. In practice, someone could have given you a bucket of 100 worlds and you wouldn't really care. But on Ethereum, because of all sorts.
06:04:24.244 - 06:04:25.988, Speaker D: Of things credible scarcity.
06:04:26.084 - 06:04:46.576, Speaker C: Yeah. So there's this credible scarcity, there's true ownership, and there's all sorts of other things. There's much more of a realness and meaningfulness to these procedural infinite assets. So for me, this is actually the thing that drew me into Ethereum, was, like, I saw CryptoKitties and I was like, whoa, this is really awesome and really cool, and it's something I'm into, but it could also be so much more. And that's kind of the angle I come in from this.
06:04:46.678 - 06:05:24.280, Speaker D: Yeah. And then we have two other teammates, actually, who are not here today, but Scott and Robert. They're also college students. We all met at the same event, like a hacker house sort of thing called Hack Lodge. And I believe that Scott was actually into ethereum before any of us. And the way that he made his way into crypto was by buying some dogecoin many years ago and then realizing, like, oh, wait, what's going on with this? And Robert similar to mean we think a lot about what can we do to bring in more students in university into the Ethereum ecosystem.
06:05:24.780 - 06:05:46.370, Speaker C: Yeah, that's great, guys. Yeah, I think those are the most two common paths. Like knowing someone great who says, hey, this is cool, or buying Doecoin and realizing that you should know something about it if you're going to own it. Thanks, guys. That was an awesome talk. Really excited to see what comes next for Dark Force. And thank you for being with us, for having us.
06:05:46.370 - 06:06:15.390, Speaker C: Thanks, guys. Okay, so we are almost at the end of the kickoff summit. The next thing up is going to be in something's wrong with my slides here. Here we go. In a few minutes, we've actually got just about an hour until the next talk from Vitalik. And so we're going to take a break. But first, I just want to tell you briefly a little bit about this.
06:06:15.390 - 06:06:54.920, Speaker C: Late last night, at least in Pacific Time, vitalik posted this to Twitter. It is kind of a description of one world of how ethereum scaling might look. And this is part of what he's going to be talking about in about an hour. So what I recommend you do is take a break, go eat something, hang out in the chat, and go read this and then come back at 1900 Eastern, 07:00 P.m. For this talk, and we'll be waiting for you. So thank you, everybody. We'll be back in a little bit, and we'll see you in the chat.
06:06:54.920 - 07:00:33.172, Speaker C: Hello. All right. Hey, Vitalik, thanks for jumping on okay.
07:00:33.306 - 07:00:34.980, Speaker F: Hi, Josh. There we go.
07:00:35.050 - 07:00:49.370, Speaker C: Okay. There we go. Welcome back, everybody. Give it a couple minutes. People are still kind of filing in the chat. We're officially starting in two minutes, but yeah. Thank you for joining us.
07:00:49.370 - 07:01:21.080, Speaker C: Obviously, there's a lot of interest in what you shared literally less than 24 hours ago, so we're all very excited to hear about it. Okay, great. Just with my team that we're good to go. All right. Okay. Well, we'll just take it away then. Want to introduce Vitalik, who needs no introduction.
07:01:21.080 - 07:01:25.844, Speaker C: His talk is about scaling ethereum in 2020 and beyond.
07:01:25.972 - 07:01:27.448, Speaker F: And I'll just let you take it.
07:01:27.454 - 07:01:28.924, Speaker C: From here, V. Thanks very much.
07:01:28.962 - 07:01:31.628, Speaker F: Excellent great. Just checking you can hear me, you.
07:01:31.634 - 07:01:35.308, Speaker C: Can see the slides fine, everything's great.
07:01:35.474 - 07:02:19.324, Speaker F: Okay, great. So, hello everyone. Good to be speaking to wonderful Ethereum people again. I'm definitely sad that I can't see you in person. Hopefully we can fix that up next year in August in Bogota, as apparently got announced overnight a few hours ago. But today I'm going to be speaking about some Ethereum scaling. So basically taking a look at where we are in terms of our ability to scale, where we are in terms of the need to scale, and just what the realistic paths are that we can take to get there.
07:02:19.324 - 07:03:27.152, Speaker F: Right? So major piece of good news is that roll ups are here, right? So I'm sure many of you have tried doing Gitcoin grants using ZK Sync as a payment option, and it actually works surprisingly conveniently, right? When you go through the Gitcoin kind of checkout thing to do your quadratic funding donations, you just select checkout with ZK Sync and you have a couple of sign ins. And if you've never used Zksync before, you need to send one transaction basically just to kind of top up your Zksync account as part of the process. But if you've already done that, then you don't need to send any transactions. You just sign these three cryptographically signed messages. So basically MetaMask signs some data that's not a transaction and then that gets included as part of the ZK roll up. So the transaction fees are really low. It's like basic for the ten sends over here.
07:03:27.152 - 07:03:53.832, Speaker F: It's somewhere between 102 hundred bytes on chain. It costs much less than even a single transaction. Really nice and really fast. Loop ring ZK roll up based decentralized exchange. It's existed for a while. It also has a built in payment system. So if you don't care about trading one random crypto token for some other random crypto token, you can just use loop ring to pay people.
07:03:53.832 - 07:04:33.136, Speaker F: And I've actually used loop ring to receive money myself. I paid for lunch for a group of people and one of them was kind enough to unsolicitedly pay me back for his share. I'm just directly inside loop ring, which was really cool. And the transaction fees were pretty negligible. As expected. Diversify starkware based stark based decentralized exchange using Starks. So this is trusted setup, free quantum proof and all of those things, or at least potentially quantum proof.
07:04:33.136 - 07:05:04.176, Speaker F: I don't think they use the internal signature algorithm as quantum proof yet, but this has also been seeing quite a bit of usage. OMG. So who here has heard of plasma? Who here has kind of quietly forgotten about plasma? Well, plasma is back from the grave and it's going strong. So if you go to OMG network, they have a wallet over here and it's not a roll up, it's a plasma. But it's still a scaling solution. It's still crypto economically secure and all that.
07:05:04.198 - 07:05:04.528, Speaker A: And you can.
07:05:04.534 - 07:05:04.944, Speaker C: Use it.
07:05:04.982 - 07:05:21.268, Speaker F: And finally, Optimism, the optimistic roll up project launched a tested and Synthetix is running a test on it so you can go and use it. So roll ups are here, but they're not completely here.
07:05:21.354 - 07:05:21.940, Speaker C: Right?
07:05:22.090 - 07:06:05.440, Speaker F: So most activity that's being done on ethereum is still being done on the ethereum layer one. These three roll ups are just payments and decks. Zksync is literally just payments. But Optimism is supporting full EVM smart contracts. So you can just kind of click a button and redeploy your contracts to it. And it is a test net now, but they have plans to move over to being a main net soon. Starkware, I should mention they have this project called Cairo and they've been starting to compile solidity contracts into a Stark, which is just really amazing.
07:06:05.440 - 07:06:35.932, Speaker F: So a lot of progress even on that front. Phase zero is almost here. So ETH two yay. The first phase of ETH two is very close to being here. The Medasha testnet has been running for a while and we've had Spadina as a kind of a live test of the launch process. We're going to have forget the name of it, Zinc, as another live test of the launch next week. So clients are doing really well.
07:06:35.932 - 07:07:14.072, Speaker F: A lot of efficiencies coming in, a lot of bugs getting fixed and the bugs getting smaller and smaller each time. So phase zero is almost here. So a lot of progress happening. And at the same time, there's a big need for this stuff. And the reason why there's a big need is because, well, demand for using ethereum is really high. A lot of people want to use the ethereum blockchain and there's just not enough space in the ethereum blockchain for everyone. So how is that getting resolved? Well, right now it's getting resolved by gas prices going really high.
07:07:14.126 - 07:07:14.440, Speaker C: Right.
07:07:14.510 - 07:08:01.956, Speaker F: And at the start of the year, gas prices of like maybe two to five GWe were pretty common. But today, if you go to gasnow.org right now, I think I got to check now, but last time I checked yesterday, it was somewhere between 51 hundred and a couple of weeks ago it got all the way up to about 700 or so. Right. Gas fees are crazy. I tried out making a trade on the Auger prediction market a couple of days ago and the transaction fees were to make that one trade were a total of $17.76. So it would be nice if sending transactions was cheaper.
07:08:01.956 - 07:09:02.540, Speaker F: The only way sending transactions can be cheaper is if we have more scalability. So how do we get more scalability? Right. So this is kind of the path over the next one to two years that I realistically see. Basically right now we have the ethereum layer one and it has somewhere between 15 to 45 transactions a second. So the 15 number is just to look at current usage. The 45 number is if everyone stopped caring about smart contracts and just sent 21,000 Guay and of simple transactions 1000 to 4000 TPS as if you go to roll ups on top of ETH One, right? So if everyone moves on to roll ups, whether it's ZK roll ups or optimistic roll ups then you get up to about 1000 to 4000 transactions per second. Each transaction only requires somewhere between 300 to 1000 on chain gas.
07:09:02.540 - 07:10:10.128, Speaker F: So the 4000 number is for either simple sends or simple trades or anything that can be fit into about 15 bytes, which is a lot of things. And the 1000 number is if you go up to about 64 bytes which is where you need to go to to do a ZkZk roll up. So you can even get 1000 DPS with privacy potentially if you do a ZkZk roll up. So this is using technology that's basically either out there or almost ready today. And then this number crazy number 100,000 TPS for relatively simple transactions and 25,000 TPS for privacy preserving transactions. And this is roll ups on top of ETH Two, right? So when you have E two and then we have Phase One that adds Sharding of data on top of ETH Two, then roll ups on top of that have a much larger amount of data to work with something like two megabytes per second. And that's at the beginning I expect it'll go up even beyond two megabytes per second over time.
07:10:10.128 - 07:12:04.736, Speaker F: And so on top of that data you'll be able to do a huge amount of transactions and basically just combine the Scalability mechanism of Sharding with the Scalability Mechanism of Roll ups and you basically have enough capacity on ethereum to get pretty close to being able to run the entirety of WeChat on the thing if he really wants to or something like that. So the question is what can we do to adapt to this reality? I think my first major point is that this is a reality, right? I think if we want to have an acceptable user experience for users there isn't really a choice per se, right? Like roll ups are basically the only technology that's there ready to scale Ethereum applications from their current level of scalability to something 100 times greater without compromising on the security, right? You can have your side chains with your two way bridges but for any of those systems, obviously you have to trust whatever committee actually runs the side chain. With roll ups you don't have that problem. So roll ups are basically the only path that as far as I can tell is just there to allow for this scalability improvement that we really, really need and we really need today. And so the only question basically is what can we do to adapt to it? And the biggest part of the answer basically is that we need some kind of comprehensive ecosystem level push to improve user experience. And in user experience, I'm including security, right? It's never user experience versus security, it's user experience of security. So improving user experience of security for layer two protocols, there's a few pieces to that puzzle.
07:12:04.736 - 07:13:17.340, Speaker F: So first of all, wallets. So if you go back to this ZK sync inside of Gitcoin, it's not the best, right? And the reason it's not the best is because the ZK sync thing is being kind of instantiated inside of the Gitcoin web page. And so if Gitcoin was evil, then Gitcoin could just make a fake ZK sync sign out page and basically ask you to sign into Zksync and you would sign in and they would be able to just steal all the assets that you have inside of Zksync, which is not very nice. The correct approach to solve this problem is that the support for optimistic rollup and ZK roll up and plasma needs to be pushed up to the wallet level, right? So MetaMask needs to include native support for ZK rollups, optimistic rollups and plasma status needs to do the same thing, and Im Token needs to do the same thing. The wallets need to all do the same thing. And this requires quite a bit of work. I think we can mitigate the amount of work that this requires if the layer two providers write some kind of plugin and standardize on some kind of plugin solution.
07:13:17.340 - 07:14:28.836, Speaker F: But these are discussions that need to be had. ENS is another major one. So ENS is amazing, right? Lots of us use ENS. I even used ENS to pay someone a few weeks ago. So we need ENS to work not just on layer one, but also on layer two and smart contract languages. So zooming in on some of these wallets. We've already talked about this ENS, you need to be able to register, administer, transfer and renew domains entirely inside of layer twos, right? We're talking about an ecosystem where users are in general going to be living inside of layer twos, right? If we talk about using ethereum to go up to 4000 TPS on layer two, then what that means is that average users are not even going to have a quote account on layer one, right? Average users are just going to be living on layer two.
07:14:28.836 - 07:15:26.828, Speaker F: And so ENS name resolution needs to work, even for names that are registered, transferred, renewed, administered, everything happening to them entirely inside of roll ups. And I have a proposal for this. There's the link, and if you don't want to manually copy the link, you have this fun little QR code thing that you can scan. I don't know, hopefully people are familiar with QR codes by now. Basically, it's a kind of general purpose proposal that allows resolution of ENS names and more generally static calls inside of arbitrary layer two. So this would allow both ENS and a lot of other applications to kind of live inside different layer twos and not even have to standardize on a single one. Pretty seamlessly and smart contract languages, right? So we have kind of three different tiers of languages in the Ethereum ecosystem.
07:15:26.828 - 07:15:58.880, Speaker F: The first tier is low level languages. So the Ethereum L one has the Ethereum virtual machine EVM optimism's, optimistic. Roll up has the OVM, which is basically a subset of the EVM that restricts operations that break out of their sandbox. Stark wars. Cairo. They have their own arithmetic and immediate representation and like, fancy blah, blah, blah, math, finite field Stark. If you want to learn more, go read the blog posts.
07:15:58.880 - 07:16:37.772, Speaker F: And so we have a lot of these different compilation targets. And at the same time, we also have high level languages, right? We have Solidity, we have Viper, we have Serpent, we have Mutan, we have Ll, we have Bamboo. And there's this big long tail of other ones that people haven't heard of. So we have a lot of high level languages. We have a lot of low level languages. And it would be really nice if we could have a common intermediate compilation target that's easy to compile to and that's easy to compile from. And so Yule is the thing that Solidity already compiles through.
07:16:37.772 - 07:18:12.090, Speaker F: And it's one option, and maybe there's other options, right? So this is another thing that probably needs to be kind of talked about and standardized through the ecosystem economic benefits. So this is an interesting and fun kind of corollary of a layer two centric roadmap, right? So, so far I've been talking about needing to make this coordinated ecosystem push for people to move to layer twos, basically for technical reasons, right? Right now we have 15 to 45 transactions per second. People want to do a hell of a lot more than 15 to 45 transactions per second. The technology that lets people do that with Ethereum level security guarantees is roll ups. And so we need to move people into roll ups. And in order for that to happen, all of the infrastructure that currently exists to make life easier for people on layer one needs to also work for people who live inside of the various different layer twos that are starting to come into existence and are going to keep coming into existence over the next year or so. But there is also this interesting kind of economic benefit, right? So Ethereum in general has a public goods funding problem and it arguably has a problem kind of attracting creative researchers and developers to help with the scaling process.
07:18:12.090 - 07:19:47.892, Speaker F: There definitely is a strong team. And Justin is great and Danny is great and Dan Grad is great and Chaway is great and a whole list of people that I'm going to offend by not mentioning their name are all great. But there's also this very large set of researchers and developers who I think, first of all, just feel more comfortable and kind of want to kind of have the freedom to build their own island and not just be a small piece in a big ecosystem and have to debate with everyone else over every protocol change. And also from a funding point of view, core development is currently funded just by the Ethereum Foundation. The Ethereum Foundation has a kind of one time limited pool of funding which is totally fine for the next few years or so. But what's the long, long term sustainable solution? And layer two projects have much more leeway than Ethereum in both of these dimensions, right? If you create a layer two, then you as a researcher, developer, founder, have the ability to kind of build your own island, so to speak, and experiment with a lot of different options and kind of come up with your own path of various different improvements. And at the same time, layer two projects have the ability to monetize, right? So layer two projects have the ability to fund themselves by making mev auctions.
07:19:47.892 - 07:21:15.620, Speaker F: For example, this is something I've talked about. They can charge transaction fees for state rent and there's a lot of things that they can do. And layer two projects could either charge for these things directly and they could potentially do the token thing and create one of these decentralized community tokens that gets backed by future transaction fees collected by the system. There's a lot of things that they can do. And so basically, if the Ethereum roadmap has a kind of big space in it for layer two projects, then the Ethereum ecosystem and a lot of these other projects can kind of align instead of competing, right? It's not are you part of Ethereum or do you build your own thing? It's no, you can be part of Ethereum and build your own thing. And so as a yellow two you have a huge degree of kind of economic and technical autonomy and lots of opportunity to do things. So this is the short term, right? And I think the short term is at least my impression is that we don't really have much choice excepts to do this basically just because we need scaling and roll ups are the technology that's here and we have done our kind of due diligence and we've done this huge exploration of the entire scaling space.
07:21:15.620 - 07:22:28.844, Speaker F: We've looked at plasmas, we've looked at channels and plasmas are going to continue to be used and plasmas are great and channels are going to be continuing to be used in their particular contexts. Channels could even be used for things like moving between different roll ups and plasmas quickly but still out of the kind of design space that we've explored. Roll ups make up this kind of really big part of it, especially for applications more complicated than payments and even for payments kind of layer twos of some kind are the thing that we need to be making this coordinated effort to start moving toward. But this is the long term, right? And this is the kind of more controversial part of my proposal. So, first of all, ETH two, phase one, right? So not controversial, yet controversial is next slide. Use E Two shard data for roll ups, right? So if instead of the roll ups pushing their data on to the ETH One chain, roll ups can push their data. So the ten to 16 to 50 depending on your application bytes of data per transaction that have to go on chain in a roll up because that's how roll up works.
07:22:28.844 - 07:22:56.068, Speaker F: So if that data goes on to E Two shards and those two shards have two megabytes per second collectively, then you can get up to 100K transactions or 25 for much more complicated ones. But we need a bridge so that the ETH One chain can verify which ETH Two block routes and therefore which ETH Two blocks are legitimate. And then after phase one in Phase 1.5, e Two shard data can be proven to either ETH One shard within one slot because ETH One shard will.
07:22:56.074 - 07:22:57.256, Speaker C: Be part of ETH Two.
07:22:57.438 - 07:23:58.756, Speaker F: Now, this is the challenging part, right? So I claim that we have a bit of an awkward inconsistency in the E Two and scaling roadmap. Here is the awkward inconsistency that I think hasn't really properly been addressed yet. Today we have no layer two. Well, we have some use of layer two, right? But okay, let's say we're here in the charts. Six months ago we were here six months ago when 2020 and the world burning and so forth had only just begun and we were still living a relatively happy existence in the Greet stagnation. The scalability of ethereum was about 15 to 45 TPS because we had no layer two and we had no sharding. Very soon we're going to have 1000 to 4000 TPS because we have no sharding.
07:23:58.756 - 07:24:21.776, Speaker F: But we do have roll ups. In one or two years we're going to go up to 25 to 100,000 TPS because we are going to have sharding of data. So the shards are just going to be kind of data blobs blobs. But for a roll up, data blobs are all you need plus roll ups. So here no sharding, no roll up. Here no sharding. Yes roll up.
07:24:21.776 - 07:24:52.476, Speaker F: Here yes sharding. Yes roll up. And then what comes after this? Well, e two, phase two. E Two phase Two basically says, well, we're going to allow shards to have not just data, but also execution. And this was always marketed as this is the place where applications can come over and actually properly live inside of East Two. But here's the problem. This phase offers 25,000 200,000 TPS because it has sharding and roll up.
07:24:52.476 - 07:26:38.396, Speaker F: So it has scalability squared. But over here, if we're going to say, well, we want applications to move to East Two's layer one. Well, being on East Two layer One means you only have one level of scalability, right? You have sharding, but you don't have the roll up. And so the question is, well, if the ecosystem is already accustomed to roll ups and because the ecosystem has to be accustomed to roll ups, because they will have spent one to two years over here living in a basically roll up centric ecosystem then why would people even want to migrate back to the main chain when the main chain has inferior scalability and when they're already accustomed to roll ups having juicy features? Like, for example, sequencer. Pre confirmations and sequencers being able to do crazy transaction verification so you have full account abstraction without the complexity of account abstraction, the EIP and all these other goodies. Why would applications want to move back to the main chain? And this is the challenge, right? Basically the question is what if the scaling roadmap is really done here at the 25,000 to 100,000 TPS step and we shouldn't even be kind of adding more complexity to ethereum by allowing more computation on every single shard. Now there's actually risks to allowing computation on every shard, right? And the risk basically is that if you want to kind of fully verify correctness of a sharded blockchain, then if you want to verify data availability, data availability verification, if you do it with either polynomial commitments or zero knowledge, proofs is actually not that bad.
07:26:38.396 - 07:27:40.300, Speaker F: The reason is that it does not have any network synchrony assumptions, right? It does not rely on fraud proofs. It's just a matter of like send a bunch of requests and wait until all those requests get answered. So no matter how slow the network is, no matter what happens to the network, you're fine. But if you want to verify computation in a scalable way and in a robust way and so, for example, the network half the nodes temporarily going offline and the attacker are kind of taking over a large portion of the remainder and then being able to take over a few committees. Like if he wants to verify scalable execution without hitting those kinds of issues, then you need fraud proofs. And the problem with fraud proofs is they depend on this hard latency assumption. And so if someone manages to kind of sneak past an invalid block because the network is doing really terribly for twelve minutes, then you would pretty much have to roll back the entire E two chain.
07:27:40.300 - 07:27:57.496, Speaker F: So I would claim that potentially leaving scalable execution up entirely to layer two could even kind of improve the stability of the ethereum two blockchain and make it a more kind of limited and entrenched tool that does one thing and.
07:27:57.518 - 07:27:58.650, Speaker C: Does one thing well.
07:27:59.420 - 07:29:06.712, Speaker F: Now there is an opportunity for a compromise here, right? And the compromise basically is, well, I talked about having just one execution chart and the status quo kind of proposal is to have kind of 64 execution shards. Like every shard is an execution shard. Well, the Copper Bytes proposal is what if we go in the middle. What if we have like four execution shards or eight execution shards? And this would allow somewhat more base layer applications to exist if people really want them to. It would allow somewhat more room for error. If things inside of a particular roll up screw up and people have to use the base chain to migrate to another one, it would really relieve pressure on a lot of those things. But if there is only four to eight execution shards, then in extreme circumstances it's still within the power of a lot of individual users running nodes to personally verify all of the computation that's happening in the network.
07:29:06.712 - 07:30:27.704, Speaker F: Whereas if there was 64 execution shards, then personally verifying all the computation would be impossible. So that's the kind of possible compromise approach. And so challenges, right? So there's a lot of challenges that are, I think inevitable in the east to migration. And as I mentioned in the migration to roll ups, there's a lot of challenges that are pretty inevitable as well. But probably the biggest one is the user experience basically making sure users only do secure things by default and don't accidentally do insecure things. So one example of an insecure thing would be is if every application required you to sign into Zksync inside of that application and then users ended up kind of giving away their Zksync secrets and then the application stole all their money, that would be really bad, right? So we want secure things to happen by default and so we want MetaMask or status or Im token or these wallets to try to support layer twos directly instead of having kind of less secure application interfaces for them, ecosystem coordination. And that includes the wallet stuff.
07:30:27.704 - 07:31:08.576, Speaker F: That includes making ENS work on layer two. It includes kind of high level language things. It includes also having efficient infrastructure for jumping between different roll ups. So kind of cross roll up exchange is going to be a really important topic. So there's a lot of these challenges that do kind of have to be solved regardless. One interesting thing about kind of cross roll up exchange actually is that I think a lot of the challenges are very similar to the challenges around cross shard exchange. Basically, roll ups and shards are both kind of what I call synchronous domains.
07:31:08.576 - 07:32:43.676, Speaker F: They're both these areas where you can have synchronous communication between objects within one of them, but you can't really have synchronous communication between objects that are in different roll ups or in different shards. And so the challenge of making a decks between them is basically very similar regardless of whether they're roll ups or whether they're shards, which I think is interesting, right? It basically means that we don't even need to have all that much certainty of kind of which scaling path Ethereum is going to take in order for work on cross domain exchange to actually start. And so cross domain exchange is something that people should actively start looking into. If you want to build some hackathon projects at some points, then make a Dex that works between say, Zksync and the optimism tested, for example, or even between loop ring and ZK sync, or between looping and the optimism tested or diversify or whichever one of these systems, right? Just see if you can spec it out, see if you can make that work because this is a kind of category of thing that we're going to end up needing. So that's the presentation, right? And I know there's a lot of ideas in there. It's ideas that I think we're all kind of familiar with independently. We're all familiar with hopefully e two as a concept, at least the basics of it, and then the fact that there exist these layer two protocols as a concept.
07:32:43.676 - 07:33:07.800, Speaker F: But actually you're kind of concretely thinking about, well, what would a world where we migrate to layer twos and then what world where we migrate to layer two is on top of these two and how will these two and layer twos interact and all that. These things are fairly new and I think it's time that we do start to kind of much more seriously and proactively thinking about how we push the ecosystem to actually be able to take advantage of this scalability.
07:33:12.020 - 07:33:42.750, Speaker C: Great. Thanks, Mikhail. Thank you for the presentation. We do have some questions that have been submitted, so as long as you have time for it, we'll true through some of them. All right, so first question. Layer two is always about to solve all of blockchain's problems, something that we've been writing and talking about for years, but at least for now has failed to really materialize. And there have been notable disappointments in the layer two space.
07:33:42.750 - 07:33:49.490, Speaker C: How confident are you that roll ups are for real and what makes this time different?
07:33:51.540 - 07:34:50.796, Speaker F: So I talked about this a bit in one of my blog posts about a year ago. This was, I think, the one that talks about base layers and functionality escape velocity. And the argument that I made was basically that roll ups are a somewhat different class of scaling solution than channels and plasma, right? And channels and plasma were kind of the two major families that the bitcoin and ethereum ecosystems in the bitcoin ecosystem case adjust channels that we've tried so far. And the difference is basically that when you scale, there's two things that you're scaling. You have to scale computation and you have to scale data availability. And my argument was that channels and plasma both don't solve data availability. They use very application specific tricks to try to get around the problem of not having data availability.
07:34:50.796 - 07:35:05.844, Speaker F: So if you search up on my blog post of italic CA basil layers, functionality, escape velocity, I can make this argument in a lot more detail there. And so in the case of roll ups, on the other hand, the way roll ups work is that they're a kind of more compromised layer two.
07:35:05.882 - 07:35:06.036, Speaker C: Right?
07:35:06.058 - 07:35:29.084, Speaker F: They say that instead of doing everything off chain for every transaction, we're not going to do the computation on chain, but we are going to publish about 1016 50 bytes of data that go on chain. And so this is why the scalability of a roll up is limited. But what this gives you is it gives you the ability to basically run arbitrary state machines inside of a roll up.
07:35:29.122 - 07:35:29.372, Speaker C: Right?
07:35:29.426 - 07:36:12.424, Speaker F: And this is something, the thing that we initially thought we'd be able to do, then eventually realized we can't do in plasma is basically run arbitrary state machines inside of them. But for roll ups, we already know how to do it. And once you can do an arbitrary state machine, then it's kind of like to rank your plateness. That's proof that you can do basically anything. So we do have a kind of mathematical and technical sort of proof that roll ups are capable of doing the things that we're claiming they're capable of doing. And then in terms of just in practice, roll ups are just so far along, there's already like three decentralized exchanges running on them. You can use it to do checkouts of your Gitcoin donations.
07:36:12.424 - 07:36:32.370, Speaker F: And then there's a synthetics as participating in a test at a roll up that can support the EVM. Basically the problems that we never even got close to solving in channel and plasma land, I think in Rob land, we actually have managed to solve, is the crux of it.
07:36:33.300 - 07:37:02.910, Speaker C: Got it. Okay, so one of the virtues of the ethereum ecosystem that exists now is we have this kind of interoperable composable layer one, which means that everything gets to talk to everything else. Can that vision still exist in a world of many roll ups, or do you expect there to be a winner take all here where one or very few roll ups end up having the most economic activity on them?
07:37:05.920 - 07:37:08.670, Speaker F: Sorry, I didn't hear the last sentence. Duol. Was that again?
07:37:10.100 - 07:37:15.760, Speaker C: Do you expect to be a world of many roll ups or do you expect a winner take all dynamic?
07:37:18.420 - 07:37:53.896, Speaker F: Good question. I definitely expect to see a couple of roll ups end up dominating. I do think that roll ups have both network effects and anti network effects. The main anti network effect that a roll up has basically, is that the more transactions per second happen inside of a single roll up, the harder it becomes to run a full node of that roll up. And so that basically kind of degrades its usability to some extent. So that's one pressure to have multiple of them, and then the other pressure is that there's just different families of technology that are being explored.
07:37:53.928 - 07:37:54.124, Speaker C: Right.
07:37:54.162 - 07:38:20.310, Speaker F: You have the optimistic EVM family, then you have the zero knowledge proof using elliptic curve's family, then you have the zero knowledge proof using and. So I definitely expect kind of all of these technical families and some different internal features to get tested in the short and medium term. In the long term, it's possible that one of them will win. I don't know yet.
07:38:24.780 - 07:38:34.250, Speaker C: Are there fundamental problems that happen? Like if there is a winner takes all dynamic, what are the downsides of that happening?
07:38:34.620 - 07:39:47.632, Speaker F: Right, I guess the main downside would be that if the winner that takes all ends up being a project that just starts being really extractive in nasty ways and it has fairly centralized control by a small group of stakeholders and those stakeholders try to basically maximize their benefit instead of doing a good thing for the ecosystem. I think if that happens, the Ethereum Ecosystem's response may end up being to kind of quote, nationalize it. So what I mean by that is basically just take the code of that particular roll up and just enshrine it into the main chain and make that be phase two of e two scaling. And so when that happens, basically people that it will just be the default behavior of Ethereum users to be living inside of that roll up. But then that roll up would just be using ETH as its base asset. Managing that roll up would be part of managing the Ethereum Protocol and so forth. So if you are a winner that takes all and you're too mean, there's always the possibility that that'll end up happening.
07:39:47.632 - 07:39:55.110, Speaker F: And so your kind of position at the center of things will end up just being sort of removed overnight as a result.
07:39:56.520 - 07:40:26.750, Speaker C: Okay, another question that was submitted. So the assumption of this question is that when you've been talking so far about transactions happening on roll ups, those are still public transactions that anyone that's kind of watching the roll up chain can see. What would a private roll up world look like? Or how would having private transactions in the roll ups maybe impact the scalability properties that you've talked about so far?
07:40:28.240 - 07:41:17.980, Speaker F: Right. So this is where we get into the family of ZkZk roll ups. The first ZK stands for Zero Knowledge and the second ZK stands for, as I now claim, Zipped by cryptography. So it has ZK for both the privacy and the scalability, basically. So this is a family that's already being explored. So the Aztec Protocol is working on a ZkZk roll up, I believe matterlabs might be I forget the details and I'm sure they can angrily correct me on Twitter if they want to, which would be great. And basically the idea would be that if you imagine it would something like Tornado cash, then imagine you extend Tornado cash so that it doesn't just do moving coins around.
07:41:17.980 - 07:42:29.076, Speaker F: It also does basically supports an internal smart contract language. And then you imagine that living inside of a roll up, then you do get some pretty powerful privacy and scalability at the same time. I think the main challenge though is that there's inherent trade offs between privacy and composability and between privacy and just having applications that everyone can use. And the trade off is basically that if you want to have private smart contracts, then for that to work, you need to have this kind of encrypted state object where only some people have the key, right? And the idea is that if you have the key, then you can make transactions that involve that state object. But if you have the key, then you can also see what's going on. And so basically there's this kind of inherent trade off with zero knowledge proofs where basically either you can see what's going on or with a particular object, or you can't use it. And that's totally fine with coins, right? Because if the coins are yours, you can see them and you can use them.
07:42:29.076 - 07:43:01.890, Speaker F: If they're not yours, you can't see them and you can't use them, which is why Zcash and Tornado cash and so forth work fine. But with smart contracts you get into multi user objects and so this sort of stuff gets more difficult, right? So going from perfect privacy of simple payments transactions to perfect privacy of more complex things and I think perfect privacy of more complex things is not possible, but kind of pushing the frontier up I think is something that's going to happen over yeah, and wonderful people like the Aztec team are working on it.
07:43:04.340 - 07:43:28.520, Speaker C: Okay, so changing topics a little bit. Another question that was submitted. So in this vision, which is one possible vision you described in this post, when would you expect the base layer of ethereum to stabilize? Is there a period where it becomes stabilized and very few changes are made? Or would you expect iterative improvements in perpetuity?
07:43:30.380 - 07:44:23.032, Speaker F: In my rodent proposed the roadmap here, I expect the basic structure of the roadmap of East Two to basically stabilize potentially forever in phase 1.5. So in the magicians post, that's why I say Phase 1.5 and done. But there would be continue to be kind of iterative technical improvements. But this would be things like for example, just adding more zero knowledge proofs in a few places to improve security, improving efficiency, changing the consensus from FFG to CBC, eventually migrating to post quantum. So kind of improvements that are not sort of economically substantive or that are not kind of substantive in terms of changing basic security properties. And then I definitely expect some degree of ongoing technical change to keep happening for a fury a long time.
07:44:23.032 - 07:44:29.260, Speaker F: But it would be a low level, definitely much closer to just being maintenance mode.
07:44:29.920 - 07:44:49.904, Speaker C: Got it. Okay, the last question, which I just got for you is what do you want to see hackers build at ETH online over the next three weeks? Maybe you've got something already in mind. Maybe you have long standing things that no one's built yet. But if you could name a couple of things. What would those be? For the hackers who are watching looking.
07:44:49.942 - 07:45:48.710, Speaker F: For inspiration, one option is definitely just the things that I talked about. So kind of readying the Ethereum ecosystem for layer twos. So this could include the ideal awesome thing would be like make a MetaMask fork that just supports loop ring and Ddsync and optimism, which would just be awesome if someone does it. Another example would be a decentralized exchange whether it uses channels or whatever other technology going between multiple roll ups. An ENS resolver that works inside of layer twos. Other interesting things would be layer twos offer the ability to do things that you can't as easily do today. One example of this is smart contract wallets, right? Like, I've always been this big advocate of smart contract wallets and multisig and social recovery and all of these things.
07:45:48.710 - 07:46:55.316, Speaker F: But this stuff is still underrated, by the way. Like even a few weeks ago I just had a friend come close to losing $200,000 just from kind of misusing their or misplacing their wallet seed. Eventually I had to go digging quite a bit and figure out that basically the BIP 32 derivation path was wrong or something, or something like this. But it was a big scare for a while. And I think people don't talk about this because there is this mentality that if you admit to losing $200,000 because you lose your key, then you're stupid and so nobody wants to admit it. So it's this serious problem nobody talks about, right? But basically, I think if we want to scale Ethereum to 5 billion people, you can't have this design where you have one private key and if your private key gets stolen, you lose your money and if your private key gets lost, you lose your money. So you want to have multi sigs, you want to have these self cancelable transaction vaults.
07:46:55.316 - 07:48:24.532, Speaker F: You want to have social recovery and all of these things and ideally try to solve it with a minimum amount of centralization as things like social recovery do. But these things are all fairly hard to achieve in the current context because unfortunately, these one blockchain isn't really that well designed for verification schemes other than single kind of elliptical signature verification. But inside of the optimism roll up, for example, you totally can do it and sequencers can just support account abstraction manually. So that's another example of the sort of thing that you could try to start doing on layer two is that you can't easily do on layer one and hopefully use the layer two switch as an opportunity to simultaneously encourage people to move to better things. I guess another possibility would just be making kind of migrating applications to layer two. So, for example, something like imagine making a bot where if a market gets opened on Auger, then you would just immediately go to foundry, create a huge amount of yes tokens and no tokens, and then push those tokens into the layer twos. And then just open up a market for both of those tokens inside of the layer two so people can go do their prediction market trading inside of the layer two.
07:48:24.532 - 07:48:36.090, Speaker F: So there's a lot of simple application specific things you can do like that. And then I'll be able to do my projection trading with paying less than $17 of transaction fees. So a lot of options.
07:48:38.380 - 07:48:58.530, Speaker C: Awesome. Thanks, Vitalik. Well, I hope that people are listening. I hope that someone worked on those problems. Okay, well, I think that is the end of the day's stream. Thank you so much, Vitalik, for coming on with us and talking about this. We look forward to having you back on the final day of ETH Online on the 30th, and until then, talk later.
07:48:59.220 - 07:49:02.850, Speaker F: Sounds good. Enjoy your month.
07:49:03.940 - 07:49:29.276, Speaker C: Thanks. And we'll bring Kartik back online. Karthik, you're there? All right, we're just going to wrap up really quickly. Thank you, everyone, for joining again. It's been an awesome first day. We've been really pleased to see how many people have turned out and watched the show and the talks have all been amazing. So really excited to kind of kick off this whole month of stuff with you here today.
07:49:29.276 - 07:49:34.188, Speaker C: It's been an awesome day. Cardik, what else do we have to cover before we close this up?
07:49:34.354 - 07:50:04.230, Speaker A: I think the most important things to take away are we have a lot of things that we want to improve on for this live interface for next week and the rest of the summits. But we got a couple of questions coming in from hackers for the logistics in general, and for any question that you have about the hackathon, be sure to ping us on Discord. That's where everything is going to be from here on. And we'll be using this live page for just the summits every Friday. And with that, I'll let Josh talk about what's up and coming next week.
07:50:05.400 - 07:50:29.496, Speaker C: Right, so the next summit, which is next Friday, October 9, starting at the same time as we did today, so that's 12:00 p.m. Eastern. We're going to have a whole day dedicated to scaling and infrastructure. So this is going to cover some of the stuff that we just heard from Vitalik. We are going to have a great talk from Optimism about roll ups. We're going to have talks about other layer two tech. We're going to have talks about zero knowledge proof.
07:50:29.496 - 07:50:54.692, Speaker C: We're going to have talks about new developer tools you can use. So we really time this with the first week of hacking as well, because this is all about stuff that developers can really start using today and might be great inspiration for your hacks. So please come check that out. It's going to be fantastic. Another day of content just like this one. So we hope to see you then. And for all the hacker, good luck.
07:50:54.692 - 07:51:01.768, Speaker C: We'll chat with you in the discord all the time for the next 30 days, and yeah, I think that's it.
07:51:01.934 - 07:51:04.230, Speaker A: Thanks for being here. Talk to you later.
