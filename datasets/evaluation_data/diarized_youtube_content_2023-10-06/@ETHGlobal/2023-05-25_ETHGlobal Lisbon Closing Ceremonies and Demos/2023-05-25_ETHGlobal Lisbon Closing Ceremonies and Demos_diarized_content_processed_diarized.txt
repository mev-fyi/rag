00:00:09.930 - 00:00:31.430, Speaker A: This is not a conference. If you've been to an ecobol event, you'll know that this is a hackathon. This is our first event in Portugal.
00:00:36.010 - 00:00:36.422, Speaker B: Yeah.
00:00:36.476 - 00:00:45.622, Speaker A: Love the passion of the hackers here. It's been great to see people diving in, hacking on things, asking really good questions. Many people think this is a really competitive thing, and it's not. And I like that.
00:00:45.676 - 00:00:55.870, Speaker C: When you finally achieve what you were trying to do, that's, like, the best momentum.
00:01:10.470 - 00:01:45.982, Speaker A: Good afternoon, everybody. Super excited to have all of you at the closing ceremony for ETH Global. Lisbon. My name is Kartik and my slides have disappeared, but I'll get this going. Anyway, thank you so much for making it till the end. Our goal is to talk about all the things that happened this weekend for our first ever event in Portugal. 975 attendees were here this weekend with us, and out of that, 650 were hackers from 51 different countries, and 30% of them were new to Web Three, trying something for the very first time in the space.
00:01:45.982 - 00:02:10.642, Speaker A: This is amazing. Congratulations to all of you. You made it. So many people came in from all the countries and cities nearby, and even more from the rest of the world. And the next hour and a half, maybe two, is about what came out of the last 48 hours. Now, remember, this is a hackathon. And our goal at ETH Global is to onboard thousands of more developers into the Web Three ecosystem.
00:02:10.642 - 00:02:43.834, Speaker A: And as part of that, this entire weekend was about building and focusing on developers. And because we believe showing is way more important than telling, what's going to happen for the next hour is going to be all the things that people built, and you get to see those things live. So let's get to the hackathon itself. I want to keep my spiel short because I want to focus on code. 650 hackers spent the last two days working on amazing projects, and collectively, they built 183 projects. Give yourselves a massive round of applause. That is incredible.
00:02:43.834 - 00:03:29.054, Speaker A: We just literally added almost 200 projects to this ecosystem. And in addition to all of you who spent all this time working on these projects, I want to thank all the judges who spend all of their morning and a little bit of their afternoons talking to all of you, giving you amazing feedback, and just being there to support and get and share the excitement. So please join me in giving a big round of applause to all of our judges. Stani Haytham Danielle Simona Diogo elena s yours Inesh Anon Alex leo alfonso arjun rafael julian nuno christina and Ilya. They were here all morning with us, helping all of you stay in this space, get some more ideas, get some feedback, and help you continue all these projects. And on top of that, all of our amazing, incredible partners. So I'm going to make you clap a lot in the next 2 hours.
00:03:29.054 - 00:03:49.858, Speaker A: So we'll do this again one more time. So thank you to all of our amazing partners. One inch WorldCoin optimism. Polygon gnosis chain airstack. Apecoin ZK bob fuel Save ethereum foundation cartesi Uma metamass filecoin. Virgil machines LEDs protocol uniswap foundation the graph ave Grant style mantle chainlink. Sysmo scroll and neon foundation.
00:03:49.858 - 00:04:20.334, Speaker A: All these amazing partners also saw all of your projects and they're going to tell you what you want from all of them very soon. So let's get back to these 183 projects. 09:00 A.m., we saw this number go up and then nine to 01:00 P.m. Were all these projects showing and running around the building, up and down, showcasing everything to everybody. And from all of that we chose ten incredible finalists. So what's going to happen today is we're going to bring on these ten teams and they're going to demo live what they built.
00:04:20.334 - 00:04:48.898, Speaker A: So you get to see what also came out of this event and some of the projects our judges were excited about. But well actually, without further ado, these are our Tell finalists. So I want to give a big round of applause to Credential Corgi Dukey's Buddy, local pro crypto bureau, prinky protocol, web three GPT, four donation station chain GPT and Op compressor. These are our ten incredible teams. They'll be coming on one by one. And this is what happens when you don't sleep enough. You figure out and you mix up the slides.
00:04:48.898 - 00:05:19.666, Speaker A: But before we get into all of these projects, I want to take a quick second to thank all of these 172 teams that also made something really amazing. Just because you were not one of those ten teams does not mean something was wrong or you were not good enough. All of you did something incredible. You submitted a project, you built something that you were excited about, you built something that you wanted to build and you submitted it and showed it to the rest of the people in this building. Almost 1000 people saw and will see all these things and even more. So please don't think of this as discouragement. Continue building this thing.
00:05:19.666 - 00:05:56.000, Speaker A: We really want to see a lot of you push more code after tonight. To the same repos, give yourselves a massive round of applause. And to those of you who are watching this on the live stream and to everybody here in this room, you can head over to Ethglobal.com showcase and you can see all the projects listed out with what they built. Who, why they built it, what they were using under the hood. And their source code, some demo videos, screenshots, all the good stuff is now publicly available for all of us to look. And before we get into the demos, I want to make a really quick point.
00:05:56.000 - 00:06:18.520, Speaker A: All of this is us doing this thing for you. And we can only improve things if we know what's broken or what can be improved. So on your dashboard, after you submitted a project, you would have seen this action item on the right sidebar. Just give us feedback. There's ten questions we have for you. Just fill them out. A lot of them are just one to ten type of ratings and an open text area for you to tell us everything that we can do better.
00:06:18.520 - 00:06:46.254, Speaker A: Please take two minutes today, tomorrow, now, to just fill out this form and just tell us what we can improve. We want to do these things more and bring this to more parts of the world. And the more feedback we get, the better we get to make them for the next. Please. Please fill out this feedback form. Now I'm going to stop talking and we're going to go into demo time. So, without further ado, let's welcome our very first demo project for today.
00:06:46.254 - 00:06:57.060, Speaker A: And the team, come on up. Credential Corgi is our first demo, and please give him a big round of applause. Take it away.
00:06:58.310 - 00:07:35.326, Speaker D: All right. Thank you so much. So credentials are all around us. We use them every day, ranging from passports to medical records. And with zero knowledge proofs becoming more feasible, we're now able to use these credentials in new ways to prove things without revealing private information. But there's a problem here, which is ZKP enabled credentials need a very strict format for these proofs to work properly. And right now, we have issuers of ZKP credentials who are also defining their own formats, which means a Credential issued by one issuer won't be compatible with the same proof system as a Credential issued by someone else.
00:07:35.326 - 00:08:16.666, Speaker D: And so with Credential Corgi, I'm creating a zero knowledge proof Credential ecosystem that separates out the structure definition from the Credential issuance. So I'll show you how it works now. So I'm going to connect with MetaMask. This is deployed on eight EVM networks, and that's in order to store some structured data on chain. So the first step is let's say that we are an international aviation agency and we're trying to define what a pilot's license looks like. So what we can do here is type in plain text. We can type in plain text a description of what a pilot license is.
00:08:16.666 - 00:08:57.238, Speaker D: So we're going to say it consists of a pilot's name, the expiration year of the license, and whether they're certified for commercial flight or not. So essentially three fields in plain English. And so now this is going out to GPT four to generate a well structured definition of what a pilot's license looks like. So now we've got that. And if we agree with this definition of a pilot's license, we can publish it to the chain. So I'll call this pilot license, publish it to the chain. This is going to initiate an on chain transaction to push up this data and basically assert that we're saying this is what a good pilot's license should look like, no matter who issues it.
00:08:57.238 - 00:09:38.962, Speaker D: All right, so now we can see this is deployed to the chain. Now let's say we're an aviation agency of a specific country and someone has just earned their pilot's license and we now want to issue it. We're going to choose the pilot license Credential format and we can populate those fields in here. So let's say Vitalik has a pilot's license, is good until 2030, and let's say he is certified for commercial flight. This is just generating off chain data. This is the private certificate that's going to be sent to Vitalik. And along with that we have this Poseidon hash which is compatible with zero knowledge proofs.
00:09:38.962 - 00:10:43.434, Speaker D: And so this Poseidon hash can be published on chain to demonstrate that this ZKP enabled Credential really is valid, but without revealing any of the private data. So now that that's been published, let's say we're an airport and Vitalik is trying to fly a plane from our airport, but we want to make sure that he's really certified to fly, but he doesn't want to reveal all of the private data in his pilot's license to us. So what we're going to do is describe in plain English what we want to certify. So let's say we want to certify that Vitalik has a pilot's license valid through at least 2023, good for commercial flight. So we're going to choose that structure, input that description of what we want to verify, and we're going to generate this request. And this is also using GPT Four, combining that JSON structure with the request that we made. And this is going to generate structured requirements and this is what we're going to send to Vitalik essentially to prove, but it gives us this unique link which we can just send to him.
00:10:43.434 - 00:11:41.290, Speaker D: I'll copy the unique part of that into the page that Vitalik would land on and then he can see, okay, this is what the airport is trying to confirm. But I don't actually have to send any of the private data on my pilot's license. If I agree with this request, I'm going to paste in my Credential, which I received privately, along with the ZKP compatible hash, and I'll generate a zero knowledge proof to show to the airport that I do meet these requirements without giving up any private data. And this part takes a little bit longer because this is compiling a zero knowledge proof and generating, compiling the circuit, generating a proof. And you'll see it's quite a bit of data that gets output here. This is using a JavaScript library called Snarky JS. And you can see here we have this big blob of data which can be sent to the airport to just verify that Vitalik in fact is authorized to fly.
00:11:41.290 - 00:12:32.122, Speaker D: And just to show kind of the failure scenario here, let's say that his Credential data said he was not certified for commercial flight. The same process would attempt to happen. But you'll see in just a second, we'll see an error. It's a little bit obscure, but basically it'll say one of the constraints was not satisfied and that's how Vitalik would fail to prove to the airport if he wasn't really eligible. So, yeah, that's the current state of Credential Corgi. Moving forward, I plan to make this support composable proofs, meaning maybe you have a medical record and a health insurance card, both issued as ZKP compatible credentials. You could generate a single ZKP showing that you need a medication and that your insurance covers it, show that one proof to a pharmacy and be prescribed the medication.
00:12:32.122 - 00:12:36.560, Speaker D: So there's a lot of potential for this to help a lot of people. Thank you so much.
00:12:42.850 - 00:12:56.290, Speaker A: You amazing. That was our very first demo for today out of ten. This is just the first of many AI collaborations you're going to see. So, without further ado, let's welcome our second finalist of the day, project Dookies.
00:13:00.390 - 00:13:01.380, Speaker C: You ready?
00:13:01.830 - 00:13:20.326, Speaker E: Yeah. Hello, everyone. We're Dookies. Dookies means decentralized cookies. What we've built over the weekend is a solution for ad targeting, but with privacy preserving features. And we face this every day. We browse the internet.
00:13:20.326 - 00:14:03.318, Speaker E: When we browse the internet, we can't stay anonymous, we don't control the data we share, we get irrelevant ads and annoying ads and we can't monetize our data. Dookie solves this everyday problem. Now, in terms of the demo, what we're going to show you is three different roles. The first is the role of an advertising campaign manager. Tai Chi here works for ETH Global and he's going to create a new ad campaign for ETH Waterloo. And that's what we're going to show as an advertiser. Next is we're going to show you as a user how a user can record their preferences, but without disclosing their identity.
00:14:03.318 - 00:14:34.530, Speaker E: And this piece uses zero knowledge proofs. And lastly, we've built an account abstraction wallet, which effectively allows you to create gasless transactions which are funded by the advertiser. But not only that, we also can display the relevant ads that the user has chosen. So off to the advertiser here's, Taiji. He's a marketing manager for ETH Global. He wants to promote his Waterloo event. He's going to create an ad campaign.
00:14:34.530 - 00:15:29.510, Speaker E: As you can see, he's chosen the image and the groups he selects is people who have a Gitcoin passport. ENS are members of the ENS, dao voter and Uniswap contributors. So he wants to basically target his ad to these three groups without knowing who they are. And this part creates the zero knowledge proof. We do also interact with the contract here, so we've added we have a budget which is in go and the budget for this campaign is 100 go. What will happen to this 100 go is it'll be split from the advertiser to the user of the ad who's views the ad. So they'll basically get paid for their gas transaction as well as the content publisher which could be web two, and in our case, it'll be a wallet.
00:15:29.510 - 00:16:12.130, Speaker E: So here we go. We've created a new ad campaign. This ad campaign is on chain. And now we'll move on to the user preferences screen. So as a user, a user can select whichever groups they feel they're interested in. So a user can say, hey, I'm a Gitcoin passport holder, I'm an ENS Dao holder. And with zero knowledge proofs, what will happen? Is it'll validate and create a dookie or a decentralized cookie which has all the user group information and the preferences, but doesn't have the user identity.
00:16:12.130 - 00:17:22.330, Speaker E: So a dookie is created and you can see it right there on the user's browser. And so now this user will be able to use our account abstraction wallet, which will give them gasless transactions. So here's our account abstraction wallet and we're going to send some ether. And as you can see, it already recognized that we have a dookie and we're showing a disclaimer. Now, when we click continue, we'll reflect on the user groups from the dookie and show a relevant ad. The last step is when we send the transaction, gas will be paid by the advertiser, which means behind the scenes there is go token, which the advertiser has paid for this user's transaction, the gas fees of this user's transaction, as well as the content publisher, which is the wallet holder.
00:17:25.630 - 00:17:26.380, Speaker A: Good.
00:17:27.630 - 00:17:29.340, Speaker E: And we're done. Thank you.
00:17:34.850 - 00:18:05.646, Speaker A: Amazing. That was demo number two, and it's even better when the teams do our advertising for us. It's lovely. See you all in Waterloo, too. Up next is demo number three. Without further ado, let's welcome Project Budy. Cool.
00:18:05.768 - 00:18:15.654, Speaker C: All right. What's up, everyone? Thank you for selecting us as finalists. This feels pretty amusing. This is like our B B. So very happy with this. I'm Kat.
00:18:15.782 - 00:18:16.678, Speaker E: I'm Kevin.
00:18:16.774 - 00:18:18.230, Speaker C: And this is Budy.
00:18:18.390 - 00:18:24.570, Speaker E: So Buddy is an application that allows you to find hackathon partners tinder style.
00:18:25.170 - 00:18:42.020, Speaker C: Yeah, it's built on Lens and it has like, ZK proofs. I think we're the third project now to talk about ZK proof. But you can ZK proof your crypto knowledge or skills so you can verify that you have those skills without actually showing anything about your wallet or about your GitHub profile and stuff, if you want to not be docs yet.
00:18:42.390 - 00:19:05.814, Speaker E: All right, so why did we build this application? Well, back at East Denver, we actually came across a very common problem amongst designers and developers. A lot of people couldn't find complementary partners or team members at like it was kind of crazy. So luckily for us, I'm a designer and front end developer. She's a blockchain developer and back end developer. So naturally we kind of complement our skills.
00:19:05.862 - 00:19:06.266, Speaker A: Right.
00:19:06.368 - 00:19:15.630, Speaker E: And what we want to do is help others get that same exact synchronization with your skills. With a web three twist, I guess.
00:19:15.700 - 00:19:15.934, Speaker A: Yeah.
00:19:15.972 - 00:19:57.654, Speaker C: So we've built this. It's completely with lens, so everything you do on Budy is going to go onto your Lens profile and everything you do on Lens is pulled into Buddy as well. Just like super composable and everything. And then we've also got these VK proofs that we're using Fismo with. So whenever you want to prove that you have like maybe you've been an ETH user for a long time or maybe you've won a hackathon before so you have a token from the ETH Global ENS address or something. You can prove that on your profile without maybe exposing the wallet address that you had that there if you want to keep that private. So then the way that it works is that we've created a collection module within Lens.
00:19:57.654 - 00:20:42.538, Speaker C: And so that anyone can actually create a publication that is connected to this collection module. So anyone can select a type of user that they want to be able to collect this module and then it's completely just done over Lens. The user is going to attempt to collect this publication and if they log in with CISMO Connect and they are like a part of that user group. So say they do have ETH since 2017 or they have contributed to the ETH GitHub core or something, then they can collect this publication onto their profile and that's going to be across the whole event. And then Buddy is going to check like it's going to verify specific ones and then those are the ones that are showed on your profile. So we have a little demo here. This is what it looks like.
00:20:42.538 - 00:20:58.650, Speaker C: This is after you've logged in with Lens. Just like the super basic login flow. This is like the Tinder thing. This is lens protocol. It's the one that's coming up for me because it's like a recommended follow that I work with them. So these are their zoinks. Here is what we're calling their ZK proof skills.
00:20:58.650 - 00:21:10.706, Speaker C: So they're a hackathon winner. They are a core ETH contributor and also an early ETH user. So I can like them. Then I see Ave. It's another recommended one for me. Don't want to talk to them. Can.
00:21:10.706 - 00:21:27.590, Speaker C: We got Stanny. Hell yeah. So I can go to my matches up here. This is currently connected to my test environment. So there's a lot of Stannis there. But yeah, these are all the people who I've liked and they've liked me back. And it opens up, it allows you to start a conversation with them.
00:21:27.590 - 00:21:33.606, Speaker C: So we sign this. This is just like our Lens conversation. So it's very one sided.
00:21:33.718 - 00:21:35.286, Speaker A: Very very one sided conversation.
00:21:35.398 - 00:21:50.814, Speaker C: So you can start a DM in here. It's completely on lens. So like on Tinder, you know the way you have to get their Instagram and stuff. You don't have to do that. You can just message them from here and then they get it on their Lens profile. So profile is where all the fun stuff happens. So you can see my Zoinks here.
00:21:50.814 - 00:22:04.900, Speaker C: So I'm an early ETH contributor and a previous hackathon winner, and I can add some extra ones into there. This is my bio from Lens. And then this is the kind of Zoinks that I want to find in other hackathon partners for when I'm building it.
00:22:08.870 - 00:22:35.994, Speaker E: So what's next? So, basically, what we want to do is get better and more Zoinks. Or basically, these are your badges for your achievements, right? And we want to work with Sismo and Len to collect more of these Zoinks. Another thing we want to do is actually get ETH global into this because obviously we're in a hackathon, so it kind of just works out. And lastly, we want better filtering and teams and matching algorithms.
00:22:36.122 - 00:22:59.542, Speaker C: Yeah, I think this is really exciting. We can totally make better matching algorithms since everything you do is on Lens. Somebody actually told me this the first day I came here. He was really into matching algorithms. Don't know where you are, but that could be super cool. Yeah, we just want to make this super composable really portable. Anyone can create a publication that basically just acts as, like, a ZK proof on lens, and that's it.
00:22:59.542 - 00:23:00.680, Speaker C: Thanks, guys.
00:23:06.730 - 00:23:15.930, Speaker A: Awesome. Next up, finalist number four. Please welcome Team Local Pro. Give them a big round of applause.
00:23:21.330 - 00:24:05.110, Speaker F: Hello, Lisbon. We are Local Pro, where global organizations team up with local independent workers. We are bringing on chain coordination to offline work, opening up a new and fairer local job market. So, under the hood, we're using safe account abstraction to abstract complexity and zero knowledge with polygon ID and Zkbob to maintain privacy. Our mission is to build flourishing local economies and communities. And it's key to note that we're addressing a real world use case. One month ago, I did a workshop with the City of Amsterdam where they highlighted that they really struggle to find incentivize and coordinate qualified local people to host activities for kids after schools.
00:24:05.110 - 00:24:43.046, Speaker F: But that's just one use case. We've thought of a bunch of others IoT device technicians on the ground salespeople, lots of opportunity. So let's get started. So, this is Nico, our local pro worker. Nico arrives at the local pro marketplace. Here, he can see which roles he is able to apply for and what credentials are required. Note how this other role we have uses an award from the Amsterdam role as its application criteria so you can start to get an idea of how sharing these credentials across organizations will reduce the cost for all of them, so benefiting all of us.
00:24:43.046 - 00:25:23.346, Speaker F: Nico decides to apply for the Amsterdam teacher role and so now has to prove he has the credentials to be assigned the role. So when Nico clicks verify, amsterdam uses a custom polygon ID verifier to check for the zero knowledge proof that Nico has those credentials and then issues a new credential for the role of guitar teacher city of Amsterdam. The credentials are securely and privately stored on his device, thanks to Polygon ID. So Sergey now will demonstrate the issuing and verification process. So right now this is on the wallet. In future, this would all be abstracted under the hood. So can't really see what's happening.
00:25:23.346 - 00:25:53.150, Speaker F: Hopefully you can. So Sergey is issuing a credential, which for demonstration purposes will say this task has been complete. In reality, you've checked into the right place at the right time. Along those lines, Nico then connects it to his Polygon ID wallet. It's authenticating and it's okay. And then I think in the app, he needs to accept it. So he now has the credential that he's completed the task.
00:25:53.150 - 00:26:10.130, Speaker F: We now in a separate process move to verification. So Sergey has a QR code open that has been generated to zero knowledge, prove that this task has been complete. And here we go again, using the Polygon ID wallet.
00:26:12.710 - 00:26:13.890, Speaker B: DA, DA DA.
00:26:15.830 - 00:26:40.186, Speaker F: And there we go. Okay, so back to the demo. So now we want to do performance verification. So if we take a look and note that there's $12.75 in the wallet at this point in time. So Nico arrives at the tasks location at the required time and checks in. This is important because especially in Amsterdam's use case, they have a bunch of people who turn up to these tasks late or not at all.
00:26:40.186 - 00:27:14.134, Speaker F: So we're trying to create verifiable proof of performance that we can build reputation and incentive systems around. And then finally, to allow organizations to further incentivize workers, we can create custom credentials. So here, for example, Nico has completed his final task, received two four star reviews. So he has fulfilled the requirements to get the trusted teacher certificate from Amsterdam. This logic is currently centralized, but Polygon tell us we can do it decentralized in a few months time. And then further with the task completion, we automate a payment. We've used Zkbob to maintain privacy here.
00:27:14.134 - 00:27:35.958, Speaker F: So there's no connection between the organizer, no public connection between the organizer and the worker. So if we refresh the page, did we see the updated amount? There we go. Okay, so the updated amount appears in his wallets already. And now Nico has this trusted teacher credential. We can unlock other roles. So back. The role that was initially locked is now available for him to apply.
00:27:35.958 - 00:27:42.640, Speaker F: That was a demo of local pro. Thank you so much for listening. Thanks to the team for all their hard work, and congratulations to all of you. Thank you.
00:27:45.510 - 00:28:08.214, Speaker A: Amazing. I am really liking the integration of all these things to day to day events and just problems. So that was demo number five or four. Up next is Crypto Bureau. Welcome, Crypto Bureau team, and give them a big round of applause. Hello, everyone.
00:28:08.332 - 00:29:08.010, Speaker G: We are happy to be here today. And we are Crypto Bureau Team Two persons. We had a lot of experience in web Two and decided to try ourselves in web Three so I first want to set the problem and the solution that we proposed, then we will get right into the crypto Bureau. So we decided to take a look at the overcology. And as you can see here on the screen, we all know that this is usually the really like 150% collateral that you need to pay to lend money. So we gave a look to the existing solutions that we could propose. And of course, we thought about the key proofs and decided that we can not only try to lower the percentage, but also try to provide the under.
00:29:08.010 - 00:29:33.826, Speaker G: Collateralized lending for people. And we saw a lot of flexible solutions that we could try and use and build so called protocol that we can try further to distribute to all and let's go. Yeah. So this is the demo. We can see the crypto bureau. I already signed up in here. This is my address.
00:29:33.826 - 00:30:12.766, Speaker G: This is my basic square that I have right now. This is my collateralization coefficient, meaning that for any given 130, I can get 100 loan. And then I already put some collateral in it. And you can see with this coefficient, I can only get like €76 for this amount of die. We also use a number of different proofs that me as a user can provide to the system to basically showcase my trustworthiness. And hopefully, a system will improve my radiant. Based on these different proofs, we use World ID.
00:30:12.766 - 00:31:12.660, Speaker G: It's already connected here for the demo purposes, and it basically allows us to link different addresses to the same human. So you're not avoiding and not creating a new identity every time you need a fresh new score. So if you mess up your score, it's forever with you and we can use other proofs, for instance, we can verify that you have a specific NFT and you owner a specific NFT. We use the ENS here, we generate the proof on CISMA for that and then the proof is sent back to the app and the app actually asks you to send it to the contract and this is the proof data in there and the proofs are being verified on chain. So all the proofs here, they are verified on chain. And you can already see that it reflects my collateral coefficient. And my score has improved because I'm like a noun owner or ans owner and I'm kind of a trustworthy person.
00:31:12.660 - 00:31:53.018, Speaker G: Another one. And you can also see that available funds also increased. And another cool stuff we have is that you can provide a ZK proof of your funds. In traditional economy fiat money. We use true layer API. It allows you to connect to your bank account, really popular in the UK and Coinbase uses that as well if I connect that using the sample credentials it will generate the access token to my mock balance bank account and then it will generate the proof we use zocratis. It's basically a wrapper for zkSNARKs.
00:31:53.018 - 00:32:28.620, Speaker G: And it's our own circuit that certifies that you basically have a specific over, specific amount of money. And with that, you can get a huge upside in your score and you already achieved. Like under collateralized loans. But you can also try to maybe lower it a little bit more for that. We have a proof of diploma. So if you have a diploma and you can try to present that and if you're educated enough, maybe you know how to handle money and stuff. So we use polygon ID for that.
00:32:28.620 - 00:33:01.990, Speaker G: I have the app on the right and then I can scan this. My university issued me a diploma with specific. GPA score. And I can submit a proof verifying that I have something more than that. I will use my wallet for that to sign this because it's been submitted on chain. That's why I need the wallet and the verification will be on chain as well for the proof. So this is the transaction details.
00:33:01.990 - 00:33:08.534, Speaker G: And then we wait for that to process. And then the magic will happen on the front end.
00:33:08.572 - 00:33:08.870, Speaker A: Yes.
00:33:08.940 - 00:33:41.554, Speaker G: And then we have the lowest collateral, the highest score. And you can see that for 99 die, you can borrow more than €110. Let's try to do that. And if you confirm, it would also immediately reflect your coefficient. We didn't use any Supermass. But still, it's on the protocol level. So everyone working with our protocol can read the collateral coefficient, read the score, make decisions, build other lenders and stuff.
00:33:41.554 - 00:34:24.442, Speaker G: And moreover, if I repay the loan back, then I will basically improve my rating a little bit as I'm like a good payer if I choose not to do that well everyone else using the protocol and you can see collateral coefficient improved will be able to know that I didn't. Pay back. And as I don't have another word ye, because I don't have another pair of readiness, I'm stuck with this bad score until I repay. As for the protocol side, as I mentioned, this is three different parts. One part is you can build other lenders. We built like a reference, really simple, ERC, to any lender. You put one token as your collateral, you can borrow another one.
00:34:24.442 - 00:34:53.740, Speaker G: You can build other lenders. Lenders are able to read and everyone else can read the score details and coefficient for any account and even the human using the nullifier hash. And then we have a protocol for building different ZK verifiers. We have this snarex polygonid world ID systemo right now. You can create another one. They can improve the score, affect the score, and then lenders the only thing in protocol they have to report.
00:34:55.630 - 00:34:55.946, Speaker A: How.
00:34:55.968 - 00:35:04.640, Speaker G: Much the person borrowed and paid back. So it updates the rating for them. Yeah, that's about it.
00:35:09.570 - 00:35:26.130, Speaker A: Thank you. More DeFi. It looks like the talk about DeFi's future at the opening did something, because this is a lot of cool, recurring themes and even more experimentation. So congratulations. Next up is our demo number six, Pinky Protocol. Please give them a big round of applause.
00:35:34.570 - 00:36:04.798, Speaker B: Hi everyone. Today I'm very excited to present you Pinky. It's a peer to peer NFT rental protocol that we built for the past two days with my team behind. It allows true ownership for the borrower. No collateral is needed from the borrower also and it's fully scalable as it's pluggable with almost not almost any NFT collection. I would like to present you quickly my team. We have two solidity developers that is just right behind me.
00:36:04.798 - 00:36:38.314, Speaker B: We are on one full stack developer and one frontend. I'm the product guy and I'm very happy to present you. How our solution working and why we are building it. So today you have two systems if you want to borrow or if you want to lend an NFT. You have Acecode lending, but you don't have fully access on the NFT utilities. You also have collateral as lending, but you have to bring collateral. So we wanted to build a solution that tick all the boxes here that is collateral free, that allows the borrower to enjoy 100% of utility access.
00:36:38.314 - 00:37:10.034, Speaker B: That suppress delete the risk of liquidation for the lender that works for any collection. So that is scalable and account attraction ready. So let me explain you a little bit how it works. First, we have a lender that needs to list his NFT on the platform. So two transactions, one approval and one for the listing. A daily price and a lending duration. The borrower chooses this NFT to rent on the protocol, the app he has to install the plugin on his smart contract wallet.
00:37:10.034 - 00:37:52.338, Speaker B: We use Safe wallet for this and once he has installed the plugin that is working with Safeboard, he must clear any operator of the targeted collection for his wallet. For security purpose, the borrower sends the transaction pay one time fee to rent the listed NFT. As soon as he is doing this transaction, the lender automatically receives daily payment while the NFT is transferred to the borrower wallet. How plugin built with safeguard prevents the borrower from transferring the NFT. The lender claims back his NFT once the lending period is over and the plugin is automatically deactivated. A quick demo on how it works. You arrived on a catalog page.
00:37:52.338 - 00:38:23.020, Speaker B: Let's say you want to borrow the purple go. You first have to connect your wallet. You use MetaMask. Once your wallet is connected, you can borrow this NFT. You have a price per day and you have a total price. Once I click on borrow, I will need to sign an approval. I sign the approval, then the transaction will be sent.
00:38:23.020 - 00:38:53.960, Speaker B: It's kind of the time you have to take a coffee or take a break because we are live. It's not a fake demo, but it's already done. Good news. So we confirm the transaction. Sorry for my fire window. Once the transaction is signed, you just have to check on your profile to see if the NFT is actually listed. And we had two because one was already listed, but as you can see, the number 1891 is here.
00:38:53.960 - 00:39:17.050, Speaker B: So let's go back to the presentation to see how it works. We build it with Safe so it's a smart contract wallet that most of you know. It was the best framework to build service in two days. Leveraging. Akon. Abstraction. We plugged a plugin, if I can say so, with safeguard that prevents NFT to be transferable and leave the borrower wallet.
00:39:17.050 - 00:40:14.302, Speaker B: We use also subgraph that fetch lending and renting events that are on chain alchemy to fetch NFT data react JS for the front end, wagme for the smart contract iteration and rainbowkit for the wallet authentication. The next step for us are menu around UX. The very next step we want to the borrower easily, clearly operators on his NFT because this is a security pose. Better UX for implementing the plugin on the Safe wallet and make the return of the NFT automatic because now the lender needs to claim its NFT to have it back in his wallet. We also want a borrower to choose a period of time for the renting instead of letting the lender define this period. Obviously these are the very next steps that we want to work on, but there are many use case that we want to build and we want to be adaptable for, such as gaming for example, or token gated experiences. And I just have to say thanks for your attention.
00:40:14.302 - 00:40:15.650, Speaker B: Have a good Sunday.
00:40:20.790 - 00:40:31.110, Speaker A: Amazing. Thank you so much. All right, we're almost at the end. Finalist number seven, web three, GPT four. Please give them a big round of applause.
00:40:36.250 - 00:41:34.986, Speaker H: Hey guys, my name is Mark, I built Web three, GPT four. So I just got plugins this weekend and I was really excited to start messing around with them and I think they're super powerful and working with chat GPT is going to be awesome. I got a prompt ready here, so we're going to just jump in to a new chat and let's go ahead and give it this prompt. We're basically going to ask it to create a smart contract for us, added some criteria to it, it's an access list and then we're asking for it to deploy to Mantle testnet as well. And if you guys see at the top, I have my plugin enabled and it's running locally. All right, and let me say make sure to deploy to Mantletest net. And the cool thing with chat GPT is you can just halt it if you see something not going the right way and tell it.
00:41:34.986 - 00:42:21.750, Speaker H: And as you see, we now have the chain ID in there that we needed and the context is always there. It's still new, the contract was already starting to write, which is really awesome, but onto the project itself. So basically, I'm running the backend with next JS. I found a really cool boilerplate where instead of using a python backend, they just did it with Next JS and they were able to use OpenAPI to create a schema so that you can actually have OpenAI detect your plugin and then use it on your front end on your chat. So we have the source code done and it should be sending to the back end. And we have a small issue. So it looks like they're doing an import in the contract.
00:42:21.750 - 00:43:19.606, Speaker H: So we're going to go ahead and say don't use any imports, especially when I'm live demoing. And hopefully it'll be quick with that response because we are keeping the progress from before. So let's go ahead and see how it's doing on that. Looking good. And the cool thing is you could actually deploy multiple you could deploy to multiple chains at once. So as of now, it's just a hot wallet in the back end, but that could easily be made into a smart wallet or using something like Safe to provide account abstraction for chat GPT users or even crypto users. So my first thought was to, if you have a front end, you can have a user authenticate on one chain and they can basically interact on chat GBT without even using their wallet with a token or authentication.
00:43:19.606 - 00:44:17.950, Speaker H: And you can do things on any chain and just pay from the one chain. So it looks like we did deploy finally and we're going to get also, which is nice, we get a nice parse result of the Explorer address. Let's check that out. And it looks like we did deploy the contract and just to wing it for the end of the presentation, I would like to just let's try to add one more thing to the prompt. So we're going to go and grab these and let's just say also deploy to these. This is a shot in the dark, might get it, might not, but this just shows what you can do with chat GPT. You can just add on to your prompts and if you have the infrastructure set up, it's all going to be connected there.
00:44:17.950 - 00:45:09.280, Speaker H: So far so good. We have the chains going in on the back end. It's basically I'm using Solsi to deploy stuff and basically just deploying all these contracts. The next big step too is to do some on chain actions so you can actually deploy something and maybe even run tests live on production and have an assistant do that for you. So let's just get this response and let's see if we can go MultiChain with this contract and should be wrapping up soon. I think plugins are going to be coming out for a lot of people now because I was very surprised that I got the access. So I'm super excited to just see what gets built on there, especially from the Web three front.
00:45:09.280 - 00:45:35.030, Speaker H: All right, so we got our deployments. We definitely got an error or two, probably. Yeah, we got one or two errors, but a lot of deployed contracts. And just in a matter of a few minutes, we have ten contracts deployed. Some are on main net, some are on testnets. These are all coming from a chain list with data, and we can verify the links. Let's see if these links are parsed correctly here.
00:45:35.030 - 00:46:04.394, Speaker H: Sometimes they're not, but we can verify these links on the Explorer. Let me just get one that did deploy. Let's check. There we go. Optimism. Do we have a deployment? Okay, we might have to wait for the deployments to come in. Let's check out Hyperspace.
00:46:04.394 - 00:46:13.540, Speaker H: And there we go. Hyperspace Fevm for the win. That's it for the presentation, guys. Web three, chat 64. Thank you.
00:46:16.630 - 00:46:28.870, Speaker A: That was awesome. This is great just being able to tell all the new contracts we need. Sweet. Can't wait for more AI stuff. All right, next up is donation station. Please give him a big round of applause.
00:46:32.510 - 00:47:03.614, Speaker B: Hi, everyone. Who here has donated to the recent Bitcoin Better round was brave enough with these gas fees. One hand over there. Two, three. Okay. Would have been different probably six months ago, but as you know, gas fees were really high in the last few weeks. There was a tweet that inspired me for the Sakathon project, and they estimated that around 600,000 were spent just in gas fees on donations on the Gitcoin better runt.
00:47:03.614 - 00:48:07.010, Speaker B: So I wanted to build a solution for that, but with a little bit of a twist that uses a Chrome extension that you can use in any Chrome browser to donate to your favorite gitcoin projects, open source projects, or public good projects directly from Twitter. The browser extension looks like this, just a simple interface, and you can enter the name of some project that you want to donate to to get some quick bio. For example, if I just take the gitcoin name here, okay, betaround is over. But if we take some other project's name, then we actually get the bio of what happened or what you can see on the gitcoin page right now. And then what the browser extension also does is it can manipulate the interface of what you see on Twitter. So let's say you see a tweet like this and you want to actually donate to this project. Then you can also see this gitcoin icon next to the name, which is generated through the brother extension.
00:48:07.010 - 00:49:04.824, Speaker B: And you can select some amount and some chain EVM compatible chains and donate on a layer two, which makes it much more user friendly just because you don't have to pay 30 or $40 in gas fees. Let's just do this it while we wait for this to go through. Just one challenge I face was that, for example, from browser extensions, you cannot connect to other browser extensions. So what I had to do is it opens up actually a website on the background. You can see it down here that is just a blank HTML that runs the script to connect to your wallet. And then in the end also the went through. I didn't see the success page to the wallet and to the contract.
00:49:04.824 - 00:49:49.788, Speaker B: So this would be a donation contract similar to the Gitcoin donation contract that is not live right now because the round is over. But I just deployed a donation contract on my own for different chains I went through you can donate on different chains. One special thing about Optimism contract was that they have this attestation station. So whenever you donate on optimism, the contract actually attests that you donated to public good. And then what's next for this? You can imagine that this is just the start of what a browser extension can do. You can imagine, for example, going to the Twitter page from, I don't know, uniswap. You can select two token that you want to swap and swap directly on Twitter.
00:49:49.788 - 00:50:12.120, Speaker B: Or you go to Openc and sell or buy an NFT or you stake something somewhere. So this brother extension is really for you to bring any web three app that you like to use to web two platforms that you're already using. And you don't even have to have to leave the page. Yeah, this is just an example of how you can use it in the case of Bitcoin.
00:50:12.780 - 00:50:28.380, Speaker A: Thanks, sweet. This would have been very handy ten days ago, but you can use it next time. All right, our second last finalist of the day, please welcome Chain GPT.
00:50:32.480 - 00:51:20.190, Speaker C: Hey, thanks for having me to introduce Chain GPT, which provides cryptographic truth to all of the AI bots that are taking over the world. I'm a little bit guilty. I'm actually a roboticist by day. I am not a Web Three developer at all and I am very much a roboticist technologist for good. So my day job is a skin printing robot for burns patients and educational technologies. I wanted to bring this vibe to the hackathon and when I saw that actually you can build non web Three technology and use crypto to secure them, it blew my mind. So I was reading through the sponsors cardesi allows, someone has already deployed Distributed OpenCV, which is an open source computer vision library that's very common in my work.
00:51:20.190 - 00:52:28.036, Speaker C: And now it's distributed. So I saw that my mind was blown and I was like, I want to get involved in this. When I thought of Chain GBT, mostly it took my interest because it's like, could that be possible? Everyone that I spoke to, they're like, but could you deploy like a chat AI to the blockchain? Well, Kitezi Rollups make it possible that you can have this cryptographic trust in AI systems that comes in two forms. So I've deployed Alpaca CPP, which is a CP library that uses Stanford AI's Alpaca model, not full chachi BPT, but you can verify that the correct model has been used, the expected model, and also the output of these agents. So where this is useful, it's in all sorts of fields, right? It's taken over everything. But here are some examples. In business, if you're running a business where you're selling a product, people get clever with these chat agents that they can make them, eventually trick them into giving you something for free.
00:52:28.036 - 00:53:14.868, Speaker C: And so later on, as a business owner, it's your responsibility. These chain GPT will keep business owners accountable for like, hey, actually the AI agent said that I could have a refund for this. So bringing that verification. But then also in insurance regulated industries for auditing of actually what these machine learning models are outputting, are they biased? They can be audited. And also you can use that to introspect as a business owner yourself. And then in education, we're putting kids in front of these things to learn, but it relies entirely on what model they're interacting with. And so I think this is going to be coming up more and more in the future of education.
00:53:14.868 - 00:54:17.304, Speaker C: But something like Change GPT will allow school administrators to say like, no, I assure you that it's using this model. I know, because if not Change EBT running on the cartesi machine will actually flag that there's been some tampering. So if you're any of those people, then that's good to know, but can it work? So here's the demo. So I have a local, I have a local blockchain here that is running the Kitezi roll up framework. And on that I'm going to deploy my chain GBT implementation, which is a port of Alpaca C to run in a particular container. It eventually needs to be compatible with the Risk V architecture to be deployed to the chain. It's a work in progress and I'm excited to see it get there.
00:54:17.304 - 00:55:01.780, Speaker C: But for now, this is a local demo. So I'm going to interact with this as if I'm a student. I want to know, tell me about first person who walked on the moon. This is going to get received then by the demo. It's now running like at the moment it's running in a docker machine on my computer. But deploy this to the chain have multiple validators, you'll know, whenever there's a discrepancy from them, but also, you know, because they're putting the state of their actual virtual machine snapshots are being taken and they're stored on chain. So whenever we need to go back and see if anything's gone awry, then that information is all stored in the blockchain.
00:55:01.780 - 00:55:33.120, Speaker C: I had no idea that these sorts of things exist. I interact with this just like with CMake and C, regular tools that I'm used to, and I just kind of get crypto for free. So this is going to here we go. It's thinking out there. Okay, so it's sent that response. And then as a client, I'll be able to receive the response from the chain in general. That, yes, this is the answer to that question according to chain GBT.
00:55:33.120 - 00:56:19.904, Speaker C: Thank you. Thank you. It's an input. Like, I'm drawn to this because of the potential for us to like, okay, everyone's terrified about these AI machines at the moment. So we can capitalize on that hype for the good of publicizing crypto products like this, but also we can be the savior for people's fears of like, I know you're concerned, but the educational system, for example, it's not just going to be left to run loose. So we have OpenCV, distributed openc on Cartesi. And now I am happy to say that you can get full cryptographic safety from chain GBT also through Cartesi operating system.
00:56:20.022 - 00:56:20.690, Speaker B: Thanks.
00:56:24.820 - 00:56:38.820, Speaker A: That was incredible. That's going to be really important. Congratulations. All right, you ready for our last finalist demo of the day? Are you ready for our last finalist demo of the day? Welcome. Op compressor.
00:56:42.280 - 00:57:18.896, Speaker I: All right, so hi, everybody. My name is Ben. So Op Compressor is kind of a really simple but creative way to work around the current L One fee scaler settings on the optimism chain. So effectively, just for a little bit of background, each byte of call data that you add to your transaction payload actually equates to the same cost as writing a kilobyte of storage on optimism. So if you guys are used to working on L One, that's obviously flipped on its head. And the real reason for that being is that we compress your transaction data and then post it to the main net. However we charge you for the uncompressed call data.
00:57:18.896 - 00:58:06.540, Speaker I: So there's actually a way to get around this. I was kind of brainstorming with a friend the other day, and the way that you can do that is that you can compress your call data up front, moving the compression earlier in the pipeline so that our sequencer doesn't have a chance to actually compress your transactions data further. So to do that, I actually kind of came up with this really simple modification of run length encoding, calling it Zero Compressor. And basically what it does is it compresses all of these zeros inside of your transactions call data. And the whole idea behind that is that zero is the most commonly repeated byte inside of your call data. And so effectively, it's actually a really simple set of contracts. You guys can see here that we have 65 lines inside of the zero Do Compressor live, and it's written in assembly.
00:58:06.540 - 00:58:52.210, Speaker I: I also have a pure assembly version in Huff of this that I'll put on my GitHub tonight. And then we also have this other contract called the Call Compressor. And this is best used with some sort of smart contract wallet, like a Gnosis safe, specifically because for things like uniswap swaps, you're going to want to be able to delegate call this code. So I would recommend either setting up a 4337 wallet or using Gnosis safe with this contract. And effectively, what you guys can see it doing is that it will, first of all decompress the call data that you've sent it, and then it'll forward that call data to whatever address that you added at the beginning of your payload. So, super simple contract. There's also a Rust library that does the compression and decompression for differential testing as well.
00:58:52.210 - 00:59:23.636, Speaker I: In terms of security, I've used bounded symbolic execution to test the memory safety as well as the integrity. We also differential test it against the Rust implementation here. So we have pretty high assertion that it's working. So we can kind of see here, this is just a simple Fuzz test that we're doing to forward the call to call compressor. You can see we're calling out to this Rust sidecar to compress a Fuzzed payload. Obviously, this one has a lot of zeros in it. So this is the payload that's uncompressed.
00:59:23.636 - 01:00:19.592, Speaker I: This is the payload that is compressed plus this selector, because Forge thinks that the selector is actually part of the payload. But so some live examples of this, if we go over to Arc real quick in the README, is that we can see a uniswap payload to multicall on optimism. Mainnet sent to just the ID pre compile, you guys can see that this payload is like absolutely huge. And so, as a reminder, every single one of these bytes, which is two of these digits, costs the equivalent of storing a kilobyte of data inside of L two. So obviously, every single one of these bytes, we want to get rid of as many as possible. So what we do is we use that zero compressor Lib as well as a Gnosis safe to basically delegate call the zero compressor Lib. And then what we get is a much shorter transaction.
01:00:19.592 - 01:00:47.540, Speaker I: And so one thing that you might have not noticed is that this transaction was sixty eight cents. The transaction prior to that that was uncompressed was $0.93. So just for a small single uniswap transaction that saved 31% of your call's price, and then obviously, it kind of scales close to exponentially there. So this could be a really useful way for smart contract frameworks.
01:00:49.000 - 01:00:49.990, Speaker H: Thank you.
01:00:52.200 - 01:01:12.750, Speaker I: So this could be a really useful way for Smart Contract Wallets to save even more gas on optimism. And then also we can change our fee scaler settings so that this set of contracts becomes useless, which would be awesome. We've got 4844 down the line, and it's all in the name of making blockchains more accessible to your common people. Thank you, guys.
01:01:18.480 - 01:01:44.708, Speaker A: Genuine true hack. That was amazing. Those were all of our ten finalists. Not only do we see that the future looks like ZKPs and AIS and Chat GPT, but there's some really genuine cool hardware or solidity golfing. But the best part is, nothing went wrong in a live demo. Did anybody notice that we had ten perfect demos? And that's unheard of. Amazing.
01:01:44.708 - 01:02:08.732, Speaker A: I want to give a massive shout out to all of our ten finalists again. Credential corgi dukey Buddy, local pro crypto bureau. Pinky protocol web. Three GPT, four donation station, chain GPT and Op compressor. All right, now is the part where you all get more excited because you're going to win some money. Here's the condition. The more you clap, the faster I'll talk and the faster we can end this.
01:02:08.732 - 01:02:34.608, Speaker A: Does that sound good? Not yet. Not yet. But you want to find out all these things, you can go on showcase on our website and check out all the projects, including our finalists, and we'll get this show started on to Partner Prize. All right, let's do this. $275,000 to be won. Let's begin. First up is one inch.
01:02:34.608 - 01:03:12.500, Speaker A: The best use in a Fusion goes to Wingman for $4,000, and Kinetic Flash is the second runner up for 3000. The best yield implementation goes to One up for 3500. And congratulations to those three teams. And for the open track, one, FX wins $2,500, prank Wallet wins 1500, and Highlight It'll be taking in $500. These are all of our one inch winners. Next up, WorldCoin best overall project goes to Lens School for $5,000. If you're in the audience and you're one of these winners, shout as loud as you can and maybe you'll get a Robbie ticket after I talk to Sonny about it.
01:03:12.500 - 01:03:54.880, Speaker A: The best governance app goes to Ecovoid for $3,000. The most creative use case for WorldCoin is G Spot for 3000, and Missio Contributors is the best. Sign in with WorldCoin App for another $3,000. Moreover, it's about time. Buckpointer and Sign RSVPs are the three honorable mentions for the WorldCoin ID Hack, and eight of these teams are going to be taking in $3,000, split amongst them equally for the pool price category. So congratulations to all of these amazing teams. Next up, optimism hack the stack goes to Optimistic and Rupper 20 for $4,000 each.
01:03:54.880 - 01:04:30.792, Speaker A: Congratulations to both of these teams. Then we have decentralized identities for 4000 and the Attestation Echo team takes in the four supplies for 4000. Peer Match will be the second place $3,000 winner. And Kangaroo Court, which is a hilarious name, takes in $1,000. And these ten teams will be taking in 400 each for deploying on Main net as part of the pool price category. So congratulations to all of these amazing teams. Where's the energy? Are you not in the audience? Shout when you hear your own team name? Polygon Crypto Pay is the best crosschain application for $5,000.
01:04:30.792 - 01:05:01.104, Speaker A: Local Pro will be taking in 2500 for the best use of Polygon ID. Crypto Bureau is the second place $1,000 winner and Self Sovereign Individual and Chuckmarks IO are going to be taking $750 each. Then best public goods for account extraction goes to green wallet and local pro. Again. $2,000 each. And Transparenza is the runner up for the best public goods category for $1,000. And on top of that, these 37 amazing teams are going to be splitting $5,000 amongst them equally.
01:05:01.104 - 01:05:18.392, Speaker A: Congratulations to everybody. I'm going to read every single name here. No, that's a lot of teams. It gets better. Gnosis chain natural chain is the first place winner for $6,000. Prize. Kinetic Flash will be taking in $5,000 of first place.
01:05:18.392 - 01:05:42.592, Speaker A: And third place goes to moom Maker. On top of that, the best AI project goes to Alice for 3000 and Safe Junction will be the best projects on hashi for $2,000. More. Propego is the best project on Safe that will be taking in $2,000. So congratulations to all the Gnosis chain winners. Up next airstack. Gas Drop is the best use of airstack for $3,000.
01:05:42.592 - 01:06:17.768, Speaker A: Highlight will be taking in 2500 for second place. And Prank wallet is the third place $2,000 winner. Congratulations to these three teams. And Jacuzzi is the $1,500 4th place and Lens school is the fifth recipient with $1,000. Up next, Apecoin other swipe for the other side is the best apecoin integration winning in $3,000. And Q Sound will be the second place winner for 2000 and the best contribution goes to miss you contributors for 3000 and PDA for $2,000. Next up, ZK Bob.
01:06:17.768 - 01:06:42.288, Speaker A: Bob is safe is the best place best winner. Number one winner. First place winner, $3,000. Occulto is the second place $2,000 winner and Local Pro taking in another $1,000. And these seven teams will be splitting $4,000 equally for the pool prize category. So congratulations to all of these seven plus the two other teams. Next up is fuel.
01:06:42.288 - 01:07:01.688, Speaker A: Fuel predicate is the best smart contracts on Sway winner for $2,500. And the best DAP built on fuel will be fueled pay. Congratulations to both of these teams. Then we have safe. A lot of you were on safe. I think this is pronounced Alice or slice or dollar lice. $2,500 to you.
01:07:01.688 - 01:07:34.676, Speaker A: Propago will be the second place $2,000 winner. And Daline AI will be taking in $1,500. 4th place goes to Quest Wallet. And the full runner ups are gas Drop, Wing Wallet, land starter and SkySafe. And this is the moment where I take a tactical break to prepare for the second half. All right, I'm ready. Ethereum foundation best account abstraction.
01:07:34.676 - 01:07:53.144, Speaker A: Hag goes to privacy preserving paymaster for $2,500. And Dukey's is going to be the best ethereum hag for $2,500 as well. Onto Cartesi car ten XID. Oh, my God. Don't make me do this. OD stage. I'm very tired.
01:07:53.144 - 01:08:15.848, Speaker A: You win $7,000 and change. EBT and Kobe will be taking in $1,000 each. Congratulations. Next up is, uma Caddx is the fourth place winner for $6,000. Riptide will be taking in 3000 and SAFEGATE protocol is the third place $1,000 winner. Congratulations to all three of these teams. All right, up next is MetaMask.
01:08:15.848 - 01:08:55.200, Speaker A: The best snap hack goes to name snap for 1000. Web Three telbot will be taking another 1000 for the best if the SDK and the NFT AI companion is the best hack with Unity for $1,000. On top of that, the best linear app goes to reflect Dow privacy preserving Paymaster and CADx receiving $1,000 each. And Narif Bridge, Crypto, Pay, Natural Chain and Credential Corgi are going to be receiving $500 each. Congratulations to all of these teams. Onto Filecoin Virtual Machine these ten teams will be getting $400 each for building on filecoin. Congratulations to all ten of these amazing teams.
01:08:55.200 - 01:09:27.008, Speaker A: Up next, Lens Protocol and you get to find out who's going to rave. You ready for this? Drum roll Influencer is a $3,500 winner. A lucky friend will be taking 2500. Lens School is the third place $1,500 recipient. We have five runner ups, lens Pop Teaser, TBA, Lens, Lens Starter, and Highlight taking in $500 each. And all of you are definitely getting your Ivy ticket. And everybody who also submitted but didn't win is also going, so don't worry.
01:09:27.008 - 01:09:59.590, Speaker A: Uniswap foundation, the best innovation on Uniswap goes to Bribe Phi for $2,500. Congratulations to bribe Phi and the best ecosystem hack pool will be shared between these six teams. Rain shower pools, PDA, Treasury, Dow, Proto Coffin Finance and other swipe. For the other side, splitting $5,000.06 ways and the best developer tooling will go to these three teams. Guardian Oracle kepler Keeper Protocol prank wallet and detecting liquidity pockets in uniswap V Three. You sound like a physics paper.
01:09:59.590 - 01:10:22.012, Speaker A: You guys got to get a short name. I got to read these things live. But congratulations to all three of these teams. Onto the graph. Treasury Dow is the best subgraph winner for 1400. Looks like we finally found a team that's in the audience that want money. Mose, the host, is another $1,000 winner and Lens Pub will be taking in $600.
01:10:22.012 - 01:11:01.044, Speaker A: On top of all that, Pinky Protocol will be the one $200 1st place receiver for the best use of existing subgraphs. Daline AI, second place for $800 and Cryptowise AI for third place. And these 27 teams are going to be splitting $2,000 with the subgraph hacking pool prize category. So congratulations to all of these amazing teams. I am also now getting tired and I don't think we're close to ending yet. Ave Grant Style, the best use of Ave or Go goes to one FX for $3,500. Coffee and Finance will be taking in 2500 for second place and Geist will be the $1,500 2nd 3rd place winner.
01:11:01.044 - 01:11:25.440, Speaker A: And these five teams are going to be taking $500 each for treasury, dow, Guardian, Oracle Keeper, Protocol, Dukey's, Geist and CADx. Congratulations. Next up is Mantle. Guardian Oracle Keeper Protocol will be the first place winner again for 2500. Natural Chain is the second place. $1,500 recipient and donation Station will be getting in $1,000. Congratulations to all three of these teams.
01:11:25.440 - 01:12:09.624, Speaker A: Up next chain link. Five of these teams are getting $1,000 each. So congratulations to buck Pointer, treasury Dow Falsonic other swipe for the other side, rabbit Dow Casino on to scroll. You ready for this? 46 teams are going to be splitting $5,000 each for the deploying on scroll contract. So seems like a lot of you are excited about ZK EVMs and you're going to be taking away a lot of prizes onto Neon Foundation. CADx is the first place winner for $2,500 for best use of Neon on the EVM. Guardian oracle Keeper Protocol will be taking in 1500 and Natural Chain is the third place $1,000 recipient.
01:12:09.624 - 01:12:38.330, Speaker A: Congratulations. Then we have CISMO. Crypto Bureau will be the best use of CISMO taking in $3,000 and the best use of account abstraction goes to Dukey. And the best use of civil resistance goes to zero. Civil nest drop for $1,000. Congratulations. And Nouns, the best public infrastructure goes to Prepego for 3000 and the best artwork is for Selfie, taking in $2,000.
01:12:38.330 - 01:13:06.240, Speaker A: All of these are the prize winners. Congratulations to all of you amazing teams who've just won over $250,000. All of these things will also now be visible on the showcase. So once you see this on the live stream, just refresh your dashboard and you will see what prizes you've won. And we'll also contact you with all the next steps. Speaking of next steps, here are some key things to remember. All of these announcements are tentative and not final, which means that prizes can still change because we will be verifying everybody's code base.
01:13:06.240 - 01:13:55.180, Speaker A: We'll be making sure nobody cheated, nobody worked on a project before Friday, and if somebody is removed from those lists and for example, if you're a part of a pool prize or one of the top winners, we will have to readjust. So it'll take us a couple of weeks to do all of that and then notify all of you that this is the final set of recipients for the winners. So our deadline is by June 2. This is also the same timeline where all of your stakes will be returned. So give us the next two to three weeks to do all of this and we'll be following up with anybody with any next steps over email if we have any questions or if you want to have you clarify if something was done before or not. So now comes the last five minutes of me stopping and just stop talking. So this is where we're going to get to a lot of clapping.
01:13:55.180 - 01:14:33.148, Speaker A: And now I really get to say the more you clap, the faster we end because there's a lot of people want to thank for making this whole thing possible. You saw all the things that are happening here this weekend. You saw all the things that are happening in the background and it takes so many people to make all of that work. So I want to make sure we recognize everybody for all the things that they've done up till this event for the past few weeks, to the months, to just this weekend. So, so many people here. But first of all, I want to thank all of you as hackers who stayed with us over the weekend, worked on something that you were excited about, submitted a project, talked about it sometimes, didn't even sleep. Thank you so much for spending your weekend with us, and I really appreciate you being here in this building.
01:14:33.148 - 01:15:06.948, Speaker A: I want to thank our judges one more time for taking the time to spend all of their mornings and talking to all of you for really making this possible. All of these amazing mentors and volunteers who were just roaming around, making sure nobody has any problems. Your questions get answered anytime something is not according to schedule, we run and address it. All these people were doing so much amazing stuff behind the scenes. So thank you so much to all of those volunteers, all the amazing speakers who did workshops and talks. Without them, you wouldn't have all this educational stuff that you can look up in the future and help bring other people onto this space. I want to thank all of our amazing speakers one more time.
01:15:06.948 - 01:15:49.300, Speaker A: Please give them a big round of applause and look at all of our partners. All of these people were here helping you all succeed, with all of the SDKs, helping answer questions, giving out prizes, coming here, talking to all of you, sometimes answering questions in the country or city they were on because they couldn't make it in person. Without them, this would not be the event it is today. And a special shout out to the ETH Global team. You don't see all of them here because they're always running around. But I want to give a massive shout out to Shari, Andrew, Maggie, Nunu, oygen, Taylor, Fred, Polly, Rory, Chloe, Kevin, Ivan, Kevin, Kree, Hucchi, Minnie, Anna, Moaz, Emily, Andrew and Jacob. They make all of this in the background possible.
01:15:49.300 - 01:16:31.996, Speaker A: And a special shout out to Cree and Kevin for being an incredible member of team with the past one year. So those were all the thank yous. Let's go back to those ten finalists that came on stage. We call them our finalists because, unlike other events, these are not designed to be competitions. Our goal is to really make sure that we help people get excited about what's next in this space and help them experiment with all the new technologies. What you saw now will be what becomes normal six months from now, which seems like more chat, CBT and a lot of ZKPs becoming more mainstream. And we call them finalists because we want to really make sure that people are here just building things that they're excited about and just the cool shit that they think is cool and not really game this or try to keep this separate or tied directly to any prizes.
01:16:31.996 - 01:16:59.352, Speaker A: So effectively, anybody who came here on stage, all those ten teams, they are our first place winners. There's no one to ten. And these finalists are our winners for ETH Global Lisbon. So please give those teams a massive round of applause for all coming in first. And as part of being a finalist, in addition to any prizes that they've won, we will be giving Azeath Global 500 USDC per member to each of those teams. But that's not all. There's a lot more.
01:16:59.352 - 01:17:33.460, Speaker A: On top of that on top of that, you'll also be getting Tensorpolia E to testnet and play with whatever you want per member. An ENS domain of your choice. Not the three letter ones. We're not there yet. Anytime you want to come to any Pragma events for this year, there'll be a Pragma for every in person event that we do. You'll be allowed to come in anytime, independent of if the registration is open or not. If you are interested in getting a hardware wallet, you can get $100 off a grid plus lattice, a lens protocol handle if you're still on the waitlist, a push video alpha access if you're not on that product just yet from your wallet.
01:17:33.460 - 01:18:21.860, Speaker A: A Web Three storage pro tier for storing anything on filecoin. We forgot the AWS credits. $10,000 in AWS credits, too. And for all the finalists, if they want to come to our next in person event, we'll give them a flight credit to come with guaranteed reimbursement, and we'll fly you into the next Eat Global hackathon next month in Canada. So on top of all of that, 500 USDC, all these things are given to all of our finalists. So congratulations to those ten teams. And just as a sneak preview for what's coming next, we are also going to be making a lot of these things available to all of you soon by launching something called Eat Global Perks, where we get to just list all these things and anybody who's been part of our ecosystem can claim different perks, including testnet eats for gorli and Sepolia very soon on their own.
01:18:21.860 - 01:18:52.760, Speaker A: So congratulations to all of these teams. Let's wrap this up with the one last announcement, which is telling you all what's next. This wouldn't be a neat global event if we don't tell you what the next upcoming events are. So in terms of my final three minutes on stage, up next is our online event called Autonomous Worlds. If you're interested in building something, that's collaborative game world called Mud. If you've heard of Mud before, these are multiplayer interactive universes where all of them are hacking on the same thing. That event starts this upcoming Friday.
01:18:52.760 - 01:19:17.350, Speaker A: It goes on for just four days. It's all online. Please check out Autonomous Worlds. This is one of our most exciting hackathons that we're just looking forward to. After that is Hack FS. If you're interested in building more Web Three stuff, leveraging IPFS and Filecoin and Fem, this is going to be the event this is also online. It'll go on for three weeks starting June 2 to 21st on Hackfs.com.
01:19:17.350 - 01:19:46.956, Speaker A: Then is our first next in person event, ETH Global Waterloo. This is where ETH Global started five years ago, and we're doing it again for the third time. So we're going to be bringing a lot of that back to what's happening in the interior ecosystem at this event. After that will be ETH Global Paris. Right after ETHC that week. If you're interested in joining this one, especially a lot of you here who are very nearby, we'll see you in Paris in July. Then we'll be doing New York in September.
01:19:46.956 - 01:20:16.644, Speaker A: That's going to be our second last in person event of the year. And we're going to close the year off with Istanbul defconnect on November 17 to 19th. You can check out all these events right now. I encourage all of you to apply all the details and everything else is now available on Ethglobal.com. So we'll see you a lot more this year. So this almost concludes ETH global lisbon. One final thing we'll do before we let everybody go is we're going to take a quick group photo.
01:20:16.644 - 01:20:33.970, Speaker A: So what I'm going to ask you is to just get up and look over there at the back so we can take a massive group photo. And for all the top those ten finalists, just come on stage. We'll have you here quickly. And after this thing, I will shut up and we will enjoy the rest of our evenings. Here we go.
