00:00:07.050 - 00:00:48.154, Speaker A: My name is Zach Ayesh. I'm with the developer relations team with the Filecoin virtual machine and protocol labs. And so today I'm going to give you an overview of IPFS Filecoin, the Fem, and Datadows, which are exciting new application that we're seeing a lot of interest in and people building on. Right, so without further ado, I'll go ahead and get into it also real quick and aside, usually I have a slide for this, but I had a lot of slides and I want to fit it in. But a lot of the stuff I'm saying I'm going to try to build up from the ground up. But if something doesn't make sense, it probably doesn't make sense for a lot of people. So feel free to ask a question if we have time.
00:00:48.154 - 00:00:55.038, Speaker A: After. If not, you'll find me at the booth or find anyone with a yellow jacket and the Filecoin symbol on and you can ask them questions.
00:00:55.124 - 00:00:55.760, Speaker B: Right.
00:00:56.370 - 00:01:23.190, Speaker A: So let's dive in the Filecoin Master plan. So, step one, build the world's largest decentralized storage network. That's checked off, I believe. Last I checked, there is exabytes of storage capacity for the Filecoin network. So already pretty large. Step two onboard and safeguard humanity's data. What is humanity's data? That is all the data that humanity finds useful, which is a lot of data.
00:01:23.260 - 00:01:23.880, Speaker B: Right.
00:01:24.250 - 00:01:37.722, Speaker A: This is something that will continue to happen as we as humans generate more and more data. And finally, step three is bring compute to the data and enable web scale apps in a decentralized way.
00:01:37.776 - 00:01:38.330, Speaker B: Right.
00:01:38.480 - 00:02:17.270, Speaker A: And this is where the Filecoin Virtual Machine comes in and we'll jump into that in a second. Right, so you heard that I work specifically with the Filecoin Virtual Machine team. What is the fem? It delivers on chain programmability to the Filecoin network. The Filecoin blockchain was an application specific blockchain, initially designed to be like a middle layer between clients that had data. They want archivally stored and storage providers that had large amounts of SSD and are willing to provide that for a price.
00:02:17.340 - 00:02:17.960, Speaker B: Right.
00:02:19.630 - 00:03:06.630, Speaker A: The Filecoin Virtual Machine allows us to write programs, or as you may know them, smart contracts on top of the Filecoin Virtual Machine and allows us to design programmability and we'll get into what makes it special on Filecoin versus like a traditional EVM chain in a second. So the most common question and confusions that we get are between IPFS and Filecoin. Right. A lot of developers know IPFS, a little less know Filecoin and a lot of people want to know what is the difference? Right. Some people heard Filecoin is an incentivization layer on top of IPFS. That is incorrect. IPFS and Filecoin are two separate networks.
00:03:06.630 - 00:04:04.490, Speaker A: IPFS is a peer to peer storage and file sharing network, much like BitTorrent. Only the content is content address, right? Not location address. So like BitTorrent, you need a file to get started in IPFS. You look up your content by what's called a CID, which is basically like a hash of your data that represents your data, right? The thing with IPFS is you don't have permanent storage on it, right? Like there's nothing that guarantees your data is going to stay up if people just don't have it pinned up, right? So this is where the filecoin blockchain comes into play and we have it kind of divvied out into layers. Layer zero, you can think of it as the storage layer. This is the storage providers providing their SSDs and validating the blockchain. They have layer one as the FVM.
00:04:04.490 - 00:04:36.710, Speaker A: It's kind of like a layer 0.5 as we'll see in a second. It's actually within the layer zero. It's within the filecoin chain, right. The virtual machine lives in the filecoin blockchain and all the storage providers run it. And you can think of layer two as any storage related DApps and solutions built on top of the filecoin blockchain, including what other chains call layer two. So other blockchains could plug into the filecorn blockchain to help it scale.
00:04:36.710 - 00:05:58.906, Speaker A: Right? So again, to kind of like illustrate IPFS a little bit more, if you want to use IPFS and give a little bit more guarantees a client, you can run a bunch of your own nodes to add a little bit more availability guarantees for the data that you store in IPFS. You can run nodes with the community, which would probably be even better if it's like really in demand data. People may want to host it themselves and make it super available or you can pay for a pinning service and they'll give you some reliability guarantees. But this is obviously a slightly more centralized solution, right? And so all of these are basically based off either you're kind of paying for a centralized solution or you're hoping for the goodwill of the community, keep the data alive, which I think works as an awesome protocol. But if you really just need those guarantees that that data is going to be there and you want those guarantees in a decentralized way, filecoin is going to need to come in, right? So here's kind of a simple illustration of the filecoin network. You have storage providers there on the bottom and they are running the filecoin chain nodes, the client software. One of the biggest ones is Lotus.
00:05:58.906 - 00:07:01.810, Speaker A: This would be kind of like the equivalent of like Geth if you're familiar with Ethereum clients for filecoin. So these storage providers, they have a lot of SSDs, typically warehouses of them. But anyone can become one of these storage providers. You just need SSDs to provide storage. They put some fill as collateral to become a validator and they run the filecoin blockchain. This logical thing that is the filecoin blockchain runs on all of these storage providers, right? And they have to come to consensus on blocks like any other blockchain, right? And again, originally the file coin blockchain was tailor made to sit in between your storage providers and clients up there who want their data stored, right? And that's just kind of what it was made for. But beginning in March, a virtual machine was added into the Filecorn blockchain, right? The filecorn virtual machine.
00:07:01.810 - 00:07:14.694, Speaker A: It was clear with all of these virtual machines and smart contracts that this kind of programmability capability on blockchains is super useful to have.
00:07:14.732 - 00:07:15.126, Speaker B: Right.
00:07:15.228 - 00:07:55.940, Speaker A: Smart contracts enable you to build decentralized logic. And now we'll get into it. But with Filecoin, we can build logic around storage, right. So within that blockchain, it's just a virtual machine. And to give you a little background on exactly what the architecture of the Fem looks like, those storage providers, right? They're all running a blockchain node, most likely a Lotus node, which is the most popular. There's also Venus. And within that Filecoin node, you have the FVM that kind of sits within it.
00:07:55.940 - 00:08:56.514, Speaker A: It is built in a WASM based runtime, and the EVM is actually virtualized on top of this WASM based virtual machine. So you may be asking, why are we virtualizing the EVM on top of WASM? Instead of just using WASM, we're just using the EVM, right. One of the core reasons is that it's still unclear. Even though EVM is the predominant virtual machine in web three at the moment, what virtual machine is really going to be the one that takes off in the future? And this allows flexibility for adding other runtimes, other virtual machines to the filecoin blockchain if needed in the future, right? Right. Now, the first one is EVM. It's fully EVM compatible. But later down the line, we could add new foreign blockchain runtimes.
00:08:56.514 - 00:09:39.174, Speaker A: Like maybe the Solana runtime could run in filecoin and even possibly non blockchain runtimes for whatever reason. Maybe we want to run the JVM in filecoin. You could technically do that, right. We also have this concept of built in actors, kind of like pre compiles in Ethereum. These are the traditional APIs in filecoin that you would use to make storage deals, and we'll get into it. But you can actually access these inbuilt actors from within the EVM in filecoin. So again, EVM is the first runtime, fully EVM compatible.
00:09:39.174 - 00:10:24.886, Speaker A: So all of your favorite tools, if you're used to developing on the EVM, are totally usable for developing on filecoin. Hard Hat, can't say Truffle anymore, but Foundry MetaMask Remix, so we have some pre built kits that you can use. And I'll provide links to that in a bit, but yeah, so you can build with it. And that's one of the main reasons the EVM was the first, right? Because everyone is familiar with it as the most robust developer ecosystem out of all the web three EVMs so far. So next common question we would naturally get is why should I use the Fem?
00:10:24.918 - 00:10:25.114, Speaker B: Right?
00:10:25.152 - 00:10:45.394, Speaker A: There's a million EVM chains. Why don't I just use ethereum itself? Arbitram polygon. Name your favorite EVM chain. Why not? That there's a simple answer to that and it's storage deals, right. This concept of storage deals, which don't exist on almost any other blockchain that I'm familiar with.
00:10:45.432 - 00:10:46.020, Speaker B: Right.
00:10:49.750 - 00:11:15.414, Speaker A: What is a storage deal? Right? Storage deals are the contracts that govern those storage providers that we're talking. So, you know, we said earlier, IPFS doesn't incentivize storage, filecoin does. How does it do that? Well, if you're running a storage provider node, you have to put up collateral in filecoin token to run the node.
00:11:15.462 - 00:11:15.962, Speaker B: Right.
00:11:16.096 - 00:11:20.250, Speaker A: And if you take a storage deal, you have to put up a little bit more collateral per the deal.
00:11:20.320 - 00:11:20.938, Speaker B: Right.
00:11:21.104 - 00:11:36.286, Speaker A: And once you do that, as a storage provider, you do what's called seal the data. And every 24 hours you have to provide a proof that you are still storing that data. If you fail to provide a proof, your collateral can get slashed.
00:11:36.318 - 00:11:36.658, Speaker B: Right.
00:11:36.744 - 00:11:42.722, Speaker A: So if you do provide the proof, you continue to get paid as per the storage deal.
00:11:42.776 - 00:11:43.282, Speaker B: Right.
00:11:43.416 - 00:11:46.962, Speaker A: And these storage deals live on the filecorn blockchain.
00:11:47.026 - 00:11:47.640, Speaker B: Right.
00:11:49.770 - 00:11:59.366, Speaker A: We'll get into another common misconception, is the data that we're storing, like the large data sets that we're storing with these storage providers, they do not live on chain.
00:11:59.398 - 00:11:59.642, Speaker B: Right.
00:11:59.696 - 00:12:10.302, Speaker A: This is what lives on chain. Like the storage deals. The metadata saying who's storing what, how big the data is, is it verified, will fill plus kind of the metadata of the data.
00:12:10.356 - 00:12:11.054, Speaker B: Right.
00:12:11.252 - 00:12:17.840, Speaker A: But the storage providers have the actual large data sets in their hard drive sealed and ready to be approved at any.
00:12:23.490 - 00:12:23.962, Speaker B: We.
00:12:24.036 - 00:12:50.502, Speaker A: So the fem cannot actually compute over these large data sets. Started with the storage providers. There's other networks that can do that off chain networks. It'd be really expensive to do that in a blockchain. Virtual machine storage yields all the contracts, metadata that represents that data. So just really want to beat that point in because that's the first thing people want. It's like, okay, I've got data stored with these storage providers.
00:12:50.502 - 00:13:30.120, Speaker A: I want to run an AI model over it. You can do that, but just not with the FVM, with something like bakilau our lily pad, our projects that are kind of building on top of that allow you to do that. So we talked about these inbuilt actors and how filecoin the blockchain kind of predates the virtual machine, the virtual machine launched on Mainet back in March. And so there's all these classic APIs that were available before the virtual machine. How do we access those APIs from solidity from the EVM on filecorn.
00:13:30.140 - 00:13:30.372, Speaker B: Right?
00:13:30.426 - 00:15:15.770, Speaker A: Because the EVM wasn't built, again, knowing what a storage deal is, it doesn't know how to access those things. And that's really what makes the filecoin EVM unique. So we work together with wonderful team Zondax to build these filecorn solidity libraries which act as abstractions between these inbuilt actors. So you can easily access these APIs from these built in actors in your solidity smart contracts, right? So if you want to read those storage deals, you can do so through Filecoin Sol, right? If you want to read what Miner has, what deal, you can do that through Filecoin Sol and start writing unique applications, storage based applications with it, right? So there's kind of three main paths where we're pushing people on how to get your data stored on filecoin, right? Maybe you don't need any kind of programmatic storage, and in that case, you can just store data like you could always on filecoin, which usually involves getting to know a storage provider or finding them on some marketplace, seeing what kind of deals they're accepting, signing what we call a deal proposal with a key. The storage provider will review that. They will decide if that's a valuable deal or not. And you can negotiate, but if it is, they'll call a method called publish storage deal on chain, and your deal will get active and they'll store your deal and they'll start having to make proofs, right? But maybe you need programmatic storage.
00:15:17.630 - 00:15:17.946, Speaker B: In.
00:15:17.968 - 00:16:11.470, Speaker A: That case, there's two paths. If you have really small data sets, maybe just a couple of NFT images, or maybe you have a really large data set, like huge DSI data sets, like Oceanographic Data or something that you want to run a large AI model on. If you have the small data and for many people building in this hackathon, you'll probably be working with smaller data sets. We recommend you use an aggregator, basically a third party that will take your data. They'll pin it on IPFS, and they'll work on making a storage deal for you on filecore. All the complexity is abstracted away, super easy, super quick. The other option is using what we call the client contract, basically a contract which allows you to make a storage deal completely on chain.
00:16:11.470 - 00:16:25.682, Speaker A: It does this by an Emitting event with all of the deal proposal information. And any storage provider running a front end called Boost can listen for that event information and make the deal through that.
00:16:25.736 - 00:16:26.338, Speaker B: Right?
00:16:26.504 - 00:17:02.814, Speaker A: Client contract is a bit more complex, so a lot of the aggregators, they use this in the background themselves. So it's a lot harder to get started for like a quick weekend hackathon. So I'll definitely suggest checking out the aggregator route. But if you really want to, you can find that client contract. It's in our starter kits, and you can kind of start developing with that. So, yep, we three pads. So what can you do with the Fem? Right? You can kind of do what you do with any other virtual machine in web three.
00:17:02.814 - 00:17:25.310, Speaker A: We can make governance, you can mint tokens to give your project to economics, endowment management. But we also have these kind of fundamental infrastructure things we can now build, right? Repair workers or new workers. So before in filecoin, if your deal that you would make would have a certain amount of time and then it would expire.
00:17:25.390 - 00:17:26.066, Speaker B: Right.
00:17:26.248 - 00:17:53.226, Speaker A: But maybe you want to have your deal renew on indefinitely, right? In this case, you could maybe create a Dow and that Dow can fund a treasury and that treasury can be used to pay renew workers that monitor the state of a deal and automatically renew it for you when it's about to expire. In this way, you can kind of crowdfund a deal that just kind of keeps the data stored indefinitely. Right, or make new storage deals.
00:17:53.258 - 00:17:53.550, Speaker B: Right.
00:17:53.620 - 00:18:32.220, Speaker A: These are kind of primitives that you wouldn't really see in another chain that doesn't have storage at its kind of base layer. So what are data dows? That's a term that was kind of in the title of the talk. It's kind of a buzword you'll see around if you're not familiar. A Dow stands for a Decentralized Autonomous Organization. Essentially, it's just a bunch of people organizing on chain and figuring out a way to vote for proposals and get things passed. Data is this boring definition, a collection of discrete values I basically put up there just to be a little facetious. I think we all know what data is.
00:18:32.220 - 00:18:53.670, Speaker A: But what I mean when I'm saying data Dows is Dows storing data on filecoin, right? You'll kind of see this term used different ways in different places. And it's still kind of a nebulous term depending on who you talk to. But this is what I mean specifically when I talk about data Dows.
00:18:53.690 - 00:18:53.922, Speaker B: Right?
00:18:53.976 - 00:19:37.718, Speaker A: So DAOs that are kind of managing the data being stored on filecorn. So we have a fun example of a Dao that my colleague Sarah came up with biscuit Dao. If you don't know, Biscuit is the mascot for Filecorn. It's the corgi. And Biscuit Dao is a community of corgi dog owners that want to better understand their corgis and let the world better understand. So, you know, maybe they have some ZK verified access as a contributor. Maybe it's open and they upload corgi behavior Monday to Friday on the Filecoin chain.
00:19:37.718 - 00:20:53.452, Speaker A: And as a reward, they get tokens, some kind of Biscuit token maybe, that they can use to further vote in the Dow. It can have value they can sell on open market. But as more corgi owners get more tokens, they can participate in Dow votings and they can use the treasury of the Dao to further incentivize specific kind of data sets they need on their corgis, control the treasury reward, maybe take some of that money, donate it to organizations that will rescue corgis. Whatever the Dow wants, they can now organize around that. They could also use the tokens to maybe pay for a service like Baccalau or Lilypad and run some AI models over this data to get some more refined information on all the corgis in the you know. And again, they can also fund these repair renew, replicate deals to make sure that their data is stored indefinitely. And this results in a healthier and happier corgis around the world.
00:20:53.452 - 00:21:24.708, Speaker A: Who doesn't want healthier and happy corgis? You can replace it with a cat if you're more of a cat person or any other breed of dog. But this is kind of just a fun example to show you what you could possibly build with fem and data dows. Hot off the presses, I actually just pushed an example of biscuit dow onto the filecoin and Protocol Labs GitHub repo.
00:21:24.804 - 00:21:25.064, Speaker B: Right.
00:21:25.102 - 00:21:57.050, Speaker A: So you can check it out. It has a bunch of contracts in it already. It allows you to basically go in, make a proposal for data that you have stored on filecoin, right. And you can actually store that data quickly and easily using an aggregator. Lighthouse Storage and rewards tokens out if the dow votes on. Yeah, this is data that we want. This is data that's stored and it has a README that kind of explains it.
00:21:57.050 - 00:22:48.916, Speaker A: I'll be kind of building up this more in my free time, just giving it maybe more of a front end. So this is kind of still an MVP right now, but it has everything you need to experiment and play around with a biscuit dow. Right. And you've heard me talk about aggregators and Lighthouse Storage is an aggregator we've been working closely with. They have an awesome team and the kit actually uses their SDK to store the data. So I'd highly recommend checking out lighthouse storage. They offer all kinds of cool functionality and documentation, including an interesting feature called podsi, which in a nutshell lets you know if you have this big aggregated data stored on filecoin.
00:22:48.916 - 00:23:43.370, Speaker A: Is my data within that data? Normally you wouldn't know, but they provide a data proof so you can find what deal your data is actually stored in. And for more generically, we had biscuit dow as an example. Dow, we have a data dow kit that has all of the generic boilerplate pieces from like OpenZeppelin. You may need to build a data, know a lot less opinionated, just kind of there with some basic examples and scripts you can look at. It was based on an old colleague of mine, Patrick Collins. He has a great video on DAOs in general and explaining them. I actually linked to that video in the README, so I'd highly suggest watching that video if you just want to know what all the contracts in the dow do and learn a little bit more.
00:23:43.370 - 00:24:14.352, Speaker A: Yeah. And so if you want any more FBM resources, you can check out our link tree. It'll point to the docs. All of those kits I've mentioned are forums on GitHub where you can ask questions. Yeah, so very nifty link tree. And I believe Sarah will be presenting a little bit more detail on these bounties at eight. But we do have bounties for this hackathon.
00:24:14.352 - 00:25:03.620, Speaker A: So twenty k of bounties, you see we have a grand prize and the pool prize and some interesting project ideas that we're looking for. Of course, I've mentioned datadals, and we provided some resources for those DeFi projects. Still always welcome programmable storage markets. I think this is something very unique, and this is something you really can do on many other chains, tools, infrared and Bridging always welcome and compute over data with know backyard. Lilypad is that heavy compute framework I've mentioned several times. If you have questions about that, I highly suggest you check out their documentation and their Slack channels. But, yeah, these are some project ideas, if you were still wondering.
00:25:03.620 - 00:25:27.624, Speaker A: So, with that, I believe I have 5 minutes for A-Q-A. So if anyone has any questions, feel free to raise your hand and ask them now. Yeah, we have one. Do you have ewbreak eight. Yeah. So he asked if we have interoperability with FVM and Cosmos VM.
00:25:27.672 - 00:25:28.270, Speaker B: Right?
00:25:30.160 - 00:25:49.760, Speaker A: Cosmos uses Cosmosm at the base, I believe, so no, right now, the only runtime we have is EVM, right? So anything you write in solidity can be put there or anything that compiles EVM. Bytecode viper as well. But not anything with Cosmos, I believe, directly.
00:25:58.020 - 00:25:58.770, Speaker B: Speaking.
00:26:00.820 - 00:26:50.068, Speaker A: Yeah, you if you use a bridge, you can interoperate with Cosmos. Right. And there is, like I know Axelar we work with, they help bridge between Ethereum and the filecoin blockchain. And yeah, bridges will allow you to do that, and you can build any kind of bridge you want on a VM. Any other questions? Going once, going twice all right, well, if you do have any other questions later, feel free to find me or any of my colleagues in the yellow vests at the file corn booth. We stick out like sore thumbs, so shouldn't be too hard to find us. And please, feel free to badger us with any questions you have.
00:26:50.068 - 00:26:59.110, Speaker A: We'd be happy to answer. Thanks for listening, and thanks, Steve Global, for hosting this event. Looking forward to seeing what y'all build. So have a good night.
