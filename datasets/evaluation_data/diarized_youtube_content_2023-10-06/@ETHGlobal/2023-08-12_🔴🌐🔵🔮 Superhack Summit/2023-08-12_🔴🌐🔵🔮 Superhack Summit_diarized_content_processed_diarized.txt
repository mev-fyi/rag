00:00:00.330 - 00:03:31.560, Speaker A: Sam. Sam. Sam. Sam. Sam. Sam.
00:03:54.340 - 00:04:28.432, Speaker B: Morning. Good afternoon and good evening everybody. My name is Karthik, one of the co founders of East Global and I'm super excited to welcome all of you to the SuperHack Summit. Let's get started. This is a summit that's part of the SuperHack hackathon that's been going on for the last week, which ends next week where we have 1100 hackers building all the amazing things they can think of on the Op stack. And today is about telling all of you what's actually happening in the rest of the Op stack and superchain ecosystem. And we can't wait to get started.
00:04:28.432 - 00:05:20.428, Speaker B: So let's dive right into it. Today's schedule is going to be these five incredible talks on what is happening in the world of Superchains. We're going to kick off with our very first talk today, which is going to be Carl from Op last, talking about Superchains and what everything you need to know is in this world. Then we'll have Marik from Cello talk about their L Two proposal which is going to be going in depth on what it's going to take for Sello to move over to being an L Two on Ethereum. Then James from Mode is going to talk about how we can use Mode and structure the Op stack for hypergrowth with how we can set up different incentives. Jesse, who is one of the contributor number zero for base is going to be talking about what onchain Summer is all about on base. And you've kind of seen the incredible growth that they've seen the past couple of days on the launch.
00:05:20.428 - 00:05:55.020, Speaker B: And we're going to conclude the day with Devin from Uniswap Foundation talking about what does Uniswap on multi chain World looks like and everything that you need to know about how to think about building applications in that context. So that's the schedule jam packed for the next couple of hours to go deep into Op stack and we're going to kick us off with our very first talk today right away with Carl talking about superchain 101. So without further ado, please welcome Carl here with me to tell you all about Superchants. Hey, Carl.
00:05:55.920 - 00:05:57.596, Speaker A: Hello. How's it going?
00:05:57.778 - 00:06:02.530, Speaker B: It's going great. We'll let you get started. Welcome.
00:06:02.900 - 00:06:44.444, Speaker A: All right, well, I apologize for the semi false advertising because this is definitely not a 101. This is more like significantly more than a 101. Very in depth. If you want a real 101, the DevCon talk is probably the way to go. But you know what? We are all about getting into the weeds. Also, notably, some of you might have seen some of this presentation before because it is on the YouTube, but I think it'll be a good refresher. There's way too much information here, so it's a good one.
00:06:44.444 - 00:06:58.028, Speaker A: But yes, no fun allowed. This has to be a boring presentation because it's burying the weeds. Let's go. Let's do this. Time's up. Okay, so super chain to the rescue. Reminder.
00:06:58.028 - 00:07:26.308, Speaker A: Why are we building the super chain? Well, it's to scale because blockchains are insufficient for the decentralized web that we want to create. Why is that? Well, because of congestion. Oh, my gosh. It's horrible. So blockchains don't scale, right? Like, we are often paying 15 $13 for a transaction. It's insane. My transaction was just an electronic Arcs trying to tweet.
00:07:26.308 - 00:07:52.224, Speaker A: No, not tweet. I'm trying to x. And it paid $13 for that transaction. No way. No way. So we need scalable infrastructure that is decentralized, but can still support the insane amount of traffic and throughput that, we require, and this isn't new, right? Like, this has been a problem from day one. This first response to the Bitcoin white paper.
00:07:52.224 - 00:08:12.410, Speaker A: We very much need the system, but the system that you proposed does not seem to scale. Sorry, Satoshi. We have to make progress on top of it. So anyway, this has been plaguing the industry since 2008. It's now 2023. Goodness gracious. Let's do this.
00:08:12.410 - 00:09:01.432, Speaker A: Okay, before we get too sad and cry, let's imagine a future, because we are very close to that future. We are incredibly close. What if things were different? Crypto wasn't just about meme coins, and everyone was happy using it for literally everything from social media to games to et cetera. The whole world was running on decentralized infrastructure. Well, what would that be like? Right? We can literally abstract away the back end software stack. We don't have to worry about what provider we're using because we're using a decentralized network of providers that are all competing on the same Internet standards. It's like standards for the entire Internet's back end.
00:09:01.432 - 00:09:29.010, Speaker A: And additionally, if we had that, we would have so much more composability. People can actually work together. Application developers can work together. The boundaries start to dissolve between one application or the other. And we don't need to worry as much. We can think more about the applications that we're building and not so much just about the infrastructure cost. I mean, let alone all of the amazing open source software that we would then be using.
00:09:29.010 - 00:10:11.848, Speaker A: And this is how we turn the Internet from a walled garden, difficult to hack on and contribute to ecosystem to a vibrant, vibrant world. And so obviously, of course, in reality, these pictures were going the other direction. Stop using Sunblock FAM. That's our sponsor. Okay, anyway, no, we have to oh, my gosh. I literally need to update these slides with the Twitter on this. You could build in this world, right? Like, you should be able to build the application logic for Twitter that is horizontally scalable as a smart contract in a hackathon weekend.
00:10:11.848 - 00:10:41.236, Speaker A: That's where we need to be. Okay, so the decentralized web obviously still can be realized. We've been working on it for years. Started out building out E 2.0. Like, we were trying to charge Ethereum directly. Then we realized that we needed to build it out in layer two, which we formed Plasma Group to scale Ethereum in that way without having to ask for permission, we just implemented. And then we realized that not only is there a scalability problem, but optimism.
00:10:41.236 - 00:11:33.684, Speaker A: We realized there's a public goods funding problem aka there's no way to build open source software and get rewarded for it. So that's kind of the transition from Plasma Group to optimism. So anyway, but it's not just been us. It's not just been us building out this tech. It has been a massive web three ecosystem full of developers and tons of incredible contributions, talking about roll ups, the roll up, centric, ethereum roadmap. And it has allowed us to, over time, define the abstraction layers that allow us to scale this software together. Right? In order to really unlock the Internet stack, we needed to define the stack of software that all works together, the transport layer, et cetera, that all works together to serve the Internet.
00:11:33.684 - 00:12:17.644, Speaker A: We're doing the same thing this time for the decentralized web, for essentially the stateful decentralized web. The first web one was kind of stateless. So all of these different contributions, they've led us to L two shout out to Barry Whitehead and we are starting to see the architecture clearer and clearer. And so that's really what this talk is about. It's trying to give you the intuitions around what are the different layers of this stack and how do they all fit together and how all of that comes together to tackle congestion with the super chain. Let's go super hack.
00:12:17.712 - 00:12:18.084, Speaker C: POW.
00:12:18.132 - 00:12:55.700, Speaker A: One, two, three. Okay, so what is the super chain? First, the basics, right? Scaling to support the Internet requires more than one chain. Why is that? Well, because a chain, you need to be able to sync the chain, download all of the transactions, replicate it on your local machine. That is a critical property of chain software. But if we were to just increase the size of a chain arbitrarily, well, what happens? The blocks get bigger and bigger until my computer explodes and forms a black hole because there's too much information in one place. We need to horizontally scale. It's a fundamental law of nature.
00:12:55.700 - 00:13:42.028, Speaker A: But it's not MultiChain, right? The superchain is not quite the MultiChain future because multichains are insufficient. Each different chain has its own different trust model, its own different validator set. So each one adds security risk. So as you bridge from chain A to chain B to chain C, that is actually a different asset that you fundamentally created versus bridging from chain A directly to chain C. So this weakest link security really increases the risk of building out cross chain DApps. And also deploying chains is super expensive. If you have to replicate all of this infrastructure, form consensus, et cetera, it is very expensive.
00:13:42.028 - 00:14:00.180, Speaker A: So we need a system where chains are truly commoditized, where we can really make use of them as a fundamental construction on the internet, similar to how virtual machines commoditized hardware. Anyway, it's not Monochain, it's not MultiChain.
00:14:00.600 - 00:14:01.596, Speaker C: It's superchain.
00:14:01.648 - 00:15:00.292, Speaker A: Let's go. Okay, so superchain properties, we can kind of go into all of them, but I'm not going to really go into that because there's too many words and I like pictures. So it's not monochrome, it's not multi chain, super chain. So first off, just one visualization that we can start with is it's all of these different layer twos that share a bridge and share node software? So they're all instead of having totally isolated ecosystems, they're all using the same standards to communicate with each other, and they are all on the same security model using a shared bridge. Okay, so that means that because all of these op chains are standardized, the DApps that are building on them get superpowers. Because now I don't need to think, oh, is this going to be compatible with this chain? Do I need to change my application for that chain? No. Instead you can write an application once and be ensure that it is compatible everywhere.
00:15:00.292 - 00:15:25.616, Speaker A: So you can then build out these abstractions and deploy directly on the super chain. So I told you that we were going to be a little different from the stuff online that you can find already. So this is a bonus. This is a bonus section governing the standard. Okay, so shout out to David Hoffman. Standardized open source modules for layer two chains. That's the op stack.
00:15:25.616 - 00:16:01.070, Speaker A: If you like, Google it or you YouTube it. So that makes sense, right? Open source modules makes sense, right? It's all open source MIT license modules. It's swappable. We broke it down into consensus execution. The proofs are modular, so you can do ZK proofs, fault proofs, et cetera. But what does standardization really mean in this context? Because it's a little nuanced, especially when you're in a decentralized protocol context, who defines the standard. Okay, so let's unpack that.
00:16:01.070 - 00:17:02.976, Speaker A: I've recently started to like cats. Not going to lie anyway. Okay, TheOp stack, right? Everyone's familiar, hopefully. So the op stack implements that is the standard, right? And it implements a shared bridge and consistent client software across all of these different op chains. Now, notably, it is still the case that you can plug different things in or configure it in different ways. But the way that you plug in those modules and the modules, they are standardized so that you have nice abstractions that you can play with and kind of a shared ground that you can rely on. Now, how do we think about this further? Well, the optimism, governance, optimism, collective governs the op stack sets v zero, V one, and that boom, that expands out to the rest of the client software, the shared bridge, so that everyone is upgraded on the same version, similar version two.
00:17:02.976 - 00:17:43.228, Speaker A: Everyone is upgraded on the same version. All of these op chains stay in lockstep. What does that do? Well, it helps keep a vibrant ecosystem, and I'll tell you why. So let's see all of these different op chains. Okay? So first off, let's talk about standard security. What does that do for the security model of these chains? Well, what I talked about before with the multi chain stuff, where you go from chain A to chain B to chain C, and that's a different token that you cut out on chain C versus chain A to chain C. That is not the case because you have this standard security across the bridge.
00:17:43.228 - 00:18:07.528, Speaker A: Okay? So that's useful. That's already useful. That means that we're not fragmenting the token standards and all of that stuff. But another and very important point is universal tooling. Now, I already mentioned all of these things, but I think it's worth repeating so that we can gain some intuitions for this stuff. So let's say a developer is deploying their smart contract to an op chain. Okay, great.
00:18:07.528 - 00:18:44.252, Speaker A: Well, let's say now, because they are all the same software, like all of these op chains are standardized. That same deployment works on all of the op chains. And that also goes for the tooling. Let's say Block Explorers, Wallets, Debuggers, et cetera, they all work on the same standard. This is the power of standardization more broadly. But I'm just trying to really connect it to why we need it in Web three. Now it's not just a couple of chains, it's a bajillion chains, tons and tons of chains.
00:18:44.252 - 00:19:18.316, Speaker A: What can we do now? Well, we can actually build out abstraction, layers so that a developer, instead of thinking about the chain that they're deploying to, right? Yes, it's compatible with all of the chains. That's great. But now we can actually go one more step meta and say, okay, we're going to build software that abstracts it away. And now I can deploy directly onto the super chain broadly. I can think about, oh, I need to instantiate, I need to provision this many chains for my application to work right. I need to auto scale. All of those things start to become possible.
00:19:18.316 - 00:20:03.340, Speaker A: Once you're on the same standard, you're sharing the same APIs, you're working together in an open source manner. So now the Block Explorers don't just have to be on a per chain basis. They can be abstracted and they can be on a superchain basis wallets. We can have certain superchain wallets emerge that, you know, that all of these chains have standardized security. So you can display the asset and it doesn't matter what chain it's on or similarly debuggers, debug across the superchain, send one transaction, boom, have it affect the whole network. So that's the power. And I'll just say it right now, similar to what I said about Kubernetes or containers.
00:20:03.340 - 00:21:00.168, Speaker A: I'm ready for not just Kubernetes, I'm ready for like, let's build out all of this software. And obviously it is nowhere near to that today, but that's the key power of open source. Now, speaking of the key power of open source, let's talk about cooperative innovation. Let's talk about sharing our innovations. Okay? So another shout out to David Hoffman, I'm not going to lie, he kind of talked about this analogy for EVM equivalents, which is exactly the analogy that we use kind of for the Op stack and that is the peloton. So the peloton is like when you're racing in a bike, you kind of break the wind first here, right? So you use less energy if you're riding behind folks who are out in front. This allows everyone to move faster, right? Because they get to trade turns.
00:21:00.168 - 00:21:29.752, Speaker A: This guy's in front, then that guy's in front, anyway, et cetera. You can look up how pelotons work. I don't really know how they work, I don't know how to bite. But the cool thing here is that the peloton is kind of like the standard, right? It's the open source standard. Everyone is benefiting, they're all working together, they don't need to worry so much about upgrades, about customizations, et cetera. Now boom, someone forks the stack, right? It's MIT licensed, it's open source. They change something up, maybe another person does the same.
00:21:29.752 - 00:22:05.568, Speaker A: Boom, they change something up. Now they're riding out ahead, they are venturing into totally new territory. That means that they have the latest and greatest Craziest software, but they've also incurred a bit of a maintenance burden, right? They're hitting the wind. So what do they do? Well, they ride out in front with their innovations, but then they contribute them back to the stack. And now everyone who's in the peloton is benefiting from that innovation and we push the industry forward. That is what it is all about. It's about building out open source software and standards to push the industry forward.
00:22:05.568 - 00:23:04.772, Speaker A: And that is the beauty of open source. Now what happens, what about open source is one thing, but open source has had a bit of a struggle and that is that there is not a strong incentive in a decentralized system to contribute back to the upstream, to contribute back to the collective. Really? And what does that mean? That means that if I build my custom software, there's an incentive for me to keep it to myself, add some kind of proprietary license instead of giving it back to the public. Good. Now what do we do for that? Well, obviously optimism is not just about scaling ethereum, but it's also about funding public goods and so retroactive public goods funding. Let's go. So another incredibly cool thing is that the standard also encodes standard ways to give back to Op stack contributors and reward them for their incredible contributions that push the stack forward.
00:23:04.772 - 00:23:47.484, Speaker A: That means that we're not only benefiting from the open source software, permissionless innovation, et cetera, but that permissionless innovation, once it is integrated, once it is really caused impact. The people who build it get rewarded impact equals profit. So this is exactly how this kind of creates this nice flywheel where demand for block space increases sequence of revenue, and that goes back to the builders and users. And importantly, how does it go back? How is it distributed? Because that is a nontrivial governance problem. Well, critically, it is a citizens house discretion. That means one person, one vote. We care about people always in balance with the token house and nice checks and balance the system, the bicameral.
00:23:47.484 - 00:24:33.730, Speaker A: Anyway, I could get into that for a long time, but I won't. The point is that it's all about non plutocratic governance that is truly decentralized to govern and contribute to the stack. So we're making public goods profitable in a non plutocratic way. We're making them sustainable. So we know that we can rely on the open source infrastructure. We're not going to have a heart bleed and we can make sure the Internet is decentralized. Because one of the things that we don't really recognize is that it is incredibly important that the incentives of the system, the incentives of the decentralized protocol, promote decentralization versus allowing centralized parties to outcompete the decentralized ones.
00:24:33.730 - 00:25:00.568, Speaker A: All right, so let's do this. So we're back. We're back. That was a nice little bonus, right? Remember building out the super chain? They're all standard deploy on the superchain coming soon. Now, it's been a decade, right? Pretty kind of savage how long we've been working on this thing, but we are closer than ever. And really, this is a green field bring I don't know. That was a bad Windows XP reference.
00:25:00.568 - 00:25:15.044, Speaker A: Anyway, it's a green field. Green field. And you can contribute to help this thing become real sweet. All right, that's governing the standard. So, architectural foundations. This is the thing that I was talking about. This is in the weeds.
00:25:15.044 - 00:25:17.920, Speaker A: The boring stuff. Let's get into the boring stuff.
00:25:17.990 - 00:25:18.368, Speaker C: No.
00:25:18.454 - 00:25:38.544, Speaker A: Okay. It's all about abstraction layers. When things are beautifully done, there's usually a well thought out set of abstraction layers. So derivation, that is the core abstraction layer. The most important. So this is the process by which the L two state is determined. That means that essentially it is a pure function on the L one chain.
00:25:38.544 - 00:26:01.596, Speaker A: So you use this derived function. Boom. Now it spits out the L two chain. It's a pure function. So if I have ethereum, that's the ethereum block space. Now I run this derive function and I get the L two. All right? So if I send a transaction with Sam Alice, I send a transaction to ethereum, the derive function, pure function, transforms that.
00:26:01.596 - 00:26:35.768, Speaker A: It's almost like an index or like an index on ethereum. Boom. It now updates the balances in L two. And this continues. Even if there's nothing happening in the blocks, it's still producing L two blocks. Now, similarly, Alice can submit to L one directly or can submit to a sequencer which then submits it on her behalf. And this amortizes the cost of the transaction and also provides her low latency confirmations that derive function happens again.
00:26:35.768 - 00:26:50.344, Speaker A: Boom. Now we have the L two. Because remember, the sequencer submitted that transaction to L one. Pretty simple. Okay, so let's go over. This is an important thing. Everyone needs to remember Myth.
00:26:50.344 - 00:27:08.404, Speaker A: This is where we're in Mythbusters. The sequencer can forge transactions, true or false. Okay, well, we're going to see. So Alice sends a transaction to the sequencer. It's a signed transaction. Only Alice knows the private key. The sequencer changes the recipient of the money of the tokens, let's say.
00:27:08.404 - 00:27:30.276, Speaker A: And now the transaction signature. Well, it's invalid, but the sequencer is not done yet. The sequencer will submit that transaction to ethereum. Okay. Uh oh. The sequencer just submitted an invalid transaction. What's going to happen? Well, derive this derive function happens when I'm locally deriving the chain.
00:27:30.276 - 00:27:35.884, Speaker A: This is not necessarily something the sequencer does. Anyone can derive the chain. I spin up a node and I'm deriving the chain, right?
00:27:35.922 - 00:27:36.412, Speaker D: Remember?
00:27:36.546 - 00:27:57.760, Speaker A: So I locally derive the chain. As I'm deriving the chain, I realize that this transaction is a little iffy it has the wrong signature. So I'm going to throw it away. Boom. And I'm going to create an empty block. Ignoring the invalid transaction, Myth busted. The sequencer cannot forge transactions.
00:27:57.760 - 00:28:32.488, Speaker A: That is incredibly important. Your mental model, it really must be that the state of L two is derived and determined objectively based on layer one. That is critically important and no one can change that. If I'm deriving the chain myself, no one can make me derive an invalid chain. Okay, so that's deriving one chain. But really all roll ups are just different derivation functions on Ethereum. So there's the l two chain and it's the result of calling derive on an L one chain.
00:28:32.488 - 00:29:01.992, Speaker A: But they each have a slightly different derivation function. Okay? So the red derivation function results in the red chain, blue and the blue and purple and the purple if that's purple. And they each have their own sequencers that are submitting transactions. And of course, when those transactions are submitted boom. Now there's new transactions on layer two for all of the different layer twos. So if I want to submit to red chain, I can, or I can submit to blue chain and derive that. I can do that.
00:29:01.992 - 00:29:27.580, Speaker A: Or let's say I derive purple chain. It all works. This is why L two scales, by the way, because every time I decide to sync a new chain, I'm not syncing all the blocks on all of the chains. I'm only syncing the chain that I care about. This is why we need a superchain. This is why the kind of Monochain thing doesn't quite work out. Okay, so now that was deriving chains, but let's go to deriving super chains.
00:29:27.580 - 00:30:04.648, Speaker A: Okay, so practically infinite role of chains. What does this do? So instead of defining our derived function, as just a function of L one. We're going to define the derivation function as an L one, comma the configuration of that chain and make sure that that configuration is of course a standard configuration. Otherwise the derivation function will throw that results in an L Two chain. But notably if you change the config. So let's say you change the chain ID. Now you're deriving a different chain.
00:30:04.648 - 00:30:27.904, Speaker A: This gives you access to basically an infinite number of chains. Literally. It is a standard. So you can instantly derive all the things. It's kind of like looking into a Kaleidoscope. All of the stuff is there, but you're just looking at it from different angles and kind of getting a different view of what's going on. Got to have a little trippy imagery when you're talking about infinity.
00:30:27.904 - 00:30:47.592, Speaker A: It's pretty cool. That's math for you. Okay, so you're deriving all of these different chains, these infinity chains. It's not infinity. Of course, there's a limited number of bytes in a hash, but it's practically infinite. Okay, so that is how we get a Bajillion chains. All right, let's see.
00:30:47.592 - 00:31:20.400, Speaker A: Okay, I think I have 15 minutes left. If I recall correctly, frame row down. So let's talk about cross chain messaging. But we'll go reasonably quickly. So how do these chains communicate with each other? Because we talked about how you get the state of a chain, but now how do chains talk to each other? How do they bridge between each other? So, Alice and Are, let's start off what does messaging look like in a normal world? Alice sends writing a letter to Bob. She has a two and a message and a proof. The proof is her signature.
00:31:20.400 - 00:32:00.160, Speaker A: She goes and she gives it to Mo the mail person. And Mo the mail person gives it over to Bob and he checks the two. He checks the signature to make sure it's from Alice and then reads the message knowing that it's authenticated. Well, what if I told you that these were actually chains? They were chains talking to each other? Well, actually what happens is Mo initiates, tells Alice chain, hey, I want to bridge my tokens to Bob. Chain sends that transaction migration tokens. Boom. Now, Alice chain just does its magic and it generates a message that will go be sent to Bob that we want to send to Bob.
00:32:00.160 - 00:32:38.444, Speaker A: Now Mo, the person know, initiated the transactions where the analogy breaks down a little, but it's pretty close. Mo takes that as well as a proof, a proof of the validity of that message and sends it over to Bob. And Bob validates the two, the message and the proof. And the proof the message is executed on Bobchain. Right? So what we're doing is we're relaying message and we are proving it. Now, how do we actually achieve this? Well, the two is easy. The message is easy, but the proof is pretty hard to do.
00:32:38.444 - 00:33:17.284, Speaker A: So how does this actually work in practice? And how do all these proof systems work just in general? Right? We're talking about abstraction, layers. We need to be able to think at a high level and then zoom into each detail. So first we're at the high level. How does this work generally? Well, a message is generated on red chain and that wants to be relayed. Someone wants it to be relayed on Blue chain. Well, what happens is the two is of course Blue chain, the message is arbitrary and the proof, we'll get to that. So how does Bluechain know that red Chain actually sent it? Well, because Blue chain knows the derivation function of red chain based on its chain ID and chain config.
00:33:17.284 - 00:33:53.600, Speaker A: What can it do? Well, it can derive that chain in some way. Boom. It derives the chain based on L one because of course all of these chains are connected to L one. So it derives the chain and then it checks the authenticity of that message. So you might notice a problem, right? If you were to do this kind of like fully verifying proof, it would not scale whatsoever. All the chains would be verifying the messages from all the other chains. So what do we do? Well, all of these proof systems, they somehow manage to compress that proof into a small number of steps, whether that be a fault proof or a validity proof.
00:33:53.600 - 00:34:28.320, Speaker A: They are all running this derivation function in some sense and validating the correctness. Now the fault proof does it only if there's an error and a validity proof does it upfront using math or some other method. So importantly, right, I was thinking about modularity. Importantly, all of these proofs are valid. All of these proofs are fine. So the Op stack, it's all about modularity. We need to be able to do fault proofs attestation based validity proofs, ZKP validity proofs, all that stuff needs to support all proof types.
00:34:28.320 - 00:35:04.424, Speaker A: So now we can message between them, but each message is asynchronous. Well, we don't have time, unfortunately, to go into shared sequencing directly, but at a high level. It's actually very simple. Basically, if you want to be able to send these messages back and forth, you need to be able to do them atomically. And therefore you need both chains, the sequencers on each chain to coordinate and get those messages, get a guarantee that both messages will be played on each chain at the same time. That's shared sequencing and it gives us the ability to do things like flash loans and really tighten up that interoperability. And so boom, we can coordinate these sequencers.
00:35:04.424 - 00:35:28.150, Speaker A: And there are many different ways to do this. Okay, so now we've got cross chain messaging, synchronization, but I cannot end this talk without talking about the elephant in the room. Scaling, data availability. We still have a bottleneck, right? If you were looking at this system, you would notice that we're deriving infinite chains. Great. Fantastic. But we're only deriving it based on a very limited amount of data.
00:35:28.150 - 00:35:35.860, Speaker A: That means that we've only scaled compute. We have not scaled data yet. That is the data bottleneck.
00:35:36.440 - 00:35:37.812, Speaker C: What am I going to do?
00:35:37.946 - 00:36:04.080, Speaker A: So what do we need to do? Well, first we can add more l One. Data availability. So that's EIP four eight four. That is the most key fundamental thing that we're shipping actually very soon. So very excited for EIP four eight four. Additionally, in order to horizontally scale, at least in the near term, we need to do more. And that is where the plasma protocol and alternative data availability providers come in.
00:36:04.080 - 00:36:34.580, Speaker A: Plasma? Remember plasma group? We're going back to our roots, baby. Okay, so plug in additional data availability. Providers with a plasma API. How does that work? Okay, well, notably, this is not just altva in the abstract. This is a protocol for coordinating and basically allowing alternative Data Availability Providers to plug into the same unified system. So what do they do? Well, we augment l One. Data availability.
00:36:34.580 - 00:37:20.432, Speaker A: Instead of taking the raw transaction data. What do we do is instead of submitting that to Ethereum, we hash it and we commit to that raw transaction data and we submit the commitment to Ethereum. That allows us, in the derivation process, assuming the data is available, to pull in all of this information and validate it against the Ethereum total ordering of transactions. And that also allows us to plug in multiple different Data Availability Providers all submitting their own commitments in a standard format and process. That means that we've gotten all of these we've horizontally scaled Data Availability Providers, which means that we've got infinite chains which can meet infinite data. Very exciting. So this is how you get close enough to infinity scalability.
00:37:20.432 - 00:37:45.484, Speaker A: Obviously, it's easier said than none. But importantly, the Data Availability Provider may break. And this is what makes it a plasma as opposed to a side chain. So if the data that was committed to on Ethereum becomes unavailable, what do we do? Well, we can do a data availability challenge. Now, notably, these are subjective. They cannot be penalized directly on Ethereum. Ethereum doesn't know who's right or if the data is available or not.
00:37:45.484 - 00:38:21.292, Speaker A: It's off chain data. But users can submit this Data Availability Challenge and then withdraw from the chain. So how does that work? Well, Alice says give me the data and tells Ethereum to give me the data. Now, either one of two things happen. Either the data is revealed, aka the Data Availability Provider posted, or the commitment is deleted from Ethereum and is therefore ignored from the total ordering of transactions that is directly available on L One. And that is all done in this derivation process that we talked about before. It is not any different.
00:38:21.292 - 00:39:01.144, Speaker A: And so this also, by the way, just as a note, that means that if we build out the right abstractions, then the proofs that work for roll ups. Roll up chains also work for plasma chains. Now, notably, plasma chains are fundamentally less secure than roll ups. There is no way to get the same level of security for your data as posting it directly to Ethereum. But it does mean that even if the Data Availability Provider goes offline, you don't lose safety, you'll lose access to the data for a short period of time. But you can always get that data with a data availability challenge. So not too bad.
00:39:01.144 - 00:39:22.764, Speaker A: Great. So these are the two things, right? Roll up all data on l One. Secure and expensive plasma commitments to data on L One, less secure but nearly free. Very exciting. Infinite chains, chain messaging, synchronization, infinite data. That is how we create the super chain. Let's go.
00:39:22.764 - 00:39:36.060, Speaker A: All right. Oh, no. It's congestion. What are we going to do? POW. Knock them out. We're done. We are in that world that we believe in, that we know we can create, the decentralized world.
00:39:36.060 - 00:40:16.560, Speaker A: And it was created because of folks like you contributing to the Op stack. Also folks like me. We're all doing it together. It's one happy party of open source software. Notably, this is all not actually here yet. However, we're still building it, right? We're still building it. We know that the concepts are there, right? This is what I just talked about, is a culmination of an enormous, enormous amount of research that has been done in the Ethereum and elsewhere communities finally ready to be implemented in open source licensed software for the community, for the world public goods forever.
00:40:16.560 - 00:40:48.344, Speaker A: So to infinity and beyond, right? We are so close. We can see that incredible future ahead of us. We are getting there. It will get there with all of that public goods funding, generating revenue, with this open source software that goes back to the contributors that built it. Very exciting. Together, we can build the open source Internet and realize Ethers Phoenix impact equals profit. The earlier you start building public goods, the more profitable they'll be, because the more impact you can have.
00:40:48.344 - 00:41:20.864, Speaker A: Because we are currently in a state of, honestly, a little bit of crisis. Not to scare you, but we're very unclear if decentralization on the Internet is going to win. Hopefully it does, for everyone's sake, because we're humans and we want the Internet to be human first. So that's how we create the super chain which births the collective. Come, contribute. Welcome to the collective, because you're already in. Did I tell you? Anyway, stay optimistic.
00:41:20.864 - 00:41:26.390, Speaker A: Thank you. I actually didn't get the questions. I'm sorry.
00:41:26.760 - 00:41:51.950, Speaker B: No worries. We actually have a couple of minutes, so if anybody in the audience wants to ask any questions, feel free to send them in the chat and we'll relay them here. We do have one question right now, which is kind of from what you just talked about in the last couple of slides. The question is around the incentives for actors to challenge if the data is available, and kind of how do you think about the economics of all of that?
00:41:52.720 - 00:42:35.432, Speaker A: Okay, great. So basically the problem is that this is the Fisherman's Dilemma. So if you want to look up the problems with it, this is why we don't do data Availability challenges for L One, but there's a really nice property on L Two with Data Availability Providers. So who pays for the data? That question. Well, it is the person who wants the data pays for the data itself, because we can't figure out if the person who is asking for the data is asking for it because it is genuinely not available or just because they're trolling the Data Availability Provider. So there's an interesting catch, though. It might not be attributable on L One, but it is subjectively attributable on L Two for the person who's submitting the challenge.
00:42:35.432 - 00:43:10.440, Speaker A: So I know if I'm just griefing the Data Availability Provider, we need to protect against that. That's why the person who submits pays the bond. But if I am a user of a Data Availability Provider and they go rogue, I submit the challenge and I get off of that Data Availability Provider and migrate to a new one. So that is actually how we can remain secure and also kind of get around the trickiness of the Fisherman's Dilemma. Again, this doesn't negate the need for roll ups. Roll ups have this incredible unstoppable property that Plasmas just fundamentally cannot because of the Fisherman's Dilemma.
00:43:11.420 - 00:43:46.096, Speaker B: Awesome. Hopefully, Laura, your question got answered. If there's any follow ups or to put that in Chat, we'll relay that to Carl. But that was an amazing talk. Carl, thank you so much for that amazing 201 Primer, and we're looking forward to seeing more on the super chain World Big. All right, thank you. All right, next up we have Mark to talk about Cello's transition to an Ethereum L Two, and wanted to make sure this is more in depth around what you can look forward to.
00:43:46.096 - 00:44:00.890, Speaker B: So instead of just talking about high level what's happening, we're going to actually talk about the specifics of how do we actually make affordable transactions happen. So without further ado, let's welcome Mark here on camera, and we'll have you get started.
00:44:01.740 - 00:44:11.530, Speaker E: Thank you so much. It's really great to be here. I'm just going to bring up my slides. Cool.
00:44:12.300 - 00:44:12.772, Speaker B: Sure.
00:44:12.846 - 00:44:42.352, Speaker E: Good to go. How are you guys doing today? Cool. Well, once again, it's really great to be here. My name is Mariko. Shefsky one of the co founders of Cello, and I challenged myself this year to do all my presentations using emojis. So you're going to see a lot of emojis here today. And if you like the format, definitely let me know on Twitter.
00:44:42.352 - 00:45:51.464, Speaker E: I'm at merrick. And then likewise, if you have any questions or any follow ups, definitely do not hesitate to reach out and so I just wanted to start I don't know if there's a chat here or not, but sometimes it's nice just to kind of start with a bit of interaction. I like to ask just how many people here either are regularly using Web Three products themselves or have friends who might be normies who are using them. Looks like folks are watching on YouTube. So it's a little hard to kind of provide feedback. That's okay because I've asked this question in conference, in person conferences, and typically, actually, every time, the answer is very few people are actually raising their hand on the order of maybe 5% or so. And that makes vitalik sad, I would say, shown here in the form of a sad cat emoji.
00:45:51.464 - 00:47:03.010, Speaker E: Because why not? And it's a real shame because I think this is the future that we want, right? We want millions, millions and billions of people streaming into the house of Web Three, or, I don't know, the Best Buy of Web Three here on a Black Friday. But it's sadly not the reality that we have today. The current reality looks a little bit more like this. There's just a few of us running around in a really exciting Bed, Bath and beyond. We get to have all the fun, but others are sadly not having that fun. And luckily, a big part of why we don't have a lot of normies using Web Three platforms is around scalability. And of course, Ethereum has a really exciting roll up based scalability roadmap and we're super excited to be part of that with kind of the transition from an L One to an L Two, which we've started talking about over the last couple of weeks.
00:47:03.010 - 00:47:52.480, Speaker E: And so before we get into kind of the L Two design and what we're doing there and why we think it's super exciting, I wanted to just share a few slides about what Cello is today in case you're new to it. And I think first and foremost, not surprisingly, celo is a fully EVM compatible network. It's currently a proof of stake network and it's a proof of stake layer one. It's been around for three years. It's been running really well. It's only had one production incident and so it's definitely been hardened, I would say, over those three years. And it's a really elegant proof of state consensus protocol with a lot of scalability and a lot of decentralization.
00:47:52.480 - 00:48:45.164, Speaker E: But I think the thing that makes Cello unique is really its focus on ease of use. From the get go, we built Cello thinking about what would it take for people to build DApps on top of Cello that were just easy to use for anyone in the world. And that meant really great mobile support. Cello has a really amazing ZK Snark based like client. It has this protocol called Social Connect that we'll talk about a little bit at the very end, which lets you send value to phone numbers. It has all of these really nice mobile features and a lot of really exciting and big popular DApps on Sello are in fact built in a mobile first manner. To be really good for ease of use, I think you need things like gas abstraction.
00:48:45.164 - 00:49:27.650, Speaker E: And so from the beginning, Sello has supported paying for gas with tokens natively using EOA addresses, so without the need for even account abstraction. And that's really amazing. And then to top it off, Stella was the first network to offset its CO2 emissions programmatically using block rewards. And so that's just a really nice cherry on top. And because of that, first of all, other networks have followed which we're really excited about. But also Celo has become kind of like a home for refi projects. There's just a lot of refi happening on Celo, which is really cool.
00:49:27.650 - 00:50:28.180, Speaker E: And one of the really nice things about focusing on ease of use is that it enables a lot of real world use case type applications to be built on top of Cello. And one thing that's really nice about real world use cases is that they aren't really tied to the crypto cycles. So there's a lot of folks building payment products, community currencies, micro lending products, earning projects where you can earn on your phone using earn micro credits on your phone, and then also universal basic income projects. And all of these are not really tied to kind of bears and bull markets. That means that they've been able to actually grow quite nicely even in this bear market. And you don't have to take kind of my word for it. All of this is visible now on Dune.
00:50:28.180 - 00:51:21.670, Speaker E: And so this is kind of what the active addresses look like on Sello, which is pretty cool to see a lot of growth since March of this year, which is just unusual, I would say, in this market. And Nansen has a really cool table that shows kind of compares the chains that they're tracking. And if you look at the last month, you look at the last six months, the active address changes on Celo are higher than any other chain that Anson tracks. And I think if you look at the current data, we've also overtaken Phantom, which is really cool to see. Okay, so that's just what Cello is. Hopefully we're now all on the same page, but we're here really to talk about the L two roadmap for Cello. And so I wanted to kind of dive into that right now.
00:51:21.670 - 00:52:53.952, Speaker E: And one of the interesting things about creating or transitioning an L one to an L two is that you end up with some constraints that I think are different and a little challenging, I would say, compared to if you're just launching a new L Two from scratch. And so what do those challenges look like? I would say there's two really major ones. The first is around throughput and transaction costs. And this is hence the title of the talk on Sello because we have a very scalable proof of state consensus protocol. We can process a lot of transactions per second which means that gas fees are very low on Sello and that's attracted a lot of applications that require really low gas fees, right? Like those payment applications where people are sending stablecoins around to each other. Or the micro lending DApps which are most useful in emerging markets where people are more price sensitive and then also just community currencies. Anytime that people are using crypto rails for medium of exchange use cases people tend to be a little bit more sensitive around fees than elsewhere.
00:52:53.952 - 00:54:44.100, Speaker E: And so we have a lot of those use cases on Sello and it's difficult for us to transition to an L Two and then suddenly increase gas fees to the order of tens of cents because we need to store transaction data on Ethereum. And so the solution for this problem is to use Eigen Layer. So Eigen Layer, for those of you if you're not familiar with it, it's a really interesting restaking protocol on Ethereum that effectively allows Ethereum validators to opt into running additional services. Eigen Layer likes to talk about this as creating a marketplace for trust. So if you think of each Ethereum validator as kind of an operator on or actor in the network that offers some degree of trust right, that they're going to validate the blockchain correctly, then Eigen Layer effectively allows people to tap into that trust and purchase additional trust for their services. And since there's a ton of Ethereum validators there's a lot of trust there that can be tapped into, which is really exciting. And one of the very first apps or middlewares as Eigen Layer is calling them to be launched on eigen Layer is kind of this flagship middleware that the team, the Eigen Layer team themselves are building which they're calling Eigenva.
00:54:44.100 - 00:56:01.870, Speaker E: And so eigenva is effectively bringing Dank Sharding to Ethereum potentially one or two years ahead of when Dank Sharding will actually roll out. And that's really exciting because Dank Sharding, for those of you who've been following it effectively is a much more bandwidth favorable way of doing data availability. It turns out that data availability even in a decentralized network is an embarrassingly parallel problem. It's only hard if you kind of pair it with consensus. If you only do data availability then you can actually do it for significantly cheaper than it is to, for example, pay for data availability on Ethereum on the L One today. So that's exciting. It allows us to really dramatically lower the costs of L Two transactions and then challenge number two and then of course, by lowering those costs you're also able to increase the throughput of the L two as well, which is also really important.
00:56:01.870 - 00:57:23.210, Speaker E: Challenge number two is Celo has a lot of node operators, a lot of validators, a lot of full nodes and it'd be a real shame to just give all that up and move towards kind of a single sequencer. It really feels like it'd be a step backwards. Now, of course, I think many l two S today are looking at ways to run their sequencers across multiple nodes. But alas, we're not there yet as a whole industry. And so one thing that we're excited to do is to kind of contribute to the future by effectively taking our production ready consensus protocol that, again, I mentioned has been running live for three years and turn it into a decentralized sequencer and really make it a public good that anybody can also use to decentralize their L two as well. And then challenge number three. And for those of you who've been following very closely, you may remember I said there were only two challenges that we thought of at first, but alas, nothing is that simple.
00:57:23.210 - 00:58:19.230, Speaker E: As we were looking into this, we learned that there are actually additional things that we have to worry about. And this kind of additional challenge, a stir challenge, really, is one around finality. So Celo has offered one block finality since the network launched three years ago, and many LTS today, they don't offer that same one block finality. And it's primarily for two reasons. I think you can have reorgs that happen on the l two side, but you can also have reorgs that can happen on the l one side that then affect the l two state. And so in the design that we put together, we addressed both of these. The first is on the l two front.
00:58:19.230 - 00:59:27.330, Speaker E: Since Cello already has some economic security that guarantees this one block finality rule using slashing for equivocation, it's possible for us to reuse this and make it so that validators today or decentralized sequencers tomorrow. Won't have to will be punished if they ever cause a reorg. And so that gives us some economic security. Again, on the l two front, you won't have reorgs. And then the other idea is around slowing down deposits and forced transactions a little bit so that they are only executed on the l two side. Once you get finality on the l one side, and this has the downside that it makes kind of bridging just a tiny bit slower. But on the flip side, you end up having this resilience anytime the l one reorgs, you won't have to reorg as well.
00:59:27.330 - 01:00:38.600, Speaker E: And so what does all of this look like together? I created this little example demo here that I wanted to run through. I think this makes it a lot easier to kind of understand what the design of this looks like. We have three main actors and then the ethereum chain, so we have the decentralized sequencers on the left, you have the eigenva nodes in the middle, and then you have the l two full nodes on the right. And then we have kind of all of Ethereum down on the bottom. And so, as with any chain, the first step is to effectively collect a bundle of transactions that have been gossiped throughout the network. And in this case, the leader in the BFT consensus that makes up kind of the consensus protocol that these decentralized sequencers are using. Kind of the elected leader, which changes for every slot, basically proposes a set of transactions that will constitute the transactions that go into the next block.
01:00:38.600 - 01:01:50.440, Speaker E: And so it will then gossip that around to all the other sequencers. And then using BFT consensus, which is a multi step protocol that I'll just simplify it into one step, eventually this leader will get back an aggregated multi signature of all of the signatures of all of these decentralized sequencers and a bit vector. So you have accountability that shows who assigned that particular bundle of transactions. And once you have this, then you know that for this slot height the decentralized sequencers have committed to this set of transactions. And so we're ready to kind of post that to Eigenva. Eigenva will then return an eigenva certificate, which is also a multi signature, threshold based signature. And then the leader will then have everything it needs to effectively commit this transaction bundle to Ethereum.
01:01:50.440 - 01:02:49.664, Speaker E: And it does that just by posting the Eigenva certificate to Ethereum. Once that is on Ethereum, then any full node that's interested in following the l two chain can download that certificate. It can use that certificate to get the data from the data availability layer by querying eigenda that gives it the transaction bundle and multisignature and the bid vector. And from that, each of these full nodes have everything they need to effectively derive the l two block. And so they can do that here. Once they derive it, they can execute them and they're off to the races. And so this is really nice and elegant and pretty simple, but there is some latency to having to go through Ethereum in this way.
01:02:49.664 - 01:04:25.890, Speaker E: And one thing that Op stack and optimism does that's really nice is that they have this concept of a network, an l two network where you can gossip around what are deemed unsafe blocks, so that full nodes can kind of follow the network a little bit faster with a little bit less latency. And so that's something that this kind of design is compatible with, with the one caveat, and this is true in Op stack and optimism as well, sometimes you may find that what you pull from Ethereum later on will not match what was gossiped around before. And so, in the case of most altitudes today, that will cause a reorg and you have to reorg because I think the Ethereum view of things is the final view and it takes precedence over everything else. And so the best we can do to avoid those reorgs is to effectively make it economically very expensive for nodes to effectively equivocate across both of these different paths. And the way we do that is by right. And so if you don't do that, you don't have one block finality. But to bring back one block finality, the way we solve this is by adding slashing for equivocation in this way.
01:04:25.890 - 01:05:29.120, Speaker E: And because we have the bit vector, we can also see exactly who equivocated across these two different blocks and then we can slash just those validators. And this is something that we have today already in the L One. And so it's actually quite easy for us to bring this over to the L Two design because all the code is already written and it's been in production for three years. And it's really nice because it effectively makes it very economically expensive to equivocate to the point where nobody on the Cellar network has done that since the network has launched for three years. So this is really nice. And so maybe just to summarize, this design gives you scalability and low gas fees by leveraging eigenda. Eigenda, as I mentioned, is kind of bringing the design of Dank Sharding to Ethereum many years before Dank Sharding will be rolled out and it's still run by Ethereum validators.
01:05:29.120 - 01:07:02.130, Speaker E: And so it still offers really nice trust assumptions. And because it uses that Dank Sharding like design, it effectively allows you to cut the transaction costs on the L Two side by 95%, which is really nice. We of course also get to maintain the current level of decentralization offered by Cello, which is just really nice for increased uptime and for better censorship resistance. And then finally we worked really hard to also keep the one block finality design that Sello offers, which does come at the cost of a slightly slower native bridge but ends up having much better UX. And we've started chatting with Eigen layer as well about how we could add additional economic security here. This design only offers Cello economic security to enforce this one block finality, but you can actually go a step further and also opt into restaking nodes that can add additional economic security. And ultimately, I think this makes Seller potentially like a really nice place to roll up to if you're building an L Three because you get these short block times.
01:07:02.130 - 01:08:20.510, Speaker E: This kind of nice guarantee about not having to reorg, not to mention the cheap data availability that you effectively inherit through the cheap transaction fees that's the design. You might be curious what the timing is and what's next. And so we just posted this design in a very detailed proposal to sello governance just at the start of ECC, which was just a few weeks ago. Since then we've gotten just an incredible amount of really amazing feedback and just a lot of, I would say, excitement for this direction. It's been pretty cool to see other L ones now also kind of following suit and talking about making a similar change. And so I think in the future we're going to see ultimately this large amount of maybe coalescing around Ethereum, which I think is really, again, amazing for the Ethereum scalability roadmap and I think ultimately just really great for users as well. And we're just excited to be at the forefront of that.
01:08:20.510 - 01:09:48.440, Speaker E: Since the proposal went out, we also had a temperature check governance vote on it, which passed with just a ridiculous amount of, I guess, folks in favor of it. And so that was really cool to see as well. So generally, the Cello ecosystem is excited about this and so that means that now the hard work begins. And of course it wasn't easy coming up with that architecture and that design and we spent a lot of time working on it before making the proposal. But now we're working hard to turn that into an actual deliverable that we can use to then upgrade the network. But when it comes to folks here, especially developers who are participating kind of in the hackathon this weekend, you might be wondering what this means for you. And there the good news is that beyond all the benefits that will come from this, the increased alignment with Ethereum, the better Bridging, better security, all of those things, all of those things will effectively come for free because this will be hard forked into the network.
01:09:48.440 - 01:11:12.320, Speaker E: Again, assuming that the folks running the actual Cello network are excited about the final deliverable, but it seems like that's the case. Based on the governance vote, this will ultimately be deployed through two hard forks that will upgrade Cello and transition over to the cell. Two and hard forks, just like on other networks, are very nondisruptive for people building DApps on top of the network. And so that means that you can effectively start building on Cela today and start benefiting from this future design and from all of the amazing features that Sella offers today. And since I had a lot of time for this talk, I thought maybe it would make sense to just spend a few moments talking about some of these cool features that are available today and what you might be able to do on Sello both today and tomorrow. But before I get into that, I think research shows that people's attention span tends to wane after 25 minutes. Most people just naturally need a little bit of a break and so I just wanted to do like a 1 minute intermission.
01:11:12.320 - 01:11:22.950, Speaker E: And so if you've been watching a lot of talks and just needed a breather, now is a good time just to grab a drink, maybe.
01:12:17.810 - 01:12:18.414, Speaker D: Take a.
01:12:18.452 - 01:13:04.638, Speaker E: Deep breath, maybe get some water, stand up and yeah, be ready for the next part of this talk. It's going to be much quicker than the first part. It's just a few more slides to go. But I thought frequently when chatting with builders, people are always very interested in learning. About what's different, what can I do that's uniquely available on Sello that I can't do elsewhere? And so I thought it would be nice just to have a few slides to cover that. There'll be three of these cool things. There's actually many more, but it's just too much to go through in any one talk.
01:13:04.638 - 01:14:01.158, Speaker E: But I would say the very first cool thing that you may want to experiment with today on Sello, if you're building kind of a hackathon project is kind of cello's native gas abstraction that I mentioned before. So again, you can pay for gas with tokens on Sello. These tokens have to be allow listed through on chain governance. And right now there's three tokens that are available. A US dollar stablecoin, a Euro stablecoin, and a Brazilian real stablecoin. I think there's about five additional stablecoins and actually some non stable kind of DAP currencies as well that are going through governance right now. They're at various different stages of going through governance.
01:14:01.158 - 01:15:17.718, Speaker E: And so this list will expand pretty quickly. But even just for the current assets today, one of the really nice things about building DApps that support paying for gas with these is you can build use cases, like payment use cases where you can send the stable coin to someone. It can be a completely new wallet and you never have to worry about them having to figure out how to go get gas money to then be able to send it on to someone else. And so you'll never have that really frustrating feeling where I'm sure folks here know sent USDC either to themselves or to someone else, to a new wallet, and then only to realize that those funds are kind of stuck until you're able to get some ETH over to that address. And so, if you're interested in experimenting with this, I would say VM is probably one of the best ways to play around with this VM. For those of you if you're not familiar with it, it's kind of a TypeScript focused alternative to either web three JS or to ethers JS. It's created by the folks who built Wagme.
01:15:17.718 - 01:16:05.910, Speaker E: It's really quite elegant. And they have now native support for paying for gas with tokens on stello in their transaction objects. So this is really cool if you're interested in playing around with this, learning a little bit more. The PM who worked on this, he gave an ECC talk a few weeks ago and he has a nice GitHub repo with the slides to his talk and with some demos of this that you can find over at I think his account is zero xarthur XYZ and then he has this ECC presentation repo. So definitely check that out. Second cool thing is around address abstraction. So this is a little different than account abstraction.
01:16:05.910 - 01:17:08.120, Speaker E: Celo has since the beginning made it possible for people to send payments to phone numbers and in effect map phone numbers and other social Identifiers to wallet addresses. And this enables you to create some really cool experiences. The current incarnation of this offering is called Social Connect, and you can use Social Connect to effectively build apps to let you send cryptocurrency to phone numbers instead of to wallet to address sorry, publicly derived addresses like the ones that are plaguing all of us in crypto today. And so this is really neat. It actually does this in a privacy preserving manner, which is really cool. It uses some really elegant multiparty computation to do that. And so it's a really cool design.
01:17:08.120 - 01:18:00.560, Speaker E: And you can build apps that let you send value to phone numbers even before the recipient creates a wallet. But you can also just build apps that tap into kind of this data and effectively allow you to tap into what I believe is the biggest social graph in the world, which is kind of the amalgamation of everyone's contact lists on everyone's mobile phone. This is arguably bigger than kind of the Facebook social network, so definitely check that out. You can learn more just by going to SocialConnect dev. It's really neat. Of course, Fellow also supports account abstraction with 4337, and there's a whole bunch of API providers that offer that too. And so if you're excited about account abstraction, definitely check out Cello as well.
01:18:00.560 - 01:18:59.866, Speaker E: And you can pair that with address abstraction as well to build some really amazing experiences. And then finally, and this is the final kind of set of slides, the third really neat thing that I think is pretty exciting is something that we're calling wallet Shortcuts. Now, this is really hard to create a series of emojis to represent shortcuts. This was the best I could do. And shortcuts are a feature now being offered by Velora, which is kind of a flagship wallet on Sello. It's funded by some really incredible investors, including Polychain Andreessen and SV Angel as well. And you can learn more about Velora at Veloura XYZ.
01:18:59.866 - 01:19:57.410, Speaker E: Think of it as kind of a wallet designed for normies. We try to make things as easy as possible for all the users, leveraging all of the awesome features that Sella has to offer. But one thing that Veloura has been doing now Veloura supports has a DAP browser. You can connect your wallet to DApps, interact with all of these amazing mobile DApps on Sello with it. But a lot of builders who are building these DApps, they're excited about offering tighter integrations with the wallet, ways to make it possible for people to interact with their DApps without having to go and load the DAP browser and load a web page and everything. And so shortcuts and generally hooks in Velora are a nice way to do that. You can use hooks to help Veloura figure out how to price your asset.
01:19:57.410 - 01:21:06.558, Speaker E: You can use hooks to help Valora figure out how to price DAP positions. So if you have an LP token to position for something and you want to price that, you can do that. And then finally you can build these shortcuts that effectively allow your users to interact with your DApps with just one tap natively in the wallet without having to leave the wallet and go to your DApps web page. So obviously really useful for claiming rewards. But generally you can use these to kind of push people through the lifecycle of your product one step at a time. And Veloura is working to also make it possible for you to send push notifications to your users to kind of guide them through those steps. And so if this is interesting, if you built a DAP and you're trying to get more engagement with your users, you're trying to find ways to make it easier for people to go through the funnel of all the operations that you want them to do without having to necessarily load your DAP, you can just do it directly in this popular wallet.
01:21:06.558 - 01:21:39.300, Speaker E: Shortcuts might be for you and you can learn more about that at docs xyzhookoverview. So I think that's everything I had and I think that brings me pretty close to time. Yeah. Thank you so much. Really appreciate you guys listening. And I'm not sure if it's possible to take questions in this format, but if so, I have five minutes left and happy to answer anything that's on anyone's mind.
01:21:44.070 - 01:22:33.566, Speaker F: Hey, thanks again for all your time jumping in for Kartik. Yeah, thanks for the presentation and for being a part of this. I did ask if there's anybody who has questions in the chat. So if they kind of ask any questions, I'll surface them here. I mean, one of my questions around this presentation was just sort of understanding how you sort of made the decision and maybe just your decision matrix around Ethereum versus not transitioning to Ethereum within the Ethereum ecosystem. Like choosing the Op stack versus kind of all the other opportunities out there. There's a lot of great stuff happening all over the web three ecosystem and would love to just kind of hear a little bit more color around how you're thinking about Op stack versus other opportunities and what you consider yeah, it's.
01:22:33.598 - 01:23:20.526, Speaker E: A really great question. Yes. I think the Ethereum decision was a no brainer for us. Stello's origin story was actually we tried to build that wallet that I just shared, Valora, and we tried to build it on top of Ethereum five years ago. We wanted to build basically a global Venmo global cash app, global revolut, accessible to anyone in the world. And not surprisingly, back then it was difficult to build that on top of Ethereum and make it easy enough to use for anyone in the world, especially if you wanted to also make it decentralized and connect with a light client and everything. And so that took us down the path of working on, you know, in our mind, we were always part of an extension of the Ethereum Ecosystem.
01:23:20.526 - 01:24:34.102, Speaker E: We were just kind of the mobile, real world use case extension to the Ethereum Ecosystem. And back then, there was no other way to really accomplish what we wanted to do without launching our own EBM compatible layer One. But times have changed and Ethereum has this incredible scalability roadmap that uses roll ups and it just made sense for us to propose to the community to transition into an L Two, to be part of that roadmap and almost to have, you know, this kind of coming home moment, right? Like coming back into the fold, so to speak. And we were just really excited to see that. The whole ecosystem was very excited about that direction and we saw just how many people voted yes on the proposal. And I think also the Ethereum Ecosystem has been just really amazing about celebrating this as well. So that's on ethereum.
01:24:34.102 - 01:25:38.240, Speaker E: Why? Op stack. I think that's also a great question. I think Op Stack has a really nice modular design that I think really fits our needs really well, because as we talked about, there's a few things that we are working on that are different from other L Two S that we think are important for Sella users. And the Op Stack code base just is very amenable to making those changes. So I think that's part of it. We're obviously very excited about the broader kind of Op network and we have developers who are actually started off on cello and have been building bedrock that we're close to and we just generally like the folks in the Op Stack Ecosystem. And so I think that's another big part of it.
01:25:38.240 - 01:26:13.980, Speaker E: I will add that since making the proposal, we've actually had a lot of inbound from a ton of really great projects in the Ethereum Ecosystem that are, I think, offering to collaborate and find ways to potentially speed up the deployment of this. That was, I think, a surprise, but certainly a welcome surprise. And so it's just been really interesting having those conversations now as well.
01:26:14.990 - 01:26:43.010, Speaker F: Amazing. Yeah, it's been great to see how much support the proposal's got overall. Seems you can almost call it unanimous, I would say, based on the mean. I even saw that Vitalik jumped in with some questions on the proposal as well. Lots of interest, lots of support. Really excited for the work that you are doing and the work that you presented here and excited to see that will roll out back on top of Ethereum.
01:26:43.350 - 01:26:45.220, Speaker E: Woohoo. Let's make it happen.
01:26:46.070 - 01:26:46.770, Speaker C: Amazing.
01:26:46.920 - 01:26:55.880, Speaker F: Well, thanks so much for your time, really appreciate it. And yeah, have a great rest of your day, have a great weekend and going to move on to the next talk now.
01:26:56.190 - 01:27:01.500, Speaker E: Awesome. Likewise. Thanks for having me. Have a great weekend, everyone.
01:27:05.790 - 01:27:06.540, Speaker C: Awesome.
01:27:07.070 - 01:27:07.578, Speaker E: Cool.
01:27:07.664 - 01:27:51.274, Speaker F: Thank you again, Merrick, for jumping on with us and chatting about Sello's L Two proposal really excited that we had a time to kind of share that proposal in depth and learn a little bit more. Jumping into our next chat, we're going to be welcoming James. For everybody who's not aware, mode just went live in the last week or so. So this is Op Stack, hot off the presses. So really excited to have James join us in just a minute here to chat about the work that they're doing at Mode. So we've got James here, so I'll add him into the chat. But, yeah, welcome, James, to chat about Mode and the work that you guys are doing on the op stack with them.
01:27:51.472 - 01:27:53.740, Speaker D: Pleasure. How's it going? Everyone?
01:27:55.630 - 01:27:56.682, Speaker F: Going well?
01:27:56.816 - 01:27:57.210, Speaker A: Awesome.
01:27:57.280 - 01:27:58.634, Speaker F: Hand it off to you.
01:27:58.832 - 01:28:18.798, Speaker D: Perfect. So, yeah, thanks for having me. I'm James, I'm the founder of Mode and I'm going to tell you a little bit about Mode. I'm sure some of you have already been hacking on it, which is awesome. Yeah, we can get a little bit deeper into it today. So mode is an op stack. L two, designed for hypergrowth.
01:28:18.798 - 01:28:57.358, Speaker D: What does that mean? That means that we're trying to design a blockchain ecosystem that directly rewards users, developers and protocols that grow the network. Sorry, there's typo there. It's built on Op stack for easy application development. There's growth mechanics implemented at protocol and product level. Going to go through that. There's network sequencer, profit distribution as well through contract secure revenue, which I'm going to explain. And it's been launched by a team of growth experts who have built some of the largest blockchain communities and ecosystems in the past.
01:28:57.358 - 01:29:33.542, Speaker D: So let's go. So Mode is kind of founded on the principle that right now, block space is very much commoditized. There is essentially a lot of block space and there isn't enough applications, there isn't enough growth in the application and user layer to fill that block space. So for the average person using a blockchain or using an L Two especially, it works quite well. Okay. Feed could be lower, there are certain optimizations that should happen, but it works quite well. So the real challenge now is not in incremental tech improvements.
01:29:33.542 - 01:30:50.370, Speaker D: It's in building ecosystems that have deep, liquidity, clear incentives for developers and applications and can bring applications that have product market fit and a growing user base. What we've seen at Mode is that a lot of ecosystems have launched recently. They've done a very good job of building technology, but they haven't effectively allocated resources to solve the challenges that need to help L Two, S and ethereum scale. So that's what we're trying to focus on. How do we design a blockchain, an ecosystem that helps everything grow and ethereum grow? So, yeah, as mentioned, Mode has been designed by a team responsible for bringing thousands of developers, millions of users to Web three and kind of three of the key elements of Mode, or three of the key things that we're focusing on mode is efficient incentives, resource allocation, integrated growth tooling to scale apps and enabling developer success. So let's dig into those. So right now, l two S are earning considerable profits.
01:30:50.370 - 01:31:37.378, Speaker D: I tweeted this out, I think yesterday or the day before. It got quite a few views, quite a lot of discussion. It's the profits from July, from Arbitram Optimism, ZK Sync, so you can see that they're all pretty profitable. The profits come from the network sequencer, which takes transactions, rolls them up and sends them to the L One. About half of the transaction fee, maybe 60% that you pay on Arbitram Optimism is going to the L One gas costs and the other half is network profit. So these profits currently go to different places for decentralized networks. They usually go to the Dow for projects which are backed by companies.
01:31:37.378 - 01:32:21.346, Speaker D: They'll go to the company that's running the sequencer. One core principle of mode is that we believe that sequence of fees or sequence of profits should be distributed to those who grow the network, especially the developers that grow the network. And we think they should directly be distributed not through a Dow and not through a company. The reason is, I know a lot of people have probably applied for grants from Dows. Sometimes they work well, they're very effective at allocating resources. Sometimes governance can be slow, cumbersome. It can take a long time to get paid out or get resources to build and then centralized companies.
01:32:21.346 - 01:33:05.626, Speaker D: It's often not the best idea that we're completely relying on centralized companies holding large amounts of money. So let's dig into contract secured revenue. So contract secured revenue enables mode to share profits with developers. Developers that build on mode will earn a proportion of transaction fees from the contracts they deploy. And this is done via a CSR module which we based on Kanto's designs. Kanto was the first blockchain to really take contract secure revenue seriously with the founder Scott Lewis, as like the inventor of contract secure revenue. We think it's awesome and we want sequence of profits to go straight to developers.
01:33:05.626 - 01:34:00.238, Speaker D: And the percentage of sequence of profits that will go to developers is going to be decided by the Mode Growth Council, which is type of delegated governance council. Sequence of profits that devs get will be paid in ETH they'll be claimable each week. And we're experimenting with different ways for developers to be able to claim sequence of profits. One of them is by holding NFTs and basically assigning contracts as NFTs. There's a few other things we're playing around with, but this is going to launch on main net and the real reason why we believe contract secure revenue is going to be an awesome innovation for the blockchain. Ethereum L Two ecosystem is it makes building predictable. If you deploy an application, you have 100 users and you earn $100.
01:34:00.238 - 01:35:07.510, Speaker D: That's great because you know that if you can scale your application ten X or 100 x you're on ten times or 100 times more profit from the sequencer. So that's kind of cool. And that enables developers to make forward thinking decisions, enables them to invest more. And that's where we think it's going to be a nice feedback loop for developers building on mode. So yeah, at the end of the day, developers will get directly rewarded for growing the network on mode. Another key thing we're looking at is how can we have an integrated growth tooling suite to scale applications? So in web two, it's become pretty common that developers will deploy to certain ecosystems sorry, certain platforms, and they'll be have like a suite of tools. So when you deploy like an app to the Apple Store, there are like hundreds and hundreds of really great tools you can integrate to get insights.
01:35:07.510 - 01:35:55.506, Speaker D: For example, you can plug in advertising through Facebook and you can do direct app downloads and you can get your first 10,000 app downloads pretty quickly. You can use HubSpot for sales, you can use Google Analytics. There's loads of stuff that enables developers to scale their applications very quickly. And we want to try and take that approach with Mode. So over the last, say, twelve months, let's say two years, twelve months, there have been a load of apps that have basically emerged that help projects grow. So you can't really see the slide. I think it might be quite small, but there's Spindle, there's Guild, there's three RM, there's Galaxy, there's Addressable.
01:35:55.506 - 01:36:39.822, Speaker D: These are all apps or like plugins tools, services that applications can use to help grow. So for example, Spindle is a web three analytics tool. It helps developers understand their users and attribute certain actions to wallets. So you might run a campaign on Twitter, you can see that a load of people if you're using Spindle, you can see that a load of people have come from that Twitter campaign and deposited or started trading on your exchange. You're probably going to do more Twitter stuff. Galaxy helps you scale communities. Guild is an awesome tool to essentially help reward communities for certain actions.
01:36:39.822 - 01:37:34.978, Speaker D: And Addressable is a web three advertising tool that helps you advertise to people that have wallets. So the example, and what we're kind of basing our platform strategy on, is Shopify. So shopify was awesome. Well, it wasn't the most awesome store builder, it was pretty good, but there were other better options and it also wasn't the first. But Shopify really focused on how to build a platform for people to grow their store. It was bringing in a lot of different services, applications that helped stores grow and kind of do all the manual back office stuff into their platform via their own app store. And, yeah, it was really impressive at just building a platform for shop owners to become successful entrepreneurs, with many of those entrepreneurs going on to build businesses, which IPOed.
01:37:34.978 - 01:38:28.550, Speaker D: And essentially that's the goal of any blockchain is to have successful applications on it that will scale and maybe become bigger than the blockchain itself, or at least via user numbers, start to really grow. Next slide. So, yeah, part of that platform approaches to enable developer success. And yet for mode, this means we want every developer who builds on mode to succeed. Recurring revenue from contract secure revenue is a part of that. We want every developer to be paid proportionally to how much they grow the network. We're going to have this developer dashboard which should help all developers understand more about their applications and about their users.
01:38:28.550 - 01:39:14.310, Speaker D: We're going to be giving away grants from 10,000 to 10,0000 for marketing and growth support. And we want to support projects that launch on mode and also want to launch across the superchain ecosystem. So we're happy to support anyone if you plan to launch on mode and everywhere else as well. So currently we are in public testnet. We'll be in public testnet for probably four to six more weeks, and we're early, so there's lots of opportunity. We've built some projects internally ourselves, bridge AMM. We're working on the dashboard, the referral network, the contracts revenue module.
01:39:14.310 - 01:39:51.440, Speaker D: Projects we're looking to support include Bridges DEXs with cool kind of innovations, AMM style DEXes, especially lending protocols, some experimental DeFi stuff. Marketplaces NFTs. Nftfi. I think that's how it's spelled it's like NFT DeFi stuff. I think that's really cool. We really like that as a team on chain games and other fun stuff like AI. We want to really help anyone who has cool ideas and maybe is really talented, but doesn't know how to get those ideas out into the world.
01:39:51.440 - 01:40:51.860, Speaker D: That's what we're here to do. We're here to help you get your first hundred thousand and more users and grow your project across L, two S and across Ethereum. So here's a little bit about mode governance. This is, I think, fairly different from what other projects are focused on with trying to minimize governance as much as possible through the mode. Dow and the Dao will really focus on a few things, and a couple of those are around a couple of the most important are around the parameters on how much revenue goes to users who refer others to grow the network, and how much sequence of fee revenue goes to smart contract developers. That's pretty much mode. And it would be cool to answer some questions.
01:40:51.860 - 01:41:07.320, Speaker D: So, yeah, let's jump into some questions. I'm happy to answer them from the chat here, or maybe someone wants to jump in.
01:41:09.690 - 01:41:10.790, Speaker B: Hey, James.
01:41:11.290 - 01:41:12.670, Speaker D: How you doing? Karthik?
01:41:12.770 - 01:41:37.438, Speaker B: I'm doing great. Thanks so much for that overview. I think it's really interesting to see a lot of these types of incentives kind of being given out and tried on the Op stack. So thanks for kind of covering this. We have one question from the audience already. There's a couple, I think, coming in, but to everybody on the live stream. If you have any questions, just type them out in the chat and I'll be able to relay them and ask those questions to James directly.
01:41:37.438 - 01:42:08.890, Speaker B: I'll kind of start off with the one we've already received as you were giving the intro, which is one kind of common criticism we've seen here, is effectively trying to understand what does this mean for developers and how they should think about deploying contrast. Because in a way, this creates an incentive for you to not write gas Evission code. Is that at ODS. How do you kind of kind of square that? How do you think about that? And so making sure that people are writing good code and not treating blockchains as databases.
01:42:09.730 - 01:42:55.100, Speaker D: Yeah, so I think obviously every chain is competitive, right? So if there are two people building the same product and one has higher gas fees than the other one, people are probably going to use the one with lower gas fees. So I think in theory it's a problem, but in reality, when if you're building an exchange, if you have contracts aren't optimized, then someone else is going to build the same exchange with contracts that are optimized and people are going to use that. So I'm not sure how many contracts that haven't been optimized for gas have been successful. I don't know. But yeah.
01:42:56.830 - 01:42:57.354, Speaker C: That'S fair.
01:42:57.392 - 01:43:52.400, Speaker B: But I think I guess we're also talking about a difference of maybe one magnitude, right? Like somebody might pay with a hyper optimized transaction that cost a 10th of a cent, but you can also write an efficient version that costs like one cent. And to somebody in the US. It may not make a difference, but it could mean a significant portion of someone's spending power if you're in a world that does not rely on US denominated currency. So the question becomes, well, yes, if this was a main net deployment, of course you can notice that dollar value difference in transaction fees, but at the same time, on L two transactions, you already have like a ten to 100 x improvement. But it could be that or it could be 10,000 or 1000 x improvements. And I think the question is kind of interesting, but if any other comments, we can go into that. If not, I'll ask another one.
01:43:53.570 - 01:44:14.600, Speaker D: Yeah, I do think it's super interesting and I think should it make you optimize your contracts to make them competitive? Yes. Should it make you spend a considerable amount of time to make them completely optimized? I'm not sure.
01:44:15.370 - 01:44:42.400, Speaker B: Fair enough. Another question we have is as mode, how are you thinking about making it easy for developers to understand what this contract secure revenue here is? Does that mean there's going to be additional libraries or ways to query this directly on chain or manage or see examples of what a good practice is? How should somebody get a good understanding of what this means?
01:44:42.850 - 01:45:14.086, Speaker D: Yeah, so we're building out a developer dashboard right now, and that dashboard will give you an insight into the contracts you deploy, the transaction fees that run through, and the percent of profits that you'll receive through contracts and good revenue. So Kanto originally came up with an idea to have an NFT. You can mint an NFT, you can assign contracts to it, and then that NFT is actually transferable. So you could, in theory, sell that.
01:45:14.108 - 01:45:18.122, Speaker B: NFT is talking about Kanto or are you talking about this is also true.
01:45:18.176 - 01:45:43.586, Speaker D: For Moat talking about Kanto, but we're playing around with some similar designs right now. We're thinking of making the NFT non transferable. And yeah, you'll be able to assign some contracts to that. You can, I don't know, decide to donate that ETH. We're trying to make it flexible, but it'll be very visible for developers through.
01:45:43.608 - 01:46:05.240, Speaker B: An interface that's super cool. What happens in a world where somebody loses access to their keys, or if some contracts are not upgradable, you want to destroy the private key that has the ability to upgrade or redeploy? And how do you kind of think about, I guess, what is a good way of deliver to think about these things?
01:46:05.930 - 01:46:36.500, Speaker D: Yeah, I think the best way is that you'll be able to assign new contracts to an address. So if you have to upgrade a contract, you can reassign it if it needs to be reassigned. But yeah, your address should your main address you're using should hold an NFT, which will be where the contracts revenue will go. So you have to obviously keep that extremely safe. That's how to think about it right now.
01:46:38.710 - 01:47:06.730, Speaker B: Awesome. I don't think there's any other questions coming in that are not usually lookable on your docs page, so I'll leave it at that. But other than that, if there's anything else that you have, I can just maybe think of one or two questions that I'm curious about is just overall, what made you get excited about this as an idea? What was your motivation to do this and especially do this thing on the Op stack?
01:47:07.150 - 01:48:02.160, Speaker D: Yeah, so I've been working the space around five years. I originally was just angel investing and spent a lot of time building growth tools and spent the last two years working for the largest growth marketing agency called Hype. And during that time, I worked with a lot of big ecosystems, including like BNB chain Algorithm, DEFINITY Flow Polygon, and quite a few others. And I saw a lot of great things happen when it comes to resource allocation, and I saw some difficulties with Dows. And for a developer, I think the most important thing is that you can have predictable revenue. Doesn't have to be a lot, but you want to know when you do something, you're going to get rewarded. And I really like that.
01:48:02.160 - 01:48:44.598, Speaker D: Contract secured revenue gives you some predictability. I previously had a company, we ran advertising, and you. Spend money and you see what your return on ad spend is and you decide to scale up or cut it. And that's quite hard to do when you're a developer in Web Three because you have to put a lot of effort in up front and the reward can be very variable. Maybe to deploy an application that goes crazy or maybe you deploy an application that gets like a huge grant in three months or six months or maybe nothing happens. But the idea is that contract secure revenue. You can start to deploy some maybe lightweight applications.
01:48:44.598 - 01:49:15.270, Speaker D: I've earned like $100, earned $500 and see if that can help you kind of bootstrap and grow. So it's just an alternative funding model. I really like the Op stack because I think it's very much aligned with Ethereum's values and I like that the community around it is super focused on how to scale Ethereum. Building with Op stack is also fairly straightforward. Like, I would say I'm semi technical.
01:49:17.130 - 01:49:49.360, Speaker B: Yeah, let's dig into that because this whole thing is about building an Op stack, the hackathon today's summit and understanding kind of how you can effectively think about creating your own universe that's still consistent with the other universes. When did you kind of get this idea to build this thing? When did you kind of make the decision to make it onto the Pstack and kind of from a timeline standpoint, how easy was it to kind of get started to receive that all of your requirements are going to be met and kind of curious on that. And then I have a couple of questions about the launch process itself from the last week.
01:49:49.890 - 01:50:23.026, Speaker D: Yeah, awesome. So I started to get interested. I've been like watching optimism for a long time. I was an investor in Synthetix in Haven and they were, I think, one of the first contracts to deploy to optimism. So it was really cool to see how they kind of were really bullish on ecosystem really early on. And yeah, when the Op stack was kind of announced, I was really interested to see how it would work. Then I think in March we started to hear about base that was going to deploy.
01:50:23.026 - 01:50:56.870, Speaker D: Thought it was really interesting, looked into it and yeah, it just kind of made sense amongst a lot of other solutions because it's production ready, which not many other kind of lt roll of skating solutions are right now. And I wanted to get I see this as a good window of time to launch a project because the market is fairly steady and there's not as much noise as there was like a year and a half ago. So I think it's quite a nice time to launch and focus on growing a good community and ecosystem.
01:50:57.450 - 01:51:10.010, Speaker B: Nice. What was the most challenging piece of launching NEOP Stack? And any pointers for others who are thinking about the same that they can either save time on or avoid some mistakes or any advice.
01:51:12.110 - 01:51:42.180, Speaker D: I think that you have to figure out a lot of what you're doing by yourself. So there's lots of good documentation, there's a good community, but I still think you do need to really just figure out by yourself building stuff through trial and error. We're pretty early in our journey, so we haven't had too many big hiccups. I expect there will be when we launch Mainet. Yeah, we have a good team.
01:51:45.990 - 01:52:07.878, Speaker B: Are some of these things obviously saying that we can just complain to fix the doc bond? Or is it more about how do you think about structuring something long term or the fact that maybe for adding CSR here, you had to think about making deeper engineering changes to how the stack is structured and that wasn't easier obvious compared to someone else's requirement, just launching a chain?
01:52:08.054 - 01:52:50.860, Speaker D: Yeah, I think if you're going to run the main IP stack configuration, then it's very straightforward. It's more an infrastructure challenge to make sure that if you get high throughput on the chain, like how RPCs has everything supporting that and yeah, we're working on that right now. We have a good partner for that conduit. So that's great. I think that yeah, we've had some challenges with deploying Foundry, but I think that's been fixed. So if anyone's trying to do that, you can do that now. Yeah, that's kind of the biggest issues we've had so far.
01:52:51.470 - 01:53:08.480, Speaker B: Amazing. We also asked you one last question from the audience coming in. Can you apply renting or multi SIG EAP protocols or proposals or kind of have you evaluated that or did you end up coming up with a new standard for how modus incorporating these things?
01:53:09.890 - 01:53:14.450, Speaker D: We haven't come up with a new standard yet, so yeah, we'll run on EIPS.
01:53:15.350 - 01:53:39.930, Speaker B: Oh, I got it. And maybe I'll ask this same question to the person who asked this question. What's the EIP that you're referring to? Quasan? And we'll just make sure that it's the same one or if it's like a different one, then I could be curious to get your comments too, but that's good to know. Is it just an implementation of an existing EMP and now kind of changes or are you also the proposals of the same EMP?
01:53:40.270 - 01:53:42.326, Speaker D: Oh, for contract secured revenue?
01:53:42.438 - 01:53:43.100, Speaker B: Yes.
01:53:45.790 - 01:54:23.590, Speaker D: We do plan to build it out and propose it as an EIP, but initially we're going to test it ourselves for a little while. And, yeah, we are, say, two to three weeks away from deploying it on. The testnet for people to start to see within the dashboard that working and start to be able to assign contracts for contract secured revenue. So yeah, we'll definitely try and push it through, but it can be added as a module. It doesn't necessarily need to be like a pro call upgrade initially.
01:54:24.970 - 01:54:27.080, Speaker B: Sorry, could you explain that? I'm not sure I follow.
01:54:29.630 - 01:54:37.930, Speaker D: The it won't have to go into the Op stack mainnet configuration. It will run as a module separately.
01:54:38.910 - 01:54:45.614, Speaker B: Oh, got it. Okay. And you have the flexibility to do that? I actually did not realize we should.
01:54:45.652 - 01:54:53.170, Speaker D: Have the flexibility as it comes through. The fees come off the sequencer, which is a centralized part of the stack.
01:54:54.470 - 01:55:03.700, Speaker B: But that's on the settlements and the sequencing to mainnet, but that's not controlled by the mode chain, is that correct?
01:55:04.470 - 01:55:06.638, Speaker D: The revenue will come through back to.
01:55:06.664 - 01:55:19.350, Speaker B: Mode, but from the not as it's being sequenced. So this is a post sequence collection and then you have ability to claim it. Is that correct or is that clear? Oh, I see.
01:55:19.420 - 01:55:19.654, Speaker C: Okay.
01:55:19.692 - 01:55:41.258, Speaker B: So that a lot of things because you have a pod at the end of the day that you have a lot of claims on and then people are able to kind of manage what this would look like. You don't have to change the actual code base to incorporate this, which I think I am 100% sure Kanto had to do. So it added a bit more engineering complexity.
01:55:41.434 - 01:55:42.160, Speaker D: Exactly.
01:55:43.650 - 01:56:05.934, Speaker B: Cool. Well, James, want to thank you so much for taking the time to walk us through a lot more specifics of how you got excited about building mode and kind of what it means for somebody to consider building stack. But this is super cool and hopefully we'll see a lot of people kind of test it out and break and suggest a lot of good things over the course of the hackathon and get you all ready for mainnet.
01:56:06.082 - 01:56:11.514, Speaker D: Thank you so much. Really appreciate being able to speak in front of everyone. Thanks so much.
01:56:11.712 - 01:56:43.074, Speaker B: Awesome. Well, thank you so much. Right, well, there we go. So we have just our next speaker coming up in a minute. As you may all already know, that Base has been having a really amazing week. We're going to be talking about what onchain Summer looks like here. Coinbase just announced the Base chain just about two days ago.
01:56:43.074 - 01:57:36.514, Speaker B: We've seen people build and deploy apps insanely, especially the last 48 hours. And what we have next is we're going to bring on Jesse from base to really share what they're excited about, which is kind of the whole on chain summer. And there's a lot of things going on in terms of a lot of experiments, a lot of kind of ways for you to explore what getting millions of users potentially looks like. To put looks like we're having some technical difficulties, so give me 1 second. Also, I want to just thank everybody here for your patience on some of the comments we're getting. One cool thing that's going on on ebcobo TV is today we switched from streaming on YouTube to streaming via Livepeer. So this whole live stream is being streamed through Livepeer as a decentralized video transcoding platform.
01:57:36.514 - 01:58:12.286, Speaker B: And we're kind of figuring out what it looks like and what bugs we need to account for. We added some custom functionality here as well. So it's one of those things where these types of issues will only come up live and in production. So some of you have been guinea pigs and telling us if something is not working. So I want to thank a few of you here, especially Ethan, for really telling us all the variations. And we've been fixing a lot of these things in the background, but if this goes really well today, we're going to be streaming everything on Live Fear decentralized. So looks like we're having one small issue here on the speaker side.
01:58:12.286 - 01:58:28.710, Speaker B: And what we'll do here is we'll just take a quick few minute break. So stay on the stream, hold tight, and we'll be back in just a couple of minutes. We'll kind of put a small timer here for all of you to refer to and we'll be resuming very shortly.
01:58:50.490 - 02:01:51.140, Speaker A: Sam. Sam. Sam. Sam. Sam. Sam. Sam.
02:01:51.140 - 02:03:34.030, Speaker A: It feel. Always fear, always feel.
02:03:39.480 - 02:03:57.930, Speaker B: All right, welcome back. Hope you all enjoyed a quick five minute break. And with that, we are ready to resume a lot of things, primarily what the rest of this on chain Summer looks like. So without further ado, let's welcome Jesse to talk about Base and on Chain Summer. Hi.
02:03:58.860 - 02:04:06.670, Speaker C: Hey, everyone. Glad to be here. Thanks for having me. It's Friday, I'm wearing my Friday shirt and it's on chain Summer. Let's go.
02:04:08.320 - 02:04:33.620, Speaker B: Amazing. Well, I want to hand this off to you. Well, first I want to say congratulations on what an incredible week this has been. I've only seen incredible, amazing excitement on everywhere else, on social media and I'm sure the rest of your team and you are feeling incredibly grateful for how this all has been kind of finally come together. So a big congrats to all of you.
02:04:33.770 - 02:04:52.764, Speaker C: Thank you. Yeah, we're excited about it. It's been a massive team effort. It's not just base. I feel like the whole world's starting to come on chain this summer. And so I feel like we're just joining the party. So it's been so inspiring to see how many folks have been hacking over the last week.
02:04:52.764 - 02:04:56.300, Speaker C: I think we have, what, like 1000 plus hackers here?
02:04:56.370 - 02:04:59.564, Speaker B: More than that, we're 1150.
02:04:59.762 - 02:05:18.180, Speaker C: 1150. I mean, that's crazy. That's crazy. And I think that there's a couple hundred of those who are building cool things on base. So it's super team, super dream, super chain on Chain summer. All the energy. I'm ready.
02:05:18.330 - 02:05:19.856, Speaker B: Hundreds of projects.
02:05:20.048 - 02:05:50.140, Speaker C: Hundreds of projects. Yeah, it's epic. I can't wait to see them all. Also, just as like a fun fact, we inspired by Super Hack, are doing a on Chain Summer hackathon next Thursday and Friday at Coinbase. And so that means that we're going to have another few hundred hackers joining the efforts. We're not going to be going through the SuperHack stuff, but it's pretty cool that we're going to have another couple of hundred folks building on Chain this summer.
02:05:50.560 - 02:05:51.550, Speaker B: Oh, wow.
02:05:52.400 - 02:06:00.192, Speaker C: Yeah, it's happening. So I think what, I have, like, 20 minutes right now to get going.
02:06:00.326 - 02:06:05.008, Speaker B: We can extend it a few more minutes. So I know you have some slides if you're ready.
02:06:05.174 - 02:06:36.792, Speaker C: I got some slides pulled together. We're doing it. It's been a hectic week, so everyone bear with me as I do this, but I'm looking at the live stream. I see people in the chat. Maybe just to start, if you're in the chat, in the Super Hack Summit chat, maybe you can just drop where are you calling in from? Maybe, like, drop a flag or drop a country. I guess it's in there, but just give me some sign that people are, you know hey, everyone, I'm Jesse. We got New York City, summer.
02:06:36.792 - 02:06:47.120, Speaker C: Let's go. On chain summer. Let me put up these slides. We got San Francisco. We got the Canary Islands, india. Let's go. We are an international crew.
02:06:47.120 - 02:07:02.128, Speaker C: Pretty epic. Okay, let me put these slides up. I hope folks arizona. We got the United States. We got Ireland. Epic. Hey, everyone, I'm Jesse.
02:07:02.128 - 02:07:34.928, Speaker C: I'm the Creator of Base. I've been in the kind of coinbase orbit for the last seven years, been working to bring Coinbase on Chain and building Base for the last two years. And I'm here to talk to you about Base on Chain Summer, what's going on, and get into it. And before I talk about all those things, I just want to talk about this word on Chain. I think folks have probably heard it enough at this point. It's in the title. But just as a quick refresher, the way we think about on Chain is that there's kind of three eras of the world right now.
02:07:34.928 - 02:08:08.456, Speaker C: There was the before Internet days, and that was what we call offline. That was when really we were just talked at. If you wanted to learn something, you listened to the news, you watch the TV, everything was unidirectional. And if you wanted to create something, there were all these gatekeepers, the publishers, the producers, the folks who basically got to decide, could you have a voice? And then in the early 2000s, we all went online, and that's when I grew up. It was a pretty magical time because I think for the first time, all of our kind of creativity could come.
02:08:08.478 - 02:08:09.944, Speaker E: Out and we could share it with the world.
02:08:09.982 - 02:08:46.304, Speaker C: We could write, and it became bi directional. And that's what created Twitter. It's what created instagram. It's what created TikTok. It's what created this incredible wave of creativity that has, I think, transformed the world for the better of the last 20 years. But if you reflect on kind of what wasn't perfect during that time and what left a lot to be desired is even as we were all kind of having this creativity, even as we were bringing this creativity to the world, when we were putting it online, it stopped being ours. I put my content on Facebook and now Facebook set the rules.
02:08:46.304 - 02:09:36.790, Speaker C: I put my content on TikTok and TikTok set the rules. I made incredibly creative things, and they got to decide how much I earned based on it, and they got to take most of the money. And instead, what I got was likes and comments which can't be exchanged for food or any of the things that let me live a better life, grow happier family, build a better business. And so we believe that we are on the precipice right now of the next generation of the internet, which is the on chain era. And we believe that the big shift that's happening is that for the first time, not only can we read and write, but we can also own. And for the first time, when we have creativity, when we make things and we put them into the world, those things remain ours, the song remains ours and we can earn from every time someone collects it. The piece of writing remains ours and we can earn from every time someone engages with it.
02:09:36.790 - 02:10:46.972, Speaker C: And we can enter this next era where I think we're going to see much more economic freedom, we're going to see folks having much more resources and we're going to see folks having much more sovereignty and feeling of much more autonomy to actually be able to live their lives. And so that's on chain and I think the thing that's exciting to me about On Chain is that it feels like it's finally here. Just in the last three to six months, it feels like we've really started to have new use cases being built on chain. On chain music with things like Sound, on chain media with things like Zora and Manifold highlight, just incredible folks who are enabling tools for creators. On chain Games today I was on a live stream with the Parallel team who's building an incredible trading card game. We have you know, I've been working in the city of Oakland to build Oak, which is a community currency there. On chain advocacy, even Coinbase has been leading the way with Stand with Crypto which is a fully on chain advocacy campaign where you can mint an NFT to support, get involved and activate to bring better crypto policy to the world.
02:10:46.972 - 02:11:30.516, Speaker C: And so we at base are basically trying to figure out what can we do to make it so On Chain gets accessible to everyone and that everyone can start to build. We opened up Base mainnet for everyone this Wednesday. So that was a huge milestone after six months of hard work and many of the folks who are listening into this are building on base. I was talking with Kartik and he said I think there's like a couple hundred teams that are building on base in some way during super hack and there's been so much energy over the last three to four days as we opened up Base for everyone just to give a little bit more color on Base. Base is an ethereum layer. Two, it's built on the Op stack. It's part of the superchain.
02:11:30.516 - 02:12:12.728, Speaker C: That's why you're here for SuperHack. And we really think that Base is going to enable the next generation of on chain products and that people are going to have an easier time building apps. People are going to have an easier time using those apps through interfaces like Coinbase and Coinbase Wallet and all the other incredible wallets. We're working with, like, rainbow and Ravi and frame and MetaMask and Trustwallet. And that this combination of easier application building and easier application using is going to enable the next wave of crypto adoption that brings millions of builders and billions of users on Chain. One of the things that's really important to us is decentralization. And so we've been talking about kind of three commitments to decentralization that we've made for Base.
02:12:12.728 - 02:12:58.400, Speaker C: The first is technical investments in decentralization. We've joined as the second core developer of the Op stack alongside Op Labs. We've already made a bunch of kind of key contributions on scalability. We're working right now on something called Oprest, which is the second client for the Op stack and also working on Security Council, a few other technical initiatives to help Base decentralize faster and every Op stack chain decentralized faster. We also are participating in an open neutrality framework called the Law of Chains. This is something that we helped co create with optimism over the last nine months. And it's the thing that allows us to keep Base open and decentralized and permissionless, what allows us to ensure that Base looks and feels and acts like ethereum.
02:12:58.400 - 02:13:39.008, Speaker C: And then finally, our third commitment to decentralization is that we are funding public goods. We're taking a portion of all of the transaction revenue that's generated on Base and we are routing it to the optimism collective to fund public goods. This is really our commitment to ensuring that the underlying infrastructure that enables Base and is going to enable the next billion users to come on chain has a sustainable funding source that can grow over time. And so that's what Base is doing. But I think the thing to kind of ground us all in is that we're still very early in this journey. There are less than 10 million people on Chain. There are 8 billion people in the world.
02:13:39.008 - 02:14:04.492, Speaker C: And so we have to get from 10 million to 8 billion people in the world. I'm seeing someone ask just in the chat, can you index Base with the graph right now? The answer is yes. The graph fully supports Base, as does pretty much every other infrastructure provider. And so if you need a tool, I would just say ask. You can pop in the Base discord. You can drop in the chat right now. I'll tell you yes or no.
02:14:04.492 - 02:14:52.920, Speaker C: But we've worked really hard over the last six months to ensure that everything or as much as possible is supported out of the box with Base. And that's because we believe that it's not just going to be Base, it's not just going to be coin based, it's going to be all of us that get us from that 10 million people on chain to the 8 billion people on Chain over the next decade. And so the way we're really trying to kick that off is with Onchain Summer. You've maybe seen this on the Internet over the last week. This is really bigger than Base. We think about Base as joining the party, but that the party started at the beginning of the summer when the world started coming on chain. And our contribution is basically bringing a bunch more people to build a bunch.
02:14:52.920 - 02:15:37.604, Speaker C: More cool stuff and share it with the world and then hopefully bring a bunch of users into the ecosystem so they can experience what's happening on chain and get excited and get a crypto wallet and get involved. Today, just as a shout out, we did a really cool mint from Parallel. They are building a trading card game. You can get a starter pack for Parallel at Onchainsummer XYZ, parallel or just onchainsummer XYZ. This gets you early access to the beta. It gets you all the cards you need to get started. The game is really cool, really excited about it, folks have been loving playing it and it's all fully on Chain.
02:15:37.604 - 02:16:17.280, Speaker C: On Base. We also have a bunch more coming up. So tomorrow we're doing On Chain music with another block. We had to get one web, two brand in there and so Coke is doing a really cool piece of on chain art with a bunch of artists including kind of the Van Gogh house and a bunch of emerging folks on Sunday. On Monday we have a day of action for Stand with Crypto where we're going to be telling the world why we need clearer policy. On Tuesday we have Blackbird who's doing on chain restaurants with loyalty. They're doing a summer pass and then every day all the way through August we have something else cool happening on Chain.
02:16:17.280 - 02:16:44.296, Speaker C: And so if you want to get involved in Onchain Summer you can go to Onchainsummer XYZ every day there'll be something new to do. We also have a trending tab and a Community tab. And so if you build something on Base this summer, let me know. You can tweet at me, you can DM me and I'll make sure that we get it featured in the community section. And then if it goes viral, if people are minting and people are engaging, it'll show up automatically in the trending section. And we're seeing a ton of eyeballs.
02:16:44.328 - 02:16:45.544, Speaker A: Right now in Onchain Summer.
02:16:45.592 - 02:17:40.588, Speaker C: I think yesterday we saw that there's like 100,000 plus people who visited and so this is a great way to show off some of the cool stuff that all of you all are building every day and building in SuperHack. And I think my message to all of you all is this chart down here that's the growth of L two S over the last year. You can see that it kind of started at zero. Ethereum is the blue line and then it's kind of gradually grown up into the right. And we're at this inflection point where it's growing, but there's still more room for it to grow faster. And so our belief is that this is it. That we're here, that the time is now, that the tools are finally ready, that it's on chain summer and that it's going to take all of us to ignite what will be probably one of the most incredible growth journeys we've seen ever in the history of humanity as the whole world moves on chain.
02:17:40.588 - 02:18:32.016, Speaker C: And so that's my message. If I had one other thing to say, it would be let's go build some cool stuff. We have 1000 plus hackers here for East Global. We know that there's already a bunch of projects being built on base and other chains that are going to be really impactful, that are going to help tell the story of on chain. And so if there's anything I can be doing, we can be doing to better support you all, if there's anything you need to make your on chain summer dreams come true, please let us know. One last plug on that is we have 100 ETH of additional grants alongside the prizes we're doing for SuperHack that are open right now. You can learn more about those at Prop house based or you can just Google onchain summer grants and those will come up.
02:18:32.016 - 02:19:08.830, Speaker C: Those are for all sorts of know creative projects building on base account, abstraction, infrastructure. And so if you're building something cool this summer, please submit it for a grant. We'd love to support you and the next generation of builders on base. And so with that, those are all the prepared remarks I have. I know there's not technically a way to do questions, but maybe if folks have questions, we have Kartik here, he can ask questions also. Folks could drop questions in the chat and I'm happy to answer them. We can take a few more minutes and then we can call it a day.
02:19:09.280 - 02:19:24.784, Speaker B: Yeah, absolutely. There's no way for people to ask questions to you directly over voice, but if they type anything in the chat, we get to see all of that. We can relay that. We do have a technical question coming in, which is, is base already indexed by the graph right now?
02:19:24.822 - 02:19:39.224, Speaker C: The main net? Yeah, I answered it. I answered it live because I got the chat live stream. It's fully supported by the graph and pretty much every other infrastructure provider. And so if you need something, you can DM me about it. I'll make sure you get it.
02:19:39.422 - 02:19:40.360, Speaker B: Sweet.
02:19:43.900 - 02:20:25.636, Speaker C: What hack ideas am I most excited about? I'm most excited about people building cool consumer products. It feels like the technology is finally there. We have account abstraction, we have low cost L two S, we have good wallet interfaces. I don't know if folks have seen Friend Tech, but that's been kind of like popping over the last 24 hours on base. And I think it's a great example where it's like you literally just put in your phone number, you can transfer an ETH, you can build whatever you want or you can do whatever you want there and you don't have to engage with crypto, you don't have to get a new wallet. So I think that that's awesome. I want to see more experiments like that.
02:20:25.636 - 02:21:00.050, Speaker C: I'd love to see people build consumer products on base. I also am really excited about anything that's on chain summer themed, telling the story of the world coming on chain this summer and every summer until everyone's here I think is really important and so would love to see projects related to that. I see someone just asked Linux or Windows if I had to pick between those two. I think Linux. I'm a hacker. I grew up on the command line and I used Bash for a while. I'm actually now a fish user, so a little bit out there.
02:21:02.020 - 02:21:03.280, Speaker B: But I'm sensing.
02:21:09.940 - 02:21:35.784, Speaker C: What am I going to do? I'm a Mac user. I grew up like, taking apart iPhones and watching Steve Jobs keynotes and yeah, grateful for all of the incredible products that Apple's built. Bryce just dropped in the Prop house round. Yeah, you can just go to prop house slash base, everything's retroactive. And so build something cool, put it in there, and then folks are going to be kind of selecting what gets awarded the grants.
02:21:35.912 - 02:21:44.930, Speaker B: Amazing. Maybe one question to put you, but what's been kind of a big learning from the last 48 hours?
02:21:46.100 - 02:22:14.164, Speaker C: What's been a big learning from the last 48 hours? I'd say the biggest learning is just like, man, there's so much energy out there and just needs to be activated. We weren't really sure how people were going to respond when we started telling everyone, this is it. This is the summer. The world comes on chain. And I think realistically, the world's not going to come on chain in August. We got a lot more work. Every summer is going to be on chain summer.
02:22:14.164 - 02:22:45.840, Speaker C: But I feel like there's something about just the vision that we're painting that is getting people fired up and is like juicing creativity and getting people to do things that maybe they didn't feel were possible before. And I don't know, that's been really refreshing. It's been energizing. I feel solidly out of the bear market right now. We are solidly in the builder summer, on chain summer, grow it all, bring the world on chain.
02:22:46.840 - 02:22:58.310, Speaker B: Yeah, and I bet a little bit of a relief too, now. That we're there. It's just a little bit less pressure. You get to see things through.
02:22:58.920 - 02:23:37.604, Speaker C: Yeah. I'm really grateful that this is out in the world now and that we're past the launch, man. It's stressful launching something because it feels like you only really got to do it once. And so it's been stressful three months of getting here, and I think it's kind of nonstop through the end of August. Like, every day, I'm doing a live stream from now until the end of August, saturdays and Sundays included, just telling the story of On Chain Summer. Every day we're doing a new mint, saturdays and Sundays included. So the next 20 days are going to be intense, but I feel like the pressure valve being released of, like, oh, this thing is out in the world now.
02:23:37.604 - 02:24:13.756, Speaker C: People are using it. People are starting to build on it organically. That's been really great. I also see one more question in here. What's our internal goal KPI for onchain Summer 2023? Honestly, we've already exceeded all of our internal KPIs for onchain kind of crazily enough. If you look at the activity on Base, the goals that we originally set, we didn't know what to expect. We're like, launching a new L Two, trying to compare it to other folks who've recently launched new L Two S.
02:24:13.756 - 02:24:55.032, Speaker C: And I think we've already been kind of blown away by the response. Just like today, I think yesterday we crossed 100,000 unique transacting addresses on base. Today, I think we're going to track towards, like, 125,000 or 150,000. It's crazy. That's way bigger than we were anticipating. And so I think we're kind of, like, doing a little bit of an internal reset right now. Okay, what do we go on for the rest of the month? And my attitude is it's day 1150,000 is big, relatively.
02:24:55.176 - 02:24:55.676, Speaker B: Right.
02:24:55.778 - 02:25:20.630, Speaker C: I think base has the most transacting addresses of Nel Two today and yesterday. Maybe not yesterday, but will today. But in the grand scheme of things, it's tiny, right? Like, we're talking about millions, billions of people that we need to bring on chain. And so I'm just now recalibrating, like, let's go get to a million daily transacting addresses. I think the biggest internal goal that I have is.
02:25:22.360 - 02:25:23.028, Speaker A: I just want to.
02:25:23.034 - 02:26:13.104, Speaker C: Make our products like, all the products work better on base. That's been a forcing function for On Chain Summer is a forcing function for that. There's a part of it that was just, like, getting energy, getting momentum, getting movement, but the other part of it was, like, making it. So every day, the coinbase team, the coinbase wallet team, other wallet teams who are promoting On Chain Summer and doing activities On Chain Summer, they have to go through the experience of trying to use an on chain product and seeing what works, what doesn't work. And just in three, like, every day, we've done a retro, an hour long retro with the Coinbase team, the coinbase wallet team, and the base team for the last three days. And every day we're like, here's a bunch of shit that's really broken that we need to fix. And so I think that's probably the single biggest North Star for me this summer.
02:26:13.104 - 02:26:23.880, Speaker C: It's like, can we make a 50% improvement, 100% improvement in quality of life, in quality of experience of people who are trying to transact every day on chain.
02:26:25.020 - 02:26:37.356, Speaker B: Yeah, it's set up to be in that right world, too, because you now have this really tight feedback loop where you get to actually see and try things and just see the next iteration 24 hours and see if it worked or not.
02:26:37.378 - 02:27:01.844, Speaker C: And that's a great I'm seeing someone asking about parallel, about prime on base. Prime, I think, is on base already. It can be bridged via layer zero. I'm like 80, 90% sure of that. If you want to tweet at me, I can tag the parallel team and they can give you any information that you need. That's a response to GOs. Nico awesome to hear that the Dows migrated to base this week.
02:27:01.844 - 02:28:04.276, Speaker C: We want more of that. We're here to make that happen and let us know if we can help. And then david Dev Jadeed, you have a question on L two s navigating the regulatory space in general, our feeling is like, there's a lot of need for regulatory clarity in the US and in countries around the world. And that's why we've been advocating for that coinbase with Sam, with crypto, and with all the other stuff that we're doing. I think in general, our belief is that layer twos are an extension of ethereum, and that like ethereum we should be standing for and fighting for layer twos to remain open, permissionless and decentralized. And so that's one of the big reasons why we are part of the superchain, why we're part of SuperHack, why we're building on the Op stack, why we spent the last nine months working on this open neutrality framework called the Law of Chains because we believe that it requires decentralization, it requires open source and requires real commitment to ensure that happens. And so that's what I'm focused on when I'm not focused on on chain summer.
02:28:04.276 - 02:28:36.130, Speaker C: I'm focused on ensuring that layer two remains open, permissionless and decentralized. Because that's what's going to be required to have a global on chain economy and a global on chain platform that all of us can build on and that all of us can stand on with a level playing field. So I think I'm at time. Kartik, thanks for the questions. Everyone who is here, thanks for being here, thanks for hacking, thanks for being a part of super hack, thanks for building this summer. And if you launch stuff for on chain summer, tweet at me. We'll get it featured on the website.
02:28:36.130 - 02:28:46.150, Speaker C: If you're looking for cool things to do on chain, go to onchainsummer XYZ every day. There's one cool thing to do on chain. Get on chain this summer. Let's go build some cool stuff.
02:28:46.840 - 02:28:50.000, Speaker B: Awesome. Thank you so much, Jesse. And we'll see you on chain.
02:28:50.160 - 02:28:51.828, Speaker C: Awesome. Thanks, Cardik. See you later.
02:28:51.914 - 02:28:52.208, Speaker B: See you.
02:28:52.234 - 02:28:52.840, Speaker C: Bye.
02:28:54.380 - 02:29:24.050, Speaker B: All right, that was an awesome intro to everything that's happening in base. And with that, we are ready for our last talk of the day. So without further ado, I'd like to bring on Tevin to talk about multi chain uniswap. And given all the things that are happening in this LTU ecosystem, this is the perfect opportunity for you to think about and learn about how you can potentially also structure your projects to be on multiple chains. So tevin welcome. And hi.
02:29:24.580 - 02:29:27.188, Speaker G: Hi, how are you? Thanks for having me today.
02:29:27.274 - 02:29:31.670, Speaker B: I'm doing great. It's been a really fun day. I've learned so much.
02:29:32.840 - 02:29:47.690, Speaker G: Good for very, very busy. It seems I caught the end of Jesse's talk. And, yeah, the Base launch has been super exciting. And on chain summer is very cool. So very exciting time to be building in the space.
02:29:48.300 - 02:29:54.668, Speaker B: Absolutely. Well, I'll let you tick on with the rest of the presentation and I'll get out of your way.
02:29:54.834 - 02:29:55.308, Speaker A: Great.
02:29:55.394 - 02:30:23.508, Speaker G: Thanks so much, Kartik. And thank you all for being here with me today. Today I'm here to talk about multi chain Uniswap, uniswap protocol, and cross chain generally. And here to fill you in on a few different things. First, I'll introduce myself. I'm Devin Walsh, and I'm the executive director and one of the co founders of the Uniswap Foundation. I'll kick off by just explaining a little bit about what that means.
02:30:23.508 - 02:31:47.856, Speaker G: What is the Uniswap Foundation? How is it different than companies like Uniswap Labs? Then I will go into some background info on Uniswap cross chain, some 101 on how Uniswap goes and is deployed on other chains, whether they're L, two S or other L ones. Some history there as well. And then what I thought would be helpful for this audience of hackers is talking through the opportunity for MultiChain uniswap and MultiChain generally for protocols, as well as some of the biggest considerations that I have and I think that the Uniswap Dao has when we deploy protocols on other chains. While the opportunity for multi chain protocols is large, we are still early and there are some frictions and things that I think could be made easier to do when we think about deploying protocols cross chain. So first off, what is the Uniswap Foundation? So I, along with my co founder Ken Ing, founded the Uniswap Foundation one year ago, approximately last summer. Right now, we are a team of seven operating remotely around the world. It's possible some of you who are ETH global hackathon frequenters may have met myself or some of my colleagues at some of the hackathons around the world.
02:31:47.856 - 02:32:53.024, Speaker G: And we are a nonprofit that's focused on supporting the growth, decentralization, and sustainability of the uniswap protocol and ecosystem. We do that using $60 million in funding that we've received from the Uniswap Dow that goes towards grants. Grants to build developer tooling content, interfaces, cool apps on top of Uniswap alongside new committees, processes, groups, events that support the longevity and sustainability of the protocol and ecosystem. And if you want to learn more, you can visit us online or on our Twitter. I would recommend following us on Twitter because next week we will be posting our first set of requests for proposals. In other words, grants funding opportunities to build for Uniswap V Four which should be coming to be deployed by end of this year, potentially early next year. So uniswap x chains.
02:32:53.024 - 02:34:00.336, Speaker G: Uniswap across chains. Uniswap protocol, as many of you know, was originally deployed on Ethereum, but since then has been deployed on many other chains, both L Two S and L ones. A quick primer on how that happens. The key inputs to a deployment happening on other chains from the protocol's perspective are the Open Source License on the protocol called it the BSL or Business Source License, as well as the Uniswap Dow. So Uniswap V Three and Uniswap V Four upcoming are controlled by a Business Source License which essentially prevents others from deploying the protocol for two years unless they've been granted an exemption. In this case, the Dao is able to grant exemptions to teams and after two years the protocol transitions to a GPL license. So in that two year period when the BSL is live, the Dao can vote.
02:34:00.336 - 02:35:00.172, Speaker G: And as you can see on the right hand of my screen, you have some recent votes that the Dao has conducted know in this case recognize that pregpl to deploy the protocol on other chains. And once the code transitions to GPL, anyone can deploy anywhere. And the Dao recognizes canonical deployments which are supported by the Dao and foundation. And I can go into why that canonical recognition is important a bit later on some history. So as many of you know, Uniswap has been around for a few years now. The most recent live version uniswap V Three was deployed May 2021. So a bit more than two years ago and swiftly after that was quickly deployed on optimism, arbitram and polygon some of the earliest L Two S in the space.
02:35:00.172 - 02:35:55.840, Speaker G: The first L One deployment on Zello was conducted a little bit maybe a year and a half ago or so. And over the past two years, eleven deployments have been recognized as canonical deployments of Uniswap V Three on other chains. And the Dow recognizes those deployments through essentially an ENS subdomain V Three deployments. Uniswap E, you could check those out and basically look at the address which has been recognized as canonical by the Dow on all of these chains. Most recently, I know you all just heard from Jesse Pollock. Uniswap was deployed on base and it was also deployed on Linear. Those are two of the most recent deployments which have been done now cross chain usage.
02:35:55.840 - 02:36:54.890, Speaker G: So I think it's notable to call out how popular some of these X Uniswap deployments are. So five of the top 15 DEXes in terms of volume are Uniswap deployments. You can see that Uniswap on Arbitrum is the third most popular in terms of volume Dex as of today. Also notable are the fees generated on Uniswap. You can see that in terms of average daily fees, uniswap is only behind Ethereum and notably ahead of Bitcoin and BNB chain in terms of fees generated. And you can see that those fees are not only coming from the Ethereum deployment, but also Arbitram, polygon, optimism, et cetera. So when you think about Uniswap deployment cross chains, it's not only in name and philosophically believing in the power of multi chain, but also in terms of true.
