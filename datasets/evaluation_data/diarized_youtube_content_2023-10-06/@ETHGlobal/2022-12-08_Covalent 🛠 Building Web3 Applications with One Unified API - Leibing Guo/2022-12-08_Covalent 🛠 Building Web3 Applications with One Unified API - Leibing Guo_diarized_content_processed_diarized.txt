00:00:00.410 - 00:00:50.586, Speaker A: Thank you, but hope you guys are all fine and having a good time here at ETH India. So I'm part of covalent. Covalent is a Data API service and we provide blockchain data to more than 40 blockchains, close to 50 now. So today I'm just going to give you a quick, quick introduction to what is Covalent, how you can start building on it, and what kind of data you can get. Before we begin, if you scan this QR code, you receive free Covalent themed ETH India NFT. So, yeah, there's no reason not to do so. You just need to sign up and register.
00:00:50.586 - 00:01:49.250, Speaker A: You get a free API key, you can start calling and using our API and you also get this NFT. So please go for it. Testing it. Okay, awesome. So, as many of you all know, the future is looking MultiChain. In fact, right now it's already MultiChain. And we believe that by 2025 there'll be dozens of dozens of blockchain, layer one, layer two, app chains, et cetera.
00:01:49.250 - 00:02:42.410, Speaker A: And there will be a problem. However, from a perspective of a dev, which is that we're going to have a data challenge, right? Unless you're working purely in one ecosystem, you will probably need multi chain data. And MultiChain data right now is difficult to access, right? They are mostly stored in point query form. If you host your own node, obviously that's terabytes upon terabytes of data, and that's really difficult. And most of the data is not aggregated host on Smart contracts. And even if you call using Web three JS or Ethers JS, they are point query little small Lego bricks. So it's hard for you to get the high level picture, right? And most of the time, if you are querying using some sort of SQL database, the queries can be really complex.
00:02:42.410 - 00:03:32.102, Speaker A: So we've kind of abstracted that away from you as a dev, right? Especially if you've already built, spent all your time and energy on UX UI on your backend, solidity code, wherever, and you just need a quick way to get on chain data onto your front end or any other kind of client. Covalent is the solution for you. It's a single Rest, traditional Rest API, which allows you to get all kinds of blockchain data, like balances transactions, NFT data. It's queryable from the cloud. You can use all sorts of environments to call it. Technically, it's no code required, right? We even have a feature where it allows you to download everything in CSV. So it's super convenient for the analyst friends.
00:03:32.102 - 00:04:31.860, Speaker A: If you just want to download the data, put it on Google Sheets or whatever, and it enables you to go multi chain in a matter of minutes. How does it work? So obviously the blockchains hold the data themselves and then expose to us via RPC nodes, right? Covalent is almost like the data layer. We host full archival nodes of every single chain, and then we aggregate the data, package them up into a standardized model and we serve them up to you in a rest API form. So it's really simple for you when you use it. And it's used to power all sorts of applications. So on top of the fact that it'll make your life simpler, we are also used by over 40 plus developers and more than 3000 projects out there right now. So yeah, I'm sure you guys are dying to know how you can get started.
00:04:31.860 - 00:05:50.890, Speaker A: So everything is our docs. You can just check out how to use the API. From our documentation we have an API reference which allows you to call the API directly from your browser. Typically I would be exploring this, but because the Wi Fi is a bit flaky right now, I would just be skipping that and maybe I'll show you a little bit about what the response looks like using some of the slides here. And also we have also built out code templates that enable you to just code along or quickly drag and drop code snippets into front end, like react front end or something to see what kind of data you can get. So this one for those of you who are familiar with postman, right, getting all sorts of data through this lovely interface, we have built out this postman collection that enables you to sample all of our endpoints from the comfort of your postman workspace. So you just go to this URL covalenthq, postman co and you will be able to find this collection here.
00:05:50.890 - 00:06:28.598, Speaker A: And it has all our endpoints with the chain ID, with the wallet addresses pre configured. So all you need to do is to press the Send button and you'll be able to save the response. To study in the future, you'll be able to see the response structure, does it have the data that you need, et cetera. Right? So it's probably a bit small for you to see here, but there are four categories of data that we provide. In general. There's balances data and that includes NFT balances as well. There's NFT data, there's also transactions data and what we call base.
00:06:28.598 - 00:07:46.750, Speaker A: So that allows you to get all log events of smart contracts, for instance, right? And also X y equals to K, which is the Dex data. So you can get all the liquidity pools, you can get all the amount of seven day liquidity in a time series, you can get 30 day fees, et cetera. So if you are looking for inspiration, you can build NFT marketplace very easily. And that's just a matter of a couple of API calls. All the data is there, right? You don't have to, I guess, make 50 or 100 queries, which is what you will be doing if you're using the likes of JSON RPC. You can build D five portfolio trackers like Zappa, which allows you to see all your token balances and more. So all these are the endpoints that allows that loading.
00:07:46.750 - 00:08:59.040, Speaker A: You can build the likes of wallets. In fact our balances endpoint is one of the most popular endpoints that we have that allows you to very quickly get all your token balances as well as NFT balances as well as the NFT metadata which is all where all the images et cetera are stored. You can build sites like CoinGecko, which has the top tokens, the amount of liquidity, et cetera. So now for this hackathon we have also a pretty juicy price for you guys. So we have 10,000 USDT or USDC price pool and the top three prizes get respectively three K, two k and one K. And then we have the $4,000 price pool for the remaining projects. And all you have to do to qualify for the price pool is to make a meaningful call to our API.
00:08:59.040 - 00:09:30.620, Speaker A: And as long of course, to qualify for the top prizes, you have to have a good use case. Your use case has to be novel. The problem they are trying to solve should be a genuine and good problem, of course. And we also judge on the quality of your implementation. But of course given this to be a hackathon environment, most of the time we are judging on the quality of the idea itself. Right. And then you need to use the Covalent API.
00:09:30.620 - 00:10:18.254, Speaker A: Yeah, typically I would try to give a quick demo and if I'm connected okay, I am connected to the internet. Let me just hopefully it allows me to call something without an API key here. Oh, there we go. We have the response here. Let's open it up. I need a JSON formatter. I wouldn't get you to suffer through that.
00:10:18.254 - 00:10:59.160, Speaker A: But if you see here, this is the sample response of our balancers endpoint. All it is is one query. The query string passes in the chain ID, which in this case is one. And then the address it resolves the ENS which is demo ETH. But you can of course put any address here and then it gets you the token holdings of this address. And as you can see, this address actually holds 122 tokens. 123 including zero.
00:10:59.160 - 00:11:50.680, Speaker A: And each of these items are all the information you need about the token, you know, USDT and this is the contract address of USDT and this is the balances in way. And all you need to do to get the ETH is to take that and divide by ten to the power of the contract decimal here. And it also holds some frontier token, this amount of frontier token, some native token ETH. Right. Fairly straightforward. You can get the historical portfolio value of any address. So that will allow you to build the chart with ups and downs of all the tokens that you hold.
00:11:50.680 - 00:13:27.508, Speaker A: You can get all the NFT holders of a particular collection as of any block height. So that's very useful if you are doing on chain NFT analytics of, let's say, who are the token holders of Paji penguins as of January this year, right? Any compared to now, maybe. And so for NFTs, you can get all the NFT transactions you pass in a NFT contract address and it will give you all the transfers of the NFT that is made. So of course, get all the transactions, et cetera, et cetera. Now, just one final thing before I wrap up. So yeah, another thing is you go to that I believe it's this URL I need to sign in, but if you go to that URL, you will be able to fork the covalent postman collection, which is a super neat tool, the one that I mentioned just now. So we also have built a web3 resources, which is like a starter pack for you to quickly integrate it into your app.
00:13:27.508 - 00:14:35.622, Speaker A: So this is like a react library. We have built out a couple of components, right? So for token balances, you see that this is the simple react component that will just input in the address and it gets you all the token holdings. So it is a component here that you can plug and play. This is an ERC 20 transfers component. You see all the transfers made of all these ERC 20 tokens. This is a token holders component and this is a transactions component you pass in the address, you see all the transactions of this wallet. So each of these are built just simply using one endpoint, one call, right? Yes, that's about all that I have.
00:14:35.622 - 00:15:28.230, Speaker A: Thank you for staying through with this. I'm opening up this last bit of time for any questions that you may have. If not, for those of you who have just arrived, you can still scan this to get a free covalent at ETH India NFT. Any questions? Anyone, feel free to ask. All good? Okay, thank you guys. Should.
