00:00:16.320 - 00:00:21.872, Speaker A: Hi everyone. Welcome to the Covalent studio. My name is Leilani. I'm a product manager at Covalent.
00:00:21.936 - 00:00:24.704, Speaker B: And I'm Leiping. I work at Devrel. At Covalent.
00:00:24.832 - 00:01:19.720, Speaker A: And today we're going to tell you a little bit about how to build in Web Three with our unified API and just a little bit about Covalent in general. So, before we started off, the last year, two years has been pretty big for the crypto Web Three space. We've seen a ton of interest in people that are selling their first NFTs or buying their first NFTs, creating crypto wallets, and also developers that are looking to build tools in this space. So what we've noticed from a data perspective is millions and millions and millions of more rows of data that is being extracted from blockchains. And there are quite a few challenges when it comes to blockchain data that maybe some of you are aware of if you've tried to extract it yourself or if you've used other tools. And if not, we'll kind of illuminate some of those and position where Covalent fits. So let's talk about some of the challenges of getting blockchain data into the slides.
00:01:19.720 - 00:02:17.780, Speaker A: So if you've ever tried to write custom queries yourself, you'll know that they can be a little bit complicated. This can be things like building subgraphs or maybe you have designed a project that is on one chain, you want to take it to another chain and you have to write an entirely new script. You can also find that data is often missing, delayed, inconsistent. There aren't that many standards when it comes to blockchain data because this is kind of an ascent space and most ecosystems kind of have their own rules. It can be pretty challenging when you're trying to aggregate data or if you're trying to build applications that exist in multiple ecosystems, which is kind of the future that we envision at Covalent. The last thing is it can be expensive, of course, like anything as you scale, the more you consume data, typically the more you're paying for it. This can be running your own nodes, this can just be paying services like RPCs where your costs kind of ramp up.
00:02:17.780 - 00:03:27.756, Speaker A: So yeah, we try to eliminate basically all of the data challenges that we face like this with Covalent and I'll explain a little bit about how we do that. So we saw the need for a unified solution. By unified, I mean with so many different blockchain ecosystems, it is hard for developers to learn new tools and languages each time that they want to build in these spaces. So we thought having one tool, one unified API that brings different blockchains together would make it a lot easier for people to focus on the application layer, which needs to be developed to support a much bigger user base. So we kind of act as a data layer between blockchains nodes, the applications that people like you are building and then the users that consume those applications. So instead of running your own infrastructure or figuring out how to interact directly with each of these different networks, you actually just query this data layer that we provide through a simple tool, which is our unified API. And it allows you to focus on things like NFT galleries, building crypto, wallets, maybe improving the user experience from what you've noticed or really anything else in that realm.
00:03:27.756 - 00:04:00.584, Speaker A: So kind of touched on it. But what is covalent exactly? It's basically a one stop shop to access all on chain data. So we do this through a unified API. It's actually a no code solution. So obviously if you're a developer, you'll be more successful, but if you are completely new to the space, you can try it out in the browser or if you're an analyst. We actually support a CSV mode as well, and it's MultiChain native. So everything that we do focuses on a MultiChain future, meaning that applications need to be interoperable and these kind of things can't really live in silos forever.
00:04:00.584 - 00:04:32.792, Speaker A: So whatever you're building, it'll be easier to scale when you have a tool where you just need to change a chain ID parameter. Here's some of the use cases with Covalent data. I'll point out a few that I like. Maybe Leiping will point out some as well. There's so many things you can do because we basically provide all of the data from Genesis block to now. So with that you can really build anything that exists on a blockchain. So like Dao tools, DeFi dashboards that could compare the volume on different exchanges, GameFi analytics, we actually have an ebook on that on our website.
00:04:32.792 - 00:04:35.930, Speaker A: You can check out what are some of the other things you've seen?
00:04:37.260 - 00:04:44.328, Speaker B: Yeah, DEXes or like wallets and basically a lot of things.
00:04:44.414 - 00:05:15.204, Speaker A: Yeah, whatever is like on chain, you can retrieve it. And it is a read only API, which we'll get into. So right now we have an ecosystem of about 30,000 developers and over 3000 projects. Here's some of the ones you can check out that are a little more familiar, and then you can also go to our website to learn more about those. But 30,000 developers in the grand scheme of things really isn't a lot. There's about 300 million in the world and then there's about 300,000 that are estimated to be in web three. So that puts us at like 0.1%
00:05:15.204 - 00:05:16.804, Speaker A: or something of the grand total.
00:05:16.922 - 00:05:22.708, Speaker B: Yeah, if you start developing now right, that makes you the 0.1%.
00:05:22.874 - 00:05:23.492, Speaker A: Exactly.
00:05:23.626 - 00:05:24.704, Speaker B: All developers.
00:05:24.832 - 00:06:01.200, Speaker A: Everybody wants to be early, get in there early. So basically this is a good time to learn these tools and to start grabbing at some of the opportunities that are here while there's actually not too much competition. So that brings us to the unified API. As I mentioned, unified API just brings together different blockchain ecosystems under one tool, basically. So it aggregates APIs as opposed to using an ethereum API, a polygon API, an avalanche API, and all of these different tools that you have to piece together. Instead, you're using one API and you change parameters. So this is kind of how it looks.
00:06:01.200 - 00:06:27.756, Speaker A: You have blockchains on the side, on our left side, which is just an example of some of the ones that we index. We actually index over 40 blockchains right now, and we always are adding more. Then you have our indexing nodes and we transform the data in our database into things that are queryable through class A endpoints, class B endpoints, and then coming soon, our community built custom class C endpoints. And I'll save more info on those for the demo that we'll do.
00:06:27.858 - 00:06:30.008, Speaker B: Nice. Do you guys support polygon?
00:06:30.104 - 00:06:31.880, Speaker A: Yes, we do. We support polygon.
00:06:31.960 - 00:06:33.256, Speaker B: Awesome. FMOs.
00:06:33.368 - 00:06:34.028, Speaker A: Yes.
00:06:34.194 - 00:06:35.004, Speaker B: Awesome.
00:06:35.202 - 00:06:43.952, Speaker A: And if you want to see a list of them, we'll head into the API reference right now and we can show you where you can find all of the different chains that we support.
00:06:44.086 - 00:06:45.616, Speaker B: Thank you, Ledani. That was great.
00:06:45.638 - 00:06:46.320, Speaker A: You're welcome.
00:06:46.470 - 00:07:10.744, Speaker B: So now I'll take over and show you how you can start getting cracking at the API. So first thing, you just go to the documentation site. Yeah, you go to your documentation site and you get an API key and you can start making queries directly from the browser here. Right? So a lot of people get confused like, oh, what is class A, what is class B? They don't know.
00:07:10.782 - 00:07:11.128, Speaker A: Right?
00:07:11.214 - 00:07:35.824, Speaker B: So let me just give you a brief overview. Class A is the kind of data that is consistent across all sorts of blockchains. And you can see the blockchains that we support here. We've got Avalanche, we've got polygon, we've got BSc, we've got Phantom, we've got Clayton. And we also support the testnets, which is very useful if you're just trying to deploy something and without cost.
00:07:35.862 - 00:07:36.016, Speaker A: Right.
00:07:36.038 - 00:07:38.124, Speaker B: You don't want to use real tokens.
00:07:38.172 - 00:07:41.284, Speaker A: To start building, accidentally spend hundreds of dollars.
00:07:41.402 - 00:08:11.550, Speaker B: Yeah, exactly. That's the thing about developing in the web three space. Sometimes you can just lose money before you even make money. So we've got balances data, right? Very popular. We've got NFT data, we have data points. That gives you the transactions of an address. And I've also got things what we call base, which is like the kind of block height, which blocks are produced in which day, the log events of any contract address.
00:08:11.550 - 00:08:34.496, Speaker B: So let me just give you an overview how you can start using it. Select your chain ID. You can select which currency you want to display your response in. So, for instance, you want to get the balances of your wallet. You can choose to display it in Singapore dollars. Right? That makes it very useful for Singaporean developers.
00:08:34.608 - 00:08:45.720, Speaker A: And this could also be useful for like, taxes or anything that's currency dependent. Or if you're looking at your own historical transactions, you could see it in the money that you actually spent, essentially.
00:08:46.380 - 00:09:15.250, Speaker B: And then the default mode is the developer mode, which gives the response as a JSON object. You can also go to analyst mode, which gives you the response in CSV or Google Sheets or Excel, depending on which one you prefer. So, yeah, let's just go back to our default here and show you what we can get. So, Leilani, whose wallet balances are you most curious about in this world?
00:09:15.620 - 00:09:26.352, Speaker A: In the world? Well, there's a lot of celebrities that have recently got into crypto. There's a couple that are supposedly a lot more active. One of them that I'm curious about is Paris Hilton.
00:09:26.416 - 00:09:27.152, Speaker B: Paris Hilton.
00:09:27.216 - 00:09:31.590, Speaker A: And I happen to know her. ENS is Paris Hilton ETH awesome.
00:09:32.380 - 00:09:34.660, Speaker B: Let's figure out what she's holding.
00:09:34.740 - 00:09:35.370, Speaker A: Okay.
00:09:37.500 - 00:10:07.036, Speaker B: Oh, there we go. Paris Hilton ETH and yeah, let's run this TADA. So this is what Paris Hilton is holding. Obviously, it's not very illuminative. Let me just open it up in a different tab so you can see everything. So she's holding on to some OpenSea token, some Emerald rockets token, and how much of it? This amount. And this is in weight.
00:10:07.036 - 00:10:13.600, Speaker B: Right. So you just divide it by ten to the power of contract decimals to get it in ETH.
00:10:13.760 - 00:10:14.276, Speaker A: Nice.
00:10:14.378 - 00:10:14.788, Speaker B: Yeah.
00:10:14.874 - 00:10:24.952, Speaker A: So how does this compare? Like, I notice I can see all of my balances for different tokens in a single API call. How would this compare to using RPCs or something else?
00:10:25.086 - 00:10:34.564, Speaker B: So JSON RPC calls, you kind of need to supply the contract address of every single token that the person holds.
00:10:34.612 - 00:10:35.016, Speaker A: Right.
00:10:35.118 - 00:10:39.710, Speaker B: And the thing is a catch 22, you don't know what token the person holds as well.
00:10:40.080 - 00:10:42.156, Speaker A: That's the whole reason you're asking the question.
00:10:42.258 - 00:11:12.230, Speaker B: Yeah, that's the whole reason. But then you have to supply the token address of what a person is holding. And then on top of that, you have to supply the abi, which you have to copy and paste somewhere. And there's huge rooms for mistake, given how huge that chunk of data is. And then you have to do the same for every single token that a person is holding. So in this case, let's say Paris Hilton is holding on to 30 tokens, right? You're making 30 API request calls through JSON RPC. And yeah, that would just take up half your day, maybe.
00:11:12.230 - 00:11:20.180, Speaker B: Whereas if you just input an ENS through the COVID NPI, you can get the response in a matter of seconds.
00:11:20.340 - 00:11:26.536, Speaker A: If I also wanted to. Going back to the balances endpoint, see the NFTs that somebody holds? Does it support that?
00:11:26.638 - 00:11:39.440, Speaker B: Yes, we do. We support it under here. So you include that in the parameter you set NFT equals to true, and you click run again, and it'll show you the NFTs that Paris Hilton holds as well.
00:11:39.510 - 00:11:40.176, Speaker A: Awesome.
00:11:40.358 - 00:12:28.364, Speaker B: Yeah. So we know all about what Paris Hilton is collecting at this point using Kubernetes API. What else can you get? Right. Let's say you are curious about what other token holders of an NFT collection there are. You can use this endpoint, you just include like token contract address into here and it'll give you a list of all the token holders. I wouldn't really go that deep into the demo and yeah, you should be able to play around with the rest of the data that we have here and depending on your needs you'll probably be able to find something. So the main approach that we have is that we give you granular aggregated data that using a library such as JSON RPC.
00:12:28.364 - 00:12:47.440, Speaker B: Libraries like Web three JS or Ethers JS simply don't really provide for this. We have class B endpoints that allows you to get Dex information. For instance, what are all the liquidity pools on Uniswap or SushiSwap?
00:12:47.520 - 00:13:01.432, Speaker A: Cool. And since those protocols are on multiple different blockchains like I know Uniswap is on a few and SushiSwap is on something like six or seven blockchains, I could also switch the chain ID and then I could see the pools on those different chains as well, right?
00:13:01.486 - 00:13:10.220, Speaker B: Exactly. Yeah. So let's say you want to find out about some of the Dex pools on Polygon. You switch it to chain ID of one, three seven.
00:13:10.290 - 00:13:10.956, Speaker A: Yeah.
00:13:11.138 - 00:13:16.392, Speaker B: And you'll be able to find out information about these two DEXes.
00:13:16.456 - 00:13:16.828, Speaker A: Nice.
00:13:16.914 - 00:13:40.100, Speaker B: So we don't have Uniswap index for Polygon unfortunately. But you can't I think the biggest Dex is Quickswap. I think it is on Polygon and then on Phantom we have V supported on Avalanche, we have SushiSwap supported Sushi swap's on everything. Yeah. They are the big conqueror of the Dex space.
00:13:40.250 - 00:13:47.720, Speaker A: So if I want more kind of like documentation or if I want to see Frequently Asked Questions or anything like that, where else should I go?
00:13:47.790 - 00:13:48.952, Speaker B: I'm glad you asked.
00:13:49.086 - 00:13:50.170, Speaker A: You're so welcome.
00:13:51.100 - 00:14:12.832, Speaker B: You go to our Knowledge Base which is Konhq.com slash Docs and this is our Knowledge Base and go under developer. You get our FAQs on Frequently Asked Questions on how to interact with API and I strongly advise for you to probably check this out. If you have any queries, it's probably answered here.
00:14:12.886 - 00:14:13.984, Speaker A: Someone probably asked this.
00:14:14.022 - 00:14:42.440, Speaker B: Yeah, someone's probably asked it before. And also if you go over to the overview it will give you more details of how you can get started and some of the nuances of interacting with the API. For instance, what's our latency? How many requests can you make per second under the free plan that we have? And also like project showcase if you want to get inspired about what projects you want to build in the hackathon.
00:14:42.860 - 00:14:43.704, Speaker A: Cool.
00:14:43.902 - 00:15:27.972, Speaker B: Yeah. One last thing before I move on to the juicy bounties that we will be providing for you for this hackathon is that we've built out this component library on GitHub. So go to this page and you'll be able to please start it and give us some love. Please start it, and then you will be able to subscribe to any new components that will build in the future. Right now we've got a component library in React for you to quickly plug and play into your application. Something like, if you want to build a wallet, you need this page, which shows you all your wallet balances. We've already built it for you.
00:15:27.972 - 00:15:37.096, Speaker B: Pipe the data from the back end. And so all you need to do is to plop it in there to see how it looks on the page. And we like it. Keep it there. Or if you want to tweak the CSS, go in there and tweak it.
00:15:37.198 - 00:15:42.876, Speaker A: Right, so if I'm building something for this hackathon, for instance, can I use some of these things and also submit a project?
00:15:42.978 - 00:15:51.936, Speaker B: Of course you can. Of course you can. Although you still have to have a good use case for your overall project for us to maybe rank you higher.
00:15:52.038 - 00:15:53.484, Speaker A: Not exactly copy paste.
00:15:53.532 - 00:16:01.532, Speaker B: Yeah, I mean, if you just regurgitate our works and call it your project, we'll be a bit sus.
00:16:01.596 - 00:16:08.064, Speaker A: But you could add these into any different use case, even if you're submitting for a different bounty, it's something that could probably push you across the edge.
00:16:08.192 - 00:16:08.628, Speaker B: Exactly.
00:16:08.714 - 00:16:09.988, Speaker A: Project a little bit better.
00:16:10.154 - 00:16:12.032, Speaker B: That's. Great idea, Ledani.
00:16:12.096 - 00:16:12.710, Speaker A: Thanks.
00:16:14.300 - 00:16:46.032, Speaker B: And then we've also got this ERC, 20 transfers component, which gives you all the transfers particular address is made. Right. You can put it in your project and check it out. And also the token holders component. For now, all of these are in React. You can either just download the React components here, or you can install it via NPM and you can just import it into your project and to see how it looks like. So give it a star.
00:16:46.032 - 00:16:58.596, Speaker B: We're constantly adding new components. We also have certain templates, like Dex templates or price tracker templates that you can check out and use in your project as well.
00:16:58.698 - 00:16:59.348, Speaker A: Awesome.
00:16:59.514 - 00:17:17.464, Speaker B: Yeah. Finally, for this hackathon, we have a total price pool of $5,000. So yay. Drum roll. We should have prepared the drum roll.
00:17:17.512 - 00:17:18.652, Speaker A: I know, I tried.
00:17:18.786 - 00:18:06.532, Speaker B: All right. Anyone who uses our API in a meaningful manner will stand a chance to be part of this prize pool. So prizes will be awarded according to the quality of your use case, right. It has to be novel. And also you're solving a discrete problem, right? And whether that's a working demo, your technical integration of it, it's quite important. And also maybe the number of API endpoints used, that will kind of be the metrics of which we are judging the projects. So as long as you use our API and you've got a good idea, you've implemented it well, you qualify for this price pool, tend to take home some juicy bounty.
00:18:06.676 - 00:18:19.612, Speaker A: Some of the other things that I think I've noticed that set people apart, too, are like good design, interesting branding, or just there's a lot around it that can make you stand out just aside from the judging criteria.
00:18:19.676 - 00:18:40.084, Speaker B: Yeah, exactly. So we look out for things like UI, smoothness of the app, and a lot of the bounties that won top categories before were projects that really looked very sleek or they've used our data in a visualization library in a way that we haven't seen it before.
00:18:40.202 - 00:18:40.870, Speaker A: Nice.
00:18:41.960 - 00:18:55.512, Speaker B: Yes. That is about all we've gone through the developer resources and yeah, we've reached the end of our workshop here. So good luck and happy hacking.
00:18:55.576 - 00:18:56.492, Speaker A: Thanks for joining us.
00:18:56.546 - 00:18:57.930, Speaker B: Thanks for joining us. Take care.
