00:00:00.650 - 00:00:45.740, Speaker A: This is our next workshop in the ETH online hackathon. We have Alon Halpern from Alchemy. She's going to give a presentation entitled building scalable, reliable and Data consistent DApps on ethereum and l Two. I'm going to ask everyone if we can you can keep your during the presentation and at the end we're going to field some questions in the chat. So if you have questions in the zoom chat, just put them here as we go along. And when we get to the end, we'll field the questions and at that I will go off camera and let Alon take over.
00:00:47.790 - 00:01:02.514, Speaker B: Cool. Awesome. Thanks a bunch, Andrew. Sweet. So I am going to share my screen here. Give me 1 second. Cool.
00:01:02.514 - 00:01:12.060, Speaker B: Going to full screen. Awesome. I just want to make sure andrew can you guys see this okay?
00:01:13.070 - 00:01:14.540, Speaker A: Yep, looks good.
00:01:14.990 - 00:01:29.294, Speaker B: Awesome. Sweet. So what's up everyone? I'm Alon. I am from the Alchemy team. I work on developer experience at Alchemy. So talk a lot to our users in discord. Kind of help out with a little bit of marketing and product as well.
00:01:29.294 - 00:02:15.200, Speaker B: But overall, really excited to be sharing with you guys a little bit more about Alchemy and how you can use it to sort of build your applications throughout this hackathon. Cool. So, wanted to give a quick overview first of sort of like the Blockchain revolution. I know there are a lot of new people who are just getting started with Web Three development who are at this conference. So I wanted to kind of kick off with a quick overview. So to do that, we have to take a look back in history, right? So over the course of the past 50 years, there have been pretty much three major technological shifts that we've experienced that have been just absolutely game changing for our lives today. The first of those is the computer.
00:02:15.200 - 00:02:51.498, Speaker B: So computers basically came along and said, okay, humans can now provide instructions for machines, right? So now I can come in and say, hey, computer, execute this thing for me. And that allowed me to build sort of different applications and have this person computer. This was like revolutionary, right? Before things not to be written by hand. It was very archaic. But computers said, hey, humans can give machines instructions and those machines can execute those instructions. The second sort of major pillar was the Internet. And that was absolutely game changing because it allowed machines to exchange information, right? So now it's not just this individual personal computer, human to computer.
00:02:51.498 - 00:03:28.760, Speaker B: Now it's like machine can talk to another machine all the way across the other side of the world. And the internet enabled that we can now exchange information across different types of machines. The third sort of pillar, which is sort of where we are today, is Blockchain. Right? And so this was absolutely game changing because it said, okay, machines, internet allowed machines to exchange information. Now Blockchain came along and said, okay, machines can exchange value. And that opens up a whole host of different applications and use cases that were just absolutely unimaginable before. So DeFi NFTs all these things that we know and use today, this is sort of where we are now.
00:03:28.760 - 00:04:18.566, Speaker B: So why is this relevant to Alchemy? And where do we kind of fit in in this sort of wave, right? So when we look at the personal computer, there's sort of three layers that come there's three layers in this stack. The first is the protocol layer. The protocol layer is sort of like the physical components of the computer. The Ram, the CPU, the hard drive. Those are the things that make up the computer. But it's really, really hard to actually code on top of that protocol layer, right? You'd have to be coding in zeros and ones and it'd be extremely difficult to build an Excel or a Word or Google Chrome in zeros and ones, right? So what happened was that Microsoft and Apple came along and said, hey, we're going to enter in as a platform layer and build out what's called an operating system. And what the operating system is, is basically it's built on top of the protocol layer, on top of those zeros and ones.
00:04:18.566 - 00:05:12.598, Speaker B: And it allows developers to actually go and build applications that we can actually use and know in a much, much easier way. So without the operating system, it'd be extremely difficult to build that third layer, which is the really important one that we all interface with today, and that's the application layer. So sort of this like three level stack, right? We couldn't have the applications without actually having the protocol and we couldn't really have the applications that having the platform either, right, because we'd be able to get there straight from the protocol, or it'd be extremely difficult to do. So when we look at the Internet, we see the same exact structure here. The protocol layer is now http FTP SMTP so they're just kind of Internet protocols, the way we can communicate across the Internet. The platform layer that came in for the Internet was actually Amazon Web Services or sort of like cloud Computing, right? Google and Microsoft Azure. And Google Cloud Services also has that.
00:05:12.598 - 00:06:06.390, Speaker B: But AWS is kind of the dominant force here when it comes to the platform layer for the Internet. So this abstracted away a lot of the kind of technical protocols that happens between the Internet and allowed us to build these applications that we're really familiar with, like Netflix and Uber and Airbnb. And so now as an application layer, I don't have to worry about running my own servers because I can just use something like AWS. And that allows me to take advantage of the protocol layer. So you see a very similar stack here when it comes to the Internet unsurprisingly in the blockchain space in this third technological shift that we're in right now, we also see a very similar technological stack, right? So the protocol layer now becomes the actual chains themselves. So Bitcoin, Ethereum, any other chain that people are building on, those are the actual protocols, the way of exchanging value, the way of communicating. This is where Alchemy comes in.
00:06:06.390 - 00:07:07.530, Speaker B: We are that platform layer that makes it really seamless and easy to build on top of those protocols. So just like AWS did for the Internet Protocol, and just like operating systems did for personal computers, we're doing the same thing for blockchain applications and making that process of actually building the application layer really easy. So what this enables is decentralized applications on the blockchain, decentralized exchanges, NFT marketplaces and platforms, this whole kind of era and new wave of applications in finance, all of that is enabled because we have this platform layer that makes it really easy for developers to build. So it sort of gives you a sense of where we fit in, in the overarching kind of technological stack. Cool. So what is the challenge for blockchain developers? Right, we talked about how it's all hard and stuff for different sort of technological shifts, but what is the actual challenge for blockchain developers? And we think about these two major challenges. Albie went and talked to thousands and thousands of developers at this point.
00:07:07.530 - 00:07:38.440, Speaker B: And the two core issues when it comes to blockchain development is one, lack of developer tools. And then two, node infrastructure. And I'll talk a little bit about both of those things in the preceding slides and break those down. So first is lack of developer tools. So right now, building a blockchain is sort of like building a website in the 90s. There's a lot of opportunity, it's very hot, there's a lot of excitement, there's a lot going on. But the tools surrounding and supporting building those applications are very, very archaic and it can be really challenging to use.
00:07:38.440 - 00:08:42.362, Speaker B: So ultimately, when you have these sort of archaic tools that sort of can get you somewhere, right? You can use these sort of slow moving, maybe challenging to use tools and they can build you a home or they can build you a functioning app, right? This is an analogy we often use to kind of explain our product. But if you have our pit stones and tools, you can get a home that is functional, right? It's a house you can live in. Can it scale very well? Can it fit a lot of house guests? Can you do a lot of things in it? Probably not. But when you bring in actual sophisticated tools and real construction equipment to actually build that out, you start to get things like skyscrapers applications that are much more sophisticated, that can handle and scale a lot differently than they could have with those sort of stones and picks picks and shovels that you typically see in the earlier stages. So this is sort of like what we're focusing on when it comes to developer tooling. That's kind of the first part, right, is like we're trying to get you the tools to allow you to build skyscrapers, allow you to build really big applications that grow and scale with thousands of users, millions of users. Cool.
00:08:42.362 - 00:09:10.782, Speaker B: So the second part of the challenge for developers is this thing called nodes. And I'm just going to assume that people are a little bit unfamiliar with nodes. I know there's a lot of technical people here in the audience, but I'll just assume that people don't know what this is. So a little bit of background on a node. Node is basically the entry point communication channel to the blockchain. So it's a really crucial step in kind of like the developer lifecycle. And being able to build in web3 is you need what's called a node.
00:09:10.782 - 00:10:06.974, Speaker B: And nodes are extremely important because one, they're what allow blockchain to be decentralized, right? Because nodes, there's no single entry point into the chain. There's like many nodes that communicate between each other. But in order to read and write to the blockchain, you need this entry point so it keeps track of the state of the blockchain. So at any given point in time, a node in theory should know about all the current and previous transactions on the chain. And so developers, in order to build those end applications, need this communication channel to read and write to the blockchain, say, hey, what's the historical transaction for my users? And hey, I want to send this transaction that all gets funneled through a node. So you can see how this is a really crucial part in a web3 applications infrastructure, right? The problem is nodes are really hard to manage and run and I'll talk a little bit about why. So one of the core challenges when it comes to running nodes is just pure downtime.
00:10:06.974 - 00:10:42.362, Speaker B: So first off, nodes can take up to weeks to sync. If you're syncing a node to the current state of the blockchain today, that's a lot, a lot of blocks that it has to catch up to and that can take a bunch of time to actually catch up and consume all that data. So just like pure uptime. And the second is nodes can easily go down. And when a node goes down, that means all of your traffic goes down, right? So if I'm a user and I'm sending traffic to this DAP, that DAP is relying on the node to read and write to the blockchain. If that node goes down, all of a sudden my users don't have a way to use my DAP. So when nodes experience downtime, in theory you'd want to spin up another node.
00:10:42.362 - 00:11:23.578, Speaker B: But again, that can take a lot of time. So it's sort of like a vicious cycle when it comes to sort of just pure downtime in nodes. Number two is this idea of scalability so like I said, nodes can take a long time to spin up. So let's say I wake up one day, a viral TikTok was made about my application and all of a sudden I'm experiencing millions and millions of users on my DAP, right? And beforehand, maybe I had a couple of hundred users. I have this one node that was serving my couple of hundred users just fine. But now all of a sudden I need to serve traffic to millions of users. What do I do? In theory, I'd like to go spin up another node, but to spin up another node, that would take a couple of weeks, right? So all this traffic is flooded to one node.
00:11:23.578 - 00:12:11.050, Speaker B: When it gets that traffic spike, it can just crash. Just like if you overflow almost like DDoSing someone, if you send too much traffic, that node can crash and then you can experience downtime. So all of a sudden in this app, you have this huge opportunity to go viral. And now users can't even use your application because your node couldn't handle the traffic so quickly. Scaling is super, super important for any application that exists and it's really challenging to do that when you're running a node. The third challenge, which is sort of the most kind of kind of intricate one and nitty gritty when it comes to blockchain stuff, is just data consistency. So like we mentioned before, every node should know about all of the new blocks that happen on the chain, right? But because that information has to propagate between nodes, it can get a little bit tricky.
00:12:11.050 - 00:12:52.202, Speaker B: So let's say I'm one user and I go to buy a CryptoKitty. For example, CryptoKitties is one of Alchemy's first users, so very partial to their team. But let's say I'm a user, I go to buy a crypto kitty. I buy that crypto kitty and it spits back, hey, you have your crypto kitty in block 102, right? And so these are nodes behind a load balancer, right? So at this point I'm an application, I have multiple nodes. Behind the scenes I've thought through, I'm like, hey, I can scale, I know I'm going to have a lot of users, I have multiple nodes. So I send my transaction it's in block 102. The application spits it back and says, you're good, you bought this CryptoKitty in block 102.
00:12:52.202 - 00:13:53.834, Speaker B: Next thing you know, someone else comes along and they see the same CryptoKitty and they go to buy that crypto kitty and all of a sudden they're seeing block 100, right? So before I was on block 102, another user queries at the same time, maybe a little bit after, and they're on block 100. How could this happen in the first place? Well, that's because nodes take a little bit to propagate transactions. So one node might be slightly ahead of another node because it saw later transactions before that other node did, right? And so you can imagine that this can be extremely problematic if two users are going to buy the same CryptoKitty on different blocks, one user isn't aware that it's already been purchased on a later block, right? So it's kind of a whole mess when it comes to actually providing correct data. And this is a huge, huge problem. If you just throw a load balancer in front of a bunch of nodes, you can cause data incorrectness. And your users are not going to want to use your app if they're experiencing major data incorrectness. So those are the three key challenges when it comes to running nodes.
00:13:53.834 - 00:15:04.398, Speaker B: So what are we doing about it? How are we actually helping to solve these problems? And that's kind of where Alchemy comes in, right? So when it comes to the node infrastructure issue, alchemy has built out this sort of higher level proprietary Alchemy supernode infrastructure. There's sort of a simplified architecture diagram here. I won't go into too much of the nitty gritty details about how Supernode works, but we were able to solve the node scalability issue able to solve the data and correctness issue through this voting algorithm called Voxnody and able to solve the node reliability issue by already scaling up the infrastructure so that when you experience a huge influx of users, you don't have to worry about going to spin up more nodes. Our architecture can actually handle all the load in an instant. So this has been absolutely pivotal to the success of many applications that are in the space today. And I would say this is probably Alchemy's bread and butter product is the fact that we built out this supernode that can tackle both of those really core challenges when it comes to node infrastructure cool? Obviously it doesn't just stop at node infrastructure. Developer Tools was the kind of other really core issue when it comes to blockchain development.
00:15:04.398 - 00:15:58.310, Speaker B: And that's where this whole suite of other tools comes in that Alchemy has built out. The first of those tools is Alchemy Build. And so Alchemy Build is sort of a suite for debugging and so allowing you to sort of dig into things that might be going on with your application. So if I have a pending transaction that's taking too long, we've built out this mempool visualizer within your dashboard so you can see a breakdown of your mind pending and drop transactions and debug them right then and there. We've also built out tools for you to search through historical requests. So typically if you're running your nodes or using another kind of node provider, you would have maybe a log and you'd throw that in some data store of all of your historical requests. We threw that in the front end and built a bunch of tools around it so you can actually see a visual breakdown of what those requests look like and understand a little bit more why one might be failing or not failing.
00:15:58.310 - 00:16:30.030, Speaker B: There's also a tool to compose requests in the browser. This one's super, super cool. Basically, you can test out any lower level like blockchain requests. So for Ethereum JSON RPC requests, you can test those directly from the browser and kind of play around with new methods and new parameters so you can quickly debug and figure out what's going on. Alchemy build sister product is known as Alchemy monitor. This is a whole other student developer tools basically built around the idea of developers should know about issues before their users do. Right.
00:16:30.030 - 00:16:53.606, Speaker B: It's an ideal world. Like, there wouldn't be any user complaints. We would get kind of notified about any issues that happen and then fix it before our users are even aware of it. And that's sort of the impetus behind Alpha Monitor. So these sort of tools break down in a couple of things. One is just kind of performance and user insight. So we can show you kind of requests by area.
00:16:53.606 - 00:17:19.118, Speaker B: This is all anonymized data. We can give you kind of usage analytics on different applications and then obviously like health alerts. So let's say you're seeing a huge increase in failed requests. We'll ping you and let you know like, hey, there's a big increase here. And you can kind of see a filtered down view of what this failing request might be and why and dig into it a little bit more. So it pairs really, really well with Alchemy Build, which allows you to actually go and fix those issues. Cool.
00:17:19.118 - 00:18:07.754, Speaker B: The third of our kind of core products, or is Alchemy Notify. And Alchemy Notify was sort of revolutionary in that it kind of brought an experience that we know and love in the Web Two world to Web Three. So notifications are something that I know we're all very used to and very accustomed to when it comes to using applications. To be concrete, we're not over here refreshing our emails every single day to see if an email has come in, right? We get pinged, we get a notification, hey, you got an email, and then we go and check it. That same experience doesn't really exist in Web Three right now. And that was why we built out Alpha. Me, notify So this is really to add notifications built into your product, both for your developers, so notifications for your engine to say, hey, this transaction got dropped.
00:18:07.754 - 00:18:56.782, Speaker B: Like, you should look into it, or maybe something's with gas price, you can understand it better. And then also for your users, notifications obviously drive engagement to your application. So letting your user know about their transaction status and pinging them instead of having them kind of guess and check and wait until that transaction lands. So this is a really important tool just to sort of bring Web Three applications a lot closer to the state of Web Two applications. Cool. The second and last product we have is our enhanced API suite and our enhanced API suite is basically a suite of APIs that was built on top of the lower level JSON RPC to abstract away those nitty gritty calls. So I'll give you one concrete example.
00:18:56.782 - 00:19:17.720, Speaker B: Probably our most popular enhanced API that we built out is the full transaction history. It's called the transfers. API. And basically what this allows you to do is, with one request, you can input a user address and get their full transaction history. Alchemy has free archive access. Those of you who don't know archive is like data since Genesis. So since block zero, we offer all of that data for free.
00:19:17.720 - 00:20:07.670, Speaker B: And so with the Transfers API, you can get basically a full historical picture of what a user's transaction activity is and how many kind of transactions they've made and what those are. And this, if you were to otherwise do it, you would have to parse block by block and look for transactions within that match the user address and do that from now until Genesis. So it would have been just like a huge engineering effort, probably very expensive, probably very time consuming. And now you can get all that information in one call. So there are a couple of other APIs that fall into this enhanced API suite that also reduce, obviously, end work and time. But in general, enhanced APIs are just built to, like, look, you don't need to just have these lower level JSON RPC methods. You can actually abstract some of that away for very common things and avoid having to build in custom, in house infrastructure.
00:20:07.670 - 00:20:39.486, Speaker B: Sweet. The last of our products that we offer is Alchemy Amplify. One of my personal favorites, actually co founded this with one of my coworkers, Paul. And Amplify is basically your go to launch partner for Web Three products. So what we found we talked to a lot of developers every day, a lot of teams, and what we found was a lot of people building in the web. Three space are just a handful of developers, like hacking away in an awesome project. But they might not have the time, energy, or resources to actually distribute their product to the wider world.
00:20:39.486 - 00:21:24.602, Speaker B: And so that's what Alchemy imply was built for. We're like, hey, a lot of people are building on us and need help with their kind of, like, go to market strategy, and so we're going to go in and help them with that. So these are things like the certified Infrastructure Alliance program, project Spotlights, social media, amplification, and in fact, if you got people who end up building with Alchemy for this hackathon, if you just tag Alchemy platform in Twitter and tweet about your project, we'd be more than happy to kind of go deeper with you. We'll retweet your tweet and even kind of do some sort of spotlight. So, yeah, totally. Everything around just sort of, like, amplifying people who are building with Alchemy and making sure their products get visibility. Cool one other thing to note, we are multi chain.
00:21:24.602 - 00:21:57.938, Speaker B: So Ethereum obviously is one of the bigger ecosystems when it comes to developers. We also offer our product on polygon, arbitram, crypto.org, optimism and flow. And there are more chains, obviously, that we're working on as well. So some quick stats about Alchemy. So, in the Ethereum space, we power some of the top companies. These are in all different verticals, from decentralized finance like Urine dYdX Ave to NFTs like Openc, Dapper, and then also infrastructure like the Graph.
00:21:57.938 - 00:22:47.314, Speaker B: So a whole host of different verticals powering a lot of big names in the space. We do about $30 billion in onchain I think it's over 30 billion now in onchain transaction volume annually, tens of millions of end users, and in majority of the countries worldwide, we also power all major NFT platforms. A lot of people use us for NFT use cases, and so just a bunch of NFT marketplaces as well. So, real quick for you guys, next steps, right? So I just kind of went through all these tools I know kind of just brain dumped on you a bunch of stuff that Alchemy can help you with. What are some concrete next steps for you to kind of get started as a new developer? One thing that's been really popular recently is just creating an NFT. So this is one of our most popular tutorials on our site. It's just the raw.
00:22:47.314 - 00:23:39.478, Speaker B: Like, how do you create an NFT? I think it gives you really good fundamentals about how ERC 721 work, how smart contracts work, how kind of the blockchain in general works. And this tutorial was specifically designed for beginners. We have people doing it who just have absolutely no developer experience, not even web two, and they're able to complete this tutorial and deploy an NFT. So if you're interested in NFTs, we definitely recommend kind of starting here if you want to take it up a level. We also have a guide on how to create an NFT minter website. So if you want to create an actual website that users can engage with and users can mint their own NFTs, or you can mint them for them, whatever that might look like, we have a tutorial for doing that. Or if you want to take a step back and get to more core fundamentals and sort of understand solidity in the most kind of simplest way, we have a Hello World smart contract that you can tackle on our tutorial as well.
00:23:39.478 - 00:24:03.510, Speaker B: Again, all of these things are designed for beginners. We want to make this as easy of an entry point into the web3 space as possible and provide you with all the tools you need. We highly recommend visiting our docs and checking out some of those tutorials if you want inspiration or to understand fundamentals a bit better, a couple more resources. Our website alchemy.com discord. If you go to Alchemy.com Discord, they'll reach you there in our docs.
00:24:03.510 - 00:24:17.320, Speaker B: It's docs alchemy.com. This should provide you with plenty of starting points to get going building on Alchemy. Yeah. And that's sort of all I have for you today. We can jump into questions too.
00:24:19.610 - 00:24:39.500, Speaker C: Yeah, I had a question. Pretty curious. As someone who's pretty new to the space, I've also seen like Inferior, a lot of people use Inferior. This might be a hard question to answer because I think you went over a lot of different products, but from a high level, why would someone start building on Alchemy versus something like inferior? Is there any.
00:24:41.730 - 00:25:12.598, Speaker B: That'S a really good question. So I would say there are a couple of reasons. One infura does kind of like the node infrastructure part of things, right? So they're also like an endpoint that you can send queries to. There's a lot of really important key distinctions between our infrastructure and Fura's. One being I'm just going to go back a few slides. Yeah. So one being sort of this kind of load balancing scalability thing.
00:25:12.598 - 00:25:57.270, Speaker B: So we've built out this sort of higher level infrastructure on top of the nodes. It's not just like a load balancer in front of a bunch of nodes. Right. And Fura has experienced I'm not trying to shit talk or anything, but there has been data consistency issues on other node providers before because they can't really solve this sort of data consistency issue when it comes to nodes not being aware of the same blocks at the same time. So I think that's like a really big distinction there. The second thing is just the whole suite of developer tools we've built out. I know I went through a bunch of them, but just a bunch of developer tools to support you in that process and providers like Inferior or maybe some others don't have the same sort of suite.
00:25:59.290 - 00:25:59.766, Speaker C: Thank you.
00:25:59.788 - 00:26:00.840, Speaker B: I appreciate that.
00:26:01.450 - 00:26:15.174, Speaker D: Hi, Ellen. This is Sean. I had a question regarding you mentioned that Alchemy could get you all the historical transactions. Right, yeah, I just wanted to confirm, is that the get asset transfers endpoint?
00:26:15.222 - 00:26:15.866, Speaker B: Yes.
00:26:16.048 - 00:26:16.490, Speaker D: Okay.
00:26:16.560 - 00:26:35.346, Speaker B: Yeah, so that's the get asset transfers endpoint and actually it pairs really well with the Alchemy Notify address activity webhooks. So they're the same payload. And so if you want to get historical transactions and pair that with the latest transactions using Notify, those go really well together as well.
00:26:35.448 - 00:26:53.446, Speaker D: Right, cool. Yeah. And another question I had was does Alchemy nodes support GraphQL? Because I know for the Go implementation of the ethereum node, they do have a GraphQL endpoint. So I was wondering if Alchemy will support that.
00:26:53.628 - 00:27:08.638, Speaker B: Yeah, that's a good question. So we don't currently support GraphQL. It's definitely something that's been on our roadmap in the past. And I would love to kind of talk and hear about your use case. If you're up for it. Feel free to DM me on discord. It's just my name, but yeah, we.
00:27:08.638 - 00:27:13.374, Speaker B: Don't currently support that, but happy to chat with you offline about ways and we can support you in other ways.
00:27:13.492 - 00:27:13.774, Speaker D: Okay.
00:27:13.812 - 00:27:14.174, Speaker B: For sure.
00:27:14.212 - 00:27:15.440, Speaker D: Yeah. Thank you very much.
00:27:21.090 - 00:27:24.226, Speaker B: Cool. All right.
00:27:24.328 - 00:27:40.070, Speaker A: Any other questions? There's one in the chat here, which I'll just read out. It's from Thomas. Can you use some of the tooling, for instance, the Super APIs, but while hosting your own Node?
00:27:42.330 - 00:28:07.200, Speaker B: Good question. No, not at the moment. So all of the sort of dashboard tools that we've built out for debugging and monitoring only function, if you're using an Alchemy endpoint right now, that's a good idea. We haven't talked about that in the past. And way for you to kind of plug in your own endpoint and take advantage of the tools. So the short answer is no, not at the moment. But that is a cool idea, and I'll definitely bring it up with the product team.
00:28:07.200 - 00:28:14.564, Speaker B: Well, cool. All right.
00:28:14.602 - 00:28:44.010, Speaker A: That was an awesome presentation. I'm glad everybody had a chance to ask questions. Obviously, you can reach out directly to Alan on their discord in Alchemy. There's also a discord for the purposes of the hackathon, so you can go to the Ethan line. They have a channel there, too. Thanks, everyone. This will be posted on the ETH Global YouTube, so if you missed the beginning of it or any parts of it, you can get it there.
00:28:44.010 - 00:28:53.650, Speaker A: And at that I will. Thank you, Elon, for a great presentation and see everyone later.
00:28:54.180 - 00:28:54.830, Speaker B: Awesome. Thank.
