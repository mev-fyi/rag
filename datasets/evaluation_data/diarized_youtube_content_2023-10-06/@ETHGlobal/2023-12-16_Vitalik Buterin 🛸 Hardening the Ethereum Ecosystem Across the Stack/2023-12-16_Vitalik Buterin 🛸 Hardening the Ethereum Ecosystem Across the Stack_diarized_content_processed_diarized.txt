00:00:06.730 - 00:01:18.614, Speaker A: I thought that what I would do is take some of this discussion around censorship in a broader context, which is absolutely super important, and bring it kind of, I wanted to say down to earth, but like ether is sort of up in the sky. So bring it down to the sky and think about some issues that affect the ethereum ecosystem specifically. So hardening the ethereum ecosystem, going all the way across the stack. There we go. So the interface layer, right. This is one of the big frontiers of practical ethereum ecosystem censorship resistance that I think is often not appreciated enough. And actually, when I was on a panel a couple of days ago with the different layer, two companies, and I asked them what is a decentralization and standardization issue that is more at the application layer that they were concerned with, interfaces were actually brought up as one of the, basically the number one issue.
00:01:18.614 - 00:02:05.478, Speaker A: So who here actually knows which interface this is? Uniswap. Great. Okay, glad to hear people know use uniswap. But this is an interface, and you could use this interface for converting coins into converting other coins. One of my own addresses has actually been banned from this interface because I used tornado cash at some point a couple of years ago. And so this is an issue that affects me personally to some extent. But basically there are lots of dapps, and a DaP on chain is fundamentally just a contract, and it's a piece of solidity code, or sometimes viper code, sometimes handwritten EVM code.
00:02:05.478 - 00:03:06.422, Speaker A: But for most people, in order to practically interact with these dapps, they would needs to go through some kind of interface. Now, in some cases, the interface is fairly simple, and the interface is basically just a nice and pretty wrapper around putting the right numbers into a function that goes straight into a contract. And in those cases, the interface matters a little bit less because if you're really being censored, then you can go on word and you can figure out what fields to type in. If you go to Etherscan IO and you go into the right contracts tab. But unfortunately, those situations are also the situations in which writing alternate uis is the easiest. The more challenging situations are situations where either your application is not just a contract, or applications where the contract functions are so complex that you just have to provide messages from the outside in some way to interact with the application. Right.
00:03:06.422 - 00:04:54.570, Speaker A: So here all that we're doing is swapping tokens. So this is on the easy side. But increasingly we have applications that interact with L2s, applications that interact with all kinds of custom lawyer twos, applications that require you to sign off chain messages, and how do we even start signing off chain messages? What do you do? If you're a smart contract wallet and you need to be ERC 1271 compatible? This is like one of those areas where if you don't have the official interface, then it's kind of hard, right? And it's especially harder if your application depends on centralized APIs, right? If your interface depends on centralized APIs, then you can't fork the interface. You can't even just do control view and view source and copy paste the source, because even then it talks to specific things and you're not really able to untangle the application from those things. So a major frontier in increasing censorship resistance of the ecosystem, and I think especially for really critical functions like being able to move tokens across different L2s, is actually having protocols that are more open as much as possible. And for every protocol that exists, ideally having an open source alternative interface actually exists for it, right? So I think ideally this would be something that the ecosystem tries to adopt as a yes standard. I think one of the best tools that we have for this is social pressure, basically along with pushing applications to support, for example, things like ERC 1271, so they can be actually friendly to smart contract wallets, also push for at least one alternate UI to actually exist.
00:04:54.570 - 00:06:28.614, Speaker A: So that's the interface layer. Now, centralized node providers are one of these other really important bottlenecks, right? Basically, most users interact with the Ethereum blockchain through dapps, and those dapps generally interact with the blockchain either through a centralized provider that is maintained by the DAP itself, or through a centralized provider that is maintained by the user's wallet. And both of these are again, censorship vectors. And both this is an area that is a challenge and it's an area that is also, I think, much worse for l two s than for l ones. One of the things that is important, I think, to realize is that the ethereum ecosystem is going through a rapid transition from everything happening on l one to everything happening on l two s. And one of the things that's super important for us to be cognizant about is that as we go through this transition, there are certain fundamental values that we need to fight really hard to avoid going backwards on, right? Like there's a big change and the default direction in a lot of these changes actually really goes backwards on a lot of key questions, right? Centralized sequencing. One simple example, even if you look at how Ens works, right? If you want Ens to be usable on L2, we have the CCIP protocol that allows you to have a domain inside of a contract and then all subdomains of that domain can be issued, transferred, whatever, inside of a L2.
00:06:28.614 - 00:07:18.642, Speaker A: And the correct way to do this is that the CCIP contract actually checks like Merkel branches of the state inside of that L2. So it's actually trustless. But the lazy way to do it that unfortunately most people are doing today is to just rely on centralized providers with signatures. And we need to really make sure that we're not doing things like that, because every single one of those trust vectors is also a censorship vector. And furthermore, every one of those trust vectors makes it much harder to have an ecosystem with lots of independent providers because we don't just have to care about whether or not the provider exists, we have to care about whether or not they're trustworthy. And that just naturally tends toward more of an oligopoly, which creates more of a censorship risk for L2s. Node providers today are even more centralized.
00:07:18.642 - 00:08:18.470, Speaker A: And so this is again one of those things that I think is a big challenge to the ecosystem. Now what can we do about centralized node providers? So I think there's a couple of different directions that we can take. The more moderate direction is basically to add armoring to the existing centralized providers and encourage users to connect to lots of them at the same time. If you do this, then you have a one of interest model, right? So we have light client protocols. So there's something called helios created by a 16 z, which basically is a light client that verifies the sync committee, which allows you to stay up to date with the Ethereum proof of stake chain. This is good, but if all that you have is headers, then that's not enough, right? Most Dapps don't just need headers, they need actual state. So if you want to verify actual specific things that are happening in Ethereum, you need headers, but you also need providers to give you Merkel branches.
00:08:18.470 - 00:09:11.150, Speaker A: And then those Merkel branches can actually be verified against the headers and the transaction and state routes that you have. And then you can actually have this kind of fully verified pipeline where you have a pretty high guarantee that the thing that the server is beating you is actually correct. So this is one part of the puzzle, right? The part of the puzzle is basically increasing the security that you get of the answers from a server. The second part of the answer is moving from talking to one server to talking to n servers. This is I think a major theme in censorship resistance, which is increasing openness and increasing security. If you do them technologically, then they are actually mutually supporting. Right? And the reason is that if you increase security, then you decrease the trust requirements on anyone providing you information, and that allows you to be more open on that side.
00:09:11.150 - 00:10:35.654, Speaker A: Right? So openness versus security is a trade off frontier, but if you can improve on one or the other independently, then you're actually pushing that entire frontier forward, which improves on both. Ideal long term solution, better decentralized protocols. Ideally we would not even have to name specific ips, right? And ideally as much of this as possible would be done through things like the portal network, L2 sequencers. So again, L2 protocols, ethereum ecosystem is going through a rapid transition from being layer one dominated to being L2 dominated for the sake of security. But the problem is that it's very challenging to make sure that we actually maintain these fundamental values that we really care about. So L2 sequencers in a lot of cases are centralized, and this is a problem because it's an extra censorship vector, and it's also potentially a take away your money vector, right. One of the things that's important to remember in the context of defi specifically, is that a censorship attack can often turn into a take away your money attack, because people's positions in financial systems are so time dependent, right? If you can lock up someone's money for some amount of time, then often you basically get a free option against them, which means that probabilistically you're taking away their money.
00:10:35.654 - 00:11:02.846, Speaker A: So strategy one, force inclusion protocols, right? Protocols where if you are being censored inside of the L2, you can go and get around that and you can publish a transaction straight on chain. And the protocol forces the l two to just go and include that transaction in the next block. This is great. Who here, if you got censored, would know how the hell you're supposed to do a force equation procedure. Okay, cool. Two, hands up. That's amazing.
00:11:02.846 - 00:12:15.430, Speaker A: Okay, you two, can you just, after this, do a breakout session and teach everyone else, and we have to scale this to the entire world. So can you two just do a course, $199 an hour, have a scammy website, or go and teach people how to do force inclusions? Okay, this is one way of doing it, but the other way of doing it is we need force inclusions to also to have good uis, right? Any anti censorship strategy for it to be practical, needs to actually have a good uI. One historical analogy for this is who here is familiar with OTR messaging? This is off the record messaging protocol. From built 20 years ago. One of the co authors of it, Ian Goldberg, just actually happens to totally randomly be at the university I stayed at for eight months before I dropped out to do bitcoining. So ended up randomly learning a bit about that. But one of the really important things that he impressed on me is that OTR has this property called deniability, which basically says that if you make a message, you cannot prove that the other side made a particular message, or you cannot prove to someone else that you made a particular message.
00:12:15.430 - 00:13:21.046, Speaker A: And this is an important privacy property, because it means that even if you get coerced, you cannot reveal what the other side is saying. Now, how do you do deniability? The way that you do deniability is basically by creating a protocol where it is easy for the other side to forge messages, right? So you make a protocol where if I have the ability to sign to make a message, you have the ability to also make a message using that exact same procedure. The big thing that OTR made sure to do is they did not just have that as a thing in theory, but they also actually had a UI. Like, if you want to forge a message, you could go and forge it. So this is, I think, an example of where if you want a capability to exist for the purpose of some censorship resistance related goal, you need to actually have the UI for that exist, right? So we need uis to exist for force occlusions. And ideally these uis would be created by independent organizations, right? So ideally you'd have the roll up police, and maybe l two beat wants to be the roll up police, maybe someone else does. Maybe we need to do the anarcho capitalistic and have five competing roll up polices.
00:13:21.046 - 00:13:52.978, Speaker A: And that'll actually work here. But we need to have independent organizations creating interfaces for these, making sure that they actually work. Strategy two, decentralized sequencing, basically, actually create an open sequencing system where lots of people can come in and participate. Cross L2 bridging. So crosswalk two bridging becomes really important. You have coins on optimism today, but you want to have coins on arbitrum because of the application that you just discovered, and you want to go trade in. You want to move from one to the other within 30 seconds.
00:13:52.978 - 00:14:33.438, Speaker A: Well, it's lots of options today, but they're either centralized or they are needlessly governance heavy. And this is something that requires more open standards. So this is a diagram for a project called Uniswap X. So they're actually working on something like this. Basically, what we really need is not really these centralized L2 bridging protocols. What we need is essentially an open marketplace for cross chain friendly limit orders, right? And as Twitter told me, limit orders are basically 99% of what's useful about the whole concept of intents. So maybe we should go do limit orders, the peer to peer layer.
00:14:33.438 - 00:15:35.682, Speaker A: So relatively little attention to peer to peer networks compared to other layers. And one of the reasons why I really appreciate Kwan is just because he consistently actually cares about this stuff, right? And his various umbrella of fancy organizations actually contributes to stuff like lip P to P. And Ethereum is actually using lip P to P. And thinking about the peer to P is really valuable because even if you have a fancy theory that says that you need to pay $5 billion to 51% attack this thing, realistically, you can totally pone the peer to peer network for less than 5 million, probably even 500,000, right? And so a strong adversary can easily become more than 90% of Ethereum nodes. The network is probably quite vulnerable to Internet censorship and multiple layers. So this is something that needs to be addressed in multiple layers, stronger anti denial of service. So one of the ideas that we could do is, so this is something called the RLN protocol.
00:15:35.682 - 00:16:23.062, Speaker A: It's a zero knowledge civil resistance protocol. It's in the same line as ideas that I've published around, like, let's take the original hash, which was a proof of work antispam protocol that then inspired proof of work consensus. So you have proof of work hash, which inspired proof of work consensus, proof of work consensus inspired proof of stake consensus. And now let's have proof of stake consensus inspire proof of stake hash cash, right? And so you have coins. You prove that you have coins, and then that anonymously gives you the right to send some limited number of messages for a period of time. And we're going to do a fancy math, aka two points. Make a line, stuff that you hopefully learned in 9th grade to actually make it possible to send a limited number of messages, but keep a limit on how many messages can be sent.
00:16:23.062 - 00:17:16.242, Speaker A: And then we can have a design where if you have a peer to peer network and stuff starts going wrong, we can identify who the validators are and prioritize them so that at least Ethereum continues to be safe and sane. The social layer. Who here remembers the whole bitcoin thermos small block censorship situation? Basically one guy was the moderator of a forum and started basically censoring the hell out of anyone who did not agree with his opinions on the way. The bitcoin block size war should go. And he basically started just like, banning everyone who said things that did not agree with his views. And he even said these famous lines, if 90% of our bitcoin users find these policies to be intolerable, then I want these 90% of our bitcoin users to leave. So Quan talked about digital zalitarianism.
00:17:16.242 - 00:18:29.006, Speaker A: We have digital totalitarianism. One of the questions is like, can we make the Ethereum social layer more robust against attacks? Right? If Ethereum becomes a big deal, then one of the ways in which people might try to attack Ethereum is by attacking the social layer. And attacks against the social layer totally are possible, right? So the way that it will work is not through someone trying to do weird manipulations to force Ethereum to adopt a particular policy. What's going to work is probably the same thing that generally works better in these social media manipulations against democracies, which is you don't try to push one side of an issue, you instead basically empower the worst people on both sides and you just kind of generally create chaos. Right? There have been literally confirmed reports that I think at one point the Kreblin supported both sides of some BLM rally. They intentionally do this sort of stuff, right? They basically try to not optimize for an objective, but just optimize for the high conflict parts of both sides of any particular issue. This is something that bitcoin and ethereum ecosystems could totally be subjected to.
00:18:29.006 - 00:19:50.102, Speaker A: So I think in terms of what do we want to identify, which platforms we're worried about? And we want to identify the threat model. And particularly we want to think about internal risk versus external risk. And this is not necessarily very sharp divide, because external threat actors can easily try to create internal risk, because internal attacks just can more easily create damage. But as one simple approximation, if you look at Twitter, Twitter is a platform that is not controlled by the community at all, right? And so Twitter is probably not going to pull a thermos on the bitcoin or the Ethereum ecosystem, but there is external attack risk, right? Like maybe Elon decides that Elon has opinions about Ethereum. He did have opinions about dogecoin. Now, on community hosted bitcoin forums, such as the Ethereum foundation hosted ether research, there's much less external attack risk, but there is more inside the community risk, right? So better understand specific threat models. And another thing I think that's like one very specific to do is better forms of signaling, right? The biggest risk to a blockchain from the social layer is basically a risk of a 50 50 split hard fork as a result of disagreement over some decision that realistically probably doesn't warrant a community split over.
00:19:50.102 - 00:20:26.430, Speaker A: Right. And one of the ways of mitigating that is to have better forms of signaling ahead of time so that people are aware of which way the wind is blowing in terms of consensus. Back when the Dow fork and other controversial stuff like EFP nine nine nine, a failed attempt at rescuing the money stuck in the parity wallet and some issuance reductions were happening, there was a tool called carbon vote that was developed that allowed people to basically vote with their ETH, and you could see which positions were more popular. It's a non binding voting mechanism. It's still a voting mechanism. So we could do carbon vote. We can also extend that to do forms of signaling that are not just eth dependent.
00:20:26.430 - 00:20:59.322, Speaker A: So back then we had ETH and we had GitHub and Reddit voting. Now we have popes, we have zoo stamps. You could use zoopass with devconnects tickets. You could use any kind of pope. You can use any kind of proof that you have any kind. You could do some kind of zero knowledge score over all of them. Actually use the zero knowledge, identity and reputation stuff to try to create better forms of signaling to identify who actually is a member of the Ethereum community with stand dig to participate in a particular poll.
00:20:59.322 - 00:21:50.700, Speaker A: So conclusion Ethereum stack has lots of layers. A front door 51% attack is by far not the cheapest way to make Ethereum break or to censor ethereum, right? Like who here seriously thinks that if the US government or any other government wanted to censor ethereum, they would literally go and buy up 18 million eth and they would grab up the validators? Who here thinks that if they wanted to do that, they would buy up 60% of the lido tokens and make a lido censor? See that second thing is way cheaper than the first thing, but they would not even do that, right? You just go through all of these other things that are much weaker that we don't even think about. And so worth moving forward to better harden all of the layers and really think about all of the different layers, technological infrastructure, social, in order to make Ethereum as hardened as possible.
