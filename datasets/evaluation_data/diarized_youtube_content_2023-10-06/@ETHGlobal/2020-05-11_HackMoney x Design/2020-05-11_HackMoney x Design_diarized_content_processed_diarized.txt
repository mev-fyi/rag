00:00:00.410 - 00:01:12.222, Speaker A: Hi everyone. Welcome to our design session that I am hoping will become a staple of our ecosystem in terms of web3 education. And we are going to run it as you've seen a little bit from the description. We're going to do two awesome presentations to begin with and then we're going to have an office hours. And the way we want to run that is essentially any questions you have. If you're halfway through building your project and you want a little bit of feedback on what you have so far, we can potentially look at doing like little mini audits and so on and giving you the feedback that you hopefully need to continue building the awesome applications that you're working on. And so we're going to start off with Sasha, who's going to chat Zero to Hero, and we're going to do a little bit of an engagement or practical exercise in terms of personas.
00:01:12.222 - 00:02:09.400, Speaker A: Then we're going to have Johnny from Uport talk a little bit about identity, obviously a key piece in building decentralized applications. And then we'll have Sasha and Johnny and Amy and Julian basically collaborate on that office hours and hopefully give you guys some very important feedback. We're going to kick off with Sasha. Shall we give it another like two minutes? I don't know because I see loads of people are kind of coming in. So, yeah, we're going to do two minutes. And also in the practical session, when Sasha will ask you some questions, what we'll do is you're able to unmute yourselves, but for it to all flow nicely and for us all to have good audio throughout. I'd ask you to mute yourself as soon as you're done contributing or asking your questions so that we don't have any background noise and so on.
00:02:09.400 - 00:02:49.026, Speaker A: And I think we have oh no, Heather. I think Diego, when we kicked him out, he can't log back in because it thinks he's a troll. We had somebody join a little bit earlier when we were going through logistics. Okay, great. Just so we don't keep design for people. It would be terrible. And we're also going to record the session so that for anybody who wants to reference it later and so on, we're going to share it hopefully on Discord or upload it onto YouTube as well.
00:02:49.026 - 00:03:07.158, Speaker A: So we have it for reference for future sessions. What might be good, I think, is if you guys no, let's just go in order. We'll just go with Sasha, start with Sasha and then we'll carry on from there.
00:03:07.244 - 00:03:09.594, Speaker B: Does that work? Perfect.
00:03:09.712 - 00:03:12.410, Speaker C: So I'll start screen sharing.
00:03:14.430 - 00:03:15.500, Speaker A: Take it away.
00:03:20.930 - 00:03:29.280, Speaker C: So you're all guys seeing this, right? From Zero to Hero, how to Tailor Your product for your users, right?
00:03:29.890 - 00:03:30.734, Speaker A: Yes.
00:03:30.932 - 00:04:23.070, Speaker C: Perfect. Cool. So today's talk will be a course about personas, designed to take you through some persona creation process fundamentals. After this course, you will have a better understanding of your users needs and how might you build useful and satisfying products? It will change the way you look at things. And with some exercise, it may change your perspective on the way you should kickstart a product. So the top will not guarantee you to be a UX designer, but it's addressing anyone who builds software products as a part of their work. So what are personas? A persona is a user archetype you can use to help guide decisions about product features, navigation, interaction, and even visual design.
00:04:23.070 - 00:05:21.250, Speaker C: This is a quote and definition given by Alan Cooper, popularly known as the father of Visual Basic. Who has built this UX design tool. The first persona in the history of UX design appeared in 1983. She was called Cathy and she was a traffic manager for an advertising agency. During Cooper's long walks, he would fictionally talk to Kathy to find if what he was designing was still matching her needs. So what is a user persona? A persona is a fictional character which, like in a movie, has a goal set a purpose which tries to achieve is a fictional yet realistic description of a typical or target user of your product. A UX tool which helps you designers learn more about your users.
00:05:21.250 - 00:05:54.474, Speaker C: So what are not personas? User groups are not the same as creating the persona statistics and impersonal user metrics which are difficult to keep in mind. Those are not personas marketing segments. Masqueraded as personas. Not at all is not a list of tasks or duties. So, persona creation process. Let's go a bit through this. Ideally, the persona creation process should be a part of the research phase for a product or feature before the actual design process starts.
00:05:54.474 - 00:06:41.014, Speaker C: So field studies, surveys, longitudinal studies, interviews, and any other qualitative methods of user research should be conducted first to define characteristics of typical users. Once user research has been completed, personas and scenarios can then be derived from data. So let's go a bit through the persona creation process. Think of it when finding similarities, merge them together. It's best done as a team, not because it is difficult, but because it will garner more support for the use of personas from team members able to contribute to the process. So it will not be like magic. I'm the UX designer.
00:06:41.014 - 00:07:14.710, Speaker C: I go in a dark room and then I come up with this. And look, I created this masterpiece. You put it pin it up like a pin up work of art. So this is how you should engage your team. Eliminate any characteristics, groups that appear less important to the business. And once distinct roles emerge, add details to make the character more realistic, believable, and memorable. Keep your personas set small.
00:07:14.710 - 00:08:10.970, Speaker C: Have a minimum number of personas required to illustrate key goals and behavior patterns. There's no magic number. But if you're designing a consumer product and you have a dozen personas, then you may be making distinctions that are very important. Okay, so for example, if you're creating an electronic family calendar, your persona set might include a career mom, a stay at home mom, a career dad, and a teenager. If the career mom has the same needs as the career dad and also does all the family management as the stay at home mom does, you may be able to eliminate both the dad and the stay at home mom. So let's go through persona creation cheat sheet. It's a checklist so we can build a persona.
00:08:10.970 - 00:08:54.406, Speaker C: So, common pieces of information to include in a persona should be name, age, gender and the photo. But these aren't real demographics and there aren't important for this. It's just only to give more realness for the fictional character a tagline. This means describing what they do in real life. And you should avoid getting too witty, as doing so may taint your persona. So I know it's fun and stuff, but it's not really useful to get witty here. Experience level in the area of your product or service.
00:08:54.406 - 00:09:39.670, Speaker C: Context for how they would interact with your product through choice or required by job. How often would they use it? Do they typically use a desktop computer to access it or the phone or other device? Also map her goals and concerns when they perform relevant tasks speed, accuracy, thoroughness or any other needs that may factor into their usage. And some quotes to sum up the persona's attitude. Add life to the personas. But remember, they are a design tool first. Sometimes it's easy to focus too much on a persona's biography. Personal details can be the fun part.
00:09:39.670 - 00:10:32.120, Speaker C: But if there are too many of them, they just get in the way. And to avoid this problem, focus first on the workflow, on behavior patterns, on goals, environment, on attitudes of the personas, without adding any personality. Common mistakes that are making the persona die in their infancy, unfortunately, are some of these personas were created but nobody used them. This situation often occurs when people don't know how they can effectively use personas to impact their projects. Not everybody knows why this tool is useful. So it is up to us designers to educate and educate our stakeholders, our developers, our team. So we should illustrate the effectiveness of this tool.
00:10:32.120 - 00:11:20.966, Speaker C: Skeptical Leadership we already know our users. Of course, everybody knows their users and stakeholders know a lot about their customers. But personas can be a very good tool to define a clear picture of specific types of users. And having a specific user representation saves us from designing for ourselves and debating long hours on what the user wants. Without real facts, personas are created without involving the team in the process. And I was talking about previously that you should actually involve your team. Involving your team in the process of creating user personas doesn't mean that you will work shoulder to shoulder every step along the way.
00:11:20.966 - 00:12:10.600, Speaker C: You can invite them to the research process send recaps or activities undertaken in the persona creative process. This will help your team empathize and understand the personas aren't just artwork from the UX team. We already have a DAP developer persona. Why can't we just recycle it? And this is a very fatal mistake because organizations with more than one product often want to use the same personas over and over. So unfortunately this doesn't work because effective personas must be context specific. They should be focused on the behaviors and goals related to the product specific of a domain. So let's create a persona together.
00:12:10.600 - 00:13:15.082, Speaker C: And now I will ask you to unmute yourselves because I will use Miro and I have put together a little persona mapping and I would love you to help me create this fictional persona. Because we cannot do interviews beforehand but we are all hackathon participants and we know what this is about. We are going to make a persona for a Hackathon participant. And the brief is like this virtual hackathon organizers want to step up their game so they need to find out more about their users goals, pains and games. And we will start with the persona. Just putting an age, putting a name, putting a gender, creating a tagline. So I would really love you to start and help me now.
00:13:15.082 - 00:13:15.900, Speaker C: Okay.
00:13:24.370 - 00:13:28.382, Speaker A: What do we want to do? Just literally throw information at you?
00:13:28.516 - 00:13:29.598, Speaker C: Yeah, exactly.
00:13:29.684 - 00:13:30.830, Speaker A: Starting with age.
00:13:30.980 - 00:13:46.760, Speaker C: Yeah, we will start with age. What do you think Hackathon persona could be like around, I don't know, 24, 27, 30? Let's throw an age here.
00:13:48.650 - 00:13:54.600, Speaker A: Everybody, you can unmute yourselves and inform this map. Doesn't matter who.
00:13:56.410 - 00:13:57.906, Speaker D: I guess we could.
00:13:58.028 - 00:13:59.930, Speaker B: Be the millennial generation.
00:14:00.590 - 00:14:27.022, Speaker C: Perfect. 1030 it is. So let's give it a name. Let's say Jeff. We have Jeff. He's a participant, he's 30, he's a male. Let's bring Jeff's picture.
00:14:27.022 - 00:15:05.694, Speaker C: Don't worry, this is not a real person. It's generated by an AI. So Jeff is completely anonymous and stays safe. Let's give Jeff some tagline. I don't know. Let's say I love participating at hackathons and here you could help me because you know, what's your motivation or things like that. So I would love you to help me here.
00:15:05.694 - 00:15:07.790, Speaker C: Let's give Jeff a tagline.
00:15:14.700 - 00:15:15.450, Speaker B: Okay.
00:15:16.000 - 00:15:36.610, Speaker C: Because they are challenging. Okay. So we'll continue with Jeff's personality. Anyone want to help me here?
00:15:39.940 - 00:15:42.100, Speaker E: Jeff loves dogs.
00:15:42.600 - 00:15:43.108, Speaker B: Okay.
00:15:43.194 - 00:15:44.820, Speaker C: Jeff loves dogs.
00:15:45.160 - 00:15:46.230, Speaker E: Start there.
00:15:49.720 - 00:16:36.828, Speaker C: Loves dogs. He has a bubbly personality. And let's say Jeff is catalyst in his group. So he's sort of, let's say early adopter. Let's go ahead and build Jeff's interest. He likes attending East Global hackathons.
00:16:37.004 - 00:16:37.730, Speaker B: Perfect.
00:16:50.700 - 00:17:23.620, Speaker C: Let's say he wants to find a VC maybe for his product. Could we say that? Or maybe he wants to find a team. What do you think? It I think this should be more like goals, interest, solidity.
00:17:26.760 - 00:17:42.650, Speaker B: Is Jeff interested in any specific industries or use cases? Is he focused on supply chain stuff or is it a money finance guy? Or is it a Dow person?
00:17:44.220 - 00:18:03.250, Speaker C: We should add this here. Maybe he's interested in D five. What else could Jeff be interested in?
00:18:03.940 - 00:18:10.130, Speaker B: Does establishing credibility, like having his idea be established credible in the community count?
00:18:12.440 - 00:18:41.230, Speaker C: Yeah, but this might be a goal for Jeff because I think this is why he would go to the hackathon, right? To establish himself in this.
00:18:45.520 - 00:18:46.270, Speaker B: Perfect.
00:18:48.180 - 00:19:34.810, Speaker C: Let's leave the interest now, because I think we have enough. But let's cast our minds back a bit because we are talking about virtual hackathons. So let's say he has these goals. We could add another goal, but maybe in pains we can say Jeff misses human connection and he feels like he can sell his product easier from person to person communication than virtual communication. Might that be a good pain? A good pain point? Okay.
00:19:37.500 - 00:19:38.250, Speaker B: You.
00:19:59.560 - 00:20:12.760, Speaker C: What other pains could Jeff have towards the fact that he's now attending virtual hackathons and not in person hackathons?
00:20:17.820 - 00:20:19.464, Speaker B: You have time zones.
00:20:19.512 - 00:20:20.540, Speaker E: That's a good point.
00:20:20.690 - 00:20:40.960, Speaker C: Yeah, good point. Access to mentorship or resources. That's goal or a pain. Access to mentorship.
00:20:43.960 - 00:20:45.396, Speaker A: I was going to say pain.
00:20:45.578 - 00:21:19.088, Speaker C: Okay, perfect. We'll put it there then. He cannot access mentorship. So this is why he's participating to hackathons. Somehow accessing mentorship is his end goal, even though it's starting from a pain point. But we will keep it here because we can turn it afterwards in an opportunity. Okay, any other pains that come into your mind?
00:21:19.254 - 00:21:51.690, Speaker B: Well, maybe since Jeff he has a bubbly personality and he seems to be like an extrovert of sorts, that these remote hackathons don't really give him that same level of networking and the serendipitous kind of moments, all of that. And I guess there's also just fundamentally less chance that he'll meet dogs as well, since that's a thing.
00:21:52.380 - 00:22:57.790, Speaker C: Okay, lovely. So let's make a skill set for Jeff. So he's a very good communicator. Let's give him another skill himself, keeping himself up to date with new ethereum frameworks. Let's see. Mike, does this sound good?
00:23:00.420 - 00:23:17.076, Speaker B: Yeah, I was going to ask. I know that we wrote that Jeff loves participating in the hackathons, but is this his first or his 10th Ethereum hackathon? How new to this ethereum space is.
00:23:17.258 - 00:24:13.880, Speaker C: Well, we should think of this and put it in his context. So maybe we can say here, maybe Jeff is an OG in hackathons. Or maybe Jeff has discovered these hackathons now, so he might have different goals. But apparently since he wants to establish himself in the community and wants to find a VT, he might be new. Right? So we could say it's his first time. Are you guys writing in the chat? Because I can't really see it.
00:24:14.030 - 00:24:15.960, Speaker E: Not too much. There were a few comments.
00:24:17.500 - 00:24:18.250, Speaker B: Um.
00:24:21.980 - 00:24:55.620, Speaker C: So maybe maybe because you are participating to hackathons, you could think a bit of yourself. This is what we wouldn't do this usually because we are not our users. But right now all of us might have a ton of insights. So you could help me with some other insights that you might have and we could build Jeff better. What about his tech savviness?
00:25:04.300 - 00:25:14.010, Speaker E: Jeff has done some initial Solidity tutorials, but they're not say they're just beginning to learn.
00:25:21.520 - 00:25:40.930, Speaker C: Perfect. So could it be in Jeff's goal also to find more skilled devs and learn a bit more, step up his game in Solidity? Maybe.
00:25:45.560 - 00:25:49.460, Speaker B: Has Jeff ever deployed a smart contract?
00:25:53.100 - 00:26:39.050, Speaker C: Let's think, let's brainstorm a bit here. How many DAP developers or smart contract developers would start doing a smart contract on the spot for a hackathon? So probably we should I don't know, he may have written a smart contract, at least one, to see how it works before joining a hackathon. No?
00:26:40.700 - 00:26:50.670, Speaker B: Yeah, that makes sense. Yeah, I was going to say, let's say Jeff has he's played around with some smart contracts in like remix or something like that?
00:27:02.420 - 00:28:19.928, Speaker C: Somehow we've developed a bit Jeff and we know some things about him. Usually this should have been data driven, so it would have been after doing some affinity mapping, going through the data we got from interviews and bucketing characteristics together for this right now, it's just like this is usually called a proto persona. This is only based on our assumptions, but we should actually afterward try to really challenge our assumptions and do little interviews, maybe guerrilla testing, maybe guerrilla interviews. But anyway, we shouldn't stay with this type of proto persona because it's very biased from the start. But on the other hand, in a hackathon, this would really help us to know who are we writing, who are we building the product that we are doing. So this could be a good tool. When you're starting a project for a hackathon, maybe it's an idea you're brainstorming with the team.
00:28:19.928 - 00:29:13.610, Speaker C: This would help you a lot. But never forget, you really have to go through user research and user interviews afterwards. So let's go back to here. So this is how usually a persona should look like afterwards. This is a DAP developer persona made for a monitoring product. And here he has some goals, wants to be more productive, wants to have everything under the same software, a strong need to order and bucket in a workflow. His frustrations, which are equal to pains, he has too much manual work writing their own test.
00:29:13.610 - 00:30:05.912, Speaker C: It is very hard to extract the output of the software into something more usable. The possibility of an attack to be hacked is big and that is a big responsibility on the shoulders having these frustrations. If you can spot this type of patterns, then you can transform them into opportunities for your product. And this means that if there is a need on the market, you will come with something that will help people. And because of this, they may adopt better your product because they feel like you are actually doing something for. And I recommend you this book. It's called UX Fundamentals for Non UX Professionals.
00:30:05.912 - 00:30:17.712, Speaker C: It's a great book. You can find it on Amazon. And this is me. Thank you for participating. I hope you like this and I will stop my screen share.
00:30:17.766 - 00:30:18.370, Speaker B: Now.
00:30:22.660 - 00:30:58.268, Speaker A: Do we have any questions about personas? Yes. That was awesome, Sasha. Thank you. And dare I say, one of the most engaging things we have achieved in a virtual setting so far, with all of the events going virtual. So that was awesome. Yeah. Any questions on personas? From the teams or from anybody, really? If not, we can I do have one question.
00:30:58.268 - 00:30:59.150, Speaker A: Yes.
00:30:59.680 - 00:31:15.680, Speaker E: I'm just curious. At what point in the design process is it typically used, like way before you've even thought of exactly how the product is going to be framed? Or is it sort of an iterative? You keep developing this person as you kind of include more features.
00:31:17.860 - 00:32:19.248, Speaker C: You shouldn't develop the person while you include more features. Actually, you should somehow try to do the features matching this persona. So you should start doing the persona before you're actually developing the product. And every time you work on a user journey or a workflow flow or anything like that for your product, you should somehow try to step in your persona's shoes and think, would Jeff really go to a virtual hackathon again if he didn't feel like he can get his goals? No. Yes. And then you keep on developing and iterating your product and try to respond to his needs or her needs. But it's very important to have actual data from real users and not fictional.
00:32:19.248 - 00:32:26.040, Speaker C: Even though the persona is not a fictional person, it has real traits.
00:32:29.100 - 00:32:29.800, Speaker B: Yeah.
00:32:29.950 - 00:32:31.192, Speaker A: So I have a question.
00:32:31.246 - 00:32:32.280, Speaker F: This is vena.
00:32:33.180 - 00:32:39.544, Speaker C: So for our product, we would have multiple personas and they would be various age groups.
00:32:39.592 - 00:32:41.470, Speaker B: So how do you deal with that?
00:32:42.400 - 00:34:16.780, Speaker C: Well, sometimes age groups might only be just to make it more real. Sometimes age groups might actually affect the way a persona has its goals and needs. So if you're developing, I don't know, scooter app, or let's think of something that is only for elder people, you might have it affected. So I think you should have a core persona and try not to try to make the product for a core persona, because if you try to make it good for all of them, you might end up with a patchwork toy boyu type of product. So you should definitely choose it very well and understand who really is your core user and who do you really want to address. At the moment, I don't really know much more about your product except of the fact that you try to market it or develop it for a really big age range. But I don't know more.
00:34:16.780 - 00:34:21.980, Speaker C: So I might if it's more like a decentralized Amazon.
00:34:22.640 - 00:34:24.990, Speaker A: Okay, so.
00:34:26.980 - 00:35:39.748, Speaker C: What are you actually asking me if that is a problem. If you have more type of many age groups, maybe you could think of accessibility. If you have elder people, they might not see very well and they might be having technology angst because they don't do things I don't know. They don't have all of this knowledge. So you have to think of them which are their goals, which are their things, and try to shape it to make room for them too. But think of it what's the percent of the elderly and what's the percent of the youngsters? If it's 80% youngsters and 20% elderly, I think you should concentrate on the youngsters. So sometimes you have to win some and lose some.
00:35:39.748 - 00:35:47.610, Speaker C: You cannot make everybody happy. So you have to make this decision and go by it.
00:35:52.620 - 00:36:32.790, Speaker E: Thank you. I would say sorry to intervene like that. And I don't know how much you want this session to be interactive with everyone else, but I would say in your case, Benna, the age is not the issue. Your persona should be focused on. Why are people going to an Amazon decentralized Amazon, right. What is the problem they're trying to solve? Right. Are they looking to avoid the classic or the traditional Amazon platform? Why are they there? And then think of the age and issues associated with age and goals associated with age.
00:36:33.640 - 00:37:24.772, Speaker B: Yeah, to build on what Bogdan was saying, I think one of the things that I do as know, in addition to personas that I put together, is there's something called the jobs to be done framework that some of you might have heard of. And I think that this is another thing you can add to your personas that can kind of tie disparate groups together and figure out how they relate. So in a lot of cases, it doesn't matter so much what their age is as long as they have the same job that they're trying to get done. So that job might break down along age lines. Right? So 16 year old kids in America have a job to be done where they need to get a driver's license. And that's like a very age related thing. And in some cases age doesn't matter as much.
00:37:24.772 - 00:37:34.250, Speaker B: But I think yeah, as Bogdan was saying, one thing to think about is what job are the people trying to get done and does that relate to age?
00:37:34.560 - 00:38:17.050, Speaker E: That's an excellent approach right there. And here's the book if you want to follow the script. And I think somebody else asked when is the right time to build a persona? The persona gets developed over time. You start with the problem. Are you trying to solve a problem? And you go after that problem by talking to people, getting involved in their life, doing all this exploratory research or what we call discovery and product development. And that's how you build persona over time. And that adds to the details of jobs to be done, goals, pain points, and all that.
00:38:23.410 - 00:38:35.410, Speaker A: And Heather has linked the framework in the chat, so that's super helpful. And does that also answer your question? HK.
00:38:38.410 - 00:38:39.270, Speaker C: Ish.
00:38:43.130 - 00:38:55.630, Speaker A: I don't know if anybody wants to take a stab at this one. How do you decide between two contrasting personas if you don't have any data yet? So like hardcore devs versus Supernoobs.
00:38:59.580 - 00:39:00.970, Speaker E: Just talk to someone.
00:39:03.100 - 00:39:04.330, Speaker A: Like, pick one.
00:39:05.100 - 00:39:40.768, Speaker E: Start with one person, right? And that person will tell you if you're on the right track or not. And then you go to the second one that's hopefully on track. And over time you end up talking to a lot of people. And then you develop the persona, and the dimensions of the persona get more granular. And I think that's important to understand that you react to that persona when your product goes out. You build your product and then you have people react to it. You add more quantitative data, more qualitative data, through usability, research, interviews, all that, and then you change your goals.
00:39:40.768 - 00:40:06.828, Speaker E: You might adapt your product. You might pivot your company through those conversations. So it's not a static thing. It's not a thing that you do in June 2018 and you stay with it until July 2025. All personas evolve and they should evolve. If your persona is not evolving, then you're not doing anything, you're not learning.
00:40:06.914 - 00:40:08.030, Speaker B: Anything more.
00:40:11.140 - 00:40:20.960, Speaker C: Which is a big mistake, as it might mean that you have stopped iterating and you think your product is done and it's never finished.
00:40:21.300 - 00:40:22.290, Speaker E: That's right.
00:40:23.220 - 00:40:40.230, Speaker C: Says it very well. You should evolve the product, but also think that you're not staying the same from one year to another. So how could the persona stay the same? So you have constantly have to talk to your users and update everything.
00:40:51.120 - 00:40:52.112, Speaker F: It okay.
00:40:52.166 - 00:40:56.150, Speaker A: And we have how do you validate an idea if people aren't familiar with it?
00:40:57.160 - 00:40:58.390, Speaker C: Who's people?
00:40:59.640 - 00:41:01.110, Speaker A: Kate, do you want.
00:41:02.840 - 00:41:12.312, Speaker F: Yeah. Yes. So my whole thing is that I want to make Ethereum and using cryptocurrency more accessible to people who aren't using.
00:41:12.366 - 00:41:13.370, Speaker A: It at the moment.
00:41:13.820 - 00:41:26.780, Speaker F: They are not interested in it. It is too confusing for them. How do you actually validate the idea if the bridge is so big between the non users and users?
00:41:27.760 - 00:41:58.424, Speaker E: I don't think you can force validation there. And that's a huge problem for the Ethereum space and for crypto space in general. There's nothing to validate there. The only validation you get is do they understand it or not? Do they like it or not? Validation doesn't mean convincing the user to adopt something. It only fits when it fits into their mental model. And I think that's another important detail to understand. Go ahead.
00:41:58.622 - 00:42:11.736, Speaker F: My hypothesis is that if easy enough for me to make decisions and to use it, then more people will use it. So that's what I want to validate.
00:42:11.848 - 00:42:13.660, Speaker A: But what is the main decision?
00:42:14.400 - 00:42:16.780, Speaker E: What is the main decision to validate.
00:42:18.640 - 00:42:30.640, Speaker F: What I've boiled it down to is that basically how can you grow your money? Because that's all people use crypto for what it seems is to grow assets.
00:42:31.220 - 00:42:51.976, Speaker E: So that's a great hypothesis. Formulating that hypothesis. I want to grow my money. Right? So you go talk to people and you ask them, how do you grow your money? Do you want to grow your money? And the answer is hopefully, yes. Okay, how do you grow your money? And then you go, okay, I go to a traditional broker. I go to I trade by myself whatever instrument I use, financial instrument to.
00:42:51.998 - 00:42:53.930, Speaker B: Grow my money, right?
00:42:55.100 - 00:42:59.788, Speaker E: And then you ask, okay, have you ever considered ethereum? Have you ever considered crypto space?
00:42:59.874 - 00:43:00.172, Speaker B: No.
00:43:00.226 - 00:43:59.756, Speaker E: Okay, why? And now you are getting closer to the problem. Why are you not considering lack of knowledge, technical background, whatever it is, right, but then it gets to the proof because someone will tell you, well, I've been there and I'm not considering ethereum or any other crypto space because it's not growing my money at the rate I'm currently growing. Right. So that's a barrier you need to pass and you need to show evidence, right? Well, I can guarantee you 20% instead of 8% or 10% you get with your broker. But then you have to provide evidence because then it's in the context of but I see a lot of volatility. When is that person entering crypto space? Right? How long have they been there? What's their past experience? Because then you see personas along the way, people that started five years ago and they're happy. People that started two years ago and they're done.
00:43:59.756 - 00:44:25.828, Speaker E: Why? Because I started with Bitcoin, I thought it's going to go to 100,000, I bought it 10,000, blah, blah, it's down. So you are not solving that person's problem. The pain point is still there. I'm not growing my money. What you're saying is against the evidence I have. So again, it's validating. You can only validate as far as you match the same mental model.
00:44:25.828 - 00:44:33.108, Speaker E: If you don't match that, then you have to convince and that's a different kind of tool, marketing, blah, blah.
00:44:33.284 - 00:44:36.200, Speaker F: So it's actually taking smaller steps.
00:44:36.780 - 00:45:07.780, Speaker E: Oh, for sure. Don't jump to five years from now. We're going to do this. Those roadmaps of five years from now are just a joke. Look at healthcare, right? If you ever worked in healthcare with any healthcare company, five years ago, they all had that thing on the wall, the future of healthcare. 2020 is going to be the future of healthcare. And look where we're now, right? Hypothesis destroyed.
00:45:08.520 - 00:45:08.884, Speaker B: Right?
00:45:08.922 - 00:45:15.136, Speaker E: So small steps, incremental development, not five year visions.
00:45:15.328 - 00:45:15.684, Speaker B: Yeah.
00:45:15.722 - 00:45:28.330, Speaker F: So it's more like a GPS trying to autocorrect towards a vision, but the vision keeps changing. Like the rainbow at the end of the or the pot of gold at the end of the rainbow. Thank you, that makes so much sense.
00:45:30.720 - 00:46:25.292, Speaker B: One thing I was going to add that I do sometimes. Is like in this case, that growing the money is kind of the job to be done. In this case, I don't know. There's also another book that I've been rereading lately called The Innovators Dilemma, which came out in the mid ninety s and was kind of on the front edge, maybe, I guess you might say, before modern product design and UX was kind of developed and used and this was like pre the Internet. But in it he kind of lays out jobs to be done before it's called Jobs to Be Done. And he talks a lot about clayton Christensen is the author. He talks a lot about the value of watching people use products rather than asking them about them.
00:46:25.292 - 00:47:15.752, Speaker B: And that when you're working with disruptive technologies that people have a hard time. And this is what Ethereum runs into in a lot of cases, they have a hard time imagining how they might use something. And so you really have to observe them using either Ethereum or things like it, right? So they're not already a user of Ethereum, so it's hard to get them to observe them doing it. But the thing I think about is testing comparable products that are already in market that aren't your product to try and get insights. So something I would do is talk to Robinhood users or something like that, right, where they have crypto present, and find out how many Robinhood users are buying ETH in addition to the other things that they're buying in that app. Right. You can buy traditional stocks and ETFs and everything in Robinhood, but you can also buy Bitcoin and Ethereum.
00:47:15.752 - 00:47:50.008, Speaker B: And it'd be interesting to know from a Robin Hood ten or 15 Robinhood users, have they ever clicked on those Ethereum and Bitcoin buttons in that app? Like, why haven't they? Right? And you can pick up from another product team's product as a jumping off point for prototyping and gathering insights about what you want to do, right. So you don't retrace some of their failures and stuff like that. So that's another way to kind of jump start the process, I think.
00:47:50.174 - 00:48:11.640, Speaker E: Another great point. This is all about context. Contextual inquiry is a method of getting there. But again, you have to be close to the users. You have to spend time with them as much as you can and be there with them. Experience the problem, seeing the problem firsthand and seeing the context of how they're trying to solve.
00:48:12.100 - 00:48:17.090, Speaker F: That's my approach. And now I'm in lockdown. So what now?
00:48:17.700 - 00:48:40.324, Speaker E: There are a lot of remote tools if you can recruit people through whatever channel, there are tons of remote tools where you can observe and discuss, and they have the time, hopefully some of your users have the time to chat. So use the opportunity to talk more and discover more, actually.
00:48:40.522 - 00:49:27.530, Speaker C: But it will recommend make a screener first of all, and try a bit to think, which might be the user you are targeting and then try to find them out. Because there are a ton of websites with people who are willing to respond and work remotely. So it's not a problem. You can interview them via zoom and you can screen them and recruit them. But it's very important not to talk to people who wouldn't be actually giving you any good information concerning your product. And also you are saying something that you want to help people.
00:49:30.220 - 00:49:31.880, Speaker B: But people.
00:49:32.030 - 00:50:21.140, Speaker C: Don'T really ask for help. So maybe we should take a step back and think maybe if it's not needed yet, maybe I shouldn't do it. I mean, when you're starting something, you should actually make it. Not because you fall in love with your idea or it sounds really cool because it happens to everyone, but you have to validate it. But not validate as in, I like this, let's validate this. How might I shove my idea up my user's throat so you don't have to do that and think which are the pains and fears they are facing. Maybe this could paint you a picture.
00:50:21.560 - 00:50:22.310, Speaker F: Yeah.
00:50:24.300 - 00:51:30.476, Speaker B: I wanted to clarify that though, I said I think ideally the best case is quote unquote, to watch the user use the product. I think it is also perfectly fine to still interview users who have used a product. I think just the distinction that at least Clayton Christensen draws in his book is that you want to not ask. People mean I still believe it is valuable to do generative research like pre product building. But the real insights typically come once something has been in their hands and they're responding to it, and over time, sitting with it, they figure out how it fits into their life. That doesn't actually mean necessarily watching them in a physical setting, watching them use the product, although that is also really good if you can do that. But simply talking to people who have spent time with a product or in a context and talking to them about their experience.
00:51:30.476 - 00:51:55.190, Speaker B: So they're not speculating on what they might do anymore. Right. And I think that's the important part because people end up speculating on how they might use something. And then I think all of us typically, once it's in your hands and you're using it day to day, it turns out your own speculations about how you would behave are. So I think that's the important part.
00:51:55.880 - 00:52:22.616, Speaker E: I think both Sasha and Johnny are right on Sasha's side. You want to target your research. If you have a project that you want to get done, target your users, target your research. At the same time, talking to people that are not necessarily a perfect overlap with your product or solution or idea are a good source for generating new ideas.
00:52:22.728 - 00:52:23.004, Speaker B: Right?
00:52:23.042 - 00:52:48.230, Speaker E: So you start with idea, you start with a problem and then you realize, well, actually, people don't experience the problem I'm posing, they're experiencing a different problem, and that's worth solving for, right? So you pivot from there, and that's still beneficial. It's actually highly valuable. Think of all the companies that started with an idea pivoted and became successful, Twitter included or whatever. I think there are hundreds of cases like that.
00:52:49.740 - 00:52:50.810, Speaker F: Thank you.
00:52:55.990 - 00:52:56.498, Speaker B: Awesome.
00:52:56.584 - 00:53:06.550, Speaker A: Thank you, guys. Do we want to move to Johnny and chat about identity?
00:53:07.450 - 00:53:26.410, Speaker B: I had one small question, possibly go how often, just like, as a general rule, do you revisit these kind of things as far as it's good to keep them up to date, but you can't keep them up all the time? Can't revisit them all the time. Is there like, a cadence you would recommend for evaluating your personas?
00:53:29.010 - 00:54:07.562, Speaker E: It really depends on your development cadence, right. What methodology you use, what flavor of Agile Scrum, Kanban, whatever, and how those tracks of development, discovery, design are layered. And so if you test prototypes every two weeks, then you might find out that talking to people every two weeks gets you in a different place. And that's when you update after three, four, five months of conversations. And not just conversation. Let me make this clear. Interviews are not the only UX research tool out there.
00:54:07.562 - 00:54:39.000, Speaker E: There are hundreds of them. But by doing that on constant basis, you learn more. So a rule of thumb, update your persona when you learn something new, but keep a cadence, keep a flow of research. Don't give up on it. And yeah, basically stay close to your users through whatever means you can, as long as you can.
00:54:43.280 - 00:54:43.740, Speaker B: Awesome.
00:54:43.810 - 00:54:55.632, Speaker E: Thank you. Hi, everyone. I have a last question. Sorry for that. I would like to know if you fit your personas with quantitative data, if.
00:54:55.686 - 00:54:58.530, Speaker B: The product exists already.
00:54:59.460 - 00:55:17.400, Speaker E: Oh, for sure. And you should. Right. So it depends on how you collect that data, how good it is. Right. So collecting data alone is not going to give you a lot of answers. You still have to process, analyze that data, clean it up, and match it with real behaviors that you see in the real world.
00:55:17.550 - 00:55:18.200, Speaker B: Right.
00:55:18.350 - 00:55:27.192, Speaker E: So looking at quantitative data in isolation, it can be very misleading because the data is not going to tell you why.
00:55:27.326 - 00:55:27.912, Speaker B: Right.
00:55:28.046 - 00:55:45.824, Speaker E: You can look at a lot of numbers, a lot of Excel files, and they will tell you what people do, but they're not going to tell you why they do it. So understanding that through qualitative research is as important, if not more, but yeah, combine them both.
00:55:46.022 - 00:56:00.070, Speaker C: So quantitative is just like red flagging the issues and then you deep dive with qualitative research. I think this is what Bogdan was saying also.
00:56:07.810 - 00:56:09.630, Speaker A: Does that make sense, Diego?
00:56:12.590 - 00:56:13.660, Speaker B: Yeah, sure.
00:56:14.670 - 00:56:17.610, Speaker E: Totally agree. Thanks, Aladd.
00:56:20.130 - 00:56:20.880, Speaker B: Cool.
00:56:24.770 - 00:56:50.750, Speaker A: Do we want to move on to Johnny and he can chat identity and then have A-Q-A round for him, and then we can move into any specific Q A or mini audits and so Johnny yeah, so I actually aka the screen.
00:56:51.120 - 00:57:49.710, Speaker B: Yeah. So I was going to actually propose a bit of a Pivot. We don't have to, but I realized I had a presentation sitting here that I'd given at Build ETH about a year ago about the UX UI fundamentals of Web three, which might be more relevant to this being a design thing, or we can still talk about identity, which is less design focused. But what do you think? Did anybody care? Or does anybody think one would be better than the other? Because I can talk about identity all day and we could talk about identity after, but also UX UI, since this is a design thing and you all are currently building stuff. Could be. I just worry that maybe not everybody needs to know the identity stuff since some of it might not be relating to it. But I just want to throw that out there in case.
00:57:51.700 - 00:58:20.664, Speaker D: This is John here with they both sound interesting. I was curious about the Identity piece, though, because we'll have users that we want to have persistent reputations and have them somehow carry that identity across different places. Like, if it's a seller, they might be selling on Facebook, Craigslist Shopify, and their own website and our global marketplace. So we're not really sure how to handle that piece yet. So I don't know if Identity on that.
00:58:20.782 - 00:59:03.272, Speaker B: All right, well, then okay, let's stick to the plan. I'll run through some identity stuff first, and if we I know that this is a pretty long session, so we can always touch on some of the or I can just even give you all the deck a link to the deck and you go through it on your own time around the UX UI stuff of Web three. Okay, cool. Let me pull up identity presentation. Let's see. Grab it here. I thought we were going to end up Pivoting, so I didn't have it open.
00:59:03.272 - 00:59:13.480, Speaker B: So let me give me a second to find the identity presentation here's.
00:59:21.910 - 00:59:32.180, Speaker A: Yeah, we can make sure that we send them to everybody who signed up. I think that would be useful. The decks, I mean.
00:59:36.760 - 00:59:37.510, Speaker B: Cool.
00:59:41.720 - 00:59:42.710, Speaker A: All right.
00:59:47.520 - 00:59:55.660, Speaker B: It hold on. Why is the wrong one that one accidentally has about 1000 blank slides in it somehow?
01:00:23.160 - 01:00:25.590, Speaker A: Johnny, the suspense is killing us.
01:00:28.680 - 01:00:46.156, Speaker B: Sorry. I got it now. Great. So let me share. I'm going to turn my camera off just for this, so I don't get.
01:00:46.178 - 01:00:48.510, Speaker E: Any lagging or whatever.
01:00:50.000 - 01:01:27.290, Speaker B: Okay, great. So everybody see my screen? Good. Yes. So, yeah, I work at Uport, which is a part of consensus. So I've been working at the intersection of Identity and Blockchain, stuff like that, for about five years and working on Identity, decentralized, self sovereign identity stuff for about three years. And I'm a product designer, UX UI, kind of also design strategy stuff. So kind of a generalist in that sense.
01:01:27.290 - 01:02:29.710, Speaker B: And so for this, the way I started this off the last time I gave this is I want you to imagine this is a new product in development called DeFi credit. And so here we have what it would be, a login screen for something called DeFi credit. So you're seconds away from getting the best decentralized lending rates. So one of the big problems we know in DeFi or big use cases potentially, or opportunity areas, you might say, is the ability to offer under collateralized loans and peer to peer loans like the traditional. This is the type of loan we typically think in the traditional world. And we haven't been able to bring this to DeFi yet. So what you can do here, you connect your metabask DeFi Credit would like to connect to your account.
01:02:29.710 - 01:03:00.084, Speaker B: And so you click Connect, then you're going to get a Continue with Facebook button. Then you're going to know it's going to ask you, do the login. I'm going to continue as Johnny. You're going to get a socially derived credit score here, 656. And you're going to have this access to loans. However, okay, so this is fake. This isn't a thing that we should actually do.
01:03:00.084 - 01:04:15.532, Speaker B: And I just use this to highlight the problem. So this is something was a mock little experience that I put together because I had seen this idea at a hackathon in the past, which was to use social media stuff as a vehicle for creating some sort of credit score of some sort that we could use in the DeFi space. But this is a bad idea and we'll talk about that. So I want to talk a little bit about the reason that this is a bad idea, is I'm sure you all are all might be familiar with Cambridge Analytica. So for those not familiar with Cambridge Analytica in the 2016 US elections, cambridge Analytica was a data and market research firm that worked with the Trump campaign. They worked with the Brexit campaign, specifically the leave side of the Brexit campaign, and to draw some insights that they could from publicly available data for marketing the campaigns. Right.
01:04:15.532 - 01:05:17.916, Speaker B: So what would happen if this is what this screen said, right? There's a good chance that this will elect Donald Trump. What if that was the big red box when you're about to connect your Facebook? Would this affect the user experience? Right, my estimation is most likely, yes. This would affect people clicking on that button. And this is where we get into ideas around consent and privacy that are going to be very important as we move into a DeFi world. So I wanted to talk about surveillance capitalism and identity. And these are the things we need to keep aware of when we build our DeFi systems here. So in the past, the way identity kind of worked was you were given identities from servers, right? So you might have your Amazon identity and your Facebook identity.
01:05:17.916 - 01:06:02.860, Speaker B: And these things were given to you. This is what happens when you sign up, right? In the traditional sense you get to choose an email or whatnot. So that feels like a choice. But really as many of us probably here already know on the back end they're giving you an Identifier that they are going to associate a lot of data about you with. What we want to do is we want to invert this model. So there's this interesting we talk about decentralizing lots of systems and we talk about decentralizing identity. But another way to frame this is also to think about recentralizing identity around the user rather than around the servers and the systems.
01:06:02.860 - 01:07:12.920, Speaker B: So in this case identity is you are giving your identity to these different services and the flow of consent kind of or the power structure here kind of inverts. So there's this concept called responsibilization which this kind of alludes to. So responsibilization is just when a change in a system happens and the responsibilities that fell with one actor get shifted onto another actor. And so when you change systems this can happen. And if this happens without telling people and the people whose responsibilities are being moved around aren't aware because about that change, this can present a lot of problems. The thing that breaks on chain stuff is putting personal data on chain. So this is what is going to actually end up breaking blockchains if we're not careful.
01:07:12.920 - 01:08:30.160, Speaker B: This gets into I want to talk a little bit about this paradox of privacy. So the easiest thing in a lot of the early days of Ethereum, the idea was to I think I talked to some of the what was the name of their project? I can't remember, maybe I shouldn't say. But in the early days of Ethereum there was a lot of people trying to do decentralized Marketplaces, decentralized Airbnb, decentralized Craigslist. And one of the initial ideas for how to accomplish that was to simply make the listings as part of on chain. You submit your listing to a smart contract and you get like an on chain listing of your house or your car or something like that. And then people can respond to that listing via web3. And this turned out to be a non viable way to do this because of the personal identifying information that goes on chain.
01:08:30.160 - 01:09:57.870, Speaker B: And in conversations with some of those teams around that, there was this idea that people actually don't care about privacy, right? If they cared about privacy they wouldn't use Facebook, they wouldn't use a lot of the services that they use. But this then kind of highlights something in behavioral economics called the risk perception gap, which is relevant to trying to solve this privacy paradox as we call it, around identity. So the risk perception gap is this idea that the way you kind of frame risk is going to change the outcomes, is going to change the way people behave in a given scenario, even though the risks are the same. Right? So this is something daniel kahneman and Amos sversky, they wrote about it in, I think what was it? Thinking fast and slow. Is that their book? I can't remember. But one of their books, they won a nobel prize for some of this research. But a lot of people, if you frame something as an opportunity, if you flip a coin, you can get $5, or if you flip the coin, you have the chance to lose $5.
01:09:57.870 - 01:11:16.916, Speaker B: However you frame that, even though the ODS and the outcomes will be the same, they will behave differently. They'll either take the bet or not take the bet. And I think that this is a little small insight that we can use to start understanding how to get around this privacy paradox, especially as it relates to DApps and on chain data and things like that. So there's this thing that a lot of people say whenever I bring up privacy to many people in user interviews, I hear a lot that I've got nothing to hide, so why should I worry? So we also have heard in those same interviews when people tell us that they've got nothing to hide. Me and my former design partner, we did a lot of research around this stuff, and hold on 1 second, I need to get this chat window out of here so I can see this whole slide. Okay, so we heard that if facebook, they would tell us, if facebook has my data, I'm okay with it. But if facebook is selling it to someone else, I'm uncomfortable because I don't have control over it.
01:11:16.916 - 01:12:26.168, Speaker B: And so this kind of led us down this path. Know, what people really care about is feeling in control and having some agency in these systems, and they'll make different choices based on whether or not they feel like they're going to have control or not. Not necessarily directly about the privacy and the specific information being disclosed. In design. In UX, there is a field of a set of patterns, I guess, called dark patterns. And so dark patterns in UX are things that have kind of arisen in application design or service design that are designed and done so for the benefit of the system or for somebody other than the user. Right? And one of the most prominent ones, especially the one that relates to what we're talking about now, is something called privacy Zuckering, based on mark zuckerberg.
01:12:26.168 - 01:13:35.490, Speaker B: And this is what I was showing off in that initial set of slides around that mock DeFi product, which was that was privacy. If we, if I went all the way back, actually, I'll do that really quickly, just so this connects. So if I go all the way back, here what this is saying, right? DeFi credit, this little piece of text here is actually what you're consenting to in this step. So DeFi credit will receive your name, profile information, friends list, friends profile information, page likes and email address. That one bit of information. Friends profile information was what Cambridge Analytica exploited when they ran their whole campaign. So what they did was they actually had a personality quiz that they put out and people on Facebook would sign up to take this personality quiz and they would answer questions about themselves and give it access to their profile information.
01:13:35.490 - 01:15:34.536, Speaker B: But the way the Facebook API worked, you actually could consent to giving that application all of the information that you had access to from your friends, right? So if they had made things public to you, you could then make it public to this app and people were just out of almost muscle memory hitting this continue as Johnny button and consenting and not realizing what they were consenting to. And this is the exploitation of this dark pattern that allowed so much more information to be gathered than anybody thought was happening. So this would be a violation of informed consent on the part of Facebook and the app. Let's jump back over to run through all these little animations. So yeah, that's privacy is and it's these dark patterns that make design a moral act, right? So the fact that you can design things in such a way that is harmful or exploitative means that now when you design your applications, there is some moral component, right? The choices you make have a real effect and can cause harm, which they are not simply just arbitrary objective choices. In the case where you might say well, who's to say what's wrong and what's right here it's ultimately the user who has to decide, right? But we know that the way you frame things and the way you set things up in an interface can exploit people. And this is why we are mad at services like Facebook or Amazon or Google a lot of times.
01:15:34.536 - 01:17:08.900, Speaker B: So what we also want know I would recommend us to think about is that privacy is actually a spectrum. There's no such thing as pure privacy, there's no such thing as pure anonymity, right? Even in ethereum you throw around the term anonymous a lot, but really you're pseudo anonymous or pseudonymous. I mean, and what we can do is start thinking about privacy as this spectrum and moving along it and moving backwards and forwards along it in any given context. So we really want to give users control to move along this spectrum is the ideal that we're shooting for. This brings me to this idea of contextual integrity around identity. And this is Helen Nissenbaum is the researcher who kind of talks about this. And it's the idea that contextual integrity is this idea that it is about information flows and what was agreed to as what is the purpose of the information, how is it going to be used, under what context, for how long? And it's when one of those inputs or variables changes that you violate contextual integrity.
01:17:08.900 - 01:18:17.660, Speaker B: So it's less about privacy being this monolithic thing, and more about the way information in a system is handled over time and what is agreed to when you interacted with that system. So you have the data subject, you have the sender of the data, the recipient of the data, the information type, and the transmission principle that you need to think about. Don't get too caught up in this. I can send more information out. She has a lot of research on this. So moving forward, there's also some really interesting research around framing. Again, this is this framing idea again, and it was done by a researcher last name, aquisti I forget alessandro, I think Acquisti, and he was doing a lot of research around how to get people to make different privacy decisions based on perception, even though the privacy risks and things like that would be the same.
01:18:17.660 - 01:19:57.288, Speaker B: And this kind of relates back to what we're talking about in personas, when we were talking about asking people about how they might use a product versus how they actually use it once they have it in their hands, and why one is more valuable than the other. So a lot of times in privacy research, we ask people hypothetical questions, what would you do in this scenario? And hypothetically, they say that they value privacy, and then what they actually do is they and that is represented by this. So if you look at hypothetical, and then you look at down here in the bottom left corner, bottom left quadrant, objective. So we typically ask people if we can state the privacy trade offs as objective, like this is objectively worse privacy or objectively better privacy. When we ask them hypothetically what they'll do, they say that they'll preserve, they'll take the privacy preserving option. But when they actually put in a situation, they don't, they take the convenient option because these things are typically at ODS, and those bottom two quadrants are what we call the privacy paradox. But what alexander Acquisti found, or alessandro Acquisti found, was that when he did the privacy research and he framed things relatively.
01:19:57.288 - 01:21:30.280, Speaker B: And so this means not telling people if this is a better or worse, more or less privacy, but if this is more or less privacy compared to your past behavior relative to what privacy you have now, that actually in the actual systems when people interact with them, that they actually preserve their privacy. And so this was a little insight that I think a lot of people in this space that are working on UX around privacy are trying to figure out how to apply and mature, going to market products, how to frame privacy trade offs as relative to that specific user so that we get this up arrow in the actual column. So that's the goal. I also want to talk about consent. So when we were moving away from in the past. I guess what we had was implied consent, right? So this is what happens when you sign some terms of service or privacy policy or in an app, you're doing a login flow or a sign up flow, and it says by continuing you agree to our privacy policy and our terms of service, right? That is implied consent. You're implying that you consent to it without actually making explicit consent.
01:21:30.280 - 01:22:27.390, Speaker B: We have since tried to move to informed consent. This is still in progress. I don't think we've done a great job of this, but it's at least kind of know when we read the New York Times articles and a lot of that around all of the privacy problems on the internet today, they're typically advocating for informed consent. But I think the real way to solve this at the UX level is going to be through what I'm calling progressive consent. So this was originally presented at DevCon, this presentation, and this is kind of some stuff we are working on at Uport. It's not no longer actually specifically relevant to our product anymore. But at the time these were prototypes we were working with.
01:22:27.390 - 01:23:33.184, Speaker B: And the idea here was that Uport, we had this idea of selective disclosure where every time you interact with a new DAP, you can disclose data for that interaction. And here we were going to allow you, let's say this was some decentralized ticketing app that DevCon was going to use or something like that. You would be able to consent to each piece of data that you were sharing with the DevCon app. So you could click on these things, you could share your data. Then we wanted to allow users to update their preferences. So there's this trade off here around progressive consent where it's a burden, really. A lot of times people don't take advantage of the privacy options in applications because it's a burden, it's overhead and it's a cognitive load, as we call it.
01:23:33.184 - 01:24:22.370, Speaker B: And people really want the convenience. They're trying to get their job done right. And their job typically isn't, I want to preserve my privacy. Their job in this situation is I need to get into DevCon. I need to share my ticket to the organizer so I can get in. So we wanted to build a system that allowed you to progressively build up a consent system of preferences. So we were going to after you share every time, the first time you share a piece of information you're talking about, you're able to select things that you would like to share, mark as shareable in the future, and things that you want to be asked every time, right? To streamline some of these selective disclosure processes over time.
01:24:22.370 - 01:24:57.790, Speaker B: These are just some more screens I'll run through. Let me see what's happening in the so then we have just a recap. This is the end. We want to move to progressive consent. We want to give users a sense. Of control. We want to figure out how we can frame privacy decisions relatively, and having privacy preserving defaults is important and allowing users to build their privacy preferences over time.
01:24:57.790 - 01:25:48.172, Speaker B: We have a demo that's actually still live at Uportlandia. Uport me. Uport has undergone some changes in the past year or six months, so we're actually moving in some different directions. But this is still live, so if you want to check it out, you can. But yeah, that's the end of privacy and identity. There's a lot of other things around identity that I'm happy to talk about and take questions on as well. Specifically around decentralized IDs and verifiable credentials and storage of stuff and stuff like that on chain verifications, revocation, all of that stuff we can talk about too, and then we can also talk about more designing stuff as well.
01:25:48.172 - 01:25:53.070, Speaker B: But thanks for bearing with me as I ran through that.
01:25:57.700 - 01:26:09.110, Speaker A: Well, thank you, Johnny. That was awesome. Do we have any questions specifically about the identity or privacy piece?
01:26:13.020 - 01:27:01.108, Speaker D: So I have a question about data that wouldn't automatically be on chain. So the way you approach building these applications a lot of times just for cost reasons, is keep as much off chain as possible and only keep the stuff you really need to verify on chain because your gas costs are going to blow you out of the water. But have you seen any good approaches for having some kind of, like a hashed or encrypted version of a bunch of off chain data that you could selectively reveal and then prove that somebody could show? Like, hey, I have this degree, and I'm friends with these five people, and that's not just on chain visible to anybody, but if they gave access to a particular other person, they could check some hash that's on chain and verify.
01:27:01.204 - 01:27:03.240, Speaker B: That that is accurate.
01:27:03.740 - 01:27:05.768, Speaker D: I'm not sure what the best patterns are for that.
01:27:05.854 - 01:28:01.220, Speaker B: Yeah, so that's essentially what Uport has been trying to build and figure out for the past four years. One, I would definitely just look into our stuff, but there's also teams that are doing very similar things that you can look into three box as well. But this is really going to come down to the thing that makes that process work is DIDs decentralized IDs and Verifiable credentials. So in the scenario I think that you're laying out is, let's take the university degree. I want to prove that I have a degree, so I went to University of Texas. So I want to prove that I have a degree from University of Texas so that I can join who knows, let's say some Dow for alumni or something like that. The University of Texas.
01:28:01.220 - 01:29:23.904, Speaker B: What they can do is they can publish their since they're a business or an entity or an organization that doesn't have the same types of privacy concerns as an individual would, it's no problem for them to publish their decentralized ID on chain, right, or in some public registry. And so they would have their public key published apps like Utexas.edu is actually a method that we proposed to the W three C called Web Did. And so it would allow you to host your public key according to the did spec at a URL at a domain. And so if you believe that the people that run the University of Texas's website are really the University of Texas and they haven't been hacked or taken over in some way or lost or transferred their hosting or something like that, then you should be able to trust the signatures that come from the did at that domain. And so what we would do is your did is like an Ethereum address appended with a method that is specific to whatever did spec you're using. At uport, we use something called ether.
01:29:23.904 - 01:29:56.876, Speaker B: Did but the three box team, they came up with something called three ID. I think that's what they're using. Or they might be using some other did method. There's Sovereigns, there's IBMS, but you host it at Utexas.edu. And now the University of Texas could issue their diplomas as credentials. They sign a statement, just A JSON Blob, essentially in a specific way. They sign it and they sign it with their public key.
01:29:56.876 - 01:30:34.052, Speaker B: They send it to you. I store it on my phone or in Uport or an identity wallet of some sort. And then I go to this Dow, this DAP, and it asks for this using our libraries or somebody else's libraries. You can request that disclosure of that Verifiable Credential. And that pops up on my phone. I hit Share, and now your DAP can verify that one. This diploma Credential is about the person who just shared it, right? Because it will be the subject in that Verifiable Credential.
01:30:34.052 - 01:31:13.044, Speaker B: The little subject line will point to my public key, which I will sign with my private key when I transfer you this Verifiable Credential. But then you'll also be able to verify the signature of who issued it to me by checking on chain for their what is called did document. The University of Texas's did. Document. And now we have a way to move trusted data between parties off chain, but in a decentralized way. The only thing that's really on chain is the rules about how to consume and interact with a specific did. So these are the did methods.
01:31:13.044 - 01:31:35.900, Speaker B: And then the public keys are Ethereum keys. So those are anchored on chain, but that's really the only stuff that's on chain. But it allows us to move trusted Verifiable data off chain and have it be used in DAP contexts and whatnot. So hope that answers your question. Yeah, it's really helpful.
01:31:40.580 - 01:32:03.320, Speaker A: Awesome. Thank you. Do we have any other questions on identity or we can move towards the very specific Q A or like, mini session with feedback for your projects? Kate says yes. Do you want to get us started.
01:32:03.390 - 01:32:06.136, Speaker B: Kate oh, yes.
01:32:06.238 - 01:33:01.850, Speaker F: Okay. So I am actually a little bit conflicted because I don't know whether I have a question or not, but it's about the privacy and the whole purpose of Ethereum and decentralization is to bring equality to everybody. And now there's all this legislation for all the banking and wallets where you've got to do KYC. How do you reconcile the privacy concern and putting personal data on chain? Because like with crypto they take biometrics so it's kind of very specific and personal information and still remain decentralized. So I'm not sure if I should be asking that question or should I just run into my project and show that.
01:33:03.420 - 01:33:45.800, Speaker B: Well, we can definitely look at your project, but at a high level around KYC. This is a use case that we've worked on again for a long time. It's super tricky, I'm not going to lie KYC. The problem of needing to do KYC is a big regulatory and jurisdictional problem more than it is an Ethereum problem. Right? So Ethereum can I mean, Ethereum can offer DeFi and do all of this without doing KYC. Right. It's not an actual technical requirement.
01:33:45.800 - 01:35:14.260, Speaker B: But if you don't want to get arrested or shut down or fined for running your Ethereum app and you want to play by your jurisdiction's rules, you have to do so. That just automatically limits some of the high minded goals around equality and accessibility because lots of people can't perform KYC because they don't have access to real world government recognized identities. So we were just working on a project with the Red Cross in Kenya for aid refugees or aid recipients and refugees in Kenya that don't have identity documents. Right? And what we were going to do, red the project has now since been postponed and everything because of the COVID stuff and we couldn't go there and get on the ground and build stuff. So it's on hold. But the idea there was the Red Cross could issue an identity to these recipients that is just used between them, between the Red Cross and the recipients. So now the Red Cross basically would do their form of KYC.
01:35:14.260 - 01:36:13.930, Speaker B: Now in their case, they have special rules around, they don't have to rise to the level of like a banking application because they are a humanitarian NGO and stuff. And they're also in Kenya, which is a different jurisdiction. But essentially what they're doing is they're verifying an know doing KYC of sorts. Knowing well, it's more like knowing your aid recipient than knowing your customer. And they're issuing them a credential that is not on chain but is stored on either a smartphone. But we are also getting into this space of storing these things on feature phones and also smart cards and lots of stuff for low connectivity areas. And essentially now what these refugees or aid recipients can do, they can go to know maybe it's a UN camp or aid station and they can present their Red Cross identity to them.
01:36:13.930 - 01:37:42.144, Speaker B: And this isn't an official identity, but really what we're trying to do when we verify identities is it's more of like a probabilistic trust thing where if it rise like the KYC thing is like an artificial standard of trust. It's pushed on companies when know in the Red Cross situation they're happy to give you aid even though they haven't checked every single database around the world for your identity. But when we're working in, that's all to point out the fact that KYC is like this artificial kind of construct that we take for granted because it's just been around for so long. So we also worked on a project in the UK with a company called Onfito and some of the banks there, it was called the FCA Regulatory Sandbox and we were trying to build reusable KYC. And so what you could do here is I get KYC and I think you can do this today. So this is something to look into if it's relevant to your project, which is you can work with somebody like Onfito, which is an identity verification service, it's who Coinbase uses, you can get Onfito. What we were working with was we were working with Onfito to use their SDK.
01:37:42.144 - 01:38:25.520, Speaker B: So you have an app, you go through there, take a selfie upload your passport or driver's license, they run a KYC check, but then they issue that check of you passing KYC as one of these verifiable credentials to you, to the user. And then the user then presents that off chain signed data. That data that's signed by Onfito presents that to something like Coinbase or whatever other exchange or other application. And they don't have to be KYC again, right? They've done one last KYC and they can be KYC for the entire jurisdiction of financial products that are operating in the UK.
01:38:25.860 - 01:38:36.048, Speaker F: Wouldn't that be centralizing the information? And that would be one entity storing all the personal information and that makes it more risky?
01:38:36.224 - 01:39:54.430, Speaker B: Well, so on yes and no. So because of the laws On Fido has to store the user information, that's just the law, right? The law forces centralization. But it doesn't have to be this way on Fido. Once they attest to the fact that this person has passed the KYC check, they just need to sign that statement, issue it back to the user, and they theoretically, if the law didn't require them to keep the data, they could just delete the data, right, and not store any of the data, not have any of the liability around being hacked or acting in nefarious ways. They could just run the check, delete the data, issue you the credential and now you can use that reusable KYC wherever you want. But the laws in the US and in the UK and in the rest of the EU are such that if you're doing KYC, you have to store the user data of who you've KYC'd for at least five years. I think it is five to ten years, depending on the country.
01:39:54.430 - 01:40:42.252, Speaker B: And so until that law gets changed, even though technically we can do decentralized privacy, better privacy preserving KYC today, the laws haven't caught up. And that's just the situation that we're in. I think lots of people are arguing that the reason that they were having these companies store this stuff was because these technologies that we're taking advantage of now didn't exist yet. Right. So they had to have a record. That company had to have a record to prove what happened during that person's KYC process. Right.
01:40:42.252 - 01:41:03.670, Speaker B: And now all of that could be stored with the user signed and sent to the user for them to store on their own side on their phone or in some encrypted web storage of some sort. And that's where we're trying to push this whole system and industry towards. But the law just doesn't allow for that yet.
01:41:05.800 - 01:41:41.680, Speaker F: Thank you. Yeah, I think in my mind I still don't quite understand it, because to me, the problem that the blockchain solves is exactly that. You don't need the KYC and you don't need all of that. And now it's like we are trying to do I don't know if you know, waterfall versus agile, but the two are inherently two different opposing ways of doing things and they cannot coincide at the same time. And to me, it feels as if that's what we are trying to do with forcing the old methods onto the newer.
01:41:42.900 - 01:42:36.272, Speaker B: I mean, I agree. And this is why at least the UK government created this pilot program, the FCA Sandbox, because they were I think FCA stands for like financial compliance authorities, I think. But they were hearing us talk about this and saying that it is possible to do KYC and all of these things in ways that don't force these bad privacy outcomes onto society. And that's what we were experimenting with. So maybe the law is on the verge of changing. I don't actually know if that pilot program and that whole thing that they were doing actually resulted in any new legislation being proposed. But generally the feedback when we ran it was good.
01:42:36.272 - 01:44:28.564, Speaker B: And it seemed like the authorities and regulators are starting to one just fundamentally be aware that these things can be done and also understand them to the point where they feel like they can trust them enough to write laws that change the laws to say, if you're not running one of these decentralized now, hopefully the law will be either. You can do one of two things. You can issue a verifiable credential of that KYC data back to the user for them to store, or you can store it for five years, but somebody has to store it right, and publish. Maybe there's ideas around building a private chain for regulators that kind of is like a side chain to a lot of stuff where you might publish the hash of this interaction between this did and this regulator or this on Fido or identity verification service might publish the hash of that interaction onto this private chain. And it can be referenced only by only regulators can view that because there's still GDPR stuff around publishing hashes of private information and you can't even publish encrypted information on chain. But hashes are a little bit different, and I think legally it's still up in the air how that's going to come down as to whether or not that's allowed. So there's still stuff to figure out, but it seems like things are moving in a way that will I mean, you could always just there is this idea of, like, I think Auger did this, or some other apps, which is you just put the DAP out of your control and then what are authorities going to do? Right.
01:44:28.564 - 01:45:02.290, Speaker B: You remove your ability to control the system. So you could build a DAP today that uses decentralized KYC, ignore the laws, and take your chances with the authorities once they come knocking. Right. But because it's not a technical problem, you can get to the level of trust you need to do a lot of these financial use cases. It's really just how much of a fight are you looking for with the authorities at this point?
01:45:03.300 - 01:45:04.050, Speaker C: Thanks.
01:45:10.120 - 01:45:30.200, Speaker A: Did anybody else have any questions about their project? I know Vanna. Did you mention you were working on a project that focuses on privacy or anything like that? Not sure. I thought I heard it earlier.
01:45:32.860 - 01:46:13.656, Speaker D: I had another question about context switching. So you have different, I guess, personas in life and specifically for our project. You might be a buyer on a platform, or you might be a seller, or you might be a seller that has multiple different stores, and you would switch context by switching wallet addresses. But I don't know how to really do that workflow. Like, if you don't want to tie your buyer address when you're just looking to buy something to all of your history as a seller, just for whatever reason, have people thought through how to do that in a way that is only a couple of clicks and actually makes sense?
01:46:13.838 - 01:47:47.104, Speaker B: Yeah. So I can't say that this is like if you all were going to build this, you would be forging a little bit of new ground. But again, it's one of those things that seems to be theoretically possible. In an older version of Uport, we had what was called app specific accounts. So we had a root did, and we used an HD key, a hierarchical derivation of keys, and we would generate new ethereum keys for all of the different DApps that you use. And we would do some smart stuff in the back end of the user's app where we would just remember that this is the DAP and this is the key you used with that DAP and stuff like that, but the user didn't realize that they were generating new ethereum keys for every new DAP that they interacted. So what we could do is now you're able to share, let's say, your KYC Credential via this Ethereum address with CryptoKitties and via this Ethereum address with Uniswap or whatever other DAP, right? And those two apps don't see the same ethereum address now, but you're able to use your Verifiable credentials, one the same Verifiable credentials in both contexts, even though they're running, I guess, through different ethereum addresses.
01:47:47.104 - 01:48:55.164, Speaker B: So Uniswap sees this ethereum address, they look on chain, they go to Etherscan or whatever, and they see that this is like a fresh ethereum address with no history. But the person using that ethereum address has authenticated themselves via that KYC Credential that's not on chain to them. And the problem becomes really when you want to start moving money, right? So using off chain credentials can preserve your privacy and allow you to use lots of different ethereum addresses and sign up for lots of different DApps without any correlation risk. The problem becomes when I have a bunch of money in this Ethereum address and I need to use it across all of these different DApps. And so now I have to move my money from this central wallet of mine to all of these new contextual wallets. And that then provides the correlation risk. So that's kind of where everybody kind of got hung up.
01:48:55.164 - 01:49:32.440, Speaker B: But now with things like, I don't know, like tornado cash and Zkdi and what Aztec's doing and stuff like that maybe it is possible now to also make the movement of those funds private enough to where combining verifiable credentials generating ethereum addresses on every interaction and then running the funds as you transfer them between those addresses through a mixer. You could probably put this system together in at least a way that's better than anything that's happening now. Thanks.
01:49:40.150 - 01:50:00.950, Speaker A: Any other questions or projects that we're building on? And Jordan has joined us as well. Oh, sorry, jordan, you were literally just taking a sip of your drink. Do you want to quickly introduce yourself as well? Because you joined us a little bit afterwards.
01:50:01.450 - 01:50:02.102, Speaker G: Yeah, sure.
01:50:02.156 - 01:50:02.566, Speaker E: So.
01:50:02.668 - 01:50:22.720, Speaker G: Hey, I'm Jordan. I work on the product and design team at Maker. And, yeah, that's really about it. Been there for maybe two and a half, three years. So, yeah. Seen really the evolution of design and the crypto space.
01:50:25.730 - 01:50:37.700, Speaker A: Well, any advice you would want to give our builders at Hackmoney based on the observation of the evolution of design in the past two or three years?
01:50:38.710 - 01:51:12.202, Speaker G: Yeah, that's a good question. Similar to any type of product, right. Or designing for any type of product. I think really focusing on or really understanding the situation that whatever user you're building for or designing for is in is really important. And specifically what I mean is I think people generally take this notion of a person using adapt or something and they're just this one general person and this is just not true.
01:51:12.256 - 01:51:12.570, Speaker B: Right.
01:51:12.640 - 01:51:45.930, Speaker G: There's different people in different circumstances and really understanding that circumstance is really important. So for example, if you're someone using Die, people use Die for different types of things in different types of situations. And really understanding that situation will allow you to really be intentional about the different types of features or different types of elements in the UI that may or may not be important to the user.
01:51:52.230 - 01:51:52.690, Speaker B: Cool.
01:51:52.760 - 01:53:09.034, Speaker A: Yeah. We covered personas with Sasha earlier on in the session and I think we had a lot of different questions around those personas and how to decide on what the main persona is when you build, right? If you have to pick when you don't necessarily have a lot of data. So that's been an interesting element of our discussion. I don't know if the guys who are still I'm aware that this is like a very long session, so I know that some people have messaged me that they have to draw because they have other calls or engagements. I wonder if there are any kind of main takeaways or tips that you guys would have. And I'm talking to Johnny, Sasha, Jordan, Amy for for these guys, they're halfway through the hackathon now, or anybody building, I guess. What would be the main things to keep in mind, or one key bit of resource that I know.
01:53:09.034 - 01:53:24.320, Speaker A: Again, we've shared in the chat some very cool resources that we'll also share with all the participants that signed up. But we just want to absorb all of your knowledge, essentially, is what's happening.
01:53:27.750 - 01:54:15.282, Speaker B: Actually, this will be like super quick, but let me just and I'll share this. It's in my local Keynote, so I'll need to generate some Keynote Share link or something. But let me see here. Can you see this visibility of system status. So one thing I'll share is that there's this idea of usability. Heuristics from Jacob Nielsen I went through and I kind of showed how these things might apply to different crypto scenarios for DApps. And so these are things like just rattle off the ten things to think about.
01:54:15.282 - 01:55:31.180, Speaker B: And again, I'll share this presentation is visibility of system status. So you see this a lot in MetaMask, right? Pending states and stuff around transactions matching between systems and the real world. We see this idea of like signatures and I think, what do I have here? The system should speak the user's language with words, phrases, concepts familiar to the user rather than system oriented terms, which is a huge problem in most crypto stuff, and follow real world conventions, making information appear in a natural, logical order. So an example of this is the message portion of when you signed to log in or whatever to CryptoKitties with MetaMask. It was the first time I had seen them use that message section to actually do some copywriting. So they actually brought their brand through here rather than it just saying some standard, very technical crypto BS of like we need access to your wallet so that we can do x and y and get your public key and all of this stuff. So that was a good idea.
01:55:31.180 - 01:56:15.590, Speaker B: I would also recommend there was a team for a while at Consensus called Rimble, which was the design systems team. In addition to their react component library and their Figma file with a lot of the pre built components, they also have these guides for certain common crypto things just around UX of things to think about when you're designing your DApps. So I would recommend that as a resource. Other third one, user control and freedom. This is giving the user choices. So here's coinbase wallet. It's allowing you to backup now, remind later, don't show again.
01:56:15.590 - 01:57:01.686, Speaker B: So we often see this also doing it the wrong way in crypto is like you make users can't even go to the next screen until they write down their twelve word seed phrase, right? And that's like super annoying because there's no money on these keys yet. You don't even know if you're going to keep using these keys. So I think giving the user the choice there is something to think about. Consistency and standards. This is stuff that in our space really hasn't been settled on a ton, right? Like we call things gas or fees or network cost or whatever. And so those standards are still kind of emerging. I actually don't know what the standard is around gas right now.
01:57:01.686 - 01:58:26.730, Speaker B: So MetaMask was calling them transaction fees and they did the standard of slow average and fast, right? Some people use sliders and stuff like that, but that's something to be on the lookout for is like what is the standards that are emerging around some of these patterns? Error prevention. So this is something we had in Uport at one point, which has if this is the first time that you are interacting with these keys, this public key or public address on Ethereum. So some new DAP or whatever, if we were also doing a blacklisting thing. But essentially you want to prevent errors before they occur I guess is the general theme of this. And you see this a lot in Chrome, I would say like in Google Chrome when you navigate to a questionable website whose certificates for their website aren't matching or whatever it says, are you sure you want to do this? Obviously the stakes are higher in DAP world because you get your money drained and all of that. So something to think about there recognition rather than recall. You want to minimize people's cognitive load.
01:58:26.730 - 01:59:10.446, Speaker B: So I think what does it say? Minimize the user's memory load by making objects, actions and options visible. The user should not have to remember information from one part of the dialogue to another. Instructions for use of the system should be visible and easily retrievable whenever appropriate. So here is an example of all of the assets that you have access to in your MetaMask wallet. So you don't have to remember that you have however much AirSwap token or however many CryptoKitties, it's bringing that to the surface for you. So you don't have to remember any of that. Right? So I've seen other wallets where's my.
01:59:10.468 - 01:59:11.360, Speaker E: Phone go.
01:59:13.730 - 02:00:05.546, Speaker B: I've seen other wallets where you have to manually type in the assets like little ticker symbol, I guess, I don't know what the abbreviation, so like AST or whatever. This has been something I think a lot of wallets have solved, but something to think about. Flexibility and efficiency of use. So accelerators unseen by the novice user may often speed up the interaction for the expert user such that the system can cater to both inexperienced and experienced users. Allow users to tailor frequent actions in uport. This was something around that I was talking about earlier around setting up your preferences as you go along. So as you become an advanced user, your selective disclosure actions become more efficient.
02:00:05.546 - 02:00:51.498, Speaker B: You might see this same type of stuff as abilities to set preferences on your gas estimation and speed, right? So you can just set it to fast every time or slow every time. And these are things that you would allow users to build inside of your product over time that make it even more and more usable as they go on. Aesthetic and minimalist design, I think we're all familiar with this. This is argent. They do a really good job just putting not a lot of distractions. So dialogues should not contain information which is irrelevant or rarely needed. Every extra unit of information in a dialogue competes with the relevant units of information and diminishes their relative visibility.
02:00:51.498 - 02:02:00.454, Speaker B: So there's this big fallacy, I think in web design, digital design, around like the three click rule, I think, which is and the idea is just reducing the number of clicks a user has to make is better user experience. And I would argue that I would use as many clicks as it's better to use more clicks and constrain the information on every screen to very easily digestible pieces of information that they move through in some logical way. So if you have to tell them three things, you can put all three of those things, cram it all onto one screen or you can put each one of those things on their own screen. And I would actually argue that that's a better idea. Even though it's more clicks, it helps with the cognitive overload that a user would experience. That's really important during Onboarding, I would say so help users recognize, diagnose and recover from errors. We see this a lot.
02:02:00.454 - 02:02:37.060, Speaker B: Again. This is MetaMask. If you have something pending or stuck, the ability to go over to etherscan debug what is happening. Trying to tell the user what probably went wrong, all of that type of stuff to think about. And then finally help and documentation which relates to that. So even though it is better if the system can be used without documentation, it may be necessary to provide help and documentation. Any such information should be easy to search, focused on the user's task list of concrete steps to be carried out and not be too large.
02:02:37.060 - 02:03:40.962, Speaker B: Again, CryptoKitties at one point, I haven't used it in a long time, but they had the tutorial, the helper text kind of embedded in the experience. And you see this a lot with first time UX and mobile apps where the tutorial, the documentation is kind of embedded in your first use and you're actually using the product rather than reading about using the product, which I think is helpful. Extra stuff, fiat on ramps. Rimble has some tips on that which could be interesting for a lot of your apps, distinguishing between on chain and off chain data. I talked about that in the identity talk, so I won't talk about that again here. Progressive decentralization is an interesting concept that I think a lot of designers have been talking about where you don't have to force the user to be completely decentralized and self sovereign on their first use. You can kind of guide them through this progressively over the course, over the lifetime of their product.
02:03:40.962 - 02:04:30.230, Speaker B: So maybe you are managing their keys for them at the beginning and then giving them the ability to manage their own keys and then giving them the ability to set up some social recovery and stuff. I think burner wallet stuff does a good job of this, right, where at the beginning you have this precariously managed key and then if you get money on it or if you have money on there, that's something to lose. You can push the user to now take more control and migrate that money to a better secure wallet. And I think that is it. And I'll send out these slides, but those are just some tips generally for building all sorts of DApps and whatnot.
02:04:35.730 - 02:05:11.720, Speaker A: That's super helpful, actually. And you're right, there's so much because I remember just doing things like onboarding newcomers and then you kind of onboard them onto one wallet and then you mention, oh, there's this other type of wallet and then suddenly they're like, wait, what? Why is that one safe and that one isn't? What do you mean? So being able to do that gradually I think is less of a shock to the system, right, where you're just like you're introducing all of these new concepts for me. What am I even supposed to do?
02:05:12.410 - 02:06:18.590, Speaker B: Yeah, I was going to say I actually like I don't know if anybody's used it, but Coinbase, right, is you get started with crypto and it's completely centralized custodian way and then they have a feature in there that pushes the user to move their Ethereum to the Coinbase wallet, right? And I think that that's a good little pattern, right? So after you have money and you have Ethereum on Coinbase, they tell you, oh, you can download this wallet and they give you an easy UX bridge, right? Like click here to make this migration migrate your money to a place where you're managing the keys. Now, I have problems with the privacy aspect of this because now they know who you are on Chain and they can watch everything you do with your Ethereum. But from the progressive, decentralization stuff, I think that that's like an example of that in action.
02:06:23.290 - 02:07:06.290, Speaker A: That makes sense. And I also really like that example with the messaging that the CryptoKitties guys did in MetaMask. I think I had that once where with a MetaMask pop up where I was teaching at a university about just like basic stuff and getting the students to fulfill a bounty after we had created a wallet. And the pop up came up, keeping in mind that I'm in the UK. And the pop up came up saying, hi, there your special nons is. And then like, all of the different characters, and then it was sign. One of the main things is that nonce in the UK is also a word for pedophile.
02:07:06.290 - 02:07:43.380, Speaker A: So I was introducing this new thing, making them sign this message, and everybody just went, Wait, what? So that was an interesting explanation that I had to give, but again, it's something that you kind of look at it and go, okay, what is happening? Maybe I will not sign this because who knows what will happen? So, yeah, definitely useful. Anyone else?
02:07:45.750 - 02:08:13.680, Speaker C: A presentation that I actually gave with Simona for people for Dragon Quest hackathon. Also the ten UX heuristics and other tips and tricks. So you can check it out there, guys. I have also updated the privacy for the document so you can all access it by that link, no problem.
02:08:17.730 - 02:08:18.480, Speaker B: Perfect.
02:08:19.890 - 02:08:21.310, Speaker A: Thank you, Sasha.
02:08:23.250 - 02:08:27.220, Speaker G: I think one thing that I've seen or that we've learned is like.
02:08:29.990 - 02:08:30.740, Speaker B: Oh.
02:08:34.710 - 02:08:35.460, Speaker G: Hello.
02:08:39.050 - 02:08:40.054, Speaker A: Yeah, go on.
02:08:40.172 - 02:09:46.940, Speaker G: Yeah, so I think one thing that we've learned is that users or whomever you're designing for when they're in whatever DAP, is like this notion of reassurance. Because I think there's these specific moments, right, like when you do a transaction or when you're going to sign a transaction, or when you're going to do something where there's an event that actually happens. It's actually quite terrifying, both for novice users and for experienced users. Whereas there are some things that you can do that are just purely informational or actions that you can take that are actually not doing things on chain that produce anxiety within users, but they actually shouldn't. So I think really showing that contrast or providing documentation or some acknowledgment that, hey, this action that you're doing actually has consequences, whereas these actions that you're doing don't have consequences. So you can play over here, but be very careful over there. Yeah, I think that's really important.
02:09:51.070 - 02:09:51.386, Speaker B: Yeah.
02:09:51.408 - 02:10:18.950, Speaker A: And that's a big one, isn't it? Because we're so used to from the centralized world to just nothing really has that much of a consequence. Right. You can recover things. You can do these things again. You forgot your password. You can change it 10,000 times. And I think there was a conversation on Twitter the other day where there was a fake Elon Musk account that was asking people for ETH, and then somebody sent him this fake one.
02:10:18.950 - 02:10:36.380, Speaker A: I don't know how much ETH. And then he was tweeting coinbase, you must undo this because it's a fake Elon and it's like, well, no, that doesn't work that way. So, yeah, I think that's definitely important.
02:10:41.400 - 02:10:42.150, Speaker B: Cool.
02:10:43.160 - 02:11:33.190, Speaker A: I mean, if we don't have any other questions, I think this has been a great experimental session, I would say. I think it's been a lot of super important and super great content, and I think we've answered a few questions. We'll send everyone the decks if you haven't picked them up from the chat. And then Heather will also send you a couple of email addresses that people have sent me in the chat privately, and then yeah, that's about it. Thank you so much, everyone. And should we do this again? Yes. Okay, cool.
02:11:33.190 - 02:11:52.476, Speaker A: That is the resulting yes, but thank you so much. And, yeah, we'll share the recording as well. I don't know. We'll put it on the east global YouTube, maybe. Yep, let's just do that. I think that's the easiest thing for sure. Perfect.
02:11:52.476 - 02:12:14.896, Speaker A: And then we'll share it on Twitter as well. Perfect. And thank you so much, Sasha, Johnny, Jordan, Amy, and obviously Heather and Emily and Trent from the E Flobal team. And good luck, everyone, win everything. And thank you so much.
02:12:14.998 - 02:12:19.376, Speaker E: Thank you, everybody, for presenting, sharing. That was awesome.
02:12:19.478 - 02:12:23.410, Speaker A: Thank you. Good, I'm glad. See you.
02:12:24.180 - 02:12:24.950, Speaker B: Bye. This.
