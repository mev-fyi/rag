00:00:00.170 - 00:00:23.120, Speaker A: Joining the ENS integration workshop. Joining us today is Makoto, who will be taking us through a couple cool things. And yeah, feel free to ask any questions at the end of the session. There will be enough time for that. And with that I will hand it over to Makoto to introduce himself and kick the session off.
00:00:24.450 - 00:00:52.958, Speaker B: Hello. Hi. Thank you Emily, for introducing me. So my name is Makoto and let me share my screen. Yeah, so my name is Makoto, but also in ENS world, also known as Matok East and make this slide. Okay. So happy New Year, everybody.
00:00:52.958 - 00:01:59.346, Speaker B: It's great that everybody's new Year just got started and now already excited to hack on new stuff, especially around the NFP. And so for ENS we have a small price of $150 WASO in east to each of the five best projects to use ENS and this can be basically ENS username avatar support, name resolution for entering a crypto address or hosting your website on ENS and distribut your file network. So basically, yeah, you can do whatever the hack you want to do, but you might want to integrate with ENS to qualify for our price. And if you just want looking for a quick pointer, I think this is all URL. But if you go to Docs. ENS domains or join our discord channel NFT Hack has its own discord channel, which I will be. Checking from time to time.
00:01:59.346 - 00:02:43.490, Speaker B: But we also have our own Discord Channel chat ENS domains. And I think there's a channel called Developer. If you ask questions there someone apart from myself might also answer our community members. But like most of the stuff you look into docs ENS domains you can find the information. And also as you may know, we turned into Dao and we're trying to decentralize more things. And one of the stuff we've been trying to change is previously any protocol related to ENS was part of the EIP Ethereum improvement protocol. Now we are trying to be independent on our own.
00:02:43.490 - 00:04:00.110, Speaker B: So all the majority of protocol related to ENS is now in docs ENS domains ENS improvement proposal from one to ten. So most of the in depths of how things are working, if you look into these protocol proposals you can find more detail. And in terms of the integration, again, I think if you look into the ENS library or working with CNS section you can find most of the examples. And the important thing is, for most of these simple usages, the JavaScript Library or Python or Java Library, which you use to interact with Ethereum, most of them have ENS support built in, and we have our own library called Ensjs. But it's getting a bit out of date, and currently, I think for most of the simple usage, ESA JS has most up to date support. So I highly recommend using them. But also there is a framework like Waffle embod Scaffoldest.
00:04:00.110 - 00:04:55.274, Speaker B: They also have an integration with ENS. And throughout this workshop I'll use this example as a reference. And in this agenda I'll fast walk you through for ENS integration one one. So if you integrate any of things mentioned here, that's kind of minimum you need to do to kind of qualify. But this is NFT Hackerson and I think we've been using promoting ENS as a Web Three username and where avatar takes a big part. So I'll go a bit deeper on how ENS avatar works under the first. So if you want to kind of not just integrating but you want to do something cool related to ENS, probably you can find some interesting information here.
00:04:55.274 - 00:05:48.998, Speaker B: And lastly, if I have some time, I'm going through a couple upcoming features. Unfortunately these features are not ready yet, but you can kind of have some expectation of what things are to come in near future. Okay, so first one is ENS Integration 101. And the most basic basic feature of ENS is called for Lookup. So that for example, my name is Matoko Es. So if you want to send me some ESO ESC 20 to me, you go to for example, MetaMask or you can go to Issa Scan and you type Motokin ETH and boom, you get hexadecimal ECM address. So this is the most basic feature.
00:05:48.998 - 00:06:34.806, Speaker B: So if you have any of your DAP on the application, if you have to find some address, you can have ETH name or sorry, you can have ECM address, which probably people would copy and paste, or you can put ETH address. One important thing is ENS is not just about ETH. We also announced integration with DNS names. So if you have something like Matoken.com, you can use Matoken.com as a DNS name. How to do that is I didn't cover in this documentation, but you have to be very in mind that it's not just ETH.
00:06:34.806 - 00:07:17.890, Speaker B: So don't just like some hardcore ETH name to get the Get address. So this is example for web3 JS. If you do ENS Get address Alice East and you get the Hexadecimal addresses. So that's the most basic integration. The next step is we used to call it Reverse Lookup and most people didn't understand what it is. So now we kind of rebranded it as the primary ENS name. So you may set multiple four lookup to point like three, for example, ENS name post to one single PCM address.
00:07:17.890 - 00:08:52.198, Speaker B: But by using this primary ENS name, you can let DApps know what your primary ENS name is. So in this case, if I log into Uniswap, the DAP knows which username I'm logged in and to set it up from our application ENS app site, if you go to my account, if you click my account and it has a drop down the list of names that ECM address owns, then you just select. So that's how most users sets primary name. And for DApps to actually use that feature again, this is from our documentation site and in this case it uses example of Esojs and what it does is provider lookup address and if you pass that address it returns name. Important thing you have to do is so this address let anyone to specify any names. So it doesn't prevent me from just saying my CM address points to vitalikta is. So it's important to validate to do both reverse primary ensname lookup while doing a full name lookup to say that this address points to Matokun East and Matoku East points to this address.
00:08:52.198 - 00:09:58.934, Speaker B: By doing the bi directional setting then you can verify that this address belongs to this name. Luckily Esajs does that underneath. So if you're using ESA's JS, you don't have to worry about it. But if you're using other libraries or if you are directly interacting with our smart contract, you have to do that bit. Okay? And the last bit is about decentralized web. For example, quite often most dynamic logic is in a smart contract and you have a kind of HTML or CSS and JavaScript images on the front end points to the smart contract. Then in that case this front end can be all kind of bundled up and put it into the IPFS decentralized file storage.
00:09:58.934 - 00:11:12.958, Speaker B: So what you can do is once you upload these asset files in the IPFS, you can also do with Swarm and others as well. You can basically set the central file system generates so called content ID which is a hash of the entire assets uploaded into IPFS. Then if you set that into this section called content hash in the ENS, you can actually point the website to your ENS name. If you use something like a MetaMask or I think Opera and it does it natively but we also provide a ETH link so that for example in this case the name is app ENS. If you type link to the website, sorry, it displays the IPFS hosted distributed website. There's also another one called Lima. So if ecth link is unstable you can also serve a file at the ETH lima.
00:11:12.958 - 00:12:29.500, Speaker B: Okay? So that's the kind of very basic usage. And now I'm going to talk a bit about ENS Avatar, which you might have seen that if you go to OpenSea and if you go to typematoken ETH, this is an ENS name, but you can also see my NFT which I set on. ENS and other DApps can actually use that avatar information when displaying an ENS name on their site. So this is an example of the one inch and if you're not interested in how things work underneath but if you just want to do that integration, there's a third party library called Dev. I don't know how to pronounce this. Slash react which provides a react component so that you can just pass provider API key and address and it does look up and it also display so this is the easiest way to just integrate. But if you want to understand a bit of internal, this kind of takes you to how ENS works.
00:12:29.500 - 00:14:14.474, Speaker B: ENS is just like any other kind of DApps, it's just another collection of smart contract. And most of the DApps when you integrate, you are interacting with smart contract for ENS registry which is basically the gigantic form book where it has a key as your name and body as an address. But instead of the registry contract contains the address information, it actually has a map to something called resolver which is another smart contract by doing this and the resolver has a logic to contain the address value information. So the reason why we do this is that it makes it easier for us to upgrade the logic. So this is a flow that when you fast says hey, give me the address of food east registry returns Zerx 1234 which is a resolver address. Then underneath all these libraries we ask okay, what's the address of the Food east? Then resolver has the information retire and the reason we do is it makes it easier for us or anyone to add new address record type. Sorry, record type so that I already introduced ECM address type and you can set like in a content hash for the website there's already support to put like public key or Abi or Multicoin which is like Dodge or Bitcoin.
00:14:14.474 - 00:15:50.780, Speaker B: These things actually multicoin didn't initially exist. But by doing this kind of two steps you can change the resolver smart contract to the late more like up to date one or you can actually write your own resolver and add your own arbitrary logic. So that's why it has kind of two steps. And the reason why I mentioned this is one of the feature is to be able to set like arbitrary key and value text so that for example in Im is you can set a key called test and set the value called test record. So you can almost use as your own dictionary set. And this avatar specification, sorry, avatar which I showed you earlier is one of the specification just using this text record with a key called avatar and we still haven't fully formalized this full format, that's why it's in just a gist of the ArcNet which is Nick Johnson who is the founder of ECM name service. But the basic idea is like this is my matok is ENS app page that you can see that it says EIP one five five column one is a chain ID basically which is main net and then ERC, seven two one or one one five.
00:15:50.780 - 00:16:54.500, Speaker B: Then it puts a contract address of the collection of the NFT then token ID 9421. So by doing that it basically contains the full information about the NFT. So from the app level you can actually basically figure out whether this token is owned by this address owner of the metal condor is. So by turning that into the code it's going to look like this so fast you get the resolve name owner. One important thing is quite often most NFT has token ID as some random number one like punk two three five or something. In our case our token ID is a label. So if you say hash of the label and turn into the integer so faster you use the library called basically sha two five six.
00:16:54.500 - 00:17:54.660, Speaker B: But for example if there's a name vitalik east, you hash vitalik part, then you turn into the integer and you get the token ID. And by looking at the because it's just ENS is another seven to one contract. If you check the owner of that token ID you can figure out whether that address is the owner of the token. But by doing this all you have to write five lines of code. We have metadata information of our ENS ETH name as API. So if you go to metadata ENS domains and I think you have to put like chain name like maintoken is meta. You can find all the information related to ENS as NFT, including whether it's owner or not.
00:17:54.660 - 00:18:59.130, Speaker B: So you could make use of this API to do something in your hack. And also if you go to metadata es domain docs there's an API documentation so you can find more detail about that spec and I think so that's it for the avatar and I have ten minutes left. So I'll just go through these upcoming features. First one is called subdomain as NFT and second one is about Lt integration. So this one is also known as name wrapper. So all the avatar or specification I mentioned you can set avatar to any domain including subdomain. By the way, subdomain means like for example ETH is TLD top level domain and secondary is like for example Matokun East.
00:18:59.130 - 00:20:27.590, Speaker B: As an owner of Matokun East I can keep creating a subdomain like who Matoku is, bar Matoku is and I can create some subdomains. Important thing is currently only Matokun is NFT in one collection but subdomains are not NFTs. You can do it for example decentraland, the decentraland avatar has I think ensna called DCL East and DCL East has avatar name. So I think I have like Matoku DCL East and this subdomain is also NFT. But if you want to do that manually, I think what you have to do is basically you create NFT collection as smart contract and then when you mint you also have to kind of call ENS registry to create subdomain as part of the mint. So you have to kind of do it write its own smart contract which you can do. And I think if you want to see the detail you actually go to the controller of the DCL es and if you go to ease scan you can actually see the source code so you can read it there but name wrapper is kind of ways to automate it.
00:20:27.590 - 00:21:17.286, Speaker B: If you wrap your name, for example, Matokun East, any subdomain underneath automatically becomes NFT on its own. So that's a new feature. We've been saying new for a very long time, that this contract has already almost complete and OD is complete as well. So we are just waiting for us to integrate what? Deploy the contract and integrate with our front end. That's the only reason we haven't done it yet, but it's pretty much there. So if you really want to I think there's one product called Sysmore. I think they actually test deployed by themselves.
00:21:17.286 - 00:22:05.498, Speaker B: So if you are brave one who want to try out, we have a repo called ENS Contract, which has pretty much all the contracts related to ENS. And if you go to Wrapper, there is a contract there, but you have to deploy by yourself. So that's a subdomain as NFT. Second part is called L2 integration we used to call it during, but we rebranded to CCIP Read in partnership with Chainlink. So now the repo is under GitHub.com slash smart contract kitciperad. And I don't go the full detail, but the idea about the CCIP Read on our approach is the resolver.
00:22:05.498 - 00:23:17.398, Speaker B: I mentioned that if you are the owner of Matokun Is, you can change resolver. So the idea is we provide a new provider called Ccipv Provider or something like that. By doing that, this provider resolver, currently it returns the ethereum address, but our proposal is for this resolver to return http end coin called Gateway where you can call that gateway and then Gateway fetch the data on your behalf. If it's L2, you can use that information to verify the state on L One. And then the big picture idea is that we don't pick the winner yet because there are so many change coming up. So it's going to be you who decide, okay, I want to issue subdomains under Arbitrum. Then I mentioned as a reddit, because reddit, I think announced using Arbitrum.
00:23:17.398 - 00:24:04.886, Speaker B: Then you set the resolver of the reddit points to Arbitrum and issue subdomain underneath. Whereas, for example, like dYdX, who's already in stockware, if they want to issue a subdomain, they set the point resolver of dYdX to go to Gateway which fetch the data from stockware. We are all talking to all these optimism, arbitram, stockware, we're all talking to them like how we can work together. It's soon already yet, but we're working with them and so that you can pick the L2 of your choice. So that's a big picture. This one is a bit slow. We try to have something out by the end of this quarter.
00:24:04.886 - 00:24:49.580, Speaker B: But I think if you want to get up to speed, CCIP Read wrapper is where the important information is and I think just for the recap, so we have for more information, you can check Medium or you can follow Twitter, ENS domains or chat. ENS domain is our discord URL and ENS domain is our website. Thank you very much. Okay, so I have two minutes left, so maybe I don't have time to answer any question or I might be able to I think there's no comments on YouTube section. Okay.
00:24:51.390 - 00:25:11.646, Speaker A: I've also saved the zoom chat. So I can post a lot of these questions in the sponsor ENS channel for you to answer, async maybe you can just answer the first question in the zoom chat and then we'll have to close out the session because the next workshop is okay.
00:25:11.748 - 00:25:50.990, Speaker B: So in the back end, is this a simple mapping from name hacks address? So I think I kind of answered the question. There's a registry and resolver. So registry store the name and another smart contract and the smart contract resolver smart contract is in charge of returning address. When it comes to layer two, there will be another step of like resolver points to gateway URL and the gateway is in charge of returning the data. That's it. Great.
00:25:51.060 - 00:26:09.420, Speaker A: Thanks so much, makoto. I will relay these questions in the sponsor ENS channel. So if your question was not answered on the workshop today, it will be handled in discord. Thank you so much for the really great session and I hope everyone has a really great day.
