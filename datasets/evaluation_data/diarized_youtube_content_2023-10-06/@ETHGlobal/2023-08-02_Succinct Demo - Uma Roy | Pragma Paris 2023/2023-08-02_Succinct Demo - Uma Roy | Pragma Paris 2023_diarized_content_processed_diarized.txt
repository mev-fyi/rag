00:00:07.450 - 00:00:09.514, Speaker A: What we're going to do is we're going to have three more demos.
00:00:09.562 - 00:00:13.486, Speaker B: We're going to talk about what's actually happening with a few more protocols in this space that are announcing some big.
00:00:13.508 - 00:00:15.374, Speaker A: Things one of you may have already.
00:00:15.412 - 00:00:19.566, Speaker B: Heard of a couple you're going to find out for the first time. So, without further ado, I'd like to.
00:00:19.588 - 00:00:30.470, Speaker A: Welcome our next demo for today, and that is Uma from Succinct, and she's going to talk to you about all the new things that you can do now with a lot of like client stuff. Please welcome um on stage.
00:00:35.530 - 00:01:17.430, Speaker C: Hello. I'm, uma, I work on Succinct, and today I'm going to be talking about the Telepathy protocol, which lets you do cross chain messaging and a new protocol we've been working on for crosschain state queries. So at General in Succinct, we're interested in exploring the rich ZK application space beyond current protocols. So when we started out, there was a lot of people working on Zkebms. There's a lot of teams working on that problem. And then there's also a popular ZK protocol focused on privacy known as tornado cache. And we were kind of interested in what benefits can ZK provide to the blockchain space that goes beyond Zkebm or these privacy protocols.
00:01:17.430 - 00:02:20.806, Speaker C: And so we pioneered the concept of ZK lite clients. So a TLDR of a lite client is you verify the consensus of a source chain in the execution layer of a target chain. And why that's useful is now you can have the target chain know the source chain state kind of natively and have the chains talking to each other natively without the need for some centralized intermediary or a multisig. And if you guys are familiar with the existing current crosschain Bridging or interoperability space, most of the solutions for crosschain communication or Bridging involve these kind of like, trusted multi sigs. And by having these really gas efficient ZK Snark based like clients, you can now have chains talking natively to each other without the need for these trusted intermediaries, hopefully leading to much more secure interoperability. And so we had this ZK lite client we made for Ethereum that lets you verify basically Ethereum's lite client protocol on any EVM chain really efficiently. And it lets you do this for around like 300K gas on EVM chains.
00:02:20.806 - 00:03:23.270, Speaker C: And how the algorithm works how the algorithm works is we just take these outputs from Ethereum consensus. So for example, as Ethereum is coming to consensus, its validators are generating these signatures, block headers, and there's a current validator set. We take all those artifacts, we put them into a ZK prover that proves a statement that the current block header has enough signatures from the current validator set. And then we take that block header, the proof and the number of signatures, and we submit that on chain to run an on chain like client. And so with this Ethereum like client, we built the telepathy protocol, which is Live on Mainnet and has been since March using our Ethereum ZK Lite Client. And there's actually a few different interesting things you can do with the protocol. So one thing is you can send arbitrary messages from Ethereum to any chain because you run an Ethereum like client on other chains like Polygon, Avalanche, Gnosis Chain, whatever other chain you want, and you can get the Ethereum state on all those chains.
00:03:23.270 - 00:04:01.414, Speaker C: And then when you know the state of Ethereum, you can know if messages have been sent on Ethereum. And that's how we do this arbitrary message passing from Ethereum to other chains. What's also interesting is some people are pretty interested in bridging Ethereum's consensus layer to its execution layer to get information about validator balances or statuses, which is useful for a lot of protocols involved in Staking. And so our Light client is also useful for that. And we do all of this with Ethereum's Light Client protocol. And then we have Docs on all of the above. And I just wanted to point out that this is Live Today and it's being used actually to secure the Gnosis Bridge.
00:04:01.414 - 00:04:46.790, Speaker C: So Gnosis is an all L, one that you might guys may have heard of. And we currently our Light Client secures the Ethereum to Gnosis Bridge, which has like around $40 million in TBL. And then there's a few other people who use our messaging protocol. Across is a liquidity layer that's using us for messaging. Hashi is kind of this bridge aggregator that's using US. And then we recently got a grant from Compound to integrate into their governance for having their Ethereum governance control other deployments on other chains. And then in terms of the consensus information in the execution layer, teams like Eigen Layer are using us because they are involved in Staking and restaking and they need information about the consensus layer to operate their protocol.
00:04:46.790 - 00:05:20.386, Speaker C: And Nouns is kind of an interesting, fun example where they ran this little prize pool for people putting their nouns goggles in Ethereum validator graffiti. And they used us to get the ground truth of who was putting their graffiti in the consensus blocks. So those are all some users of the Telepathy protocol and a very high level of how it works. How is ZK involved? And now I'll show you. It running. So they asked to do a demo. So the demo is well, it's already running today, so figured I'd just show you that.
00:05:20.386 - 00:05:41.930, Speaker C: It's super simple to do the messaging. It's very similar to a lot of other messaging protocols. These are our docs. It's just Docs telepathy XYZ. You can see, you can send a message from Ethereum to another chain. You just specify like, the chain ID, the address of the receiving contract and the data. And then on the other side, you have to handle the message.
00:05:41.930 - 00:06:14.542, Speaker C: So you have to handle what source chain is coming from, the address and the data. And so, yeah, there's some really simple docs. You have an Explorer where you can see our messages coming through. You can also view the like client in our Explorer. So you can see we're actually sending a lot of Light client updates to Gnosis to help secure their bridge. So you can see we send one like roughly every six or so minutes per ethereum epoch so you can scroll and then, yeah, this is a transaction that you can see. We updated our Gnosis Lite client, so there's like a head update.
00:06:14.542 - 00:07:08.370, Speaker C: And then our Validator, we use our Light client to actually validate these events on the Gnosis bridge. So every time you go to Gnosis and you try to transfer money through their Omni Bridge, our Validator will sign off on your transfer and adding that ZK Liteclient security to the transfer to make sure that the funds don't get taken out of the bridge if the validator set gets hacked. So you can see it working today. Like, every time there's a transfer, we publish an event and we handle that affirmation. So, yeah, that's like showing our protocol actually being used in practice. And again, all this information is in Docs if you guys are interested in checking it out. And then I also want to touch on a new protocol that we're working on that actually we have only recently started working on and is Live On testnet and so potentially pretty interesting for the hackathon.
00:07:08.370 - 00:07:49.442, Speaker C: So it's called Telepathy state queries? And I think the most interesting thing about it is currently all crosschain interoperability protocols are push based. So crosschain messaging is push. You push the information from a source chain to a destination chain. But a few of our early users actually really wanted to pull information from other chains. They didn't want to push it, they just wanted to retrieve it when they needed it in their smart contract. And our state query protocol allows users basically to call view functions on other chains. So you send a request to Telepathy to do a state query on another chain and basically call a view function on another chain and then it'll return you the result and you can continue on.
00:07:49.442 - 00:08:30.526, Speaker C: And so this is Live on testnet today. We're trying to go to Mainnet in around a month. And we think it's pretty interesting because it is a different way of looking at the interoperability messaging problem. So instead of pushing, you can do this like pull based retrieval. And as an example, we have in our docs right below the Telepathy Protocol Docs. And the reason a lot of people are interested in this is, for example, say you want to conduct voting on L Two, but you want to gate it by NFT ownership on ETH L One. It's a common use case for a lot of gaming teams or in general people writing protocols on L Two to want to request information from L One.
00:08:30.526 - 00:09:27.950, Speaker C: So this is a really simple example contract where basically a user would call, vote, and then the contract issues a state query to our state query gateway, requesting basically this information, asking for a user's balance of the message. Sender of this particular ERC 721 on chain. ID one. So main net so request the information and then it'll have a callback that's fulfilled with the response. And if the user indeed has a balance of greater than one on main net, then the vote is allowed to go through. So we think this is a pretty interesting paradigm. Instead of having to push information about the user's NFT balances every time they change to a mirrored contract on l two, you can kind of just in time, get the information when you need it with the relevant contracts and the relevant addresses, and then you can have your request fulfilled.
00:09:27.950 - 00:09:58.150, Speaker C: And we're pretty interested in seeing what builders and hackers use this kind of stuff for. We already have a few interesting use cases of people wanting to use this to get chain link oracle data from l One on L Two S that don't exist or get this NFT information. But, yeah, we think there's a lot of interesting stuff to be done here. So, yeah, that's our new protocol. It's in the docs and it's on testnet, so you can try it out on testnet. And, yeah, that's what we've been up to at Succinct with our telepathy interop protocol.
00:09:59.610 - 00:10:03.280, Speaker A: You. Thank you.
