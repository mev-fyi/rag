00:00:07.370 - 00:00:42.860, Speaker A: Aztec is a privacy focused L two, on Ethereum it relies quite heavily on zero knowledge proofs to allow for privacy on a truly decentralized network. It allows you to execute private and public transactions and store public and private state. There are are three little steps to becoming a privacy developer. First of all, Aztec puts a smile on that face. Second, you install the aztec sandbox. And third, we go on with our lives. So step one, put a smile on that face.
00:00:42.860 - 00:01:10.850, Speaker A: We know a lot about ZK, so we want to make it even harder, right? Because it serves our egos. Okay, I'm joking. We want to build something amazing for the real life and something you will deliver. So we install the sandbox. Where do you sign in? Right. Well, one of our main focus was to give developers a local testnet as soon as possible. So we came up with the aztec sandbox.
00:01:10.850 - 00:01:58.846, Speaker A: The aztec sandbox is a local development network that really doesn't prove anything, but allows you to start developing your own logic and be ready for the upcoming testnet and Mainnet. If you have docker and node installed, you can basically just follow this meme and go on with your life and just start hacking. Just remember that 5 hours debugging can save you five minutes reading docs. So make your choices. So hopping on my terminal, keep in mind I'm focusing on Linux and macOS. If you have windows you can either use WSL or you can follow the manual instructions at docs. Aztec network in any case you need to have Docker installed.
00:01:58.846 - 00:03:03.560, Speaker A: So if you don't have Docker installed you can just copy and paste this command and this will install docker for you. If you don't know if you have Docker, you can just go and run docker version that will give you something you also need node installed. If you don't have node installed, I recommend to install it via NVM which is a really cool versioning manager. So you can also run just this command and it will install nvm. In my case it's already installed and then from then on you can just go and run nvm install node and that will give you the latest version of node. Once you have these two very common dependencies you can just run NPM, create aztec app and that's about it. You can choose just a contract example, which in this case is just a token example, or you can choose a boilerplate project that comes with the front end.
00:03:03.560 - 00:03:41.810, Speaker A: You can have a react app which is a very common front end framework, or the very bare bones vanilla HTML and typescript app, and I like that. So I'm going to choose that, going to give it a name which will be ETH Global and it will be cloning my box and replacing my paths. And then ask me if I want to install the aztec sandbox. I will say yes, please do. So this will take a while, so I'm going to cut it here. So after a few minutes it just asks you if you want to start the sandbox. I'm going to say yes.
00:03:41.810 - 00:04:21.598, Speaker A: But in the meantime I can actually go and see my code, right? So I can go and just open my code editor. So here we have the example. As you can see it's a typescript project. It uses webpack. So there's a webpack configuration that should work kind of out of the box for development. You have a contract. Contract is pretty basic, nothing too fancy, just simply has a storage with a number and you can set and get that number.
00:04:21.598 - 00:05:09.354, Speaker A: So then there is this configuration file, which is basically your connection to your own PXE process that is running with the sandbox, together with the sandbox, the HTML file. You don't need to think too much about this one. And then you have the logic, nothing too fancy as well, just queries some selectors and listeners and deploys a contract. Basically it doesn't do more than that. And then you have two buttons, one to set a number and the other one to get a number. And yeah, that comes with an input as well. Then we have some tests.
00:05:09.354 - 00:05:49.922, Speaker A: These are front end tests, so they run the wall end to end flow on a headless browser to check that everything is correct. So now you probably want to see this working. So I'm going to open a new terminal, going to install my dependencies with yarn. This can take a little bit as well. Let's wait. So now I have my dependencies installed so I can just open package Json to see what scripts do I have. The most relevant here, I guess is the run dev, which in turn runs prep.
00:05:49.922 - 00:06:32.810, Speaker A: It also compiles your contract here and generates typescript bindings. Those are the artifacts that will be very handy. So let's run this. Going to go yarn dev and see what happens. So it will first clean, in this case there's nothing to clean. And then compile my contract which is here, and also generate the typescript artifacts and then start the browser. So before we go on the browser, I'm going to just show you what exactly is these artifacts.
00:06:32.810 - 00:07:21.818, Speaker A: So you can see here, this is basically your contract, but with the typescript interface. So it allows you to call, for example, deploy this contract or deploy this contract with a public key or with options and also all the methods that you can have. It already gives you what types do you need to pass into them. So this is very useful interface. So as you can see, we didn't go crazy with the styling here. It's just a basic HTML box that you can click on and be happy with that. But that box will deploy a contract, as you can see here, it has an address so you can then get the number.
00:07:21.818 - 00:08:26.058, Speaker A: This is a random number that is set on the constructor. You can set that number that will set the transaction to the network and privately set that number and you can get it. If you're bored. You can do this many times, I don't know, it's up to you. So now you have a project, you want to expand it so you can visit Docs Aztec network and here you will be able to learn anything from our roadmap to our core concepts like higher level explanations. There are some deep dives here as well, some tutorials on things that can be very useful, such as writing a token contract or a token bridge. You also have reference material on the sandbox, the smart contracts and Aztec Js.
00:08:26.058 - 00:09:10.202, Speaker A: This is very handy if you want to write contracts and you want to know for example, what methods can you call, what do you have available? And here the aztec JS is definitely if you want to build an app and you want to interact with it. You also have some guides here and for the sandbox, basically how to control the sandbox run more than one PXE. This could be handy as well. And that's basically it. You should be able to start from here and if you need any help you can always ping us on the aztec ethglobal channel and we will do our best to help you. Happy hacking.
