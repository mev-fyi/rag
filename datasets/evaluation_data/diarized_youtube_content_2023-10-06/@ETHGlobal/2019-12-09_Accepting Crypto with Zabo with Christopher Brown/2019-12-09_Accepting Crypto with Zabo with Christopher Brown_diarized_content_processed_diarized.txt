00:00:00.890 - 00:00:51.430, Speaker A: So I'm going to be talking about zabo and tell you why we're building this project and what it can be used for. And this discussion is basically about the overflow of wallet providers and exchange providers and cryptocurrencies that we currently see. Our team is currently made of five people, myself and then Davi's here from Brazil, will will is from Toronto, and we got Alex out manning the table. Him and I are from Dallas fort Worth area of Texas, and we have varying degrees of experience in different industries. And we kind of came together over the last couple years to develop in the crypto ecosystem. We launched zabo as a product about a month and a half, two months ago. So we're pretty new product wise.
00:00:51.430 - 00:02:07.622, Speaker A: Before that, it was just a lot of different projects, service work and things like that. So the problem that we saw commonly across every project that we looked at and we've touched is this plethora of cryptocurrencies and wallets that we see now. We started off with bitcoin in a single exchange, and as the technology has proven itself, we've of course seen it grow over time. And now today, we have this really big expanse of cryptocurrencies and wallets. And so the problems that we're trying to solve, cryptocurrency, wallets, and applications are disconnected for the most part. And this is probably the most difficult problem for developers because it's not just that there's a lot of options, because maybe a lot of options are good, but none of these options interface with each other very much. Even at the level one protocol layer, you've got bitcoin and ethereum disconnected, and we've got atomic swaps that are making those things a little bit more accessible, I guess, to each other in a decentralized way.
00:02:07.622 - 00:02:42.638, Speaker A: But for the most part, the wallets themselves don't talk to each other. They each have their own interface that's unique to the other. And so it requires a lot of manual work. There's decisions that have to be made by the designers. So the idea is we can do a DAP and we can commit 100% onto the ethereum ecosystem. And so we'll inject web3 or ethers and get MetaMask, and we're happy with that. And that's the design decision that you have to make.
00:02:42.638 - 00:03:28.254, Speaker A: But that only gets you a very small subset of potential crypto users. We know 80% of cryptocurrency is held in bitcoin, and then beyond that, we have a lot of new technologies coming up. We've got cosmos, we've got polka dot, we've got ethereum. Bitcoin, of course, are the mainstays, and then you've got tokens kind of spread out among these chains. So it's a very hard problem for developers because if you want to capture a large market I feel like every time I talk to a new crypto project on ethereum, bitcoin is always on the roadmap, but it never quite gets there. I haven't really seen anybody meaningfully involve crypto in a user system. So what I want to do is I actually want to build an application with you guys.
00:03:28.254 - 00:03:45.262, Speaker A: This is called the Crypto Club and kind of show you the power of what we've done with Zabo. The Workshop app is available at this repository. If you guys are interested in coding with me, the GitHub is Zabo API. And then there's the Zabo workshop.
00:03:45.326 - 00:03:45.940, Speaker B: App.
00:03:46.710 - 00:04:13.258, Speaker A: And what I want to show you guys as whoever sets up is going to do that, is here's. Awesome crypto club. So this is what we're going to demonstrate, this is what we're going to build. And the idea is we have a Crypto Club. The only way to join is if you own cryptocurrency. The only way you can prove ownership of cryptocurrency is by connecting a wallet. We also have smaller communities within the Crypto Club.
00:04:13.258 - 00:04:51.722, Speaker A: And of course, to join those, you have to own the crypto that division of the club represents. So what we can see here is we have different clubs. So we've got Bitcoin, we've got Bitcoin Cash, and then we have Ethereum. We've got two ERC, 20 tokens spank chain and status. And then we've got Adam on here. So this is the type of application that we're envisioning for something like Zaba, where you need to access the wider crypto community and not just be isolated to one chain and one type of application. So the premise is easy.
00:04:51.722 - 00:04:56.298, Speaker A: The user can connect a wallet by simply connecting the button.
00:04:56.384 - 00:04:56.826, Speaker B: Here.
00:04:56.928 - 00:05:19.086, Speaker A: You'll see that it already recognizes my wallet. And I've got 0.7 ether. It shows that I've got Ether in the wallet. I can click on that to donate to the club and I'll go ahead and donate 0.1. And then I log the transaction here. And you'll see here's my transaction object.
00:05:19.086 - 00:05:45.018, Speaker A: I get the amount and way I know who it went to, it came from me. Here's the transaction ID. This is actually done over Rinkby. And what I wanted to show you on this real quick is I actually operated this completely decentralized, so I have a fully synced node. So I didn't do this on the Wi Fi. And actually it hasn't fully synced on here at all. I fired it up right before the workshop to kind of show you guys.
00:05:45.018 - 00:06:17.166, Speaker A: So Zabo API has a dashboard registration system where we issue API keys for server based applications. And then we also have a client SDK where you can put a client ID and identify yourself. With that said, I'm going to show you that next. But what I wanted to show you first is that Zabo operates completely decentralized, so a user can show up with a node and run it. And Zabo API will talk to that node. It will also talk to Coinbase's Custodial API. It'll also talk to Binance's API, it'll also talk to MetaMask, it'll also talk to Ledger.
00:06:17.166 - 00:07:11.798, Speaker A: So all of these wallets and there's no change in lines of code so what I just did there with my Ethereum node, we're going to rebuild that application using the regular client SDK and we're going to connect through MetaMask. And you'll see that there was actually no change. And then also connect to an Exchange real quick and show you guys a connection to Bitcoin and all that. So that is here, I'll show you this if anybody wants to get on here. There's the workshop again. So I'm going to go ahead and start the so once you pull the Git repository NPM install, you'll get all the necessary packages and then NPM run start it'll pull up our base application here. And where we're going to code in for the most part is if you go into source, not sure why I have get expanded there.
00:07:11.798 - 00:07:25.610, Speaker A: Go into source, go into scripts and index JS. And this is where we're going to build our code. Start off with Zabo is initialized with a client ID and then you specify the environment.
00:07:26.510 - 00:07:27.674, Speaker B: Pull this down a little bit.
00:07:27.712 - 00:07:30.990, Speaker A: Is that visible to everybody or is it any bit bigger?
00:07:33.730 - 00:07:35.600, Speaker B: Let me close that up.
00:07:38.510 - 00:08:13.206, Speaker A: Is that good? All right, I actually probably don't need this either. All right, so we have full documentation@zabo.com docs also. And the first step that you do is you put in a client ID and an environment. If you're operating in decentralized mode, the client ID and the environment are done away with and you identify. You put decentralized in here in true like this. And then you put a use node key in here.
00:08:13.206 - 00:08:44.266, Speaker A: And then you put the URL to the node that's running on your machine and that'll get you in decentralized mode. And then you can do away with the client ID in the environment. That's all detailed in the documentation. To get access to exchanges and other wallets and things like that, you do have to establish Zabo with a client ID. So we call this init function and that gets you the Zabo object. And the Zabo object is what carries the entire interface. With the interface, you can get balances, transaction history and send crypto.
00:08:44.266 - 00:09:25.694, Speaker A: Again, those three functions when you call Zabo transactions send you identify the currency Bitcoin and you define the amount the wallet that's connected already knows what address it's from. And if it's an Exchange account, it will translate it into that Exchange's API. If it's a MetaMask, it'll send it to MetaMask. If it's a direct connection with a node, it'll translate it into that node's bytecode that it needs and then send it. All you have to do is call these three functions and you have access to all of that. So what we do here is to instantiate a wallet connection, we call Zabo Connect. Once we have it initialized with our information.
00:09:25.694 - 00:09:59.720, Speaker A: So we have a click handler here on the button. This button has an ID of connect. So we're selecting that button and we're adding a click event listener. So when that button is clicked, we're going to call Zabo connect. And then what we give you is an on connection event. So when this function is called, the user is taken to ZABO's connection widget. If we're using the connection widget, if it's the node itself, as you saw, it was just an immediate connection with the unlocked key store.
00:09:59.720 - 00:10:16.026, Speaker A: So on connection we get an account object. And then the first step that we'll do with the account object is we will create a text node.
00:10:16.218 - 00:10:16.960, Speaker B: Right?
00:10:18.210 - 00:10:34.740, Speaker A: So we'll do document create text node and this node is going to say congratulations, we see that you own.
00:10:38.070 - 00:10:43.430, Speaker B: X amount of cryptocurrencies.
00:10:45.450 - 00:11:02.314, Speaker A: So how do we figure out that x? When the account connects, we give you a currencies array. And in that currencies array you get all the currencies that are being held in whatever wallet was connected. So we'll do account currencies length on.
00:11:02.352 - 00:11:02.940, Speaker B: That.
00:11:04.910 - 00:11:30.470, Speaker A: And the length of that array is the number of currencies. Each object in the array gives you the currency ticker. So it'll be like BTC ETH spank s t and it'll give you the balance and that will hold true for whatever wallet's connected. Basically the power is you don't have to have an opinion on what wallet is connected anymore with this. You can accept them all. And so we'll create a div here document.
00:11:32.330 - 00:11:33.080, Speaker B: Create.
00:11:36.250 - 00:11:39.080, Speaker A: Element. Right, and then we're gonna.
00:11:41.450 - 00:11:42.546, Speaker B: Yeah, that's.
00:11:42.578 - 00:11:44.810, Speaker A: Right, because then we're gonna attach this.
00:11:44.880 - 00:11:48.410, Speaker B: As a child node.
00:11:50.750 - 00:11:55.870, Speaker A: To the welcome section of the display.
00:12:03.910 - 00:12:12.120, Speaker B: We'll append the node and then the member welcome.
00:12:13.850 - 00:12:37.254, Speaker A: Pinchild. We will append a div. So it doesn't really have anything to do with Zabo. We just basically created text node for that. We attached it to a div and then we gave the div over to the member welcome. So now we have a connection. So if we reload this, we should be able to connect a wallet.
00:12:37.254 - 00:13:08.818, Speaker A: And what happens when a user selects connect? This is what the Zaba connect function does for them is it pulls up all the wallets that they want to connect. So this is if your user doesn't show up with a decentralized running node, they can select any of these. So I'll select Binance. They're given information on what the application is asking for. In the dashboard, you can spell out which scopes you want with the connection. So you can say, I just want to read balances and transaction history. Or you can also detach sending crypto.
00:13:08.818 - 00:13:38.542, Speaker A: Some of the exchange accounts can't transfer crypto outbound. All the connections we have right now can transfer crypto inbound. So if you want to send crypto into their custodial wallet, you can make that connection, make that happen. Finance is one where we can move crypto out of, but on the server side only. So there's a caveat to that. So we're showing 13 currencies. I don't think I logged the no, I didn't log the account but we're showing 13 currencies in this connected finance account.
00:13:38.542 - 00:14:41.670, Speaker A: None of them are well, actually, we haven't connected these buttons yet. So there's that and then you can go back in and you can connect any other one and then you'll get the currencies out of that wallet. All right, so then the next step we're going to do is we're going to activate those club buttons. So we're going to run a four step in here and then we've got these club buttons, which are these down here. And what we're going to do is we're going to iterate through the account and find the currencies that are in the account. If any of those currencies in the account match what we need for these subdivisions of the club, we'll go ahead and activate that. So we got the club buttons in there and then what we'll do is I think we'll write if account currencies.
00:14:41.670 - 00:15:28.130, Speaker A: Yeah, we'll do sum. And what the sum is, sum is a function that'll iterate through the array. As soon as it finds whatever it's looking for, it'll immediately start to loop over. So you don't have to put anything in there to make that happen. So if the currency object currency, which is the ticker in there, equals the club buttons I ID, then we are going to make the button active.
00:15:33.530 - 00:15:33.894, Speaker B: And.
00:15:33.932 - 00:15:53.500, Speaker A: I'll go ahead and log this so we can see it on the next one, I believe. So what we need to do so what we're doing now is we're iterating through the account currencies. We're seeing if one of the currencies match one of the button's IDs. And if it does, we're going to make that button active so we can go back through.
00:15:55.810 - 00:16:07.440, Speaker B: And let me reload here. I missed something on here. What's up?
00:16:09.410 - 00:16:12.400, Speaker A: Yeah. Oh, yeah.
00:16:14.850 - 00:17:03.000, Speaker B: Got it. All right. No, it the console. Give us a clue. Account is not defined. What's that?
00:17:06.830 - 00:17:08.474, Speaker A: Yeah, I got to log it inside the thing.
00:17:08.512 - 00:17:15.934, Speaker B: That's right. Dope. Cool.
00:17:16.052 - 00:17:17.840, Speaker A: All right, so now we're going to connect.
00:17:19.410 - 00:17:26.522, Speaker B: We'll do huobi on this one and boom.
00:17:26.666 - 00:17:57.850, Speaker A: So in the Huobi account, we've got bitcoin and bitcoin cash. The iterator found those buttons in there. And since I logged the account, I'll go ahead and show you guys. So here's the account object that you get back from Zabo. We have the address here as a UID because the address for this account is actually the external account ID for the Hoobi account. Then we got a list of all the currencies that are in that account. What we can't do though is from the client side, send crypto from the Exchange account.
00:17:57.850 - 00:18:27.860, Speaker A: So if we're sending from a custodial wallet, that has to be enacted from the server side. Client side can handle node, can also handle self custody accounts like MetaMask and ledger. But a server connection is required for any it's the same interface, just it has to be from a different environment. Of course, because we have to have those server credentials set up. I guess the final thing let me pull this up real quick, make sure.
00:18:28.550 - 00:18:29.960, Speaker B: We'Re good on.
00:18:32.410 - 00:18:34.120, Speaker A: What else we're doing here.
00:18:36.090 - 00:18:36.870, Speaker B: Um.
00:18:39.850 - 00:18:43.494, Speaker A: Want to show you guys the donation stuff real quick. Okay.
00:18:43.532 - 00:18:43.782, Speaker B: Yeah.
00:18:43.836 - 00:19:00.160, Speaker A: Let me let's add this real quick. So on the domain button, donate button, we're going to add event listener. We're going to click and then what we're going to do is we're going to zabo transactions send.
00:19:10.150 - 00:19:13.122, Speaker B: We're going to do in the send.
00:19:13.176 - 00:19:28.950, Speaker A: Function, we define the currency, which is the selected club. These are kind of pre built variables that I've already built for this two address is going to be the club's address, which we already define once we select a club.
00:19:29.610 - 00:19:35.800, Speaker B: And did.
00:19:39.450 - 00:19:52.350, Speaker A: And then we're going to do the amount, which is the donate eight value input.
00:19:55.090 - 00:20:01.124, Speaker B: Right? Yeah.
00:20:01.162 - 00:20:03.990, Speaker A: So in the, in the input, I change it to donate value.
00:20:12.380 - 00:20:20.920, Speaker B: And then we will go ahead and just log the TX.
00:20:22.220 - 00:20:32.590, Speaker A: Boom. All right, so same interface, same thing we've been doing. Let's hope this pans out. We will connect MetaMask on this one.
00:20:34.240 - 00:20:34.990, Speaker B: And.
00:20:41.760 - 00:20:52.268, Speaker A: All right, so MetaMask, we've got ethereum, we've got spank token, we got status. We'll click on the status club, we'll donate ten status tokens.
00:20:52.444 - 00:20:58.460, Speaker B: Boom. Think probably didn't.
00:20:58.620 - 00:21:00.160, Speaker A: Yeah, I didn't donate.
00:21:00.740 - 00:21:01.490, Speaker B: Let.
00:21:42.220 - 00:21:45.704, Speaker A: So we'll go through MetaMask, we'll ask.
00:21:45.742 - 00:21:46.990, Speaker B: Us confirm it.
00:21:49.680 - 00:22:15.590, Speaker A: And there's our transaction again. So that in itself is not the impressive feature. It's the fact that we haven't changed a line of code. And then I can go and connect to Okx account. My user can bring their custodial wallet in the same application. We can recognize those currencies. We can connect to a local node and any wallet in between there.
00:22:15.590 - 00:22:47.836, Speaker A: And so again, what this does for the developer is you don't again have to have an opinion on the technology being connected to your application. It can just take whatever it is. So to get started, Zava.com, we've got a dashboard there you can register again if you just want to pull the SDK down and connect it decentralized. That's available. And we have docs available quickstart app if you need to chat with us. We're in the Waterloo discord.
00:22:47.836 - 00:22:54.430, Speaker A: We have our own discord channels also, and just feel free to reach out. And that's all I got. Thanks.
