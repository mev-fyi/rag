00:00:00.090 - 00:00:29.650, Speaker A: This opportunity to introduce our next speaker. Our next speaker is Tim Biko. He is the product owner of Consensus's Besu client. He is doing a lot of the coordination around R and D with EIP 1559. Let's see. So EIP 1559 is a proposed change to Ethereum Spee model with implications for UX and monetary policy. So today, Tim is just going to give us an overview.
00:00:29.650 - 00:00:31.240, Speaker A: So welcome, Tim.
00:00:34.010 - 00:01:16.802, Speaker B: Everybody. Thanks for having me and thanks for the intro. So, yeah, like Emily was saying, I'm going to give an overview of EIP 1559. I work with Consensus and our team has been championing this e for the past couple of months. So we've had a good view into kind of what it is, where it's at and what's needed for it to get deployed. So first in this talk, I'll just give a super quick background on what EIPS actually are and how they work. Then I'll give a very high level overview of 1559 and we'll spend most of the talk kind of digging deeper into the various parts of the EEPs to try to understand how they work.
00:01:16.802 - 00:01:58.580, Speaker B: And we'll have plenty of time for questions at the end. So what are EEPs? So EEPs, as probably a lot of attendees know, stands for Ethereum Improvement Proposals. And in short, they're the mechanism by which we can make changes or propose changes to Ethereum. And this was basically copied from the Bitcoin Improvement proposals process with some modifications. And the bitcoin improvement proposals were modified off the Python Improvement proposals. And it's really just a set of guidelines that anybody can use to submit a proposal for how we would make a change on Ethereum. The high level guidelines about how to go about it are all listed in the first EIP, which is EIP one.
00:01:58.580 - 00:03:05.720, Speaker B: And then how you go from having a proposal for a change to ethereum to getting it adopted depends on which type of EEP it is. And for our purposes, there's really just one distinction that matters, whether it's a core EIP or not. So a core EIP means that we're changing the consensus of the network and that requires every client on the network to upgrade their node and to process the upgrade at the same time, which is what we call a network upgrade or a hard fork. Therefore, these EIPS need to be kind of adopted exactly at the same time across the whole network, and there's no opting in or out except from forking away, but for everything else. So every other type of EEP, there's no real requirement for people to adopt them at a fixed point in time, which gives us much more flexibility. And one good example of that is, for example, ERC 20, which is the popular token standard, is just an EEP that exists to specify the standard and people are free to use it or to stop using it. But there's really no timeline associated with when projects or if projects have to comply to that.
00:03:05.720 - 00:03:44.206, Speaker B: So, looking at just the different categories of EEPs, like we mentioned, we have core EEPs, which are part of this first big kind of group which we call standards. So there there's four subcategories. The core ones which we mentioned, 1559 is a core EIP, so it will require a network upgrade. But along with those we have other types. So networking EIPS affect things like dev P to p swarm the light client protocol. So basically all the ways in which clients on the network talk with each other. There's Interface EIPS, which as the name states, deal with the various APIs on Ethereum.
00:03:44.206 - 00:04:20.810, Speaker B: So things like the JSON. RPC. API the contract abis and whatnot. And finally, there's this last category called ERC, which stands for Ethereum Request for Comments, which is about application level standards. So these things are not part of the protocol itself, but they're things that applications on Ethereum can use. And the two better known one are ERC 20 and ERC 721, which create fungible and non fungible tokens. And then outside of the big category of standard EEPs, there's two other kind of smaller categories.
00:04:20.810 - 00:04:53.782, Speaker B: The first is meta EEPs. We typically use those for network upgrades. So for example, if there's a new upgrade, we'll list all of the individual EEPs that are going into the upgrade in a single meta EEP as well with the upgrade block and whatnot. And finally, there's informational EEPs which weren't used much until recently. Danny Ryan and Vitalik used this to publish an EEP for the E two phase zero spec. And so this gives us some background on what EEPs are in general. Now, let's look at 1559 more specifically.
00:04:53.782 - 00:05:41.394, Speaker B: So the EEP was put forward by Vitalik in 2019 and really has kind of three high level goals. So first is to make the transaction fees on the network more predictable. So right now, transaction fees on the network are set using a first price auction. So that means you have to look at what everybody else is paying, make a bet as to what you think the right price is going to be, and then you'll pay whatever that bet you made is. And that leads to overpayment, because if the maximum in a block was 100 GWe and you thought it was going to be 120, you could have just spent 101 and you still would have been higher than everybody else. And we see that a lot on the network today. The other thing that 1559 wants to help with is to reduce the inclusion delays for transactions.
00:05:41.394 - 00:06:21.640, Speaker B: So today when you send a transaction, blocks are mostly full on the network. So you get put in the transaction pool, you wait for a while and then you get included. So 1559 hopes that in most cases, you're just able to get your transaction right into the next block and not wait in the transaction pool as long. And then the third kind of goal of 1559 is to create a positive feedback loop between the network usage on Ethereum and the eat supply. So today there's really no kind of way for more usage to translate into a higher or lower EAP supply and to have any impact there. So the EEP is going to try and address kind of those three things and at a very high level. The way it does it is this.
00:06:21.640 - 00:07:08.786, Speaker B: And this what we'll spend most of the talk getting into. But we make the transaction fee more predictable by basically just saying what's the minimum fee a transaction has to pay to be included in a block and putting that right into the block header. So we call this minimum fee the base fee and this way you can look at any block on the chain and know this is the minimum that a transaction would have had to pay to be executed in that block. And it makes it very easy to see if you can be in or out. And then the way we reduce the inclusion delays for transactions is we double the block size on the network. So when there's going to be the network upgrade the block size will effectively double from say twelve and a half million where it is today, to 25 million. And then we just aim to keep it half empty most of the time.
00:07:08.786 - 00:07:56.238, Speaker B: So even though there is capacity for 25 million we try to keep our blocks around twelve and a half. But that means that for the marginal transaction that you want to include there's always kind of half the block of space that you can put it in. And the way we do those two things is basically how we also create this feedback loop between the network usage and the eat supply. So we set the minimum fee, again, this base fee as a function of how much gas was used in the previous block. So if there's more than 50% of the block that's used we'll keep raising the base fee. Kind of like surge pricing just to make it clear that more people want to use the network and the minimum you need to pay to use it goes up. But then because miners could potentially game that we decide to burn the base fee.
00:07:56.238 - 00:08:44.660, Speaker B: And this results in where when we have more demand on the network the base fee goes up and then we burn more and more of Ether as a function of that for a same number of transactions. So sorry, that was not super clear but basically every transaction's base fee is burnt. And so if the base fee keeps going up then for transactions which pay a higher base fee there's just a bigger and bigger total amount of Ether that's burnt over time. Okay, let's dig into this in a bit more detail. So there's kind of three big components that we touched on. So the variable size blocks there's the base fee and there's two new parameters under 1559 called the fee cap and a tip. And finally, there's this fee burning, which we just touched on, that we'll dig into more detail.
00:08:44.660 - 00:09:27.778, Speaker B: So the variable size blocks, like we said, under 1559, we want the blocks to be roughly half full. If they're more than half full, we start raising the base fee and if they're less, we start lowering it. And the reason we can do this is because we raise the base fee and lower it very quickly. That means that even in a worst case scenario where there's a ton of demand, we'll only have blocks be completely full or twice the size of current main net blocks for a short period of time. So the base fee can increase by twelve and a half percent maximum between each blocks. That means that in roughly 20 blocks, or five minutes gas prices are up ten x. In ten minutes they're up 100 x and in 15 minutes they're up 1000 X.
00:09:27.778 - 00:10:19.998, Speaker B: And to give you an idea, gas prices in the entire history of Ethereum have ranged mostly between 1000 X. So I think the highest we've ever seen was recently with 1000 guay. And the minimum we have is one guay. So that means that in 15 minutes we get as much kind of variability on the base fee as we've seen in all of Ethereum's history. And then once the base fee rises high enough, people will stop being willing to pay that price. So the blocks will stop being full and the base fee will drop again until we've reached this equilibrium where blocks are 50% or more full. And so the way users deal with this in their transactions is by specifying how much they're willing to pay at a maximum for their transaction to be executed.
00:10:19.998 - 00:11:07.838, Speaker B: And this parameter is called the fee cap. So the fee cap basically says this is the absolute maximum I'm willing to pay. And this way, if the base fee goes up or down, you have some wiggle room there. And because the base fee gets burned, like we've mentioned, and we still want miners to process transactions to hold the state and whatnot, users can also specify an optional minor tip. And this is the part of the transaction fee that would go directly to the Miner. So when you process a transaction, basically you want to check that its fee cap is larger than both the base fee and the tip. If that's the case, you simply process the transaction and whatever is left over after the base fee and the tip have been deducted from the fee cap you refund directly to the user.
00:11:07.838 - 00:12:12.710, Speaker B: So there's not really any harm in selling a high fee cap if you don't care about paying a very specific base fee. Yeah, and again, the tip goes directly to the miner and there's actually a couple of uses for that. So the first is to make sure the miners process the transactions versus mining empty blocks. But it's also a way for users who absolutely need their transactions to be included ASAP to signal that. So either when you have transactions, say, like DeFi arbitrage trades, where there's a very high opportunity cost of your transaction not going in, you might want to specify a very high tip for that. Or if there's a ton of congestion on the network and we're in one of these rare periods where blocks actually fall up to 200% because there's high demand, then you might want to specify a very high tip to signal that you want your transaction to be included as soon as possible. And so if we take a step back, what we're really doing with 1559 is we're adding this base fee field to the block header on the transaction side.
00:12:12.710 - 00:13:06.530, Speaker B: We just remove the gas price and replace that with the fee cap, which is our maximum amount that we're willing to pay, and the tip, which is what we want to set to the minor. And again, the fee cap. From the fee cap, you deduct the base fee and the tip you pay that base fee is burned. Tip goes to the minor and whatever's left over goes right back to the user. And what's very nice about this is we can actually keep supporting legacy transactions under 1559 without any changes if we set the fee cap to be equal to the gas price and the tip to be equal to the difference between the fee cap and the base fee. And this means that if for whatever reason you're using a service that can't upgrade the 1559 transactions you don't want to, or for some reason you don't have access to it, you can still get your transaction included on the network. We don't have to have like a transition period or eventually deprecate those transactions.
00:13:06.530 - 00:14:06.010, Speaker B: But the only downside is you don't get that fee cap refund that native 1559 transactions would get. But this is still a pretty big win because it means we can really simplify how we end up deploying this on the network and we can offer long term support of legacy transactions. So the last big chunk of 1559 is the fee burning. And it's worth thinking about why we actually burn the fee. So like we mentioned earlier, this base fee, we really want to be a function of the usage on the network, right? Like, we want it to be kind of ultra surge pricing when there's a ton of people that want to use it because it makes it clear that you can't get your transaction included for less than that, but then you want it to be lowered as soon as that demand goes away. And if miners receive that base fee, they would want it to be as high as possible. So one way you can make them indifferent to whether the base fee is high or low is simply by burning it and removing it from the equation.
00:14:06.010 - 00:14:59.750, Speaker B: And to be clear, this means that the miners still get the tip and the block reward, which historically has been the bulk of the revenue. So recently with DeFi we've seen fees grow a ton, sometimes being much higher than block rewards. But this has been kind of an anomaly. And like we mentioned, a lot of these transactions with very high fees might still want to put a large portion of that into their tip because of the opportunity cost of not being included. So the kind of income reduction to miners might be less significant than it appears at a first glance. And again here, when we burn the base fee we're basically creating a positive feedback loop between how many people are using ethereum and the ether supply. Because as the demand to use ethereum block space increases, the base key will go up like we've seen kind of gas prices go up over ethereum's history.
00:14:59.750 - 00:15:52.214, Speaker B: And that means that every single transaction burns more and more ether and it's a sort of redistribution to all of the ether holders by decreasing the supply. And as one kind of final point, I wanted to address some misconceptions that we hear a lot around 1559 and take the opportunity to kind of address those a bit more broadly. The first big one is the idea that 1559 will bring gas prices much lower. And this is only very partially true. So like we mentioned at the very beginning, it makes gas price estimation much easier. So it leads to less overpayment because you can know exactly what's the base fee of a previous block and based on the gas utilization, what the base fee of the next block will be. So prices will be kind of slightly lower at the margin.
00:15:52.214 - 00:16:39.754, Speaker B: But the kind of average gas price of ethereum is always a function of supply and demand and 1559 doesn't do much to address the supply side of block space. So if we want to radically decrease gas prices, what we need is a massive increase in block space on ethereum. And this is where things like layer two, like roll ups or just like e two, can help a lot. But 1559 really won't make a major difference here. And the second kind of misconception is that 1559 will make ethereum or ETH the asset deflationary. And this is only true in the case where the base fee is consistently burning more ether than the block rewards provide. And until recently, this really wasn't the case.
00:16:39.754 - 00:17:24.058, Speaker B: Block rewards were by far the biggest source of revenue for miners than transaction fees. And again, it's worth mentioning that the tip doesn't contribute to supply reduction. So if the types of transactions we see on the network are high tip with low base fees so there's not that much average demand, but there is some very kind of high paying demand. A small amount of that. Then that won't lead to as much burn than if we just see a ton of kind of demand on average, with very low tips. So it's a bit more complex than just saying, because we burned the base fee, we'll make ETH deflationary. And there's one more thing I wanted to share in this talk.
00:17:24.058 - 00:18:21.258, Speaker B: So, we learned this over the past 24 hours, and it's great, but we've been doing a lot of work on 1559. And now the Ethereum foundation has awarded both consensus and our 1559 multisig, which we've used to pay all of the different teams working on this a grant to get all of the client implementations done, to have proper project management around the EIP, and to do extensive testing and bug bounties. So this is good. In the past couple of months, I know a lot of people in the community were concerned about whether there were appropriate resources behind this and whether there was appropriate funding. So now with both the funding that we got off Gitcoin a couple of months ago and the EF, we should be good to get this through the finish line again. Happy MLG. And this is all I had.
00:18:21.258 - 00:18:27.280, Speaker B: Happy to take some questions now, and if you want the slides with the links, you can get them from this QR code.
00:18:27.890 - 00:18:39.330, Speaker A: Awesome. Thank you so much, Tim. A lot of great content there. Congratulations on the grant. That's really exciting news. Yeah. So I have a couple of questions from the chat.
00:18:39.330 - 00:18:54.920, Speaker A: The first one is, so what needs to be done for 1559 to make it on main net? We can research forever and just continue iterating forever, but where is the line where we say, let's strip the next hard fork? What still needs to be done to reach that?
00:18:55.290 - 00:19:34.402, Speaker B: Okay, that's a great question. If I can share my screen again. So, a lot of people have asked me this question, and I put together what I call a main net readiness checklist, which is tracking all the things we need to do to get 1559 live on main net or 1559 to a point where it can be considered for mainnet. There's a couple of things so obviously, we need client implementations. This is all a work in progress. We have three teams right now get base unithermind working on it. They all have work in progress implementations open, ethereum and Turbogeth said they're kind of happy to implement once we're closer to having a final spec.
00:19:34.402 - 00:20:20.660, Speaker B: So I think we're mostly covered there. There's a couple of issues that we needed to address in the spec. We've already solved a couple of them when I've mentioned about supporting legacy transactions in the talk. And now the biggest ones we see are, first of all, just denial of service risks on mainnet are kind of one of the biggest, I guess, blockers for a lot of EEPs. So account abstractions, which was a previous talk, has some concerns with that as well. I won't go into too much detail on this, but when people complain that the state size is growing too quickly on Main net and we can't manage the state 1559 twice as big blocks makes that twice as worse. So we need to wait for solutions to that to just be available.
00:20:20.660 - 00:21:03.470, Speaker B: Most of the client teams are working on it. Turbogast is whole kind of premise is dealing with that more efficiently. Guest has a snapshot sync that they're working on and we also have EIPS in the work to try and reprice some of the opcodes to address that. Then we have several other small issues with the EEP, but I don't suspect any of them is too big of a deal. So I think once we have our implementation kind of done, which we expect to get roughly by the end of the year, we should be ready for the next hard fork. So it probably won't be Berlin, but possibly the one after. And especially if we can get these issues around the denial of service risk and state management issues solved on Mainnet.
00:21:03.470 - 00:21:11.218, Speaker B: But if you want to see the full list, you can just go on the Ethereum PM repo under fee market. There's the checklist there.
00:21:11.384 - 00:21:30.170, Speaker A: Awesome. Thank you so much, Tim. So I have another question. It's kind of a minor question, kind of digging in semantics a little bit, but it appears that your goal is to make a more stable fee. And you discussed positive feedback, and the question here is, wouldn't you want to be using negative feedback?
00:21:31.470 - 00:21:41.840, Speaker B: So, yes, as more people use the platform, there is like a negative pressure applied to the supply. Right. So there's less and less ether in circulation. Yeah.
00:21:43.490 - 00:21:53.230, Speaker A: Cool. Got it. I also have another question. Someone just threw up here. Have you talked with Tim Roegarden?
00:21:53.910 - 00:22:26.278, Speaker B: Yes. So Tim Roughgarden is a researcher, computer science game theory researcher. He's being paid by, I believe they're called the Decentralization Foundation to do an economic analysis of 1559. So it's not done yet? It's in progress. We've been in touch with him and I suspect in the next months or so we'll see the outcome of that. But the goal is to just have a kind of formal analysis on the economic side of what actually 1559 does. How does it compare to the current fee market on Ethereum?
00:22:26.454 - 00:22:34.140, Speaker A: Cool. Another question, just if people want to keep up with 1559 or any of the other work you're doing, what's the best way for them to follow?
00:22:34.450 - 00:22:37.518, Speaker B: I love that it was my last slide, so I will share again.
00:22:37.604 - 00:22:38.542, Speaker A: Please do.
00:22:38.676 - 00:23:00.520, Speaker B: Yeah. So I listed four of them up here again. You can get them from the QR code, which is in the live stream now, but the EEP itself is probably the first place you should have a look. It keeps the spec up to date. Then we have implementers calls every month or so. They're kind of like Core Devs calls, but just focused on 1559. We have recordings and transcripts which are linked there.
00:23:00.520 - 00:23:25.040, Speaker B: I write kind of blog length updates every couple of weeks, so if you don't want to read a whole hour call transcript that kind of aggregates the different things that have happened on 1559 over the past few weeks. And finally, Eat Magicians has a thread also with 1559, where a lot of the spec and whatnot gets discussed and debated. If you're more interested in really the nitty gritty of how it's going.
00:23:25.490 - 00:23:35.902, Speaker A: Got it. Cool. That all sounds really good. Tim, again, thanks for joining us today, giving us that overview. Really appreciate you making time. Great.
00:23:35.956 - 00:23:36.654, Speaker B: Thank you.
00:23:36.772 - 00:23:52.870, Speaker A: Thanks. Just a reminder to everybody watching, if you want to get involved, you have questions, head over to our chat. Ethanline.org. I'm going to go ahead and take a quick break, five minute break, and then we'll be back with the rest of our speakers.
