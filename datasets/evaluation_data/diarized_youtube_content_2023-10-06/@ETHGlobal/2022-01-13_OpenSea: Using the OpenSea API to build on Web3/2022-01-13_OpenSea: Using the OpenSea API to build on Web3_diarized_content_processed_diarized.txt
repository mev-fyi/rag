00:00:00.410 - 00:00:17.226, Speaker A: Good to start. So hello, everyone. We have Michael here from Openc for his workshop using the Openc API to build on Web three. I'm super excited to have Openc here at NFT hacks 2022. And with that, I'll hand off the mic to Michael.
00:00:17.418 - 00:00:58.750, Speaker B: All right. Thank you, Anna. So welcome, everybody. This is my first time leading this kind of workshop. If I'm rough around the edges, I apologize, but hopefully we'll get through this and you can learn something about building on OpenSea. So really the goal of this workshop is to kind of introduce you to the set of tooling that we have available for developers as a platform for OpenSea and less so about the marketplace and the features that we have on the web app that regular users use today. We really want to inspire you to build into that marketplace and utilize the things that we offer to you to create amazing and really interesting projects.
00:00:58.750 - 00:01:57.234, Speaker B: So just kind of giving an overview about what we'll go over today. First, we'll go over an overview of what OpenSea is, why you should care about what OpenSea is for those who don't know what OpenSea is and why it even makes sense to build on Openc as a platform. Next, we'll move on to one of our two kind of tracks that we see developers falling under as they use our platform, which is as like a web developer app developer. A lot of people are calling that web two versus web3. And then the second track that we have is kind of building on OpenSea as a smart contract developer. And these are the people that kind of create NFT projects and launch them and then go on to sell them on Openc and how those two worlds can kind of intermingle. So, just getting started on what at least my goals are for this presentation, at least, what I'd like you to do as hackathoners here is to just build amazing, cool things.
00:01:57.234 - 00:02:32.382, Speaker B: If you end up using our platform and our API and our SDK through, that amazing. I'm just personally speaking as a nerd, I'd love to see some of the cool, interesting things that you'd be building here. The second thing is I would love for you to ask me anything. I am very much so an Open book about everything that is going on here at OpenSea. Everything about my life, if you care about my life or anything that we could be doing better. And that kind of leads into number three, which is providing us with feedback. This company was not at the state that it was a year ago.
00:02:32.382 - 00:03:20.978, Speaker B: Even barely anybody knew what OpenSea was. And we obviously grew into this really big industry as a whole, and we're still learning, we're still kind of trying to improve things. We know not everything is perfect. We're very aware of that, and we're trying to do better by that. So the feedback that you provide us is really going to go a long way in helping us improve things specifically from a developer perspective, because that's something that's really one of our big goals this year, is to really improve our platform for developers so that they can build on top of us. So going into what is Openc, I kind of wanted to provide a little bit of an overview in case people aren't familiar, but Openc is the world's first and largest marketplace for NFDS. It was started in 2017 by Devin Finzer and Alex Atala.
00:03:20.978 - 00:05:00.266, Speaker B: And really their goal at the time was to, and still is to become the horizontal marketplace, which is the most inclusive marketplace of all digital goods today. They're known as NFTs that any project can integrate with. And that was really important as a goal for OpenSeas to become really horizontal and not really pick a lane when it comes to which projects can kind of get listed. And that led to OpenSea becoming a little bit of an index and the largest data set of NFTs that there is out there, specifically on, you know, the breadth of NFT data that OpenSea has has really led to it becoming this common secondary marketplace where a lot of projects, after doing their initial mint and their primary sales will go to for secondary sales and for building on top of Openc as a platform, we have an expanding selection. So over the last two years, we've expanded from ingesting really only ERC seven two one non fungibles, which I will go over into what that means as an overview to also include ERC 1155 semifungibles, which introduce this whole other category of digital goods. And then more recently, later this year, we actually introduced, or I guess this is last year, now we're in 2022, but in 2021 we also moved on to become a MultiChain platform. So we've integrated with Polygon and Clayton, which are polygon is a layer two solution on top of Ethereum, and Clayton is another blockchain that we integrate with as well.
00:05:00.266 - 00:05:48.810, Speaker B: And that really kind of opened up a whole can of worms for what you can do on OpenSea. Obviously, those two blockchains and the many other blockchains that we plan on integrating with in the future all kind of have different use cases. And one of Opensea's goals is to become this wide index or marketplace of all of these NFTs as an API platform or as a developer platform. What we really aim to do is to really become the backbone of third party tooling in Web Three. We currently have a Rest API that has already kind of become the backbone of a lot of really successful projects and really interesting things that people are doing with Web Three. But we really only plan on improving from here. And this is really only the beginning of what we plan to have become.
00:05:48.810 - 00:06:51.806, Speaker B: A whole platform of different tools, including an SDK smart contract tooling and many, many other things that I am very excited to share with you soon. So why should you care if you are a web or app developer? Quote unquote web two developer. I personally don't like that terminology just because it kind of implies something negative about being a web two developer versus web3 developer. But I digress building using our tools gives you access to one of the largest data sets in the NFT community. Really. Our indexer and our watcher of the blockchain has built up a data set over the years and has really indexed that data set very well in a way that really powers a lot of projects today, but also gives you access to not just the NFT data, but also events and orders that occur on OpenSea, as well as collection groupings that we kind of have internally. And a lot of people kind of rely on that today.
00:06:51.806 - 00:07:49.454, Speaker B: And that's very exciting for us and obviously kind of will help you because millions of NFTs and active orders are already available at your fingertips the moment you start developing on OpenSea so that data is already there for you. You don't have to start from scratch and re index the entirety of the blockchain in order to have access to collections that might be older and might not be around as much anymore. And as the largest marketplace, we do benefit from having this existing ecosystem of third party projects. And I'll showcase some of these projects that I personally thought were very cool later on. But having that available to you kind know, gives you a very reliable source of the state of the NFT marketplace as a whole right now and I hope will inspire you to kind of build really cool things. Finally, getting started with our API and our SDK is quick and very easy. It really only takes a handful of commands in your command line to get started with our SDK.
00:07:49.454 - 00:08:26.074, Speaker B: Getting started with our Rest API is, in my opinion, very straightforward. Our documentation website is simple. It's getting better. It's not quite there yet, but it is getting better. And we really hope to get to a point where when users start developing on web3 and they really want to use some sort of API for data for NFT aggregation, that OpenSea becomes the default option here, or the obvious choice here just because of how simple it is here. I have a little screenshot of what our developer website looks like. Next, I'll go over why you should care if you're a smart contract developer.
00:08:26.074 - 00:09:21.450, Speaker B: So, like I mentioned earlier, OpenSeas Exchange Contract is one of the most actively used contracts in the entire Ethereum ecosystem. So this goes beyond just the NFT marketplace ecosystem. We are very regularly one of the or the highest gas burner when it comes to Ethereum transactions. And that kind of just lends credence to how big of a platform and how big of an impact OpenSea has had on both NFTs and the Ethereum marketplace as a whole. Next, we also have built in royalty support, which is obviously a feature that is expanding out to other marketplaces, which we're very happy with. And doing this with Openc is very quick and painless. We've already collaborated with the Royalty Registry, which was a project started in late 2021 to kind of unify the registry of royalties for collections across all platforms.
00:09:21.450 - 00:10:31.350, Speaker B: So that when you go to list your collection on Openc versus Wearable versus any other of these platforms, that should be standardized across, and that should hopefully make things very easy for people. Next, our documentation. Our documentation, in my opinion, is consistently being improved on, and we include some of the latest patterns and trends that we notice in the solidity development community, because we really want to make sure that when developers come to, OpenSea to learn how to become smart contract developers. They can feel confident that what they're learning is up to date and also useful and keeping up with the latest trends. Since, as I'm sure many of you know, this industry moves very fast and trends come and go very quickly, not specifically to what collections are hype and which are not more so like the coding patterns that you would have as a developer. So the things that solidity developers were doing in 2017 are not the things that they're doing in 2021 and 2022. This is very much so a growing community, and we hope to continue updating our documentation for developers as that community matures.
00:10:31.350 - 00:11:37.274, Speaker B: Next, we can go over what it looks like to be building on Openc as a web or app developer. So the Openc Developer platform is like our web two interface consists of two major parts. One is a Rest API, and the second is an SDK that actually builds on top of that API and simplifies a lot of the sometimes more annoying or complex aspects of calling an API directly. This becomes particularly useful when you want to do things with our API or our platform, like submitting buy orders or sell orders for NFCs. The API itself provides endpoints for the following index models on our platform assets, which is just like a term we use to describe all digital goods. So this includes both ERC seven two one NFTs, as well as ERC 1155 semifungible tokens. And I guess this would be a good time to kind of elaborate on the distinction between the two.
00:11:37.274 - 00:12:58.366, Speaker B: So when you think of NFTs, you typically think of the ERC seven two one implementation, and that kind of lives by the world of one owner to one token. Whereas with ERC 1155 tokens, this proposal or this new standard introduced the idea of semifungibility, which allowed you to do very interesting things like having tokens that are semi fungible, and you can actually own several of a specific type of thing. A very good example of that that I'm sure many people are aware of is that Adidas recently developed or released a collection that partnered with Punks Comic and Board, Ape Yacht Club and G Money. And that collection was actually an ERC 1155 token. Because if you go to the page on Openc, for example, you would see that all of the tokens on that page are all kind of under one detail page and people can have several of the same token. If you want to learn more about this, there's plenty of resources about this on the Internet. In fact, Devin, who's our CEO at this point, last year released a very accurate to today and very useful article called the NFT Bible that kind of goes over the specifics of these things.
00:12:58.366 - 00:13:46.162, Speaker B: So I think that personally I found that to be a very good resource. If you are confused about any of these topics, it's a great place to go to. Another thing that we index is our collections, which are like our off chain concept for grouping contracts in addition to events which are just transactions that have happened on the blockchain for a specific asset, individual orders that were submitted, the accounts. So this would be like my wallet versus your wallet. And finally, asset contracts. And I'll go over the distinction between asset contracts and collections in a bit. Next, our orders API that I kind of mentioned earlier with our SDK allows you to both retrieve orders as well as submit orders directly to our exchange contract.
00:13:46.162 - 00:14:38.710, Speaker B: And a lot of people found that to be a very powerful part of our developer platform. In fact, many people have created these trading liquidity bots that actually submit actual orders that people can accept on the platform. And that has actually been a very successful program for us. And we hope to work with those trading bots in the future to kind of continue this relationship. Next, some of our endpoints like orders and events which tend to kind of be more heavily used are API gated. And the reason why we do that is just to prevent a lot of misuse of the platform that we've seen with people just hammering those endpoints and kind of leading to problems on the platform itself. And I know that that sounds a little scary to have to use API keys and all that stuff.
00:14:38.710 - 00:15:28.040, Speaker B: As far as I'm aware, we actually created a specific sign up form for API keys for the hackathon, which we'll work with you all over the weekend in order to make sure that API keys are just granted very quickly. And we hope that the keys that we give you, you'll be able to use. We don't want anybody getting stuck on this part when it comes to building for this weekend. And finally, the mainnet and testnet APIs are both available. They have feature parity between the two of them. So any API that you have available for the Ethereum Mainet, you should have available for the Rinkabee testnet as well. And I think personally that's very powerful because it allows you to test run a lot of your ideas without having to use, quote unquote, real money.
00:15:28.040 - 00:16:20.658, Speaker B: The testnets is kind of just like a playground for people relying on building on Ethereum. This also maps very well to our testnets Openc IO, which is like a testnet website that we have available for developers like you to go test out your ideas on. So you can actually see an exact replica of Openc, just a testnet version of it that you could play with however you want. And then finally, below I included some links to our documentation reference website as well as our SDK GitHub repo that includes a very good README going over things and I'll showcase both of those in a bit. Before I move into that though, I'd like to kind of do a little bit of model definition. I know I threw a lot of models in that earlier bullet so I kind of just wanted to expand on these a little bit. So first we have assets.
00:16:20.658 - 00:17:01.566, Speaker B: These kind of represent individual tokens coming out of a contract. We call these assets internally, although that name is maybe not the most appropriate. These can be owned by one or more accounts. So like I mentioned, semifungibles can be owned by several people. So I can have one semifungible of the same exact token that you have. And then finally, what has led to the explosion of the NFT industry which is the metadata of those assets and that includes any media like images, videos. People have developed entire video games that live as metadata on their tokens directly and that lives on chain or off chain.
00:17:01.566 - 00:17:54.894, Speaker B: And then finally some traits. And these are just properties that people can attach to their NFDS and that can kind of determine rarity. It can determine your playable characters abilities in a game that's up to you to develop and build out in your world of your contract. Next, we have the contracts themselves. These are smart contracts that are deployed on the Ethereum network, whether that's the main network or the testnet network. And these are typically associated with a single owner account that is either the deployer of that account or deployer of that contract or if that deployer was like a third party developer you can hand off ownership of a contract to other individuals. Finally, or next we have accounts.
00:17:54.894 - 00:18:44.530, Speaker B: Accounts are individual user. You know me as a real person, Michael. I have several accounts that I kind of manage under my wallet called MetaMask. So an individual account is more so a mapping to an individual address that you have funds in within the world of OpenSea and our exchange contract accounts can be makers or takers in an order and I'll go over what that means in a bit. And finally, that kind of represents what you would see when you go to OpenSea and you go to your profile page. So if you're having a hard time understanding what that means, it's just that next we have collections. Collections are a grouping of assets or all of the assets in one or more contracts.
00:18:44.530 - 00:19:41.954, Speaker B: Typically collection creators will have one contract in their collection. We've seen certain instances where creators wanted to have several different contracts, all living under the same collection. And this is really just an entirely off chain concept that we developed to make visibility on OpenSea a little bit more organized for creators specifically. And collections include metadata like the royalty information of how much money a creator gets on secondary sales, social links, obviously information about the contracts themselves and they can have one or more authorized editors on our website. And that kind of allows user or creators to have several individuals working and managing their OpenSea infrastructure without having to worry about who has access to what wallet. Next, we have events. And events are kind of broken down to two types.
00:19:41.954 - 00:20:38.014, Speaker B: One are on chain events and these include transferring an NFT from one wallet to another. Sales of those NFTs minting NFTs as they're created. And then they also include off chain events like bids and listings, which I won't go too much into the infrastructure of how an exchange contract works, but the bids and listings kind of happen off chain. And then when they're ready to be matched, meaning that there is a person who would like to accept an offer or purchase an NFT, then that's matched and that event happens on chain. Finally, we have orders which are by far our more complex model that we have within our system. These are account submitted intents to either buy or sell an asset. So these represent only one side of that transaction, meaning either the buyer or the seller.
00:20:38.014 - 00:21:27.080, Speaker B: And that can kind of apply to different types of sale structures that we have on OpenSea, like auctions, direct sales, Dutch auctions, things like that. These exist off chain until they're matched. They typically have a type associated with them, whether that's a bid or an ask. An ask is a listing for sale, asking something to be listed and they contain the metadata required to actually match an offer or one side of an order on chain, if you are willing to provide the other side. And then this is where the concept of maker and taker come in. Like I mentioned for accounts, accounts can be makers or takers. This actually was a concept that took me a while to kind of understand when I entered the world of OpenSea and just exchanges in general.
00:21:27.080 - 00:22:26.202, Speaker B: A maker is something that is an individual that provides liquidity. The best way to think about it is the first mover in two sided sale, whereas the taker is the one that takes liquidity. So making and taking liquidity, the reason why the word liquidity is used is because that liquidity could either be an individual NFT or it could be ethereum, like buying ether. And that kind of makes more sense when you list an asset or when you create an offer on an asset that then the owner of that asset can accept, in which case the maker would be the guy that first moved. And then that's kind of why we have that distinction between the two going into what our rest endpoints are. These are the most popular endpoints that we have, but by no means are they the entire set of endpoints that we have. I just thought that these would be ones that would be very useful for individuals to get started with.
00:22:26.202 - 00:23:16.198, Speaker B: But afterwards I'll kind of go over some of the other ones that we might have available. The most standard one that you might think of is just a get endpoint against our assets. This fetches a list of tokens based on some filtering criteria. That criteria could be something like the contract address of that token and then in which case it would fetch all of the tokens within that contract or the collection slug if you want to just filter by collections. Next we have the get token by actual Identifier API. And to uniquely identify a token within OpenSea you need to provide both the contract address as well as the token ID. And then those two things together kind of provide a primary key for finding that token within openc systems.
00:23:16.198 - 00:24:46.578, Speaker B: And this fetches a little bit more detailed information about a specific token, whereas the listing API is a little bit more bare bones to just provide an overview of each NFT. So an example of this is that for, ERC, 1155 semifungible tokens, this includes a list of all the owners of those tokens, instead of just providing the individual owner, which doesn't really make any sense in the world of semifungibles as well as providing all of the open orders, meaning orders that haven't been matched yet and are still valid for being matched for that token. Next we have the Get collections endpoint which lists all of the collections very similar options, filtering options to the assets endpoint. So for this one, what would make more sense is filtering by asset owner. So if I wanted to get a list of all of the collections that I have at least one NFT in that's when I would use that asset owner parameter. Next we have the Getcollection stats endpoint and this endpoint takes in a collection slug which is just like a human readable Identifier that the collection owner chose for that NFT. If you go to any collection page on OpenSea, you'll see that as the endpoint name, you'll see the collection slug and then this provides a list of statistics about that collection.
00:24:46.578 - 00:25:51.578, Speaker B: So this includes trade volume, I believe, like 30 day averages for different things, as well as a very sought after metric in the NFT ecosystem which is the floor price, which is floor price for those who are not familiar, is just the lowest price open order for a asset or an NFT in that collection. So this is typically just people view this as a metric of how much money it would take me if I wanted to enter and have an asset in this collection or an NFT in this collection. Next we have the Get Events endpoint, which fetches a list of events based on filters. Like I mentioned earlier, this endpoint requires an API key header. This is kind of what that looks like. You would have to pass in this as a header for that API key. And then finally we have the Orders endpoint, which again, like the Events endpoint, does require an API key and it returns a list of orders based on filtering criteria.
00:25:51.578 - 00:26:49.210, Speaker B: These include filtering by makers and takers. So you can see all of the outstanding offers that a specific person has made or any incoming offers that that person can accept. Personally, I think that this is an underutilized concept that I would love to see some projects come out that think of clever ways of using this and I won't go into too much detail. Next we have the OpenSea SDK, which is kind of like a complementary package on top of the API itself that we provide for JavaScript developers. And it's an NPM package for those who are familiar with web development. And really this allows you to have more advanced e commerce functionality, including buying and selling NFTs. Technically you could post orders directly to our API.
00:26:49.210 - 00:27:30.646, Speaker B: Many people find that to be very complicated because that endpoint requires a lot of fields and a lot of validation. And this SDK provides a lot of that out of the box and kind of abstracts away a lot of the complexities there. It uses Web three JS, which is a very popular package for Ethereum or EVM interactions under the hood. And that really allows you to do something as simple as pasting in your private key in an environment variable where it's hidden. And then you can do things like submitting orders out of the box. And I'll show what that looks like in our documentation in a bit. Set up for it is very straightforward.
00:27:30.646 - 00:28:13.962, Speaker B: It's one command with an NPM install. Obviously make sure that you have Web Three JS as well. It's backed by our Rest API and the Exchange contracts that we have within Openc, which are known as the Wyvern Exchange contracts, which I'll go into that in a little bit. That contract is actually integrated directly into our SDK. So creating buy and sell orders is very straightforward as well as fulfilling existing orders. So if you find that there's an order that's very advantageous for you to programmatically accept, you can do that using our SDK, which is in my opinion, very exciting and opens up a whole can of possibilities for what you can do with the SDK. So, real quick, I'll go into what interacting with all of this looks like.
00:28:13.962 - 00:28:41.810, Speaker B: I'm skipping ahead a little bit. Sorry. Okay, so this is what our API reference looks like. This is where we define some of our models and the fields that you might expect to see in those models. This is the Assets endpoint accounts. This is a reference to the Get Assets API. Includes this UI, which we've worked to kind of develop or to build out.
00:28:41.810 - 00:29:25.242, Speaker B: Provides you with the ability to actually interact and make calls directly from here, which is very nice if you're testing out the waters with the API and you're not really sure what you want to do yet, and you're not really sure what that data looks like. So you can actually pass this information directly in. So if I go here, I don't think this account actually has any NFTs in it, so it won't work. But if I press try it yeah. The platform that we use for creating our documentations website has been weirdly slow today. But the benefit of this platform is that it actually provides you with code examples that you could copy and directly run in whatever environment. And it works out of the box, which is really exciting.
00:29:25.242 - 00:30:02.586, Speaker B: This is an example of what the result would look like. But if we really want to, I don't really have to even wait for this UI to work. I can just copy this curl command directly. I call this again. Like I said, I don't have any assets any assets in this account. So maybe I'll switch over to one that does not a demo. If it doesn't work, or if it works the first time you try it and we have a bunch of data, it looks kind of ugly.
00:30:02.586 - 00:30:41.634, Speaker B: So maybe we can do a little bit of reprinting. Okay, it doesn't matter. We got the data here. It just doesn't look pretty anyway. You have access to all of our endpoints here. It describes a couple of other ones that I might have missed out on, like bundles, which is just a grouping of assets that people have to sell things, fetching asset contracts if you want to fetch the information on a contract directly. And it also includes references for our testnets API.
00:30:41.634 - 00:31:18.354, Speaker B: And like I mentioned, this is a one to one mapping between our testnets and mainnet API. So any API that you have available in mainnet, you can try out in testnets, which is nice. It gives you a little bit of a safety blanket. Next, going into what our SDK looks like, this is the GitHub page for it. The README offers a lot of detail as to how to use this SDK. Installation is pretty straightforward once you actually install it inside your project. Getting the SDK set up is as straightforward as providing a network that you want to use a Web Three provider, which is typically something.
00:31:18.354 - 00:32:19.746, Speaker B: Like infuria or Alchemy and these are just like connections to existing ethereum nodes as well as your API key. And if you need to submit orders or do anything that interacts with the blockchain, you can also pass in your private key for your account here. And then at that point the SDK would be able to kind of do things on behalf of your account like signing know, you could fetch assets and other data just the same way that you would with the API. It's kind of a wrapper on top of it. And then you can do the exciting part of using the SDK which is creating buy orders, creating bundles. You can create sell orders, of course you can create special kinds of orders like crowd sales if you want to do different types of listings like auctions as well. You can fetch orders that you have existing and then you can also fulfill orders.
00:32:19.746 - 00:32:37.040, Speaker B: So if you have an order that you know you want to accept that you fetched here fulfilling that order if you have the funds in your account, it's as easy as calling this one line if you have the order information, which is very exciting. And then the same kind of applies for accepting existing offers that you might have.
00:32:39.330 - 00:33:06.440, Speaker A: So sorry to jump in here but we are a couple of minutes over. Yeah, super detailed explanations. That was super cool. But on that note, I know there was a lot of questions in the chat, however, the chat was really lively and it looks like everyone's mostly been answering those questions on your behalf, which is really awesome to see. But we can maybe do one quick minute for questions if anyone wants to unmute their mic to speak up really quick.
00:33:11.690 - 00:33:30.430, Speaker C: No, I would ask about the order things. I think a lot of people just afraid to use it much because like kind of limits and you said it is underutilized a lot and my take on that is like I don't really want to abuse anything like orders endpoint.
00:33:31.970 - 00:34:20.746, Speaker B: Yeah, I understand your perspective here. I hear you on this and this is something that we're trying to improve on as a platform. Really a lot of the limits that you might have heard of have to do with the fact that people are making unbounded or submitting unbounded amount of orders on our platform. So if you have one ETH in your wallet, people were submitting several thousand orders all for one ETH, which technically is valid, but you can't realistically accept all of those. So what we had to implement as a stopgap for that is essentially what people in exchanges define as margin requirements. So if you have one ETH, you can only submit upwards of 100 x that or I'm not sure what the number is at and that's just to prevent that's.
00:34:20.778 - 00:34:28.770, Speaker C: Cool. Yeah, makes sense because all these orders are going to mess up whole system.
00:34:28.840 - 00:34:41.346, Speaker B: Basically right thank you. Yeah, no problem. And I'm sorry I went over. I didn't realize how slowly I was going with all of this. But could we maybe provide people with access to this PowerPoint?
00:34:41.538 - 00:34:58.050, Speaker A: Yeah, of course. So there is the OpenSea Discord channel on ETHGlobal so they can be sent there. I know someone in the chat did ask if they can get the slides. So if you just want to send the link in there, michael, you should be in our discord.
00:34:58.210 - 00:34:59.400, Speaker B: Yeah, no problem.
00:35:00.210 - 00:35:00.960, Speaker C: Awesome.
00:35:01.890 - 00:35:08.894, Speaker A: Well, thank you so much, Michael. That was super interesting. Really cool learning about Openc API and stuff.
00:35:09.092 - 00:35:10.190, Speaker C: Very intense.
00:35:10.850 - 00:35:29.540, Speaker A: Yeah. Thank you so much for spending your Thursday evening with us. And to the rest of you, thank you so much for tuning into Openc's Workshop and being a part of NFT hack 2022. I hope you all have a great rest of day or evening or morning, depending on where you are and.
