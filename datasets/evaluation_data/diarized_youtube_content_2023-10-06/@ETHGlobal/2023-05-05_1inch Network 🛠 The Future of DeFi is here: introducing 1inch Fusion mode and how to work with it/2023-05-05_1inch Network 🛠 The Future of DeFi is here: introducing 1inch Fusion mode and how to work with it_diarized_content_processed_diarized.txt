00:00:08.330 - 00:00:57.454, Speaker A: Hey guys, do you hear me? Sorry for the small delay. So today it's kind of actually it's a long workshop and I'm not sure I can handle everything in 30 minutes, but I will try it least I'll try to explain what is One inch fusion and why it's so like what's what is the hype about one inch fusion and how it works under the hood. But let's make some small recap. What is one inch? Firstly, so basically 1inchh is started as a hackathon project at Ethereum, New York at 2019 by almost one and a half men. Right now we have about 200 people. We have a lot of metrics, we have billions of volumes of dollars on multiple chains. We actually are one of the largest deck segregator on the market.
00:00:57.454 - 00:01:40.118, Speaker A: We also have multiple other protocols, like limit order protocol. We do have one each wallet, actually it's a list of protocols and you can take a look on some of them here. One of the most popular one right now is limit order protocol and 1inchh Fusion. Also, we do have 1inchh Pro, that is a product for institutionals that provides QIC and AML policies. So let's make some intro about what is 1inchh aggregation protocol. Firstly, maybe you heard that Vanich is Dex aggregator and actually it's true, we do have API for aggregation information on the DEXes, how basically that works. Let's imagine that you want to make a swap on the uniswap.
00:01:40.118 - 00:03:02.466, Speaker A: And in this case let's imagine that you want to swap for example 100 Ethereum to some amount of die. And what will be the problem that you will have potentially that if you will use uniswap, they actually use specific pools, liquidity pools to make the transaction, to make a swap and of course you will have some price slippage. What is the best idea how you can have potentially the best lowest possible slippage? In this case, you need to have multiple pools and try to split your 100 Ethereum amount to some small parts. It varies how small it is, but it must be like that small that the price slippage in each pool where you will try to make a swap will be almost zero. And you need to do all of that inside one transaction. So basically it's how 1inchh works under the hood. As A one Inch Desk Aggregator product, we basically split if you want to swap, for example, Dai to One inch, we split amount of Dai to some small subparts and split these subpars to another subparts and try to rode all this and emulate all of that logic through multiple liquidity pools for almost each decks that have existed on Ethereum chain, for example, on a Binance smart chain and trying to find the best option to get the max return and have the lowest gas for the user.
00:03:02.466 - 00:04:01.814, Speaker A: That's like pretty basic right now and most of the guys aware of it but I just want to remind that how it works and the main feature here is that it happens atomically. So for example, if somewhere price goes wrong, we have some desired minimum amount that you will need to get. If you are not okay with that, the whole transaction will be reverted. So basically you are protected from any edge case that can happen during this swap. But the main problem here is that if it's one atomic transaction and in some cases, for example if it's some shitcoin and sometimes everyone needs to swap some shitcoins in this case if you have a lot of them, you can have a really big slippage. It doesn't matter how much DEXes you use because liquidity for some shitcoins can exist for example only on Sachs or on other chains. And if you are doing that atomically, that means that it's impossible to aggregate all of that liquidity in one atomic swap.
00:04:01.814 - 00:04:49.958, Speaker A: You need to wait a bit to make it. In this case the limit order protocol can help you. What is a limit order protocol? It's quite the same as basic limit orders on any attacks, but it's completely decentralized. So basically you just sign a specific structure that you agree that our smart contract can withdraw the tokens from your account and fill it using specific function and get some tokens instead. Basically make a swap and anyone can use this function and they just need to provide specific instruction from your site. It's a signature and data which token they need to withdraw. Basically, limit order protocol allows to make a gasless transactions on your own site.
00:04:49.958 - 00:06:02.080, Speaker A: I mean, you can make a gasless swap for example in this case you can just need approve for example for the Dai to the limit order contract and make a limit order for example to sell Dai for ethereum and anyone can actually fill this transaction on behalf of your user. And in this case basically not user is paying the gas, but actually architecture is paying the gas. It's a cool feature but the problem here is that there is specific price condition here, it's fixed. So that basically means that if price goes wrong you can wait for like 4 hours or four weeks to get a good price to make this order executed. If you will try to say in the tax terms it's like market sell, there is no market sell here, it's only limit order and you need to wait. There is no any guarantee that it will be executed even if the price will be the same as the market price. For example, what if we want to make something on the market price but we want to make it like limit order? Is it possible in the defy? And actually that's the question what we have and right now we can say that it's possible.
00:06:02.080 - 00:06:49.280, Speaker A: Actually it's the solution what we make with the one inch fusion. We want to make something like market price sell at the same time. It must be like atomic, it must be limit order inspired, it must be gasless, it must be protected from mev attacks all at once. And that's what is fusion actually it's a fusion of multiple protocols at one inch. How it works basically it's auction. You try to say that I am okay to sell specific amount of dai and the rate is going down and down and all of that is actually one limit order. And what it allows to anyone, for example to the resolver, to the party who will try to fill your order, it allows to aggregate liquidity during that moment.
00:06:49.280 - 00:07:30.422, Speaker A: So basically you killed multiple issues at the same time. Firstly, you try to actually have a market sell feature. So you sell some tokens without any you don't care, it will be all filled. There is a guarantee that it will be filled. There is high probability that will be filled at the same time the price switch will be a bit lower because you don't need to make it atomic. And for this case we actually use price auctions and this is like example of the curve for the price auction for the rate where the rate is going down during the time. Basically it looks like Dutch auction.
00:07:30.422 - 00:08:16.700, Speaker A: Actually the main feature is that all of that logic is quite simple for the user and there is almost no difference for the user. When you try to use one inch fusion, it's quite the same as just make and chain transaction, but it's off chain transaction. It's basically signing a specific limit order on the side of the user and that's it. But there are some additional features here. The first one of course is the gasless execution. What I mean is that as a limit orders is off chain transaction and you basically just send some data to some database, that's it. And anyone can access to this signature to your data in this database and execute transaction on your site.
00:08:16.700 - 00:09:12.586, Speaker A: The gasless execution doesn't mean that you don't pay gas fee at all. This gasless fee is just included in the rate of the fusion order and basically it's still a bit more efficient than if you will try to pay on your own. Because in the fusion protocol there is a specific gas optimizations. Basically that means that when somebody try to pay for your transaction to fill the transaction, the relayer can execute multiple transactions at the same time. It will be one on chain transaction, but multiple fusion transactions in one transaction, it can save a lot of gas, a lot of ethereum on gas for example. And when the volumes are large, it can be like ten times more efficient for example than just paying on your own for that. So that's basically how actually any fusion orders are working right now.
00:09:12.586 - 00:10:00.780, Speaker A: Any off chain orders are working, the orders going through the blockchain, through your layers through some market taker who is doing that is quite the same for the limit order and for the fusion. Let's try to make it more complicated. Why we have a view protection by default here because there is no any blockchain communication on the site of the user. There is no any option how somebody can steal your data or execute it on your own. But that doesn't mean that there is no me protection for the resolvers. But the risks in this case are much lower than for the user. Because when resolvers are trying to fill this order, they have risks that somebody can execute it a bit more efficient and they can arbitrage the resolvers on their own.
00:10:00.780 - 00:11:02.298, Speaker A: But the price difference here is not that critical and it's more a case of the resolvers how they can try to find a way how to protect from the myth. So the risks are lower for the users, a bit higher for the resolvers. And what about liquidity feature that basically actually we can aggregate all the liquidity across multiple chains during some auction time. So for example in case of any resolver we don't have any design how you need to aggregate or how you need to fill each user order. You just have a time for that and you can't be forced to execute any order as a resolver. So basically it's open market and issue resolver just can aggregate liquidity from any point. In case of our shitcoins, for example how it can work, we basically need just for example any shitcoin that's existing on the ethereum and existing on the polygon and all liquidity is on the polygon.
00:11:02.298 - 00:12:11.186, Speaker A: You can see that there is a pretty good interesting order on the ethereum side and there is no any liquidity to execute it right now. Any resolver can take some time and withdraw this liquidity for example from the polygon chain to the ethereum and after that it can be executed on the ethereum side. It will be impossible to do the same logic for example on aggregation protocol because it must be atomic and it must be instantly and in this case that's the instant profits for all the parties. It just makes the markets more efficient because users can get more tokens in this case and resolvers can get some profits from that case as well. There is some slippage for the user because of the price option the days goes down but this spread is not that high because it's pretty open market and it's very easy to become a vanish resolver right now. So right now let's take a look on some PCs example about price auction I just want to say that we do have right now a more dynamic formula for each pair on one each front end. So it depends on which token you are selling and which token you are buying.
00:12:11.186 - 00:13:18.570, Speaker A: The price follower can differ and for example on ethereum die rate if you try to say that in the beginning when you're trying to make an order, a price auction, the price is going down not that fast. We are allowing resolvers to instantly feel this order but if you see that during some amount of time, like 1 minute, nobody feel it. That basically means that price is really very bad and nobody will feel and we can make it a bit faster going down, making this period a bit more a bit more extreme. If it's still okay, that means that the market is changing rapidly and we need to stop working like this and try to have the same stable formula. So basically it's a lot of logic under price formula under the way how you can execute the auction it's another way how you can make the markets more efficient. It also depends on the pair and the liquidity of the pair. We also do take care of all of that and it's another opportunity how you can for example, design something or propose your own price formula for specific pairs and make it more efficient.
00:13:18.570 - 00:14:20.442, Speaker A: Just want to mention that the whole picture actually looks like that if you'll try to understand funnish Fusion is that market maker is basically users they just need to send an order, send it to the network of the one inch of one inch Fusion. After that one, each network gives you this order as fusion order and share this fusion order across resolvers. Right now there are top ten resolvers that can execute any order instantly and if you want to participate or become a resolver there is a documentation on our website how you can do this. Basically the intubator for any resolver is quite low. It's about 101 each tokens and if you want to participate it's just like less than $60. So basically any resolver can fill limit actually it's limit order. So any resolver can fill this limit order through one inch smart contract that is open source and when it's filled, limit order is executed and sent funds to the maker so basically to the user.
00:14:20.442 - 00:15:08.762, Speaker A: So the logic is off chain and on chain at the same time. There are some questions what is one inch Fusion? Is it off chain logic or is it on chain logic? It's a hybrid, sometimes it's off chain in some cases, in other cases it's on chain. But basically it's quite the same as a limit order protocol but more advanced with more additional rules over limit order. If you want to try to understand it, let's talk a bit how you can work with the Vanish Fusion. Basically there are two options how you can integrate and work with Vanish Fusion. The first one actually you can integrate Vanish Fusion to your app. Let's imagine you have a wallet or any app that needs to have a functionality to swap any token to any other token.
00:15:08.762 - 00:15:50.904, Speaker A: In this case it's pretty simple. We do have a one inch fusion SDK and in this case it's in JavaScript we have a brushed version as well and if you want you can just use it. There is a pretty easy example here I will show you 1 second how it works so basically in this case you can use for example node JS application to make a fusion order so we have one each fusion SDK. It's open source and it's quite transparent. It's not that hard to install it. In this case, you just need a node. You need a private key.
00:15:50.904 - 00:16:30.868, Speaker A: You need a maker address of the user who will be creating. A limit order. And what you need to do is basically have a web free node and our SDK. You just install our SDK, set up our SDK with our network, our URL, of storage, of limit order, of fusion. Orders and web free provider and basically you just need to create an order where you specify a from token address which Token you are trying to swap two token addresses you are trying to set like to buy and amount from token address. So it's like only four parameters for the function. It's quite simple.
00:16:30.868 - 00:17:04.656, Speaker A: And in that case, I don't have enough ethereum right now to execute this function. But basically, it's just one function. It's not a lot of issue to make it work. So it's the simplest way how it can work with vanish fusion order and also it's gusless. So basically I just want to add when you will try to use, for example to run SDK or niche fusion SDK. It can be not working because you still need to make a proof of the from token amount to the fusion contract. If you don't make an approve, you need to use permit function.
00:17:04.656 - 00:17:47.752, Speaker A: In this case, it's more complicated if you want to combine permits and make a fusion order. But it's possible. Of course, we do support permits in the fusion protocol, but in this example, you need to make approve before you're trying to make a swap. So that's one example how you can use one inch fusion orders and the second one actually, is to become a resolver. If you want to become a resolver in one inch like ecosystem. There is multiple steps. What you need to do basically the first one you need to have some vanish token staked, you need to apply as a resolver and basically all of that is pretty decentralized.
00:17:47.752 - 00:18:26.776, Speaker A: But if you want to be on the front end side, on the one inch front end inclined. There are multiple additional steps that requires us to contact with you, to chat with you. So we have a website form where we specify all. The data what we need to do to become a resolver. But basically it will end up with a chart with our team that helps you to integrate and to become a resolver. On our site, we are obligatory to make some compliance checks at the same time. But if you want to become completely decentralized, potentially you can do this, you can still do this.
00:18:26.776 - 00:19:33.750, Speaker A: That's the main point about one inch fusion that is right now the network is much more decentralized and we can't stop you to become a resolver because it's mostly on the smart contract sites. I just want to explain a bit more how resolver works, how the logic under the resolver works and in this case I need to open one inch. Let me, give me 1 second please. So let's take a look at our delegate tab at one inch front end, 1 second. So right now we have multiple resolvers and what is it? Only top ten resolvers in this list can be allowed to fill transactions and what does it mean? Like all of them are competing for your transaction. Each one, each fusion order can be filled not atomically but by parts. So basically when you create a swap, multiple resolvers can fill the same transaction.
00:19:33.750 - 00:20:27.590, Speaker A: It's their own competition within them. Who will be the first one who will fill all of that? So they need to take care on their own how it's happening. Each one inch fusion resolver can basically share some profits with the user. In this case, for example, if you are owner of the vanish tokens you can delegate vanish tokens to any resolver and allow resolver to be on the top and fill the vanish fusion orders and get some profits. So the scheme looks like pretty the same as curve wars as a curve staking. But there is one small difference here that basically vanish fusion resolver is not obligatory sharing the profits with the user. There is no direct scheme here but if vanish fusion resolver will try to refuse to share the profits, you can just undelegate from this part and delegate another resolver.
00:20:27.590 - 00:21:33.378, Speaker A: So basically on large volumes it will works on the markets, like there will be a market competition and any resolver is obligatory to get some profits, to share profits with the user. If it will be lower than expected from the user side, you can just try to use another one. So as you can see right now we have about eight working open sources like open resolvers and the market share right now is much more lower in terms of one each labs resolvers. It's only about two months that we are working right now and we have pretty good results right now. I just want to add that we also support not only ethereum chain right now we do support binance smart chain and a polygon chain and we have plans to support all networks that we have on the front end side. So it's about 1110 networks so it will be Ziki sync as well. The option how you can participate as a user, for example, you just need to stake one inch tokens and I just want to mention when you stake one inch tokens you lock your tokens for specific amount of time.
00:21:33.378 - 00:22:09.310, Speaker A: You can lock it, for example, for two years. In that case you can't withdraw it for two years, but you have pretty good amount of delegated tokens. That means that you will have higher Apr and higher profits from the resolver when you will stake it. So it's up to you how much amounts you want to stake and for how long you want to stake it. You can always unstake it before this locked period. But in this case you will have some fee and for example, if you lock your tokens for two years and you want to unstake it in the next transaction, you will lose like 99% of the total transaction in the fee. In this case, all the fees going to the one inch Dao.
00:22:09.310 - 00:22:39.720, Speaker A: So it's pretty transparent. If you have any questions, I'm pretty happy to answer that. So I just want to show again our core codes how you can participate as a resolver and how you can create fusion orders using one inch fusion order SDK. We do have additional instructions how we can use fusion on our documentation website. So basically this link is going to our documentation website. Thank you.
00:22:41.930 - 00:23:07.502, Speaker B: So if a third party partner wants to integrate fusion to, let's say, a major centralized exchange, they also have a Dex aggregator. Does it have to be a separate button or can it be somehow fused between fusion mode and they have sort of the legacy swap mode, right? So how would that work out?
00:23:07.636 - 00:23:48.080, Speaker A: If it will be some analog Dex aggregator, it will be quite hard to aggregate it if they have only on chain functionality. I mean, like in case of one inch, for example, trying to integrate another one inch. In this case it's almost impossible because one inch needs to integrate only DEXes. Fusion is not a Dex and in the case of another Dex aggregator, it requires to make off chain logic. But they need only one atomic transaction, so it's not quite possible. Yes, they need a different interface and they need to explain the user that this transaction can be filled not atomically, but by some steps. There is like an auction here.
00:23:48.080 - 00:24:47.906, Speaker A: Just how would you get historical trade data? Like the trades from historical stuff. Basically each fusion order is in the end of all it's just on chain transaction. So basically if you would try to fill the like if you want to get the data, you can just index that. You can use Dune analytics for the data or you can just go to the address scan and see all the Vanish resolver orders that are executed from the Vanish fusion contract. That's the one option that you can do. The second one we do have right now, like a database like API where there is a storage of all orders, you can fetch data there. But I do recommend that the best option is actually to index data from the nodes directly or actually use June analytics for example, to fetch all limit like fusion orders.
00:24:47.906 - 00:25:50.288, Speaker A: We do have gene analytics dashboard for the fusion and we do have all the requests. It's quite transparent there how it's happening. So all the analysis about fusion is actually quite open source and transparent. Yes, the main logic here is that it works like that. Right now there is one more edge case that potentially later diffusion order can be filled not fully, there can be some small amount that will be not filled right now it's handled in the case that in most cases right now it's not very profitable to fill order by small steps. So usually it's always they just fill it atomically like in one step or two steps later. With large amounts it can be a small issue with some small amounts that are not executed it's the same as for example, one inch limit orders have.
00:25:50.288 - 00:26:45.120, Speaker A: This is the same issue like you can trade, you can make a limit order for 100,000 Ethereum and 0.1 Ethereum will be not executed in the end of all because it's just more expensive to spend on gas than execute this limit order. Actors in the overall transaction are paying for the transaction. Basically, it's only a resolver that is paying for the transaction and in the case of resolver, it's this possibility of the resolver to calculate how profitable the transaction will be for the resolver, the price is going down. That basically means that, for example, let's imagine that currently Ethereum price is like $2,000. I want to make a fusion order to sell Ethereum for $2,000. Let's imagine I make a diffusion order but nobody wants to execute this transaction because the gas price is like $20.
00:26:45.120 - 00:27:48.096, Speaker A: For example, let's wait like 10 seconds. The price right now is not $2,000, it's like 1099 99 in this case, for example, it's profitable and somebody will come and fill this order. So the price is going rapidly down and during the moment when the market price is a bit like is a bit lower than the real price, somebody will catch and execute this order. It's quite the same I think, as front running or not front running, but as Arbitrage bots are working on the market they're just trying to compete to find the way how they can execute or optimize the market. There is a period when there is an auction, of course it can be canceled, but if you want to cancel it, it must be on chain transaction. So that's the pain point here that if you'll try to cancel it, there's no guarantee that it will be canceled instantly. You need to wait that the transhange transaction will be executed.
00:27:48.096 - 00:28:30.230, Speaker A: So yeah, it's quite painful issue here but of course it can be canceled by the amount of time but for example, in some cases it's very edge cases, but sometimes it happens when the market is going, not in your position against you all the fusion order can be not executed at all in this case. Yeah, it's just time constraints. When this fusion order is executed, all of that is actually off chain data that you are signing for. So basically you can see all the details how this fusion order will be executed. There is no any something that is not off chain or not signed, not in the permissionless way. Basically.
00:28:34.380 - 00:28:35.828, Speaker B: Becoming a resolver.
00:28:36.004 - 00:29:18.080, Speaker A: Right now there are multiple like actually one incentive program to become a one inch resolver. That basically means that we share some one inch tokens, one each dao sharing one inch tokens to resolvers to help them to reduce their costs on building the infrastructure. There are some details on the Vanish website for that. So yeah, there are multiple incentives from one inch team to help to build resolver on your own and right now it's pretty high volumes on the Vanish fusion order so I do recommend to try take a look on it. Yeah, sorry, I think we can end up thank you so much.
