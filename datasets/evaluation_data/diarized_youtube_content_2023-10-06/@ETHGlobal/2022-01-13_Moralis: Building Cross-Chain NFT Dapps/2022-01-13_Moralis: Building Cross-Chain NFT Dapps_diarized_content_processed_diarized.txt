00:00:00.090 - 00:00:02.160, Speaker A: Or Friday, depending on where you are in the world.
00:00:18.030 - 00:00:19.862, Speaker B: Standing by. 1 second on the stream.
00:00:19.926 - 00:00:20.860, Speaker C: Stand by.
00:00:26.760 - 00:00:42.188, Speaker A: I hope you're all excited for NFT Hack. This is our first East Global event of 2022, so we're super excited. And then Ivan is actually our very first workshop for the event as well. So, Ivan, you're kicking off the new year for us?
00:00:42.274 - 00:00:43.420, Speaker C: That's fantastic.
00:00:48.960 - 00:00:51.390, Speaker A: Should be almost good to go soon.
00:00:59.800 - 00:01:10.470, Speaker B: Yeah. Stand by. We're going to give it one more minute and then we may just go. And I'll repost a new stream, but I'll update you shortly. There seems to be a glitch here. Stand by.
00:01:12.040 - 00:01:37.900, Speaker A: Sounds good. For those of you who are just trickling in, we're just waiting for the YouTube stream to be set up before we officially start.
00:01:40.350 - 00:01:43.740, Speaker C: Perfect. I can actually see the YouTube stream. It seems to be working.
00:01:45.970 - 00:01:47.310, Speaker A: Oh, perfect. Okay.
00:01:47.380 - 00:01:48.734, Speaker B: Sorry, it just went up.
00:01:48.852 - 00:01:49.230, Speaker A: Cool.
00:01:49.300 - 00:01:49.630, Speaker C: Perfect.
00:01:49.700 - 00:02:14.498, Speaker A: All right, well, welcome everyone to our very first workshop of NFT Hacks 2022, our very first ETH Global event of the year. So we're super excited to have you all kick it off with us. We have Ivan on Tech here from Morales, who will be doing his workshop on building cross chain NFT DApps. So with that being said, I'll hand it over to Ivan and you feel free to start your workshop.
00:02:14.594 - 00:02:30.934, Speaker C: Perfect. Thanks, Anna. And thanks, guys for joining. So in this workshop, we're going to discuss a lot of things that will help you on your journey. Building your NFT app, building your game, building your metaverse experience, whatever you want. Because at Morales we have a lot of tools for this. We have a lot, a lot of tools.
00:02:30.934 - 00:03:02.210, Speaker C: And it's going to be very fantastic to show it with you. And then we're going to have A-Q-A at the end and you can ask whatever you want. First and foremost, the things that you will learn how to do in this video is, for example, how to use Unity game engine. And from Unity you can export to Xbox, to PlayStation, to iOS, to Android, to web, and where you can build the games that have crypto login. So imagine you are in your living room, you bring up your Xbox game. You can log in with Wallet Connect. I will show you how to do that or how to do VR, because you need to also support exporting to VR.
00:03:02.210 - 00:03:38.580, Speaker C: Next, I will also show you how you can use our NFT API to get cross chain NFT data from Ethereum binance and polygon, avalanche, phantom and all testnets. And we're going to add more blockchain soon as well. So when you get a user that is using your application, you can get their balances of NFTs ownership, all transfer data. You can get the lowest price of the NFT if you want to show some statistics, kind of like the floor price, all of that is supported. And so so much more. But first and foremost, my name is Ivan, I'm the CEO and one of the co founders of Morales. And we focus a lot on the NFT space.
00:03:38.580 - 00:04:07.594, Speaker C: By the way, I hear some background noise, maybe it's Anna you have to mute. I hear some happy birthday or something but it's all good now. So let's start. If you go to Docs Morales IO, you will see this page and then if you go on the left and you see web3 API, you can see the NFC API. So let's start here. This is something you can do already while you're watching the stream. I will walk through it step by step.
00:04:07.594 - 00:05:15.978, Speaker C: First and foremost, you see all of these different endpoints that are supported. These endpoints for, for example, searching NFTs, getting the NFTs of a user, getting NFTs of a collection, getting NFT transfers in a block. If you want to have like real time alerts when something happens on chain block by block regarding to NFTs and all of these other endpoints, they are available as rest HTP endpoints. So you can call them from your server however you want. If you use Morales SDK which is JavaScript SDK, you can also just call the SDK function which if you click on these endpoints right here, for example, I clicked on this get NFT, you see that you can also call it like this already prepared function that will call the API behind the scenes. And in order to build games for Unity that are then exportable to different platforms like Xbox, PlayStation, Web, desktop, you can Google Ethereum, Unity, borrow plate and you will come to our borrow plate here, which is basically like a Unity SDK. And you can see that you can authenticate with Wallet Connect and this is native Unity.
00:05:15.978 - 00:05:48.826, Speaker C: When you're authenticated, you see the address right here in this demo app. You see all the assets and so forth. But what's important is that this Unity borderplate, it supports all of these different endpoints as well via C sharp interface. Because of course, Unity as you know it is C sharp and natively. In Unity you can get all the data about all the NFTs on different blockchains and all the user balances and so on and so forth. So we have two major platforms supported with our SDK, that is JavaScript and C Sharp. And JavaScript is for all web, as you know.
00:05:48.826 - 00:06:26.594, Speaker C: And C sharp is for Unity. But Morales is so much more than just an API because now I just show you that we have API and some SDKs. Morales in itself is a whole end to end platform for creating DApps, including creating NFT applications. So let me speak a bit about that. What else we provide for your NFT project that is outside of just an API that is accessible via different programming languages. And of course you can also call it Straight via HTP. So one of the most important things is that we provide the full platform where you can log in users.
00:06:26.594 - 00:07:24.594, Speaker C: Because whatever idea you have, whether it's NFT idea or some other idea, you need exactly the same things as all other people with the same idea. You need to log in the user, you need to get their balances, you need to be able to fetch real time events so that when something happens on chain, you need to know that. And you need to be able to sync smart contract events so that when you have your smart contract and somebody transfers or somebody interacts with the smart contract, you need to know that in your code. And the mistake many people make is that they connect to the RPC node and they use, for example, Ethers or web3 and directly speak to the RPC node. And while this can work for small primitive applications, you quickly realize you need to build the whole back end around the RPC node to make anything work. For example, how do you log in a user with an RPC node? Well, in reality, in order to know that the user is who they say they are, you need to verify the signature on the backend. So this is one of the first issues you will discover if you are to build your blockchain applications completely on your own without using Morales.
00:07:24.594 - 00:07:51.406, Speaker C: You need to verify the signature. Then you need to set up the database where you store, for example, the user transactions, user data. Maybe you store their email so you can email them. There's a bunch of off chain data you need to store. You need to fetch your transactions, you need to fetch smart contract events. I mean all of this, if you just use the RPC node directly and you go to a node provider, you will have to do all of this yourself. And this is a server that you will have to run, scale, maintain, debug and so on and so forth.
00:07:51.406 - 00:08:36.538, Speaker C: And this will be 80% of your time that is spent here. And of course you shouldn't do it because this is what everyone needs. Everyone needs exactly the same back end for building their application. And the question is, what if there was a prepackaged solution, a prepackaged back end solution that developers can use in order to move quickly, develop quickly and go to market quickly? And what if there was a nice SDK with all of these features built in? For example, authenticating users on any blockchain, fetching their NFTs, fetching their transactions, and you have everything already in a backend as a service solution. And this is exactly what Morales is. So we give Morales server, which is this backend solution for all DApps needed, because all DApps have an off chain component like we discussed. To build this monstrosity, normally you have to build it yourself with Morales you don't.
00:08:36.538 - 00:09:11.766, Speaker C: And Morales SDK to access the different functionalities in JavaScript or C sharp or whatever. So in a way, you can think of Morales as Firebase of crypto. If you've been using Firebase for traditional web and mobile apps, you know how easy it is. If you have an idea to build some kind of web or mobile app, you can have a prototype already tonight. If you use Firebase, because it's back end solution, you don't have to build anything yourself. You just use simple SDK and simple functions and simple APIs and everything is done for you. While in crypto, in web Three, if you don't use Morales, you can never just get an idea and have a demo already this evening.
00:09:11.766 - 00:09:41.982, Speaker C: In many cases, you have to do your back end, authenticate, user verify transaction and maintain and do all of this. While with Morales, you get this web Two experience dev experience, but it is Web Three. So, for example, if you want to authenticate your user instead of using Web Three or Ethers directly, you can use Morales web Three authenticate. And when you do that, the user can log in on any blockchain. So now we support all EVM chains. We're going to add solana, we're going to add elrond. So this is cross chain, but also cross architecture.
00:09:41.982 - 00:10:10.590, Speaker C: It's not only EVM, because even non EVM chains, they also need exactly the same thing. They need to log in, user fetch balances, and so on so forth. So we have a cross chain cross architecture experience. When you just write one line of code and instantly when your user clicks login in your Morales dashboard, you see all of their transactions, all of their assets and so on and so forth. You can of course use this database to do whatever you want. This database updates in real time that we give you. So when they do new transactions, it all shows up here.
00:10:10.590 - 00:10:45.542, Speaker C: In order to read the database, for example, getting transactions NFTs, you use Morales web Three API, gettransactions get balances, get token balances, native balance, very, very easy. So look, you've written five lines of code. You logged in a user with this one line of code, morales Webster authenticate. Then you've written a few more lines, and now you have a dashboard. You have a wallet with all user assets, kind of like a DeFi dashboard, without doing anything, just writing a few lines of code. You can read the database easily because it's a database that can be queried like your normal mongooseb or postgres. You can do whatever you want.
00:10:45.542 - 00:11:32.998, Speaker C: So you can query on chain data that you would never be able to do without a solution like Morales. If you just use Web three JS or Ethers, for example, this kind of querying, for example, the average transaction that your user does in your NFT marketplace or querying the average something else or querying the top most active users in your DAP. You need to have a database with on chain data in order to do this query. So Morales provides all of that for you. So it is unlimited power. If you truly think about how long time you would have to spend to set up yourself normally versus Morales, it's unlimited power and also very easy to index smart contract events. You just write Morales query and whenever a new smart contract event happens for a specific topic and API, it will get inserted into your database automatically.
00:11:32.998 - 00:12:41.930, Speaker C: And the biggest resource that you can use in order to accelerate yourself as a web Three developer is to go to Morales web Three YouTube channel because there we show you everything step by step. So you want to learn how to do if you go to playlist and then you go to Web Three programming projects here you can see everything how to clone openc in a few hours and we share with you the final code. We even maintain these different libraries. So, for example, if you want to build an NFT marketplace, you should use the NFT marketplace borrow plate, which you can find if you go to Ethereum borrow plate, project on Organization on GitHub, which is maintained by us, and you see that you already have a functioning NFT marketplace, and you can follow step by step how you build it. In this video I cloned OpenSea in 2 hours. Or if you want to build something that is a social network maybe based around NFTs, we have a video for that as well causing Web Three social network. And if you go to the description here in the video you can find the social network borderplate web Three social network borderplate which is also an Ethereum border plate organization on GitHub.
00:12:41.930 - 00:13:07.686, Speaker C: And you see it's a fully functioning social network where you can vote up, you have your on chain reputation and stuff like that. Of course could be very nice starting point for your NFT project that you're building in this hackathon because this hackathon is just a few days. So all time you can save, you better save it. And if you go here to Ethereum borderplate organization on GitHub, you can just google it. If you google Ethereum borrow plates you will find this. As you can see, we have the Ethereum borrow plate which is the react one. So this is just a standard one.
00:13:07.686 - 00:13:48.130, Speaker C: If you want to log in, users see their transactions and you also get NFTs there. But more towards the specific NFT borrow plates. We have this for Unity which I showed you at the start of the stream and we have this standard demo game here where you can log in with Wallet Connect. This works cross chain on the web on Unity you can export to Xbox, PlayStation, web and you bring blockchain wherever you go. Cross chain with Morales functionality NFT Marketplace we have web Three social network and we're adding more and more borrow plates and whenever we add a new borrow plate, we create a video about it. So that's why you should right now go and subscribe to Morales web Three on YouTube. It's very important, actually, and on the high level.
00:13:48.130 - 00:14:13.382, Speaker C: This is what I wanted to explain. And we're soon going to go into Q and A, because Q and A is going to be most valuable. I'm sure you have many questions. But to summarize, number one is our Morales metaverse SDK. And if you google Morales Metaverse SDK, you will find it. But basically, it will explain how everything works. And it will lead you if you click Get Started now, it will lead you to this Unity borrow plate on GitHub.
00:14:13.382 - 00:14:43.094, Speaker C: And if you want to have a walkthrough, this Unity borrow plate, step by step, how everything works, you can go to Morales web Three. And then you can see this video right here from two days ago with Exceedme. So we did a Morales Unity workshop. David from our team, who is really spearheading this Metaverse Unity development. He shows you how to build this project, how it works. He explains it step by step. He logs in with his wallet, and he answers a bunch of questions here.
00:14:43.094 - 00:15:04.166, Speaker C: So this is something you should watch if you want to basically have spoon feeding. If you want us to spoon feed you exactly how this Unity package works, then go there. If you just need the API, let's say you need the API, go to Docs Morales. IO. Docs Morales. IO. You go here to Web Three API, and you see NFT API, and you see the specific NFT functions.
00:15:04.166 - 00:15:29.298, Speaker C: So this one you can use from your own backend or from your own tech stack. So that's number two. And number three that I want to say is that you have this full crypto experience. I mean, you can use Morales as your full backend. If you start here by clicking Getting Started, we explain to you that each DAP has an on chain part, an off chain part, exactly where Morales fits in, how to connect the SDK. It's very simple. It's very simple.
00:15:29.298 - 00:15:48.534, Speaker C: JavaScript, we have react support, view support. You can easily log in your user. When the user is logged in, you have all their assets in the database. So you can just go through all of these steps. And if you want to learn how Morales works fully, fully, fully, fully. We have a morales course. If you go to Morales.
00:15:48.534 - 00:16:09.298, Speaker C: Web Three YouTube channel, and then let me see if I can find it. We have a full Morales course here somewhere. Flash long course. Let me find it. Morales web3 full course. Because we have recorded 6 hours of yeah, here it is. Of golden content.
00:16:09.298 - 00:16:49.070, Speaker C: About Morales Specifically going through everything step by step by step, because this will change your life if you go and you search now on Google. Morales full course for beginners. This is a six hour course which will teach you everything, everything about Morales. This will speed up your development ten x and this is actual fact. Why? Because we have asked our developers how much time do you save? And all of them save between 80 and 90% with the average being 87% and on a high level. This is what we do and we discuss specifics with the NFT, API, Unity, Metaverse, SDK, the full end to end back end platform there is Morales. And now happy to take any questions.
00:16:49.070 - 00:17:01.540, Speaker C: The most important call to action here is to go to Morales Web Three YouTube channel. Sign up there and you're going to get daily Web Three developer content. And on that note, let's go to questions as we have ten minutes left.
00:17:11.050 - 00:17:21.938, Speaker A: Feel free to unmute yourself if you want to ask the question live. Otherwise there are some questions in zoom. So crown of Boji asks, how centralized is Morales?
00:17:22.114 - 00:17:41.134, Speaker C: That's a great question. We have actually a whole video on it. If you google Morales. Is Morales centralized? You will get the full answer. I will also explain to you here, but I want you to watch the video is Morales centralized? So it is this one. So go and watch it after the video. But I will also explain to you here, but here I explained for ten minutes.
00:17:41.134 - 00:18:04.038, Speaker C: So as we explained in our documentation, adapt has two parts. It has onchain part with all the smart contracts, all the user balances and everything else that should be completely decentralized and it will be completely decentralized on chain. And then you have an off chain part. An off chain part. Let's say you're building a game. Will your game run on chain? Absolutely not. Will you have your game loop on chain? Of course not.
00:18:04.038 - 00:18:58.694, Speaker C: Will you have off chain data like for example user email, for example, their phone number in case you want to send them SMS or notification, which you by the way can easily do with Morales. If you go here and you check our videos we just released a few days ago, this how to send SMS messages and all of that easily, easily with Morales, this and there are some things that are on chain and there are some things that are off chain. So when it comes to the off chain part, this is where Morales helps you build quickly because it's going to be off chain anyway. So either you run it yourself and you're gonna use probably AWS or something or some other cloud, you're still gonna use centralized providers like Empura or some other node provider. So your off chain part will be still filled with service providers. And the question is how quickly you want to build and what kind of architecture you want. It's always a trade off that you have to make.
00:18:58.694 - 00:19:26.554, Speaker C: And by the way, here's this video I talked about. Get SMS, push email or webhook for on chain events with Morales. But where this industry is heading is that you want to move quickly, especially in a hackathon like this. And let's say that your DAP becomes huge. Then you're free to do whatever you want. Maybe if your DAPs becomes huge, you can re implement the whole stack yourself. But when starting out, if you're doing everything from scratch yourself, it's going to take weeks and weeks for you to get anywhere.
00:19:26.554 - 00:20:03.718, Speaker C: And our solution makes it simple and easy. And it's really a no brainer, especially when you're starting out when you're big and you want to do everything yourself. It's possible. It's kind of like with the cloud. Do you want to run a server in your basement? You could, but you're going to get absolutely outcompeted by everyone else who uses tools and developer platforms provided by the industry. And this is where the world is heading, that you have things that are decentralized and that's on chain all assets, of course, nobody should be able to touch your assets. But the off chain part is already you're already relying on a bunch of providers.
00:20:03.718 - 00:20:36.006, Speaker C: And Morales makes this process that you would do yourself anyway faster. One thing I will note though, is that soon you can self host Morales. And this means that you can host it on your own server as well. Because we're going to open source our solution. As we're packaging this, as I showed you, we're packaging all of these technologies into one backend that can be deployed on Morales infrastructure or it can be deployed on your own infrastructure. That's also going to be a possibility soon. But to summarize, it's only the off chain part.
00:20:36.006 - 00:21:08.960, Speaker C: And if you in the future want to redo all of this yourself, you can do that. And look, if you're using any API, you're relying on a provider. If your DAP uses OpenSea API, it's already you're using a provider if your DAP uses any kind of API. So it's important that you're honest with yourself. What do you want? If you want to be completely decentralized, run your own server in the basement, sync your own node, you're not going to get anywhere. And that's not how you do it. You want to use the tools, the providers, that will accelerate your app, that will ensure you go mainstream, you go big.
00:21:08.960 - 00:21:39.306, Speaker C: All of the on chain assets, which should be decentralized, they are decentralized. But the off chain, at least my theory and my thesis is that this should be done quickly. It should be done quickly because that's where most of the time goes. I mean most of the time goes to off chain tech, not on on chain tech. Writing smart contracts, it's very quickly because most smart contracts are already done. So what you do normally is that you just reuse done smart contracts. And when it comes to off chain, you're still going to rely on Openc for metadata anyway.
00:21:39.306 - 00:22:04.846, Speaker C: You still have providers. And using providers is the way to go for the off chain. Now, as this infrastructure grows, so we have plans for decentralization as well. As this infrastructure develops and grows, we will open source and we will ensure that you can self host yourself. And that's in our roadmap as well. But I hope it answers the question. If you want to have a more in depth answer, go and watch that video I showed.
00:22:04.846 - 00:22:12.120, Speaker C: Is morale centralized? You can just Google it and you'll have a nice ten minute answer with I also draw there. I also draw how it works.
00:22:13.850 - 00:22:22.310, Speaker A: Awesome. Thank you. So, Crown of Boji's second question was, can we use Morales API as an NFT indexer? And what's the latency performance?
00:22:22.810 - 00:23:27.706, Speaker C: Yeah, you can try latency standard API. Latency is 400 milliseconds or so for requests. And when it comes to indexer, what do you mean it's not the graph? If you want to make your own custom index, you need to use the graph if you need functionalities that are in the documentation. So if you go to the Docs and then you go to Web, three API here, and then you go to NFT API, you see, for example, if you want NFT metadata, ownership, data transfer data, basically, which transfers are happening, which trades are happening, and NFT prices. So it's, for example, for the lowest price you can get if you want to have a floor metric. And lowest price on floor is not exactly the same metric, but lowest price is the metric you can get from the blockchain, because floor price, it's difficult to get from the blockchain because a lot of marketplaces have it centralized that all of the bids and all of the orders, they're not stored on chain. So, of course, floor price, it's not easy to get.
00:23:27.706 - 00:23:59.880, Speaker C: But the lowest price that has been executed, that you can get from the blockchain. And that's also what we provide. So if you need any of this and you should go to Dogs, Morales IO, and you should click around here, then it's perfect. But for NFT index, or if you need some kind of specific NFT index, you need to run the graph. But in 99.99% of cases, you don't need it because it's all here for most use cases. But you may have some other use case where, yeah, you need some specific index or something, but then you have to use the graph for that.
00:24:02.590 - 00:24:07.530, Speaker A: And Justin subspace asked, has Morales been audited?
00:24:08.510 - 00:24:32.260, Speaker C: We're not doing anything on chain. So audit, you mainly speak about on chain smart contracts. We're not doing anything on chain. We're completely off chain, so that's why we don't have any smart contract audits, if that's what your question was. We're extracting data from the blockchain, and we're pushing it to yours. When the user logs in, we push the data into your database with the user transactions, real time transactions and all of that.
00:24:33.510 - 00:24:37.886, Speaker A: And Juliana asks, how many API calls can we get in the free tier.
00:24:37.918 - 00:25:14.542, Speaker C: Of is if you go to Morales IO slash pricing you can see there and you can also read that some of them are weighted. So most of them are going to be just one request which counts like one request. But some heavy requests count like several requests. But we explain all of that in the pricing. But yeah, I don't know on top of my I think it is 1.5 thousand that you can do per minute on the free plan. And then if you do the Pro plan, which is $29, you get the 3.5
00:25:14.542 - 00:25:18.160, Speaker C: and you can do even higher. But that's on the Enterprise plan.
00:25:19.910 - 00:25:25.250, Speaker A: AYUSH gupta asks if I use Morales. Do I still need to use ether? JS or web3?
00:25:25.320 - 00:26:10.486, Speaker C: JS well, it depends on what you need. So morales it wraps around ether JS and web3 JS and the reason we wrap around it is because we want the same interface even for Solana, for Elrond and non EVM chains. So for example, we do have Morales Transfer that can transfer NFTs ERC 20 tokens and this underneath will use Ether JS. And then when we add Solana you can use the same function Morales Transfer. But then you can also transfer NFTs on Salana and other chains. So that's why we wrap around this low level libraries like Ethers and Web Three. If these functionalities that are wrapped are not enough, let's say that you want to do something specific which we don't have a wraparound.
00:26:10.486 - 00:26:43.900, Speaker C: Then you can still get the Web Three instance or Ethers instance by going here to Web Three provider and you do like this morales enable Web Three. It will actually give you the underlying Web Three instance. But for as much as possible you should use Morales wrapper functions. Why? Because then if you want your app to work on other chains that are not necessarily EVM compatible, you don't have to do anything. I mean that's the beauty of Morales. And so we always recommend to use. So for example, if you want to run a smart contract function, use Morales Execute function.
00:26:43.900 - 00:27:02.660, Speaker C: It will use Ethersjs under the hood. But then when you have Solana you use the same function or when you have Eldron. So that's why, if possible, use Morales wrapped function because they will be extendable to other chains. And if you still want something specific, you can just get the instance like this. So to answer you use both. Use them together.
00:27:04.470 - 00:27:10.260, Speaker A: Leron asks when I authenticate with Morales, do I need to also do a nonzer signature check?
00:27:10.790 - 00:27:35.226, Speaker C: No, Morales does it for you. You don't have to do anything. You just write Morales authenticate like this. Let me show you how it works here in Connect to SDK. So you write Morales authenticate like this. You can set the signing message yourself and when user tries to log in, they will get this authentication. They click sign and you don't have to do.
00:27:35.226 - 00:28:07.542, Speaker C: Anything. And then when the user is signed in, you see a user object, you see their address, you see their signature that they provided and a session is established. So as you can see here, I don't know if it's clear, but a session is established and you can now basically use it as a logged in user as if they were logged in with email and password. And by the way, you can also log in with email and password as well. And then you can add addresses to that user profile. So if you want, for example, your users not to care about wallets, you can first have them sign in with email password. Then you can connect a wallet to their account.
00:28:07.542 - 00:28:21.500, Speaker C: So they will have to sign a message. And signing, as you know, it's free. It's not some kind of on chain transaction. It's no gas there. Signing is always free. But to answer no, you don't have to do anything in terms of that signing logic, it's all handled for you.
00:28:22.270 - 00:28:29.838, Speaker A: All right, we have one more minute. So we have time for one more question. Can Morales store non web3 data like firebase does?
00:28:30.004 - 00:28:45.906, Speaker C: Exactly. Yes. You can store anything you want. That's a good comparison to firebase. If you go to database here and you go to objects, you see that you can store whatever you want. Underneath morales database is MongoDB. You even have direct access to it.
00:28:45.906 - 00:29:08.378, Speaker C: So you can store whatever you want. It's MongoDB. You can store whatever you want. And you can do, for example, live query this is that on your front end you can subscribe to database events using query subscribe and you're going to get socket alerts. When for example, something happens on chain, it will be first inserted into a database. This means that you can get it in your front end as well through live query a notification. And there is a lot more.
00:29:08.378 - 00:29:32.990, Speaker C: Now finally guys, before we wrap up, I know we're out of time, go to morales IO slash mage, morales IO slash mage and join our discord because there we can continue and discuss sign up for our YouTube. So morales IO slash mage and you can sign up with your email here to join discord. Go subscribe to YouTube and happy to take more questions in discord as I know we're out of time unfortunately.
00:29:33.650 - 00:29:49.250, Speaker A: Awesome. Well thank you so much for hosting this workshop, Ivan. That was super interesting and informative. Just like Ivan said. Ivan will be available on the ethgobal discord in the morales discord channel. I hope you all have a great rest of your day and I'll see you guys at the next workshop.
