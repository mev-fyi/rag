00:00:00.570 - 00:00:35.798, Speaker A: Okay. Hi everyone. I'm Alex from near, and that's going to be it's a tough act to follow. My presentation is not as technical. It talks more about how do we actually get to the mainstream adoption of distributed applications. And when we talk about apps, one use case, which is very popular today is DFI, is decentralized finance. But there's another emerging use case for decentralized application, which is Web Three.
00:00:35.798 - 00:01:23.320, Speaker A: And I will give you actually one question I have is how many people here know sort of what's the idea behind web Three? So few. So I will give you some motivation why web3 is needed, and then we're going to talk about how web3 can actually happen at some point. So I will have some news highlights. One was very recent. It was a very large New York Times investigation in which they found that Facebook was sharing a lot of personal data of users with third party companies, including Microsoft, Spotify, Netflix. And they claim that at some point, facebook shared your private messages from messenger with Spotify and Netflix to improve their services. I don't know how true that is.
00:01:23.320 - 00:02:02.046, Speaker A: So privacy violation is one big thing that happens in web Two. Another big thing is lack of data ownership. If you use Slack, your account will be banned. If you just cross the border of Iran. Slack is a work tool. There's absolutely no reason why some weird terms and privacy policy of the company, the transit, can completely deprive you of a tool you're using for work. Right? Another example is another reason why web two is not that great is that the way your personal data is used even when you give the consent, is very nontransparent.
00:02:02.046 - 00:02:58.638, Speaker A: And that's another research by New York Times where they find that a lot of smaller applications which ask your permission to track location, and they actually need location usage, right? So it's something, for example, if you have kids and you have an application which shows them where they are, many of those applications send the location data to a third party service which aggregates it and collects a huge data set of movements of people around the world. That's not something that I would prefer my personal data not to be collected in a way that I do not expect it to happen. And like, user tracking in general happens. Like, in some cases, you know it's happening, but you don't understand how bad it is. So, for example, Google Timeline, many of you probably saw it right, in Google Maps, but if you think about it, all your movements that you ever like, all the secrets, all the places you go to, you don't want people know that you go there. Google has all of them in an unencrypted way somewhere in their data center. That's actually pretty disastrous.
00:02:58.638 - 00:03:48.258, Speaker A: And if you go to there's a URL in Google where you can see all the information they collect about you. And when you go there, it looks very creepy. Like the sheer amount of information they collect is not something you would want anyone to ever see in case Google by accident gets hacked. So speaking of hacks, in Web Two, all the services have a lot of security breaches. And this is my favorite story which happened I think five years ago where someone's Apple account was compromised because someone's Amazon account was compromised because a hacker called Amazon and asked to add a new credit card to the account. And all the information you need to do that is the birthday and the address. Because if you think about it, what's wrong with adding a credit card, right? But then he calls immediately another the second time and says he forgot the password.
00:03:48.258 - 00:04:27.870, Speaker A: Now that's a more like there's got to be higher security. So besides asking for your birthday and your place of birth or like where you live, they also ask for the last four digits of the credit card. Conveniently you just added a credit card. And so he managed to get after those two calls only knowing the birthday and the location, he got access to Amazon account, having Amazon account. Now he knows the four digits of the actual credit card of the user. He calls Apple and uses that information to get full access to the Apple account, including Apple Mail. Then he goes to Gmail, which has and recovers the password to the Apple account and then uses Gmail to recover password to Twitter.
00:04:27.870 - 00:04:55.526, Speaker A: And he completely obliterates all the online presence of that person, but also not to stop there. They also use the Apple account to erase all the offline data as well. So they completely nuked all the digital presence of a person literally knowing just the birthday and the location. Right. And like if you think about it, it's Apple and Amazon. That's two out of five companies in Fang, right? So those should be the greatest of the greatest. Finally, there's lack of reliability.
00:04:55.526 - 00:05:47.594, Speaker A: So this is an example of Google Cloud sending a message to a company that operates windmills. They operate windmills and they have a monitoring system which has a very high requirement to the uptime because if you don't get monitoring data about windmills, they get stuck. And so what Google Cloud did is that they suspected a credit card in fraudulent activity. So they shut down all the instances and gave the company three days to update the payment method before erasing all the data on all the instances. Right. That is not something you expect from the cloud company you're using. Right? And so why is all that happening? So first of all, web two is designed today in a way which promotes monopolies, it promotes walled gardens and it also promotes people to collect and process data in a nontransparent ways because data is very actually most of the values company have is data.
00:05:47.594 - 00:06:23.282, Speaker A: It's not code, it's not services, it's data they collect on you. But yay, we have Web Three. Web Three can solve all of that. First of all, in Web Three, the state is open, meaning that if an application has a state, that state can be inspected by anyone. So either the user encrypts state locally and then nobody has access to it, and user knows that for sure, or they use the state unencrypted and that state is completely public. And that means that the companies cannot hide the data behind the walled gardens. And then again, personal data processing is completely transparent.
00:06:23.282 - 00:07:00.002, Speaker A: You can see the back end of every service you use. You know exactly what's happening with the data you're sending to them. And hopefully the uptime and security are significantly higher. Unless there is a critical bug in the client implementation, the blockchain will not go down. However, if you go today, let's say someone builds a new version of Instagram, which is completely private and secure and respects your data privacy. If you go outside and you talk to people and you tell them, guys, look, this is your Instagram, it's private, it respects your data privacy, they will not really care. Right? And so I have this plot here.
00:07:00.002 - 00:07:48.780, Speaker A: On the horizontal axis, I have numbers of fucks given about privacy, and on the vertical, the number of people. And so the scale is from zero to some. And so raise your hand if you think that you hear that's. Quite a few, right? And so exactly, because we hear we all use Twitter and we're not using Mastodon or Pippeth, right? That's because Twitter is actually good and respects our privacy, and not because Twitter banned Evan Van Ness by now. Four times banned Pump, how many times? Two. We know Twitter is evil, right? It's not even like Google at least pretends to be good. It was what I see.
00:07:48.780 - 00:08:33.538, Speaker A: But who is to decide, right? But there are solutions which solve it. Mastodon doesn't solve everything. But mastodon solves quite a while, quite a bit. People solve most of the problems, right? And I don't think any of us well, I guess at least some of us, maybe raise your hand if you're on at least one of the two. We have one, two, three people. And the problem is that if you bring a new product to people and you're saying, use this product, that product needs to be ten times bigger, that is a drowned truth. I think first it was Peter Tille who said it, but since then, it was confirmed many, many times.
00:08:33.538 - 00:09:22.114, Speaker A: And if something has to be ten times better, it implies that that cannot be worse. Right? So today, Web Three, I don't know how many of you saw this video about the lemon coin by mainframe, but that video represents perfectly the current state of the Web Three. And for example, let's as an example, use a CryptoKitty. CryptoKitty is an incredible game to play and it has a very streamlined process to acquire a CryptoKitty. If you want to start playing, all you need to do is install a browser plugin, go to Coinbase, register there, go to KYC, send your passport, buy some Ether, and then you have a crypto. Kitty, right, of course. Transfer to MetaMask.
00:09:22.114 - 00:09:50.414, Speaker A: Yes. We talked to quite a few of the projects which are running today on Ethereum, and the drop off rate of this onboarding process is 97%. Right. So you can be building the greatest game on Earth, but for as long as you're only keeping three users out of every hundred who wants to play your game, that's not going to work very well. And that's exactly what we observed. So this column is daily active users and this is the top Ethereum apps. The most used Ethereum app has 1.7
00:09:50.414 - 00:10:12.630, Speaker A: thousand daily active users. That's a game. When I was in high school, I built an online game which had 2000 daily active users. Right. I'm not necessarily the best game developer out there, so that's where we are today. So what do we need to do? I have this incomplete list of steps which we absolutely have to solve before we will gain any mainstream adoption. One of them is blockchain, needs to be faster.
00:10:12.630 - 00:11:07.414, Speaker A: But besides that, people should not have to install any browser plugins, people should not have to pay anything to use the applications, and definitely people don't need to understand what a public key is and how not to lose the private key. So of those three, the first one is not what we're going to be talking about today, but we did write a lot about faster blockchain, specifically about Sharding before. So if you're interested, check out those things after the talk. We have near is Shard One and Shard Two to blog posts about Sharding. And we have a video from the graph day that's Shard Three. So why do we actually have the gas fees, keys, private, like key pairs and MetaMask? Especially private key pairs and MetaMask is because that is actually a requirement for high security. But those requirements are coming from the days of Bitcoin where you would store some value on the blockchain, which is something you absolutely do not want to lose.
00:11:07.414 - 00:12:15.146, Speaker A: So at that point, you actually do want to have as security as high as possible. If we're talking about playing CryptoKitties and not having like CryptoKitty number four, but just buying a couple of CryptoKitties, $1 each, you really don't need that level of security. And so a good example of how you can go between security and usability is what do you actually use to access the apps on the highest security? If you plan to use a wallet which has millions of dollars associated with it, you're probably going to install MetaMask from source and you're probably going to do one extra audit check before you run it on slightly lower level of security. But higher usability, you will install it from the Chrome store. But if you think about it, how many of you actually check what you installed when you install it from the Chrome store? So technically, the person who owns that particular plugin today, they have full control over all your assets on the highest usability level. You can just use a hosted wallet. So effectively, you can have someone have a database which has your private key, maybe encrypted with something you store in the local storage, but then it could be like a password.
00:12:15.146 - 00:12:55.494, Speaker A: And then you use that password to access all your applications from any device. You don't need to do any key management, you just use the familiar tools. But now usability is incredible. You don't need any browser plugins, you just open the website and it just works, right? And so if we think about hosted wallet, it gives us no key management, it is lower security. And that is fine at the beginning, right? So let's say I'm a new person, I never used crypto before and I want to play CryptoKitties. I go there, I use the hosted wallet, I'm playing for a while and at some point I have an asset which is very precious to me. So at that point, actually, the security of the hosted wallet is not sufficient for me anymore.
00:12:55.494 - 00:13:30.550, Speaker A: There is no way on Ethereum today to upgrade, right? So the private key is already stored in their database. There is no way for them to forget my private key, right? And so the only way for me to do it on Ethereum is create a new account locally and transfer all the assets. But first of all, it's an effort. Second of all, not everything can be transferred. It could be my assets are locked in some way, right? And there are solutions to that. There's a universal login, right, which has like a contract which manages your keys. But if that is implemented on the base layer of the protocol, that becomes significantly.
00:13:30.550 - 00:14:05.518, Speaker A: That solves a lot of problems. So if your account is actually not a public key, but some storage which maintains a set of keys, then suddenly you can do multisig way easier. You can swap the keys, you can change the key if you suspect it was compromised. You can add multiple keys so that you can access the same account from multiple devices without sending the private key through insecure channels. And yeah, that's contract based accounts. Now that's one of the dimensions. Another dimension we outlined at the beginning is gas fees.
00:14:05.518 - 00:14:34.394, Speaker A: Why do we even have the gas fees? There are three reasons. One of them is to rank transactions. So if the system is at capacity like Ethereum is quite often today, you do need to find some way to choose one transaction over another. And that is where the gas is used today. And probably that's where it's going to be used always. It should always be possible to pay more to get higher. But the two more important applications is a you actually use gas to pay for people to do work.
00:14:34.394 - 00:15:19.402, Speaker A: Someone actually spends CPU and memory to process your transaction. That's what you pay the gas for. And finally, this is the way to prevent sibil attacks. This is how you know someone will not register 1 million accounts and start sending free transactions to completely saturate whichever resource is scars. So let's first talk about paying for the block production work. If you think about it, when you use Facebook, or like when you use Twitter and you tweet, someone also spends some CPU and memory and yet for some reason you don't have to pay or maybe you do, right? So this is a screenshot from Facebook on which the property of this screenshot is that there is literally nothing on it but ads and that's an actual screenshot from Facebook. So you are paying for using Facebook, it's just that it is abstracted out.
00:15:19.402 - 00:16:08.502, Speaker A: You're paying user with your data and you're paying with your attention and there's nothing fundamental in the blockchain that doesn't allow you to do the same. So effectively it could be someone, it could be the app developer or it could be some third party that will pay for your gas and in return for some other way to get value from you. So a good example could be if I'm the protocol designer, I actually have a very strong incentive to pay for your transactions because I need adoption. Or if I'm some other third party which has if I'm an ad agency, I can provide you a gateway through which I will serve you ads as you browse applications. And so I get value from you by showing you application. So I will monetize your attention. Or if I'm the application developer himself, maybe I have some future value in you.
00:16:08.502 - 00:17:37.874, Speaker A: Like if I'm a CryptoKitties, I want you to play for free, I want you to get hooked so that later you buy a very expensive CryptoKitty from me and I get way more value from you in expectation than what I had to spend on you. And then whichever third party is that, if it's the protocol designer or the ad agency or the developer, they can have some off chain way to prevent sibil attacks, they can use cloudflare. It is possible, right? However, there's one important property that has to exist, which is if that is the case, if someone is paying for me today and monetizing something, they're monetizing my attention or they're monetizing some future value. There should always be a way for me to say actually I don't want to do that anymore and I want to start paying gas myself, I want to pay for my transactions without anyone monetizing me in any way. And so effectively the front end of the application, it should be something that I should be able to get on my machine by passing any third parties because the front end is how I communicate with the smart contract and that is not solved at all. On Ethereum today, on Ethereum, the front end today is more often than not hosted on a central server, right? And so today you open IDEX, you might have inspected the code that they sent you and you trust it. Tomorrow you open IDEX, they could have changed the front end that is actually being served, some tracking would have been installed or they can issue a transaction that you don't expect to happen, right? So the front end ideally should be served from something that is decentralized.
00:17:37.874 - 00:18:24.230, Speaker A: So a good example is Auger. If you use Auger, the front end is served from IPFS. So then you can actually inspect that you're receiving the front end you expect to receive and then you can directly access it the next time. But now that significantly complicates the development process. Ideally I should build an app which has backend and the front end and that should be on the blockchain and anyone should be able to get the front end from the blockchain, right? And so that covers the three dimensions effectively, right? Gas fees, plugins and key management that we absolutely have to solve before we get any mass adoption. And so that's how people can actually use. And I want to spend few minutes to talk about building distributed applications which people can actually use.
00:18:24.230 - 00:19:10.158, Speaker A: Because one thing is that the composability is very important when you build applications. The motivation for that is that building an application from scratch is a lot of work and a lot of modules that you're going to use are reused. Like if you think about it, Twitter, Facebook and YouTube, they all have something in common, they all have a social graph and each of them re implemented it from scratch. That's something that is reusable. And in majority of the large companies today that usability is built in, they all use microservices, they use Kubernetes deployment which deploys a lot of microservices which people can use. And the microservices, they also have this advantage that it's not just the code that is reused between all the services that use the microservice, it's also the state. You have a social graph.
00:19:10.158 - 00:19:51.338, Speaker A: The state of the social graph can be reused by all the microservices. Like decentralized Twitter can use the same social graph as decentralized YouTube. The problem is that in a decentralized world, in the web3, if you cannot monetize those services, you will not build them. Even today in open source, if you talk to people who maintain open source packages, it's a hassle for them which doesn't pay off at all. So most of the people who maintain open source packages, they do that because they care about the product they built, not because they gain much from it, they gain practically nothing. It's going to be even worse if you have also to deploy it on the chain and maintain it and maintain the state, especially if it's also you who's paying for that. And so that's going to be blocking the progress.
00:19:51.338 - 00:20:21.050, Speaker A: Without people, actually, people will not build if they don't have a meaningful way to monetize. And that's something you see on Ethereum as well. The only way people found so far to monetize, I guess the only popular way people found is issuing tokens. But then not only they need to build a service, they also need to figure out token economics, right? And often the token economics they figure out don't work. And incentives are misaligned because ICO happens first. Suddenly you have money, there's no incentive anymore actually to build anything. And that's exactly what we observe.
00:20:21.050 - 00:21:07.798, Speaker A: So what if we do a small change to the protocol? What if we say that when the fee is paid, doesn't matter if it's the user who pays the fee or the app developer or the third party. When the fee is paid, it doesn't entirely go to the miner, just a percentage of it goes to the miner and the remaining percentage goes splits in some way among the owners of all the components which were invoked. Now, if you think about it, if you deployed a social graph component and it is being used actively, then every time transaction is invoked, you're getting very little. You're getting like a small percentage of the fee. But if it's a popular service or if you have multiple of those, that becomes a meaningful way to monetize your work. So now suddenly you actually have an incentive to build and the incentive is very aligned. You need to build something that is going to be used by people.
00:21:07.798 - 00:21:47.350, Speaker A: If people don't use your service, you don't get paid. If they use your service, you do get paid. So incentives are aligned. You don't need to figure out any token economics, it just works if it's being used. So that's one interesting idea, how to make development for web3 more incentivized. So that's what we built. And today on crypto Twitter, there is a big I think people don't like competition, especially if you look at, like polkadot versus ethereum, which is happening right now partially because of afri living, but also like in general, that's happening all the time.
00:21:47.350 - 00:22:36.262, Speaker A: And people talking about how protocols are competing and how polka dot is stealing resources from ethereum. In reality, there is no competition today, as we saw previously, the most used applications, they have 1700 active users. We're fighting for 1700 active users. So effectively what will happen is either nothing will improve and then all the protocols will die out, right? So when the speculation cools down, the actual usage will not be able to maintain any value in the network. And without value, the mining will become meaningless and the network will die out. Or we will find ways to bring more adoption, right? And that is not something that cannot happen if we spent know, competing with each other and fighting on crypto. So ideally we should all be friends, right? We're very open with the community.
00:22:36.262 - 00:23:18.580, Speaker A: I hope most of you saw the YouTube series we maintained called Whiteboard Series. If you never saw it's near AI slash whiteboard serious. It's a series of videos. It's a video podcast where we invite founders of other blockchains and we grill them for 1 hour in front of the whiteboard and we go very deep into all the details of the protocols. So we have one on Ethereum where we talk a lot about sharding. We have one on Plasma Cash Flow, which is probably one of the coolest plasmas today with plasma group solana interledger cosmos. So it's a very nice series for anyone who is interested in the technology.
00:23:18.580 - 00:23:58.010, Speaker A: Besides that, stop at our booth. We have four $500 bounties. If you want to build a near, check out our developer tools and please follow us on Twitter. We love vanity metrics. Thank you. It estimates the distance to web3. Yeah, that is wrong.
00:23:58.010 - 00:27:05.782, Speaker A: I think there was a blockchain called near that was doing proof of location, but I don't think they exist anymore. Right. So I agree mostly with what you're saying and the argument here is that a even if you build a so I think sort of the world changed and like back in the day, not that many great games were available and so you would have to go through all of that. I was doing that as well. Today there are so many free solutions available that for you to win over customers from the web two, you have to provide them, at least at the beginning, you have to provide them. That's something we call delayed onboarding. You want to onboard them eventually, but you want first to prove the value to them because without that, you will not attract them.
00:27:05.782 - 00:27:31.040, Speaker A: So the question is then, is there something that blockchain provides on top? Like, why just not build a web two application and not care at all? And so it does. That's specifically the point that today people don't really care. That's partially because of lack of education. Right. But before you can start educating people that privacy is violated, you need to provide them an alternative. And to provide the alternative, that alternative needs to be as usable. So there's like chicken and neck problem here.
00:27:31.040 - 00:29:39.488, Speaker A: So, yeah, so right. So I think that is more it's very hard to predict future and see where it's going to go. I think that's a matter of perspectives. The question is, does each particular person believe that once you actually have privacy preserving applications that are as good as non privacy preserving applications, but they launch later, right. They're at a disadvantage. The question is, do you believe that people will actually switch to them, but until they're better, I'm pretty sure the answer is no. So regarding the first point about not being able to delete your tweets, it's an illusion because if you posted something a year ago and someone really wanted that to see those tweets, they will persist them and like web archive persisted them.
00:29:39.488 - 00:30:25.280, Speaker A: So they exist in history. So when you deleted them, they're just not easily accessible today through the primary interface. But it's something you can do on the blockchain. You can make it in such a way that the state of the blockchain does not have them anymore, but the history of the blockchain, you know, in the real world today you can have that the state of Twitter does not have your tweets but the history or the web archive does, right? So you can make it very close in terms of that experience, in terms of revenue share. We don't have good models in terms of how much developers can make because that also depends on how high the gas fees are going to be, how many transactions, like how much usage the systems will get. And those values are completely unknown today. But we were modeling how that would be structured in terms of how much actually goes to every service.
00:30:25.280 - 00:31:11.740, Speaker A: And that on itself is very hard problem? We don't have it fully figured because if you make it automatic in some way where the split is derived from something that is computable like how much gas each of them spent, that's very gameable. You just put a huge loop in front of in your contract and suddenly you get all the fees, right? And if you're trying to do a market where services bet on something that incentivize cloning someone else's code and then competing with them on price which is also very undesirable property and so there we don't have a perfect answer yet but we're trying different models to see it. Most likely there is something that works. Awesome, thanks a lot.
