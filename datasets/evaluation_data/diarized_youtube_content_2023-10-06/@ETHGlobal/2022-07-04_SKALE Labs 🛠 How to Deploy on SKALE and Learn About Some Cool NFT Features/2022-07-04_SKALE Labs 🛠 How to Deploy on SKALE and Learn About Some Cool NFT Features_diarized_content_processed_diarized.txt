00:00:06.170 - 00:00:36.266, Speaker A: Good evening. Welcome to room one. You're in the right room. Thank you. Thank you. You're in the right room if you're expecting to hear a talk about how to deploy on scale and some wicked cool features that we'll explain that's available on Scale chains at this hackathon. So let's get to it.
00:00:36.266 - 00:00:58.340, Speaker A: Welcome to New York. If you're a native here, it's awesome. If you're a visitor, I love this city. I really love the ETH Global events. One of my last favorite hackathons was East Amsterdam and a couple years ago, ETH New York in Brooklyn. So I'm so excited that we have such great weather and such a great venue. So thank you, ETH Global organizers, for setting this up.
00:00:58.340 - 00:01:21.850, Speaker A: Really pumped about this weekend. I love hackathons. They're dear to my heart. So really excited to kick off this weekend for a lot of fun and building some cool stuff by way of introductions. My name is Chadwick Strange. I'm head of product at scale. I've been with Scale since 2018.
00:01:21.850 - 00:02:00.790, Speaker A: This is my third venture in the Web Three space. Before this, I was working in a completely different industry, pharma and Biotech, and I got a reality check that I was in the wrong industry and found my passion in Web Three. And it was at a hackathon in Berkeley, California, where I basically subjected myself to, much like yourselves, trying to learn new things, trying to build cool stuff. Was up late at night till like, 02:00 A.m.. I'll never forget one of the sponsors who was there at, like 02:00 A.m. To 04:00 A.m., helping our team, trying to deploy a contract.
00:02:00.790 - 00:02:22.320, Speaker A: We worked really hard. We had no sleep. The next day, we submitted. The project did not work. It partially worked, but people got it. People got the vision, people got the effort, and our team won second place. And that started my foray into this space that I'm super passionate about.
00:02:22.320 - 00:03:01.046, Speaker A: My last name is Strange, and I want to give a shout out to Rob, our social media manager, who created this meme from Dr. Strange. So the Marvel Studios dr Strange Multi Chain of Madness, and I'll go into multi chain in a bit. All right, to set this up for the agenda for this session, I'm going to first talk about Scale Network. I'm going to give a high level overview, kind of going deep in certain areas. I'm sure some of you might have heard Skill Network. Maybe you don't know anything about Skill Network.
00:03:01.046 - 00:03:37.170, Speaker A: So we'll start with a high level, explaining what it is, and then I'll go into detail about how to deploy on scale. Then I'll walk through some really cool features that are not only great for DAP developers, but they're great to help out, build out incredible DApps. I'll walk through that. I've got some video demos just to truncate the time. So we'll scroll through that, and I have a really awesome live demo at the end so praying to the WiFi Gods that I'll still have access and bandwidth to do this live. But we'll see. Live demos are always tough.
00:03:37.170 - 00:04:21.874, Speaker A: And then I know you all are here to build, and there's not a lot of time to build. You're thinking about ideas. So I'm going to actually walk through a cheat sheet about how best to position your team for success in building on scale and showing off scale in your project. So I'll walk through how to really win. What are the tips that I can give you to work really fast and to integrate in your DAP, and how can you position yourself best to win? Scale bounties all right, let's get into it. So what is the scale network? The scale network is the first multi chain Ethereum Native scaling network. There's a lot to unpack here.
00:04:21.874 - 00:05:08.450, Speaker A: Let's start with ethereum. Native the entirety of scale network is architected and built on top of the Ethereum mainnet. And what does that mean? The entire network nodes represented by these lovely dots on the left side of the screen run by validators. These are skill network validators. When they register with a network, they're registering with Skill Manager on Ethereum. Those are transactions that exist on the Ethereum mainnet when you request a skill chain or do any network operations, those are also transactions on Ethereum mainnet. And that's really important because the scale network uses the pooled security of Ethereum validators to help support the network.
00:05:08.450 - 00:06:07.794, Speaker A: So as Validators are joining, as Validators are providing or getting stake and delegation. That's all secured by the Ethereum validation layer and then extended through the unique security features of Scale network. And so scale network has over 160 nodes currently connected to the production main net. And as a DAP developer, when you request a scale chain, and again, that's a transaction that exists on Ethereum. Scale Manager handles that transaction and says, all right, how do we provide a scalable blockchain for this DAP developer? It will go into the skill network. We'll go into the nodes. It will select 16 nodes at random, and it will send an event to those nodes and tell those nodes, hey, build or provision a scale chain and these nodes will spin up a dockerized container.
00:06:07.794 - 00:07:02.858, Speaker A: These containers are networked together, and that basically encompasses the DAP specific blockchain that you use to deploy your DApps and have all your users or community transact with one of these nodes. Let's take a look at this. I'll do this very briefly, but a node, again, run by a skill network validator, is a bare metal that runs skill node software. At the core of this software is a Python script that is listening and transacting with the Ethereum mainnet. It's listening for inbound messages about whether a skill chain has been requested. The other part, again, that's the core, the inner diamond. The outer part of this, hexagon kind of it's an abstraction representing the other available compute resources on this node and that's available to basically containerize or provide scale chains of various sizes and various numbers.
00:07:02.858 - 00:07:58.246, Speaker A: So a single node can support up to 16 individual scale chains. It's a very powerful system. And then as a shout out to some of our validators, we're working with a lot of validators that also validate for a lot of other networks, especially Ethereum. So these validators have been really great in helping support build out the scale network and help onboard scale network partners. So you can think of scale network as a network of DAP specific blockchains represented by these circles surrounding these nodes. So any node can support multiple DAP specific chains. And these chains are very special because they have very fast finality and that's due to the consensus and cryptography technology that scale network has combined.
00:07:58.246 - 00:08:50.774, Speaker A: They run very fast, about up to 2000 transactions per second. You can really throw very interesting contracts at this. So it runs full state smart contracts. It comes with a native file storage layer, comes with a native random number generator endpoint that allows you to help develop contracts and have a really solid source of entropy. And it comes with a native expandable bridge which is in a really incredible bridge that allows tokens and messages to be exchanged or transacted with any scale chain and with any Ethereum network chain. And they're DAP specific because as a DAP, if you're building a game or if you're building a marketplace, you have the full resource capacity of this chain, you're not sharing resource capacity with other chains. We all know what happens on a single chain like Ethereum.
00:08:50.774 - 00:09:52.158, Speaker A: If there's a huge game or AirDrop gas fees go through the roof, the chain slows down, your DAP slows down along with everyone else. On scale, this does not happen. It's a containerized individualized DAP specific resource that's dedicated to your DAP, your contracts and your community. And this can be shared at least to you or maybe your project, or even open to like a Dao community. To allow Adao members to be able to transact, deploy contracts and build really interesting stuff on these chains. With a multi chain architecture, with the many DApp specific chains that can be deployed on scale network, we can kind of think or the network has evolved to create these new abstraction layers and they can be called scale hubs and DAP specific chains. At the bottom, you can think of these DAP specific chains as individual projects, either running a game, running a metaverse, a music streaming app, whatever it is.
00:09:52.158 - 00:10:32.910, Speaker A: And each of these apps might need services. For example, for a game you might need a liquidity layer or some liquidity on ramp. If you're a metaverse, you might need the resources of a marketplace. Well, a marketplace can exist on its own separate chain. And on your DAP specific chain, you can connect to these hubs as service layers. So if you're building a play to earn game, you don't need to build a marketplace on your chain. You can use a marketplace on another chain and be able to connect chains together using the native token bridge, which allows very fast exchange of messages or tokens between any of these hubs.
00:10:32.910 - 00:11:31.962, Speaker A: So again, as a play to earn game, you can get liquidity from one of these hubs. You can send your NFTs to an NFT marketplace and then sell them on the market. So in this way, these hubs provide services to multiple chains on the network. This is an extremely powerful abstraction that is really interesting because the scale network partners have really galvanized around this and decided to build communities of liquidity hubs and NFT marketplaces where it's sharing amongst multiple marketplaces and liquidity on ramps. All right, so that was the introduction for scale network scale hubs. The technology, the nodes, the DAP specific chains. What can you do on scale? One of the key features is every single DAP specific chain provides gas free transactions with a free gas token called Sfuel.
00:11:31.962 - 00:12:28.142, Speaker A: That's right. When you deploy a contract, when your users transact, they don't need to worry about gas fees. They don't need to worry about exchanging ETH to get something done with Sfuel. Again, when you create a skill chain, you're provisioned a huge amount of S fuel as a skill chain owner that you can allocate or provide out to your users. So long as your users have Sfuel, they can conduct transactions. So this is also a unique way where you can control or basically provide a system where you can onboard your users and sort of modify or customize their onboarding behavior. So as users come on, for example, maybe they create an account on the DAP, they can be provisioned Sfuel and then they conduct transactions after they conduct a transaction, spend their S fuel, they can be topped up through contracts or through faucets or through other mechanisms.
00:12:28.142 - 00:13:17.300, Speaker A: And the reason why there is a gas token is to prevent DDoS attacks. So no single user could just slam the chain with transactions. And this way, every single scale chain owner can customize the onboarding process and user behavior through their user journey. Scale chains come with a massive block gas limit 160,000,000. This allows some really interesting design patterns that you can do with solidity contracts. Typically on other chains, you would have to gas optimize your contract, make sure it's not too expensive on scale, since there is no value of gas. You can really pack a lot into the logic of smart contracts and do some amazing things like combining machine learning models with smart contracts that would be completely cost prohibitive on any chain where gas is an actual economic value.
00:13:17.300 - 00:14:16.574, Speaker A: File Storage every single chain comes with a native file storage layer. So you could use other file storage systems, but how nice it is if you're deploying an NFT game or a marketplace and those visual assets or image assets or video assets exist on the same chain as those NFTs. And those files are redundantly stored across the multiple nodes that support your chain. And I'll show a demo of this. So again, if you upload NFT assets, those images, those JSONs can be stored natively on the same chain that those contracts are deployed onto. You can even use it to host statically generated websites and serve that over the web. Every single skill chain comes up with a random number generator endpoint leveraging key architectural technology of BLS threshold signatures to drive the entropy for random number generation.
00:14:16.574 - 00:15:26.020, Speaker A: And I'll give a quick example of how this works. And this is great because now you can use this to gamify things, you can use this to maybe randomly select a tie, vote for some Dow proposal, or you can use this to drive some unique aspects of Maybe on chain SVGs and creating some unique minting properties of NFTs. And as well we have an IMA bridge. I'm not sure if enough time to go into this, but let's see how we go. So let me get to the first demo. This is just a quick pre recorded video of how to deploy a website on a scale chain. Oops, 1 second, try that again.
00:15:26.020 - 00:16:38.052, Speaker A: So I'm going to create a very simple project here. Let me skip ahead a bit. I'm going to port in environment variables which includes my skill chain owner address, my private key as well as the skill chain endpoint. And I'm going to pull in the file storage JS package which allows me to interact and do upload delete create directories with the file storage layer on the skill chain itself. And then I'm going to create a folder that will host a really basic HTML website. Very simple HTML boilerplate. I'll skip ahead, I'll create some CSS, and then all I'll do is I'll create a file storage script for uploading.
00:16:38.052 - 00:17:22.224, Speaker A: So this is pulling in the file storage JS library. It's going to hit the directory that I put those HTML and CSS files. It's going to iterate over those files and file storage JS will take those files, cut them up into chunks. It will actually push that as transactions directly to the scale chain itself. And the scale chain will see those transactions, realize that they're for file storage construction, and then it'll recreate that file on a native file storage partition on each of the 16 nodes. So that's what's happening right now, at least in the video. I'll skip ahead and I'll go to my browser.
00:17:22.224 - 00:17:54.800, Speaker A: The other key thing is great, you have a file that's stored on these nodes. There's also an NGINX server on each of these nodes. So now you can serve those assets over the web. So in Brave, there we go. I've just served a static website by uploading files directly onto the scale chain itself. So not only can you create assets that drive your NFTs and have NFTs reference assets on the scale chain. You can create a whole website that's decentralized across your scale chain.
00:17:54.800 - 00:18:33.240, Speaker A: Let me go back. Okay, next we'll look at the RNG endpoint. I'll kind of hurry this up. I actually won't go into the demo because this is pretty simple. I'll go into how you get the information for the hackathon. But this is our documentation portal under Develop. We have a bunch of tools here and right here, using the RNG endpoint.
00:18:33.240 - 00:19:16.148, Speaker A: Not going to go into details, but you can look this up later. But this function here, this Get Random function, basically calls a very special pre compile contract that's deployed specifically on scale chains only. And this grabs the glued threshold signatures that are used to sign every block onto the chain. And it generates a hash of that, and that's returned as a bytes, 32 hash that you can then use to generate your rena number generator. So it's very easy to implement. You copy this, paste it in. As soon as you hit the scale chain, you'll be able to create these random number generators.
00:19:16.148 - 00:20:02.620, Speaker A: Random numbers go back. I won't have time to show the entire video, but again, for Docs, right here on the main page. Ethereum to scale bridge. This contains all the information to get started with transferring tokens between chains. At this hackathon, you'll be able to transfer tokens between Rinkabee and Scale, as well as the two scale chains that are available for the hackathon. So you can do scale to scale transfers of ERC 27, 20, 111, 55. And you can expand this to any arbitrary contract.
00:20:02.620 - 00:20:25.830, Speaker A: The other key thing about this bridge is it's very fast on production networks. The finality between one chain to another chain is 18 seconds. That's absolute finality. There's no challenge, period. It is final. When that transaction happens, it's very fast. And let's get to the on chain SVG demo.
00:20:25.830 - 00:21:05.150, Speaker A: I did this quite last minute this week, so we'll see how we can get through this. Let's see. I'll show you briefly the contract I created. The reason I wanted to play with this is I love what people are doing with Onchain SVG. I think it's super cool. And I think we just hit the tip of the iceberg of what can be done with Onchain SVG. So I've created a strange token, and I've created this simple mint function.
00:21:05.150 - 00:21:31.160, Speaker A: So it's minting incrementally. This is an ERC 721. I want to kind of show not 1155, but actually minting multiple of these on a scale chain itself. I'm creating an SVG for the token uri. I'm using the Get random Function. So I'm using the randomness for every block to help modify the SVG in place. And here we go.
00:21:31.160 - 00:22:09.460, Speaker A: Here is my SVG. So I have this massive SVG with three circles. And the components of this circle are being randomized using the random number generator. So in effort of time. This is already deployed on a chain that's live right now. So without further ado, I am going to go ahead and mint this live. I'm not going to do 1000.
00:22:09.460 - 00:22:41.224, Speaker A: I've actually trimmed it back. I'm just worried about the WiFi. Well, here we go. So the token is already deployed onto the chain, the ERC 721 contract. And now it's going to go through and just mint 100 of these and it's going to hit the skill chain. And I have a Block Explorer here and it might not refresh as fast as the WiFi. You can see a bunch of transactions are hidden into the chain, are being minted.
00:22:41.224 - 00:23:07.310, Speaker A: We have contract call. If we go back here, the mint is still happening. Boom. Just let this finish. It's finished. Minting 100 on chain SVGs using the random number generator. Let's take a look at one of these.
00:23:07.310 - 00:23:41.424, Speaker A: Let's see here. Ah, so as you can see, I'm using Remix. So I can easily use Remix or any other Web Three tooling for a scale chain. And I'll pull up. I think Token 105 was the most recently created. Maybe 401. Yeah.
00:23:41.424 - 00:25:11.480, Speaker A: Let me check to web3. Let me refresh. I'm trying to read this from this monitor here. It's not the easiest. Let's see then one secondary. It there we go. Let's see here.
00:25:11.480 - 00:25:45.720, Speaker A: There we go. Not sure why this is not pulling up. I don't see that file on this screen. Anyhow. If you come by later, I'll show you this live, but it will display in browser the on chain SVG of three circles. Every single mint is slightly different. And that's all done live on a scale chain itself.
00:25:45.720 - 00:26:13.838, Speaker A: I'm surprised I got that far in the demo without it breaking. So, without further ado, let's continue on the journey. There are many partners building on scale what things are currently building on scale. Lots of games. Brock Ballers, a lot of people love their stuff. It's like an on chain RPG. Live on scale.
00:26:13.838 - 00:27:02.170, Speaker A: We have a lot of other games that are going live or building currently on scale, along with some AMMS, decentralized exchanges, as well as some interesting apps like a name service where you can buy a name service across. Multiple blockchains that's using making use of file storage to actually store a mapping database of those names cross chain as well as decentralized e commerce and NFT marketplaces. So all across the board, many applications to use and deploy on scale. The cheat sheet. The requirements to earn scale bounties at this hackathon is simple. Deploy on a scale chain. My recommendation, just to help everyone else out, is to document scale use in your GitHub dev post and in your presentation.
00:27:02.170 - 00:27:26.322, Speaker A: We love to just see how you're using scale and explain that in the presentation itself. And in order, just a suggestion in order of the ease of how easy it is to earn these bounties. First thing, deploying on scale super easy. Any project can do this. Just get an RPC endpoint. I'll show you where they are. It's the easiest thing to do.
00:27:26.322 - 00:27:49.478, Speaker A: The next thing of greater difficulty probably only take five minutes. Integrate an RNG endpoint. You copy that function, put it into your contracts. When you're deploying that on scale, you'll be able to make use of that RNG function in whatever you're building for various features. The next tier of difficulty is file storage. It's very easy. There's an NPM library that allows you to do these upload operations.
00:27:49.478 - 00:28:18.500, Speaker A: Maybe you can host your entire presentation on the skill chain itself. Host all your NFT assets, who knows, go crazy. And then the next thing is the IMA bridge. We have a lot of sandboxes code samples, JS libraries. It's a little bit more nuanced, but we've had lots of people have a lot of fun building on the bridge and making some really cool stuff at hackathon. So I encourage you to go all the way down this list. But if you're prioritizing time, this is what I'd say to go through.
00:28:18.500 - 00:28:57.422, Speaker A: We have $20,000 in prizes to give out, 5000 to a grand prize, 8000 to a Metaverse gaming NFT, 2000 to a partner integration such as Live Peer at the Graph, and a pool prize of $5,000 shared amongst everyone who at least deploys onto a scale chain themselves. So thank you. You can scan this QR code. This will get you all the information that you need for getting a scale chain itself. And I'll show you what this page looks like. This is the Faucet hackathon page. So you'll get all our docs here.
00:28:57.422 - 00:29:24.726, Speaker A: If you click this hackathon link right here, this will give you a page that looks like this. These are the two scale chain endpoints that are available at this hackathon. If you click this, it'll drop down. You have your Https WebSocket endpoints, a file storage endpoint. So you can hit this, put this in the browser, see, and serve those files over the Internet. You have your chain ID. You can click this to add this network to your MetaMask.
00:29:24.726 - 00:30:18.170, Speaker A: There's a block explorer. These two chains have IMA natively deployed they're connected to also, these two chains are connected together. So you can transact tokens between these two chains and then back to that prior page. There's a little bit of nuance about these chains at a hackathon on production, there's a configuration that only certain deployers can deploy contracts to the scale chain here. Anyone can deploy just to make it easier for the hackathon. But every single user who deploys needs S Fuel. So this is a quick faucet how this works out of the two endpoints, just copy paste the endpoint in here, paste in your public key address, hit the S Fuel and your account will be allocated S Fuel as well.
00:30:18.170 - 00:30:36.846, Speaker A: File storage. You need to reserve space to upload certain files. Otherwise people would dos the file storage layer. So we have very similar to Sfuel, a faucet to reserve space. And there's some quick FAQs and tips just below here. If you have any questions, find us at the booth. We're here all night, all hours.
00:30:36.846 - 00:30:45.100, Speaker A: We're often here very, very late hours to help hackers. So stop by, engage with our team. Our booth is downstairs. Thank you very much for listening. Thank you.
