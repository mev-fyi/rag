00:00:07.610 - 00:00:49.462, Speaker A: So another important point for you, this is the care code of the presentation. So read this care code now and then everything that we are showing to you later, you don't worry about it because you can have everything in your own computers. So I can give you one more minute to this and one point related to bounties, especially when we are using the other chaining services that are so cool. I love it. But you must be sure that you are doing some on chain transaction. For example if you use data feed but the data feed is only in the front end, doesn't matter to us. So if you're using data feed but you are saving that information inside the smart contract.
00:00:49.462 - 00:01:18.354, Speaker A: Yes, this is good for us. So the transaction must be on chain to use a chain link. Okay, let's go forward. So this is me, you have this and let's go a bit forward. I'm here to talk about CCIP. So I really love CCIP because of all the cross chain things that we can do. And I do a demonstration for you related to an NFT emoji that it's in the bitcoin price.
00:01:18.354 - 00:01:45.886, Speaker A: And also I'm using datafeed to do this. So this is like almost a game because I have different NFTs. The NFT can be minted from the same chain. I build this on mumbai but I'm using to mint the NFT from Fuji. Avalash Fuji. Another word so we can connect the words in this way. And yes, you have the other care code so I will pass this so fast for you.
00:01:45.886 - 00:02:29.638, Speaker A: But this is the smart context and how can I do this? Let's go. So here I have three concepts for you and I like to show a bit of this for you. So first concept is the NFT itself. And this NfT is useful for you because I'm creating an SVG file, an image directly inside my content. So can be useful for you to understand how this is built. And also I have here this chain, the chain that I'm using all the information related to the chains and I'm updating the metadata itself. It's inside my content.
00:02:29.638 - 00:03:10.166, Speaker A: So me create a JSOn file inside my smart content. So this is a different way to create a smart content and an NFT because I'm not using something like IPFs. I have everything on chain and okay, I have this cross destination minter. This is a content that you minted the NFT for me. And because of this I'm using the CCAP receiver. If you are using CCP, you must have in your content a function called underscore CCAP receive. And this function execute any message that you receive from the surface chain.
00:03:10.166 - 00:03:46.962, Speaker A: On my case this message will be like the mint command from the other chain. So this is the address of my NFT and I'm calling the message that will be this. At the end I have the minter, the Cersei minter. This will be on avalanche Fuji for now. And here you can see that I'm using the outers of Chainlink to have this part. And then I'm really using the mint on Mumbai where I'm using the structure of chaining the message, the Evme to any message. And here you can see the mint comment.
00:03:46.962 - 00:04:07.542, Speaker A: So I'm sending this message, this mint comment to the other chain, to the other part of the world. So is this. I already deployed everything because it's like a bit impossible to do this so fast. And what I'm doing now, this is the NFT. I have some here. In fact I have a lot. I will refresh.
00:04:07.542 - 00:04:24.562, Speaker A: Let's see how many I have now. Okay. You can see over there that at the end I have two. Both came like from Polygon. We have one more here because I will do a transaction just now. So I'm going probably. Let's see.
00:04:24.562 - 00:04:51.290, Speaker A: I must be on Fuji now. Yes, I am on Fuji. I deployed everything before like five minutes ago and I am in the crossserf simter. Oh, by the way I must pay fees. I may pay fees using the leak token but you can use the native token as well and I may using the Mington Mumbai now. So let's mint in the other chain. Confirming the transaction.
00:04:51.290 - 00:05:29.240, Speaker A: How can I know the status of my transaction? I will use this CCIP explorer to do this. So let's see if my transaction is confirmed. Yes, let's get the transaction ID, go to the explorer and see what happened now. And yes, we have the search finalized. We must await some time to have the finality of this and then I can come back here and explain a bit more for you. Let's see how is my time now. Okay.
00:05:29.240 - 00:05:55.774, Speaker A: Is this. I'd like to go over there but I must be here. So let's try to do it this way. Like we have the source part where I have the user over there is my surface match content. I'm interacting with the outer off chain link. The outer is interacting with the off chain part where we have the domes and the validators. Zubing, you talk more about the dons later.
00:05:55.774 - 00:06:58.734, Speaker A: And then this houter is sending that message that transaction to the other chain using the houter in the other chain. And that houter, the destination houter, is sending this message to my application, my destination minter, who is interacting with my NFT, minting a new NFT. So this is a high level architecture and probably you are thinking about security of this. We have in fact more than one actor acting in this way because we have a risk management network that is having votes as well and having a consensus to be sure that we can commit this to the other chain and don't have like a he in the chain and your transaction can disappear. No, this cannot happen because we are taking care of the security of this and I think it's this. Let's see, probably my transaction is not done yet and I must wait a bit more. I'm waiting.
00:06:58.734 - 00:07:07.060, Speaker A: And in this time, zubing, you talk about functions for you. So zubing, it's your time now.
00:07:08.570 - 00:07:30.106, Speaker B: Thanks all. So while we're waiting for CCIP to do its magic and for the actual transfer to happen of the data across the two chains, I'm going to present to you a slightly different concept, right? It's a slightly different product, so we're just going to switch while that's running in the background. So I'm here to present to you on Chainlink functions. Now, how many of you know what an AWS lambda is or Google cloud function is?
00:07:30.128 - 00:07:30.362, Speaker A: Right?
00:07:30.416 - 00:07:43.166, Speaker B: Okay, excellent. Let's start with that as a mental model. Right. First let me introduce myself, though. My name is Zubin Pratap. I'm a developer relations engineer at Chainlink, a recovering lawyer, ex Google suite, et cetera, et cetera. This is the best job in the world.
00:07:43.166 - 00:08:04.610, Speaker B: I get to work with people like soul. Such a pleasure. Right. Now, for those of you who aren't familiar with Chainlink, and I know there are a few of you who aren't, it's basically an oracle service. But why is that important? Because it's not so much what it does, but why it's important, right. As you know, blockchains are deterministic systems. They don't really access the external world because if they did, they wouldn't get consensus across all the nodes in the blockchain.
00:08:04.610 - 00:08:51.538, Speaker B: And so what you need to interact with the rest of the world and with other data systems is you need an oracle service that sits in the middle, like a middle layer, right? So that way you can move data on and off chain. However, you need a decentralized oracle network to make sure you don't have a single node that's a single point of failure. And that's kind of what Chainlink offers, a decentralized oracle network. Not that, Don, but it's funny. So the decentralized Oracle network is a series of nodes that run off chain but preserve the cryptographic guarantees that we've come to know and love from the blockchain world. So even though it's off chain, it has the same concepts of consensus, cryptographically verifiable data being put on and off chain. And that's what Chainlink does, right? It produces a middleware, so you get decentralization, trust minimization, scalability, truth through cryptography and verifiability.
00:08:51.538 - 00:09:42.626, Speaker B: And you also get reliability, responsiveness and cost effectiveness because you're not doing a whole bunch of compute on chain. You can move it off chain without losing any of the guarantees. So there's also consensus protocol in chainlink dons, and that's OCR. Okay, so I'm running through all this just out of mindful for time. Now, this brings us to chainlink functions, going back to the AWS lambda and Google cloud functions, sort of metaphor in your head, if you like. We at Chainlink started to say, well, what if we could run absolutely any arbitrary code that you wrote? Any code, okay? And the execution of that code that you've supplied, let's say, in JavaScript, is decentralized. So you get decentralization of the execution of that JavaScript code, and the result of that execution is cryptographically verifiable through the Chainlink consensus protocol known as OCR.
00:09:42.626 - 00:10:25.202, Speaker B: Right? So you combine all these things and you get chainlink functions with which you can call any API anywhere in the world, run compute on it. That's much more gas effective than doing it on chain. Get consensus on the return result and have that posted back to your consumer smart contract. Right? The smart contract that consumes chain link functions. So why do we need that? Well, we believe that the new generation of web three apps are going to be hybrid. There's going to be a critical on chain component, and they're going to be able to access traditional data infrastructures so that you can enrich the web three world with that data without losing a lot of the benefits of decentralization and trust minimization. Right? So big diagram just to tell you that.
00:10:25.202 - 00:11:12.110, Speaker B: That's all you need to worry about is this bit on the left. This is all you need to worry about. Just put your smart contract up, have a subscription, and invoke your chain link functions. Everything else is done by the Chainlink decentralized Oracle network and the technology we've produced, right? Your workflow broadly is three steps. Write some custom JavaScript, write your chain link consumer contract, your functions consumer contract, into which your JavaScript, your API keys in encrypted form, all of that will go in there. Your smart contract will then contact the Oracle network and the decentralized execution will trigger and you get your result back in the consumer smart contract that you control, right? So in terms of how to get started now, for those of you who are going to do this in the hackathon, obviously as you know, there are bounties for both CCIP and functions. Both Saul and I are going to be here for the next three days to answer any questions you have.
00:11:12.110 - 00:11:34.474, Speaker B: But to get you started, take a look at the following right run functions app. Right, this is a bunch of community generated examples of chain link functions. Take a look at them. The basic concepts are all broken out. And obviously you can go to the docs chain link where all the formal documentation is. But this is community submitted examples, right, of people writing decentralized functions code. You can also play with it.
00:11:34.474 - 00:12:13.490, Speaker B: A simulated execution environment for your JavaScript is provided in browser where you can do a kind of pre run, right. You can debug and you can do a dry run of your custom code in this, supply your arguments, supply your secrets, and it'll spit out the hex output and decode it for you. So you can see what it would look like on chain. And you can use the NPM toolkit, which is an NPM package that I co wrote with a couple of my colleagues, and that abstracts away a lot of the complexity and breaks it all down into steps. And the documentation is pretty good, if I may say so myself. It's pretty thorough, but we want feedback from you. Use these three or four things and you should be absolutely without any problem using functions.
00:12:13.490 - 00:12:39.434, Speaker B: It reduces what used to take three to four days, spinning up your own node and all the rest of that to about 20 minutes now work, right. And so you can connect to any API. Now, I also did a deep dive at our chain link hackathon, which by the way, you can still participate in at the moment it's going on. At the moment you can submit to both. There's no problem from our point of view, but you can also watch the deep dive of the Chainlink functions deep dive that I did on YouTube by scanning that QR code and going and taking a look at it. Right. These are some more resources.
00:12:39.434 - 00:12:42.320, Speaker B: Sorry, this is Sols. I'll give back to Sol.
00:12:42.930 - 00:13:07.480, Speaker A: So I'm here again. You are at half of the presentation, but I can give you a minute to get if you was a bit late to get it. And yes, we have more his services for you in our documentation. But what about my transaction? Let's see what's happened. Yes, success. Yes, I'm so happy when this happened. Always.
00:13:07.480 - 00:13:32.960, Speaker A: Let's see what's happened. Remember that? Yes. And this is also updated because I have a new NFT here just now. And this NFT should be one of these reds. And this is the eight probably this is the last. Yes, the seven, the four probably must be so recent. Let's see if it's this.
00:13:32.960 - 00:14:11.798, Speaker A: No, I didn't refresh yet, but it seems to refresh it. But by the way, let's come back here only to see we have a lot of time. Yes, so let's see what's happened because I don't know, it's by price. Can I do by recent listed? Yes. So one of these will be like the last of this probably this is the last. Yes, it's the eight like was before. And you can see that I minted this from like Fuji was my red chain, blue was the sepolia and purple was the polygon.
00:14:11.798 - 00:14:30.610, Speaker A: And you can see here that I did it using the details part like seven minutes ago. So it was here, it was now. And this is. You can see the price in that moment. The Cersei was Fuji. You can see the same. Let's get for example one of the others.
00:14:30.610 - 00:15:01.420, Speaker A: So you understand this better. Like I did this yesterday. I think I started this yesterday and if I go this, you can see that it was another price, it came from Sepolia and yes, it was one day ago. So they are real, they are minted in different times, different chains. So this is really amazing. And to summarize this as well, the presentation a bit more. Do you need it? How good of this.
00:15:01.420 - 00:15:34.518, Speaker A: Yes, I'm missing some phones over there. Let's wait a bit. Yes, we have time and okay. Yes, and we are share with you a lot of resources but especially related to CCIP. You can go to the documentation. A lot of people ask me about the supported networks. So you can see the supported networks directly on this link as well.
00:15:34.518 - 00:16:48.046, Speaker A: And you know that a bit is low here. But you can see the testnets especially here we are using the testnets and here we have Sepolio Chimizbi, Mumbai, Fuji, BNB and Bezi for now. So this will be useful for you. And also we only talk about message, but what about to transfer tokens? Because CCAP also can transfer tokens and yes, can be used like Cabridge, we have some tokens that is managed by chainlink and then you can transfer this kind of tokens or you can create your own pool managed by you your application and then use this pool using chainlink ccap only to cross the tokens. But if you are using for example, the tokens that we are providing to you to test here we have the link of the two kind of tokens. Because imagine I have a token in one chain, what I do in the other chain, in the first chain, I may burning the token or I may locking the token. I must do something to this token not be used in both chains in the same time.
00:16:48.046 - 00:17:12.818, Speaker A: This is the point. So we have this token burning mint lock and mint. You can use this in the second chain. I must have my decision as well. I'm minting the token, the second chain in the destination chain. Or I already have these tokens over there and I will unlock this token. Depends of your business, but we have some tokens for you to use to have the solution.
00:17:12.818 - 00:17:24.790, Speaker A: Oh yes. Okay. I talk more than I need now. This is the developer part for you. So we have all the information here and I think we are done. So see you around. We are over there.
00:17:24.790 - 00:17:29.160, Speaker A: Bye. Yes.
00:17:30.810 - 00:17:35.260, Speaker B: Well, thank you. Thanks.
