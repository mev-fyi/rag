00:00:07.450 - 00:00:23.230, Speaker A: So for this demo, I'm going to bring on Robert Miller from Flashbots. And a lot of you have heard about what's happening in the world of Mev, but you may not all know about the actual new things that Flashbots is working on. And to talk about Suave, please welcome Robert.
00:00:24.210 - 00:00:52.480, Speaker B: Okay, cool. So, my name is Robert Miller. I work at Flashbots, a research and development organization focused on Mev or Miner extractable value. I'm a steward there. Today we're going to be talking about Suave. So Flashbot's vision for the future of mev and the decentralized block building network that we're going to be making. I'll introduce the mevm and we'll look at where Suave is and its release details in the future.
00:00:52.480 - 00:01:34.566, Speaker B: Won't review this at any more length, but again, talking about the mevm SWAV, we'll begin by looking at the mev supply chain, some of the challenges and why we are building SWAV at Flashbots. So the mev supply chain is this framework that we use to think about how a transaction progresses before it's included on chain. It's a fairly basic framework. So you start with a user that has an intent. This is somebody who as an example wants to swap assets on chain. That intent gets taken by a wallet and turned into a signed transaction. Again, as an example, maybe the user is creating a transaction on uniswap.
00:01:34.566 - 00:03:06.434, Speaker B: That transaction in this case creates an arbitrage opportunity that a searcher is able to pick up insert their own transaction back, running the user and capturing the arbitrage to form a bundle of transactions which is passed on to a builder that processes these bundles creates a full block and a validator eventually signs that and includes it on chain. You don't need to know the details of that, but this is meant to demonstrate that throughout this process we have a couple different centralized pieces of infrastructure that are really complicated performing these off chain actions that are really important to how transactions get processed on Ethereum and end users outcomes. This is a problem because these mev applications, searchers block builders are some of the most important infrastructure on Ethereum today. They decide where value lands, they decide which transactions get included on chain, who is getting how much value. You have a couple of hundred thousand dollars every single month that is paid back to users who are using things like order, flow, auctions and actually 95% of blocks on Ethereum today, 19 out of 20 are created with this centralized MEB infrastructure with a relatively small group of specialized actors that do that. About four builders making 80% of that. So there's this really critical infrastructure at the heart of crypto, at the heart of Ethereum today that is entirely centralized and running off chain.
00:03:06.434 - 00:03:42.398, Speaker B: And you can see here my atlas of mev infrastructure that is holding up crypto. And this is a challenge because while it mitigates a bunch of the negative effects of mev that I haven't touched on here too much with things like Mavboost keeping the validator set decentralized Flashpots protect. If you want to prevent front running. This centralized infrastructure doesn't scale very well. You can't just copy paste it, move it to all chains. It provides an avenue for censorship which we've seen on Ethereum. It needs policing in order to figure out who is a trustworthy actor in the supply chain.
00:03:42.398 - 00:04:31.794, Speaker B: And it has centralizing pressures, even more so than exist today. So what do we do about this? Why do we not just implement all this stuff as smart contracts? Is one question you might ask. And that's largely because Ethereum is limited in some specific ways, which is fine, it's limited for the kind of things that it's doing. But as an example, it has no way to handle private information. If you are trying to get a transaction included on Ethereum, there's no way for you to send that privately to Ethereum before it's processed. You can't coordinate with actors within block time, so there's no way for you to agree that someone pays you to background your transaction on Ethereum. You can't get really quick off chain information like a binance API if you're interested in conditioning your execution on that.
00:04:31.794 - 00:06:01.120, Speaker B: And it's fairly expensive to do compute. So These reasons Are why Flashbots Is Developing Something that We Call The Mevm, which is this Modification of The EVM that We're Making with New, precompiles, really Specific, Powerful Features for Mev use Cases Specifically As An Example, taking A Signed Transaction, simulating It, and Returning Some Information, or Building A Block With A Listed Transaction that Is Input. And what's really interesting about this is that since we are modifying the EVM, you can actually program any of the infrastructure as smart contracts. You can write an entire block builder in Solidity and I'll show you an example of that later within this familiar programming framework that, you know, Solidity using Foundry, using the standard EVM developer tooling that exists already. And this really lowers the barrier to starting writing this critical infrastructure right now, which is currently a really high barrier to entry. And you get to benefit from the underlying decentralized infrastructure of the mevm chain that we will deploy. So our goal with the Mevm is to take every part of the Mev supply chain that exists today and offer it as a pre compile so that in your smart contract, you can call those pre compiles and compose them together and write really complicated Mev infrastructure to do things that you can't do on chain in Ethereum today.
00:06:01.120 - 00:06:41.310, Speaker B: I'll run you through kind of the architecture of how this looks like at a high level. And then an example smart contract written with the mevm. So the way that this works, the middle box here with three components inside of it is Suave, and it's got three main components for you to know about. We first have the mevm chain that I just described to you. It's this modified EVM chain with special precompiles for mev use cases. And some of these precompiles call out to what we call an execution node. This is an off chain node which is providing execution.
00:06:41.310 - 00:07:31.034, Speaker B: As an example, simulating transactions, merging them together, building a block, inserting new transactions. And it's doing this to provide credible and private compute off chain that you don't want to do on chain. These run in trusted execution environments so that you can still trust the outputs and the results of this compute, even though it's not all being performed on chain. And I'll double click and dig into that a little bit in one more slide if it went over your head by chance. We have a third component here, which is a confidential data store for private information that you don't want to store on chain that can be accessed by the execution node. So you've got four main stakeholders. Developers who are writing their mev infrastructure as smart contracts.
00:07:31.034 - 00:08:51.240, Speaker B: Users who send private data that they want included on chain and authorizing some contracts saying hey, I'm okay for this block building contract or this auction for my transaction to have access to my private data executors that are back running or arbitraging doing mev things to try to execute people's bids. And the net result of suave is it is creating blocks that are included on chain for networks like Ethereum or roll up to dig into how execution nodes work a little bit more. You have developers that are defining in smart contracts off chain execution, which is performed in what we call an execution node. So your smart contract says hey, take all of these transactions, simulate them and treat them according to this algorithm and that's not actually performed on chain. Instead, all of that is performed in this execution node in a trusted execution environment like in SGX, where you know, the code is running with some level privacy and integrity. So this is a really scalable way to get private and confidential compute for mev use cases. And the other thing that I would note is that execution nodes, if a user permissions, a certain smart contract, have access to private, private data.
00:08:51.240 - 00:09:31.422, Speaker B: So this is what a Mevm contract looks like. This is the Flashbots Builder today, our block building algorithm written with mevm. You can see how it has a couple functions here that you normally don't have within Ethereum. So we are getting Ethereum Mainet state on that fifth line there, the latest block state. We are simulating bundles of transaction, getting the results. We have a pending block there and we're simulating adding new transactions to it, seeing if they fail, discarding them. So these are the superpowers that the Mevm gives you that you don't have currently on Ethereum.
00:09:31.422 - 00:10:04.970, Speaker B: And lastly, on that second to last line, we are exporting the block. So we are making it available for Ethereum. Proposers to actually include on chain if they request it from swap. And this is just one example of a use case. There's a ton of stuff that you could build. So any off chain mev infrastructure we have the ambition of being able to support within the mevm. So other building algorithms that treat transactions differently, you could do pre confirmations with mevm, you could build uniswap X on chain with the mevm, you could build cowswap.
00:10:04.970 - 00:10:59.034, Speaker B: I won't list it all there. But we're really excited about the other potential mevm contracts that could be made. And what we're really excited about is having really low barriers for other people to be able to deploy their own types of MEB infrastructure on this and to have these different applications composed together into something that is larger. So this is not a monolithic Flashbots builder that we're decentralizing. Instead, this is a platform where anyone can deploy their own applications and all these can compete and compose together in this open market. And we think ultimately that kind of positive sum platform vision is what's going to result in better outcomes for users and better blocks for validators. Briefly, what I'll touch on here is this isn't supposed to be made just for Ethereum, this is supposed to be a platform that is building blocks for many different chains.
00:10:59.034 - 00:11:45.646, Speaker B: So I've been using Ethereum kind of examples because that's where our roots are on but Suave and the mevm works with many different types of environments. You can have execution nodes that are running EVM, you can have them running WASM, you can have whatever virtual machine that you want or support whatever chain you want. And the integration is relatively straightforward so long as your chain has some way to listen to SWAV for blocks. So this isn't an idea for us anymore, this is something that is real. We're actually landing blocks on testnet right now, so we landed our first gorli block a couple of days ago. On the left here you can see some terminal stream of blocks being produced by Suave. If you're interested in seeing this proof of concept, you can feel free to catch me sometime this week.
00:11:45.646 - 00:12:45.390, Speaker B: We'll be sharing more details online and we're moving towards the Centauri release that I talked about in the introduction, which is a DevNet that we're going to be launching in the fourth quarter of this year. When anyone that wants to can deploy their own mev infrastructure as smart contracts on SWAV, we'll share examples of what it looks like to take all of our centralized infrastructure, create them as smart contracts on SWAV using the mevm. And again, we're targeting the fourth quarter of this year. Initially, our execution nodes won't be in SGX, they won't be in trusted execution environments. So they will require some trust in Flashbots and the next release, which we call andromedo will put those nodes inside of an SGX. So the whole system will not have any trust in Flashbots and at that point, we are looking to try to move on to other domains too. So if you're a roll up, if you are an L One developer, please feel free to come talk to me about what it looks like to integrate to SWAV.
00:12:45.390 - 00:13:02.740, Speaker B: So that's all I have to say today. I got a couple of things. Feel free to reach out if you are one of these stakeholders you're interested in working with us. We are also hiring quite a bit. So hiring engineering managers, developers, a lot of product related roles. I'm Pritzy Miller on Twitter. Thanks for listening, really appreciate it.
