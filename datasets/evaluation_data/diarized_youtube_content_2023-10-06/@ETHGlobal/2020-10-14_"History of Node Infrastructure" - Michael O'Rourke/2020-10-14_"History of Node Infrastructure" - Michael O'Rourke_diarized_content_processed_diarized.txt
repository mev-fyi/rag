00:00:00.090 - 00:00:16.750, Speaker A: Josh Stark from the global team. And Josh will be here taking over for me in introducing our remaining talks for the day. So Josh is already here and I want to welcome Josh here to say hi to everybody on the chat and I'll hand it over to Josh.
00:00:17.410 - 00:00:31.800, Speaker B: Thanks, Kartik. Hey, everybody. Thank you for joining us today. We've just got a couple more talks left this afternoon and I'm really excited to introduce them. Let me just quickly share my screen as I take over here for a moment.
00:00:34.170 - 00:00:35.446, Speaker C: All right. Yeah.
00:00:35.468 - 00:00:59.150, Speaker B: So I'm Josh, I'm also part of the ETH Global team and I'll be your MC for just the next hour. So next up, we've got Michael from Pocket Network and he's going to give us a history of node infrastructure. So, Michael, please join the call and take over. Share your screen. And yeah, it is your stage.
00:01:00.610 - 00:01:18.120, Speaker C: Awesome. Thank you, Josh. I'm going to go ahead and share my screen here. Hi, everyone. Hope everyone is doing well. OK, great. Hopefully everyone is seeing my screen.
00:01:18.120 - 00:02:14.354, Speaker C: So with that hi, everyone. My name is Michael O'Rourke. I am one of the co founders of Pocket Network. And Pocket Network is a protocol that incentivizes people to run full nodes for blockchain developers. So when a developer is building an application and needs access to the RPC, Pocket Network provides full access to that RPC in a fully decentralized manner. For a little bit more context, when your application is using Pocket, the protocol picks five pseudo random nodes to do work for your application for an hour and then swaps out another five set of random nodes for your application. And it pulls from a global set of nodes.
00:02:14.354 - 00:02:38.560, Speaker C: So that's a little bit of background on Pocket. And what I'm going to do here is give a brief history on the node of node infrastructure. So with that, before I do, though, I'm going to give you a little bit about myself. I was born in Dominican Republic. I live in Tampa, Florida. For those of you who know me, I shell Tampa pretty hard. Really awesome place to live.
00:02:38.560 - 00:03:10.838, Speaker C: I studied international studies in college. I learned to code as an iOS developer before I graduated. And I work out of a blockchain co work space called Block Spaces here in Tampa. So I want to preface this talk with this is meant to be a pretty high level talk. I studied basically history in college. It's something I'm fascinated by. And what I really want to do is give you all a context of where we are today and what the architecture looks like by starting from the very beginning.
00:03:10.838 - 00:03:54.886, Speaker C: So with that, I'm going to go into part one, which is kind of pre internet, and basically we're going to go over the first nodes. What are these? Regional data owners? And effectively, pre Internet was very low bandwidth in this respect. So the first node was the interface message processor. This was the kind of first server funded by the US government. This was to actually protect the US in the case of nuclear catastrophe. And the idea was, okay, what happens if we build a redundant network that if our major cities are bombed, for example, it won't go down. So that's really where this research started.
00:03:54.886 - 00:04:36.706, Speaker C: This builds on the ideas of the amazing JCR Lick Lighter, who is frankly a legend. I would recommend reading anything about him, if you're curious, on seeing how kind of these ideas that Ethereum and every one of these decentralized networks is built on this thing basically just did packet switching, dynamic routing and some hypertext. It was very basic and the first computers were connected in 1969. If you want to learn more about this, I really, really recommend Where the Wizards Stay Up Late. This is a really great book. The narrative is really well done and it really tells you the history of how this barely happened actually. And it's fascinating.
00:04:36.706 - 00:05:16.254, Speaker C: So that's the first node in terms of when it comes to history of node infrastructure. So the next kind of phase I want to talk about is this idea of one of the first bulletin board systems or BBS. This is one of the larger ones that occurred. This one's called FidoNet. This was created by someone named Tom Jennings. And the nodes here are effectively the people running the servers that you would connect to over your modem or your phone. You see the CDs and the floppy disks, that's the database.
00:05:16.254 - 00:06:11.730, Speaker C: That's where the data was stored. And these nodes would have massive, really frankly piles or organizations of these CDs to upload on these servers so that people could dial in and see this information on these BBS's. And it's really interesting because you can only connect one person per modem at a time, which is kind of crazy thinking about it today. And really Tom Jennings designed this in a way, actually he defined it as cooperative anarchy. He wanted it to be cooperative anarchy. So the idea would be that he would provide minimal cost public access to electronic mail and some other things. It was really important for Tom Jennings that every node to be self sufficient and needing no support from other nodes to operate.
00:06:11.730 - 00:07:25.450, Speaker C: And the way this worked was that there was a node list and it would contain the modem telephone number of all the nodes. And this would allow nodes to communicate with any other node without the consent or need to ask any political groups at any level. And there's a lot of kind of interesting history here in terms of governance and how this whole thing kind of came along, but a little bit about the network architecture of the Fido network. And for context, this grew to have 20,000 nodes all around the world. Really the people who had the most power were the regional coordinators and basically the list of all the nodes would be automatically updated and distributed weekly. This list would basically just have all the information of the hosts, the telephone numbers, the geographic location and everything like that, right? Again, this was cooperative anarchy. So certain random things happened, right? They would cooperate and write some policy in terms of how to manage this network.
00:07:25.450 - 00:08:28.686, Speaker C: The regional coordinators actually kind of de facto made themselves the bosses and they would be the ones who would nominate the network coordinators, the zone coordinators and the international coordinators. And for context here, the regional coordinators were like the big city ones, right? So they're the ones who had the most data of their specific location. But what I really want to highlight here is you've got a bunch of self sufficient siloed networks nonetheless dependent on these regional coordinators and these other network zone and international coordinators. So the way I like to think about it is it was like being like a turtle. They were pretty siloed. The data moved very slowly through shareware and physical mail and they could work together, although it was kind of limited in capacity and how they would work together kind of thought kind of reminded me of a turtle. So that's the first part.
00:08:28.686 - 00:09:22.602, Speaker C: Basically, kind of pre Internet, things were very slow, not much data. Then the Internet happens in the 90s, BBS die, they become ISPs. There's exponentially more data being passed around as the Internet of course grows. And in this case, large corporations end up owning our data for a really important, in my opinion, user experience trade off, which is a big reason why the internet exists the way it does today. And frankly, we're kind of at the edge of part two and part three right now. But a really important piece here is that this transition left a void in this kind of node hosting environment, right? Because those BBS end up turning into ISPs. So as the 90s went on, the internet started exploding.
00:09:22.602 - 00:10:00.462, Speaker C: A lot of startups had to buy their own servers. This was originally known as a Slash dot problem. You'd get posted on Slashdot and your website would break. This was really expensive. Startups would spend millions of dollars buying servers to just keep up their website, right? This was before we had any idea of sophisticated DevOps and all the amazing tooling we have today. But this really kind of helped push a really big movement in the late 90s, early 2000s into the cloud. This is really the state of where we are today.
00:10:00.462 - 00:10:31.114, Speaker C: The cloud is huge. We have really four big entities that run most of the cloud. Amazon, Microsoft, Google, Cloud and IBM. There's a bunch of independent infrastructure providers as well that run their own data centers. But those have been progressively going down or getting smaller. And the way I like to think about this is we are all basically Mr. Fantastic.
00:10:31.114 - 00:11:41.226, Speaker C: I was starting to draw this Mr and mrs. Fantastic. I was starting to draw this out and I kind of started to see that we had really long arms because we could really reach anywhere at any time and it's really, frankly incredibly powerful. I don't want to discount how amazing things are right now in this context because we are able to communicate with anyone all around the world. But there comes an important tradeoff here where effectively all our data is siloed amongst just a few companies, right? Some companies like Facebook might that data is their kind of edge, right? That's kind of their competitive edge, if you will. Whereas you've kind of got these broad infrastructure providers, which is really kind of our big focus more than anything as Pocket, but they provide servers for people to run their startups. So before when startups had to spend millions of dollars to run their servers and build this infrastructure, now they can auto scale in seconds with Amazon Web Services, right? That's kind of the metaphor.
00:11:41.226 - 00:12:54.350, Speaker C: I'm going there. So then, part three. This is Web three, this is owner and Data, and most importantly for me and for Pocket, is shared publicly accessible databases. This is a really important concept, particularly in the context of the way blockchain infrastructure is working today because in the webtoon world, just like Facebook and any company, while they might be running on Amazon Web Services or GCP or whatever it might be, their databases that are hosted on these servers are private, right. For most companies. Most companies, this is kind of their edge, right, and their competitive advantage and kind of how they make their secret sauce, right? An important and really important distinction in Web Three is that these are shared and publicly accessible databases, which has changed the dynamics of how this infrastructure gets hosted and served to every single blockchain developer in the world. It doesn't matter who you are, we're starting to see these trends.
00:12:54.350 - 00:13:45.666, Speaker C: So before I do though, I want to talk about what a node is in the blockchain context, right. In Web two, you have an API, you have your server and you have database. Death is all three in one and frankly is not optimized for rapid retrieval, right. For grabbing data quickly. It's focused on being a redundant peer to peer in this peer to peer network that exists, right. And as a result, we've had lots of solutions above and below geth. When I say below, I mean like the networking layer and above, like indexing that has helped these sorts of things, the limitations of kind of just a raw geth server by itself, right? Or a raw geth node by itself.
00:13:45.666 - 00:14:46.066, Speaker C: But I really want to kind of highlight that a geth node or an open ethereum node or whatever it might be, is really all three of these at once. Whereas in web two, the API and the database and the server are all really optimized for their specific tasks and as a result, it's a lot and many times more difficult, more expensive, more slowly to do what we take for granted in Web Two world. So we've seen a lot of awesome solutions to come in and really help improve those things. So now that we kind of have a note out of the way or what kind of a node is out of the way, I want to talk about the first node I got in crypto in 2013. I managed to download Bitcoin QT for the first time. Took forever to download Bitcoin then on my local computer, bitcoin QT. And it's pretty magical, of course, the first time that you used one of these full nodes.
00:14:46.066 - 00:15:47.846, Speaker C: Right, this is a nice UI on top of a Bitcoin node that you'd be running on your local. Yeah, this is a quick thing, and there's been a lot of information on Bitcoin core and what was Bitcoin QT and now is Bitcoin Core. But it's just a really important moment in history, in my opinion. And because it was so hard to run these nodes, no one really wanted to. It kind of limited the growth of our industry right early on. This is a screenshot of Coinbase, I think, in 2012 or 2013, and they had an important insight that wasn't you know, they weren't the only one to have it, but they're kind of, of course, their massive reason of why we are here today. They were like, hey, Brian Armstrong was like, it's hard to run a Bitcoin node, let us run it for you so you can just access your wallet.
00:15:47.846 - 00:17:12.066, Speaker C: Right? This is a complete departure from kind of the ideals that a lot of us really care about in terms of sovereign ownership, owning your money, and being able to verify a lot of these things. Right? So this is the first steps, are the first steps to kind of the traditional Web Two, kind of web Three mashup that we're in today, right? And frankly, almost every single application is working on this context in terms of at least the infrastructure. Bitcoin decided to go the custodial route, right? We have a ton of amazing applications that are non custodial as well, but that's an important piece in my mind. So the first Ethereum clients, I don't know if y'all remember if you've used Mist or the original Parity client, but these were also magical for me, just as magical as the Bitcoin nodes. Parity came out on February eigth, 2016, so these were the first ones. And since then we've seen, which I'll show in a little bit, a nice growth and diversity in some of these nodes as well. And in 2016, defcon Two inferior was born.
00:17:12.066 - 00:18:19.222, Speaker C: So inferior is, in my opinion, one of the most important aspects of the Ethereum ecosystem. And I want to make sure I highlight that inferior did not lead this. This would have happened anyway, in my opinion, because Ethereum just kept getting bigger and harder to run. And I show these graphs to show that developers, application developers on Ethereum most of the time, don't want to run their own nodes, they want to focus on building their amazing DAP, right, whatever it might be. At the same time we saw the number of nodes going down, right? I want to highlight that I think it's a little bit overblown in terms of the amount of nodes being risked, the amount of nodes being so risky that things can be censored and so on and so forth. But frankly, they've been a really important piece. And this is part of the old paradigm where DAP developers access an API with a bunch of servers controlled by ran by centralized entity.
00:18:19.222 - 00:19:06.140, Speaker C: And this growth has helped us see a massive explosion of these, right, from Geth to open Ethereum. Of course, Nethermind and Besu are some of the major clients and we've also seen explosion of providers as well infira Alchemy Rivet. I'm just naming a few here, figment networks. Quicknode. I want to highlight rivet. They've done a really interesting thing where they've forked geth and have allowed for much simpler and easier scaling of your geth nodes, particularly when you're hitting high throughput or when there's an application that just is absolutely hammering your servers as a result. And again, I've just named a few here, there's a ton of them.
00:19:06.140 - 00:21:12.270, Speaker C: It's actually led to a massive diversity in my opinion, which is nothing but good in my opinion. Also, I consider these the kind of next generation of protocols that are really actively trying to decentralize this infrastructure stack. Because we see a lot, I don't know if you're on crypto, Twitter, but we see all the know is your DAP really decentralized because they are using a centralized provider, right? I also do think it's a little bit overblown that the government is going to come down and shut down infira or AWS. But that said, I think it's important to point out that we have these kind of web two infrastructures and architectures kind of placed on top of this web3 new paradigm, right? And it doesn't always exactly fit, right? So we see things like it's expensive to run Ethereum infrastructure because again, they take up a lot of data as peer to peer networks by persevering in peer to peer networks, but you also need them to provide data to applications at scale. So I just want to highlight for me, of course, pocket, but I kind of want to show how each part of the stack these three projects are in. And if you took that node picture that I showed a few minutes ago, the graph works on the indexing layer and they are incentivizing people to run full nodes in their own way, right? Because the more traction their queries have, the more nodes those indexers need to run, right? But they're really focused on kind of this indexing layer and that indexing layer is super important because again geth you know, these full nodes are not optimized to grab this information, right pocket network purely focuses on the full node. We just open up the RPC for anyone to access and when a node serves some data through the RPC API they earn our native cryptocurrency.
00:21:12.270 - 00:22:32.814, Speaker C: And also I think Marlin is really interesting on the networking layer, so they're doing their own incentive for full nodes, but specifically through the networking layer, which I think is really fascinating. And in my opinion, these are kind of three networks that are, in my opinion, well designed and are really doing pushing kind of this decentralization of the infrastructure stack, which in my opinion is really exciting. And this, in my opinion, will lead to a new wave of web, three friendly infrastructure and architecture. Because instead of kind of going through many layers to access some data, I believe in the future we're going to be accessing many different kinds of nodes through many different ways of paying with all of these things abstracted through all the tooling. And frankly I do think through all this traction that all these applications on Ethereum are seeing, we're also going to see the nodes go up I think as well, allowing for really interesting things to happen down the road in my opinion. For me, I think right now we're at a really interesting pivotal time because kind of got these new protocols coming out that are really making honest attempts at really decentralizing the stack and I think that's incredibly important. That said, we'll have to solve really hard problems.
00:22:32.814 - 00:24:02.730, Speaker C: We don't have billions of dollars like Amazon does and there's a lot of investment and money that needs to go into networking bandwidth and hardware in my opinion. For me this takes time, a lot of research and frankly a lot of investment and money for open source protocols like the ones I just mentioned to reach kind of the similar economies of scale as previous ones. That said, we are able to tie in these kind of crypto economic incentives really tightly in our protocols which in my opinion gives us an advantage at least in the short to medium term. And I think this is changing the narrative because I think this is a really interesting quote that I've always believed but in my opinion software has always implied trust in those hosting the hardware. I think networks like ours are a reversal in this trend providing new reasons for everyday people to run more hardware for themselves in my opinion, because we're starting to see all these networks that are frankly incentivizing you to run nodes in infrastructure. I'm just amazed at all the people in pocket who are now becoming DevOps pros who before had no idea about any of this stuff, right? I just think these incentives are just starting to get baked in. I think it's going to be an incredibly powerful trend.
00:24:02.730 - 00:24:23.700, Speaker C: So yeah, that's it. Thank you. Thank you for having me. Really happy to be sponsoring Fglobal. If you guys have any questions about how Pocket works, please reach out to us in the channel. We'll be more than happy to answer any questions and point in the right way.
00:24:25.270 - 00:24:53.590, Speaker B: Great, thanks Michael, that was a great presentation. If you have just a couple of minutes, just a couple questions to run, I'll just I'll stop your screen sharing if that's okay too. Or maybe Andrew can do that behind the scenes. So, one question. I mean, you know, you mentioned it seems like a main tension here. You know, in the long term, will all of this end know back at centralized infrastructure?
00:24:53.670 - 00:24:54.058, Speaker C: Right.
00:24:54.144 - 00:25:28.598, Speaker B: There are often efficiencies with scale, whether that's just the expertise to run the nodes or whatever it happens to be, whether it's proof of work, proof, stake, or something else. How can we avoid that future? I guess you mentioned at the end here that the opportunity to bake in crypto economic incentives into these networks gives us a powerful toolkit. But I guess tell us more about what are the different levers that we can push to try and create the incentives to avoid just ending up with another set of centralized infrastructure in web3?
00:25:28.764 - 00:26:01.086, Speaker C: Yeah, I think the number one thing is tooling, meaning I can do a one click deployment at a local data center, right. And manage my validator node, for example. Right. I think for me, that's probably the biggest inhibitor when it's at least pure proof of stake network. I think one of a really important, actually, line for me is having non delegation. Right. Because delegation is easy when you have that hard line right there.
00:26:01.086 - 00:26:27.960, Speaker C: People are actually much more incentivized to build this tooling to make it easier for people to run these nodes. And I think that's an important aspect. But for me, what's interesting about these open source networks like the graph pocket and Marlin is that through collective efforts and kind of building on these infra Legos, if you will, it will only get better. Right. And I think that's how we kind of avoid that future. Got it.
00:26:28.570 - 00:26:46.750, Speaker B: And one more question you mentioned at the end. There are hard problems open in this space for anyone watching today who is looking for a hard problem to work on, big or small. What would you suggest is the next hard problem that we have to tackle as an ecosystem?
00:26:47.250 - 00:27:30.200, Speaker C: Yeah. Specifically in the infrastructure space, I'd say coordination amongst these turtles, if you will. Right. So how do these turtles speak to each other quickly, efficiently and easily? If I'm AWS, I've got infrastructure all around the world and I know exactly where everything is going. Right. I think understanding how these various infrastructure networks play together and interact, I think is going to be increasingly a more difficult problem, especially as they get bigger and it gets more unwieldy. People have different setups and with different bandwidths in different parts of the world.
00:27:30.200 - 00:27:38.414, Speaker C: When it's not one person who owns all of it, coordinating all that is going to get increasingly more difficult. Okay.
00:27:38.452 - 00:27:38.970, Speaker B: Well, thanks, Mike.
