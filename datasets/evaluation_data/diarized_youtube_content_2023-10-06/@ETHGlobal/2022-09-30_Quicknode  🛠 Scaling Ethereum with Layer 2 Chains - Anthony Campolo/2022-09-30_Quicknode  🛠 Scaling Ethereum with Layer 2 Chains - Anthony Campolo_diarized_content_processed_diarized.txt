00:00:06.890 - 00:00:29.814, Speaker A: Hello everyone. My name is Anthony Campolo and I'm here to talk about scaling Ethereum. This is for ETH Online. Really excited to speak with you all. Thank you to ETH Online for the opportunity to do this. I am a developer advocate at Quicknode. And Quicknode is a blockchain deployment platform.
00:00:29.814 - 00:01:14.834, Speaker A: If you want to get access to a node, you can go to Quicknode and find any of your chain of choice. Obviously, they'll be talking about Ethereum, but we have a wide range of Ethereum layer two options. And today we're going to be talking about scaling Ethereum specifically. And we won't really be talking about QuickNote at all. We'll just be talking about what is the problem with Ethereum scalability and what are some different options available to create more scalable applications on Ethereum. So I'm going to go ahead and share some slides with you all. Now, this is a talk I had originally given at Ethereum Amsterdam, and there's a recording of that.
00:01:14.834 - 00:02:03.422, Speaker A: But this will be a kind of slightly more updated, more current version of that because there's some implications with the merge that are coming up that we're going to talk about a little bit. But in this talk we're going to be talking about side chains, ZK proofs, and optimistic roll ups. Now, if you've never heard any of those terms before, that's okay. We're going to define all of them. We're going to get some context on what they mean and why they're important for scaling Ethereum. And then my name is Anthony Campolo, and as I already said, I'm a developer advocate at Quicknode. First thing we should talk about is what is the problem here and why is this something that you need to know about and consider as an Ethereum developer? And the problem is that the Ethereum network creates a new block every twelve to 14 seconds.
00:02:03.422 - 00:02:58.374, Speaker A: Now, when people talk about the issues with scalability, you'll frequently hear people talk about the number of transactions. And this is, I think, a better metric for thinking about scalability because a transaction is kind of a vague term, like a transaction, depending on what's happening within that transaction. And I'm using the term transaction within the sense of like a blockchain transaction. There's a lot of things that could happen within the span of a transaction and how large or small it is will affect how many transactions you can have on a block. So the bottleneck here is not so much transactions as it is block space. So when people talk about blockchain real estate, they're talking about block space. They're talking about how much space on these blocks you can fit information, data, transactions, just user activity, because that's ultimately what the blockchain is.
00:02:58.374 - 00:03:59.834, Speaker A: It's a ledger that we are all collectively using and writing to. And so if the ledger space is finite and the ledger space requires a certain amount of time to get written in, then we're going to have a scalability problem. So that is why there is a scalability problem with Ethereum at all and that needs to be addressed. Now we're going to talk a little bit about the history here and we're going to go through the whole timeline starting with this first paper from Vitalik, Buterin may have been a blog post, not a paper, but there'll be citations all at the end. And what this was is a concept called shadow chain. There'd be a mainline state and then there'd be a shadow chain. And this is a very prescient idea because all of the things we're going to be talking about within the span of this talk are about how do we create a second separate ledger that the first main chain, which is Ethereum, can interact with and can use to offload transactions somewhere else.
00:03:59.834 - 00:04:59.162, Speaker A: So here there's the mainline state and then there's the shadow chain. And the shadow chain will have transactions and then those transactions will get combined together into some smaller representation and then put back on the main line. And then you also see there's that audit arrow in the middle box and then the audit arrow is, well, what if someone tries to write a bunch of transactions that give themselves a million dollars and write it back to the chain? That's obviously an issue and we'll be talking about how we can verify these things are true as we go on. The next important thing to know about in terms of the scalability is that this is not just an Ethereum specific problem. This is something that is also affecting Bitcoin and other chains as well. So Bitcoin, they also wanted their own solution for this, which is the Bitcoin Lightning Network. And so the Bitcoin Lightning network had the same idea where there's kind of two separate things.
00:04:59.162 - 00:05:40.262, Speaker A: There's the main Bitcoin chain and then there's going to be everything else that's offloaded from the chain. Now with the Lightning network, it's a little bit different in that it's not like a full on blockchain, it's more of a protocol. But I'm talking about it here and inserting it to the narrative because it's an important part of this kind of thought of we need to figure out a way to scale blockchains. And Joseph Poon particular, who worked on the Lightning network, is going to be in the next slide here. So now we have tok Buterin who is talking about shadow chains and then Joseph Poon, who's talking about the Lightning network. They kind of came together like, okay, we need to figure this out. So they started talking about plasma.
00:05:40.262 - 00:06:31.820, Speaker A: And with plasma it was a little complicated. So that's why I'm throwing you a quote here. It was a proposed framework for incentivized and enforced execution of smart contracts. Smart contract part is important and it's scalable to a significant amount of state updates per second. The idea being that whatever the bottleneck is that's keeping Ethereum from being scalable, we want to make that number much larger. We want to make it in the billion so that we could fit as much activity as we could ever want onto this blockchain and then it would be enabling the blockchain to be able to represent significant amount of decentralized financial applications worldwide. So it's first saying we want to be able to offload computation and then we want to do that so that we can do a lot of stuff and people can send as much money as they want without having to pay huge fees along the way.
00:06:31.820 - 00:07:38.650, Speaker A: Now, if we look at plasma in a little more in depth, you can see this diagram here and this is from the original plasma paper, scalable Autonomous Smart Contracts. And I recommend if people find this stuff interesting, there's a lot of citations at the end and there's a lot of dense academic papers written about this subject and it's very deep on this if you want. And the kind of top line of how this works is you have a child chain and a root chain and there's communication and arbitration between the two secured by fraud proof. So this is something that as we get into the different current solutions available, some of them will have fraud proofs kind of baked into them. So this is again another reason why we're talking about this historical angle because while we don't use plasma today, the ideas that were explored in plasma are going to become important later down the road. And then you have the child chain has its own mechanism for validating the blocks and we'll see a couple of different ways that the blocks are validated across a couple of different options that we have. And then particular fraud proofs can be built on different consensus algorithms.
00:07:38.650 - 00:08:28.810, Speaker A: This is important because consensus algorithms can have downstream effects in terms of how energy efficient a chain is. And you want to make sure you have the ability to include your own consensus algorithm if difference between proof of work or proof of stake is something that is important to you. Now let's look at the pros and cons of this approach. Now, the first pro is that you have layer two that enables lower fees and faster computation. That is really the core pro that we're going to be talking about throughout the course of all these different options is that you have the ability to enable lower fees and faster computation. So you always want cheaper, faster and then the better is the third, that may be the hard one to get. And then you have reduce the amount of necessary data processing.
00:08:28.810 - 00:09:17.082, Speaker A: So the way you enable lower fees of faster computation is by reducing the amount of necessary data processing and then you also want it to be compatible with layer one scaling solutions like Sharding. Now this is a bit of a historical oddity because Sharding is not really as important today in the roadmap as it was previously. This was a pro for plasma in the past, but that's not really something we need to worry about too much right now. When it comes to the cons, though, we have a system and we have a theory and we have the idea that we want to have computation offloaded. But if you read the actual plasma paper itself, it's very long. It has more of a system and less of a specific implementation. It actually recommends various different implementations.
00:09:17.082 - 00:10:17.794, Speaker A: And this is why you ended up with multiple implementations down the road. You ended up with plasma MVP, you had plasma cash and plasma debit. And again, this is kind of more historical oddity than knowing, than things you really need to know about. But these are all different attempts at reifying plasma, which we never actually got to, but we were able to take the ideas of plasma and put them into practice later. And the funds being only withdrawable after a lengthy waiting period is a problem that some solutions today have and some don't. And this is a question of really, do you want the ability to stop a chain and slow it down? It's almost a question of how important is it for you, for the operators of a chain to be able to kind of say, hey, wait. We need to actually look at something and audit it and figure out whether it's true or not versus something where a math problem is going to just verify whether something is true or not.
00:10:17.794 - 00:10:47.062, Speaker A: Sometimes you actually want a human in the loop. So this is a con for some and a pro for others. Now let's talk about side chains. This is where we really get into the meat of what this topic is about when we talk about side chains and layer two, to me, the two are essentially synonymous terms. Some people argue semantics about what's a side chain versus a layer two. I don't think that's really a particularly useful argument. I think that you have ethereum and you have another blockchain.
00:10:47.062 - 00:11:14.322, Speaker A: You can call that a side chain. You can call it a layer two chain. It doesn't really make a difference to me. The point is, you got two chains. That's what's really important here. And with a side chain, as you can see in this diagram, you have the main chain and then you have the side chain, and then you have some sort of proof that allows you to arbitrate whether the transactions are true or not. And so you have it operating independently and running in parallel to the layer one.
00:11:14.322 - 00:11:59.700, Speaker A: So both are happening at the same time, and they're both running in concert with each other, and then they're speaking to each other through some kind of bridging technology. And then the side chain also has its own consensus algorithm and its own block parameters because it is literally its own blockchain. And we'll talk about why that is desirable when we look at the pros and cons of this approach. So if we look at the first pro, it's as I said, a blockchain. We already know how blockchain works. We know that blockchains are a way to establish a shared state of the world that is very hard to tamper with and that is very useful for auditing and for tracking transactions. So that's a huge pro if we're going to use this technology to extend blockchains themselves.
00:11:59.700 - 00:13:01.314, Speaker A: Now, it also supports general computation. This is because when we look at these layer twos and side chains, they are all set up to be, quote unquote, EVM compatible. So when we use that term EVM compatible, what we mean by that is you can write Solidity, you can write the programming language of the Ethereum blockchain that you're already used to and that you expect to work in a certain way and it will work that way. And this is because Smart Contracts and Solidity and the EVM, all of these were about providing the ability to write general purpose programs on the blockchain. So we don't want to lose that when we move to another chain because if we lose that, then we're losing all of the power of these blockchains themselves. But what are the cons here? The cons is that if you have a side chain, it will tend to be less decentralized. Now, this isn't necessarily because a side chain is required by some theoretical limit to be less decentralized.
00:13:01.314 - 00:13:51.590, Speaker A: It's more so of just how these things play out in the real world. And it's more of an empirical fact that when you start up a new chain you need to compete with the ethereum chain and you need to compete with the fact that there's already this whole set of validators and all of these nodes running all this computation on the ethereum network and to have a comparably, decentralized network for a brand new blockchain. It's just like a cold start problem. So this will become, I think, less of an issue as time goes on. And as we have layer ones or layer twos, I should say, that are very decentralized, I think that's an inevitable consequence that we're going to get to. But in general, when you spin up a side chain or a layer two, it tends to be less decentralized. It also will have a separate consensus mechanism that is not secured by the layer one.
00:13:51.590 - 00:14:56.662, Speaker A: And this is important. If you're maybe trialing a brand new consensus mechanism that is not used by ethereum, if that consensus mechanism happens to be faulty or has a bug in it, that could be a huge issue because then you can't really rely on that side chain or that layer two to do what you expect it to do. If it doesn't have a sound consensus mechanism, you also have a quorum of validators that you may or may not be able to rely on. This goes back to the idea of it may be less decentralized, it may have a less sound consensus mechanism. That means you need to be more conscious of who are the validators of this network. Are they incentivized to have correct transactions and validate in a correct way to keep the Ethereum chain fraud proof or are they maybe incentivized to do something else? That's another thing you need to keep in mind with these systems. Now we're going to start looking at some implementations here and Polygon is known as one of the more well known sidechain or layer two solutions.
00:14:56.662 - 00:15:26.722, Speaker A: And it is worth kind of giving an asterisk here, which is that Polygon has many different products. Polygon has even a ZK proof product now, which is what we'll talk about after this. And so when I talk about the Polygon side chain, this is kind of like the original Polygon. This is the first polygon. They have a whole bunch of other stuff now that is totally separate from this. But when we talk about this, we're talking about kind of the first iteration of Polygon and it was just a clone of Ethereum. It was a clone of layer one and it supported transferring assets to and from the layer one to layer two.
00:15:26.722 - 00:15:51.286, Speaker A: And again, at the time they called it sidechain. I'm calling it layer one, layer two because I just think it's a more comprehensible terminology. People argue semantics about that. But it's the same idea. And then you have the layer two. It's a brand new blockchain and has its own consensus mechanism and it's able to create blocks based on everything we've talked about up to the point in this talk that should make a lot of sense and that was Polygon. Now let's talk about ZK rollups.
00:15:51.286 - 00:16:42.922, Speaker A: With ZK rollups you have a brand new kind of way of verifying this and it's based on something called zero knowledge proofs. Now I'm going to try and give my best explanation of zero knowledge proofs for people who have not heard of them. There is a thought experiment that can help get the idea across because it's a dense mathematical term, but it actually can be kind of simple to explain if you go through this thought experiment with me. So imagine you have two people, you have a prover and you have a Verifier. And that's what we can see right now in this diagram. The prover needs to prove that they are able to sorry, the Verifier needs to verify that they are not colorblind. And the way they do this is the prover will have two things in their hands.
00:16:42.922 - 00:17:18.550, Speaker A: They'll have say you have like a red bean and you have a blue bean. So you can kind of like the Matrix red pill and the blue pill. And they're going to have those behind their back and they're going to show them to the Verifier and they're going to say, here, there's red in one hand, there's blue in the other. And then they're going to put them behind their back and then they may switch them or they may not. And then they'll show them again. And then the verifier can verify whether they have changed or not. And so by doing that exercise over and over again, the verifier can verify whether the prover is actually proving that they're switching it or not.
00:17:18.550 - 00:18:08.630, Speaker A: And they are able to do that because of just the verifier be able to see whether the colors have changed. But the prover doesn't have to be able to necessarily be able to tell the difference of the colors to do this exercise. So it allows you to verify a secret without having to share it. That's really the core here is that if you're able to verify whether or not someone has a secret, but without having to reveal that secret, it's very powerful because then say you could use a password on a website without having to give up that password. And that would basically mean that you'd be able to have access to systems without giving that system the information that they need to hold onto and potentially guard because if it gets stolen, someone else could access the system on your behalf. It would completely eliminate that problem. So this is really powerful.
00:18:08.630 - 00:19:16.698, Speaker A: Now, the layer two scaling solution here is that all the funds are held by a smart contract on a layer one chain and that computation and storage are performed off chain. And for every roll up block you have a state transition zero knowledge proof which is generated and verified by the layer one chain contract. And this is where the issues lie because this is very computationally expensive, but you have a mass amount of data you can transfer because you can roll up such a large amount of transactions into a single transaction. Now, if we look at the pros and cons here, the pros that it reduces the fees per user transfer. This is because like I was saying, you could take all these transactions and kind of roll them all up into this one block and then you have less data contained in each transaction because the transactions contain multitudes. Now, this does not require a fraud proof or fraud game verification and this is something we haven't really defined yet. We'll define that a little more in the next section with Arbitrum.
00:19:16.698 - 00:20:00.140, Speaker A: But the cons is that computing zero knowledge proofs requires data optimization. And this data optimization is very heavy and has a high computational complexity. So if you know anything about like own notation and things like that, they still have to figure out a way to optimize these algorithms in a way that's actually going to allow this to scale. So the scaling solution itself is not scalable, unfortunately, but this is something that a lot of people are working on and may happen. There's a question of research that needs to be done. So some people say this research may take a year, some people say it take five years, some people say it take ten years. Who's going to be right? Only history will really be able to tell.
00:20:00.140 - 00:20:36.402, Speaker A: And then you have a security scheme which assumes a level of unverifiable trust. Now we're going to get into optimistic roll ups. Now optimistic roll ups, unlike ZK roll ups, are being used now heavily, like in production already. So this is something that if you're going to be dealing with these types of systems and these types of layer twos, you are likely going to be dealing with optimistic roll ups. And that is either through Arbitrum or optimism. And we'll get into both of those after we explain what an optimistic roll up is. Now an optimistic roll up involves having your main chain.
00:20:36.402 - 00:21:18.354, Speaker A: So we see here we have Ethereum, we have the main chain and then we have the roll up. And the roll up is layer two called side chain call, whatever you want. It's a chain that's different from the first chain. And then you have these state transitions and at any point you could run that proof fraud function and then that would be your fraud proof. And the reason why it's a function that you could run is because it's optimistic. You're assuming there is no fraud, you're assuming everything is going to work the way you would expect it to. And so while ZK rollups prove to Ethereum that transactions are valid, optimistic roll ups assume the transactions are valid and then leave room for others to prove fraud.
00:21:18.354 - 00:22:06.370, Speaker A: So that's why it's optimistic. If you've heard the term optimistic UI, an optimistic UI, you send a request to the server and then you give a response back as if the server is going to respond back with what you expected to. And of course that does not always happen, but it will happen hopefully more often than not if your server is correct. So this is what an optimistic roll up is. Now the pros and cons of this is that we have EVM and solidity compatible optimistic roll ups. That is because when we look at things like arbitram and optimism, they are created to be EVM compatible from the start. They're also more flexible than ZK rolls because they don't require the really heavy computation involved with the zero knowledge proofs.
00:22:06.370 - 00:22:46.030, Speaker A: And then you also have the data available and it's secured on chain. So there's this term data availability which is really common thing that people are talking about today. So you got the data and is available. Now the cons are you have limited throughput compared to ZK rollups. This is because of how many transactions you can fit onto a ZK roll up versus an optimistic roll up. So it can't fit as many transactions, but it's able to make those transactions in a faster way. And then it requires both an honest majority of Ethereum validators and at least one aggregator that does not censor transactions.
00:22:46.030 - 00:23:23.606, Speaker A: When it says one aggregator that does not censor transactions, they mean that you only need one person who is honest. You only need one person who's available and ready to call fraud on it. And so that is the fraud proof because it's optimistic. You need someone to actually verify and call fraud if fraud happens. But among the entire system, you only need one person to have to do that. So if you feel confident that within the entire span of blockchain people out there in the world, you have one person who's actually paying attention, then hopefully this would work. Now let's look at some actual implementations here.
00:23:23.606 - 00:24:01.354, Speaker A: Now the first one we're going to look about is Arbitram. And with Arbitram we see this kind of like complicated diagram over here. This is a lot of different things going on. But the most important thing is that you have this Bisect challenge, which basically means anytime someone believes that there is fraud, there's the ability to challenge. And then the challenge will run this Bisect algorithm to prove whether or not fraud has actually happened. So let's imagine that we have Alice and we have Bob and they're going on this back and forth. And then we have a layer one contract that is refereeing between the two of them.
00:24:01.354 - 00:24:43.030, Speaker A: Now, to resolve that dispute, you need to have this layer one contract to arbitrate between the two of them. It does that by dissecting the dispute. And that is what is happening in that that's what is happening in that image on the right over there. We are seeing that we have the challenge and then the challenge leads to Bisected and then there'll be a waiting period and then they'll either assert or confirm. So there'll be an assertion. We'll just say we need to check this again or there'll be a confirmation of fraud or not. And then there'll be a pending and they'll basically run that on a loop.
00:24:43.030 - 00:25:50.682, Speaker A: Now, the final implementation here is that we're going to look at optimism. Now, with optimism we have a slightly different paradigm, which is that instead of having a fraud proof, there's something called a challenge window, which basically means that every time there's a transaction or every time there's a block, we have this ability to lock up the funds for a certain amount of time. And when these funds are locked up, people can look and see whether there was fraud or not and then kind of call fraud on that. So if a proposed state commitment goes unchallenged for the duration of those seven days, then it's considered good and there's considered no issue. But if someone does challenge it, then you will have basically fraud proof that will happen. So once the commitment is considered final, the layer one smart contract will safely accept the proofs based on the commitment. Now these are all the citations of what we talked about throughout the course of this project and I highly recommend people check this out.
00:25:50.682 - 00:26:26.646, Speaker A: I'll also show the link to the slide in a little bit. Here is our resources. If someone wants to check out Quicknode, they can check out. If they want to check out our Twitter account, we have Quicknode. There is a discord link for anyone who wants to check out our discord. And then we have something called has ETH merged? Here is the link for the slides. Anyone wants to check out these slides? But I also want to show a little bit of Has ETH merged? Now, if we look at this right here, we have this website where we can let people know whether ETH has merged or not.
00:26:26.646 - 00:27:03.970, Speaker A: And this is important because the merge is a very historic event about to happen on the Ethereum chain. And this is actually setting us up for this kind of roll up centric world. This is the first step in the Ethereum roadmap. And so, as you can see here, has not happened yet, but it is likely to happen on December 14. If you also go to Quicknode.com, the merge, you can learn more about the merge and what it means. For example, you may know about Ethereum's testnets things like Robson and the like.
00:27:03.970 - 00:27:49.106, Speaker A: A lot of those are being shut down. We're actually going to be in a state where Gurley is the test network you want to be using. And then we also have these that have been decommissioned and the actual merge itself you can learn more about here as well. So that is the rest of my talk and thank you so much, everyone, for listening. And this is something I'm very interested in. In terms of scalability of Ethereum, I think it's a very important topic because if you look at the history of Ethereum, there's been times the network has become really overloaded and it's been very expensive to actually use it. I think we actually want this to be a usable system by lots of users out there in the world.
00:27:49.106 - 00:28:19.640, Speaker A: It's important we make this scalable. So hopefully you can take a little bit of inspiration here. You can maybe look at some of the layer twos that are available and check them out, build some stuff with them. This was three options that I talked about here, but there's many more out there and there's even some ZK stuff that is starting to become added to main net things like StarkNet. So there's a lot of innovation here and there's a lot of work being done. And if it's something you find interesting, feel free to reach out. We'd be happy to talk to you about this and help you get spun up with some of these different layer two options.
00:28:19.640 - 00:28:31.180, Speaker A: And that will conclude my talk. Thank you so much to ETH Online for having us. And my name is Anthony Campol. You can find me at AJC WebDev on. The Internet and you can find quicknote@quicknote.com. Thank you.
