00:00:00.090 - 00:00:27.750, Speaker A: Awesome. I want to thank everyone for joining us today. Obviously, this is the Hack FS judging session we've been assigned to. I want to thank Anton for being here today. We're bringing in 650 hackers from over 61 countries and 18 time zones. We're actually pretty impressed. We were definitely shooting for a little bit lower number both.
00:00:27.750 - 00:01:01.274, Speaker A: We blew away our expectations. Judging format. We have four minutes for the demo. We're going to be giving you three minutes for questions afterwards and then a ten minute break. We'll take every six to eight teams. Obviously, if you're right in the middle of a good question and there's a lot of good banter, I think we'll be a little bit loose with it. I don't think there are too many teams today, but we'd like to keep things to a quick pace.
00:01:01.274 - 00:01:31.754, Speaker A: The judging criteria, like all of our events, we're going to be judging on technicality, originality, practicality, the UI UX factor and the wow factor. We want to see things we haven't seen before, interesting creative ideas that we know, that we know are possible, that you all will create. This is not a competition. I know that we're judging, I know that we're giving out prizes, but this is really about you. It's about your growth. We're here to help the space. We're here to help every developer as part of that.
00:01:31.754 - 00:01:54.382, Speaker A: And we want to give you the tools to succeed. This is really you versus yourself to see what you're capable of. Our judges, we're joined here today by Julian. I'll give him a second to introduce himself. Arjun will be here a little bit later, and I'll give him a second to introduce himself when he joins us. Julian, if you'd like to take it away. Yes, definitely.
00:01:54.382 - 00:02:31.994, Speaker A: So, my name is Julian. I'm the CEO and founder at Unlock Protocol, which is a protocol for memberships. It's basically a way for any creator, whether you're a musician, an artist, blogger, a journalist, a developer, to create a membership of their own and sell access to their work, to their community in the form of NFTs using unlock. We've been around for a little while. We're now deploying on mainnet, on Polygon, and I hope Arjuna shows up on XDI, and soon we'll be on other layer twos and side chains. We have built a bunch of interesting things. For example, like a credit card integration that allows anyone to purchase a membership with their credit card.
00:02:31.994 - 00:03:04.934, Speaker A: So for people who don't have a crypto wallet, that's actually pretty easy and convenient. Like any NFT, you can customize the image. There's a lot of pretty cool things that you can do with unlock. And I mean, I've already seen a couple pretty cool integrations that were built during Hackath, so I encourage everyone to keep looking at unlock. We also have a grants program, so if anyone wants to keep working on unlock, they should definitely apply for grants to receive a reward of tokens based on the integration that they want to build the protocol with. Awesome. Thank you.
00:03:04.934 - 00:03:20.720, Speaker A: Thank you for joining us. Really looking forward to seeing what kind of projects we have today. I also want to thank Anton, obviously our MC. I'm going to be handing it over to him. And it's time for demos. Let's get this started. Okay, perfect.
00:03:20.720 - 00:05:13.666, Speaker A: So, first up, I believe we have Team NFT options. If you could raise your hands, you guys could be promoted to perfect. So you guys will have, like Luke said earlier, you will have four minutes to present as well as three minutes for the questions and answers. Hello. Hi. I was facing some issue with screen sharing. So Emily told me that someone would share the screen in the green room.
00:05:13.666 - 00:06:19.830, Speaker A: I was facing some issue with screens sharing and sound. So Luke or anyone could share the corresponding video, then that would be great. Sure. Do you have a video link or is this a presentation like a slide deck? I'll pull that up for you. Don't worry, this is not going to cut into your time. I want to make sure everything's set up for you're. Hello everyone.
00:06:19.830 - 00:06:46.574, Speaker A: I am Aditya and I have created NFT Options protocol in Hackafis. In July, NFTs ragged in over $1.2 billion in sales. They are one of the fastest growing niches in crypto and has a huge potential. So problems faced by NFT enthusiasts today are good. NFDS are expensive and no income on idle NFDS. So what NFD Options Protocol bring to the table is hedging speculation and income from NFT options.
00:06:46.574 - 00:07:21.246, Speaker A: It creates synthetic market to get exposure on the NFT assets. Instead of trading NFTs, trade the option to buy or sell an NFT at a strike price before a maturity date. So I created NFT call options using uma's, long short pair library. After minting, the user will get a long NFT and a short NFT and NFT Options data is stored in IPFS. User can sell the option NFT using any NFT marketplace such as OpenSea to collect premium. Let's dive straight into the demo. So this is the homepage of our applications and these are the set of whitelisted NFTs.
00:07:21.246 - 00:07:58.600, Speaker A: Let's create an option for crypto punks. So basically you can select a strike price, the expiry, and the amount of option you want to maintain. Now you hit create. So basically it will create a long short pair contract. It will instantiate a long short pair contract which will be unique for every set of strike price expiry and the underlying NFT. So once that is created, see, it's now created. Now we can mint our long option and short option.
00:07:58.600 - 00:08:51.560, Speaker A: So basically we can see all the NFT related data which is stored in IPFS. So this is our unique fingerprint and this is the data which is stored in the IPFS, the corresponding strike price, the expiry, and the LSP address. LSP stands for long short pair. So this particular address will be required at the time of settlement of options. So as we can see, the corresponding NFTs, long NFT and short NFT has been minted. This is the long option and this is the short option. So basically the option seller can sell their corresponding long option in order to collect a premium and for a normal user, user can come to any secondary marketplace and can purchase this long option.
00:08:51.560 - 00:10:09.198, Speaker A: And if the price of the underlying NFT is above the strike price then the user can earn the difference by coming to our settle page. So basically they can come to our settle page and they'll enter this LSP address and the corresponding token ID. Since the option has not expired yet, we'll click settle function so basically it will try to settle it but since it's not expired they will not be able to earn anything and the code will just revert. In that case, here is an example of the settle function settle feature for a different option which has expired the corresponding long option will get burned. So I'll be adding lot many features into this but one of the features I've added to this platform is profit calculator. So based on the strike price and the settlement price you can calculate the value of your call option and covered call option using this price calculator. So this are the set of features NFT options protocol is offering now but I'll be adding lot more into this.
00:10:09.198 - 00:10:36.598, Speaker A: Thank you for listening. Great, thank you for your presentation. So now we can move on to the three minutes of Q and A. Hi aditya. This is great. One thing I want to know, does it work with any ERC seven to one contract? Yeah, basically any underlying NFT you can mint long option and short option. Those options are denoted as ERC 721.
00:10:36.598 - 00:11:32.498, Speaker A: So since it is compatible to ERC 721 it can be sold in any of the marketplaces like openc variable. So it takes any ESC 721 like a punk and then creates two other ESC 721 for the long and short. Okay, I'm not very familiar with uma can you explain a bit more about the long and short option? What does it basically I have an NFT and I want to hedge against the price going up or down. Is that the idea? Yeah exactly. So basically you have an NFT and you want to trade basically the variability of the price of that particular NFT instead of that NFT sitting in your vault. So what you do is you basically set a strike price and basically set the strike price and the expiry for that NFT and you mint basically long option and short option. So what does that mean is you can basically sell your long option in order to collect a premium.
00:11:32.498 - 00:12:17.110, Speaker A: So the person who is buying it, he's expecting that the price of this asset will increase and since you are selling it, you are thinking that the price will decrease. And if the price of that particular asset is above the strike price at the time of expiry, the option buyer can collect the payout of it by coming to our settle page. If the price of that is below the strike price, then basically the option seller can earn the premium which the option buyer has paid in order to purchase that long option. Long option become your option call, and the short option becomes your covered call, which will be used for you to collect your collateral which you have deposited earlier. That makes sense. Okay, I have to deposit collateral initially, and then basically that's what is used. Okay, that's really cool.
00:12:17.110 - 00:12:40.974, Speaker A: Okay, that's really helpful. So use, uma, use, obviously, USC seven two one contract. Use Polygon for this, or no, you're building this on what chain? So I'm using ethereum as of now. Since it was completed in the last moment, I didn't have time to integrate Polygon as well, but definitely it will be going for deposit teams. As of now, it's only hosted on Ethereum using Ethereum blockchain. Cool. All right, that makes sense.
00:12:40.974 - 00:12:53.330, Speaker A: And you use IPFS to store the NFT data. NFT metadata. Cool. All right. That's really cool. Thank you very much. Is there one lesson that you take from this? I think we have one more minute.
00:12:53.330 - 00:13:35.198, Speaker A: What's the one lesson that you've learned? So basically, when I started this particular project, there were not many options into it. So before reading about every options, I jumped straight into the Open. Like, instead of, UMS, library, I jumped into Open Library and I started building on top of it. So since till 13 August, I was building using Open, and then suddenly I realized that this has become very complex and the settlement feature wasn't working. So then I started reading about EMA stuff, and then I was able to do just 2 hours before submitting that. Wow. So the lesson I've learned is first read about everything and then decide because it will save a lot of time.
00:13:35.198 - 00:13:50.760, Speaker A: Makes sense. I mean, and it's definitely an environment where there's a lot of documentation that is not up to date or projects announcing things that they haven't shipped yet. So congrats on building this. This is pretty cool. Good job. Thank you. Thank you very much.
00:13:50.760 - 00:14:16.430, Speaker A: Great work. Team NFT options. So now the Zoom admin will now demote you to attendees where you can choose whether to stay on the call or you could hop off the call. I'll be here as an attendee. Okay, perfect. And so up next, we have Team Fracture. We don't have ETH poster.
00:14:16.430 - 00:14:27.554, Speaker A: I mean, that's fine. It's just like on my side there's the second one, but maybe we'll have them later. Sorry. Forget what I said. Let's do fracture. Okay. Yeah.
00:14:27.554 - 00:15:07.310, Speaker A: Welcome. So, Team Fracture, if you could raise your hands. I'm not sure if the Zoom admin had already promoted you to panelists? Yes. Hello, Andrew. Just like the last presentation, I had trouble sharing my audio, so there's a video link in the chat. Fracture is an app that allows users to make a royalty payment splitter and then mint NFTs. With that royalty payment splitter as the beneficiary of any sell on royalties.
00:15:07.310 - 00:16:17.500, Speaker A: I give the token a name and a symbol and I hit deploy. Once this transaction completes, the interface will populate the address of the distributor. From there, I can distribute shares to different beneficiaries of this contract. Let's give this account ten shares and this 140 for a sum total of 50 shares. We can copy this address and use it as the royalty recipient in our NFT Minter. Let's upload an image and store it to IPFS using NFT storage. Now that it's there, we can select the number of this kind of NFT we want to mint, let's say 15, and say that further sales will have to pay 10% to this royalty distribution contract.
00:16:17.500 - 00:17:20.224, Speaker A: The transaction completes. And now I can view this NFT on openc. As this NFT gets traded on marketplaces that support ERC 2981 royalties come in and users of the contract can claim their royalties by going here and clicking Claim Distribution. While both of these parts can be used on their own, they work well together and are particularly great for use cases like Ticketing with tickets. Secondary sales have lots of the cash flow, but the original creators usually see little to none of this money using the NFT Minter to create the tickets and the royalty splitter to divide earnings from the tickets. This problem can be addressed in a decentralized application without trust for a single party to hold on to those royalties. Thank you for watching.
00:17:20.224 - 00:17:49.100, Speaker A: I hope that you find more ways to use the royalty splitter and the NFT mentor to create some really powerful tools on the blockchain. Yeah. So now we can move on to your three minutes of Q A. Thank you, Andrew. That was great. Let me understand one thing. So when you deploy the two contracts, you deploy first the splitter and then the NFT contract, is that correct? Yeah.
00:17:49.100 - 00:18:34.760, Speaker A: Because for receiving royalties, it needs to know where to put them. So you need to have the splitter in place first and they're separate parts instead of one UI because you could use them on their own. It's like useful to have a recipient contract that can take tokens and split them out. And the NFT contract, does it have to be special or is the splitter the owner of the NFT contract? I guess the NFT Minter that I've built is a single ERC 1155 contract. Okay. And individual token IDs, there are the different NFTs that's just so that the code for respecting royalties is in there. If you have your own NFT that has the royalty info standard in it, then you can use that instead.
00:18:34.760 - 00:18:45.470, Speaker A: I see. And the royalty standard info is the ERC 2981, right? Yeah, just finalized. Okay. Yes. I was going to say last week or something like this. Okay. Interesting.
00:18:45.470 - 00:19:17.576, Speaker A: So in theory, that splitter should work with any NFT contract. Yeah. And the tokens that it accepts for right now, since I'm using superfluid, they are only superfluid super tokens, but there's code in there to upgrade from other ERC seven. Seven tokens to their respective super token. Interesting. Cool. Was that the first project that you built using Ethereum, or have you built other things before? It's my second one.
00:19:17.576 - 00:19:45.824, Speaker A: Cool. What did you build before? It was like a GoFundMe type escrow contract. Nice. Cool. Is there any big kind of gotcha or lesson that you've learned building this? I think it was just a lot of debugging. I spent a lot of time, like, writing code without writing tests first. I'll probably get better at writing tests in the future.
00:19:45.824 - 00:20:01.316, Speaker A: Yeah. What is your dev setup? I use hard hat. Okay. For this, I use Scaffold beef, which is actually really great. Cool. Awesome. Well, thank you very much.
00:20:01.316 - 00:20:14.244, Speaker A: Good job on this. I hope you keep building on Ethereum. It looks like you did a great job there. Thank you. Of course. So great work. Team Fracture.
00:20:14.244 - 00:20:26.350, Speaker A: So now the Zoom admin will be demoting you to an attendee, where you can choose to either stay on the call or hop off. And up next, we have team decentralized social media.
00:20:27.600 - 00:21:08.460, Speaker B: Hi, everyone. Yeah, I'll just share my screen. Let me know if you're able to see. Yes, that's good, everyone, and welcome to our Hackerfest Submission, which is a decentralized social media platform. Apart from our regular Instagram or other social media platforms, this platform has a couple of additional features. Apart from uploading your own pictures, you can also mint an NFT out of these pictures. And we have also added a news feature that is, you can read trending articles or know more about what's happening in the world news based on your preferences.
00:21:08.460 - 00:21:53.290, Speaker B: Just apart from the mindless scrolling that we do, this is also a feature that we have added. The main platforms SDKs chains that we have used are Zora polygon chainlink for this trending information polygon, and Zora for the contracts themselves, and the Minting, of course. And we have also, of course, IPFS for storing decentralized storage, and we have also tried to use unlock protocol. So without further ado, let's see how this works. I'm going to upload an image. I have already connected my wallet here earlier, and I'm just going to say an image. I'm going to choose a file and upload a file, let's say.
00:21:53.290 - 00:22:34.420, Speaker B: All right. Okay. I'm going to submit, and this is now going to be minting now that the image has come. So you can see that it takes a bit of time to actually retrieve it from Pinata. But this has been uploaded on IPFS now as just like, a decentralized storage now, the next part would be that as a creator, you can see that it has been uploaded by my address, which is connected. As a creator, I can also mint this NFT. So I'm going to click on Mint NFT and now it is Minting at the background using the Zora SDK.
00:22:34.420 - 00:23:17.860, Speaker B: Our NFT has been minted. We can see the Minted NFT in the marketplace. So let me go to the Explore Marketplace and see the different NFTs that have been minted. So, as you can see, this NFT has been minted and the owner address is here. There are a couple of other images also that we have minted as an NFT in this marketplace. We eventually want to enable the auction house as well using Zora. So let me just show you that I can also set a price for this particular NFT, which will call the set Ask Zora SDK and set the price for this particular NFT.
00:23:17.860 - 00:24:10.212, Speaker B: You can see the price of this NFT has been set for Chainlink. Basically, we want to get the information from the news feeds using Chainlink and we'll filter it by the different hashtags that the users enter as a part of their preference. Now, one last thing that is usage of unlock protocol is that we would like to lock the NFTs. A creator wants to lock the NFTs so that users follow this creator and then only can buy this particular NFT. Now, we have just done like a bare minimum version of unlock protocol. As you can see, by clicking on Buy, which would ideally be unlocked, one can unlock the NFT and only once they are a member. So this is what we have built so far.
00:24:10.212 - 00:24:40.364, Speaker B: Of course, right now I've built like a lock on Rinkabai. So you can see since I've switched to Polygon, I'm not able to yeah, so that's pretty much our demo. Sorry, I misspoke. At the beginning of the demo, it was not minting an NFT, it was just uploading it on IPFS and then later it Minted. I kept on looking at the clock to make sure I record within four minutes. So I was kind of nervous while doing the entire demo. So I think it was just a bit all over the place.
00:24:40.364 - 00:24:43.100, Speaker B: But I hope you kind of understood the concept as such.
00:24:43.250 - 00:25:01.430, Speaker A: Definitely. You did a great job. Don't worry too much about the clock. Cool. So I like that you use a lot of different things, and I really like the idea of providing an easy interface for people to kind of create mint NFTs. When you set the price, I want you to understand how you did this. So use the Zora auction house?
00:25:03.160 - 00:25:19.944, Speaker B: No, we did not use the auction house yet. I meant that we would like to use the auction house eventually, but since we were a bit short of time, we just used the Set Ask, which is setting the Ask price direct sell.
00:25:20.062 - 00:25:35.856, Speaker A: And the first person who would pay that price would basically access this. Really cool. So that price, it showed $200. Is it using die. Is it using USDC or how does that work?
00:25:35.958 - 00:26:01.610, Speaker B: Yeah, so basically the Set ask will work on the native currency. So we should have ideally changed it to like Matic or something because we use the Polygon testnet, the Mumbai testnet contract of the Zora SDK so that's the price that it would be set in. But of course, to show in the UI, we can always pull the dollar price and show it using any of the spot prices, covalent API or.
00:26:04.540 - 00:26:09.470, Speaker A: Is there any I mean, what is the big lesson that you take from hacking on that for two weeks?
00:26:10.640 - 00:26:59.224, Speaker B: I think one of the big lessons that we took was we should have started slightly earlier. As you saw, we were a bit ambitious in terms of incorporating various functionalities, which we also saw that fit this kind of use case. Like one of the things especially that we wanted, we were very keen on doing chain link contracts. My teammate Ravi on the call can testify to that. We spent about a couple of days working through that. But unfortunately we couldn't get the data in bulk, string data that we wanted to get, like the whole of the URL, the news feed, et cetera. So I think one of the lessons for us would be to understand little more in depth about the different plugins that we would try to use and maybe experiment a little bit earlier than kind of going for it in the last minute.
00:26:59.224 - 00:26:59.980, Speaker B: For sure.
00:27:00.130 - 00:27:04.670, Speaker A: That makes sense. And was it your first big Ethereum project or have you built something else before?
00:27:05.040 - 00:27:44.552, Speaker B: No, I have done a couple of hackathons recently. We built Unified Rewards, which is the reward points that we get, like Amazon rewards or any other your Target rewards or something. All of it in a decentralized wallet. So that was one of the recent projects that we had built for Ethodc. And my teammate Ravi here also built a project on Superfluid, which again was on Polygon. So we have been building a couple of projects this year and excited to kind of bring this decentralized social media idea that we have been brainstorming for a bit. Kind of like an influencer thing as well.
00:27:44.552 - 00:27:59.032, Speaker B: Like a photo that gets a lot of likes. You can mint that into an NFT and eventually transfer the IP rights something like this. We have been brainstorming for some time and we were happy to be able to implement this at this hackathon.
00:27:59.176 - 00:28:01.356, Speaker A: That makes sense. Great, thank you very much.
00:28:01.538 - 00:28:02.968, Speaker B: Yeah, thank you so much, Julianne.
00:28:02.984 - 00:28:15.750, Speaker A: I don't know if Luke has questions. No, you did a really great job asking them. I'm wondering maybe at the end of your video you might have gone into this and we got cut off early, but what are the next steps for you in the project.
00:28:16.920 - 00:29:00.450, Speaker B: Yeah so of course many parts of the project like the decentralized storage and the minting, all of that we have already implemented. So we are looking to see if there are any grants that are available where we can take this forward. One of the things we are keen on doing is of course setting up the auction house as well as trying to see if we can make the chain link work to get the live price feeds from different APIs. So we are definitely looking for grants or opportunities to see if any of the partners would like to support us and we can work with them to build this and take this forward because some of our friends were also quite interested to use this app as such right now. So we definitely see this once out in the market. Has some good use case.
00:29:05.240 - 00:29:33.004, Speaker A: Perfect. Thank you so much for your presentation. Now the Zoom admin will demote you to attendees and you feel free to stay on the call or even hop off whatever you prefer. And up next we're going to have team Shutter C. Hi, I want to give a quick shout out. I think our second judge Arjun has joined the chat. Hey guys.
00:29:33.004 - 00:29:53.590, Speaker A: Hi, sorry, I was just getting over flight so I just got in the cab and just joined as soon as I could but it was pretty interesting. I just saw the demo by Lakshmi, I don't know if she's dropped off though. Has she? Yeah. We can continue conversation in Discord if you'd like. Thank you. Thank you for joining us. Sure, thanks.
00:29:53.590 - 00:30:39.840, Speaker A: Okay, I will go ahead and share the screen. Yeah, sure. Hi my name is Sahil and I have built an application called Shuttersy for the hack of Sagathon. Shuttersy is a decentralized platform for sharing freely usable images, so users will be able to download free stock images or any photographs and use them for commercial or personal use. And attribution is not required. And what's in it for the photographers is they gain more exposure by sharing their work. And it's also a form of giving back to the community, similar to open source software.
00:30:39.840 - 00:31:31.964, Speaker A: And this model is similar to Unsplash, but this works in a decentralized manner. And let me quickly jump into the demo. So this is the Shutter C home page and here you can see the top images. If I click on an image I can download it in multiple sizes, I can view information about the camera, the lens, et cetera. Also there are some attributes like title, the location, date, et cetera which the author provided when uploading this photograph. There are also analytics metrics like number of downloads, number of views and number of favorites count. So users are able to favorite the photos they like and they can also see users all the photos uploaded by a particular user and also search for images I want by keyword.
00:31:31.964 - 00:32:31.844, Speaker A: So until this point, the end users, they don't even know they are interacting with a D app. But when somebody want to upload a photograph, upload a photo, that's when they have to log in using IDX. So it's asking me to connect using three ID connect. So let me quickly connect and once you are authenticated, you are able to download, you are able to submit photos. Let me quickly select a photo, okay? And I can give a title, location and some tags once I submit it. What happens now is this photograph is signed using user's identity and uploaded, converted into multiple formats and distributed into IPFS. So now this photograph is easier and since I'm the author, I have the ability to delete it.
00:32:31.844 - 00:33:28.490, Speaker A: So let me go back to the presentation. So technically how it works is the uploaded images are converted to multiple sizes and shared in IPFS using web3 storage, the CD of images and the metadata, et cetera, are stored in threaddb. Also the number of use, number of downloads, et cetera, are stored in thread DB as well. For identity, it works using ceramic IDX and in a way it also access like an authorization layer because all the changes like photo upload or delete or liking a photo. This is signed using the user's private key and validated in the backend using public key before pushing to threaddb. So in a way, IDX is used for managing the data in threaddb. For the future, I'm planning to make onboarding for non crypto users easier, like maybe more tutorials on that.
00:33:28.490 - 00:34:10.444, Speaker A: And then the search of the photos has to be improved, like the searching functionality, and also implement some kind of decentralized moderation protocol to prevent abuse. Yeah, I think that's it and thank you for your time. Thank you. Salila, that was so you clarified this in the video, but I want to make sure I understand very well. Use IDX ceramic so that the author of the picture can later delete it or change it, I guess as they want, is that the idea? Yes. Only the author can author signs the data and in the backend is validated. It's the same user.
00:34:10.444 - 00:34:37.176, Speaker A: So basically, authors have ability to control their data, what they share, and they are the owners of their data. But when you say in the back end, what does that mean? Like, is there a back end? I missed that part. Yes. Currently the pushing to threaddb uploading to webfs is done using a back end. I see the majority signing, everything happens in the browser itself. I see. So as a user, I sign in the browser, it goes to a back end.
00:34:37.176 - 00:35:09.988, Speaker A: The back end kind of ensures access, control, basically, and then make sure that I have the right permission to and then pushes to threaddb and then it goes to IPFS. Okay, cool, that makes sense. Is there any big lesson that you take from that experiment? Like building. On IPFS ceramic. Yeah, technically I learned a lot. I mean, what I really wanted to do is something good for non crypto users as well. So the application users here don't even have to know they are interacting with the app.
00:35:09.988 - 00:35:39.100, Speaker A: That's why I didn't go for anything that has to do with valid. So here only the photographers needs to use their valid or anything like that. That was fun. What I learned new in this one was definitely the Ceramics ID expert, which is something I have never tried before and I think I can use that for many other applications as well. Cool. Awesome. Perfect.
00:35:39.100 - 00:36:36.720, Speaker A: Thank you Team Shuttersy, that was a great presentation. So up next we have teamfidelius ETH. If you guys could raise your hands, our admin can promote you to panelists, I guess while we're having the next team come up. Arjun, do you have any questions or comments? We just want to make sure that you're able to ask. With that prompting, I was just going to say when Salil talked about non crypto users, I was wondering if he tried out something like Magic Bank or I'm not sure how that would interface ceramic for identity, but having something which allows like a Facebook or a Google login just makes it that much easier. Kind of noticed that not many crypto users may be very converged into different types of wallets. So that's I guess the only observation I had.
00:36:36.720 - 00:37:24.360, Speaker A: But it would be interesting to try something like that along with Sporamic. Sure, yeah, that would be great. Awesome. Yeah. Let's move on to the next project. We're not getting the audio. Maybe now better.
00:37:24.360 - 00:38:01.462, Speaker A: Yes. Fidelity is a decentralized application used to share organizational secrets among Dao members using public key encryption in the context of Fidelis. Fidelis is the application. DAOs have a set of secrets. Secrets are encrypted. Secret keepers are who created and share them with confidence and the confidence are who can see but not share with others or modify the secrets. We started the hackathon thinking on using metamasker Pcipi to encrypt and decrypt data.
00:38:01.462 - 00:39:27.430, Speaker A: But in the context of the hackathon we realized that Ceramic offers a better solution in order to have identities out of the box using web standards that store encrypted data and storing data on IPFS. So we went through these tutorials and one of Earth asked Jima to store note lists and another asked Jima to store secrets. So we created Aschima to store encrypted notes or secured nodes. And we are also using decentralized Identifiers and JSON web encryption standards in the application in order to store them. So a quick demo, we can save a note and what is shared stored is the ciphertext, as you can see here. But if you retrieve again the node, you can see it decrypted to continue the development of this application until the point it can be used by real louds. They should be able to share their social media passwords and their other secrets among the trusted members in a secure and revocable way.
00:39:27.430 - 00:40:22.920, Speaker A: Awesome. Great. Thank you very much for the presentation. Can you clarify why using Metamasks or actually the web Three Wallets API didn't work out? I missed it. Okay. The initial idea was to use MetaMask API, but three ID and Ceramic IDX already offers the same functionality in order to encrypt data and decrypt it using public keys with the DIDs. It was something that we didn't know and we realized in the context of the hackathon.
00:40:22.920 - 00:41:38.864, Speaker A: So we discarded to use MetaMask specific API for this because the other web Three Wallets do not have this API in the way. Okay, that makes sense. And so when you say this is useful for DAOs, can you explain me a bit more about that? The application that we have been building, it is a very rough proof of concept taking the two tutorials that exists and we have a proof of concept of how we can save a secret node. Right. The thing is that we want to extend it in the future in order to share it among members of a Dao. The idea is that each member will have the ID and using the CWE, you can encrypt a secret for many people. So we want a way in which you can encrypt it to all the members that you want to share it.
00:41:38.864 - 00:43:03.470, Speaker A: And using the Harry Potter Fidelious metaphor concept, which is a charm, that you are the secret keeper of something and this secret can only be shared with the people who you choose. We can make it into an application and make an admin of the secret that can share it with the people that he wants or her wants, and those people can have access to it but cannot modify or share with others. Okay, cool. I know you'd spoken about switching to Ceramic after learning that that worked better for your use case. Were there any other challenges or roadblocks that you encountered on the way? It was quite interesting. I was not familiar with Ceramica at all, and one of the members of our team was very interested in Ceramic because we want to use it for another application that we have together in order to manage user profiles. And it was a very nice surprise that Ceramic was already thinking on encrypting some data.
00:43:03.470 - 00:43:52.072, Speaker A: And the next thing that we would like to check out is how we can have shared administration of a Ceramic document like many DIDs that can modify a did. We didn't see that how it can be done. And we will be very interested to know if that's something that Ceramic already supports or it will need some external way to do that. Maybe smart contract or something. Awesome. I'm wondering if Arjun, if you have any questions before we move on. I just had one question.
00:43:52.072 - 00:44:48.924, Speaker A: So with respect to since you're using Ceramic, what you're essentially saying is that since the message is encrypted, there would be on chain evidence that a message was sent. However, only the person who was the target for the message will be able to decrypt it. Right. Did I understand it correct cities? Right now, when you have the seed of the Ceramic document, you are able to decrypt it because you are using your own did to retrieve the message. And this did can decrypt the message. So as it is right now, it is only symmetric encryption. Well, it's using public key cryptography, but it's like you are saving it and retrieving it.
00:44:48.924 - 00:45:30.890, Speaker A: But what we want is to be able to share it with many more people of your DA. Got it. And would a transaction then be pushed on chain? So what I'm trying to understand is that would there be evidence that such a message was sent? I think so. I really don't know yet how Ceramic is working in that context. What it is going to be saved among all the servers that are storing this message, is there is a message there, it's encrypted. Nobody knows what is there. But probably you will know who will have access to it.
00:45:30.890 - 00:46:25.150, Speaker A: I wanted to check because when you talked about that document use case that four or five people have access to the document, then you can have sort of that access history, right? Who accessed the document if someone changed something. So that evidence, if it's there on chain, then it makes from a Dow perspective, just makes governance easier. Which is why I was wondering, but very interesting use case. Very interesting. No doubt. I also think that some people in the SCC this year I think that Joel was commenting that the Ceramic team is working on making it working with zero knowledge proofs in order to have a better privacy for the people who is sharing and who has access and these kind of things. But I'm kind of interested in how they are working on this.
00:46:25.150 - 00:47:00.890, Speaker A: I think that it's quite interesting. Perfect. Thank you, team. Do the judges have any other questions? If not, our Zoom admin will now demote you to an attendee. And feel free to hop off the call or stay on the call, whatever you prefer. And up next, we're going to have team Open vessels. And like we said before, you'll have four minutes to present and then three minutes of Q and A.
00:47:00.890 - 00:47:40.510, Speaker A: Are we supposed to be getting any audio with this? Might need to reshare. Yes, I think it'd be helpful. Only if you want us to hear it separately from the hack. I will define the hack. Nervous? Sorry. So we log in. We have an upload page and a browser page.
00:47:40.510 - 00:48:31.864, Speaker A: So here you can see we have a browser page and an upload page. Here I'm going to upload ten Diacon files as a test. Diacon files are essentially a medical data format to store CT images and medical information. Here you can see it's a CT scan of somebody's lower stomach kind of leading up into their lungs. So here, if we can see the hack, revolves around stored data on Filecoin, which essentially is talking to web3 JS in the back. But I will prove that by just using console log really quick. So here when I press store data on Filecoin, it's calling the JavaScript through Webpack.
00:48:31.864 - 00:49:13.176, Speaker A: So in the background, Webpack bundles up our JavaScript and all our modules and then puts that render for us. So Flask is then able to pass session ID information of the data stored on our SQL lite database. So here we uploaded the data we had Async functions promise us that the CID is coming back and the CID came back. What is not happening is we're not triggering the redirect back to the browser page. So we do that manually and that's just simply for development. Here I take the CID and I store it in the SQL lite database. And here my CID is in the ID input.
00:49:13.176 - 00:50:16.124, Speaker A: So when I click Retrieve data from Filecoin, I'm able to trigger the JavaScript code to API, call the data that was stored according to the CID. And to prove that this works, we can simply delete the okay and we're going to retrieve data from Filecoin. So we sent the CID off. This is what DICOM File looks like in JSON data structure. And if we refresh the page, we have our restored data with the tag in the back end. What's happening is that we're passing an input tag with a session ID associated with our data and a class for all the buttons related to Filecoin. So in the basement down here below, we pass bundle JS File, called filecoin JS, which contains all the JavaScript for web3 storage.
00:50:16.124 - 00:50:56.968, Speaker A: So web3 storage API allows me to pass the session ID. Then through a series of Asynchronous functions here in succession, we pass the data. And then we wait for a CID. This CID to the backend function is a web request of Ajax throwing the CID back to the Flask app endpoint. And this endpoint right here, it waits for a response from the JavaScript. We have some validation code to see if the CID is already stored on record. And then we store the CID in our SQL life database.
00:50:56.968 - 00:52:02.892, Speaker A: Here we can see that these data tables were also coded for the hack, where essentially we have ID the data was uploaded, session ID for the data, and I think you're muted. Hi, how are you doing? Sorry about that. That was the video. I hope you guys heard it. So, any questions? The project? Yes. Is there any challenges around storing medical data in the wild in the public space? Like on IPFS? Yeah, with Filecoin, it's exposed on the IPFS, so anyone can access it. So everyone's first question and feedback I've gotten is about encryption just simply with I work a full time job and I'm self taught.
00:52:02.892 - 00:52:45.828, Speaker A: I didn't have time to implement encryption, but I'm interested in Chainlink because they have Oracle, because if I store all the private keys on the platform and it gets hacked, then everyone's medical data gets exposed. But the platform's original idea that's not part of the competition is just to put medical data. That's deidentified for researchers. So it's to manage and organize their open source databases, things like that. But deidentification and encryption is definitely where I want to go with the project, but just time, really. Does that make sense? No, of course. Did I answer your question? I didn't.
00:52:45.828 - 00:53:06.744, Speaker A: Yeah. No, it does. Clearly. I think you nailed it. Like, the privacy and the encryption thing is a requirement. It's just that I wonder in the end if it's worth storing on a public space if you end up having kind of the only place where you can decrypt the data. Does that make sense? No.
00:53:06.744 - 00:53:35.570, Speaker A: Sorry, could you reiterate that if you end up building kind of a centralized version of this where encryption decryption happens in a single wonder? Yeah. What's the benefit of using IPF and C, that scenario? Oh, no. I want to use Chain Link for the encryption with Oracle, but we just simply did not get to that implementation. Yeah, but that's where I would want to go in the future. Cool. Awesome. Thank you very much.
00:53:35.570 - 00:54:00.584, Speaker A: Okay. One of your first hacks. Yeah, this is like my first hackathon. Tried to keep it as simple as possible. I wanted to keep things clear. I don't want to use old code, but there was a clear start to end date with what the code is. Yeah.
00:54:00.584 - 00:54:43.092, Speaker A: I just have one question, Leslie. On the UI, there was this button, right? Like, click for machine learning. What was the thought process there? That was from a year ago. So, like I said, it's built on a platform. The platform just allows me to upload the data to a database to develop easier and not read a file off local disk. That submit to machine learning was for competition year long ago, where we did a K means algorithm on CT scans. So if you have a CT scan, you have pixels, right? And if you use the K means algorithm, you're grouping pixels according to their hu values, and what that means is, like, grayscale in the radiology CT world.
00:54:43.092 - 00:55:34.036, Speaker A: So that algorithm is just narrowing down the region of interest because a lot of deep learning models need preprocessing for. Let's say if there's a 512 x 512 grid of pixels, you're taking in each pixels, and that's so much data. So the submit to machine learning is just an easy way for a developer or a data scientist to deploy into the platform and then run their code and data with it. There's a lot of issues, and the reason I'm really attracted by filecoin is that with any startup, the cost of storage is heavy and then people want to federate their machine learning weights. So I just wanted to keep it simple so developers could extend it and open source community kind of like that. So that was a little much. I'm really sorry about that.
00:55:34.036 - 00:56:09.788, Speaker A: But that's a separate project and that was just part of the platform, I think. Filecoin also if you're storing data on Filecoin, it allows you to colocate the data. So Filecoin has the capability where, for example, typically your data would be distributed randomly across IPFS. But there is a way to sort of get the data to be colocated. So if you really had to use it for machine learning, you actually could. And Filecoin also I think allows for some level of compute. So it's a colocation of compute and storage.
00:56:09.788 - 00:56:55.970, Speaker A: You might want to look into their docs a bit deeper if you want to have that capability. You actually could do that. Yeah, I'm looking at it. I want to use Filecoin Plus because I've heard something about the ten x multiplier for user data, but I want to push for like what about medical data? Because I've talked to some doctors last year and they need to build a database that's like international database for liver scans, for liver cancer, and they want to go in that direction. But Filecoin is speaking to this global interplanetary storage that I really just want to be a part of that. And there's issues like, I need to share 50GB with somebody else and it's not easy. And Google Drive has some problems and all.
00:56:55.970 - 00:57:13.092, Speaker A: Yeah, I'm with you. I want to go deeper, but full time job. Guy got to pay for the server somehow. Makes sense. All right. Good stuff, Leslie. Okay, cool.
00:57:13.092 - 00:57:18.964, Speaker A: Thank you guys. Appreciate it. For sure. Leave. Thank you. Team. Open vessels.
00:57:18.964 - 00:57:40.990, Speaker A: That was great. So now we'll be moving on to our next presentation, and we're going to have Team ETH Poster. Hey, how's it going? Hey, how are you? Perfect. Doing that right. So let me just get it started. Let me share very quickly. 1 second.
00:57:40.990 - 00:57:59.584, Speaker A: I think I need to 1 second. I'm going to share the sound. Let's get it started. Hi, everyone. My name is Kusaginega. I'm a web engineer and blockchain developer. And together alongside RM Macmillan.
00:57:59.584 - 00:58:46.768, Speaker A: We're very happy to share with you Poster, our submission for the Hackfs hackathon. So Poster is a regular, simple, general purpose social media smart contract. Pretty much is six lines of code and alongside with the subgraph on the graph protocol, gives us the ability to pretty much create a Twitter like layer two social media network. So we put together all the specification. This originally came from a conversation that we put together on Twitter that we realized that we wanted to do something alongside social media and in general. Vitalik from the last Ethereum Conference shared some of the insights, know social media could be quite a thing on the ethereum blockchain. So with all that I do, I'm very happy to share with you just the UI to Poster.
00:58:46.768 - 01:00:10.264, Speaker A: So Poster was deployed on polygon. Thanks to its very quick confirmation speed and very low gas fees, it's very easy to actually do something on the network, right? So right now we can just do like Hello World that we can just very quickly post on the Polygon network. And what is going to happen actually, I mean, as you can see that it's going to do the confirmation, it's going to go through the general MetaMask workflow, but the gas fees are minimal. Sure, social media network that requires confirmation to execute everything is maybe not very exciting, but at the same time, just because it's so cheap and it's so fast, it's not that bad of an experience. Right now what it's going through is we're going to do the submission on the Polygon network and we also have a few subgraphs that are actually fetching that information as it's been submitted. So the moment that submission goes through, it's being parsed by or posture or Polygon subgraph and then it's been fetched immediately in the application. So you can see the application actually went through and then we're able to actually preload again, another feature that we're able to do is we're able to do a reply and of course that will actually generate another submission to the postion to the blockchain.
01:00:10.264 - 01:01:16.224, Speaker A: And again, it's not that exciting because it's just a bunch of submissions. But if you're seeing that on the exciting part about making everything on chain is that it allows us for composability, right? So the benefit of having a social network on top of the blockchain is that everything can be built on top of that, right? So you can create a Tweet out of the whole ecosystem and of the entire database. You can create an NFT based on a single Tweet. You can create a new subgraph that instead of parsing the text, actually just parse emojis. So that's the beauty of the whole blockchain network, right? So just for the last feature that also takes advantage of the Web Three storage is that just adding an image? So we can also add an image which actually, if you saw it, it immediately submitted to the IPFS network using the Web Three storage application. And for the application it's just the same thing. The only thing that is doing is that it's appending this CID into the network and actually submitting it.
01:01:16.224 - 01:01:46.172, Speaker A: So while that has been loaded, let me just share with you very briefly what is coming next. So this is pretty much what we have done with Apostle Network. And what is coming next is we're probably going to start exploring some other layer two solutions on top of the Polygon network, maybe some roll ups, maybe putting an open gas network relayer. On top of that, we're looking to probably apply for a grant and yeah, that's pretty much it. I hope you like it. It's all working. You can test it at Postureapp onflect Co and yeah.
01:01:46.172 - 01:02:18.500, Speaker A: Thank you, everyone, for joining. Awesome, Paul. That was pretty much it. 1 second, I think I'm not hearing I am muted. Sorry, can you read that angel in it? I was for a bit. This is cool. You said the name Poster 1 second.
01:02:18.500 - 01:02:54.084, Speaker A: I'm going to stop my video because I think might not help in a little bit. 1 second. All right, can you try again, Joanne? Sorry, yes, I was going to say you said the domain name Poster app dot and then I missed the end. Yeah, posterapp on Click, which is the oh, they're actually also providers from yes. Okay, awesome. Yeah, I'll check that out. So you said basically, this can be used for social media, but this could be used for beyond social media, like all kind of media.
01:02:54.084 - 01:03:31.644, Speaker A: Right. You could post articles like, I'm taking newspapers or whistleblowers could use that to post stuff that they want to. Yeah. The value comes from being super generic, super simple. I think other social media efforts are trying to analyze the complexity of indexing and analyzing and building identity. I think being this very append only allows us to really create multiple ways. You can create a small subgraph that as long as you post signatures from, let's say, I don't know, or say signatures for a specific enterprise, you can do that, right? I mean, this is nothing new.
01:03:31.644 - 01:03:55.104, Speaker A: Right. I think some projects in the Bitcoin network actually Herbrai's case was appending things on Opiate data. Right on that. So I think the value here is that now we have something like graphs that allows us to index some of that data. It allows us to create a composability world. Right. And I think currently there is a need of some immutability and some composability on social media networks.
01:03:55.104 - 01:04:10.536, Speaker A: That makes sense. Cool. Thank you very much. No worries. Further questions? Actually. Go ahead, Luke. No, I was going to say it's interesting, I was following the Twitter discourse that you were part of.
01:04:10.536 - 01:04:50.196, Speaker A: So it's interesting to be in this judging session. And I think it's no stretch of the imagination that decentralized social media applications are going to be sort of the next frontier in use cases and necessity in the Web Three world. Given that, I think I'd be interested to sort of hear next steps for you and your team, what you're planning and what you'll be getting into, and then Arjun, go for it. Yes. So I think any social media requires adoption to provide any sort of meaningful data. So I think right now, the first thing that we want to do is remove all barriers of entry. So you still need to have a Web Three signed wallet, but I think we're probably going to take the approach to either offset the cost from the user.
01:04:50.196 - 01:05:42.356, Speaker A: So probably have like a gas tank in the back so people don't have to go through the same process or use some pretty polite signed contracts. That allows you pretty much offset the cost. And the second thing is we have been talking very close to the Graph team, and I think they're very interested into the value of having kind of like a general base index in data. So we have been in close talks with them and perhaps applying for a grant because the real value, I mean, appending data is not innovative, right? But the way how the algorithms, let's say how Twitter or Facebook grab the data that they want to quote, unquote, sell to you or target to you. I think that there's a lot of value there. So I think there's not necessarily a lot of work and research that it's open source. These private companies have a lot of proprietary intellectual material that know how to target these huge data sets.
01:05:42.356 - 01:06:33.912, Speaker A: So the next page will be very close to sitting very close with a graph and protocols and try to get some leverage to keep you pushed this a little bit further. Very interesting man here. I just had one observation, so I'm just going to type this out real quick in the interest of time. Essentially for user flow, what you want to use is meta transactions you mentioned opengsn in your roadmap, but I would say use Biconomy so it's much easier to set up and it would be much faster. They have an SDK approach right there. Also you might want to use some sort of Magic Lake type sign in for that and what a Magic link type sign in will allow a social media sign in for users. You might also want to use a white label wallet in the background, like something like Venley, which sort of makes a user flow really amazing for the user because you're talking social media and everything here.
01:06:33.912 - 01:06:59.936, Speaker A: UIUX user flow is basically going to make or break this. Also reach out to me on Telegram. I think your views on how the data has to be used is something very interesting. And here at Polygon, I would also be interested in sort of figuring out how we can give you guys a grant and then sort of discussing more on how you're thinking about that problem. So reach out to me. That would great. Appreciate it.
01:06:59.936 - 01:07:17.936, Speaker A: Arjun. I know we're in touch in other channels and very happy to take on that. And I'm also very interested, for instance, on integrating things like the Herman's network. So the good thing is that roll up, totally doable, right thinking log, similar lines. Very interesting. Let's have a longer conversation, just DM me. Sounds good.
01:07:17.936 - 01:07:31.624, Speaker A: And then we can get on a call and discuss this. Perfect. All right. Anything else? Otherwise, I'm very happy to share time and yeah, thank you very much. All right, see ya. Thank you. Team ETH poster.
01:07:31.624 - 01:07:56.028, Speaker A: That was great. So we'll be moving on to our next presentation and we have Team Snap NFT. Yes, I'm here filters to take pictures and videos and Team Snap NFT. Hello. Welcome to Team Snap. NFT. We are building an AR filter NFT marketplace.
01:07:56.028 - 01:08:31.048, Speaker A: So it stemmed from the idea of selling code using NFTs. What if people could build websites in a decentralized manner? To build a proof of concept for this, we decided to build AR filters on NFT. So our solution is a decentralized solution for AR filters. People can use these AR filters to take pictures and videos and post it directly on a platform. This is handled using what we are calling as Executable NFTs wherein creators can mint their code as an NFT which can be integrated with the website. So on minting any new AR filter, it is added to the platform. People can purchase this NFTs using auctions or directly through the creator and then use these filters on the platform to finally put posts.
01:08:31.048 - 01:09:03.080, Speaker A: What we plan to do is to integrate our creation of this AR filter code through Instagram and Snapchat creator Studio. We also want to streamline the UIUX of the application. And finally we want to build a generic SDK along with a generic platform for Minting of Executable NFT. So this is the implementation with the flowchart which you can have a look on our GitHub repo. So now I will move to the demo. So we will first go through the filter screen. This is the place where you can easily and quickly create filters.
01:09:03.080 - 01:10:05.404, Speaker A: You can add description, you can add name, you can upload a logo, you can add amount for which the NFT should be sold, you can add the percentage that should go to a creator on ETH sale and the percentage which should go to the previous owner. This is how the card would be displayed and these are the prices in ETH and Matic. So all this metadata that we have added, we are using Protocol Labs NFT storage for storing that and finally we are using the content hash and URL along with metadata URL to mint NFDS Z NFTs using Zora protocol. Once the upload is complete, we can preview our NFT filter and then mint it using Zora. So now I will preview the filter which we have uploaded. As you can see, this is the tiger filter which we were waiting for. When the tiger opens its mouth, it throws out bubbles, which is quite cool, isn't it? And we will quickly go to home to see the NFDS that we already have.
01:10:05.404 - 01:10:55.230, Speaker A: As you can see, the tiger is added so we can save these filters to create posts from here. These posts are created using ceramic protocol which are stored into each bucket and we are saving these images into IPFS. So let's see one another Nifty filter that we created, the Statue of Liberty. Filter. As you can see it looks quite cool. We will quickly go to the posts page and so here you can see this is a Tiger Man NFT that we created while creating the NFT we can add title, description and music URL which is streamed using audio. As you can see this plays as we open the card.
01:10:55.230 - 01:12:15.300, Speaker A: Then the last page is the other NFTs page. This we have implemented using Covalent. So this grabs all the external NFTs that the user holds and if the NFTs are images which are compatible we can show them as background in our canvas. So it stemmed from the idea of selling code using NF? Yeah that's it for the demo. So we also integrated superfluid but could not fit that feature into the video that can be used for renting of filters and using them instead of buying directly. Can you tell me more about the superfluid integration? I'm not sure I understand so basically below the filter so this is an extended video, we will quickly show you the superpage. Okay so now let's go to the filter marketplace screen.
01:12:15.300 - 01:13:33.840, Speaker A: Here user can see all the Snap NFDS or Executable NFDS which are not held by them and which are for sale or rent. As you can see these are the filter buttons similar to what we saw on Home screen along with that there are Buy and Rent buttons. So let's click on Rent on clicking on Rent what happens is we start a superfluid stream which is based on the stream amount is based on what creator added in the beginning. Once that superfluid stream starts we will open the same model that we had shown you on the home screen and user is able to take a picture and post his picture along with the song as a post on the platform which again uses ceramic only. So user can click on Stop rental or they can post the image and Stop Rental closes the NFT stream and similarly post as you can see over here, a user can also put a bid on the NFT which uses Zora to set the bid for that NFT which the creator or the holder can accept. Yeah that is the completed thank you. Any questions? So I see you scaffolds here.
01:13:33.840 - 01:14:47.104, Speaker A: Is there any other framework that you used or what are the tools that you use for this specific hack? Yeah, so the other technologies we have already gone through other than Scaffold e we use a face filter library which uses basically neural networks to get your face points and converts it into a map mesh which we can then use to create these filters. Basically it grabs different images and attaches it to specific locations in the mesh. There is a 3D animation and 3D engine built into that library. We are just using that library and putting together all the JSON images and other stuff and generating providing the framework for user creator to give an executable version of the animation. So we divided the filter part and the model part of the library so that we can separate out the NFT as a code. Okay, makes sense. And other than that, we have used different storage technologies.
01:14:47.104 - 01:15:43.672, Speaker A: We just wanted to go through some of them and understand what are the good things and the bad things about each of them. Along with that, we have used Zora to mint the NFTs and handle them and Superfluid to handle the renting part and chain link to get the price in ETH and Matic using price consumer contract and audios to play the video, play the audio current NFDS. What we see is mostly images. Like I think in real world, people want media rich NFDS which has association with animation and along associate with audio their favorite songs. So this is a media rich version of the NFT. Yeah. So what we feel is this can be easily extended to other codes as well.
01:15:43.672 - 01:16:36.788, Speaker A: So you can create a platform where people can mint their code along with the NFT to provide a service, let's say, and possibly people can add integrations to the an existing website similar to, let's say Google Chrome extensions using NFTs and they can monetize along with that. Cool. Thank you very much. Very interesting. I like the fact that you've worked with so many different technologies. I think that would given you guys lots of learning on how all of them work together. I would still say that there have been a lot of discussions around using documents and even code, for example, and minting them as NFDS.
01:16:36.788 - 01:17:51.010, Speaker A: But the problem happens is that let's say, for example, you write some code, right, and you mint that as an NFT. I'll take the same code, add a spacebar and then remint that know, using minting code as NFDS has not been, I would say, very successful, let's say as a concept or even with documents, right? Because those kind of problems exist. Although to be fair, you can then detect these frauds as well fairly easily. But I could sort of add a few comments in there, et cetera, mix around the code and then there could be fights over whether this code is plagiarized or not, considering that detecting frauds for, let's say, image NFT is far easier than detecting a fraud here. So I would say that I think the streaming concept of renting out NFTs for me is like the most interesting part because I know that there are already a bunch of games like Comet, et cetera, where you rent out NFTs and use them, even Axie. And having this kind of concept here where every time I use the NFT, I have to pay for it versus for example, having to pay a flat rate when I rent them, is I think, very interesting for. So I think good thinking there.
01:17:51.010 - 01:18:21.334, Speaker A: Great. Thank you, Team Snap. NFT if the judges do not have any more questions, we can move on to the next presentation. And up next we have Team dough Maker. Okay. Hi. No.
01:18:21.334 - 01:18:33.606, Speaker A: Stop. Share. Wrong screen. There we go. There we go. Welcome to Dough Maker. Turning data into dough.
01:18:33.606 - 01:19:23.334, Speaker A: So, what is Dough Maker? Doemaker is an easy way to convert data into Dough, essentially a new cool Web three based IPFS method of monetizing your data. So how does it work? So, Domeaker, the story is very simple. We have Liz. Liz is a really cool TikToker. She has lots of information, lots of great content that she generates and she creates and that she curates, but she doesn't know what to do with it because it's so much. Enter Doemaker. So what Domaker does for Liz is that Doemaker takes all of her content and data in its small bite size and it puts it into IPFS storage.
01:19:23.334 - 01:20:44.120, Speaker A: It then services the data to people like Martin who like to follow Liz, but they're not keen in terms of trawling her entire TikTok profile to find one link which she posted in March of 2020. So they use Dome Maker, which basically helps them assemble different little bite sized pieces of Liz's data set with those bite sized pieces. In order to access those bite sized pieces, martin basically subscribes to Liz's files that she's uploaded, and the subscription money goes into Doemaker and eventually gets to Liz. But there's a problem. Unfortunately, we can't pay Liz out until Martin's subscription is over, and Martin's subscription might only expire after two weeks. So what we've cunningly done is that we've basically used AV to manage the deposits of the subscription fees paid by Martin into AV, and we give Liz an early payment loan whereby she can take her money nice and early as soon as Martin has subscribed. All the while, we're provided with consistent pricing via chain link because different prices can be set at different point in time.
01:20:44.120 - 01:22:12.190, Speaker A: And we have in addition to that, on Martin's site, martin can create an NFT data byte, which he can service on Zora using Dough Maker. And basically, he saves the results from his searches of Liz's data into things which he thinks will sell as NFT data bytes and post them using Doemaker into Zura supported auctions. And he can monetize Liz's information that way. On Liz's side, Liz can also use Zora to create a data NFT, which is different from a data byte NFT, in that this is basically Liz turning her entire data set into an NFT. And when she sells this NFT, she doesn't just sell the data, she also sells all the revenues that are going with that data which are being acquired through Doemaker. So that way, if she finds that she's got a really cool data set and it's worth a lot of money, she can now simply sell the data, all of her data and all of the revenue from it, because she now has a real world valuation, which she wouldn't be able to get in any other context, even with Ocean Protocol. So that is Doe maker.
01:22:12.190 - 01:22:48.640, Speaker A: Very complicated but also very simple. And we have web3 IPFS that manages all of the storage and helps us to keep the lights on and keep everything running. And so that's dough maker turning data into dough. Okay, any questions? Thank you very much. This is really interesting. This was a presentation, obviously. Did you have time to actually implement that? Yeah, give me a second.
01:22:48.640 - 01:23:22.638, Speaker A: So this is the UI that we managed to implement. So you can upload your files here. That gives you the ability to monitor your collateral, your auctions, your file uploads. You can see how many subscriptions you're actually getting. You can see your recent uploads here. And on the flip side, if you are looking for stuff, then you can basically search stuff, tells you which new categories in new keywords. And then you've got your results.
01:23:22.638 - 01:24:29.306, Speaker A: Here the new stuff that people have been uploading on the other side if you want to subscribe to it, your current subscriptions, which you have them, your saved results, if you want to turn those into auctions and the current auctions that you've actually got going. What you showed us was kind of how do you call this a placeholder? HTML. There's no actual code behind it, right? No, there is code behind it. We just didn't get to quite finish it because there's quite a lot of code. It looks like very small, but it's massive because what were the biggest challenges from a technical perspective that you faced when you IPFS and blockchain? Well, IPFS and Ethereum bring those two together because it's kind of like because IPFS is more like storage and it doesn't have a lot of libraries, which are very like, just click this and we'll do all the Ethereum stuff for you. You kind of got to work out the SIDS and then you've got to put the SIDS into the contracts and then you got to track the SIDS. And so that was a challenge.
01:24:29.306 - 01:25:34.162, Speaker A: On the design side, implementation wise, it's pretty straightforward because you use JavaScript to do that. But from a design perspective, I think there's an opportunity there for sure. And what are the biggest challenges that you I mean, what are sorry, what are the next steps that you're thinking about? So the next steps of this project is the ideas to basically sort of get us further on. Sort of like pull out as many of the generic components which are in there, which would be of use to sort of like other projects which are trying to build in the space, build those, get grants to build those with partners so as to make it sort of easier to do things like sort of like upload and drop your data onto the contract and keep your Sid secure, or at least as secure as you can do. And also do things like encryption. Because one of the things which sort of occurred to me during the judging session is the fact that people, you will tell them don't put sensitive data or stuff with your address on it. And that's exactly what they'll do.
01:25:34.162 - 01:25:54.570, Speaker A: And IPFS nice and open. It means we'll have a lot of problems. So basically sorting those types of problems out and working out how we can do that effectively, that's kind of like the next step of the projects and trying to get as much funding as we can so that we don't have to worry about the day job. Great. Cool. Awesome. That was really helpful.
01:25:54.570 - 01:26:46.890, Speaker A: Yeah. Really excited about what you were able to create in such a short amount of time. And the UX UI designer in Me is pretty impressed by the UI you were able to put together for your project with all the other considerations being made in a perfect world. I mean, what would you add to this if time and money, if neither were concerns for you? What I'd add to this, I would add TikTok integration, because this is like perfect for TikTokers because they're creating so much data. And I'm not going to lie, that's where I learned most of my stuff. It was Facebook, but now it's TikTok and basically it's helping people to consume data much better and use Web Three in a real way that's non gaming. And that is actually very effective because the thing is, people are learning and they're learning a lot.
01:26:46.890 - 01:27:09.250, Speaker A: And so this would help people with that. I can already see that. Great job. Thank you. Thank you, Team Domeaker. That was great. And so now we're going to be moving on to our next presentation, and we'd like to welcome Team Land Pierre.
01:27:09.250 - 01:28:00.126, Speaker A: Yeah, thank you for having us. Let me share my screen with four other team members. Hello, everyone. This is opinion here. I worked with four other team members in this project, so five people in total, and our product is called Lampeer. Now, the objective of Land Pier is to be able to get recordings of parcels land from the Metaverse and you can display it as a video over here at the Meme Meta website. Now, the point of this is because people who want to buy land might not have the tools to be able to access decentraland.
01:28:00.126 - 01:29:04.614, Speaker A: Like for example, using a Windows machine without the proper graphics card and all the computer components to be able to run decentraland, they might not have it. Which in this case they can watch a video instead of having to go in game themselves and view the parcel. Now, let's go look at the demo. Now, over here in Localhost, which I'm running locally, we are generated with a stream key and we are given a stream URL. Now, the point of these is because using the Live Peer API, we are able to get the stream key which we will be able to use the live peer network to be able to stream and be able to record our streams. Now, we can copy our stream key over here and we can head to OBS, we can go to our preferences and we can go to stream and we can set our stream key over here. Now the server, I've already set it, but users will normally go over here and copy the URL and they would put it over here and they would set their service to custom.
01:29:04.614 - 01:29:55.648, Speaker A: Now we can press OK and we can start streaming. Now that our streaming has started, it has told the live peer API to be able to start the stream. Now we can head on to an in game and we can show off whatever we wanted to show off. In this point it's a little box showing around some art. Now, after we have shown around some art, we will be able to go back to our extension. But before that we need to head to OBS and stop our stream. Now, once your stream has stopped, we will be able to go over here and be able to press Play.
01:29:55.648 - 01:30:39.272, Speaker A: But the live peers API takes five minutes for the video to load, for the video to process and everything. So now we will let it load and we will be able to play it once it's loaded. Now, it also gives an error saying the stream is currently processing if the user tries to play it when the stream hasn't processed yet. Now, after five minutes, the stream must have been processed which we can see in our live here dashboards. If we go into sessions, we can see our test stream that we created and we can see our recording URL and the MP4 has been generated on the developer dashboard. Now, if you go back to our browser we can click Play. Now it will start to load the stream.
01:30:39.272 - 01:31:51.804, Speaker A: And once this has been loaded, because it might take some time due to the longevity of the video, but after it has loaded, we will be able to press Play and we can watch our recording right here. Now, our Get coordinates button will be able to get coordinates from the exact website right here. We can get the specific coordinates we need to be able to generate it in our Mi Meta website to be able to get the exact parcel location. Now, our record button was supposed to be able to be using an in browser solution opposed to OBS, which we couldn't have yet done due to some limitations. And that is basically our learn to use Go with Sick. Yeah, that's our video we have for today's. Can you hear me? Yeah, of course.
01:31:51.804 - 01:32:45.550, Speaker A: Yeah. Cool. So basically you're recording through the OBS, is that right? I'm not familiar with the streaming software. So you're recording and then you're selling the videos themselves as NFTs is that correct? No, what we're doing is we're using the videos to be able to show the users how their land looks like. So when they purchase the land, they will be able to see a preview of what the land looks like without having to use the hardware and resources of their laptop or computer. Because again, I'm not very familiar with decentraland, but aren't the parcels visible without owning them? Yeah, they're visible, but the problem is they use high resources on your machine and so when you're trying to join in, it could really lag out some stuff and it'll really be an unpleasant experience. So using videos would be much easier for users to be able to check the land out without having to jump in themselves.
01:32:45.550 - 01:32:56.130, Speaker A: Okay. Yeah. So essentially it's much quicker. You can click on the parcel and then it gives you that video preview about what it looks like below. I see. That's great. Okay.
01:32:56.130 - 01:33:56.244, Speaker A: And the videos are uploaded to IPFS, I assume. As of now they are not, but we plan to implement I mean, what was the biggest lesson? I don't know. What's the take home from this? What did you learn in this hackathon? We learned how to use the Live Peer API in which we can send data and receive data. And the problem is, the issues we had sorry, is when we tried to implement the in browser solution, we couldn't be able to set the custom RTMP. So the server we used had to be Live here. But the project that we tried to use for the in browser solution wouldn't be able to connect to the Live Peer one and they use their own separate protocol. I see.
01:33:56.244 - 01:34:12.024, Speaker A: Okay, cool. Yeah. We also got together with a Live Peer representative and he kind of instructed us on how to properly use it. I see. Cool. Awesome. What's sort of what are the next steps? I was going to say what's next steps? So great.
01:34:12.024 - 01:34:31.484, Speaker A: Luke, go ahead. I think Gumdrop Steve would be able to answer that best. Yeah. So I'm with Meta. Essentially what we want to do here is we want to plug it in. So we just released our aggregator, like this morning or late last night. Technically, it was supposed to be the day before, but technical details.
01:34:31.484 - 01:35:18.412, Speaker A: Right. And so the next step is obviously cleaning up a few more things and then putting this in so that when someone goes to our aggregator and they're clicking, it's basically like a zillow for the Metaverse. So we have a decentraland right now, you click on a parcel and instead of just seeing the map, you actually see a video or a short clip segment of what's actually there. And the end goal, what we talked to Eric about from Live Peer about is setting up solutions and key points in the metaverse, like around the metaverse where you identify, like, key foot traffic and so that people can just constantly watch that and we're probably going to use a headless solution for that on the back end. Cool. Yeah. So basically headless would be like you would automate the recording from okay.
01:35:18.412 - 01:35:48.264, Speaker A: And then it can just run the whole all day. And so I think that especially as the metaverse grows, you're going to see central meetup places like Times Square, but in the metaverse. And so having a constant feed of what that looks like. And then from our website, you can already jump. It may be one of those things that we have to technically fix a few URLs or whatever, but you can jump directly into the parcel. And so I kind of see it as it's a view into the world. And you would just go straight on so you can see like, oh, this is what it looks like right now.
01:35:48.264 - 01:36:11.424, Speaker A: That looks fun, let me go. Oh, it's almost like CCTV where you can jump and do the thing. Yeah, exactly. Okay. Pretty cool. Nice. Any other questions? I'm good on my end.
01:36:11.424 - 01:36:25.876, Speaker A: It was great. I'm all good too. Really great job, guys. Yeah. Appia and John really crushed us. They did the overwhelming majority of it. So all this you might have mentioned this I might have missed it.
01:36:25.876 - 01:36:59.760, Speaker A: Was this your first time hacking together? I've done global hackathons before. We actually won the web3 a while back and so I kind of just wanted to come back for the MEMS and then Appy and John, I believe this is their first and so hopefully it was an enjoyable experience and I didn't ruin it for them. Excited to see everybody. Excited to have you back. I hope to see you guys for ETH online. Yeah. The goal, as long as the company keeps going is to do as many of these as possible.
01:36:59.760 - 01:37:17.760, Speaker A: We think it's a great way to stay involved in the ecosystem and onboard new people. That's why we do it. Thank you. Thank you. Team Led. Peter, that was great. So we're going to be moving on to our next presentation and I'd like to welcome on Team Time Rose.
01:37:17.760 - 01:38:56.608, Speaker A: The idea is quite big and is quite simple that is indexing the dataverse based on FairCoin IPFS. Firstly, let me give a short introduction about Kinlabs. The kinglabs is the research driven labs for IPFS and FairCoin and the goal of kinglabs is to create a research environment and also give the opportunity for the product and we wanted to get benefit from the research and also we wanted to get some products from the research that some new things we can imagine today. And our team members is from different countries. William is from England and Abel is from Beijing, China. And Yuxi is from Chicago from USA and Me is located in Chengdu of China. Basically the team have built biggest farcorn manor service provider in China.
01:38:56.608 - 01:40:40.176, Speaker A: We have built the biggest manor pool in China and we are familiar with the FairCoin IPFS but after the FairCoin Minnet we think of that the changing of the FairCoin many is not very interesting so we move to the new areas for next steps. That's why we set up the Kinlabs and do the index things. How does Kinlabs works? We follow the research philosophy of FEMA algorithm to solve the problems basically that is write down the problem I think is really hard and write down the solution. Okay, the mission of the kinglabs is to build the cloud two of the web3. Basically you can see you can think of the cloud two you have computation, storage and specialized protocols. For example we will do some computation based on the FFS and we also do some indexing for the Falcon storage FSP service and some on premise data providers and storage. The key point is the specialized protocol for example content service discovery and the content delivery through the cloud in the developer stack we build the transaction layer and actor layer.
01:40:40.176 - 01:42:50.080, Speaker A: You know the smart contract of the Ferraro is coming very soon based on the smart contract we can build the actor layer for this service FDA governance and self serving identity. Now, we also build a data plan maybe based on the story market and the retrieve market we also build the counterplane of the retrieve market, content discovery and the graphic database and index service et cetera and the indexing is incredible need integrates with the marketplace. For example, we build the index for the data plan not only for the onchains and also for the off chain based on the control plane we build the core API for the retrieve market and the slowly market and in future we will build the service discovery for the computation market. Okay, let us move the demo. Basically we have do some demos previously now I just give some picture of the demo from the high level point of view you can see the three layer of the index service data plant and incentive plan. Oh sorry, you can see current work we are doing is indexing two, you can see of the indexing two is indexing the local data local data sets and post the metadata and the index data to the index node. The index tool is for example you can think of that as IPFS watch and IPF sync tools and also integration the index service and post the metadata to the index node.
01:42:50.080 - 01:43:55.030, Speaker A: You can see the index the metadata in the Tamil sui and we can dive into the metadata of each fares for example the DG metadata that is basic demo of our current POC. Now for next step we will do the currently we are doing the off chain indexing IPFS retain market and accounting the discovery. We also did the unchained indexing for example the unchained data size display and data analysis for the data sets and next step we will do the market indexing. For example smart contract. Contract. And the next step, we will do the service discovery that is basically the ruler map of the time loss. Any questions? This is really interesting.
01:43:55.030 - 01:45:32.070, Speaker A: So you mentioned you're one of the biggest or if not the biggest provider for filecon in Asia, in China, is that right? Yeah. When you say you're indexing the data, is the purpose to help the miners? Is the purpose to help kind of content discovery? What is the purpose of the indexing? Yeah, indexing is not only for the data plan off chain, I mean data storage, and also for IPFS, the off chain data providers. For example, Pinners, I mean, the FairCom miners is here. Okay, so the goal is to also help the miners, but not just the miners. Yeah. Okay, and how is the data made available? Is that also stored on IPFS or filecoin here or is that consumed from other APIs? For filecoin manners, we get the data from the deal, the deal list and get the data through the deals. And for IPFS, we consume ingest the IPFS, Pinos, and some other on premise data sets for integration with this indexing tool.
01:45:32.070 - 01:46:16.850, Speaker A: But the index data, is that made available publicly or do you just use that locally on the node? We will make it publicly, and currently we are aligned the target of the FairCoin teams. That is indexed node, maybe centralized index node. Great. Thank you very much. This is super cool. If you could go into detail a little bit more about which part you were working on during the hackathon. Specifically, I'm trying to piece together what the focus was for the past few weeks.
01:46:16.850 - 01:47:13.430, Speaker A: Yeah. For the hackathon, we are focusing this part. It's from indexing two to the index node, and we build kind of graphic database in the index node. And we have the local index in the storage provider, and we also watch the data size change and post the new metadata to the index node. And that is currently we are working. Awesome, thank you. We wanted to get help from the hacksung, get more people involved in the retrieve market and indexing service.
01:47:13.430 - 01:48:08.150, Speaker A: We also wanted to meet new friends and get new engineers to join us. Currently we have about ten engineers in our team, and half of them is research engineer and half of them is golang engineer. That's awesome. Were they all here for the hackathon or were you able to have some of your team here? They are not in the hackathon because we need to stick some people join this hacks on. Awesome. Thank you for walking us through it. Thank you team.
01:48:08.150 - 01:48:43.088, Speaker A: Thank you team. TamRos, that was great. And with that, that is the last presentation of our event. I now going to share my screenplay. Sorry, I think he's still sharing. Okay, I will still share. Thank you.
01:48:43.088 - 01:49:07.704, Speaker A: Thank you. Thank you. Sorry, can you see my screen? No case. There we go. Yes, we. Can. All good.
01:49:07.704 - 01:49:25.880, Speaker A: Perfect. So, yeah, that is the last presentation of our event. I'd like to take this opportunity to thank all our judges. Julian, thank you for your time, as well as all the hackers, the teams. You guys were absolutely great. As well as our Zoom admin, as well as our timekeeper. And Luke, of course.
01:49:25.880 - 01:49:42.420, Speaker A: Thank you so much. And Arjun. Oh, yes. Awesome, guys. Thank you very much. It was great. Really interesting to see all of these projects.
01:49:42.420 - 01:50:13.130, Speaker A: Very nice too. Yeah, very nice. Saw some unique ideas today, so especially that one about that social media idea, right? How they could potentially monetize data that's, like, some very interesting angles could be found there. Love to say some very interesting stuff. Yeah. Make sure to follow up with Kartik after this. I think he might have something to sort of debrief on, but I think we'll be closing the stream now.
01:50:13.130 - 01:50:22.348, Speaker A: All right. Good afternoon, everyone. Good night. For those on the evening side. All right, bye.
