00:00:00.250 - 00:00:15.086, Speaker A: Right today. Pat yourself on the back. That's a great way to get this hackathon started. We're joined here by Patrick from the Chain Link team. Awesome guy, awesome team. And he's got a great presentation coming up for you. I think we'll be taking questions at the end.
00:00:15.086 - 00:00:29.110, Speaker A: I forgot to discuss that with you prior to this. But if you'd like, we can take questions during if you have a preference. Other than that, I'll let you introduce yourself probably better than I can. And you can take it away. The floor is yours.
00:00:30.810 - 00:00:57.610, Speaker B: Awesome. Well, thank you so much for the introduction and hello, everybody. Welcome to the chain link presentation for Road to Web three part of the ETH Global hackathon suite. Really excited to be talking to everybody here and be participating in this hackathon. So I'm going to do a little presentation here, but I really like to have these be pretty collaborative. So I think YouTube chat is disabled. So everybody in the zoom here, you see the chat.
00:00:57.610 - 00:01:10.034, Speaker B: Yep. Luke just posted the chat. If you have questions as we go along, feel free to go ahead and ask. Right? So I love these be collaborative. That's really how you're going to learn the best. That's how you're going to get the most out of this as well. So let's jump in.
00:01:10.034 - 00:01:37.286, Speaker B: I'm going to go ahead and share my screen here. Hopefully everybody can see that. Let me make sure I can see the cool. So, yeah, so today we're going to be talking about hybrid smart contracts and decentralized Oracle networks. Now, there's a lot of big words in there. What do those mean? Why do we care about this? Why do we care about all these different excuse me, but before we do that, quick introduction. My name is Patrick Collins.
00:01:37.286 - 00:02:17.414, Speaker B: I'm a developer advocate at Chainlink Labs. Work on the chainlink protocol. You can see some of my contact information there. And my little frog, that's what I go by on Twitter. Anyways, so these Oracles smart contracts, decentralized what all these big words? Let's go back to basics for a second, right? For a quick second, let's remember why we're here. Why are we doing any of this? Why are we at this hackathon? What are we building? What is the purpose of all this technology? Technology is really only as good as the problems it solves. So if you don't understand the problem, don't really understand the technology, don't understand why we're doing what we're doing.
00:02:17.414 - 00:03:09.974, Speaker B: Right? So let's go back, let's understand the purpose of smart contracts. Because in order to really understand chainlink, we need to understand what we're doing here. Why is everything we're doing so important? So let's take a look at traditional agreements today. And that's the problem that blockchains solve and that these smart contracts solve. So what's the issue with traditional agreements? What's the issue here? Well, the issue is that the people who are creating these contracts and who own the execution of these contracts have this massive conflict of interest, right? Whenever we make an agreement with somebody, basically what goes on is they say, hey, if you do this, I promise I will do something back for you. I promise I will do something. And there lies the issue.
00:03:09.974 - 00:04:12.890, Speaker B: We have to trust that when someone says they're going to do something, or entity or a group or a corporation says they're going to do something, we have to trust that they're going to do the right thing. And we put a lot of trust into them doing the right thing, right? When we work with a bank account, we trust that they're going to let us withdraw. We want to withdraw. When we work with a landlord, if we'renting someplace, we're trusting the landlord isn't going to kick us out or evict us for weird reasons. Sure, there's all these laws and legalities that can help protect us, but there's this whole line of hoops that sometimes you might have to jump through to fight back, right? And there's all these things that can still happen when those laws are maybe a little bit more gray. And additionally, the people who create these rules have this conflict of interest. Now, what do I mean by that? What is this conflict of interest? If an insurance provider, for example, says, hey, I promise if you get hit by a bus, I promise to pay your medical bills, they actually aren't in the business of handing out free money, right? That's not why they're in business.
00:04:12.890 - 00:05:09.178, Speaker B: And any business whose business model is they hand out free money, they're probably going to go out of business pretty quickly, right? So they have this conflict of interest. They don't always want to fulfill their agreements. Now, where have we actually seen this happen in real life? Well, most recently, we saw this happen with Robinhood, right? What was the promise that Robinhood made? Robinhood said, hey, come to our platform. They painted this wonderful picture of what working with finance and working in the stock space looks like. They say, Come to our platform, and we promise we will give you access to the markets and to stocks and to investing into shares and all this wonderful stuff. And then what happened? Well, if you were keeping up with news, around that time, they pulled the rug on their users and they said, well, not like that. You can't interact like that because it's not good for us anymore.
00:05:09.178 - 00:06:01.310, Speaker B: So they did what? They went back on their promise. All these users trusted Robinhood, and they ultimately didn't fulfill their promise because there was this huge trust assumption that we made when interacting with Robinhood. Now, whether or not it was right of them to pull the rug doesn't really matter. They had the ability to do so, right? They had a switch they could flip and say, not anymore. And this is this trust assumption that we made. We also saw this with one of my favorite examples, is the McDonald's prizes. So more than $13 million from McDonald's Monopoly winnings went to some crime rig, right? So this was, again, McDonald's making this promise, hey, play our Monopoly game, we promise you are going to have a fair chance of winning.
00:06:01.310 - 00:06:39.254, Speaker B: And you didn't. You did not have a fair chance of winning because it just went to the same group of people. $13 million went to the same group of people. You had no chance of winning. So they went back on their promise. Now, whether or not they had control of that doesn't really matter, right? There was all this lack of transparency that made it impossible for us to even know if they were being honest with their promise. And additionally, I have bad faith insurance here, which I didn't want to put any exact cases in here, but when an insurance provider says, hey, you get hit by a bus, we'll pay for you, and then they don't, and that's no good because that can obviously lead to tragic consequences.
00:06:39.254 - 00:07:17.974, Speaker B: So there's all these issues with traditional agreements, and that's why we're building the world that we're building. That's why we're here. That's what this is really all about. It's these smart contracts, these cryptographic agreements that remove these trust assumptions, because you no longer have to trust somebody is going to do the right thing. A human being, an error prone human being is going to do the right thing, because all these agreements, instead of being executed by a human being, are executed by autonomous code in a decentralized context. So no one entity, no one entity is running them. They run in a decentralized context.
00:07:17.974 - 00:08:14.374, Speaker B: This means that we can move from these paper guarantees, these brand based guarantees, where they say, hey, trust us just because to cryptographic math based guarantees, if one plus one equals two, do this, and that will always happen exactly like that. And if the math works, if the math checks out, it'll do exactly what you say to do. And this is incredibly powerful because it's much, much lower counterparty risk. It's much more transparent. You can do things in more efficient, effective ways because you don't have to worry about, OOH, can I trust them? You can look at the code, and the code will always do exactly what it says it'll do, which is incredibly powerful. So we can move to these digitally superior smart contracts. Now, they also have all these other advanced as well, like security, guaranteed execution, transparency, like I said, trust minimization, which is this big one, and efficiency.
00:08:14.374 - 00:08:41.140, Speaker B: But for simplicity, usually when somebody asks me, what's the deal about smart contracts, I usually hone in on trust minimization because that is one of the most powerful pieces out there, period. But all these other pieces also make these smart contracts and these blockchains outstanding. Now now, Patrick, we have these smart contracts. Great. We did. It awesome. The world is a better place.
00:08:41.140 - 00:09:46.070, Speaker B: Well, not quite. So smart contracts have this issue, right? These blockchains have this issue. What can they not do? Well, they're deterministic systems by design, which means they can't talk to the real world, they can't get real world data, they can't make API calls, they can't do an HTP URL call. They know nothing about the real world. Now, why is this an issue? Well, if I want to do an insurance agreement for like a farmer, I'm going to need weather data. If I want to make a DeFi protocol, I'm going to need data about the price of different assets if I want to do, et cetera, et cetera, et cetera. The reason for this, again, this is a little bit more technical, is these systems are deterministic by design, whereas if you started introducing nondeterministic data, it would destroy their consensus algorithm and they would never be able to agree with one another, right? If you tried putting random numbers per se, one node would say, hey, the state of the blockchain is seven.
00:09:46.070 - 00:10:23.774, Speaker B: Another node would go, well, that's not the random number I got, and the random number I got was nine. Another one would go, well, the random number I got was one. Chaos would ensue, it would never get anywhere. Right. So they're intentionally deterministic, which is a limiting problem, right? We can't do market data, events, data, retail payments, bank payments, et cetera. So this is where Blockchain Oracles come into play. Now blockchain Oracles are any device that interacts with the off chain world to provide both external data and external computation to our Smart Contracts, also known as hybrid Smart Contracts, when they work with an Oracle in some capacity.
00:10:23.774 - 00:11:02.782, Speaker B: So they have their on chain logic and some off chain external data, external computation, et cetera. So these are a blockchain Oracle. Then you go, oh, okay, great, Patrick, we did it, we have blockchain Oracles, we can now get data. Problem doesn't quite end there. Why? Well, if you use a single Oracle, a single node, a single point of failure, you have effectively reintroduced the issue. A lot of people say, okay, cool, I'm going to build my Smart Contract application, it's going to be great. And then I'm just going to use a single API from some random free API that I found online and boom, my app is decentralized and good to go.
00:11:02.782 - 00:11:56.622, Speaker B: Well, you've effectively reintroduced a centrality point of failure. That API could go rogue, it could go down, they could be malicious and want to screw with your app. You've just given them, you've handed the keys over to them and you've done all this work to make everything decentralized. So we don't want to have single points of failure, we don't want to have centralized Oracles for our decentralized applications. We need both our logic layer on chain and our data layer and external computation off chain, both to run in decentralized contexts. Now, here's where we have arrived at the solution. Here a decentralized Oracle network so that all of our off chain logic, all of our off chain computation is decentralized and our on chain logic is also decentralized.
00:11:56.622 - 00:13:00.962, Speaker B: So the data layer and external computation, decentralized logic, layer on chain, also decentralized. So what is a decentralized Oracle network? A decentralized Oracle network is a network of Oracles that talk to each other and talk to the real world to be this bridge between our blockchains, our layer ones and the world's data sources. And this is where Chainlink comes in and chainlink shines. Chainlink is a decentralized modular Oracle network and it allows us to build these Oracle networks that can do pretty much anything. They can get pricing data, they can get random data, they can do external execution computation, et cetera. It's this infrastructure that allows these smart contracts to go from fun agreements that can do a lot of token transfers and on chain stuff to feature rich, incredibly powerful limitless customization agreements. Because once you have access to the world's data and the world's computation, world zero oyster sky is the limit.
00:13:00.962 - 00:14:05.082, Speaker B: So it's these decentralized Oracle networks that are going to keep our smart contracts decentralized and give them feature rich features and give them all these amazing features. And again, this is giving rise to the system, what's called hybrid smart contracts. We have some on chain and some off chain, and I will probably say smart contracts, but usually when I'm saying smart contracts, I'm referring to both hybrid smart contracts and raw kind of regular smart contracts. Now, before I go any farther, we have about 40 people in the zoom call, which is amazing, which means that we can take questions, right? We have a small enough group to take some questions. So this is such a crucially important piece to really understand why we're here, what this all means. So before we move forward, does anybody have any questions? Any questions at all? Anything you might be like following along, maybe? Yes, costs. Okay, great question.
00:14:05.082 - 00:14:44.134, Speaker B: We'll get to that. So we'll hold that one off for a second and yeah, please ask questions because this is how we are going to learn the most amazing oh my goodness, I love questions. Yes, okay, yes. Cost. We'll get to costs. Can we compare chain link to anything in web two? Yes, I will answer that question soon, but actually, no, I can answer it now. Sometimes it's compared to http, http as being like or the Rails to connect different applications in web two, that's kind of the closest one.
00:14:44.134 - 00:15:23.154, Speaker B: So it's really kind of this transportation layer, if you will, to transportation and execution layer to transport data and external computation. So I guess that that's kind of the best analogy. How's the integration with DocuSign? What does it do? I'm not familiar with that, but I would imagine you could make a DocuSign integration with your smart contracts. All the Oracle work more or less the same. Ergo, for example. I'm not familiar with ergo. I don't know who Ergo is.
00:15:23.154 - 00:15:51.574, Speaker B: Sorry, but okay, great questions. I'll continue on. I'll answer some of the gas cost questions that we move on. All right, I got nine minutes. So chain link features. So what are some of these features that you can right now and for this hackathon jump into the docs grab, put into your application and use well, the first one and one of the most popular features right now is chainlink data feeds or chain link price feeds. And this number is actually outdated powering over 50 billion.
00:15:51.574 - 00:16:53.514, Speaker B: It's actually now something like 75 billion helping secure some like $75 billion in the DFI space, which is insane. What are these chain link data feeds? Well, in our smart contract applications, a lot of them need pricing data. Like what's the price of Ethereum? What's the price of a dollar versus solana? What's the price know polygon? What's the price of all these different applications? So we need to get this data from the real world because to a blockchain blockchains don't know anything about pricing, right? They're indifferent to pricing. Pricing value is something that we humans have assigned to things. So what needs to happen is all these data providers, all these exchanges need to get aggregated through a network of these chainlink nodes and delivered on chain into what's called like a reference contract that any developer could then go make a read call to and read, okay? That's what the price of polygon is. That's what the price of ethereum is. And then they can use it in their smart contract applications.
00:16:53.514 - 00:17:33.260, Speaker B: And in fact, if you go to data chain link, okay, so it is 50 billion. Excuse me. If you go to data chain link, you can see some of the most popular ones here. You can even click on one we can actually change go to different net, just a few of the different networks here. Maybe we'll hit FUSD and we can see all these independent node operators reporting what the price of these assets are, right? And you can see all these different parameters on there. But these are independent node operators grabbing this data, aggregating it so we can have decentralized pricing information. And here's kind of a quick picture of what these models look like.
00:17:33.260 - 00:18:50.470, Speaker B: It's all these chain link nodes off chain talking to each other, delivering in a single transaction with all of them signing their answers with their private keys to a smart contract for people to use. Here's just a couple of the protocols who are using these price feeds synthetix with a few billion being secured by these price feeds. SushiSwap using these price feeds for margin trading compound, obviously for pricing underlying collateral of their applications and Aave doing something similar with billions and billions of dollars riding on these price feeds, being decentralized, being secure and being incredibly powerful. And one of my favorite parts about them and most of the chain link docs is that they come with I call it like One click Use. So if we're in the data feed section here, we can click using data feeds, we can scroll down and we can see all the code associated with them. We can go ahead and click open and remix, remix will pop open. I'm zoomed pretty far in and we get given this sample application here with all the code already, with all the code already here, I don't have enough time to really go through it, but I can demo it right now.
00:18:50.470 - 00:19:32.046, Speaker B: We've also got a ton of videos showing how to use this. We're going to go to, we're not going to go to mainnet, we're going to go to a covenant testnet and there's a whole bunch of different testnets. We're going to deploy this contract and while it's deploying, the main function we're looking at is this Get latest price. So this is going to get the latest price of FUSD in our smart contract and if we scroll down now we hit Get latest price. We can indeed see what the latest price is. Now a question that we get a lot is why does it look so massive? Well, decimals don't work so great in solidity, so you have to multiply them by some factor of ten. And the factor of ten defined for this price feed is eight zeros.
00:19:32.046 - 00:20:17.700, Speaker B: So this is 2650 and that's the current price of ethereum. Now somebody did ask what's the cost associated with these and that's a great question. So for price feeds in particular, price feeds are currently being sponsored by a number of different protocols, right? Because anytime you request data, these nodes are paying gas fees to deliver this data on chain, whether it be ETH, whether it be polygon, whatever chain. They are paying gas fees to do this. So they get paid a link token or what's known as Oracle Gas to cover the costs of both running infrastructure and also delivering these data. So that's kind of the value of the link token here. They're getting paid in it.
00:20:17.700 - 00:21:06.314, Speaker B: And if we scroll all the way to the bottom we can see a ton of different users who are help sponsoring these feeds, right? So that's the current business model. Excuse me, that's the current model of these networks where these protocols that rely on these feeds being up, being reliable, help sponsor them so that they can continue doing exactly what they do. And right now because they're being sponsored, they don't cost anything for users to call them and to use, which is great for us developers. We can just go ahead and call the contracts. That might not be sustainable, so that might change the future. But that's basically how it works. The node operators get paid link token to deliver data on chain and right now this is free for us, which is nice, it doesn't cost anything.
00:21:06.314 - 00:21:46.782, Speaker B: And something really interesting about DeFi is like we're just scraping the surface with all the different things that have yet to come. Now I'm running a little short on time, so I'm going to kind of speed through the last couple of features here. Then I'll answer some questions. Another one of the really powerful out of the box applications is chainlink VRF. This is for getting random numbers because blockchains are deterministic. So using something like the block hash or some timestamp or hashing some other weird stuff isn't actually really random. And you actually run the risk of somebody manipulating all those variables that you have and ruining your random application, which is really unfortunate and it's happened many times.
00:21:46.782 - 00:22:32.026, Speaker B: So chainlink VRF is a way to provide verifiable randomness into your smart contract so you can have provably random applications. There's a ton of protocols like Pool Together, Axie, Infinity, Avagochi, Pokemon, all these Ether cards using these especially for gaming. For DeFi, there's a ton of different use cases for chainlink VRF. The next easy out of the box and I got to speed through this because I'm running really short. The next out of the box easy one is going to be chainlink keepers. And this is decentralized event driven execution. So right now in order for a transaction happen, somebody has to press a button and say, go do that computation, do that thing.
00:22:32.026 - 00:23:16.522, Speaker B: And that adds a layer of centrality because somebody always has to press that button. What chainlink keepers does is you have a decentralized network of chainlink nodes. Read some smart contract registry on chain they call like a check upkeep function, checking to see if that event has triggered. Maybe it's a time based trigger, maybe the price of an asset has reached some number, maybe the liquidity in some pool reaches some point. But once that event has triggered, the chainlink nodes will go ahead and perform whatever action you say. You can kind of think of it as if this happens, do this, if this, do that, or like a cron or any event scheduler. That's what these keepers do.
00:23:16.522 - 00:23:49.198, Speaker B: And then the last feature is chainlink any API calls. So chainlink nodes can be completely customized to do literally anything you want them to do. Go check out the documentation. This does take a little extra effort because you have to set up the nodes, you have to set up the networks, you have to set up the decentralized network. So this is a little bit more in depth, but that functionality is there for you to do literally whatever you want. Definitely check out the docs, definitely check out the documentation, check out the blog. We've got a ton of YouTube videos.
00:23:49.198 - 00:24:24.446, Speaker B: Go to the solidity and smart contract starter kits in our GitHub repo. We just released one for DAP Tools and for Salana as well. A ton of polygon notes in there too, and that's basically it. And for this hackathon in particular, we are doing $4,000 in prizes, four $1,000 prizes to the best protocols that use chain link in their projects. So really looking forward to seeing what everybody builds. And I know I'm at time, but do I have time to answer some of these questions in here? I hope I do. I'm just going to go ahead and start answering them.
00:24:24.446 - 00:24:51.558, Speaker B: Luke, feel free to cut me off whenever because I know I'm like 05:00 on the dot. Okay, I'm good to go. All right, sweet. All right, cool. All the oracle. Oh, sorry. How to specify the call to external data? Okay, so if you're looking to make a call to a very specific API or piece of data, definitely check out the any API call documentation.
00:24:51.558 - 00:25:21.474, Speaker B: Let me pull that up. Share screen check. This is pretty much what you're looking for. So if we scroll down a bit, we put our API right in here. And if we put this in the browser, this is what this API is returning all this data here. And maybe we want the volume of this token or something. Basically, we then say, okay, great, let's go raw FUSD volume 24 hours.
00:25:21.474 - 00:26:01.982, Speaker B: So it would be raw FUSD volume 24 hours and multiply it so that we get rid of all those decimal places. And then in some fulfill function, it says, okay, great. Once we get that data, just save it to some variable here. So we saved it to a UN 256 public volume, but you can do whatever you want, so that's how you get specific data. But again, this is a centralized API, so you'd probably want to do some work to set up a network of nodes, all grabbing different data from different APIs using different nodes. Right, and that's what I was saying by this tool. Requires a little bit of extra work.
00:26:01.982 - 00:26:22.360, Speaker B: So the price feeds have basically gone through the work already. Created a bunch of different nodes, a whole bunch of different data providers to make these price feeds incredibly decentralized and secure. Great question, Rory. No coding skills here. New to Web 03:00 A.m., I able to use chain link out of the box. Yes.
00:26:22.360 - 00:27:07.830, Speaker B: So chainlink is a developer tool, so you could learn to be a coder, actually, there's a ton of amazing content out there, and I feel like I have to plug this video. If you're looking for an end to end, like literally start from nothing. Literally start from nothing to become a blockchain developer. Like this course, I'll drop it in the chat, goes through literally everything. But yeah, chainlink is a developer tool, so I'm sure more and more people are actually more and more people are building protocols to make some of these services easier and easier for everybody to use. Great question. Scrolling up chainlink IoT.
00:27:07.830 - 00:28:11.206, Speaker B: Yeah, so a ton of people have done chain linked IoT projects which are always really just it's not a matter of if, it's a matter of when is somebody going to build one that's mainstream, that has a lot of value, that a lot of people use? What oracles are available on Mumbai polygon testnet? Good question. I often do most of my testing on an Ethereum testnet just because of the reliability and the uptime. We can check if we go to polygon data feeds, we can check polygon mainnet, we scroll the way to the bottom Mumbai testnet. So there are a bunch of feeds on here. I think that you'll probably have a better experience using one of the Ethereum testnets. And then when you want to deploy again, because it's a testnet, you can find free gas there. And then when you want to deploy to polygon, you just deploy to polygon, right? So they're both EVM.
00:28:11.206 - 00:28:38.846, Speaker B: Everything's going to be pretty much the exact same thing. So if you're looking on the docs, just go to polygonmatic data feeds. You can also find get random number. Excuse me. If you go to contract addresses, you can find polygonmatic addresses, Mumbai testnet addresses, et cetera. Everything's going to be in the docs. If chainlink could still get the price from exchanges centralized, why is it better than get directly from authentic APIs, eg.
00:28:38.846 - 00:29:29.118, Speaker B: Coinbase? How Chainlink handle if the prices are different from a different Robert? Amazing questions. All right, let me tackle these one at a time. So the first question, the first question is, if Chainlink is still getting the data from exchanges, why is it better than just getting the data directly from that API? Amazing question. So let's draw a comparison here, right? How is polygon running or how is Ethereum running? It's running by a ton of individual node operators running the software. So in the same regard, is that centralized? Well, yes, right, centralized. A whole bunch of individuals are running the software. Each individual is centralized.
00:29:29.118 - 00:30:32.786, Speaker B: But when you combine them into this collective, it becomes decentralized. Now, why is that better than just having the whole blockchain run on my computer? Why is that better? Well, it's more secure if it's just on my computer, somebody could break into my house, kick me down and boom. Now Ethereum belongs to whoever broke into my house, right? It's going to be more trust minimized, right? If it's just me and I become malicious and I say, hey, I want all the money and I have the ability to send all the money to me centralized, right? So we want to have Ethereum and POG on all these blockchains decentralized. And it's the same thing with data, right? We want to get data from multiple sources. Let's say we did just do everything from Coinbase, right? And Coinbase said, oof, there's some protocol relying on our API. We don't like that protocol. Well, we're going to delete the API that only they use and boom.
00:30:32.786 - 00:31:22.774, Speaker B: Now they're screwed. And in. Fact, we've actually seen this happen before where sometimes a lot of these authentic APIs have issues, right? Maybe even for a blip. There was a time when Coinbase's API accidentally said the price of USD was like 30% higher than it was and liquidated a whole bunch of people because there were people relying on that API. So this is something that we want to avoid and that's the antithesis of what we're doing in this space, right? It completely again, it defeats the purpose of what we're doing because you're adding back in this switch, you're adding this centralized feature back in. And so chainlink is better because it's removing that single switch. Every additional node, every additional data provider does what it removes the chance of one person having the power to destroy everybody.
00:31:22.774 - 00:31:56.574, Speaker B: And that's what we want, and that's why it's substantially better. Great question. Amazing question. How chainlink handle if the prices are different from data source EV, Binance and Coinbase? Another amazing question. So let's say Coinbase says polygon is $2 and let's say finance says it's $1. Who do you trust? Well, this again is where the decentrality comes in. This is why not having one of these people as the single centralized sole proprietor is good, right? So we say, okay, great.
00:31:56.574 - 00:32:28.518, Speaker B: Maybe let's look at the volume on each one of these exchanges. Let's look at what price they're giving. Let's look at who are the buyers, who are the people allowed to buy. And we can come up again with a decentralized aggregate so we can aggregate from Coinbase from all these other exchanges to get a truly decentralized reference. You're on the ball. Great question. How do you feed price in smart contract? Who's going to trust you if you do? Oh, Lucas.
00:32:28.518 - 00:32:46.962, Speaker B: Perfect. Actually, Lucas perfect. Who are you going to trust if you do it by yourself? Who's going to trust you if you do it by yourself? Hey, come, trust my API. Your $20 billion protocol? Yeah, trust me. Trust my centralized power where I have the ability if I want to ruin you. Right? Exactly. Good point.
00:32:46.962 - 00:33:17.500, Speaker B: Lucas, could you use chainlink for something different than price feeds? Yes, absolutely. Random numbers, event driven execution, and literally anything else you want. So that chain link, any API feature gives you that functionality to do literally anything. But again, that's definitely the most labor intensive one, right? Because you have to set up all these pieces of infrastructure. Again, this isn't a matter of if. It's a matter of when. I'm waiting for when.
00:33:17.500 - 00:33:37.150, Speaker B: There's more weather data on chain, there's more sports data on chain, there's more every type of data on chain. Great question. Great. Lucas. Lucas is on the ball. Lucas, I see you in the chat. Hold on, Lucas.
00:33:37.150 - 00:34:01.420, Speaker B: So chain link operators pay ETH gas fee in exchange of get link back. If ETH gas fee becomes crazy high, will this stop nodes from running? Amazing question. So this kind of goes back to the payment model of these node operators and they get paid more when these gas fees get really high. Basically. That's kind of it. Yeah. So, no, it won't stop the nodes from running.
00:34:01.420 - 00:34:46.946, Speaker B: We have so many chains, right? It means blockchains are new companies, so many networks out there, we can build here, we can build there, build on Polygon, build on Ethereum, build blah, blah, blah, blah, blah. What is your vision for the future? Is possible to start building really an open source in a public operating system for the planet? Something really open source and public. Amazing question. Thank you for this question. The TLDR of this answer is yes. It's absolutely yes. And I think that we're moving quicker and quicker to a cross chain world, a cross chain environment where there are going to be multiple chains and they are going to do different things and they are going to have different value adds.
00:34:46.946 - 00:35:17.460, Speaker B: Right. We have polygon, right? It's a much cheaper side chain and it's moving towards being more layer two. Layer two e. And that's a whole nother conversation. We have Ethereum, which has this really decentralized first mantra, but it's really expensive right now. We have all these different chains that do all these different things. And what chainlink actually does, and what really sets chainlink apart is chainlink is this connecting piece that connects them to each other, that can connect anything.
00:35:17.460 - 00:35:52.380, Speaker B: Right? And can we actually build this in the open source? Yeah, that's what we're doing right now. Most of these blockchains are open sourced and you can see the code and you can participate in the code and you can participate in the networks. So, absolutely, yes. Can we just request some search engine and take the first result? Mikhail, you absolutely could do that, but once again, let's say the search engine doesn't like you and wants to give you bad data. Boom, now you're screwed. Now your application is ruined. So, yeah, you could totally do that.
00:35:52.380 - 00:36:39.820, Speaker B: It's just not going to be very secure application. Right, again. And this goes back to the Coinbase question. It's like, oh, well, hey, Coinbase is super reputable, why don't we just use Coinbase? Hey, Facebook is super reputable, why don't we just use, oh, Google's super reputable the searcher name me one centralized group that's never had an issue. You can't, right? Google's gone down, Facebook's gone down, microsoft's had issues, all these systems, they've had issues because they have this centralized flip that they can switch. Somebody owns what they can do. Could chain link be used as a voting yes? Yes, it could be Ricardo and oh my goodness, I'm so excited for when that happens.
00:36:39.820 - 00:37:22.620, Speaker B: That is such a fundamentally important question, an important problem for the space that has not been solved yet. Whoever solves that basically creates what's called like a proof of personhood, right? How do you prove that somebody is a person, right? And you use a chain of oracle to prove that they're a person, and boom, now you have a way to do more fair voting. So it absolutely could be. And I'm very excited for when that dick comes. Amazing question, Ricardo. Adam, if I launch my own chain link node to run my own any API job, can I set it at a free price? You absolutely could, but you will have to pay gas fees still so you could make it free. You would just be losing money anytime somebody requests data.
00:37:22.620 - 00:37:46.580, Speaker B: Is the data cached sometimes before chainlink delivers? Depends on how the nodes are set up. Depends on how the nodes are set up? They could be, yeah. It depends on how the nodes are set up. They could be most of the time, I would imagine. No. Right. Because then you're not going to get the most fresh data.
00:37:46.580 - 00:38:25.738, Speaker B: Something global, public, really public. Outside the immigrant chains. Do you not have to get the approved of all nodes? I'm not sure what you're alluding to or you're thinking about here, so this is actually a really interesting question. Right. And it's almost like you're alluding towards like, hey, I want to build something global in public, but I don't want to have people approve it or individuals approve it. And that's really interesting. Right? Because then if that's the model you're looking for, then you're getting closer and closer to chaos, actually, as opposed to consensus.
00:38:25.738 - 00:38:56.998, Speaker B: Right. Hey, I want to build something, but I don't want nodes to run my software. Or you can absolutely do that, but if there's no consensus, then it kind of doesn't really make sense. Right. Once again, you're going away from the mantra of what I think is really global, public and open source. Maybe I'm not following what you're saying, but yeah, curious what the follow up is there. Hey, everyone getting close to needing to set up the next workshop, so we'll probably close the session in a few minutes.
00:38:56.998 - 00:39:07.194, Speaker B: How do we continue conversations in the discord in the chain link channel? Yes, absolutely. All right, cool. I was just going to say thank.
00:39:07.232 - 00:39:32.802, Speaker A: You for handling all the questions. If anyone has any final questions, we do have another session coming up at 530 with a team at Sequence, which is going to be great. Highly recommend that. But if anyone has any last questions while Patrick is still here, feel free to shoot them in the chat. Otherwise we can get prepped for that next event coming up in about 15 minutes. As stated, I do highly recommend continuing the conversation in discord. It's a great place to start the chain link channel.
00:39:32.802 - 00:39:47.800, Speaker A: Great place to ask questions if you are blocked on anything, hopefully chain link related, I guess that would be the best place to do it. Otherwise, use the mentorship debugging channel. That's what it's there for. But yeah, I think this has been an incredible session. Patrick always the greatest. Glad to have you back.
00:39:50.570 - 00:39:52.218, Speaker B: Awesome. I don't know. Thanks so much.
00:39:52.384 - 00:39:55.100, Speaker A: Any final questions here? I don't know if I see any.
00:39:56.510 - 00:40:12.446, Speaker B: I'll be super quick. Does Chanlink have the price data for airlines of any air fees of any airlines? I mean, you could build that, but I don't know if any established non operators have that right now. I think that was it. Yeah. Great questions. Awesome.
00:40:12.548 - 00:40:29.810, Speaker A: Well, thank you, everyone for joining in tonight and thanks for the spirited discussion. It's great to see questions happening throughout the event, and I'm loving the enthusiasm I've seen throughout Road to web3 so far. So excited to see what you guys build. We're going to be closing the session here. Thank you again, Patrick.
