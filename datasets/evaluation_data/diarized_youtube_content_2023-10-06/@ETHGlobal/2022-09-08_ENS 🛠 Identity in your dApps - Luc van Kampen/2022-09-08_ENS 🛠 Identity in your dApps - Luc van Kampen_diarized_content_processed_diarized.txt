00:00:06.330 - 00:00:25.970, Speaker A: Awesome. Okay, we are good to go. Hello everyone. Good morning or afternoon or evening, wherever you are. I'm Kree from ETH Global. We have Luke here with us from ENS, one of my favorite people. He is going to do his workshop on identity in your adapts.
00:00:25.970 - 00:00:47.850, Speaker A: Super excited. If you have any questions, we'll have maybe 5 minutes at the end to do like a short Q A. So just feel free to drop your questions in the chat box or you can raise your hand at the end with that little emoji. But yeah, we will let Luke take it away and enjoy the workshop.
00:00:50.510 - 00:01:35.340, Speaker B: All right, sweet. Well, you took my opening there. I was going to do the whole good morning, good afternoon or evening, whenever and wherever you are, but I'll take it regardless. Hello, hackers. I hope your projects are going great and this is workshop. So everybody hear me? I hope so. Anyhow, I am zero X two, two five, F 137127 D, 906-778-8314 BC, seven, FCC one, F 36746 A, three, C, three, B five, otherwise known as Luceman E.
00:01:35.340 - 00:02:03.300, Speaker B: And that kind of sums up my entire presentation. That is ENS. The core premise of ENS. ENS is the ethereum name service allows us to turn names like Buddy into wallet addresses, as shown here. Okay, I will spare you the pain. Long story short, we can do this and a bunch more. Let me show you.
00:02:03.300 - 00:02:50.562, Speaker B: Don't run away just yet though, if you already know what ENS is and you joined in for this presentation regardless, let me quickly run you through the points that I'm going to be addressing and then afterwards we can talk. Okay? I'm going to be talking about what ENS is, how our core contracts work, and all the cool stuff you can do with it. I'm going to talk about records, resolvers and storing data on chain or off chain, cross chain interoperability, so where data gets loaded from and all that kind of cool stuff. Implementing ENS in your DApps or in your smart contracts. And if you're completely new to ENS, how to register an ENS name and set your avatar. So decide whether this workshop is for you, if all of this just made you go, hey, I already know all this stuff, cool. Congrats to you, I feel free to leave.
00:02:50.562 - 00:03:13.322, Speaker B: Happy hacking and I wish you best of luck on your project. Otherwise, stay tuned. For starters, I want to address some of the milestones we recently reached. We just hit 2.17 million different names registered. This is last updated this morning, the Eigth of September 2022. I might be wrong on the date.
00:03:13.322 - 00:03:36.102, Speaker B: I'm not really good with date and time. Time is weird. We have 506 actual proper integrations supported by ENS, as well as 541,000 unique owners of names. Sweet. Let's talk about a quick practical example. Your average DAP. If you're building anything that has a front end, you're probably going to be using ENS.
00:03:36.102 - 00:04:04.694, Speaker B: So obviously I want to shield a project that I built during like three, four, 5 hours in an evening in Paris during the ETH Paris hackathon tic TAC. So some stupid tic TAC toe and solidity game, but it's just for example also excuse the design. You know what, whatever. It was a hackathon project. It's fine. If you check the top right corner, you can see my username and you can see my profile picture and how much matic I have. But username and profile picture.
00:04:04.694 - 00:04:19.118, Speaker B: Sweet. Right here in the top. Awesome. And that's not all. If I look around the UI, we can see the two people who don't have ENS names because they're missing out and I played games against them. I think those are my other wallets. I'm not sure.
00:04:19.118 - 00:04:44.866, Speaker B: Regardless, when I press the Create game button, I can send an invite to somebody. There's a lovely little input field where I can put an address or an ENS name. So if I put an ENS name there, such as Nick ETH and then I press the Send invite button, I can send an invite to Nick ETH. Sweet. Now that he's accepted and we have started our tic TAC toe game, here it is. There's Nick ETH. There's his profile picture.
00:04:44.866 - 00:05:15.214, Speaker B: And I didn't put his address on there because a hackathon project, I was on a time limit. I started pretty late. So there's always time to start. If you haven't started already, you can know, build your whole thing. Obviously I would flex how good I am at tic TAC toe, but considering that is not really the case, let's just keep talking about ENS. Okay? So the core idea in this DAP is that the username and profile picture were both provided by ENS. But we can do a whole lot more than that.
00:05:15.214 - 00:05:42.200, Speaker B: This is me. I'm Luzman study or V three X study that swaps back and forth. I'm one of those people that changes their name every once in a while because I feel like it. But long story short, I'll probably forever be those two names. And this is my profile picture as well as my address, or at least the part of my address. Putting the entire one there would be pretty contrary to the point. So we'd like to shorten it, still give you the idea that you can validate it, still allow you to validate it, but not bloat up your entire screen.
00:05:42.200 - 00:06:08.002, Speaker B: We can store a lot more in ENS names though. This would be Nick E and we can store not just his Ethereum address, but also his doge, his Bitcoin, his Litecoin, and any other coin that supports ENS. How much does that take? Not much because these are text records. So anybody putting LTC and then something there you go. Now it magically works. So you can integrate this into your DAP. You can get people's Bitcoin address, you can get people's Litecoin address, you can get their near address.
00:06:08.002 - 00:06:41.030, Speaker B: You can get their whatever on any other chain, any other network, any other kind of cool stuff. Next, you can host your websites on ENS. That's the content field. I don't have that on this slide because you'll notice soon the slide runs out of page thing left. But you can store all sorts of cool stuff in here. You can also store a link to your web two domain if that's where you host your things, as well as your email address so people can reach out to you. Maybe your Discord, maybe your Twitter, maybe your Reddit, your Telegram, your GitHub, or you store your ENS profile.
00:06:41.030 - 00:07:29.930, Speaker B: So if you're an ENS delegate for the ENS Dao, because we have a Dao and all of the funds go to the Dow and are managed by the Dow, you can put your blog post in here, your forum post in here for your Dow application, and then people can see it with your ENS name. Sweet. And obviously the avatar, this specifically is an EIP one one five avatar, which means that it's like a specific spec that allows us to have NFTs as profile pictures. And you can only have it as your profile picture if you actually own the NFT, which is super cool, as well as a ton of other stuff like HTP URLs or IPFS links or Rweav links or other kinds of cool stuff. So how does all of this work? I can hear you asking. It's pretty simple and I'm going to try and explain it to you. Dumb it down a little, but explain it to you.
00:07:29.930 - 00:08:19.706, Speaker B: There's a couple core contracts that ENS runs off of. These contracts keep track of important information like your name. Luzman studies your registrant, which is the address that gets to control the name and transfer the name and when it expires, which in this case mine, november 18, 2025. Hopefully by then I will have renewed again, but that's just another transaction. Last but not least, it also stores the Resolver, which is a contract address. It stores this for me, it stores this for Nick, it stores this for Vitalik, and for every other ENS name out there. Keep in mind, ENS names don't just have to be ETH, they can be computer contact Show, which is the domain I use to host this presentation, luke Show, in case you're interested, and a ton of other cool stuff.
00:08:19.706 - 00:08:50.802, Speaker B: Please don't go to Luke Show and fast forward in the slides because I have a 30 minutes time slot to fill and I'm trying my best. Obviously this presentation can be clicked through in half a minute, but whatever. So I see you going, okay, I've got some code, how do I actually load my avatar from this? Because I want to get the cool data. So you go to your library and then you get your library to request Nick ETH. So you go, hey, I'm looking for nick E. And then the core contract goes, okay, here you go. And it gives you the information you need.
00:08:50.802 - 00:09:20.286, Speaker B: In this case, we have Nick E, the registrant expires resolver. We can fetch all of these with different functions, but the thing we care about here is the resolver. The resolver field is a smart contract address. It points to a smart contract right there. Ta DA. So this specific resolver then points to the smart contract address. This specific resolver on that smart contract address has a couple of functions that can basically return the metadata that is associated with your name, like this.
00:09:20.286 - 00:10:10.560, Speaker B: So the contract stores your ETH doge, your Bitcoin, your Litecoin, their addresses, not specifically the currency, but the address of yours, your website, your email, your discord, your Twitter, your Reddit, your telegram, your GitHub, your ENS delegate, your avatar, your content, and any other text record you'd like to store. Now, the cool part about this, oh, I'm slides behind on my controller. There we go. The cool part about this is that this contract, specifically zero x 49, seven BA 41, is the public resolver. It's an ENS contract that we wrote and deployed, and it's the default on most names through the ENS manager. The ENS contract, public resolver contract allows you to modify all of these records. So if you want to go edit your website, or edit your email or edit your profile picture, you can go to the ENS Manager and do so through there.
00:10:10.560 - 00:11:08.062, Speaker B: However, as well as edit your resolver. However, what I think the cool part of ENS is, and where the cool parts come in, or the even cooler parts, because it's already really cool, is when we change the resolver, because you can point the resolver to your own contract, which means that you now control the logic of what metadata gets outputted. So you can change your ETH address, you can change your Bitcoin address, you can change your avatar and programmatically, have all of these fields set if you want it to have a different avatar depending on the day of the week. You can code it if you want it to have a different avatar depending on the price, a different description depending on the ETH USD price or the ENS token, something the amount you have. Maybe there's so much cool stuff you can do because anything that can be written in a smart contract can be made into a resolver and can be read from ENS. Sweet. So it's fully programmable.
00:11:08.062 - 00:11:40.458, Speaker B: Now, I see you looking at this and going, oh yeah, cool, I can make my own smart contract, but they'll have to be on main net. And I understand that when you look at these things like ETH online and you see the sponsor list, you're like, whoa, that's a lot of different EVM chains. And I understand that all these fancy things are super nice to look at. I mean, look at all of them. I want the I'm behind again, this fancy stuff. I want to build on these. I understand you want to build on these, so it's possible to build on these.
00:11:40.458 - 00:12:17.426, Speaker B: We want to build on these. So we got you got good news for you. CCIP the cross chain interoperability protocol, otherwise known as telling your library that they need to read the data from elsewhere. Super simple. Allow me to explain. This allows us CCIP read, allows us to store data not just on chain, but also off chain, on roll ups, on layer twos, on magical ZK things over Http, over Httpcp and practically on anything. Heck, your toaster could resolve your ENS metadata.
00:12:17.426 - 00:12:55.010, Speaker B: Hypothetically speaking, it would be a smart toaster. But you get the point, right? Anything is possible which is super cool and you're able to program it completely. Obviously this will require some intermediary steps, but it's not that bad. So how does this actually work, right? How did we add this functionality? Is this fully smart contracts, whatever? If you're doing this on chain, you can do it through chain link Oracles. However, if you're doing it off chain, you'll need your library to handle it. In this case, here's the way Ethers goes about it. Ethers will request from the ENS contract on mainnet your resolver, right? It requests your name, verifies through the owner, all that fun stuff, if that's what you ask.
00:12:55.010 - 00:14:03.386, Speaker B: But requests your name and it gets the resolver field, then it reaches out to the resolver contract and says hey resolver, I need to load the avatar of this user or give me the ETH address of this user. And the contract, instead of replying with the information, says oh no, revert off chain data, go to Optimism or go to Polygon or go to Arbitram and this is the contract you need, this is the call data. And then Ether says I know how to handle optimism, I know how to handle Paul, I know how to handle all these chains I got you. And then it reaches out for you to optimism, to the contract, does all the stuff you need to do and then eventually your contract written on optimism or your NFT on polygon replies and Ethers has the data it needs, your profile picture, your whatever. So you can now have this on multiple chains, off chain, on your T pod, on your whatever, and it will magically work. The best part about it is that all of this is built into the library by default, which means it is no extra effort on your part to support these kinds of names. If you're building a web UI, all of these names that are fetched from people's toasters will just magically work.
00:14:03.386 - 00:14:38.178, Speaker B: Your fridge will be able to update its records dynamically. It's a pretty good one. So obviously there's a bunch of libraries out there and before you go looking what libraries are ENS capable or all that stuff, most of them already are. So I'd recommend looking at the library you're already using right now and seeing their documentation and checking if they have ENS. Support most popular libraries out there, like Ethers, Wagme ensjs, obviously. Web three JS web three J k ethereum. Web three Pi and Go ENS, which would make sense because it has ENS in it already.
00:14:38.178 - 00:15:26.354, Speaker B: Support ENS and off chain resolution and that kind of stuff. You can do things like forward lookup where you can give it a name and then it will reply with the address, right? So I can give it V three X study or Luceman study, then it will reply with zero x two two five F 13171. Yeah, that shebang. Or you can do reverse resolution and fetch somebody's profile picture and avatar based on their address. So we can go from wallet address to name, which is super cool, and you can do a bunch more. Now, I've been pushing myself a little to make this presentation, and I've been procrastinating because I'm human, I think, and that means that some of the parts of the presentation I haven't fully finished. So my sincere apologies because I could talk about subdomains for a very long time.
00:15:26.354 - 00:16:26.262, Speaker B: There's a lot of cool things that we can do with subdomains, and sadly, this part of this presentation hasn't gotten enough content just yet, but I will be updating it as time goes on. So if you check Luke show Ethonline 2022, you'll find the slides and it should be updated in a little bit. However, subdomains, same resolver logic, same infrastructure, same everything, allow you to create subdomains, give out subdomains, have subdomains as NFTs, depending on how you code it or what code you're using. We're working on some examples for that so that you can easily do it as well. And you can control all sorts of cool stuff. You could give subdomains to every member of your community, or you could make an off chain resolver, such as we've seen with Argent and with Lens and with Coinbase, where subdomains of those services are given to the users thereof. So with Coinbase you're given a CB ID subdomain, which is a fully working ENS name, which is super cool.
00:16:26.262 - 00:17:20.294, Speaker B: So everywhere on the decentralized web and soon the centralized web, you'll be able to have that as your name. I have issues on Ramping, but otherwise I would have had Luke computer on ENS already. But you can do all sorts of cool stuff like that, right? You can take your Web Two domain and convert it to your web Three domain and still have both and have extra functionality. Super cool. So where do you find more about this? We obviously have our documentation doc ENS domains where you can find most of the information that I just mentioned. I'm currently working on a more improved version of that and more news will be coming about it in the near future, as well as all this other cool stuff. So I see you sitting here, no I don't, I can't look through the camera but I'm trying but I can envision you listening to this and going yeah, that's cool.
00:17:20.294 - 00:17:55.278, Speaker B: These names are really cool, but super duper cool. Where do I get one, how do I register one? And it's really simple. The ENS manager. Now the ENS Manager is not the only place you could do it directly on chain or you could do it through any of the other places such as the ENS Ferry, Rainbow, Coinbase Lens or Argent. And each of these have their own things. Coinbase, Lens and Argent are doing their subdomain thing and ENS Ferry and Rainbow as well as status and ENS Ferry and Rainbow allow you to register names directly. The ENS Ferry also has a cool feature where you couldn't register a name and send it to the ENS Vault.
00:17:55.278 - 00:18:44.878, Speaker B: So if you find a name of a celebrity or of a person that you think should deserve to have their ENS name, but they're not in the web three ecosystem yet, you can purchase the name for them, send it to the ENS ferry, and the ENS ferry will try and do their best to make sure that person gets their name. So for a fair bunch of celebrities you can right now register their name, give it to the ENS Ferry and then whenever that celebrity enters Web Three or wants their Web Three e name, then you're able to send it to them. Sweet. The ENS manager is what I'll be focusing on today. I also want to tease really quickly we have a new version of the Manager coming out. Obviously it's been the same one for a fair bit of time so the alpha version is going to be there soon. It looks really good and our developers have been working on it like madman.
00:18:44.878 - 00:19:12.620, Speaker B: So I'm super excited for it. You can find a tiny preview with Just read Only for now on Alpha ENS Domains and we'll have more about that soon as well. The ENS Manager, I was going to get back to that. The ENS Manager looks like this, it's on app ENS Domains. You'll also find it if you go to ENS Domains and it's super simple. You connect your wallet and we have a search field. You go to the search field, you enter the name you want, in this case Alice E and you search for it.
00:19:12.620 - 00:19:54.620, Speaker B: Here's the name alice ETH. This name has the registration on there, we have a gas calculation on there and a button to request as well as a short explanation of the three steps that it takes. There's three steps to registering an ENS name, two of which are transactions and one of which is waiting for a minute. This is done to prevent people from stealing your name or from man in the middleing you or from all sorts of attacks. So here's how it works. You look at this, you can register for multiple names in one go. I recommend you do that because it will save gas, and you can register for one year, two year, three years, four years or five years, which will cost more or less ETH, depending on how many years you go for.
00:19:54.620 - 00:20:41.910, Speaker B: The price of a domain as long as it is five characters or longer is going to be about $5 a year. And the other two for four characters and three characters can be found in the documentation. I think it's 640, and I'm not sure for four characters, I'll have to double check, but check the documentation for the most up to date info. This price is directly fetched from the chain link USD ETH Oracle or ETH USD Oracle, whichever order it's in and shown in the UI. And all the fun calculations surround that. So the actual price for the domain, as long as it's five characters or more, is five USD a year. This five USD then goes or worth of ETH, goes to the ENS treasury and is managed by the ENS Dow.
00:20:41.910 - 00:21:10.660, Speaker B: So yeah, super simple. Let's run you through this. You have your name, you go for one year or for however many years you want. You press the Request to register button. The initial transaction is starting over here it goes through, you wait for a minute, and then after that it asks you to press the register button again. This is transaction number two. With the first transaction, we've basically reserved the name for a few minutes, so we have the right to buy this one to register it for this year.
00:21:10.660 - 00:21:54.042, Speaker B: And then after that, after you've waited a minute, you can press the Register button and register your name. So once that transaction finalizes, this is what you'll see. If this is your first ENS name, I recommend pressing the Set as Primary ENS Name button, which will guide you through another menu on how to set it as your main ENS name. So reverse resolution works properly and your name will start appearing at all the sites. And otherwise you can manage the name or press Remind me for getting reminders or notify me for when it expires. So if you're not actively checking, which I presume, not everybody is, you can get email notifications or other kinds of notifications, hopefully soon when your name is about to expire. Sweet.
00:21:54.042 - 00:22:07.326, Speaker B: Now you press Set ensname and you can do all that fun stuff. So here's your profile. This is mine. V three X E. You can see the controller and the registrant. Those are two different fields. Controller is whoever currently has the name and gets to use it as their identity.
00:22:07.326 - 00:22:28.230, Speaker B: Registrant is the one that actually owns the name. So in my case, my registrant is my hardware wallet and my controller is my software wallet. The name expires June 16, 2023. I need to renew that, and you can see all the other fun metadata that I've stored in here. This is a sneak preview from the alpha one. Okay, whatever, we'll go back to the other one. Let's talk about setting your avatar.
00:22:28.230 - 00:23:15.590, Speaker B: Okay, back in the old manager. And again, this will all be updated when the new one comes out. It shows my registrant, it shows my controller, it shows the expiration date as well as the address it's currently associated with, which by default will be your address. So it saves you from paying more gas. Right, what you do is you go to the Add or Edit record button on the right side here you fill in the avatar field because all of these fields are editable right here, ETH, BTC, LTC, Doge, and there's a bunch more, but you have to actually add them yourself because otherwise the page would get too long. By default you can add the content so the actual where your page should go. So if you'd like to have your e limo or e link, then you can access your page that way and you can set other text records like the email you can see down there, or avatar.
00:23:15.590 - 00:23:54.546, Speaker B: Avatar can be set to an IPFS URL, an Rweave URL, an Http URL, base 64 directly there's a specification for pointing it towards an NFT and a bunch more other cool stuff. Cool. There's one last thing I really quickly wanted to do before I end this presentation, and again I've ran out of sync and that was just to Rick roll everybody, because you can't give a talk, not Rick roll the entire audience. And then, yeah, that was it. My name was Luzman Studeth at Lusmansnl. If you'd like to follow me on Twitter, I wish you happy hacking. And yeah, that was my presentation, my workshop.
00:23:54.546 - 00:24:10.170, Speaker B: If you have any more questions, I'm happy to take them. Otherwise, if you don't get the chance to ask your question, feel free to reach out to me. Luke contact through Twitter Lucemansanel, it's over here or anywhere else. The discord.
00:24:12.370 - 00:24:14.254, Speaker A: I love this picture of you.
00:24:14.452 - 00:24:16.960, Speaker B: Yeah, okay, well, we'll take it off the screen then.
00:24:17.490 - 00:24:29.650, Speaker A: It's too late, I already screenshot. Okay, I think we have some questions in the chat, so happy to read them off if you want. Or we can just read through them.
00:24:29.800 - 00:24:31.060, Speaker B: Yeah, go for it.
00:24:31.830 - 00:24:36.850, Speaker A: Let's see, let me scroll back. What is the difference between registrant and resolver?
00:24:37.270 - 00:24:50.170, Speaker B: Yeah, so the registrant is the actual address of the person who owns the name, so that would be your address, and the resolver by default will be the public resolver, but it can also be your own resolver or any kind of fun stuff like that.
00:24:50.320 - 00:25:14.530, Speaker A: Cool, awesome. Yeah, and thanks Ben, for helping out. There another question. Hello sir, could one use ENS to display ERC, 721 tokens as well for a particular address similar to how you displayed, ERC 20 tokens? And following up, would one use the contract address for the ERC 721 as the resolver.
00:25:15.030 - 00:25:58.986, Speaker B: Yeah. So if the ERC 721 natively supports being an ENS resolver because that's another interface with a couple of functions, then it is fully doable. Otherwise, pointing it towards the NFT address is fully doable the ERC 721 address. However, you can also always, after the fact, write a resolver that basically connects the two. That allows you to convert from ENS resolver interface to reading the data off of the NFT. So you could have ENS subdomains or actual name metadata fetched from an NFT contract. Yeah, or from a middleware resolver.
00:25:59.178 - 00:26:13.566, Speaker A: Sweet. Awesome. Yeah. Someone says yeah. Tell us about subdomains, please. Someone asked, what is the loose show URL?
00:26:13.678 - 00:26:15.474, Speaker B: I think, yes, it's show.
00:26:15.512 - 00:26:16.626, Speaker A: Okay, cool. You sent it.
00:26:16.648 - 00:26:19.270, Speaker B: Awesome. I should buy both, but yeah.
00:26:19.420 - 00:26:23.346, Speaker A: Then Patrice asked, can I use it with a testnet?
00:26:23.538 - 00:26:50.430, Speaker B: Yes, we have multiple deployments right now. I'll put a quick link in the chat as well to where our deployments are, but we have some deployments on most of the main net testnets or most of the east testnets. So on Rinkby and Gorli, you'll definitely be able to test out and register. I think if you go to the manager right now and you change your MetaMask or your wallet to one of the testnets, then it will automatically swap over and you can register and try it out for free on testnet.
00:26:51.890 - 00:27:03.970, Speaker A: Okay. And last one, Meek says, how about a feature that ENS registry for smart contracts, I think, Meek, yes.
00:27:04.040 - 00:27:35.550, Speaker B: So registering smart contracts on users behalf, that is technically doable, although I don't think your user will be happy with the gas fees because it will all add up together. So your contract's gas fees plus the NS contract gas fees, you can, however, give away subdomains infinite for free in quotation marks, depending on, obviously the gas fees of your own contract. And all that would take is storing it in your resolver itself or in an NFT or in anything along those lines. Any smart contract.
00:27:35.890 - 00:27:45.950, Speaker A: Cool. And then we had one more pop up. Could we queue to register expiring domain names instead of subscribing to notifications about expiration?
00:27:46.110 - 00:28:34.566, Speaker B: That's a good one. So the way that we've done expiry and it's not in my presentation, it really should be, is slightly different from how normal domains expire. The way that they expire with ENS, which is something that we put way too much thought into, essentially ensures that everybody has a fair chance, depending on how much they value getting that name. So if I wanted to have my name and it accidentally expired, you have a three month period during which the original owner can still renew the name, so the name is unaccessible to anybody else. And then after the three months, a 21 day Dutch auction starts. So the price starts super high, and then 21 days later it is back at registration price. And whenever.
00:28:34.566 - 00:29:06.182, Speaker B: You feel like you think that's the price you're willing to pay. Whoever first ends up registering the domain then wins the auction, essentially, and gets to have the domain. So if some multimillion dollar organization really wanted their ETH name and it expired, they'd be able to put in as much funding funds to it they wanted to. But if you wanted to take it from them, you could overstep them and do that as well, but that essentially prevents Sniping.
00:29:06.326 - 00:29:17.070, Speaker A: Okay, cool. All right, I think we have two more, and they'll probably be our last one since we're almost over time. Can you own an ENS and distribute subdomains to other addresses?
00:29:17.890 - 00:29:41.640, Speaker B: Yeah. So you can own an ENS right now we have a subdomain functionality, but that is all on mainnet, so it all costs gas. You can write your own resolver to manage subdomains, or you can do it on a different chain and have all your data on there. So if your NFT lived on polygon, then you could have subdomains magically working through the polygon system. Yeah.
00:29:42.090 - 00:29:46.870, Speaker A: And then last one, can a smart contract change its name to a dot contract?
00:29:48.490 - 00:30:24.002, Speaker B: So no. Etherscan allows you to have vanity names. So for the ENS ones, we have, like, ENS Wallet and ENS dow treasury and all that fun stuff. ENS public resolver. However, for getting your ETH name, ENS only provides the ETH TLD. I feel like that's one of the core principles of ENS, that we don't want to intrude into any other TLDs domains for pun purposes, but we do, however, support any Internet domain. So if you have a.com
00:30:24.002 - 00:30:41.766, Speaker B: or you have a, you can get your contract's address to be ETH or or whatever your domain is. So if you own and in my case, for Proof of grass that was POG Earth, you can have that as your ENS name. Your earth, essentially, right? Which is super cool.
00:30:41.868 - 00:30:58.030, Speaker A: Yeah. Awesome. Thanks, everyone, for the questions. Thank you so much. The workshop, you always bring, like, the chaotic good energy that I love so much. So go. And, yeah, if you have any more questions, everyone, feel free to drop them in the ENS discord channel.
00:30:58.030 - 00:31:02.494, Speaker A: The team will be there to answer any questions. And yeah, happy hacking, everyone.
00:31:02.692 - 00:31:03.820, Speaker B: Happy hacking. Take care.
