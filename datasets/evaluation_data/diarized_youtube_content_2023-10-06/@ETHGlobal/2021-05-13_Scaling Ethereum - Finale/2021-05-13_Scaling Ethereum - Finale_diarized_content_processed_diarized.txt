00:03:27.590 - 00:04:03.314, Speaker A: Good morning, good afternoon and good evening everybody. My name is Kartik. I'm one of the co founders of ETHGlobal. And I'm super excited to welcome all of you to the Scaling Ethereum finale. All of you are watching this thing on ETHGlobal TV. So for those of you who are looking at this interface for the first time, we designed something specific for our events so you can all experience this event with the entire audience and see what's happening with the stage at the same time. So for all of you who are interested in chatting back with us or our speakers, or have questions for the projects we're going to see today, I hope that you all log in and ask your questions away.
00:04:03.314 - 00:04:39.482, Speaker A: And also, for everybody who's going to participate in any of our chats today, we're going to be giving out a POAP NFT token. So please be sure to say hi. So scaling ethereum is an event brought to you by ETH Global. And for those of you who don't know what ETH Global is, it's an organization with a very simple mission. Our goal is to onboard thousands of developers into the Web Three ecosystem. And we do this by running hackathons and summits all across the world, online and in person. Scaling Ethereum has been a three week long hackathon that started early April.
00:04:39.482 - 00:05:28.810, Speaker A: And we're wrapping up the event today by showcasing what came out of the whole hackathon. For this event, we had over 630 developers and hackers participate and build really cool projects, taking advantage of what's happening in the world of scalability. We hosted four different summits and had over 1100 attendees who watched some of those amazing talks. And these hackers participated from 50 different countries spanning 18 different time zones. So we get a very diverse set of people joining in from all across the world. And we're super excited that we were able to not only include them, but also bring on their diverse perspectives and see what matters to them as they built some of their really cool projects. We did four summits.
00:05:28.810 - 00:06:14.478, Speaker A: The first one we did was on what's happening in the world of L2 S, which was our Scaling Summit. Then we spent a whole day on talking about the merge and the transition for how things are going with E Two. Then we hosted a summit about zero knowledge and applications of zero knowledge with respect to scalability. And just last week we did a summit and co hosted the Mev Roast with the Flashbots team, just talking about how Mev is going to change everything in the world of DFI and scalability. So for this hackathon, we had over 100 mentors and 28 companies. This was a massive event with so many people from our ecosystem participating. And I want to give a quick shout out to everybody who made this possible.
00:06:14.478 - 00:07:34.306, Speaker A: I want to especially thank Arbitrum optimism ZKsync and starquare and then scale labs. Bloopering the graph seller connect polygon raiden ZK swap taurus compounds grants program protocol labs the uniswap grants program ave superfluid chainlink a new cipher covalent zapper, the 1inchh Team Teller, Secret Network, Ethereum Foundation, IPFS Main, Dpay, Near Protocol Diversify, Rarible, Laminuscap and ENS. All of these companies participated at this event and really helped all of our attendees not only build interesting and cool projects, but also helped them really get to where they wanted to do from a technical standpoint by being mentors and unblocking them for their projects. All in all, we're also giving away over $250,000 in prizes for all of our participants today. And for those of you who are eager to know which prizes you've won, we'll be announcing that very soon, right after a few demos. So this event has been absolutely phenomenal. It's one of the largest ones we've ever run and we're just super excited that we were able to get this amazing and massive crowd to care about and build on top of and experiment with what's happening with Scalability on Ethereum.
00:07:34.306 - 00:08:32.294, Speaker A: We had 133 projects come out of this event and all of these teams submitted their projects last Sunday about five days ago. And we spent the first few days earlier this week going through and judging all of these projects. And from all of that I'm super proud to announce that we have twelve finalists who will be showcasing their projects here today, live. And I can't wait to have all of you also check out these teams. So in no particular order, we have kangaroo, Alexandria, the Lab rats, Zenith, hydrophile, Cairo, DAP, Devolution, NFT, puzzle thing, xfil eat sorbet, flaunt and Ray tracing. These are our twelve teams that are going to come on and talk about what they've done and how they've used the world of L, two S, and Scalability in their projects. And as we were looking at what some interesting themes were for a lot of our teams, and especially these twelve, we noticed that there are really interesting categories around applications.
00:08:32.294 - 00:09:33.518, Speaker A: There's infrastructure and protocols, and then there are developer tools. So what we've done here is we've categorized them in subcategories and we're going to go present and showcase these projects by these mini groups. And the way it's going to be structured is that we're going to have three teams come on at a time and they'll do back to back presentations and we'll do some Q and A with our judges for comments and feedbacks and questions. And before we kind of jump into these teams, I want to quickly make a point and say that just because your name is not on one of those twelve list items, it doesn't mean that you were not good enough or there was something wrong with your project or something didn't work out. The twelve teams here are showcasing some of the most interesting and creative hacks from all of our process. But it doesn't mean that everything else was not great. This event and the entire goal for our events is to really give people a chance to experiment and see what's possible.
00:09:33.518 - 00:10:33.474, Speaker A: And I want to especially thank 120 plus teams here listed that it really takes a lot of courage and time and dedication to continue for a three week long event and build something cool and build something just to learn for the sake of learning. So I really encourage all of you to continue working on these projects and as you build them or as you have more questions even after the event ends, you're all on our discord. You can at mention us or our mentors or anybody here if you need any help, whether it's being unblocked on a technical issue to you want to really show off that now it's finished, we'll be happy to really support you in any form. And we really hope that you continue building everything you've done over the past three weeks. For those of you who are curious, you can check out every single project that came out of this event by heading over to Showcase ETHGlobal Co. We just refreshed this whole UI. I'm super happy to announce this for the first time for all of you to check out.
00:10:33.474 - 00:10:58.374, Speaker A: You can see every single project here with details for what they've done, who built it and what they're using under the hood. So, as we jump into our very first set of demo, I want to introduce the five amazing judges. They'll be here today talking to all of our teams. I want to welcome Ben Jones from Optimism. We have Evihu Levy from Starquare. We have Daniel Goldman from Arbitrum. We have Angela Liu from ZK Singh.
00:10:58.374 - 00:11:31.006, Speaker A: And we have iBrew Angela from Scale Labs. They'll be here with us for the next 2 hours, really chatting with all of our teams and we'll have a great time. So, without further ado, I want to welcome the first category of our demos. So the first category is web3 applications, especially really good cool projects that are trying to get more consumer adoption with crypto. So we have three projects coming on. We'll have Kangaroo and then we'll have Flaunt and we'll have the NFT puzzle thing. They'll come in back to back, they'll present and then we'll do a crypt Q A.
00:11:31.006 - 00:11:42.360, Speaker A: So if everything is good to go, I'll welcome Kangaroo to come kick off today's finale with the very first demo. Kevin, take it away.
00:11:46.590 - 00:11:54.362, Speaker B: Hey guys, sorry, I was a bit confused there because it did mention Kangaroo first, but is it me first?
00:11:54.496 - 00:12:07.440, Speaker A: Oh, sorry, I misremembered the name. I did mean kangaroo. Justin, good catch. Hello.
00:12:08.870 - 00:12:27.270, Speaker B: Okay, welcome everyone. Welcome to our project Kangaroo. This is our layer two discord wallet that we made for the scaling theorem hackathon. So, who we are? I'm Justin and I'm from the University of Waterloo, located in Canada. Hi. I'm will. I'm also from Waterloo.
00:12:27.270 - 00:12:57.274, Speaker B: And so what's currently the problem. Well, existing Discord wallets have issues. If any of you have tried tip CC, will tried it recently, and he wanted to withdraw $5 worth of Dnt. Unfortunately, it costed $117. And clearly something isn't working out. So our solution is layer two wallets on ZK Sync that have reasonable fees. So these fees are up to 100 times less than current layer one fees.
00:12:57.274 - 00:13:22.898, Speaker B: And it's also good for L two onboarding. So it introduces Discord users to layer two, and it's pretty easy to use. It's intuitive. All right, now for our demo. All right, so we have our Discord bot set up on this server. So, for example, I can use these Discord commands and see all the different commands I can use has a really nice UX. I can, for example, see my balance.
00:13:22.898 - 00:13:52.882, Speaker B: I can see that I have ETH die and bat. And for example, if I wanted to send some tokens to Justin, I could do send. And I have all these auto fill options here, so I can send one die to Justin. Oops, wrong person, Justin. And then if I do confirm no, it'll preview the transaction just so I can see what I'm about to do. So I'm going to send one die. The fee is pretty low, which is great.
00:13:52.882 - 00:14:41.422, Speaker B: And if I do that again so if I send one die to Justin and I confirm, yes, I will take some time send to the transaction. And if Justin does slash balance again, then we'll just see he has 15 die, whereas before, he had 14 die. Awesome. That's great. So let's head back to the presentation. All right, so how does it work? So, pretty much we have a rest API set up, waiting for interactions to come in from Discord, and we use the user's unique Identifier to get a wallet using Ethers JS and the ZKsync SDK. And based on the command that they gave us, we call a different wallet function and display the right output.
00:14:41.422 - 00:15:19.040, Speaker B: A nice message. Ideally, it's pretty simple, but it's effective at sending transactions. All right, so what's next for Kangaroo? So in the future, when Zksing adds smart contracts, we will ideally have smart contract in DAP integration because Kangaroo uses real ZK Sync wallets in the back end, and maybe we'll add some new L two S in the future. So Kangaroo is actually live on main net. I stayed up last night getting it to work. So you can actually add Kangaroo to your Discord server right now. At.
00:15:19.040 - 00:15:25.470, Speaker B: Thank you. Thank you so much for listening to our presentation.
00:15:28.210 - 00:15:51.826, Speaker A: Awesome. Well, Justin, that was a really cool, quick demo and super useful because we're seeing so many communities now form on Discord. So I can't wait for everybody else here to comment on some of their questions and reactions. But before we do that, we'll do the other two projects back to back. So, Kevin, now let's go to you, and we'll see the font.
00:15:51.858 - 00:16:02.710, Speaker B: I know. Yeah. Let me go ahead and just share my desktop. All righty. Can you guys see that okay?
00:16:03.400 - 00:16:03.956, Speaker A: Yes.
00:16:04.058 - 00:16:05.300, Speaker B: Good? Yep. Great.
00:16:05.450 - 00:16:05.764, Speaker C: Yeah.
00:16:05.802 - 00:16:24.776, Speaker B: Thanks, Kartik. Yeah. So I'm going to be walking through the hack with something called Flaunt, and Flaunt helps you answer the question of so I'm just going to start a little timer for myself here. Awesome. I just bought an NFT. So now what? What do I do with it? So, before I jump in yeah. My name is Kevin Bluer, based in Austin.
00:16:24.776 - 00:16:47.788, Speaker B: So let's dive into flaunt. Really what it's all about is enabling NFT owners. So people who spent perhaps just a small fortune on an NFT to create derivative works, new pieces of art, new memes, new things from these assets, from these NFTs that they already own. Cool. So why would they want to do that? A number of reasons. Let's have a look. Firstly, Monetization.
00:16:47.788 - 00:17:13.976, Speaker B: So again, you may have spent a lot, some of these NFTs aren't cheap. And what you can do with Flaunt is create new pieces of art with that, or new works, perhaps you might get a signed copy, whatever. And as you'll see all of these screenshots you're seeing here, all these images are created within Flaunt. And we'll see a demo in a moment. Another reason is gifts for your friends, family, coworkers, the community. See an example there to my mum. More monetization.
00:17:13.976 - 00:17:52.890, Speaker B: So you might want to just create kind of custom copies or same copies snapshots of that NFT to kind of license downstream and get some royalties going for these pieces that you already own. And then lastly, for the meme, for the love of memes, I'm a huge fan and I love how it's kind of enriching our culture in kind of quirky ways. So, as you'll see, that's another kind of byproduct of this tool. But wait, what about the price of gas? That's pretty prohibitive right now on L One and would verbally hold something like this back. So L2 is to the rescue, as we'll see. Cool. So let's jump into a demo.
00:17:52.890 - 00:18:14.344, Speaker B: So it's available at flaunt. WTF. And the first thing you'll see when you come in is this UI. And you can load either a sample NFT, so you can just pull one straight in. We'll do that in a moment. You can also load directly off an existing contract address and then the corresponding ID of the NFT. This is the contract Address Foundation.
00:18:14.344 - 00:18:39.860, Speaker B: If anyone's familiar with foundation, it's kind of neat because you can kind of randomize that and just pull one in and experiment with it and so on. Or of course, paste in the contract address of an NFT contract that's been deployed by yourself or anywhere else. For ease. I'm just going to pull one in, one of the samples you can see here. And then let's go ahead and customize this a little bit so it's kind of cartoonized doge. But let's bring in the swar. Let's bring in some laser eyes there on top of the glasses.
00:18:39.860 - 00:19:09.856, Speaker B: Let's bring in a troll, see if we can move that guy around on top of this doge. All over the place with this live demo. Bring in some text so scaling for the wind. And then finally, let's just kind of autograph that to kind of customize it all the more so that's a custom piece off of something we already own. And now what we can go ahead is save this. And within the application or the DAP, you can actually save it directly. A cooler doge for the win.
00:19:09.856 - 00:19:36.084, Speaker B: To save it directly to IPFS. It's kind of neat. And you can see just to prove this isn't smoke and mirrors, you can see that it's just loaded up there and then the corresponding metadata that's there. Two things you can do here is preserve it with filecoin directly. So in this case, I'm running filecoin flavor ganache locally. So kind of automatically create a storage deal or in a kind of simulated manner right now, or preserve it with a pinning service like Pinata. Either way, it's currently on IPFS.
00:19:36.084 - 00:20:08.340, Speaker B: Now what we can do is kind of getting into the cool bit is go ahead and mint this. Now if you flush with ether and you don't mind spending the gas, you can mint it directly to the l One, but in most cases you're probably not going to not want to do that. And then two L2 S that it supports right now are both scale. So this will toggle my MetaMask directly to scale's network and presuming. I've got SMSK ETH, I can go ahead and mint that. What I'll do in this case is do it via Arbitrum. So I've used Taurus in this case and their kind of open login provider.
00:20:08.340 - 00:20:33.050, Speaker B: I've also kind of preset some stuff up here. I've moved over some l one east to the arby's. You can see tiny little balance there and you had mint and that kicks it off. It does take a moment. So just in the interests of this demo, I'll kind of skip over that. And then what you can do is go into the gallery and you'll see it show up here on the corresponding L2. This UI could probably use a little bit of love, but you get the idea.
00:20:33.050 - 00:20:58.604, Speaker B: And then let me just move this zoom window out the way. You can go in and see on the L2 in this case, this is a kind of a funny one, troll versus troll. Go ahead and withdraw that and then click Initiate withdrawal. And then depending on the L2, obviously there's a bit of delay in getting it back to the L One. So you can initiate that obviously super tight in time. And then this is just the view that you would see on the L One. Funny quirk.
00:20:58.604 - 00:21:28.750, Speaker B: Someone just created one off the back of the tweet, the first one, and then someone Tweeted at me with this. So this is something that someone's already created. Just to finish off, let me just go back to the final slide. If we were to kind of what's next to this, if we kind of built this out going forward, support different media types, more L, two S, I want to explore them all and then potentially integrating with Marketplaces and creators and so on. So that's it. That's a demo. So thank you to Kartik and the ETH Global team and everyone for listening and scaling for the win.
00:21:29.760 - 00:21:42.432, Speaker A: Thank you so much, Kevin. That was awesome. And we'll do our last demo for this group, and that is NFT puzle thing. And I'm sure we'll get a flood of questions coming in from everybody here. You're ready?
00:21:42.566 - 00:22:13.752, Speaker B: My screen cool. So hey, guys. My name is Hardik. I'm from team NFT puzzle thing. So we're a team of three college students spread across Canada and India, and we built a proof of work NFT based jigsaw puzzle game. So the goal of the game is that players are competing to solve one of one NFT puzzles. And the way they do this is you have to buy loot boxes, which will give you random puzzle pieces.
00:22:13.752 - 00:22:47.828, Speaker B: You can swap those pieces with other players through our NFT Marketplace or through OpenSea if you want. And the goal is to be the first one to win that puzzle. So currently we have a vitalik collection drop going on. There's a limited number of vitalik puzzles going on, and let's see how it works. So if I head over to loot boxes, the first thing I want to do is buy a loot box. And there we go. So we generate randomness with chain link VRF for the pieces that are contained within each loot box.
00:22:47.828 - 00:23:28.880, Speaker B: And once the purchase goes through, it will show up in the loot boxes that you currently own. So I'm going to hit open, and it's going to tell me the ten pieces that I received from this box. So this can take a little moment. In the meantime, once you receive these tokens oh, there we go. Actually, so we received these ten puzzle pieces from this loot box, and once I've received it, what I can do is I can head over to the Marketplace. There's a few different listings on the Marketplace right now. I can also go on Add Listing and select the pieces that I want to swap for some other piece that I want to receive, and click on Add listings.
00:23:28.880 - 00:24:03.890, Speaker B: And I can also go to my listings, select a few of these if I want to delete them. For example, I've already got this piece, so I want to delete the other ones. And I can see my swap history for what I've bought and sold in the past. So if I head over to my pieces now, actually, I have it here. So if I head over to my pieces now, it's going to show me all the pieces I currently own and the expired pieces, which means the puzle for these pieces has already ended and somebody already claimed this NFT. So I have a bunch of different pieces. I unboxed the entire.
00:24:03.890 - 00:24:33.560, Speaker B: So let's head over to puzzles now. So these are the four puzzles that are active right now. So if you go to OG Vitalik and I solved most of the puzzle earlier, you have this one last piece. I drag and drop it in place. I do the reCAPTCHA to prevent bots from cheating at the game, and I hit Verify, and there we go. Verify successful. I win the puzzle.
00:24:33.560 - 00:24:57.952, Speaker B: So on my winnings tab, I have an unclaimed prize that I can claim to receive the actual NFT. I hit claim, confirm. And while this gets mined, this is a claimed NFT I was testing with earlier. So once there we go. Successfully claimed, and I can view it on OpenSea if I want. So it takes a couple of minutes to sync. So I'm just going to show the old one.
00:24:57.952 - 00:25:27.192, Speaker B: There we go. And yeah, we're live on Polygon Main net right now. And for the first 30 minutes, we're giving away free matic to every person who goes to Nftpuzzlething.com right now to play our game. So it's only valid for 30 minutes. So check us out and join our discord if you have any questions or to provide us feedback. Yeah, really excited to have you play the game.
00:25:27.192 - 00:25:40.892, Speaker B: And just one last thing. So OG Vitalik got replaced by Chad Vitalik now. So we have five puzzles left. Go and claim them as fast as you can. Thank you. Oh, actually, sorry. One more thing.
00:25:40.892 - 00:26:01.750, Speaker B: For future plans, we're going to be partnering with some artists to do future collection drops. So once the Vitalik collection is over, we're going to be partnering with artists to create other puzzles. And we're going to be dropping these collections usually once a week or every two weeks. Depends on how long it takes for people to claim them. But yeah, that's the project. Thank you.
00:26:03.560 - 00:26:27.132, Speaker A: Amazing. Well, thank you so much. And with that, I would like to ask all other two teams to turn their cameras on. We'll kind of jump into A-Q-A here, and I'll kind of start off by just making an observation, and then I'll let all of our judges sort of go in. I just realized that all three of these are live on mainnet. They're not experiments. You can check out the website.
00:26:27.132 - 00:26:46.310, Speaker A: You can play this right now. And to me, this is amazing. It's not like a dream. It's here. Scalable, high frequency solutions are already live. So with that in mind, I'll see what comments and questions we have from our judges. Anybody can jump in.
00:26:46.310 - 00:26:50.420, Speaker A: Can I go for it? You can directly.
00:26:51.240 - 00:26:57.520, Speaker B: So, great projects. I have two questions. To Kangaroo. To the kangaroo guys.
00:26:57.690 - 00:26:58.120, Speaker A: Hi.
00:26:58.190 - 00:27:53.732, Speaker B: Yeah, so I'm kind of curious if you have in mind any other applications accept payments to run on Discord if that's something that you've been thinking about. Yeah, we're definitely interested in deploying some interfaces to some popular DApps because we do use real ZK Sync wallets in the back end. So it could definitely support that if we wanted to do some integrations with popular DApps. Very cool. The other thing that I wanted to know is if you had in mind anything about security, because obviously when you interact with wallets, most of the time, there is something about identifying the user. Is this something that you've been thinking about? Yeah. So right now, all the security is done through Discord.
00:27:53.732 - 00:28:21.250, Speaker B: Unfortunately, Discord is obviously a centralized platform, so all of your wallets are sort of accessed in a centralized way. We're definitely investigating solutions to make that ideally a little bit more like user custodial, but we're looking into it for sure. But don't put too much funds in a centralized platform like Discord if you're not sure about it. Thank you.
00:28:22.740 - 00:28:36.340, Speaker A: I just want to make a quick comment to Will and Justin. The live stream can't see you because your cameras are off, so if you have the ability to turn them on, that'll be awesome. And while we figure that out and I'll let anybody else ask any other questions or comments.
00:28:40.940 - 00:28:41.816, Speaker C: Can I go?
00:28:41.918 - 00:28:47.096, Speaker A: Yes, absolutely. Mute yourself and start talking. There's no need to turn my turn.
00:28:47.198 - 00:29:26.150, Speaker C: I'm just trying to be like just like mindful of the other judges, but I will just go. So congratulations. I really enjoyed all the demos. It's very fantastic to see and be with the hackers. So, first of all, Kangaroo, like, we started with the Kangaroo. I lead the validator program at scale, and we always just try to incentivize the community and we always use Discord I'm on Discord. I think it's a cool idea and just to just incentivize in a very easy way on Discord so that we can just send the incentivization to the community members.
00:29:26.150 - 00:29:29.370, Speaker C: My question will be is that.
00:29:31.340 - 00:29:31.752, Speaker B: You.
00:29:31.806 - 00:29:36.600, Speaker C: Said that it's less fees. How did you make it less fees?
00:29:38.780 - 00:29:59.600, Speaker B: Yeah, for sure. Instead of using a regular ethereum wallet, we're using ZK Sync. So ZK Sync is one of the layer two networks at this hackathon, and it uses zero knowledge proofs to, I guess, consolidate blocks of transactions together. So it's a lot cheaper.
00:30:00.100 - 00:30:02.704, Speaker C: Awesome. Can you add scale as well?
00:30:02.902 - 00:30:03.650, Speaker B: Sure.
00:30:06.360 - 00:30:27.192, Speaker C: It's awesome. So my other question thank you, Kangaroo team. It's very nice to see the demo. The other one is Flaunt and NFT puzzle. They're also our winners as well at scale. It was so fun to see them. Our team really liked your guys solution, so I will go with the Flamp first.
00:30:27.192 - 00:30:39.740, Speaker C: And you are just having so much fun. What was the best thing that you worked on it's. Like, it's such a fun project. Did you have fun? Did you learn something new? I'm just very curious.
00:30:40.400 - 00:31:06.820, Speaker B: Yeah, I had a bunch of fun. I think I made it more fun. I was more serious when I started with this as a hack and probably more like, yeah, let's just have more fun as we go. And that's what I think I love about the space as well, is everyone's kind of laid back and it's so many things. Yeah, and I learned a bunch. I mean, my reason for participating was to dive into L two S, obviously. That's the whole point of the hackathon.
00:31:06.820 - 00:31:21.870, Speaker B: And definitely did that. The only kind of regret I had was I wanted to kind of go deeper on as many as I could and obviously one can't do all the things right, so just landed on a couple, but yeah, no, it's been great.
00:31:22.960 - 00:31:52.100, Speaker C: Yeah, you can see it. I will definitely just send it to my friends and play with super fun. And the last one is the NFT puzzle. That's our winners as well. It's just like I'm very bummed that you edit Jack's, our CEO's picture, but not mine. But hopefully we can picture of me. It's very professionally made and you guys use so many solutions.
00:31:52.100 - 00:32:11.852, Speaker C: You use so many scaling solutions, like polygon scale, I think Arbitrum, I think you have chainlink, you have graph. How did you just make it work? Tested. And I put all this together and made it work for everything. And also, did you see any challenges while doing that?
00:32:11.986 - 00:32:57.716, Speaker B: Did we see any challenges? Is an understatement. It looks very smooth on the demo and in the video, but I can't even begin to explain everything. I haven't slept in the last three days. It's just last minute issues. But it was a really amazing hackathon overall. We have been going very hard to integrate all of these things, including at one point, we were running our own chainlink nodes. We were running our own graph nodes because things were slow or things were having some issues and it's just been a lot of crazy learnings and yeah, let's get chainlink on scale and we'll get it on scale.
00:32:57.716 - 00:32:58.616, Speaker B: Main net.
00:32:58.798 - 00:32:59.956, Speaker C: Let's do it.
00:33:00.078 - 00:33:01.710, Speaker D: We are working on it.
00:33:03.040 - 00:33:12.750, Speaker C: No, it's brilliant. We love it and thank you so much for working on it and just providing us fantastic solution. Thank you.
00:33:14.480 - 00:33:47.640, Speaker B: I really want to see a collab between these two NFT projects. I feel like they can really go hand in hand. Right? Like, Kevin, you've got the derivative works that are like different little pieces of the NFT that you're creating, and then NFT puzzle is assembling pieces of like, you guys should collab. I was just saying this yesterday. Yesterday when we were making the Vitalik collection with the laser eyes and everything, I was like, you know, we should just use Flaunt to do like, next collection with Flaunt. Yeah. Flaunt your puzzles.
00:33:47.640 - 00:34:29.030, Speaker B: I have a quick question for the Flaunt team. First of all, all three were awesome. So great work and congrats. I was curious, and you may have said this, so forgive me, but in terms of the integrations with Arbitrum and Scale, were you guys minting the NFTs directly on the L two S or did you guys use some sort of Bridging system directly on the L2? In this case and it was just me, by the way, that you said the team yeah, team via Gosh Taurus. So I use Taurus and some of their integration work and then directly on Coven Four, basically.
00:34:32.700 - 00:34:51.660, Speaker E: I have a question for NFT puzzle thing. I'm curious how you guys handled all the little pieces. Are they all NFTs and then are you burning all them and then doing another one? Or is it sort of there's a new I know there's a new ERC standard for NFTs being able to hold child NFT.
00:34:52.240 - 00:35:26.920, Speaker B: Yeah, we didn't use that. All the pieces are 720 Ones themselves. The main goal for having them be 720 Ones was for easier trading on the marketplace because our marketplace actually just swaps NFTs between players. And one of our immediate goals after this hackathon is to add bundled swaps, like trading like two to one or like five to one for more valuable pieces. For whatever reason. Currently we only support one to one NFT swaps. A side effect is also you can trade these pieces directly on Openc.
00:35:26.920 - 00:35:38.910, Speaker B: Some of these expired pieces might end up having secondary value for maybe if they're one of the first drops in the collection. So even after the puzzle is finished, maybe some of these end up retaining some value.
00:35:43.930 - 00:36:02.560, Speaker A: I want really a question from our live chat audience for Kangaroo. And the question is it's more of actually a suggestion for feature. It's a feature request. People would like to see DNS integration for discord handles because that would just make everything a lot easier. So I don't know if that's on your roadmap, but seems like it'll be a really cool thing to.
00:36:05.010 - 00:36:12.020, Speaker B: Yeah, yeah, for sure. We're definitely open to feature requests. I can add that as an issue on our GitHub page right now.
00:36:12.630 - 00:36:37.160, Speaker A: This is turning into a BD meeting. This is great. That's awesome. So if there's any other questions, please feel free to ask away. If not, we can check out the rest of the demos. So I'll give everybody one last call on any comments or questions. Looks like we are all set.
00:36:37.160 - 00:37:06.094, Speaker A: Well, kangaroo flaunt and NFT puzle thing. Congrats again for being the first three to demo and being our finalist. You are welcome to either hang out here or follow us on Ecglobal TV and watch the rest of the stream. We'll be announcing everything closer to the end in terms of a bit of prizes, so stay tuned for that. And with that, we are ready to move on to our next three demos. So the next category is protocols and infrastructure. So, we have three projects in this category.
00:37:06.094 - 00:37:23.800, Speaker A: We have Zenith ray tracing, and nextfill, we'll kind of kick us off with the demo for Zenith. And then we'll have the other two come in, and we'll follow the same format with three back to back demos and three group Q A. So I'll have let Ben, Matt, and Ed kick us off with the Zenith demo.
00:37:33.470 - 00:37:57.940, Speaker B: Okay, awesome. Hopefully you guys can hear me now and also see my screen. Yes. Great. So, introducing Zenith, your gasless gateway to L2. My co conspirators were Matt Solomon, who built the Flashbots integration, ed Missourik, who built the front end, and myself, Bendy Francesco, who wrote the smart contracts. We're all engineers at Scopelift, a crypto and Web Three focused dev shop.
00:37:57.940 - 00:38:44.770, Speaker B: We built Zenith, your gasless gateway to layer two. Zenith lets you move your tokens to any layer two without spending your precious ETH on gas. It leverages Flashbots to get your layer two entry transaction mined for zero gas. And in the background, it swaps some of those tokens on uniswap to compensate the miner. Now, Zenith is compatible with any network that lets you bridge ERC, 20 tokens up to layer two via some kind of main net contract call, which turns out to be most of the networks. So, how does it work? Well, as I mentioned, it uses Flashbots, and if you're not familiar with Flashbots, it's Flashbots. It's a system that allows you to send a bundle of transactions directly to miners, who then include it in one of their blocks for zero gas.
00:38:44.770 - 00:39:39.282, Speaker B: Now, one of the transactions that you include must pay some Ether to the miners as compensation for including your transactions, since they're not getting their usual gas fees. This system is usually used by individuals who are trying to avoid front running attacks if they have a valuable transaction that could be visible in the mempool. Zenith, though, uses Flashbots for a different reason, and that's to provide users with a better experience. By pairing your L2 entry transaction with a swap and bribe to the minor, zenith lets you move to L2 without having to use or even to acquire Ether to get your L One tokens onto L2. So this is useful for a number of things, including things like easier onboarding. Let's see a quick demo of how Zenith looks and works today. So, here is Zenith as it stands today.
00:39:39.282 - 00:40:29.662, Speaker B: We'll take a look first at the gasless L2 entry, which is what we were just discussing and pretty straightforward. You can choose the token that you're going to use, choose the network that you want to enter, the amount of the token that you want to send, and the fee that you're going to swap and bribe to the miner. And we just have some default values here that we've been using for testing and demoing now I want to show you something else, which is this gasless token transfer. This is something we realized we could also build with Zenith's capabilities. Again, you can choose your token, but this time you just pick a recipient and the amount of the token that you would like to send and the fee that you would like to pay with the token. And then it will allow you to send your tokens to a user without spending any ETH on Gas. Just for the sake of giving you a sense of the experience, I'll fire one of these transactions off on Gurley and you'll see that I'm being asked to sign these messages in MetaMask.
00:40:29.662 - 00:41:12.194, Speaker B: It's giving us this warning because right now MetaMask does not support the ETH sign transaction RPC call. And so we have to use a slightly hackier method to get the signatures that we need and then send them over to our proxy relayer software. We're hoping that MetaMask will support this in the future and provide a better experience. So those have been sent off to Flashbots and they probably won't be mined before we get to see them. So I'm going to go ahead and show you a transaction that we did mine on Mainnet or did get mined on Mainnet a few days ago. So here we're moving one Dai into ZKsync. So from Mainnet to ZKsync, and as you can see, we're spending zero of our Ether on the transaction to do so.
00:41:12.194 - 00:42:03.278, Speaker B: So this is a real transaction on Mainnet that was sent with our software and allowed us to enter with tokens onto ZKsync. So what's going on with Zenith? Well, as you just saw, it does work on Mainnet. As I mentioned, that transaction was a real one that moved real Dai onto ZKsync without using Ether. In the next one to two weeks, we're hoping to productionize the proxy relayer software, clean up the front end, and just generally get the software ready and available for public use. But there's actually more here because as I've also alluded to, we kind of realized that Zenith is not just useful for moving tokens to layer two without touching your Ether. Zenith really lets you do anything with your tokens without touching your Ether. And as you saw, we've already built out the functionality for gasless token transfers.
00:42:03.278 - 00:42:40.382, Speaker B: And over the coming days and weeks, we think that we can build a lot of other valuable DeFi use cases. We think that there are broader applications for Zenith in the ecosystem. We already mentioned easy onboarding from Fiat using Stablecoins, but it also enables things like DeFi investing without triggering taxable events on your Ether holdings. It could also be used, for example, to rescue stuck funds after your private keys have been compromised in some way. And really, anything that you could think of building with generalized gasless account abstraction can be built with Zenith because that's really what we're providing here. So that's Zenith we're excited about it. We hope you are too.
00:42:40.382 - 00:42:44.720, Speaker B: And thank you to everyone at ETH Global for yet another great hackathon experience.
00:42:48.450 - 00:43:40.870, Speaker A: Thank you, ben and team, this was awesome. This blew my mind when I saw it first a couple of days ago. So I'm sure there's going to be tons of questions here, but I'll let the next team present and that is ray tracing. So we're just in the middle of promoting everybody from this team onto our zoom. And as teams move over, we'll let them present the demo so we can see everything. But I think thomas, you're muted. There we go.
00:43:40.870 - 00:44:37.380, Speaker A: Yeah. Hi, sorry. So the if two me view of liquid staking from the team ray tracing. So the team was composed from three different teams of Flashbots, Nethermind and Lido. So the five people on the team are Artem from Lido, P two P, edgar from Flashbots, jackie from Nethermind, wukash from Nethermind and myself from Flashbots and Nethermind. The team is truly global, coming from Poland, Russia, UK, US, combining different time zones when working together. So the main thing about the mev in Ethereum Two is that it brings the opportunity for validators to greatly increase the annual revenue.
00:44:37.380 - 00:45:57.840, Speaker A: So early simulations of how mev would work in Ethereum Two post merge show that the validators can get 70% increased revenue. And we can see here the curve in orange that shows, depending on the number of validators, how much more revenue they can get if they enable the minor extractable value. So they arbitrage money to flow to validators if they accept the network. And what we have done is we suggested a solution based on the existing flashboard solution with the Mev searchers that are capable of finding those arbitrage opportunities with mev on the network and combine the bundles of transactions, send them over the relay to the Ethereum One client the same way as it is now on the network. And then whenever Ethereum Two client for the consensus layer in the merge post proof of stake, ethereum asks for the block to be constructed. That block will include transactions that will pay to the smart contract that will later redistribute this tip from Flashbots between the Ethereum One node operator, a staking pool and validators. And that part is handled by the Lido liquid staking distribution.
00:45:57.840 - 00:46:36.040, Speaker A: And what will be the next steps is providing any decentralized agreements between the validator stakers. Because now, for simplicity, we're showing just one third of the split going to each participant. And also we'll think of gas optimizations. Now, each block would require around 150,000 gas to distribute the revenue. And let me show you the demo, which is infrastructure demo. So it includes lots of console output. And what we see here is the running Nethermind, Ethereum One node.
00:46:36.040 - 00:47:42.304, Speaker A: And it's listening to the messages coming from Ethereum Two node. And just to explain you quickly what happens here, the Ethereum One node receives messages that ask for the block assembly from the TECO node in Ethereum Two. Then Nanomind builds the block using the flashbots delivered mev bundles and it adds that block to the consensus. And then this is being proposed to the network voted on and if it's included in the canonical chain then practically the Lid Presmart contract and the Lido Smart contract distribute those payments. And let's see test truffle transactions that show you the operations of such mev distribution. So what we're doing here, we first set something that has to be set once which means that the coinbase on Ethereum One says where the money should go whenever it receives the payments. And these are these two addresses set.
00:47:42.304 - 00:48:45.750, Speaker A: Then mev bundle comes and includes 0.1. If this is paid twice actually and goes to the Light Preschart contract that Light preschart contract then makes the payment to the coinbase and staking pool and the staking pool itself at the end distributes that payment. That was staking pool, receives the payment and distributes it later to the node operators of Ethereum Two nodes and the stakers on the liquid staking network. And you see at the end there is a coinbase and all the staked eve tokens that were distributed for the stakers it's distributed via burning of tokens for the node operators. It's an iteration over the pool operators, a short list and all of that was going on the live Ethereum One, ethereum Two network. Yeah, this is all fine, actually. And thank you so much.
00:48:45.750 - 00:49:14.092, Speaker A: It's amazing. Yeah, I just want to, I guess point out that scaling is just not all too. You can actually scale the main net here too. So congrats on her really cool demo. And we'll have Xfil demo next. So David, whenever you're ready we'll have you present and then we can do a group Q A. All right? Hey.
00:49:14.146 - 00:49:19.650, Speaker B: All or xvil. Let me just set up here. Cool.
00:49:21.140 - 00:49:21.616, Speaker A: All right.
00:49:21.638 - 00:49:23.244, Speaker F: Hey everyone. I'm David Goldberg.
00:49:23.372 - 00:49:31.510, Speaker B: And I'm Mark. And we're located in the east coast. US. And we've built Xfil which is a protocol and SDK for instant withdrawals from layer two.
00:49:32.600 - 00:50:20.624, Speaker F: So you can sort of think about Xfil as you would the feature on Venmo for instant withdrawals. So on Venmo you can pay a fee and get your money available instantly or you can wait a few days to do ACH transfer. And now with the rollout of optimistic roll ups there's a huge push by different D Five protocols to get people over to layer two solutions like arbitram and optimism. However, there's this seven to ten day withdrawal period which is a huge hurdle. And we've done some market research, we've talked to a lot of people who have had the chance to go over to l Two. And it seems like this is one of the biggest friction points, which is I want to have confidence that I can quickly get my money out of l Two back to l One if I need to. A couple of examples would be I want to take some profits, get into my bank account, or maybe I want to withdraw.
00:50:20.624 - 00:50:54.296, Speaker F: But while that seven to ten day window is happening, maybe the market tanks, right? So there's a lot of friction there. And so we wanted to try to resolve that. There's three main parties that are stakeholders in our protocol. So one are the withdrawers. So people who are on L two trying to withdraw from L two and go back to L One. Two are the liquidity providers. So these are people who are coming in to provide liquidity in exchange for fees that are basically they provide liquidity to a pool and then those fees are split by the liquidity providers.
00:50:54.296 - 00:51:03.392, Speaker F: And then third is the DAP protocols themselves who want to build fast withdrawals into their DAPs that they have running on L two. So I'll flip it over to Mark to talk about how it works.
00:51:03.526 - 00:51:43.256, Speaker B: Yeah, so for this hackathon, you could think of three main components that we've built. We've built the widget which is kind of like the I'll go over it next. It's kind of like the white labeled kind of JavaScript widget that you drop into the front end. So DAP developers can easily put that into their DApps and kind of like Wallet Connect where you have consistent experience across apps. And then the liquidity provider DAP, which is obviously the interface where people can provide liquidity to the pool, the protocols, the smart contracts, the bridge communication, the Oracle and stuff like that. So we'll dive right in. So here is the widget on the left side, simple JavaScript react widget.
00:51:43.256 - 00:52:33.168, Speaker B: It comes with like a front end. So go through a little demo here. You can basically select your token that you want to withdrew draw out of layer two and you would select your recipient address. You would calculate a fee and the amount of that token that you would receive on layer one. So you'd sign this transaction here and if you see on the right side here we have the flow. This is the layer two x filler who's interacting with the widget, basically sends a communication to the bridge, says, okay, here's a fast withdrawals happening, communicates to layer one, which then communicates to the Oracle. Once the Oracle verifies that it's a valid withdrawal and checks the state of the layer two chain, it then disperses the funds on layer one for the person who x filled out of layer one minus the fee that gets split up amongst the liquidity provider and the proxy contract here.
00:52:33.168 - 00:53:12.092, Speaker B: And then obviously the liquidity provider gets the l two asset as well. So if we go through a quick truffle test here, this is just a simple example of the Oracle. We've used Teller Oracles here and they're basically verifying the state of the l two chain. And this might run a little bit, but it's basically a simple check of the state and the withdrawal ID to make sure it's a valid withdrawal. So then you could skip that seven to ten day waiting period, assuming you trust the Oracle. And then so here's an example of the liquidity staking interface. This is a sample interface right now.
00:53:12.092 - 00:53:38.340, Speaker B: It's a flat fee for the hackathon. So you get like a 5% fee of the liquidity of the asset that's been X filled, split amongst your share of the pool. But going forward, we'd probably make this a bit more customizable where you could actually set your fees kind of like a limit order book type situation. Obviously, you can deposit and withdraw, and when you withdraw, you can take all your funds out of the pool along with your accrued fees.
00:53:41.000 - 00:54:20.812, Speaker F: Yeah. So as far as next steps goes and what we would work on in the future, so we want to turn into a marketplace kind of as Mark alluded to so makers like the liquidity providers can know, here's the fees I'm willing to accept for providing this instant with liquidity. And then Takers, also known as X fillers or withdrawals, can say, here's what I'm willing to pay to get my funds back to l One. So kind of market forces would dictate. What are people willing to pay and where should the fees be? The other piece that's interesting is similar to like one inch. You could think about what's the best path forward to get my funds back to l One. So that's an interesting thing we'd like to explore and then, yeah, we definitely believe in decentralized governance.
00:54:20.812 - 00:54:58.604, Speaker F: So we think building a community is really powerful and one of the best ways to do that is through a governance token. So we'd probably have something that people could use for those types of things, maybe earn additional yield for providing liquidity. And then we do see this being bigger than just l Two to l One. We see a similar model working basically cross chain. So you could go from to and from any chain with a similar model. But we think L2 to l One is the best use case to start with and focus on just because there's, like I mentioned earlier, desperate pain for people who are hesitant to go to l Two just because there's some questions around withdrawing and how easy will it be. That's it.
00:54:58.642 - 00:55:02.610, Speaker B: You can start on GitHub and that's it for the demo.
00:55:06.180 - 00:55:24.150, Speaker A: Thank you, Mark. And David. So at this point, I'd like to ask all three teams to turn their cameras on. We'll kind of jump into our Q and a lot of interesting themes and topics here, from mev to instant withdrawals to ETH Two. So who wants to go first?
00:55:26.040 - 00:55:43.228, Speaker B: I have another collab request. I want Xfil and Zenith to sync up so that the fast withdrawals you get paid on l One also sends a fee directly to the miner. The collabs are too strong in this grouping. All right, let's make it happen.
00:55:43.394 - 00:55:44.110, Speaker A: Yeah.
00:55:47.920 - 00:56:10.230, Speaker C: I think I will just ask to Xvil, because I think that's very interesting and a couple things I didn't understand, but I think I kind of understood, but I just want to just get the information. So how often can you do the transfers from L2 to l One?
00:56:11.560 - 00:56:41.170, Speaker B: Well, it depends, really, on the Oracle. So right now we're using Teller Oracles. I think it's like less than ten minutes, probably even less than that now. I think you're basically waiting for that state to be validated from the layer two chain, and then basically when that happens, the transaction is sent and the liquidity is mined or dispersed, maybe ten minutes or less.
00:56:41.700 - 00:57:10.730, Speaker C: Got it. It's very cool. And then, for instance, how do you handle is that the verify part of your solution? How do you verify? So, for instance, I'm trying to transfer my funds, and it's like 100 funds, and at the same time, it's like, I'm transferring to l One from L2, and then I do not have enough funds. For instance, how do you handle not enough funds? Or do you have any plan for that?
00:57:13.420 - 00:57:42.160, Speaker B: Okay, yeah, so basically our liquidity pool is a shared pool of a certain amount of liquidity. So basically you have to check that balance on the pool to make sure you're not trying to withdraw more than is available in the pool. So I think there's a limit check there just to make sure you're not going over a certain percentage. I'm sure there's a ratio where it'll fluctuate the pool if you withdraw too much, but yeah, we have to find that sweet spot.
00:57:43.300 - 00:57:58.570, Speaker C: Very cool. Yeah, very good. And I definitely agree with it, Ben. I definitely see a collaboration with two teams there. And yeah, I have that. And I will let others.
00:58:02.710 - 00:58:05.774, Speaker B: I have actually a couple of go ahead, Angela.
00:58:05.902 - 00:58:34.060, Speaker E: Okay, I have a question for Dennis. I'm really excited to see a lot of DeFi apps, for example, making a swap on Uniswap. You don't need ETH to do that. And there's so many DFI apps, and I'm wondering if you guys have a plan for scaling horizontally that way, because I know that you built custom ones for the onboard to L2, and then the token transfer, but can't really build it for every single one.
00:58:36.430 - 00:59:12.322, Speaker B: Yeah. So, Matt, if you have any thoughts, feel free to jump in. So I would say the easiest road is for us to start assembling custom transaction bundles. But like you said, that doesn't really scale across the immense amount of different applications that exist. So I think the Holy Grail would be like some kind of system that allows you to sort of assemble contract calls yourself the same way that you would just like interacting with the contracts directly. Obviously, that would be like a bigger lift, technically. And also, I think the biggest lift there is actually the UX and how to do that well in a way that users are going to be successful in assembling those transactions.
00:59:12.322 - 00:59:38.100, Speaker B: So I think short term it's going to be like custom integrations. Long term, tackling that challenge would be interesting. Yeah. And just in terms of that long term solution, you could look at things like Pool Together has like a proposal creator for governance where you can kind of go transaction by transaction and they'll help you pick out your contract, pick out the inputs, et cetera. I think Nosisafe has something similar, so you can imagine something like that for generalizing it.
00:59:40.070 - 00:59:42.930, Speaker E: Thank you. I'm really excited on all three projects.
00:59:50.310 - 00:59:51.186, Speaker A: Go for it.
00:59:51.288 - 01:00:23.006, Speaker B: I was just going to add something on top of that. For Zenith, it seems like I was thinking maybe like a more low hanging use case to provide an ICOx for Is. Just like consolidating multiple accounts into one or breaking up and even doing some sort of UTXO esque privacy sort of thing. Is that something you guys have thought about? Honestly, no, it's not. But now that you say it, it's a great idea. And I think it is a good example of like we think there's a lot of general use case for something like this. Yeah.
01:00:23.006 - 01:01:17.742, Speaker B: So for Venice, I just wanted to comment. It's not really a question, but the way I feel it, or at least the way I use layer two applications from time to time, the one that do exist, it's often the case that an application uses a very specific ERC 20 and then you want to do something before layer one, before you onboard to layer two. And it's often like something that creates a bad UX. For example, we have dYdX, it's an application that runs on top of Starkx and it only uses USDC. And most people well, at least I'm not the kind of users that hold tons of USDC and it creates kind of mix because I have to take my Es, transfer it to USDC, keep some It for gas, and then send it to the layer two. And I think the layer two experiences already need help. So that's the kind of things that I could see like quick integration for your app already today.
01:01:17.742 - 01:01:55.660, Speaker B: I think that's something could be very useful. It's not a lot of work probably to integrate. That also the question for the X field or maybe a suggestion or let's see if it works. Did you guys were also considering like, well, Faster Draw is a very specific use case for transaction from layer two to layer one. But I could imagine like, I want to do something with my funds on layer two directly on layer one, and then maybe I want to get them back to layer two through a deposit code or something like that. So is this something that you consider to expand your application in the future?
01:01:56.670 - 01:02:13.930, Speaker F: Yeah, absolutely. So maybe a good analogy I could use here is, if you think in traditional finance of the electronic communications network, it's like the ECN. When you put in an order, even especially if it's extended hours, it kind of figures out the right market maker to fulfill that order.
01:02:14.020 - 01:02:14.418, Speaker B: Right?
01:02:14.504 - 01:02:39.946, Speaker F: And so if you think about applying this to the Crypto World, you have all these different chains, right? You have l two s to l ones. In Ethereum World. You have other chains like finance. Smart chain. You have like, Salana, things like that. If there's liquidity that we can get on one chain as part of our protocol, then there's no reason why the same fundamental system wouldn't apply and work. So, in your case, you could hop from L2 to L One.
01:02:39.946 - 01:02:58.438, Speaker F: L one to l two. Whether you're on optimism on L2 and then you want to go to Arbitrum or a different chain, or you want to go on something with ZK, you could seemingly hop around. So we definitely would love to tackle.
01:02:58.474 - 01:03:04.660, Speaker B: Those types of use cases as well. Very nice. Thank you.
01:03:08.230 - 01:03:10.340, Speaker C: Can I go again and ask a question?
01:03:10.810 - 01:03:11.654, Speaker A: Absolutely.
01:03:11.852 - 01:03:39.870, Speaker C: Okay. My question is for the ray tracing. So there are like two things over there. I think it's complicated to solve. I think it's very brilliant. The only thing is, I'm very curious is that who is defining these shares and what does validate? Of course, I hear from the Validators that the profit is not very well. And I think this is great.
01:03:39.870 - 01:04:05.350, Speaker C: I think they will be very happy to have that split. But who is defining this different shares? Who is defining the economics? That's my one question. And also, I saw you guys'page you guys have some ray tracing, as in the mirrors. And what is that, the different types of mirrors in your explanation? I'm just curious about the inspiration. Right? How is it related?
01:04:06.970 - 01:04:44.146, Speaker A: Yeah, sure. So maybe I started with a second one. So how is it related? The general ethereum one, ethereum two. The Merge Ryan Is project which was part of the ethereum global scaling hackathon, was about a very fragile devnets of ethereum one. Ethereum Two with lots of glass, potentially shattered. And even the first testnet was called sticklaw, which means glass. And when you think about mev, it's just finding these opportunities of the arbitrage in a huge data set of all the DeFi elements combined together.
01:04:44.146 - 01:06:10.750, Speaker A: So when you think about all of this race of light in the Rayonism idea of art and finding something between these shattered glass pieces, that's where the tray tracing name comes from, and that's how you explain it. As for how the shares are defined, so we see this project as a great canvas for experimentation and further research because obviously we know that Ethereum Two comes maybe like the earliest in Q Four this year, and possibly in Q One, 2022. And we already have the plugins and the. System to validate how this mev split can work. And it's very important because it will show us dynamics between ethereum one and ethereum two nodes, whether necessarily we'll see the operators running both nodes or maybe this can be split. So can in the future, for example, infuria be independent mev provider that would be selected by some validator operator to work with or do they have to be one entity? And if they are separate, how do they do the handshake of the split? Can it be in a decentralized way? And who is the strongest player to actually attract the biggest part, the biggest chunk of mev? So we think that this research over the next few months might be very interesting for the general economics of ethereum two post merge.
01:06:11.730 - 01:06:15.360, Speaker C: Very cool. Thank you very much for the answer. It's very cool.
01:06:17.810 - 01:06:25.570, Speaker A: All right, any other final questions for any of our teams? Going once, going twice.
01:06:27.030 - 01:06:27.842, Speaker B: All right, great.
01:06:27.896 - 01:07:14.670, Speaker A: Well, I want to thank all three of you for presenting and congrats again for really doing all these amazing and really interesting and complex things in the past three weeks. So I hope we get to use some of them directly on mainnet and especially looking forward to Zenith and doing more transactions with zero gas. Perfect. So with that, we are ready for our third group. And right after the third group we'll take a quick break and announce all of our winners for the sponsor prizes. So for all of you who are waiting on that, stay tuned for a little longer and we'll get there very soon. So the third category is another set of applications and apps that are specially and uniquely enabled by L two platforms.
01:07:14.670 - 01:07:48.680, Speaker A: So we have three projects here, alexandria, Lab Rats and Devolution. They're working on interesting things that become way more accessible and useful and cheaper and just great with what the L two underlying systems they're using offer. So I will have them come on and really tell you about what they've been building. So first up we have Alexandria and I'll let the Alexandria team showcase their demo. Hey guys.
01:07:49.210 - 01:08:53.200, Speaker B: So we are very happy and very proud to be here and to present our projects alexandria. So we are a team of three Frenchmen representing the future of France and pardon of French for this presentation, but we had Toma on the full stack development side and the Kero side we had Wasim on the UI UX and web app development. I was on the project management and the ID making. And we are working for our blockchain partner, a KPMG France company. So what is Alexandria? So in one sentence it's proving your identity features without revving more than you actually should. So if you have to access, let's say, an age restricted service, if you want to do it today, you have to prove your identity and for example, send your passport or your identity card. And by doing this you are actually revealing more information about yourself than you actually should.
01:08:53.200 - 01:09:00.320, Speaker B: So we tried to resolve this problem and to show you this. Toma, take it away.
01:09:02.450 - 01:09:28.790, Speaker G: Yes. Hello everyone. So this is Alexandria, and we'll first start by login with stories. We decided to use tourists because it's really easy. You just need to have a Google account and help you have a wallet and everything is set up. So the first time you access the application, you will have to provide some information. It's a standard Kawasi process, and we plan to work with a third party company to under this belt.
01:09:28.790 - 01:10:05.298, Speaker G: So here we have some data later. And as you can see, I have a disability. So right now, I'm going to submit my identity for the KYC verification and just wait for the validation. Basically, what's happening during this process is that I will be added to various registries based on my identity features. So here, for example, I have a disability and I will be added to the disabled person registry. So now I'm confirmed I can actually use Alexander. So that's perfect.
01:10:05.298 - 01:10:42.782, Speaker G: We have some services here and I can book a ten ticket. So perfect because I want to go to Marseille this weekend. So let's take this trend for example, okay, as you can see here, I can get some discounts based on some features. So, for example, my disability. But this one seems more interesting for me. So I will first try to cheat the system, but I will not be able to cheat because I'm not eligible for this discount. So that's too bad.
01:10:42.782 - 01:11:25.290, Speaker G: But let's take alleged discounts. This one. And what's happening right now, it's the Kero process. So when your identity has been verified with the KYC, the registries matching your identity features were updated with a specific encrypted secret that only you have access to. Right now, by claiming this discount, we are trying to prove that we actually know the key behind this encrypted secret. In other words, I am trying to prove that I'm able to decrypt my identity in this disabled person register. Okay? In order to do this, we are running Kero program with my secret key as an input.
01:11:25.290 - 01:12:14.240, Speaker G: So the Kero program looks like this. It's a very simple, very small part of it. But here I have two outputs, the identity proof here, which is basically a way to prove that I'm the one running the program. And we also have the registry hash here, which will be used in housemat contract to ensure we are using the correct registry and that I'm not trying to shit again. Okay? Finally, how smart contract will be able to use these outputs to retrieve a chaos fact that will state the correct execution of the program directly on the blockchain. And that's perfect because my proof is valid so I can get this discount and I have it, okay? So I can just pay and that's perfect.
01:12:17.330 - 01:12:55.894, Speaker B: So. Thank you, Toma. Hi, everyone. So, as future work for this application, we thought about having a real KYC service integration that would validate the identities and everything. And we want to obviously go mainnet and then implement real life services like the one you saw with the train tickets. You could imagine anything with age restricted services or missing flight insurance and things where you want to prove an identity feature without revealing more about your personal data. So, thank you everyone for your attention.
01:12:55.894 - 01:13:06.926, Speaker B: Thanks for this great hackathon, it was a nice experience. And of course, we are looking forward to your feedback and questions. Amazing.
01:13:07.028 - 01:13:20.420, Speaker A: Thank you so much, Alexandria. And we'll move on to our next demo and then we'll kind of get back to all teams with questions. So next up we have the Lab Rats. So, Josh and team, whenever you're ready, feel free to show us your demo.
01:13:25.530 - 01:13:34.438, Speaker B: Hey, guys. Everyone see that?
01:13:34.604 - 01:13:35.318, Speaker A: Yes.
01:13:35.484 - 01:13:52.358, Speaker B: Perfect. OK. Hey, guys. We are the lab rats. We're a team of five who are based in the UK and all work for Funfair Technologies. We've built a multiplayer trading simulation game running on the optimism chip chain. This is played completely on chain and paid out in real time using smart contracts.
01:13:52.358 - 01:14:24.600, Speaker B: Players try to predict where the price will go next by placing bets on the graph. All bets are placed in our Lab Rats native token. If the player wins, they get part of the prize pool shared with anyone else who had won as well. Our aim was to see if we could build affordable fair fully on chain games on a layer two solution. On reflection, it was very successful transaction, worked out over 120 times cheaper than layer one transactions. We used the noncustodial Fun Wallet to allow easy to understand UI for the user to log in. I will log into the Fun Wallet right now.
01:14:24.600 - 01:14:43.054, Speaker B: Once the player is authenticated, they can start placing bets. They get an integrated approval modal which will show that they're betting 100 Lab Rats tokens. Steve's going to talk about the game in more depth, so over to you, Steve.
01:14:43.182 - 01:15:11.626, Speaker A: Thank you very much, Josh. So, this is our Ratface game. Each round started automatically on chain by the server, so the game rounds will run one at a time. The players can place a single bet each round into one of the six regions shown on the screen. These bets are transferred as tokens into the game contract and current bets for all players are indicated on screen by icons and in player list. The game contract will process the results and as soon as the client receives the update, it will update the screen graph and show which players have guessed correctly. Updating player balances as needed.
01:15:11.626 - 01:15:16.638, Speaker A: Over to Danes. Explain a little bit more about the client. Hi, everyone.
01:15:16.804 - 01:15:20.606, Speaker B: We built a react app to host Labracs. Sorry.
01:15:20.788 - 01:15:22.602, Speaker A: We built a react app to host.
01:15:22.666 - 01:15:24.546, Speaker B: Ratrace and this is where all the.
01:15:24.568 - 01:15:27.780, Speaker A: Networking and client side blockchain interaction happens.
01:15:28.550 - 01:15:30.946, Speaker B: It's integrated with Fun Wallet which we.
01:15:30.968 - 01:15:33.570, Speaker A: Use as a JSON RPC provider for.
01:15:33.640 - 01:15:42.402, Speaker B: Calls to place new bets and read game events. The client is completely driven by contract.
01:15:42.466 - 01:15:46.630, Speaker A: Events, including new rounds, player bets and round results.
01:15:47.690 - 01:15:50.834, Speaker B: Bets are created with a transaction tail.
01:15:50.882 - 01:15:59.130, Speaker A: Token, so we add an integrated forcer to get funds into player accounts.
01:16:03.650 - 01:16:04.014, Speaker B: And.
01:16:04.052 - 01:16:05.486, Speaker A: To top up the player accounts when.
01:16:05.508 - 01:16:06.880, Speaker B: The balance runs low.
01:16:07.490 - 01:16:17.700, Speaker A: We also have a WebSocket connection to our server which allows us to get accurate graph data and display a live player count.
01:16:18.390 - 01:16:21.090, Speaker B: So over to Mark to talk about the server.
01:16:21.830 - 01:16:28.854, Speaker A: The server is a net core application deployed on a two node cluster on Linux. It provides the source of timing for.
01:16:28.892 - 01:16:34.806, Speaker B: Rounds and the random numbers that are used to determine game outcome. It runs in the background waiting for.
01:16:34.828 - 01:16:38.346, Speaker A: Players to come online, and when there are players it runs continuously in a.
01:16:38.368 - 01:16:41.750, Speaker B: Loop, issuing transactions to start new games.
01:16:41.910 - 01:16:43.766, Speaker A: Then another one to close the betting.
01:16:43.798 - 01:16:49.002, Speaker B: Stage for the game which prevents front runners and finally issuing the transaction which.
01:16:49.056 - 01:17:29.570, Speaker A: Ends the game and pays out any winnings. Events from a chain are used to move the service game state from one stage to another. Over to Steve who will talk about how the contract integrate works. Thanks Mark. On the blockchain the game's split into two contracts a manager which handles game status betting and payout and responds to round control signals from the server and the game contract which validates the bets and processes the actual game logic. The games run completely on chain with only the round timing and random seed provided by the server. Server sends a message to begin the round and in an event submitted to all the players, player bets are placed by sending tokens along with their chosen bet detail and the bets validated by the game contract.
01:17:29.570 - 01:17:49.710, Speaker A: Valid bets go into the pot, invalid bets are returned to the player. When the server sends a no more bets message, it ensures that there can be no front running of the result when the game seeds revealed. And finally the server sends the resolved game message. The rat race contract works out the results and transfers any winnings as needed via the game manager. That's the contract flow of activace. So back to Josh.
01:17:50.770 - 01:18:19.110, Speaker B: Thanks everyone for spending the time to watching our demo. So what's next for us? We're going to look at other ways that we can create fast, fair and cheap games that have the security guarantee of layer one. Overall we were extremely impressed with the speed of optimism. It really did feel just as fast as a bank transfer. We will definitely be watching development further for optimism. So thank you everyone and thanks for the time. Cheers.
01:18:20.810 - 01:18:34.320, Speaker A: Amazing. Thank you so much laborez for that game demo. And with that we have our last demo for this category and that is devolution so Veronica, whenever you're ready, feel free to share your screen.
01:18:36.930 - 01:19:09.146, Speaker D: Hi everyone. I'm Veronica and this is the Devolution team. We are a diverse global team from South Africa, Nigeria, France, the Netherlands and Canada. We are building devolution. One small step for a hackathon, one giant leap for decentralized governance. A Dao is many things, but at its core it's a tool for decentralized governance. Most projects require a Dao that can evolve with them from their initial launch with a single team multisig managing governance to a metropolis of engaged community.
01:19:09.146 - 01:19:55.350, Speaker D: This process is slow and requires a high level of flexibility. Right now, most Dow options available do not support this vital transition from centralized to decentralized. To determine how our project could have the greatest impact, we researched the current Dow landscape and identified the following key challenges most Dows are primarily financial management tools that exclusively reward financial investment. This sets back community building as there is no built in reputation, incentives or rewards for community contributions. Second, existing Dao smart contracts have very little flexibility. This makes it difficult for users to add features that meet their specific needs. It also creates a siloed ecosystem with practically no Dow to Dao interactions.
01:19:55.350 - 01:20:46.660, Speaker D: Thirdly, the high transaction costs on Ethereum have made it virtually impossible to execute government operations at scale. We took advantage of optimism's, low gas fees and sequential transaction processing to create highly modular extendable and a novel Dow design. Devolution also offers a tokenized identity solution, a universal reputation system and an accessible web3 user interface using Taurus open login. And now for the demo. For time's sake, we're not going to be using Taurus, but it is integrated. The first thing you need to do when joining the Devolution ecosystem is mint yourself an identity token. Sorry, I just clicked it twice.
01:20:46.660 - 01:21:29.968, Speaker D: This token will act as a pseudo anonymous Identifier for you and will own your reputation token. While the reputation token cannot be transferred from the identity token, the identity token itself is transferable. Here we can see a list of Dows that have been pre deployed. For ease of demonstration, joining a Dow links your identity token to the specific Dow you've joined. Once we've joined a Dao, we can see the various active proposals. Just need to give it a second to mine.
01:21:29.984 - 01:21:35.110, Speaker B: Of course. There we go.
01:21:36.760 - 01:22:26.228, Speaker D: Here we can see the active proposals. Proposals can be in two main states active and archived. Active proposals can still be voted on, whereas archived proposals were either voted in, voted down or expired before reaching the minimum consensus. Here we can see the minimum consensus requires at least five unique NFT IDs and 100 reputation points either for or against. Currently we only support binary voting, but later down the line, ideally we would like to support more versatile voting while that's mining. Here you can see your reputation balance. The reputation balance is across all Dows that have been deployed under lovely under the Devolution branch.
01:22:26.228 - 01:23:07.636, Speaker D: The governance tokens, however, are DAOs specific. The most novel feature of our project is its smart contracts. The novel design takes advantage of the sequential transaction execution to deploy a large smart contract ecosystem. The hub and spoke design allows for modules to be infinitely composable. These smart contracts are highly efficient, and none of them are in the double digits in kilobyte size. We did a lot of market research to ensure that our project really was filling a gap, specifically in terms of open extendability, which goes hand in hand with dao interoperability. We want to continue our project and would love to hear from you if you're interested.
01:23:07.636 - 01:23:25.080, Speaker D: Our future plans include a more generalized proposal execution system and off chain reputation distribution. Shout out to Team Kangaroo earlier. We would love to integrate with you guys. Thanks so much for hearing our presentation, and we are really grateful to be in the finals.
01:23:26.700 - 01:23:53.220, Speaker A: Amazing. Thank you so much. Devolution so at this point, I would like to ask all teams and judges to turn their cameras on, and we'll kind of jump into our Q-A-I also want to recognize quickly Kelvin, who has been hotswapped with Ben from Optimism, so he'll be taking over as our judge representative from Optimism. And with that, I'll let any one of you kick us off with any questions or comments.
01:23:59.790 - 01:24:43.500, Speaker B: Okay, I'll start. So I think there was like all three projects were amazing. So for Alexandria, we've been looking into the work that you've done in quite detail. I think that Thomas, Major Tom here, that you actually did magics. We were very impressed by the work that you've done. I don't think it's that simple to create an end to end system like you did there, and I'm very curious about your future plans there.
01:24:47.550 - 01:25:18.018, Speaker G: Hello. Thank you very much. We plan to explore, as wasim said, some opportunities. Like, we would like to see how it's possible to go main net with this, would like to see what kind of life application we can find. Yes, we are really excited about this project, and we would like to continue to see more things what we can do with this.
01:25:18.184 - 01:25:50.330, Speaker B: Thomas to elaborate further, we are very excited to be building on Kero. It's something that we have been looking for for quite some, and, uh, the Akathon was a great opportunity to do so. And yeah, it felt a bit complicated at first, but yeah, Toma did some magic, and we're really excited to be building on Kro on other use cases in the future. So we'll be happy to talk with you guys about it. Very nice.
01:25:50.400 - 01:26:16.180, Speaker C: Thanks. I'll go next if it's okay. Devolution hi, ladies. I see two ladies in the Devolution team. I just want to say first, you guys are gals are like inspiration. I just want to go and join that Catalan and build it. I think it's very nice to see your faces and I'm very, very happy.
01:26:16.550 - 01:26:20.660, Speaker D: There's actually three of us. Yeah, nice.
01:26:22.870 - 01:26:33.746, Speaker C: I'm just so inspired by this win because you guys are everywhere. Nigeria. South africa. France. US. Canada. Netherlands.
01:26:33.746 - 01:26:41.226, Speaker C: How did this team get together and how did you guys accomplish the work together and this amazing tool.
01:26:41.408 - 01:26:54.000, Speaker D: Yeah, so East Global does a lot to facilitate team building. So it's just kind of combing through the slides at the beginning of all the team members and finding a common stack in a kind of common time zone and then just going from there.
01:26:56.770 - 01:27:11.650, Speaker C: It's very cool. Yeah. My other question would be I just write it here. Did you have any issues with the scaling solutions that you picked or just, like, any challenges?
01:27:12.070 - 01:27:36.620, Speaker D: Yeah, so we picked optimism, which has a lower bytecode limit for smart contracts than standard Ethereum. But I actually quite enjoyed the design challenge of designing a smart contract ecosystem that actually plays to that as a strength rather than as a weakness, which is why there were so many contracts in the ecosystem, because they all took care of one thing, which made the system really upgradable at every level.
01:27:37.410 - 01:28:08.050, Speaker C: Very cool. My other question would be for the lab rats. First of all, I'm impressed with that team. For the tech stack, I saw you guys even put the redis and the Caching and you guys put together my SQL logging. Everything is there, like already the built in, it's super impressive. Like this amount of time to put together all that things together. I just want to ask the lab rats.
01:28:08.050 - 01:28:29.500, Speaker C: There's like a time frame. I'm just curious about that time frame. The bet starts and bet ends, and then how people decide where the graph is going. What is that time frame that you decide? Is it like ten minutes, 1 hour, two hour, one day? How does that work?
01:28:29.950 - 01:28:46.626, Speaker A: The server makes a decision as a time, we biased. It about how it really plays. Because when you're playing a betting game, you want it quite fast. And that's one of the benefits of optimism. It really is very quick. So there's enough time to make a decision. Do I go up, do I go down? Place a bet.
01:28:46.626 - 01:28:59.878, Speaker A: You don't have to wait long. You've got your result, you've got your winnings, or you can go again. So it was just really how fast would you like it to play? Whereas with layer one, we'd be pressing a button and waiting a while.
01:28:59.964 - 01:29:00.920, Speaker C: Wait a while.
01:29:01.930 - 01:29:03.510, Speaker B: So it's much nicer.
01:29:05.370 - 01:29:24.734, Speaker C: That's very cool. Yeah. And also, I think it's very cool too, for people to understand where the price is going. There are so many people just trying to figure out where the price is going. In general, I think it will be very cool too. I wish I knew this tool before I learned about all this pricing. Very good.
01:29:24.734 - 01:29:27.120, Speaker C: Cool job. Very good. Thank you.
01:29:36.890 - 01:29:44.940, Speaker A: Anyone have more questions? I guess I'm curious to kind of understand from the lab rats team.
01:29:46.670 - 01:29:46.938, Speaker B: I.
01:29:46.944 - 01:30:13.650, Speaker A: Guess just it's more of like a very meta question because there was so much involved in kind of getting all this set up. How was the experience like from the developer tooling side of you kind of being able to do this thing easily and successfully on layer two, I would love to kind of hear some comments on just what was that process like on the discovery piece. And given your background on state channels, I'm curious how you thought about building on the LTUs here, given the current tooling.
01:30:15.750 - 01:30:17.942, Speaker B: With the current tooling in some.
01:30:17.996 - 01:30:34.042, Speaker A: Respects, because optimism is still in development. It felt like going back a couple of years to what Ethereum was like, basically 2017, 2018. But other tools had advanced like hard.
01:30:34.096 - 01:30:35.978, Speaker B: Hats and things like that, which made.
01:30:36.064 - 01:30:42.322, Speaker A: Development of the contracts a lot easier than it was back then. So it's swings and roundabouts.
01:30:42.406 - 01:30:44.846, Speaker B: And with all the other libraries that.
01:30:44.868 - 01:30:49.418, Speaker A: We use, it was easy to add in support for optimism.
01:30:49.514 - 01:30:50.782, Speaker B: We had to change a few things.
01:30:50.836 - 01:30:58.050, Speaker A: Here and there because obviously there's no regular block every whatever it is, seconds.
01:30:58.470 - 01:31:00.578, Speaker B: It just comes whenever there's activity, so.
01:31:00.584 - 01:31:33.620, Speaker A: You can't sit there waiting for a block. So that's why the server does the timing rather than the blockchain doing the timing, things like that. So this trades are swings and roundabouts with what's there. Awesome. Do you have any other questions from any of our judges or any comments or even feedback a couple of you trying to unmute? I'll just wait for somebody to stop the ping pong.
01:31:38.760 - 01:32:03.484, Speaker C: I think. I didn't ask the question to Sandra. There's a part that you guys waited like 20 seconds for proof. What's happening at the background? And what? Can you just fix that experience? Because when you say it, oh, you can go to a bar to show identity. I think it's very cool that you don't want to show all your identity to a bar. Like, I just want to show my age. I don't want to show my address to the person.
01:32:03.484 - 01:32:12.210, Speaker C: I think it's very cool, but I see that it takes 20 seconds. What's happening there? And then what can you do to optimize that time?
01:32:14.900 - 01:32:15.650, Speaker B: Yes.
01:32:16.020 - 01:32:45.700, Speaker G: So it's the first time you need to prove your identity. You need to interact with a smart contract to save, finally, the state of your identity to save the proof. But once it's saved on the smart contract, you can just use this proof and it's just a redaction. So the first time you need to prove something. It can be a bit long, but after, it should be instant.
01:32:46.760 - 01:33:36.810, Speaker B: Hey, I guess on the UX side of things, we had this debate about having a model with a popover with The Status or having toast notifications. We tried both, and I think after what you've said, that maybe having a panel with The Status and leaving the free access to the user to roam in the app while waiting for the transactions would be better. But we had some debates about this UX piece, and yes, I think this part can be improved, but it's done once, one time for a generation, and then you can just reuse the same discount whenever you.
01:33:39.760 - 01:33:42.350, Speaker C: It'S like I think it's a very cool idea.
01:33:44.560 - 01:34:40.590, Speaker E: Yeah, I also have a comment for Alexandria. I feel like with Starks and Starks, this part of the zero knowledge part is sort of underrated because right now, everything's about scaling. But I would really love to see you guys starting to sort of expand more on that and figuring out sort of how to minimize trust in the KYC process. And I know that you guys are storing it on a MongoDB database, but also maybe finding some cool integrations with decentralized DIDs, like, decentralized identities, maybe like, a cool integration with like once you KYC into an ENS, you can directly go through a lot more things. And, yeah, I'm really excited to see where you guys go from here, and I encourage you to minimize trust in all possible ways.
01:34:41.060 - 01:35:10.180, Speaker B: Yeah, definitely. We had quite some work around the K Row part on this one, so not necessarily the time to integrate other services, but yeah, definitely. We're not very fan of Centralization, so definitely if other services fit, like, we'll integrate them ASAP. But thank you for your comments. Awesome.
01:35:10.250 - 01:35:45.224, Speaker A: I'll give one last chance if there's any more comments or questions. If not, we are lucky. A lot of running on schedule. So we'll take a quick detour to the next segment of this finale, which is I want to announce all of our prize winners. So I want to thank all three teams devolution lab rats and why am I blanking on this now? I'm sorry, Alexandria. There you go. For presenting your amazing demos.
01:35:45.224 - 01:36:35.960, Speaker A: I think just being able to see that how close these things are to being used in real life is incredible. And I'm particularly excited about the applications of Dow because we finally now have a very useful, cheap and fast way to experiment and work with Dows at scale. So just seeing that table and the future trade offs and just the lack of any trade offs, you check that rebox there gives me a lot of excitement to see what people can do with Dows on l Two. So congrats again and we'll move on to our next segment. So what I want to do is I want to go over all the prizes that all teams have won for this event. This is every single sponsor prize, and while that's happening, all of the judges can take a ten to 15 minutes break whenever you see me done with the presentation. That means we're ready to see our last three teams.
01:36:35.960 - 01:37:03.480, Speaker A: So I'll have the last three teams hang out here for just a few more minutes, but we are good to announce some of the prizes that all of you have been waiting for. So we asked some of our sponsors to record a video of who their winners are. So we're going to play some of those videos here and for the rest, we're going to announce the names of the teams and what they've won directly. So first up, we have Arbitrum and we'll see their video shortly.
01:37:05.740 - 01:37:47.510, Speaker B: Hi, everybody. I'm Harry, co founder and CTO of Arbitrum. I'm excited to get to tell you about the winners of our four prizes, but first, I just want to thank all the hackers who participated. We had a great time seeing your projects and I hope you had fun. Our winners are Farmtopia, which explored DFI and composability on Arbitrum with Crosschain Liquidity NFT Puzzle Thing, which showed off the power of NFTs on L2 and made awesome use of the graph cross rollups o of One Messages Bridge, which showed an efficient batched crosschain transfers between rollups. And finally, ETH Sorbet, which built a smooth UX for onboarding users into Arbitrum. Thanks to everybody who participated and I hope you had fun.
01:37:53.070 - 01:38:13.598, Speaker A: And just to summarize, the Arbitrum Prize winners are farmtopia NFT puzle thing cross roll ups. One messages. Bridge and eat. Sorbet So congrats to all four of these teams and we'll talk about the logistics shortly. So next up, we have Optimism and we'll see what their video is by Ben.
01:38:13.774 - 01:38:46.526, Speaker B: All right, hello, everyone. This is Ben from Optimism, and I am going to be going over our hackathon winners and I've been asked to do it quick and I can't stop talking about all these great projects, but I'm going to do my best. So without further ado, let's get into it. In our Good for the Community category, we have three winners devolution, an incredible Dow project. Go check them out. Popcorn, doing some of our favorite stuff. Redistributing fees to Public goods, and Eatsor Bay, a one stop shop for all the Lt's out there to be deposited and withdraw to in one shared place.
01:38:46.526 - 01:39:08.010, Speaker B: All right, for our most memetic hack, we have to give it up to what I think is the best out of any hackathon sesame street named hack I've ever seen. Elmo Incredible l Two Venmo Clone. Very cool. For our most helpful hack, we chose two incredible cross chain projects. One of them is called Troll Bridge. Go check it out. Instant Exit.
01:39:08.010 - 01:39:42.974, Speaker B: And another one, not as amazing of the name, but as incredible of an implementation cross roll up. One messaging, passing around batches deposits and draws with that, one hash baby. Okay, and last but not least, for our most outstanding category, we have two more. Zenith, an incredible project letting you deposit your tokens with Mev geth. I mean, my God, how cool is that? And as well as Labrads, an incredible game that was very addictive and allowed us to really push those boundaries with layer two's lower. Latency assumptions. All right, I think I got it in quick enough this time.
01:39:42.974 - 01:40:02.550, Speaker B: We'll see. And of course, it goes without saying we had to choose the list, but you are all the winners in our hearts. It has been an incredible month of hanging out with y'all in Discord and on our office hour calls, learning about what y'all are doing, seeing all the hard work you were putting in each and every one of you killed. It was amazing. Thank you all so much. Bye.
01:40:04.250 - 01:40:26.590, Speaker A: There was a lot of teams that won a lot of prizes from Optimism. And just to quickly summarize, we have Zenith Lab Rats trollbridge cross roll up on one, messaging Elmo devolution popcorn and meat. Sorbet you've all won $2,000 from Optimism. And we'll follow up with a lot of details after this. Next up, we have the winners for ZK Sync, and we'll see who won their prizes.
01:40:27.330 - 01:41:07.510, Speaker E: Hi, hackers. I'm Angela, and I lead product at ZK Sync. And today I am so excited to be announcing our winners. So, in third place, we have two winners, winning 500 USDC each. And the first project is Kangaroo, which is a cool discord fee bot integration that allows super cheap withdrawals. And the second winner is a gas relay service which uses our cool batching transaction feature to allow the person receiving the token to pay for the gas for the sender. And in second place, winning 1500 USDC, we have an AMM based off Unisoft V Two written in Zinc, our new programming language.
01:41:07.510 - 01:41:39.080, Speaker E: They're coming out with the front end soon, so we look forward to sharing that with you all so you can try unisoft on CK Sync. In first place, we have Zenith Winning 2000 USDC. And this is a cool utilizing Flashbots to enable arbitrary meta transactions for externally owned accounts. And they integrate directly with ZKsync to allow users to onboard onto ZKsync without needing to have ETH. And that's it. We're excited to share with you ZK Sync 2.0 soon, and we hope to see you building on that.
01:41:41.050 - 01:41:54.170, Speaker A: Thank you, Angela. And just to summarize, AZK sync winners, we have Senate Zero Swap, kangaroo and Gas Relay Service. So congrats to all four of you for winning the ZK Sync Prize. Next up, we have Starkware.
01:41:56.910 - 01:42:12.922, Speaker B: Hi, I'm Aviator from Starkware, and we are here to announce our winners for East Global 2021. And in the first place, Tam. Tam. Tam. We have two winners. The first project is the Cairo debugger. And the second one is Alexandria.
01:42:12.922 - 01:42:52.858, Speaker B: Cairo Debugger implements the Debugger Adapter Protocol to enables everyone to debug Cairo from their favorite editor. Alexandria is a privacy project that enables everyone to prove details about their identity without revealing additional extra details. And they did an end to end implementation using Cairo Sharp and layer One contracts and in directly to the third place, we have three winners. We have circularize L, two exit format and prime choice select. Thank you very much. Awesome.
01:42:52.944 - 01:43:42.562, Speaker A: And to summarize, the Starkware winners are cairo Debugger Adapter Protocol, Support, Alexandria circularize L two, exit format and Prime Choice Select. And those were some of our videos from our sponsors. And for everybody else, I'm going to quickly read off the names of all the teams that have won the prizes. And don't worry if you missed something or if I'm going too fast because we'll be posting this thing on Discord and Twitter and we'll also be following up with all of you on email. So the scale prize winners are NFT puzzle thing. MusicCoin BCommerce Cities Protocol and Flaunt The connects winners are GNU swap layer two dex aggregator and Sharon. The Protocol Labs winners are Nama Finance, Hashmark, IPFS, CID Sale, hydrophile and Vhtdb.
01:43:42.562 - 01:44:23.180, Speaker A: The seller winners are layer two finance combination strategy and etholol link. The raiden winners are optimistic channels and the Graph prize winners are blockhead chain Yield, wall Protocol, NFT Puzle, thing bundle, bond layer Two, dex aggregator, m Yield and Masket. The Polygon winners are Zenith Chain Yield Blockhead, Boson l two Dex. The taurus winners are Rantify, voltaire, blockhead and vaccine. NFT the new cipher. Winners are Matoken Covalent. Winners are Coinport, ethhol, Link and Pixel property.
01:44:23.180 - 01:45:04.546, Speaker A: The Zapper winners are Blockhead, azulo and Ethol. Calendar winners are Xfil and Primechoice Select. The one inch winners are agent Ransack Azulo and the Ave prize winners are ishan My Yield Finance and Farmtopia. The secret network winners are secret Manufacturer, Rainbow Bridge and Sh. The chain link winners are Golden Ticket, Boson, Prime Choice, Select NFT Puzzle Thing and Creative. The superfluid winners are layerhop Ricochet and Perpetuity. The ENS prize winner is Team Blockhead.
01:45:04.546 - 01:45:47.514, Speaker A: And those are all of our amazing sponsor prize winning teams. So there's a lot of names on a lot of teams. So congratulations to everybody who won a sponsored prize. We'll be following up with you very shortly on a lot of details for how you get to receive them and just generally what the prizes are in case you missed the details on the slides. So with that, we are ready to resume our last group of judging and our remaining three projects. So if all of our judges are back here, I'd like to ask them to turn their videos on and we'll shortly get started for the remaining three demos. So I'll give that a quick minute.
01:45:47.514 - 01:46:15.040, Speaker A: And the next category is Developer Tools. So we have three more projects here in the category developer Tools and Libraries. We'll have hydrophile, Eatsourbet and Cairo DAP Support Showcase what they've built to make it easy for developers to really make their applications more scalable and usable. So first up, we have hydrophile and I'll have Doug and Kartik share their demo.
01:46:18.530 - 01:46:20.960, Speaker B: All right, thanks kartik, can you hear me all right?
01:46:21.410 - 01:46:22.366, Speaker A: Yes, we can.
01:46:22.468 - 01:46:36.420, Speaker B: All right, so I'm Doug Anderson, and I'm presenting for hydrophile. My partner Kartik Chopra is on the call and we're proudly Canadian hydrophile is a play on words for Hydrofoil, in case you haven't picked up that.
01:46:38.170 - 01:46:38.486, Speaker F: Our.
01:46:38.508 - 01:47:26.750, Speaker B: Challenge was sailing the seas of CID. So currently, if you upload data to IPFS or it's sort of under library, you get IPLD, you get a content Identifier that of course verifies the data integrity, but it's just a long string of letters and numbers as a hash, right? So can be kind of hard to keep track of this. So we built hydrophile to keep track of these version files. So let's say you've got a file or an object and you modify it along the way. Well, the CID is going to change along the way. So we thought the best use case of this is keeping track of this string of version files and thus version CIDs in IPFS. So we built hydrophile as a library on top of or using IPFS to track those file alterations.
01:47:26.750 - 01:48:27.510, Speaker B: We also built in keyword search it's essentially we wanted to add this metadata to the file name and the file type of the data that you were saying, saving to IPFS so that you could search upon it and index it accordingly. So you end up with this long string of version files, which we basically just slap into linked data using the Interplanetary Linked Data protocol, which is very similar to JSON IDs to link them all together. So you've got this chain of all your versions of your files all referenced into one. And of course, you're probably not going to add just one file to IPFS. You're probably going to have a bunch of different files or objects or pictures or whatever. So there's one of these chains for each one of the threads that you have of a file. And it's a bit incestuous because we used this chain of CIDs, we saved them in IPLD to link them all together and then we roll it all up in the Berkele route to IPFS for one giant root CID of the whole tree of all your files.
01:48:27.510 - 01:49:13.560, Speaker B: But that can be a bit problematic because every time you version a file and you get a new CID and you add it, your merkel route changes. So what we did was we looked for a static way to keep track of those changing root CIDs. So we found a HyperCore which gives you a static key that you can it's an append only log with a static Identifier that doesn't change, which is great for uploading to Ethereum because you can upload the HyperCore Identifier key once. I save it to Ethereum once, and it always points to the latest value of your root CID. So it really saves on the gas fees by able to rolling up to Ethereum using the single write. So, time for the demo. So I'll just switch to my browser here.
01:49:13.560 - 01:49:51.794, Speaker B: So, of course we wrote the library in JavaScript and Node JS and we spent all our time building this library and then we figured, oh, wait, we need a Gui to be able to show use of the library. But the main function, the library was tracking you're basically tracking the CID, the content Identifier with the parameters. And the parameters are generally the file name or the object name and the type. So we built a little GUI here to show how you can create an object and save it to IPFS. And then they all rolled up. So I've got some of the previous objects that I've saved. I've got text type and picture type.
01:49:51.794 - 01:50:26.506, Speaker B: So I've got a picture and maybe you save an avatar in there. And the CD is linked, CID is linked there. And if you open that up in the IPLV Explorer, it'll show you all the data in IPFS. This is just a demo, so avatar text, but ideally you drag the photo in there. And if I wanted to update my avatar, I just would save an object of the same name, of the same type under pictures. And let's say this is me smiling instead of frowning, and I would upload that up. And the whole idea is to keep track of all these CIDs.
01:50:26.506 - 01:51:00.154, Speaker B: So the avatar, if this a little bit buggy, sorry about this. It's a bit challenging because IPFS has to sync with the GUI and they're a little bit out of sync anyway. Boy, that's embarrassing. Let's try a new file, file one. Hello, version zero. And so now my text files has file name one with the original CID. You can see here in green.
01:51:00.154 - 01:51:53.090, Speaker B: And if I now modify the file name one and give it version sort of 2.0 is now here what it does is for that text file file name, it has a new hash which is now in blue, and the previous one is linked to it. So you have this chain link effect of the CIDs being linked to the previous version of the same file name and the same file type, all with hydrophile. So the library is there in GitHub, ready to be used. All you need to do is instantiate an instance of IPFS and pass that into library and it'll roll up all your CIDs into one mother one, which is right here, the root CID. And all of these are all linked in the demo. So you can open it up in the IPFS Explorer and see all of your files.
01:51:53.090 - 01:52:09.134, Speaker B: So it's a little bit easier to keep track of all these files instead of trying to throw them in a database, just use IPFS to merkleroot it up to the top. So I think that's it. And I'm happy to end the presentation or take any questions. I guess we're doing the group questions at the end.
01:52:09.172 - 01:52:30.854, Speaker A: Kartik yes. So thank you so much for that really cool demo. I totally agree. That the same marker for wanting to modify everything else after it saves a lot of time and cognitive cycles. So this is going to be super cool. So thanks for that. And next up, we have eatsourbe and looks like the team is here.
01:52:30.854 - 01:52:34.550, Speaker A: So whenever you are ready, feel free to demo it. Sorbet.
01:52:36.810 - 01:53:15.700, Speaker B: Great. Let me just share my screen. Okay? I hope everyone can hear me and see my screen. Okay, great. Hi everyone. We're project eve. Sorbet we're thrilled to be presenting to all of you today.
01:53:16.710 - 01:53:17.086, Speaker A: Eve.
01:53:17.118 - 01:54:00.062, Speaker B: Sorbet smooth transition to l two. Just like sorbet, before the main course to begin, I would like to start by introducing our team that is spread over Taiwan and Hong Kong. It consists of Anton and myself flying Nobita. The objective of a project is help DApps and L2 networks onboard users and developers. We have developed a react component that developers can install on the DApps. It adds L2 network configs to MetaMask so users don't have to do that manually. It also lets users make deposits directly to L2 network so they can get started with the L2 network right away, developers can customize the color theme of the component to suit the DApps.
01:54:00.062 - 01:54:37.840, Speaker B: We have spent a lot of time to ensure the code is well structured and written as this will help foster developer contributions from the community. The component is published on NPM. And now I'd like to show you how Eve survey looks in action. So here's the react app that has Eve survey installed. Eve survey currently supports eight network configs and a metamass wallet. I will select optimism coven for this demo and have my survey in dark mode. So a component starts with the welcome screen.
01:54:37.840 - 01:55:12.460, Speaker B: Sorry, supposed to start the welcome screen. I was rehearsing. So next it detects that we are not on the COVID network. So I'm going to change that's. So now you can see the L One balance in L2 is updated here. This DApp needs a little bit more e on L2 for us to get started. So let me make a deposit.
01:55:12.460 - 01:56:06.470, Speaker B: So once the transaction is confirmed on L One, optimism will update our balance on L2 in a few minutes and it will be reflected here. But let's not wait and move on to the next step. We can see optimism covenant network config here. So let's switch our wallet to the L2 network. Network has been switched in metamass and we're ready to have some fun in L2. So our plans is to have support for more L2 networks and ball wallets. We also like to add some more front end implementations as well.
01:56:06.470 - 01:56:40.460, Speaker B: Lastly, I'd like to show you guys our GitHub repo where you can see how easy it is to add component and customize it to your liking. You can put your settings and customizations in the config object and it is literally just one line to add it to your DApp. We really hope that more developers will try it and your feedback will be most appreciated. And this is the end of our presentation. Thank you to Eve Global and all the sponsors for organizing this amazing hackathon.
01:56:42.400 - 01:57:14.650, Speaker A: Amazing. Thank you, survey team. And I was just going to say thanks for being up super late to do this demo the other end of the world and really appreciate you doing this live and sharing what you've built with all of our attendees. So, last but not least, we have Cairo DAP support as our last demo for the day. So, whenever you're ready, Jesco, we can already see your incredible demo.
01:57:15.660 - 01:57:42.604, Speaker B: Hi, everyone. Let me share my screen. So I'm going to present a debugger for the Cairo programming language. I'm Francesco Cekon. I'm currently based in London. And that was my project for the natural Markers. So, what is Cairo? So, Cairo is a programming language to write provable computation, and it's powered by stacks.
01:57:42.604 - 01:58:19.484, Speaker B: And while the language is quite new, it's used in production by some big projects like DYD ads and Immutable ads. And as the Cairo documentation warns you, the Cairo language looks simple, in fact, looks almost like Python. But it's a fairly low language language. You should treat it as that. So the main takeaway is that debugging Cairo is hard because it's not like a programming language like JavaScript. It requires a bit more attention and hopefully with a debugger, it should be easier. So traditionally, writing and debugging is quite a challenge because you need to write a plugin for each one of the editors you want to support.
01:58:19.484 - 01:58:51.770, Speaker B: So, for example, the main editors now are like Vs, Code, Image and Beam. So you will need to write three plugins. But with the Debugger Adapter Protocol, you can just write one server. And then the users can use the Debugger Adapter Protocol plugin for their editor to connect to your server and they will be able to debug your program. So how does this protocol work? So, we have three components. One is the editor, which is what the users use. So it could be BS code, could be Emacs, it could be BIM, and then we have the Cairo runner, which is responsible for running your Cairo program.
01:58:51.770 - 01:59:37.560, Speaker B: What implemented is the server, so the communication between the editor and the Cairo program. So when the user starts debugging, probably the editor will send to the server a list of breakpoints so where they want to stop the execution, and the server will confirm to the editor that's what is done, and then the user wants to start the execution. So one difference is that in the one lining in the source code could be like multiple instructions in the runner. So the Charo server takes care of that. So in this case, the editor has to run one step and tell the server we run two instructions, and after that, we send an event to the editor saying that the execution stopped because it reached a breakpoint. At this point, the editor will ask for some information to display to the user. For example it can ask for a stack frame, can ask the available variables and their values.
01:59:37.560 - 02:00:14.560, Speaker B: So let's go into a demo. So here I have a Cairo program. I compute the sum of all numbers between one and three which should be six. But three is a live demo so anything can happen. So we start running our Cairo program and here we can see highlighted in yellow the current instruction and basically what code we are executing. So I can add breakpoints by toggling the red dot on the left and here at the bottom left we see a list of all the breakpoints that were added to the Cairo program. So now I can resume the execution.
02:00:14.560 - 02:00:48.108, Speaker B: And here we see this function is recursive. So the recursion happens before the breakpoint. So we can see that the stack traces on the left are four stack frames deep. If we mouse over a variable we can see the current value. So in this case one and zero. And we also have the values on the left. As we execute the program the values of the variables will change and we can see that, you can see that we'll update here, you see it times and now we can move step forward and we go out of the compute some function.
02:00:48.108 - 02:01:26.900, Speaker B: We go here. The serialized word is basically how you write outputs in Cairo and it's a function provided by the standard library and we can jump into it and the Cairo debugger will look up the file from the Cairo library and we can step like any other piece of code. We can go back now. Finally the execution finished and yeah the lab demo went quite well and we got six which is what we expected. So as you can we have seen that the debugger is fairly functional and it works fine, but it only works for simple chiroprology. If you want to debug real world programs we need to under more advanced stuff. For example like dynamic memory allocation.
02:01:26.900 - 02:01:48.640, Speaker B: Also for example we want to watch expression while we run the program. Also will be quite nice to be able to set some options for the debugger. Now the Caro program is compiled from the launch configuration file that Vs code uses. Also would be nice to be able to change variables while we are debugging. So in my presentation I'm here and thank you for the attention, for organizing this hackathon.
02:01:51.380 - 02:02:13.050, Speaker A: Thank you so much for that really cool demo. And with that, that was our last demo for the day. So I want to congratulate all twelve teams and now I want to welcome all three of you to turn the videos on. We'll kind of jump into some question and comments. So who wants to go first? This is incredible set of demos so sure there's going to be a lot of comments here.
02:02:19.480 - 02:02:56.064, Speaker B: Yeah, I can go first. So thanks. Great work everyone. I have a question for Francesco for the Debugger. I'm actually curious, we spoke a bit about your work. I'm curious what was hard with working with Cairo and what was maybe slow or broken or anything like that? That's a good question. So I think first of all, I want to congratulate the Cairo team because the code base is very well organized and working with the Cairo compiler is actually quite nice.
02:02:56.064 - 02:03:22.884, Speaker B: I worked with other compilers before and Cairo probably is one of the best. It was very easy to dive into. I will pass it to the developers. Yeah, the Cairo team made my life easier. What's difficult is that Cairo is different from other programming languages I work with. And for example, I think you have to, after the execution ends, is that when you can finally inspect the memory. So you have to run the complete program before you can inspect memory.
02:03:22.884 - 02:03:42.290, Speaker B: And that's something I didn't realize when I started working on the Debugger, so I was puzled by it for a couple of days. But I think I've been in touch with the Caro team so after that was made clear to meet them, I think overall it was fine and was like a pleasure to work with a carol library. Thank you.
02:03:48.020 - 02:04:36.736, Speaker C: So I'll go next. I just tried to not to jump into hey everyone, it's so hard to just ask the question because it's so straightforward, so well done and everything is just so perfect. I can only just comment at the moment because I'm really impressed and it shows that there's no limit in the hecaton. You can just build anything and I think it's very cool. So I will just like since the last one is the Cairo Debugger, did you already share with the community and get an update? Like some people are going to use it? Did you already share with them and are you planning to do that? I think it will be very cool.
02:04:36.838 - 02:05:00.890, Speaker B: Yeah. So I think the plan is to keep developing it to be at least feature complete, so being able to run twinspetanic Chiropractor programs and hopefully the community will start using it. So I think another step would be to integrate with the Vs code extension that Chira already has. So we can work on that together, I guess.
02:05:01.980 - 02:05:27.184, Speaker C: Very cool. And the other one is like the comment for the hydro file. I watched you guys yesterday and it's like I was very impressed as well. I was just wondering if you guys can work the same versioning for the scale file storage as well. I think that will be very cool. I would love to just sync up on that. I think it will be a great upgrade for us and after seeing that, let's sync up for that.
02:05:27.184 - 02:05:28.690, Speaker C: I really liked it.
02:05:29.220 - 02:05:36.070, Speaker B: Yeah, that'd be interesting. Are you using hashes for the scale file system or using IPFS or what's the back end?
02:05:37.720 - 02:05:58.572, Speaker C: We can just discuss that and then it's like the hashing and scale has we have our own file storage, it's not IPFS and it runs on scale completely and then I would love to just bring our engineers together and just improve and build this on scale as well. That will be very cool.
02:05:58.706 - 02:05:59.740, Speaker B: Fantastic.
02:06:01.120 - 02:06:31.670, Speaker C: Each sorbet is I think it's very simple and it's very cool and I'm impressed with the UI user experience is very simple. Sometimes when you just move all these just die and everything it takes a while and also complicated like all the workflow I think I really like the workflow in general just want to say that.
02:06:32.440 - 02:07:41.528, Speaker B: Thank you also for the ETH. Sorbet team, was there anything that could make it easier I mean you had a lot of networks there, right? You had eight different networks. Was there anything that could make it easier for you to build the same app for all eight different networks? Were there things that you had to do differently between the different networks or was mostly the same process for all of them? So actually for the three networks or for the eight one we did and the three of them, which are the sponsors of this hackathon, we picked them because they were the easiest to be put on. So just to give an example, for example, scale, we wanted to put them on as well but for the endpoint they didn't have an Https and unfortunately MetaMask doesn't let you add that in through their RPC call so we couldn't have that in. Oh, okay, sorry, I mean the informational okay, at least I was told Https.
02:07:41.624 - 02:08:01.670, Speaker C: I'm sorry that you missed that. I can just share that with you. Of course. I think it's a good feedback for us because we decided after that feedback, we decided to completely remove the Http from our list like we were just giving out and then we're not going to do that. So we have support for both.
02:08:04.760 - 02:09:01.788, Speaker B: Just to clarify, you guys do have HTPs for the Webpoint, but not for the informational one which was needed to display the balance. But at least I'm sure you guys have it for the main net and stuff. But you guys have a different set up slightly for this one, so we couldn't add it, but it's a shame. We would love to have you guys on as well and we actually wanted to add more in but unfortunately for the time we didn't have enough time unfortunately because of the very different networks that we have to put in the work they have to do for the other networks. I don't know if Anton would like to add anything as well. Not much, but I feel like actually the flow of adding different network is not that different. I feel like we spend most of the time designing the whole architecture in terms of how do we interact with ethers as a plugin.
02:09:01.788 - 02:10:11.448, Speaker B: We choose Ether over web3 JS right now and that's the next thing that we have to build anyway because we definitely want to reach community. But I feel like probably the only differences between all the networks is like where it's ERC 20 or it's an e native token deposit because that will make a difference. And sometimes it's like you deposit the ERC 20 and then when you deposit that onto the side chains like polygon or XDI, it becomes their native token. So we end up simplifying the flow to only deposit native token instead of giving you a list of tokens that you can choose. Because I think we thought that will confuse your users about what tokens to deposit to actually make things work. So I think there are just so many. Well, in a sense, different teams have different implementation of the bridge or just how they're onboarding.
02:10:11.448 - 02:11:36.200, Speaker B: And on the one hand, it's kind of hard to find a unified interface for everyone, but on the other hand, it's interesting to see why do different teams have different designs and which one do we feel like better? So I guess that's pretty fun. Yeah. I mean, on that subject, obviously these networks do have different bridge designs. Was there anything like, what did you like about the bridge designs? What did you not like? If you had to sort of combine things into one sort of bridge interface that you would prefer, what would that look like to you? I think one takeaway from building this is we definitely need some fast deposit and withdrawal service. We were just designing the deposit right now, but we were also planning how will we handle withdrawal as well. Because you can just onboard user without helping them to exit any L two. And we end up having lots of having too many problems dealing with different kind of withdrawal system because some enables fast withdrawal and some is like optimistic roll up so you need that dispute period or whatever.
02:11:36.200 - 02:11:56.030, Speaker B: So I definitely feel like we probably need this kind of maybe not official, but more intermediate projects that really just focus on the UX on the contract level and then we can have an easy life focused on the UI level.
02:11:58.160 - 02:12:00.850, Speaker A: Daniel's, been meaning to ask a question as.
02:12:03.460 - 02:12:18.630, Speaker B: Oh, I mean, it was sort of covered there. I guess I'll just add that what he surveyed did is something that we've sort of been envisioning and wanting to see for a while and we kind of have our own internal version of it. But yours is better, so good job. Thank you.
02:12:22.540 - 02:12:58.450, Speaker C: And the teams, like, what was the most fun part doing this hackathon? I was just like all the teams. Like, all of them. Since it's like the last call, I'm just going to just take over the call. I'm sorry, but I'm just so curious. For me, it is so important to have fun and. Every time I go to hackathon, I just love talking to hackers and just have so much fun talking to people. I'm just curious, what was the most fun part for you guys? Like, the teams, and what is it.
02:13:05.340 - 02:13:42.528, Speaker B: Just for me? The most fun part for me was just learning about a new technology in a way that's not work related. I didn't have to get it done, get something done by some arbitrary deadline, right? I decided what's something cool that I can do with Cairo. I saw that the compiler was actually quite nice. I say, Can I do anything with a compiler, right? And say, writing like, a language server protocol. So, like, the same thing. For example, to have autocompletion will be a bit more tricky to do in three weeks. So I was like, Maybe I can just implement a debugger, right? And then I went with it and actually quite happy about that.
02:13:42.528 - 02:13:51.990, Speaker B: And then the team was quite nice, so I had a chance to chat with the Cairo team and learn more about the compiler, more about the language. So it was a fun experience.
02:13:54.780 - 02:13:57.320, Speaker C: Very cool. Viva hydrophile.
02:13:59.820 - 02:14:09.804, Speaker B: I guess one of the fun things was that near the end, I think you actually saw the original demo where we didn't have colored hashes. So in the last 20 minutes before.
02:14:09.842 - 02:14:12.910, Speaker A: Our presentation, we sort of hacked together something really quickly.
02:14:13.360 - 02:14:51.320, Speaker B: But that was probably one of the most fun parts and definitely the creative challenge, because during a hackathon, it's a completely blank slate, right? So you have to think, okay, well, what are we going to make? It's like Francesco says, you have all this awesome technology at your disposal and a completely blank slate. It's almost like there's too much options and too many creativity and you have to really narrow it down. But it's really exciting to be able to pick and choose from the technology and then paint your canvas however you want. And it's a bit of a double edged sword because you have so much choice, but you've got to pick only one thing because you only have so much time, right? So it's great creative choice.
02:14:51.660 - 02:14:54.090, Speaker C: Absolutely agree. It's so cool.
02:14:55.260 - 02:15:32.150, Speaker B: Eat sorbet well. For me, Elisa, I feel like a project is almost like for me because there are so many L two technologies out there, and I've always wanted to find out what each of them does, and there isn't enough time to go through all of them really deep. So this project kind of is a cheat that I feel like I can now kind of play with all of them and I don't have to decide. So we kind of go a bit shallow on each of the technologies, but then we focus on the UX and the architecture. So I'm really happy that I got to play with all of them.
02:15:33.580 - 02:15:36.664, Speaker C: That's amazing. You know what would be more fun?
02:15:36.862 - 02:15:45.210, Speaker B: Build on scale that's on the highest party list. I assure you it would be more fun.
02:15:46.400 - 02:16:19.856, Speaker A: I think that's a perfect positive note to wrap things up. Congratulations to hydrophile. Eight survey and Cairo DAP support. And this has been amazing. I feel like DevTools is kind of what makes the ecosystem move forward. So just seeing all these tools will make it a lot more possible for new people to not worry about what happens under their hood and use the abstractions to actually build what they want to do and not focus too much on the internals. So this has been incredible and congratulations to all twelve teams for showcasing their amazing projects.
02:16:19.856 - 02:16:55.072, Speaker A: So thank you so much. And thank you to all of our judges for being here with us for the last 2 hours, sharing some amazing thoughts and comments and offering everybody feedback to take this project to the next level. So we're super thankful for your time. And I have a few thank yous to give out to everybody who made this event possible. So without further ado, I'll jump into doing some long due overdue. Thank yous. Especially, I want to highlight our judges, speakers and sponsors and everybody who helped out as a mentor and our support team.
02:16:55.072 - 02:17:35.484, Speaker A: And lastly, to all 600 plus of you as hackers who participated at this event. This event would not be what it is without you participating and building cool things that you get excited about. We just facilitated this this month. But it was all your work and effort that made everything possible. So I won't say every name here, don't worry. But there are so many people that make an event like this at this scale possible. And these are all of our judges from today and all of earlier this week who made it possible to kind of go through and learn about every project that participated at this event and have a live conversation with them, offer them feedback, ask them questions.
02:17:35.484 - 02:18:32.610, Speaker A: So thank you to all of our judges for giving everybody the time from so many different parts of the world. We had an amazing set of speakers who participated in four different summits and gave us their perspectives and talks on everything that's going on in the world of scaling and e, two and zero knowledge and mev. So I want to thank all of our speakers here who were there to help out for workshops, talks, panels and more. And lastly, I want to also thank everybody who supported our attendees and our hackers from the sponsor side. There were so many questions and comments anywhere from bug reports to feature requests that came in on the event. And all of these amazing sponsors have been helping out all of our attendees throughout the past three weeks and really helping them succeed for all of their projects. I want to give a quick shout out to everybody who made this possible.
02:18:32.610 - 02:19:10.172, Speaker A: So without your support, this would not be a thing. And I can't wait to see all of you in person. So thanks again to everybody and all hundreds of you that helped us out pull this event. And a few more thank yous from our sponsors. And I also want to quickly thank some of our dedicated mentors. They were here doing shifts anywhere from four to 6 hours every day for the last three weeks, helping unblock all of the questions that all of our attendees had. So these are without your help and support.
02:19:10.172 - 02:19:54.724, Speaker A: As mentors and you constantly giving us 24/7 support on the attendees Discord, we would not have amazing projects that we saw today. And lastly, I want to thank all of our volunteers who helped run everything behind the scenes for our judging and for a handful of workshops and talks we ran. You didn't get to see a lot of them directly, but they're the people who were with us executing everything behind the scenes. So you had a smooth experience throughout everything that you experienced for the last few weeks. And lastly, I want to quickly thank members of the Global team. I want to welcome Luke who joined us to lead our marketing just two weeks ago. I want to thank Catherine who's been helping out on sponsorship and partnerships.
02:19:54.724 - 02:20:36.476, Speaker A: She's been the one coordinating everything for all sponsor prizes and all of our interactions with our companies. And without her support, we would not have an amazing experience with our sponsors. I want to especially thank Emily Hobbs, who has been the person managing the entire Discord and our event experience from the support side and operations side. Every time something happens for this event, it's Emily making sure that it's happening according to plan. And without her help and her kind of constant perfection on getting and executing the right things, we would not have a really smooth scaling. Ethereum want to also thank Andrew from our team. Andrew has been running everything that we do online really smoothly.
02:20:36.476 - 02:21:18.592, Speaker A: Everything you see, from our Zoom chats to how we record things, to managing our judging, to this live stream itself. All this thing is because of all the work and effort and planning Andrew has done. I want to thank Jacob from our team. Jacob leads partnerships and sponsorships at Ethg Global, and everything you see about how we work with our sponsors, how we think about prizes, how we think about the event experience, and honestly, just what it takes to make sure. That we're offering the best experience to all of our attendees to learn and experiment with what's happening in any given category, whether it's DeFi or scaling or NFTs. That's all thanks to the efforts by Jacob and also Catherine. I want to also thank Heather.
02:21:18.592 - 02:22:03.984, Speaker A: Heather is the one who keeps us allos in check. She's the one in charge of our entire vision and planning, of what the rest of the year looks like and what Ethgobal does as a company and everything we look at and the lens we look everything from is because of all of the work and planning that goes on and gets executed through Heather. And lastly, I want to thank Liam. We're finally running all of our events at scale. We have anywhere from 50 to 60 countries and people from so many different places and parts of the world interacting with us. Whether it's on Discord or on our dashboard or on our live TV interface. All the tech and behind the scenes work that goes into managing this event from your dashboards for check ins to judging to submissions.
02:22:03.984 - 02:22:39.736, Speaker A: All that is because of all the work that Liam has done. So thanks again to everybody on the global team. And before we wrap, I do have a few quick announcements. So we saw twelve projects today and we called them the finalists and we really kind of just didn't really go over what that means. We announced all of our Sponsor Prize winners but we still keep referring to everybody here as a finalist. And part of that is because if you've not been to any global event before, we really like to kind of highlight that these events are not designed to be competitions. Our goal is to get more and more developers into the web3 ecosystem.
02:22:39.736 - 02:23:26.552, Speaker A: And as such, everything is designed to be focused and prioritized on giving you a chance to experiment and build cool things that you are excited about. So we don't have a first 2nd, 3rd place as part of that goal. And when we say somebody's a finalist, they are all our top first place for lack of a better term. And I want to congratulate all twelve teams here for winning this event. And as for what that means, we are going to be giving $1,000 in stable coins to every single member for each of these projects. So collectively, everybody who presented today is one of the twelve teams is winning $1,000 per member. So congratulations to all of you and also to everybody who won a Sponsor Prize.
02:23:26.552 - 02:24:00.424, Speaker A: Please be patient, we'll be following up with you over email and also on Discord about what the amounts are, how you can retrieve them, and just what the next steps look like. So we'll be in touch with all of you very soon. And of course, this would not be an global event if we don't tell you what's next. So as we wrap this up, I want to quickly announce that our next event is already live. And I'm super proud to talk about our next hackathon. It's going to be hack money. We're relaunching hack money for 2021.
02:24:00.424 - 02:24:44.032, Speaker A: It's going to be our biggest event of this year. We're going to be 1000 person event entirely focused on DFI. And as of right now, we have announced this and submissions and registration is open. So if you are interested in participating, whether that's as a hacker or a speaker or a sponsor, you can head over to DFI ETHGlobal, dot Co and check us out. The event is going to take place on June 18, and I wish and I hope to see all of you participate again in Hack Money and do a lot of more cool things with D Five. So thank you so much for coming to the Scaling Ethereum finale. And thank you for all of you for the last three weeks who participated at the event and watched so many amazing talks and built on really cool projects.
02:24:44.032 - 02:25:48.708, Speaker A: Before we end today, I want to make on a serious I want to make a quick comment on something that happened earlier this week. We lost one of our dear friends, Shakti GOP, and Shakti was in charge of running ETH, India and Defolio. It was very unfortunate that we lost Shakti due to COVID. And I want to take a minute here and just thank Shakti for all the effort that he's put in over the past few years to really bring the Indian community to where it is now. Without Shakti, we would not have tens of thousands of developers in the Ethereum ecosystem and the Web Three ecosystem in India. Without Shakti, we would not have a broader student led and a student group of developers that are excited about what's happening in tech altogether through his efforts at Defolio. And Shakti is somebody we worked with for the past three years to organize India, which is the largest event in India related to crypto and Ethereum.
02:25:48.708 - 02:26:16.236, Speaker A: And without him, things would not be where they are now. Shakti was a dear friend, and he will be sorely missed. And we wish everybody in the Defolio team and Shakti's family our condolences, and I hope that you rest in peace. Shakti. So with that, thank you so much and we hope to see you in a future Reef Global event. Bye.
