00:00:06.010 - 00:00:19.950, Speaker A: Good morning, good afternoon, good evening. Depending on where you're calling from, we have Eric here from Live here doing his workshop on NFT hacks using video. Questions go into the zoom chat and otherwise I'll pass the mic off to Eric.
00:00:20.450 - 00:01:06.930, Speaker B: Thanks Anna. Thanks for having me. Hi everybody. My name is Eric Tang and I'm the co founder and CTO at Livepeer. Live here is building the world's open video infrastructure, especially infrastructure for Web Three. We will be working on this project for the last five years and today I want to tell you a little bit about NFT hacks using video. Given that we're going to have an NFT themed hackathon today, before we really dive into the hacks themselves and the technical details, I'd love to just share a little bit about why I think video is interesting for NFTs.
00:01:06.930 - 00:02:32.830, Speaker B: What? We know that as users of the internet, video is really everywhere. It's in our entertainment system, it's here to help us with education, it's here for ecommerce, help us make purchasing decisions, it's here to help us communicate as people and as businesses. In fact, video is 80% of all the internet's traffic and this has been growing, it's only been a growing trend in the last ten ish years and it'll continue to grow, especially as we get into this new post COVID world. So video is important for Web Three and important for NFTs to be tackling and have really great solutions. The other thing that's interesting about video is it's driven by creators, right? Videos are created by people. There's interesting economics because of this. For example, these large video platforms that we all know of spend a lot of money each year trying to cord creators to come onto their platforms to create video.
00:02:32.830 - 00:03:48.134, Speaker B: And that's an interesting phenomenon because if you think about know, these platforms don't actually create any videos themselves. They rely on creators to actually make content for their product. Even for the big platforms like Netflix and Disney. If you really look into it, they're not necessarily producing their content as much as getting creators to come and do a contract with them or buying the content from creators after they have already been created and produced. The other thing to note of today's world of video online is that it's highly centralized, right? There are about 50 million people around the world that call themselves creators. There's about a small portion who are professionals and a large number of them are amateurs. But if you look at the number of platforms that people creators use to create their content and make a living, it's actually very small amount.
00:03:48.134 - 00:05:50.880, Speaker B: It's all concentrated on YouTube and instagram TikTok and whatnot? And because all of these platforms use the same business model to monetize the content, basically by aggregating the data and selling this data to advertisers, they're starting to emerge to be this surveillance capitalism, right? And if you're interested, I highly recommend reading this book. It's really about what the world has turned into from where kind of before these big platforms existed, where today, because these platforms became so powerful and became so centralized, there was only a few mechanisms online that are capitalizing. Most of the know tying this back to NFTs and especially to an interesting article that the Zora team has written. It's this concept of crypto media, right? It's really this idea of now we have web3, we can actually create media that are independent in itself, but also tied to a market so that it becomes a single unit, right? So to look into this a little bit more, a crypto media as an object is a combination of two things. One is the media itself and the second is the market for that media. For that piece of media, right? Not all content under the sun should have a market, but a lot of them do have a market or do have the potential to have a market created around them. So for the media, we have the creator of the media and the owner of the media.
00:05:50.880 - 00:07:07.798, Speaker B: That can be different and then we have the market that's attached to that. So some of the interesting characteristics of crypto media this is by the way, written in a really nice piece of writing. If you go to CryptoMedia WTF, you can read more about this. The Zora team highlighted these crypto media files should be token based, they should be permissionless, they should be universally accessible, they should be valuable, they should be internet native, they should be platformless and they should be composable. So these are all interesting and new characteristics that media did not have before each one of them. So it's interesting to talk about what this means, especially in this web3 context, token based, we can think of them as a piece of media is represented by an NFT on chain. For example, permissionless means anyone can create this media and no one can stop you from doing that.
00:07:07.798 - 00:08:11.450, Speaker B: It's universally accessible. It doesn't necessarily have to be public by default, right? We can have access control on this media, but it needs to be universally accessible. Which means and it can be accessible from anywhere around the world. Anybody who has internet access has the potential to access this content, right? So when it comes to video streaming, what this means is we'll need a decentralized infrastructure that actually serves this content so that it can be universally accessible and it's not just sitting on someone's server and that entity can decide who has access to this piece of media. It can be valuable, right? We talked about attaching a market to this media, makes it tradable and therefore gives it value. It's internet native. So this means it can be kind of transferred on the internet by itself.
00:08:11.450 - 00:09:24.580, Speaker B: It doesn't need to, again, like sending someone's server, it's platformless. It means this media can be accessed through many different applications, not just a single application like YouTube or a TikTok and Composable, which is pretty interesting. It means media can be put together to create other forms of content. For example, we actually already see this in the traditional world where musicians will come together and use each other's samples to create new pieces of music. Even for video, you can see different visual effects being taken, being mashed together to create new types of content. So in order for all these characteristics to be true for video, we need new types of technology to enable this. Let's look at what are some of the building blocks that exist today in the web3 world that help us create this types of new media.
00:09:24.580 - 00:11:33.900, Speaker B: One is what video has to still stream well, right? So video transcoding is one of those mechanisms that's really necessary for online video to be streamable to all kinds of devices across the internet under any kind of network condition. So what this means is for a single piece of video, whether it's a live stream or a video file, it gets uploaded and then processed into different bitrates and sizes of the video, right? So for example, a high resolution 1080p video might be sent to a laptop or a gaming console where a 240 p video that's small might be sent to a mobile phone or a tablet. So even though between those two devices we think we're watching the same video, they're actually being transcoded and processed into different bitrates and versions. On top of this, we have video playback mechanisms called HLS. And HLS basically means we can stitch together all these different bitrates and allow this type of playback where the viewer can kind of jump from one version to another without a breaking experience as they're watching the video. For example, sometimes if you're sitting at home and watching a show on your computer and the video starts out very grainy and then over time it becomes more crisp. This is adaptive bitrate streaming in play, where when you're starting to play the video, in order to have a very quick playback experience, a small version is sent to you and then over time the player recognizes that you have access bandwidth and therefore it switches to a higher resolution video without having to disrupt your viewing experience.
00:11:33.900 - 00:12:05.220, Speaker B: And this is already enabled and accessible just via the traditional video streaming tech stack. You can use many different video players to do this. Some are proprietary, some are open source. Life here actually has an embedded player. Now you can just simply add an iframe into our application. This piece of code is in the live peer documentation. You can find that.
00:12:05.220 - 00:14:00.120, Speaker B: But beyond that, in order to have all of these different characteristics of a crypto media, we need to have things like infrastructure portability. So what does that mean? It means if a video is being hosted and served by a single piece of by some infrastructure, the application developer needs to know and have the guarantee that if that infrastructure goes away for whatever reason, they will be able to easily switch to another infrastructure and continue to serve that content without any interruption. This is not dissimilar to if you think about if you're building a DAP using a blockchain like Ethereum. You can access Ethereum via Infura but you can also access by running your own geth node or using Alchemy so you have portability for the data that you're getting. So the same thing should be available for video. So as you're using Lifepeer Studio to serve your video, if you wanted to switch to your own Life peer node, you can do that and continue to have a similar experience. And from here we can introduce the concept of ownership and providence, right? So prior to Web Three, video is uploaded into some platform and then it starts to live in someone else's platform, right? The creator stops really owning the video in this Web Three world.
00:14:00.120 - 00:15:15.380, Speaker B: Well, an application can use a video streaming network like Lifepeer to serve the video. They can use a decentralized storage solution like IPFS or Rweave to store the video and still own that content because they own the key. And at the same time they can mint an NFT on a blockchain like Ethereum or Polygon and signal to the world that they actually own that piece of content. And all of this because all of these infrastructure pieces are decentralized and not owned by a single entity. The ownership and providence truly lies with the user and the creator. And from here, the creators all of a sudden can get around the problem of kind of being hand tied by the platform in terms of how they can connect with their audience. Because they own the content and they own the providence of the creation, they can start to directly connect with their audience and use different tools to connect with them.
00:15:15.380 - 00:16:29.206, Speaker B: One interesting new tool they have now is Token Economics or Crypto Economics. So creators can use NFT Mints, or Direct Tipping or creating virtual goods or creating their own creator token using Token gating. All kinds of new mechanisms start to exist to help them create new economic opportunity for themselves, create a more authentic relationship with their audience and be able to truly own the content that they create through this. Especially for video. Life here is working on a new concept called Verifiable Video with this idea that the wallet address is actually associated with the video content itself. So that when you're getting a piece of video data, the data stream itself actually contains verifiable information of the creator of the video and also the validity of the video itself. So that when you're getting that piece of that video that you're watching it, you know that it's coming from the actual creator.
00:16:29.206 - 00:17:34.590, Speaker B: Doesn't matter which application you're viewing it from. And coupled with this is this concept of an Immutable video link, right? So you can see this livefior colon video link that represents this video. It could be on demand video file that's streamable, or it could be a live stream that is currently going on Live. That Immutable video link can be used in multiple applications, and different users of the different applications can know that they're all watching the same video. The video link can be taken into other applications as new applications are being built. I want to switch gear a little bit and start to talk about today's hackathon. Right? I understand the hackathon is almost over, but for people who are building out there, lifeure is offering a $5,000 bounty.
00:17:34.590 - 00:18:32.550, Speaker B: The easiest way to build with Live Here today is using Live Here Studio, which is a new product that we launched last month. And this product offers live streaming, on demand video streaming, and video minting. You can almost think about this hosted service as a gateway to the Live peer network. So they can easily start using a set of APIs and start building your decentralized application. A couple of simple things that you can do with it. You can upload a video file into Lifeview Studio. Lifeview Studio would handle all the ingest and transcoding storage of the file and caching of the file so that you can easily play back the video and be guaranteed a good streaming experience globally.
00:18:32.550 - 00:19:21.514, Speaker B: It doesn't matter where your viewers are. On top of that, you can export those video files into Ipfsrweave using that as the URL for you to mint NFT. There's an example that I can show you quickly to just illustrate this. Let me increase this a little bit. So what I have here is let me just show you quickly how to get your list of video assets. Here. I'm just querying the Lifepeer Studio API.
00:19:21.514 - 00:20:10.294, Speaker B: And here what you will see is a list of all the assets that I have uploaded into Lifeview Studio. You can see here, for example, I have a playback URL for this video that I recently uploaded. I can copy this and play it back. Take a little bit. I need to start download the video and start playing back this on the other screen here. It's a waterfall. Okay, now what we can do is we can mint a video NFT using this API.
00:20:10.294 - 00:21:10.240, Speaker B: There's a handy tool here that allows us to do this really quickly. It's the same waterfall video that I'm using. So what I can do here is I'm going to copy in my API key that I created for this demo. I can call this Zora waterfall. I don't need to customize any NFT metadata, but if I wanted to, I could. So now this little program is uploading the file and it's going to get the file uploaded and organize all the metadata together to a nice IPFS hash. So I can use that to just mint the NFT we'll come back a little bit later to see the minting process.
00:21:10.240 - 00:22:04.250, Speaker B: So let me continue to push on with the demo. The other thing that we can do is to create a live stream in live Me. Let me show you how to do that quickly. So the first thing that I will do is to go to live Here Studio, go to the dashboard. And I can already see a list of video streams that I've created before. Notice all of these streams are idle. I'm going to create a new stream with the API by using just the curl command that I prepared from before.
00:22:04.250 - 00:22:36.500, Speaker B: Okay, so now we have this video stream created. Notice it was called Zora demo stream. We go here, we see there's a Zora demo stream. In this stream. We have all the information that we need in order to actually do the stream. So if I click into this, we'll see that there's a stream key. And this is what's needed in order to authenticate the video ingest.
00:22:36.500 - 00:23:24.710, Speaker B: So here I have know broadcasting software called OBS. I am just going to copy that stream key in here, press OK and I start streaming. And notice that it takes a little bit to connect to the end server. But now we have started doing the live stream. So let's go back to this live Here studio. We should see it takes a little bit to get the video loaded, usually less than 30 seconds. And after that we should be able to see the live stream as we see this right here.
00:23:24.710 - 00:23:51.676, Speaker B: The playback. URL. It's in here. And all of the information should be in the response API response. We're actually interesting timeout here. I'm not going to debug this. I'm just going to move on to the next thing.
00:23:51.676 - 00:24:26.920, Speaker B: Okay. So with live streams, you can start to think about some interesting mechanisms like token gating. There's a token gating beta feature that's available. It's not documented right now on the Live Here Studio page. But if you're interested in using this feature, ping us in Discord and we can send you the documentation. Some hack ideas. One, we've been thinking about this especially for related to NFTs.
00:24:26.920 - 00:25:41.440, Speaker B: One idea is of course, just using video NFTs as collectibles and that's just simply minting the video NFT. The way you do it is you can upload it into life here. Into life here through processes like this one, right? So you can upload the video and based on using the using the Playback URL, you'll be able to get the way to play back the video. And from there you'll be able to create an NFT using IPFS here. These are the responses that you would need. Another thing that's interesting is to create a decentralized cameo OnlyFans. And what this would entail is a smart contract that allows anyone to kind of put up a bounty for others to create a video for them.
00:25:41.440 - 00:27:01.112, Speaker B: And then as the video gets created and uploaded into Minted as an NFT, that bounty can be fulfilled. Another idea is to have an on chain video broadcasting channel. This can be achieved by creating a live stream as an NFT and kind of using the broadcast. You can store the broadcast link in something like a lit protocol and then depending on whether someone has rights to broadcast into the video, into the video NFT, they'd be able to kind of load the broadcasting link and to create it. Here is an idea of how to do that before we've already created this live stream and it's still going. So what we can do is we can use an embedded video player to create the NFT. So imagine here is here's an embedded player that we have created for people.
00:27:01.112 - 00:28:10.830, Speaker B: If you're interested, you can ask us for the link. And going back to this test stream, we can copy the playback URL and paste it in here and here we should be able to play back the video. It might take a little bit because I'm broadcasting lots and receiving lots of video right now, so my home connection might not be might not be working as well. But you should be able to embed this link into a this is the IPFS link that's already living IPFS. So you can simply just embed this link as the animation Uri. Cool. Yeah, that's all for my presentation today, so yeah, let me stop here and see if anybody has any questions.
00:28:10.830 - 00:28:16.620, Speaker B: All right.
00:28:18.590 - 00:28:22.650, Speaker A: Crowd today a little bit. Yeah, it's the weekend.
00:28:23.170 - 00:28:23.822, Speaker B: Yes.
00:28:23.956 - 00:28:58.810, Speaker A: Yeah, well, I guess we can end things here. Eric, thank you so much for taking the time to do yet another workshop for east global hackathon metabolism. Yeah, this video is going to be up on YouTube for reference for anytime you want some cool content from live here or like the hack ideas that you just proposed there. But once again, Eric, thank you for taking the to do this and thank you to the rest of you for tuning in. And with that being said, I hope everyone has a great rest of your weekend.
00:28:59.470 - 00:29:02.310, Speaker B: All right, thanks everybody. Bye.
