00:00:00.410 - 00:00:20.078, Speaker A: Till everyone joins. I'm andrew with ETH global. Just going to kick this off. We have Shanna and Alex from Coinbase wallet. They'll be taking questions in the zoom chat. And with just I'll hand it over to Shanna and we will begin. Thanks.
00:00:20.164 - 00:00:34.710, Speaker B: Awesome. Thanks so much for the intro. Hello. Yes, I am Shanna Matthews. Shanna brian's with banana. I'm a developer advocate at Coinbase, and I'm here to talk to you today about Coinbase Wallet. I'm here with Alex.
00:00:34.710 - 00:00:37.666, Speaker B: Feel free to introduce yourself, too, Alex.
00:00:37.858 - 00:00:51.770, Speaker C: Yeah. Hey, everybody. Thanks so much for taking the time to be with us today. Maybe learn a thing or two. I'm Alex, developer advocate here at Coinbase. Also just excited to be a part of Hack money, see what you guys have to build. It's going to be really exciting.
00:00:52.270 - 00:01:06.814, Speaker B: Awesome. Cool. Thanks, Alex. So there's going to be three main parts to this talk. First, Alex and I are going to talk to you about Coinbase Wallet from a user's perspective. We're going to talk about some great features that Wallet has. Cool stuff our team's been working on.
00:01:06.814 - 00:01:35.594, Speaker B: And then I'm going to take a step back and talk to you about why wallets are important to you as a DAP developer and explain a little bit about how your DAP communicates with a wallet. And then last, I'm going to talk about what I think the ideal setup is for integrating a wallet into your DAP and hopefully walk you through a working example of a multi wallet integration working that you can check out and use to get kickstarted on your hackathon project. Cool. Alex, you want to take it away?
00:01:35.792 - 00:01:56.782, Speaker C: Yeah. I love that you gave me the easy part here. I think more than anything, we like to start these types of talks and workshops, know, just basically clearing up a couple of misconceptions that a lot of people have. There's coinbase and then there's coinbase. Wallet. And we're here to talk about our Coinbase wallet. It's self custody.
00:01:56.782 - 00:02:17.282, Speaker C: It's meant for DApps. We have it both on a mobile app and just as of, I think, November of last year, it's a Chrome extension as well. That's where you're going to see your developer tools inside of the Chrome extension? Yes. This is not the Coinbase exchange. This is a fully self custody wallet. This is not a KYC wallet. This is not a Custodial wallet.
00:02:17.282 - 00:02:52.354, Speaker C: You do not need to have a Coinbase.com account to have a Coinbase wallet. So we want to make sure that that's really clear right off the bat and make sure that you guys know that for the DApps that you're building. So Shannon mentioned, why should you care? And she'll get into a little bit more of that from the developer perspective. But from the user perspective, we want your DApps to amplify. And everybody knows Coinbase. We have one of the largest exchanges in the world, pushing about 90 million people at this point.
00:02:52.354 - 00:03:15.114, Speaker C: And we want you have access to those users with your DAP. So secure and easy onboarding of 90 million Coinbase users. I mean, that's a pretty awesome first thing that you should care about by using the Coinbase Wallet. But also just a couple of quick facts. We're the fastest growing wallet extension in the US. Again. It just launched late last year and the most downloaded self custody mobile wallet in the US.
00:03:15.114 - 00:03:44.414, Speaker C: A lot of that because people are using Coinbase and it is front and center when you get into Coinbase. So we're excited to amplify your DAP using Coinbase Wallet. And then of course, as you guys are building your DAPs, we want to make sure that your users and your DApps are ready for web Three. So our wallet is ready for web3. The coinbase wallet supports all EVM compatible L one and L two networks. And it does do that. Unified l one.
00:03:44.414 - 00:04:03.030, Speaker C: L two balance. So everything will show up across all of your wallet interfaces. When you have your coins in the wallet so your users can see whichever coins it is that they're holding. We do support ENS and username. We can as of recently, adjust all gas and speed up the cancel and the transactions.
00:04:03.850 - 00:04:04.310, Speaker B: Easy.
00:04:04.380 - 00:04:26.282, Speaker C: Add custom RPCs, not a difficult thing to do. We have twelve native networks so the rest can be added. Those EVM compatible change can be added via the custom RPC. The NFT portfolio currently has NFT interface for ethereum. NFTs. Just be on the lookout for how that may change over time. As you guys know, we just launched our Coinbase NFT.
00:04:26.282 - 00:04:52.402, Speaker C: Lots of things going on there. So exciting to see how our NFT interfaces evolves within the wallet. We have native Dex trading inside the mobile. There is a DApp browser and then of course we have full hardware wallet compatibility with ledger, which just was I think a couple months ago. So we're excited about that. Again, back to that safety and security element again. I'm going to be in the chat helping answer any questions that you guys might have.
00:04:52.402 - 00:05:10.300, Speaker C: I'll also be checking out the discord in case you guys are in there. We have our Coinbase channel in the discord. Definitely let us know either today or throughout the course of this entire hackathon what it is we might be able to help you with. We're here to help. I'm going to turn it over to Shanna to get a little bit more technical with you guys. So thanks again.
00:05:10.750 - 00:05:35.970, Speaker B: Thanks Alex. Cool. Okay, so next up, I'm going to keep talking on the user side and then we'll quickly transition over to talking about DApp developers and what they care about. So there's one more thing we wanted to highlight and this is actually really cool. Coinbase Wallet offers a lot of different ways to connect, to adapt via the wallet. We actually offer four different ways. Our wallet is very flexible.
00:05:35.970 - 00:06:02.586, Speaker B: I'll breeze through all of them right here. The first one is a pretty standard standalone browser connection. So this is what most in browser wallets offer. You can import your seed phrase into the extension and then connect through pop up to adapt, sign and submit transactions. Pretty standard stuff. It gets a little bit more interesting though. The second option I have here is if you actually want to store your keys on your phone.
00:06:02.586 - 00:06:44.810, Speaker B: So for example, if you feel more comfortable and confident keeping your private key on your phone, you can choose to connect your mobile wallet to the desktop DAP and then desktop extension and then sign and submit transactions from your phone. Still really convenient and it might feel a little bit more secure for your users. Third is if you are the type of person who wants to keep your keys in completely cold storage. If you have a ledger hardware wallet, you can connect that wallet to our extension and then sign and submit transactions via that. Super secure. Finally, this one is a little bit more complicated to explain on a slide, but it's really intuitive to use. So if you haven't checked it out, I encourage you to try it.
00:06:44.810 - 00:07:25.006, Speaker B: This would be connecting to DApps in our mobile wallet in the in app DAP Browser. So if you're using coinbase wallet on your phone, there's a DAP Browser in that mobile app. And if you, for example, open a DAP on Safari or Chrome on your phone, you can press Connect to coinbase wallet in that DAP and that'll deep link you into the coinbase wallet. Mobile DAP Browser here automatically connecting your coinbase wallet so you're just connected and can sign transactions right away. You can also just go straight into the DApp Browser right on your mobile app too. Cool. Okay, next slide.
00:07:25.006 - 00:07:53.040, Speaker B: Great. So we've seen the wallet. We've learned about some user facing features, but you guys here are DAP devs. You want to build stuff. So why does a wallet matter to you as a DAP developer? Okay, I like to think about a wallet and describe it actually as key management software. So what does that mean? Imagine you as a DAP developer has built a DAP. In this case you have uniswap up here.
00:07:53.040 - 00:08:30.490, Speaker B: But imagine that your users to use your DAP had to log in with their private key. So they had to give you the private key so that you could send transactions on behalf of that user. And then that user also had to do that for every other DAP that they wanted to use. Do you think you as a user would do that? I don't think I'd feel very comfortable. That's like a lot of trust that you're handing to all the DAP developers out there. So what a wallet does in this situation is take some of that burden of trust off your hands. As a DAP developer, the wallet is going to be responsible for holding and managing the user keys and facilitating that safe and secure signing and submitting transactions.
00:08:30.490 - 00:09:13.314, Speaker B: Basically, the wallet is acting as a go between for your At, DAP and Ethereum, and we're going to dive more into what that means. Specifically, I really like to take some time to emphasize this because I see a lot of people conflating the two ideas, like their wallet and their account that they have crypto in. They'll say like, oh, sorry, I can't try your new super cool wallet app because my funds are already in my MetaMask wallet. That's not actually how it works. The wallet app is going to like, you could think that because the wallet app is showing you your balance, but it's not actually holding your crypto. A wallet is maybe not even a good name for it because your crypto is really being stored on the public ledger. It's associated with your account, and you access it via those keys.
00:09:13.314 - 00:09:54.610, Speaker B: The account on chain isn't bound to any one wallet app, and it's totally wallet agnostic. You can import your keys into any wallet you want to. Cool. Now that we've cleared that up a little bit, let's talk about the provider. So I've kind of described at a really high level what a wallet does for you as a DAP developer. But let's get into more details, like how exactly does your DAP communicate with a wallet on your DAP? Like, as a DAP developer, how do I send transaction requests to the user? Or how do I listen and figure out what the user is doing in their wallet, like when they switch accounts or they switch networks? The answer is kind of simple. It's really basic.
00:09:54.610 - 00:10:41.926, Speaker B: It's no different than how any other systems interact it's through an API. This API is standard. Every wallet exposes this API on the web, almost always through a JavaScript object onto that web page for the front end to interact with. The interesting thing here is, what do we call that API? You guys probably already know and it's on the screen already, but you might think it'd be called something like a wallet API or like a key management API, but it's not. It's called the provider. So why do we call the wallet API a provider? We call it a provider because, again, at a high level, the provider API really just provides access to Ethereum through this specialized client. So what does access to Ethereum really mean? It means two things.
00:10:41.926 - 00:11:00.090, Speaker B: First. It enables your DAP. To make ethereum RPC requests. And then second, it allows your DAP. To subscribe to events or state changes from the user's wallet. We're going to talk through some examples of both of these things. First, making ethereum RPC requests.
00:11:00.090 - 00:11:45.210, Speaker B: Okay, so the request method is like the main method that exists on the provider API that you would use to interact with Ethereum. And this request method, you can kind of see the method signature up here. Is a wrapper for JSON RPC calls to the client. All adapt needs to do to submit one of these requests is just specify which JSON RPC method that they want to use and then the relevant parameters. We're going to go through a couple super common examples as a DAP developer that you would use of these request methods. The first one would be connecting a wallet. This is specified by EIP eleven two for account authorization.
00:11:45.210 - 00:12:08.480, Speaker B: It's really simple here. This is one of the most simple ones you're going to do ETH request accounts. You get a nice pop up from your wallet. Next, adding and switching networks. This is specified by EIP 33 26 and 30 85. This exactly here is an example of adding the Wagme network. So you can see in our code here.
00:12:08.480 - 00:12:35.574, Speaker B: Again, it's pretty simple. First, it's a little bit more code than we were showing on the last slide, but not too bad. You can see first we try to switch the request to this chain. You can see wallet switch ethereum chain. And if that doesn't exist, we are going to send another request to the provider to add this network with these specified parameters that we have here. Next I'll show you watching an asset. So wallet watch asset.
00:12:35.574 - 00:13:02.878, Speaker B: This is EIP 747. This is basically sending a request from your DAP to import custom tokens on the wallet. So these are some that you should know about. Really helpful for DAP developers. And that brings us to the second category of things that the provider API provides for you. And that would be the events API. So this is for subscribing to those events, finding out what the user is doing in their wallet.
00:13:02.878 - 00:13:50.802, Speaker B: This events API actually extends the node JS event emitter API. And all you have to do for your DAP is subscribe to these event emitters using on and remove listener. You're going to specify the events you're actually listening for and then just react and handle those in your DAP. Again, pretty straightforward. Okay, so ultimately this provider API is really powerful, but the API surface for using it is really simple. Like I was saying, it's just RPC requests and then subscribing to events. One thing that I really like to emphasize that's really beautiful is that this super simple API surface for this provider isn't special to coinbase wallet at all.
00:13:50.802 - 00:14:31.550, Speaker B: It's universal across all different wallet providers. So what does that mean for us? Okay, perfect. If you sent wallet providers this provider API, this is standardized. It's standardized under EIP 1193. And this is meant to enable wallet interoperability. And what I mean by that is that means that you as a DAP developer can write your DAP and you shouldn't really have to think about what wallet your user is using or wants to use. The way that you make those requests to the client and the way that you listen for subscribe to state changes is pretty much wallet agnostic.
00:14:31.550 - 00:15:22.400, Speaker B: Awesome. This kind of brings us to the next portion of the talk, which is how do you integrate one or many wallets into your DAP? Cool. As a DAP developer, you probably know how to access the provider in the browser. You grab window ethereum, and bam, there's your provider. But when you do that, you may have already thought of or noticed or ran into this issue. So this injected provider, any wallet extension, browser extension, when you install it, it injects its provider into this window ethereum property, and that's why it's called the injected provider. And then DApps on their front end can look for that and make requests and listen on this window ethereum object.
00:15:22.400 - 00:16:12.862, Speaker B: The issue that I was mentioning that you may have noticed is that at this point in the web3 developer ecosystem, there's really only room for one of those providers on that property. So you're probably making a DAP that's relying solely on that window ethereum, and you don't know what's there, but only one wallet can fit. So this whole wallet interoperability thing isn't working to the fullest extent. It's not doing as much as we could be doing with it. There's really just one wallet there because there's only one provider there. So that leads us to how do we actually integrate multiple wallets into our DAP? And the solution that I think is the best is using a multi wallet modal. As we've mentioned, since wallets are interoperable, why not? It's easy.
00:16:12.862 - 00:16:55.354, Speaker B: We should just be able to plug and play each of these wallets into our DAP. How do you implement one of these? It can be really simple and really basic. If you wanted to do it all yourself, all you'd have to do is just install each of these provider SDKs, plug them in, build yourself a modal, put an on click handler in there to activate each provider when you click the button. But this is a hackathon. You're here to hack. You probably don't want to spend all your time reinventing the wheel and remaking your own multi wallet solution, and there's no reason why you have to. There are awesome aggregator libraries out there, open source libraries that aggregate different wallets together.
00:16:55.354 - 00:17:35.900, Speaker B: There's generally two categories in the way that I think about them. The first category would be headless libraries, so ones that don't include a UX. You make your own UX and then built in modal libraries are just like out of the box libraries that have a UX included that you can't customize, but you didn't have to make it either. So that's a good trade off. We have four popular libraries up here. Web three react and Wagby hooks are both examples of headless libraries, and web3 modal and web3 onboard are both examples of those out of the box libraries. I will just briefly talk about two of each or one of each.
00:17:35.900 - 00:18:02.914, Speaker B: Okay. Web three act is I would say the most popular multi wallet provider library. It is headless as I mentioned. It's great if you want to customize your own UI, you really care about how the whole user experience looks. This is very popular. I mean it's used by very big DApps like we used Uniswap as an example earlier. They actually use web through react and it works great.
00:18:02.914 - 00:18:28.138, Speaker B: It's super simple. Here's a code snippet of how to integrate a few different wallets into. So you can see at the bottom of this code sample. You see we're connecting MetaMask, coinbase wallet and wallet link. It is super simple. And then for a library that has a built in UX, web3 modal is really great. Again, super simple to get up and running with.
00:18:28.138 - 00:19:00.818, Speaker B: If I were going to recommend something that you would use a library for you to use for using multi wallet during your hackathon, I would totally recommend web3 modal. It's so easy to get started with. Again, here is a code sample of using it where you can just see how easy it is to put in our coinbase wallet SDK. At least that's what we included in this code sample. Cool. Okay, I am going to give it a shot to show you using web3 modal. We have an example of it running.
00:19:00.818 - 00:19:24.540, Speaker B: I was having a little issue earlier today but hopefully it should be all good. We'll see. We're going to start right here on our docs page. These are our coinbase wallet documentation. They're pretty comprehensive we think, but if there's stuff missing, please let us know. We'd love to get feedback. I have personally put a lot of effort into these docs and I would love to hear how to make them even more awesome.
00:19:24.540 - 00:19:59.510, Speaker B: Anyway, but let me draw your attention to the relevant section here which would be integrate with libraries. So we have little walkthrough tutorials of each of the four main aggregator libraries. Right here. This is our walkthrough for web3 modal. They all look pretty similar, but the important parts I'm going to touch on right now are we have a code sandbox that's up and running with an example of this here is it's kind of like architected a little bit. So the code is split up. So it's not super simple.
00:19:59.510 - 00:20:40.194, Speaker B: So if this is too much for you, you're more of a beginner, feel free to don't be intimidated. Feel free to just walk through the actual walkthrough. It does take you step by step and so you can do it yourself rather than just jump into something that's already working. But anyway, okay, I was going to show you our little running demo. So here is running in this page and you can see that I've just commented out the section that actually integrates coinbase wallet. Web three modal comes with MetaMask or well, it comes with the injected provider as the default. And since I have MetaMask installed that's taking up this first spot in the built in UX.
00:20:40.194 - 00:21:02.490, Speaker B: You can see that there. But if we just go ahead and add the Coinbase Wallet SDK and add a little bit of code into our provider options object from web3 modal, hopefully we should see bam. Okay, nice. Very good. Now we have a Coinbase Wallet option on there as well. If I click it nice. Okay.
00:21:02.490 - 00:21:19.982, Speaker B: You can see that it's asking to connect to my wallet. I can connect to my wallet. Super awesome. Mostly. Okay, this pop up didn't go away, but my wallet should be connected now. Let's see. Okay.
00:21:19.982 - 00:21:41.538, Speaker B: Yes, my wallet is connected now. And so you can see my account can switch networks. This is all UI that we've put into this example just so you can see all the features. But it's great. Highly recommend it. Check out our docs here and ping us in the discord if you're running into any issues or have any questions about this stuff. Cool.
00:21:41.538 - 00:22:31.160, Speaker B: Okay, I think we have a little over five minutes left, so I'm going to go ahead and switch slides, hopefully. Yes. Okay, I'll do a really quick review just to put the important points back in your head. Basically, EIP 1139 defines a standardized provider, and that provider provides ethereum access to DApps. So this means it gives you a way as adapt to make Ethereum RPC requests and respond to state changes that you get back via events. And multi wallet modals make this super easy to do. Each wallet's standardized provider fits right into the aggregator library so that your DAP can support any wallet that a user wants to use.
00:22:31.160 - 00:23:12.434, Speaker B: Okay, now for the good stuff, let's talk about prizes. Coinbase is giving out a $6,000 pool prize to be a split amongst all projects that use Coinbase Wallet. And we also have some super special bonus prizes available for projects who submit really great feedback about their experience using Coinbase Wallet. Great feedback can include bug reports, it can be feature requests, it can be documentation suggestions, it can be code sample issues, anything. This is a broad spectrum, but we just want to know how your experience was to qualify for that pool prize. You have to successfully integrate coinbase wallet into your DAP. Like I said, I recommend using one of those aggregator libraries.
00:23:12.434 - 00:23:35.520, Speaker B: And you have to submit our feedback form about using Coinbase Wallet. And like I said, do a good job because bonus prizes. Okay. We are also hiring lots of different roles. If you are interested in Coinbase, check out Coinbase.com careers. If you are a devrel person too, shout out or, you know, great ones.
00:23:35.520 - 00:24:03.890, Speaker B: Send it my way. I would love to talk to them. And finally, I think we would love to connect. Myself, Alex and then other engineers from the Wallet team will be around in discord throughout the course of the hackathons to answer questions for you or just chat. We'd love it. For you to follow Coinbase Wallet on Twitter to get the latest updates about what Coinbase Wallet is doing. And this QR code should take you to a link tree that should have links to our documentation.
00:24:03.890 - 00:24:30.560, Speaker B: It should have links to the form you have to fill out for feedback to get qualified for one of our pool prizes and I think a way to connect to people at Coinbase. Check it out and let me know what's on there. I'll check it out after this, too. Awesome. Okay, thank you very much. I will stop presenting. I would love to hear if anyone had questions.
00:24:30.560 - 00:24:50.760, Speaker B: Let me see. Okay, there we go. Great. Okay, I think I stopped presenting. Awesome. Cool. Alex, were there any great questions in Chat? Or anyone want to come off mute and ask anything about Coinbase or Coinbase Wallet or other developer products that we have coming soon, hopefully, and some stuff that exists already.
00:24:54.890 - 00:25:37.858, Speaker C: I'll just chime in, let you know, Shanna, that we had one question regarding the difference compared to MetaMask. I listed a couple of those differences from a user perspective in the chat. But as Shanna said, our hope for you guys more than anything is to get as much access to as many different users as possible. The way that Shanna showed wallet integration, there's no difference between Coinbase Wallet and MetaMask. It's really hoping to get your users where they're at. So that was what we were hoping to convey here. We have a tall task ahead of us to get as many users into crypto as possible.
00:25:37.858 - 00:25:44.054, Speaker C: So build some cool stuff that will help that along and the wallets will take care of themselves.
00:25:44.252 - 00:26:20.114, Speaker B: Yeah, I love that answer. I will also say that I think by design for developers, coinbase Wallet should be pretty similar. Using Coinbase Wallet should be pretty similar to using MetaMask, as you probably kind of learned, hopefully throughout my presentation. But we are working really hard. There's a ton of engineering resources dedicated to Coinbase Wallet right now, too. And if you have things about MetaMask that you love that aren't working well in Coinbase Wallet, let us know. If you have stuff that doesn't exist in MetaMask that you would love to see in Coinbase Wallet, let us know.
00:26:20.114 - 00:26:39.800, Speaker B: We want to hear from you. Do we want yes. Sorry, I was just reading them. So do we intend to have a connection to Coinbase NNT in the future? I am not on the NFT team, so I can't really speak to their plans. I don't know, Alex, if you have a better answer to that.
00:26:40.330 - 00:27:24.422, Speaker C: So right now, today Coinbase Wallet will show you your NFTs that you buy in the Coinbase NFT. All ethereum NFTs will show. I think your name is I'm going to butcher pronouncing it, but Nargis, if that's how I say it, hit us up in discord. Let us know if there's more that we can answer beyond that, just because if we do need to get in touch with the NFT team, you have specific questions? We can, but we just launched the NFT platform globally, I think, yesterday, so really excited. Come check it out. If the feature is not there today, my gut tells me it'll be there soon. We've got an army of people that are working to make it a really amazing NFT experience.
00:27:24.422 - 00:27:31.958, Speaker C: So thank you guys so much. Yeah. I don't see any other questions in there. Shannon, anything else?
00:27:32.044 - 00:27:44.220, Speaker B: Awesome. No, just hi, I'm excited to be here. Thanks all for joining the presentation. Please reach out to us in Discord if you're having any issues integrating Coinbase Wallet or anything else you want to see.
00:27:47.070 - 00:28:07.440, Speaker A: All right, that wraps it up. Thank you so much, Shanna and Alex from Coinbase Wallet. Just a quick reminder, kickoff for the hackathon is tomorrow, twelve Eastern. Twelve noon eastern. And then the hackathon is a great way to reach out to the Coinbase Wallet team. Thanks again. Let's keep the conversation and the questions going in Discord, and good luck hacking out there.
