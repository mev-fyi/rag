00:00:00.330 - 00:00:35.350, Speaker A: On how to use wearable protocol with Alex. So I will let Alex take it over soon. And just a quick reminder, if you guys are not fully staked for the hackdown, please do it as soon as you can. And if you have any questions following this workshop, please go to the discord channel from the sponsor and feel free to ask any questions on the chat. We will answer them either as we go or the end of the workshop. I will let it on for you, Alex.
00:00:36.010 - 00:01:32.170, Speaker B: Thank you, Catherine. I'm so happy to be here today. I can see we have a lot of listeners. How much? There actually something like 50. So not sure what's the experience of everybody here already with NFTs, but I believe since it's a hackathon, there is some basic technical understanding. So today I'll briefly talk about wearable protocol and how do we see you guys are working on top of it and some rationale behind why we ever created that protocol and what's the global vision for all of it is. And then I'll screen share the basic flow of the order inside the protocol so you can actually understand what is again the overall circle that you need to make in order for the order to be fulfilled.
00:01:32.170 - 00:02:03.646, Speaker B: That's the program for now. So at first I'll talk about wearable for quickly. We started 1.5 years ago is an open platform that democratizes access for NFT creation to everybody. We basically wanted users to experiment and find out what are the great use cases for NFTs are. We knew that NFT market is great, we didn't want to target some use case specifically. So we created that simple platform that allow you to connect your wallet.
00:02:03.646 - 00:02:54.334, Speaker B: We run decentralizedly on Ethereum blockchain with our Smart contracts. You can connect your wallet and directly interact with our smart contracts to mint an item with an easy form that requires only an image, name and description from you. We're growing much more than that lately, and the second big part of that is the marketplace. We've grown that platform for several months until last summer. In July, we decided to launch liquidity mining program. So we understood how difficult it is to grow the marketplace and we started rewarding people who are making trades on wearable proportional to their volume, transacted both buyers and sellers. And that creates an extremely great incentives for people to start using the marketplace.
00:02:54.334 - 00:03:48.338, Speaker B: And since then we've been growing, we've grown quite great for the last several months. And now we are at the position when we do $2 million of jailey marketplace volume with $30 million of monthly marketplace volume with 5000 guys transacting each day on the marketplace transacting. So making specifically transactions on chain and 90,000 people just interacting with the front end. So it's a lot of eyes on the platform. And our next big step in developing the platform is basically going even more in decentralizing. So we're launching wearable protocol. We are taking all the tech behind Wearable and we're making it available to build on top of it for everyone.
00:03:48.338 - 00:04:36.840, Speaker B: So Rarible protocol consists of several parts. The first part is actually Minting. So Minting we host an ERC 721 and ERC 1155 contracts on chain that supports Lazy Minting and custom royalties and multiple beneficiaries. So you can make collaborations and you can set up arbitrary royalties that would be downstreamed on the matching process. We also support Lazy Minting. That means that item would not be created until it was bought, until the contract that is responsible for matching actually matched an order that has this NFT that wasn't yet created. And it gets created on the matching event.
00:04:36.840 - 00:05:33.798, Speaker B: On top of that, we have an indexer that indexes all the NFT data on Ethereum blockchain automatically picks up all the new collections, not even diverged from the wearable ones collections. So all the NFTs, all the collections out there get indexed. And then that information is served by our API. So you can query API to understand like give me all the NFTs by this user or give me all the NFTs by this collection. So this is the structure of our protocol. I hear that there is a question on our YouTube stream. So the question is what is Lazy Minting? So I'll explain that a little bit more.
00:05:33.798 - 00:06:24.680, Speaker B: When you need to create an NFT, what actually happens? Just the simple flow of creating NFT. You're going to ERC 721 or 1155 contract on chain and you are calling the Mint function, you're supplying the token Uri to that Mint function. And a token Uri is basically the Uri that tells you where the metadata is stored. So this transaction is an actual contract call. That's why this transaction is paid. Moreover, this transaction is quite costly because you need to store this token Uri on chain. So if that creates this situation, when people, in order to create their NFTs, whether they will be sold or not, they need to pay first something.
00:06:24.680 - 00:07:16.786, Speaker B: And these transaction costs are quite huge for the starting creators. That's why there is this other flow. You can actually create your NFT. You can have your token Uri, you can have your metadata uploaded to IPFS or some other storage. You can have this token Uri, but without Minting you can create an order for this NFT to be sold and loaded up to the Wearable protocol after this order, on the moment when this order is matched with the contour order. So you created an NFT, but not yet created on chain. You created an order that is telling I will sell this NFT for ten ETH.
00:07:16.786 - 00:08:11.346, Speaker B: Then somebody comes to the platform and making a contour of order. They're saying I'm ready to buy this NFT for ten e on the event of this order matched. Our exchange contract is taking the money from the buyer and creates an NFT exact same moment when the order is matched and sends it to the buyer. So that's what lazy Minting is. I can see other questions here. Let me probably go over all the structure of the protocol and then we'll come back to the questions because I don't want to break the flow. I will get back to you guys in a moment.
00:08:11.346 - 00:08:57.770, Speaker B: So let me share my screen with my Brave browser. So, this is what I already told you. We have this minting and exchange and indexer. All the source code for the contract is available by this link. Under this repository you can find our set of tokens which are 721 and 1155. Under this repository you can find our Exchange contract that is actually making swaps. And yeah, there are several helping just libraries.
00:08:57.770 - 00:09:52.734, Speaker B: For example, royalties. It's the description of how should you build your ERC 721 contract if you want it to support royalties. So you can create your own contracts that will be available to trade on wearable and wearable decks that will be indexed by our indexer. And that would support royalties because on chain there is information like how much royalties you set up for this particular account, for this particular token ID. So your contract should just respond for the specific function call that our Exchange contract is doing when performs a token match. So this is on our contract. Let me get back to the documentation.
00:09:52.734 - 00:10:56.630, Speaker B: So we encourage everybody to build on top of wearable protocol. There are several features, there are several positive factors. Why would you want to do that? And the biggest one of this is that it's really hard to grow the buy power and sell power when you're creating your project from scratch. So the first buyer comes and there is no sellers and the first seller comes where there are no buyers. That's why we want all the projects building on top of wearable protocol to be instantly accessible, to have an instant access to all the buy and sell power of wearable platform. Because wearable is also the client of wearable protocol and Wearable has a lot of users, so that's the best part about it. And moreover, we have such features like monetization that allow you to set up arbitrary front end fees that would be taking before an order gets matched.
00:10:56.630 - 00:11:30.282, Speaker B: So you can instantly monetize your product on top of airable protocol. And we have a Dao that would support all the projects that are building on top. And it's great that you're starting early. You can help us design the incentives for the projects building on top of wearable protocol. And we are fully devoted to support everybody in the Wearable ecosystem. So the URL for wearable documentation is docs@wearable.com. We have deployed our new contracts just recently.
00:11:30.282 - 00:12:18.990, Speaker B: So we have the series 720, 111, 55 and Exchange contract on the Rinky Buy network. Exchange contract is a proxy contract. So if you want to interact with it, you can use these tabs as read as proxy and write as proxy just to play around with it. And let me get back and take you over the flow of order creation. So overall, the protocol flow is the following at first you need to have an asset. You can either deploy your own asset derived from the wearable we have some more questions here, let me check it. Okay.
00:12:18.990 - 00:13:18.334, Speaker B: So I can get back to those particular questions afterwards. So the overall flow of using the protocol is first you need to have an asset. You can either deploy your own asset, it can be derived from the wearable asset contract to support royalties and lazy minting or it can be just the simple play in ERC 721 or 1155 asset. Basically afterwards when you have an asset, you know the asset collection and asset ID. You can take that asset collection and asset ID and create an order for it. So an order is the structure consists of different fields such as maker taker, make asset take asset. So it's an actual description of what are you willing to take and what are you willing to make in that swap and what do you want to take in response.
00:13:18.334 - 00:14:01.810, Speaker B: So that's the basic flow of order. Then there is a contour order. Again the simple structure that needs to match your order. So if somebody willing to make an NFT and take ten ETH in response, then the counter offer would be I want to make ten ETH and I want to take an NFT. So this is the matching process. As soon as you've got these two signed orders, you can go to Wearable decks contract and you can execute these two orders. You can match these two orders and they will be executed and assets would be swapped between the buyer and seller.
00:14:01.810 - 00:15:09.590, Speaker B: The orders aren't stored on chain so far. That's why after you created an order, the sign structure, you want to submit it to the wearable protocol, to the wearable backend. You want to submit to register this order in order for somebody else to be able to find that order. So you've created the sell order, you called the wearable backend API and you pasted that order to the backend API. And then somebody else came queried the list of orders, understood that this is an order that they want to fulfill. Create a counter order and then from a front end to go to the wearable smart contract and to match these orders, you can also cancel or update an order canceling of orders happening on chain. You need to actually call the contract method to cancel an order and updating an order is creating a new structure and submitting it to the same Wearable API endpoint to make sure that this order gets registered.
00:15:09.590 - 00:16:09.654, Speaker B: Again, here is the contract addresses. Here is the simple flow of how can you create an asset. This is fully done. You can upload your metadata to pinata and then to call the Wearable contract to make sure that the item was minted. So here is this Exchange overview. This is the order structure, the list of fields that you need to have in the structure to create an order. It's maker, it's make asset, it's taker, it's take asset, it's sold random number, it's the time and when you want this order to be valid from start to end, then there is this large chunk of data that can be basically arbitrary.
00:16:09.654 - 00:17:02.150, Speaker B: And we have several data schemas. Version one, version two. This part of the order stores the origin fee and payouts. If you created an item with several openers with several creators, then you store this data here as well. And then there is this understanding of how the order execution works. One more thing that I want to cover is in order to swap an asset, you need to call an approval function for your NFT. So you need to approve our contract to actually move this asset on behalf of the user.
00:17:02.150 - 00:17:41.490, Speaker B: And the same happens with ERC 20. You need to approve this ERC 20 to be spent by our contract. In order to do that, you need to call approval functions for our NFT proxy contract and ERC 20 contract. So that would be it. That would be the basic flow of Wearable protocol. I know it's a lot to unpack. You can always find us and me and the team under the sponsor Wearable discord channel inside the NFT hack discord.
00:17:41.490 - 00:18:33.060, Speaker B: We would be providing any help that we can to you. We are operating under European time, so mostly we will be able to help you on Mornings United States time. And if you want to get help from the team, let's go to the questions. We have a lot of them. So there are some questions about whether we want to go to layer two. Yes, we want we will adopt some EVM compatible chain like Xdai or Polygon or Avalanche or Moonbeam. We haven't yet decided which one.
00:18:33.060 - 00:19:17.400, Speaker B: But that's basically the next feature after we're rolling out the protocol. So the protocol contracts are all upgradable. We have our own deployed contracts. We will extend them with new feature use and upgrade them on a rolling basis. If you use your lazy Minting contract, you can still trigger asset creation by calling the Mint and transfer function of your NFT contract. That's actually what Exchange is doing. Exchange is just calling this Mint function when it feels on the order matching level.
00:19:17.400 - 00:20:18.324, Speaker B: So you can obviously call it yourself and that would work. Somebody asking about the protocol. Does this mean that the contracts are already deployed by Wearable? Or it is possible to deploy the contracts by yourself to L two like XDI with your own symbol? Yes, source code of those contracts is public. You can deploy your own versions of the contract. But I think it makes sense to deploy contracts asset contracts if you want to create your own NFTs. But when we're dealing with Exchange Contract, the single best value proposition of that is the shared order book across all the projects. So you can make sure that your orders created on your own front end will be automatically paste on Wearable website after Wearable adopts Wearable protocol so far Wearable.com
00:20:18.324 - 00:21:39.552, Speaker B: uses the previous version of the protocol. The shared order book is the value proposition and the key value proposition for the protocol. So we will go with our shared order book to other chains as well. Lots of questions again asking about polygon medical tool so Wearable contracts can work with polygon medic and we are expecting to deploy our version of contract in some future for like a month to some layer two solution. Well, you can deploy your own contract so far, but again, as I was referring previously, the shared order book is the key. What if the NFT was bought somewhere else? Well, so we have this tracking function of whether this order is valid or not in our indexer. As soon as the NFT was moved, then we understand that the seller doesn't have this NFT in his wallet anymore and we trigger the order to be invalid on the backend.
00:21:39.552 - 00:22:55.442, Speaker B: So if somebody would find this order and try to go to the contract and match it, the matching won't work because the contract can't transfer the asset because it was already moved. And as we understood on the indexer level that the item was moved, we are flagging this order as invalid and the next request to the order listing API would not return that order if it doesn't have the valid asset on the maker side anymore. The same happens with the taker side. How much gas is minting on chain is the next question then? The answer to that question would be from $20 to $100 on the Ethereum main net. And right now I haven't tracked the gas prices. I think it's more like from 20 to 50. So the multiple royalties works like this on your contract level year C 721, there is this function get Royalties exchange.
00:22:55.442 - 00:24:15.406, Speaker B: Our Exchange contract is calling this function Get Royalties for the specific item, for the item number five. And this function returns an array of tuples that has address on the first place and the amount of royalties that need to give to this address on the second place. So we have this array of tuples of addresses and respectful royalties for them and contracts just respect that array and gives the respectful payout to these addresses. So all you need to implement in order to support multiple royalties, you need to implement this function on your asset contract. What is the main advantage of Wearable versus OpenSea? Well, I think you can think about it on your own. We are all friends in the ecosystem so we probably have more users on chain, so probably even much more users on chain less volume though. And I think the main advantage would be that we have a Dow and we're pushing on this protocol thesis really heavily.
00:24:15.406 - 00:25:10.548, Speaker B: If you want to build on top of something, you want to build on top of the permissionless protocol controlled by the token holders yes. Rarer will be used as a governance over this protocol. So far, that's the only utility. We expect the Rare holders to perform moderation work and verification work in the future. Once we develop these features for the protocol, it is possible to use Rareable to create a marketplace where people can create NFTs, make sales, make bids and accept this bid. That's totally possible. Protocol supports ERC 721, ERC 1155 and ERC 20 swaps in any order.
00:25:10.548 - 00:25:49.850, Speaker B: So you can make ERC 721 to 1155 or ERC 20 to ERC 20 or ERC 721 to 721. Like the main case is obviously swapping NFTs for money. Ah. When creating your own marketplace, you can list NFTs only created through your own marketplace. We have this origin fee. So inside the order structure, you're supplying the list of origin fees. Again, the same with royalties.
00:25:49.850 - 00:26:14.020, Speaker B: And you can query the wearable back end to give you only the orders that has specific origin address in them. I think that's it for now. We're out of the time. You can find us on the East Hack discord and inside wearable discord. But I think Ishag discord is better. Wearable Discord is so big.
00:26:16.950 - 00:26:42.794, Speaker A: Thank you so much for your time for the talk. It was super interesting. As you said, anyone who wants to reach out to the team, go find them on the Discord Channel. There is a specific sponsor Wearable Channel and their team will be there more. And we're out of time for questions, so I won't ask for any more questions. Thanks everybody for all the questions that were sent. I know a lot of people wanted to learn more.
00:26:42.794 - 00:26:44.760, Speaker A: So excited to see the project that will come out of that.
