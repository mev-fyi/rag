00:00:00.330 - 00:00:42.438, Speaker A: You. Here we go, everybody. Welcome to our second batch for market make. Judge. Today's day one and session number two for our acts and judging them from Market Make. So I kind of want to just give a summary to everybody for our video recording here. This has been our first event for 2021, and we're super excited to have 490 hackers compete and work on interesting projects.
00:00:42.438 - 00:01:39.658, Speaker A: And we're going to see a subset of them here today. These 490 people are coming in from 58 different countries and spanning 17 different time zones with a lot of interesting and diverse ideas and people and problems being tackled and super excited to see what everybody's built. So submissions were due yesterday, and we have 120 projects that have come out of this event, and we'll see about 30 of them today and 15 of them in this session. So I want to quickly go over the format before we jump into our very first project. Each team will have eight minutes in total, at which the first four minutes are for a video demo that has been pre recorded. And then we'll have a four minute Q A session where our judges will be able to ask teams any questions or clarifying that they have missed. And we'll also do a two to three minute break every four projects so our judges can confer with each other and kind of get a good handle on how to think about all the teams here.
00:01:39.658 - 00:02:39.626, Speaker A: And then based on how things are going from a timing standpoint, we'll also do a quick break at a halfway point so everybody can stretch or get some coffee or food and just get a quick break. So in terms of how this is set up today and for this event, each team will be rated on these five categories. They'll be looked at on how technical, original, practical a project is, and then on top of that, from a UI UX and Developer experience standpoint, where it stands. And then we obviously recognize that not all of these categories are enough to quantify everything or account for all edge cases. We also have a catch all that we like to call wow factor that we get to use to handle any other case that we may have missed. And before we kind of move on to our very first demo, I wanted to remind everybody that this is not a competition. The events are specifically designed for people to learn and experiment, and the projects here are not trying to become businesses, nor is it incentivized.
00:02:39.626 - 00:03:10.806, Speaker A: And the goal for these sessions is to get feedback on the projects. So we're here to understand what's been getting everybody excited and then how to take it to the next level and continue building. And that's kind of the goal and the theme for this event. So doing the hard job are our three judges. We have Patrick Collins from Chainlink. We have Ken from Evan Foundation and Hart Lambert from Uma. They'll be with us for the next couple of hours, talking to all the teams and presenting.
00:03:10.806 - 00:03:50.536, Speaker A: And with that, we are ready for our demos. So we have our first team here ready, and that is Lump Finance. So, without further ado, I'd like to welcome Lump Finance to kick off with their screen share and play their video. So, Nick, anytime you're ready, feel free to kick us off. Hello. My name is Nick Morris and I'm the developer of Lump Finance. Lump Finance is a decentralized crowdsourcing platform that allows content creators to receive funding from their fans while significantly reducing the financial burden of actually spending or donating money.
00:03:50.536 - 00:04:30.132, Speaker A: Content creators can create pools that their fans can deposit ethereum into. The deposited ethereum is then swapped to Dai and then deposited into Aave's Dai Lending Pool. The deposited Dai will then accrue interest over time, which will be paid out to the content creator at any point. Fans are able to withdraw their funds from the pool while only losing out on the gas fees required to make this all work. So what does this actually look like? As Alice, I would first go to Lump Finance, where here I am greeted with a form to fill out. I would fill out this first one with the name that my viewers know me best. As next, I would include a bio describing who I am and what I do.
00:04:30.132 - 00:04:56.380, Speaker A: For now, I'm just going to put same sample text, but you can put as much text as you want here. Next, I would include social links. And these are the links that my fans who visit my page. This is to tell them where they can find my content. So let's say that Alice has two sites. She has a YouTube channel and a Twitch channel, twitch TV slash Alice drawings live. I can add as many links as I want, but I'll leave it at two for now.
00:04:56.380 - 00:05:28.704, Speaker A: Once I submit this, I am greeted with a MetaMask transaction confirmation where I can confirm this. Once the transaction is completed, I'll be taken to my actual page. Here I can see how much money has been pulled in my contract. I can see my name. I can see a link that'll take me to the ether scan address of the pool. I have the description that I've put here and the amount of money that's available for withdrawal right now. Here I can see the links that I've included.
00:05:28.704 - 00:06:04.768, Speaker A: And these are, again, the links that my fans need to go to to see my content. And there's a description for anyone new to the website here. Down at the bottom, there is a area to deposit and withdraw ethereum into the contract. So now I'm going to switch to what would be Bob's view. So the view is essentially the same here for Bob. The only difference that he can't see the available amount for withdrawal what he can't see is basically everything else. So, as Bob, I would like to deposit, let's say 0.5
00:06:04.768 - 00:06:40.386, Speaker A: ETH. I would deposit this confirm. Once this transaction is completed, I can see how much I've deposited and how much is in the pool. Right. So, as a donator, I am done. Now, if I go back to Alice's account, I can see that there's already some interest accrued that I can withdraw. So once I click this link, another MetaMask prompt comes up.
00:06:40.386 - 00:07:28.900, Speaker A: I just have to pay for the gas. Right now, the gas will cost more than what is available to withdraw, but over time, that will be different. Once that transaction has completed, we can see that there's no more available for withdrawal. And if I check my ether scan, if I check ether scan, I can see that Dai was sent to my account, and I can already see that there is more interest available for withdrawal. I don't have the time to explain each of these, but there are a lot of changes that I want to make to the project, the most important being improving the contract efficiency to reduce on gas fees. Next, I want to dynamically deposit into the Aave pool, which has the highest APY, instead of just doing it into Dai. Thank you for your time.
00:07:28.900 - 00:07:50.922, Speaker A: Hello. Awesome. Well, thank you so much for being our first demo for the day. Super interesting name and a hack. So I'll let our judges kick in and see if they have any comments or questions. Yeah, nick, this is awesome. Congrats, man.
00:07:50.922 - 00:08:29.302, Speaker A: So you kind of asked what's next, but do you have any plans for this? Do you have any plans to take this any further? Right. So, yeah, this was an idea that I've had for some time now. I'm relatively new to DeFi, and this is one of the first ideas I had. So I would like to continue this even if it's not, like, a super popular application. I want to use this for myself because it seems like a pretty unique or useful way to make passive income, if that answers your question. Yeah, it does. I have an echo, too, but I want to encourage you exactly what you should do.
00:08:29.302 - 00:08:33.640, Speaker A: It's an awesome application. Thank you.
00:08:36.030 - 00:08:59.520, Speaker B: Yeah, just to dial in a little bit more on that. Yeah, I think this is really cool, working with the liquidity pools and putting down the collateral there to start accruing that interest. I think this is great. What were kind of the different sources that you looked at to get the interest? Was it Aave? Was it multiple places? Or where were you kind of?
00:09:01.410 - 00:09:25.254, Speaker A: So right now, I'm just using aave. Like, I'm just hard coding the Dai lending pool, but what I wanted to do was dynamically choose whichever lending pool would receive the most API. I was thinking about using Ave's, the subgraph to get that data, because I think it's available on there, but not entirely sure. But yeah, hopefully that answered your question.
00:09:25.452 - 00:09:51.954, Speaker B: Yeah, that makes a lot of sense. And yeah, I think, again, Ave is obviously fantastic protocol. Absolutely love ave. It sounds like you're almost kind of thinking if you're familiar with yearn finance, that's something that they kind of do. They look to route the collateral to whatever protocol is going to give the most yield back. That's an awesome concept. Very cool.
00:09:52.152 - 00:10:25.434, Speaker A: Thank you. Just to chime in as well. Thank you. So actually, I guess the more fun aspects of this are the have you spoken to any, I guess, like, artists, like anybody on Twitch or YouTube who would be interested in using this? No, not really. No. Cool. I think as like a premise for staking and getting people interested or even dipping their toes into D five.
00:10:25.434 - 00:11:35.310, Speaker A: This is like a great sort of first step. Have you thought about different ways in which you could sort of leverage this a bit more? I know you said this is one of your first things, getting your feet wet. Have you thought about maybe what if instead of just putting it in, you could collateralize that or you could maybe tokenize your staked asset and could use that to do more? Like maybe the artists themselves could use that for trading or use that to stake some more. Right, yeah, I guess not that specifically, but when I was thinking about this, I think this is like in general, this is a really good way just to pool money and I guess gain funds. This was just like the main idea, but I think there are a lot of branches we could branch off into. Some ideas I had were maybe I could right now the pooled money automatically goes into Dai, but maybe the content creator can choose which pool the money goes into so they can choose what APY they want. Or maybe they could have different kind of strategies.
00:11:35.310 - 00:12:18.878, Speaker A: Sort of like that you're in finance where you can have different strategies where the money goes, stuff like that. Yeah, I think that's really awesome thinking about what's next because I feel like you should absolutely continue with this, but thinking about how government bonds work, instead of thinking about military bonds or company bonds, we can do entertainer bonds. Right, I see. That's a good idea. Thank you. So thanks for presenting and I hope you kind of keep working because there's a lot of other places this can be applied to. So congrats on this and thanks again.
00:12:18.878 - 00:12:32.100, Speaker A: And I think what we'll do is we'll try to spend maybe 30 seconds fixing the echo issue here. And maybe if I can ask Ken and Patrick, maybe just rejoin and hope that it fixes itself and then we'll move on to our next project.
00:12:32.550 - 00:12:34.450, Speaker B: When I'm talking, is the echo still there?
00:12:34.520 - 00:12:35.954, Speaker A: No, I think it's just Ken now.
00:12:36.072 - 00:12:36.738, Speaker B: Okay.
00:12:36.904 - 00:12:42.950, Speaker A: Hello, Ken. Are you good now? I think you're good now? I feel like I am.
00:12:43.100 - 00:12:44.418, Speaker B: You sound good to me.
00:12:44.524 - 00:13:26.660, Speaker A: I think computers just a note for our judges, the project that think is a bit delayed. So we're going to move on to the next one which is Agile liquidation protection. And I'll be playing the video for Shahan and then we'll be here to answer the questions. So just give me 1 second to set up and we'll be able to kick off the next demo. Hi. My name is Shahan Yang. Welcome to the presentation of the Aave liquidation protection bot.
00:13:26.660 - 00:14:02.800, Speaker A: This is a market make hackathon project. The bot can help protect against liquidation penalties by automatically repaying loans when certain thresholds are met. This project completes a challenge from one inch. The diagram here shows a lot of details with the key steps being highlighted in green. The first thing is we take out a flash loan and we use that flash loan to repay the user debt. With that user debt repaid, we can now withdraw the collateral. And what we would like to do is to use the collateral to repay the flash loan.
00:14:02.800 - 00:14:40.524, Speaker A: Since the collateral token doesn't match the debt token, that can't be done directly. So we use a one inch swap to swap the collateral for the debt token and then that allows us to repay the flash loan. So that all happens in one nice transaction. Now before the demo, I'd like to call out a key point. So you'll see that right after the flash loan is received, we do this verify signature step. This is important for security reasons and that will be explained after the demo. On the right hand side we see the test fixture.
00:14:40.524 - 00:15:30.972, Speaker A: The test fixture forks main net using hard hat and deploys the contract then seeds an initial user by taking out a loan. The service is now started which allows us to connect to it. That brings up an initially unpopulated information display connecting to MetaMask fetches the address and sends it to the server allowing it to fetch information about the loan and to display it. What we see here is a loan of Dai collateralized using ETH. The current ratio is computed by the server using chain link Lookups. For demonstration purposes, we will choose a custom threshold smaller than the current ratio to trigger immediate repayment. Clicking the registration button triggers a couple of MetaMask approvals.
00:15:30.972 - 00:16:11.112, Speaker A: The first is an ERC 20 approval for the contract to withdraw the A tokens. This is needed so that the contract may repay the debt. The approval is a web3 ethereum transaction sent via MetaMask. The second approval is an EIP seven one two message attesting that the user trusts the bot. We will talk more about this later. Once registration succeeds, the bot starts pulling chainlink price information and immediately notices that the threshold has been exceeded. This triggers repayment using a number of complex operations including a flash loan and a multipart swap this costs a hefty 1 million gas.
00:16:11.112 - 00:16:51.672, Speaker A: The test verifies that the user debt is reduced to zero and reports success in the normal flow of events. The bot initiates repayment by calling the execute function of the repayment executor contract. This triggers the flashloarn call and the lending pool API invokes the execute operation via callback. The callback needs to be handled with care. It is a public method and anyone may call it a malicious user could potentially trigger premature repayment or even a swap to the wrong token. To prevent this from happening, we use signature verification based on Solidity's EC recover. The first signature establishes the trust between the user and the bot.
00:16:51.672 - 00:17:17.420, Speaker A: The second signature establishes the authenticity of the call data. Using the bot's signature. We need to do two things before everyone can use this. One, we need to deploy the repayment executor contract to mainnet. And two, we need to create a docker container for the bot so everyone can use it. Thank you for your attention. Awesome.
00:17:17.420 - 00:17:31.400, Speaker A: Well, thank you so much for that video and you're here with us and I'll let our judges kick off with any questions or comments. Can you still hear me? Yes, I can. I think we're good. Yeah.
00:17:31.470 - 00:17:48.110, Speaker B: So this is really cool. I had a couple of thoughts, but I'll try to keep brief. The thought is to kind of have this centralized service off chain that's just constantly running, checking, and then once it sees like, oh, there might be a liquidation here, then it activates. Right.
00:17:49.600 - 00:18:02.176, Speaker A: There's two ways that centralization is one. The other is like the user could have the bot running on their own computer. I think in the long term it would make sense for Aave to just provide this as a free service to.
00:18:02.198 - 00:18:13.510, Speaker B: The oh, that'd be kind of cool. So you're thinking like, Aave has like a group of nodes doing something like this. Or are you thinking like there's a smart contract that's working with an oracle that's doing something like this.
00:18:13.960 - 00:18:30.536, Speaker A: You need that smart contract to make a transaction that does the whole flow, but then you need a bot that has no choice but being a centralized service of some sort. Almost no choice to do the price lookups and the ratio comparison, is there.
00:18:30.558 - 00:18:34.076, Speaker B: A chance that it sounds like there's like a little bit of a race going on?
00:18:34.098 - 00:18:34.236, Speaker A: Right.
00:18:34.258 - 00:18:40.270, Speaker B: The bot has to find the liquidation event faster than it actually gets liquidated, right?
00:18:40.960 - 00:18:53.010, Speaker A: Yes. The threshold is selected. You select the threshold in the UI or the user selects it. So maybe you pick one that is a little bit lower than the one that allows the world to.
00:18:54.740 - 00:19:30.056, Speaker B: Worked with. It's kind of interesting because you worked with the chain link price feeds off chain, using it as the data feed. That's pretty cool. I was looking at the stack writing in a know, thumbs up for writing in and go, that's great. So something to maybe check out actually is look at maybe like the chainlink alarm clock or some type of timing event because you can get a network of off chain chain link oracles all kind of talking to each. Other. And they basically say, okay, at this time we're going to run an event, or once this threshold is hit, we're going to do it so you actually can have that service in a decentralized fashion.
00:19:30.056 - 00:19:33.040, Speaker B: So maybe that's something to check out if you're looking to take this further.
00:19:33.780 - 00:19:55.892, Speaker A: Thank you. That's interesting. Hey, I'm really digging the little ape characters that you have. I think they're really cool. Sorry, paid my son $20 for those. Awesome. So I have a couple of questions.
00:19:55.892 - 00:20:26.096, Speaker A: The first one is more, I guess, technical. What do you do in the case of gas price fluctuations or I guess a lot of times for one inch? No. Yeah, I'm sorry about that. There's no gas model. The user just makes sure there's enough gas in the bot and the bot has to pay the gas of that transaction. That's kind of a flaw. Although if they had like a centralized service, then they would just make sure that the bot is funded and then recoup the gas prices when they get the collateral out.
00:20:26.096 - 00:21:29.136, Speaker A: Yeah, that makes sense. And so how long do you think it'll take? I guess it's presumptuous for me to assume that you want to push this to mainnet, but I guess do you want to take this to mainnet? I think it would make sense for someone like Ave to take it to mainnet or for me to work with Ave to take it to mainnet rather than kind of doing it on my should at Stanny on Twitter. Yeah, you should, but I want to be supportive of just to me doing this type of off chain monitoring of your positions. It's a very cool feature. And even if you're running the bot yourself like you suggested, it's a cool power user feature that I think is really useful for people to save money. And so I actually just want to be nothing more than just say, doing this type of monitoring off chain. I think it's where the direction is going.
00:21:29.136 - 00:21:39.540, Speaker A: It's like layer two ish and I'm very supportive of you pushing this forward because this is something that should exist. Thank you.
00:21:39.690 - 00:21:41.670, Speaker B: I'll respond to that for sure.
00:21:43.400 - 00:22:12.492, Speaker A: That's awesome. Well, Sean, that was really awesome as a demo, and thanks for kind of putting in a lot of work into making this work in a really cool, intuitive and understandable video. I'd like to just say I think if your son wants another gig for our next hackathon, we'll be happy to sign in and get some more avatars up. And I'm actually serious about that. So you ping me after this. He'll be very happy to hear that. I'm going to send your email to him.
00:22:12.492 - 00:22:33.028, Speaker A: That's great. You can ping me on Discord and we'll get that started. So thanks again. Hope you continue working on this thing. With that, we are ready to move on to our next demo. So we have the next team, which is number two from the list, team bitsenka for our judges, Jeff and Jacqueline. Welcome again.
00:22:33.028 - 00:22:40.436, Speaker A: Hello from Japan, and whenever you're ready, we can kick it off. Great. Thank you. Yeah.
00:22:40.458 - 00:22:59.870, Speaker B: I'm Jacqueline, based in Japan. Jacqueline's, based in Singapore. I'm going to play the video now. Wait, I need to share my screen, don't I? Can you see my screen?
00:23:00.320 - 00:23:01.070, Speaker A: Yes.
00:23:03.200 - 00:23:16.720, Speaker C: Hi everyone. We're Bitfinka, and our mission is to make DeFi accessible for everyone. We're a team from Curvegrid, a blockchain middleware company in Tokyo, Japan. I'm Jacqueline, a software engineer intern at Curvegrid, and I work mainly on front end and smart contracts.
00:23:17.060 - 00:23:21.140, Speaker B: I'm Jeff, co founder at Curvegrid, and I worked on smart contracts and Ave integration.
00:23:22.200 - 00:23:51.624, Speaker C: So why microfinance? While capital markets are a crucial source of large volume financing, they often fail smaller countries and companies. We aim to make financial services accessible for everyone, no matter their economic status or geographical location. So let's dive into how Bitfinka works. Entrepreneurs can apply on our platform and wait for Validators to approve their business. They can accept a loan and then grow their business. Lenders can browse entrepreneurs and pick which ones to invest in. There they can fund loans, wait to get repaid, and repeat.
00:23:51.624 - 00:24:02.770, Speaker C: Validators conduct due diligence on entrepreneurs. Their ratings are used to calculate credit ratings and they can get rewarded for validation work. Here's a technical overview of our project.
00:24:03.780 - 00:24:17.220, Speaker B: The smart contracts do all of the business logic and are connected to the front end. We also support borrowing from Ave. We had some issues with Ave integration, so we wrote our own cut down version of Ave called Suave.
00:24:21.260 - 00:25:12.170, Speaker C: Let's dive right into the demo. So when an entrepreneur first onboards to our website, they can apply to be an entrepreneur. So now Sophie is applying for her restaurant. Sophia can view her dashboard and update her lenders and all the people watching her business and also set a target and the amount of money that she needs to raise. Currently, Sophia has already raised 320 from the lenders that have decided they like her business model. When she has received enough of loans, sophia can approve Bitfinka or borrow from Ave. On the other hand, lenders can also apply to join our platform.
00:25:12.170 - 00:26:11.830, Speaker C: After lenders apply, they can browse businesses and decide which ones they want to invest in. Alexander wants to invest in this blogging business, so they can decide to loan ten tokens. Alexander can also view his account and look at his token balance and adjust his information, and also deposit and withdraw from his account. Finally, Validators can also apply to join our platform. And after being successfully accepted to our platform, they can start validating businesses and earning tokens while they do it. Here arbank can decide which companies to validate. After conducting his due diligence and researching the company's business model.
00:26:13.360 - 00:26:14.110, Speaker A: It.
00:26:28.270 - 00:26:43.440, Speaker C: After Validating companies their company's credit score should increase eventually, as more validators approve, their company join us in making DeFi accessible for everyone.
00:26:48.290 - 00:27:06.246, Speaker A: Awesome. Well, thanks so much for that demo. I feel like this is, like a full on end to end product, so this is great. I'll let our judges kick in with any questions or comments. Yeah, guys, this is beyond awesome. This is very cool. Just one, I guess, question on the mechanics of this.
00:27:06.246 - 00:27:21.340, Speaker A: So in this loan set up, there is no recourse if somebody defaults on their loan, right. The validator's job is just to determine who's likely to pay back, is that right?
00:27:23.390 - 00:27:40.910, Speaker C: Correct. Yeah. Validators are supposed to conduct due diligence and estimate the chance of default, but for the most part, it's kind of built on trust and similar to how normal banks calculate risk for whether or not a borrower will default on their loan. This is similar with the credit ratings.
00:27:41.730 - 00:28:18.940, Speaker A: I mean, I'm a bit familiar with companies like Tala that have done this same concept and other places that there is no recourse where they make a loan at really high interest rates, and they just hope that they make people think they're supposed to pay it back. I see this as this whole concept, as the decentralized version of something like Tala, where these validators, instead of analyzing your smartphone data, you've got these Validators determining whether people are credit worthy or not. I think it's fascinating, and I think it totally could work. So then I guess my next question is, what's the next step with this?
00:28:22.430 - 00:28:25.740, Speaker C: Jeff, do you want to answer that? Haven't thought that.
00:28:28.030 - 00:29:06.780, Speaker B: So the idea, obviously, for this hackathon, I think we'd be looking to take it to somebody who might want to really turn it into a business or an organization. Right? Yeah, we'd be happy to keep working on it from a technical perspective, and I think we've got the idea and the passion, but maybe less experience with connecting with some of these organizations on the ground in places that need this kind of service. I think the goal would be to find a group, an organization, an NPO like that, that could help us and might be interested in it.
00:29:08.750 - 00:29:09.500, Speaker A: Awesome.
00:29:11.570 - 00:29:25.870, Speaker B: Yeah. So the UI on this is gorgeous. It looks really sick, really clean, and I love how I'm assuming it was a little bit Ave inspired the color scheme, like Ave inspired?
00:29:26.290 - 00:29:30.674, Speaker C: Yeah, I looked at the Ave color scheme and kind of made it similar, especially the fading here.
00:29:30.792 - 00:29:43.894, Speaker B: Yeah. When you were like, oh, we changed it to be Suave, I'm like, okay, I'm with that. All right. Yeah. Looks super cool. So my question is actually a follow up to the comment you made previously. So you're saying, hey, we may want to turn into a business.
00:29:43.894 - 00:30:44.842, Speaker B: Yeah, I definitely think kind of the credit system in the blockchain world is really interesting, right? Because historically, we've been like, we want to trust, minimize, we want to have everything, have cryptographic proofs. So my question is, you mentioned, okay, we might want to turn this into a real company. Would you be more interested in making this a company or more a decentralized protocol, or what would the thoughts be around that being the next step? Yeah, definitely decentralized protocol. Definitely decentralized protocol. I think to kind of launch it, especially when we're connecting with real entrepreneurs on the ground. Partnering with an NPO would be the right first approach, but yeah, one of the challenges in some of the existing projects in this space is there's a lot of fees, a lot of high fees just to administer it. And the whole goal with this approach, with Bitfinka is we reduce those fees ultimately just to whatever the gas layer is, plus the validators, get some incentive for doing good work and can be rated themselves.
00:30:44.842 - 00:30:51.902, Speaker B: But yeah, absolutely, 100% decentralized. And to set it free like that. Got you. Great. Yeah. Beautiful UI. Really cool.
00:30:51.902 - 00:30:55.760, Speaker B: Really challenging problem to tackle. So nice.
00:30:58.690 - 00:31:07.170, Speaker A: Yeah, it is beautiful. I wanted to say that too, but one question, though. What is multi bass?
00:31:09.510 - 00:31:19.990, Speaker B: Yeah, it's a middleware. It's a blockchain middleware that just provides an API, rest API, over top of smart contracts. So we just use it for faster development.
00:31:20.650 - 00:31:35.740, Speaker A: Sweet. Thank you, Jeff. Jacqueline, thanks again for presenting. And this is a full on product that you're doing again. So hopefully you continue working on this. Yeah. Congrats again.
00:31:35.740 - 00:32:04.498, Speaker A: Thank you. Take a look. This is great. Perfect. So with that, we are ready to move on to our next demo, and that is Teamcoinfood IO. One other note is for all the other teams that are up and coming next, we are using the chat box to call out the team. So just keep an eye out on the chat for the zoom and you'll know when you're up next.
00:32:04.498 - 00:32:25.382, Speaker A: So, with that, we have RJ here and RJ, whenever you're ready, feel free to present. All right. Hi, everyone. Let me share my screen. Now. Hold on. Hi, everyone.
00:32:25.382 - 00:32:49.878, Speaker A: I'm RJ and I'm building coinfu IO. So. Yeah. What is coinfu IO? To sum it up, it's workflow automation for cryptocurrency investors. Another way to think of it is like zapier for cryptocurrency events. So for the motivation, one of Ethereum's strengths is that all transactions are available for people to see. This allows users the freedom to view and understand exactly what happens to their assets whenever they interact with a protocol.
00:32:49.878 - 00:33:24.258, Speaker A: It goes without saying, though, that there is a huge amount of data to sift through. If you want to understand what's happening, searching for data is no easy task, and users are often overwhelmed. The goal of Coinfood IO is to augment and enhance users workflows to allow them to make the most. Of their cryptocurrency experience. So what is my hack? So, yeah, just for context, during the ICO Hype back in 2017, ethereum didn't really have a solid use case just yet, at least from my opinion. Fast forward to now and the ecosystem is thriving. My favorite use case is the ability for users to take out collateralized debts.
00:33:24.258 - 00:34:11.434, Speaker A: A necessary component, however, of these debts are liquidations. Due to how it works, most liquidators are bots and scripts running 24/7 on a server. But what if we can surface these liquidation opportunities to let retail investors take part and help make the ecosystem healthy? So before I go proceed with the demo, what protocols have I integrated in this project? So one of them is Uma. As you all know, liquidations and disputes are an integral part of this protocol for Ave as well, and yeah, for the Graph to get the necessary data. And now for the demo, let's build an automated task. So let's go ahead into the main UI or the Dashboard. As you can see, in order to create a task, you need to select your main sort of event.
00:34:11.434 - 00:34:48.360, Speaker A: There are several integrations built already here, but for the purpose of this hackathon, I'm going to focus on Ave and Uma. So I'm going to click on Ave. I'm going to select the action new liquidation opportunity. So this opportunity or sorry, this task will run every time an opportunity is available on Ave. So I'm going to click that. And over here, down on the input field, you can see all the necessary data that you will be able to fetch and use in the subsequent steps. So now let's go to the next step.
00:34:48.360 - 00:35:23.620, Speaker A: So this step is pretty much like where we want to send the data to. We can create like a Google Sheet entry or let's create like a tweet. So I'm going to click on Twitter. I'm going to select Send Tweet. And it has auto populated my Coinfoot Twitter account. And it has also prefilled sort of like a standard message that users can just use and start with right away. So obviously here we can also add more data.
00:35:23.620 - 00:35:56.110, Speaker A: But yeah, so now that's it. I'm going to click on Complete and then Ave liquidation opportunities. I'm going to hit save. And over here you can see that our task was created. If I click on here, we'll be able to modify and also turn on the automation just quickly. Let's also go through the sort of like the Uma process. It's pretty similar.
00:35:56.110 - 00:36:04.806, Speaker A: So if you click on Uma, you can click on New Liquidation Opportunity. And then over here, let's also just select Send a tweet.
00:36:04.938 - 00:36:05.810, Speaker B: Do that.
00:36:05.960 - 00:36:36.280, Speaker A: The message and all the data is pretty similar at this moment. So I'm just going to hit on Complete and then Uma liquidation opportunities. Hit save. And yeah, as you can see, these two automated tasks can now be yes. So that was coinfool. I just immediately put a cut on there on the four minute mark to not be disqualified. But yeah, if guys have any questions, just let me know.
00:36:36.280 - 00:36:59.520, Speaker A: I'll just comment before anybody else because I think this is incredibly useful and well thought through. So congrats on this. Yeah. Kartik, I'm just going to say, man, like, okay, I'm biased because you also deal with my stuff, which is cool, but ignoring that entirely. Kartik, this is why I like judging this stuff. This is a full application, man. This is completely usable to do useful things.
00:36:59.520 - 00:37:51.630, Speaker A: I don't know, that's just pretty awesome. RJ, can you please make sure this goes to mainnet and actually becomes usable to other people or what's your plan there? So that's interesting. So the main gripe I have with an application right now is it's completely centralized. The next path for me is either to proceed with centralized route and just host everything on my own or go to the centralized path and sort of do everything else there. But I mean, I feel that as a founder, I have a lot of assumptions. I want it to become decentralized, I want it to be all the idealistic things, which is a flaw of all founders, unfortunately. So I would actually say that my next step would be to sort of curate a community and sort of see where they want the application to go from here.
00:37:51.630 - 00:38:24.970, Speaker A: Yeah, it's not going to be about what I want this project to be, but it's going to be what would be the best use case for all the users out there entering the cryptocurrency space. I love your idealism, man, but don't let it get in the way of building practical, useful things here, too. There is this path here. You can do this over time, but I think something like this, there's still a need for centralized services supporting the underlying infrastructure behind this. So hats off, congrats.
00:38:25.870 - 00:38:47.662, Speaker B: Yeah, and then I'm even going to plus one that I think this is really cool. I use Zaps all the time. I'm lazy. I like to automate stuff. I'm trying to automate stuff on the chain all the time too. So I think you're saying, like, oh, man, I want to make it decentralized. There's services like etherscan, right? Etherscan is a bunch of centralized services.
00:38:47.662 - 00:39:09.574, Speaker B: We all rely on it, we all need it. We all need these to make them work. So something like this can provide a ton of value for the ecosystem. So I think this is really cool. I was curious to see the code. I couldn't find the code, but maybe I'm not looking in the right places. But yeah, I've nothing but positive things to say here.
00:39:09.574 - 00:39:22.490, Speaker B: I think this is really cool. I guess the question would be, how would you even turn this into a decentralized service? In my mind, the first thought is actually I'll pause there. How would you turn this into a decentralized service if you wanted to go that route.
00:39:24.110 - 00:39:54.982, Speaker A: Yeah, so I've been thinking about that, actually, sort of like similar to the path of how the graph has validators or something, but then they would need to host the user sensitive data on those servers. So I would need to put in sort of like a slashing mechanic if they act maliciously. To be honest, it's a bit over my head at this point, but yeah. So hoping to grow this even more this year. Yeah, step by step, I would say.
00:39:55.116 - 00:40:10.374, Speaker B: I hear that. Again, don't trash it being centralized. I think that that's great. If you do want to go the decentralized route. Shameless self plug. I think that a chain link keeper integration might be exactly what you're looking for. So if that is a route you're like, hey, I want it to be decentralized.
00:40:10.374 - 00:40:17.180, Speaker B: I would definitely recommend checking that out because you can send those post requests kind of in a decentralized manner. But that's some food for thought.
00:40:17.710 - 00:40:48.534, Speaker A: Thank you. I mean, it'd be awesome to just start up a telegram group or discord and just have a bunch of people building on it together, open source it and let it free into the world and see how it grows. Yeah, but this is amazing. I can't add anything more to what everyone else just said. Thank you. The takeaway is that make sure it's launched and then we get to see how to actually improve that over time. But got to iterate from kind of the beginning and just let's get this in the hands of people.
00:40:48.534 - 00:41:12.046, Speaker A: So congrats again on this test in production, right? That's what they say, right? Some people. Great. Well, RJ, thank you so much for this demo. I hope you continue building this. And with that, we are ready to move on to our next one. So what I'll do is, Brahma, we'll have you go and go next, but then we'll just take a quick break after this. And I'll just have our judges confer on the other chat we have.
00:41:12.046 - 00:41:37.778, Speaker A: So we'll just take a five minute break, but we'll just move on to the next project with your demo. So Refi Loan. That's the project name. And whenever you're ready, feel free to kick off your video. Can you see my screen? Yes. Okay, so I'll play it. Welcome to repinancing.
00:41:37.778 - 00:42:14.530, Speaker A: This is Brahma Sen. What we're trying to do is solve the repinancing problem taking a loan. The PED rate is high or rather low and we, like the students particularly take refinance their student loan, which is much higher rate. We are using React front end. We are using Ave deposit, borrow, credit delegation and Flask loan features. And then we have three contracts. Repi policy to track delegates and delegates and one credit, delegation and Flask loan contract.
00:42:14.530 - 00:42:57.820, Speaker A: This is the homepage of the application. We have many options dashboard, creditor, delegate and refinance. There are basically three steps. The user can deposit fund and delegate the credit and hopefully the delegate can refinance with a much lower rate. So if we go to creditor, you see that he has 3300 avid token staked and there are some ETH and then some die. So I can choose to, let's say put to deposit some die. I like to confirm this and make sure this is sped up quickly.
00:42:57.820 - 00:44:27.292, Speaker A: It confirm, so let's speed up while that is going on. We can also I can do the delegate, I can do the delegation, credit delegation to this. Actually, before I do it, let me verify the amount is EIC, that's updated. So now if I do the delegate so I got the credit delegation, so this should be quicker. Yeah. So now I think if I go to Dashboard, then I can see who are the creditor, I'm the creditor and then who has been credited to this is the person who has been credited to so that means the delegate. If I log in as delegate, then obviously I'll be able to borrow and repay that amount and obviously I need to see first how much I have delegated.
00:44:27.292 - 00:44:56.040, Speaker A: Those things have not been developed pretty well, but there are some issues and same is true with the flash loan. But that's basically so now I can do credit delegation and borrow and lend. That's the scope of this application. Thank you. Stops there. That's great. Thank you so much for that demo.
00:44:56.040 - 00:46:10.076, Speaker A: And maybe I'll just kick off by kind of asking, was this your first time working with Abe and what made you try out this idea? Yes, can you hear? Yes, yes. This is my first time and doing all by solo. So it was a little tough trying to figure all these things out, both front end and back end. But yeah, it was fun actually. I learned a lot, but baptism by fire, actually. What were the biggest sticking points? I'm always curious to hear, as you learned this, what were the hardest parts to figure out? What were the biggest points of friction? I think this space just my background is it I'm doing it for all my life but I come to crypto, I don't know anything, I've been it doing it for 25 years but here everything is splitting the hair type of thing. Just figure out all the things and so many different tools from front end to backend to understand how I can get a JSON file.
00:46:10.076 - 00:46:56.112, Speaker A: And when you try that JSON file abi file and it doesn't work or things along that nature, everything is available in the Google, but it just takes time. What is the most fun oh, sorry, Hart. No, no, Ken, I'm all done. I was just commenting on like yeah, it's all new. It's all new to all of us too, not just even the fun part. Ken is asked is just making things mean if I send a transaction and my solidity contract can keep that information and put that back in the front end. That itself just throwing simple creditor and delegator and delegate, just flashing that back to the front end.
00:46:56.112 - 00:47:47.650, Speaker A: That's like magic. Because you kind of interact with the contract, making call to the contract, making sure you have the network, the ID, the accounts and all that set up and being passing from face to face. I think everything is interesting, everything you do. One little small step you take is a big leap for me. Last question. What tools did you use? I use Solidity to write the contract, to refi policy contract, and then the credit, delegation and Solidity for that, and then react to just show the front end. And that's it.
00:47:47.650 - 00:48:28.224, Speaker A: Of course, abe protocol to deposit and die, understand how to send dai, MetaMask, so MetaMask, ave, react, Solidity, those are kind of four main things. Yeah. Awesome. And of course, set up with Truffle, even trying to have three contracts compile at one time, starting ganache and all that, there's so many other little things here and there. And understand the addresses for COVID to mainnet, to fork the mainnet and so many other things there.
00:48:28.382 - 00:48:45.440, Speaker B: So you got to give yourself a little bit more credit, though. I remember when we first met, you were working on the Genie project, and you kind of said the same thing. You were like, oh, yeah, I'm new to this space. I don't really know what I'm doing. And now, like, six, seven months later, you're making projects all by yourself. I feel like you got to give yourself a little bit more of a pat on the back.
00:48:45.590 - 00:48:48.180, Speaker A: Absolutely. That time I didn't know squat.
00:48:49.000 - 00:48:50.516, Speaker B: Right? Well, you just said the same thing.
00:48:50.538 - 00:48:50.676, Speaker A: Right.
00:48:50.698 - 00:48:53.380, Speaker B: It seems like it seems like you've learned a little bit in this time.
00:48:53.530 - 00:48:57.416, Speaker A: Yeah, this time all by myself. So, yeah, it was hard, but I did it.
00:48:57.518 - 00:49:15.500, Speaker B: Yeah. Nice work. That's right there, I think, is the beauty of the space. You came in, you knew squat, and now you're building stuff on your own. Awesome job. I don't think we have time for questions, but yeah, really just fantastic to see you keep coming back to the space and you keep learning, you keep building. So really great, man.
00:49:15.500 - 00:49:16.190, Speaker B: Awesome.
00:49:16.960 - 00:49:53.576, Speaker A: Thank you. Thanks again and congrats for demoing and doing this thing by yourself and also for coming back and working on more projects. Thank you. I'm loving the iteration and your continuous drive to get better at this, so congrats. So thanks again. And with that, what we'll do is we'll promote Julie and James over to the panelists, but we'll just take quick three to five minute break for our judges to just talk amongst themselves for the few projects we've seen, and then we'll be back and we'll kick it off with the poolside demo. So I'll just have our judges mute and turn the video off for this one.
00:49:53.576 - 00:55:57.310, Speaker A: And we'll just join the other one, and we'll be back in a couple of minutes. Really appreciate everybody's patience. All right, everybody, we are good to go. So thanks again for waiting. And then next up, we have Poolside with Julia and James. So whenever you're ready, feel free to kick off with your video. Should be fun.
00:55:57.310 - 00:55:58.556, Speaker A: Awesome.
00:55:58.658 - 00:56:43.976, Speaker C: Thanks so much, Karthik. I'm going to share my screen. Hello and welcome to the Poolside demo. Poolside is a one stop shop for new and trending DeFi assets, and this is our team. We are both full stack engineers in the San Francisco Bay Area who have been tinkering with Ethereum for years. James and myself have experiences ranging from Y Combinator to Apple, and we met during Market Make. So every day brings a lot of change in DeFi, and data is scattered across exchanges and leaderboards.
00:56:43.976 - 00:57:35.144, Speaker C: We wanted a better way to organize and quickly get updates on Top Movers and New Listings. Also, as more and more tokens are issued, it's harder to distinguish between legitimate assets from the Scams, fakes, and low quality listings. Poolside provides a place to discover the latest tokens listed on Uniswap, excluding the Scams. Poolside is also where you can find the tokens with the largest volumes and market caps. Clicking on a token will take you to a detailed view where you can access the white paper contract address and get a direct quote from 1inchh. Poolside periodically pulls information from the graph. We get data from the Uniswap, 1inchh and Avagatchi subgraphs enrich that with more info from CoinMarketCap and store it into our database.
00:57:35.144 - 00:57:47.230, Speaker C: When users visit Poolside, the Top Movers and New listings are ranked and shown dynamically. Users can also easily search across various sources. And without further ado, let's head over to the demo.
00:57:47.920 - 00:58:31.228, Speaker B: I visit Poolside Finance and I see today's top movers by price and volume. WiFi Ample link and Sushi are really moving today. For each token, I can see its name and symbol information about the token, some categories volume and 24 hours volume change and the Price and 24 Hours Price Change. You can look through some pages of the Top Movers. You can also use the search bar up Top to search for a specific token. Now let's look at the new listings. Over 80% of new token listings are Scams or Fakes, and Poolside uses a variety of techniques to filter out the scams and only show you the new listings that have good trading volume.
00:58:31.228 - 00:59:10.620, Speaker B: This includes a system for tagging helpful information for a new listing, like if it has an identified team or if it's audited. We can also flag the listing as a confirmed scan here to hide it. In this section we have an NFT and Collectibles gallery. Here are some Avagatchis, and you're seeing the SVGs being pulled from the Avagatchi Diamond contract on the Coven Ethereum network. We can also look up quotes. Let's try looking up a price quote for the exchange price between Wi Fi and ETH. And finally, a glimpse into the future of Poolside.
00:59:10.620 - 00:59:18.690, Speaker B: Sign in with your Ethereum wallet to have personalized token info shown to you based on your own DeFi trading history.
00:59:20.180 - 00:59:46.410, Speaker C: So now that we have a solid foundation for fetching, storing, and retrieving data in our roadmap, we also have personalization integrations with news and scam filtering, tokenlets, detection of noteworthy events in the markets, and of course, we want to continue gathering data from even more sources. So try out Poolside today at Poolside Finance and please let us know how we can make it even more useful for you.
00:59:48.620 - 00:59:58.350, Speaker A: Awesome. Thank you so much for that demo. And I'll just kind of kick off with saying it's live. That's amazing. So congrats on shipping in the three week window too.
00:59:59.200 - 01:00:00.190, Speaker C: Thank you.
01:00:00.720 - 01:00:24.390, Speaker A: Live is amazing, guys. That is pretty crazy. I assume that since it's Live and you guys have been playing with this, you've been looking at the data and just I'm actually kind of curious what the most surprising thing or couple of takeaways you guys have around looking at DeFi markets and DeFi market data? Any interesting takeaways from getting so close to all this?
01:00:24.920 - 01:00:26.980, Speaker B: Listings are full of scams.
01:00:28.280 - 01:00:29.590, Speaker A: It's really bad.
01:00:29.960 - 01:00:34.404, Speaker B: But also it's been fun to try to filter it and improve those results.
01:00:34.452 - 01:00:35.576, Speaker A: So that we actually have a pretty.
01:00:35.598 - 01:00:37.850, Speaker B: Good list of new listings every day.
01:00:39.100 - 01:01:05.056, Speaker A: I'd almost encourage you guys to maybe write a blog post or something, sharing some of your findings around how you identify these scams because I actually think it's almost a public service to the community because it's sad that that's true. I'm not surprised to hear you say that, but it'd be great to get your insights as to how you tag and understand what a scam is. Sure. So they can reverse engineer us. No, that's a great idea.
01:01:05.158 - 01:01:09.084, Speaker B: And this might be skipping ahead, but also we're really interested in publishing token.
01:01:09.132 - 01:01:12.132, Speaker A: Lists, using that standard and basically making.
01:01:12.186 - 01:01:13.876, Speaker B: It easy for people to they don't.
01:01:13.898 - 01:01:15.428, Speaker A: Necessarily have to visit our website in.
01:01:15.434 - 01:01:19.684, Speaker B: Order to get some of the information that we're coming up with.
01:01:19.882 - 01:01:21.670, Speaker A: Very cool. Well done.
01:01:22.360 - 01:01:35.320, Speaker B: Yeah, this is cool. I'm kind of perusing through the code here a little bit. You guys are big Python fans? I give that many thumbs up. Me as well. Is this Django or is this Flask or neither?
01:01:36.460 - 01:01:38.990, Speaker C: This is just Python and app engine.
01:01:39.440 - 01:02:01.792, Speaker B: Oh, hell yeah. Oh, that's great. My questions were kind of the same. Like, how are you guys picking the tokens? It sounds like you guys are doing a little bit of analytics there. I think that that's really cool. Something that if you're looking to do some of the smart contract integration to check out is Brownie for Python stuff. It's like a Python framework for deploying smart contracts.
01:02:01.792 - 01:02:28.460, Speaker B: It's really cool. But yeah, I think this is really cool. Just as he said. I think this is a service that people need. People want people want to know what tokens are. Scams what tokens are not even though you kind of made the joke like, oh, so they can reverse engineer it. Having kind of the metrics that says, like, hey, here's what a good token looks like, can help people figure out what a good token looks like because people always say, oh, do your own research, do your own research.
01:02:28.460 - 01:02:44.608, Speaker B: But it would be nice if do your own research means this, here's what your own research should look like. Yeah, so I think this is really cool. Love to see where you guys are going to go next to awesome.
01:02:44.694 - 01:03:19.820, Speaker C: Appreciate it. Yeah. And then one interesting thing that we noticed is that there are token lists out there, like uniswap's token lists, which we can leverage in our Scam detection, but then based on user interactions, since we offer the ability for admins or certain users to flag certain tokens as scams. We can then return that data or help enrich the existing token list out there or scam lists. So hopefully it's a vicious like a positive cycle.
01:03:21.760 - 01:04:00.824, Speaker A: Yeah, I'd love for there to be extra shame. So not even like, this is a scam, but ringing bells of like, this is the worst thing ever because there are so many tokens that pop up. And I think maybe this was like six months ago or maybe a year ago, I don't know. Time isn't real. But there was this whole thing in maybe China or like in the Philippines where they're pitching Hex, maybe Hex to some people isn't they're out there in person talking about all these scam coins. But it would be amazing to have, I don't know, one source or at least like a congregation of sources of like, these are the scanners. Don't ever touch this.
01:04:00.824 - 01:04:27.632, Speaker A: That would be amazing. Seems like it's all part of the plan. So hopefully you working on this and make it easy for us to go to single page and do everything we want to do with DeFi. Congrats. And with that, we are ready to move on to our next demo. So. Thanks, Julia.
01:04:27.632 - 01:04:49.400, Speaker A: Thanks James. Thanks guys. Great project. Pre market protocol. So for our judges, we are skipping one and Mir is ready to share the demo. So whenever you're ready, feel free to kick off the video. And you're muted.
01:04:49.400 - 01:05:36.764, Speaker A: Can you hear me now? Yes. Okay, sharing my screen. It looks like we're not getting your audio, so would you mind? I forgot to forgot to share my audio. They told me specifically to do that. Sorry about that. Market protocol. Welcome to pre market protocol.
01:05:36.764 - 01:06:25.430, Speaker A: My name is Mayor Bank. I'm the developer of this project for the Market Make 2021 Hackathon. And Pre Market Protocol is a synthetic asset protocol built on top of Uma protocol. The purpose of Pre Market Protocol is to launch and trade synthetic assets representing pre market, pre launch assets. These assets can be pre ICO tokens, pre IPO, equities, or literally any asset you can think of that has not launched live on the marketplace. What are some practical examples of this? Many tokens have had centralized IOUs launched uncollateralized on centralized exchanges before the actual token launches live. You can see some current tokens with a lot of market interest currently have these IOUs trading on the market.
01:06:25.430 - 01:07:10.992, Speaker A: So the goal is to offer these in a decentralized manner using fully collateralized synthetic assets on pre market protocol. First up, I'm going to connect my MetaMask to Covan network. And you can see we have three demo pre launch tokens. Here we have pre tornado Cash, which is a privacy token, pre ICP, which is DEFINITY, which is a scalability solution, pre CLX, which is Casper Labs, which is also a scalability solution. And if I click on View on the synthetic asset, you can see all the information about the asset here. The first thing that shows up is the name of the asset and the logo. The price has not been finalized yet.
01:07:10.992 - 01:07:49.420, Speaker A: This is something that needs to be integrated with the Uma Protocol Oracle, and that hasn't been possible during the hackathon, but that's going to be happening shortly after the hackathon. Here you can see the collateralization ratio is 120%. You can see the dispute bond. And the way that the Uma Oracle works is to dispute the price, you have to put up a bond as collateral. And if your dispute is correct and the majority of Uma token holders vote that your dispute is accurate, you'll actually get back more than you put in. And if your dispute is incorrect, you'll actually lose money from that claim. So this is how the prices are determined via the optimistic Oracle.
01:07:49.420 - 01:08:37.944, Speaker A: So you'll be able to manage your position. You can see your collateral, amount wrapped ethereum, your token balance, pre ICP, you can see your position, your collateral all supplied, your collateral backing debt, your token debt, your collateralization ratio Cr, which is very important, liquidation price. You'll be able to create and mint new synthetic tokens you'll be able to deposit so you can increase your collateral on your position, withdraw, redeem. You'll be able to view your positions again once the price Identifier is completed. And you'll be able to wrap and unwrap your ethereum in this case. So you'll be able to obtain your collateral tokens here. So this is how the protocol works behind the scenes.
01:08:37.944 - 01:09:06.730, Speaker A: We've also been deploying these on the Covan testnet. So these are all synthetic asset contracts that are live on Covan. And I want to thank the Uma Protocol team for helping me to brainstorm a lot of solutions here. Awesome. Thanks for that, Temo. And I feel like there's a specific person in this room who can ask really specific questions. So that unnamed person should probably go first.
01:09:06.730 - 01:10:05.790, Speaker A: I'll take that as a cue. Yeah, man, I mean, I think this is a super interesting problem and it's a super interesting financial engineering problem too, of like how do you put the price on something before it has a price, which is not an easy thing to do. So I guess maybe I'll ask to start with that, just maybe to explain to people that are listening in. How do you imagine these pre market assets would get a price before they have a price? How are you imagining that would actually work to ask you that question? That's a great question. It's basically self reference from trading on DEXes. So these are fully collateralized and the synthetic assets will expire after the real underlying asset goes live on the main net so you know that you get some collateral representing that price point. So this is something I'd love to see us try to do in a decentralized way to really see if it works.
01:10:05.790 - 01:10:58.140, Speaker A: The idea of because it's really cool, right? Of trying to have this asset be self referential in terms of its own collateralization and then settled as a real thing. I think that's really awesome. I guess my one other question to ask is what were your sticking points? This is a hard financial engineering problem. What were the hardest things that you got hung up on? Yeah, I could talk a lot about that, but honestly, probably the majority of the time I spent on this hackathon was just researching Uma. Honestly, that was a big endeavor itself. But after I got that wrapped around, obviously there's an issue that these assets are very volatile and they're going to have to be highly over collateralized, probably like 1000% plus. So the growth mechanism there is going to be very complicated and it's going to require a lot of incentivization mechanisms.
01:10:58.140 - 01:11:32.920, Speaker A: Other than that, we had to basically expire these assets without a fixed time in the future. So I'm kind of working with the Uma team to actually have a decentralized Oracle vote to expire these assets, which isn't really something that's being done currently, but we're going to kind of experiment on that and see if that's going to work. And there was a few other things, but that was mainly it kind of also just trying to figure out should I do a perpetual asset or should I do an expiring asset? And all this different stuff in the beginning. But yeah, after I went through the docs a lot, I kind of got it. Very cool. Congrats.
01:11:34.700 - 01:11:59.008, Speaker B: Yeah. So to jump on that too, this is definitely like a hard I mean, he said this is a hard financial engineering problem. So really ambitious that you kind of went after to tackle this, which is really cool. I'm kind of perusing through your code too. I'm curious. So it looks like you built your own kind of script to do like the chain for the front end.
01:11:59.174 - 01:12:02.012, Speaker A: I'm curious if you that was forked from Uma.
01:12:02.156 - 01:12:03.552, Speaker B: Oh, that. Was forked from, huh?
01:12:03.606 - 01:12:05.664, Speaker A: I don't want to take credit where it's not, so okay.
01:12:05.702 - 01:12:06.352, Speaker B: All right, fair enough.
01:12:06.406 - 01:12:23.604, Speaker A: That was definitely forked from mean, I guess I don't have time, but I would have shared my screen to show you some stuff. Yeah, that basically is just a script that deploys the contracts. You input the parameters. There, like, the collateralization stuff, like the ratio. What is the collateral? Is it dai? Is it wrapped ethereum?
01:12:23.732 - 01:12:39.660, Speaker B: Got you. Yeah. So my question is more just purely engineering. I know the answer based off of what you just said, there is a reason why you wrote it all kind of in almost more raw than using, like, a framework, like a Truffle or like, a hard hat.
01:12:42.560 - 01:12:44.860, Speaker A: No, I just used Doom's code. Honestly.
01:12:45.440 - 01:12:55.330, Speaker B: Well, that's what I was saying. I was like you pretty much answered it, but I'll ask it anyway. Yeah, really cool. Yeah. Definitely a really hard problem to tackle, so kudos to you for going after it.
01:12:56.680 - 01:13:51.550, Speaker A: Thanks. Well, if there are no more comments, thank you for thanks, guys. Bye. Congrats again on doing this, and hopefully you get to continue working on it. And with that, we are ready to move on to our next team, and that is Team Open Market. So they are being promoted right now, and as that happens, we'll be able to kick off with the next demo. Looks like we lost Noel in the transition from attendee to panelist.
01:13:51.550 - 01:14:45.216, Speaker A: Well, I think it may be best to move on to our next team. And we'll debug. Oh, there we go. We'll just promote them all one more time. And here we go. So whenever you're ready, feel free to kick off with your video. So glad this worked and you're muted.
01:14:45.216 - 01:15:20.582, Speaker A: Just can yeah. So I'm doing a live voiceover over my video. Perfect. So yep, whenever you're ready, you can talk over your video. Yep. So my goal was to create a decentralized Facebook marketplace. So basically, you have to stake a small amount of ether to message the seller just to prevent spam messages.
01:15:20.582 - 01:16:23.280, Speaker A: So I followed Truffle's Pet Shop tutorial to create my own sort of template, but I wasn't able to get the core functionality to work. I used COVID test network. As you can see, I also used a local blockchain, but that didn't seem to work as well. So in this video, you can see me trying to run Ganache to create my own blockchain and using Truffle as. Yeah, this is my first time creating a decentralized application. So I had a bit of so many errors, error messages, and just things that I didn't understand. So running my own blockchain and getting the node server to work again.
01:16:23.280 - 01:17:10.160, Speaker A: So now I'll be selecting the local host and then trying again to bind the item on the web page, but unfortunately, that didn't work as well. Yeah, this is a partial project. I didn't get to finish it, unfortunately. No, worries. So thanks for still doing the partial demo. It takes a lot of courage to talk about what you've done here and also what you weren't able to, and especially for your first time, I'm glad that you took on a really large challenge of making a decentralized Facebook marketplace and got almost there, so hopefully you get to continue building this. This is awesome, man.
01:17:10.160 - 01:18:09.330, Speaker A: I think the first time that I jumped into hackathon, just like, cold turkey, it was not even close to as good as this. What was your favorite part about doing this? Or I guess, like, your least favorite part about doing this? You don't have to answer either or just one. Sorry, what was the question? What was your favorite or least favorite part? Whichever one you prefer doing this. The least favorite part was looking up online tutorials, and most of the tutorials were either outdated or they didn't work at all. And I just found myself just copy pasting just blocks of code and didn't understand anything. So I wish there was more hands on tutorial where I can well, I did read the docs and everything, but it was just hard to grasp and everything. It just took a lot of time to understand some core concepts.
01:18:09.330 - 01:18:56.182, Speaker A: Like, I spent the first week just learning blockchain in general, spent the second week understanding how to build apps on Solidity, and just spent the last week making this application. But, yeah, I just couldn't get the functionality to work, unfortunately. Yeah. No, I'll Echo Cannon and Kartik. Right. It's pretty cool just getting you involved in getting into the space. And I guess now that you got your hands dirty with crypto, would you do it again? Will you sign up for the next hackathon? Yeah, definitely sign up for second crypto hackathon, but there's not many going on at the moment.
01:18:56.182 - 01:19:11.820, Speaker A: It's just my friend told me about market make, and I just signed up. But, yeah, I wish there were more crypto hackathons or I might not know any other hackathons. Just tell that to Kartik. He just needs to do this again, like, tomorrow for us to announce the next.
01:19:14.990 - 01:19:33.374, Speaker B: Am. I am so proud of just we all pretty much said the same thing. It takes a lot of guts to be like, hey, I didn't finish it, but that's, like, exactly the type of stuff that we want to see, because right. This also says a lot about the community. Hey, tutorials were a little rough. I was having a hard time. I'm new to the ecosystem.
01:19:33.374 - 01:20:33.414, Speaker B: So you're basically saying, hey, we as a community need to step it up. And I definitely want to say there's discords, there are communities, there are lots of resources to kind of jump in and join. And, yeah, it might not be obvious the first time you get in, so thank you for stepping up and being like, hey, I had a hard time. I was a little bit, you know, now when you come to the next hackathon, when Kartik puts it on, you'll be, you know, I had a hard time the first time, but know I'm better, I'm learned, I'm smarter. But I will say, too, two hackathons are going on right now, ETH Denver and ETH India if you want to check them out, if you want to keep the ball rolling. And then I'm sure that the next ETH Global is right around the corner because they keep putting on fantastic event after fantastic event. So thanks so much for putting this on, for stepping up and being like, hey, I had a hard time and getting a chance to just give your feedback and yeah, just kudos all around.
01:20:33.612 - 01:20:46.380, Speaker A: Yeah, I also realized there was a steep learning curve. Just getting started was the hardest part and making like a full stack application. Yeah, just want to add that.
01:20:47.390 - 01:21:10.674, Speaker B: Don't let this stifle you though, right? Even though this was a little hard, there's tons of Discord communities where I'm sure if you jump in or jump on stack overflow, you say, hey, here's what I ran into. Here was my issue. My experience is the community is more than apt to help you out and wants to see you be successful here. So awesome and looking forward to the next hackathon here.
01:21:10.872 - 01:21:40.380, Speaker A: Sweet, thanks. Alex also email me. I would love to chat more about your experience and talk about what this first time is and sort of like audit actually. I'd love to know what sucks and so we can sort of put that away and then try to bring up more optimized SEO on some things that are good. Maybe like an Austin Griffith video would be better. But my email is ken@ethereum.org. I will just put that in here in the yes, please.
01:21:40.380 - 01:22:03.154, Speaker A: So happy that you did this. And this is awesome, man. Yeah, thanks, man. Appreciate it. I think Patrick already mentioned this, but the global Discord exists after this event as well and there are hundreds of developers hanging out and there to help and comment on it. So just if you're ever stuck or need technical help, just post away your question and it will be answered. So thanks again.
01:22:03.154 - 01:22:36.080, Speaker A: And with that, we are ready to move on to our next team. And that is Aztec Interactive NFT. So, looks like you're all here. Whenever you're ready, feel free to kick off with your video. Looks like we're not getting the audio. Would you mind stop the screen share and then check the sound off box again?
01:22:42.430 - 01:23:16.390, Speaker D: Cook Beta and I work on the NFTs on the landing page. Mario Brise work on the DAP. And Alamvidia designed the game mechanics for this project. We built a DAP for an experimental game working with interactive crypto collectibles, or NFTs. So every collectible has a custom function inside the DAP. Depending on the NFTs we hold on the wallet, the user can move like rooms, attack enemies, or solve puzzles. It works with a DAP built with react, MetaMask and IPFS.
01:23:16.390 - 01:24:17.782, Speaker D: We mint seven NFTs with 3D collectible cards, and we fetch their data from the IPFS. And also we detect the NFTs on the user's wallet. To enable point and click interactions, you can check the demo for this hack on Sendbit MX Aztec, where you will find a landing page to access the DAP by clicking the button Latch Up. And once you get to the screen, you can connect your MetaMask. Once it gets connected, it will reveal the NFTs on your wallet and the actions that you can do with these NFTs. Since we have only the basic NFDS, we can only move through the temple and solve some puzzles. But now we get to this point and we get an obstacle.
01:24:17.782 - 01:25:09.574, Speaker D: We get a dark room where you need the Torch to light it. And as we don't have it in this address, we will switch to another one that has all the NFTs for this game, and you can see the difference. Once we get to the same room that here, you now can light the room as you have the NFT with the Torch. So now we can light the room and continue our quest to the next stage. And in this stage, we will use another NFT. We will use the machete NFT in order to attack the enemies. So by using the Machete, we can complete this stage.
01:25:09.574 - 01:26:21.490, Speaker D: So the point for this hack is to show that every NFT has a different function. So what we learn on this market make Hack 2021? Well, we learn to mint 3D crypto collectibles on ERC eleven contracts. We learn to give in NFDS, a custom web3 interaction. We learn to fetch NFDS data from users wallet, and we learn to use IPFS to store and fetch web assets. In the future, we want to get a full game with 3D assets, get an AR implementation for public parks or open places, develop puzzles to learn ethereum interactions and prevent financial abuse on newcomers, and finally, someday, introduce DeFi enabled rewards. So if you are interested in Aztec interactive NFTs, you can support the project by getting the NFTs on Shop Aztec MX, or visit us at MX on Twitter and all our social media channels. Thank you for your attention.
01:26:25.740 - 01:26:40.156, Speaker A: Awesome. Thank you so much. That was great creativity in there. I'll let the Arjudges kick it off, but I'm super impressed by how nice and cool and creative it looks.
01:26:40.338 - 01:26:46.130, Speaker B: Those NFTs are wicked. Those are crazy cool. Who made those?
01:26:47.220 - 01:26:48.112, Speaker A: Thank you.
01:26:48.246 - 01:27:11.288, Speaker B: You made those? That was sick. That was like 3D holographic. That was so cool. Yeah, so it's a really cool project. I was just kind of perusing through your code a little bit. It looks like most of it was kind of done on the front end. So you're taking these NFTs you're putting into this front end game and you're just going and so anybody can kind of spin up.
01:27:11.288 - 01:27:35.010, Speaker B: I think the whole concept is really cool. It's really fun. You clearly have a fantastic knack for the art style here because those NFTs are super sick. What was the inspiration for you guys wanting to get into this? Was it a learning thing for you guys? Because it looks like most of the code is front end. What was the inspiration to do this?
01:27:36.100 - 01:28:51.210, Speaker A: Well, we have been sometime explanating with all the protocols and good stuff on Italian. And we get to this point in the past hackathon where we try to digitize the digital skills for users. Since here in Mexico, we have a lack of digital skills and that's a barrier for newcomers to enter in crypto environment. So we want to create some experience that facilitates the newcomers to understand what crypto collectibles are, how a crypto asset work with the blockchain. So this is an attempt to create a simple game to familiarize newcomers with the usage, to the wallet, understanding what interactions are when interacting with other protocols or tokens, and differentiates between the fungible tokens and the non fungible tokens. So that's the main objective of this project.
01:28:51.820 - 01:28:57.370, Speaker B: Nice. Yeah. Really cool. And what did you actually deploy the NFTs on? What platform do you guys use?
01:28:57.740 - 01:29:38.390, Speaker A: Well, they are deployed on Variable. We created on Blender and we try to get something familiar with our culture from Mexico. So we tried to get on the card something that could get something I was like a child when I collected different cards and from new generations. I think probably could be some good points to start and start to know how the Terrier environment works.
01:29:39.320 - 01:30:05.720, Speaker B: Very cool. Nice work, guys. We believe it's a little bit easier to relate because it's kind of a twist here because we try to not only enable this for newcomers, but also give it a twist to the gaming a little bit. In this case, in the game, you own the assets that you buy in regular gaming, obviously, you just buy it. It's the game. You can just use it in the game. In this case, you own the assets.
01:30:05.720 - 01:30:36.484, Speaker B: You can trade them in the market if you want. You can put them for sale on Radical or OpenSea. You can exchange them with other clients. And the idea here is try to develop a bit more. Try to bring people from outside to designers so they can design their own weapons, their own things inside the game, and maybe the same community start working to develop more. The story of the game, we're just putting like the very basic but that's the idea. And make it in a way which is relatable.
01:30:36.484 - 01:31:28.404, Speaker B: You don't really have to be into crypto already so you can get into the game. It'll be more like an unramp for new people and in a kind of a relatable way. At the end of the day. We're of their generation that grew with this collectible cards so we kind of put it in a digital way so they can collect them if they just want to have the cards or they can actually use them in a game inside of the game. Our idea also was to enable rewards inside the game. We obviously are not that advanced yet. But inside the game, the idea is that if you explore you are able to complete some things then you will get a reward in a form of maybe another NFT or maybe even a token that you can change to buy more NFTs or you can just sell them like play with all this tokenomics.
01:31:28.404 - 01:31:36.190, Speaker B: So we can apply it in the game and bring newcomers to the ecosystem as well. All in one package, let's say.
01:31:37.440 - 01:31:39.230, Speaker A: Are you going to keep working on this?
01:31:40.480 - 01:32:14.120, Speaker B: Yeah, the idea is to keep working on the game. The truth is that we are a very small team and there's only R1 developer who's good on smart contracts and everything. We're not really that advanced on developing but yeah, we would love to. We already have like a discord. We're trying to make a little community start growing it and from there see if the people get interested, maybe start developing more about the story. Add more NFTs and see how the market responds to this type of new game on Ethereum.
01:32:14.540 - 01:32:26.840, Speaker A: Yeah, that'd be awesome. I went to the website and it won't load so maybe I just go directly to Rarible. I want to play this game. This is dope.
01:32:27.280 - 01:32:59.892, Speaker B: Yeah, but the website is not charging. We can double check that but it should be working. We checked it before but if not again, in Variable, the NFTs are available on Openc as well. The thing is that in Variable we were on the Craze last year like when everything was booming with Variable and all the NFTs and we got kind of lost on the whole boom. But we saw a lot of NFTs that they're just creating art and it's really cool but we wanted to give it a function to the art. That something you can do with it.
01:32:59.946 - 01:33:00.596, Speaker A: Absolutely.
01:33:00.778 - 01:33:08.840, Speaker B: And maybe that way you can actually be incentivized to buy it a little bit more. But it's in the process and yes, we're planning to keep working on it.
01:33:08.990 - 01:33:22.124, Speaker A: Awesome, well, congrats on and I hope that you get to finish this and make this available for everybody else to try out too. Be sure to put this in the feedback and showcase channel so all of our attendees can also play with this.
01:33:22.322 - 01:33:24.976, Speaker B: Perfect, we'll appreciate that. Thank you very much.
01:33:25.158 - 01:34:00.270, Speaker A: You are ready to move on to our next team. So that is Project TBTC deposit Redemption Service. I'm a little bit sad to tell the judges that the Big Mac index was not able to make this work from a technical side so they've been moved on to tomorrow's session but we'll be sure to send you their video. Enjoy it on your own pace. So Daniella, whenever you're ready, we'll promote you and we'll get you to kick off with your video.
01:34:11.450 - 01:35:16.570, Speaker E: Right now I seem to have the ability to share screen right? Share sound. Hi everyone at the ETH Global team and MarketMate hackathon. Before starting, I would like to thank you all for organizing this event which has been a great opportunity to learn, engage with the community, other members and put some code together. I'm part of a community called Kip Network which runs the TBTC protocol. So we bring BTC to Ethereum and when you are an operator in the network and someone enters or leaves the system, you get a fee and at some point due to the collateralization, you also want some deposits to be redeemed that would work as a bounty. So that the user that redeems the TBTC for the real BTC. To get a reward.
01:35:16.570 - 01:36:05.766, Speaker E: Say about my project I relied heavily on the Scaffold Eve video by Austin. It was really a great help and I used this framework as well to build this tiny UI for my test. So I try to focus more on the functional parts of it. So if I give a brief summary of what did I use to build this, it would be I used Scaffold ETH and I tried to use chainlink. So let's go through the contracts that I've built. One is the trustless asset which this would represent the TBTC. Since I was running this locally and I actually deployed this to Coven, I didn't want to replicate.
01:36:05.766 - 01:37:21.170, Speaker E: The full TBTC system would be on ERC 20 and it would be burnable. I'll later mention why is capturing the event important? The second contract would be the broker system where operator in the Kip network posts the reward and where the redeemer will come and claim his reward. Part of claiming would be validation from the Oracle that this address was the one who performed the redeem action or in our sample scenario, the burn of this asset. My third contract would be the one that I built using the chainlink workshop video tutorial about using adapters and consuming an API and restoring the result on chain. Basically we go to Ether scan and get the logs for certain event on certain contract and when it finds the address, Oracle will reply on the fulfill function with the response. So yep, those are my three contracts. Just want to show here where I deployed my contracts to Coven.
01:37:21.170 - 01:38:36.374, Speaker E: So if I go to Broker system and I go to the Ether scan there is my contract is deployed. 3 hours ago I built a small function in the hard hack config with Fundi Oracle so I would just click join Oracle, Fund Oracle and it would send link to this address from the deployer account which I had previously requested link to my CIA which is my deployer. So as you can see, it's all deployed on Covan, not functional, but I think it's something that it would be good to have in the network. Actually, one of the main issues that I found was that Bytes 32, which just I had to find out how can I get an address out of that. Maybe a chain link job that will return an address. I'll summarize this project. You will read other contracts, logs, event logs via an Oracle so that you can give awards.
01:38:36.374 - 01:38:53.190, Speaker E: trustlessly. This is my short proof of concept. I know this is not complete and not really looking to earn any prices. Just did it mainly for learning. So thank you so much again. All right, guys.
01:38:53.960 - 01:38:59.956, Speaker A: Yeah, thanks for that demo and congrats on showcasing that. So I'll let our judges kick in.
01:38:59.978 - 01:39:19.884, Speaker B: And we'll go from yeah, awesome. Like, I saw ETH Scaffold pull up and I'm like, oh, Austin Griffith has the biggest smile on right now. He is loving this. He's got his bow tie on. So I think it's great you jumped in. You're like, hey, I'm going to try this. I'm going to work with Chainlink and I'm going to work with Escaffold to get a front end up.
01:39:19.884 - 01:40:02.980, Speaker B: I think that that's great. A couple of tips. So there is a chain link East Scaffold branch that you can actually flip to and kind of paste some of the code from there. But yeah, I think this is really cool and I'm going to post into the channel here the chainlink developers discord. Anytime you have a question with Chainlink, feel free to pop in there and be like, hey, what's going on? And in fact, maybe we could have a quick chat after this because I'd love to hear more about your experience. Kind of where you struggled, kind of like the same as Ken was talking about before, where you struggled, where it made sense. It sounds like you had all the pieces.
01:40:02.980 - 01:40:31.990, Speaker B: You had all the pieces there. You were on Market Link grabbing a Bytes 32 job from an Oracle. So it sounds like you had all the pieces and then maybe we can just figure out where the lines weren't quite connecting. But yeah, I think this is really cool. You jumped into something new. You worked with Scaffold, ETH and Austin Griffith is super happy and yeah, I think this is really cool and awesome for jumping in and learning and presenting here. So nice work.
01:40:32.680 - 01:40:38.644, Speaker E: Yeah. Thanks, Pat. I actually didn't know that you were going to be here in a so it's great that I can also ask you questions.
01:40:38.682 - 01:40:38.836, Speaker A: Yeah.
01:40:38.858 - 01:41:01.736, Speaker E: So, like, first one I was a bit confused about should I use adapter or external adapter? And then since the price fits actually work differently, they ask too many different nodes. The answer I was thinking, how can I get mine to also ask different nodes, not just only one. So yeah, those are the main things, but I'm happy to tell you more about my experience. But I definitely enjoyed working with changing, and as you mentioned, it's scaffolding.
01:41:01.768 - 01:41:02.444, Speaker A: It's great.
01:41:02.562 - 01:41:30.852, Speaker B: Awesome. Yeah. Let's sync up on the discord and we can chat a little bit more and hear about your feedback because, yeah, it sounds like you got all the pieces. For most projects that are just kind of testing, normally they'll use just like one node just to test, and then once they're looking to ramp up, then they'll add more nodes, then they'll make it more decentralized. Because if you're trying to coordinate with a ton of nodes, it can be a little overwhelming at the beginning. But yeah, we can chat more. Really ambitious.
01:41:30.852 - 01:41:31.672, Speaker B: Nice work.
01:41:31.806 - 01:41:33.160, Speaker E: Thanks for your feedback.
01:41:38.030 - 01:42:03.326, Speaker A: Great. Well, if there aren't any other questions or comments, we are ready to move on to our next demo. And we just have a quick note for our judges. So we have one team from the other group that got moved over to this one. So what we'll do is we'll have them go last, and for that, you just have to refresh your page later. So not right now, but after this. But in the meantime, we have buy now, pay later or crypto.
01:42:03.326 - 01:42:42.688, Speaker A: So I think, team, if you can raise your hand, we'll promote you. That's Kane and Boris Kareem. And if we have you here, we'll kind of get you set up. If not, we'll just kind of see what's happening on the zoom side, but we may be ready for the other team, which is Avitraj kind of come in. So while we're looking for the other one, we'll just have Avitraj go. And for our judges, this will not be on receipts yet. So I'll just recommend you just write down your scores and we can refresh and see the other one later.
01:42:42.688 - 01:43:42.372, Speaker A: So Avatar will promote you in a second, and whenever you are ready, feel free to kick off with your demo. Sorry, I lost the unmute button. All right, I think we're good. Now, everyone, my name is Andrew Schmitz, and today I'm excited to present to you my hackathon project built with my partner William, called Avitrage. So simply put, Avitrage is a dashboard focused on interest rate arbitrage. So within Aave, you have a variety of different stablecoins and a variety of different markets that you can deposit and borrow for different rates. And having all these options opens up the ability to borrow assets at one rate and deposit them for a higher rate, effectively utilizing your borrowing power to earn passive yield.
01:43:42.372 - 01:44:21.524, Speaker A: And so the key feature that we wanted to build around this is allowing users to enter a leveraged arbitrage position in a single transaction using a debt incurring flash loan. So why is this useful? It really boils down to capital efficiency on behalf of the user and the protocol. So for the user leveraging their unused borrowing power to earn additional yield, is obviously an advantage. And for the protocol, increasing the borrowing utilization would thus increase the deposit rates and hopefully encourage more deposits. So now let's take a look at the interface. So the first thing that you'll see on our website is the best overall arbitrage. The first one is across all different markets.
01:44:21.524 - 01:45:00.352, Speaker A: And then the second one is just v two exclusive. We separate these because V two has the ability to leverage flash loans for up to a five x boost. And then we also give a table view of all of the different stablecoin rates. And then in the portfolio we give people a breakdown of what their borrowing power looks like by market and then also show them the collateral and the deposits that they have. Ideally in the future we'd like to implement all of these different actions. But for now, avatarj is the currently implemented one. So here what you can do is select an asset to borrow, select an asset to deposit in any one of the markets.
01:45:00.352 - 01:45:39.824, Speaker A: I'm going to select true USD because this asset can be used as collateral in version two, thus is eligible for leverage. And so the leverage happens automatically on this left hand side. So what's actually happening here is that the user would take out a flash loan, swap it into the true USD, deposit this as collateral, and then they can just incur this flash loan as debt. And this all happens without the user even having to know what's going on. I'm actually not going to execute this because we used the graph to source this information. It wouldn't actually even show up if we did execute it. But I can show you what the smart contract output looks like.
01:45:39.824 - 01:46:28.720, Speaker A: So we were able to enter a leverage position with 220 e of debt and 288 of collateral after we executed this flash loan, swapping USDC for Dai. So back to the presentation. The future things we want to do obviously refine and test the smart contracts, finish up this interface for the leverage arbitrage, and then add all of the other actions so that users can really take control of their position and effectively have like an alternate interface to Aave if they really wanted to use it. And then the third thing is insurance integration. So because all of the risk of this is contained within Aave, I think it would be really easy to integrate insurance against your positions for this. So with that being said, encourage everyone to check it out. Thanks for listening.
01:46:28.720 - 01:46:52.224, Speaker A: That was awesome. I'm so excited to jump in. So question, I think you said that it's not on mainnet, right? Not yet. That is correct. So actually Will can speak a little bit more to exactly where we are on the smart contract side, but on the front end. So we have sort of the interface built. Currently it's not really plugged into our smart contracts.
01:46:52.224 - 01:47:26.360, Speaker A: We're still trying to optimize those. Make sure we're not going to fail or swap with super high slippage before we deploy anything. Cool. That was actually my next question about gas and slippage, but I would love to hear about, I guess hear from Will. He's just being promoted to panelists. Well, what's going on, Ken, before I want to jump in and also say, I love the name, guys. It's like the best name ever.
01:47:26.360 - 01:48:19.850, Speaker A: It's so good. I love the name and I love the design and I think it looks great. And then after you answer Ken's question, I got a question of like, what's currently the best avatar and why do you think it's going to persist with this tool? The name goes completely to Andrew. Yeah, I actually got cut out when the question was being asked. So can you ask it? I guess my first question was Mainnet. And then kind of what Andrew was saying was you'll give a status on where the project is currently, so I assume when you guys are ready to go to Mainnet and then have you thought about gas prices and slippage? Yeah. Okay, so gas prices and Mainet gas prices and slippage are the main blockers from mainnet.
01:48:19.850 - 01:49:19.340, Speaker A: Plus, since this was a hackathon thing, we haven't assessed the attack surface at all. So that has to be dealt with before we even think about deploying to Mainnet. So for our demo, we basically just do a blind swap on Uniswap in order to do the leveraged deposit. So that will incur basically as much leverage as the user's position size and as the source of liquidity. So we'll need to put more thought into whether or not we do some sort of routing on uniswap or just use another liquidity platform in general and then in terms of gas. So using Arbitrage actually gives you pretty big gas savings compared to just trying to manually borrow and deposit and borrow and deposit as many times as you would do without using Arbitrage. And so there's gas savings just from doing that.
01:49:23.490 - 01:49:38.994, Speaker B: Feel like everything Ave touches is secretly gold. The name is fantastic. And I couldn't help but notice, were you in the demo? Did you also do use, like, ETH Scaffold, as like a V, one of the front end of this?
01:49:39.112 - 01:50:02.070, Speaker A: Yes, I did. So actually, this is the second sort of Web three project I worked on, and the first one that I integrated was with Truffle. And just getting the interface of connecting a wallet took me like three different pages and a ton of different configurations. Scaffold ETH was super easy, worked straight out of the box. And once we do get the time to really polish these smart contracts, it'll be so easy to integrate them into the front end.
01:50:02.220 - 01:50:03.058, Speaker B: Oh, I love it.
01:50:03.084 - 01:50:03.274, Speaker A: Yeah.
01:50:03.312 - 01:50:29.442, Speaker B: So I don't have your code in front of me, but I saw the little gas box, the bottom left and I was like, oh, I know that. Which is great. So this is your second one. Yeah, I know. Doing front end, there's a couple of different tools there's like Create, react, or excuse me. Create ETH App is a really good one if you're looking for a great way to build like, a front end on top of a Web Three project. But yeah, I think what you did, you're like, hey, did you try like, Drizzle or something out before?
01:50:29.576 - 01:50:30.530, Speaker A: Yes, exactly.
01:50:30.680 - 01:50:54.218, Speaker B: Tried drizzle before. And yeah, you were like, this is a little bit tough. So you moved to East Scaffold. I think that's great, you're being tenacious in the Web Three world kind of bouncing around and this is what you'll see with different protocols, too. Hey, maybe one protocol doesn't work so you move to another one. So I think that that's great. But yeah, if you haven't checked out Create ETH App, I would say maybe that's the next step for looking to build a solid front end.
01:50:54.218 - 01:50:57.260, Speaker B: But yeah, this is really cool and nice work.
01:50:57.630 - 01:51:35.622, Speaker A: Thanks. Amazing. Well, if there are any more questions, this is a wrap. This was our last project for today and I want to congratulate all the teams for kind of going and showcasing what they've done the past three weeks. And I just get more and more happy when I hear that people are going to continue working on him after this. That's the part that excites me. And so congrats to all the teams that presented and thanks again to our judges who spent the last couple of hours giving feedback and comments and sharing the excitement with teams and us.
01:51:35.622 - 01:52:15.946, Speaker A: And last but not least, I want to thank Hank and Andy from our volunteers, who actually are the people responsible for making this run super smoothly. They've been doing the work behind the scenes, so a lot of you on the video are not going to see this because they don't have their videos on, but if you want to turn your videos on, just quickly wave hello. We want to just make sure that people know why and how. This was super smooth. So thanks again. And with that, I'd like to wrap up today's judging session and we'll resume with the remaining 100 projects tomorrow. So thanks again, everybody, and we'll see you tomorrow.
01:52:15.946 - 01:52:21.334, Speaker A: Bye to our thanks, Kartik. We'll just have you join the other chat for a couple of minutes.
01:52:21.452 - 01:52:23.080, Speaker B: Awesome. Thanks so much, everybody.
01:52:26.490 - 01:52:27.060, Speaker A: Thanks, everybody.
