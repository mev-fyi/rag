00:00:00.570 - 00:00:40.730, Speaker A: Onto the next talk. So our last talk today is a panel on DeFi security and best practices. We're going to just be covering some things to keep in mind the state of what's happening in this ecosystem from a developer and security standpoint. And there's so many details that I'd rather let our panelists go into, including the introductions. So without without further ado, I'd like to invite Mariano, Sam, Morelian, Emiliano, and Martin on stage. And Mariano will be moderating this chat, and I'll let him kick us off with the introductions to all of our panelists and himself. Welcome, Mariana.
00:00:41.390 - 00:00:45.580, Speaker B: Hey, Karthik. Thank you so much for having us here.
00:00:47.310 - 00:00:53.950, Speaker A: Oh, we're excited to have you. I'll ask everybody to turn their videos on, and we can kick off with the chat.
00:00:58.850 - 00:01:04.020, Speaker B: Great. Okay. Do we have everybody? Seems like we do.
00:01:04.790 - 00:01:05.346, Speaker C: Cool.
00:01:05.448 - 00:01:43.600, Speaker B: Well, thank you, everybody, for being here. This is extremely exciting for me. I'm calling this version two of the panel. We had believe it was January 15 or somewhere about then, and I remember saying that not a lot was happening at the beginning of the year, and certainly a lot has happened since. So I'm really excited to talk to all of you about it. Let's do introductions first. Sam, do you want to go first?
00:01:45.650 - 00:01:59.940, Speaker C: Yeah, sure. Hey, everyone. So I'm Sam. I'm now a research partner at Paradigm, where I basically still do the same things I've always done, which is review, know, keep the ecosystem safe, as always. That's about it.
00:02:00.950 - 00:02:04.820, Speaker B: Great. Morillion. Hey.
00:02:05.290 - 00:02:21.580, Speaker D: Good to be here. I previously worked as an auditor at Consensus Diligence and was one of the original members of that team. And now I'm at Optimism, helping to secure that protocol and loving it.
00:02:22.350 - 00:02:22.906, Speaker C: Cool.
00:02:23.008 - 00:02:26.460, Speaker B: Can't wait for that to go live, I think, everybody.
00:02:27.070 - 00:02:27.820, Speaker D: Yeah.
00:02:28.750 - 00:02:30.650, Speaker B: Cool. Emiliano.
00:02:32.050 - 00:03:03.240, Speaker E: Hey. Thanks. To be here with, I would say beautiful minds in DeFi. Obviously, we have many, many others. So I'm the founder of DeFi, Italy, a community around DeFi in Italy, and let's say I'm a part time builder in DeFi, and let's say I help projects during security incidents. And I'm also a strategist in the Wire group.
00:03:04.170 - 00:03:07.510, Speaker B: Excellent. And finally we have Tincho.
00:03:08.410 - 00:03:19.580, Speaker F: Hi, everyone. Super excited to be here. Tincho, I'm a security researcher of Encephalink. I've been a security researcher for the last couple of years already. And, yeah, excited to be here.
00:03:20.130 - 00:04:00.502, Speaker B: Great. And just in case, my name is Mariano Conti. I was at Maker for a few years and now just part of the Ethereum and DeFi ecosystem. Cool. So let's kick this off. So this past few months, at least, personally, I've seen a lot of activity, rock pools and just exploits, mainly on Binance Smart chain. And I think I've seen a mix of exploits that we almost do not see anymore on ethereum.
00:04:00.502 - 00:04:34.180, Speaker B: For example, a mix of things that we've already learned and don't do anymore on ethereum, as well as straight up copies of other protocols, sometimes with one or two lines change just to become 100% an intentional rock pool. Right. I want to start with that. What has been your experience? Do you think it's fair to say that everything, most of the rock pools are not happening on other chains other than Ethereum? Or do you disagree with that?
00:04:37.930 - 00:05:55.870, Speaker F: I would start saying that there are different scenarios, I would say in that you have like rug pools in which perhaps the owners or the admins of the project have thought about rug pulling the project since day one. And that's just plainly a scam and people should definitely try to avoid that. Then we have this common or simple bugs that you mentioned and that can be the case of new developers jumping into the ecosystem to these new side chains that appear and they are like just coding their project and they fall for the same mistake that we have had in many times already in Ethereum, but a different scenario. I think that could be interesting to think about is there have been bugs in which they are so obvious to be true. Right? So in some sense, I don't know, I don't want to believe this, but it could be the case that we are seeing rug pulls but masked as hacks. So you launch a project, you introduce subtle bug or not so subtle and yeah, then you get hacked. But at the end of the day, you're just rug pulling your users.
00:05:55.870 - 00:05:58.880, Speaker F: You're saying that you got hacked. I don't know.
00:06:00.370 - 00:06:16.070, Speaker B: There was this case of a unisoft fork that they just directly removed the invariant, right? The x times y equals K, they just removed it. And that cannot just be a simple bug, right? That has to be intentional.
00:06:18.090 - 00:07:26.102, Speaker E: Yeah. I would say, Mariano, that as Tincho mentioned, it's not so easy to describe all the scenarios. I'm more, let's say, oriented to say that there is so excitement in DeFi and especially in this, let's say, scaling solution like BSc, Polygon and any other let's say, scaling solution that people, new developers, new builders rush on. Let's say build their own new protocol, maybe leaking some information about other protocols that are successful and maybe because they lacks of experience or skillness. Let's say they remove some feature without doing the tests that are required. And definitely we have scenarios where maybe some developer remove an underscore. So you see that the code, let's say, seems to be identical.
00:07:26.102 - 00:08:52.722, Speaker E: So that probably is for sure. But I think that most of the bugs that we saw, or the let's say, incident are related to this excitement. And another interesting, let's say, pattern that we saw is that since there are so many variants, so many forks now, it's difficult also for those new protocols to stay updated with the changes of the original ones. So, for instance, if you fork a wire, if you fork any other protocol and maybe a wire, discover an issue, it's easy to say that probably it will be exploited in the next minutes on the side chain. So it's a common problem for open source. And because of this excitement, it's not easy to, let's say, to solve it. So I always think about it's okay to, let's say, contain this excitement and be more safe, or it's, let's say, healthy to have those protocols to have some impact.
00:08:52.722 - 00:09:03.400, Speaker E: Obviously, from a user perspective, it's better to be safe. But at the same time, let's say you move innovation in this way, so it's not easy to answer.
00:09:07.400 - 00:09:10.230, Speaker B: Anybody else want to chime in on this?
00:09:12.930 - 00:09:39.880, Speaker D: I feel like good points have been made, and it's hard to say a lot about what's happening exactly when rug pulls happen. The one point I jotted down was to not necessarily assume maliciousness when stupidity is sufficient as an explanation. I think that's probably very often the case. What's going on? And then you also have evil at times.
00:09:41.450 - 00:10:05.440, Speaker B: What about something that happened very recently, like Iron finance? I don't know if anybody's aware of what happened. Would you consider that a rock pool? Would you consider that an economic exploit? Would you consider it? That's just the way algorithmic stablecoins go. They work until they don't. What do you think?
00:10:09.470 - 00:10:40.740, Speaker D: It seems to me like, without having done a formal analysis, but it feels like if you publish the rules well, one thing, if you publish the rules, somebody will find a way to break the rules. But you don't even need somebody intentionally trying to find a way to break the rules. I think humans are more complex than we can describe with an algorithm, and it's asking for trouble, and history seems to be bearing that out.
00:10:43.030 - 00:11:02.540, Speaker C: I mean, someone feel free to jump in and correct me, but I'm not sure the Iron incident was a rugby. The founders didn't make money off it, right? It just sort of collapsed on its own from all the selling pressure, at least as far as I understand. I also haven't done an analysis myself.
00:11:04.430 - 00:11:27.998, Speaker B: Yeah, that's as well what I understood, but I don't know if there was any new information. I just scrolled past a few tweets and there were mentions of both. But in the case of an Algo stablecoin, most likely just fell to its regular old bank runny.
00:11:28.014 - 00:12:13.540, Speaker D: Thing is, there's many ways to make this is not even an allegation, but you can just short the token, right? A very roundabout rug pull would be to just create an algorithmic stablecoin, assume it will eventually die, and find some way to benefit off of its eventual death very indirectly, not necessarily through a hack or anything. So I think the upshot there is just it's really hard to identify, to understand motivations and who's acting in what way in this world.
00:12:15.590 - 00:12:48.720, Speaker B: In terms of actual security. Let's focus on EVM style blockchains. Have you seen anything new? Any new developments that can help us prevent certain bugs that can guide the security community forward. Anything that you've seen that caught your eye or are we more or less the same as we were when the year started?
00:12:53.490 - 00:14:20.540, Speaker E: Um, I think that from a review perspective, I mean, tooling improved a lot. And let's say we have more complete tools, not at all comprehensive yet. We still need, let's say, developer adoption of those tools, but we saw the rise of, let's say, companies, groups, new startups, Dows or whatever that try to help and take a look on the code that you build. So maybe not so professionals, but let's say like an audit where you have very vertical people that, let's say, do many processes to understand if your code is performing as you expect and giving you a different perspective. I'm talking about the initiative where also you Mariano, participating, also Sam, where you have a contest, a protocol or a new builder, let's say, put an allocation and say, hey, please try to break it, or other initiatives like the one that I started. And let's say it's not going as I expected, to be honest. So reviews Dow, where people try to collaborate on reviewing the code each other.
00:14:20.540 - 00:15:25.870, Speaker E: But alongside to that, I see that many protocols now collaborate more than before. So because they need to integrate to have success, we see that many protocols look to each other code. So I would say that from a tooling perspective, we are still in an early phase. Also if, let's say, tenderly, with simulation, with all the tooling that help to troubleshoot the issue, accelerate the diagnosis of a security incident or maybe before, but I'm very happy to see those, let's say, initiatives to try to fix the supply of security experts and also the lack of, let's say, security practice for new builders.
00:15:28.290 - 00:15:30.986, Speaker B: Yeah, go ahead.
00:15:31.108 - 00:16:28.180, Speaker F: On top of what Emiliano was saying, that I super agree with that. I think, yeah, that we have had the development, I wouldn't say specifically technical developments, but I still think that the security landscape keeps improving. And Maturing, perhaps we cannot catch up with so many new developments that happen in the ecosystem as a whole, like forks, side chains, layer two and everything, but I think that the white attacker space is maturing. We have managed Pakvantis now. I think that the Unified People are actually doing a pretty good job, I think, on the operations and monitoring tools are also improving. Like Emiliana mentioned tenderly, we have Openstabiling Defender as well, doing some great advances security tooling. Also, I think that Regal, Bridges and Consensus and Sartor are doing a good job there and I think they are contributing a lot.
00:16:28.180 - 00:17:13.920, Speaker F: I also want to stress what Emiliano said. I think that projects are talking to each other, sharing experiences. Many of them have been hacked and they have learned lots from those hacks and they can share and get together and do help groups after hacks on what they have learned. And also there are projects onboarding new security specialists into their team. I think that more might be an instance of that but probably other projects as well are starting to take security more seriously knowing that it's not enough that there is a whole comprehensive thing that you have to do and like onboarding a security specialist might be a good step forward.
00:17:14.930 - 00:19:05.620, Speaker E: Just to point to what Tincho said the market for security growed a lot, not maybe as we need, but for instance, a company like Imunify now is offering 24 million of Bounties, collecting most of the protocols. So for me this centralization is a good, let's say, indicator that not only the most famous or the biggest protocols see that this is an important, let's say, investment that you have to do for many perspective user, continue to have your protocol live, et cetera, et cetera. But I think that there are opportunities for newcomers to not only I stress this point many times to work in DeFi, to express your talent in DeFi. You don't have to fork a protocol to do a new protocol. You can collaborate in many ways also gradually and security is something so needed and is a very good, let's say, place to learn a lot of things that help you maybe in the future to design a more robust and solid protocol. So I stress out that we need more and more people here and many companies are trying to build on top of this. And I'm aware also of new startups, new protocols that try to build something that let's say it's a security protocol in terms of, let's say in a decentralized way about that.
00:19:06.630 - 00:19:56.210, Speaker C: No, go ahead, sorry. Yeah, I mean, I think it's like Jonah Meliana mentioned, immunify especially, is, I think, going to do wonders for security in Ethereum in the coming months or years. If the timescale is mostly because we're slowly pulling over all of the talent in the current website security space over into Ethereum, where we're currently experiencing such a shortage of security experts. I think. One other thing I wanted to call out really quickly on the topic of tooling, or at least tooling adjacent is other languages for the EVM that are being worked on right now. The Ethereum Foundation, I believe is working on like a Rust inspired language. I don't know if it's Fe or if you pronounce it Iron or however, but that's doing is really promising.
00:19:56.210 - 00:20:35.860, Speaker C: And just a couple of weeks ago Georgia was pointed out to me compiler by Hyperledger called Solang, which compiles solidity but using an alternative backend. It's built on lmvm, I believe. So I think this isn't talked about as much, but I write on solidity sometimes for some of the more interesting language features they just decided to introduce. But I think just in general having the flexibility of language that is designed with all the lessons we learned in mind over the past couple of years could be a really big point as well in the coming months.
00:20:37.030 - 00:20:55.000, Speaker D: I think Reachlang is also worth calling out there. They're doing some interesting work. I can't say I know it very well, but they're really working on tackling the problem of secured blockchain development and I think it's worth watching.
00:20:56.830 - 00:21:24.180, Speaker C: Reach is actually really fascinating because they take the concept of like, they like compile an entire basically like state machine down into the program. So instead of defining individual functions for a rock, paper, scissors game, you would define the state machine of the rock, paper, scissors game itself and then the compiler would generate all of the state transitions for you. It's really interesting. You should definitely take a look, a deeper look if you haven't yet.
00:21:26.310 - 00:21:39.480, Speaker B: Do you know how it compares Gas wise for example? I know that usually with these kinds of languages you try to be as specific as you can.
00:21:41.290 - 00:22:17.540, Speaker C: Unfortunately I don't think Gas is on the top of their roadmap right now. The way the Reach compiler works is it takes the Reach code and compiles it into Solidity, I guess transpiles maybe it would be, and then it lets the Solidity compiler handle the rest. So I would imagine Gas might, I would say at best is equal. You might get some optimizations from the fact that the Bridge compiler can perform certain transformations that as a human developer you can't, but I wouldn't hedge my bets on that.
00:22:19.990 - 00:22:56.590, Speaker B: I have a specific question about tooling and security. Has anybody seen out in the wild, we always talk about a protocol, maybe looking at the Mempool directly for any transaction that would alter the state of their smart contracts in a way that's unseen and having a transaction ready to maybe stop the protocol or pause it in some way. Has anybody actually seen that in the wild happen or is that still mostly just theoretical?
00:23:01.260 - 00:23:07.448, Speaker F: I haven't seen it but definitely sounds like nice, right? Like Yusuf.
00:23:07.544 - 00:24:33.956, Speaker E: But no, I haven't seen honestly, honestly. We talked I think also at the very first panel that we have, I remember a tweet that I did about that, but I think that few players, like for instance Block native, did a great job on the ManPool analysis, both from, let's say reporting perspective, but also from a tooling. And I think that the missing part here is how to understand if those transactions are harmful. So as soon as we have the first line of defense, also if let's say the incident will happen anyway, is let's say a proactive monitoring okay, so you know that it's going to happen and so you can put in place all the mechanisms. Also from a communication perspective, being able for, let's say, take an action before that one is settled on chain. I see that it's still futuristic, but it can be realized. I would say that I would like to see some, let's say, pattern that protocol can use to have, let's say big red buttons.
00:24:33.956 - 00:25:02.160, Speaker E: If we are able to define some sort of standard way to, let's say, put a protocol in, let's say sandbox modalities sandbox way that is blocked for somehow so the user cannot deposit anymore, cannot withdraw and whatever. It would be easier to attach some sort of automation when we are able to understand if a transaction is harmful.
00:25:05.220 - 00:26:35.004, Speaker C: Actually a really key point about how exactly do you define or how do you design the pausing mechanism for your protocol? Right? Because the worst thing I think for all of us is when there's a bug in a protocol and there's no way to pause it, you have to do the white hat hack on chain. But of course, if you go to the other extreme, users might not really like it if there's this master switch that pauses the entire protocol that you can't get out at all, you're sort of at the whims of the development team. So that's something that I try to really drive the point home when I'm working with new groups is like have you really considered how exactly do you want to pause your protocol? Have you considered adding some sort of bare minimum failsafe where you don't let users in and you don't let business operations happen but they can still exit if they want to. But on the point of is there any tooling that lets you react to transactions in the Mempool? Isn't that what opens up vendor does? I was smiling because I was like, man, surely didn't was going to talk about this because I think you have to do it manually, but I think you can set specific conditions to watch for. Like if this transaction touches my contract and the new state looks like this compared to the old state, then do this thing which may or may not be like fire off this new transaction, something like that, kind of.
00:26:35.202 - 00:27:15.900, Speaker F: But it doesn't work with the Mempool yet. But definitely it would be a nice extension. What you can do now is, yeah, with Depender you can monitor transactions, you can see how they impact on your contract. And once you have those, you can have automatic actions which we call auto tasks and have automatic triggers right from an alert and react on something on your protocol. So I don't know if you see that the balance of your contract has decreased for some amount of money, then you launch automatically a transaction that poses the whole system or something like that. It's pretty customizable, but it doesn't work as long as I know it doesn't work with transactions in the Mango.
00:27:18.240 - 00:28:35.860, Speaker E: Oh, sorry Mariano. No, I would say that would be a great addition. I mean that many players already have speculative execution for those transactions. What I want to add to what Sam said is that I saw some protocol that basically let the user decide if they want to continue to operate when the, let's say, protocol is in danger. So basically you can opt out from the okay, the system is halted, but if I want, I can override just for myself and do the action. The other side is that having the red button that is pressable maybe from, let's say this automation could be also a risk for, let's say, Daniel of service. Because if I want to stop a protocol, let's say because I'm a competitor, I'm evil or whatever, if the attacker knows how you react to those dangers, it can, let's say, continuously halt you.
00:28:35.860 - 00:28:55.230, Speaker E: So it's not easy I think, to design a system that automatically pose your protocol because there are many other scenarios that could arise that let's say maybe you are not in danger, but there is someone that continues to press the red button.
00:28:57.680 - 00:30:04.880, Speaker B: I will keep asking if we continue doing these panels, maybe one day you will say, yes, this is it, we build it and use it. But on that note, even if you were able to access the mempool, it wouldn't really matter, right? In a world of Flash bots and dark pools and everything, if an attacker wants to not broadcast a transaction, they can just use a private service, right? So kind of defeats the purpose. And on that note, what do you think about projects like Flashbots? Everything that's going around minor extractable value. Is there anything special that DeFi developers, security minded individuals in the space need to think about do differently? Is flashbots the future. The standard of interacting with ethereum.
00:30:10.450 - 00:31:00.110, Speaker F: If I'm not wrong, I mean the things that you can do with Flashbots, I might be mistaken and perhaps some you have some more ideas if you have been working with the team. But the things that you can do with flashboards are things that the miners could have already done in the past. It's just like we are kind of facilitating them the job and perhaps getting extracting some profit from it in the meantime. But many of the dynamics that you can do in mev is just like facilitating the miners that job. And so any kind of attack coming from that, if I'm not mistaken, if I'm thinking it right, it could have been executed by a smart miner in the past. I think that cache is just like paving the way for it to happen in an easier way and more sustainable for the ecosystem.
00:31:00.790 - 00:32:48.974, Speaker E: That's true Tincho, but it opens the opportunity for others to leverage the miners position. So miners maybe doesn't have the time, the knowledge, the money to invest on, let's say strategies on DeFi that can benefit for let's say front running others or let's say executing before. So minor I mean researchers for instance, also why earn when is executing harvest for those strategies want to be eaten? Because otherwise could be target of sandwiches, attacks back running or whatever. So having, let's say a party like a miner that offer you to be eaten during the execution is something that works a lot. So I would say that mev is obviously can be used how you describe. So basically attack or whatever, but at the same time help two protocols to avoid issue, to be, let's say to see before the settlement a specific transaction, but for protecting your protocol, this is not the only, let's say, solution that you can use. I see, because I'm just more close to that that for instance, Wyorn implemented in their system, let's say three shirts and right now with the Volt system you can have health checks on, let's say the arvest that are the most delicate operation.
00:32:48.974 - 00:34:01.846, Speaker E: So if you exit from some boundaries, the transaction will reverse that all. So it's important also just to complete what we said before, that you as a protocol also think about, let's say some thresholds of, let's say safeness of your protocol. So maybe bigger deposits are not possible. So you have to execute in two steps along with withdrawals. So there is not only one solution, but there are many that you can put to cover many of the, let's say, attacks or traffic that you may have. But anyway, just coming back to mev, I think that it's a great thing if you go on the explode flashpot net from, let's say the last year, we grow from the extraction value from zero to basically 1 billion. So that also offloaded the network from many price gas action.
00:34:01.846 - 00:34:17.760, Speaker E: So I think that there are many positive, I mean side effects of this stuff. Also if I don't like too much because certified that miners have a privileged position.
00:34:21.990 - 00:35:38.570, Speaker D: I wanted to add for the protocol devs listening that on the general topic of mev, I think that there are emerging design spaces and mechanism designs that are worth investigating. The two that come to mind are I think it's called mintx and cowswap which are approaches to implementing a dex that is resistant to mev in ways and essentially using batching to bring together people on both sides of the trade. You think of it like alternative to uniswap. You bring together people on both sides of the trade, you have a certain amount of time for people to come in and you don't have that same kind of like sandwich attack dynamic that you tend to get with the AMM. And so it's not necessarily to call it those projects in particular, but I think increasingly it will be of the benefit to the protocol to be thinking about mev resistant designs and new mechanisms that can improve the user experience and protect them against that kind of exploitation.
00:35:41.630 - 00:36:12.260, Speaker B: Interesting, we have a few questions from the chat so we can start with that or if anybody has anything else they want to say about mev. No, let's do a couple of questions. So on the topic of l Two that is becoming more and more common. Does anything change as you think about deploying contracts to l Two with regards to security?
00:36:15.530 - 00:37:37.210, Speaker D: Sure. Well, one example that comes to mind is especially it's one thing if you're operating solely on a specific L2, it probably does not change too much depending on the platform itself. But I think an obvious example is bridging with optimistic roll ups. You tend to have a fraud window that, first of all, you have like async cross domain calls, so there's some delay. You send your message from l One to l Two, you don't really get a response in the way that you do with a fully atomic transaction in the EVM, and you send your message off and you hope things go well on l Two. An interesting example that came up recently was a project designing a bridge for their token thinking about pausing mechanisms. So in the situation where you pause your bridge on l One and pause your bridge on l Two because you have some problems there, for whatever reason, they chose, and probably rightfully so, to leave the well, there will be transactions in flight.
00:37:37.210 - 00:38:12.010, Speaker D: So with Optimism seven day window, if they pause those two bridges, you don't want to have everybody who has tried to withdraw in the last week just have funds stuck when the bridge on l One refuses to do anything and to process those transactions. So I think that a more asynchronous model. So that's a specific example of how a more asynchronous model is going to cause people to have to think a lot harder about some of their design decisions.
00:38:18.210 - 00:39:17.460, Speaker B: Anyone else? Something about l two. I know in the case, probably optimistic roll ups like Arbitrum and Optimism are going to be I don't know, this is my guess, but I think they're easier to use than something like CK roll ups, at least for now. For what I've seen, they require a bit more different languages, things like that. Do you think we're going to see more issues with the optimistic roll ups just because we're going to see the same copying of protocols and putting them in Optimism and Arbitrum and have the cycle go all over again? Fork Rockpool. Fork Rockpool just going to take seven days for the hackers to release their money?
00:39:20.770 - 00:39:23.680, Speaker D: Yeah, for sure. No doubt. I guarantee it.
00:39:24.770 - 00:40:44.410, Speaker E: It will happen for sure. Mariano, we can prepare a little bit more. I'm really interested because we have here, Marillian, about the security aspects that you consider or the security requirements that you consider when you cross the boundaries. So also just for the audience that we have, because maybe many don't know what happens effectively when you cross the bridge. So you send a message, you deposit something just to be not so technical, but you deposit something on the bridge and then what happens? So who execute the transaction or the state change on the other. Side and it's a single entity, it could be Chancellor, it can cheat. So I think there are many points and I think that you are the most skilled to explain us maybe with a very le five, especially also where optimus position itself in this landscape.
00:40:45.390 - 00:40:46.140, Speaker D: Okay.
00:40:48.750 - 00:40:50.540, Speaker E: You can insult later.
00:40:51.730 - 00:42:36.858, Speaker D: Yeah, it is a big topic and I actually have not got as much practice explaining it as I would like. But I guess I'll say one thing you're alluding to is okay, maybe the nuts and bolts is that or at the high level, sorry, there's no reason that you have to use the messaging infrastructure that we've set up. If you're good at writing merkel proofs you can go ahead and create your own pair of messages to send things back and forth from L One to L2 on Optimism we've built that for people. We also have a contract that is fairly easy to inherit from, much like many of Zeppelin's things, which we call it OVM cross domain enabled and it handles that kind of the permission layer. So you can import that and you can protect all your functions to say oh, this is the L One contract that you put this into an L2 contract and say okay, this is the only L One contract that is allowed to send a message to us to execute some functionality and vice versa. You can do the exact same thing and then to not go into too many of the details. But yes, there's an entity called the Sequencer on Optimism that many people have heard about and so it provides much of the throughput benefits that we have by centralizing this and having a big beepy node much like you might have with a more centralized chain.
00:42:36.858 - 00:43:42.210, Speaker D: However, we depend on the security provided by Ethereum to help us provide better decentralization guarantees. Censorship, resistance as well is something that we have worked into the protocol. Although to be completely transparent there is what I'd say like a progressive decentralization approach that we're taking. So at the outset there is more centralization and we will be taking or reducing that over time. Deeply baked into the DNA of the Optimism team is the idea of exiting to community. So that is very much on the roadmap. I've always generally been in favor of having speed bumps and various safety features that you can take off over time rather than starting with a I don't know what you'd say, full speed ahead approach.
00:43:43.270 - 00:43:44.340, Speaker E: I see.
00:43:45.510 - 00:44:29.680, Speaker B: I want to touch on that because I've been asked that way too many times. So for a project that wants to launch and this is not necessarily just for L2 there are many different ways of doing a proper launch with safeguards. What would you say the many different ways are and which ones do you prefer? I'm talking about restricting via the UI for example, or adding actual restrictions on the smart contract using allow lists, using upgradable proxies, things like that. Which ones do you prefer and.
00:44:39.940 - 00:45:31.350, Speaker C: Mean? I think my favorite is just adding a banner on the website that says by using this you acknowledge the risk of using this project and no responsibility to the authors. I think you really nailed it there. The Allow list is a big one. I know yearn did that for their V Two launch, I believe. I think my favorite by far is probably just a cap on the total amount that can be deposited in the system and then that either ramps up with time or it gets adjusted by the team. The problem with other methods, like a cap on individual accounts, is that it sort of becomes useless because anyone can it's trivial to create a new account on ethereum, you just transfer your funds elsewhere. And so it feels like the most bang for your buck to just put a hard cap on the total amount of assets in the protocol itself.
00:45:34.760 - 00:46:36.650, Speaker F: Yeah, I would say from some of that, having caps, particularly on the total amount of money that the system can handle, I think it will make the system less attractive for criminals. So yeah, you won't have that much money deposited and it might be safer having emergency shutdowns, knowing that the first versions can fail and might be a little bit more centralized. And in my opinion that's fine. I'm also like a supporter of the slow decentralization model and I think that works. And I see projects going down that road and succeeding monitoring, that's a huge thing that people that want to launch Fast Mining should be doing as well. And publishing security contacts really sign on your front end saying this is experimental, things can fail, don't put your life savings on this product.
00:46:37.740 - 00:47:51.244, Speaker E: Yeah, I like a lot we don't have to reinvent the wheel. So having, let's say a staging environment like a beta for your protocol, especially if you, let's say already matured, like for instance wire, also Idle Finance has let's say a separate section of the protocol of the application that is segregated, that basically allow you as a protocol to experiment. So in addition to, let's say, protect you from a security perspective, you also can test if what you are going to release is attractive enough and working backwards to improve it. And this is the example of Ape tax. So with Yearn before going to production, basically you test with the other strategies, if your strategy is working good and also you shut out to the users that let's say want to experiment with you and provide you a feedback. And with Caps this help a lot. So you have Caps but also a separate environment.
00:47:51.244 - 00:48:33.920, Speaker E: It is not testnet, it's still Mainet so real funds and you test the changes that you are going to do. So I think that this is a very good approach. Honestly. I would like also to see more usage of the ethereum testnet that we have. I don't want to say that let's say coven if should have value, honestly, it could have, but we should use more other testnet or let's say staging environments and we don't have to reinvent the wheel.
00:48:37.940 - 00:49:10.220, Speaker B: Do you think after I know some DeFi projects are already three years old, well, maybe two and a half do you think any one of those would be okay to remove that big use this protocol at your own risk? Or do you think no matter how much time passes that we should always put those disclaimers even on the makers compound? Savvy's uniswaps?
00:49:10.640 - 00:50:08.636, Speaker E: I don't like honestly because it's a barrier for me. So if I'm already there, probably I know the risk. From a UX perspective, UI perspective, if you think also other, let's say web two platforms, no one says so explicitly that you are, let's say, posing. I mean, I don't trust so much people that say it's all your liability responsibility or whatever if something goes wrong, it's up to you. I think that it's not working. It's working if you, let's say, beta staging environment or whatever, but otherwise it's like, okay, I get a car. I know that I can do an accident, but not every time that I turn on the car.
00:50:08.636 - 00:50:39.290, Speaker E: Hey, you know what? You can die. What? No, I want to drive the car because I like the car. I know that if I maybe at the very early stages, but in general, let's say from a UX perspective, I don't like a lot. I'm not a UX expert, absolutely not. But as a user, I don't like to see it.
00:50:41.020 - 00:51:06.850, Speaker C: I'll just also add on that I think if you keep the alerts on long standing battle tested projects, you run the risk of alert fatigue on users. And that's something that we should really be aiming to avoid as security experts is if you flash an alert on every page, then none of the alerts are meaningful. So keep them where they're absolutely needed and then remove them everywhere else.
00:51:09.300 - 00:51:48.300, Speaker B: That's a very good point. Okay, we have about five to eight minutes left, so I have two last questions from the audience, which I think we can compress into one. So are there any other tools or resources you recommend for security best practices? And the other one is advice and tips for the hackers that are going to be working on DeFi integrations at Hack Money for the next three weeks. So, free question for the four of you. You have any advice and tips or tools or resources.
00:51:51.860 - 00:52:38.700, Speaker F: I can chime in on the resources side, I think that all major security companies have been publishing lots of reading material and best practices. I think that if you read Reload page, if you read Consensus, if you read OpenSea billing, if you read others, probably they will have as well. There are lots of good practices published and security recommendations and well known attacks and so on. There are capture the flag challenges that will teach you about which are the best practices and probably how to you can start thinking on how to solve them. Paradigm and some did one recently. We have them vulnerable DeFi Ethernet. I think there are plenty of resources out there in the community.
00:52:38.700 - 00:53:06.920, Speaker F: The challenge is keeping them updated with the latest vulnerabilities and happen. So there are already other security researchers out in the space that are constantly publishing lists of Cncms with exploit analysis and so on that are really good resources to keep an eye on and to constantly being reading to be aware of what are the latest hacks that you should be preventing.
00:53:09.580 - 00:53:31.170, Speaker C: I think if there's one piece of advice I'd want to give to the people working on integrations, it would be please do not use the spot price. If an AMM has a price oracle, we've talked about this for over a year now and it's still happening and just please do not use the spot price. It's not a price, Oracle, that's all I have to say.
00:53:34.340 - 00:53:55.930, Speaker B: Because I've seen that so many times. Would it make sense for somebody to just create do not use the spotprice.com and put in some amount of information about why for everybody? Is there some way to go and read about why you don't want to do this?
00:53:56.460 - 00:54:48.292, Speaker E: Mariano, create it, I will support you like dice that's created no, I mean yes, for sure. Don't use them is a good approach. Probably we will, let's say just expose not directly spot prices but always top or other, let's say estimator of the prices. So it will be, let's say if you are skilled enough, you know how to get the spot price directly, that could be a good approach. So basically rising the barrier for doing that. But coming back to your previous question, I would like to see two practices starting to become more trendy in this industry. First one is shadowing.
00:54:48.292 - 00:55:56.430, Speaker E: I would like to see I mean if you see practical stuff and let's say practice a lot, you learn a lot. So in this sense I will shout out to everyone if you wanted to participate, let's say to some late stage war room or whatever, I would like that, contact me or anyway shout out on Twitter because you will learn a lot. And second role plays I would like to see experiments in testnet where we simulate past accident. So you not only read about the events, what generated them and how we solve them, but at the same time you try to repeat those stuff and experiment how to react. That's very important also for new teams. So simulate security incident. So those two things at least for me was really helpful for many things that I did in the past before, let's say dive deep in security.
00:55:56.430 - 00:56:45.288, Speaker E: I read on my own what was going happening with ethics. Just dive deep on what's going on immediately. And also pairing with someone else, maybe more expert than me. And at first Shadowing and then participating actively, that's something really. I mean, there are some risks, obviously. An evil party could, let's say, doing those stuff. But I think that if we use, let's say, for instance, a Kendall program where we have fellowship when we know the party okay, we don't know 100%, but we start those training programs with shadowing, with whatever that's really effective.
00:56:45.288 - 00:57:00.450, Speaker E: And honestly, I discussed it with some peers in Yun during the, let's say, Y Academy initiatives, so that's definitely something that you have to do.
00:57:02.040 - 00:57:05.140, Speaker B: Excellent. Morelian, any last tips?
00:57:08.120 - 00:57:25.770, Speaker D: Yeah, keep it simple. Just, like, don't add every single feature that you can think of. Write less solidity, and be safe out there, kids.
00:57:27.280 - 00:57:52.296, Speaker B: That's great advice. Awesome. Well, I think we're at the top of the hour, so we covered plenty. I want to thank morelion, Sam, Emiliano, and Tincho for this awesome panel. Thank you, the four of you. I was waiting for this ever since we did the first one. And, yeah, thank you so much, Twittglobal.
00:57:52.296 - 00:58:04.068, Speaker B: Congratulations for all the hackers. Hope you create some great projects out there. I'll be looking at them, and I don't know if Karthik is around.
00:58:04.234 - 00:58:45.072, Speaker A: Yeah, I just want to make sure that I also get to thank you, Mariano, for not only just moderating this chat, but also facilitating a super interesting conversation and a lot of good notes here at the end. Just advice for all the attendees for the hackathon. I think we'll make this like, an open call. Whoever buys, don't use botprice.com first. Now is in charge of making that website work. So for those of you who are listening, as Acres and you're still waiting on a project, there's an incredible challenge for a one day project for you that could be an easy submission that'll definitely help a lot more people over the course of the next year for any DeFi project.
00:58:45.072 - 00:59:25.656, Speaker A: So, Sam, thanks so much for suggesting that. And, yeah, I want to thank everybody here for giving us your time today, and we'll see you all over the next few weeks and show you what comes out of that thousand person hackathon with DeFi. So thanks, everybody. And with that, I just got to say one last thing, and that is happy hacking. We'll we'll follow up with everybody on Discord from here on, and you'll be able to track the rest of the event and the rest of the summits and everything else on DeFi. Eatlobal co. So hope you have a great rest of your day, and I will see some of you at the team formation session later tonight.
00:59:25.656 - 00:59:26.170, Speaker A: Thanks, everybody.
