00:00:25.980 - 00:00:40.410, Speaker A: Hi and welcome everyone. This is the Ave Devs 101 workshop and joining us today is Emilio. Yeah. With that I will hand it over to him to introduce himself and kick the session off.
00:00:41.580 - 00:01:34.876, Speaker B: Okay, perfect. Thank you, Emily. Thanks. East Global to have us today. So I am Emilio Frangella, the lead smart contract developer of Ave and essentially I am one of the guys that actually designed and built the Ave protocol, which it has been quite an adventure until now. In the last couple of years, the Ave protocol managed to become one of the most relevant DeFi protocols with TBL and assets under management that rival with other actually full networks like L ones. So we are pretty happy of how everything has been working so far and the protocol has been progressively being owned by the community.
00:01:34.876 - 00:02:33.352, Speaker B: So right now the community is also participating, also building the protocol. We have an Ave grants program that actually is allocating funds to projects that contribute to the Abbe protocol. So everything is going really well and hopefully this will be a nice introduction for you guys to start using the Abe protocol, start interacting with it and understand how it works and what you can actually build with it. So let's start, I guess everyone knows what the Ave protocol is, but I will just give a brief introduction. So the Ave protocol is what we call a liquidity protocol. So it's a set of smart contracts that is actually able to interact with users. Users are usually classified in depositors and borrowers.
00:02:33.352 - 00:03:34.240, Speaker B: The depositors actually provide liquidity in exchange for earning passive interest. And the borrowers are usually also depositors that leverage their deposits as collateral to borrow a different, usually different class of assets. So a borrower is first of all also depositor. This means that whenever you replace collateral, you deposit collateral in the system to borrow a different asset. Then your collateral is also earning interest in the meantime because it's being borrowed by someone else. And so you are first of all a depositor and then all your deposits acquire a certain depending on the category of assets, they acquire a certain borrowing power. And then with this borrowing power, you are allowed to borrow a different category of assets, for example stable coins.
00:03:34.240 - 00:04:34.390, Speaker B: And of course your deposit will remain locked in the other protocol until you repay your debt. And repaying your debt means repaying the principal of your loan plus the interest that has been accumulated over time. Repayments don't have any particular time schedule, repayments don't have a fixed interest. So the interest is algorithmically calculated on chain. So it depends on how much liquidity there is available on the protocol and varies all the time depending on who is deposit what and who is withdrawing what. So as I mentioned, there is no repayment schedule. Therefore the loan can last 1 second or the loan can last 100 years as long as your collateral covers the debt plus the interest.
00:04:34.390 - 00:05:58.928, Speaker B: Okay, so main actors will more or less already described like their usual behavior. Then other actors interacting with the protocol are the price feeds, that is SHAILING. Actually the other protocol uses SHAILING to interact with this critical part of the ecosystem which is price discovery because of course to calculate borrowing power and to allow repayment and liquidations it's a fresh and frequently updated price feed is needed which is currently provided by chainlink. But the other protocol can potentially support other classes of price feeds. And then of course liquidators. Liquidators are another actor that usually take care of buying, repaying the debt on behalf of borrowers and getting part of the collateral in exchange. When the price of the collateral drops too much, usually the liquidators get an equivalent amount of the debt in collateral plus a bonus that will essentially guarantee that liquidators are actually able to sell the collateral and they actually have an incentive to do it.
00:05:58.928 - 00:07:05.360, Speaker B: Liquidators are of course critical to keep the health of the protocol in check. And then of course we have a variety of integrated applications that use the protocol in different ways. They provide aggregated yel to their users, they provide a different user interface to access the other protocol. Then we have smart wallets, we have leveraged systems like for example DPI is the DeFi Pools index building leverage tokenized positions on top of Ave. And we will see at the end like there are over 100 different protocols and application built applications built on top of the Ave protocol. As I mentioned before, the protocol grew pretty quickly. The slide is actually reporting 15 billion but the slide is slightly outdated because the current TVL is actually 25 billion.
00:07:05.360 - 00:08:22.792, Speaker B: So it's like growing really fast. The other protocol has also the ability to host a variety of markets on different networks or with different assets capabilities. Right now there are four markets available. The V one which is actually the settle smart contracts that were part of the Ave protocol version one which is now obsolete and people is slowly migrating to the new protocol iteration. Then we have Ave Two which is the current protocol iteration and is like the market that hosts the majority of the TBL around twelve billions. Then there is an AML market which was an experimental market where users are actually able to use automated market makers LP shares as a collateral to borrow stable coins. And then we have the another market on Polygon which essentially guarantees the same features of Ave V two on Ethereum but with the advantage of very low transaction fees on Polygon.
00:08:22.792 - 00:10:09.644, Speaker B: So of course right now the market with the highest Tblsb two but the Ave market on Polygon is actually the market which has highest number of daily users around 4000 users a day. So again a recap of the main protocol features like the deposits, the borrow, then the credit delegation, the flash loans, and then there is also short introduction to the governance if you guys want to build something to integrate with the other governance. So the deposit deposit is usually the first interaction that a new user performs with the other protocol which means that the user calls a specific function that is called deposit and executes essentially this function. The user of course like in this example is explained here. If you want for example to deposit 100 die you will of course need to have 100 die in your wallet and have approved the other protocol to take 100 die out of your wallet. When you do the deposit you kind of receive a receipt that is called in tokens that is called Adai. Adai is essentially a representation of the die that you deposit the other protocol and as the peculiarity compared to other liquidity protocols that is one to one with underlying so you deposit 100 die, you receive 100 Adai and the amount of adai that is essentially the interest accumulating over time increases over time in your wallet directly.
00:10:09.644 - 00:11:45.250, Speaker B: So by looking at your wallet, you can already see that the interest is actually growing and the accumulation happens every second in a complete algorithmic way. So here there is an example of solidity example of interacting with the Dai and the other protocol. You can see the address of the die token, the amount that you want to deposit. $100 multiplied one to the power multiplied by the ten to the power 18. That is the number of decimals that I has on the on behalf of referral code are two other parameters. Referral code like the protocol has the potential to have referral program so for people building on top like the governance can decide to allocate for example part of their funds to promote the usage by associating referral code with applications that provide usage and then on behalf of it is used because you can eventually call the deposit on behalf of another address. So for example imagine that you have 100 die on address x but you want to receive your a die on address epsilon then you can actually deposit with call the deposit function with address x but put on behalf of address epsilon and then you will automatically receive your a tokens on address epsilon instead of address x.
00:11:45.250 - 00:13:01.316, Speaker B: The withdrawal is essentially an opposite interaction compared to the deposit, and it allows you to redeem a tokens for the underlying. So whether or not you deposited or you received a tokens that are, of course, transferable, like Adai in your wallet, because someone else transferred to you, then you can always redeem them for the underlying by calling the withdrawal function. How can I say there are some things to keep into account when doing the withdrawal especially like sometimes the withdrawal can fail if there is not enough liquidity available. This is usually an edge case that means that there is high demand of the market for borrowing. But I think we can further discuss about this later. Then we have the borrow interaction. As I was mentioning before, if you have deposited assets, you can essentially borrow any other assets that you might need and you can also borrow in two different interest rates mode, which is variable or stable.
00:13:01.316 - 00:14:14.844, Speaker B: Both are algorithmically decided, but the variable changes per second while the stable or per block to be more precise. And while the stable rate is usually stable in the sense that doesn't change so often, can only change depending on the particular states of the protocol. I think we can also discuss about this a bit later. Of course, the total collateral and the total borrowing power is the sum of the borrowing power of each independent asset that you deposit in the protocol. So imagine that you deposit is rapid, BTC and uni. Then the protocol will automatically and on chain aggregate the total equivalent amount of the assets you deposited in east and from that total equivalent amount calculate what is your average borrowing power by doing the average of proportion, the weighted average of all the assets that you deposit. As I mentioned before, you can repay whenever you want using the same asset you borrowed or you can even like there are some functionalities that were built on top by ParaFi.
00:14:14.844 - 00:15:31.096, Speaker B: For example, you can essentially use your deposits to actually cover the deposition by using ParaFi to sell your collateral in one transaction. Yeah, when you open a borrow position. So you deposited some collateral, you decide to borrow stable coins and then of course, as we all know, the price of the collateral fluctuates over time depending on market conditions. Right? So how do we determine if the collateral is enough to actually cover the debt at all times? There is this indicator that's called L factor. When that factor is less than one, essentially the position will be liquidated, which means that liquidator will actually invoke a specific function on the Abbe protocol to repay the debt in your behalf and receive partner of your collateral plus bonus. Of course, if you get liquidated, you lose the bonus. So people that is borrowing is usually very careful about keeping the health factor as high as possible.
00:15:31.096 - 00:16:43.816, Speaker B: So it's a matter of evaluating the risk reward of keeping your health factor low enough to maximize your borrowing potential, but also high enough to avoid liquidation risk if the market drops. Something happened here. Okay, so if we keep using the example that we mentioned before, imagine that we have deposited some a tokens like using exactly the same function and exactly the same strategy that we mentioned before. We locked for example, so we have east and uni deposited in the protocol. We want to borrow 100 die. What happens here is that we call essentially we still reference the Die address. We have an amount, we have an interest rate mode which will be one for stable debt and two for variable debt.
00:16:43.816 - 00:18:07.928, Speaker B: Referral code is exactly the same as before and the same meaning on behalf of is the same meaning as before because as I mentioned before, we have credit delegation on the other protocol. So you can either borrow for yourself or you can allow someone else to borrow on your behalf, which is called the credit delegation. But it's something that we'll discuss later. There are some slides specifically for that. So, yeah, you can borrow by just calling the borrow function, specifying the amount of the asset you want to borrow, interest rate mode the referral code on behalf of if the protocol does certain preflight checks and if everything works as expected if you are within your borrowing power, if your assets are eligible to be considered as collateral because not all the assets can be used as collateral, then you are allowed, essentially to borrow the amount that you are specifying and you will receive the amount automatically in your wallet and you will start accumulating debt interest immediately after. Sorry, okay, yeah. Of course there is also a swap function.
00:18:07.928 - 00:19:35.584, Speaker B: So you can swap between the rate loans, variable rate loans and stable rate loans. And then you can decide whether at any point in time whether, for example, if you believe your interest rate mode is too your debt is too high, then you can decide, for example, to swap to variable or vice versa. If the stable rate drops to a point where you consider it competitive, then you can essentially swap automatically with only one transaction and executing this function to the other rate mode. The repay, of course, is the action of executing a payback of your loan. So again, it's pretty straightforward. As before, of course, if you want to repay 100 die, you have to have 100 die in your wallet and you have to have approved 100 die to the protocol to take 100 die out of your wallet. And then you can call the repay function, specifying again the asset amount, the interest rate mode on behalf of again, because you can also repay on behalf of other addresses.
00:19:35.584 - 00:20:59.932, Speaker B: Imagine for example, that you borrowed with address X, but you have your die on address epsilon. Then you can decide to use address epsilon to repay your debt on address X. Okay, then credit delegation. Essentially, as I mentioned before, when you deposit some collaterals, you also have a certain borrowing power, right? With credit delegation you can decide whether or not delegate your borrowing power to third parties. What that means is that you can decide in a similar way mechanism of the approval function for ERC 20, you can decide to approve another wallet that potentially has no collateral deposited on ave to borrow on your behalf. What that means is that when you borrow on behalf, you will receive the principal that has been borrowed and the address on which behalf you are borrowing will essentially be accounted for the debt. So this is what the credit delegation is essentially allowing third parties to draw liquidity from the protocol while taking ownership of the debt.
00:20:59.932 - 00:22:00.388, Speaker B: Why I would do that multiple things. For example, imagine for example, I want to keep the wallet where I keep the collateral and I keep my position off chain, but I want to still be air gapped for example. So in a cold wallet but I want to, I don't know, keep using the protocol while using a different wallet. That is a hot wallet. I want the freedom to borrow and repay at any time I want. So for example, I can just prepare my position on the wallet delegate to the wallet, the hot wallet that I actually want to use and then air gap the other wallet so it's never connected. The internet is effectively a cold wallet and use the hot wallet which has received delegation to draw credit from the cold wallet and repay at any time.
00:22:00.388 - 00:22:59.952, Speaker B: So this is just one of the things that this credit delegation allows. But you can also create a delegation system, for example, where you can decide to delegate credit to your friends or to another third party where you got a legal agreement with off chain. So there are multiple things that can actually be built on top of that how the create delegation works. Okay, here there are some schemes why it's not needed. I decide on which particular asset I want to give delegation to. A certain wallet I didn't mention before, but maybe I should have mentioned that the debt is also tokenized. So when a person the debt of an address is not kept as internal accounting in smart contract but it's tokenized.
00:22:59.952 - 00:24:31.312, Speaker B: So if you have a collateral and you draw 100 die of debt you're receiving your wallet the 100 die but you also receive 100 debt die. This token that you receive debt die, you cannot move it out of your wallet, you cannot do anything with it. The only thing that you can do is burn it through repayment. So that particular token actually keeps track of your debt position on the other protocol. So what happens under the hood when I delegate to someone is actually that the person, the delegate that is drawing credit from the protocol receives the underlying so if the delegate is borrowing die, receives the dai and the delegator actually receives the debt token and attracts the depth position. So to be able to delegate credit to another address, I need first to receive the stable debt token address and the variable token address from the addresses, from the addresses provider which essentially gives the token addresses. Then of course I can store the address of the borrower which is the address of the delegate that will receive the credit, the amount that I want to delegate and then I call either on variable or stable debt token.
00:24:31.312 - 00:26:41.274, Speaker B: This function approved delegation that essentially tells okay this guy here the borrower can borrow using my borrowing power up to X which is amount in way. So when approval is given once approval is given then the delegate can actually go on the protocol el core the borrow function on behalf of which is the Delegator address that called approved delegation before and the delegate will actually able which is message sender of course will actually able to draw credit from the protocol even if the delegate does not have any collateral then anyone can of course as I mentioned before can repay the Delegator debt including of course the delegate. So if the delegate wants to repay the debt on chain then he can just call the repay function by Delegating to delegate or address. Okay then flash loans let me check quickly how much time I have. Okay so the flash loans are they are now very well known and very much ingrained in the DeFi mechanics but it's something that actually took traction only recently and it essentially leverages the capability of smart contract of the atomicity of transactions. Right? So it's well known that when you execute a transaction, the transaction is atomic. So it's essentially everything that happens during the transaction will be completely reversed like the transaction never happened if the transaction is not successful using this atomicity property of the transaction.
00:26:41.274 - 00:27:47.780, Speaker B: Essentially we came up with this idea of flash loans where anyone can draw liquidity out of the ave protocol without having any collateral with the condition that the debt is repaid at the end of the SIM transaction. Of course, the duration of this particular loan is one transaction which means that as long as the transaction is in progress, you can do whatever you want. But once the transaction is completed, the funds needs to be returned otherwise the transaction will fail and everything that happened would be reversed. So it cannot be used by EOA, it cannot be used off chain, it can only be used by smart contracts. So of course it's quite a wide topic. There is a lot to talk about so we have some guides. Afterwards I will give you reference to all the developers guidelines and to all the documentation that we have.
00:27:47.780 - 00:28:51.938, Speaker B: This one is specifically for flash loans and it essentially showcases how to use the flash loans. What are the use case and what you can build on top of it? Yeah, here are a bit of, like, short recap of potential use case. You can use flash loans to migrate liquidity between protocols. You can use flash loans for arbitrage, you can use flash loans for liquidations. You can use your flash loans to swap one a token to another a token without even leaving the protocol. So imagine, for example, you have Adai and you decide that you want to buy east and you want the east automatically deposited in the other protocol. Then you can use flash loan to do a flash loan of Dai, sell the die for ETH on decks, for example, uniswap.
00:28:51.938 - 00:29:53.574, Speaker B: Then deposit the Aether and then use the original die that were deposited withdrawing them and replying the flash loan. And you end up with a east automatically in the other protocol. And there are a lot of different stuff. Like another is repaying with the debt, using your collateral is another thing. For example, if you are leveraging and you have used your collateral to actually leverage more of your collateral, then you can use a flash loan to sell your collateral on DEXs and then use the amount sold to repay your debt on Ave and then to repay the flash loan. And there are multiple many more use case that I think we can discuss at the end when we also list the Ave integrators. So here I don't know how much time I have.
00:29:53.574 - 00:30:00.400, Speaker B: Probably maybe I should stop here. Emily, what do you think?
00:30:01.010 - 00:30:08.030, Speaker A: Yeah, I'm sure a couple minutes wouldn't hurt. We might need to just channel some of these questions into the discord.
00:30:08.690 - 00:31:10.046, Speaker B: Okay. Okay, so I will try to compress all of this in a couple of minutes and then if we can answer the questions afterwards. Okay, so here it's a small breakdown of the examples that you will actually guys find in the documentation. So everything is in documentation. Essentially flash loans here is in the code here that you see describes how to call the flash loan function on the lending pool contract. So preparing all the data that needs to be passed to the flash loan function and then the proper flash loan execution requires the usage of a smart contract that inherits a certain interface. This interface exposes this function execute operation and this actual action is called by the lending pool function once the funds are transferred.
00:31:10.046 - 00:32:01.198, Speaker B: So for example, if you need to do an arbitrage, then you can do the arbitrage within this execute operation function. And at the end of this function, the funds will be automatically drawn from a contract that implements this execute operation. And then the governance also here there is a lot to cover, but like I can point you out to the documentation where everything is explained. Essentially, Ave has a pretty organic, pretty complex governance system. It's also very powerful. So the governance is completely open source and is meant to help. Even other decentralized protocols that they want to use are very flexible, very powerful governance.
00:32:01.198 - 00:33:12.534, Speaker B: So anybody can fork. Of course, if the code is completely fit to use, anybody can fork it. Here is the architecture of the Governance which is also described in the documentation that I will refer afterwards. And then here is the processes used within the Abe community to submit Arc and IIPS and then propose voting on chain and queen execution. I think it's going to be a bit long to discuss all of this. So just a few use cases of the Ave protocol curve DeFi saver furocombo wire finance, avegochi and way a lot of more integrations wallet gnosis monolith jelly swaps, synthetics one inch aggregators, idle finance. There is a lot to unravel the development environment.
00:33:12.534 - 00:33:45.560, Speaker B: Everything is in the public GitHub and my timer is expired and yeah, average protocol JS for data formatting. There is also a library on the same repo which essentially exposes all the function that you might want to access of the protocol off chain. So using for example, eaters or web3 resources and that's it. Thank you, everyone. Emily?
00:33:47.820 - 00:34:29.320, Speaker A: Yes. Great. Thank you so much. You squeezed quite a lot of information into about a 35 minutes session. Yeah, there's a couple of questions in the chat. We could take a minute to take maybe like two questions and then the rest I'm going to save and pull over to the sponsor discord channel and we'll ping you there where you can answer them. And everyone on this call, please have a look in that channel for responses from Emilia.
00:34:31.580 - 00:34:44.760, Speaker B: Okay, sounds great. Yeah, I'm going through quickly through the answers. I think I can handle perfect. Afterwards.
00:34:45.060 - 00:34:54.590, Speaker A: Okay, great. Okay, nice. Thanks so much, Milio. And thank you everyone for joining this session. We will see you in discord. Great.
