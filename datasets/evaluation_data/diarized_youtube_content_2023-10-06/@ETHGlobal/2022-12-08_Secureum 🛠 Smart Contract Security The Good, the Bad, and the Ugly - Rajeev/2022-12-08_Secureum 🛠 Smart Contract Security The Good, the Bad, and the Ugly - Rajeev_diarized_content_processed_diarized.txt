00:00:06.410 - 00:00:45.420, Speaker A: Like to proceed. So, as one of the first speakers, I would like to welcome you all to ETH, India. And I'm Rajiv, I'm a security researcher and founder of Securium. I'll be talking more about that later. But this talk, it's definitely not a workshop. It it's a talk. 30 minutes is not enough to dig into how to do smart contracts securely, but we'll be talking a lot well, I'll be talking a lot about the high level aspects, trying to impress upon you the status of smart contract security today.
00:00:45.420 - 00:01:56.260, Speaker A: What is the status, is it enough? Why isn't it enough? What is being done? What are the challenges, what are the opportunities? And so on. So hopefully it's going to be very relevant to you all as you hack away your projects. You need to pay attention to this so that your projects don't get hacked later on, right? And just a quick note about the title. I don't know how many here are old enough to be fans of the western genre of movies, but my dad really likes one of these Wild West classics, the Good, Bad and the Ugly with Clint East Stewart and several other characters. So that's what we are going to I'm going to talk about that. Well, taking inspiration from that, but really flipping it and starting with the more skeptical pessimistic outlook as to what is wrong, what the ugly side of security, the state of security today, then get into all the things that are being done badly in smart contract security. And then finally we'll end with an optimistic tone of the good parts of why we are here and all the things that we can look up to.
00:01:56.260 - 00:03:19.740, Speaker A: So if you Google for a stock image of security and Swiss cheese, so Swiss cheese is one of the favorites of all the security researchers. And it looks like this, it's one of the cheeses, if you have eaten it, has lot of holes. And that's how the security folks see all the platforms, right? So there are several layers to the platform. There's typically a front end, a middleware, a back end, and all of them have bugs, vulnerabilities, some small, some big, some of them are patched and many are not. So when you look at the vulnerabilities, right, the hazards, as this document says, so you have lot of vulnerabilities that are being exploited, that are attempted to being exploited. And if you notice, there are a few of them that get prevented because of all the security measures at different layers, and then some of them pass through. So the arrow that passes through is the loss that is not prevented, right? And in the case of the crypto wild west are we still on? Can you guys hear me? Okay? So in the case of the crypto wild west, this is amplified I would say like ten x, if not more.
00:03:19.740 - 00:04:25.540, Speaker A: So there are lot more layers, lot more holes, lot more arrows being shot at the target and many of them going through, right? And we have very few plugs that actually prevent these hacks today. So security is all about I mean, it's all really about assets, right? Security really looks at three aspects. We have assets that are protected by the good actors, and then you have the bad actors who are trying to get those assets without the right authentication. And then we have a lot of actions that make these two things possible, right? This is sort of a way of life, but it gets amplified many, many times over in the crypto Wild West. So you have the good actors, but wherever there are a lot of assets, you obviously attract the bad actors who go after those assets. And many of them actually succeed. And you have a lot of these wanted posters that we have to deal with later on.
00:04:25.540 - 00:05:28.378, Speaker A: So how bad is it, right? How ugly is the situation? Here's a dashboard from DeFi llama, which you may have heard of. So this was a statistic that was collated by one researcher over there and the dashboard was created. And we'll also look at the framework later on, but this is what it is. This is the state. And if you can't notice the numbers, what this is showing is the top hundred most severe exploits in terms of the funds lost only in the last two years, right? And if you look at the Y axis, I mean, that tells a story. So this is we are not looking at thousands of dollars, we are looking at hundreds of millions of dollars, right? So every line that you see in that axis is 100 mil, 200 and so on. And then the story really starts all the way back to the Dow exploit.
00:05:28.378 - 00:06:14.350, Speaker A: So that's the first bar that you see. That happened in November of 2016. And then there was, I think the one in 2017 was the Parity hack, and then all the others are really in the last two years, right? So we'll dig deeper. But this is the state of security today, or insecurity today. And if you look at the total value hacked, it's a nontrivial number, right? It's close to $6 billion. And most of it and we'll talk more about bridges. So a lot of it was lost because of bridges or because bridges got exploited, but close to $5 billion got lost in DFI across the various protocols.
00:06:14.350 - 00:07:11.670, Speaker A: And this is all in smart contracts, right? This discounts any of the centralized exchanges, all the mess that we all have been reading about in the last several months. So this is unacceptable, right? If we want to be a layer that is a financial that settles financial transactions, where we want really to trust in code, it has to be. Everything else should be trustless or trust minimized. And we want to trust in code, then the code cannot be this insecure because if this is a state of the art, then we cannot expect people, retail institutions, to really trust their money and put into these contracts, right, over time. So this has to change. So this is really the ugly part. Now let's sort of dig deeper into a few of these statistics.
00:07:11.670 - 00:08:12.730, Speaker A: And this particular analysis created a framework for the different types of hacks to categorize the different types of hacks. I haven't analyzed if the data is complete or if it is accurate, but I think it's a good running example to hopefully make the point over to everyone here. But if you look at the frequency of hacks by categories, right? So the analyst decided that there are four categories. We have infrastructure, protocol, ecosystem, and smart contracts. But the way to think about it is infrastructure is really everything that is not related to smart contracts. So anything in the web two, space, anything that is off chain, anything to do with custody of private keys, all that falls in that sector, right, in that bucket. And that is nontrivial, right? So that is 23% in this analysis.
00:08:12.730 - 00:09:41.394, Speaker A: So the story here, the moral here, is that, yes, smart contract and all the other three sectors add up to 77%, right? So smart contract security is way, way more important. But you cannot ignore the infrastructure, the web two, the off chain parts, right? So that's the takeaway here. And maybe there's a good point to talk about some of the categories, right? So protocol, according to the analysts, the protocol category really is all about the smart contract logic that's been implemented within your protocol, right? So as you go and hack away your projects, whatever the application is, it could be a Dex, it could be anything. It could be an NFT trading platform, anything, right? So the logic that you write in solidity or anything else, that is the protocol logic, right? And there could be bugs, there could be vulnerabilities in that logic. Those could be exploited to really get all the tokens in your protocol ecosystem, according to this analyst, is anything where your particular application works with other applications, right? So think of Flash loans and we'll get more into that. Anything external to your protocol, but that is still on chain oracles, other protocols, other dependencies, you have all that comes into the ecosystem category. And finally, the smart contract is actually the smart contract language or platform category.
00:09:41.394 - 00:10:51.466, Speaker A: That is really all the hacks enabled by virtue of the EVM or the language itself in which the smart contracts have been coded up, right? So let's dig deeper before that. So if you look at the frequency over time, there is no sort of key takeaway here, except that these are happening every month. And note that these were the top hundred exploits, right? The minimum was, I think, like three or $5 million exploited. So there's a long tail of exploits that have not been considered in this analysis, right, and day in and day out. I mean, if you're active on Twitter just this morning, I think there was an incident that was bubbling with one of the protocols on the binance chain, where I think a deployer key got stolen and then the attacker actually deployed, upgraded the contract, which had sort of a different mint function that could be rugged. And the attacker minted, I think billions of those tokens. And that was still being analyzed.
00:10:51.466 - 00:11:07.902, Speaker A: Right, so there are all these things happening on I think the takeaway here is that these hacks are happening every day, every week, if not every day, right. Something is growing and the funds stolen are nontrivial.
00:11:07.966 - 00:11:08.290, Speaker B: Right.
00:11:08.360 - 00:11:47.470, Speaker A: So look at the Y axis, it's 200, 400, $600 million. And the numbers have been compressed to report on a monthly basis. So if you look at some of the longest polls here, right, the longest bars, the longest columns here, there have been hacks. I think the largest amount was north of $600 million. Right. So those were, most of them in the 600, 500 range were all bridge related attacks just because they hold so many assets. But those are the ones that you see here in red and yellow.
00:11:47.470 - 00:12:25.126, Speaker A: So this categorizes some of that into the different categories. And the hacks, again, the bridges stand out. So if you are interacting with a bridge, if you are building a bridge, if you're building a protocol that works with bridges, something to pay a lot of attention to. Now let's go into the smart contract language, that category. Right. So the two things that I would like to call out here are the reentrancy and the delegate call exploits. So the first major exploit on Ethereum, which is well known, well publicized, is the Dow exploit.
00:12:25.126 - 00:13:12.982, Speaker A: Right. This was in 2016 of November. It really opened our eyes to a reenter and exploit. And since then you'll be surprised to see how often the reentermcy exploits, I mean the vulnerabilities exist in different code bases and they're exploited on a regular basis. And the second one would be the delegate call exploit. I mean, delegate call is something that you need to wrap, we need to wrap our heads around because this is a functionality that if you have coded it in any of the other languages, you wouldn't have really paid attention to. But in smart contact languages when you do a delegate call, there's a lot of things that happens in the background that if you are not paying attention to it could be a recipe for disaster.
00:13:12.982 - 00:13:33.278, Speaker A: Right. So those are the big takeaways here. And when it comes to the ecosystem hacks, the keyword, like I said earlier, is flash loans. And one of the big categories there is the Oracle price manipulation attack. Right. So just google for it. There are fantastic articles written about it.
00:13:33.278 - 00:14:22.362, Speaker A: So this is extremely common. Right? So this is like 50% of this category is all price oracle manipulation hacks that continue to happen. The second category is the Flash Loan governance attacks. So if you have looked at any of the token based governance models, then Flash loan introduces a new vector where somebody can flash loan a whole bunch of tokens that are used for governance and they can make the governance go one way or the other, right? So all these pretty graphs, pie charts are there in the source. I didn't create them. I think it's a very good way to sort of convey the point. So do feel free to go and take a look at it later then, if you look at the protocol logic.
00:14:22.362 - 00:15:49.270, Speaker A: So if you recall, I mean, this was one of the biggest sectors, right, of the hacks. So in this case, there are obviously many, many components to this because that is the nature of application logic. Depending on what your application is doing, you could have new ways, attackers could have new ways to exploit it, right? So there are many categories here, but the ones that stand out are access control, exploit. So access control, if you know, is something that is fundamental to security. If you don't have the right access controls, some unauthorized, in this case, an attacker can mint, can do something else with your contracts and exploit the funds, right? And the other one that is really common is the math mistakes. So if you're looking at anything in the space, unless it's a very simple contract, there is going to be a lot of math, especially in the DeFi space. You have numerous protocols that are trying to optimize every aspect of DeFi lending, derivatives, all those aspects, right? So those again are places where developers make mistakes and these are not very easy to spot, right? Because these are extremely you need to understand the protocol logic, you need to understand the math.
00:15:49.270 - 00:17:08.550, Speaker A: There are certain corner cases in Solidity or the math library that you're using. You need to be aware of all of that. This is an interesting one, right? So if you look at the hacks by chain, the wrong takeaway from this is to say that, oh, the biggest chains, right, the biggest sectors here are the most insecure. Now, the reason why you see Ethereum or BSc, or the other L ones, or any of the other L two S, right? So these are the places where there is a lot of innovation happening, right? There are a lot of protocols being deployed, either originals or in some cases clones. And in the process of cloning, you may have copy paste bugs as well. So this is where there's a lot of activity, this is where you have a lot of assets, where a lot of actors, lot of actions are persisting over time. And so it's natural for the security or for the attackers to go after places, chains where there is a lot of activity happening or where there are a lot of assets logged because that is how they get to exploit it.
00:17:08.550 - 00:17:41.214, Speaker A: Right. So that's sort of the takeaway. All right, so we talked about sort of the ugly and the bad pictures. Yeah. Can we get to the questions at the I'll get to it. At the end, I think there's a different setup I need to use for Q A, but I'll get to it. So if you look at so if you're not convinced that the state of affairs is bad or ugly right, then please reach out to me after the talk.
00:17:41.214 - 00:18:35.170, Speaker A: I would like to chat with you, but this is not the state where we want to be and definitely not the state where we want to head towards. Right. And the reason for why this may be the case. So I have sort of listed ten aspects of web three, which makes thinking about security in this space very different from web two. Right? So let's sort of dig into each of them and see why those matter when it comes to thinking about the security of the space, keys and tokens, I mean, this is something that is fundamental to web three. I'm sure you have heard of not your keys, not your tokens, the way we think about security in this space, right? Unlike the web two space, where you think about passwords, here we are looking at keys and tokens. Once you sign a transaction, once it's gone right, it's not reversible.
00:18:35.170 - 00:18:46.098, Speaker A: Right? And the way, I mean, there are challenges not just with custody of keys, there are challenges with how it is used, with every aspect of it.
00:18:46.184 - 00:18:46.434, Speaker B: Right?
00:18:46.472 - 00:19:20.302, Speaker A: And tokens, there's a whole bunch of them. And that itself, over the last five or six years, have led to unique exploits. If you've heard of, ERC, 20, you know the exploits there ERC 721, ERC seven. Seven. So each of them comes with its own flavor of attack surface, right? So that is one that makes this very different. But the thing that is fundamentally different in this space when it comes to thinking about security is the threat model. So in security, you always think about two things trust model and threat model.
00:19:20.302 - 00:19:57.498, Speaker A: Who do you trust? Who are your threats? Blockchains are all about the Byzantine threat model. So look it up. This is a threat model where anything, anywhere, any place can be arbitrarily malicious. There's really no notion of a trusted insider and everyone else like how we do in the web two space. Anyone, right? It could be the miners, the validators, the developers could rug, the users could abuse the system over time. It's really all about the mechanism design. So this is something that has to be critical, I mean, that has to be front right and center.
00:19:57.498 - 00:20:41.174, Speaker A: When you think about security in this space and obviously unstoppable and immutable, I mean, this is where we are headed to, definitely with the layer ones smart contracts. I think that's the ultimate goal. But then you do have the possible features, emergency recovery, upgradability and other things where a lot of things can go wrong. But this aspect, I mean, imagine if your contract that you deploy, right, is unstoppable and immutable. Think about what if there are bugs in it? Can you fix it? Can you stop it? Can you apply a patch? Right? All these are very different. I mean, the way you need to approach it in this space is very different. We are less in this space, ethereum space.
00:20:41.174 - 00:21:14.610, Speaker A: We are less than ten years right into this. You saw the history of Ethereum as you walked along the hall, right? So like 2013, 2014 and we are less than ten years, right? So we have a new architecture. It's EVM based, 256 bit, stack based. We have new languages, mostly solidity. We have wiper, a bunch of them coming up. We have many tool chains. I don't know what you use, hard Hat, Brownie, but now there's foundry, whole bunch of them, right? So all these things are still very early and they themselves may have bugs that could lead to security exploits.
00:21:14.610 - 00:22:10.600, Speaker A: The other interesting aspect is that this space, the ethos in this space is open source and transparent by default, right? With smart contracts, you deploy them, the expectation is that the source is going to be verified, it's going to be open and it's going to be transparent, right? So there is no more walled gardens where you can hide behind security by obscurity, right? Everything is transparent to anyone, right? To your users, to the abusers, to the attackers. So it's not just in the technical layers, but it's also in the social and governance layers where security is different. Pseudonymous, teams, reputation has to be thought out in a very different way. Dow governance has to be thought out in a very different way. The way that you can roll out security patches on a protocol that is governed by a Dow. There's going to be a window compound, for example. Had an interesting incident with that.
00:22:10.600 - 00:23:18.602, Speaker A: Then composability by design this again, your protocol is not going to operate in a silo, right? It's going to work with maybe an Oracle feed, maybe other protocols, maybe the off chain stuff. Lot of things happening. So the attack surface here, when you think of composability and this composability is changing over time, this makes the attack surface grow exponentially. What your constants are, what your constraints are, what configurations are, all these things keep changing. So it's really a moving goalpost that has to be paid attention to. And all this is happening in compressed time scales. And what I mean by that is if you've been in crypto, you know that one day or one week in crypto is like ten for the rest of the world, right? There's so many things that happen in crypto that it's really hard to keep track of, but then there are all these new things that are happening.
00:23:18.602 - 00:23:41.698, Speaker A: So how does that affect security? Security becomes an afterthought, right? So there are a lot of shortcuts that are taken, there are a lot of corners that are cut and think of your development, right? So as you finish your hackathon, how much time have you spent in thinking about the design? Do you have a documentation for it? Have you written a spec for it?
00:23:41.784 - 00:23:42.034, Speaker B: Right?
00:23:42.072 - 00:24:55.290, Speaker A: What are the invariants, what are the properties? Right? All these things sort of get moved to the side or get pushed under the rug and then projects get deployed, which is a significant factor in them getting exploited, right? So this is not right. And this leads to this. If you've heard of the test in prod meme, this is what causes where the actual test is happening in production. So you see failures, you see exploits that are undesirable. And finally, I've talked to many developers in this space and when we say security, the first thing that comes up is audit. So security has, I mean, audits have become synonymous with security in this space, which is not desirable, right? I mean, audit being treated as a silver bullet is I mean, if you understand security, that is not the place to be, right? I mean, audits are critical today, but you can't just put it over the fence, throw it over the wall and say, hey, you know what, I got an audit. Great, everything is going to be good.
00:24:55.290 - 00:26:12.610, Speaker A: I mean, majority of the hacks that have happened, right, if you look at the details, a lot of them would have got audited, right? So things would have got missed things, I mean, a lot of things that could have gone wrong in the process. So these, I think ten sort of vectors really make, I mean, should force us to think about security in this space with smart contracts in a very different way. So it's not all bad. Let's talk about the good, right? So there are again in security, this is something that's very well known, right? In security you think about three stages, things that you can prevent, things that get through because you couldn't prevent, so you had to detect them so that you can remediate and respond. So today a lot of the focus in security is happening in the prevention space, which is good, right? I mean, there are still big gaps. So audits, for example, is something that I mentioned, there is a lot of emphasis on audits, lot of reliance on audits that needs to be tempered with an understanding of what an audit is and what it buys you. It is not a guarantee of zero bugs by any measure.
00:26:12.610 - 00:27:01.614, Speaker A: So there are multiple teams innovating in the audit space. So audit contests are something that is interesting. So you may have seen Code, arena and Sherlock where you have audit contests where the audits are being crowdsourced, right? So that is an interesting sort of innovation that is happening in this space. Then there are a bunch of tools and methodologies that are being innovated here. You have Slither Echidna from trailer bets, you have Scribble and others from consensus, you have formal verification tools from Mean. This is a space where formal verification actually becomes much more tractable doable and very attractive for various reasons. So I won't get into that, but Sertora has a talk tomorrow.
00:27:01.614 - 00:28:03.430, Speaker A: So if you're interested do attend, I think you'll find it interesting. So, lot of things happening in the prevention space, then we get into detection. These are things where projects have been deployed on chain and now there may be bugs. So what do you do? Right? So you do have bug bounties, bug body platforms like Immunify, which you may have heard of the bug bounties, I think the last number was like 60 plus million dollars have been handed out by Immunify to various white hat hackers who reported these bounties, right? So that tells you the scale of things in the space. Then you do have innovation happening with tenderly on the monitoring side and forta. So look them up. So all these they monitor on chain activity for what may be anomalies in the behavior and then they send you reports, right? I mean Open, Zeppelin, Defender, whole bunch of tools in this space.
00:28:03.430 - 00:28:08.620, Speaker A: So a lot of things happening. Response is, I would say probably.
00:28:10.830 - 00:28:11.146, Speaker B: The.
00:28:11.168 - 00:29:38.120, Speaker A: Space that hasn't I mean, it's very ad hoc today, right? What happens when there is an instant somebody notices something wrong with the protocol based on chain analysis? They send a message in the protocol's discord or telegram, then something gets posted on Twitter, one of the white hat hackers or security researchers learns about it and then they start diving and discussing this on Twitter. And then if there was an exploit, I mean, an active exploit that could potentially be that's still happening, that can be stopped, then there is an ad hoc war room that is set up. And then you do have sort of an ad hoc set of white hats who get called into the War Room, who try to go and frontrun the attackers and all these things. Right. This is good that it's being done, but there's a lot of scope for improvement in this space in terms of response, right? And there are a lot of people, lot of teams that are working on various solutions in this space. These are like 64 security researchers and teams who are building tools and services in this space. And they were all speakers at Trust X, which was an event that Securium hosted in appsvam earlier this year.
00:29:38.120 - 00:30:04.158, Speaker A: So we do have lot of people, but you saw the scale of things, right? $6 billion. We have like 600 plus protocols being tracked by let's say DFI llama, right? So we need many, many more. So as you go and hack your projects. Think about the security. And if you're really interested in security, do come. There are many of us here. Do come and reach out.
00:30:04.158 - 00:30:39.750, Speaker A: There are many ideas that need to be worked on. There's a lot of heavy lifting that needs to be done, not necessarily by people dressed like this, but there is a lot of work to be done. Right. And we have a long way to go. Right. So how does Securium fit into the space? So Secureium is the mission is really about educating and evaluating Ethereum security. It started about a year ago, and Secureum is known really for its bootcamps free smart contract security bootcamps entirely online.
00:30:39.750 - 00:31:06.020, Speaker A: And you see the QR code. That's the address of the discord. Everything happens over there. It started about a year ago with a grant from the Ethereum Foundation, where we also collaborated with some leading partners in this space that you see here. Completely free. We had 1000 plus people sign up, 600 plus people who took I mean, this was a boot camp, right? This was a boot camp for three months. Right.
00:31:06.020 - 00:31:35.578, Speaker A: And fantastic turnout. And since then, what we have done is we have moved away from a discrete three month, one month kind of a boot camp. We now have an always running bootcamp that is free for all the participants. Every month, there is a smart contact security quiz that is designed by Securium or one of the mentors. And, yeah, I mean, challenge yourself. Come reach out to us. And there are many other security players like I said as well.
00:31:35.578 - 00:32:18.426, Speaker A: And with that, I'm done. So I'll be around for the rest of the event. So if you want to talk about security, do reach out. We'll be happy to chat more. And I think I have a few minutes for questions for which if you speak I think if you speak into the microphone, then I should be able to hear and respond to you. Well, one are there any questions? I think there was one question from here. Okay, it all right.
00:32:18.426 - 00:32:39.840, Speaker A: Let's see if this works. No. Does he need a microphone? Hello. I think you have to use a microphone. I think you had a question about this.
00:32:40.290 - 00:32:43.070, Speaker B: So this different color are different protocols.
00:32:43.490 - 00:32:45.658, Speaker A: No, these are the layer one chains.
00:32:45.754 - 00:32:46.014, Speaker B: Right.
00:32:46.052 - 00:32:57.250, Speaker A: So you have ethereum. Okay. This doesn't show. So all the protocols on Ethereum that got exploited are in that blue sector. Okay. Yeah.
00:32:57.400 - 00:33:00.598, Speaker B: So there is a protocol. So why Ethereum is in multiple times.
00:33:00.684 - 00:33:01.666, Speaker A: Those are all the bridges.
00:33:01.778 - 00:33:07.234, Speaker B: Okay. So, yeah, that's the question. Like, the different color represent a different protocol and bridges.
00:33:07.282 - 00:33:19.980, Speaker A: Yes. So you do have L ones, and then you do have the bridges where you have multiple L ones, and then you have some L two S as well. So you see Arbitrum, you see polygon. I don't think you see optimism, but.
00:33:20.450 - 00:33:23.550, Speaker B: Yeah, I have one. More question.
00:33:23.620 - 00:33:26.158, Speaker A: Sure, yeah.
00:33:26.244 - 00:34:08.106, Speaker B: Okay. The question is the Oracle is a very critical part of if we want to as a blockchain, currently we have the access of data which are the on chain and all of that. But if you want to accessible the smart contract application or the use case of a normal people. So Oracle is one of the key part of that. So some of the companies are doing good Oracle, but they are not efficient. So the modularized as per our application requires. So how the Oracle solution? We can improve on a better way in the future maybe like which type of Oracles should be the best and secure way to use those Oracle actually.
00:34:08.288 - 00:34:59.626, Speaker A: Right, so I think there's a lot that we can get into the details of the Oracles, but in general the things that you want are from an Oracle, you want it to be decentralized. Right? And I talked about the Flash loan and the price manipulation, really don't want that. Right, so I can point you to entire blog articles and research articles that have been written on that. Right. So as a user, I mean, I don't know if you're asking from a user's perspective or from a protocol developer's perspective, but from a protocol developer perspective, if you have a choice of Oracles, you need to think about decentralization, you need to think about availability and really dig. I'm just scratching the surface. I mean, these are the key points and then how are you using that data? Right.
00:34:59.626 - 00:35:12.286, Speaker A: The staleness aspect of oracles. Right. Whatever feeds you're getting price feeds, anything else that you may be interested, if they get stale, what is the impact to your protocol? Right, so I think those are all the things yeah.
00:35:12.308 - 00:35:48.470, Speaker B: So basically means as Oracle, for example, Oracle got hacked or some project got hacked, as in the juice said the response detects. And so if you detect after deployment some response. So there is one tricky thing. Some people tell that upgradable contract are not good because that are basically the key part of that. You don't owning that contract. Anyone can come and the protocol can change this upgradable contract. So basically if you detect the on chain, any issue or any security bug, so you recommended to have the contract protocol or a DeFi protocol.
00:35:48.470 - 00:35:55.420, Speaker B: Should we have upgradable or it should be the migration, like migrate to one to other or what was the best.
00:35:55.730 - 00:36:18.834, Speaker A: So there are pros and cons. I think the community is divided between upgradability. I mean, the good thing about upgradability is you can upgrade, fix the bugs. The bad thing is that process itself, very few people understand how to do it in a proper way. There are so many proxy patterns that you can look at and each one has so many nuances. Right. So again, happy to chat to go into the details.
00:36:18.834 - 00:37:13.558, Speaker A: I don't think there's a clear answer because it's about ease of upgradability, I mean, ease of fixing bugs and anything else versus the downsides being if you don't do it the right way, forget about upgrading, you're done. So I don't know if you have time, but yeah, maybe one more. Sir, I have two small questions. First thing is in the recent times lot of hacks have been on the bridges end of things. So how can we improve on that security part on the bridges side? And the second thing is me and my friend here, we are the part of an in house auditing team at a service based company and we are extremely interested into security. We have started doing all that online CTFs that are there and even reading the secure blogs as well. So what else can we do to get speed up on the security side of things? Like learning that.
00:37:13.558 - 00:38:26.030, Speaker A: Yeah, so I think the second part I'll take it offline, we can chat more, right, because there are so many things you can do to speed up, but I think it's also about how much time you spend and the resources and so on. But to your first question, I think the bridges out of the top four bridge hacks, I think one was really based on the web, two side of things, right? There was a spear phishing, somebody's laptop got, I mean server, whatever got hacked and then they got access to the validation keys, so validator keys and that caused they got all the five out of the nine and so on. Right, but the others were about smart contracts, about the logic, right. I don't think there's a simple answer of would one thing have prevented each one of those, but I think it's really all about the entire process, right? So there are many things that can be done and we are still working on it. All right, I had one question. Yeah, you okay? Sorry, I think I'm done. We should find me outside.
00:38:26.030 - 00:38:27.580, Speaker A: Happy to talk to you. Thank you.
