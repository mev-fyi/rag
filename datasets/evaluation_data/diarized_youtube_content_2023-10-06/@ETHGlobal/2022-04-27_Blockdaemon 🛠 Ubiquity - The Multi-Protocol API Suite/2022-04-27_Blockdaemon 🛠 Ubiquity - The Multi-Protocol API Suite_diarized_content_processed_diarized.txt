00:00:06.730 - 00:00:45.478, Speaker A: All right, welcome, everybody here watching online, at home, or wherever you are in the world. And again, to my audience. My name is Limaris Torres. I am with Block Damon, and today I'm going to be presenting about our Ubiquity API. For those of you that don't know me, I am a senior R D block blockchain engineer at Block Daemon, and I'm very passionate about tinkering with all the things. So without further ado, let's talk about Ubiquiti. Ubiquity is essentially a bunch of APIs that fall under a singular umbrella that we call Ubiquity.
00:00:45.478 - 00:01:30.566, Speaker A: It's versatile, it's high performance, it's multi protocol, and it's an API suite that helps us query all sorts of blockchain data. You can broadcast transactions. You can search for history, all sorts of exciting things that we'll get into in a little bit. The four main pillars of our Ubiquiti API are the universal API, the native access API that allows you access to our infrastructure, the specialized APIs, and historical data. Who's ubiquity for? Anyone? Everyone? You like data. We got data. So custodians and exchanges that need highly scalable, zero downtime blockchain access rely on Ubiquity.
00:01:30.566 - 00:02:23.782, Speaker A: We have some fintechs firms that are looking to scale rapidly from zero to maybe over ten protocols. We have analytics firms that are partnering with us that are using Ubiquity for a cost effective access to historical protocol data on some chains. And we have developers who need reliable access to blockchain protocols. And what we do is Ubiquiti allows everybody to manage all of this different information, all of this data on all of these different protocols from a single pane of glass. Here are some example. Use cases of ubiquity. We have real time event streaming, native token balances, multi protocol data, primitives transaction construction and broadcasting staking reports, RPC and native protocol access, gas fee estimation, archive, and full history nodes.
00:02:23.782 - 00:03:07.698, Speaker A: And most recently, we shared our news that we just launched an NFT API. So all my NFT fans out there, I encourage you to check us out@blockpayment.com. Request access to that new launch so that you can get up to mischief. Here's what our Ubiquity API looks like at the high level. You've got the three main pillars here, the specialized APIs, the native access API, the universal API. Like I said, these all fall under the umbrella of Ubiquity, which is that single pane of glass, easy to use, frictionless across different chains. Even though it's different tools and protocols, it's one user experience.
00:03:07.698 - 00:03:46.030, Speaker A: If you need direct access, you can use our native access API. And for specialized data and universal data, you can use those APIs as well. To index. Our universal API is a versatile multi protocol abstraction layer. What does that even mean? So, it's a generalized protocol that allows us access in a unified format, and we'll get into that in our demo. It's a single rest API that allows you to query multiple protocols. You have WebSockets for real time streaming updates and an SDK that also supports multiple programming languages.
00:03:46.030 - 00:04:42.214, Speaker A: You can scale from zero to over ten protocols in the fraction of time it would take you to do this alone. For those of you who are developers trying to build across different chains, I know we're here at Ethereum sometimes we're trying to collaborate with different layers, different protocols. Ubiquity really makes it easy to transfer our knowledge across chain and work with data all across the board with one singular experience that is, like I said, frictionless and feels almost the same regardless of what protocol you're using. Our Native Access API allows native access to web3 protocols to over ten different web3 protocols and allows for historical and archived data on some protocols. The reason for that is salana. If you know, you know. It's very difficult to do that we're figuring out, we'll add it soon.
00:04:42.214 - 00:05:25.986, Speaker A: Auto scaling and redundant node clusters are also something that is available on our Native Access API. Here's a sample of what the Native Access API looks like versus what the universal API looks like. Like I mentioned earlier, regardless of what function you're using, it still looks the same. You're still using very similar commands across the board. And for more information on what the commands are and what the use cases are, and the technical specs of how you can accomplish this, you can go on to Blockdamon.com and look for our Ubiquity docs for guides. Our historical data protocol is, well, like I said earlier, data archival.
00:05:25.986 - 00:06:24.946, Speaker A: And finding historical data and manipulating it is notoriously difficult. So Ubiquity historical data makes it easy across some of these protocols to do some custom indexing and to access archive and full history nodes, right with that universal API and that Native Access historical data function, we also have specialized APIs for Ubiquiti. Some of the things that I've used it for recently are gas fee estimation, staking reports that export to a clean, easy to read CSV when we're doing analytics internally. And like I said, we just launch our NFT API. This is what your single pane of glass will look like when you're accessing Ubiquiti. You'll have your user account, you can see your overview, the nodes you have access to, your API access. This is just all part of the same look and feel across the board for all of our apps.
00:06:24.946 - 00:07:06.754, Speaker A: At Blockdamon, you can see the different protocols that you have access to on your API and get all sorts of metrics and even see if the transactions that you're running or if the data that you're querying runs successfully or if it's a bad request. Here the good stuff. Here you can see again, under the umbrella of Ubiquiti, we have all these different functionalities, and this chart helps us highlight exactly what functionalities we do offer on what protocol. So you can see that Algorand has a lot more functionalities than something like Oasis. We're still building a lot of these out. Our goal is to make all of these purple. We're working on it.
00:07:06.754 - 00:07:29.762, Speaker A: And this is all based on customer demand, but specifically on Ethereum, which is what we're here to talk about today. We do have that transaction broadcasting. We do have that native token balance option. We have WebSocket support. We have native access. We have auto scaling, native historical data querying, universal historical. We have gas fee estimation.
00:07:29.762 - 00:07:51.780, Speaker A: You can get metadata from transactions. And NFTs, you can do transaction constructions. It supports golang. TypeScript python, Java and Rust. Lots of work has gone into this. So if you do test it and if you do like it, please let us know. Our developers are always happy to hear feedback on what other services we can add for the community.
00:07:51.780 - 00:08:53.554, Speaker A: Additional resources for our Ubiquiti API can be found at the following links our documentation, our client SDKs, the website, the actual app, and the link to request access to the NFT API. So now that we've kind of gone into what is Ubiquity? Let's do a quick demo. Oh, by the way, before I go into that, this is what our documentation page looks like. These are the supported protocols again, and for those of you here at ETH Amsterdam that are interested in participating, block damon is sponsoring a hacker house. Or for those of you watching that are DevConnect and maybe not ETH Amsterdam. I know all of those folks are busy downstairs hacking away. Our hacker house started yesterday, goes on till Sunday, and we have a bounty with $6,000 as the main prize for anybody who builds the coolest thing using Ubiquity.
00:08:53.554 - 00:09:27.700, Speaker A: As you can see, Ubiquity is already a fully functioning API, so you get the easy part, which is just making stuff happen with it. And we're really excited to see what the community can actually accomplish using this tool that we've put so much work into. The details for the hacker house can be found at a link that I'll share after this or on my personal Twitter. And the address. Here we go. Oh, this wasn't updated in prices, but the address will be Single ad 1015, AC Amsterdam in the Netherlands. So I'll see some of you there after this.
00:09:27.700 - 00:09:55.180, Speaker A: Now onto our Ubiquiti API. Obviously, there's a login page that I seem to have bypassed here, thanks to single sign on. But essentially you go to app Blockthamon.com. You log in, you go to your Ubiquiti API section. First step is you need to create a new key, and you can name it anything you want. In my case, I named it Test one. Test one.
00:09:55.180 - 00:10:45.510, Speaker A: And I'm not going to do this on my screen so that I don't leak my keys to the entire world that's going to be watching this after this. Security first, right? And once you do that, you just have to go onto your terminal, export those keys, and then you'll be fully integrated and able to run. Here you can see a sample of the transactions that you have run if the requests were successful. And we do have different options for Ubiquity. We have a free option for the community that is metered in speed and in transactions. I don't know off the top of my head, but do contact us if you're interested in that. And then we have like an enterprise version of our Ubiquity API, which is not throttled at all, lightning fast, and works across a couple different chains.
00:10:45.510 - 00:11:23.480, Speaker A: That is the one that we use to partner with different developers, data analytics companies, fintech firms, and whatnot on their individual use cases. Once you do that, open up your Handy Dandy terminal and you have all sorts of fun experiences. I like pink, so my terminal is pink. Don't at me. Anyway, here we have an example where we found a wallet that we wanted to query and we wanted to see how much ETH was in it. And like I said, it's frictionless. So you're doing all from the same terminal that you've been doing your work all day, every day for the last couple of years.
00:11:23.480 - 00:12:04.418, Speaker A: In this case, we are asking for 18 decimals. So there are 53 something 18 decimal Ethereum in here. And then in this other case here, we are asking for six decimals. And we are querying to see what would the equivalent of this Ethereum wallet be, how much Tether is in this wallet address. And we're asking for six decimals, so we can see it's about 4500 here. 18 decimals is too much for me to do in my head, but you all can figure that out later. Again, down here, 4500.
00:12:04.418 - 00:12:41.180, Speaker A: So simple, easy, to the point frictionless. One single pane of glass for all these use cases. And that's what we at Block Damon are trying to build for the community. Access to all the chains in a very simple, easy manner for anybody to use. So thanks for coming. It are we done? Recording? Okay, close.
