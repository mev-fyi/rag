00:00:27.870 - 00:01:32.108, Speaker A: It's okay. Hey, how you doing? You guys here for other end, or are you just looking for a room? How? Okay. So my name is Paul. I am here from algorithm to talk to you guys about a little bit about our project, some momentum we've been having, and ways to develop and kind of get involved. Sound good? All right, so I'm Paul. Like I said, I probably don't need the microphone unless it's connected. Okay.
00:01:32.108 - 00:01:54.976, Speaker A: So I'm Paul. I'm kind of product at algorithm management. Product strategy? My experience is really around both high growth startups. So I came from a company called Carbon Black, which is an endpoint cybersecurity company in Altar. I started when we're about 60 people. I was the only product manager. By the time I left, we had scaled all the way to 1300, gone through an IPO.
00:01:54.976 - 00:02:46.100, Speaker A: And if you saw in the news maybe two weeks ago, they were acquired for $2.1 billion in an all cash deal with VMware, which doesn't suck. I also have experience at large enterprises at IBM, which is one of the largest ones you get out there, 350,000 employees, which gives me a really unique kind of perspective on building products. Having seen both a place with very little process and then having to kind of change how you do things along the way up to scale up, and then getting to the very largest and seeing all of the process all of the time. Just real briefly, if you're wondering, hey, what is algorand? So we're a foundational, public and permissionless proof of stake protocol. We're super technologically focused and innovation focused. I think there's a little bit different where you see projects really, they don't see a lot of innovation.
00:02:46.100 - 00:03:16.560, Speaker A: My personal belief is that what blockchain technology looks like in three years will be mostly unrecognizable from what the underlying blockchain technology looks like now. And we want to be at the forefront of that and stay on the forefront of that. And one of the ways we do that is through our research team. Our founder, for example, Sylvia McAuley, he's a cryptography pioneer. He's a Turing award winner. He's an MIT professor. And he kind of underpins a lot of he underpins our research team and pushes on that technical innovation.
00:03:16.560 - 00:03:58.300, Speaker A: A lot of names, I'm not going to go through them, but just to kind of give you an idea of what our project is like, we're one of the more substantial projects in terms of the folks that we have behind it that you'll see out there. So we talked about Sylvio, our CEO, Keith Coquinos, who's also CEO and founder of a company called Fuse here in Boston, if you're familiar with them, and also a founder at a company called Blade Logic. If you've read the book The Hard Thing About Hard Things, blade Logic is a company that's often mentioned as the sort of nemesis of the main characters. Sean Ford on the business side as well. He was a CMO at Log Me into the last four years, a founder, as promised, and an early employee at Monitor Group, the research team. This is only some of our research team. You can see a lot of MIT stuff on there.
00:03:58.300 - 00:04:57.696, Speaker A: We've got a team of 14 researchers who are focused entirely on innovation around economics, cryptography, game theory, distributed systems, and that's what their focus is full time. We also have a corresponding engineering team of about 14 folks that are really focused on a translating that research into something we can implement and then B, really executing around what we can build on top of those innovations. We want to make sure that we don't get too academic focused. We want to make sure that not only do we have that academic sort of breakthrough, but also build value. So I'll go like a couple of inches deep here on our technology and then kind of come back up and talk about the things that developers are looking at. So as far as our core technology, there's a couple of different approaches to consensus or agreement code that are out there right now. If you're familiar with Ethereum, which I guess everyone is, you're familiar with proof of work.
00:04:57.696 - 00:05:29.012, Speaker A: You're probably also familiar with delegated proof of stake, where it's stake based, but I actually give it to someone else to vote for me, or bonded proof of stake, where I take some amount of my stake, I put that up in bond and that can get flashed, et cetera. There's definitely pros and cons to each one of these. I'm not here to tell you they're all terrible, but definitely pros and cons. A lot of proof of work protocols. You have a lower transaction speed, lower finality delegated proof of stake, bonus proof of stake. You tend to have a very small group who's in charge of a very large group. We have what we call a pure proof of stake.
00:05:29.012 - 00:06:00.420, Speaker A: There's no penalties, there's no slashing. You're not delegating money to someone else or you vote to someone else. And we do that in a couple of different ways. So first of all, to take a step back when we agree on blocks, we have an ever changing sequence of committees. So what does that mean? There's effectively three steps in our block confirmation process. We block proposal, a soft vote and then a surf vote. Each one of those is a separate committee and it changes for every block and it changes for every round within every block.
00:06:00.420 - 00:06:47.988, Speaker A: Each committee is roughly 1000 users that are randomly independently selected and they only have to send a very short, single, easy message in terms of their vote. So what does that allow us to do? I guess we can go a little bit deeper on the committee itself. So who selects that committee? Right? That's a common question for our consensus. Each committee member actually selects themselves so they run a private lottery. If you're familiar with Verifiable random functions, that's the cryptographic primitive that we use, which Sylvia McAli was actually a co founder of a number of years ago. VRS have two really interesting capabilities or properties, one of which is you can't cheat a VRF. Like you can't fake that you have won it, and two, you can always actually prove that you have won.
00:06:47.988 - 00:07:30.572, Speaker A: If you combine those two things, it's a really good way to be able to select committee members in this kind of situation. If you win that lottery. So the VRF says, yes, I have won, then you participate in that committee and continue on. The probability of you winning that lottery or being selected by that VRF is proportional to your total amount of money in the system. So, proof of stake. So what does that provide? Well, first of all, it provides a really good decentralization around the agreement itself, because literally everybody in the system is eligible to participate. Everybody in the system can be a block proposer, everybody in the system can be a block confirmer or a Verifier, which is very different than a lot of other systems where you end up with a couple of classes of users.
00:07:30.572 - 00:07:56.612, Speaker A: If these guys are the proposers, these guys are the Verifiers, these guys are the users, that is not the case in Algorand. It's super decentralized from that standpoint. Secondly, super scalable. So the size of the committee, we have the mathematical proofs on the back end. The size of the committee does not need the size of the scale of your user base. So even though you can go up to millions, hundreds of millions, billions of users, the committee sizes don't have to change. And that means that we can still reach consensus at the same speeds, even with a lot of users that you could with very few users.
00:07:56.612 - 00:08:22.640, Speaker A: And then finally, on the secure side. So what's interesting about the selection process in VRF is that you don't know who the voters are. So as an attacker, I could say, oh, this is easy. If I know who the committee member is, I'll go corrupt that committee member and then I can break your consensus. The thing with the VRF is when you are selected or when you have won the lottery, you have to send one message. That message essentially says two things. One, I get three times.
00:08:22.640 - 00:08:41.412, Speaker A: One, I have won the lottery. Two, here's the proof that proves it, and three, here's my vote. So that's one message. Which means you don't know who the committee member is until after they have voted. Oh, and by the way, if they've already voted, they're no longer part of the committee because now there's a whole new committee. So you can't get to the individual voters because you don't know who they are. And they're constantly changing.
00:08:41.412 - 00:09:02.492, Speaker A: By the time you know who they are, they've already voted and are no longer committed. And so if you're familiar with the blockchain trilemma, pick two. Decentralization, scalable, secure. We feel like our consensus algorithm is a great start for being able to solve that trilemma and actually achieve all three of those properties. But we're not done. We talked about being innovation focused. This is just a start.
00:09:02.492 - 00:09:16.900, Speaker A: We've got a lot of innovation coming. I can take you through a little bit of that. So from a high level, there's not just a consensus algorithm. There's a bunch of other properties too that are super interesting. Core technical benefits of our blockchain. Minimal computation required. We talked about anyone can participate.
00:09:16.900 - 00:09:32.570, Speaker A: Also, it's energy, super efficient. Our founder wrote this slide. He's Italian. He put super after energy instead of before. Energy always trips me up. It's very energy efficient because you're not solving any hash problems, you're not trying to do anything special. You're literally sending one vote with a message.
00:09:32.570 - 00:10:10.880, Speaker A: Secondly, we protect both against protocol attacks and network attacks. So what do I mean by that? When you think about a partition, if your network is partitioned, you usually have to make a trade off. And that trade off is, am I going to choose liveness, continue to create blocks on the chain, or am I going to choose safety? Which is to say there won't be a fork in my network. Most chains choose license. So for instance, I'm going to use Bitcoin as an example. When there's a partition, each side of that partition will continue to create blocks. When that partition comes back together, one of those chains has got to decide, yep, I'm actually the real chain and you drop all the transactions.
00:10:10.880 - 00:10:53.580, Speaker A: That is not the case in algorithm. We have chosen safety, which means when the Necro network partitions, we don't create a block until we have enough votes to bring that together and actually reach consensus. What's interesting about that is we've gotten a lot of really good feedback from our financial customers and our financial developers who really want to know if there is a transaction that I have created. Is it real, is it final? Do I have to wait around and might it get dropped later? That is never a worry with algorithm, and it's been getting a really good reaction. The third thing is that we operate at enterprise speed. What does that mean? 1000 transactions per second? Will you see 1000 transactions per second on our maintenance and no, because we don't have that kind of traction yet. However, we run a long running test.
00:10:53.580 - 00:11:17.144, Speaker A: 10,000 nodes globally distributed across eight countries with evenly distributed stake, which for proof of stake algorithms is the hardest sort of configuration. And we can consistently run at 1000 transactions per second with no grip degradation in our performance. That's only one half of the equation though. Block latency. Also very important. We create blocks in under 5 seconds since launch. We launched about two and a half months ago.
00:11:17.144 - 00:11:39.840, Speaker A: We've created about 1.8 million blocks. All of those blocks have been under 5 seconds. And in fact, our average time is about 4.3 seconds. So not only can we process a very high number of transactions, but when you send a transaction, it is final, complete and done within 5 seconds. And then the final one is this immediate transaction finality? Because we've chosen safety, there's no forks.
00:11:39.840 - 00:12:07.220, Speaker A: When a block appears in the blockchain, it is final. We often get a question, okay, great. Five second block. How many confirmations do I have to wait for? You don't have to wait for any confirmations. If the block is there, it's final. So to flip that into why developers are choosing Algorand right now, the first one, we've talked about this, it lets your application run as fast as it needs to run. It takes the scalability question just completely off the table.
00:12:07.220 - 00:12:54.680, Speaker A: The second one, which was kind of interesting and was actually brought to us by companies that have been building apps, it increases the user's confidence in your application. Why is that? Or why did we get that feedback? If you have any experience sending crypto to friends or to an application, and you send it, and then you wait 15 minutes to see if it's real or not, and then you use a system where you send the crypto and algorithm on our network, it's there, it's done 5 seconds later. It's a Fiat like experience. It's like using PayPal, it's like using Venmo. And it takes your users from a mind space where it's like, oh, I'm using this cool new, not quite there technology to, oh, yeah, that works. It fits into their traditional mindset. Third, reducing cost structures.
00:12:54.680 - 00:13:23.836, Speaker A: It depends on the type of business, but our transaction fees are very low. They're 1000th of an Algo, which is our native currency, and it won't increase until the blocks get over 1000 transactions per second. So the cost structure is going to be significantly improved depending on your business model. And then I'm going to combine the last two. So we really strive to make the development process smooth and easy. We've got SDKs across four languages. Go, Java, JavaScript and Python.
00:13:23.836 - 00:13:51.832, Speaker A: We've got a provider, PureStake, which is a partner of ours who has put out an API service. If you don't want to run a node, it's very infura. Like, if you're familiar with, I expect you are with Infura. And we also want to be a technology partner, which I think is very different for the blockchain world. I'll go back to the traditional world again. In the traditional world, the way you choose a technology provider like, hey, I'm going to build something on top of the platform. Okay, let me go do every research online.
00:13:51.832 - 00:14:32.488, Speaker A: Let me call each one of them, let me talk to them, let me set up a meeting, let me see the roadmap. Hey, what does your support process look like? All of these things that businesses need, not just large traditional businesses, but new businesses as well to make your experience better, aren't available on other public and permissionless chains. And Algorand has the ability we are public and permissionless. So you get all of those benefits, but you also get the benefit of a company who is driving the innovation and can meet you and talk to you and help you when you need help. And we found a really good reaction to that capability as well, which results in a traditional logo slide. It's a lot of stuff. I'm not going to go through it.
00:14:32.488 - 00:15:42.104, Speaker A: But I guess the one interesting thing here is that we've been launched for two and a half months and every one of these logos up here is either building on algorand, has built a tool that supports algorand, accepts algos, which is our native currency, or is supporting the project in some way, like providing node hosting services. And this kind of traction this early, we feel pretty good about to get one level down on some of the use cases that are buried in that slide that marketing gave me. We have companies that are building telecommunications and e payment applications. This is a particularly good application on algorithm because of that transaction speed and because of that finality building insurance, decentralized insurance models, asset tokenization. So the company called Assets Lock, which is launching basically tokenization of real estate and allowing it to get into markets and users that haven't traditionally had access to that market, media and entertainment. A company called OTOY who does digital rendering, GPU rendering, is building decentralized rendering service on top of Algorand enterprise solutions. DAP analytics.
00:15:42.104 - 00:16:23.352, Speaker A: This is an interesting one. So a company called Flipside Crypto, which is also based here in Boston, has built a DAP analytics suite where any application who is building on top of algorithm gets a free service from them which gives insight into your users. Where they're going, how much they're spending, what their activities are by public key not actually user information, but super useful and something that's not necessarily available for folks this early in their lifecycle of the product. But we are just getting started. We're super innovation focused. There's a bunch of things coming down the pipe which I'll just build out here. Some of this stuff is I'm going to go into a little bit more detail in the yellow.
00:16:23.352 - 00:17:12.456, Speaker A: So one of the things we're really focused on when we think about what we are and think about ourselves as a platform for economic exchange. So if you're going to be a great platform for economic exchange, what do you have to be able to do? Well, first of all, you got to be able to represent all of the assets, right? So we can represent our own data currency, the Algo. But what if you want to put boats online or you want to build your own loyalty points? How do I build those assets. We're super focused on that that is coming in the short term and I'll tell you a little bit more about it. Pixel is a technical optimization for Aggregating signatures or using DLF standard. We're helping to formalize, in fact, we're driving that formalization. A number of other chains, including Ethereum is planning on switching over to DLF and using the standard that we've been driving.
00:17:12.456 - 00:17:56.116, Speaker A: Self validating transactions are super interesting. Allows nodes to not have to keep the state for accounts. We have archival nodes, non archival nodes, and if you don't keep state of the account, you can do a lot of very interesting things in terms of like nodes, like clients and more intrachain atomic swaps. So when I do anything with atomic swaps, I think cross chain, I want to give you Ether, you give me Bitcoin. We're focused on intrachain because of these assets that are coming. And the proliferation of assets on algorithm means we want to be able to do something that's a little bit more interesting than the traditional hash timelock contract. It doesn't have some of the downsides that you see there and then post of sale trades and full fledged smart contracts.
00:17:56.116 - 00:18:46.436, Speaker A: Frankly, full fledged smart contracts is something absolutely on a roadmap and we will have. But we think we can solve a lot of those use cases without full fledged smart contracts, which can increase the security profile or decrease the attack surface of your applications and make it a little bit more easy to get off the ground and get going than creating your own smart contract. So there's a lot of text, don't worry about it. I want to talk about creating your own assets in layer one. So this is super flexible in terms of the assets you can create. It covers the full spectrum that's fundable assets like cryptocurrencies, stablecoins system credits, and in fact, on the stablecoins front, Tether, I don't know if you saw this announcement about a month and a half ago. Tether has announced that they are going to launch on Algorand.
00:18:46.436 - 00:19:21.540, Speaker A: They're going to be using this functionality non fungible, tokens like real estate tickets, collectibles, et cetera. An example of this would be the asset block that we tokenize in real estate and then restricted assets, things like securities, some types of real estate certifications. I keep saying layer one or creating them in layer one. And I'm saying like, I'm focusing on that for a reason. Layer one assets enjoy a security profile, but layer two don't. Or smart contract assets do not enjoy the security profile. So they get to take advantage of all the inherent protections that we put in for our native currency.
00:19:21.540 - 00:20:16.676, Speaker A: I'm sure you've had the experience where either you made a typo in your smart contract or you're copying pasting somewhere else and then there's a vulnerability and it sweeps through a whole bunch of ERC, 20 contracts. Or you're just like, why do I have to continue to copy and paste the same thing that everyone else is using, and all those sort of go away with a layer one implementation. It also provides some interesting inherent compatibility. What I mean by that is any application that's built for any asset on algorithm will automatically support all of the assets on algorithm. And so from a community building and a network effect perspective, you get a really interesting flywheel where there isn't, hey, I built my app and I support these four, but I want to support those other seven. But it's a lot of work and it needs some tweaks and I just don't have time. So if someone can convince me that it makes financial sense, I'll also support them.
00:20:16.676 - 00:20:49.660, Speaker A: In the layer one model, you already support them. You don't have to do anything more, which is, I think, a really interesting thing for communities. And then the last one is super easy. You spend one transaction in the network with like five parameters and your asset is created by site, right? So there's a lot of benefits to that layer one capability. And then once you have this ability with this proliferation of assets, you want to be able to exchange them. I want to give you Algos, I want to take your boat, I want to give you a ticket and take your Algos or whatever it may be. And so we're introducing this capability of interchange account swaps.
00:20:49.660 - 00:21:22.244, Speaker A: You can exchange any algorithm asset or any other algorithm asset with guaranteed simultaneous execution of the exchange without any locks or time or without hash time on contract. So there's no multiple steps, there's no waiting. This is some inherent technical innovation that we're bringing to market where we really think it's an improvement on atomic swaps that are out there. Now, there's a bunch of use cases here. There's the obvious of a bilateral exchange. You have something that I want, I have something that you want. It supports multilateral exchanges.
00:21:22.244 - 00:22:09.272, Speaker A: So I want to give you sound goes, you want to give him a boat, but only if he gives him a car. We can put that into one transaction and make sure that either all of those happen at the same time or they don't with the same structure that you would for just a simple bilateral exchange. And there's cool use cases around that. There's all enough funding, right? I'm going to match your donation to whomever? And it will only occur if the other day donation occurs as well. Also for decentralized exchanges, a couple of days ago, IDEX, which is one of the largest decentralized exchanges, announced that they're going to build on Algorand. They're going to be taking advantage of interchange swaps as well as some other functionality. We have to do what we think really takes a leap forward in decentralized exchanges in terms of the user experience and the speed with which you can trade.
00:22:09.272 - 00:22:47.060, Speaker A: Our goal is to allow the decentralization that people want but still give them the traditional fiat world feel in terms of the user experience. And that's really what we're trying to mix together from a developer resources perspective. If you guys are interested in checking it out. Developer alderam.com. Org is our sort of jumping off spot. It's got all our documentation, it's got our tutorials, we've got sample applications, we've got SDKs. As I mentioned earlier, there is also an infura style API gateway that PureStake offers.
00:22:47.060 - 00:23:39.136, Speaker A: We have online forums, developer meetups hackathons. There's just a lot of ways to get involved here. I definitely recommend that you reach out either through Twitter, at Algeran, through our community forums, community Algorand.org, or through that developer site to get any more information that you might need. And other than that, I'm happy to answer any questions you guys might have that was right on. Anybody? Yeah, I made this, but so when I'm creating my own layer one asset 20 token contract no, we don't have smart contracts. I would consider solidity contract.
00:23:39.136 - 00:24:30.452, Speaker A: Layer two, you're writing it off chain even though it's getting executed on chain, the actual creation of it itself. So the way that you create it is you literally send a transaction that has like five parameters in the transaction to make it a valid transaction and it just gets created on the back end by the protocol itself. Yeah, and then when you're sending a transaction, instead of sending a standard transaction as you would for an Algo, which would just be to simplify it from to amount it's from to amount asset name, and that's all it is. So you're using all the same infrastructure, it's going through all the same consensus code. It's as if it was created by the protocol itself. Okay, so I guess a follow up question maybe compare, but so it's a separate chain than the EVM, right? There is no EVM. There is no ethereum.
00:24:30.452 - 00:24:42.740, Speaker A: There is an ethereum. We are not ethereum. We are algorand. We are a wholly separate option. All right, well, thanks everybody. Appreciate that.
