00:00:02.170 - 00:01:29.840, Speaker A: All right, we got. We got rugs. Think we're good. Now, I am hot spotting, so I'm not going to open the zoom again. Sorry, team, but I will keep an eye on the chat. Um, cool. Yeah, I think that's good enough for people to start looking deeper into some of these other bonus questions.
00:01:29.840 - 00:02:01.350, Speaker A: I'll probably add something in the description of that, but we'll go through those next time. I think those ones you just need to know. Basically, the hard part about this is you have to figure out how do you find the dune decoded contracts table. So I'll leave you to go and search for that. And if you can't find it, then you should tweet at them and tell them to make it easier to find. All right, let's do the hard stuff. Let's go through Avenue v three from scratch.
00:02:01.350 - 00:03:31.710, Speaker A: I did already make sure that the contracts are decoded in here. At least some of them are. I don't know if these are the right ones or not, but this is going to be kind of a rough way of seeing if things are decoded correctly or not. So let's see. Let's just start out of V three. Um, is this live? Right, hold on, let me just make sure it's not. This is on polygon, so let's go to polygon scan.
00:03:31.710 - 00:04:22.030, Speaker A: There's a V three gateway. Cool. So let's just start taking notes on this. There's a deposit event here. Just making sure. This is rapt. Why is rapsmatic giving a deposit? Oh, that's why.
00:04:22.030 - 00:04:48.730, Speaker A: It's the same as wrapped ether. All right, transfer, transfer. The one thing I hate about polygon scan is that nothing is actually decoded. I don't know why. I'm sure they're supported by ether scan, so it should be decoded, but it's not. So we are going to have to do this the hard way as a deposit ETH function. I want to find.
00:04:48.730 - 00:05:45.544, Speaker A: This doesn't look right it. Because I think this is just the weak gateway. I don't think this is the actual ave. All right, let's just go to the Ave Polygon. This is the Ave polygon token, and I don't know if they're. Let's see, where's the pool? Okay, let's just start saving some of this stuff. So I'm going to only choose one pair to look at or one token to look at for now.
00:05:45.544 - 00:06:47.444, Speaker A: So let's look at the a token for matic, which follows a deposit into wmatic, which then gets deposited to give you aw matic. Yeah. All right. I think they just call it an ETH gateway generally, but there's no ETH involved here, it's just the native token. Maddox. Cool. So normally when checking out D five protocols, I would say try and start with an earlier version first.
00:06:47.444 - 00:08:15.090, Speaker A: The way I would think about D five evolving is very much like v one was like kind of ugly tests for the most part of like, can we get this to work? And then v two would be like the much more optimized version of V one with some sort of better fee governance gas structure. And then v three and higher is usually when they're like, oh, what if we made this ten times more complex to support a couple of features? So V three, if you're jumping into like Ave, for example, or uniswap, and you try to start with v three, you probably had a hell of a time trying to figure everything out, right? So like, definitely just start. Like Aubrey usall specifically, definitely start from V two first, because it's like the contracts are much, much simpler to understand. The features are much, much straightforward, right? Like for uniswap, everything is just in kind of one pool and share liquidity. Everything for a pair is just like tied together on one curve. Like one swap curve versus V three. It's like you choose the ticks you want to swap or deposit into, and just having the extra tick feature basically changed everything.
00:08:15.090 - 00:10:07.528, Speaker A: And for Ave, my main context is like, basically for V two, you can deposit and use anything as collateral, but it's all shared collateral, basically, versus in V three, I think they have some sort of difference in types of assets, right? So you could imagine that if you had safe versus unsafe assets, you could have much more flexible borrowing risk structures based on what kind of collateral you're putting up, right? So that's my context on V three. And the first thing we're going to do after just looking into, see, like, okay, is it decoded? And does the deposit function still exist? Does the borrow function still exist? I see that there is still a borrow function, so I'm going to take that as well. Right? So hopefully deposit and borrow still work the same way where you have some asset you have an on behalf of, which just means, like, it's actually pretty important from like a composability perspective. Like, if I deposit 100 USDC, obviously I'm going to deposit that on behalf of myself. But if this is like another contract that's calling deposit into AAVE, so if it's something like B protocol, which is built on top of Ave, then they're going to maybe want to deposit on behalf of me so that I get the tokens. That's actually a bad example because B protocol still holds the tokens. But in a sense, it's just like, oh, this is good for composability.
00:10:07.528 - 00:10:30.548, Speaker A: Or if you wanted to invest in Aave on behalf of your friends, because they can't figure out the ave interface, then you could go and deposit on behalf of them. They get the tokens. So it's a pretty important concept there. We'll go to referral codes and that's about it. Yeah. Asset amount. Cool.
00:10:30.548 - 00:11:26.024, Speaker A: So the main context, I think you need to know, if you want to skip V two, it just goes directly into V three. How do you splash load? We'll get into flash. That's more complicated, but yeah, sorry. The main context you have to know is the way all DFI works is you put in one token and you get a wrapped version of that token. So if you're looking earlier at one deposit transaction hash I was looking at, they put in 100 Maddox. So they put in 100 matic, which first got turned into wrapped matic, which is basically wrapped matic, wrapped ether wrapped. Whatever is just saying, I want an ERC 20 version of this native token, right? Because that just makes everything easier to manage when it's all the ERC 20 standard.
00:11:26.024 - 00:12:45.680, Speaker A: So it transferred in 100 Maddox, it went through the gateway to become 100 wrapped Maddox, and then it got deposited. And they, as in the signer, got 100 a wrapped tokens back. Right, which is. This is just called the a token. So we have that base thing in our mind, and what we should be thinking about is like, all right, one, how is this deposit being stored in a contract? Basically, what contracts are holding the tokens? And by the tokens, I mean, what contract is holding the actual maddox that was deposited, not the amatic, because the amatic is held by the user. I think V two is like, there's just like a lending pool contract, and then that holds your balance, and there's like a lending pool user struct, essentially, that stores your statistics. And you can either enable or disable things as collateral and you can still withdraw even if it's collateralized, as long as you don't go over under your health factor.
00:12:45.680 - 00:13:55.416, Speaker A: So that, I think, is the important context setting. And if any of that didn't make sense, either ask in chat or go and read it yourself. I think sometimes the white paper is not helpful. But in this case, I think Ave did a good job. Of explaining the main features through their white paper. So I'm going to start here, all right, launch 2020 capital efficiency, which this just reads to me as they want to improve. Like if you have risky and non risky assets as collateral, then it doesn't make sense for everything for you to be borrowing off of the risk weighting of just the risky assets, right? Like if you're borrowing off of ETH, then you should be able to have a lower collateralization rate than if you're barring with urine's token, right? Honestly, I think that's the main thing for me.
00:13:55.416 - 00:15:09.900, Speaker A: I'm not too sure what protocol safety and decentralization UX enhancements are in this case, all right, generating more yield for liquidity providers, 28 billion in liquidity, which I think has dropped to 13 just because of the bear market now. But it was 20 billion when they posted this yield farming. Okay, so you have yield for. I'm just going to explain basic stuff in case people haven't heard of this before, but you get yield when you deposit, right? So if I deposit 100 ETH and people are borrowing my ETH, then obviously I get some of the interest that they pay for borrowing ETH, right? Yield farming is saying, okay, ave wants to have more ETH or USDC in their lending pool than compound does. So Ave is going to say, hey, on top of the 0.4% that you get, like interest rate you get for depositing ETH, we're going to give you 0.2% in Ave tokens.
00:15:09.900 - 00:15:45.500, Speaker A: So they're able to basically quote unquote, bump the yield by using their native token. You can think of it as marketing or customer acquisition cost or whatnot for DeFi, and that is called yield farming. Right, here we go. Optimizing borrowing network or borrowing power. Any collateral can be used as a borrowable asset. Yeah. And because of that risk parameters, to borrow transactions have to be set to be quite conservative.
00:15:45.500 - 00:18:13.566, Speaker A: And so the first thing you should do when you see anything about risk parameters in DFI is you should try to find their risk parameters or their risk format. All right? So you can just search and it actually comes up right away and make sure that you're on the right version because the risk parameters are going to be different per version. And you can see, hey, these are all of their assets and what is like one, can you use that asset as collateral? Right? So like USDC, Dai Faye can all be collateral, but there's other stable tokens that you can deposit for yield, but you can't use it to borrow off of. Right? And this is something actually decided by governance where they talk about, should we add an asset, should it be collateralized? And if you can collateralize it, then what is the liquidation threshold and minimum loan to value, basically, right? So if the liquidation threshold is 80%, then that just means if die dropped from, let's say I had ten die and I borrowed like five die worth of ETH or something, basically maximizing the collateralization ratio or the LTV, then if the price of die, like, depegged and went down, like 10% or 20% and hits the liquidation threshold, then I would have to give up my collateral, right? So I would be able to keep the five die in ETH, but then the ten die that I have as collateral, basically a certain portion of it will be liquidated just to keep the protocol afloat, right? And there's a liquidation bonus as well. And this just goes to liquidators, it's like a discount, because you have to remember that every action on chain has to be triggered by someone, so someone has to pay the gas. So even if you're in default, technically you don't lose your tokens until someone liquidates you. So you're basically incentivizing the network to go and liquidate you to keep everything efficient.
00:18:13.566 - 00:19:32.330, Speaker A: I'm not going to talk about reserve factor, but you can see everything here has different levels of liquidation thresholds, and loan to value. And loan to value is just like, in our case, it was like we took five die out for ten die, right? So our LTV is like 50%, and the higher the. Oops, just generally a way to understand it is the higher the loan to value, basically, the more you can leverage up. And the higher the liquidation threshold means that's how much room for error you have before you get liquidated, right? So just generally, you'll notice that liquidation threshold was always higher than LTV. That's just because, again, so simple math. If I borrowed five die and I have five die worth of ETH, right? And I had collateralized ten die, then I'm at a 50% LTV. And if the value of die went down to, like eighty cents per dollar, then this would go down to eight, right? And so five divided by eight is now like 62.5%
00:19:32.330 - 00:20:07.490, Speaker A: LtV. And if it went down to, like 660 cents on a dollar, right, so if die went down 40 40%, then I would cross the threshold and I'd be at 83% LTV, which is higher than the liquidation threshold. So someone could liquidate me. Right. Hopefully that makes sense. That's just a general good frame of mind for, like, okay, this is how I can read this of like, oh, this one has an LTV of 49%. This must be, like, a fairly risky asset.
00:20:07.490 - 00:21:00.240, Speaker A: So in this case, it's synthetics. Again, this is all discussed in their forums. So if you're ever interested in this, you can go like, risk parameters of a forums. I'm sure you'll find a ton of proposals and discussions here about how can we optimize these thresholds and LTVs to make it so basically everything is much more capital efficient in this case. Actually, I should know this. I don't remember what the reserve fact is. Allocation of the protocols interest.
00:21:00.240 - 00:22:01.308, Speaker A: Okay, that's based quickly, like a protocol fee, I think. So my guess is this is how much interest accrues. That would go to the Dow, essentially. Am I reading that right? Oh, sorry. Yeah, it goes, sorry, it goes to the Dow. Technically, yes, but it's mainly to sustain in case there's like a high leverage situation or high liquidation situation. And let's say, for example, let's say that urine completely dies and your LTV goes through the roof, right? Not even, like, you go past 100%.
00:22:01.308 - 00:22:32.780, Speaker A: So you're basically in default. It goes to like, 120%. Then technically, Ave is underwater if that happens to too many assets. So they keep a certain reserve factor from the interest generated by those assets just to make sure that there's no solvency risk in the case that the peg breaks. Right. That's important. All right, enough about risk parameters.
00:22:32.780 - 00:23:12.280, Speaker A: I'm going over that now just kind of as a review, so that when I try to look at this for V three, I can see if something's changed. Right. So here they're just talking about. Most of it's on L1, which is really expensive. So they're only doing, I think they're doing this only on l two s. So you only see this on, like, polygon and whatnot. The total cloud value is normalizing.
00:23:12.280 - 00:24:23.748, Speaker A: Yeah, makes sense. Clearly. Protocols of source of income. All right, this is going to be important. There's a concept called isolated pools and isolated pairs. My read on this is that there have been a bunch of other smaller startups that have tried to focus on specific pairs to make the liquidity of those pairs better. I think one of the main ones here would have been Rari, where you can basically spin up ave forks for just certain token pairs such that, like, it'll make more sense if I could showcase it, where essentially all of these pools are their own sets of tokens.
00:24:23.748 - 00:25:24.716, Speaker A: Right. So they're basically their own ave protocols is each one of them. And so the way you can think about that is like, oh, if I choose what assets goes into this, like, combined collateralized pool, I'm essentially defining the risk criteria of this pool. And it's isolated from the risks of other tokens. Right. So you could have tokens with basically a bunch of riskier tokens that you wouldn't be able to see on Ave. You can create your own rari pool for it, and Aave can't add them just because that would potentially mess up their whole risk parameterization across, because they basically have one shared set of liquidity where all the deposits, all the borrows, all the collateralization happens in one place versus rari kind of separates it.
00:25:24.716 - 00:25:54.020, Speaker A: So I think that's what they're referring to when they're talking about improving collateralization through isolated pools or pairs. Some of these are just going to be like, this one is only three tokens. Wow. Their interface is slow. All right. Point being, that is an example of liquidity segregation. So I'm guessing Ave wants to have some way of improving upon that further.
00:25:54.020 - 00:26:17.864, Speaker A: I have guesses, but we'll get to it. Risk management. Okay. All right, so protocol safety. I think they're referring to this as. I think they're referring to this mostly as risk parameterization and not. Yeah, okay.
00:26:17.864 - 00:26:42.960, Speaker A: I think they made this mainly improve this liquidity risk. Not smart contract risk here. And I guess that would just come with isolated pairs and pools. Not sure if those are different features. Decentralization, multi chain current. All right, here we go into the meat and bones. I hope people are still following.
00:26:42.960 - 00:27:50.892, Speaker A: How long has it been? Oh Lord. All right, as you can see, this is pretty time consuming stuff, but 25 minutes in, I feel like I have a good review of like. All right, if we're level setting, they're trying to improve on isolated pairs and pools, kind of taking from what they've learned from risk parameter setting and V two, and also taking from what they've seen, ecosystem of forks like Brawri, that allow you to make those isolated pools and pairs, but maybe don't really innovate on the risk side at a protocol level. And then they do this on analysis. I think that's what I've gotten so far from the summary section. Right, so isolated liquidity pairs is. Right.
00:27:50.892 - 00:29:09.750, Speaker A: Okay, so here they're talking about if you have isolated pairs, then you've essentially segregated liquidity. Right? So if we did like uniswap this is something a lot of defi faces is like. If you have a separate pool for every single pair, then you would have to have enough liquidity on both sides for each pair to be usable, right? So if I have USDC and ETH, and then also USDC and urine, and then also USDC and Uni, then I would have to make sure there's enough USDC in each pool as well as enough of the other token for it to be usable as a market, right? Otherwise, hopefully, you know about utilization rates, but the utilization rate would be really high if I was trying to borrow USDC and put in Uni as collateral. But there wasn't enough USDC to borrow, then the market wouldn't work. Right? So that's liquidity segregation. And every protocol has very different approaches to it, but that's definitely a big problem for borrowing deposits. Even more so than like, swapping, I would say.
00:29:09.750 - 00:30:16.100, Speaker A: Because swapping, you just need a certain liquidity depth anyways. So segregation, you don't want borrowers. Yeah, you don't want borrowers have to worry that much about like, oh, is there going to be enough liquidity in the pool to make sure that my borrow rate isn't just spiking? Okay, explain this more clearly. If you have two pools, right, you have one USDC ETH and then one USDC uni, and you're borrowing the uni pool. But then the yield is higher for USDC depositors and the other pool, the ETH pool, and people start moving their deposits from USDC from the uni pool to ETH pool, it's going to become more expensive for you to borrow in the uni pool, right? And you have no control over that, so you don't want to have that, right? And this is an important point here. It's skewed towards riskier assets because in general, the yield would be higher. If you're depositing like a token, like you need to borrow versus depositing ETH to borrow.
00:30:16.100 - 00:30:56.004, Speaker A: Right? All right, so they're saying that they're doing pools as a hybrid on top of pairs. Okay. Actually don't know what they're referencing here. Uniswap would borrow against. Oh, okay, it's the uniswap pair. Got it. All right, so just summarizing that part.
00:30:56.004 - 00:31:35.724, Speaker A: Liquidity segregation is a big issue. Liquidity tends to go to risky assets. If you always segregate liquidity, then the stable assets are going to have a bad time, basically, is what I got from that section. Now we finally get to the overview. So capital, efficiency so main things, there's a portal, there's an emode, and there's an isolation mode, and then there's new risk management structures. All right, so portal, okay, this is transfer between networks. We're going to ignore portal.
00:31:35.724 - 00:32:25.318, Speaker A: So we have emode extract. The highest borrowing power out of their collateral can be categorized with each category, adding following parameters, a custom price oracle. Interesting. All right, so you basically have these risk parameters that are more customized by the pools you've created. Um, so they can set 255 emote categories. Interesting. All right, so it's not that each pair or pool you create has its own emote, it's that generally there are 255 emotes.
00:32:25.318 - 00:33:10.270, Speaker A: My guess is the reason for that is that would help a lot with liquidity segregation, because as long as you're in the same emote category, even if you're in different pools, you could probably leverage each other. Right. That's pretty cool. All right, here's an example. So category one, stable coins, 97% LTV, 98% liquidation threshold, 2% bonus. That all makes sense. User supplies die, which normally has 75% LTV and that we saw over here.
00:33:10.270 - 00:33:43.670, Speaker A: Right, or 77% right now. So if they supply die, then they can borrow other stable coins. Users capital center for 22% more efficient. That is true. It is 22% more efficient. So this is comparing V two to v three. This is a nice graphic they put in here.
00:33:43.670 - 00:35:15.932, Speaker A: Um, I'm not sure if emode means that you can only. Yeah, it looks like you can only deposit and borrow from assets in the same emote. So it doesn't look like I can deposit stable coins and borrow bitcoin at this rate. I don't know if I'm understanding that. Okay. One of the more relevant is governance. Be honest.
00:35:15.932 - 00:36:19.172, Speaker A: I don't think I understand this isolated. So this is inspired by makerdao. So I would think that we would need to spend some time reading about makerdao. All right, this is more just technical. All right, so I think that's the most we're going to get out of white paper for now. We have been going for a while, so I might pause this and continue next week. But essentially, I think next steps would be like, all right, it would be interesting to see, and I'll write this up, but we would want to find what emodes have been defined already.
00:36:19.172 - 00:37:00.850, Speaker A: We want to find what isolation modes have been defined and what can you borrow off of those? Because I'm very interested to see how those assets tie across pools. And then I think from there we could start getting into calculating what has the improved capital efficiency been, and have people actually transferred their tokens? I'll write that up and in a tweet, but we can go over it next week. But, yeah, appreciate you all for sticking around, and we'll kind of improve this as we go. Probably same format, just like practice questions for the first half, and then protocol dies in the second half, but.
