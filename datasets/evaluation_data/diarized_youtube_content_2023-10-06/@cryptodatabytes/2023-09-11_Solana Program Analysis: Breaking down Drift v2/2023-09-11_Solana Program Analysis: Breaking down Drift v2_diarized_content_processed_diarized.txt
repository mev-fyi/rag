00:00:00.570 - 00:00:19.460, Speaker A: You. Hello. Hello. Testing. Testing. Let me see if this is working. If you're watching this from the start, then skip to whenever I start talking about these actual steps.
00:00:19.460 - 00:00:47.810, Speaker A: All right, let's see. All right, there might be some echo. Hold on. All right, it's working. Oh, my video capture is not on. Good morning. All right, let's put.
00:00:47.810 - 00:01:09.072, Speaker A: Where can I put myself? Why is the obs. Let's see. I feel like Obs always like the camera. Not the obs camera. The elgato camera is so wide and I can't figure out how to make it smaller. Preview. Scaling canvas.
00:01:09.072 - 00:02:29.830, Speaker A: Oh, no, I don't want that scaled window. All right, let's just hope that I'm not blocking anything in this corner. And let's tweet for the people who aren't at us open and the people who aren't asleep going live to showcase. Hold on, I can't use that anymore. Twitter. Let's see. I need some shortcuts to put an overlay on or whatnot so I can navigate these things easier.
00:02:29.830 - 00:03:01.210, Speaker A: Let's see, where is the tweet? Where are you? All right. Wait, do they not have a Twitter? Drift? Oh, wait, right. Drift V two. Twitter. I guess it wouldn't be by version, but drift protocol. Here it is. Drift protocol.
00:03:01.210 - 00:04:27.606, Speaker A: Smiley, Facebook. All right, time to share. Wow, there's so many social medias now I have to go to telegram, then work forecaster, and then now friend tech. Like five different places. I guess I don't need to do farcive. Let's see, does fronttech even work this morning? All right, let's see if anyone joins in. How do I even.
00:04:27.606 - 00:04:47.710, Speaker A: Okay. Obs shows your chat, but it does not show your viewers. So your analytics. So then I have to pull this up on my phone to see what's going on or. No. Should I use YouTube studio? Does YouTube studio share this? Sorry. We'll get into analytics soon, I promise.
00:04:47.710 - 00:05:15.606, Speaker A: I don't think I've live streamed in, like, almost a year. No, it doesn't show on the phone. All right. Okay. We're just going to get started. I can see the chat, so if you have questions, you can just post it in the chat. And then I need to remember, I think.
00:05:15.606 - 00:05:41.360, Speaker A: Hold on, how many minutes into the video is this? This is five minutes into the video. Okay, cool. All right. Good morning, everyone. Oh, I unplugged my light. That's not going to work. All right, we're just going to get into it.
00:05:41.360 - 00:06:44.650, Speaker A: So hopefully you've checked out some Solana guys before. I've basically covered how to do like Dex trades before using orca whirlpool protocol. If you haven't checked those out, go to the substac or go to my substac and check out starter guide. Just a lot of data analysis. Part one and two, three and four will come sometime this year. Hey, GMGM, this reminds me, I need to send this tweet to the drift people so they know as well. Hold on one more second, let me tag who was it that got me on this big Z and Davo.
00:06:44.650 - 00:07:20.158, Speaker A: All right, yeah, part three at four will come sometime this year. Just covering NFTs and Solana. The article is like half written. I just have to go make some spells, but that'll come later. But yeah, I realized I never really did like a how to from scratch. I think this was somewhat useful for people back in early Ethereum days, kind of showing people how to do this stuff from scratch. That was like a whole 30 day course.
00:07:20.158 - 00:08:06.782, Speaker A: But as a budget version of that course, I'm just going to walk through it from scratch on a live stream. If anyone has questions, just throw them in chat or throw them in the comments if it's after the stream. We're probably going to go for an hour or two today, depending on how quickly I could do this. So big Z from drift protocol, he had this dashboard from probably over a year or two ago. I think this is pre dune. Yeah, this is definitely pre Dunesql back before we had decoded tables as well, since if you look into this query here, you can see it's a deprecated data set, but you can also see that they're still querying Solana transactions. If you're doing Solana analysis now, you should almost never be querying Solana transactions.
00:08:06.782 - 00:08:37.390, Speaker A: This isn't like Ethereum data, where it's actually worth querying Ethereum transactions. This table is really hard to query, so you should be querying a few different tables. The main one you should be querying instead is instruction calls. But I'm going to walk into that in a second. Or walk into that, walk through that in a second. This is like a very basic dashboard, just showing their active users and whatnot. They don't even get into what the protocol does.
00:08:37.390 - 00:09:34.558, Speaker A: I think I can see that he tried getting into insurance fund and whatnot and then gave up, which I think is completely reasonable given the difficulty of that data set. But we can now take it a step further. I've already pulled up the program, which is just here, and contracts are called programs on Solana. So I can close this down so you can see the program ID here. And I can see, let's see the IDL here. So the Idl is the same as an Abi on Ethereum? Well, not exactly the same, but similar in terms of it's an interface that gives you all of the different functions and also structs from the program. So dune, we need this to be able to decode anything.
00:09:34.558 - 00:10:23.600, Speaker A: So if you want great data analytics on your Solana protocol, then open source your IDL somewhere. Otherwise, guarantee you people will not want to analyze your data and we will hate you for it. So it's hard to analyze a protocol or know what it does just by looking at the IDL and then looking at transactions, especially because of the speed of transactions on Solana, you're going to get thousands every time you scroll per minute. And so that's not going to work if you just try to be like, okay, let me see. The main functions in IDL. IDLs are a lot longer than abis for many reasons. But if I look through here, you can see the scroll bar on the right side.
00:10:23.600 - 00:11:15.418, Speaker A: I'm going to be scrolling for a day to just get to the bottom of these functions. And you can see there's no mark on which ones are internal or not internal. There's no such thing as really a view function or a read function, so I can't really just filter for those. This is typical, basically, across most lana programs. So what do I do? I take this program ID and I go straight to the program quickstart dashboard. And this covers the first step of what I want to do today, which is understand the protocol. I need to know the main function flows, meaning like, what functions get called the most and what functions are related to other functions.
00:11:15.418 - 00:12:04.750, Speaker A: I need to know the program composability, what programs call drift, what programs does drift call, and then I also need to figure out the state in the storage. Right. So I've already done this so that we don't have to wait for the queries to run, because they take about ten minutes or so to run on the last 60 days of data. But essentially all you have to do is paste in the drift address here or the ID here, and then you can just. I recommend switching to a large tier, and then you can just run and it'll rerun the queries related to this program. We're going to use this transaction table finder in a bit, but just looking over here, I can see that the top function called is place perp order, it's been called 8.5 million times in just the last ten days.
00:12:04.750 - 00:12:30.360, Speaker A: I know it says 60 days up here. This query here is just ten days because 60 days is too much for this one. Oh, these two haven't run. Hold on. We'll get into these in a second then. But I can see settle PNL is also called and cancel orders is called a lot. There looks like probably 165,000 liquidations over the last ten days.
00:12:30.360 - 00:13:16.434, Speaker A: You can see that there's also a liquidate spot. It's not just perps, right? So I know there's perpetual trading. I know there's some sort of spot trading. And the fact that there's a liquidation on spot trading tells me that there's probably also margin trading, which is just borrowing to trade more. Basically. What else do I see? There's deposit and withdrawal, which makes sense just from allowing for margin trading and perpetual trading. And I already know because I asked the devs, or like you look at the docs, they also just have straight up borrowing.
00:13:16.434 - 00:13:53.918, Speaker A: So straight up, like Ave style borrow lending. There's an insurance fund. What else is there? I know there's a few other things in here. I'm not going to go over them now. But here we can see. One of the first charts we're going to want is just new versus old wallets. We can see even 60 days ago, there are about 783 wallets that are old users, 249 new users.
00:13:53.918 - 00:14:28.614, Speaker A: For some reason, on August 14, the week of August 14, there was a spike in new users. I don't really know what happened a month ago, but that might be interesting to look into. And then now the new users have been basically going back to what looks like normal. So roughly like 600 to 1000 something users a week, it's not bad. Top users, I can see that these two users are making the exact same number of calls. So 58.4 million calls.
00:14:28.614 - 00:15:02.290, Speaker A: I'm guessing there's something similar between these two users. I don't have a user analytics dashboard yet, but that might be a good one for me to create next, so I can plug in a user address and see what else they've been interacting with. And this one's interesting. So this is looking at composability, right? So main function flows, we're going to get into this, but we're like halfway done. Program composability. I can see that. Okay, you have drift.
00:15:02.290 - 00:15:39.140, Speaker A: You could have a program that calls drift, and drift also calls other programs. Right. If I use drift to do like a spot trade or something, then that will then call probably some amm or some Dex to trade those tokens. And that's a separate program. Right. And I can actually see down here that it calls the serum program to do some sort of Dex trade, I'm assuming. Obviously it also calls the SPL token program program, because basically every single program calls these two.
00:15:39.140 - 00:16:21.534, Speaker A: But if I look at who is calling this drift program, this one is an extreme outlier for some reason. It's making almost 800,000 calls. So I'm going to save that in another tab for later, just because it might be something that skews the data. And then there's also three j three and J one t, which I'm guessing means jit. And then there's two also vault programs, I guess. Again, this is good for me to know, just to know who's building on top of drift. So this one's just called drift vaults.
00:16:21.534 - 00:17:22.854, Speaker A: So I'm going to make a note like, okay, I should think about, there's some sort of vault, there's some sort of jit. If you don't know what Jit is, Jit is just in time. Liquidity. It's normally like, I think uniswap did a great paper on this where they're looking at like, hey, who looks at trades and sees a trade incoming in the memp pool and adds liquidity just for that trade, basically, which is call why it's just in time. I don't know exactly the context here, but it's there. And this one is not verified, so I have no idea what it is and no idea why it's making 800,000 calls. So let me duplicate this into another tab, and I'm going to run this on large.
00:17:22.854 - 00:17:57.243, Speaker A: I'm going to run this on this program just to see what's going on. I can see that it's running down here. Cool, great. So that gives me some stuff to start thinking about. The transaction count is not loading now, but it basically just looks like this, like, same as this user chart. I'll run it again just because we might need to reference it later. Right, right.
00:17:57.243 - 00:18:55.940, Speaker A: All so this was this weird program. It's no IDL, which makes sense. It's got four wallets calling it every single week, basically, no matter what, for the last 60 days, mainly coming from these two accounts. No other programs call it, and this one's still running. But all right, this very quickly indicates to me this is some sort of MeV or trading bot program, given the volume of calls it's making, and also the fact that only like three or four or five wallets call it is like a very clear signal. That's good to know. We might want to look into some of the example transactions they're making in a bit.
00:18:55.940 - 00:19:37.910, Speaker A: But something I can actually do. Forgot to call this out is all these have example. Oh, here this loaded. So I can see July 17 is actually when I had the most activity. And then it's been back to like 20 million invokes, or roughly 800,000 transactions a week. But again, I know that a lot of that is this one program probably running it. But anyways, I can look at this example transaction here, and it's going to show me basically where the program is interacted with.
00:19:37.910 - 00:20:11.060, Speaker A: So this is f five m. So if I just do f five m just to make it easier to see things, the signers. Eight eight two. Is this the same guy from over here? I actually don't see eight eight two in here. Anyways. Cool. So I can see that they're using this to call drift V two here.
00:20:11.060 - 00:20:53.790, Speaker A: The instruction, they're doing a withdraw, which is probably a borrow, then they're transferring it to then do another withdrawal in is this is the complicated thing that's not decoded where they're swapping it, I think, then across orca and a bunch of other things. Yeah. Okay. This loses me. I don't know what's going on there, but it's clearly they're borrowing from drift to then do some sort of trading. I don't know if it's a flash loan. I actually don't even know if Solana has flash loans.
00:20:53.790 - 00:21:07.880, Speaker A: Anyways, they're doing some arb there. We're going to move on. That's not too interesting to us. We can see. Oh, yeah. Okay. This program is calling like every single decks out there.
00:21:07.880 - 00:21:53.424, Speaker A: Yeah. All right, that makes sense. That checks cool. All right, let's get into the analysis. We're going to keep these open. So as you can see here, I was already looking at the docs, so I slightly cheated by not just going straight from the quickstart dashboard, but give me 1 second. All right, so good thing is drift actually does have good docs.
00:21:53.424 - 00:22:34.328, Speaker A: So I can quickly see there's perpetual futures, spot margin borrowing, lending, staker market makers. I'll just give you the overview of what I've read is I know that their just a time auction is kind of one of the main things that they added that work really well. It's basically a dutch auction for makers to fill an order before it goes to an amm. So I think they had a post on it. Drift v two blog. Hopefully it shows up here as this one. Yeah, it's this one.
00:22:34.328 - 00:23:30.434, Speaker A: So if I just scroll here, this is the main thing you want to see. So some order will come in, someone wants to buy like a perp or a spot trade or something like 1000 quantity of it and they were marked to trade at $40 per sole. Essentially it'll go to makers first to see like hey, let's see, they're trying to sell, right. So we know that the Amm liquidity is at 40.21, but it'll go basically at a discount to some makers who can fill it at a potentially better price. And this is just by seconds. T being the time, x being 5 seconds.
00:23:30.434 - 00:24:05.296, Speaker A: Yeah. So there's 5 seconds for someone to come in and take the order and these makers basically act, I think as the just in time liquidity. And if it doesn't go through, you can actually see that. Remember earlier I said it calls serum, you can see they call serum and it looks like Phoenix as the amms underneath. That can be. That's. I don't think they have their own amm.
00:24:05.296 - 00:24:45.600, Speaker A: Do they have their own amm? All right, here's where we start to get confused. Oh, drift amm uses a backstop. AmM external liquidity providers. Yeah, that speaks to me as they just use Phoenix and serum. Anything else to cover? No, I think that's a pretty good understanding of who they're building off of. We still don't really know what vaults are. What are vaults? Am I able to google it here? Vault.
00:24:45.600 - 00:25:15.570, Speaker A: No, collateral. Vault. Okay. The vault must be. That's just like where they hold all of the tokens. All right, we're going to cover that in a bit. I don't want to dive into that right now.
00:25:15.570 - 00:26:02.080, Speaker A: So let's just get started with the dashboard and we're going to kind of crunch through it as we go. And by crunch through it, I mean we're going to figure out the functions as we go. Let me switch back to my account and I have not created a dashboard for this yet, so let's do a new dashboard. Let's call this drift V two. All right, let's start simple. Let's just take this new and old wallets over time. I'm going to take this query and you're going to see that this is just checking for some program ID against instruction calls.
00:26:02.080 - 00:26:44.650, Speaker A: Who are the signers? Right, so there's this. I have this as account. I can also do this let's see, the table comes out as what? New and old users. Let's see. I know that we're also going to want probably cumulative users, even though cumulative is not a great metric. How do I want to do this? If I just do. Can I do this some.
00:26:44.650 - 00:27:24.068, Speaker A: Wait. Oh, yeah. All right, let's hold on. First, let me fork this. I don't want to overwrite my dashboard. We're going to hard code the drift program ID and then let's just show 90 days and this is going to be new old. As a CTE, you don't have to worry too much about what's happening here.
00:27:24.068 - 00:28:55.126, Speaker A: We're going to write some queries from scratch in a second. And from new old, we've got. How do I want to do this? I think I need a middle CT. Cumulative as select week sum of unique addresses over order by week, ascending as total user or total. Actually, we'll do as unique addresses and then I'm going to say cumulative as user type. All right, from new old and I'm going to do select all from new old and we're going to do union all select all from cumulative. We're doing this as a union because I think if I just do this window function over a new old, I think I'm going to get a bunch of duplicate values.
00:28:55.126 - 00:29:56.580, Speaker A: So I don't want that. So we're going to save this as drift v. Two new old wallets over time and I'm going to run this now. And that ran really fast. All right, so we have new old, we have cumulative. I want cumulative to be align. So this will only give me cumulative users from.
00:29:56.580 - 00:30:51.566, Speaker A: Hold on 1 second, let me see. I see. I actually want to do cumulative using base. So here you can see I filter 90 days, but after the new old row number is calculated. So I want to actually do this on base. Hmm. How do I want to do this? This feels a little slow, but my brain is not awake enough to figure out a faster.
00:30:51.566 - 00:31:36.420, Speaker A: Here, can you do a count distinct, what do I call it? User? Can I sum count? I feel like I can't. This feels illegal, but let's try it out. Oh, yeah. One, two. All right, we'll see if that runs. In the meantime, let's just start adding some text. Drift v two.
00:31:36.420 - 00:32:16.850, Speaker A: What's the language they use? Drift v two. Goals are the cumulative does run amazing. But as you would expect, it's a pretty messy chart if you do it this way, let me actually move. Oh, I'm dumb. I could have just done it down here. Run it one more time. Yeah, kind of works.
00:32:16.850 - 00:33:24.740, Speaker A: You're seeing the messy middle now where I'm trying to do things as my query runs, performs perp trading spot trade to enable deeper liquidity for market makers, smart market makers, greater collateral protocol, collateralization and let's find a fun logo. Drift into logo. This will work. No, I don't want that open. Imagine you tab. Let's take this from their webflow. Going to add some markdown.
00:33:24.740 - 00:34:16.790, Speaker A: So paste this image in and more or less, this is fine. Whoa. All right, we cannot have this cumulative on the same chart, but that's fine. Okay, so now that we have the easy one done, which is the user. So basically this original dashboard is migrated in one query. Now we can get into. I'm not going to put cumulative in here.
00:34:16.790 - 00:35:30.620, Speaker A: Can I hide it? I can't hide it. I guess I'll do it as two separate charts. So let's just put this away. I'm going to fork it and use just the cumulative side. Did not fork do all right it human users. So we'll have those two charts. And now I want, ah, so we have this done.
00:35:30.620 - 00:36:45.484, Speaker A: Cumulative users. Cool. Since this query runs pretty fast, we can probably actually do 180 days. Remove the overtime here and we're going to start adding the visualizations. Hello, Jacqueline. All right, so let's see, I know I'm going to put some counters up here. So we're going to have protocol summaries here, we're going to have wallets here and then what I want is going to be, let's see what I want.
00:36:45.484 - 00:37:11.748, Speaker A: Just volumes probably. So volumes. So then down here is going to be perb volume, borrow withdrawal volume and then spot margin. Spot trading volume and then count at the top is going to be cumulative users. Cumulative volumes. Cool. All right, that's all we need.
00:37:11.748 - 00:38:02.658, Speaker A: So let's get into new query. Apologies. Someone is messaging me. If anyone is going to permissionless and wants to hang out, let me know. I am checking if my flight is getting canceled because apparently a lot of flights are getting canceled. What is this? Give me 1 second to make sure I'm still able to fly out. No, tomorrow is still on time.
00:38:02.658 - 00:38:17.900, Speaker A: Cool. All right. I'm glad I chose not to travel on Sunday. I think I got lucky for once. For anyone that knows me, I have terrible travel luck. All right, new query. We're 38 minutes in.
00:38:17.900 - 00:39:22.570, Speaker A: Oh, my dog. All right. Oh, that reminds me, I should add something later which I think is also great to keep for the community to dos to make dashboard better categorize margin trades, categorize borrow user position. I am not going to get into these, but if you are someone that wants to take up a challenge, those will make the dashboard better. Oh, that's ugly that this pops like that. All right, well can I just make you smaller? All right, we're making you smaller. Ain't having none of that shit.
00:39:22.570 - 00:40:06.400, Speaker A: All right, so let's start easy. Let's just look at borrows and withdrawals because I know that looking at perps is going to be harder. So let me go back here and pick up a deposit transaction. So there's a transfer, deposit and there's a deposit. It's been called 10,000 times last day, ten days. What happens here? I can see that there's some instruction data. It's not decoded on here, but deposit, there is an amount.
00:40:06.400 - 00:41:23.810, Speaker A: Okay, this is the instruction data, there's an amount, there's the market index, which marks what token it is, and then there is the actual transfer of the token. So I need to figure out the different market indexes first. So let's go drift. It's going to be our new best friend for the day deposit and I want to get select all from deposit and I need to know what token they're transferring is the first part. So there is market index, there's also spot market vault. I'm not too sure which one to use yet, but let's take this, let's do a left join on Solana token transfers, SPL token, I want the transfer. So this is a token transfer.
00:41:23.810 - 00:42:38.420, Speaker A: This deposit I need to join on where call transactionid equals transfer call transactionid and they have to have the same outer instruction, right? All right, so here we start getting into some things already because you might have some people who go and deposit off of through that mevbot program, right? So the deposit will be called further down. It's not going to be the first call. So I can't just join on the outer instruction index, which would be two in this case, because if I join there, then there might be other things in there. So I can't do that. Good thing is I know there's amount here. It might be easier for me to just check the token account being used. So this is USDC.
00:42:38.420 - 00:43:12.196, Speaker A: If I paste this here, you will see that USDC doesn't show up. However, I can see there is a user token account which is likely the associated account. Yes. And that belongs to the SPL token address. So what I can do is look for user token account. So I'm going to need call transaction ID for sure. I'm going to need, yeah.
00:43:12.196 - 00:43:56.928, Speaker A: Okay. We need a better table explorer. I need to go back to deposit. So I want user token account. I want to have market index, I want to have amount. Where's amount? I'm not going to do the join because it doesn't work here unless there's some fancy logic you can do to make it work that I covered in the starter guide. But where call transaction ID equals this, which is the transaction we were just looking at and call block slot.
00:43:56.928 - 00:44:29.324, Speaker A: It's called a slot on Solana. It's not called a number. The best UX about Soul scan is the fact that you can actually copy the block number because on ether scan you have to try to highlight it without clicking it. I can put this here and let's see, this will give us user token account. Is this, is this right? Let me just double check. It's what I want. User token account is indeed that.
00:44:29.324 - 00:45:25.650, Speaker A: All right, so how do I figure out what token that is? Well, I can do a left join on if I go to Solana Utils. There's a few nice tables here, such as token accounts, which I'm going to call AA for associated account basically. And I can join it on where address equals the user token account. That's going to give me the token mint address. All right, so I can do AA token mint address. And just to make things easier to read, I'm going to put my alias here for the poor soul that has to read this later. And we're going to run this.
00:45:25.650 - 00:46:31.310, Speaker A: And you can see the token mint address is EPJ, which you will quickly start to learn that EPJ is just USDC token address. All right, so for those who don't know on Solana, if I hold USDC in my wallet, I actually hold it in a sub account. I don't hold it in my main wallet account. This is just kind of how Solana achieves parallelization. So anytime you see these weird transactions, not weird transactions, anytime you see these transactions with a transfer in it and it says USDC, but then you don't see the USDC address in any of the input accounts. Then that's because it's in an associated account. That's also why you have this input account array, which is something again Ethereum doesn't have because you have all these associated accounts, you need to pass them in as like an extra type of argument.
00:46:31.310 - 00:47:11.222, Speaker A: So I know that USDC is likely market index zero. Let's say I want to figure out all live markets. I'm going to say you have. So, okay, I'm thinking through, since right now I'm checking off the deposit transaction, I'm thinking, is there a market you could have that exists without ever calling deposit? And that shouldn't be possible because you can't withdraw if there's no deposits. You can't do a perpetual trade if there's never been deposits. Maybe you can spot trade. A market that never has deposits, but someone has to have margin traded.
00:47:11.222 - 00:47:45.564, Speaker A: So I'm sure that deposit covers that. Just some quick checking in my brain. And what I'm going to do is, let's say I want to do this. I want the unique mint address market index. I want the first deposit. Just for fun, I guess we're going to put withdrawals in here in a second too. Okay.
00:47:45.564 - 00:48:27.520, Speaker A: All right, there is something here. I can't leave the deposit in here because there's interest over time. So if I just sum by deposit, it doesn't account for interest. So then the deposit value is not technically accurate. But I might just leave it as a caveat since I think it's still nice to have this data. But you just have to let the readers of the dashboard know that, hey, this is not exactly accurate. First deposit, I want count as number of deposits.
00:48:27.520 - 00:48:55.684, Speaker A: I want to sum and I need to divide this by decimals because this is going to give me the notional amount. You can see here. It was 250,000,000 or something, which is only 25 USDC. So I need the right decimal points to divide by, which means I need just go back to salana utils. No, that's not right. I need fungible. I think is the table.
00:48:55.684 - 00:49:46.600, Speaker A: I called it tokens fungible. Yeah, I want to do left join token fungible. TK on TK. Token mint address equals. What am I doing here? AA token. All right, so here I join token accounts to get the mint address. I'm joining salana tokens fungible to get the decimals so that I can do a divide by power of ten, two decimals it deposited.
00:49:46.600 - 00:50:23.138, Speaker A: All right, I'm going to leave this in here just because I want to check that this works and runs quickly. First department. Oh yeah, group by one, comma, two. And we're going to do this as drift V two markets. So we have the market index, the first deposit. Yeah, a number of deposits. Cool.
00:50:23.138 - 00:51:20.140, Speaker A: So now if I take this out and I mark it as QA transaction, you'll see I leave this in a lot of my queries, just so I can quickly comment in and out later. Run this. Okay, I should run this on a large cluster. I'm going to cheat and switch to the Dune account to use Dune's credits. I kind of want to run music in the background, but I think I get in legal trouble if I do that. Ah. All right, so you can see sometimes there's some weird data oddities here with like there was some transaction that apparently didn't put a mint address or didn't put a market index.
00:51:20.140 - 00:51:47.540, Speaker A: Might be something on decoding we need to fix. So I'll flag to devs later. But what we're going to do for now is just say where token. Wait, hold on, is this just. I don't have this token minted trust. No, that's not. It is not null and market index is not null.
00:51:47.540 - 00:52:33.660, Speaker A: And we're going to want to order by market index ascending. And since we also have TK symbol. So now if I do this token address is ambiguous, which makes sense. I want to do where AA token mint address. Now I'm not doing where TK in mint address is not null because it's possible that there is some token mint address that I just haven't added the symbol to this table for yet. Right. So I don't want to do that.
00:52:33.660 - 00:53:15.700, Speaker A: I think it's raining. Yeah, it is storming out there. Hole. All right, guess I'm not going out. Wait, isn't the US open final today? Is it canceled? Cool. All right, so it looks like they're good thing I didn't filter by TK because it looks like there's a token I'm missing. I wonder what token that is.
00:53:15.700 - 00:54:17.686, Speaker A: Come on, soul scan load for me. Wrapped BTC. All right, so for now. Wow, do I really not have wrapped BTC in there? All right, what's the decimals on this eight? So the reason nothing's showing up here is because this decimal is going to be zero or it's going to be null, which is going to cause problems for the math. So I'm going to do a coalesce just so that if it's not, if the decimals don't show up in tokens, then just divide by ten to the eight. And I'm also going to do case one token mint stress equals Ben WBPC. This is kind of ugly right now and I'll fix it later.
00:54:17.686 - 00:55:12.238, Speaker A: But it is what it is and let's just say I want to get prices too. I'll do left join prices USDP on P blockchain equals Salana. And I think it's stored in binary and I need to convert it to base 58. So I need to do a from base 58. I know this is not super intuitive, but everything in Ethereum is stored in hex or a binary. Everything in Salana like this address is base 58. So we have to do a conversion.
00:55:12.238 - 00:56:18.920, Speaker A: It's easier to store it in the prices table. I know it's not ideal, but it's something you will get used to. And I need to join this onto a good mint address. I want to do latest and what I'm going to do is take this sum and multiply it by P dot price as USD amount deposited again, probably some of it's not going to show up, but at least it's there. VAR binary to VAR car is it two base 58 decimals is ambiguous. Okay. All right.
00:56:18.920 - 00:56:44.262, Speaker A: TK decimals. Sum must be an aggregate expression. All right, we'll put you in here so that you're happy. Sql. Wow. I still have three of you. Amazing.
00:56:44.262 - 00:57:07.760, Speaker A: Good job following along. Oh, that just dropped to two. Cool. All right. Yeah. As you would expect, WBTC doesn't show up here because I don't have it in here. USD depositor and we're going to do dollar zero point.
00:57:07.760 - 00:57:58.650, Speaker A: This is just going to be zero point a. This is also going to be zero point a. Dates fine. Market index is fine. Number of deposits amount positive symbol address market index it first deposit and let's move some things around. So I want first deposit to be last. I don't think it's super important.
00:57:58.650 - 00:58:57.410, Speaker A: I think mint address. We can keep that up here. And let's see, I want chain utility functions. I want to link things to soul scan. So I'm going to use this function. Solana it. So I want this account.
00:58:57.410 - 00:59:18.568, Speaker A: So I'm basically making a link right now. An HTML group by one, two, three. Yes. That still cracks. Oh, there was something else I wanted to add. I forgot. Think, think.
00:59:18.568 - 00:59:55.664, Speaker A: Yes. All right. Remember earlier we were looking at deposit? I can't do that. What are you doing, Andrew? Drift V two. I was looking at deposit and trying to figure out if the spot market vault was the same as the market index. Like are they just tied together? Because if they are just the same over time, then it is nice to have both of them in here. Let's run.
00:59:55.664 - 01:00:48.490, Speaker A: Let's see what happens. Get hrefs. I have a dot somewhere that I shouldn't have a dot getchain explorer. Oh, deposit dot. Right. Um, spot market do it works. Amazing.
01:00:48.490 - 01:01:11.404, Speaker A: And they all have unique vaults. Great. We can see where the tokens are. If I plug this in here, you will see that it should hold a bunch of USDC. Yeah, amazing. We can see that currently holds 3.889. Whatever.
01:01:11.404 - 01:01:37.940, Speaker A: USDC. So technically, if I want an accurate balance. All right. Amazing. My brain. We're waking up. We're going to add one more thing here within Solana utils we're going to get latest balances.
01:01:37.940 - 01:02:32.980, Speaker A: So I'm going to do a left join of latest balances on bow address equals deposit account. Yes. And this is going to give me so I know I just did all this. However, I actually don't need all of that. I can just do what I want to do. I want to do my brain's blanking. Balance, token balance.
01:02:32.980 - 01:03:19.570, Speaker A: And is this already divided? I don't remember. We'll find out quickly if it's divided or not. But then I don't need this as Mount market balance. Market USD balance. All right, so I can do this. I'm going to keep this here because we're going to need it for another query. Now I can do group by 123456 and this will give me what I want.
01:03:19.570 - 01:04:12.900, Speaker A: So what is the latest balances table? This is just me basically storing the latest token balance of every associated account. Essentially. And it's not showing up here, so I've messed something up. Oh, this isn't in here. Why is this not in here? Hold on, we debug. Maybe I have to fix the spell salana utils. Latest balance equals this.
01:04:12.900 - 01:05:11.550, Speaker A: Now why would this be missing? All right, I will fix that. In the meantime, we'll probably just move on. Oh, the bitcoin. There's only 1.8 bitcoin in there and only 67 E. I guess that makes sense. Token balance is zero.
01:05:11.550 - 01:06:21.408, Speaker A: That's not right. All right, give me a second to figure out what's going on here. If I do daily balances, I'm wondering if somehow. No. But then latest balances just takes the latest of daily balances, so this is also going to show us no token balances. All right, this is probably a data debugging thing that's going to take longer. Token balance, USDC balance number deposits.
01:06:21.408 - 01:07:06.422, Speaker A: All right, take out query results. Just make this a table. We're going to edit and add in this first table which gives us a healthy summary of all of our markets. So we can see this is not a query I planned on doing, but this is just how analytics works. Wow, okay, interesting. So for some reason here in daily balances I have some transactions where the balance is null. All right.
01:07:06.422 - 01:07:57.240, Speaker A: Okay. So I'm going to have to fix that, I think in the meantime, instead of daily balance. So here's what I'm going to do. I'm going to take select address token balance from. Again, this is the equivalent of tech debt, but just as data debt, I need to. Wow, is this really just null in different days? What's going on? Maybe the token balance shows up as null in a transaction. If the token balance didn't change, like if I just deposit sold to a token, then the token balance is the same, I guess.
01:07:57.240 - 01:08:21.806, Speaker A: I don't know. There's some RPC thing I don't understand there, but I know that there is a daily balance that was latest maybe ten days ago or something. So what I'm going to do is I'm going to do a window function. Thank you, platyperps. That is a great name. I want the latest non null value. So I'm going to do.
01:08:21.806 - 01:09:07.466, Speaker A: I want to do a window function on all this crap. All right, this gets messy. I don't know if this is going to run in time, but row number over partition by token? No, by address. As latest from USD's balances where token balance is not null. This is going to be as latest balances or as bow. And when I join it, I'm still going to do the same join, but I'm also going to add an and what am I adding? Come on, brain. Come on.
01:09:07.466 - 01:09:56.700, Speaker A: Latest equals one. So I'm getting the most recent non null balance due to some non null errors and latest balances to fix later. Thanks, future andrew. All right, so please run. Now. This is probably no longer going to take only 16 seconds to run, but from here, while this runs, we're going to move right on because it's already eleven and I have the rest of my day to get to. And also I have their.
01:09:56.700 - 01:10:23.380, Speaker A: For anyone who watches esports and apex, we have a dow that is in the finals for the first time called Blackhand. Definitely go and watch them. I'm going to go watch them soon. I might actually put that up on the side because I told Cersei I would support him. Okay, this ran token balance is. Yes. Yes.
01:10:23.380 - 01:10:58.820, Speaker A: Why did some of the other values change? Partition. Oh, I didn't do an order by order by day. Update descending. I'm dumb. Come on, andrew, get your brain, get your shit, put it all together. All right. Wow.
01:10:58.820 - 01:11:32.400, Speaker A: That exploded in unnecessary complexity. I want to get. All right, it's going to be a mess to get. Well, let's see, bitcoin is so small. I'm not too worried about it. Yeah, okay, this looks fine. So what we're going to do is we're going to take count of deposits by day by.
01:11:32.400 - 01:12:12.874, Speaker A: I don't need this anymore. Let me check that this linking works. Does it take me to soul scan? It does. Great. So I'm going to copy this down to here too, and use this and we're going to have this. All right, cool. I know this is probably hard to follow because I'm like jumping around queries so much.
01:12:12.874 - 01:12:45.390, Speaker A: I'm trying to explain what I can. I still need to do these joins here. I still need to have this where not null check. And instead of USD latest I'm going to do USD and I'm going to join on P. Let's see. Let's assume I do daily. So let's do a date trunk which is just going to get the daily price of call block.
01:12:45.390 - 01:13:17.422, Speaker A: Time of deposit equals p minute. So this is going to give me the by minute price. And what I'm going to do is count of deposits by token. Yes. And I'm also going to do day because I want to get deposits over time across these markets. So. All right, this is also tech debt, but I'll come back to that later.
01:13:17.422 - 01:13:45.080, Speaker A: I don't need the token mint address anymore because I have symbol. I don't need market index anymore. I don't need spot vault. I just want the symbol number. Deposits, USD amount deposited. And this is with deposits as this CTE here. I need to add a group by.
01:13:45.080 - 01:14:10.990, Speaker A: Hold on 1 second. I have this USD amount deposited. I don't want national. Do I want national? Maybe I include it just so people can check. Group by one, two. I don't need first deposit anymore. Now what do I need? I also need withdrawals.
01:14:10.990 - 01:14:39.660, Speaker A: So I'll just call this withdrawal and hopefully it's all the same thing except. Come on. Keyboard speed. Running this now. Withdraw. Call this width. And every time I see depth, I'm just going to change it.
01:14:39.660 - 01:14:52.510, Speaker A: Does withdrawal still have market index? Yes, reduced only. I'm not going to care about that for now. Amount. Cool. All right. It still has everything I need. USD withdrawn.
01:14:52.510 - 01:15:30.426, Speaker A: Amount withdrawn. All right, before I can join these, that reminds me, I actually want these to be negative. Negative one times. Just so the chart is easier to read. There might be days where there weren't deposits or weren't withdrawals or weren't either. So I need to have date generator as I believe. I want this to be my query if I go to discover or no, come on, come on.
01:15:30.426 - 01:15:54.100, Speaker A: Dune load for me. Queries. And I look for days. I know that I have a days query sitting here and I can just take this, put it in here. And this is going to get me every day since 1999. I probably don't want that. I want select min.
01:15:54.100 - 01:16:58.490, Speaker A: What do I call it? Day from deposit as timestamp. So hopefully you can tell that once you get through the initial part of figuring out what the program does and some of the first joins and data cleaning, you can iterate on it very quickly. So select from date generator as DT left joined deposits. I'm just going to call this deposits for clinos. Deposits d on DT. Wait, does this work for a specific date? Do I need to cross this by market? I do need to cross this by market. All right, hold on.
01:16:58.490 - 01:17:45.668, Speaker A: Days ask. What do I mean I need to cross this by market. So this is only going to give me one, like each day as a row. I need each day for each asset. So I need to get from days and also for each day I basically need to join on left. Join. Select distinct symbol from deposits on true days time day symbol.
01:17:45.668 - 01:18:24.100, Speaker A: So this is going to give me all days and symbols. And now I can join in on Dt day equals d day and Dt symbol equals d symbol. And I can do the same thing for withdrawals. Ww we're getting that dub dt day. And I want DT symbol. All right, we're crossing the finish line on this one. And this was number of deposits, which should be number of withdrawals.
01:18:24.100 - 01:19:05.168, Speaker A: Now, caveat again that some of this, um, there's borrows. Right? So not all withdrawals are just withdrawals. Some of them are borrows. I am not going to go through the effort of figuring that out right now. I'll showcase what I mean, like the reason why for it in a second. But Tldr it's complex and you will have to pay me more if you want that data done. Amount deposited, amount withdrawn.
01:19:05.168 - 01:19:24.436, Speaker A: USD. Amount deposited, USD. Amount withdrawn. And let's run this. And we're going to save it. Drift. Drift.
01:19:24.436 - 01:20:39.600, Speaker A: V two deposit withdrawals over time. Line 21. Yeah, you can't call something you can't call something with because with a reserved keyword, Andrew, you should know this. All right, so that's going to run and I'm going to explain why I did not. Why I did not figure out borrows, right? So borrows, if you know, compound comet or compound v three from Ethereum, you know that they track deposits. Like if you're a depositor, your balance is positive, your borrower, if your balance is negative, I assume it's the same thing. If I go into source and let's just go into lib, something I want to search is essentially there's a deposit function that calls handle deposit.
01:20:39.600 - 01:21:11.742, Speaker A: If I go to the definition of it, basically there's this if statement line 200 something, which checks the spot position. If they're in a borrow, you just minus the amount from their borrow. And I think same thing for withdrawal. If they're in a deposit, then you just minus it from their current deposit amount. Hold on, let's see. Yeah. If it's currently deposit, then you subtract the withdrawable amount.
01:21:11.742 - 01:21:42.730, Speaker A: Right. But if it goes over, then you switch it essentially is what they do. So I would have to calculate the cumulative balances for each user to figure out if they're in deposit or borrow. However, the hard part about that is that there is a scaled balance component. And I know I'm speaking very quickly, but there's a spot position here. What is this? The user handle withdraw if user not spot position. So I know this is a struct.
01:21:42.730 - 01:22:23.470, Speaker A: I'm going to search across the whole thing for this state folder, which contains the structs that I need to understand. Why don't I search this again? I forgot my flow. But essentially there's a spa position that tracks the balance of the user for specific markets. And maybe if my brain comes back to me, I'll go back to why I talked about this. Oh, right. There is a spa position thing here. And if I look at the struct for spa position, there's a scaled balance.
01:22:23.470 - 01:23:12.398, Speaker A: This is the balance after you take into consideration interest. Now, getting interest over time gets complex because you have to calculate utilization rate, which depends on what the current balances of the user are. So it gets kind of recursive or not kind of, it gets recursive. You have to calculate a block slot by block slot. You can't really do that in pure SQL. So I will have to reach out to the drift team, who hopefully has their utilization and interest rates tracked, and then I can pull that data, upload it into dune, and then we can come back and calculate the borrow side of things. However, that's a long winded way of saying, I looked at the rust figured out as part, like, it's basically untrackable thing for us right now.
01:23:12.398 - 01:24:12.768, Speaker A: Unless you emitted each user's balance, like scaled balance, every block slot, which that's probably not a good idea, but we can come back here now. Deposit. Oh, yeah. This should be w how many credits do I have left? Okay, still thousand something. All right, so that gets me deposits and withdrawals. We haven't even gotten into the perp trading side, so I'm going to make an executive decision here to look at, do I want to do, do I want to look at perp volume or do I want to look at spot trading volume? So let me see if I spot orders 303,000 something. Perp orders 2.7
01:24:12.768 - 01:24:46.312, Speaker A: million, or likely 8.5 million. Well, actually, the only ones that filled is 356,000. The only ones that are filled on spot are 115,000. So I'm going to pray that these are simple to do. And because they're so close, I was going to say, oh, if they have no spot volume, I'm just going to go only do the perp. But they still do have spot volume, so I can't do that.
01:24:46.312 - 01:25:16.470, Speaker A: So we are going to create a new query and let's basically do the same thing we just did, looking at deposits. But now let's do the same thing. Looking at spot is probably easier. Let's look at spot example transaction again. Right. So the flow is you pick up an example transaction. This one failed, which kind of puts me in a weird place.
01:25:16.470 - 01:25:42.670, Speaker A: I'm going to put fill spot order. I'm going to pull up another transaction which hopefully did not fail. Call transaction ID. Where are you count? Call. No Devs. We need to make this easier to click, please. All right, here, there's this one.
01:25:42.670 - 01:26:29.260, Speaker A: Yeah, we're looking at example transaction. See what data we can find. So this one did pass. There is instruction two, which looks like they filled it and it went through Phoenix. It doesn't look like it went through their just in time liquidity. So this is something. Things that would be good to add, categorized borrows, requires utilization, interest rate, dive into jit verse versus damn fill rates for orders.
01:26:29.260 - 01:27:32.860, Speaker A: Did this run yet? Okay, this ran cool. All right, we're going to finish this chart and then we're going to go look at number deposits, number withdrawals. Number withdrawals has to also be negative. Um, they're almost exactly the same, which tells me there's probably a lot of arbing going on. Invokes. No, that's the x axis. Invokes.
01:27:32.860 - 01:28:13.510, Speaker A: We need bundle bar chart. Oh, wait, I need to. Please don't be ugly. Group by stacking, mostly Sol and soul, which makes sense. So this is deposits. This one can just be withdraws. Number of withdrawals, group by symbol.
01:28:13.510 - 01:29:20.720, Speaker A: Yeah, for the most part, it's just USD and Sol, which again, makes sense, folks. Now let's do amount deposited or no USD amount deposited. Group vice simple 0.8 should do the same thing for these guys. This is just changing so that this is easier to read when I scroll over it. Cool. So this gives me USD amounts.
01:29:20.720 - 01:29:50.170, Speaker A: Let's do group by symbol. USD, amount withdrawn. It's basically the same. So either I have a data error here, let's see. On 611, it's like 817,000,000. USDC. 611, it's the exact same.
01:29:50.170 - 01:30:47.240, Speaker A: Um, okay, there are some differences, however, it looks like most of this activity. Wait, am I looking at deposits on both of these? No, this is positive. This is withdrawal. Interesting. It looks like on most days the activity through borrowing and lending is fully for like the mevbot, the guy who keeps borrowing, doing something on orca and then depositing back. So I guess you would count that as flash loan volume. I'm actually not too sure, but let's add withdrawals.
01:30:47.240 - 01:31:14.280, Speaker A: USD, deposits, USD. Let me close this. Open it again just so I can see what I'm adding. Come on, dune load for me. Deposits. No, I didn't want that. Remove it.
01:31:14.280 - 01:32:19.894, Speaker A: Deposits, withdrawals. These should be side by side because it makes sense to put them side by side. We have new users, cumulative users. Um, add counters on some later date. And what else? Cumulative users, new, old users. You could dive in, get unique depositors if you wanted. Um, all right.
01:32:19.894 - 01:33:31.536, Speaker A: How long have we been going? An hour and a half. I might save. Oh yeah. Okay. So I can at a glance tell that this spot in perp trading is going to take a lot longer to do. So I am actually going to pause here, move this. So on some future date, we'll add spot trades, categorize region trades, add perp trades, shit down section perp trades.
01:33:31.536 - 01:35:41.260, Speaker A: Just probably the biggest thing. Um, we'll do that some later day. Something we can do today is just like count of orders filled. So what I'll do for today, let's save that on. We know that we have fill perp order, user position summary, table trade from here, it markdown should work on headers. Yeah, I guess I'll link it here too. Follow it more web three data analytics and a follow link.
01:35:41.260 - 01:36:18.520, Speaker A: Just doing some stylistic things now. Cool. Yeah. So we have these fills we're going to take. Select block time, dip trunk day block time, call block time as day. I'm going to do account distinct. Um, it.
01:36:18.520 - 01:37:53.690, Speaker A: Where is Signer? Signer as trader counts as per trades from this group one. And then we're also going to do one for spot orders. What happened here, Trader? Oh, yeah, it, it spot Trader. Just so there's something for people to start with. Spot trades drift two. Spot trades drift V two. And we're going to do a bar chart for perp trades.
01:37:53.690 - 01:38:59.410, Speaker A: Also, perp trader will be online. Wait. Oh, yeah. All right. We can't really put that on the same chart, which makes sense. Trades do the same thing here. We're going to have this be.
01:38:59.410 - 01:40:03.282, Speaker A: Wait, this needs to be spot trades. Cool. We have deposits, withdrawals over time and then, so for deposits and withdrawals I want the same things. Want to remove these just so it's faster for me to recreate this stuff. So if I remove this, we're going to fork three times. We're going to make this longer dashboard and basically be done with it. Cool.
01:40:03.282 - 01:40:41.420, Speaker A: So we'll add that into the summary table later. Right. So this is trades. This is traders. Why does this look so different? I guess there are some days where it's just insane amounts of volume for traders. I don't need that. So we're going to fork this call this spot trades.
01:40:41.420 - 01:41:12.836, Speaker A: And this is going to be fill spot order. Um, and I'm gonna delete this one or archive. And then. Oh, did it run already? Traders. Trades. Did I do the right thing? Trades. Traders.
01:41:12.836 - 01:41:55.910, Speaker A: Wait, why did, why did that switch? All right, you do you. Boo. We're going to go back to this query and where is the withdrawal call? I'm going to see. It's here. Sorry. To the fork. This is going to be deposit and then we're going to fork it again.
01:41:55.910 - 01:42:55.390, Speaker A: And this is going to be withdraw withdrawals. Right. So for those ones, I'm only going to use the trader chart. I'm not going to use the other ones. Let's add things in. We're on the finish line for today, so I'm going to add traders and then for spot and perp I'm going to add both traders and trades. Result traders.
01:42:55.390 - 01:43:43.110, Speaker A: I want traders to always be on the left side. Did deposits not run? Cool. They ran. All right. So after all of that, we now have a very simple V two dashboard where we can see there's a good amount of. I need to switch these two. We can see there's a good amount of withdrawal and deposit activity.
01:43:43.110 - 01:44:36.278, Speaker A: There are less traders. Six spot traders. Is that right? Well, there's six people filling the orders, so there's probably more traders. That's data we have to dive into more perp traders. Looks like there's 100 or something, but yeah, again, this was the fills of the trades, which I'm guessing is more meaningful than just the order placed of trades. However, that gives us, let's see, fairly good deposit withdrawals data. Obviously the spot trade and perp data has a lot to be improved on, but I'll leave that for another day.
01:44:36.278 - 01:45:27.382, Speaker A: Thank you for joining me on this rainy Sunday to look at salon analysis. Hopefully that as you kind of scroll through and see what I work through, it's more helpful to understand how to go about this and how you should segment things as you work through it. Because again, as you can see, for a protocol like this, there's no way really you're going to go through everything in one sitting. But it's helpful to kind of start scoping things out, get summary stuff like this market stuff out first because guarantee we're going to need this data again to reference when we do spa in perpetrates. And that is it for today. All right, enjoy the rest of your weekend. If anyone is at permissionless, please reach out to me.
01:45:27.382 - 01:45:29.220, Speaker A: I'll be there to hang out and.
