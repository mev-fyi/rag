00:00:00.410 - 00:00:31.798, Speaker A: All right. Hey everyone. My name is Verity Coltman. I'm from Espresso Systems and I'm the ecosystem lead. I've been with the project for about five or six months now. I'm going to talk to you today about why shared sequencing is important, what the espresso sequencer is, and how it works. All right, so why is shared sequencing important? Honestly, we're seeing so much growth in the rollup ecosystem, and today many people talk about roll ups as having training wheels in terms of how their architecture is designed and works.
00:00:31.798 - 00:01:10.594, Speaker A: And so one of the things that Espresso wants to solve for is helping roll up teams to decentralize their sequencer, which is responsible for transaction ordering. The reason that transaction ordering matters is because sequencers have a lot of discretion over how they order transactions for users. They can censor them, they could price gouge. They could also swap transaction orders to maximize mev. And these things all have negative externalities, usually for customers. But roll ups all have different ways they want to manage this, and we want to be there to help. So you can see how much scale roll ups have added compared to Ethereum, which is the blue line, over the last two to three years.
00:01:10.594 - 00:01:50.474, Speaker A: And we're seeing that this ecosystem continues to grow exponentially. We've already got over 13 billion locked in many of these protocols, and customers prefer it as a way to quickly and cheaply transact. So why wouldn't we look to make that ecosystem more robust? The things that you can expect with sequencing is that we can improve interoperability guarantees. We actually run a consensus protocol that allows customers to communicate like atomic inclusion that they might want across roll up a and roll up b. I only want these transactions to occur if they happen in this order. The sequencer can take that and give that to a builder to execute upon. The second thing that we give is strong performance.
00:01:50.474 - 00:02:36.430, Speaker A: We're an optimistically responsive protocol, which means that we produce blocks as quickly as the network allows. And then the third piece is that we're secured by Ethereum via restaking. So we use a version of hot stuff as our consensus protocol that can scale to support the Ethereum validator set. And we think that's a really important way to provide economic security for roll ups. And we also employ a dual staking model, which Jesse was just talking about. So you can actually stake ETH as a validator, or you can stake a proof of stake token on our network. So what are we doing? The espresso sequencer provides roll ups with fast transaction ordering and enhanced interoperability without sacrificing on Ethereum grade security and decentralization.
00:02:36.430 - 00:03:26.586, Speaker A: What does it look like in terms of the components of our product? Well, we have hotshot consensus, which I touched on is derived from hotstuff. It scales to support thousands of nodes and also acts as a fast finality layer. So many customers today have come to expect soft confirmations when they're transacting on roll ups. You can decentralize your infrastructure with us and still give a great ux. We also offer a data availability layer that we're calling Tiramisu, which really helps ensure that the network is highly performant and able to provide rollups with the data that they need to have the security guarantees that they desire. We'll also offer a roll up rest API, which is going to make it easier for roll ups to work with us. For any of you working with us today, we don't have this fully fledged out yet, but it will be available when we go to our main release.
00:03:26.586 - 00:04:27.794, Speaker A: And then we also have a sequencer contract which records all of the transaction ordering that the sequencer is putting into place and allowing that to be checkpointed to the l one for added security. So where does the espresso sequencer fit? You can see in terms of l two architecture today the sequencer would usually be up here next to the executor and the roll up API. What we actually do is we introduce a proof of stake network where transactions come from the roll up into the sequencer, and they get ordered by our consensus by a number of nodes that are supporting the sequencer network. And that block commitment is sent to our l one contract while the actual transaction data itself goes back up to the roll up to execute. Now this is a really quick demo, actually, this is on YouTube. We're not going to get through it all in this time, but on the right hand side you have two roll ups, a polygon ZkevM roll up and an op roll up. And we have our block explorer on the right.
00:04:27.794 - 00:05:09.600, Speaker A: And basically what we're doing is showing the op stack has, this is Polygon ZkevM. So it's only providing confirmations once the transactions hit the l one. But the op stack chain that we also have set up has very fast soft confirmations. And so you'll see blocks every couple of seconds. And this is basically, they're both running the espresso sequencer now because we used the L one confirmation on the ZKE EVM side, the blocks are not updating right now because there's no transactions, but we can give more info. So this is a locally run demo. Basically what we're doing is running logs and deploying the smart contracts and roll up services.
00:05:09.600 - 00:06:00.022, Speaker A: And in addition to that, we have two custom networks that are set up with metamask with a custom RPC URL as well as a chain iD. And this allows customers to transact using the sequencer and basically check in metamask that everything is working as planned. So you'll see here our dev is clearing the nonsense so that we make sure all the network information is correct. He's configuring the chain, switching the networks, and then from there we can send transactions. So account one is sending transactions between two metamask wallets. I think he had to clear the nonce again. So this is using the op chain.
00:06:00.022 - 00:06:53.258, Speaker A: So you can see the user experience is very similar to what you would already do today. They're sending that token confirming that it's all going through, and then basically confirming that on the op chain, which is doing those fast soft confirmations, you can see all this information is verifiable on block scale, which is the block explorer that we use. And then we basically go and do the same on the Polygon ZKE EVM, which is not using soft confirmations. It's relying on the l one, so it takes a little longer to show through with that. I'm pretty much out of time, so I will skip through. Please get in touch with us if you want to learn more. We have a QR code down the bottom.
00:06:53.258 - 00:07:05.190, Speaker A: You can reach out to me at verity@espressosys.com or vezabelle on Twitter. So yeah, please feel free to reach out. Really excited to work with a number of you today. And yeah, enjoy the rest of the conference.
