00:00:11.120 - 00:00:36.396, Speaker A: All right, looks like we are live. So hello, everybody. Welcome to the first ever infinite layers. And I'm joined here with Gajesh. And what we're going to be doing in these series is we're going to be talking to, interviewing, and diving into all types of technology that's being built on Eigen layer. Two main categories. For now, we're going to be talking to AV's teams, and we're also going to be talking to teams building on Eigenva.
00:00:36.396 - 00:00:52.144, Speaker A: In the future, we're going to also be talking to teams building on ABS's. But we have to start somewhere. There's a lot of ABS is to talk to. So that's where we're going to be starting off. So, I'm Nader. I work in developer relations with Eigen Lair, and I'm joined by Gajesh. You want to give an intro? A lot of you might already know him.
00:00:52.684 - 00:01:03.834, Speaker B: Sure thing. Yes. It's super exciting to start this podcast from NATO. I work and develop relationships with NATO and. Yeah, let's get this started.
00:01:04.454 - 00:01:46.326, Speaker A: Awesome. So we're going to be doing these at least once a week, sometimes more or less, but yeah, average about once a week. So we're going to be sharing a lot more of the teams and projects that are going to be coming on as they come out, but they should be around the same time, and it should be maybe Mondays and Thursdays, maybe Mondays and Fridays. So with that being said, today we're actually having a combination of both Eigen DA and an AV's teams doing essentially both. And it's alt layer. So I'm not going to introduce what AlT layer is. Instead, we actually have two folks from alt layer, and instead of me introduce them, I will let them go ahead and introduce themselves.
00:01:46.326 - 00:01:50.794, Speaker A: So go ahead and introduce yourselves and then tell us a little bit about AlT layer.
00:01:53.284 - 00:01:53.900, Speaker C: Yeah.
00:01:54.012 - 00:02:34.724, Speaker D: Hi, everyone. Waikyu here from the earlier. So a little bit about myself. I started doing research back in 2012 mainly on consensus protocols and later working on the sharding protocols and later on, like, sort of on the research for these actions like Cosmos and Polkadot. So back in 2021, we started earlier. Basically, we want to bring in all the scaling solutions around rollup to really empower and scale all different applications. So, Leshan, I believe Amri will share more about earlier and also all the stuff we are providing at this moment.
00:02:35.984 - 00:03:03.474, Speaker C: Thank you very much inviting us, by the way. Great to be here. My name is Amrit Kumar. I handle operations, which basically includes all sorts of things, but I do have similar background to yautji. I come from academia. I did my PhD in computer science. My journey to crypto was interesting because when I was doing my PhD, I wanted to work in crypto, but my funding came from a certain source, and that source kind of privated me to work on different projects.
00:03:03.474 - 00:03:37.444, Speaker C: But when I was finishing my PhD, I felt I should go and work in crypto. And funnily, when I went to join the same lab where Yautji was finishing his PhD, I was told there was nothing interesting to do anymore in crypto anymore. I was too late to the party. I persisted, and then my crypto journey began. So, yeah, I was previously working at Zilliqa, was the person there was also the chief science officer, was designing new languages, smart contract languages and other things. And then in 2021, I joined Yao Qi in building out there.
00:03:39.564 - 00:03:41.744, Speaker A: Okay, awesome. So what is alt layer?
00:03:43.044 - 00:04:24.834, Speaker C: Okay, so I'll give you one or two line intro, and then we have a, I guess, a slight presentation prep, so we can talk you through that. So the high level, when we started 2021, our thesis was that app chains, like Cosmos or Polkadot based chains are great, but they could be better simply because it's quite expensive to bootstrap a network like cosmos. Right? You have to find validators, you have to incentivize them, and so on and so forth. Right? And also, it's complex to build, because imagine you want to use Cosmos SDK. It does abstract away all the consensus part and everything else, so it makes life somewhat easier. But still, developers have to go and code the entire business logic in the SDK, which is not. It's not ideal.
00:04:24.834 - 00:04:57.776, Speaker C: And so we felt like, hey, optimism and arbitram were then, by then, you know, they were doing about, I think, thirty k, forty k, maybe 60k transaction day. So there were early days of optimism and arbitrum. At that time, it felt like maybe if you take optimism, arbitrum and launch that in an app specific context, that could be much better compared to app chains. So basically, the idea was app roll ups could be a better alternative to app chains in sorted context. So that was our initial thesis. And then we actually build, and Yautji can tell more about this. We actually started to build a stack of our own.
00:04:57.776 - 00:05:21.882, Speaker C: So this was prior to op stack. So we built our own stack. We with the idea that people can take the stack and spin up their own op stack style, optimism style chains. But then when op stack came into existence, of course, we deprecated that. And then we went on, went on all in, into op stack and some of the other stacks that were developed. So this is where we started the RAS service. We started off building and making it easier for people to deploy rollups.
00:05:21.882 - 00:05:49.344, Speaker C: So imagine you're an app builder. You come to us and we would run the sequencer, RPC endpoints and everything that comes with it. And so that you as a developer, you'd focus on your core expertise, which is, let's say app development or game development, whatever you have, and then you would manage all the infra site. Over the last eight months or so, we have been building a new framework that we call restate rollups. Hello.
00:05:50.724 - 00:06:04.974, Speaker A: So basically, restake roll ups are kind of the, the thing that you all almost invented, or you're like the first one to coin that term. Can you tell us about what restake roll ups are? Or do you want to dive into the presentation and then we can kind of go from there?
00:06:05.434 - 00:06:08.374, Speaker C: Yaji, do you want to say quick words before I dive in?
00:06:08.834 - 00:07:00.164, Speaker D: Yeah, so a little bit like background or the story behind the scenes. So I actually like Suran and I, we were close friends like two or three years ago. And we had a lot of conversation around this staking and also basically how to scale roll ups by leveraging, for example, the rest taking or by leveraging the new DA system from the Eigen layer. Right now we call it like eigenvalue. So after like a lot of discussion for the past 23 years, and basically we came out with a new term, new term called like risky roll up. So it's sort of like roll up with a new set of features empowered by these Eigen layers. Shared security.
00:07:00.164 - 00:08:05.794, Speaker D: Briefly, we introduced this decentralized verification fastfanation and also decentralized sequencing to basically improve the decentralization and also security for the existing roller stacks. So it's agnostic to all the existing roller stacks. So for example, we can launch op stack arbitram or Polygon, CDK or Zika sync Zika stack. And at the same time we can leverage basically all the roller features, as I just mentioned, decentralized verification Fastfanati and the decentralized sequencing to empower the existing roll ups. And yeah, Amrit can share a little bit more on these details. But in general, as I just mentioned, it definitely involved a lot of discussions and conversation with Sriram and also Eigen team to come up with this new set of features to make sure that sort of the roll ups with better decentralization and the security from this Eigen Lear's platform.
00:08:10.834 - 00:08:13.930, Speaker A: So do you want to go ahead and kick off the presentation.
00:08:14.082 - 00:08:15.122, Speaker C: Yeah, let's do that.
00:08:15.258 - 00:08:22.490, Speaker A: Okay, awesome. And then we'll do some Q and A after that. So I'll go ahead and just, I guess, set you up here.
00:08:22.682 - 00:08:45.560, Speaker C: Perfect. Well, thank you. So I think we were mentioning this for several times, right? So basically, the idea or high level understanding of restate roll ups is this is where roll ups meet. Eigen layer three, seeking mechanism at a very high level. This is what it means. And so why we do this, right? Because we believe that roll ups are here to stay in many different forms. Right.
00:08:45.560 - 00:09:09.970, Speaker C: Execution layer, by the way, is the first thing that has come out of ethereum, before Eigen Da, before Celestia, before any of the other modular components came out. Execution layer was the first one we saw. Arbitrum, optimism and other things coming out faster with them. Right. Rollup stacks then got launched and they started this idea that you can actually deploy rollups. It should be as easy as deploying contracts. We have seen that through Opstack.
00:09:09.970 - 00:09:51.496, Speaker C: Literally, you have to deploy a bunch of contracts and you have a roll up and ready. Furthermore, what RAS services like Authla and some of the other players like Conduit and Caldera and others have done is that they have made, like, if you're launching rollup using op stack, you still have to run the sequence. So you still have to go and handle the RPC endpoint, you still have to go and manage explorers and whatnot. All of that now gets taken away. So basically, RASp providers are the ones managing all of that for you. And with all of this, if you combine this, the power of Op stack and arbitram orbit and others, and if you combine that with RAS services, basically within minutes, you can now have a mainnet or production ready system, production ready, roll up ready for you to use. So that's the power of rollups as a smart contract in this world.
00:09:51.496 - 00:10:39.464, Speaker C: So we believe, personally, that by, I think, around 2024, you would have at least 1000 roll ups live and running in different shape and forms, and by the way, across different execution lists. So you could have, for example, you could have BVM roll ups, you could have Solana based roll ups or move based roll ups and whatnot. We also manage about 40 odd roll ups already across different stacks and different dls. So now what happens when you have thousands of roll ups like this? Right. The thing is, many of these roll ups operate, or I would say most if not all of these roll ups operate with a single sequencer. It's not a security issue, but it does have temporary liveness issues because the sequencer may go down. And yes, you could still send transactions through the l one.
00:10:39.464 - 00:12:00.024, Speaker C: It's not ideal because there are certain caveats around this. For example, you have to wait for a certain while before you can actually push your transaction through l one. Yours. When you use, let's say, optimism arbitrary of the established l two s, you, those l two s are being run by a sequencer that's somewhat trusted in the sense that it's run by the foundation or any party that's behind optimism or arbitrum or any of the likes. But that trust cannot be extended to app roll ups because today, as I said earlier, you can use a RAS service, you can use Opstack to spin up an application specific instance, and that the person who's spinning that up could be completely anonymous, right? So you cannot trust that the sequencer that is being run by that entity or that user or that developer has any trust there, right? So there's no trust assumption that you can extend from op sequencer to this app sequencer, app roll up sequencer. The other problem is that, in particular, if you're using, let's say, optimism based roll ups, you have this idea of, you have this notion of validators or verifies, right? So basically what they do is they take, take a look at, they take transactions from the sequencer and they execute them and they commit a state generated from that set of transactions. But who validates that? This set of transactions and this corresponding state actually is valid.
00:12:00.024 - 00:12:38.462, Speaker C: So you need these verifiers in arbitrum, they call it validators. So you need these validators and verifiers actually check whether the resulting state is indeed correct. And if not, you can go and challenge them. Right? Now, in case of arbitrary optimism or the other established genes, you have somewhat trust assumption you're making behind the whitelisted set of operators that are running this. But you can't do that. You cannot extend that to this long tail of app change that can come up in this thousand of rollups world. The idea is you should have some decentralized network that ensures that the roll up and the state of that roll up is actually valid.
00:12:38.462 - 00:13:05.406, Speaker C: And, you know, anyone can come and participate in that. So these are kind of different issues that comes up when you have a world where you have thousands of more roll ups, app roll ups in particular. And so this is, this is, we try to address them through this framework that we call restrict roll up. Just to clarify, it's not a new roll up stack in the sense that it's not like op stack arbitrage. It's not that. It's also not roll up on its own. So unlike you could say, oh, this is optimistic roll up.
00:13:05.406 - 00:13:35.430, Speaker C: It's not a roll up in the sense that it's, it's not a chain on its own. Right. So what it is, it is basically a framework that takes a roll up stack. So let's say opstack or arbitram orbit, and brings the benefits of Eigen layer's rest taking mechanism to that roll up in different ways. So there are three things that basically restake roll up offers you. So one is better decentralization. So imagine if you want to have decentralized sequences, you could have that with opstack and eigenless restricting mechanism, you can get better security and liveness in that sense.
00:13:35.430 - 00:14:02.476, Speaker C: And third, you could have faster finality through economic security. So let me get into these things. What are the benefits and how it works? So restate roll ups basically comes in the form of three different avss. And these avss are attached to each roll up. So one roll up that wants to have convert or become a restate roll up will have three abs's eventually. The first one, which is the one that we are focusing on at the moment, is Mark. And by the way, there are two mark abss currently live on Eigenlam Mainet.
00:14:02.476 - 00:15:04.984, Speaker C: And Mark is an AV's that serves faster and offers fast finality to roll ups. Now why do I talk about fast finality? Right? Because if you take optimistic robot rainy rule up for that matter, you have to send transaction data, or at least at the bare minimum, some state or some pointer on Ethereum, right? And you have to wait for that pointer to be finalized on Ethereum. And today, because Ethereum does not offer you single sort finality, you have to wait for at least twelve to 13 minutes for that transaction to be finalized. And that's not ideal, right? Because what happens because of that is people end up don't wait for that long. So people end up relying on whatever sequencer tells you, right? So for example, sequencers, hey, here is the transaction, potentially, here's the state and here's my pinky promise that we will do, and I will do everything that's needed on Ethereum properly. And take my word for it. And that's not good because sequencer can, again, in the application specific context, you don't trust the sequencer at all because it's not run by op foundation, it's not run by Arbitrum foundation.
00:15:04.984 - 00:15:39.442, Speaker C: And so what you need is some sort of economic guarantee that is stronger than the guarantee that sequencer gives you, but also faster than what Ethereum offers you, right? Because Ethereum is quite slow, but it gives you strong guarantees. So this is what Mark gives you. Mark gives you. It gives you a guarantee that's somewhat between your sequencer and ethereum, essentially, but with economic, paralytic and vital is a network that basically is a network of challenges. So imagine when you are building optimistic roll up. You want to have these nodes that check whether the node that has executed and produced the new state. That state is actually valid or not.
00:15:39.442 - 00:16:00.574, Speaker C: So you need to be able to have enough nodes to be able to do that. So that's basically what vital does. And finally, square is a network, or ABS, that offers you dc sequencing at a high level. These are the three different avss that is under the umbrella of restate roll ups. So, as I said, mark is the one that we are focusing on at the moment. We are the one building this at the moment. So that's kind of the hottest part.
00:16:00.574 - 00:16:42.830, Speaker C: In the coming months, we'll start releasing some of the other abs's as well. So let me focus on Max. As I said, you get guarantees, or absolute guarantee from Ethereum, but it's quite slow. But it comes with economic backing that ethereum brings. On the other hand, you have this backing that comes from sequencer, but there's no economic backing there because literally the sequencer can say anything and they're not obliged to abide by that, that promise. But it's very fast, right? Sequencer can see transactions bundles up in a block and tells you, okay, now this transaction is almost finalized, or here's a brief confirmation for my transaction. And so the idea behind, by the way, this slide is the one taken from actually Eigen, one of the Eigen blog posts, by the way.
00:16:42.830 - 00:17:00.644, Speaker C: And so, Eigen, what we try to do with Mark is bring eigens restaking mechanism. So you will have a bunch of nodes that will check whether the roll up state is valid. And then they will give you attestation that, hey, this state looks good to us. So you can consider to be somewhat final, right. And the economic.
00:17:02.344 - 00:17:07.320, Speaker A: Sorry, I said you could. That's essentially just a form of soft finality.
00:17:07.472 - 00:17:17.644, Speaker C: Exactly. Still soft finality, but it comes with economic guarantees. That's nothing which, which. So, sequence also gives you soft finality, but there's no economic backing behind it. And that's kind of what. Kind of what I can layer.
00:17:17.944 - 00:17:19.963, Speaker A: Good, good analogy. Okay, good.
00:17:22.383 - 00:18:11.374, Speaker C: So basically the way it works at a high level is a sequencer takes your transactions, batches them, and potentially produce, and by the way, I'm merging here, sequencer and the node that executes transactions and produces the state. So that node will take your transactions, produces the state, and passes it down to the mark network. And the mark network, basically an AV's or a bunch of nodes, they will check whether this node or this set of transactions and this, this state looks valid to them. And then they would then attest, they would basically sign that, hey, I have seen this set of transactions and they look good to me. And if you run those transactions yourself, and you'd get the state that the sequencer claims to be the new state, and then the data goes back to theme. So you're still getting all the benefits of Ethereum. But in this, this middleware network, middleware AV's gives you economic guarantee that, hey, this transaction, this block produced by the roll up node is good and valid.
00:18:11.374 - 00:18:34.474, Speaker C: So there are several benefits of Mac is one obviously is the faster finality. So you don't have to wait for Ethereum's 13 minutes or twelve minutes of finality. You can actually get a finality quite quickly. This is quite interesting for people, let's say building games, right? Imagine building a game on your own chain. You want to make sure that you can move your game logic quite quickly. You don't want to wait for Ethereum's finality for that. And so this fast finality can happen in seconds.
00:18:34.474 - 00:19:05.684, Speaker C: This also pretty allows you to have interoperability across rollups, right? So you could imagine having, let's say a roll up that has its own Mac. And let's say this Mac is shared with another roll up. Then basically this Mac would say, hey, I have seen that this roll up a is doing things correctly. And let's say your assets have indeed been locked on this roll up. And now this message can go to roll up b and roll up BC. Okay, now that Mac has approved it, I can go and mint a corresponding asset on this new roll up. So it allows you to have interoperability as well.
00:19:05.684 - 00:19:37.312, Speaker C: Or it could allow you to have instant withdrawals. So you could imagine having a liquidity based bridge that relies on Mac for confirmation. So Mac would say, okay, hey, yes indeed, this has been. No, this person on a roll up a wants to withdraw. Now, you can allow this withdrawal to happen through liquidity. Of course it's not going to go through Ethereum, but you can allow this withdrawal to happen because there's enough liquidity sitting on this liquidy bridge for example. So yeah, that's, that's mostly what we do at a high level.
00:19:37.312 - 00:19:47.884, Speaker C: But if you want to read more, anyone wants to have a lot more in depth kind of into, into these map, then you could check out our docs, docs.org dot IO.
00:19:49.424 - 00:19:57.924, Speaker A: Okay great. Yeah, I have a bunch of questions, but to get started, gajesh, I'll let you jump in. Do you have any questions that you want to throw, throw out there?
00:19:58.444 - 00:20:02.264, Speaker B: So I think the explanation was awesome. I have no questions.
00:20:03.084 - 00:20:32.704, Speaker A: Okay, cool. So I guess the first question is kind of where do you fit in in the whole like roll up as a service paradigm? I think that there's starting to become more of these different providers to my understanding. Obviously like the restaked roll ups are something that are unique to you all. But also I'm kind of curious in terms of like if I was going to want to build something and I approached you all, what would that look like in terms of the day to day getting it from zero to one?
00:20:33.924 - 00:21:09.742, Speaker C: So again, I can start Yaji, you can chip in to fill in. So yeah, I mean, Ras services are very classical. You could imagine kind of SaaS kind of model where you come or service model where you come to us and you say, hey, I want to have a roll up and I want to use, let's say opstack with a certain DA, let's say NDA. And I want certain customizations done to my stack. So for example, you could say I want to have my own gas token or I want to insert a new opcode or what have you. So you specify your requirements to us and then we would set up a testnet for you. Of course there are a bunch of other things that happens.
00:21:09.742 - 00:21:55.680, Speaker C: For example, we do monitoring and a bunch of other things. For example, let's say opstack gets upgraded. We have to upgrade that. But a high level, basically you come up with your requirements on what stack and what customization you need to be done for your roll up. And we would do that for you so that you can, you don't have to worry about any of the node management. The other thing that, you know, as a rasp service we do is imagine you have your roll up but you want to have, let's say oracle service integrated in your chain. If you were to go and do that or get an Oracle party interested, interested in supporting your chain, you have to do a lot of bd effort, right? Go and talk to them, maybe potentially pay some money and all of that gets handled by our side because we have a host of service providers that we speak with, third party service providers and we can hook you up quite quickly with them.
00:21:55.680 - 00:21:57.564, Speaker C: So that's what we do as a Ras.
00:21:59.384 - 00:22:22.420, Speaker D: So I want to chip in a little bit. Like sort of. Yeah, yeah. Apart from as I mentioned, right. Even the rust is not that old. It just came out probably just for one year. We call it classical service, but still apart from that, right on our side, because most of our team members came from this academic background.
00:22:22.420 - 00:23:29.512, Speaker D: So we are quite strong in doing research and also the new technology innovation stuff. So for example, we are contributing a lot of code to different roll up stacks and we are also doing this integration for eigenvalue, for op arbitram and also this CDK. And so that sort of technical front, that's something we are quite good at. So basically because the code implementation or integration original from us, right. When we serve this team, typically we know if there's something wrong or if there are new upgrade, we can make sure we always provide the latest upgrade and the latest release for sort of the customers and partners. Beyond that, since most of the team members in this space for a long time, probably over six years or even seven years, we have a lot of good connections, not just on the service side, not like Explorer bridge and all these different services. But at the same time we also have good connections with different VC's and also probably exchanges.
00:23:29.512 - 00:24:24.670, Speaker D: So we can typically we provide not just a technical service for the projects and the customers, we also provide a lot of these consulting work for them. For example, how like life is for them. A lot of them we are doing gaming, social different sectors like not that crypto native, but we can always give them a lot of advice on BD set up connections. And sometimes also the experience we share with them on this marketing and community, how to handle the crypto native community. And beyond that it's also something, as Amre mentioned, the restricted roll up is definitely something new, which not part of the raw service. And so in that case, like our side, apart from the technology provisioning, we also have them to coordinate our operator onboarding side. We also need to coordinate, you know.
00:24:24.670 - 00:25:01.084, Speaker D: Right. A lot of this kind of sort of the delegation to find this enough, you know. Right. This TVL for to support this AV's. As you can see in general, like not just a pure setup, the sequencer or a bunch of these nodes for the roller itself, but it's also a bunch of the consulting work on BD marketing and beyond that definitely a lot of support on like operation onboarding and also this delegation. Delegation onboarding, yeah.
00:25:08.044 - 00:25:11.504, Speaker A: Gajesh, did you want to chime in? I think, yeah, sure thing.
00:25:11.804 - 00:25:22.744, Speaker B: Yeah, I had one question. So how, how do you see like consumers with like no wallet experience, like using these like gaming or like some other like consumer focused roller?
00:25:25.164 - 00:25:48.202, Speaker D: Yeah, it's a really good question. Like for the past two years we collaborated with a lot of these gaming companies. Like two of them are quite big. One is called double jump. Like they are holding a lot of ips from Saiga Bandai Ub soft. Like the second one is exterior. We just launched the receipt roller for them.
00:25:48.202 - 00:26:30.462, Speaker D: They are backed by fenplast and also binance. So for them, as you just asked, typical the requirements and requests from quite different. For most of these beaming companies or projects, what they need is a really super fast rollout. Basically, if it's a two second, I think that's the maximum block time for them. Most of them, they really want like sub second. And sometimes, as you mentioned, for consumer, they also want these account abstractions natively for their users. Either they want zero gas or even there's a gas, it should be super low, less than one, like $0.01
00:26:30.462 - 00:26:55.326, Speaker D: or something. So. And at the same time with account abstraction, basically they will subsidize the cost for the users. So these are like sort of very special requests compared to the traditional, like general purpose l two s. Right. As well like either for op midnight or arbitram one. Typically the customers we serve for these sort of general purpose, right.
00:26:55.326 - 00:27:46.174, Speaker D: They are like sort of crypto native users. We do trading on DeFi protocols and we also interact with different sort of these applications, native crypto applications on the chains. But for gaming these kind of app chain app roll ups, what they want is sort of like a super fast shared platform for the users. So they will handle the account abstraction. And at the same time they want the performance super good and probably better sub second latency, and if possible, Jamiki zero gas. So in that case, as you can see, the experience for the users or for the players is quite different from our crypto native users. We can wait for a few minutes just for confirmation, but for the players they want something instantly.
00:27:46.174 - 00:28:29.392, Speaker D: They can't wait for over 1 second or 2 seconds. So that's something when we provide like some of the roll ups or research roll out. For the gaming projects especially, they come from these web two background. So what they need is definitely different from the crypto native projects. By the same time, I feel like I also read the blogs from Nader for some time. I feel like we are at the tipping point right now for infrastructure. We can make it super fast and super scalable and like probably in the next few years you can see the convergence between these crypto native infrastructure and also the web two applications.
00:28:29.392 - 00:29:03.932, Speaker D: We can probably find some sweet spot between. I mean, not just like we right now. Right. As most of the crypto native project, we sort of like assume the users can wait for long period of time for fidelity. And by the same time for web two users, the user experience or the request is completely different from the current infrastructure we can provide. So that's something like sort of the experience we learned for the past two years, providing the support and also the rollout for the gaming rollouts.
00:29:03.988 - 00:29:42.418, Speaker C: Yeah. If I just wanted to add one sentence to it, I would say we are still not, to be honest with you, we are still not at a place where you see huge consumer facing applications quite yet. You know. Yes, we are seeing gaming as the one sector, but maybe Frentek was the one. People were claiming to be the consumer facing application of crypto, but like almost everyone using frantic were mostly decent people. Right. So I would say the real consumer facing app in the sense that the way you and, you know, my mother or your father uses, let's say Google, Google Map or whatever, Uber, it's not there yet.
00:29:42.418 - 00:30:01.778, Speaker C: Right. So I think it's still, it's. Again, it's also, we have to blame infra as well. The infra is still in a stage where, you know, in order to build a truly consumer facing application where blockchain completely abstracts away, where people don't even see and feel that there's a blockchain behind it. We're still not quite there yet. I think it will take a little more experiments for us to get there.
00:30:01.946 - 00:30:51.194, Speaker A: Yeah, I think we're getting there. I mean, I would also point out that Farcaster ecosystem has some really high quality apps and they are more accessible than something like friendtech that costs money to even, to even sign up. Also lens protocol. And I think social is a big one there because like social has 5 billion users and touches on so many use cases. So, like when you build something like GitHub, you don't think of it as a social app, but in reality it has social features where you have a profile and you follow people and things like that. So yeah, I think I would definitely throw in their social use cases because they have very similar qualities to gaming in terms of speed. You want gasless free transactions, and you often want all of that abstracted away.
00:30:51.194 - 00:31:36.234, Speaker A: But let's move on. Actually, I got ahead of myself. I had a few basic questions about Eigen layer and your experience building on Eigen layer. And then I have a few more alt layer specific questions. So I guess the first one was like, when you were thinking through this idea, and you came to the conclusion that this would be a cool value proposition and no one's doing it. Was it before Eigen layer was at the top of your mind? Or was it based on your understanding of how eigen layer like functions and enables specific things? I guess the question is like, was this something you wanted to build before Eigen layer existed already? Or is this something that kind of was an idea based on what was enabled through Eigen layer?
00:31:37.374 - 00:32:20.548, Speaker D: So I can share a little bit, like sort of the story about it. It's like since we started to do earlier, back in 2021, as Amir mentioned, we have our own stack. And at that time we also. So we're also trying to build some decentralized verification network natively for all the roll ups or the application roll out. We spin off. Sort of like at that time, we call that layer, it's called a beacon layer. And if you still can find some old documentation from our old website, you can still find these information or the blog post about it.
00:32:20.548 - 00:33:25.574, Speaker D: So the beacon layer is basically used for decentralized verification, decentralized sequencing, and also faster, finite. And after that, I had a lot of calls and conversation with Sriram. And basically at that time, because most of the features for Eigen layer, as you mentioned, were not there yet, but we already started a lot of conversation, probably we can move this beacon layer into ABS of the Eigen layer. That was a discussion around 2022, and then in 2023. So we can see, okay, Eigen can really have something working, right. And concretely, especially inside our team, we had a lot of discussion on how to really sort of migrate this beacon layer as a separate sort of a network into something with Eigen layer. Because, you know, right, all the benefits of Eigen layer, like shared security and also much easier to bootstrap network.
00:33:25.574 - 00:34:06.680, Speaker D: There's so many benefits, advantages. And then until I sort of around this last time, I think last year, token 2049, Singapore, I had another conversation with SRAM after that, it's dev connect in Istanbul. And then we had like a few hour conversation at night. And then we figured out, okay, it's the right timing to basically we convert the decant layer into something. As we mentioned, this risky roller concept that how really we have this concept at the beginning. It's already for decentralized verification, fast, finite and decentralized sequencing. But it's really about implementation.
00:34:06.680 - 00:35:06.260, Speaker D: Either we can make it a separate network, we can make it a post network, use our token to secure the network. Oh, we can leverage the existing security from the Ethereum, from the Eigen layer platform, to build a bunch of EDS to basically achieve the goal. It's the same goal by the same, but as you can see, it's a different implementation, but the security level and decentralization definitely much better with Eigen layer. So that's why. So since last year, we started to build this rested roller, and the main goal is still to achieve the decentralization and the security for all the different roller stacks. As I just mentioned, the Eigen is super powerful, and we sort of figure out, okay, all the components and the features we can review natively on top of it. Eigen layer.
00:35:06.322 - 00:35:06.964, Speaker C: Yeah.
00:35:07.784 - 00:35:28.004, Speaker A: So what were some of the like, challenges that you would say when you started looking at how actually building an AV's functions in terms of kind of starting from scratch and not really knowing our smart contracts at all, and what were maybe some of the things that you might tell someone watching if they're looking to build their first AV's?
00:35:29.904 - 00:36:24.524, Speaker D: I think our experience was a little bit different because we had access to our private repos since day one. And we basically look at all the smart contracts and all different versions in the early days. And for us, we even sort of homemade a bunch of the smart contracts on top of very old smart contracts until we figure out, okay, it's sort of like around the right timing to launch at midnight. So we rebase almost everything, we re implement almost everything based on the sort of the min map version of the Eigen layer contract. So I think that's a difficult part, I mean, even for some beginners. So one thing, like, they have to work on the stable release. You can't really look at the old version.
00:36:24.524 - 00:37:11.836, Speaker D: You must keep track of the latest release. Otherwise, you know, right, there are a lot of patches to the old version, and sometimes interface is different, so it'd be great. First thing you look at the stable release. And the second thing, like, I believe a lot of developers need to basically rethink the Eigen layer, the EBS as a new sort of way or new framework to develop applications or networks. It's completely different from like smart contracts or smart contract deployment, or these, even these pos or cosmos or subscript development. It's a new paradigm. So typical.
00:37:11.836 - 00:37:57.278, Speaker D: I told people it's a paradigm shifts. Like once you build Abs, you should forget about your previously like experience in develop, developing smart contracts or networks. You should really make sure you can build everything natively using EV's contract and also the operator. Because I also learned from some other friends that they're also building EV's right. They are close friends at the beginning because most of developers, they still have their own mindset of how to build technical POS network. They need to figure out their own consensus protocol. But if you build something natively with ABS, so it already has this BLS signature aggregation of all things.
00:37:57.278 - 00:38:31.410, Speaker D: And also this on chain contract for basically the node or the operator registration and also deregistration. So esoteric itself is quite a complete and a comprehensive framework for you to build a new network. So that's something I believe it's most difficult part you have to change developer mind side. Make sure they need to think ABS natively instead of migrate some old network into it.
00:38:31.562 - 00:39:10.076, Speaker A: Yeah, that's a good point. I think that's something that we need to do a lot of work on and improve on our end. It's essentially providing more of that information and knowledge and more reference architectures that maybe are really good places to just start building and get that mental model. So they can then apply that to the domain that they'd like to build in as opposed to trying to, I don't know, re engineer an existing open source project like we have. Like Eigen DA is such a massive AV's even incredible squaring, which is kind of our main go to, is still a little bit. It's a. It's a large amount of code, actually, for someone to parse.
00:39:10.076 - 00:39:30.420, Speaker A: So I think like, providing better resources would help people kind of understand that better. Absolutely. Yeah. So which. So you mentioned there were two mock abs's already live on Mainnet. I'm on the Eigen layer dashboard. And I should know this, but I'm curious, other than alt layer mock, which is the other one?
00:39:30.612 - 00:39:32.710, Speaker C: It's called exterior mock.
00:39:32.772 - 00:39:45.854, Speaker A: Oh, exterior mark. Right when you said that. I see it. Okay, cool. Okay. Okay. Beyond that, like, which teams are building with alt layer that are publicly available to just reference right now, just out of curiosity.
00:39:46.874 - 00:40:10.860, Speaker C: So at the moment, these are the two avss that live. The all clear mark is the one that serves op mainnet today. So it basically is a fast, finite layer for op mainet and exterior Mac is the one that is for app specific exterior roll ups. Exterior roll up is an op stack roll up. So it's a dedicated chain for exterior, which is a gaming company. And this exterior mark serves that roll up. So these are the two ones that are public.
00:40:10.860 - 00:40:11.644, Speaker C: But we have.
00:40:11.724 - 00:40:17.984, Speaker A: But you also have other teams that have like been announced that are building maybe just roll ups that are not restrict roll ups.
00:40:18.284 - 00:40:55.488, Speaker D: Yeah, there are some rpas. Yeah. Also as you just mentioned, right on the social category, we are also working closely with cyber connect. And soon we will announce the very first midnight using Eigenva, something like that. And after that we will also have this reset roller for them. And beyond that, also on the defi category, as you can see, we will work closely with dodo to launch their l three using arbitram orbit. And there will be a lot of very interesting DeFi protocols on it.
00:40:55.488 - 00:41:43.780, Speaker D: Super. I mean, you will see like, it's almost the same user experience when you do the trading on these kind of DAX compared to the centralized exchange. There are also some other protocols like doing AI beeping. And some of them also reach out to out to us to build BTC out tools. I will say, like, basically we already have so many different projects in different categories. Is that like as Amre just mentioned, right. It takes a little bit time to unborn one by one to basically as ABS and sometimes, you know.
00:41:43.780 - 00:42:19.668, Speaker D: Right. A lot of new technology. For example, Hydenva just launched midnight like around two weeks ago. It still requires some time to make it very stable. And at the same time, you know, right, op stack is making a lot of major upgrade and polygon, CDK also making a lot of major upgrade. So the thing is, like in this space, right. I feel like right now every project is super active and either in this roll up stack space, everyone is competing against each other just to make new updates and new progress.
00:42:19.668 - 00:42:55.752, Speaker D: And today, right, Ibtron announced that they will also have some major breakthrough on their sort of stylus. So later they may support multiple vms. And also on DSL, you know, it's very, very competitive. And at the same time, like, I can share a little bit more on the app roll up side. So basically, so as they say, there are lots of applications, they have lots of users, typically like over like 1 million users. So that's why they need roll up. If they put the application on general purpose.
00:42:55.752 - 00:43:05.108, Speaker D: L two, right, or l one, definitely the users will suffer from these sort of guests cost and also the cost.
00:43:05.196 - 00:43:35.714, Speaker A: I mean, the best analogy is if you look at a traditional web two application, it's using its own database. It would be insane to assume that it would share a database or a server infrastructure with another application. And these apps are having millions of users, tens of millions of users, but yeah. And the shared networks, you're sharing compute and block space and everything with not only the other users of your application, but all of the users of every other application.
00:43:36.574 - 00:43:44.374, Speaker C: So I think one other application to become super big to basically damage or ruin your user experience. Right?
00:43:44.454 - 00:44:23.174, Speaker A: Yeah, it's happened a lot too. Right? I mean, like an NFT meant happens and then everyone in that's ever deployed to that application suffers and all their users. So I guess another thing just to call out that I thought was really kind of blew my mind was crazy is essentially what you're saying is when you launch a roll up with Alt layer, you're also launching it. You can also launch an AbS that you own or that you're deploying yourself. It's not that you're like sharing this AV's or this mock or the other shared sequencer that you all will have. You're literally deploying your own roll up and you're deploying your own abs.
00:44:23.594 - 00:44:23.994, Speaker D: Correct.
00:44:24.034 - 00:44:25.890, Speaker A: And you all facilitate that. Right?
00:44:26.042 - 00:44:26.774, Speaker C: Correct.
00:44:27.394 - 00:45:00.696, Speaker D: And then it also depends on the partners or the customers because some of them, as I just mentioned, they want these features of real estate roll up. And they also would like to provide sufficient rewards for the delegators and also operators so we can help them to launch EV's. But for some like sort of roller projects, they have their own plan. Got it? Yeah. Yes. Optional. Yeah, yeah.
00:45:00.720 - 00:45:30.174, Speaker A: So I mean, at this point, like the different options you can provide that you can choose from, or you can choose between the actual roll up stack, like ZK sync, optimism, arbitrum, you can choose your like, sequencer, you can choose, I guess, your oracle and all those things block explorers. And now I guess the finality layer is like an option that you can choose along with. What else is there? I guess there's a lot of ways that you can piece these things together.
00:45:30.514 - 00:45:30.826, Speaker D: Yeah.
00:45:30.850 - 00:45:58.714, Speaker C: So there are a number of choices at each stack, right. So you have a stack at the, let's say the DA layer. You have a choice at the execution layer. And now you have a chat choice at the AV's layer. Again, all the three components that we mentioned, squad, Mac, and they are again a model in the sense that you can pick and choose which one you like. So you could still use, let's say, espresso or any of the shared sequences and use mark as your fast layer, for instance. So yeah, it's all modular in the sense that you can pick and choose which one you like.
00:46:03.574 - 00:46:09.274, Speaker A: I think that is most of the questions that I had on my end. Anything else that you want to throw out there?
00:46:10.674 - 00:46:11.854, Speaker B: Oh, nothing really.
00:46:14.794 - 00:46:23.574, Speaker A: So if someone wanted to get started with alt layer, what would they do? And also, is there anything that you all wanted to share as we wrap it up?
00:46:24.314 - 00:47:03.702, Speaker C: So to reach out, if you're building, as Yachti was mentioning, there's, it's not just about tech support or let's say launching roll up. It's also about, hey, is it a good idea? So if you're thinking about even having a roll up, come and talk to us. You know, you can ping us on Twitter. We are almost always available, happy to hop on a call and then we could guide you that maybe roll up is not the right choice for you. Maybe you should definitely have a roll up because otherwise you can't scale or give a good user experience to end users. So come and talk to us on the roll up side, of course. And then if you think that mark would be a good fit for you, we can help spin up a mark for you.
00:47:03.702 - 00:47:31.534, Speaker C: So you don't have to worry about any of the operator onboarding, by the way. That's also that we handle for you. So mostly, if you're launching just a standalone AV's, you know, like classical abss, you have to worry about, oh, now I have to worry about my roll up, I have to worry about my user, I have to worry about my DAC, and then I have to worry about operators and all of that. That also gets handled from our side. So none of that would be, would be a burden to you. In fact, it will give you all sorts of ecosystem benefits. By the way, ebs allows you to bring an ecosystem to towards a Ras.
00:47:31.534 - 00:48:09.654, Speaker C: So by the way, this one that's very important to highlight, and I would like to take a minute for this. So imagine if you're using just a pure RAS service. You're basically using a closed vendor to serve you. And that's closed vendor runs your roll up, offers you some services and that's it. You're missing out on ecosystem marketing benefits. The benefit of getting your community engaged with roll up and mark and restate Rob is one way to do that, but it opens up the entire system to everyone else that may have, let's say, Steve, that may have ether lying around, they can come and secure. You can have a community build up quite quickly, which you won't have in a closed vendor locked system like classical rust.
00:48:12.994 - 00:48:13.546, Speaker A: Okay.
00:48:13.610 - 00:48:57.472, Speaker D: For me, yeah, I just want to mention like, I feel like we are at the tipping point. So we are building infrastructure and the infrastructure of infrastructure and at the same time, like, not just ourselves, we are also working with a lot of partners to looking for. To look for basically all the future applications, the crypto native applications that can really have millions of users. So in that case, we can really bring the crypto to the mainstream. So that's something like basically the vision behind all year. So we want to scale the infrastructure, the angle that. We also want to scale the applications.
00:48:57.472 - 00:49:02.884, Speaker D: In the end, we can bring the sort of the blockchain to mainstream. Yeah.
00:49:04.624 - 00:49:23.346, Speaker A: Yeah. I'm really excited about the application layer. That's kind of the main thing that I've worked on most of my career. But really the intersection, I guess, of backend or in this case, protocol and front end is especially exciting. But yeah, you have to have one before the. You can have the other. But, um.
00:49:23.346 - 00:49:58.870, Speaker A: But yeah, this has been really great. I appreciate your time coming on and we will be, like I mentioned having a lot more of these, but also if you missed the beginning of this, we're going to be uploading everything to YouTube. So we're going to have an infinite layers YouTube playlist with all of the videos from all the interviews that we're going to have. So keep an eye out for, um, you know, updates when we do that and share that and have more announcements for new guests in the future. So yeah, that's it. That ends this interview. So thanks again for coming on and thanks for watching and we will see you next time.
00:49:59.062 - 00:50:00.014, Speaker C: Thank you very much.
00:50:00.094 - 00:50:02.494, Speaker D: Yeah, thank you everyone. See you next time.
