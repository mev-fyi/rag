00:00:00.330 - 00:00:16.094, Speaker A: Hello, beautiful people. I see that a lot of you have been sitting down all day. Should we, you know, stand up and do a little bit of stretch, you know, like maybe jumping Jack? No, no. Come on, come on. Come on, guys. Let's do it. There you go.
00:00:16.094 - 00:00:31.480, Speaker A: There you go. All right. It's good for your own health. So very, very good. So, yeah, basically what happened was last night at 12:00 a.m. My team asked me, oh, Jesse, please do a presentation tomorrow. I'm like, what? I have, like, 8 hours.
00:00:31.480 - 00:01:08.340, Speaker A: So I quickly put together a bunch of slides with the help of my colleagues. So hopefully this will be a fun one. Yeah. So, basically, today I will be talking to you about, what can you build on Eigen layer? What is the Eigen layer, abs ecosystem look like? Because 100 days ago, I joined as the ecosystem lead at Eigenlaire. Back then, I was like, what is an avs? Can you raise a hand if you know what avs is? Wow. I'm actually kind of impressed. Usually, I don't get this.
00:01:08.340 - 00:01:31.510, Speaker A: Yeah, so this is me. Yeah. Like 100 days ago, I joined. And can you raise your hand if you know what eigenvalue is? If you can honestly explain what eigenvalue is? Okay, good. So I have this version that people tend to click very fast. I can explain Eigenvaluer in two sentences. So, what is Eigenvaluer? Eigen layer.
00:01:31.510 - 00:01:57.634, Speaker A: Imagine you have 900,000 Ethereum validators. They have all these computers. They can do a lot more tasks beyond what they can do now at Ethereum. So Eigenvaluer creates this job marketplace for these Ethereum validators to do additional tasks and earn additional rewards. And if they don't do it correctly, then they get slashed and punished. Super simple avs. Yeah.
00:01:57.634 - 00:02:25.846, Speaker A: So, Eigen layer is a marketplace for Ethereum validators to run new, cool things. And I'll be talking about what these new cool things are. Avs actively valid. A service for people who don't know. Some people call them Eigen apps, essentially what these new cool things might be, which I'll be talking about. So, yeah, what unicorn ideas can you build on Eigen layer? Here's some beautiful unicorns for you guys. We're very ethereum centric, so we like unicorns.
00:02:25.846 - 00:02:54.718, Speaker A: All right, roll up services. You're very familiar with a lot of these, so I would just speed through them really fast. Decentralized sequencing, data availability, fast finality. So many graphics watcher network bridges. Oh, man, we can talk about a lot of these, too, if you want. To learn about their designs. There's a bunch more, right? Oracles centralized storage keeper networks.
00:02:54.718 - 00:03:41.762, Speaker A: So what are the more out of the box ideas? Because I want to encourage you to think beyond these normal things that we talk about. Apply cryptography. Threshold fhe so imagine having decentralized set of nodes for running threshold fhe, where the nodes will perform functions on data without knowing the entirety of the data. You would have the system where the users would send a function to be computed without revealing the underlying data. So the users would essentially send the encrypted input to the eigler node operators. Your node operators would essentially send back to the user the decrypted content afterwards. Other things.
00:03:41.762 - 00:04:28.018, Speaker A: Threshold cryptography, you can run things like where you essentially run a commit reveal protection against targeted front running, where the proposers would make a commitment saying that I will not steal your mev if you send me all the data. Right. Things like Te committees. So currently a single TE is super prone to side channel attacks. Can we run this committee that consists of multiple Te nodes with eigen layer where if they reach a quorum, then you would perform certain action coprocessor. This is a super popular term that's popularized by Esun, but many people are using this term in the Zk context. What are the other type of coprocessors? Right.
00:04:28.018 - 00:05:00.990, Speaker A: So you have these beautiful unicorns again. Essentially you can do AI inferencing. For example, for example, you as a system would offer the users to use AI to interact with the system. Say that you're running uniswap v four hooks. The traders would send the prompts and queries to essentially their trading strategy to the Eigen layer node operators, which runs the AI agents for trading. And then the output is used for doing the actual trade. And what do you get from that? You get three things.
00:05:00.990 - 00:05:37.438, Speaker A: The first one is program integrity. You get economic trust for computational integrity. If these AI agents somehow stole your trade secret or stole your profit or whatever, right. The other one is session privacy. You are able to use these decentralized set of nodes to do prompt privacy. So essentially, whenever you give the trade strategy in to the agents, because they're all split up, no one has a comprehensive overview of your trade strategy. And the third is more far fetched.
00:05:37.438 - 00:06:37.274, Speaker A: It's the federated learning and essentially using decentralization to train models while ensuring your data privacy. And because the training model data set is very large, this is more far fetched. It's harder to do, but eventually one day, what are the other coprocessors there's a privacy coprocessor like essentially enabling some sort of input output off chain compute with eigenvalue nodes such that you would send in some transaction, they will perform it and then they would give you the output out. And this process is not observable by. Right, you have the normal ZK coprocessor. How do you run trustless compute off chain? With ZK provers and verifiers they would do verification of signature, what Shimo just said with Nebra. Or you can do, you know, something like optimistic ZK, which instead of running ZK all the time, you would only submit a ZK proof if there's fraud found.
00:06:37.274 - 00:07:42.970, Speaker A: And that greatly saves gas and just costs generally. Another one is databases. So how do you have these private access to database where, because the keys that you ask for for the according value is only seen by some of the nodes, you get to sort of protect yourself in the process in terms of not revealing all the data that you're asking for. Another thing is MEV management, and this one I think a lot of people think about already, but essentially you have things like Mevboost plus and Plus plus, which introduces a partial block auction design beyond mevboost with a full block auction. And this increases the censorship resistance of the entire network because now proposers are able to propose event driven activation, having if this, then that on chain, right. Having a set of eggler validators opting into saying, I will make sure that I'll watch what you want me to do, and I will perform certain actions when a condition is met. Block space auction.
00:07:42.970 - 00:08:18.406, Speaker A: Right. How do you essentially, I think there's like 32 next block proposals are publicly shown. How do you get them to auction their block space beforehand instead of just default opting into Mapboost with full block auction. Right. There's again threshold encryption protection against front running sandwich attacks, making the proposers create like a credible commitment beforehand to not attack you or steal your mev and whatnot. So there are some more out of the box abs ideas. The first one is data labeling.
00:08:18.406 - 00:09:06.730, Speaker A: Think about whenever you're using your phone playing axio infinity, what you're really doing is per human, per device verification of certain data. Essentially whenever you do CaptchA, this is data labeling for the company. What if we can have tokenized CAPTCHA with Eigenlair? The other one is tokenized programming bounties, right? Like essentially making a set of computers and programmers run certain functions and get an output and reward them with bounties, right. Another one is decentralized front end. Currently, that is something that is not very decentralized in crypto, but you're able to essentially have a set of nodes distributed across the world and run these front ends and store them. Right. And it would achieve censorship resistance.
00:09:06.730 - 00:10:14.622, Speaker A: And the one thing I want to note, that all of these are networks, but people are asked, okay, so if I use eigenlear, does that mean it replaces my own network? That is not true, because you can deploy your own network that still accrues value while inheriting Ethereum security. How? We have a thing called dual staking. Dual staking is the fact of that you're able to stake a POS network with two tokens, your own native token and an external token like Eigen layer's restake to ETH. With that, you're able to simplify your bootstrapping process. ETH can be used now to bootstrap your network initially, and your native token will still accrue value. With this two set of validators, you're able to customize the type of consensus that you want, achieve a certain type of quorum before your network proceeds finality. And the last but not least, the benefit of this is it mitigates death spiral, right? Because with your own network token, it's very likely that it's very volatile.
00:10:14.622 - 00:11:12.446, Speaker A: So in the case of volatility, like a token price crash, you still have ETH, which is a much more stable asset to hedge against the death spiral. So this really reminds me of one thing, which is you have a pen and you have a pineapple. All right, you guys get it? Okay? My intern Mamie did that. And bringing all of this back, the last slide, this picture represents two things. The first thing is we have so many computers around the world, what can we do with it, right? Essentially, I think it represents that. Eigenvalue represents that. The future dream that I would love to see is what if we had Starlink satellites and all these super crazy out there machines running the operators? And what type of task would you let them do? I think this is a super out of the box.
00:11:12.446 - 00:11:33.140, Speaker A: I don't know when we will achieve this, but I think this is a dream that can be realized with Eigler. And. Yeah, so that's it. If you want to get in touch and talk about crazy ideas, this is me on Twitter. You can dm me. We're very friendly, happy to chat, and we can make a friend. Thank you.
