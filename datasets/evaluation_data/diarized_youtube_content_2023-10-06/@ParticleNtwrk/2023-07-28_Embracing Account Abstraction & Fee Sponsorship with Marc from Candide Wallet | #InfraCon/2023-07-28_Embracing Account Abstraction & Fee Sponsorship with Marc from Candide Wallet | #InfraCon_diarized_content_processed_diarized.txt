00:00:01.200 - 00:00:03.154, Speaker A: And fee sponsorship.
00:00:55.414 - 00:01:49.124, Speaker B: Hi everyone, thank you for coming to my TED talk. We'll be speaking about a kind abstraction, I think. I believe most of you are here for the last panel. Can I have a raise of hands about that kind of abstraction just a little bit? Okay, so anyone familiar with that kind of abstraction? Okay, so I'm not going to be speaking a lot about ERC 47. I'll be speaking about specific components and I'll give a quick intro. I have 50 minutes, so I'll be quick and I'll try to give a few minutes at the end questions so quickly. Account abstractions, components if you are just to summarize it, I can just put into five components the signer app, which is usually a mobile app or an extension, or you have seen embedded wallets recently.
00:01:49.124 - 00:02:33.764, Speaker B: You have the entry point contract, which is the global entry point contract everybody is using. And you have accounts which it could be a safe account contract account, it could be any type of accounts. You have bunders, which is the validators that take this new type of transactions on account abstraction for user operations and they submit them on chain. And then the last component I'll be speaking about are paymasters, which is the entity that will be responsible for paying gas on behalf of the user. And this is one of the most exciting components for us at Candid. I didn't give an intro of what we do. So we do, we do an account of tracking mobile wallet and we also do infrastructure for others to build smart contract wallets at knit Labs.
00:02:33.764 - 00:03:18.150, Speaker B: So a little bit of history, meta transaction or sponsoring Gaz isn't something new. Like a lot of players in the field have been working a lot to make meta transaction happen. Specifically ERC 27 71, which allows Dapps to integrate a way to send meta transactions for what is like metamask or EOS. The problem is, dapps had to do a lot of the work they had to do like integrate and send emitted transactions themselves. And this is where pretty much it stopped. Every time someone makes a new Dapp Uniswap actually have to do the meta transaction themselves. But now with 4.57
00:03:18.150 - 00:04:12.954, Speaker B: you can call it smart accounts, enabling meta transactions. Not only you get all the functionality of smart accounts in the logic of programmable accounts, but you also do come in with meta transactions, which is the paymaster component. So I'll be speaking about different types of paymasters. The first one is token Paymaster. Maybe you're familiar with it, you saw the many use cases for it essentially enables the user to pay gas in an ERC 20. So the most obvious use case, you have a wallet and you don't want to introduce the concept of native token or ETH and you just let the user deposit USDC and let them pay gas in your SDC. This is very obvious use case that many wallets enabled today and pay a token in a stablecoin that their onramp provider provided.
00:04:12.954 - 00:04:53.770, Speaker B: Another use case is giving governance tokens a utility as gas. So think of NErC 20 can be used as gas. If a user has some meme coins they want to get rid of, they can pay gas in it. If you're a protocol that you want to give utility to your token, it can be used as gas payments. And the beautiful thing about it is that as a DAP or a protocol, you don't have to do anything code wise. You just go talk to wallets or pay masters and tell them hey, I want to use my ERC 20 as token payment across all participating wallets. Second type of paymasters verifying paymasters.
00:04:53.770 - 00:05:51.186, Speaker B: This type of paymasters allows you to. It's an option in logic validation and it's based on condition and I'll explain a few use cases, but essentially it allows for a service to say, hey, I see this user operation by wallet. Do I sponsor it or not? If all good passes condition, then it returns it back with its signature and says, okay, I'm going to be sponsoring this transaction. So where does it come from? So where is it used? So DaP onboarding, this is very obvious because when you're a DAP, what is your user retention? If a user doesn't have a native token, I think by the time they go to an exchange, buy the ETH and then come back to your wallet, you pretty much lost your user. So that's the. You have around 20% user retention in that number. I came up with it.
00:05:51.186 - 00:06:35.222, Speaker B: I don't think it's real, but just a guesstimate. If the user is new to crypto, then you pretty much have a 1% user retention. So you can consider sponsoring gas as your cost of acquisition. And if most users are, if we're really going through L2 s, and this is a screenshot I got today from all the L2 s, like l two fees. Even if we say $1 is the cost that I'm going to be sponsoring the first transaction for a user, you can consider it as a cost of acquisition and also cost of retention and also the cost of transaction fees that is much less than what Visa and Mastercard charges. Because if you think about it. The visa charges immersion 3% transaction fees.
00:06:35.222 - 00:07:22.530, Speaker B: And this is what you'd be paying, you'll be sponsoring on your dapp at the cost of retention for your users. Another type of paymasters, privacy preserving paymasters. The idea is that if you enable a paymaster to sponsor gas for accounts, you can create private accounts in that sense. And maybe you've seen how tornado cash works, but the way it works is that if you deposit into NATO cash, if you withdraw on a new address, you need the relayer because you don't have ETH in that address. So you need a relayer to withdraw on your behalf. And let's say these relayers are sanctioned. You can use Paymasters to sponsor the gas and use the same network of ERC 437 to act as a relayer.
00:07:22.530 - 00:08:02.476, Speaker B: And it's literally a censorship resistant way to use Tornado cache and have private accounts in that transaction fee of Paymaster. So let's say you have a user who wants to pay with credit cards, and the Paymaster can pay it on their behalf. You can have micro payments. These micro payments can. Okay, I'm gonna pay you $2 with my credit card, and then the Paymaster is gonna pay for me. Cross roll up paymasters, you have users, you have a new chain, and they want you to discover that new roll up. So paymasters can pay for users on a different chain, and let's say user on optimism.
00:08:02.476 - 00:08:24.054, Speaker B: They don't have any income on arbitrary. They can pay on optimism and start transacting on arbitram without going through a bridge. And it would be instant gas payments on there too. And that's it. Yeah. So I hope I was quick, and I'll leave a few questions for the audience.
00:08:26.674 - 00:08:31.970, Speaker A: Thank you so much. Any questions? Let me give you the microphone.
00:08:32.162 - 00:09:02.104, Speaker B: I can shout. Yeah, you can shout. How does exactly the cross network paymaster works? That's a good question. So you can think of Paymasters as. It's a service. It doesn't have to be decentralized because a user can always eat with their account. So paycheon Os are a centralized service, and they could.
00:09:02.104 - 00:09:40.880, Speaker B: Okay, if they're operating on a chain, they can also operate on a different chain, and they can have, like, an option logic that says, okay, if I have someone pays me on that, on that specific chain, I'll pay them on the option. There's no need for complex, like, bridging equations or cross meshing stuff. It's really a central piece where Paymaster offers this service for an easy to use gas for other rollers. Yep. What is the incentive for Paymaster? So the incentive is for the Paymaster. They offering a service. So if you're.
00:09:40.880 - 00:10:08.752, Speaker B: We can talk about the different Paymasters here. But for example, a token paymaster, they give you a service. You give me USDC, I pay with you and ETH, but I'll charge a little bit of commission. You won't see that much on Rollox, but it helps me like, okay, avoid, let's say the price fluctuation on ETH and I'll handle this for you. For gases transactions, this is where Das comes in. You can think of Das as merchants. You go pay on a credit card.
00:10:08.752 - 00:10:43.462, Speaker B: Merchant always covers the fees. At the end of the day it's the client who pays it. But that's another question. But the DAS sponsored the guy, the 3% like Visa and the same thing for Das. They'll be paying the paymaster the gas fees plus an extra fee to provide the service for all wallets. Does that make sense? Yeah. The incentive, it's an off screen.
00:10:43.462 - 00:11:07.684, Speaker B: You can think of it as a back end specifically verifying variables. They don't spin up nodes. The node part is the bunder. So this is a different, this is a different entity. They are the validators and there's a whole incentive around like bounders and the way it works. But paymasters are simply like paying the gas. That's the fitting.
00:11:07.684 - 00:11:14.084, Speaker B: Does that answer your question? Maybe you can try. Yep.
00:11:15.424 - 00:11:25.232, Speaker A: And so you are able to find Mark's information in the telegram. If you need direct information from him. There's one more question.
00:11:25.328 - 00:11:50.944, Speaker B: Yep. There's one more question. Yes. Yeah. Are you making all of those features or are you focusing on some of those features? So candid. We're focusing on the first two use cases, which is verifying Paymaster gases token Paymaster and privacy preserving Paymasters. The cross roller paymaster will be rolling out in the future.
00:11:54.304 - 00:12:24.234, Speaker A: Any other questions? Thank you so much. Thank you, Mark. And we do have your information in Telegram group. So if you guys have additional questions in the future, make sure you drop in the chat and we will take five minutes of break. And next up we are going to have. Oh actually we're not going to have a break. Our panel is already here so we're going to have a developer Dao to give us a panel.
00:12:24.234 - 00:12:35.274, Speaker A: Give me 1 second. I will take the microphone. Microphone from you.
00:12:38.694 - 00:12:40.114, Speaker B: I think. Continue.
00:12:42.254 - 00:12:45.154, Speaker A: Yeah, sure, if you don't want entertaining them.
00:12:48.184 - 00:13:42.556, Speaker B: I lost the mic. So I mean we covered quickly like paymasters, but there's a lot of exciting things in account abstraction. The previous panel talked about specifically logic in securing an account. Think of seed phrases, which I think it's the most horrible ux to secure an account. So securing accounts ethereum is much more challenging than just like an email and a password like Google. So the previous comments spoke about securing tape, which I think really bypasses the security of the user experience from a web tool perspective. And the way it works is that your secure in table biometrics acts as a private key and you can log in instantly with an account and it's really much faster than a web two experience.
00:13:42.556 - 00:13:52.020, Speaker B: And you should look it up if you're interested. Passkey's implementation or securing securing account, I guess depends.
00:13:52.092 - 00:14:11.654, Speaker A: Thank you so much, Mark. Thank you. That's my gold star. All right, guys, you give another two minute talk. Thank you so much. Yeah, I can just leave it over here. All right, so our next panel, developer Dow.
00:14:11.654 - 00:14:36.994, Speaker A: Please welcome to the stage. We have three members as well. Kickstarter Dap had Dan and Rinza Momin, three powerhouse from the developer Dao. Please take a seat. And then Raha from Bikonomi is going to be our moderator and they will be talking about fostering, supporting community.
