00:00:00.250 - 00:00:00.462, Speaker A: Yeah.
00:00:00.516 - 00:00:04.494, Speaker B: Q one. Q two is still good to go.
00:00:04.692 - 00:00:08.222, Speaker C: Do you have any comments to make on what Yvonne just pointed up?
00:00:08.276 - 00:00:14.414, Speaker A: I'll just cut it out when I said it. And Tina was like, q two is good to go. That's when you put it in as a clip. 3 seconds. Bomb. Let's go.
00:00:14.452 - 00:00:15.040, Speaker B: No.
00:00:18.370 - 00:00:59.518, Speaker C: Welcome back to the Defiant. I'm your host, Alp. Today we're diving into a complex topic that requires a bit of sense to fully grasp. It's a subject that requires diligent study, multiple readings and cross referencing various sources to truly grasp. And once it clicks, as our guest today mentions, you will think to yourself, why didn't I come up with this? This is the journey of researching Eigen layer. In this episode, our aim is to provide you with a comprehensive guide to Eigen layer, what it is, its purpose, the problems it addresses, the latest developments on the horizon, the risks associated with restaking, and much more. Some say he's the greatest counter signal out there.
00:00:59.518 - 00:01:07.214, Speaker C: If he's buying, you better be selling. All we know, he's called Yvonne Gbi. Yvonne, how's it going?
00:01:07.332 - 00:01:34.646, Speaker A: Hi, Al, how you doing? Good to hear from you again. Another episode in the books. Well, about to be. As you know, everybody, Alp doesn't need an intro, but he's had a video as defined. And something you might have not known about him is he has been interning at Boeing for the last two years. But recently, with all the planes crashing down, he decided to fully focus on crypto. So that's what we are doing here today, namely talking about Eigen layer.
00:01:34.646 - 00:02:23.180, Speaker A: All things risk taking risks, shitcoins, launch pads and stuff like that. What I mean with shitcoins yields and launch pads is we will be getting into the specifics of how Abs interact with Eigen layer. What are the developer pain points? That Eigen layer is solving risk parameters, nodes, validators, and everything that related to it. I learned a lot about it myself because basically today me and Alpa are throwing questions at the team and asking the stuff we still didn't fully grasp. So I feel like we pretty much know majority of things we should know at this point, which was very exciting. So I hope you will also learn a lot from this episode. So without further ado, let's jump into the introductions of the team members from Eigen Layer, Tina and Terry, and hear what they have to say.
00:02:26.190 - 00:02:58.130, Speaker B: Yeah, I'm Tina. I work on product and research and I primarily help with the staking and operating team. So primarily our restakers and solo operators. And then the operating firms, as well as work on research and development for communications, go to market and help Teddy with Eigenda. But I'm super excited to chat about Eigen Lair and what we do at Eigen Labs.
00:02:58.210 - 00:03:20.470, Speaker D: And I'm Teddy and I'm a research engineer at Eigen Labs. My background is in tech and distributed systems, and I've been in crypto for three years, but following since 2017. And yeah, super excited to talk about all the things we're doing, but more focused on Eigenda.
00:03:20.550 - 00:03:24.602, Speaker C: Why don't we start off with a brief overview of Eigen layer?
00:03:24.746 - 00:04:18.800, Speaker D: Sure. So where to start? So if you haven't heard about Eigen layer, I can give this sort of top down rundown. Eigen layer is a platform for restaking. The general problem that Sriram and the founders at Eigenlabs saw in the very beginning was that if you ever wanted to start some kind of crypto economic platform, you had this problem of first having to bootstrap a token. Because if you want to incentivize anything, either through slashing or through rewards, you need something to do that incentivization with. And that creates this bootstrapping problem where you can't do anything interesting until you have a token. You can't have a token until you first launch and build up interest in your platform.
00:04:18.800 - 00:05:51.610, Speaker D: And so Eigens layer saw this opportunity to enable what's called restaking with the main token of the Ethereum ecosystem ETH, where people are already staking ETH in huge numbers. I think there's 60 billion or something like that staked ETH today, which secures Ethereum as well as Ethereum l two s. And what you can do with Eigen layer is take your staked ETH, either liquid staked or natively staked, and subject it to additional slashing risks. And in exchange, you can also have the opportunity to earn additional rewards on top of your Ethereum staking rewards. And so Eigen layer works at the intersection of stakers, of course, operators, which are typically the same companies that run validators for Ethereum and other networks who run nodes for what we call AVSs, which is the third leg of the stool. And so AVss are these protocols that register with Eigen layer and make themselves available for operators to serve and transitively available for restakers to delegate stake to. And so these ABS come in a variety of shapes and sizes, because there are many different protocols that are interested in putting assets at stake in exchange for rewards.
00:05:51.610 - 00:07:00.050, Speaker D: But they sort of form these three categories. Operators Restakers and ABS has form this community of Eigen layer which we hope will scale the systems of Ethereum and crypto as a whole way beyond the limitations of one token per ABS. And so I can list out ABS has come in many different forms. This general platform, this primitive of restaking, enables decentralized sequencers, decentralized oracles, decentralized bridges, decentralized challenger networks for optimistic rollups, decentralized provers for CK roll ups. And basically anything that you would ever use a normal token for where you'd have slashing and incentives, you can use Eigen layer for. And so it provides this way to rent security rather than always having to sort of build it on equity.
00:07:00.390 - 00:07:29.738, Speaker A: Makes sense. Thank you. So before jumping into the technicals of slashing risks, right. And how validators run and stuff like that, how was the experience with getting basically those AVs on? What I mean is I've seen some parallels being drawn where people compare Eigen layer as like a launch pad to an extent, because it's about earlier networks rather than, let's say you probably don't envision chainlink or some other bridge coming on right away. They have their own thing already. If they made their own network, for example. Right.
00:07:29.738 - 00:07:57.880, Speaker A: I'm not saying they will do it now, but comparatively speaking, that is kind of a launchpad, right? So the goal of launchpad to an extent, is always to source that new stuff. So from sourcing it, which categories have been the most easy or the most abundant on board? Because as you mentioned yourself. Right, Eddie, there are oracles, there are bridges, there are some deep in type of stuff. So what is it that has been the most easy or the most interesting? Those could be the same thing. Or those can be different.
00:07:58.490 - 00:08:57.234, Speaker B: Yeah. So I do think we already have a number that are ready to launch with us for Abs Testnet that is coming in the next couple of weeks. Those are alt layer, Lagrange, witness chain, ethos, Hyperlane, and primarily it's watchtower networks, state proofs and message passing. So a lot of this is a primary function of what would be supporting the existing reef stakers and operators onlayer. And I think the protocols that you're referencing later, those are also protocols that would potentially need to be onboarded with time. Because why we're doing this in testnet stages, specifically on Goreli, is so that it can be done securely and in a staggered fashion. So I also think there's an element of safety because there's other things at risk.
00:08:57.234 - 00:09:37.474, Speaker B: Like we have over a thousand operators that are validating on Gorely right now on Eigen layer. And that's probably one of the largest operator sets outside of the main Ethereum beacon chain and also over 1 billion in TBL USD equivalent and I think that's 3.5 million each. So with a lot of that power comes responsibility. And like onboarding the Abs that you're mentioning, like Chainlink, that would be something that has to be done gradually because of the responsibility associated with our existing customer base.
00:09:37.592 - 00:10:07.706, Speaker A: It's quite an impressive list from the start. Basically it's really cool without sharing too much back knowledge. Actually you should, but you're free not to. What are the things you offer to them as the things to really make that decision? Because conceptually as a vision, that's why everybody likes it. A vision really is clear, visual really is simple enough, not in a bad way, but in a good way. That people are like okay, makes sense. But still, teams who come in first, they do take that leap of faith to an extent, right? They do add an additional layer of security risk.
00:10:07.706 - 00:10:24.338, Speaker A: Conceptually, not that much. But let's say what are the things you tell them or how do you convince them? Obviously you have social reputation going behind you, that's obvious. But anything specifically that you thought that you found out to be working really well when convincing those teams to do it.
00:10:24.424 - 00:11:15.762, Speaker B: Yeah. So if you think about developing an abs, the benefit of developing in a standalone protocol that isn't associated with Eigen layer at all versus developing one built on Eigen layer is completely different. Building a standalone protocol, not only do you deal with the native token inflation that Teddy referenced prior, building out your own operator set, finding validators and then bootstrapping liquidity is incredibly hard. People don't know this until they're either the founder of their own protocol or they're a developer trying to do this themselves. And the second is the incredible power of dual staking. That would be a possibility for all these abs. So they don't have self flusher or inflation that's attached to their own native token.
00:11:15.762 - 00:11:50.106, Speaker B: They have the ability to dual stake both ETH and this secondary token, and they also have the ability to bootstrap this existing operator set that we have with Eigen layer. And those are two incredible things that not only alleviate a lot of the pressure of bootstrapping their network as a whole, but scaling. So I think there's a lot of benefits of not just being a standalone protocol and building on Eigen layer.
00:11:50.298 - 00:12:15.720, Speaker A: Yeah, the technical bootstrap, that part of the proposition totally makes sense just to come back to what you said with regard to liquidity, bootstrapping and their native emissions. Those don't go anywhere for them though, right? They would have been there anyway. Or am I misunderstanding it? Like, if they plant some emission to be there for the validators, right? In their own native asset, they will still continue doing so. I guess not native in this case, but ERC 20 for instance, right?
00:12:16.730 - 00:12:47.502, Speaker B: If you're launching your own token, you're dealing with the sell pressure or inflation of that token. But ETH is always going to be the secure asset that will give you optionality if you have the ability to dual stake. And I think the ability for these ABs to also use the shared crypto economic security that's been restaked in Eigen layer is also huge because it doesn't have the same volatility as maybe the liquidity attached with their native token.
00:12:47.646 - 00:13:10.780, Speaker A: But to make sure those validators of Eigen layer that are securing those new subnetworks, what's the right way to call them? What do you call them, subnets? Subnetworks? ABS is the term. Okay, cool. They still do the emissions in their own token, right? I'm just making sure that I get that part correctly. So that is the ABS part, right? Sourcing those networks could then give their asset as reward to validators. Is that so?
00:13:11.550 - 00:13:24.410, Speaker B: That actual design is still in development, so that hasn't been determined yet. But the dual staking feature is primarily one of the main features of their potential development on.
00:13:24.560 - 00:13:30.014, Speaker A: So that's restake ETH, right? And then it's their asset. Basically. Those would be the jewelry model.
00:13:30.052 - 00:13:34.590, Speaker B: Okay, so it gives the optionality and that's the main incentive.
00:13:35.570 - 00:14:29.678, Speaker A: Cool. To get more specifics. Let's say in jewel staking, when the other side of the reward is that new token of debt, AVs, right? Specifically, it is given to valid. Is it like streamed into Eigen layer as a middle layer to an extent, or do all validators just get it separately pro rata as it usually works with staking? What is the concrete model with that? If my question makes sense, could you repeat? Let's say I'm a project, right? I make an Abs and I give rewards in my own token, because validators needed to be able to actually choose my network, right? My abs, sorry, to then stake on it, restake on it. So when I give my reward, where exactly does it go? Is it like separately on the validator set that has chosen me to validate on my AVs, or it somehow goes to them even directly? What's the idea with this, just curious.
00:14:29.854 - 00:14:51.590, Speaker D: We see it as separate right now. The reason is because Eigen layer is focused on ETH and we want to, I guess focus there, but it does not close the door to ABS is providing this sort of dual quorum model where they can distribute rewards in their own native token.
00:14:51.930 - 00:15:00.450, Speaker A: So is it me correctly understanding it that the first projects are actually focused on giving the rewards fully in wouldn't.
00:15:00.630 - 00:15:26.770, Speaker B: That design is still in development. So that's something that's been carefully researched by Sriram and the rest of the research team. So it hasn't been decided yet, but the dual staking design has. And that mostly is how we described pyre. So the actual payment design and issuance that you're referencing, that hasn't been finalized yet?
00:15:26.840 - 00:15:38.274, Speaker C: Yeah, we went deep into it real quick. So if we were to take a step back, I'm just going to simply ask what can Eigen layer be used for? Can you name a few use cases for it?
00:15:38.332 - 00:16:53.454, Speaker D: Yeah, sure. So we've been in talks with Altlayer and a variety of other ABS teams that Tina mentioned before. Altlayer is working on this suite of ABS. So multiple ABS's around a sort of new category that they call restaked roll ups, which is the idea is that if you're launching a roll up, it should be easy to spin up all the sort of variety of things as part of a network rather than as part of one infrastructure provider for the sequencer. So they are building an ABS around a decentralized sequencer, which has operators running the sequencer that are registered with Eigen layer, a decentralized fast finality layer where pre confirmations can be given out and there's a sort of improved user experience with that, as well as a decentralized challenger network. So in the case of optimistic roll upS, the entire model is a sequencer is posting batches, but also state routes. And the state routes are assumed to be good if they haven't been disproven over the course of some amount of time, usually a week.
00:16:53.454 - 00:18:26.718, Speaker D: And so these decentralized challenger networks incentivize otherwise uninsentivized challengers to check the math of the sequencer and make sure that the state routes that the sequencer posted were correct. And if not, then provide a challenge and correct the state route so that no assets can be stolen or anything like that. So that's sort of a top level view of restaked rollups. We also have one project we're really excited about is called ethos, which is working to bring restaked Ethereum to the cosmos ecosystem. And so this will work similar to mesh security or interchange security in Cosmos, where entire networks of cosmos nodes for specific cosmos zones can be running on the security basis of eigen layer or delegated restaked Ethereum to specific mean. Having come just recently from a Cosmos startup before Eigen layer, I can tell you that that's something that really improves the bootstrapping model for a Cosmos chain to not have to launch its own token or to be able to look at the biggest pool of non bitcoin liquidity in crypto and be able to draw on that for crypto economic security.
00:18:26.884 - 00:19:14.750, Speaker B: I think another thing that people don't have context of that Teddy also started discussing is launching a blockchain is just incredibly difficult. Like bootstrapping a validator set is really, really difficult. And also getting liquidity one. You have first movers advantage. So a lot of the liquidity that joins only has the incentive of a potential airdrop or rewards later. And a lot of the validators that you see these large blockchains on board are either existing investors or validator firms that they work with in investment capacity. So one thing that's really cool about Eigen layer is the operator working group.
00:19:14.750 - 00:20:12.682, Speaker B: It has this huge breadth of operators that are decentralized across the world. We have a number of solo stakers that have incredible technical experience and developer backgrounds. We have firms that vary from Japan to Turkey, to parts of the EU, to parts of the US. And as I mentioned prior, there's over a thousand of them. And we have these huge operator working group calls where we constantly keep them engaged. So that sourcing process, that's not someone that if you're trying to launch your own blockchain or bootstrap, Eigen layer as a whole, all of that work, that quality assurance work is essentially outsourced. And you maintain a quality of decentralization for your network as a whole and then also for your validator set.
00:20:12.682 - 00:20:25.202, Speaker B: So that's the biggest benefit I see, because you're not risking any of these efforts to speedline your protocol development before.
00:20:25.256 - 00:21:02.790, Speaker A: Jumping into Eigenva, because ALP has the context. And the questions for that, if you don't mind stopping a bit on the slashing part. So when we talk about slashing, where exactly the slashing actually happen? And who determines those rules? Is it like everyone separately? Is it Eigen layer as a protocol? And then you kind of have some subcategories for slashing? And what are the risks associated with slashing? Because to jump into context. I'm a moron in this. And okay, in many other topics as well. Let's be honest, we all know it. The networks adss themselves, right? That's not where the consensus itself is, right? It's kind of like the rules on main chain, if I understand correctly.
00:21:02.790 - 00:21:09.140, Speaker A: I'll shut up in this case. This is the driver into you actually explaining to me how this works, please.
00:21:09.590 - 00:22:29.402, Speaker D: Yeah, sure. So any slashing condition must be what's called objectively attributable, which means that if provided proof, you can actually verify that proof to show that somebody misbehaved in some way or was incompetent. And that's true of any slashing condition on any chain. And one of the properties of that kind of verifiable fraud is that it can be verified outside of the actual operator set or native chain that it's originating on. And so let's say there's an eigenda operator that signs off on a chunk of data, that the person distributing the data claims that this data corresponds to a KZG commitment, and let's say that it actually doesn't. And the operator is supposed to check that. Well, if the operator signs off in receiving this data and storing this data, even though it doesn't correspond to the commitment that it was associated with, then you have this proof, you have the operator's signature alongside this KZG commitment, and the data which can be verified to have been to not match that.
00:22:29.402 - 00:23:44.478, Speaker D: So that proof can be posted on Ethereum. And when we implement slashing for Eigenda will be, this is how it will work. It'll be posted on Ethereum through a standard transaction to the eigenda contracts which interact with the Eigen layer contracts. So these eigenda contracts are registered with Eigen layer and have the authority to tell Eigen layer to slash a particular operator. So at launch, and for at least the near term, any sort of slashing condition that turns out to be invoked by one of the ABS contracts undergoes a seven day window during which the multi sig of eigen layer can potentially interfere with or basically interrupt that slash and prevent it from happening. And this is sort of a safety mechanism to make sure that in the event of some kind of erroneous slashing event, that we wouldn't destroy a lot of value for no reason. But the point of that multisig is to ensure that the slashing mechanism is working as intended, but not to let operators off the hook if they violate slashing conditions.
00:23:44.478 - 00:23:47.518, Speaker D: But yeah, that's the sort of overall.
00:23:47.694 - 00:24:12.602, Speaker A: So if I were to put it into some kind of a graph, right? Let's say the ethereum network is here, right? And they restaked and whatever contracts are on this level, then the AVSSs are on top, and basically everything is glued together with an eigenva in between. Right? So it's neither the AVSs logic, it's neither the main chain contracts. It's really the Eigen da kind of being like a gluing piece in between. As to say, if that makes sense, maybe that's totally wrong.
00:24:12.736 - 00:24:17.194, Speaker D: So eigenda is just an example of an ABS and one which might have a slashing condition.
00:24:17.242 - 00:24:20.990, Speaker A: Okay, so not only ABS is referred to that for the slashing.
00:24:21.490 - 00:24:22.174, Speaker D: No, no.
00:24:22.212 - 00:24:22.800, Speaker A: Okay.
00:24:24.310 - 00:24:40.206, Speaker D: Yeah. So every ABS is going to have its own set of contracts on Ethereum, which manage slashing and rewards. And any person who wants to report fraud is going to send a transaction to those contracts.
00:24:40.398 - 00:24:45.846, Speaker A: Okay, so the slashing basically is a main ethereum chain and. Yeah, okay, makes sense.
00:24:46.028 - 00:25:01.310, Speaker C: So what do you think about the implication of simplifying the process for making projects just benefiting from the Eigen layer through the network and validator sets? What do you think is going to be the outcome of this in the long term?
00:25:01.730 - 00:25:58.426, Speaker B: So you're pointing to probably the belief that people will be launching shitcoins is what I'm saying. I think people are going to do that regardless. That will always happen, and the retail consumer market will always pursue that. They will probably do it on alternative chains. It's probably happening on Tron or avalanche right now. But what I think will happen is that Eigen layer is going to power an incredible amount of applications that potentially are built on top a lot of these abs, and they're built more securely, they have an insurance mechanism to support them, and it'll have more protection for users. So more protections in cost efficiency.
00:25:58.426 - 00:27:34.702, Speaker B: So like on average, transactions will be a lot lower because they'll be built on Eigenda and trading volume won't be burning the same level of ETH fees that they're burning on a protocol like Lira and Avo right now. So it would be drastically decreased on a user front. And then the second benefit as a whole would be that a lot of these protocols that are potentially built on the roll ups that are using Eigenda would be able to provide potentially insurance through mechanisms like fakeshare. So this is something that's kind of probably like a game changer, because insurance really, it doesn't exist in defi, it doesn't exist in the wallet space. And I think we've seen platforms like Nexus mutual attempt to solve this problem and they provide underwriting or capital to defi protocols for a certain summation, but that insurance doesn't really get to the end user. So these slashing contracts that you mentioned and the real accessibility that it's helping to make possible for the end user, that's what I see as the final gate. So it's like really protecting the end user through the insurance mechanism and then the slashing protections that will allocate funds to them at the end because users aren't seeing any of that.
00:27:34.702 - 00:27:55.170, Speaker B: And if we want to really onboard users that understand a typical traditional finance or consumer finance lens, that wouldn't be working in a tech based industry. That's how we have to get them through trust and safety.
00:27:55.750 - 00:28:15.722, Speaker A: When you talk about insurance, are you talking about the insurance of networks malfunctioning or the products and apps built on top of them? Because one, the former, whatever network malfunctions. Right. Those don't happen. That's not how people suffer. Right. It's mostly the contracts on top working or getting hacked. Right, working.
00:28:15.722 - 00:28:18.490, Speaker A: Wrong. So are you also referring to that or no?
00:28:18.640 - 00:28:44.766, Speaker B: Well, actually both. Because if you look at Polygon, Polygon was down because of their validators. So the validator set that I was referencing prior being 1000 different validators that are reliable and providing signatures. And the non signing rates are incredibly low. Our non signing rates are probably 7%. That's not happening on a lot of other chains. So if you want to scale large DFI application on these chains, that's not even a possibility.
00:28:44.766 - 00:29:18.254, Speaker B: Then the second reference that you made in reference to the contracts, if you know that each transaction you're making on DeFi protocol that is built on a roll up that is using eigenda is fully insured, you have no fear as a user making that transaction if you know that it's fully insured and you're receiving a slashable amount based on that transaction. So there's so much added security from all of these different product features that we're discussing that it's not just one problem it's solving, but those, let's say.
00:29:18.292 - 00:29:49.494, Speaker A: Because I do defi things, right. Many of the hacks are not deterministic in terms of you cannot say who is at fault, right? Some of them are oracle manipulations, other ones are kind of like causing amms to malfunction to an extent. And all of that stuff. The issue is that you can, for example, specify in a somewhat deterministic way, what can be done and what cannot be done in terms of, like, insurance coverage. Right. But what about the second order effects and the third order effects? Right. A protocol gets hacked due to that influence, another protocol due to that.
00:29:49.494 - 00:30:14.094, Speaker A: Some perps, for example, are making money for somebody else who took the other side of the position, who are not actually hackers by themselves. Right. They just benefited. So, you probably didn't mean to go that far. I'm just asking. I think I saw a couple of projects trying to put, like, invariants into sequencers, essentially, and that is a way to kind of track what is right and what is wrong in deterministic way. So, that could be built on top, of course.
00:30:14.094 - 00:30:18.754, Speaker A: But, yeah, I just wanted to see whether there is something else to it.
00:30:18.872 - 00:31:18.262, Speaker D: Yeah, no, I think you said it well, that there are a few different kinds of slashing risks, insurance risks. There's sort of catastrophic contract risk, where there's some vulnerability. There's then slashing risk, which you might want to insure. And then finally, as a user, you might have a certain amount of risk associated with reorgs. And so you're interested in doing some kind of hybrid transaction where you're spending crypto, or maybe you're receiving crypto, and you're giving away something in the physical world. And in that case, a reorg can actually be equivalent to losing that physical item, because you don't have the crypto associated with having sold it. And so that kind of risk is something we're thinking about a bit with something called stakehore, which is essentially a way of making it so that you can pay for insurance for that exact event happening.
00:31:18.262 - 00:31:36.970, Speaker D: And then you can actually prove that that event happened. So that after the fact, you have compensation for the fact that you gave away, whatever your gold, and you didn't receive your crypto. Well, you redeem your insurance, and then you actually do receive your crypto anyway. So that kind of thing is something that we're thinking about as. Cool.
00:31:37.040 - 00:31:53.342, Speaker A: Cool. Thank you for explaining. I mean, you are right. And that's what Alp's question was about. Right. What about those shitcoins launching on top? But that's the nature of permissionless, composable design, right? The answer is, you can do anything. But end of the day, people would want to ask, okay, you can do anything.
00:31:53.342 - 00:32:17.080, Speaker A: But that's not really an answer, right? Uniswap, you can make any coin, but the top three awful engine protocol, right. The top three always is 90% of the volume TVL, whatever it is. So naturally, jumping into what you think that is one of the main cases, right? You seem to think it's Eigenda as the main ones, or let's say the top two right now that you believe in, would that be correct to say.
00:32:18.510 - 00:33:58.582, Speaker D: Yeah, selfishly, yes, I'd love to talk about Eigenda. So Eigenda is the other product that Eigen Labs is working on. And it originally started as sort of a proof of concept of an Abs, but soon sort of developed this character of its own as an opportunity to build a better da layer, or to build a DA layer that wasn't just based on a trusted committee. And since then, it's sort of grown into a team of 15 engineers with a product in Goreli Testnet with 200 operators and the power of, I guess, the Testnet stake behind it, and launching on main net in late Q one, early Q two. And Eigenda works on the basis of operators who are registered with Eigen layer, who receive chunks of distributed data and do various verification on those chunks, and then serve those chunks back when requested to roll up nodes who are wishing to redireve the roll up chain from the data on Eigenda. And I guess the first question you're going to have about eigenda is, what sets it apart? Why is it different? And so the answer to that is a few things. So there are two things you could compare eigenda to.
00:33:58.582 - 00:34:49.882, Speaker D: One is just a plain committee based da layer. And this would be something like any trust from Arbitrum. And this is how arbitrum Nova works and has very cheap gas fees. Rather than sending their batches of l two transactions to Ethereum, where call data is expensive, they send batches to this set of arbitram run nodes, committee nodes, which store the data that consists of the L two blocks. And then they post references to that data on Ethereum. So rather than posting the whole l two block to Ethereum, they're posting just references to the l two block, which exists on any trust. Eigenba is an improvement over this on the basis of obviously being decentralized trust.
00:34:49.882 - 00:35:38.390, Speaker D: It's not some sort of like fixed proof of authority committee. It's operators that opt in, many operators that opt in. And I guess that's one advantage. The second advantage is that it scales linearly. So the model where you have a fixed set of operators does not work that great when you're sending all of the data to all of the operators. So that means any sequencer that wants to broadcast a new l two block has to write whatever, twelve times or 20 times with eigenda. There was this core insight that basically no distributed system does storage in the way that blockchains do storage.
00:35:38.390 - 00:36:34.614, Speaker D: Like if you're running an ethereum node, you're receiving every single block header no matter what. And this is actually a real strength of blockchains, is that they're very good at coming to consensus. But in practice, especially for an L two, you don't need to come to consensus over the data itself. It's actually good enough just to come to consensus over references to the data, which are verifiable. And so Eigenda takes this insight and makes it possible for sequencers to send a sort of redundantly encoded version of the data to a subset of eigenda nodes. And this makes it so that essentially as nodes join the network, and as the capacity of the write capacity of eigenda increases, so does the ability for sequencers to write to eigenda and for l two throughput to increase.
00:36:34.742 - 00:37:23.242, Speaker A: I have one last question before Al completely murders me. I don't even know how to. The previous questions I asked, in a very shitty way, this is going to be even worse. So please prepare for that. So when you run those nodes, right, and validation for other Avs, right, do you expect it to be the same validator set as it is right now? I know it doesn't matter, right? Because it could be current validators as well as home run nodes, right? And whatever else. But in terms of the environment where you run those nodes and the capacity and the limits it has, do you feel that LDM gets in that? I just wanted to understand this topic better as you complicate that environment or how they call it a cluster or like whatever, where is the limit? Or is there no limit? And I just fully misunderstand what it is.
00:37:23.376 - 00:37:34.714, Speaker D: So you're asking is somebody who's running an eigenda node at home subject to onerous system requirements or bandwidth requirements? Is that the.
00:37:34.752 - 00:37:47.890, Speaker A: And let's say, yeah, as Moivss pop up and everything else, how much? Not bandwidth, not the right word, right? Complexity, I don't know. Or cost or whatever. Somewhat it is getting to the thing that you mentioned. Yes, please. Just wanted to understand that more.
00:37:47.960 - 00:38:40.098, Speaker D: Yeah, sure. So I guess a little bit more focused around Eigen layer, not eigenda. So as a user, when you have some Ethereum staked Ethereum that you wish to restake on Eigen layer, your choices are not in terms of the AVSs, they're actually in terms of the operators. So you choose operators that you'd like to restake with. Any given operator is going to have some kind of description of the various protocols they're running, ABS protocols, as well as expectations for rewards. And so by restaking with any given operator, you are restaking with those Abs that they're running. So as an operator switching over to the operator's perspective, you can choose exactly which protocols you want to run.
00:38:40.098 - 00:38:56.200, Speaker D: If you only want to run one protocol on top of eigen layer, you're free to do that. If you want to run multiple and manage a cluster of different services, you can do that, too. So in terms of complexity, it's totally opt in.
00:38:58.250 - 00:39:25.170, Speaker A: How fast does the complexity grow? Because to put it in perspective, Solana often gets frowned upon for the size of the nodes and whatever you need to actually be a validator, comparatively speaking. Let's say if I have five networks, five Abs. Again, speaking from the operator perspective, how much of a difference that is, how big are we talking in that sense, if there are numbers? Or maybe you can't really estimate it right now. Just curious on that.
00:39:25.320 - 00:40:11.166, Speaker D: Well, so I used to work at a validator called stakefish, and we would run on the order of 30 or 40 different networks at the sort of peak. And that was a manageable amount of complexity it scaled with the number of engineers we had to manage the DevOps, but it wasn't some kind of technical restriction at all, more of an organizational one. And so we see it the same way. Any given operator can choose to sort of be a one man show or incorporate and have the help of other engineers, but it's not really a technical problem in any way.
00:40:11.268 - 00:40:18.526, Speaker C: What can you share about the second phase of the mainnet launch? What can we expect? What are the key features of this launch?
00:40:18.718 - 00:41:39.942, Speaker B: Yeah, so super excited about our upcoming ABS testnet. So, as I mentioned prior, we had one launch that was focused on restakers, and then we've had a number of LST additions, one that was within the recent two weeks that was adding three different new LSTs, and also an LST race that was done by the community. And then we had our operator launch, and that was primarily launching the feature for delegation and onboarding operators on Goreli. What our upcoming AbS testnet is, is launching the ABS that me and Teddy referenced prior, like alt layer, like Lagrange on our Gorely deployment, and then having a small operator set then onboarded to this AbS test set to start validating for them. And this is obviously done in the staggered fashion that we mentioned prior to do testing and QA. But this is really exciting because this is probably one of the last thresholds that we're going to achieve before launching Mainnet. So after this we're going to be slowly launching a number of other Abs and then we will be launching live on Mainet.
00:41:39.942 - 00:41:54.740, Speaker B: So super exciting because we'll have a full marketplace. Right now it's only been two sides of three. So I know you're interested in other things, but we are not working on anything like that right now. So not at this time.
00:41:55.270 - 00:42:11.030, Speaker C: But there is some sort of a tease going on, right? Because you're distributing points on a secondly basis. So what can you share about what those points will translate into in the future or what they mean right now? What can you share about that?
00:42:11.180 - 00:43:19.322, Speaker B: Yeah, so if you are a restaker, a native restaker, or you've set up an Eigenpod, there is a time average restaking point system that was done by our incredible research team that's actually written in documentation and it's live on the agonlayer site. And those are a measure of the contribution of shared security for the egg and layer protocol. So they just measure your staking participation equal to the time iterative amount that you've staked. And why this is important is because as stake distribution grows on the protocol, there's something that people need to know in the representation index of them as a staker. So it's really important for decentralization, it's important for the TBL health and security of the protocol. And I understand why a lot of people think how to measure the value of these point systems because how they've done traditionally in the past, but that's kind of what it represents right now too.
00:43:19.456 - 00:43:29.098, Speaker C: So what can you share about the potential risks associated with restaking, especially in terms of systemic risk and increased leverage on the Ethereum blockchain?
00:43:29.274 - 00:45:04.458, Speaker D: Yeah, so I think that the risk of Eigen layer is something that comes to mind immediately when people learn about Eigen layer the first time. I think the first thought is, why didn't I think of that? And the second thought is like, this is why I didn't think about that. There's obviously all this risk, but I think that it's often misunderstood as something that poses systemic risk as opposed to sort of one off risk, where Eigen layer does not introduce any sort of domino effect between different protocols that are operating on Eigen layer. That means that in the event of a slashing condition being invoked, that may result in a decrease in security, but that decrease in security is never going to trigger some other sort of slashing event on the basis of that decrease in security. So the thing to watch with Eigen layer, and this is true with literally any amount of staking, is exactly to what risks are my assets subject? If you go and restake with ten different protocols, maybe nine of those protocols are safe in the sense that operators are doing a good job. The slashing conditions are well defined. They're not likely to be triggered.
00:45:04.458 - 00:46:18.360, Speaker D: But if that 10th ABS has a slashing condition that an operator doesn't manage well, maybe they miss an upgrade or something like that and you suffer a slashing, then that's something that you could have potentially anticipated, at least as a risk beforehand. Essentially the fact that the stake is not ever actually changing hands. It's not like a loan or a bond, where if you were to use a piece of collateral twice or three times, then that would subject your system to some kind of domino effect. Risk unlike that with restaking, the money is always held in escrow on eigen layers contracts, and there's no risk of this sort of like total collapse scenario that I think people sometimes jump to in their head. But yeah, I think that as a restaker, your job is to evaluate exactly what are the risks of any given Abs that an operator that you might restake to is running.
00:46:20.090 - 00:46:29.450, Speaker C: So the concern around like cascading failures is just overly thought around. You're saying the possibility of that happening is minimal?
00:46:30.190 - 00:47:09.880, Speaker D: Yes. Well, so these protocols, there should be no protocol that has any kind of slashing condition that is based on the total amount of security provided to that protocol. If that were the case, then we would get into trouble. But there's no reason you would ever want to place some kind of slashing condition on the total amount of stake at risk for the protocol. And so if one slashing condition occurs, the security decreases some amount. And we really don't expect any other slashing conditions to occur on the basis of that decrease in security.
00:47:10.410 - 00:47:55.894, Speaker A: Ethereum foundation in general seems to just like, because they have to do it in such a safe way, they often go overboard. For example, the past half a year has been filled with research on what if all Ethereum gets staked and everybody who has ever been on the operator side, like guys, listen, you can have some edge cases, and then there are cases that are practically impossible. So that just feels like one of those. Honestly, there are probably risks once you start looping it. And obviously people will loop it, right? Whatever other tools and projects that we might or might not have bags of let's say start doing those kind of stuff that can happen. But it's not Eigen layer's core thing, right? It's like saying, oh, what if somebody buys and sells lot of ethereum at the same time? Okay, you're an infra, it's not your thing, what you do.
00:47:56.012 - 00:48:55.350, Speaker B: No, but I do think we do do a good level of risk modeling and analysis. We heavily advise and discuss the EF with the EF. A lot of the research that the research team is doing. Sriram Robert, Shobi Cohabit of research a number of ideas that they have in early stage development and R D before it's even implemented. So those are ideas that they get consensus from the team from. A second thing is there is a lot of risk modeling that's done that people don't see behind the. So like one good example is the attributable security that Teddy was referencing in a concept like Eigensert that is being built right now for eigenda or different ABs that are underlying.
00:48:55.350 - 00:50:08.602, Speaker B: A lot of thinking is done behind how those signatures for Eigensert will be aggregated and then how these are going to be posted to mainet, and then what the signature verification cost is going to be for ABS, and then how that will potentially be a risk for ABS consumers or the ABS themselves. If, let's say Oracle ABS is like Chainlink that you mentioned prior in our conversation, change to eigensert, and what the general economic security of a DeFi application is with Eigensert and the Oracle on eigen layer. So a lot of that risk modeling, analysis, and thinking goes internally in discussions. And it's just something that we don't publish. We definitely want to publish more, but we do think about it, and we also do heavily engage the EF because we love a lot of the work they're doing. And even though they're slow and like you're referencing, they do it with good reason. They do it because there's so many applications that are built on top of them, protocols that are built on top of them, and so many other blockchains that look to them for their research purposes.
00:50:08.602 - 00:50:13.970, Speaker B: So I understand why they're slow, slow and steady.
00:50:14.310 - 00:50:23.266, Speaker C: Okay, let's look ahead. Roadmap for 2024. What are Eigen layer's primary goals and milestones for next year?
00:50:23.368 - 00:51:09.346, Speaker D: So Eigen Layer's primary goal is to launch, to maintain. I think that one's pretty clear. And we're also obviously, as part of that process, going through several layers of audits and community building. We're going to have a presence at Denver. We're going to run hackathons, do workshops, and try and jumpstart this idea of launching protocols as ABs and renting security before owning it. And if we can get that going and launch, then I think we'll be in a good place.
00:51:09.528 - 00:51:16.760, Speaker C: What advice would you have to developers looking to build on Eigen layer and investors interested in the platform?
00:51:17.130 - 00:52:33.466, Speaker D: I would say I think that Eigen Layer presents an opportunity for builders in the same way that Ethereum presented an opportunity for builders all those years back when it was the first general permissionless blockchain. And the idea of borrowing trust and building something that can be run by a huge operator set and used by a huge number of users right off the bat is incredibly cool to me. And so if that sounds cool to you too, check out our docs and see if you can build something simple like a decentralized oracle just to start, or something that just demonstrates that Eigen layer works. And then from there the possibilities are endless with those two carrot and stick behaviors that you can implement with Eigen layer. Okay, so if you're a developer and you're interested in building on Eigen layer, check out our Avs testnet. And if you are going to market, contact to Tina or Brie on Twitter.
00:52:33.578 - 00:52:42.398, Speaker C: Well, fantastic. This was a great conversation. Very happy to meet you both and looking forward to what happens with Eigen layer this year.
00:52:42.484 - 00:52:44.046, Speaker D: Yes, thanks guys for having us.
00:52:44.148 - 00:52:44.620, Speaker B: Thanks guys.
