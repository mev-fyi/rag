00:00:00.330 - 00:00:41.894, Speaker A: Yeah. So Celestia was formerly called lazy Ledger. And because it's basically a very lazy blockchain, it's basically the answer to the question was like, what fundamentally is a blockchain? If you strip back a blockchain to its core components, what do you get? And what's the laziest possible blockchain you could make that's still useful for developers? And the answer was basically lazy ledger. It was, it was basically like, what if we just create a blockchain that all you can do on it, all developers can do on it is dump arbitrary data to it and it doesn't do any computation on that data. It's just like, all you do is just like dumb. It's a dumb ledger. It doesn't have any transactions or smart contracts.
00:00:41.894 - 00:01:35.050, Speaker A: You just post arbitrary messages to it and those messages get ordered and they're made available. It turns out that's all you really need to build any kind of cryptocurrency application on top of it. You can imagine a version of bitcoin where the nodes, they don't actually execute the transactions, anything goes on the chain, but the execution can happen off chain on roll ups effectively, or like on the end user client. And that's effectively how roll ups work, right? Like roll ups effectively only use the base layer in a very dumb way. Like they basically just use it to post data onto it. But all the actual interesting stuff, the actual execution, the computation, the transactions happen off chain on the actual roll up chain. So it turns out like, and laser was proposed before roll ups were proposed.
00:01:35.050 - 00:02:40.042, Speaker A: So the application model was very kind of like primitive at the time, but kind of realized, well, that's basically the fundamental thing that blockchain does. So what if we made a blockchain that only does that and scaled it extremely well? And that's where the idea of modularity comes in. Whereas previous blockchains, like bitcoin and Ethereum, they try to do everything or they try to bundle everything. So like Ethereum had this world computer model where every single application runs on the same chain or runs on the same computer, but in the modular paradigm, you basically decouple, you decouple consensus from computation. So the L one is only responsible for consensus and data availability. But developers are free, have more flexibility to define their own execution environments on top of. So instead of being limited to just using the Ethereum virtual machine or sharing the same computational resources with everyone else in a modular design, developers have their own roll up chains on top of it and they can define, they have complete flexibility.
00:02:40.042 - 00:03:12.566, Speaker A: They define how that roll up chain works and what kind of execution environment it uses. It doesn't have to share computational resources with everyone else. If one roll up has high gas cost, that doesn't necessarily leak into other roll ups. And that's basically a very similar model to how the web works today. Like websites don't run on the same server as everyone else. You can go on AWS or digitalocean and spin up a virtual machine very quickly with your own environment. And roll ups are very similar to that.
00:03:12.566 - 00:03:14.130, Speaker A: They're basically like virtual blockchains.
