00:00:00.330 - 00:00:49.158, Speaker A: You welcome to the Defiant. I'm your host, Tagan Klein. Today we are joined by the all around dev phenomenon, Natter Dabbit. Natter has become a household name across the developer community with his combination of to the point tutorials, live coding demos and interviews focused on modern web development, web3, AI, cloud computing and more. He's always learning and experimenting in public. Natter is currently the director of devrelations at Ave Lens. Today he'll get into some details behind his journey into Web three, starting with the graph, decentralized social media, the devs building on the lens protocol lens infrastructure, and he'll give us a mini deep dive into gasless transactions via lens.
00:00:49.158 - 00:00:57.022, Speaker A: But first, Natter tells us about what it was like being early to AWS before he made his switch into web3 full time.
00:00:57.156 - 00:01:55.370, Speaker B: I've been a developer for about eleven years now. When I started at AWS, I have been really interested already at that point into developer tooling and developer just being part of the developer ecosystem and I had written open source. I had taught developers how to build apps and being able to kind of work on the infrastructure that allows other developers to build their own apps and their own companies seemed just really exciting. This was also along the same timeline that serverless technology was starting to become more popular and they were rolling out a lot of new serverless services and things like that at AWS. And it seemed like a really exciting thing to work on, being able to kind of help build infrastructure that other developers could use to build out their own applications. So that opportunity just seemed really cool and I was able to join that team and I was there for a little over three years. I learned a lot and it was a really great time of my career.
00:01:55.450 - 00:02:03.186, Speaker A: Amazing. And with that, tell us a little bit about your web3 journey. How did you get started and what initially kind of piqued your interest in the crypto space?
00:02:03.288 - 00:02:59.990, Speaker B: Yeah, so I think that when I started trading and being involved in crypto, it was way back in 2016 and 17, but I didn't really know what I was doing or what was going on. I was kind of just speculating and then a couple of years later I was getting back into it. We had that boom and bust cycle of 2018 ish and then a couple of years later getting back into trading and stuff. And the graph actually is the token that I started doing research on. And when I started learning about the underlying technology, I started realizing that crypto is not just there for speculation, there's actually products and projects and applications that people are building. So I started diving down the rabbit hole of web3 after learning about the graph protocol and graphQl, which is something that I had been using and writing at my time in AWS. And during that time, I actually watched a couple of talks.
00:02:59.990 - 00:03:45.170, Speaker B: One was actually from Yaniv, it was at graph day. The other was Juan Benet. And those two talks really kind of introduced me to web3 and got me really excited about it. So at that point, I was kind of bored at AWS, and I was looking for the next thing I wanted to work on. And this was the first time I became really excited about anything in a long time. And after kind of looking around at the different protocols and stuff like that that were out there looking for a place to work, actually, there was only a couple that really stood out to me that seemed like the combination of technology that I understood that seemed really promising, and then places that would actually maybe hire me. And I reached out to the graph and me and you ended up working together.
00:03:45.170 - 00:04:02.282, Speaker B: But I'm not sure who saw my application come in. But Yanve, I think, was one of the first people I maybe talked to. I talked to you, talked to a couple of other people, and from there, I've been all in on web3 since then. It's been a fun time.
00:04:02.416 - 00:04:12.074, Speaker A: Amazing. Yeah. Whirlwind for sure. And maybe some advice you would share to someone who is in big tech, maybe looking just to do a similar transition to web3.
00:04:12.192 - 00:04:56.246, Speaker B: I think that you have to kind of come into the space knowing what you're getting yourself into. Even with the preparation mentally that I had, it's still been kind of a rocky ride. It's been great, a lot of fun. I learned a lot, and I'm really glad I'm here, but there are a lot of ups and downs. You know, with all the regulatory uncertainty, there's always going to be some really great thing that's happening that day or something really bad that's happening that day. And you have to kind of just be there for a long term vision, and you kind of have to be really bought into what we're working towards, because if you're kind of there just for the short term, it's going to be very tough, I think, to stay during some of these ups and downs.
00:04:56.358 - 00:05:13.086, Speaker A: Absolutely. Yes. You definitely have to roll with the punches and be comfortable in the chaos, and I think that you're probably one of the best devrels in the space. Do you have any advice for others that might be aspiring to be DeVrels in crypto how do you recommend they approach that?
00:05:13.188 - 00:06:08.690, Speaker B: I think the best thing that I learned that actually works really well, at least for me, is living by this idea of learning in public. And the more that you are able to, just the more experience that you have as a developer, the faster you're going to be able to pick things up. And if you can publicly translate the things that you're learning to other people as you're learning them in public, then people really resonate with that. And it's pretty simple. If you just are out there learning new things and trying new things and sharing everything that you're doing, then that's often going to help people that are just getting started. I think as a self taught developer, I really appreciated all of the content that other people had put out there for me to learn and get my career going. And I found it really fulfilling to be able to kind of do the same for work.
00:06:08.760 - 00:06:16.546, Speaker A: Amazing. And what's the best medium for that learning in public? Do you recommend like a YouTube channel, Twitter? What would you recommend to know?
00:06:16.568 - 00:06:35.546, Speaker B: I think it's a combination of those things, but it also depends on what that person's kind of good at. I think certain people are excellent at video production. Some people are really good at social media. So I would say experiment, find the things that you're good at and really double down on the things that you're most effective at.
00:06:35.648 - 00:06:46.654, Speaker A: Amazing and chain Yoda on Twitter asks, how does sir travel so much? What is sir's formula for managing jet lag and quick recovery from Devrel travel?
00:06:46.772 - 00:07:20.562, Speaker B: It's really tough to get used to that. I think the key for me is trying to actually reduce the travel as much as possible. Even though I'm still on the road about once a, you know, when I have jet lag, it is something that you just have to get used to dealing with, maybe. I don't know. I don't really have a good answer for that. I think though, just being consistent, period, will keep you consistent regardless of time zone or location. And just understanding that when you're traveling, you're probably going to get a lot less done and therefore try to kind of get a lot of stuff done when you're not traveling.
00:07:20.626 - 00:07:41.098, Speaker A: Totally. And one hack I have for jet lag is just before you start traveling to wherever you're going, start thinking about that time zone and maybe go to sleep a little bit earlier if they're already sleeping, and then vice versa when you're coming back. That can kind of help you hack. Yeah. And then Kevin Owaki on Twitter asks, how do you build stuff so fast? And what's your secret?
00:07:41.194 - 00:08:17.206, Speaker B: So some things come to me fairly quickly and easily, and I'll just jump into a code base and it'll make sense and I'll be able to get it. But sometimes it doesn't click. And I just am the most stubborn person in the world when it comes to learning something new. So sometimes I just won't go to sleep at night. Like, I'll just stay up until the next morning until I figure it out, or I'll spend a whole week trying to figure it out and at some point it'll click. For instance, sometimes it doesn't even work and you have to figure out why it's not working because most of the time when you're in Devrel, you're actually working on really bleeding edge tech. So for instance, I was actually in the chat.
00:08:17.206 - 00:08:36.482, Speaker B: GPT slack for the plugins. Plugins is kind of like a new feature. And I'm in there and I'm running my app, and Friday my app just stops working. So I'm kind of in the chat and I'm like asking, hey, my app's not working. And no one responded. A few hours later, I created a video and I posted up there. It still didn't work.
00:08:36.482 - 00:08:58.262, Speaker B: And then over the weekend, I kept trying it and just nothing worked. And it was so frustrating. But I couldn't go to sleep almost until I figured it out. And then finally someone chimed in from OpenAI and was like, oh, it broke. And we forgot to push the fix for it. Sorry about that. And then I was like, okay, can you fix it? And he was like, yeah.
00:08:58.262 - 00:09:26.046, Speaker B: So he pushed the fix and then he said, it's fixed. And I tried. It still wasn't working. And then I asked him again, I was like, hey, are you sure it's working? He was like, oh, well, it looks like it wasn't actually deployed to production, so they finally did that. You kind of have to just do everything you possibly can to get it done. And often that means communication can mean like really going on Twitter or telegram and finding the engineers and asking them questions. And then finally you get it done.
00:09:26.046 - 00:09:37.330, Speaker B: And it feels really good once you figure something out. Because if you're good at teaching, you can often distill that knowledge and make it a lot simpler for other people to not have to go through all that pain and suffering that you just went through.
00:09:37.400 - 00:10:02.474, Speaker A: Totally. Yeah. It sounds like you need that natural curiosity like that DevOps mind where you're tinkering a bit, and I think you very much have that. And maybe for listeners out there, if you feel like that resonates with you, maybe a Devrel career could be something that suits you. And what new technologies are you most excited about tinkering with? Or would you kind of recommend someone who's interested in this career path to start looking into?
00:10:02.592 - 00:11:03.710, Speaker B: I think that AI and the combination of AI and blockchain, there's just so much there that is going to be really interesting to see with data and data analysis that is more. There's just so much more you can do when you apply AI to it and it was inaccessible to most people, I think, especially myself. I'm not like a machine learning data scientist, I'm not a Python developer. But these APIs and these SDKs have gotten so much easier to use that anyone can just pick them up and start using them. So I'm really excited about applying blockchain and web3 principles and kind of experimenting with AI. I'm very interested in kind of this idea of the web3 stack, and that was something that at edge and node that I was able to kind of really get started with, mainly because you all already had someone researching that and he's off now starting his own company. But the information that I learned there was really core to igniting my curiosity.
00:11:03.710 - 00:11:20.630, Speaker B: And I'm still really excited and interested in kind of figuring out what are all the protocols and tools and SDKs that actually work in Web three and experimenting with those and kind of learning which ones that I can use to build out the ideas that I want to build with.
00:11:20.700 - 00:11:42.138, Speaker A: Amazing. Yeah, it's super exciting to kind of see the decentralized web3 stack come to fruition. And you've actually had a very interesting journey right in your short time in web3 between the graph and celestia. So kind of core infrastructure. And now to lens on the decentralized social media side. So talk to us a little bit about that journey and then I want to deep dive into lens.
00:11:42.234 - 00:12:37.550, Speaker B: This space moves extremely quickly, and my own curiosity also kind of moves pretty quickly. So I'm always interested in kind of learning and finding out different things. And with the graph, it was a really great introduction into web3 because of their you all have, and when I say you, because you also are part of the graph. So even though you're also the podcast host, I'm going to kind of mention that. But the founding team and you all have very core beliefs into how web3 like what it means and the work that you all are doing will kind of lay the groundwork for maybe what it actually means to be decentralized. And that was a really great experience. Watching some of the talks that were given way before Web three even became like a thing was really cool to see how far ahead, like you all kind of were with all that stuff.
00:12:37.550 - 00:13:25.562, Speaker B: So having that experience there was really awesome. And the connections that I'd made while I was there really were really great, and I will always be kind of thankful for that. So I think that the graph is an example of one of these infrastructure protocols, that it's almost like an AWS, where we were building out services and people could just build out whatever they want on top of them. It's very agnostic to what someone's going to build. Lens is more of like a protocol where you can only build specific apps, but AWS and smart contracts in the graph are more agnostic. You can kind of build out whatever you like. And while I was at the graph, I think that I started becoming more interested in these niche areas in Web three that had massive challenges.
00:13:25.562 - 00:14:57.578, Speaker B: A couple of those areas, well, there's like five, I think I've kind of tried to distill or kind of like segment some of these, even though there's probably more or less depending on who you talk about. But one of these is scalability. One of them is like Ux, you have security, and then you have different things like that. So I think with Celestia, I became really interested because they were doing some really interesting stuff around data availability and enabling, possibly scaling blockchains to be able to be used like a database almost, and enabling the types of applications that we're used to using. But in web3, so, like treating a social network, for example, like what we have at lens, how can you build that in a decentralized way? And during my time at Celestia, I started also realizing that celestia wasn't the only answer to that problem, because I started understanding a lot more what they were doing, and they have a great solution to that. But there are also other solutions, and I think that a couple of examples of that would be like arbitrum, Nova, you also have things like what we're actually going to be releasing soon with lens, and there's different ways to kind of tackle this idea of data availability. So once I kind of understood that, and also at Celestia, it was a really low level protocol, whereas I'm more of like an application, front end, full stack type of developer, I felt like I was not effective there.
00:14:57.578 - 00:15:53.866, Speaker B: I just wasn't helping out as much and I wasn't able to contribute based on my own skill set and also was starting to become interested in other stuff. And there's quite a bit that I was thinking about doing at that point. I was thinking about going and opening my own consulting company, doing developer marketing and maybe even software engineering and kind of like an agency type of deal. I was also considering other roles, but one of the roles that stood out to me a lot was the Ave and lens team because lens is a social protocol, but it's also kind of like a developer platform that front end developers could easily plug into. And I've basically been a front end developer either with web or mobile my entire career. So it really was easy for me to understand and pick up. And I'd created a tutorial that when Lens first came out, was really popular in a bunch of apps that are actually in the lens ecosystem.
00:15:53.866 - 00:16:13.746, Speaker B: Their founding engineering teams kind of got started with lens from that video and it just made a lot of sense that I would kind of want to focus on that more. So I ended up leaving Celestia and going and working with lens and Aave, and that's kind of where I am now. But I still do experiment quite a bit with other protocols and I even do a little bit of consulting on the side.
00:16:13.848 - 00:16:28.178, Speaker A: Amazing. Exciting. And now let's double click into lens. So lens is one of the more web3 native social networks. So let's start with why we need a web3 social network. In your opinion, why do we need something like lens?
00:16:28.274 - 00:17:44.622, Speaker B: So I think there's a couple of perspectives here. One is the user, one is the developer, and kind of the infrastructure and how the applications will ultimately, I would say maybe progress like the different front ends, I guess you could say, I guess we'll start with that. I think that when you think of a traditional application and social, you think of a company that's building the front end and the back end and they're maintaining everything and it's kind of a siloed database that you can't really access unless you're that company and you're building out the front end. But I think where Web three really shines and what attracted to me the most really was how you can have these open, public, composable back ends and infrastructure that anyone can build upon. And therefore you can kind of think of the go to market for something like a social network in web3 looking a lot different than you might in web two, where you would build a back end and then you would also build a front end and you would be controlling the whole stack. But with lens, we're building and maintaining this high quality infrastructure. The smart contracts, we're trying to make it easy for people to build their own APIs, and we offer an API as well.
00:17:44.622 - 00:18:33.178, Speaker B: And then all the developer needs to do is be a front end developer. They don't have to know smart contract development, they don't need a DevOps team, they don't need a database engineer, they don't need all these different people on the back end. And therefore they can build a lot more quickly and a lot more easily and experiment a lot more. And then at that point, what you end up having is a lot more experimentation on the front end. We already have dozens of apps, mobile and web apps. Some of them are raising in the range of like tens of millions of dollars, even valuations, because they're able to really focus on just that one thing and do it really, really well, and they don't have to worry about everything else. So having a diversity of clients, applications that might speak to one person or another, all you really need is like one killer quote unquote app to succeed, for the whole protocol to succeed.
00:18:33.178 - 00:19:24.986, Speaker B: So that's one area I think that separates it. Another one, again, from the perspective of a developer, is that when you want to build social features into your application, you typically just hand roll everything from scratch. So an example of where people don't hand roll everything from scratch is if you want to build authentication in web two, you would just use something like auth Zero. If you want to build an API in web two, you often will just get a serverless function. And if you want to build messaging into your app, you often will just go for Twilio. Because Twilio and serverless functions and alt zero are all managed services and you don't have to build all that stuff from scratch. A good example of how lens is similar to that is that very large number of users in the world actually are using applications that have social features.
00:19:24.986 - 00:20:12.106, Speaker B: GitHub for developers is actually a social app. You can follow other users, you can create a profile, they can follow you, you can see a feed of all these things. And when you start looking at the most widely used applications in the world, you start realizing that they all know, not all of them, but most of them do have social features. So being able to kind of abstract the way that into its own service also makes it so much easier for developers to build social features into their apps that might not necessarily be thought of as social apps in the past. So developers can just use lens or possibly other protocols similar to lens in the future to build out these features. So that's that. And then the last thing for developers is being able to just start with a bootstrap user base and not start from scratch.
00:20:12.106 - 00:20:39.962, Speaker B: Right now we have 100 and X thousand, maybe 110,000 users on lens. If you build and deploy an app on lens, you automatically have like 100,000 users built in. You don't have to bootstrap that from scratch either. So it's a compelling place to build for all of those reasons for certain developers. And I think once we remove the allow list, the whitelist portion of how to sign up, it will make it even easier for people to kind of treat lens as an infrastructure layer that makes sense.
00:20:40.016 - 00:20:59.534, Speaker A: I want to ask one question on the building around lens, and I also want to get into what the listeners could do on lens. So first you're enabling developers to build on top of lens. How's that been going? And what are some of the more exciting apps that you've seen? Or maybe that killer app that you mentioned?
00:20:59.652 - 00:21:46.014, Speaker B: Yeah, I mean, one of the big focuses that we have is on developer experience. So we're always listening to developers and trying to build out tools and SDKs and things that make it easier or make it lowering the barrier to entry for them to build out the things they want to build. So we now have a react native mobile SDK that makes it easy to build mobile apps. We've had hackathon winners that have kind of rolled out their V ones using that. We have a react hooks SDK, we have a bigquery API that allows people to kind of take large data sets and build machine learning and AI algorithms and things like that on them. So that has been pretty successful, I think. I think the biggest challenge for me as a developer advocate is getting developers excited about a protocol that is completely closed off.
00:21:46.014 - 00:22:27.526, Speaker B: It's still in beta. So if you build on lens, you can only have people that have lens handles use it. So that's a challenge. And that's something that I'm excited for us to be kind of removing at some point this year. Some of the apps that I'm really enjoying. I think that when you start noticing a habit of yourself doing something different, it's a good signal that that thing is naturally becoming something that you're doing without you kind of really trying. So for me, I often will just pick up my phone and look at a social network and when I'm bored and lately I've been picking up orb, which is a mobile app for lens that is really good and polished.
00:22:27.526 - 00:22:55.058, Speaker B: It's probably, I would say, the most polished mobile app that is just a lens app, and that's a really great one. So if you're kind of just getting started on lens, definitely recommend checking out orb. I just posted a video today on Lens tube, which is kind of like a YouTube type of app. On lens, you can upload your videos to rweave. They're there forever, and I use that quite often. Lenster was kind of like the first web app, and it's really popular. It's probably the most popular app.
00:22:55.058 - 00:23:21.178, Speaker B: So those three are some of the apps that are really interesting to me. And then we have a lot of cool stuff that's kind of like niche. So we have people that are building out communities and apps focused at art, artists and musicians and people in the fashion industry. Enzo Collective is one of those. So there's like a lot of niche communities that are interesting. But for me, the most used apps are probably Leinster lens, tube and orb.
00:23:21.274 - 00:24:16.702, Speaker C: Meet Stator labs, the noncustodial multichain liquid staking platform that's aiming to transform the liquid staking landscape. With over 120,000,000 in assets staked and more than 40,000 users across six chains, Stator is partnered with 40 plus top DFI protocols like Ave and Balancer. Gear up for the launch of ethx Stator's liquid staking token on ethereum. With a unique multipool architecture and tokenomics, etHx empowers stakers everywhere with as little as four ETH to run a node and earn 35% more than solo staking. The best part? Stator is committed to keeping their fees low and accessible to users, charging only 10% of staking rewards. So you don't have to choose between cost and decentralization. Sign up for their ethx Alpha list today and be the first to know.
00:24:16.702 - 00:24:19.070, Speaker C: About 1 million in DeFi rewards.
00:24:19.730 - 00:24:26.318, Speaker A: Why did you guys start in the beta, like closed beta phase, as opposed to kind of starting open and permissionless?
00:24:26.414 - 00:25:17.394, Speaker B: I think the main thing is that they just didn't have everything figured out quite yet. And the two biggest challenges that are being solved today, that we're actually rolling out something when this podcast goes out, which will be probably after tomorrow, we'll have solved. The first one is scalability, because lens runs on an L1. I'm sorry, an L two. It runs on a blockchain, period. And even though blockchains have come a long way, Polygon only scales to a certain amount, right? Even the blockchains that are considered the most scalable still are kind of orders of magnitude less scalable than a traditional database. And lens is trying to build the type of application that is similar to what we're used to in quote, unquote, like web two.
00:25:17.394 - 00:26:23.750, Speaker B: So with Twitter, I think Elon Musk tweeted out there was like 50,000 interactions per second during the World cup. But blockchains, a few hundred, maybe a few thousand transactions per second, is what they can handle. And these are also shared execution machines. Not only are we using that portion of the thousand transactions per second, but every other app in the world is all kind of fighting for this limited resource. So lens just did not scale enough for them to just enable anyone to use it because we would either bring down the network or the gas prices would go so high that it would make polygon kind of unusable. So what we've been building since December, when I say we, the royal we, it's really the engineering team and they're really smart and they deserve all the credit, have built out what we're calling like an optimistic l three. And this is a new protocol that has been kind of built from the ground up that will scale in the range of like 25 to 55,000 transactions per second.
00:26:23.750 - 00:27:05.698, Speaker B: And this has been tested and tested and tested. These aren't just kind of like random numbers that are being thrown out. It actually does do that. So we're really excited to kind of bring lens to scale. And then the next thing that we're doing beyond that is we have to figure out and actually execute on how to do content moderation in the sense of if someone bots the network with a bunch of spam, do you want that to show up or not? Now, if you're building on a permissionless protocol, you can't stop those people from doing that. So at the protocol level, nothing's happening. But we do have different APIs that people can choose to use.
00:27:05.698 - 00:27:43.520, Speaker B: We have different recommendation algorithms that people can choose to use. And when someone logs into Twitter and 99 out of the 100 comments on their post or bots, the experience is really bad. So we don't want something like that to be happening on lens. So therefore, we're kind of figuring out how to make our API that people can choose or not choose to use display in a way the content that makes it a good experience. And therefore, that's kind of the next phase of what we're doing. And then once that has kind of been rolled out, and you could almost bucket that as, like, civil resistance in some way. Right.
00:27:43.520 - 00:27:53.842, Speaker B: It's kind of a form of civil resistance. Then we'll make it permissionless, because then we want anyone to be able to use the app and for it to be a good experience.
00:27:53.976 - 00:28:33.566, Speaker A: Amazing. Yeah. And when you have a decentralized social media, there are these things that kind of pop up with this. Right, like the spam piece. And how I envision decentralized social playing out is that you have different protocols at the algorithm layer, and maybe people can get paid to create algorithms, and then maybe you have a top ten to 50 list, same on the moderation protocol. People can get paid to moderate content and label it in certain buckets. And then also on the reputation side, how do you think about these different pieces and how are they applying to lens? Do you think that we'll see those kind of economies and marketplaces spin up?
00:28:33.668 - 00:29:35.918, Speaker B: Yeah, we already have quite a few teams that are building out their own recommendation algorithms that will be making them available for people to use. In fact, there already is one team that's really good. They have team members from Harvard and a few other Ivy League schools that have built and worked in kind of big tech with success. So good, solid engineering teams. So that team has already kind of built out something that works really well, and they're already talking to front ends on lens, and that has nothing to do with us because they can do whatever they want. So if they want to choose to use their algorithms, as opposed to our APIs, then they will do that. And there's also one interesting project where he's making kind of like an NPM type of repository for algorithms that you can choose to use or not use, and you can opt into them at the application layer, or the developers can opt into them or allow the users to kind of opt in and choose their own algorithm.
00:29:35.918 - 00:29:58.326, Speaker B: And everything is like completely on chain and public. It's really cool what they're doing there. So there's a lot of experimentation happening. I'm not sure what will be successful, what won't be successful, but at the very base level, we want to offer something that is usable. And then once the developer gets traction, they can start optimizing what they're building with some of these other solutions.
00:29:58.358 - 00:30:39.858, Speaker A: I think amazing, super powerful. And I don't know if you followed, but TikTok. There was risk of TikTok being banned, and the founder had to testify in front of Congress. And now actually, TikTok is saying they're going to start censoring certain content, starting with climate change. And so it's interesting because from my standpoint, these tech companies shouldn't be the ones to dictate or decide what truth is. It should really be for the individual to be empowered to decide what content you can see and what content they want to see, what algorithms they want to see, instead of extractive algorithms that are just trying to monetize the users. What's the culture like within lens around these kind of topics?
00:30:40.034 - 00:31:18.254, Speaker B: The culture is very open. We all have our own opinions about this stuff, and there's a lot of discussions and things that people disagree upon. And I think that's really a good type of culture to have, because there shouldn't be a person that dictates what is done and what isn't done. And I think that we have a lot of people that are really smart and that come from all different backgrounds, which helps bring together interesting conversations with a lot of different perspectives. So it's been really great. It's been an awesome experience, actually, all the work I've done in web3 has been awesome. I can't really complain.
00:31:18.382 - 00:31:39.510, Speaker A: Amazing. And I guess just on the topic of censorship resistance, because it is important, right? If you are being put, like if you have the power, at some point either you become corrupted or someone corrupts you or forces you to do corrupt things. So I guess, how are you guys approaching that just within the lens ecosystem in terms of censorship resistance?
00:31:39.670 - 00:32:48.766, Speaker B: So at the protocol, there is no way for us to censor anything. It's just kind of like how you can't stop a transaction from being written to the Ethereum network or whatever. But what people can do is choose, like we talked about earlier, which algorithms to buy into and which APIs to use, and maybe even building their own APIs and basically surfacing the content that they want to see. So the protocol is completely censorship resistant. The middle layer, kind of where people query their data from, is going to be the place that people can either choose to censor certain things or not choose to censor anything. It just kind of is up to the user, it's up to the developer, and it's still fairly early in that space. We have our API, there's a handful of other APIs that people have built that are out there, but I think in the next six months we'll probably see a couple of other widely used APIs that might differ in how they do content moderation and things like that, because you definitely don't want to surface if you have a million people using your protocol.
00:32:48.766 - 00:33:04.726, Speaker B: There are certain things you just don't want to surface, right? You don't want someone getting killed or something like a video of that in front of some kids or something. I don't know. There's a bunch of these scenarios that you kind of do have to figure out these things. And it should, like you said, be up to the user to choose what they want to see.
00:33:04.828 - 00:33:15.142, Speaker A: Totally amazing. And then you mentioned Polygon. Let's double click into that. Why the choice to build on polygon as opposed to maybe a L2 like arbitram? Optimism.
00:33:15.206 - 00:33:56.834, Speaker B: Zk sync so this choice was definitely made before I got there. I can only kind of speak to what I understand about their decision. And with polygon, it is kind of more of a trade off between decentralization than maybe something like arbitrary, more optimism. I think it's more of kind of like a side chain. And the trade off there is decentralization a little bit. The trade off, I guess, was less expensive transactions, maybe. I don't know if they're faster or not, but maybe less expensive transactions, because the number of transactions that are being processed on the network today is very expensive.
00:33:56.834 - 00:34:53.450, Speaker B: But the new infrastructure we're rolling out still uses polygon, but it's around, I think, 1000 x or so more scalable, and also around, actually around 700 x is kind of more of the number, I think that is correct. And around 1000 times cheaper than directly being on polygon. And kind of alpha here, because again, this isn't going to be released until after the announcement. The general idea is that only things that need to be on chain are on chain in the sense of being on an actual blockchain. Everything else is still stored in a permanent, immutable, decentralized network. But unless it needs to be tokenized, it isn't actually on chain on the polygon blockchain. And therefore we're able to say, if you want to comment on a post or you want to post a tweet or something like that, that doesn't really need to be on chain, then it doesn't have to be on chain.
00:34:53.450 - 00:35:04.410, Speaker B: And then if someone wants to collect that or someone wants to mint that into an NFT, then that would go on chain. So the technology that's enabling this under the hood is rweave and bundler network.
00:35:04.490 - 00:35:10.000, Speaker A: Amazing. That's great that it's so crypto native. And then why rweave over like an.
00:35:11.090 - 00:35:54.170, Speaker B: You know, IPFS has a lot of complexity that's built on top of it to enable this idea of permanence, I think you have to have filecoin and all this other stuff, but the nature of rweave, that separates it, I think, from IPFs. And I'll learn this, that the graph got intro to rweeve. There is that in addition to offering immutability, which they both offer are we promises the permanence. And that obviously depends on the protocol existing and the technology working as the founders say it will. But it's worked really well, I think, for a number of years. So I don't really see that being an issue. So arweave offers permanence and that was the reason that it was chosen totally.
00:35:54.250 - 00:36:20.002, Speaker A: I think that permanence is the product market fit that rweave has. It's super interesting. And then are there any other notable aspects of the lens infrastructure that maybe are centralized today that still need to be decentralized? Maybe around the gateway side, the proxy side? I think right now decentralization is very much a journey and would love to kind of understand those components and then also how serious lens is around decentralization.
00:36:20.146 - 00:37:05.718, Speaker B: So the entire API as it exists today is just centralized. So everything there is centralized. But we do have plans to decentralize that down the road. And I think that once we roll out the new infrastructure, once we figure out the actual high quality filtering of users and things like that, and once we solve all those challenges, that's kind of going to be when we start moving more into decentralization. We also want to support the graph protocol on polygon, and I believe that's coming very soon, if it's not already there, maybe. And then once that's available on the decentralized network, we want to support that. That way people do have an option for decentralized API if they would like to use that.
00:37:05.804 - 00:37:19.158, Speaker A: Amazing. Yes, polygon coming soon. And then describe the unique mechanisms of lens on chain. So maybe around the profile, comment, mirror, collect, monetization, follow, et cetera.
00:37:19.254 - 00:38:26.826, Speaker B: Yeah, for the users, we talked about some of the reasons why a developer might build on lens, or some of the reasons that lens exists as opposed to traditional social network. But one of the reasons, and this is just one of the reasons, but one of the reasons that users are using lens is because it does have built in monetization, it has built in payments, and you can do a lot of cool stuff that just hadn't been done before. So one example of this is being able to just attach a dollar value to a post and allowing people to collect it. And this is a way to kind of show support or to support a creator, just like you have in the past. But it's a little different than what we've seen in the past, though, because in the past, NFTs were typically thought of as these high valued things that are thousands of dollars or even hundreds of dollars or whatever, and they're out of the reach, maybe for the average person. 99% of the people in the world are not going to be spending $1,000 on like a digital asset. But when you have hundreds of thousands or millions of people using a network, it isn't that big of a deal for someone to spend $0.50
00:38:26.826 - 00:38:44.722, Speaker B: or $0.25 or a dollar to support someone. And having native payments built in means that if you click a button to support someone, that money transfers directly from your wallet into theirs. There's no middleman. Obviously. This is all like crypto native stuff. And what we've seen is people doing things.
00:38:44.722 - 00:39:28.034, Speaker B: Like one person quit their job to work on a lens app full time and they posted a $2 collect and they had $30,000 of revenue that just from a post that said, hey, I'm quitting my job to work on lens. You can support me for $2. We had an artist that released a song that they had written in 2017, like six years ago for a dollar or two on lens, and they were like, hey, this is just one of my older tracks. If you want to support me, you can collect it for $2. I think he had around $3,000 of collects. So people are using on chain and crypto native features to enable this sort of thing that just isn't possible. Again, these payments go directly from one user to the other.
00:39:28.034 - 00:40:01.242, Speaker B: No middleman. So cool stuff like that is kind of where a lot of the reason the blockchain is part of it as well. And then the profile itself is an NFT. So when you create a profile on lens, you have all of your publications, all of your comments are kind of all attached to that NFT, and you can then have a little bit of ownership over that. So you can transfer it, you can burn it, you can sell it or whatever. So that's kind of another on chain tokenized aspect of it.
00:40:01.296 - 00:40:12.814, Speaker A: Super exciting. Yeah. It's interesting to see all of these new ways for content creators to monetize. I love TikTok. I'm on TikTok. I love certain aspects of TikTok. I like making content there.
00:40:12.814 - 00:40:32.258, Speaker A: And I think what I see there is a lot of content creators really chasing brand deals, and that's really the only way to kind of make a lot of money on TikTok. And so can you talk a little bit about how lens and web3 social is changing the landscape for how content creators can think about monetization beyond what you already shared?
00:40:32.354 - 00:41:38.502, Speaker B: Yeah, we actually have a bunch of different teams building stuff, and we've had one or two really success stories where they're already, again, fundraising because they've had a lot of success and a lot of usage in this exact kind of space. One is waves. Waves allows you to boost your content and pay creators and pay influencers directly through the platform. And what it looks like is this, let's say you have a new campaign and you have a $1000 marketing budget or even $100 marketing budget, and you want to reach a million people. In the past, you would go to Facebook and you would kind of segment all these things, which was great, but all that money was going to Facebook. What we've learned in the last five or ten years is that a more effective way is to actually find someone that resonates with that audience and pay them and partner with them and let them kind of bring in their own audience. So you can do those sorts of things using on chain information that's available directly through lens, and you can set up a campaign with waves where you can say, okay, I have $1,000 budget or $100 budget.
00:41:38.502 - 00:42:27.706, Speaker B: And for this publication, you have to be following this user, you have to have at least 1000 followers, you have to have all these different things. But if you do meet match these criteria, if you share this publication, then you'll receive $10 or $5. And anyone who is kind of wanting to participate in that campaign can just click a button and they get the money directly into their account. You get the reach that you want. So imagine $1,000 where you're paying $10 per share to people that have at least 10,000 followers. For example, you're kind of reaching a million people with somewhat of a limited budget, but they're also segmented people that you want to reach. And that's just kind of an example of some of this stuff happening.
00:42:27.808 - 00:42:38.030, Speaker A: Amazing, super exciting. And what else needs built, in your opinion? Like what can maybe listeners who are interested in building in the lens ecosystem, what should they be thinking about?
00:42:38.100 - 00:43:34.606, Speaker B: I think that there's a lot of opportunity for these different machine learning algorithms, for recommendation algorithms that will be able to almost bring new experiences to people that just aren't there right now. So I think that's one big area to kind of explore. Also apps that are not just direct clones of kind of what we're used to in web two and we're starting to see a little bit more of that and that's really promising. But if you have an idea of something that is crazy and different, then consider just building it exactly like that. You don't have to kind of follow the rules of what people have done in the past and building maybe for niche communities that will get really excited people using your app, even if it's not a massive number of people, just bootstrapping that initial user base is really important and you can often do that by focusing on some type of niche community.
00:43:34.708 - 00:44:07.050, Speaker A: Totally. I think your point of not building clones from web two is super important because if people have web two and it's functioning well, they're likely not going to switch. So you want new use cases. And we talk about this on the Defiant a lot, but with bitcoin, a lot of people thought the killer use case was payments, but Visa does a pretty good job at payments. So that really wasn't, it was more about store of value. So I think that's a really good point. And then also on your point around the machine learning piece, can you chat a little bit about what you envision that future to look like? Could we double click there?
00:44:07.200 - 00:45:36.802, Speaker B: Yeah, for the machine learning stuff. So I think that AI and machine learning, with the newer APIs and different tools and SDKs that are accessible to kind of like the average developer, they're good at certain things. And one of those things is taking data and kind of making it understandable or taking data and explaining it and condensing it and maybe taking an idea and making it easier to kind of. I don't know how to explain it. But for an example, one thing that we're seeing that people are doing and we're actually experimenting with a little bit at lens, is building database queries using AI. So if we have an API that exists, let's say for instance on the graph, how can we kind of take natural language and turn that into a query and make it to where you have a lot more flexibility for the types of queries that can be given that maybe the average user couldn't have constructed themselves because they're not like a programmer. So when you type in I want all the users with the last name R, then you can kind of turn that into an actual database query using GPT-3 or one of these other hugging face models and stuff like that is kind of what I'm thinking of honestly.
00:45:36.802 - 00:46:07.330, Speaker B: And another good example is that someone built out this app that takes all of your feed for the last week or so and then condenses it into kind of like a highlight reel. And it does that using your preferences and what you've liked in the past. So if you've liked this or that or that, it kind of takes that into account. And then instead of having to log in every day, you can kind of log in once a week and see all the things that have happened in your network and you're kind of saving a lot of time. So those are two pretty cool use cases that we've seen so far.
00:46:07.400 - 00:46:32.118, Speaker A: Amazing. Thank you. And then let's chat a little bit about the data availability piece you mentioned. One reason I'm excited about data availability is because I think for a social network to really take off in a decentralized way with the TPS needed, you'll need something at like a data availability layer. Can you talk a little bit about the thought process around building your own at lens versus using an Eigen layer versus using a celestia?
00:46:32.214 - 00:47:27.846, Speaker B: Yeah, I think that Eigen layer and Celestia are just not quite there yet in terms of maturity, and they also maybe would not be suited exactly for what we need. We already have been using bundler network in a lot of areas. We've been in very close contact with their team. Their scalability has been proven and tested by us and by a lot of people for a while now, and they're also making it more and more scalable and they're increasing the throughput. So with the growth that we hopefully are going to see and have, we wanted to be somewhere where we can kind of be confident and have experience with that already. And the APIs and stuff for Bundler are really simple to use and understand. So it just made a lot of sense, I think, for us to kind of go that route or like we talked about, it's been around for a few years, hasn't had any issues in terms of resiliency.
00:47:27.846 - 00:47:32.062, Speaker B: So that combination was really compelling, super.
00:47:32.116 - 00:47:52.690, Speaker A: Interesting, and then it's super impressive to me as a founder in this space to watch you all execute on ave and lens, which are two kind of different protocols. Can you talk a little bit about that execution on the senior leadership side and how you go about executing at the level you do?
00:47:52.840 - 00:48:52.226, Speaker B: So I've been with Aave about six months now, but most of my focus has actually been working with lens. I think that with Aave there's actually a lot of work that's done through the Ave DAO because it's now kind of a decentralized community that's making a lot of decisions. Ave the company receives like a grant and we do certain things, but a lot of the work is kind of done through the DAO. So the combination of it being a very mature protocol that's been around for a few years, defi not being my strongest suit and my excitement and also the need for a lot of attention to lens. I haven't spent as much time, honestly on Aave, but when we launch the go token on Mainnet in a couple of months, then, or a couple of weeks, I don't really know the exact timeline there. But whenever that happens, I'm going to be spending a lot more time and I'll probably kind of split up my time 50 50. But I would say right now I've spent about 80% to 85% of my time on lens.
00:48:52.338 - 00:48:56.402, Speaker A: Okay, and what's this go token you speak of? Is that the native token to lens?
00:48:56.466 - 00:49:00.602, Speaker B: Oh, no go. Is the stablecoin a stable coin that we're going to be launching yet?
00:49:00.656 - 00:49:06.620, Speaker A: Got it. Okay, interesting. And then what about a token for lens? When will that happen?
00:49:09.630 - 00:49:14.540, Speaker B: I even personally have any visibility in it into it, but even if I did, I'm not able to comment about that.
00:49:15.090 - 00:49:41.746, Speaker A: Fair enough. And then can we talk a little bit about the competitive landscape? I know there's at least like four major competitors from like Farcaster, which are former Coinbase team nodester built out of the bitcoin ecosystem, if that's the right way to pronounce it. Blue sky from Jack Dorsey and then Orbis from Baptiste. How do you kind of think about these and the differentiations between them and lens?
00:49:41.858 - 00:50:55.066, Speaker B: So I think in the past there's been kind of this winner takes all type of scenario, because with how network effects are and the valuations that you kind of seen from these different applications, that's kind of what people expect. Oh, there is going to be one winner, I think. Instead there's going to be multiple protocols and applications that people use that they like based on their own personal preferences, because there's going to be more of a diversity of what's out there. So I think that a lot of the ones that you mentioned will probably all succeed. Some of them may not, but I think we're moving into an area where you only need a few million users to be successful, or a few hundred million or a few tens of million, as opposed to in the past you needed the billions because even Twitter is like hundreds of millions of users, they're still not profitable. But I think that with re engineering and rethinking about how these protocols are built, you don't need that many users to make it sustainable. So I'm hoping and thinking that that's kind of going to be more of like where we're headed.
00:50:55.066 - 00:51:06.522, Speaker B: Like there's these niche types of social networks or these smaller social networks that can succeed and be viable without needing to have hundreds of millions or even billions of users.
00:51:06.586 - 00:51:41.942, Speaker A: Totally. I think that's actually a really good point because if you look at something like a Microsoft or Google, in order to have a sustainable product inside those companies, you need to make about like a billion dollars minimum for it to survive. And we've seen so many great applications with users die because they don't meet those expectations. And in this ecosystem, in this space, what we're enabling is deploy once live forever applications that can survive with even just hundreds of users if that's all that they have. So I think that's a really important point. And then talking numbers. So it's early days, but can you tell us a little bit about what the metrics on lens look like for.
00:51:42.016 - 00:52:34.990, Speaker B: The number of users? I think it's in the range of around 105 to 110,000 users. But what we found is that a decent percentage of those are bots or fake accounts or people that kind of are airdrop farmers types of people. So I would probably cut that number maybe personally in half, maybe. So I would say that there's probably in the range of like 55 ish thousand real users on the network. For actual other numbers that are just outside of that, I can kind of give some information. So for March 2023, and I'm kind of looking at some of the most recent numbers, there were around $31,000 in fees that were paid to creators on the network. Average of about 19,500 daily active users.
00:52:34.990 - 00:52:48.610, Speaker B: And for actual number of applications, I think it was in the range of a little over 100 applications either being used or being developed that are medium to high quality.
00:52:48.760 - 00:52:59.986, Speaker A: Amazing, super exciting. It's great to see that ecosystem really flourishing. And then what's the best way for a user to get their profile up and running within the different apps on lens?
00:53:00.098 - 00:53:37.826, Speaker B: So that's probably the biggest challenge right now for people wanting to use lens. We are rolling out a very straightforward process, though. In a couple of weeks you can go to lens XYZ and look out for that update. You'll be able to just click a button, sign up, get on a waitlist and we're going to allow list you hopefully in a short amount of time. Until then, there isn't like a straightforward way to get on. Most of the time people have gotten on by attending a conference and getting a PO app or attending just a conference and getting allow listed because they had the Denver ticket. Or maybe if you're a developer and you wanted to build on lens, you reached out to me.
00:53:37.826 - 00:53:57.174, Speaker B: There's ways to get a profile, but it's not that straightforward. The two phase process for us to make that better is the new just easy to access waitlist on our website. And then in the future there will need to be no waitlist at all. You just go and you sign up. So I would say keep an eye out for that update on our website.
00:53:57.292 - 00:54:00.246, Speaker A: Amazing. And then what about developers? How can they get involved?
00:54:00.358 - 00:54:42.774, Speaker B: So developers, you don't need a lens profile to build and deploy, even to Mainnet. You can just jump straight into our documentation docs. Lens XYZ is where you'll see all the SDK, documentation, APIs, everything there. If you want to get inspiration for what types of apps are out there, maybe even just play around with some of them. Lens xyzapps, we have around 100 or so apps in lens that we've showcased there. And then if you are a developer with a great idea and you're a good builder and you want to maybe get some help building on lens, we have a grants program. We're still giving out grants in the range of $1000 to $15,000 depending on what your idea is.
00:54:42.774 - 00:54:45.410, Speaker B: And you can also see that on lens XYZ.
00:54:45.490 - 00:54:50.554, Speaker A: Great, thank you. And then Peter Pan, yes, on Twitter asks, what's next for you?
00:54:50.672 - 00:55:25.486, Speaker B: So what's next for me? I'm still here. I'm still excited and building on lens and really excited about some of the updates that we have coming out. I'm still experimenting with Chad GPT and GPT plugins. I'm still doing stuff on the side with like gitcoin passport. It's kind of interesting to me right now. I'm a big fan of some of the modular ecosystem still. So I talked about Celestia, but fuel network is pretty cool because they've kind of built out this entire integrated stack from the programming language to the developer SDKs to the client set SDKs.
00:55:25.486 - 00:55:44.422, Speaker B: So it's kind of like if Ethereum started over and they decided to build out the entire developer stack. That's really cool. So fuel bundler and rweave, we talked about that quite often. I'm still big fans there and I'm always playing around with new stuff there. So there's like a lot of new database technologies that are being built on Bundler and built on Arweave.
00:55:44.486 - 00:55:48.650, Speaker A: Amazing. And then the Gitcoin passport, can you double click into what that is?
00:55:48.720 - 00:56:28.038, Speaker B: Yeah. So Gitcoin passport is kind of the only solution that I know of right now that's accessible for everyone to use for civil resistance that doesn't require some, for instance, world coin. You have to kind of be scanned into that system with the orb, and a lot of people don't like that or whatever reason. Also, you have to literally have been to where that is. And if you kind of make that a restriction for using your app, you're kind of eliminating 99% of the people in the world. So Gitcoin passport is just a way for you to verify your unique humanity in a privacy preserving way. And it uses a bunch of different things.
00:56:28.038 - 00:57:01.874, Speaker B: You can choose to opt into off chain stuff or only on chain or both. And you can get points for having donated to gitcoin grants. You can get points for having an Ethereum address that's like a certain amount of age. You can have points for having an ens domain, all these different things. And then all these points add up to a score that people can then use to determine whether or not you're a real human. And we've had forms that we've put out for lens that have been bought in. Half a million people signed up within a few hours.
00:57:01.874 - 00:57:35.374, Speaker B: And obviously those aren't actual people. They're just like bots. So if you put something like Gitcoin passport in front of that, then you have this huge firewall eliminating, I think, in the range of like 99 plus percent of bots. And even though it isn't going to reduce, I don't think 100%, it does a really great job of kind of like just getting through that initial hump. They released a new API recently, and that's kind of why I've been diving into it, because the old API was really bad. Their SDK was really bad. So the new API is actually pretty nice.
00:57:35.374 - 00:57:37.230, Speaker B: So I would definitely recommend checking that out.
00:57:37.300 - 00:57:54.302, Speaker A: Amazing. Yeah. Proof of humanity, no iris scanning. So that's pretty cool. And it's so important in the age of AI where AI is making songs and art and Twitter posts, you never know if you're dealing with the human or not. So, super exciting. I'll check out getcoin passport.
00:57:54.302 - 00:57:57.430, Speaker A: And the last question is just how are you defiant?
00:57:59.210 - 00:58:45.922, Speaker B: I don't know. I think that being in this entire space in some way and staying here and sticking and continuing to be excited with all of the different challenges and stuff, we're all here to kind of together. In a sense. I think that we're all kind of defiant in that way. But beyond that, I don't really know. I mean, I do like to speak my mind on Twitter and on social media, and I'm not a huge fan of kind of the very, I would say, non nuanced takes that you see on social media. And I often kind of speak up against are a lot of people just like to say things that are black and white when almost all the time there's more of like, a gray area there.
00:58:45.922 - 00:58:52.662, Speaker B: And often that is a very toxic type of attitude to have. So I like calling those sorts of people out sometimes.
00:58:52.796 - 00:59:08.220, Speaker A: Amazing. I love that. And I also love how you are kind of your full self on social media. A lot of times you'll get suggestions that you should niche down and only talk about one specific thing. Can you talk a little bit about how you've approached that? Just because I'm interested?
00:59:08.990 - 00:59:41.110, Speaker B: Yeah, I think I just follow my curiosity and I think that there's so much cool stuff to be curious about. That again, learning about stuff, sharing that in public. Learning in public. I end up being fairly diversified around the things that I'm learning. So I've spent years building web technology, years doing mobile, years in cloud, now I'm in web3. So I kind of have this diversity of experience that maybe makes it easier to kind of speak to and be able to pick up other things as well. So that's kind of just who I am.
00:59:41.180 - 00:59:45.570, Speaker A: Amazing. Love it. Okay. Amazing. Well, thank you so much for coming on. This was a great combo.
00:59:45.650 - 00:59:49.270, Speaker B: Thank you for having me. Hopefully we'll bump into each other at an event soon.
00:59:49.340 - 00:59:50.530, Speaker A: Totally. Cheers. Netty.
