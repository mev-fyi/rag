00:00:04.600 - 00:00:15.474, Speaker A: All right, here we are with Marcus Paul Solzholuna, co founder of Blend Protocol. Marcus, great to be interviewing you. Welcome here to the Defiant.
00:00:16.054 - 00:00:30.254, Speaker B: Yeah, good to be here. Just really quick correction. I'm the co founder of script three. We contribute to blend protocol. Blend protocols, decentralized open source financial app.
00:00:30.754 - 00:00:39.474, Speaker A: I got it. Okay, so that's a good place to start if you can tell me more about blend protocol and script three.
00:00:39.634 - 00:01:14.422, Speaker B: Yeah, of course. So script three is just a software development studio. We do blockchain development, mostly DeFi protocols mostly on the stellar ecosystem. So far, we've been building there for the past three years or so. Pretty smart contracts, actually. We first started there by building a layer two smart contract engine which we were using to build another lending protocol on stellar. Then right before we were going to launch that they announced Sorabom.
00:01:14.422 - 00:01:46.820, Speaker B: So we switched to building on that. But anyway, what we're building is blend protocol. Or I guess blend capital is the actual name but it's a modular liquidity protocol. So think like Aave but a really, really, like, primitive implementation of it. It allows anybody to deploy any money market they want. Lending market, leverage market, real world asset lending. XYZ makes it really easy for you to deploy your own market whether it's managed or unmanaged.
00:01:46.820 - 00:02:02.234, Speaker B: And then we have clever mechanisms that manage interest rates and security for you so that you don't have to deal with a DAO or anything. Just supposed to be very, very easy to use and handle the hard parts for you.
00:02:03.494 - 00:02:10.994, Speaker A: Really interesting. So a more open minimized version of AAVE, I guess.
00:02:11.294 - 00:02:18.884, Speaker B: Yeah, it allows you to deploy individual instances of AAvE and then handles the stuff that Aavesdao would handle for you.
00:02:19.004 - 00:02:26.724, Speaker A: Do you handle that in like, does a team manage that or is it like smart contracts doing that?
00:02:26.764 - 00:03:03.416, Speaker B: Yep, it's entirely algorithmic. So, like, in lending protocols, in Defi, daos are only responsible for, like, three real things. They manage risk parameters. They, like, hit a kill switch if things start going south, they ensure the protocol and then they manage interest rates and stuff. So you can actually automate most of that. For interest rates, we just use an eye controller which just algorithmically moves interest rates up or down. We have the same curve thing but the curve just basically shifts up or down if the market is over or underutilized.
00:03:03.416 - 00:03:38.590, Speaker B: So you don't have enough capital borrowed or you have too much capital borrowed. It attempts to change interest rates to bring you back to the target level. So that means that you don't need, like, a group of people moving interest rates up and down. And then we have a kind of neat mechanism called a backstop module. So this kind of works like just a pool of insurance that every pool has. And there's a minimum threshold of insurance that a pool needs in order to be enabled in the first place. And then if insurance starts to leave too quickly or drops below the minimum threshold, the pool is automatically disabled.
00:03:38.590 - 00:04:06.172, Speaker B: So instead of having to have someone hit a code switch, you just rely on these people that are depositing into the insurance pool to say, oh wait, risk factors changed. We can no longer like, this pool is no longer safe. We're going to pull our money because we're first lost capital and the pool automatically shuts down and you have to migrate to a new version of the pool with updated risk parameters and maybe a new oracle. If the oracle was the issue, whatever the issue was, someone can go and redeploy that pool after fixing the issue and the insurance capital should migrate over to the new version.
00:04:06.278 - 00:04:29.704, Speaker A: That's super interesting. Yeah. I was going to ask the reason why many lending protocols rely on AdAo to approve different collaterals. It's because of the risk of having a very liquid token as collateral and how that can create bad debt for the protocol. But interesting to hear the different solutions that you've implemented to mitigate that risk.
00:04:29.864 - 00:05:02.214, Speaker B: Yeah, yeah. Our stance is that we're a just really trying to encourage people to not put bad collateral in the protocol in the first place. Of course. And having that insurance requirement is really good at that. Because if you ask someone to go be first lost capital for a pool with terrible collateral, they're just not going to do it. They're going to lose their money first. As soon as the oracle blows up or the asset just loses all value or whatever, it's a really hard sell.
00:05:02.214 - 00:05:51.592, Speaker B: And then on top of that, we have a couple other things that help mitigate if someone does go and set up a pool with bad collateral. We've got a couple other factors that help protect the pool. We a have like a lot of times when a lending protocol is exploited or the oracle goes bad or the collateral is bad, most of the money that gets stolen is in just like idle collateral assets that are sitting around the pool. So like if they're using Ethereum as collateral, I guess it's pretty liquid staking derivatives. So if they're using staked ETH as collateral, there's a lot of that just sitting in the pool that's not borrowed or the used for anything. So they're instantly going to go borrow all that and steal it. So we have utilization caps that prevent assets that are used as collateral or not use as collateral being borrowed over a certain level.
00:05:51.592 - 00:06:42.176, Speaker B: So it works kind of like a borrow limit, except it's more mutable and needs less management. So that helps prevent too much just liquid capital sitting in the pool. And then the other aspect that we have is just because we have algorithmic interest rates that really make sure that the correct amount of capital is sitting in the pool and there isn't a bunch of slack capital, there should never be too much even borrowable asset sitting in the pool. A good target utilization that we're shooting for is 85% of the capital is borrowed. So that means that like 15% of your TVL will be in the pool, like available to be stolen. If you get exploited for some reason, and for a high risk pool, the backstop module should be more than sufficient to cover any bad debt realized from a piece of collateral blowing up.
00:06:42.360 - 00:06:49.712, Speaker A: Super interesting. And where do the funds for these insurance funds come from?
00:06:49.848 - 00:07:37.170, Speaker B: Yeah, so that's what our protocol tokens used for. We have a protocol token called blend. Really its only utility, its not a governance token, its just a utility token. And you deposit blend USDc liquidity pool shares into the backstop module and use that to ensure pools. So you do that because you receive emissions a and then pools can also have a configurable backstop take rate that can send a portion of interest that borrowers pay to backstop module depositors. So thats how they incentivize people to come and insure their pool in the first place. Right? So yeah, just anyone that has that asset can go ahead and deposit it and like stake it to the pool, so to speak, if they want to hold the asset and get interest from the pool.
00:07:37.322 - 00:07:46.298, Speaker A: Okay, so you said that those insurance pools are comprised of ETH USDC, no, blend.
00:07:46.346 - 00:08:02.124, Speaker B: So blend is like the protocol token. So like blend USDC liquidity pool shares. So going back to the Aave parallel, it's like Aave safety module has like a balancer, or like it's got a balancer pool token that's ETH and Aave. So it's like that.
00:08:02.824 - 00:08:28.392, Speaker A: Okay, okay, so it would be blend on USCC. Okay. And then, so you'd have to have those two tokens to stake in the insurance pool. And then you get a share of the interest that's being paid to borrow. And you said also additional blend emissions, like rewards.
00:08:28.568 - 00:08:55.944, Speaker B: Yeah, okay, yeah, we send, like our emissions mechanism is like very immutable very simple. We spit out one blend token per second. 70% of those get sent to backstop depositors, 30% get sent to pools based off of how large their insurance pool is. And then the pool parameters govern how the pool emissions are then distributed between lenders and borrowers.
00:08:56.244 - 00:09:07.188, Speaker A: Okay, got it. Super interesting. And Soravan just launched. Does this mean that this is just live as well?
00:09:07.356 - 00:09:58.442, Speaker B: No, not quite. We're live on testnet. Although our audits are done, our contracts are all done. We are just doing some final testing and finishing up some auxiliary contracts, stuff like Oracle aggregators, XYZ, just like bots, just the little things that you need to make sure that the protocol actually runs well. So we're finishing all that up, making some final touches on the UI and then we think our rough estimate, trying to get my dev team to yell at me, but our rough estimate is that the protocol should be deployed like the first week of April or so, maybe second week. And then we're looking at having the first pool up mid April. These days are all fuzzy because script three won't actually be deploying any of this stuff.
00:09:58.442 - 00:10:17.314, Speaker B: We're open sourcing it all and telling the community hey, this is good to go, go ahead and start deploying stuff. And then someone in the community will probably most likely go ahead and deploy the contracts from the GitHub or they won't. And then we just never launch. But you know, I'm pretty confident.
00:10:18.534 - 00:10:40.462, Speaker A: All right. Okay, so we're. Okay. Exciting. So you're just about to launch. And how have all the testnet interactions gone so far? I guess it doesn't include real funds. But have you had the ability to have real users test this out?
00:10:40.518 - 00:11:33.616, Speaker B: Yeah, yeah. We've got a fairly large user base, I guess, of testnet users. People have kind of been waiting for blend to come out for like it's got, it's been like two years at this point, which is crazy, but like because we were originally going to launch yield blocks, which is like the old, old lending protocol that we were going to launch on our layer two smart contract engine that was built on top of stellar and that got a bunch of people with stellar ecosystem excited about smart contracts on stellar. And then that launch got cancelled because they decided to make smart contracts a part of the layer one blockchain, which was a very good decision, but did push back our launch while we waited for them to actually finish doing that. So yeah, there have been a lot of people sitting in a discord waiting for things to go live. They have all been poking around with the Testnet and providing feedback. XYZ.
00:11:33.616 - 00:11:47.964, Speaker B: It's been great because we just, rather than having to go find people to beg them to use the UI to make sure that it's bug free and works smoothly, we just put a link in the discord and all of a sudden we have way too much feedback.
00:11:48.264 - 00:11:53.488, Speaker A: Amazing. Very cool. Why did you decide to build on stellar?
00:11:53.616 - 00:12:26.100, Speaker B: Yeah, so it's. We. We really like Stellar's general focus when it comes to blockchain. Like they. They very much know, or at least we think that they know what blockchain is good for and they're very much willing to stay in that lane. Like, they're not trying to be a world computer, they're not trying to beat Ethereum or like anything like that. They're not trying to be like a super crazy credible, neutral cypherpunk settlement layer.
00:12:26.100 - 00:12:59.704, Speaker B: They are trying to make a settlement layer that is centralized and really good at finance. They have that with stellar classic, which is, I guess what we're calling old Stellar at this point, which is still very much operational. That's a very good payment layer. It's really good for getting cash on and off chain, as you heard, with all the Moneygram stuff. XYZ. And it's really easy to build wallets and stuff on top of. So then they decided to go and expand that with smart contracts and make it so there's actually a reason for money to stay on chain instead of just like being used as a transmission layer.
00:12:59.704 - 00:14:09.194, Speaker B: So I guess that's getting a little bit off topic. But yeah, we think that the blockchain is most useful as a tool to drive financial inclusion. It's something that has been like a long term thesis of ours for a while, and stellar being so focused on that made us very interested in building on top of them. Blend is built with. It's built in such a modular way in a large part, so that wallets or anchors, which is what we call stable coin issuers on stellar or remittance companies can go and spin up their own pool to finance remittances, or to add some utility to their stablecoin, or to just plug into a wallet if the wallet wants to manage their own pool. So we wanted to support all the wallets that are spinning up in developing countries and all the non USD anchors that are being created on stellar. Because it's such a wide and smaller ecosystem, we thought it was a really good opportunity to just put a really modular, easy to use product out there to just.
00:14:09.194 - 00:14:18.450, Speaker B: I don't know, transform and accelerate all of these products that we see people trying to build, but not quite having all the tools they need yet.
00:14:18.562 - 00:14:25.906, Speaker A: Can you tell me more about your beans integration now that you mentioned Moneygram on stellar?
00:14:26.010 - 00:15:15.004, Speaker B: Yeah, so beans is, there's a team that we've known for a while, and they're just like a wallet based in the EU, which is also an interesting point, because now apparently wallets are illegal in the EU or whatever. Yeah, it serves the entire globe, so I don't think it'll affect them too much. But anyway, back when we've been building blend for almost a year now, or has it been longer? I don't know. It's been a long time. We've been building blend since Sora Bond was announced. Basically working with that, working with SDF to provide feedback on the developer experience, XYZ, all of that stuff. And so a couple months in, we started talking to beans because they really wanted a lending protocol integrated with their wallet so they could offer like a yield option or a savings option.
00:15:15.004 - 00:16:14.824, Speaker B: So we worked with them for a couple months. It wasn't even that long. It's a really simple integration. They just like, we have like an SDK that makes it really easy for them to get all the information they need from chain about blend and to interact with the smart contracts really easily. So I think it took them a couple weeks to get everything plugged in, then a little bit longer to get all the UI stood up and everything. But yeah, at the end of the day, it just ended up being a really simple savings tool in their app. So now anyone with access to a MoneyGram location can now take their local currency and go to MoneyGram, turn it into USDC, which they get on beans, and then immediately go put it into a blend pool, which then provides gets them interest because someone's either borrowing that USDC to leverage on crypto, or a really common one installer is there's a lot of remittance companies, so people want to finance remittances, and financing remittances is actually quite safe when it comes to lending and very, very lucrative.
00:16:14.824 - 00:16:45.874, Speaker B: A lot of remittance companies in developing countries are willing to pay like 30% annually to borrow dollars just so they can process remittances faster and get more liquidity, because there isn't enough capital in those markets. So they can then lend those funds directly to those companies who are then willing to pay them 15, 20% for their dollars. So there's a really powerful savings tool that's just in anyone's Android or iPhone.
00:16:46.774 - 00:17:23.889, Speaker A: Very cool. Okay, so the idea is that from my conversation with stellar, I learned that remittances is a really strong use case. People are using stellar to get cash in and out of their countries. But now with blend, those users can start earning interest on their local currency or I guess on USDC, which is what you'd want in a developing nation.
00:17:24.041 - 00:17:27.625, Speaker B: Yeah, exactly. I mean, you'd want us to see, but you could do it.
00:17:27.729 - 00:17:47.688, Speaker A: You can also do it in your local currency. That's really cool. And then that's from the user side and then from the remittance company side, then you can also access USDC or US dollar linked tokens, probably cheaper than they usually be able to.
00:17:47.816 - 00:18:18.382, Speaker B: Yeah, yeah. It's just. It's a really powerful tool for just moving. It's just good for moving liquidity around. You know, someone has dollars in one country, someone else needs to borrow it in another country, all of a sudden you can do it very easily via stellar. Another really interesting one that we're seeing pop up is a lot of people are studying and this is like, kind of a. It's happened a bit on other blockchains, but it hasn't really taken off because other blockchains are very much like western, have a much stronger western user base.
00:18:18.382 - 00:18:35.198, Speaker B: But we're seeing a lot of interest in borrowing local currencies. So, like, if you want to save in dollars, but borrow pesos because you live in Argentina and, like, you want. You need to spend pesos, but you obviously don't want to hold them because they're inflating at like, what, like 17% a month or something. I don't remember.
00:18:35.246 - 00:18:36.102, Speaker A: Yeah, something crazy.
00:18:36.158 - 00:19:06.656, Speaker B: Yeah, I saw the number this morning, but I don't remember it off the top of my head. But we're seeing people use blend because it's so easy to build on top of people that are using it as a base layer to build CDP protocols that issue non USD denominated assets. So you can go create a vault with USDC and then mint synthetic pesos, swap them for a peso anchor and then off ramp them. So now you have the ability to spend pesos while you're saving in USDC.
00:19:06.760 - 00:19:12.232, Speaker A: But how can you off ramp that synthetic vessel into real pesos?
00:19:12.328 - 00:19:33.326, Speaker B: Yeah, so you're going to have to swap the synthetic one for an anchored version, which it would be like a peso version of USDC, which we have multiple of in the seller ecosystem, and they actually work quite well. We even have debit card options where you can use your debit card that has anchored pesos on chain and just spend it with a debit card.
00:19:33.400 - 00:19:39.538, Speaker A: And that's a token that's on stellar. Interesting Ars, I think.
00:19:39.626 - 00:19:41.694, Speaker B: Yeah, it's Ars. But there's a company.
00:19:43.474 - 00:20:04.594, Speaker A: I love, this kind of non developed nation take on things like focus, I guess. Yeah. So with all of this, I'd love to hear kind of where you'd want blend to differentiate going forward from the existing lending protocols.
00:20:06.694 - 00:21:14.624, Speaker B: That's a good question. I mean, it's already like highly differentiated, just like it's built very much with stellar in mind. There's a lot of other things that we want to do in the future that we cut currently just because we didn't want to introduce additional complexity, because we could have made it incredibly modular entirely hooks based, like just this weird, this really advanced hyper modular lending protocol that you could really do anything on, but that all of a sudden requires a lot more technical expertise from the community so they can actually make use of it, which just isn't there in the stellar ecosystem at this point because smart contracts are so new. And like other things like risk parameters, we have very limited risk parameters that we think are highly effective. We purposely didn't add a lot of other ones that we know are useful because it's just overloading a pool creator with too much information and they're going to end up poorly configuring their pool and it's going to suck. So we want to add a lot of those. But I think that the main things that I want to do with blend going forward is I want to add hook support.
00:21:14.624 - 00:22:12.794, Speaker B: I think hooks are probably underutilized in lending pools. You've seen them with uni before, and we'll see how useful they end up being there. I think that there's a lot like, they sound really cool, but I think the liquidity fragmentation you get there is a little bit, and the additional complexity that you're introducing makes it a little bit of a harder sell. But with lending protocols, they're actually very useful for people trying to build protocols on top of you. So I'd like to turn it into more of a base layer where anyone trying to build a CDP protocol with nontraditional mechanisms can go ahead and just use hooks for a lot of their specialized functions, rather than having to build auxiliary contracts that they then have to audit XYZ. So it would just improve the security space for integrations a lot. So that's one thing that I want to do, which I don't think, and no other lending protocol is doing right now.
00:22:12.794 - 00:22:39.494, Speaker B: And then let's see other things that I want to do. I want to make it. I'm going to get way too technical here. I think it's. I guess my main point is that it is already pretty highly differentiated. No one else is doing a liquidation mechanism like ours. Our liquidation mechanism is oracle based, but it doesn't actually depend on oracles to price the liquidation, which insulates you from a lot of oracle risk.
00:22:39.494 - 00:23:26.534, Speaker B: The interest rates are very unique the way that our internally, we use a native multicall which allows you to bundle multiple operations together. So it removes a lot of the need for flash loans and other auxiliary contracts that are complicated. So yeah, we've got stuff like that already. I basically just want to keep that because I think it's. We're already pretty far ahead in terms of those respects. I mean, there are other products that are working on stuff like that, but it's unique and interesting. And then I want to augment it by adding native hooks that can allow pools to do a lot more interesting things other than just lending and borrowing.
00:23:26.834 - 00:23:44.046, Speaker A: Got it. Super interesting. We'll be keeping track on the launch and how early traction, how that develops and. Yeah, thanks for sharing this story with me. Really interesting stuff.
00:23:44.190 - 00:23:46.614, Speaker B: Yeah, of course. It's always a pleasure, you know.
