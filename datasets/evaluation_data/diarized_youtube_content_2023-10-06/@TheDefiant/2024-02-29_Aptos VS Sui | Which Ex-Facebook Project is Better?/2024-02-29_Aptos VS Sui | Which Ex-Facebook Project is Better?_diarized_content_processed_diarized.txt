00:00:00.170 - 00:00:30.402, Speaker A: Okay, so there's another chain that's also founded by former meta employees, Sui. They also use the move language. So, curious about Aptos versus sui. I know you probably don't want to be thought of in those terms, but it's still interesting to me. They just look very similar in the surface. So how should I be thinking about them? Is there a different focus that you guys have or you build differently?
00:00:30.546 - 00:01:11.630, Speaker B: Yeah, great question. So I think what people are kind of not aware of is move is more of a community aspect and not so much of a, we're all sharing exactly the same code base. And that's good, that's healthy. I'd say what we've seen that's really resonated well with us is that the version of move that Aptos uses is also being used by a number of other projects in the ecosystem. And a lot of community members have been helping us to develop this over time. And something that we're really excited about, I'd say, in terms of the system design, we are not just different than Sui in this aspect, but we're different all other networks. The way we do parallel processing is using a form of what we call dynamic parallelism.
00:01:11.630 - 00:02:06.838, Speaker B: Other systems use static parallelism. And so that requires you kind of declare upfront what data you're touching as a kind of requirement to the way they schedule. Aptos is very different in the sense that it analyzes at runtime what the dependencies are, and then kind of extracts as much parallelism as possible. And this is something where Defi, you get a huge benefit from dynamic parallelism. And the reason why is because you have a situation where, say, you have this tree of orders you need to kind of traverse through and kind of match with the matching engine and the ability for dynamic trails, and to be able to do the runtime matching as opposed to declaring up front, I might touch these objects, I might touch these objects, but I don't know, allows you to extract much higher performance than any other network out there. And so we've been really excited about what block STM can do in this space, and augmenting the capabilities of block STM with other things like hints over time.
00:02:06.924 - 00:02:24.170, Speaker A: Interesting. Okay, so the main difference is that you use dynamic parallelism, and as I understand it, it's having nodes run different sets of data, like different functions at the same time.
00:02:24.320 - 00:03:05.126, Speaker B: Broadly what, it's definitely a low level optimization, I would say. But the way that you define kind of what data you're touching in the system is different in aptos. And every other system out there pretty much. And that way we do it just allows for much higher concurrency and especially comes out to be a huge benefit for defi applications. We also have other things that I think other networks do not have, such as secure on chain randomness. And this is a really neat feature where we have a hackathon actually running right now for exploring this feature. And there's so many use cases in terms of gaming, enterprise use cases you could think about when you open up a loot box.
00:03:05.126 - 00:04:10.810, Speaker B: How can it be truly random if you have a casino, how can the slot machine be truly random? Or you're playing poker or card games, these things as well. So this ability for the blockchain itself. So if you think about a proof of stake blockchain, a proof of stake blockchain guarantees that the safety and liveness of that blockchain is going to be for sure there as long as more than two thirds of your stake is secured. And the same thing for us is true for the randomness aspect. And this allows you to build out things you can't just do anywhere else. So having that ability for on chain randomness, that is unique, the ability for us to support dynamic parallelism, which is unique to Aptos, and also having the fastest consensus protocol out there through what we've been doing so far with our current version of Aptos, BFT plus what shoal is going to bring in the future, also just provides that massive throughput that we talked about that no one else can match in industry. So those are kind of our differentiators versus kind of other networks, not just sisui.
