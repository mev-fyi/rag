00:00:07.690 - 00:00:37.110, Speaker A: Welcome to Zero Knowledge, a podcast where we talk about the latest in zero knowledge research and the decentralized web. The show is hosted by me, Anna, and me, Frederick. So today I want to welcome Tom, who's a product manager from Starquare, and Will, who's the co founder of Diversify, to the show. Hey, guys.
00:00:37.260 - 00:00:38.226, Speaker B: Hi, Anna.
00:00:38.338 - 00:00:39.150, Speaker C: Hi, Anna.
00:00:39.250 - 00:00:59.130, Speaker A: So the majority of this episode is going to be us exploring this collaboration between Starkware and diversify. But before we jump into this, I actually want to kind of welcome back Will, because you actually were on the show last, I think it was like about a year ago. I guess a lot's changed.
00:00:59.290 - 00:01:46.074, Speaker C: Exactly a year ago, I think we were in Berlin and we talked mainly about dexs. And of course the Dex space has changed a lot in the last year. But also I started a new company, Diversify, which was specifically to create a really scalable, high throughput Dex. And previously it was known as Fpinex Trustless. So in particular, we were spun out of Bitfinex and had focused on building a prototype proof of concept for doing self custody trading. And diversify is really kind of the sort of child of that project, but in a much more sort of serious and scalable way for kind of now being able to really handle at high speeds many traders.
00:01:46.202 - 00:02:14.566, Speaker A: And you've actually incorporated some ZK into it, which is cool through this collaboration. Now, I should say our listeners may have heard your name mentioned by me, because Will and I have also, we founded a company together, a separate company, not diversify. And that is the ZK validator that I've mentioned a couple of times. I wonder actually, Will, do you feel like that in a weird way, influenced your interest in zero knowledge stuff, or were you already into it before?
00:02:14.668 - 00:02:43.322, Speaker C: I think it was definitely a theme that I was interested in, but probably even a year ago I saw this as bit of an opportunity to really dive deeper into the topic. And certainly in retrospect, it almost felt like very lucky that we ended up doing that together separately as well as diversify, ending up working with Starkware to kind of have the crossover and see the full spectrum of ZK.
00:02:43.466 - 00:03:10.058, Speaker A: For anyone who isn't familiar with the ZK validator, I have actually mentioned it a couple of times on the show. But the purpose of the ZK validator is the idea here is that we can actually validate on different networks and use any of the rewards or the commission on the rewards to promote or be advocates for privacy on those networks. And so this is kind of a very unique validator proposition. Which is focused more on one particular kind of research than anything else.
00:03:10.144 - 00:03:48.894, Speaker C: That's kind of the beauty of what ZK validator is doing, is that by participating in these proof of stake networks and trying to actively encourage research and the right mindset around making sure that actually exactly what we're doing on Ethereum with starkware, in terms of scaling an application for a much wider number of users, can be done on these future proof of state networks. So, for example, Cosmos and Polkadot, where ZK validator is now active, will hopefully be able in quite a short amount of time to support applications just like diversify and other scalable layer two solutions.
00:03:48.942 - 00:04:10.970, Speaker A: I mean, one day actually will, I'd love to do a whole episode, maybe not a whole episode on us, but I'd love to have a chance to talk more about it. But this episode is really about the work that you've been doing with Starkware. So you've just given a quick brief to the listeners about what diversify is. And even though we've had Ellie on and Alessandra on from Starkware, Tom, maybe you can share a little bit about what Starkware is.
00:04:11.120 - 00:05:12.618, Speaker B: So Starkware is, I think, almost two and a half years old company, which was funded by four co founders, professor eleven Sasson, Professor Alessandro Chiesda, I think he was by now a doctor, Michael Reapsev, and our CEO Uri Kolodney, and technology company, which develop and implement a full stack of proofing systems. Our main goal is to solve the two most critical problems on the blockchain, which is privacy and scaling using proof systems. Now, I'm not sure if your audience is familiar with zero knowledge proofs, but gladly. Zero knowledge proofs, in my opinion, can solve those two problems by privacy, by using the zero knowledge part, and scaling, by using the fact that the proofs are logarithmic in the size of the computation. And our first partnership and our first product is diversify and the Starkx, which is a self custodial layer two stark based exchange.
00:05:12.714 - 00:05:22.574, Speaker A: Cool. So as a follow up to that, though, I want to hear a little bit more about you and how you got to know position and the work that you're doing at Starquare.
00:05:22.702 - 00:05:42.806, Speaker B: Sure. So, my name is Tom. I'm working at Starquare for almost two years now at the product group. I'm in charge of the collaboration with diversify, and also I do research on protocols, which research the connection or the integration of proof systems into blockchains.
00:05:42.918 - 00:05:47.850, Speaker A: Cool. Did you study this kind of stuff before? Like how did you get to this point.
00:05:48.000 - 00:06:29.170, Speaker B: It's a good question. So I first studied physics and mathematics, and I worked in this field for almost six years. And then I somehow, I guess a lot of people came into this topic the same way, but I stumbled into bitcoin and it captured me or fascinated me. So I decided to do a master in computer science and specifically research this topic. Somehow I stumbled across Ellie Ben Sasson office. It's a more complicated story. But anyway, he agreed to be my advisor on my thesis and I did the research on those topics, specifically on proof of stake protocols.
00:06:29.170 - 00:06:32.170, Speaker B: And then I landed on Starcore after that.
00:06:32.240 - 00:06:40.880, Speaker A: Wow. But you got interested in bitcoin and blockchain and then jumped to the forefront of all this stuff, right? Kind of skipped a few steps or something?
00:06:41.890 - 00:07:07.860, Speaker B: Yeah. Actually, my education on computer science was mainly through mean. A lot of the things which, for example, for my colleagues in starkware, which have a very deep background in computer science, find very strange in blockchains. For me, it's like this is the way I was introduced to computers. So in many sense, those stuff make a lot of sense to me.
00:07:08.170 - 00:07:27.210, Speaker A: So let's talk about this collaboration and what exactly you've built. Because in the past, we've heard of ZK roll ups, we've heard of optimistic roll ups and dexes. But what is the Starkward diversify collaboration? Exactly.
00:07:27.360 - 00:09:09.350, Speaker C: Diversify is aiming to offer a high speed exchange that looks and feels, if you're happy with that, like a centralized exchange in terms of speed, performance, privacy, but where ultimately you have the knowledge and ability to verify that every trade, every action that you're taking is cryptographically proven and at the kind of end of the process, essentially proven directly to main chain Ethereum, where we, at least, because all the assets also issued on that have and trust the economic guarantees that it gives us. What that sort of means is that from a customer point of view, they're interacting with diversify. But once they're sort of signing orders, for example, so every single action that they take, they sign with a key that they own. We sort of on our back end once, let's say a trade happens, send these to starkware, who generate a stark proof and submit that directly to the blockchain. So essentially what we've kind of done is move the exchange one layer up off Ethereum, so that everything's happening off the blockchain. But in between the two, we have this proof system, which is what's thought by starkware and really gives the kind of ability to suddenly allow us to have tens of thousands of trades, hundreds of thousands of trades, potentially every minute, rather than sort of the much smaller throughput you can get through the blockchain with other dexes. And long term, that means sort of more efficient trading and the ability to get much better price discovery and bring in a much bigger and sort of more mainstream set of traders than is currently using their custodial exchanges.
00:09:09.510 - 00:09:32.366, Speaker A: I want to understand a little bit what this actually looks like under the hood when you talk about this. I automatically go to the ZK roll up model of a batching system, where you have all these transactions and then a single proof being written on chain. I'm really curious to hear, though, how do you describe the system? How is it actually working under the hood?
00:09:32.478 - 00:10:01.798, Speaker B: Sure. What cost today on Ethereum are three things. One is computation. The other one is storage. And the last one is transmission or call data, the way it's called the material. The basic notion of layer two solution is to take off the chain some of those parts, but still maintain the security of the main net. And the way we do it is that we batch together batch of transactions that happen off chain, diversify sends them to us, and we create from them a batch.
00:10:01.798 - 00:10:28.710, Speaker B: And then for this batch, we create a proof. And basically what this proof is saying is that three things. One is that for each transaction, we saw a valid signature. The second one is that the user had enough balance in their accounts to do this transaction. And the last one is that after we applied all the updates to the user balances, this is the Merkel route, and we commit it to the chain.
00:10:29.610 - 00:10:53.360, Speaker A: Like the first two parts, the fact that you saw a valid signature and the user had the correct balance or enough tokens in their account to be able to make this transaction. That sounds a lot like Zcash and the snarks that they're using to basically prove every transaction. The Merkel route. Proving to the other chain, though, is potentially where it diverges. I guess.
00:10:55.090 - 00:11:07.634, Speaker B: It'S actually very similar, because also in Zikesh, you have a miracle tree. The main difference with Zikesh is that in Zikesh, it's a Utxo based blockchain, right?
00:11:07.672 - 00:11:07.874, Speaker A: Yeah.
00:11:07.912 - 00:11:37.558, Speaker B: So what do you actually prove is that, you know, a commitment, which for this commitment, you know, a valid Utxo, and you prove that, you know this commitment because the Merkel route is part of the block itself. Of the block in Ziggy. Right, exactly. So in a sense, it's very similar. Right. Because you don't actually store the state of the commitment tree on the blockchain, but it's the state of the nodes. But you still can relate to it in a proof because it's part of the block.
00:11:37.558 - 00:11:49.258, Speaker B: So it's very similar to what we're doing, only that we're not using UtxO, but we're using accounts. But the ability to relate to a state is possible because we have the commitment on chain.
00:11:49.354 - 00:12:05.442, Speaker A: Got it. So the difference here is you're also sitting on top of an existing blockchain. So you're writing to the Ethereum blockchain, basically. And also you are using starks and not snarks, I guess. Big difference, too.
00:12:05.576 - 00:12:10.626, Speaker B: Yeah, it's a big difference. And also the proof is not for a single transaction, but for a batch.
00:12:10.658 - 00:12:18.006, Speaker A: Of transactions for a batch. Okay, got it. The batching part is where it's very similar to the ZK roll up then.
00:12:18.108 - 00:12:55.474, Speaker B: Yeah. What I described up until now is the same for what is being called today, validium and ZK rollup. And if you remember, I said there are three things that cost gas on Ethereum. So in both systems we remove both storage and computation off chain, but where we differ is what we do with the transmission. So in ZK rollup, you post the transaction, the necessary data to reconstruct the state as part of the data of the transaction on chain. It is not part of the storage of the EVM, but it is part of the transaction. And in validium, you don't do it.
00:12:55.474 - 00:13:13.500, Speaker B: And instead what you do is that you provide, along with the proof, an attestation from a committee. And we can talk more about this committee in a few minutes. An attestation from a committee that they have the necessary data to reconstruct the state.
00:13:14.110 - 00:14:00.998, Speaker A: I want to just point out, you're using this term validium. It's a really new term. And I think actually later on in this episode, we're going to start to talk about the quadrants and the types of these layer two scaling solutions, and hopefully we'll get a chance to dig in a little bit deeper on what that means. So, to our listeners, don't worry, we're getting to it, but just know that the diversify exchange is considered this validium style layer two solution. Okay, so I think we've kind of started to scratch the surface on how this is working. You just mentioned a committee, and I want to understand where the committee actually lives in everything you've just described. So is the committee off chain?
00:14:01.174 - 00:15:20.814, Speaker C: Yes, I think as Tom was just saying, really the main method of creating these batches and submitting them on chain to prove a certain state that's the same. However, you transmit the data about what the state is, and one way you can do it, and I think the kind of simplest way potentially is just to put it all on chain publicly as pool data. And that doesn't require this committee, basically, because at any point, anybody who's used this, or actually anyone else can reconstruct and from the data that's been put on chain what the state is, and therefore see that the state is valid and potentially check any future state transitions. But that means that all this data is public. And actually that's the case now with most decentralized exchanges on layer one, Ethereum. But that actually doesn't meet the design requirements of what diversify was aiming for with private trading. And that's very important, particularly to, let's say, any larger trader who has a specific trading algorithm that they're making decisions based on, where if they're giving away their trades, particularly over a long period of time, if they're making very higher frequency trades, they're basically losing their strategy, because it can be then seen, especially if it's profitable, by anyone else and copied.
00:15:20.814 - 00:16:51.706, Speaker C: And so we needed to make sure that that data wasn't on chain and that users could know that they're able to trade privately. And so this second option, which is to put the data off chain and held somewhere else, and the committee as being the answer to that, was the way that we had to go. And essentially, these committee are real trusted or known organizations with reputations at stake who exist in this ecosystem, one of which is starkware, another which is diversify, but also a series of other sort of well known brands like infura, nevermind, consensus, who most people at some level, actually, if you're using Ethereum, particularly through a browser where you're using metamask or whatever else, sort of have anyway some sort of implicit trust in. Basically the solution is that they are always holding a copy of all users data and will sign any state transition before it can be submitted to the blockchain. Which means that there's a guarantee that a certain number of these organizations always have a copy of the data. And if for any reason, sort of starkware or diversify both disappeared at the same time, any of these organizations could publish all of that data to ipfs, or also as cool data onto Ethereum, and that could then be used by every user of this system to withdraw their funds from diversify and basically kind of take them back to their wallet.
00:16:51.818 - 00:16:59.870, Speaker B: Two more committee members are iclusion and cephalopod, which are also in the business of proof of stake validators.
00:16:59.950 - 00:17:02.014, Speaker A: Yeah. Iclusion is like Zeki's.
00:17:02.142 - 00:17:02.818, Speaker B: Yeah, exactly.
00:17:02.904 - 00:17:03.250, Speaker A: Company.
00:17:03.320 - 00:17:07.282, Speaker B: And Cephalopod is Bookman. Yeah.
00:17:07.336 - 00:17:24.714, Speaker A: Oh, yeah. Cool. Okay. Like you just talked about kind of a worst case scenario if two of the entities disappear and you needed to potentially reclaim those tokens. But what about where does it normally live? Does it live with you? Does it live with each of the committee members?
00:17:24.912 - 00:17:52.866, Speaker B: So the committee member does not have any role in the standard operation of the system. The users does not have any interaction with them, and we just send them a copy of the data and receive a signature from them on the new state that they compute. But it is not necessary for the validity, it is not necessary for anything but the attestation that they have the data. So when a user normally wants to withdraw his funds. And this was your question, right?
00:17:53.048 - 00:18:00.582, Speaker A: Well, actually my question is where does the ledger live? That's what I'm actually asking. I'm like, where does the record of all of this live?
00:18:00.636 - 00:18:05.430, Speaker C: Somehow it's on a database that each of these members hold, including it is.
00:18:05.580 - 00:18:06.182, Speaker A: Okay.
00:18:06.316 - 00:18:12.854, Speaker C: And it's constantly updated. And they then use this to compute the Merkel route and sign that it's correct, essentially.
00:18:12.902 - 00:18:14.794, Speaker A: I see. And each of the committee members would.
00:18:14.832 - 00:18:17.770, Speaker B: Do that on each batch.
00:18:19.150 - 00:18:24.110, Speaker A: Okay. Would it be like a committee member will do one batch or each one does each batch?
00:18:24.610 - 00:18:25.802, Speaker B: All of them. Each batch.
00:18:25.866 - 00:18:26.190, Speaker A: Okay.
00:18:26.260 - 00:18:38.638, Speaker C: But there is like a minimum quorum. So if a few of them go offline, they can still proceed. But if nearly all of them go offline, basically the system would have to pause and wait for enough to come online to sign the next update.
00:18:38.734 - 00:18:58.870, Speaker A: Okay. So I know that when this was released, the committee was a point of kind of like, it was pointed out as something that sort of makes it a little bit less decentralized. How do you kind of take that? I assume that was a trade off that was made like a purposeful decision.
00:18:59.030 - 00:19:51.170, Speaker B: Yeah. I think that the criticism was not about the decentralization, because in any case, other solutions can say many things, but now all the layer two solutions have a centralized operator. So it's not about decentralization, it's more about trust or more concretely about security risks. So what? The attacks on the system described some way to use this committee in order to lower the security of the system. So this was the criticism, and I understand it, but I think like any other decision in the system, there are trade offs. I mean, there are many things we already have a design for and want to do looking forward that can lower this risk. But since the fundamental requirement was that trade offs will have creating privacy, so this was the first solution we decided to go with.
00:19:51.260 - 00:20:15.962, Speaker A: Got it. So it's almost like this is potentially the first shipped version on a roadmap. And I understand what you're saying here. So it's not about decentralization for decentralization's sake. It's rather like when people want it, they want decentralization because there's no point of failure. You've created the committee to sort of mitigate having a central point of failure, but it's not all the way to being completely mitigated or like, I mean, I'm sure it's mitigated enough.
00:20:16.116 - 00:21:10.686, Speaker C: Yeah, I mean, the thing is what this solution mitigates is, for example, neither diversify or starkware could maliciously take users funds and use them for any other purpose. We could never financially benefit from any disaster scenario. Essentially what we've mitigated is these sorts of issues, but there are still scenarios where, for example, if we all go offline or the data stuck, where funds can get lost, can get stuck, basically. And by having this committee, we've mitigated that. But not as much as if all the data was fully published on chain. But it's still extraordinarily unlikely that these essentially sort of very well known organizations who anyway are in the business, as Tom said, with inclusion and cephalopod of essentially running proof of state systems at high availability, are all going to go offline at the same time and not be able to do that job. So it's a very good mitigation.
00:21:10.686 - 00:21:36.522, Speaker C: And by the way, I think the concerns are really interesting and things that will be improved on in the future. As you said, it's part of the roadmap. But none of these concerns come from traders. That's the thing. These are from real decentralization sort of experts who of course want to see it improve, and so do we. But it probably does right now, I think, actually solve exactly what traders need. And anything else is almost a bonus to the actual users of the system.
00:21:36.656 - 00:21:54.962, Speaker A: And this is significantly different from the centralized exchanges where there are central points of failure, or there could be very centralized malicious actors who could do things to your funds. This is already like a pretty big leap away from that, it sounds like.
00:21:55.016 - 00:23:03.890, Speaker C: Yeah, definitely. And I think something I got really excited about just last week, which I think is another sort of quite strong indicator of why DeFi and other Dex systems are going to start to continue to grow. Was diversify launched now five weeks ago, and we got insurance last week from Nexus Mutual, which is this on ethereum staking system, essentially, where people can put ETH at stake on different smart contracts. And if there's ever like a hack or breach or security incident with lost funds, customers can get refunded. And five weeks after launch, this system is now insured up to 1000 e, which seems maybe trivial, but if you actually think about that, that's something that no centralized exchanges or very few centralized exchanges on any scale have ever achieved. And this is just a starting point where it can continue to grow. And that's because the way that it's designed and the way that it's auditable and transparent on chain, despite the fact that, yes, there's some centralized points, means that the risk can be quantified.
00:23:03.890 - 00:23:06.038, Speaker C: And it's a huge difference.
00:23:06.204 - 00:23:40.754, Speaker A: Cool. I want to move on to. I want to talk a little bit more about starks themselves because we've had Ellie and Alessandro on. I've actually had Ellie on twice to talk about Starks and Starkware. So there's some episodes that I can actually link to in the show notes if people want to dig in there. But what I want to find out about now is how starks inform how this system functions. Because as we understand, as I've always understood, snarks and starks differ in terms of proof size and verification size.
00:23:40.754 - 00:23:49.320, Speaker A: Or. Sorry. Rather, they differ in terms of proof time and verification time. So how does that actually change this system?
00:23:49.690 - 00:24:26.146, Speaker B: First of all, one more thing that they are. I mean, they're deferring their mathematical construction, which implies that, one, they're deferring in their trusted setup, or stark does not have trusted setup, and snark do have trusted setup, both in the universal trusted setup version or in the specific circuit trusted setup version. And also they differ in their cryptographic assumptions that they're using. So starks only need collision resistance hash function, which is very, how should I.
00:24:26.168 - 00:24:27.970, Speaker A: Say it, well researched.
00:24:28.710 - 00:24:49.386, Speaker B: Yeah, it's not exotic. As Ellie stated it very nicely in his lecture and post, it has a lot of value on top of it. So if someone will break this, then there's much more value currently, right, than the diversified system that they can take.
00:24:49.568 - 00:24:53.580, Speaker A: If they could actually break collision resistant hash functions. Yeah.
00:24:55.470 - 00:25:43.034, Speaker B: I will get to the proof size because there is difference. But you need to compare apples to apples, right? Yeah. Okay. But you're also right, there is difference in the proof size. So, for example, the proofs that we're now using proof, diversified batches are on the order of 40. If, for example, you will look on the proof of snark, of sapling of Zikesh, then it's 200 bytes, right? So it looks a big difference, but actually. So let's say we want to prove 300k transactions in a single proof, okay? So if you will go to snark proofing system, then you are limited by the size of the circuit that you created your trusted setup for.
00:25:43.034 - 00:26:26.354, Speaker B: So you can't use one proof in order to prove this amount of transactions. So suddenly you need more proof. Let's say, I don't know, ten. And also, if, for example, we will look at the proving system that Zksync is using, its name is plonk, and their proof size is approximately, and I hope I'm not wrong, but I think it's approximately 1 kb. So suddenly, for example, there might be statements that we can prove in one single proof, which will take, I don't know, 40 kb, but they will need ten proofs or even more proofs. So suddenly it becomes, I mean, it depends exactly what you're comparing is Zksync using plonk.
00:26:26.402 - 00:26:27.720, Speaker A: I didn't know that, actually.
00:26:28.110 - 00:26:28.570, Speaker B: Yeah.
00:26:28.640 - 00:26:29.514, Speaker A: Okay, cool.
00:26:29.632 - 00:26:54.510, Speaker B: So a naive comparison of the proof size really yield the fact that stark proofs are larger. But their ability to prove much bigger statements, I think, mitigates it. And it's not things that I can talk about them now, but in the coming month, we will have very, I don't know, in my eyes, amazing improvements which will close this gap.
00:26:54.930 - 00:26:55.726, Speaker A: Cool.
00:26:55.908 - 00:27:45.122, Speaker B: Okay, so this is one thing now on the verification time, then I even don't think that this is correct. For example, we released, I think it was last week or two weeks ago, the ETH Stark, if you're familiar with it, it's an open source prover that we released as part of a project with the Ethereum foundation, which proves hash chain of rescue, which is some stark friendly proof. And I don't want to misquote the numbers, but we prove a lot of hashes in a very little time. Okay. I think it's something like 100k hash chain in 2.3 millisecond. But again, I don't think there's any snark system that can make this proof, and the verification time will be lower.
00:27:45.122 - 00:28:38.322, Speaker B: So again, there are many numbers which are quoted from the original academic papers, but when you actually go down to the engineering details and how you construct those systems, then the differences can be very situational. Can you say it. Yeah, what I wanted to say is that we are at Starcore, we have no like a wedding with starks. We are a technological company and we want to solve problems. So once we will see that there is a better proof system, I mean we have the manpower and all the things we need in order to move to those proof systems which will be better. So we don't have any stake in stark proving system and we also always keep on evolving it. But once we will find something better, we will immediately switch for it.
00:28:38.322 - 00:28:50.838, Speaker B: And it might be the case that for some things one proof system will be better and for other things other proof systems would be better. The way we see it now is that Starks has almost any advantage that you can think of.
00:28:50.924 - 00:28:58.920, Speaker A: Cool. I want to ask sort of a question about the collaboration itself. Like how did these two organizations actually work.
00:29:00.650 - 00:30:10.718, Speaker C: Mean, the kind of line between the two is pretty clear and self explanatory almost. So essentially from a customer perspective, there is no start query almost. So their interaction is all with the smart contract on chain or with our APIs or user interface and essentially all of the kind of main exchange software like the website, the user interface, the APIs through to the point where trades basically get matched or transactions get created in let's say diversified database or diversify side. Actually I think the easiest parallel is to talk about the way that the platform used to work. So when I last came on, a year ago actually, we were running what was then called FNX. Trust us, it was a similar concept exchange, but every single transaction when it was ready, this is like a trade. For example, we would send directly to Ethereum and we would pay however much gas, let's say 150,000 gas for that transaction it would get accepted into the blockchain and that would be the user's trade complete.
00:30:10.718 - 00:31:02.350, Speaker C: But basically that step where a transaction would get submitted to Ethereum, instead of doing that, we send it to an API provided by Starquare. And from that point on, everything along the journey is then Starquare's side of the system where they would collect eventually enough of these transactions to generate proof and then broadcast it to Ethereum. So that's kind of where the split is. And in terms of also kind of and linking to the efficiency point of view and the proof sizes, basically that old system compared to how it is now, you would have needed around, it's only around 20 transactions for it to become more efficient using a batched proof. Because beyond that point, basically even the cost to submitted to Ethereum becomes cheaper.
00:31:02.710 - 00:31:26.978, Speaker A: I mean, the user is still hooking up a wallet though, right? They own their accounts when they use this system. So they link up their wallet to diversify. They make a trade. I'm kind of trying to follow that route. There's basically a smart contract that's been deployed that interacts with their wallet.
00:31:27.074 - 00:32:03.714, Speaker C: I guess so. Actually, it's only at the point where you deposit and withdraw that you interact with the smart contract. I see come along. You deposit, which is a transaction on chain where you send your funds to the smart contract. And actually from that point on, all of your interactions are no longer with the blockchain because your funds are registered to you sort of in this off chain state. And when the user then wants to trade, what they're essentially doing is saying, I want to place an order to buy ten ethereum at this price. And they sign it with actually a separate key.
00:32:03.714 - 00:32:48.958, Speaker C: It's a key that's been linked to their Ethereum address, which was part of the kind of registration and deposits sort of step on chain. The reason for that is that this particular key that they're using is more efficient. In the start proof that's data used. And that piece of information that they then sign would get sent to diversify. We would determine if it would match with another order, basically by adding it to an order book and having a matching engine that then connects to traders. One person selling, one person buying, and then having decided that would send basically that original information that the user signed to starkware, which they can use this signed information to generate the proof.
00:32:49.054 - 00:33:05.366, Speaker A: Cool. And so what's happening? I know you just described it kind of earlier on, Tom, but let's follow that journey. So now it's with it, the prover itself. Does it sit on your servers? Where does that live?
00:33:05.468 - 00:33:06.360, Speaker B: In the cloud.
00:33:06.810 - 00:33:12.840, Speaker A: But this is basically creating the proof to validate that those are correct.
00:33:13.230 - 00:33:54.338, Speaker B: Yes, it's true. So, as will said, the only truth that we know is what diversify sends us. So they send us a stream of transactions. At some point, we decide either if there are enough transactions or enough time has passed to close a batch. This batch, actually what it represents is a state transition, right? You transition from a specific state to a new state which represents all those transactions taking effect. So, for example, deposit will mean I add tokens to the user balance, so withdraw mean I subtract tokens from the user balance. And a trade is just a trade.
00:33:54.338 - 00:34:13.478, Speaker B: So we close the batch, we generate the proof. As I said before, the proof attests to the validity of the batch. The signatures, the balances that we've never used this transaction before, and then we send the proof and the state update on chain.
00:34:13.574 - 00:34:14.266, Speaker A: Cool.
00:34:14.448 - 00:35:14.610, Speaker B: So I mean, a self custodial system is self custody up to the point of its weakest link, right? So if I have a perfect self custody system, but the user does not know what it's signing on. So anything else is meaningless because I can give it whatever I want to sign. Right? So the wallet is a really big part. If you truly want a self custodial system, you need the wallet to be fully integrated. So both versify and Starkware put a lot of effort into this specific topic. So for example, as will said, we have a slightly different signature mode. So we worked together with Ledger to insert all the necessary parameters to their firmware and to integrate all our methods into their native Ethereum app.
00:35:14.610 - 00:35:51.446, Speaker B: So a ledger user now can use the versify system and he truly see the confirmation. It doesn't just sign this blob of data, but when you want to do an order, then ledger show a confirmation of an order and exactly what the user is signing on. And this is also true hopefully soon for argent, and we have a lot more coming. So for us it was very important not just to have in browser wallet, but to have a truly integration with the user's wallet.
00:35:51.638 - 00:36:35.366, Speaker A: Cool. Okay, so when it came out, there was a whole conversation around, kind of like what are the different kinds of layer two solutions? Is it a ZK roll up? Does it fall under that umbrella term? Does it have something else? Is it using optimistic ideas? Basically all of the different layer twos came back on the table and people felt that they needed to redefine a little bit where they fell. And the axes that they seemed to be working on was whether the data was on chain or off chain, and whether it's doing validity proofs or fault proofs. So maybe we can talk a little bit about this. I don't know what to call, it's like a table or these axes and where your solution falls.
00:36:35.478 - 00:37:41.962, Speaker B: So I think the conversation about it or the discussion about it actually started a week before we launched. And it was this week Starquare demonstrated the migration of a full subreddit into Ethereum. And then the question was asked, what you've just demonstrated, was it ZK rollup or was it some undefined system which doesn't have the data on chain? And what we demonstrated was with the data off chain, the community said, and I think it was correct to say that this needs to have a proper name. So the name validium came up. So, as you've said, there are two axes, and in the very naive descriptions of the systems, you have validity proofs and fraud proofs. And on the second axis, you have data on chain or data off chain. Okay, so I guess that the first system, which was in research, was fraud proofs with data off chain, and their name was plasma.
00:37:41.962 - 00:38:04.550, Speaker B: Right. You have a single operator, and those systems required very complicated exit games because you had to prove with the data off chain that the operator was somehow malicious. In one sense. This was the first. Then I don't know exactly the order, but fraud proofs with data on chain are called the optimistic roll ups.
00:38:05.050 - 00:38:13.942, Speaker A: So you just described that. So fault proofs, if you're just looking in that category, you have plasma, which is off chain, and optimistic roll up, which is on chain.
00:38:14.006 - 00:38:36.706, Speaker B: Yes, exactly. And here, for example, you have arbitrum, which I think falls in this category. And here again, you publish data on chain. So in some sense it is supposed to be simpler, but still you need some kind of fraud proof mechanism to prove an invalid state transition. Right. This is what you use the fraud proofs for.
00:38:36.808 - 00:38:41.666, Speaker A: What did you just, the term you just said, the arbitrum, is that a project does a project, right?
00:38:41.768 - 00:38:42.658, Speaker B: Yeah, it's a project.
00:38:42.744 - 00:38:44.670, Speaker A: Okay. That does optimistic.
00:38:44.750 - 00:39:26.810, Speaker B: Yes, I think they existed even before it was called optimistic roll up. But I see this is basically what they're doing. And in validity proofs, then you don't have this problem of invalid state transitions. Right? Because you can't move to an invalid state because you won't be able to generate a proof to it. Originally, I think it was described by Vitalik in a post init research. So you had ZK rollup, which was using validity proofs and data on chain. And what we opted for was putting data off chain and using a committee.
00:39:26.810 - 00:39:32.926, Speaker B: And for this family of solutions, the name validium came up.
00:39:33.108 - 00:39:44.822, Speaker A: So again, in this case, we're looking at the validity proofs and the two kinds. You have the data on chain, which equals ZK roll up, and you have the data off chain, which equals this new category, validium. Nice.
00:39:44.876 - 00:40:44.214, Speaker C: Yeah, I think it's interesting as well to think about also the difference between the fraud proofs and the validity proofs in terms of trading as an application, because obviously there's different trade offs where each of these different scaling solutions make sense. But particularly for trading systems where the amount of value at stake in quite a short period of time can be very high, particularly if you have large traders operating with big price moves and you don't want to have the risk of potential rollbacks or changes where the game theory also becomes more complex, that the higher the value that's at stake and the faster it's changing. So there's a really strong push, I think, towards validity proofs in particular for this application from diversified point of view as well. Thinking back to a year and a half ago now when we were first considering different layer two solutions, there's a very strong sort of push towards at least that kind of right hand side of the quadrants with validity proofs as opposed to forward proofs.
00:40:44.262 - 00:41:18.194, Speaker A: Yeah, that actually makes sense. And going back to the fault proofs, in the case of like say we take that exact example that you just used of large trades, if you were doing it with fault proofs, what you basically have is you could potentially do one of these large trades that was sort of wrong and it would take some time for that to possibly be rolled back. Right. Like it's this after the fact kind of game theory that would have to correct something rather than what you're doing, where it's like it must be correct before it's written.
00:41:18.322 - 00:41:20.210, Speaker B: It just can't be invalid.
00:41:20.370 - 00:41:20.838, Speaker A: Okay.
00:41:20.924 - 00:41:32.374, Speaker B: Yeah. We can't prove something that either. The user didn't sign on. We can't prove a state which was not updated correctly. It's just not possible mathematically.
00:41:32.502 - 00:41:34.074, Speaker C: So it'll never be rolled back.
00:41:34.192 - 00:41:37.018, Speaker A: So wait, what I just said, is that basically correct?
00:41:37.104 - 00:42:21.578, Speaker B: No, it's true. For example, in our system you have finality when the proof reaches the blockchain. Right. Because then the state transition to a new state. In fraud proofs, you don't have this kind of finality because you have to allow users to verify the state, understand there is an invalid state transition and then start to reconstruct the fraud proof. And then there is some kind of exit game on the blockchain which needs to occur. So for example, for some optimistic roll up designs which were described, the finality time for a state to be actually finalized was two weeks.
00:42:21.664 - 00:42:33.486, Speaker A: Yeah, that's what I've heard too. Not just days, but potentially quite a bit of time, which is worrisome if you're dealing with large sums that potentially have something wrong.
00:42:33.588 - 00:42:53.070, Speaker B: Exactly. There's a lot of game theory analysis to those kind of systems because it's very hard to mathematically prove it right. It's game theory in its basis. So it's very hard to make arguments for very large amount at stake.
00:42:53.150 - 00:43:16.234, Speaker A: Okay. So actually we're at the point now where I feel like we've really nicely mapped out these kind of different quadrants and stuff. And I think maybe this is a good time to talk a little bit about what's coming up, because you have a project in the works, as I understand it, which actually tries to bridge that on chain. Off chain. I want to hear a little bit about this.
00:43:16.432 - 00:44:12.620, Speaker B: Okay. So there are a lot of things going on which will come to the future, and let's try to take it one by one. So we talked about data availability, and I think there are two major improvements that we can offer in the near future in this area. One is, it's called volition. And this is a solution which basically is a hybrid between validium and ZK rollup, in the sense that the user can choose whether its data will be on chain or off chain. So the user can choose whether it wants to pay a premium and not have the risk of what we, at the beginning of the episode described as some worst case scenario with the committee. Or it can choose to have its data off chain and have the full scaling capabilities of the system.
00:44:13.390 - 00:44:18.334, Speaker A: Would one of those options be faster? Like if you're doing on chain, is it in any way?
00:44:18.372 - 00:45:05.200, Speaker B: No, you have to pay for the data that you sense on chain. Okay. The nice thing about it is that you can choose it per transaction. I mean, it's not a choice you make when you register to the system, but it can be a dynamic decision. For example, a big trader can say, generally, I don't know. At night, when I'm not trading, I want to have my funds stored in the on chain data part, and then I don't pose any risk. But when I'm trading, I will transfer them to the off chain data part, have my trades in a very cheap system, and once I finish trading, I will transfer them back to the on chain data part.
00:45:05.200 - 00:45:43.130, Speaker B: So this is one improvement, and the other improvement that I will hint about, but I won't describe exactly because we still haven't published it. But as will have mentioned at the beginning, the decision to go with data off chain was because of trading privacy. Right? So right now, there's no solution, or at least there's no widely known solution to both have data on chain and maintain privacy. So another solution may go down this route. You can have data on chain but still maintain privacy of the traders.
00:45:43.950 - 00:45:54.430, Speaker A: There is something, I don't know if you've heard of this. There is the ZKZk roll up, but I don't think it's implemented at all yet. I don't know if you've heard of that, but that's the private ZK roll up.
00:45:54.500 - 00:46:37.446, Speaker B: Exactly. So we have this design, and what's nice about this design is that it has benefits both if we choose to have data off chain and on chain. On chain, it's very clear. Right. You can have the security, but lose your trading strategies, but off chain you also have a lot of benefits, because now you can suddenly have a much wider committee, because one problem with the committee is that they know all the users data, so you have to be very careful and have very strict rules on what they do with this data. But once you make this data private, then you have less problem with expanding the committee.
00:46:37.638 - 00:46:57.518, Speaker A: I see what you're saying, yeah. Right now you need the committee members to be somehow trusted, because they do have sort of some sight into what's actually happening. Whereas going forward, you could potentially expand out the committee because you're actually going to make it unviewable by each member. So they wouldn't be able to be malicious.
00:46:57.614 - 00:47:26.106, Speaker C: Yeah. In the ideal case, every large trader becomes a committee member and holds all the data, at which point, and the smaller traders don't care as much. Really, both of these two solutions end up pretty much meaning that as a customer, you have the full range of choice over whether how much you care about your security and your privacy and where you want your own trade off to be. And of course there can be defaults. But basically you're saying to the customer, it's up to you, whatever you want.
00:47:26.208 - 00:47:57.266, Speaker B: Yes. If we think that Ethereum and the financial activity on Ethereum will be what we hope it will be, and it will, I don't know, expand to worldwide. I mean, it is worldwide, but let's say mainstream. I don't know how to say it. If we want to have big adoption. Yeah, big adoption, then opting for the data on chain solution just does not hold. Right, because it is a short term solution.
00:47:57.266 - 00:48:35.700, Speaker B: But we must keep researching what solutions we can afford that allows us to have logarithmic scale, meaning that the amount of resources that we consume on chain grows logarithmically with the amount of transactions we do off chain, because otherwise we won't be able, even if we go from, I don't know, three trades per second, which was before layer two solutions, to, I don't know, 300 trades per second, which what Zika roll up can give you today. Really? This is not enough.
00:48:36.070 - 00:48:54.770, Speaker C: Yeah, I think that's a really interesting point in that already. The size of the state on Ethereum is already too big. And even though, yes, you're down the amount of data you need to put on with on chain data for ZK roll ups, it's still actually potentially going to grow way too big if there's ever huge adoption.
00:48:54.930 - 00:49:07.180, Speaker B: Yeah. So I think there's no escape from finding a really good data availability solution and saying we just put all the data on chain because this is like the safest. Won't hold.
00:49:07.790 - 00:49:23.514, Speaker A: Got it. Okay, so it's not like you guys did a one off partnership and then it's over. It sounds like there's still a lot of work going on. So I'm curious to hear what else is happening, what's going to be coming as you move forward.
00:49:23.652 - 00:50:40.898, Speaker C: Absolutely. I mean, entirely the premise behind this, and I think what makes it such a strong partnership, is that diversify is specialized on exchange, self custody exchange, and equally starkware is specialized in the scaling solution. And so the combined effort means that we can move very quickly. And part of the plan is to keep pushing out changes and improvements over the next, however long. And one of the ones that's planned soonest, and which is actually the thing I'm personally most excited about, is basically an upgrade which allows essentially better and faster communication between layer one being ethereum, and layer two being essentially where these balances are held off chain. And so the simplest example of this is that right now, one of the common problems for someone who wants to use any layer two exchange, including diversify, is that because of this batching system, actually, let's say you want to withdraw funds out of the system, you have to wait for the next batch to be complete before you can get your funds out. And because there's a cost per batch, actually, right now a batch may be only every hour or even less often, because we want to make sure there's a certain number of transactions included in that batch.
00:50:40.898 - 00:51:48.570, Speaker C: And so if you want to withdraw your funds, you have to wait. Now, this upgrade, which I think I'll let Tom talk about, the kind of real in depth cryptography behind how the proofs work, basically allows you to have a conditional proof that says, for example, I want to withdraw funds from diversify, and I want to get it right now. Someone can send funds on chain directly to the user and they can sign this transaction that's valid in the next proof that says, okay, in return, let's say they're withdrawing five ethereum. In return, I will transfer five ethereum on diverse by to whoever sent that on chain transaction. But it will only be valid if I receive my five ethereum on chain within a certain amount of time. And so that then allows you to have direct interaction between this on chain transactions and the proof off chain. And that actually can be extended even further to mean that you can have direct interaction between any deFi sort of protocol on chain and trades on diversified.
00:51:48.570 - 00:52:37.680, Speaker C: So let's say you want to deposit funds into compound to earn interest. You could, again, do a conditional transaction to say, let's say someone else has funds on chain that they deposit into compound. You could receive those in diversify and vice versa, which allows all sorts of arbitrage opportunities. And basically meaning that this layer two system is no longer sort of isolated and separated from all of this exciting stuff that's going on in the rest of DFI, it can become fully integrated and have all the same sort of interactions that can happen with other protocols. So, I mean, to me, that's basically the big missing piece right now in terms of layer two, because you kind of made this trade off to say, yes, it's scalable, but it's no longer connected with all of this sort of money lego type stuff that everyone is going crazy about. Finally, we kind of connect the.
00:52:41.570 - 00:53:47.666, Speaker B: I mean, I share the excitement of will because as I've said at the beginning, Dexs was really matured last year, and now we have a scaling solution for them. And the next step will be to connect this scaling solution with the whole ecosystem. So what we actually constructed is a way to condition an off chain transaction on an on chain transaction. Okay. The easiest example is it is actually exist in the system today, right? If diversify wants to tell us off chain this user deposited, I don't know, five e, then the proof will only be accepted on chain if an actual deposit transaction happened on chain. Right. Diversify can tell us this user deposited and the proof won't be accepted if a real deposit didn't happen on chain.
00:53:47.666 - 00:53:48.440, Speaker B: Right.
00:53:49.130 - 00:53:53.960, Speaker A: That's how it is currently in that first sort of element. That's the way it is.
00:53:54.890 - 00:53:55.814, Speaker B: Yes, exactly.
00:53:55.932 - 00:53:57.714, Speaker A: The first action. That's how it is.
00:53:57.772 - 00:55:02.570, Speaker B: Yeah, exactly. And now we can expand this idea to basically any transaction on chain. So, as will said, the fast withdrawal is you conditioning an off chain transfer on an on chain transfer, right? I'm saying I will give you five ether on chain only if you will give me five ether on chain off chain. It depends. Let's say I want to get my money on chain very fast, and you're a big liquidity provider with the ZK validator. So I want to get my five e on chain. So I condition my transfer to you off chain on the fact that you transferred it to me on chain.
00:55:02.570 - 00:55:36.230, Speaker B: So you get this transaction, it's signed, it's valid, you know, you can include it in the proof. All you need to do is transfer me the funds on chain. Once you did this, we can include it in a proof. And the proof will be valid because the proof guarantee that it will only be accepted if this transaction really happened on chain. And what will said is very nice because the transaction can be any ethereum transaction. So I can condition an off chain operation based on any on chain transaction.
00:55:37.390 - 00:55:44.650, Speaker A: Cool. I mean, the potential there, what do you think could be built out of that? Like what kind of systems?
00:55:46.590 - 00:56:25.880, Speaker B: I'm very excited about it because it's an infrastructure that we will include in the next version that will allow basically the developer community to make innovations for the system. Right. Because anybody can write those types. I mean, the way, the way we do it is that you deploy a contract and you do this operation through this contract. So basically anybody will be able to write a contract. I mean, you have a new idea, you want to provide it to diversify users in exchange for some fees, and you will just be able to implement it the same way DeFi works today. Right.
00:56:26.970 - 00:57:20.694, Speaker C: It sounds good, but it's permissionless. Innovation unleashed again, whereas that wasn't really possible before on layer two. Just like the way that it's happening in Defi now, where people come up with ideas like flash loans and anything that they want, and suddenly they can all interact together. And I think some of the things that I'm most excited about are definitely going to be, to start with, quite simple, just allowing people to interact with borrowing and lending protocols, for example, to take long and short positions on diversify, instead of only long positions right now, you can only buy a token. You couldn't come and short it. But if you can interact clinically on chain with borrowing platforms, then suddenly you can do that on diversify. But yeah, as Tom said, the most exciting piece is that anyone can actually start to come up with other ways of doing these interactions.
00:57:20.694 - 00:57:26.700, Speaker C: And I think that will create a whole range of opportunities that most people haven't, we suddenly haven't thought of yet.
00:57:27.310 - 00:57:36.240, Speaker A: Exciting. That's cool. Well, I guess it sounds like it's a project to keep our eye on. Congrats on this launch and everything.
00:57:37.170 - 00:57:38.014, Speaker B: Thank you very much.
00:57:38.052 - 00:57:42.720, Speaker A: Cool. So this sounds amazing. I'm really excited to see what comes next.
00:57:43.890 - 00:57:44.880, Speaker B: Me too.
00:57:46.850 - 00:57:47.214, Speaker C: Yeah.
00:57:47.252 - 00:57:48.798, Speaker A: Thanks for coming on the show.
00:57:48.964 - 00:57:52.000, Speaker B: Yeah, it was a real honor being here.
00:57:52.450 - 00:57:55.970, Speaker A: Very cool. Okay. And to our listeners, us. Thanks for listening.
