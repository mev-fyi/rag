00:00:00.250 - 00:00:17.840, Speaker A: Yeah. I want to now introduce the two other participants of this panel. So it's Sergey from Axelar and Zucky from sommelier. Do you maybe both want to just say a few words about what you work on so that we get some context for what we're going to be talking about? Zucky, you go ahead first.
00:00:18.850 - 00:00:21.758, Speaker B: So in sommelier, what we are building.
00:00:21.844 - 00:00:22.480, Speaker C: Is.
00:00:24.450 - 00:00:27.960, Speaker A: Your audio is a little bit funny. Hopefully you come in. Okay.
00:00:28.410 - 00:00:29.158, Speaker B: Yeah.
00:00:29.324 - 00:00:29.990, Speaker C: Better?
00:00:30.140 - 00:00:30.934, Speaker A: Yes.
00:00:31.132 - 00:00:31.880, Speaker C: Okay.
00:00:36.490 - 00:01:12.066, Speaker B: So what similia is doing is we are using a very similar bridge to the Althea bridge. That is, instead of focusing on the bridging tokens use case, we are doing a thing that is essentially decentralized defi execution. And so we are composing data sort of validation and instruction validation and custodial functions on the cosmos chain with the DeFi execution on the eats side of it.
00:01:12.248 - 00:01:28.920, Speaker A: Very cool. And, Sergey, why don't you tell us a little bit about XLR and maybe how you see yourself placed in this kind of bridge landscape? By the way, Deborah, I love that slide, and I'd like to get a copy of that slide with all the bridges. That's awesome.
00:01:29.290 - 00:01:37.366, Speaker D: Oh, just real quick on that. That's one Kx. They did a great job, really. Blockchain bridges, building networks of crypto networks.
00:01:37.558 - 00:01:44.078, Speaker A: Actually, your slides, I think some people were asking for it. Sorry. Sergey, back to you. Please introduce what you are working on.
00:01:44.244 - 00:02:02.050, Speaker C: No worries. Yeah. So, Sergey, I work on the Axral network, which is universal interoperability network and stack to connect different blockchain ecosystems, including proof of work chains, proof of stake, IBC chains, layer ones, L2s, and so on and so forth.
00:02:05.190 - 00:02:37.360, Speaker A: In general, going kind of back to that slide that you shared, there's these different bridge philosophies, and I wanted to sort of explore some of these. I wanted to understand if there are kind of distinctions between the ways that different bridging or interoperability projects are really thinking about how to move tokens. And I think, Sergey, as I understood it even from our previous conversation around, like, you don't necessarily see yourselves as bridges, but rather something else. And I'd love to hear that philosophical difference and why you see it that way.
00:02:38.610 - 00:03:21.386, Speaker C: Yeah. First of all, I think the slide does have some inaccuracies from one kx. So I think, happy to talk about those. But on a high level, the way we thought about the problem is that we just want to scale interoperability. Right. And we kind of went back and thought about, how do we do that? And it really comes down to kind of two layers that you have to build in that process. One is you have to build basic kind of connectivity layer and allow you to connect ecosystems that speak very different languages, right? You have sort of avalanche, you have Solana, Algorand, Ethereum, bitcoin networks.
00:03:21.386 - 00:04:16.634, Speaker C: They all have very different consensus. They have very different software stacks. Some of them have instant finality, probabilistic finality. And so the way we thought about is how do we make it easier to onboard these new chains, right? And how do we design a stack to do that? And so while we do have kind of a bridging, I think is a mechanism to do that. And there's a technology to do bridging through either IBC or kind of a relay and multisigs or threshold. But overall, we just thought about how do we make a network that does those functions easier? And then on top of it is the second layer, which is quite important. And I think that's what serve Zach has been working on is how do you make it easy for the applications to go cross chain, right, and interact with these ecosystems? And that comes down to building these application layer protocols, message passing routines on top of the bridging stack effectively.
00:04:16.634 - 00:04:37.570, Speaker C: Right? And so we at the axler kind of are focused on both at making a network that makes it easy to build these connections, but also a universal application stack where we're not building an application ourselves, but we're working with our partners to use these messages and pass into, make it easier to go cross chain, essentially.
00:04:40.070 - 00:05:14.420, Speaker A: And actually throw into you. Zucky, given that you are building in that kind of strata, do you have to make certain decisions of the trade offs that are like, of bridges that are available today? Do you feel like there are some kind of core qualities that, you know, certain bridges already can deliver? I'm kind of wondering how gelled your decisions are around these bridges so far. Do you feel like it's very in flux? Do you feel like you may have already found the solution you're going to stick with?
00:05:14.950 - 00:06:56.310, Speaker B: So I view what we're doing is building an architecture. It's like understanding the goal is to actually understand similia is a very frontier application of cross chain compatibility. And we are sort of hitting all of the novel problems that will exist in the future as other people go down this road and we are sort of living and dog fooding the future. Our strategy right now has been to sort of, sort of own the bridge technology ourselves, rather than use a solution from someone else in the ecosystem specifically, because it helps us understand our requirements better to own the entire stack. Whether or not that remains always true is sort of TBD in my mind because it is so painful to speak the languages of all these different possible chains, as Axelr knows very well. I can imagine a world in which we just are like, hey, Axel R, can you just start routing this stuff for us so we don't have to be the bridge? I can imagine a world in know we reach out to the cosmos ecosystem via IBC much more than we currently do. Yeah, owning a bridge is incredibly painful, and everybody who's on this panel is well aware of that insane pain of owning a bridge.
00:06:56.310 - 00:07:19.880, Speaker B: And I think that's one of the virtues of IBC, is that it gives you a chain without having to own your own bridge, like the bridge is built in. But the sort of strategy Somilia is taking is sort of trying to learn how to build what we think is the future of multi chain applications and trying to build it in the present with the tools that are available right now.
00:07:21.290 - 00:08:02.274, Speaker C: And I think just to add to, I think, you know, Zachie and their team, they're pioneers, I think, in the field, right, and lesser of geniuses and what they do. And I think that's what allows them to own the bridge architecture and build a frontier application at the same time. But I think as we talk with a lot of the folks in the ecosystem, they can't really do that. They either don't have the resources dedicated on team or they just don't have the technical expertise. And I think the way we approach it is like, okay, you want to go multi chain, you want to cross, like, we can make it easier for you. So we focus on one part of the know, you focus on the stack that you're good at, right. And that optimizes the value for your application and use cases.
00:08:02.274 - 00:08:18.780, Speaker C: Because as Zach said, I think interoperability is hard. I think a lot of the folks here also work at layer ones and other things. I think interoperability is like the next set of challenges that you don't deal with when you're working on a standalone chain and layer one.
00:08:19.150 - 00:08:26.574, Speaker A: Got it. Sorry, Deborah, I just muted you there because there's a bit of echo, but feel free to jump mean just to.
00:08:26.612 - 00:08:54.790, Speaker D: Kind of give my perspective on it as mean. I think it's really about how you value, capture the user and how you're interacting with know. Basically we can think of blockchains as businesses, right. And if they want to have that integrated and have that part of more of a vertical integration for whatever their use case is versus having that efficiency of volume by utilizing a shared piece of infrastructure. And I think that's just a choice that each blockchain sort of makes depending on how they want to value capture.
00:08:56.090 - 00:09:07.660, Speaker B: Yeah. I'm architecting this system with a vision of being able to switch our bridge implementation as new technology becomes available.
00:09:08.270 - 00:09:09.020, Speaker C: Cool.
00:09:09.790 - 00:09:42.600, Speaker A: I have sort of a very IBC focused question here, which I know is going to come off as a bit naive, but besides this sort of needing to deal with EVM and proof of work, there is IBC. Would it not make sense to try to get more projects, more l ones potentially to put their own form of IBC natively that would easily lock into the IBC system? Has this been tried? Is there resistance? I do realize this is a little bit, like, potentially naive, but I am curious what you think of that.
00:09:45.450 - 00:09:48.038, Speaker B: Most of the answer there is there is work.
00:09:48.204 - 00:09:48.870, Speaker A: Okay.
00:09:49.020 - 00:10:05.440, Speaker B: Just significant amount of work. I believe the Polkadot ecosystems and the near ecosystems are the ones that there's a biggest sort of effective working group around.
00:10:06.450 - 00:10:14.114, Speaker A: Yeah, I know that. Like Polkadot, there was an IBC. I think chorus one had something to do with that. I don't know who's actually leading that right now.
00:10:14.312 - 00:10:40.730, Speaker B: There's a team called the Octopus Network, okay. That is actually doing IBC for near, IBC for substrate, and also composable finance is also working on an effort there. And this has been going on for more than a year and has been steadily making progress. And so these are the details that are being worked out.
00:10:40.880 - 00:10:44.278, Speaker A: But like you just said. Go ahead, Sergey.
00:10:44.454 - 00:11:01.200, Speaker C: Sorry. I guess, actually, just to add to. I mean, I think it is like engineering work. I do think for some chains, it's very different work than for other chains. So I think when we started thinking about interoperability, it was when we shipped out Algorand. Right. And I think the first thing we looked at was IBC, of course.
00:11:01.200 - 00:11:53.018, Speaker C: And Algorand has kind of a different model for how it elects validators, for how it elects leaders, and so on and so forth. We estimate it would be a nightmare in some sense for us to implement IBC at the consensus later. That being said, I think there is also a need to perhaps decouple IBC. Right. And I think a couple people have been talking about it, that there's a verification layer, and there is an IBC sort of message format layer in some sense. And you can imagine various interoperability or bridging protocols that are responsible for the verification layer. So, for instance, you can go through the Axela network, but on top of it, you can implement IBC packet semantics to make it easier for the applications to benefit and compose with other IBC enabled chains.
00:11:53.018 - 00:12:11.640, Speaker C: And so that's something we're looking at internally. And I think it's also important to understand these layers. And I think we could see IBC packet format, I think, across the ecosystems, which would be quite interesting, but you do have to do some translations in the middle. You have to have this verification layer, which is more efficient as well.
00:12:12.330 - 00:13:24.686, Speaker B: So the best way I could try and explain this is a lot of the dynamics that come from the authentication layer make a big difference between how IBC feels. So right now, having this directly inconsensis like client to like client validation layer gives you this property of feeling like it's totally permissionless. Any chain can connect to any other chain. If you try to adapt new authentication layers, you're probably going to give up some aspect of that. There's going to be some set of authorities or some validator set that is going to have to stand there and be like, hey, we're going to provide the authentication middleware here. And so you see that with layer zero's work, you see that with various other things that are sort of, we see that with Axelr, all of these things are sort of fellow travelers and that rebuild the authentication layer. Like right now, though, IBC only has a kind of very boring application, which is the raft token application.
00:13:24.686 - 00:13:56.230, Speaker B: And so what makes people think what is IBC is they're like, I have, this is like the raft token with this very permissionless bridging ecosystem. But as we start seeing more complex applications coming out on top of IBC, which should happen over the course of this year, it might be more valuable to people to be like, hey, we want to speak the IBC packet format over multiple authentication layers, because what we value is being able to have built in support for things like interchange accounts.
00:13:57.130 - 00:14:33.650, Speaker A: What are the trade offs? I mean, what you just described though, like this very permissionless IBC version, is there like a downside to that versus something with more authentication? Besides maybe what chains you can actually use? But more like, are there more risks of, for example, a very malicious chain or a corrupted chain sort of bleeding into the rest of the system? Is there actually higher risk with something like IBC versus more permissioned or more, I know, maybe permissioned isn't the right word, but like a little bit more curated bridging.
00:14:35.590 - 00:15:52.330, Speaker C: Mean. I think the big think, you know, to me, is the engineering costs, right? And the challenges, I think that we talked about, meaning that it's not just the effort, but it's also the maintenance cost. Meaning that if, let's say you have an upgrade to a consensus mechanism, and you integrate it through light client, let's say verification mechanism, whatever that looks like. If you're upgrading your consensus, you have to figure out how do you upgrade light clients on the other chains. Right? So you have this other software that you're writing in parallel, and that's not depending, again, on the chain, it's not a small piece of software sometimes, right? That means while the model, I think is permissionless, you just could have bugs and issues that you're going to have to deal with, because this integration is complex, and you're going to have to audit it all the time, and you got to have to figure out how do you upgrade correctly. So, out of all the things that I think, as we thought through this, I think the engineering complexities that come to maintaining these things, it's like you have two databases, and you're trying to keep them synchronized, right. And you do this by verifying one in another through this verification engine, which it's hard to maintain, I think, in production systems for some types of connections.
00:15:53.950 - 00:16:24.440, Speaker D: Yeah, I would just want to echo that as well too. I think you get, the more generalized you get, the more the node infrastructure has to be more robust, and the potential for centralization starts happening there as well, as it becomes more costly. And then you have more issues with node infrastructure going down, or relayers having issues, whereas having a more decentralized approach or lots of bridges is probably a good thing in some respects as well, and that you have redundancy as well.
00:16:26.970 - 00:17:03.300, Speaker A: I want to bring up this sort of topic of, are roll ups like different chains that are bridged to a single main chain or not? I kind of want to talk a little bit about the article, or I don't know if it was a blog post or a bunch of tweets that Vitalik had sort of raised about this idea of a bridged network system versus the roll up model, and one being kind of more or less secure than the other. Yeah. First of all, do people on this panel believe that roll ups also use bridges, or do you see them as something else?
00:17:05.450 - 00:17:13.160, Speaker C: Yeah. The way that I view it is a roll up is a chain of various levels of decentralization with a single bridge by.
00:17:19.070 - 00:17:39.790, Speaker B: So the way I think of a roll up is in the IBC version of a bridge, we verify the consensus mechanism of the sending chain. In the roll up version of a bridge, you actually verify the state transition function in the bridge.
00:17:43.030 - 00:17:46.530, Speaker A: But you see both as using bridges.
00:17:48.790 - 00:17:51.026, Speaker B: Roll ups are just blockchains with a.
00:17:51.048 - 00:17:52.542, Speaker A: Bridge that is unique.
00:17:52.606 - 00:17:54.210, Speaker B: They're just blockchains with bridges.
00:17:55.850 - 00:17:58.600, Speaker A: And is there some risk to this?
00:18:00.090 - 00:18:38.580, Speaker B: It would be a weird outcome in my mind if into the roll up chain the only way. I think it's like one of the weird Vitalik assumptions about the world that is divorced from reality, which is you could have roll ups, but that doesn't mean that most of the assets on the roll up are going to originate via a bridge that verifies the security of the roll up. Okay, so you have hop network, for instance, that's doing these things onto various Ethereum l two s right now, and they're just a committee based bridge into and out of a roll up.
00:18:39.350 - 00:18:43.694, Speaker A: Basically what you're saying is because roll ups themselves can have bridges to external.
00:18:43.742 - 00:18:44.340, Speaker B: Things.
00:18:46.970 - 00:18:52.040, Speaker A: They have the same risk profile as any l one bridging to another l one.
00:18:55.850 - 00:19:37.054, Speaker B: There are benefits to the properties of roll ups that are independent of the way in which you can build this other kind of bridge. Okay, so it is beneficial to have a network that, for instance, anyone who's running an Ethereum l one client can rebuild the state from that is beneficial independent of whether or not how the assets were bridged into and out of that asset, of that network. So it's not like roll ups are. I'm not negative about roll ups. I talk to the Celestia team about this all the time. I just assume that I think it's likely that there will be a lot of committee based assets originated into roll ups.
00:19:37.182 - 00:19:37.860, Speaker A: Interesting.
00:19:38.230 - 00:20:18.494, Speaker C: Yeah. And we see that as well. I think a lot of kind of L2s and so on and so forth, just want to get direct integrations with other ecosystems because they cannot just bear the cost of going through Ethereum, for instance. Right. So if you're bringing an asset to Ethereum, you're going to have to pay huge gas costs affiliated with it. So they're thinking of, okay, can you directly integrate with us? I think the final point, I think on that to make, I think the number of different chains, it just keeps on growing and I think the users will understand less and less the differences. And I think they just care about using the ecosystem more effectively and easier with their assets and just interacting with different applications.
00:20:18.494 - 00:20:37.400, Speaker C: And I think it's going to be up to the developers to make the best choice of how to deploy an application, like what software stack to use and things like that. But I think what users want to see is like, I have an asset, here's an application. Let me go and use it. And I think we have to work towards that.
00:20:38.410 - 00:21:25.670, Speaker A: So we have five minutes left in this panel, and I do want to take a moment to talk a little bit about the theme or kind of general theme of the series, which is privacy and cosmos scalability. We were kind of talking about how to think about privacy in the case of bridges. I believe we talked about this potentially in the last session as well. But are there ways that privacy could be maintained over a bridge from one L, one, from one zone to another? Is this a space that's been well developed? Are there already plans maybe in something like axilar to actually shield projects or shield tokens through the actual bridge technology itself, or is it always going to be a leak?
00:21:27.930 - 00:21:59.886, Speaker C: So I think it can play out two ways. I think, one, you can view bridges as a way to potentially obfuscate some of your transactions. Right. So you can use, let's say. Let's say you're starting from a network that's open, right. Anybody can read the transactions. Then you can go through interoperability protocol or bridge to go to a network that has some privacy within it, like secret network or any other zero knowledge, proof based networks.
00:21:59.886 - 00:22:17.880, Speaker C: You can then transact within it, and then you sort of come out on the other end, so you can view it as sort of a mixer, oracle in some sense, that you can dump your assets in, mix them up, transact, and then get them out on the other end eventually maybe to a different key. I think that's one way of doing this.
00:22:18.810 - 00:22:30.380, Speaker A: Is that not traceable, though? Can you not track what is in something like Axelark? Is there no ledger that you could actually view? Is there not something that you're actually watching these transactions go through?
00:22:30.830 - 00:22:40.080, Speaker C: I mean, in Axelor you can, but again, the goal is you go through this bridging mechanism to a network which has full privacy preserving properties. Right.
00:22:41.090 - 00:22:45.210, Speaker A: You're saying you use that like, once you're in that new network.
00:22:45.290 - 00:22:45.630, Speaker C: Exactly.
00:22:45.700 - 00:22:48.514, Speaker A: You're using it as a mixer, and then you come out through the bridge again.
00:22:48.552 - 00:23:03.542, Speaker C: Exactly. Yeah. So from external view, you saw, okay, you go through Axel network or whatever, bridging, you sort of burned your assets in some sense. You keep on mixing them and you come out on completely other key. Right. The key that you specified. I think that's one way of doing it.
00:23:03.542 - 00:23:16.700, Speaker C: And I think the second problem is, how do you make, I guess, the bridging technology in general, like privacy preserve. And I think that's definitely a next level of mastery that we're going to have to get to in order to get there.
00:23:17.710 - 00:23:22.990, Speaker A: Deborah, have you done any work in this direction? Is this something that's on your radar?
00:23:24.130 - 00:23:42.658, Speaker D: Well, I think that there's no reason why it can't be, other than what we're seeing from market forces right now, is that that's a very specific sort of application. When we went to start Althea, privacy and preserving user freedoms was really important, but the market just doesn't care.
00:23:42.744 - 00:23:44.210, Speaker A: Isn't that the worst?
00:23:45.670 - 00:24:26.050, Speaker D: And I think that's the same with bridges, too. We see secret that has, of course, a privacy preserving bridge. There's nothing incompatible about this that is more computationally expensive. So it'll be interesting to see if there are driving forces behind doing the engineering list of adding and privacy. But for right now, I think that we're really not seeing that, unfortunately, from users. Oftentimes, I think with the way we develop protocols for Internet, we sort of build those in know bonus and really have to focus in on the practical applications for why it's important, unfortunately.
00:24:27.030 - 00:24:46.306, Speaker A: What about maybe more generally, zero knowledge technology? Because that doesn't always have to be used specifically for privacy, given that we're the ZK validator and I do the zk podcast. Got to ask that question, too. Yeah. Is there any way to incorporate zero knowledge technology or maybe other advanced cryptography, like maybe threshold decryption?
00:24:46.338 - 00:24:53.850, Speaker B: I mean, there are two things. I didn't get to talk about the privacy thing just quickly.
00:24:53.920 - 00:25:00.026, Speaker A: Okay. Why don't you mention you do the privacy thing and then segue into ZK tech if you want.
00:25:00.128 - 00:25:54.080, Speaker B: Well, I think they're related, actually. The frontier is interoperability, where you have privacy in the interoperability layer, where you could actually hide traffic flows between blockchains. I think that there are probably going to be, like, you're going to be able to do it initially in specialized state machines. So IBC has very agnostic about how the state machines are designed on either side of the IBC transaction. Like, you could send an ICS 20 packet to a state machine that was written in Rust has a Utxo model. Like all kinds of completely different systems. I think probably in the near future you might be able to see traffic hiding between blockchains that have very similar and well specified state machines that are designed to facilitate that.
00:25:54.080 - 00:26:11.010, Speaker B: There are out there, like, sort of sketches of very zero knowledge proof, heavy bridge designs, and I don't know that anyone is actually working on implementing them, but they may show up eventually.
00:26:12.070 - 00:26:22.054, Speaker A: Where would we find stuff like that? What is it? Sort of early IBC kind of architecture? Is there sort of a direction we could even look for that kind of stuff?
00:26:22.172 - 00:26:26.514, Speaker B: I remember talking about this a lot at the ZK summit in San Francisco.
00:26:26.642 - 00:26:27.030, Speaker A: Okay.
00:26:27.100 - 00:26:29.580, Speaker B: Which seems like roughly 200 years ago.
00:26:31.070 - 00:26:38.540, Speaker A: End of 2019, during the blockchain week there. Yeah. The last time we did an in person CK summit. Oh, man.
00:26:39.630 - 00:26:42.606, Speaker B: So I think there are recordings from that floating around.
00:26:42.788 - 00:27:19.400, Speaker A: Although I don't remember anything about Ziki bridges, I do know who the speakers were. I'd like to if that does actually sort of a call to anyone. If people are finding research or if anyone knows of work like that, I would love to see where that is. And even if it stopped in its tracks two years ago, I think it would still be great find. All right, well, I think we're at time, Susanna, I don't know if you want to jump on. And I want to say thank you so much to everyone on this panel for going through the bridge panel with us during the event.
00:27:20.170 - 00:27:21.240, Speaker C: Thanks, everyone.
00:27:22.250 - 00:27:22.740, Speaker A: Very cool.
