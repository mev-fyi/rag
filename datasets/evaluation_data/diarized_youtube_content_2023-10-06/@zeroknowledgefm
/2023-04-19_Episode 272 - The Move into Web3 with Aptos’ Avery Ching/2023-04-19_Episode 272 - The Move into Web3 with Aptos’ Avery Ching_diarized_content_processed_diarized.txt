00:00:05.450 - 00:00:54.182, Speaker A: Welcome to Zero Knowledge. I'm your host, Anna Rose. In this podcast, we will be exploring the latest in zero knowledge research and the decentralized web, as well as new paradigms that promise to change the way we interact and transact online. This week I chat with Avery Ching, co founder and CTO at Aptus Labs. We talk about his time working at Facebook, which became meta, and specifically his work on blockchain projects. There we then talk about how this group split off to form different companies like Mistin and Aptus, and what Aptos has taken with them in the creation of this new organization. He shares with us the state of Aptus, how the project differentiates itself, and what it's like building in the current landscape.
00:00:54.182 - 00:01:13.330, Speaker A: Now, before we kick off, I do want to direct you to the ZK Jobs board. There you'll find jobs from top teams working in ZK. So if you're looking for your next opportunity, be sure to check it out. And if your team looking to find great talent, be sure to add your job there as well. I've added the link in the show notes. Now Tanya will share a little bit about this week's sponsor.
00:01:16.150 - 00:02:05.786, Speaker B: Anoma's first fractal instance. Namada is launching soon. Namada is a proof of stake L One for interchain asset agnostic privacy Namada natively interoperates with fast finality chains via IBC and with Ethereum via a trustless twoway bridge. For privacy, Namada deploys an upgraded version of the multiasset shielded pool circuit, otherwise known as Masp, which allows all assets, fungible and non fungible, to share a common shielded set. This removes the size limits of the anonymity set and provides the best privacy guarantees possible for every user in the multi chain. The Masp circuit's latest update enables shielded set rewards directly in the shielded set, a novel feature that funds privacy as a public good. Follow Namada on Twitter at Namada to learn more and join their community on Discord Discord GG forward slash Namada so thanks again, anoma.
00:02:05.786 - 00:02:07.670, Speaker B: And now here's our episode.
00:02:11.050 - 00:02:16.978, Speaker A: So today I'm here with Avery Ching, co founder and CTO at Aptos Labs. Welcome to the show, Avery.
00:02:17.154 - 00:02:18.790, Speaker C: Hi Anna. It's a pleasure to be here.
00:02:18.860 - 00:02:43.674, Speaker A: So in today's episode, we're going to be exploring Aptos, which is a project that I don't know very much about. I have interviewed folks from the Miston team, and I know that both the Miston and Aptos team came out of meta, and I had originally been on sort of the Libra project, so I'm excited to explore that. Before we do it though, Avery, let's hear a little bit about your background. What kind of got you started and on the path towards Aptus?
00:02:43.802 - 00:03:36.462, Speaker C: I'd love to talk about my background. I was born and raised in Honolulu, Hawaii. I lived there for the better part of my life, and I went off to college at Northwestern and studied computer science and electrical engineering. During that time, I also did a PhD under professor chattery Alok chattery in high performance computing. So I spent a lot of time in different national laboratories such as Los Alamos, Sandia and Argon, doing things around supercomputing and parallel file systems specifically. And there's something called MPI, or message passing interface, which is a really interesting way that and super flexible way that people can program supercomputer software very flexibly across different architectures, different kinds of network interconnects to support the largest scientific applications in the world, such as protein folding, world simulation, matrix factorization, all kinds of cool stuff. After my PhD, I went to work at Yahoo for four years in the area of data infrastructure.
00:03:36.462 - 00:04:16.058, Speaker C: I was working on what was called the webmat at that time. It was after the crawling phase of going through the world's Internet sites. There's an analytics phase where we do analysis, data derivation around domains and insights, and worked on something called Apache Giraffe, which is a large scale graph processing infrastructure and open source project that allowed us to do things like page rank, matrix factorization, and triangle counting. In 2011, I made my way over to Facebook to work on data infrastructure. That was the team that was kind of just kicking off things around Hadoop. At that time. It was a very exciting space that no one had kind of scaled Hadoop to the size of petabytes and exabytes.
00:04:16.058 - 00:04:38.118, Speaker C: And not just Hadoop, but of course any kind of general purpose computing such as Hive, which is kind of SQL language, put on top of Hadoop. I got a good time to work on Spark and batch scheduling and pipeline management and derivation, as well as taking Apache draft and turning it into a full time product that powered many different graph applications within Facebook, a social media company.
00:04:38.204 - 00:04:40.758, Speaker A: What is Hadoop? I actually don't know what that is at all.
00:04:40.844 - 00:05:15.802, Speaker C: No worries. So Hadoop is a Mapreduce processing infrastructure. If you think about my background, again with Apollo Computing, we have MPI, which is a very low level, customized way you can do message passing between different processes and even things like RDMA, remote direct memory access to support. Again getting the best performance out of these machines that can do simulation and run hundreds of thousands or millions of cores for weeks or months at a time before they kind of generate an output. But that's complicated. And in fact, it takes programmers a long time to write these codes. They're super hard to maintain.
00:05:15.802 - 00:06:21.590, Speaker C: There's a very small set of developers in the world that can write those type of applications and maintain them. Hadoop is an idea where you take this thing called BSP, which is both synchronous parallel processing and apply it in a stricter sense, where you can do things, the map operation, you can take any kind of input data and transform it and reduce, which takes those input things and kind of consolidates them. So it supports some core primitives of parallelism, but kind of limits you a little bit to what you can do. But at the same time, by that limitation, it allows a broader set of programmers to be able to access that framework and write different kinds of applications. One of the most key applications in that space was Hive, a SQL implementation on top of Mapreduce that supported querying billions or trillions of rows and producing petabytes of data at a time. And this is the kind of infrastructure that powered companies like Meta and Google and LinkedIn and others, all their analytics pipelines in the future. So it's really cool to see the way that programming models can actually impact the way that developers have flexibility and expressiveness and ability to write applications in a meaningful way in time to market.
00:06:21.590 - 00:06:24.806, Speaker C: That's what we kind of see happening in the blockchain space as well, which I'm sure we'll get into.
00:06:24.908 - 00:06:35.818, Speaker A: Yeah. So when you talk about message passing in this context, I've done interviews where we talked about message passing in the blockchain context. Is it the same thing? Are we dealing with sort of like a different level?
00:06:35.984 - 00:07:12.710, Speaker C: It is. I think there's some similarities here, which I find fascinating. So in something like MPI or message by the interface, the idea is that any process can send messages to others at any given time. And as I mentioned, this provides kind of, any kind of parallelism you would dream possible. You just need to kind of construct the models you're looking for. One of those I mentioned was BSP, which is super interesting, but you could do asynchronous type messaging passaging. There's something in MPI called collective operations, where processes will collectively get together, decide what to write, and then share that information in a way that optimizes for the writing patterns, such as batch writing chunks of data to storage, which is much more efficient than writing little pieces of data to storage.
00:07:12.710 - 00:07:59.110, Speaker C: And so this is something we see kind of in the blockchain space as well, where the APIs available to you could be very different. Some of them are very simple and straightforward, like move, I would argue, which allows you to constrains a programmer to not have to make so many mistakes. Thinking about the way that a coin operates versus an integer representing a coin, as an example, is a constraint on a programmer, but it makes it much more accessible and much more less likely you're going to have errors in your contract when you write those. When it comes to message passing, specifically though, there are ideas around what we call asynchronous move, which we're super excited about. The idea that move itself can pass messages between different actors in the system. And that can be an interesting way to think about parallelism in the blockchain context, kind of similar to the way I think about it in the high performance computing context.
00:08:00.090 - 00:08:03.122, Speaker A: How long were you at Facebook Meta?
00:08:03.186 - 00:08:07.462, Speaker C: I was there for over a decade, from 2011 to about 2021. Yeah.
00:08:07.596 - 00:08:36.738, Speaker A: My God, the time frame for that at that company must have been very special. 2011, Facebook was the pinnacle, and I think everyone wanted to work there. So you were working like this, highly competitive, I bet. Just amazing people. That said, the reputation in our space is definitely different. By the time you left, did you feel like this was not? I mean, I'm sure it was a very different company, but tell me a little bit about that change.
00:08:36.904 - 00:09:07.130, Speaker C: When I joined in 2011. You're right, it was a very small startup and super exciting place where everybody had some very unique talents about them. I was sitting next to someone who was very influential in C plus plus and someone who was like a semi professional chess champion. It was very interesting to see the kind of interesting talent that came together at that time to work at Meta Facebook. It's hard for me to go back and forth. I called it Facebook for the first nine years of my career there, and then meta for the last year. So it's still a challenge for me to get over that.
00:09:07.200 - 00:09:07.994, Speaker A: Fair? Fair.
00:09:08.112 - 00:09:35.880, Speaker C: But over time, you definitely saw like one thing Facebook did really well was to kind of keep the small team culture going. So teams are still pretty tiny, like four or five people. Now there are groups of come together as larger teams, but the bottoms of culture and the way that roadmaps came together and people planned, I think was mostly maintained during my time there. Definitely the Dale part of it, it was very large. I've grown many, many times and multiples over that, but overall, I had a great time there, and I really enjoyed the colleagues that I met over those.
00:09:37.050 - 00:10:03.806, Speaker A: Like, so I've had on the show, Bobbin, Costas, and Sam, all who were at Meta, mostly in the cryptography, like Libra project. You were also working there. So I kind of want to understand. I mean, two of those folks went on to do Miston with. I know a lot of the folks from that crew. So tell me a little bit about what was that original group like and how did it split off?
00:10:03.988 - 00:10:43.274, Speaker C: Yeah, so Facebook was a really forward thing company at the time. They invested a ton in terms of bringing together talent across so many different domains. Cryptography, languages, distributed computing, consensus, a lot of talent. And the way that was kind of assembled was into different organizations. There was the engineering organization that focused on how do we build the blockchain, how do we scale things, how do we deploy this infrastructure? And then there was also other folks that worked on languages and research. And so I think the organization was pretty large. I think it was more than 100 people working on.
00:10:43.274 - 00:10:57.886, Speaker C: Also, we had a wallet infrastructure team as well. So my focus was, I started from the team working on consensus protocols, did a bunch of research in the space to understand what direction we wanted to move in. We ultimately ended up picking up hot stuff as the first kind of consensus protocol we'd work on.
00:10:57.908 - 00:10:58.334, Speaker A: Yeah.
00:10:58.452 - 00:11:21.174, Speaker C: And over time, I became the lead of the blockchain space, kind of helping us on how we integrate move with DM. How do we work on the custody side of solutions with respect to what our wallet infrastructure was doing and the ecosystem projects around it. And we had a great team of 30 plus people that was working that space. A lot of those folks, we were fortunate to have come with us and work with us at Aptos Labs. Yeah.
00:11:21.212 - 00:11:24.166, Speaker A: Wait, isn't Itai an author there?
00:11:24.268 - 00:11:26.678, Speaker C: Yes. Itai Abram is also co author on the paper.
00:11:26.764 - 00:11:27.110, Speaker A: Okay.
00:11:27.180 - 00:12:28.890, Speaker C: We worked closely with Malfon, Tai, and Dalia on the pacemaker improvements for liveness. But Hofstav was this interesting theoretical paper. It did not have the practical applications into how you would make it work in the system. We took the kind of core genesis of the three phase protocol, the separation of safety and liveness, and then evolved it into something that we think was pretty meaningful to support two steps instead of three steps with respect to consensus, making it much more faster, and also the idea of an active leader as opposed to a passive pacemaker. So the original paper was designed to wait for timeouts, exponentially increasing timeouts, which would take a very long time before you kind of get back to a system that works and of course it's not going to work well in a practical context. We took the potion to make it more an active pacemaker where nodes synchronize and because of synchronization they can actually recover much faster from failure. They can make much more progress with respect to liveness and support a more practical running system.
00:12:28.890 - 00:13:03.378, Speaker C: And what we saw actually, which was cool, is that others have adopted some of this work. So flow blockchain, for instance, has adopted both of these primitives. I don't think they have leader reputation that we have yet. Leader reputation is a really cool primitive where as you progress in your usage of the blockchain, the validators that run the software are going to be putting their reputations on chain with respect to the votes, the fact that they were able to successfully commit blocks as leaders. And we use this information to then bias towards those nodes that have done well and support that as well with rewards, with respect to our proof of stake network.
00:13:03.474 - 00:13:08.694, Speaker A: That's what you're doing today. That's what we're doing today with like aptos. Okay. On the consensus front, yeah, we've also.
00:13:08.732 - 00:13:43.534, Speaker C: Taken that a step further. I don't know if it's a good time to dive into it now, but we've been also working on the next phase of our consensus protocol. So the way we think about it is very much an iterative process. We started off with the kind of basic hot stuff. We iterated to our first deployment that improves the liveness areas quite a bit with respect to responsiveness, and then we had our leader reputation on top of that. And more recently we've done something called Quorum Star, which is the first production grade implementation of the narwhal and Tusk papers. And so there's a line of research that, which is this tusk, narwhal and Tusk.
00:13:43.534 - 00:14:31.540, Speaker C: So there's a research paper that Roddy Sasha from Aptos Labs have been working on in collaboration with others, which talks about the idea that separating the data dissemination phase from consensus is very important for scalability. And so it's great as a research paper. There's a cool prototype implementation out about it, but we wanted to take that prototype again and turn into something that was much more practical and applicable to real life systems. And so our first implementation of that, called the Quorum store, actually has been tested right now with our node operators in what we call the preview net and achieving pretty fantastic results with that. And so our goal is really how do we keep marching this technology forward. We know that technology is going to evolve over time. The goal of Aptos is when we think about this space, it's so young, it's so early.
00:14:31.540 - 00:15:11.198, Speaker C: It's not a phase where things are so matured, where products are very similar in spirit, like think about postgres or MySQL. They are different products and they have some differentiators, but by and large, a lot of the features are pretty much interchangeable between those things. Same thing with cloud. You can think about AWS and Google and Azure as being they have differentiating services they offer and the support is different. But by and large, they offer a large fleet of machines, they offer some serverless infrastructure that's applicable for building on top of. And blockchain is not anywhere near that maturity phase. Right now we're at the early, early phases where technology is being experimented with, play with, and so for us, upgradability is super important.
00:15:11.198 - 00:15:25.410, Speaker C: How do we think about a technology stack that can keep moving forward over time until we get to that maturity points, until users can kind of see less differentiating between the products because they're all pretty high performant and support great user experiences.
00:15:25.750 - 00:15:57.838, Speaker A: I want to go back a little bit to the sort of the meta crew. Sure. So what you've shared a little bit about the consensus side of things, so that's like running with hot stuff and adding these new ideas into it. But yeah, I want to also talk about move, because you've mentioned move a few times, and I had Sam on the show from Miston who talked about move was developed in order to be kind of the script or the language for some new blockchains, kind of to replace solidity. Right.
00:15:58.004 - 00:16:58.254, Speaker C: Originally, I don't know if it's designed to replace. Yeah, I don't think we're trying to replace anything at the time. I think we were trying to think about, when we think back at the history in 2018, it was more about meta has billions of people that come to it every day and thinking towards that scale compared to what industry is and was at 2018, where you have maybe a couple of hundred or at that time, probably tens of thousands of users that are excited about blockchain, how do we take that and add orders, magnitude of people to it? And that's not just developers, but those are users. And what would need to be done to make that experience particularly safe and also bring time from development to production down to make the industry move quickly. And I think move was the answer to that. Our answer to it, which was a new programming language, which would make it harder for people to make mistakes that would support things like formal verification that we designed from the ground up to be resilient to denial service attacks. All those things came together in the move language.
00:16:58.254 - 00:17:27.802, Speaker C: And maybe most important of all those factors, a language in which we could iterate on, move on very quickly. Solidity has a great community around it, and that's both an advantage and a disadvantage. It has lots of great developers, but at the same time the language can't evolve as quickly. And with move, it's something that we felt was designed also to be upgradable, also to add some new features. And we've added quite a few, even the recent months and of course years with respect to it, and we continue to expect to do so going in the future.
00:17:27.936 - 00:17:39.262, Speaker A: The thing is, if Sam's at Miston, I know that he's still quite active on like, is it the two teams are contributing towards the same language, or are there others as well?
00:17:39.396 - 00:17:46.194, Speaker C: There actually been more. This is something that's a little surprising, maybe to folks, but there's been more than 300 unique contributors to move over the years.
00:17:46.312 - 00:17:46.882, Speaker A: Okay.
00:17:47.016 - 00:18:17.082, Speaker C: And while there are definitely some large contributors in Aptos and in Mistan and others like Zero L Starcoin, we do see community support for this project both, and also in academia. I think academia also regards as a very interesting place to play with it. Yeah. And we expect that to change over time. We've also heard expressions of interest from Solana, from near, and from other blockchains that are thinking about moving to different gateway into their blockchain. And that's also something that excites us a lot.
00:18:17.216 - 00:18:53.400, Speaker A: Have you ever looked around at other, I mean, obviously you're familiar with solidity and stuff, but would there ever be. I guess it would just be compilers. But would you or would the move community also want to interact or connect to any of the other languages out there? I'm thinking stuff like, especially right now we're dealing with the zkdsl land explosion. Maybe that's too far off. But you have ink over at Polkadot, you have solidity, which is really well understood. I don't know what's the Solana is using rust, I guess that's right. So like, yeah, can you compile from rust to move?
00:18:53.850 - 00:19:32.066, Speaker C: I think there's been a lot of efforts to try to make compatibility support from moving to and from. I know our team, Wolfgang and Runtin and others have worked a lot on that space. And how do you think about compiling or transpiling from solidity to move, or being able to kind of support even the EVM bytecodes in a move compatible way, and vice versa as well. Although I think right now a lot of our resources are tied up in just supporting move in a really good way for Aptos. It's something that we do think about, and our team is excited to support in the future and also willing to help support others who are willing to make that happen.
00:19:32.168 - 00:19:42.454, Speaker A: Cool. Okay, so so far we've covered consensus and some of the unique points. You're using the language move, but move is the language that you would write programs for aptos in, right?
00:19:42.492 - 00:19:43.030, Speaker C: That's correct.
00:19:43.100 - 00:19:47.622, Speaker A: You're not using move to build the blockchain, are you?
00:19:47.676 - 00:19:51.574, Speaker C: Actually, I think you could argue that's the case for us.
00:19:51.612 - 00:19:51.942, Speaker A: Oh, really?
00:19:51.996 - 00:19:56.714, Speaker C: I think that's a big part of our upgradable story. So definitely a lot of our validator code is written in rust, that's for sure.
00:19:56.752 - 00:19:57.338, Speaker A: Okay.
00:19:57.504 - 00:20:38.630, Speaker C: But one thing that makes us upgradable is the fact that we use move modules to determine the state of the blockchain as well. So we have on chain governance where people can vote for different proposals. And a proposal might be, for instance, upgrade our consensus protocol from kind of current hot stuff to hot stuff, plus our quorum store. And it's something that we actually have done in the past. And when that vote happens, there's a trigger on chain on chain configuration that flips. And now all the validators that sync up to the current state of the blockchain are understanding that now they should use quorum store technology plus op stuff going forward. And this is a way that allows us to do upgradability in a very seamless fashion without any disruption to their users.
00:20:39.370 - 00:20:47.926, Speaker A: Yeah, that's interesting. So it is kind of on both ends. It's like one would use it to write on top if you ever built anything on top. And also you're using it somewhere under the hood.
00:20:48.038 - 00:20:58.798, Speaker C: That's right. I mean, even our staking contracts are written using move. We try our best to use move because that way it allows us to upgrade these different contracts or use your primitives in a very seamless way.
00:20:58.884 - 00:20:59.374, Speaker A: Interesting.
00:20:59.492 - 00:21:15.442, Speaker C: It's much more flexible to write anything you want to do in rust, but when you can use move to do it, it allows us that upgradability with respect to on chain governance and with respect to contract upgrades. And that's really fascinating for our developers and for our community in general.
00:21:15.576 - 00:21:50.926, Speaker A: Cool. What are other kind of dimensions that you would say, like you're doing experiments or you're creating something somewhat new from what the audience of the show. We've heard in detail how Ethereum works, and we've done episodes on Solana and on Nier and on Polkadot and on Cosmos. So yeah, what else? When you're kind of going to an engineering community, like a dapp developer community, what are you offering them that really changes the offerings? I mean, obviously there's the language, there's some stuff going under the hood, but yeah, tell us more.
00:21:51.028 - 00:22:29.846, Speaker C: So definitely language is a big component. We think that that will help you get faster time to production and that's meaningful for developers. Obviously today there's a huge amount of challenges with respect to how do you audit the code and get it ready. And if there's fewer things to audit, if you can take the advantage of the move prover and how it supports form verification around certain aspects and semantics of your programs, that's a huge important factor. We think about the user experience as well. So many blockchains today don't have even simple things like key rotation. And aftos not only supports key rotation, but it supports key rotation that's controlled by smart contracts that allows you to support things like hybrid custodial solutions.
00:22:29.846 - 00:23:16.166, Speaker C: Imagine a world where as a smart contract platform, you have a way to rotate your key, but only under certain constraints. Only when you have not used the blockchain for a period of time, like six months or a year. So most of the time you have full control of your account. No one can touch it except for with your private key. But when you haven't used it for a while, for instance, you've lost your key. Another key that's held by a custodian would be able to rotate it on your behalf, but only with those points and provably on the blockchain at a certain time audited. So we think that the user experience challenges of key management are things that we can push as far down to the L1 stack and support with auditability and with transparency and with kind of help from others, you could be a friend, it could be a custodian of sorts.
00:23:16.166 - 00:24:16.682, Speaker C: That's very meaningful. The other thing that's very meaningful, of course, is this technology stack needs to scale. And when I say that every single blockchain combined in the world can support what a single MySQL server can do, and what we've done at Aptos is think about how do we design a system that can support scaling up the resources for larger workloads the same way that cloud infrastructure does for inner applications like Netflix or Google, those are powered by hundreds of thousands, if not millions of MySQL servers. When you think about infrastructure like Instagram and meta, and that because it gives you an idea of how far away we are in industry from where we need to be and where we are. And so when Atel stack was designed, it has many different phases of transaction execution. It has a data dissemination phase, it has an ordering phase, it has a parallel execution phase. And then what we, I think we talked a little bit earlier, we have the ability to batch updates, which is much more efficient from a resource perspective, and then finally a proof generation phase.
00:24:16.682 - 00:25:32.578, Speaker C: And by creating these different phases of computation that are logical, we can not only allow each of these phases to work independently, we can allow the polarization of these phases. So data dissemination is something done with quorumstore, where we can push data to as many validators as we can in the network and get what we call the proof of availability from them, and then those can be then ordered without having to pass that data around and support the Pelle execution phase, and then so on and so forth. And so if you think about today, we have a single validator with CPUs and memory and SSDs and network bandwidth, those things will grow. We'll have multiple processors, we'll have multiple SSDs, and then over time, what we'll have is validators that operate low latency clusters of machines, and those will be able to scale up their resources and support hundreds of thousands or millions of transactions per second, and growing to the needs of what web3 needs to support the largest applications in the world. And I think that is something that's pretty unique about the Optos infrastructure. So supporting it from a programming languages perspective, a user experience perspective around custodi and pushing those primitives on chain, and then finally kind of supporting the fastest decentralized database and scalable decentralized database in the world. That's our goals.
00:25:32.674 - 00:25:34.002, Speaker A: Why is it fastest?
00:25:34.146 - 00:26:15.566, Speaker C: Everyone can think about fastest in different ways. We think about in terms of finality and kind of indisputable finality, not probabilistic. So for that, we started off with a BFT based protocol, a business team fault tolerant protocol in hot stuff and hot stuff we took from the three round trips of network latency to two round trips. That's given a data center might have about 200 milliseconds of latency from something complete across the world. You can imagine that gets us to 400 to 500 milliseconds of finality time. Now with quorum store, that increases the slightly because of the time to also get the prevailabilities on it. But that's kind of allowed us to get subsecond around the second of latency in real life production scenarios in Mainnet.
00:26:15.566 - 00:26:35.370, Speaker C: So if you look at the recent Masari report on Twitter, Aptos had the lowest finality time for any production network. And it's something that we haven't necessarily even optimized to our fullest yet. We're excited about even driving that time further and making the blockchain accessible to real time applications, which we think would be really important for adoption of technology.
00:26:35.440 - 00:26:51.626, Speaker A: Stack, you sort of said, though fastest can be defined in many different ways. Are there other blockchains that you think are fast in a different way? I'm just trying to understand if finality is, if it's not the only metric, what are other metrics?
00:26:51.738 - 00:27:52.846, Speaker C: So some people think about either use them as intermediate metrics, like the first time someone throws a receipt of a message, it's not guaranteed to be committed to the network, but there's a good indication that it's likely going to be committed if you use kind of historical data as a measure of future performance. And I think that there's other ways you can provide signals in the system, for instance, even the Aptos blockchain, which will give you similar metrics. So it really depends on what we're talking about. For instance, once a transaction gets submitted and a validator kind of gets his proof of availability on it, you have a guarantee that no one's going to forget this transaction and people will keep submitting it until it either gets rejected or it eventually gets committed. And so there are different kind of metrics in the system you can expose through this pipeline infrastructure, which is really neat, such as when things have been proven to be available on top of any of the validators. There's another proof which you can provide in which the ordering phase happens. Now you're guaranteed in which it's going to be looked at, not necessarily executed in this fashion.
00:27:52.846 - 00:28:08.360, Speaker C: And then you also have a phase at the very end which says it's been executed, and here's the execution result of it verified by the validators. So there's many different kinds of metrics around finality, okay, which are interesting to provide to the users and to the developers, and they can be used for different types of use cases going forward.
00:28:09.230 - 00:28:22.662, Speaker A: You had sort of mentioned the key rotation. I just wondered if that was, is that all like smart contracts? Basically, the question is it a form of account abstraction as we've understood it in the Ethereum context.
00:28:22.806 - 00:29:08.870, Speaker C: So account abstraction is something that we definitely also support in AptoS. It's a little bit of longer discussion, but definitely around keys. There's a way to secure an account through a key, and any transaction that modifies this account has to basically be signed by that key. We also support very flexible things here, such as multi SIG keys for accounts. We support contracts that kind of control the way the keys are managed. There's a lot of flexibility here, and I think that flexibility is intended so that the user experience can be customized toward particular use cases, whether it's enterprise grade infrastructure, such as something that momentum safe is doing one of the projects building on top of Aptos, or it's going to be more user facing projects that large scale custodians would build that would support kind of more generic key rotation purposes.
00:29:09.030 - 00:29:19.950, Speaker A: When you mentioned like provers, obviously, like coming from the ZK land, I always think you're talking about a ZK proof prover, but I'm guessing you're not. What kind of provers are they?
00:29:20.100 - 00:30:18.050, Speaker C: Yeah. So thinking about the move prover is a little bit different. The idea behind it was, again, how do you get that time to market for a developer as fast as possible? And that has to do with good quality testing. And so being able to prove certain properties of your contract in all possible kind of permutations and durations formally is something that give developers a lot of confidence in when they write their contracts. And so knowing that, for instance, a balance is conserved, or that certain even ratios between different types of tokens might be conserved, are things that the move prover can do prior to deployments without the need of an auditor to kind of look at the code and make sure things are working correctly. And the more we can do to enhance that framework just reduces the need for as much auditing as there's always going to be a need for auditing in any smart contract space. But the more we can do, kind of reduce that need and also reduce the amount of work that happens as a part of that process, allows people to move their products to market more quickly.
00:30:18.200 - 00:30:22.322, Speaker A: Is the prover then like a verification thing?
00:30:22.456 - 00:30:28.446, Speaker C: Yeah, it's definitely something that formally verifies certain properties of your contract.
00:30:28.558 - 00:30:28.834, Speaker A: Okay.
00:30:28.872 - 00:30:32.038, Speaker C: And so it's not a proof in the sense in ZK proofs you're kind.
00:30:32.044 - 00:30:34.514, Speaker A: Of verifying and then there's a prover.
00:30:34.562 - 00:30:43.690, Speaker C: Yeah. You're proving that the calculation was done, was done correctly, and all these fun things. It's more about proving certain semantics about your program.
00:30:43.760 - 00:30:44.042, Speaker A: Okay.
00:30:44.096 - 00:30:45.738, Speaker C: You should really think of it as a testing tool.
00:30:45.824 - 00:30:52.634, Speaker A: Is it like the rust? Is it called prover in rust too? I know in rust that forces you to check stuff.
00:30:52.752 - 00:31:16.574, Speaker C: Rust has this amazing compile time checks, which also prevent you from as many mistakes as possible. Of course, you can't solve all the bugs in your code, and it is targeted towards specifically things that are around memory management, which are very important. The proof is a little bit different inside of move. It's really about application level semantics and not so much about the core system semantics, which is what the rust compiler does on your behalf.
00:31:16.702 - 00:31:25.174, Speaker A: I see. Okay, got it. But it's a checker. It's checking to make sure the thing will work the way you want it to.
00:31:25.372 - 00:31:25.878, Speaker C: Exactly.
00:31:25.964 - 00:31:26.358, Speaker A: Okay.
00:31:26.444 - 00:31:31.546, Speaker C: But just happening more at the application level as opposed to the kind of core languages and system level.
00:31:31.728 - 00:31:39.466, Speaker A: I do want to ask you, do you have any CKPs in your system? Are you looking into adding mean?
00:31:39.488 - 00:31:40.974, Speaker C: I think we definitely have.
00:31:41.012 - 00:31:43.598, Speaker A: You're on the zero knowledge podcast. I have to ask this question.
00:31:43.684 - 00:32:30.346, Speaker C: Absolutely. We have quite a bit of interesting cryptography in the Atos platform for sure. A couple of things that are interesting is that we have something called veiled tokens. They're kind of based on zero knowledge range proofs, specifically based on bulletproofs. Users can veil their balances and keep that hidden from folks, but recipients and senders are well known. This is kind of providing an interesting middle ground between full privacy of zero knowledge and also full transparency of a public blockchain, but also intermediaries in terms of the cost. As you know, generating ZK proofs are very expensive, the verification very fast, and there's different kinds of trade offs between the different techniques available.
00:32:30.346 - 00:32:38.958, Speaker C: But we like the idea also this veiled transaction as a way to find a middle ground in a hybrid between these solutions as another alternative for us.
00:32:39.044 - 00:32:47.678, Speaker A: So it hides the amount, is that correct? That's correct, but not the recipients. But then is the wallet balance visible?
00:32:47.854 - 00:32:49.266, Speaker C: The wallet balance is visible to the.
00:32:49.288 - 00:32:51.746, Speaker A: Users, so then you'd see the change anyway.
00:32:51.848 - 00:32:54.962, Speaker C: The recipient and the sender would know of the changes, but no one else.
00:32:55.016 - 00:32:58.934, Speaker A: Okay, but like a block explorer would not see the value of the account.
00:32:59.052 - 00:33:01.254, Speaker C: That's right. A block explorer would not see that.
00:33:01.452 - 00:33:08.950, Speaker A: In general, are the amounts in a wallet always, or like the amounts in accounts veiled by default?
00:33:10.970 - 00:34:06.460, Speaker C: I don't think we've actually integrated our wallet yet. So we were still working on that technology piece, but we kind of put the core printers out there so people can build this infrastructure, and it's just one of the things that we're doing. We also support a variety of different signature schemes as move primitives within aptos, things like of course, ED 25519 signatures, ECDSA signatures. We support different kinds of cryptography functions. We're also supporting different types of other zk proof verification, such as gross 160 knowledge proofs that will be kind of the shortest and fastest to verify. And so this kind of builds the core set of primitives that are necessary for interesting ZK applications on top of Aptos, whether it's going to be l two chains or it's going to be just applications, or even verification of these proofs coming from bridges from other networks, which would be interesting as well.
00:34:07.390 - 00:34:23.230, Speaker A: I want to ask you a question about the validator sets and also the governance. Are the validators voting or are the users voting? When it comes to governance, is this sort of a validators and their delegates carry a certain weight? How are you making that distinction?
00:34:23.570 - 00:34:42.994, Speaker C: Validators always implicitly vote by running the software stack. So I just want to make sure that's very clear. Right. No matter what, it's true for all networks. It's not just true for apdos. If the validators decide to do something, they can kind of do it without permission from anyone. And so there's nothing different here from that perspective.
00:34:42.994 - 00:35:03.758, Speaker C: But when it comes to the on chain voting process, that's where it's token holders that vote. And token holders could be validators, could be users with token balances, could be other parties. Anyone that has a token is allowed to vote, and the voting has certain constraints in which it can happen fast or it can happen kind of more slowly over time?
00:35:03.844 - 00:35:15.598, Speaker A: Say that the tokens are delegated to a validator. Would that then contribute to the, is it sort of like the cosmos version, where it's like the percentage of stake equals the percentage of vote?
00:35:15.774 - 00:35:34.866, Speaker C: Today, token holders vote in the network. There are new staking contracts coming out that support delegation from the community. And these contracts will hopefully, over time, support a variety of different ways for token holders to continue to vote, even in delegated operation. And they can also choose to delegate those votes to other parties, including validators.
00:35:34.978 - 00:35:58.462, Speaker A: I think that is actually how a lot of the cosmos chains do still work. You basically delegate your tokens, but then you can always override the vote of your validator if you want to. Like if you decide to vote, it overrides what they're voting for. But if you don't vote as a token holder, who's delegated whatever the validator votes for. And I mean like the actual vote. This is like the upgrades and that kind of stuff. Anyway.
00:35:58.462 - 00:36:09.762, Speaker A: Yeah, it sounds sort of similar. Then it's also making me realize kind of what state the network is at. So you're like, there will be delegation, but not yet. So yeah. Where are you guys at?
00:36:09.896 - 00:36:32.138, Speaker C: So it's a great question. We launched our network in October of last year and it's been a little more than five months, five and a half months or so since network's been live. We're super excited to see the amazing community come behind it. I think on launch day more than 30 projects launch alongside us and that was super exciting to see. Today more than 100 projects are live in network and hundreds of more building.
00:36:32.304 - 00:36:36.774, Speaker A: But when you say launch, do you mean Testnet launch or do you mean launch launch?
00:36:36.822 - 00:36:47.006, Speaker C: Oh no, I mean Mainnet launch. Yeah, there are lots of projects in Testnet today that continue to stress our testnet in interesting and challenging ways. But yeah, more than 100 today are.
00:36:47.028 - 00:36:53.838, Speaker A: Live in Mainnet and you're live on main net, but you don't have delegation yet. So that's going to be like an upgrade at some point.
00:36:53.924 - 00:37:23.802, Speaker C: That's an upgrade coming soon. And so one thing that we've tried to start very early in the process is the notion of community driven input. We have an AIP process which really closely mirrors the EIP process where different members of the community can propose upgrades and opportunities for improvement on the network. I think we're already on probably AIP 17 or 18 since we started. And many of these proposals are coming from various factions in the community that we don't know well. And we love that. We love to see.
00:37:23.802 - 00:37:39.966, Speaker C: I think the delegation proposal actually came from one of the validator operators for the Aptos blockchain. And it's really exciting to see them taking an interest and driving this project forward in a way that many of us at the labs haven't thought of yet. So we're super excited about the community efforts and development in this space.
00:37:40.068 - 00:38:14.006, Speaker A: I'm kind of curious who the community is mostly because right now if you just look at a timeline, if anything, I think we've seen a lot of ecosystems sort of shrinking more than growing, and you have a little bit of a land grab happening where different things like the new L two s or everyone's sort of trying to get a chunk of an existing pie. Are you competing with ethereum in a way? Like you're a new L1 or Salana or whatever? How are you getting these developers basically to build on Aptos?
00:38:14.198 - 00:38:47.654, Speaker C: I don't think of it as competition. I think the pie is really small right now. I think, okay, there probably are tens of thousands of developers for all of web3 and there are millions of programmers in the world. True. Our hope and our thought is that as we start to build out a core technology stack that provides a very scalable experience, a user friendly experience, and one that can support the largest Internet applications in the world, those developers will naturally start to move over and start to get excited about web3 and Aptos in general.
00:38:47.772 - 00:39:10.570, Speaker A: Do you feel, though, like, because I'm thinking you're based in the valley because of some of the teams and people you mentioned and stuff, but are you recruiting web two engineers a lot into a new ecosystem, like into a whole new kind of industry? Or would you say you are kind of like meeting a lot of the engineers from other blockchain projects coming over?
00:39:10.720 - 00:39:52.890, Speaker C: We've seen a combination of both. We definitely have saw a lot of projects from other blockchains that are really excited about developing with move. They've had experiences with other languages and they're just looking for more. And they're like, wow, this is a really cool new way of thinking about data models and programmability and auditing. And we had a hackathon early on in the project in May where we were trying to understand what's the developer experience around move? How ready is it for primetime? And could people be productive in it? And developers came from different web two companies from other blockchains. I think more than 50 people showed up at our office, which made it for a very interesting situation. I think we were meant to have like just ten or 20 people, okay.
00:39:52.890 - 00:40:33.320, Speaker C: And then coded for 36 hours. And after that, they had built some of the most amazing technology with respect to wallets and games and NFT marketplaces. And many of these projects actually continued to build with us. And in an accelerator program that spanned more than eight months now, that kind of showed us that move was a thing and it was something that people could get excited about in that space. Even there, we saw both web two and kind of web3 communities coming together with respect to move and Aptos. And I think today we see that same excitement. We see definitely a lot of interesting projects from other blockchains, which, as you mentioned, may not be doing so well or looking for something new.
00:40:33.320 - 00:41:10.370, Speaker C: Come over to Aptos and get excited about technology, stack the team and the way that we're advancing things very, very quickly in a short period of time. And we also see that a lot of the large Internet companies which have stayed out of the space, mainly due to technology not being ready or not sure about some of the teams there and the organizations getting excited about Aptos and kind of what we bring and knowing that our history with respect to kind of building production grade software, enterprise grade software at the largest companies in the world is something that they can trust going forward. So we do see interest from both those communities and we're really excited to support all their applications.
00:41:10.710 - 00:41:39.530, Speaker A: Do you feel like there's a focus in, is there a particular type of, I don't know if you'd call it industry segment, because I don't know if these things are big enough yet. But are you focused on NFTs? Are you focused on games? Are you focused on all. I've heard from thinkers that there might be a specialization in some of the other L1s or in some of the l two s. So I'm curious if you sort of have a focus for the part of the market you want to tackle.
00:41:39.950 - 00:42:24.842, Speaker C: We're excited about technology and being kind of this great layer to build on top of. Again, if you have amazing user experiences, if you have great finality times, if you have really strong scalability in a great programming environment, I think you can support all use cases extremely well. That being said, we do focus on certain use cases that we think are most likely to get adoption quicker, kind of moving from broader Internet based applications to supporting web3 utility, and those kind of four areas are going to be gaming, social finance and media and entertainment more broadly. So those are the ones that we have interesting partnerships with. We'd happy to talk about those as well. And the areas that we really spend a lot of our time focusing on building infrastructure for.
00:42:24.896 - 00:42:36.298, Speaker A: Specifically, are you still working with meta? Like when you talk about partnerships and then you say sort of entertainment, and I'm thinking like, is this the VR thing? So do you have ties still to the.
00:42:36.394 - 00:42:44.366, Speaker C: Having worked at Meta for ten years, I have lots of great relationships with many different people there. We don't have any formal relationship with Meta at this time.
00:42:44.468 - 00:42:45.120, Speaker A: Okay.
00:42:46.130 - 00:42:53.154, Speaker C: Although we continue to keep in contact with many of our colleagues and are excited about some of the initiatives that we could work on in the future. Okay.
00:42:53.192 - 00:43:01.030, Speaker A: But that's not, when you talk about sort of partnerships, you're not saying like you're going to be the NFT provider for meta or something like that.
00:43:01.180 - 00:43:02.742, Speaker C: We can't comment on that at this time.
00:43:02.796 - 00:43:05.890, Speaker A: I think actually they're working with Polygon, aren't they Instagram?
00:43:06.050 - 00:43:11.370, Speaker C: So I think actually recently they did announce they're going to take a pause on web3 efforts for a bit.
00:43:11.520 - 00:43:12.858, Speaker A: Oh, yeah.
00:43:13.024 - 00:43:31.518, Speaker C: So that's something that's maybe not great for the industry overall, but I think in the future, there's so many things that could happen in the future. I mean, I think they're also working on a new decentralized platform for Twitter, Twitter like product as well. So we'll keep an eye on the space. We'll keep in contact with some of our friends there as well.
00:43:31.684 - 00:43:45.074, Speaker A: This definitely brings up the question about the state of the market. When did Optos start? You sort of mentioned 2018, but then you were still at Meta or Facebook. But yeah, when did the company start?
00:43:45.192 - 00:44:28.114, Speaker C: So 2018 is when we started building out. The technology stack move was being built, DM was being built. We had this great team of folks that were all working in tandem and an interesting association of industry members from some of the largest companies in the world that were excited about this new technology stack in 2021. It was kind of clear that this was not going to launch within meta. And in end of December, 2021 is when my co founder Moshe and I, who Mo, had worked on the wallet side of the world, and I had worked on the blockchain side and started up Aptos. And many, as I mentioned, of the former Coworkers at DM, joined us and continued to push this technology stack forward.
00:44:28.232 - 00:44:33.010, Speaker A: Was there any other companies that came out of that? Actually, so there's Miston Aptos. Is there another one?
00:44:33.080 - 00:44:34.546, Speaker C: Linera is another one.
00:44:34.648 - 00:44:35.058, Speaker A: Okay.
00:44:35.144 - 00:44:39.462, Speaker C: Also, Lightspark, there are quite a few interesting.
00:44:39.596 - 00:44:40.566, Speaker A: Same group?
00:44:40.748 - 00:44:41.990, Speaker C: All the same group, yeah.
00:44:42.060 - 00:44:45.350, Speaker A: Okay, so 2021, late 2021.
00:44:45.420 - 00:44:49.802, Speaker C: Yeah. For us it was, abstess was started in December of 2021.
00:44:49.936 - 00:45:24.130, Speaker A: So this is like top, it is exciting. Everyone is very excited. That continues until end of February, when stability in Europe as we've known it has changed. And then it gets progressively worse as 2022 continues, as we all know. So, yeah, how does it being a company that sort of emerges at this time? Are you feeling that? Do you worry about it? Have you had any sort of pushback from maybe, like people who were really excited before and now are nervous?
00:45:24.630 - 00:45:28.530, Speaker C: Definitely. 2022 has been an interesting year for our industry.
00:45:28.690 - 00:45:29.350, Speaker A: Yeah.
00:45:29.500 - 00:46:14.434, Speaker C: But at the same time, I think it's re energized us so much. We're an early startup in this space. From that perspective, obviously, our technology has been built for many, many years and evolved over that time frame. So from a technology perspective, we're not mature, but we're definitely in a good space and continuing to be at a place we can be very iterative and move very quickly. From a company standpoint, it's been very interesting to see in the short period of time the movements of the industry and how that affects us. But it's been really positive, I think, for us internally. We've just been very focused, heads down, kind of trying to ignore much of the noise as possible and saying, look, some of the greatest companies were built during these times of hardship in the past.
00:46:14.434 - 00:46:45.838, Speaker C: In 2009, when the previous kind of Cris 2008, when the banking crisis happened, amazing products and amazing technology was developed. And I think this is a great opportunity for us in our time, in our industry, to do the same thing where people that are very serious and very focused can generate amazing technology. And when this thing turns around at some point and people get really interested in the tech, we'll be there to support them with something that scales to their use cases and their needs.
00:46:45.924 - 00:46:48.350, Speaker A: You're a Silicon Valley company, right?
00:46:48.500 - 00:47:15.480, Speaker C: Well, a lot of us come from Silicon Valley, are living in Silicon Valley. Definitely a lot of us, as I mentioned, came from our former project at DM. And so therefore, there is a good mass and support of us that are in the Bay Area. But we have folks all over the world, in New York and in Florida, in London, in Israel, as well as Canada and even in Asia. So we do think of ourselves as very much a global company.
00:47:15.930 - 00:47:43.600, Speaker A: Do you feel like the crypto scene? There is sort of this west coast scene, and you sort of mentioned a few teams that I would like kind of associate with it. Solana is very much from there. I'm curious to see what is your perspective on the larger ecosystem. Do you see sort of still the center of innovation as being from the valley, or do you see it, like, moving to different parts of the world? Maybe this is, like, harsh because you're there, so you have to say it's there.
00:47:45.650 - 00:48:41.970, Speaker C: No, we definitely see talent all across the world, and we are excited about working with our colleagues everywhere. I think for us, we just have a core group of folks that came together in Silicon Valley because of our history with DM and meta, and it's something that is very special to us as well. We think that being in person during the pandemic and during our launch, we call it Death March, sometimes was very critical for us to getting to market quickly. And I don't think anyone's been able to launch a blockchain within ten months of starting a company and also come live with 30 different projects at the same time. So that's something that we're really proud of. And I think a lot of that came from the fact that we had an amazing group of folks in person and many of those folks flew in from across the world to be with us and help us to get there. It's one of our core advantages as a team.
00:48:42.120 - 00:49:22.240, Speaker A: It's so different because, I mean, a lot of teams that I know my teams are all remote, but yeah, you kind of have that because you all came from one. You have a little bit of that chance to still meet up and see each other in offices. I am still wondering going forward. I mean, I think from what you've said, I can hear that you have a relatively, like, you have a pretty rosy outlook that there will be like, it will rise again. But what must it be to be? Because you're coming from more the traditional american tech hub and given the kind of onslaught of regulation, how are you managing that? How are you thinking about it?
00:49:22.850 - 00:50:09.520, Speaker C: Something we're really excited about is when we thought about the network from day one, there was a focus on doing things in as a regulatory compliant way as possible. So no token sales, as much incentivization as possible throughout the technology stack and the processes in which we manage the code commits. And helping to invite as many people to participate in the community as possible is something that we really focused on. And we think that's something that everyone will also adopt over time when it comes to developing layer one, L2, or other types of blockchain based solutions. So that's an area that we think is something that is actually a competitive advantage for us and we expect the industry to also do in the future.
00:50:10.050 - 00:50:22.674, Speaker A: I think one of the arguments that we're seeing a lot of the US companies have is that to be compliant is so challenging because the rules have not been declared. How do you navigate that?
00:50:22.872 - 00:51:00.846, Speaker C: Well, we try to again do things that we feel are going to focus on utility of the blockchain specifically, as opposed to other aspects. Tokens are used for paying network fees and transaction fees. They are used for staking, they use for governance. Those are the things that are important for operation of a network. The decentralization of the network across many different countries where validators are operating in 22 countries around the world, over more than 18 different kind of cloud providers, 73 different unique operators at launch. Those are the things I think that really help a network to start off and grow its decentralization over time.
00:51:01.028 - 00:51:27.350, Speaker A: Do you ever imagine, because there is sort of a way that some ecosystems have decentralized by almost like creating secondary companies to build the infrastructure or wind down the original one. Is that a plan or is that something that you're thinking about? Or do you see it more like this is a technology company that will also exist alongside this network forever.
00:51:27.850 - 00:51:53.520, Speaker C: The Atas foundation was launched as well prior to the Mainnet going live, and is continuing to grow in size and responsibility. The Aptos foundation focuses on the growth and decentralization of the protocol. Apdos Labs is a contributor to the protocol and also continues to build products over time as well. So developing a wallet, an indexer, analytics infrastructure, and over time, potentially products.
00:51:54.130 - 00:52:13.894, Speaker A: Okay, and do you think you could have a secondary one? Do you ever imagine having another? Maybe it's too weird and strategic, but maybe that's not even something that most teams are thinking about. But yeah, I just wondered, when you talk about decentralization, I wonder if you're also thinking like maybe another company completely builds it.
00:52:14.012 - 00:52:51.950, Speaker C: That's a good question. I think we've seen from the community standpoint, so many different projects building in this space and the more that build externally outside of Aptos Labs. The Aptos Labs is an influencer and contributor to the overall protocol and to the growth of network, and we're excited by that. We're excited about taking less responsibility and we're super encouraging and grateful for those that are contributing to AIPs, those that are committing code. The ATO stack is actually, I think, 450 unique contributors. And it's not just a small team of folks that work here that do it. It's really people around the world who are excited about the protocol and what it can do for their particular use cases.
00:52:52.110 - 00:53:05.720, Speaker A: Nice. Well, Avery, thank you so much for sharing with me this sort of story of Aptos explaining kind of some of the tech stack, how the community is where you're at as a project. What's next? Is there something that folks should look forward to?
00:53:06.330 - 00:53:23.040, Speaker C: Upgrades. Lots of upgrades coming forward. We deployed our 1.2 upgrade in February. 1.3 is probably coming out in April or May. And so our plan and our cadence is really to keep deploying technology out to market as soon as possible.
00:53:23.040 - 00:54:08.054, Speaker C: Things like move objects and resource groups which allow people and programmers to be able to bunch their logical objects together in a way that's going to support high performance throughput, is something that's exciting to us. We'll continue to see gas fees coming down, by the way, very soon. I think in the one three upgrade you'll start to see some of that. I think 100 x lower costs in the execution side, which will be very exciting for developers and enable a whole bunch of different use cases. So we keep listening to developer feedback, we see changes coming forward from the community and from our team specifically, and we're going to keep pushing forward in that direction. Hopefully by end of the year you'll start to see amazing applications being built on top of aptos. We have a couple that are very exciting that I would like to highlight.
00:54:08.054 - 00:54:50.810, Speaker C: So one of them is Chingari. It's a web3 social media app with 45 million monthly active users and over 2 million accounts. They were building on another chain in the past, and now they've really been excited by the aptest technology stack and are switching and going to bring all their users with them. And we're going to work together to hopefully scale that up even by an order of magnitude in the future, which is really exciting. And so everyone's looking for that use. Case in Web three, where it gets people to get excited about utility being brought to the space and something that it would use on a daily basis or even a weekly basis in orders of millions, or tens of millions or hundreds of millions. And so we think Chingari is definitely one of those possibilities.
00:54:50.810 - 00:55:35.750, Speaker C: Another one is Grand Saga unlimited, which is a game coming out of Mpixel AA gaming studio out of South Korea. They're going to be launching their game soon. They did an amazing demo at GDC last week with a private beta, and they've had millions of players in some of the previous versions of the game that they built. And again, being able to see what aptest can do to support their needs and use cases, they want to put everything on chain and do all the gameplay and design within the network, which is really exciting and offer a new experience to users. And these are just a couple of the kind of flagship projects that are building and we think that have tremendous potential to take advantage of our technology stack and demonstrate what web3 can do in terms of bring utility towards a mainstream audience.
00:55:36.090 - 00:56:06.754, Speaker A: How would you put an entire, like, if it's a real video game? Because I think there's already a really good mapping on how you could do marketplaces for. If you do marketplaces for things that kind of don't matter but add status like skins, it seems to work. But if you do marketplaces for in game items, then you end up with oligarchs just owning it. It's like not how, how would you put a full game on chain, actually?
00:56:06.952 - 00:56:29.250, Speaker C: So Netflix has been thinking about this problem pretty deeply. There's something called proof of play, which you could take a look at, and how items can be distributed to users in a fair fashion and verifiable on chain. But, yeah, it definitely raises interesting questions around token economies for video gameplay, which is so much more flexible than, say, a boring blockchain that has a utility token.
00:56:29.410 - 00:56:45.674, Speaker A: Totally. That's cool. Well, yeah, thanks again for sharing all of this with us. I'll do a little bit more research into that. You've got me thinking that I should do an episode actually on blockchain gaming after this, but yeah. Thanks so much, Avery.
00:56:45.802 - 00:56:47.050, Speaker C: It was my pleasure, Anna.
00:56:47.130 - 00:56:53.770, Speaker A: All right, and I want to say thank you to the podcast team, Rachel, Henrik, and Tanya, and to our listeners. Thanks for listening.
