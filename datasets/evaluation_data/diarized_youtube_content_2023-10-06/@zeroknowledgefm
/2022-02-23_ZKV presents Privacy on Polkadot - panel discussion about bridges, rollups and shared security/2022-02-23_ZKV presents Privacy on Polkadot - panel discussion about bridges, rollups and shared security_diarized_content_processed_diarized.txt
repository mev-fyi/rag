00:00:00.730 - 00:00:01.086, Speaker A: Cool.
00:00:01.188 - 00:00:02.954, Speaker B: Hey, Derek. Hey, Brene.
00:00:03.082 - 00:00:24.574, Speaker C: Thanks, Susanna. Hi. Nice to see all of you. Hey. Okay, so we have 30 minutes now to explore a pretty dense topic, which is we wanted to look at, like, roll ups versus bridges versus shared security, and then look at that in the context of privacy. I know this is massive. We're going to try to do it.
00:00:24.574 - 00:00:38.198, Speaker C: I'm. I'm going to skip intros. I'll just introduce the other speakers. Derek, I think everyone's familiar with. If they just saw the previous talk. Derek is coming from Moonbeam. Pranay is from Nomad, a bridging interoperability technology.
00:00:38.198 - 00:01:04.914, Speaker C: I don't know if I'm saying it exactly right. And Rob is from. I mean, I have a number of questions I want to get to, but I did want to sort of start off with a quick intro to Polkadot specifically and how Polkadot achieves interoperability between parachains. I thought Rob would be the right person to give us that sort of first look at this example of interoperability, and then I wanted to talk about some of the other ones.
00:01:05.032 - 00:01:05.314, Speaker A: So.
00:01:05.352 - 00:01:06.980, Speaker C: Yeah, Rob, if you want to.
00:01:07.670 - 00:01:43.002, Speaker B: Yeah, sure. So the place I would start, and I hope you can all hear me clearly, is talking about what do we really want about interoperability? Blockchain interoperability. We need messages to be transferred between blockchains. Right. In a way that can be interpreted by a receiving side. But they also need to know that the provenance of the message is good. They need to know that that message was actually sent by a legitimate process in another blockchain.
00:01:43.002 - 00:02:34.380, Speaker B: So this is why composability and interoperability is so tightly tied to consensus and security and things like that. So the observation that we made when we were starting Polkadot is that, well, the best way to get these good guarantees of security on the source of a message is for many chains to be secured by the same consensus process. So that is, they can act on messages quickly because they know that if the source turns out to be bad, they can also avoid. They sort of, like, do a matrix bullet dodge to avoid the bad message coming at them. But if the message is good, then they'll get finalized together. Very cool.
00:02:36.530 - 00:03:01.046, Speaker C: What you just described was. And I just want to make sure that my audio is coming in right, because I did hear something in the chat there. Just let me know if it's echoey or anything like that. But that was one. I mean, what you just described there is sort of the approach that Polkadot takes. I mean, I have it sort of listed here as like, heterogeneous sharding, secured by the same consensus. Is that okay to call it that?
00:03:01.228 - 00:03:36.610, Speaker B: Yeah, that's absolutely correct. I mean, there's a lot of different ways to frame it. So I think from a practical perspective, you can look at Polkadot as like a build your own roll up platform, where it's like, build your own blockchain, build your own roll up and get security, get automatic bridges to all the other roll ups that are in the ecosystem. Or you can call it heterogeneous sharding, which is a different nomenclature for what's essentially the same thing, where all the shards get automatically what we call channels between them. And those channels ensure that when you receive a message on one blockchain, that message definitely came from a valid source.
00:03:38.950 - 00:04:02.906, Speaker C: I want to actually now kind of open this up to Pranay, because pranay, maybe you can introduce a little bit more about bridges. Bridges may be not using. They're not then relying on the same consensus. This is sort of a different way of thinking about this interoperability. So, yeah, maybe tell people a little bit about the project and also how you kind of envision that interoperability working.
00:04:03.088 - 00:05:03.798, Speaker A: Totally. Yeah. And before I jump into Nomad, just to kind of contextualize what Rob was saying, arjun from connect has a really pithy and wise quote, which is that interoperability is scalability, which is that this is the next iteration on the same core goal of how do we have more block space? How do we have heterogeneous execution environments that are secure for users and allow, at the end of the day, people to transact and do something meaningful with their tokens and their data. Right. So anything we're doing with interoperability is in service of that end goal. And what Rob just described is having multiple execution environments within the same security boundary. But what if there is another environment or another consensus process and network with a different security system that users want to go to, and they want to take their assets from, say, Polkadot and move it into Ethereum or into the cosmos ecosystem? Now, that is a different kind of trade off from having the same validator set.
00:05:03.798 - 00:05:41.590, Speaker A: Make sure that what is being sent is what is being received. And that's where bridges like Nomad come in. And Nomad itself is more than just a bridge. It is an interoperability protocol that allows for arbitrary messages to be sent between two crypto networks, essentially. So how it works is we leverage an optimistic mechanism that allows a message or a state route on one chain to be confirmed. Optimistically and then sent over with the use of trustless relayers to a destination. And then in that destination environment, we introduce a latency window or a dispute window where people can submit fraud proofs and challenge it.
00:05:41.590 - 00:05:59.520, Speaker A: So coming back to what Rob said, in order to do the matrix dodge a bullet move, we just take a little bit more time so the bullets can move slower or we can move slower to dodge it. But at the end of the day, that's what you're trying to do. You're trying to make sure that what is being sent is what is being heard, and nobody's trying to tamper with that process.
00:06:00.930 - 00:06:35.818, Speaker C: I have another kind of type of interoperability solution, but I actually wonder. I'm kind of curious if Pernay, if you put nomad in this, but it's this idea of an interoperability standard. So here I would think of something like IBC, where it's unique chains, but they all have the similar standard. Would you put Nomad in a similar category because you called it sort of an interoperability protocol, or would you see that? Because when I think of, it's like there is this bridging world where there's lots of different networks and lots of different bridges, but, yeah. How do you see Nomad there?
00:06:35.984 - 00:06:42.050, Speaker A: Yeah, I mean, I would love for it to be a standard, but it's kind of presumptuous to say that right now, which is why I said protocol.
00:06:42.150 - 00:06:42.800, Speaker C: Okay.
00:06:43.330 - 00:07:33.178, Speaker A: The way I kind of think about this is I see there being, like, three kind of large ecosystems right now with sufficient liquidity and developer activity. And those are the EVM Ethereum world, where Geth is used as an SDK. And you see all of these geth forks that have these different capabilities added. Then you have Polkadot, which is built around substrate as an SDK and uses XCM as its native interoperability protocol. And then the third big one that I think there's been a lot of energy about recently is the Cosmos or Cosmos SDK ecosystem that has IBC as a native interoperability protocol. For these latter two ecosystems, the designers rob included here were ahead of their time in the sense that they saw the need for interoperability. Before there was, like, a multitude of different chains that emerged.
00:07:33.178 - 00:08:23.418, Speaker A: And so all of these chains were built with the native interoperability protocol. As a first class citizen. And so when you roll your own Cosmos SDK chain or substrate chain, you have the option to use IBC or XCM as kind of that connected tissue that's a shelling point for everybody else. But because the EVM world kind of emerged in a more grassroots way, where there was not a kind of shared interoperability protocol, but eventually there ended up being many EVM chains, we got this need for these chains to talk to each other without a plan, without a connective tissue. That's why you have this patchwork bridges. Some are validator bridges, some are multisigs, others are entirely custodial by one party. And we've seen what happens when these bridges are poorly designed recently.
00:08:23.418 - 00:09:09.180, Speaker A: And so what we're trying to do is provide that standard so that there's both an expectation around what is the base level of security between these chains and the messages being sent between them. But more importantly, I think in the long run, to provide a common messaging standard and interface for developers to build cross chain apps, like towing back to Derek's presentation. The ability of moonbeam to be able to send a message via XCM to a privacy pair chain is predicated on both chains using that standard, agreeing on the interface with which they speak. And so we need the same thing for the EVM world. And then hopefully we can have these port of entries like Moonbeam and Evmos into these different ecosystems that then allow all of this to be.
00:09:11.630 - 00:09:46.470, Speaker B: Like, just to weigh in really quickly on that point, the metaphor that I like to use to describe sort of that duality of like, well, we need to move data over between blockchains. And what language are we going to speak is that it's sort of the same parallel as something like, every person has a different brain, different arrangement of neurons, right? And what's inside of your brain, you don't communicate that, but you have a language which allows you to communicate concepts and establish a shared framework of ideas. And in a way, blockchains can do the same thing with protocols like Xiam.
00:09:48.970 - 00:10:40.390, Speaker C: I wanted to talk a little bit more about this sort of EVM to EVM because I think that also leads to this other one more kind of philosophy which has been presented and kind of emerged within Ethereum. But right now, what we see is a lot of EVM compatible EVM basic chains that are mostly bridging to the Ethereum main chain, but can also potentially bridge to each other. But you also have this whole model of roll ups on Ethereum or roll ups on some data availability chain like Celestia. So I want to understand, how does this concept relate to bridges? Are roll ups bridges to a main chain? In a way, are those just bridges between kind of the roll up and another? Or is it very different. When you talk about EVM bridging.
00:10:42.250 - 00:11:58.658, Speaker A: Yeah, I can take a stab and then pass it to you all. So I think the key difference here is, are we talking about bridging or sending messages between chains or execution environments secured by the same consensus set or between networks? And I think the need to have multiple execution environments like roll ups or shards that are all kind of secured by the same consensus process is to offer heterogeneous environments for developers. In economics, there's this idea of comparative advantage where some places it's good to grow potatoes, other places it's good to grow broccoli. I don't know why you'd trade your potatoes for broccoli, but maybe you want to, right? In the same way you have different execution environments that are built for different reasons and specialized, but they can all kind of piggyback on the same set of validators and offer more block space to developers. But there's also bridging between entirely different validator sets. And that's where I think the true sense of bridges come in. And the more meta point here is bridging is just such an overloaded word right now because we've sprinted into the multichain world because clearly that's where the future is.
00:11:58.658 - 00:12:23.578, Speaker A: But bridges can mean liquidity networks, it can mean settlement layers, mint and burn bridges between different consensus processes. It can mean roll up bridges, and it can even mean XCM kind of bridging between parachains, right? And each of these are very different, but they all kind of get to the same end goal of letting people move their assets and their data between different environments where different programs and applications will be run.
00:12:23.744 - 00:12:44.770, Speaker C: Cool. Rob, I have one question about the XCM bridging, and it's something that maybe is going to sound a little silly, but pranay, you just mentioned sort of the mint and burn or lock unlock kind of models. Is it any of that? Or is it like a totally different idea, like to bridge between parachains?
00:12:48.070 - 00:13:08.914, Speaker B: There's a few different concepts in XCM that add, I guess, a little bit of complexity to this. So one notion is of teleportation. So that's if one consensus environment is a trusted teleporter. And if you think about Star Trek, I know you love Star Trek.
00:13:08.962 - 00:13:09.682, Speaker C: I love Star Trek.
00:13:09.756 - 00:13:13.580, Speaker B: Beam me up, Scotty. You destroy the Star Trek on one.
00:13:16.990 - 00:13:17.740, Speaker C: Going.
00:13:19.790 - 00:14:19.674, Speaker B: You destroy Scotty on one side, you mince him on the other, right? So that's teleportation. Whereas there's also reserve asset chains, reserve asset transfers where one chain is acting as sort of a hub which keeps track of balances. And this is for less trusted, where you actually don't want to trust the other side to actually mint tokens correctly or do that. Teleportation might, instead of just teleporting Scotty, they might clone Scotty or wipe Scotty out of existence altogether, which is very bad for people who care about Scotty. Scotty is a token in this, you know, the reserve asset chain in Polkadot and Kusama is statement and state mine respectively. Or that's one common good option to use as a reserve asset chain. And that's basically introducing an intermediate chain that actually tracks the balances.
00:14:19.674 - 00:14:34.286, Speaker B: You know, that no chain is going to spend more tokens than it actually has. I found the conversation on optimistic roll ups super interesting. So if we get a chance, I would be glad to head back more to that territory.
00:14:34.478 - 00:15:12.910, Speaker C: Optimistic. The one thing is looking kind of at our clock and our time frame for this talk. One of the things I do want to touch on is privacy in all of this, and I'm curious, I'm really curious. One of the things I wanted to explore was sort of trade offs of these different models. And I guess actually we can use maybe Nomad as the optimistic bridge example. But I am curious about privacy in all of these contexts. For example, does XCM offer something that's different in terms of a privacy guarantee versus something like IBC or something like Nomad?
00:15:16.370 - 00:15:17.120, Speaker D: Well.
00:15:19.990 - 00:16:33.526, Speaker B: I think one of the maybe key differences, I guess, to the state of bridging technology now, although I know that in the future this will change, is that XCM is also designed for more general calls. So making remote calls on blockchains and doing fee payments, as opposed to just sending tokens back and forth, which is the primary use case for bridges so far. So I think that there are avenues for privacy to enter that way where actually zero knowledge proof data can be sent across chains and evaluated fairly trustlessly on the other side, with the fee payment being taken in a very generic way. So the fee could even be taken from something like a shielded account, or could be paid for by an autonomous dow on the source chain and who's getting some kind of zero knowledge fee payment in return. I think there are limitations depending on the protocol and the use case, obviously. I think there's been some good analysis on, let's say like zero knowledge amms, where based on the price quotes that you're getting, you can figure out, you might not know who's trading, but you definitely know how much they're buying them. For what price? Totally.
00:16:33.526 - 00:16:42.314, Speaker B: That kind of information theoretic tightening of the anonymity set is fairly unavoidable, would.
00:16:42.352 - 00:17:27.500, Speaker C: You say, though, and maybe this is to you, Perna, like, using the method of creating a bridge. Does that offer, like, using more the optimistic one, does that offer any sort of, I don't know, new way to incorporate privacy? Because usually what you hear about with bridging is like, you can do things like bridge from a transparent zone to a private zone and then to a transparent zone, again, a different account. And that's a way to sort of act as a mixer. You don't know kind of who owns what token, but the bridge itself, and I have actually asked this on numerous panels and podcasts, but does the bridge itself always have to be transparent somehow? Can it hide anything? I know it's just like point a to point b, but.
00:17:30.190 - 00:17:30.842, Speaker B: Can it almost.
00:17:30.896 - 00:17:34.800, Speaker C: Act as the intermediate? Going both ways, I guess, is kind of the question here.
00:17:35.170 - 00:18:17.930, Speaker A: Yeah, honestly, I'm not sure. I have not personally explored the different options for providing privacy in bridging between different crypto networks. I think there are a couple of projects, like web and mystico, that I need to look into. But I think the Maslow's hierarchy is like, we need to get security first and make sure that there's standardization before we can get to something a little bit higher. That said, I do like Rob's metaphor again about the brain. In your brain, everything you know is kind of. You can kind of keep it private or shielded, and then when you need to communicate to another brain, you use language or you use words, and you can either go one to many, you can put it out there, or you can have, like, a one to one channel.
00:18:17.930 - 00:19:06.970, Speaker A: And I'm bullish that in the future, privacy technology will eventually find a way to support bridging. But right now, I think the model that Derek mentioned of having moonbeam send information or data to Manta and be able to handle all the private stuff on that chain is likely where we will start out first before we get to something even more kind of holistic. And where Nomad might fit in is if it's happening within the Polkadot ecosystem, then Manta is like, a perfect place to take care of all of your privacy needs. But if you need to do something on Cosmos, maybe use Nomad to go from Moonbeam to penumbra or anoma. And so I think we will have these local regions that offer more privacy protections, and then when you want to do commerce, you kind of unshield and you go elsewhere.
00:19:08.030 - 00:20:05.614, Speaker D: That sounds right. Just to follow on that, I feel like right now the mental model or the architecture kind of resembles a dumbbell, where it's really mostly tokens that are being transferred across chains. But most of the logic is local. Or even if you have privacy features, you would add that locally on the chain. I think the thing that I anticipate and I'm excited about is I think over time it'll start to look less like a dumbbell, where there's all this functionality on the chains and then just like this thin pipe of passing tokens and look more evenly spread, where, as I was saying, you could have privacy features as a service, it would be incorporated into some application. It could be an application that's just remotely manipulating things in this privacy zone, but without having to put everything there. Because I think that the challenge is if everyone has to build in all these privacy features into everything they're building, that kind of goes against this specialization idea.
00:20:05.652 - 00:20:05.854, Speaker B: Right?
00:20:05.892 - 00:20:07.070, Speaker D: That's complex.
00:20:08.450 - 00:20:46.474, Speaker C: Yeah. I actually wanted to ask you, Derek, because in your case, speaking about also this idea of bridging, generally the EVM compatible parachain ends up having a number of different kind of bridges to different places. And I wonder, how do you expect, because I guess it's not really you to say, but Dapps to use those different chains or those different formats. Is that actually how you imagine it, by the way, that Dapps could be deployed on moonbeam, but would actually potentially be interacting with other networks over some of these types of bridges or interoperability things?
00:20:46.592 - 00:21:24.514, Speaker D: No, that's right. I think that I can kind of imagine the Moonbeam EVM as being, I've described it before as being almost like this scripting environment in a way, right, where you have these. So let's give examples. There can be these special smart contracts. They look like smart contracts in our EVM, but they're actually going and doing things like on other chains. And this Lido example I mentioned before is one such thing. Other token use, XC 20 tokens are another thing that even bridges in some way might have some local looking smart contract, but then in turn, when you're calling functions on it is sending messages to go to other chains.
00:21:24.514 - 00:21:38.074, Speaker D: So you have some environment where you can start to stitch these things together. But this is where this is just happening now. So exactly what forms these are going to take is a little unclear. And the model is a lot different.
00:21:38.112 - 00:21:38.314, Speaker B: Right.
00:21:38.352 - 00:22:09.638, Speaker D: So people that are used to programming inside of the EBM, they're used to this synchronous kind of guarantees that you don't have when you move into this world. So my expectation is that there'll probably need to be new, higher order patterns will emerge for how you go about dispatching things to chains XYZ, and then expecting some kind of a confirmation back that that's all going to happen over a longer period of time. So a lot of these things, I haven't really seen much in the way of these kinds of approaches yet. This is all stuff that's on the cutting edge right now.
00:22:09.804 - 00:22:21.260, Speaker C: Can I ask a question about pair of threads with that kind of concept, living within a parachain? Could you have the privacy zone live in that?
00:22:22.990 - 00:22:28.730, Speaker B: Yeah, you can do anything on a parathread that you can do on a parachain.
00:22:30.510 - 00:22:33.374, Speaker C: You should explain what a parathread is. Actually, I just threw that in.
00:22:33.412 - 00:23:19.180, Speaker B: Yeah, absolutely. What a parathread is, is it's not something that's been released yet, but it's designed to be a pay as you go version of a parachain. So it's like a regular parachain is going to make a block every 12 seconds right now, and in the near future, every 6 seconds. Some use cases, you don't need blocks that often. You need blocks fairly intermittently. You want to get security fairly, maybe sporadically. I think one programming model, things are going to change, right? Because people are very used to synchronous communication between blockchains, and now things are moving asynchronous, which is one of the reasons I've been beaming that so hard.
00:23:19.550 - 00:23:21.050, Speaker C: Synchronous, Rob.
00:23:22.690 - 00:23:46.646, Speaker B: And what I expect is going to happen is that we're going to see a lot of controller type objects, smart contracts, or parathreads, or living on parachains or wherever. That sort of set a series of events in motion, and then those are carried out by the network over a period of time. And so that could definitely happen on a parathread. Being a controller for certain things, I.
00:23:46.668 - 00:23:51.778, Speaker A: Might have to change my Twitter handle to asynchronous in order to be a part of this movement.
00:23:51.874 - 00:23:53.926, Speaker C: Asynchronous, yeah.
00:23:53.948 - 00:23:54.790, Speaker A: There you go.
00:23:54.940 - 00:23:57.240, Speaker B: Yeah, let's make it happen.
00:23:58.970 - 00:25:00.540, Speaker A: I wanted to jump in here too, because I think this is where we get to some really cool things where you can kind of correct me if I'm wrong, Rob, but parathreads are like almost like just in time usage of security, right? So you have a validator set that can basically provide some level of validation to whatever execution that happens. And instead of having predictable block space coming all the time, a parathread can just do it every once in a while and then the rest of the environment can operate on it as it needs. And there are some other really cool projects, one that I heard about recently called layer labs, that is working on taking an existing consensus mechanism and security set and then making that a common good or public good that other services can tap into and use that as the firmament. And so I think we're going to see cooler and cooler models that all rely on asynchrony, but can be more bespoke in their usage of security. But this is getting into some pretty esoteric territory at this point.
00:25:01.890 - 00:25:29.782, Speaker B: Yeah, definitely. I mean, especially when, say, messages come a bit more infrequently. It's cool because it's really just a change in the scheduling algorithm. I think we're very open to look at other esoteric forms of scheduling. Like the fundamental unit of security in Polkadot is parachain block. How you schedule when those blocks are created is kind of another layer up, so there's a lot of room for experimentation there.
00:25:29.916 - 00:25:58.640, Speaker C: Cool. There's one question in the chat that I want to bring up really quickly, and then I think that probably will wrap us up and I realize we've just barely scratched the surface of this huge topic, but this was a question for Rob. Will Polkadot and Kusama have XCM between them? And this is actually related to privacy here, but if so, why in the future would a project do a deployment on Polkadot or Kusama? If you can deploy a specialized parachain and basically bridge back into it?
00:25:59.330 - 00:26:35.686, Speaker B: Yeah. So I guess there's two questions there. So that's something to unpack. So, yes, parity tech has been building bridging technology, and also XCM is designed to work within the same consensus system, but also cross consensus system. So over bridges. So as bridges are launched between Polkadot, Kusama, and there are bridges launched between, I think, Rococo and Wococo testnets right now that can ferry XCM between them. So there are a multitude of different reasons why you would deploy on Polkadot versus Kusama.
00:26:35.686 - 00:27:21.350, Speaker B: I think one important question is like, well, who's in your neighborhood? Because sending messages over a bridge is probably more expensive per day. Has a good quote that I hear sometimes, which is talking about bridges being more for cargo ships moving containers than sending envelopes through the USPS. So who's in your neighborhood? Who do you want it to be cheap to talk to? And also I think fundamentally, Kusama is more about chaos and being, like, high risk, high reward, high growth, whereas Polkadot is really more about stability. It's a bit more established, a bit more rigid, slower to update than Kusama is. So those are all factors.
00:27:21.850 - 00:27:33.100, Speaker C: Cool. All right. Well, thank you all for coming and joining, being part of this panel at the privacy on Polkadot event. Thanks again.
