00:00:05.240 - 00:00:27.748, Speaker A: Hey, everybody, it's your host, Diana Chen, and you're listening to an episode of mini Hash, a condensed episode of Rehash where we do a deep dive into one focused topic with the past guest. Hope you enjoy. It's been more than two years since we had Milan, and when you came on, you were with Ksenia for MGD, right?
00:00:27.844 - 00:00:28.188, Speaker B: Yeah.
00:00:28.244 - 00:00:32.880, Speaker A: Mostly what we talked about was MGD, which is just like, what a throwback.
00:00:33.260 - 00:00:36.748, Speaker B: That's crazy. I had just joined one KX as well.
00:00:36.844 - 00:01:29.004, Speaker A: Yes. Yeah, I remember you were at one KX, but maybe a little bit new there. For anybody who wants a little blast to the past, go back and listen to season two, episode five, where we talked about, I think we called it parody sorority turned grants. Now, if you want a little blast to the past, go back and listen to that one and learn about Metagamma Delta Dao, which was the first women's only Dao and one of the first daos period to exist in the space, which recently shut down. But there was so much lore there, and I think so much that people can learn from that whole experience. And it's cool that with what MGD started, now we have things like. And we have all of these different women's groups in crypto, and we have rehash where more than 50% of our guests have been women.
00:01:29.004 - 00:01:43.600, Speaker A: So it's definitely a different space and a different time today than it was when MGD first started. So, I mean, huge props to you guys for doing that back in that time when it really wasn't the popular thing to do.
00:01:43.980 - 00:02:10.070, Speaker B: Yeah, I mean, it's really incredible to see where we're at now as well. Just like the individual members of MGD, all of the members, when we first joined the DAO, we're exploring web3 for the first time and kind of, like, trying to see what their role could be within crypto. And now we have people who are head of strategy, and we have people who have gone through acquisitions, founders, and then we're also close friends. We just had a small reunion at ECC a few weeks ago.
00:02:10.110 - 00:02:31.316, Speaker A: Oh, nice. But, yeah, truly, like, the people that were part of MGD back then are all leaders in the crypto space now. It's so cool to see. I think we'll see that, the next wave of that with, you know, shi fi people graduating from the Shifi cohorts. We'll see that in a few years. Like, a lot of those women probably in leadership positions and building really cool things. So I just love it.
00:02:31.316 - 00:03:22.560, Speaker A: But people should go back and listen to season two, episode five was from more than two years ago, which in crypto years is like two decades, basically. But we have you back today to talk all about smart account abstraction, especially as it pertains to wallets and giving us better ux. That's something that we've been talking about in this space for so long, is we need better ux. Otherwise we can't onboard new people to the space because it's too difficult to get set up. You have been, I know, heads down doing a lot of research and working with projects that are solving this UX problem via account abstraction. So for people who are not familiar with this term, I'm sure everybody has heard this term before, but maybe aren't familiar with what it actually means, let's just start like really basic, really high level talk about what do we mean when we say account abstraction. Smart account abstraction.
00:03:22.560 - 00:03:32.208, Speaker A: Modular smart account abstraction. Are these all referring to the same thing or slightly different things? And just give us like the high level overview of what these things mean.
00:03:32.344 - 00:04:37.626, Speaker B: So account abstraction can be thought of as like a big movement to make smart contracts being the primary means through which people interact with web3. So historically, when you are onboarding onto web3 and interacting with Dapps for the first time, you have to first download an EOA wallet, which is this monolithic thing that's an application that manages both your keys and your assets at the same time. Because those two things are heavily coupled with an EOA, if you lose your private keys, you lose access to all your assets. So what account abstraction does is essentially decouples the key store from the asset store by using smart contracts as the primary way through which people are interacting with web3. So they can bring their own keys, whether that's your traditional EOA or your email, or your social login, or even passkeys, which is a relatively new way to do passwordless login, even within web two, to secure your crypto accounts and then having the smart contract store your assets. And then you can have different rights on which keys can do what with the assets. Right.
00:04:37.626 - 00:04:55.320, Speaker B: You can have things like spending limits so that even if you lose one key, certain keys can't move too many funds in and out of the account. And you can do key rotation as well. If you lose your key, you can do a recovery. So it's just a way to making wallets and the means we interact with web3 more programmable and flexible.
00:04:55.740 - 00:06:01.972, Speaker A: Yeah. So the web two equivalent is kind of just like if we were to download a new app from the app store, and then it asks us to log in. Now, instead of creating a new username and password, we can just do login with Google or login with Apple, or even like send me a magic link and it'll email you a magic link. And you don't need any sort of password that you have to remember or keep track of or store in one passport, one password, or like one of those apps which frequently gets hacked, I think, or at least gets targeted for hacks. So now we're able to do that in the web3 space, which is huge because a few years ago or even now, some people will create a metamask and you have to store your private keys, your seed phrase, somewhere safe if you lose it. I mean, I still operate primarily with my metamask that I've had for years, and if I were to lose that private key, that's a lot that has gone down the drain. So now there are ways to recover that account without me having to stress about keeping my private keys somewhere safe, making sure I don't lose this piece of paper or I don't lose whatever I've sorted on.
00:06:01.972 - 00:06:49.090, Speaker A: So that is really big. One question that I think people had in the past with things like apps or platforms that would help you with account recovery is this question about self custody or having the platform custody for you. And so people would want to have control over their own assets and be able to self custody so that nobody else has control over that. But then you have the added stress of having to keep your private key somewhere safe, having to remember all that, whatever. So now with account abstraction and with having everything go through smart contracts instead of the traditional eoas, is there still a way to self custody your wallet with account abstraction, or is coinbase or whatever you're going through then custodying for you?
00:06:49.430 - 00:08:15.000, Speaker B: Yeah, I mean, there's definitely, it's definitely a tiered approach, right? And the custody versus non custodial thing, you have more options now to onboard with the easiest UX first, so that you can get started on adaptive and the funds that you're putting on your wallet that's created for you through aa or embedded wallets, if you lose it, it's not too big of a deal because it's kind of like losing a new account. So with the infrastructure that's available now, the info providers have this easy way to onboard users first and then an option for users to off board or like progressively go in the non custodial route, whether that's bye exporting private keys, which I'm not a fan of. So it's like non custodial that way, because you can export the private key of the wallets that have been created for you onto your metamask. Usually these info providers secure your keys in a hardware and enclave that they don't have access to, but the users themselves have access to the keys that is encrypted on the client side on the user's device, and then that is used to decrypt and assign the messages. So I think the UX gain here is that a lot of the complexities are abstracted away from the end user while still allowing them to interact with the Dapp in a non custodial way. It's less trustless, but it's not like you're giving these infra providers the reins to everything.
00:08:15.160 - 00:08:21.398, Speaker A: Right? Right. And just curious, why did you say that first option of, like, being able to export your keys is you're not a fan of that?
00:08:21.454 - 00:09:10.078, Speaker B: I feel like private keys in general is eventually going to be something that only the power users have to know about. I don't think we'll get to a point where, you know, my mom will know to export her private key if she wants to interact with a wallet that's been created on one app and use it in another. Dap, I think it was friendtech that has the embedded wallets created for you. It onboarded a lot of users through their Twitter accounts and the wallets created for you. But when people wanted to trade their friendtech keys inside of their metamask or something, they had to export their private keys and paste it, which is really scary to have to interact with your assets and your keys that way. So privy is the provider that they used. One recent development with the embedded wallets is that you can now do cross app embedded wallets.
00:09:10.078 - 00:09:19.464, Speaker B: So if you log in and create your account with privy somewhere, you can also log on to another Dapp with that. I think that problem is gonna be less of a pattern.
00:09:19.552 - 00:09:45.110, Speaker A: I feel like this is just like a transitional period type of thing that people are doing. But I agree, it definitely leaves a lot more room for error or for scammers to come in and talk to someone like your mom who doesn't understand what the export private keys is, and they're like, you gotta do this. And then she just does it, and there goes all her money. So that is what account abstraction is. And then is smart account abstraction. Modular smart account abstraction. Are these all referring to the same thing as well?
00:09:45.240 - 00:10:45.696, Speaker B: There's no smart account abstraction, because account abstraction itself is referring to this migration from eos to smartphones. Modular smart account abstraction. So modular smart accounts is an emergent smart account architecture that basically allows smart accounts to have a core implementation and then that core implementation being extensible via modules. So if you think about it like you have your crypto account today, you can install modules like social recovery, email recovery, and things like automation and dcaing. This is split into two different module types, validators and executors. The validators will refer to things like new key signature types, and then the executors would be things like automation. So it's basically allowing your wallets to have a more extensible, flexible way to expand on its features.
00:10:45.696 - 00:11:29.020, Speaker B: That's up to the user. Or if it's an embedded wallet, then it's up to the dapp developer to install the modules that make sense for their user flow. What this allows us to do is maintain a core, really secure implementation for smart accounts, but at the same time turning these smart accounts into a developer platform and new distribution channel for web3 products and services. So for example, there's a protocol called Zkemail that allows you to recover your accounts basically through email. They recently partnered with Rhinestone to build a recovery module. So now if you lose your keys to your smart account, you can use your email to recover it. The analogy is kind of like metamask and snaps.
00:11:29.020 - 00:11:37.230, Speaker B: Metamask open their wallets to be installable. With third party snaps, the wallet becomes a distribution channel for these additional services.
00:11:37.970 - 00:12:02.406, Speaker A: Gotcha. So to just rehash that, the modular component of smart account abstraction just allows for more customizability, more features, more unlocks that you're able to do with your wallet. You could plug in with third party integrations, you could maybe customize it depending on what the app developer wants to do. Wants to have your user experience be within that app?
00:12:02.518 - 00:12:03.838, Speaker B: Yeah, that's right.
00:12:04.014 - 00:12:38.126, Speaker A: Okay, so I want to talk about some real world applications and impacts of having account abstraction available to us now. So depending on who is listening and what ecosystems they're in, I think a lot of our listeners are probably operating in the base ecosystem. So let's just take that as an example. If somebody is trying to onboard onto a new app on base, what would that onboarding experience now look like for a new user with account extraction available versus before?
00:12:38.278 - 00:13:33.354, Speaker B: Yeah, so for something like base, where a lot of the use cases are non financial or social, or it involves entertainments, it's the perfect use case for things like AA because account abstraction enables things like gas sponsorships and gasless mints. So this has been a really good showcase for what account abstraction allows us to do over the past year. And that's been the majority of the traction of AA is that look, you can onboard, you can go to adapt and you can log on with your email or phone number or social handles, and then you're taken straight away to the adapt homepage. The wallet is created for you in the background. You can do your first mints interactions, post your first things, and that's a sponsored the gas for that is sponsored for you by the DAPP itself. And because the gas is cheap on base, this makes economic sense for dapps to do this for their users, more so than something like Mainnet, for example.
00:13:33.442 - 00:14:11.132, Speaker A: I've even noticed for myself, like, I've been using base apps a lot more because gas is sponsored, even though I would only be paying like one or two cent per transaction without the gas sponsorship. But for some reason it just like knowing that I don't have to pay anything makes me want to go on the app and take more actions, because I'm like, I can take as many actions as I want, I can mint as many photos on Moshicam as I want, and it's all free for me to do that, which is like a pretty cool experience. What about other use cases you can think of maybe outside of the base ecosystem, or with more financial use cases or different types of use cases.
00:14:11.316 - 00:14:52.784, Speaker B: So things like automation is something that's really interesting. With account abstraction, you can assign certain rights to a third party services, keys to do certain things on your behalf, and you can be very granular about the transaction rules that they're allowed to do for you. So you can do things like subscribing to a service and automatically minting something when it comes out without having to go and mint it yourself. But you can do things like dcaing, allocate a certain portion of the tokens that you receive every month to Aave or another DeFi protocol call. So yeah, automation is a pretty big one as well, for both, you know, non financial and financial use cases.
00:14:52.912 - 00:15:00.976, Speaker A: I was going to say, because we use hypersub to distribute our episodes, is that using account abstraction as well to distribute those episodes?
00:15:01.008 - 00:15:39.618, Speaker B: Do you know, I believe it's just minted to the people who subscribe. I don't think it's using AA for the time being because I'm subscribed with my EOA and I get the episodes minted to me with something like AA, you can be more flexible with the types of transactions that you want to do. If you're using save today, you can use their transaction builder and specify the actions. Kind of like if that's, if this, then that action that you want to take on chain, but deploy that to a relay, your network and then that will execute the transaction on your behalf. So with account abstraction, it's not just singular things like minting, but it's more like if this than that, more customized transaction flows as well.
00:15:39.714 - 00:15:58.502, Speaker A: Another example that just came to mind too is so we use den for managing our safe and we have automatic recurring payments set up to the core members of our team that send out x amount every month to us. Is that kind of something you're talking about with the automation that account abstraction enables?
00:15:58.566 - 00:16:14.454, Speaker B: Yeah. So recurring payments, transactional rules, because sometimes it's like dependent on other things that happens on chain, right? So you can have like a network of nodes that watch for certain things that happen on chain and then executes your thing only when certain things happen.
00:16:14.622 - 00:16:36.598, Speaker A: So looking ahead to the future, account traction is still a relatively new thing. We've already made huge strides with it. Where do you see this going in the future? And further developing and further improving the UX, where do you expect our UX experience from a consumer side to be by, you know, let's say the end of this year or then by the end of next year, where do you expect us to be?
00:16:36.694 - 00:17:09.333, Speaker B: One thing that people are eagerly looking toward within the account abstraction info provider and generally wallet space is an EIP called 7702, which essentially gives eoas the power to have contract codes deployed to the EOA. That gives them some functionalities of account abstraction. So this kind of answers the questions of like, okay, if account abstraction is the future, what do we do with EOA users today? Which is where the majority. So I think that's gonna make the transition really interesting.
00:17:09.501 - 00:17:16.129, Speaker A: Is that aiming to get rid of elas? Like, do you think elas will just become extinct in the future, or will they serve a different purpose?
00:17:16.429 - 00:18:17.290, Speaker B: I think it will serve a different purpose. I don't think they'll become extinct. They'll just be like another category of wallets that you can use for certain things because you still need signers to a smart account, right? So the EOA can be an option for people to use as a signer, but then the account, the smart accounts are like where you would hold the majority of your assets. The other thing is that I think within the consumer web3 space, people are already used to the new onboarding flows, the social login, and then kind of like, things are basically gasless and sponsored at this point. I think that's going to be the new sort of table stakes for dapps that launch, because people aren't going to buy the native token to interact with a new Dapp anymore. I think modular accounts is something interesting to watch. I think it's hard to picture right now what that looks like as an end user to imagine installable components to your wallet, because so far the wallet experience has been developed by one team.
00:18:17.290 - 00:18:22.906, Speaker B: But when you can discover and install new components, that would be really interesting.
00:18:23.098 - 00:18:26.234, Speaker A: What are some examples of those new components that you might want to install?
00:18:26.322 - 00:18:58.394, Speaker B: So there's two ways that they can be installed. They can be installed by the end user or the dapp that creates the smart account for you. I think the Dapp deciding which components to include for the end user is going to be the first way that people see modular accounts. So if you're building a DeFi application, for example, that has some automation features, they might create a safe for a user that comes preinstalled with modules like passkey recovery and some automation one and I, as the end user, might not even know that it's a modular thing.
00:18:58.572 - 00:19:41.358, Speaker A: The end goal of all of this is that the end user does not know anything that we just talked about in this episode is happening in the background. All they know is, I have a super easy on ramp experience. Like, what do they say the best on ramp experience is? No, on ramp, like, yeah, you can just open an app and use it. There's no onboarding process, really. It's that intuitive. That's the end goal, and I don't think we're that far off from it at this point, especially with gasless stuff. Do you think then in the future, with these gasless sponsorships becoming the norm, that apps will need to have more money or more Runway in order to launch and be successful? Because users will be expecting that all of them are sponsoring gas.
00:19:41.494 - 00:20:50.064, Speaker B: Yeah, I think the gas sponsorship just becomes another user acquisition cost for the Dapp. So there's paymaster infrastructure like Pimlico stackup that allows the Dapps to define any quota of gas that they want to sponsor for the end user, so they can pretty much estimate the cat for acquiring your users. One other thing that improves the UX, kind of going in parallel with account abstraction, is the wallet standards in general, how we do things like session keys to authorize the Dapp to interact with the wallet. So if you're logging onto an application with Google, for example, you're usually taken to this screen, like authorization screen that is like, allow this app to read your email, your name, your contacts, for example. So we're going to see a similar flow like that for web3, where you're logging onto a DAp and you're getting asked for permissions to read your wallet from the Dapp. And this allows things like doing multiple actions on the Dapp without having to reconfirm everyone. So there's onboarding, and then there's also like in app Ux gains there as well.
00:20:50.232 - 00:21:03.576, Speaker A: Right. I wonder how all of that affects security, because the more convenience you want for the end user, the more security you sacrifice, type of thing. Is that gonna be the same deal in web3? And, like, how concerned should we be about that?
00:21:03.728 - 00:21:55.742, Speaker B: Yeah, so, I mean, this is why it's important for these things to be open standards and nothing really dictated by one company. Because if that company then becomes the market leader, it has a lot of market share, then that dictates all the security patterns, everything that happens in crypto. And if that gets hacked, then we're pretty much back to square one in terms of the trust that people have. So that's why it's important that these things are standards, and it's also moving really slowly, much more slowly than if one group was doing it, because you do have to get consensus and buy in from the big wallets that are out there. Protocol devs when it comes to things like 7702 and protocol level changes. Dapp developers, as well as people who have a big stake in the ecosystem like Ledger, Metamask, Coinbase, and just getting everyone in the room and coordinate all this?
00:21:55.926 - 00:22:12.178, Speaker A: Yeah, absolutely. Slower is not always bad. We should be more patient and embrace the slowness, because sometimes slowness is good. Do you have any final thoughts for us about account abstraction as it relates to better UX and just making the user experience better?
00:22:12.274 - 00:22:41.682, Speaker B: Overall, I think I'd encourage people to download and try a lot of the newer wallet apps that are out there to kind of see the features that is enabled by a counteraction. The features that have launched seem boring right now, like, oh, I'm going to add social recovery and stuff, but they're iterating really quickly. You'd be surprised at how much UX has improved over the past year compared to if you were just onboarding through eos a year or two ago.
00:22:41.826 - 00:22:44.898, Speaker A: What are some of your favorite apps right now that people can go check out?
00:22:45.034 - 00:23:02.258, Speaker B: I've been playing around with Brahmify finance. I've been playing around with Infinix as well. These two are both like defi type applications. And then on the creator side, I'm playing around with surreal interface. Those are the apps that have a really good onboarding experience that I've seen.
00:23:02.394 - 00:23:05.794, Speaker A: Love it. I've been having a lot of fun in the Farcaster ecosystem in general.
00:23:05.882 - 00:23:06.250, Speaker B: Oh, yeah.
00:23:06.290 - 00:23:49.942, Speaker A: Things like Moshe Cam receipts. There's honestly so many in the farcaster ecosystem now that are just so much fun and so easy to use. It allows you to form community around things that are not focused on crypto, like with crypto friends, but you're doing other things, like you're tracking your steps, sharing photos in the kind of vintage Polaroid, fashion on chain, things like that. Fun things that don't have to do with crypto. And I think that's a lot of what we need more of in the future in order to get more people in the space is like, have more fun things for them to do. Like when people go on TikTok, like, they're not just viewing content about TikTok, you know, like, yeah, it's content about everything. There's dancing.
00:23:49.942 - 00:24:09.264, Speaker A: There's like, any niche that you can think of. Like, you can find content about that on TikTok. And I think that's what we're going to need on these web3 apps as well in order to get more mainstream adoption. Well, thank you. Thank you so much for joining us. It's so good to have you back. We'll have to get you back on, and you'll just have to be like a recurring guest.
00:24:09.264 - 00:24:15.960, Speaker A: But thank you so much for taking the time, and thank you, everybody, for tuning in. And we'll be back again next week with another episode of Rehash.
