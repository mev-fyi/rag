00:00:00.170 - 00:00:07.802, Speaker A: Over 2024 will make significant steps in decentralizing the sequencer and the proofer.
00:00:07.946 - 00:00:12.670, Speaker B: Rename the tagline Starkware Quantum proof. That's all? That's all you need?
00:00:12.820 - 00:00:26.790, Speaker A: Well, we use the word quantum here and there quite a lot. So I'm pretty confident that during 2024 on Starknet, we will see capacity for 1000 to 2000 TPS.
00:00:28.730 - 00:01:04.698, Speaker B: Hey, guys. Welcome back to beneath the layers by offchain Labs. I'm your host, Hunter, and today we'll be speaking with Ellie Ben Sassen, co founder and president at Starkware. This is going to be a very exciting episode. Today we actually speak about cryptography's impact in the real world, how Starkware plans on scaling with ZK, as well as technically validity proofs, and of course, where decentralization of that tech fits in to the whole kind of grand scheme of things. But that being said, like I said, very interesting conversation. It's a very technical one, too, so definitely bear with me if you're not the most technical person, but it definitely is eye opening.
00:01:04.698 - 00:01:22.294, Speaker B: He's great at explaining things, and we did end up having a very thoughtful conversation around cryptography, privacy, and just scaling, just generally speaking. So that being said, hope you guys enjoy it. Stay tuned. All right, Ellie, what's going on? How are we doing? Pretty good.
00:01:22.332 - 00:01:24.390, Speaker A: How are you, Hunter? Great to be here.
00:01:24.540 - 00:01:27.654, Speaker B: Doing great. Yes, of course. Thank you so much for coming on.
00:01:27.772 - 00:01:29.350, Speaker A: Thanks for having me on.
00:01:29.500 - 00:02:06.580, Speaker B: Oh, yeah. We're going to talk about a ton of good stuff today. I'll try to keep up, of course, but we'll see. As someone who does mainly community stuff, I have a little bit of a background in engineering from my school's past, but nothing related to cryptography, I do want to jump into this one a little differently than most. As someone who big part of your life has been studying cryptography and all things related to kind of security and comsi. Why should the everyday person care about cryptography in your mind?
00:02:11.610 - 00:03:04.550, Speaker A: That's a really good question. Cryptography is what allows you to attain on the digital. In the digital world. It allows you things like privacy, integrity, which are needed for things like freedom and for reputation and basing social interactions. So if you go online, it's like really important that you have these things. So think of it as a lot of math in the service of some basic human needs, in the service of human dignity.
00:03:06.490 - 00:03:43.102, Speaker B: Yeah, I feel like it almost kind of is the kind of thing, I guess that translates to a lot of the, like you were saying, like the real world things that we use. Correct. Me if I'm wrong, but I think, at least for me, maybe one place where I might have saw it failing, but I'm not sure was I was using this kind of password manager at some point. And I think that password manager happened to get breached, the data was breached. And I'm like, okay, I thought this was supposed to be, like, safe, where I'm supposed to store all my data. Now, do you think that's kind of a form of that? Kind of cryptography being a kind of key component of helping secure these systems? Or is that kind of just hourly?
00:03:43.246 - 00:04:20.430, Speaker A: Yeah, it's about your human dignity, your privacy, your basic rights when you go online. And today, so much of what we care about is online that we need these things in order to protect us and allow us to interact online safely. Yeah. So, like, if your password manager gets hacked, and then people can compromise your privacy and know things about you that violate your human dignity, and we don't want that. Cryptography is what prevents.
00:04:22.290 - 00:04:39.170, Speaker B: Nowadays I get emails from wendy's telling me that people are trying to reset my password ever since that day. What got you interested into cryptography then? Was it that notion of kind of protecting people's individual kind of privacy rights? Or is it related?
00:04:39.250 - 00:05:27.650, Speaker A: Anyway, no, completely from left field. I was interested in math, in theoretical computer science, in something called computational complexity. And the reason I was interested in that was mostly due to my human curiosity and just. It's really beautiful. And I started working on things that are not even really defined as cryptography in the world I was operating in. Again, they were defined as something slightly different. But then at some point, this was roughly a decade ago, well, first I started dabbling in implementing some of the protocols that I invented, which was a very weird notion for a theoretician to do.
00:05:27.650 - 00:05:48.540, Speaker A: And to this day, I don't exactly know why I did it. It wasn't that I thought that this would have any practical application. I think it was just I wanted to do more stuff or new stuff or practical stuff. And then at some point, it turned out that this practical stuff is actually important in the context of blockchains. So I went there.
00:05:49.790 - 00:06:09.250, Speaker B: Interesting. And I took a couple of math classes myself. So when you're saying, like, you're kind of implementing these things, are we talking about, for example, there's like, lagrange theorem, for example, you're out here making theorems, you're kind of like making these new types of, I don't know, I guess like mathematical proofs or. Are we talking about something else?
00:06:09.400 - 00:06:19.598, Speaker A: Well, back in the day, I was in the business of writing definitions, claims, lemmas, theorems, conjectures, and proving, well, the theorems and lemmas.
00:06:19.694 - 00:06:19.954, Speaker B: Yeah.
00:06:19.992 - 00:06:27.942, Speaker A: So it was like, very mathy. Yeah, I did that for, I guess, a decade and a half, something like that.
00:06:27.996 - 00:06:28.406, Speaker B: Wow.
00:06:28.508 - 00:06:29.580, Speaker A: Yeah, definitely.
00:06:29.950 - 00:06:39.354, Speaker B: Wow, look at that. What was the transition like then? Going from, like, a full time professor into crypto then, as, like, an entrepreneur, would you say?
00:06:39.552 - 00:07:32.074, Speaker A: It was very natural and gradual and a lot of fun. I enjoyed my theoretician days a lot, but I also enjoyed the transition period, and I enjoy what I'm doing now. It's very stimulating. So in the beginning, I wrote a bunch of papers, and then some of those papers started dealing with more practical stuff. So one important one was the snarks for c paper that talked about implementing a compiler from c into snarks. And then based on that, we did the zero cash paper, which said, oh, you can do it. Not just for any arbitrary seed programs, you can actually do it for bringing privacy onto bitcoin.
00:07:32.074 - 00:07:48.530, Speaker A: That was how it was crafted. And then that led to Zcash being founded. So I watched it a bit from the side and kept on doing math. And slowly, by slowly, turned into an entrepreneur, a crypto entrepreneur.
00:07:48.950 - 00:08:29.806, Speaker B: It's like a love story, but built on math. I love it. I have to ask you, too, especially about Zcash. I think for a lot of people maybe that were involved in crypto back in, like, I want to say, 2017, 2018, Zcash was definitely one of the bigger talks of the town, especially because I feel like back then, there was a lot more of a focus on, or a lot more of, I guess, an alignment of crypto and privacy. It was almost kind of a given, like, hey, one of these private privacy based blockchains is going to be kind of the biggest thing, because that's what crypto brings. But it feels like it's kind of like the narrative has shifted a little bit since then. What are your thoughts on that?
00:08:29.988 - 00:09:31.582, Speaker A: Well, it will come back, but the big challenge with privacy is in the UX or on the UX front, meaning you have to pay so much in terms of ux, I'm not talking about dollar cost. It's very cumbersome to work with privacy technology for basic transactions, and also even more so for complicated, smart contract. It's a very challenging problem. And then this difficulty is manifested in the user experience. And then you, as a user, have to ask yourself, okay, I want shit done now. Yeah. If I really care about privacy, it's going to be ten clicks and downloading software and doing a whole bunch of stuff and getting funds from my credit card onto whatever platform it is in this way is really cumbersome.
00:09:31.582 - 00:10:14.266, Speaker A: Or you could just, with a single press of a button, buy your NFT or do a swap or something. And this is still the situation today. So I think privacy will come back, but it will come back a little bit like the way it entered the web two space. So at some point, protocols said this is a feature that users must have and we will make it seamless to them to use. So we're talking right now over something that is SSL secured, but we didn't have to click any button that comes out of the box. So at some point, much later, it will be a few years from now, all major protocols are going to say, okay, we figured it out. Here's something.
00:10:14.266 - 00:10:19.010, Speaker A: You don't need to do anything about it. You'll get the SSL version of blockchain.
00:10:20.630 - 00:11:05.934, Speaker B: That's a really good point, actually. And it's funny because I'm almost kind of torn. It's one of those things where it's like, okay, like you just said, user does not care about it. At the end of the day, from my perspective, I wouldn't even know, right, if it'ssl secured or not. But companies, I think whether they were mandated to or not, said, hey, there may be private or kind of confidential information being passed. So we're going to do this by default. But I think with crypto, it feels like, I think the nature of it is with these public blockchains, there doesn't feel like a need to do that because the expectation is that all this stuff is public already, right? I don't know.
00:11:06.132 - 00:11:52.334, Speaker A: Well, all the stuff is public, but you don't really have an alternative. And it goes hand in hand with the fact that for your serious business dealings, if you're a company, you're not going to use blockchain. If you think about Boeing or Airbus or some big enterprise today, it just can't use blockchain because of these things. So if it would use or allow it, it would go through some other third party and get some sort of obfuscation. And that's the way it's solved today. But at some point, a lot of businesses, small and large, are going to come in and they're going to say it's not fine, that just chain analysis can learn everything about our business. And if our competitors want to, so can they.
00:11:52.334 - 00:11:55.460, Speaker A: So we'll get there, but it will take some time.
00:11:56.470 - 00:12:14.840, Speaker B: Do you think it's too early to kind of point out a particular kind of technology in this case, maybe like Monero would have been, I think the other alternative back then, ring signatures and all that. Do you think this is too early to pick one privacy over another, or is it kind of the same?
00:12:19.230 - 00:13:23.420, Speaker A: I think it would still be. Well, it would either be full blown ZK. I'm talking about privacy, or one level above, which is something like MPC, which is secure multiparty computation or fully homomorphic encryption, probably. I would still vote it would be ZK just because it's simpler and it covers a lot of use cases. There are some things that you can only do properly in a privacy preserving, decentralized way with things like MPC, but that's going to come much later and it limits your design space and ux even more so probably ZK. Yeah, I don't think ring signatures, just ZK by now is so well developed that I wouldn't go for something lesser that has only very limited functionality like ring signatures or accumulators or stuff like that. There's no reason for that.
00:13:23.950 - 00:13:44.114, Speaker B: Totally. Yeah. No, I'm definitely looking forward to the proliferation of more kind of like ZK focused roll ups or chains. Honestly, I do think that thing with tornado cash and kind of the sanctions, I think that, I think turned a lot of people off, unfortunately, to building some of that stuff in the open. Yeah.
00:13:44.152 - 00:14:36.286, Speaker A: Even though, again, sure, that gave sort of a bit of a backlash, but even before that, right between the regulatory constraints and the just very tough ux problem, I would say it's 90% because it wasn't catching on. Even before the tornado cash sanctioning by OFAC, it was already this sort of niche thing that didn't have much traction before that. But again, it's not going anywhere. Privacy will be standard out of the box feature for many things done on blockchain in the future. And in this context, there are also these very interesting middle grounds. I'll give a few examples. Well, definitely mixers are one version of privacy.
00:14:36.286 - 00:15:25.454, Speaker A: Whenever you go to a centralized exchange. And I know of many companies and entities that the way they actually do mixing from the general public is by going through centralized exchanges. That's a very common operation. And then I would say even that probably most of the entities that are pure web, three companies and dows do that and they go through exchanges. And then the other alternative is that you have already self custodial systems that use validity proofs. For instance, the Starkx systems that give you already this sort of self custodial nature. So it's like there are aspects there of blockchain ethos, like the self custody aspect.
00:15:25.454 - 00:15:56.766, Speaker A: But then all the information that goes on is very much shielded from the general public. So the operator does know what's going on, but the operator does not have custody, and your information is shielded by virtue of the proofs from the general public. So you have some middle spot, which is a pretty nice sweet spot because you get very good ux experience and very low cost, and it does give you a modicum of privacy today.
00:15:56.948 - 00:16:27.142, Speaker B: Interesting. Would you say that maybe this applies more to the mixer kind of part? But I think the way most people think of privacy currently is kind of like this. Okay. They think of it, I think, as more of like a black and a white thing. Like, okay, this information is public, this information is private versus it being more of like a spectrum. Like, for example, like the mixing thing, that's kind of a spectrum, right? Because the more funds you have going in and out, the more private theoretically it is, right, some level.
00:16:27.196 - 00:17:25.290, Speaker A: I would say that all privacy technology is more about these grades and levels, because your single transaction can be made fully shielded in a very mathematical sense using ZK technology. But if you think of the way that chain analysis or all kinds of viewers of the whole system look at it, they will look at other stuff. They're not limited to just looking at a single transaction. They can look at shielded and transparent transactions. They can look at the anonymity set. They can look at a whole bunch of things that are external to that. So anyways, you're getting only some sort of partial privacy at any given point, just because if people trying to learn about you, there is a lot of stuff they can learn even outside of what ZK prevents or protects.
00:17:26.510 - 00:17:41.454, Speaker B: So I'd love to hear more then about kind of what you guys then are now doing at Starkware. Maybe kind of, you can maybe break down the technical stack like you mentioned Starkx as one of the products already, and then maybe mentioning what each kind of thing.
00:17:41.652 - 00:18:21.290, Speaker A: Yeah. So, okay. Because we've been talking all the time about privacy in ZK, the first thing that the listeners should acknowledge is that when almost all of the discussion today about ZK in the context of web3 is there's something a bit skewed. So people talk about, for instance, a ZK roll up. But then when they say Starknet is a ZK roll up, it's not about privacy at all. And actually, the proofs that we put there are not even ZK proofs. So there's nothing about privacy going on in the ZK rollups.
00:18:21.290 - 00:19:07.530, Speaker A: And for historical reasons, the term ZK that refers actually to privacy, was slapped on to this whole area, whereas most of the action that's going on there is not about privacy because of these big UX problems. It is all about scalability. So, from here on, I'm going to talk about validity proofs, and I'll stop using ZK proofs for the mere reason that none of the proofs that stark wears products are using today are ZK proofs. They are stark proofs. They are validity proofs. And, okay, what do they do? At the core, it's about integrity. It's about knowing that the right thing was done even when you're not watching.
00:19:07.530 - 00:20:06.314, Speaker A: So these proofs, these validity proofs, in our case, these are stark proofs. They assure you that by math, using math, you can be assured that the right thing is being done even when you're not watching. And the way it works is you use the magic of math in order to run a very efficient and succinct. Think of it as some random inspection or random auditing process that has very high mathematical guarantees that it will report if anything is amiss, even while doing it very succinctly. So, here's a way to think about it. Suppose you have some facility that is processing financial transactions, and it's doing a million of those a day, and you're saying. And it just comes at the end of the day and says, you know what? Here's the new state of accounts.
00:20:06.314 - 00:21:19.490, Speaker A: After having processed a million transactions, now, money being involved and people being people, you might worry, well, maybe someone's skimming off the top, or not reporting, misreporting, not acting with integrity. What if I could send an auditor to check a few things here and there and tell me if everything's okay? Well, if you try to do this naively, and you send an auditorium inside, you send an auditor, and she inspects a few things, ten or 20 transactions, she might not see if there is something amiss. Well, through the beauty of stark math, it turns out that for the same amount of effort, computational effort, you can send an auditor, which we call a verifier, to inspect what's been going on and come back and report with cryptographic certainty. All of the steps that have been taken during this day are fine. That's our core technology. And then it's packaged in a variety of different products that help scale blockchains.
00:21:20.390 - 00:21:29.750, Speaker B: Got you that. I guess would be kind of the different, like Starkx, Starknet. Is that kind of where those kind of come into place? Yeah, flavors. Okay.
00:21:29.820 - 00:21:36.730, Speaker A: Yeah. And maybe, you know what, I'll try to give, because I'm guessing that a lot of your listeners are familiar with optimistic roll ups, right?
00:21:36.800 - 00:21:37.082, Speaker B: Probably.
00:21:37.136 - 00:22:22.122, Speaker A: And they also use a form of proofs. So we have two different kinds of proofs that I'll talk here about. There are like the fraud proofs, which are the optimistic roll ups, and there are the validity proofs. So both of them serve the same purpose. The purpose is that of integrity, knowing that the right thing was done even when no one is watching. And the way a fraud proof works is that basically you assume that there's one party that is reporting the new state, and you assume that there's some other trusted or incentivized party that is inspecting all of the transactions. So if something is amiss, this other party would know that there is a problem, and then they would start this arbitration process of doing a binary search.
00:22:22.122 - 00:22:46.240, Speaker A: Like, basically the trusted, honest auditor knows that there is a lie, and this auditor now tries to expose the lie to the public. And validity proofs for theoretically, a similar amount of work allow the auditor to inspect stuff without actually needing to observe everything that's going on there.
00:22:47.170 - 00:23:04.360, Speaker B: Gotcha. And I think that's kind of where you get the whole, like, I think on Twitter I see it the most. It's like, okay, would you rather trust math or incentives or like math or humans or something like that? Do you think that's like, that's like an accurate thing to ask? I feel like at the end of the day, you're kind of still trusting humans to a certain extent, no matter what.
00:23:06.330 - 00:23:31.194, Speaker A: At the end of the day, there are many things you need to trust. You need to trust the stuff that you read, the chips that your computer is using, and a very large number of things, but then you abstract it away because these things, I would say, are common to different technologies. Right. So let's assume everything there is. Fine. The papers describe what you're doing. The chips are operating with integrity.
00:23:31.194 - 00:24:35.060, Speaker A: So let's assume integrity on all these other parts. And then, yeah, I would say that the big difference between optimistic roll ups and validity roll ups is the difference between assuming an economic and security model where you say, I'm going to make sure that someone's watching this facility that's producing transactions and I'm going to incentivize it so that it can run these arbitration. And that's the optimistic roll up case. And in the case of validity roll ups, the statement is, okay, whoever's running the facility, let them throw math at it, work harder and generate something that would be impossible or cryptographically impossible for them to generate if they hadn't been operating with integrity. And there's room for both, of course.
00:24:35.830 - 00:24:59.958, Speaker B: I think probably a good question to ask here then, is, like, in this case, your flavor of validity proofs, of course, as you mentioned, are stark proofs. How would that then differentiate from, I guess, other ZK proofs or other validity proofs out there? You don't mention any names, but what would be the main differentiator between Starks, I guess, and the other types of proofs? Is the question there?
00:25:00.064 - 00:25:59.786, Speaker A: Yeah. So I wrote a very long blog post three or four years ago called the cambrian explosion of cryptographic proofs. And even though things have changed a lot since then, because science progresses, it's still somewhat relevant. I mean, things change, but not that much. So by now, there's like a huge set of set of different ways to go about proofs, but the ones applied today in practice, fall into, well, they use these things called commitment schemes. And they're like three families of commitment schemes that are used in practice. One, which is what Starks use, is, well, these are called iop, or interactive oracle proof based proofs.
00:25:59.786 - 00:26:57.646, Speaker A: And most of them use something called, which, you know, back in the math days, some of the theorems there, those are exactly the theorems that I've been involved in. Yeah. And the other two families, the biggest contender that is used, uses these things called KZG commitment schemes. And a lot of the snarks out there go under that term. And the third family uses things called inner product arguments. So, like, three big families that are practically used today, and then there are many, many variants and a lot of things on them. The biggest difference between our family, the one that we stand by, and the other two is that ours is the safest and most efficient.
00:26:57.646 - 00:27:20.440, Speaker A: So safest, there's no number theoretic assumptions. The other two family have number theoretic assumptions. They're post quantum secure starks, or the fry based iops, meaning if there's a quantum computer tomorrow, it can break those other two systems. Not this one. There's no need for a trusted setup, which you do need in KZG, you do not need in the world.
00:27:22.410 - 00:27:22.774, Speaker B: Of.
00:27:22.812 - 00:28:34.514, Speaker A: The inner product arguments. And then in terms of shear efficiency, which you can think about number of computer cycles per bit that you need to commit to, they're, I'd say, between one to two orders of magnitude more efficient because they can use any arithmetic, any finite field. So now I'm throwing some math terms. But when you go to number theoretic constructions, a little bit like things like RSA, those are very slow primitives. So here's a story that maybe some of your listeners, of our listeners know when you go and start an SSL session, which you always do today when you're going on the Internet. So there's a key sharing process that uses number theoretic constructions, but it's used only for generating a key because you need this very inefficient math to do it. And once you have this key, you move to this other system that does not use number theoretic constructions, and it's way, way faster, and you do that.
00:28:34.514 - 00:29:04.780, Speaker A: So starks are very similar in the building blocks to the more efficient stuff that you do after the handshake. And both the inner product arguments and the KZG commitments are more similar to the expensive handshaking part that you don't want to do a lot of. So that's sort of the lay of the land today from a very high level view.
00:29:08.190 - 00:29:31.330, Speaker B: Do these kind of different types of cryptographic kind of proving schemes, do those have an effect, I guess, at the virtual machine level? Because I think for people who don't know, the starkware ecosystem uses Cairo versus another language like solidity, or maybe even like, how does that affect that landscape?
00:29:32.070 - 00:30:35.174, Speaker A: Okay, so that's a different area of the story, because all of these proof systems, whether they are inner product based or KZG based or fry based, they are universal, and they can prove any computation. And you can slap them on, you can use them to prove the validity of any computation in any virtual machine. So you can do it for x, 86 for risk, zero for the Java virtual machine, for the EVM. Okay, now, what's common to all of these systems that all of these virtual machines that I discuss is they're amazing virtual machines. They have a lot of languages that compile into them, and everyone loves them as programmers, but they have one disadvantage. They were never built from the ground up with proofs in mind. Do I need to prove it later on? And because of that, when it comes to proving, they incur these horrendous blow up factors that just slow things down.
00:30:35.174 - 00:31:24.422, Speaker A: So they're very convenient to write code for. But if you want to write code, then you go on and prove its integrity using a proof system. You'll be paying dearly. What happened with Cairo is that we designed from the ground up, a virtual machine whose main attribute on top of being what's called a universal machine or a Turing complete machine, is that it is extremely lean when it comes to proving stuff about it. In any proof system you would use it. So it sort of acknowledges that you're going to craft things using finite fields and polynomials and because of this and constraints defined as polynomials and because of this you get something. You get that the core machine has less than 50 constraints that define it.
00:31:24.422 - 00:32:08.200, Speaker A: Whereas if you take a x 86 or risk zero, you'll probably looking at thousands or tens of thousands of constraints just because no one thought about or no one tried to optimize for proof size. So because we wanted something that would scale best and for the longest horizon we had to build this new machine. And that's how Cairo came about. And I think we're very proud with the outcome. And this is what positions us to continue being the most scalable proving technology for years to come.
00:32:12.170 - 00:33:11.100, Speaker B: I think maybe too in the past I've been in the scaling space technically for two years now here at offchain labs. And I think it's so weird how the industry kind of shifts. Its kind of like, oh, this is what we want to see in layer two versus this is what we want to see now in layer twos. Right? I feel like back then we just wanted ETHM equivalents, but going into 2024 now, I think actually the best way for Ethereum to position itself at the layer two level is to have these different systems that differentiate itself from not only Ethereum and the other kind of generalized layer twos, but also from the other layer ones that are coming out with, I'm sure you've seen on Twitter, like this whole kind of alternate VM narrative. And it's kind of funny how you guys have been building in that for such a long time. You can correct me if I'm wrong, but I feel like you've created this almost like this very loyal cultish in a way, in a good way, like following for Cairo. Yeah.
00:33:12.430 - 00:33:45.262, Speaker A: First of all, it's a damn good programming language. I hear that developers, I'm not a developer myself and I'm of course biased. And if you're a developer, do your own research and try it out, take it for a spin. But I hear more and more the developers are saying that it is a better programming language for writing smart contracts than solidity is. I'll repeat it again, it's a better programming language for developing smart contracts than solidity is. And it's not necessarily surprising. I'm old enough to remember basic and Pascal.
00:33:45.262 - 00:34:09.906, Speaker A: They were amazing languages. But, you know, then the world evolves and people build newer languages that are just better or convenient to work in. It's not that anything was wrong with basic and Pascal. Better things came along. So in five years, there's going to be a better programming language, and solitia is already at it for eight years or so. And Cairo is better as a programming language, period. It's safer.
00:34:09.906 - 00:35:18.530, Speaker A: It's more ergonomic. Now, in addition to that, I'm pretty confident that during 2024 on Starknet, we will see capacity for 1000 to 2000 tps going on for weeks with proof being generated with very little impact on block space, on Ethereum chugging along. And I think the only place where we'll see in 2024, let's say, 2000 TPS for transfers week long, will be on Starknet, at least among the validity roll ups. I don't think this can be achieved with any EVM based chain, because just the proving technology is going to be too clogged for that. Okay, so it's harder to build something like a brand new programming language and all the tooling for it, but we did it because we need to reach really massive scale. That is something that far surpasses what you can do if you start with the EVM.
00:35:19.910 - 00:35:59.760, Speaker B: Totally. And I think it's kind of funny, because, again, obviously, this is coming from someone in the community side, but I'm kind of seeing what our engine is going through now with trying to build out stylus, kind of the ability for devs to code in rust, c, c plus plus and stuff like that, and compile it down to wasm? Because I remember talking to them about it in the beginning. Okay, why can't someone just come in and start coding in c right away? And I guess as someone on the outside, you don't really think about all the dependencies and the tooling that you need, actually, to actually onboard devs and have them start to work with. Mean, like, you guys have been doing that for the past two years, I guess, with Cairo, or probably more than two years.
00:36:00.130 - 00:36:43.520, Speaker A: Yeah, well, onboarding devs, external devs for two years are a bit less. Working with Cairo, a little bit longer. But first, it was internally, so we didn't have to build too many external tooling devs. But, yeah, this is picking up speed, and certainly it's the hard part, right, getting all of the tooling and the environments and things that can make devs just very efficient at their work. This is the part that's taking considerable time and requires a very large community. I'm happy that we have a very large and excellent community which hopefully will expand a bit more as time goes by.
00:36:46.210 - 00:37:12.040, Speaker B: So what are your thoughts then on. You mentioned the cambrian explosion of proofs. I think another topic of conversation has been the cambrian explosion of roll ups. Kind of different roll up stacks kind of emerging now, and people more or less kind of just forking a stack and building their own thing. Do you think there'll be too many chains? Do you think we should be scaling at one layer versus making multiple? What are your thoughts on that?
00:37:12.730 - 00:37:59.734, Speaker A: I don't know. I think the market will decide. A few years ago the question was, are there too many coins? I don't even know the answer to that. The markets decide, are there too many companies, are there too many countries? Are there too many? That's the nice thing about free markets, that people will build stuff and then the markets will decide. Let's put it this way, I don't feel a need to make a prediction on whether there'll be a lot or few. I could argue both ways, I guess, if I have to. Probably these exponential decrease or long tail models explain most of what goes on.
00:37:59.734 - 00:38:10.140, Speaker A: So there's probably going to be a very large number, but a lot of the action or value or whatnot is going to be on the first few, and that's fine.
00:38:11.710 - 00:38:53.080, Speaker B: Totally. It's a good point. I think to me, what I always try to come back to is, yes, we're building these really cool systems. Like you said, there's tons of companies now, tons of teams doing it. The decentralization of it, and the ability for the average consumer to kind of contribute to proving some of these systems, or contributing in the system itself, I think is what I value a lot. The fact that I can run an Ethereum validator and essentially be part of the Ethereum network to me is the coolest thing in the world in my opinion, especially after the proof of stake stuff. Thank you.
00:38:53.080 - 00:39:02.220, Speaker B: Right, so where are you guys currently at with the decentralization, I guess, of starknet and anything that relates to it?
00:39:06.830 - 00:40:28.182, Speaker A: I think that over 2024 we'll make significant steps in decentralizing the sequencer and the prover in building things like a fee market that allows to deal with congestion and then a mem pool which allows goes along with the fee market and prioritizing, and then onto peer to peer networks and then sequencers and a consensus protocol. That's where we're heading. We want to have the sequence of steps we decided on a few years ago was first we need functionality, which we've achieved with Cairo one. Then we need to focus on performance, which is what we're currently doing. I mentioned my hope to reach 1000 tps or more consistently for a week without Ethereum noticing. By the way, these levels, well, not 1000 tps, but drastically large levels of TPS consistently over long periods of time, is something we've been already doing for many years on our Starkx systems. We've been minting within a single block of Ethereum, upwards of 600,000 nfts for immutable many years ago.
00:40:28.182 - 00:41:12.098, Speaker A: We've been doing this, millions and millions of nfts minted over a single block. So this very, very massive scale is the next frontier, which will come also with reduced costs for users. And then the next phase is going to be decentralizing the sequencer because, well, and the sequencer makes sense. You first need the developers to start building for that. You need the functionality, then you need the performance for users to use it. And also you need the system to be performant enough before you start building its decentralized peer to peer network structure. So that will come over 2024.
00:41:12.104 - 00:41:48.240, Speaker B: And do you think there's going to be a point where I'll be able to. Probably not the same size as my raspberry PI over here? It's not a raspberry PI, it's like an insulin. I think they think there'll be a point where the average user can kind of come in and whether it be for snark and other ZK systems, actually kind of run validity proofs, generate validity proofs on their computers, whether it be the gpu or something like that. I think that's like the one thing that I think currently you need a relatively beefy computer to do that. Right.
00:41:49.490 - 00:42:43.950, Speaker A: Well, first of all, there are two parts. There's the verifying part. How do I know that the right thing is being done? And this you can already do today on a very small and slow computer, you can verify the proof that all transactions in bitcoin and ethereum have operated, have been performed with integrity, all of them. So this can already be done on the verifier level, which is the important thing for users. It's a little bit like, how do I know that Ethereum is operating with integrity? So the start analog of that is already very easy to run on any computer. Now, regarding the proving, well here it's really about scale. So you can download the stone prover, compile it on your computer, any laptop that exists today, and you can generate reasonable proofs for a number of steps of computation.
00:42:43.950 - 00:43:59.210, Speaker A: The reason you want to use starks is you want to reach massive scale, right? You want each block to contain whatever, a million transactions or so on. So for instance, right now, each leaf of our starknet system proves, basically, and we use recursion proves 20 million Cairo steps, which is a huge number of steps. Now, you want to maximize the number of steps that you allow per block. And we do this by using not the biggest of the biggest machines, we have recursion for breaking things up, but you want to use a pretty strong machine because that's how you'll get better scale. So just to answer your question, you can today run a stark prover on your laptop and get meaningful results if you want to maximize scale, which is also to maximize economic efficiency and social welfare and all of the good things that you want to optimize. You want the end users to run stark verifiers, which they can do today for any amount of computation. And you want the provers to be on pretty big machines, but that's fine because they can't cheat these provers.
00:44:01.150 - 00:44:22.480, Speaker B: Got you. No, that makes sense. Yeah. I think that role in and of itself, being able to kind of verify what's actually being created at the user level is so important. I mean, again, I think most people will not, the average user won't care. They'll fire up a wallet and they'll just start transacting. But for the nerds out there like myself, I love that.
00:44:23.090 - 00:44:39.640, Speaker A: Well, it's the defining property of a blockchain really about. It's the ability of you as an end users on very simple means to verify the integrity of the whole system with very, very few trust assumptions. This is what makes blockchains great.
00:44:42.170 - 00:44:54.566, Speaker B: And I have to ask too, it's not binding. By the way, is there a world where maybe off chain labs, starkware, some sort of collaboration of technology, be a hybrid of proofs or who knows?
00:44:54.758 - 00:45:33.330, Speaker A: I hope so. Look, I have, and our team has very high respect for Ed and Steven and Harry and the whole team. We also get along very know. Here's the are. I think the world of roll ups is divided like this. There are the cool cats that claim to be loved by Ethereum elites, so they get slack. No one looks at their minor or major faults.
00:45:33.330 - 00:45:56.798, Speaker A: And I'm talking about optimism and ZK sync. And then there are the nerdy smart guys who are not as cool but do the hard work. And I think arbitrum and Starknet fit that profile. So it is what it is. So we get along pretty well.
00:45:56.884 - 00:45:57.086, Speaker B: Yeah.
00:45:57.108 - 00:45:59.200, Speaker A: And I do hope we'll collaborate more.
00:45:59.650 - 00:46:39.980, Speaker B: Happy to be a nerd. That's awesome. So then maybe kind of jumping into the little more outside of the stark work kind of, kind of thing, do you think that there's a way? Maybe it's not at the l two level. Maybe it's actually an upgrade that has to happen on Ethereum itself, that we can solve state growth, because I feel like that's one of those things that we're not really addressing as an issue because it doesn't feel like it's an immediate thing that we'll feel, but it's like the long term thing of like, hey, I won't be able to run a computer with multiple terabytes of storage at some point, but what do you think?
00:46:41.330 - 00:47:23.142, Speaker A: I think it's all about pricing it in the right way. Well, there's a part of it that is like, do we want or need all the videos of cats to be on a blockchain? Well, if we do, then we need to pay for that, and that's going to be costly. Probably we don't. Maybe we need the video of the cat. That is very important to us. I don't know what it is. So maybe that needs to be on a blockchain, but it's about cost and pricing.
00:47:23.142 - 00:47:54.420, Speaker A: If people do need jpegs and videos and things to be actually on a blockchain, well, you're going to have tens or hundreds of thousands of computers that need to store it, and then someone needs to pay for that. I think it's an economic question of how much data do you need blockchains to keep and if the world is willing to pay for that. So it's mostly an economic question.
00:47:55.670 - 00:48:14.278, Speaker B: I think that was actually the last I had heard about maybe like the conversations around that where it's like. Or maybe it's a little different. It was like, if x data hasn't been accessed in the last year or so, then that's kind of parsed out and you need to pay a lot more to get it. Is that kind of same thing we're.
00:48:14.294 - 00:49:08.140, Speaker A: Talking about in this space of economic solutions to it? This is something like a rental model, right? It says if you don't pay your rent, then it's either put in storage, like one of these long term storage things that are more costly and you need to pay more for it. That's an option of addressing this thing. But you see, it does involve some economic model for what are people willing to pay and what is a good way to pay those who are actually storing it? Because you need also to pay. If you put it on long term storage, but then you don't compensate the long term storage facilities, then they will just shut down and you won't find it anymore. Somehow the economics of it have to be figured out, like, what is the world willing to pay?
00:49:09.230 - 00:49:16.560, Speaker B: Interesting. Yeah, I think that's definitely. I feel like there's going to be EIP 48 44 first, and that's coming out, and then that'll probably.
00:49:17.250 - 00:50:00.220, Speaker A: But this problem is going to accompany us for a while. You charge too much and then the system gets stalled. You charge too little, and then you have a DOS problem, right? Because people just dump a whole bunch of data on the chain. And the issue is that there's something nonlinear about it, so each byte by itself doesn't necessarily hurt so much, but it's the accumulation of those and the fact that you also make a payment once, but now the burden of storing it is right now till infinity and taken by all nodes that are in the network. So these things have to be solved in some way.
00:50:03.490 - 00:50:22.610, Speaker B: I think perfect points to move on to a little more to end off maybe a little bit. On the cryptographic note, since that's where we started, I wanted to ask you personally, what is the coolest breakthrough that you've seen in cryptography thus far, in or outside of Crypto? It doesn't have to be related.
00:50:24.630 - 00:51:25.590, Speaker A: Well, I still remember when I was an undergraduate and I heard for the very first time this lecture, I had the privilege of sitting in a class by the great Rabin, you know, turing award winner, and done a bunch of stuff. And he taught us the RSA algorithm. The whole notion of public key cryptography, how Alice and Bob sitting in two different places, can nevertheless, even though Eve is sitting in between and listening to all their messages, how they can still communicate in private. It's just such a beautiful, mind blowing concept that this is possible. So to me, that's like, it's a relatively simple protocol. There are things that are much more elaborate, but the fact that you can actually explain it or versions of it to high school students adds to its beauty.
00:51:26.810 - 00:51:51.840, Speaker B: Totally. I think back in buzing content creation before working here, I think I did make a video explaining the whole Alice and Bob situation. And the cool part is, obviously, I have to read about it before explaining it. And I remember reading about it. I'm like, this is actually amazing. It's like you say, it's math, but it works in a very magical way somehow. Yeah.
00:51:52.930 - 00:52:19.160, Speaker A: To me, math is not the high school stuff where there's a lot of numbers involved, and you have to run these calculations time and again. And it's really the sort of eureka thing, the elegance, the. Aha. Wow. This is so unexpected. And here's something really strange that's happening that I wouldn't believe could happen. That is the beauty of it in my mind.
00:52:20.010 - 00:52:26.140, Speaker B: I love nightmares trying to do partial differential equations in a school.
00:52:26.910 - 00:52:31.530, Speaker A: I never took a course in that. So the horror.
00:52:33.550 - 00:52:41.498, Speaker B: You mentioned it earlier as well in the show, but quantum computers, how close do you think that is to becoming a reality?
00:52:41.674 - 00:53:07.400, Speaker A: I don't know. I hope that they're very close because starks are post quantum secure. So it would be really great for starkware and starknet if post quantum computers at scale appear tomorrow, because I mentioned, like, three different families. So the other two families just completely go away. They are broken by quantum computers. So I hope that they emerge tomorrow. But I don't know.
00:53:08.430 - 00:53:24.960, Speaker B: Yeah, it's funny because it's one of those things that if you ask anyone who's into crypto, I think the consensus of the average, I'm sure, crypto user is like, okay, once that comes out, crypto is dead. Every blockchain ceases to function. Do you think that's true?
00:53:25.330 - 00:53:45.182, Speaker A: That's it. Well, there's a lot of modifications needed, but you can do pretty much almost everything with Starks. You could have signatures with Starks, you could have everything that you need. You need to replace things. But it's fine. It would be very good, actually.
00:53:45.256 - 00:53:55.320, Speaker B: Very good, because that would also technically have an impact on things outside of crypto, too. Right. That would impact, of course, everything online. Yeah.
00:53:55.770 - 00:54:17.790, Speaker A: A lot of the core technology that runs the Internet right now would have to move to other technologies. You need to have new key sharing handshake protocols. But there are some candidates based on lattices and other things. So doable.
00:54:18.610 - 00:54:25.730, Speaker B: You guys should just rename the tagline Starkware. Quantum proof. That's all? That's all you need.
00:54:25.880 - 00:54:32.130, Speaker A: Well, we use the word quantum here and there. Quite a, you know, quantum leap. All kinds.
00:54:32.710 - 00:54:45.154, Speaker B: Yeah, look at that. Awesome. Well, Ellie, I really appreciate you for coming on today. It's been a pleasure having you on, and, yeah, look forward to potentially collabing in the future. Likewise.
00:54:45.202 - 00:54:45.526, Speaker A: Thank you.
00:54:45.548 - 00:55:24.398, Speaker B: Hunter, thank you for watching this week's episode of beneath the layers. If you're interested in listening to more, make sure to check us out on YouTube or on any of the other major podcasting platforms. Also, we're hiring, so if you're interested in working on cutting edge tech scaling, ethereum, etc. Make sure to apply at forward slash offchainlabs. Additionally, a disclaimer, nothing in this podcast should be taken or understood as financial advice of any kind, and all opinions expressed by the host, myself, or the guests are solely their opinions. My opinions and do not reflect the opinions of offchain labs as a company. All that being said, thank you for watching.
00:55:24.398 - 00:55:26.770, Speaker B: See you you guys in the next one. Bye.
