00:00:00.330 - 00:00:01.630, Speaker A: You. Okay.
00:00:01.700 - 00:00:12.926, Speaker B: Hello and welcome, everyone. So today we've got Tim, who's going to talk about EIP 1559 and other things. So, Tim, do you want to introduce yourself as a starting point?
00:00:13.108 - 00:00:55.406, Speaker A: Sure. So hi, everyone. I'm a product manager here at Pegasus. Most of my work focuses on Hyperledger Basu, which is our Ethereum One client, and Aleve, that most of my time is spent on Mainnet. So part of Mainnet is obviously the EIP process, and EIP 1559 is an EIP that the Besu team has been leading the implementation for. We did write this EP. It was originally by Vitalik, and then some other people took the torch and pushed it forward, and then some other people took the torch from them, and then it had kind of stalled, so we wanted to push it back forward.
00:00:55.406 - 00:01:20.710, Speaker A: And that's what we're doing now. And yeah, as you may have noticed, I said I'm a product manager, not an engineer. So this presentation will be probably a bit more high level than some of the other engineering presentations, but if you have any questions, I'll try to answer them to the best of my ability, and if I can't, we can definitely get them to the implementers and get back to you afterwards.
00:01:22.970 - 00:01:26.390, Speaker B: Sounds fantastic. All right, well, why don't you share your slides?
00:01:27.710 - 00:01:56.900, Speaker A: Great. And I won't be able to see you all once I share, so hopefully this works. Actually, give me a second share screen. Okay. Can people see this? Yes. Great. Okay, so at a high level, here's what we're going to go over today.
00:01:56.900 - 00:02:56.580, Speaker A: First things first, I just wanted to highlight what are the actual problems that EIP 1559 is trying to solve. So we can start from there and also kind of highlight some misconceptions about it and just make clear what is out of scope and what are things that won't be solved by EIP 1559. Then I'll give an overview of what EIP 1559 actually is, and I think there's three core parts to it, so we'll dive a little deep into each of them. After that, we'll kind of highlight what are the known issues with EIP 1559. So even though it's a proposal that has a lot of interest by the community, it's definitely not 100% resolved in terms of issues. And that'll highlight some of the work we're doing right now. And then finally, to address some of these issues, there's another proposal that's been brought forward that's called Escalator Fees now, so that'll be kind of a nice introduction into that.
00:02:56.580 - 00:04:01.900, Speaker A: And once that's done, we can have some Q A. There's also a couple spots in the presentation that I've left for Q A, and if you have anything that's just unclear or that you'd want me to repeat or explain a bit better, feel free to jump in throughout. So, quick disclaimer, I guess, before we get started, all of this is still under active development, so all of the numbers and parameters I use can and maybe and likely will change. So don't take them for granted, but they're mostly there to try and explain things at a conceptual level. If you are interested in kind of digging further, the best place to start is obviously the original EEP, which I've linked here. The best place to have kind of the day to day conversation is the Discord channel around EIP 1559, which I've also linked. And finally on ETH Magicians, there's a lot of kind of these longer drawn out threads about this specific which are also quite interesting if you want to understand the inner workings of it.
00:04:01.900 - 00:05:08.154, Speaker A: So what is EIP 1559 trying to fix? There's really two kind of disjoint problems that it's addressing by a single mechanism and that's the fact that it solves for those two issues is why it's very popular because it really appeals to a lot of different stakeholders in the community. So first, the main core problem that it's solving is the fee market stability. And the gist of this is right now, how much you should pay for a transaction in terms of gas is not something that's controlled by the protocol. So there's no right way to know what's the right amount of gas you should put in a transaction, how much you should pay. And we see this a lot in practice on the network, people overpay for the transactions oftentimes because they want to be included very quickly. And you can look within a block and sometimes see a five to ten x difference in gas price within a single block or oftentimes between two blocks, one beside the other. So there's a very short gap.
00:05:08.154 - 00:06:13.220, Speaker A: But there can be a huge difference in gas fees by transaction. And if you think about it at kind of a higher level, there's no real reasons why within a block transactions should have such a high variance in terms of how much they've paid because they got included at the same time and got processed basically at the same time. And what we do have to estimate how much you should pay in gas are these out of protocol estimators? The most popular one is ETH gas station. But then what happens is people look at those, they look at the highest price and they bid even more than that, which kind of creates vicious circle raising the gas prices. The other thing that 1559 tries to fix is the idea of economic enshrinement of the ethereum, ether token. And one way to think about this is that right now, as people use ethereum, there's not really a good way for that to translate into value capture for the ethereum network. So there's no real correlation between how many transactions there are on mainnet and the ethereum network value.
00:06:13.220 - 00:07:30.940, Speaker A: And this has been made even worse because of the introduction of stablecoins on the network. So there's many days where the volume transacted in stablecoins is actually higher than the volume transacted of ether. And before you had Stablecoins, if you wanted to use an application on ethereum, you actually had to buy ether which created demand for the token and then you can use your application. But now if you look at stablecoins like, say, USDC, which Coinbase manages, you can just go directly to Coinbase, buy from your credit card to the Stablecoin and then use that Stablecoin. If you never kind of actually use the ether token aside from kind of the small gas fees that you pay and with proof of stake coming having kind of these positive feedback loops between the usage of the network and the price really helps with network security because the network will be kind of secured by actual tokens on the network. So even though 1559 is a proposal for ETH one, getting to a spot where there is like a social consensus around trying to link the value of the Ether token to the usage on the network is a really good precedent to have for when we move to proof of stake. So these are really the two big issues that 1559 is trying to address.
00:07:30.940 - 00:08:17.846, Speaker A: And related to that, there's two big misconceptions. So the two things that we're not trying to fix with EIP 1559 that a lot of times people think 1559 will fix are high gas prices and the inflationary supply of eat. So on the first side, there's this common conception that once we have 1559, gas prices will go down. And that's not really true. So as long as the demand for gas is kind of bigger than the supply, the gas price will continue to rise. And the only real way to change that is by having more supply or less demand. And on the less demand side, you're basically saying less people should use ethereum.
00:08:17.846 - 00:08:51.558, Speaker A: That's not great. And on the more supply side, you have things like E two, like side chains, roll ups and whatnot. And so 1559 doesn't really make a huge difference here. What it does do is reduce overpaying for gas. So it'll make kind of the intra gas prices within a block more consistent. So that means that the gas price can be very high, but you know that you're paying the market rate and you're not overpaying on it. And at the margin, if there's large spikes of demands, it'll help kind of boost the price up and back down quicker than our current model.
00:08:51.558 - 00:09:55.500, Speaker A: But if you assume that there's kind of sustained demand for people to use ethereum more than there is supply, it's not going to have a major impact on the gas price. And then the other misconception is that because in EIP 1559 part of the transaction fee is burnt, which we'll get to in more detail later, people take down a lead to negative issuance of ether so that you go from an inflationary supply to a deflationary supply. And that is only true in cases where your block reward is smaller than your transaction fees within a block. And historically, it's been usually on the order of like ten to 100 times more rewards in the block rewards than the transaction fees. Recently with DFI, there's been a couple of days where transaction fees have actually exceeded block rewards. But until that's the case consistently, you don't get to a spot where the supply is deflating. So hopefully that clears these misconceptions up.
00:09:55.500 - 00:10:37.970, Speaker A: So now we've got to set the stage. What's the problem we're trying to solve with 1559? What are we not trying to solve? So this is my kind of high level explainer of what 1559 actually is. And there's really three main points here. The first is you go from having blocks that have a fixed size that the protocol fills. So right now we have 12.5 million gas blocks on main net, which are 99% of the time full, to instead having blocks that have a variable size that can go up to twice as much as our current size. So that would be 25 million gas.
00:10:37.970 - 00:11:26.920, Speaker A: And we aim to keep those blocks 50% full. So most of the times you want these blocks, which could handle 25 million gas, to be around 12.5 million. And then you require that every transaction pay a protocol defined fee instead of a user defined transaction fee. This protocol defined fee is called the base fee, which is the minimum that a transaction will have to pay in a block to be processed. So if you have a transaction less than that, you make it part of the consensus rules that it can't be processed. And then alongside with this base fee, there's an optional tip that can go to the miner because, and this is the third point, you burn the base fee part of the transaction fee, otherwise miners could collude to keep it high.
00:11:26.920 - 00:12:24.038, Speaker A: So this is kind of a mouthful, but again, to just summarize that you have these variable blocks which have a base fee associated with them, and this is the minimum that transactions have to pay to be included. And you get the predictability of that information being part of the protocol. So you can know what the base fee in the current block actually is, rather than to try and estimate what's the average gas price that people have paid to get included in the block. And then if you didn't burn the base fee, the problem that you have is that miners could do a whole bunch of tricks to just keep it constantly high and get it for themselves. But if you burn this fee, miners really have no incentive to keep it high or low. What they're optimizing for is to then have just high transaction fees and high usage on the network. And how this all gets tied together is that if there's more usage on the network so if you go above 50% of your blocks that are filled you start raising your base fee.
00:12:24.038 - 00:13:00.470, Speaker A: And the maximum that you can raise it is right now 12.5% per block. So that means if you have a block with 25 million gas on the next block, the base fee is up 12.5% higher than it was and so on and so forth. And similarly, as you have less and less demand on the network so if blocks are less than 50% filled you start lowering the base fee up to, again, a maximum of 12.5% per block. So you have this mechanism which adjusts how much it costs to process a transaction based on how much demand there is for block space on the network.
00:13:00.470 - 00:13:57.270, Speaker A: And that's really kind of the gist of EIP 1559 is you're trading off the volatility that we currently have on the transaction fee side for volatility on the block size side. And that's really kind of the high level conceptual way to think about it. So if we look in kind of these concepts in a bit more detail first, the variable size blocks. So at a high level, you'd go from 12 million to 25 million gas. Why couldn't we just do this all the time and double the capacity on Ethereum? The reason is that nodes can't really process that big blocks all the time. And why we can do it on 1559 is that we know that these blocks will only be full in the very worst case for a short period of time. So with the rate at which the base fee increases, if it's 12.5%,
00:13:57.270 - 00:14:57.658, Speaker A: it means that in 20 blocks your gas prices have gone up ten X. In 40 blocks, they've gone up 100 X and in 60 blocks they've gone up 1000 X. To give you an idea of just gas prices on the network, 100 X is probably how much average gas prices have grown in the history of Ethereum. And 1000 X would be kind of the highest surges of usage we've seen historically. So that means at the very worst you have kind of this 15 minutes of congestion on the network and then as the base fee rises ten hundred X thousand X, obviously it'll start pricing users out who don't want their transaction to be processed at that price. That means that at some point your blocks stop being full and the base fee drops again until blocks are roughly 50% full. And what that means is that during large demand spikes you get fees that go way up.
00:14:57.658 - 00:15:52.630, Speaker A: You get much like a sort of burst of extra capacity on the network to process those transactions and then you get back to having these lower fees once these high paying transactions have been processed. The second big change that this e brings is changes to how transaction and the block format are done on Ethereum. And we've kind of hinted at this already below a high level. How it would work is that this base fee that we keep talking about will be added to the block headers. So you can just query a block header and know what the base fee is for that block and historically what the base fee was. And then gas premium and fee caps are the two fields that you add for the transaction. Fee cap represents the maximum that a sender is willing to pay and gas premium represents a tip for the miner that you pay above the base fee.
00:15:52.630 - 00:16:50.474, Speaker A: So the way this works is that you specify your fee cap so your maximum amount, your gas premium, how much you'd like to give to the miner and then you'll pay the base fee plus the gas premium and get refunded the fee cap. So that means it gives you kind of some wiggle room if the base fee is moving. In the meantime, you don't have to necessarily resubmit your transaction. And obviously, if you've played with Ethereum a lot you realize that any application that would send a transaction would break under this. So things like MetaMask, like hardware wallets and so on. So the plan to minimize that pain for every kind of application developer is to have a transition period where we support both types of transactions on the network. So we'll go from having kind of 0% 1559 style transaction and 100% legacy to over some long period.
00:16:50.474 - 00:18:09.180, Speaker A: I think the last time I checked it was 800,000 blocks to go to having 100% 1559 style transactions and then no blocks based for legacy style transactions. And finally, the last part which we've already kind of touched on is the idea of fee burning. So again, because miners could just keep the base fee high otherwise and kind of impose this cost on the entire network, we burn the base fee part of the transaction. So miners have no kind of preference as to whether it's high or low but the miners still get the tip which is called gas premium and the block reward like they currently do. And again, just to put some numbers on this historically fees have been around 500 Ether daily and block rewards have been, I think with the last issuance cut, 12,500 Ether. So you can see it's much more than the actual fees. But as we said with recent DFI surges we've seen kind of a steady fee market at around 2000 Ether daily in transaction fees and some days go in even higher than that.
00:18:09.180 - 00:18:48.680, Speaker A: And again, the fact that you have this fee burning creates a positive feedback loop between network usage and the network value of ether. Because as you have more and more demand for use, the base fee goes up, which means that the amount of ether that's burned goes up with the demand for transactions on the network and that reduces the supply, which has a positive effect on the network value. So I know that this was a lot, so I wanted to pause here in case people have questions on anything before we kind of go forward.
00:18:51.770 - 00:18:52.934, Speaker C: I have one.
00:18:53.052 - 00:18:53.720, Speaker A: Sure.
00:18:54.490 - 00:19:02.262, Speaker C: So what is the incentive for the user to give a tip to the Miner?
00:19:02.406 - 00:19:33.090, Speaker A: Great question. So in most time, it's expected there's not much of an incentive, and the tip should be fairly low. So either users who have a very high time preference, you absolutely want your transaction to be included. The other case, and we'll get into this in more detail later, is if the blocks are full. So if there's a lot of demand on the network, people will start outbidding each other on the tip because the blocks are already full. So those are really the two cases.
00:19:34.310 - 00:19:40.450, Speaker C: So the Miner can see the tip and choose the transaction that has a bigger tip.
00:19:40.530 - 00:19:45.206, Speaker A: Yeah. Okay. Like they can do today with the transaction fee. Yeah. Okay.
00:19:45.388 - 00:19:53.530, Speaker C: And when talking about volatility of block size, even now we can have empty blocks.
00:19:55.630 - 00:20:23.300, Speaker A: We can, but we don't in practice. Right. Like the transaction pool is much, much greater than the capacity. So when we do have empty blocks, sometimes because of how miners mine blocks, sometimes they find a block too quickly and they haven't had time to include transactions in it, and they mine an empty block. But you very rarely see kind of a half full block. We tend to see either full blocks or blocks with zero transactions because they were just found kind of by luck quickly.
00:20:25.990 - 00:20:38.998, Speaker B: A block that was empty, the Miner would have created that block with no transactions in it. So it wasn't that they just happened to find it. It's more they decided they were creating a block that had no transactions in it.
00:20:39.084 - 00:21:21.590, Speaker A: So what happens is when the miners and I'm not a minor, so it might not be 100% right, but as I understand it, what happens is the miners start trying to solve proof of work as soon as they get an incoming block. And then over time, they add transactions from their transaction queue to that. But if they're lucky enough to find a block before they've actually added their transactions to their proof of work search, it's still more profitable for them to send out that block and get the block reward, even though it's empty. So it's really in cases where the block was found before, they had included transactions that they hold as part of their proof of work solving.
00:21:23.850 - 00:21:32.530, Speaker B: Yeah, I guess that makes sense because I guess at the end of the day, by adding the transactions, they're still doing their random search to try and solve the proof of work.
00:21:32.620 - 00:21:49.950, Speaker A: Exactly. But they want to start it as soon as possible. So as soon as they're aware of a new block, they'll kick off a new search with no transactions. And this is like literally 1 second. And when you look at empty blocks on the network, they tend to have a timestamp that's like a second from a previous block.
00:21:51.970 - 00:22:01.022, Speaker B: But then you'd think you would have a range of fullness of blocks. Your transaction pool was empty, that's why you didn't add any transactions to the block.
00:22:01.086 - 00:22:25.850, Speaker A: That's probably something to do with like, I don't know how what's the software called a stratum is set up, so I'm not enough of a mining expert, but I assume it's like something to do with the transactions in of themselves are not that big to send. So I can imagine it's like something blocking something else and it's quick enough to update the job. But yeah, I've never mined to that level of sophistication.
00:22:27.550 - 00:22:28.426, Speaker B: Okay, thanks.
00:22:28.528 - 00:23:49.990, Speaker A: Yeah, and Etherscan has some really good charts about block usage on average daily, and you can see they're pretty much full all of the time with some minor spikes. But in general, I think for the past two years, ethereum blocks have been as full as can kind of be. Any other questions? Thoughts? Okay, like I said at the beginning, there's a bunch of still open or known issues about 1559, which kind of we're working on resolving before we can deploy it on main net. So the four core ones are there's no real order here, but yeah, first of all, how much can we handle in terms of block size variability on main net? So, like I said earlier, because of the base fee increase, we'd only have these kind of 25 million gas blocks for a short amount of time, but we don't even know if that is doable on main net. So that's a big area of research. The second slightly smaller area of research is just how do you manage the transaction pool through all this. 1559 makes it slightly more complicated.
00:23:49.990 - 00:25:14.158, Speaker A: The third one is that 1559 was originally brought forward by Vitalik and there's no formal reasoning behind it. It's a very kind of empirically driven EP where we see these things on the network and we have a hunch that this mechanism would fix them, but we don't have a formal proof that this is going to be game, theoretically sound. And then the fourth big issue is kind of what you brought up, Horatio, where what happens when the blocks are full and you start having first price tip auctions, which is basically the model we have today. So looking into those first one minimum viable block size, this is really an issue mostly because of Mainnet. So because Mainnet has such a large state size and there's potential denial of service risks, it's not clear that even for a short period of time we can process these blocks that are twice as large as normal. Because you have kind of the average case where there'll be normal transactions, but you can also have cases where people would craft malicious blocks. And the way they do that is they pick up codes that are chosen by being priced too little in terms of gas relative to how long they take to execute.
00:25:14.158 - 00:26:27.960, Speaker A: So people this is already a risk on the Ethereum main net, but people could kind of exploit that even further with blocks that are twice as big. Just to give a bit of historical context here, the original proposal for 1559 was to have blocks that had like a three X slack factor and that are only a third full. But just eyeballing that the Get team said that would be absolutely impossible on mainnet, so it was reduced to two X and 50% full at the same time. Even though this is a pretty serious issue, it's worth considering what's the cost of something like that. Because if you take gas prices of like 100 GWe, which is high, but I think it was the price at which I did that presentation, then this attack kind of gets pretty expensive pretty quick because the cost of the base fee will go up quite rapidly. And if you compare it to a 51% attack on Ethereum, it rapidly becomes more expensive. So this is something where we know Ethereum is already kind of unsafe if somebody has the amount of resources needed to do a 51% attack.
00:26:27.960 - 00:27:17.190, Speaker A: So we obviously want to minimize the risks here, but within the bounds that the system is meant to operate. And to address this, this is a lot of the work that we've been doing with Besu. Along with the Vulcanized team, we're trying to set up testnets to mock EIP 1559 and see how the client responds under stress. So the first step here is to just set up a small testnet where you just bombard it with 1559 style transactions, see what breaks. Assuming that you get that working quite smoothly, you'd want to use an existing testnet with a large state. I believe Robston has the biggest one, forge that and again run the same process. See if you can cause a denial service on the network.
00:27:17.190 - 00:28:32.910, Speaker A: Or alternatively, you want to create a new testnet and just have a large number of contracts deployed on it and have high usage. So again, you can get a pretty large state size. And in my opinion, this is probably the biggest risk to this whole EP because if we can't prove that Geth and open Ethereum and Basu can handle, say, 50 minutes to half an hour of 25 million gas bad blocks, it just might not be possible to do this EIP. And if we just look anecdotally on Main net today with Besu, we've seen some times where there's some blocks that have a lot of state access heavy transactions that cause us to fall behind head sometimes. And some Get nodes have had issues last year when they were trying to process large blocks generated by Starkware during some of their tests for I believe it was EIP 2028. So we do have some data to say that when blocks get really big, we already have some issues with clients today. So if we make it twice as worse, it's not clear how long the clients can process those blocks.
00:28:32.910 - 00:29:02.220, Speaker A: The other challenge with 1559 is just transaction pool management. And what's a bit OD about this is that transaction pool behavior is not part of the consensus. So it's not specified in the EP. Every client is free to choose how they want to implement it. And right now it's quite easy to do the transaction pool where you just sort by gas price and nonce and if there's a valid nonsense, you discard them. If transactions are too old, you discard them. So it's pretty simple.
00:29:02.220 - 00:29:57.850, Speaker A: But then for 1559 it gets a bit more complicated because it's not clear how long you should keep transactions if the base fee starts being higher than the fee cap. Because if it's just like a one off spike in demand, then the base fees should fall back pretty quickly and that transaction could be valid again. But if it's just like sustained high usage, maybe that transaction will never be executed. So you need to do a bit more readjusting there. And also once we have this transition period where we have both legacy transactions and 1559 transactions, you need to keep two transaction pools along in your client. And it's not here there. If there's any potential denial of service issues within the transaction pool, then the third big issue is around basically formally proving that this EIP does what it's intended to do.
00:29:57.850 - 00:31:39.594, Speaker A: So this is a pretty large change that we're doing to how fees and block size and transactions work on Ethereum. And it's based kind of on empirical data, but not on a solid proof. So the three things that are being worked on in that area are the testnets that I mentioned earlier, which again should validate that our empirical kind of hypotheses are correct and that we can do this. The other thing that's being worked on by the Ethereum Foundation is trying to simulate different agents sending different types of transactions and different processing patterns by the network to see can we recreate some common scenarios that we see on main net? Like, for example, a big ICO where suddenly there's a huge spike in demand and what does that look like, how does it play out? And then finally there's some work that's going to be started around just trying to do a more game theoretical analysis of 1559, the Escalator fees which we'll present after and the current model and how they relate to each other and what are kind of the incentives for miners, for users and whatnot. And again here it's worth noting that we do want 1559 and the other potential proposals to be secure, but they only have to be as secure as Ethereum, which we already know kind of fails in certain circumstances. And then the last big issue is this idea of first price tip options. So like racio pointed out, we move away from our current model, but when the blocks are full.
00:31:39.594 - 00:32:18.070, Speaker A: The tip is the only way to differentiate between transactions. So that means that the network kind of reverts back to where it is today. And another potential issue with the tip is that all of the wallets will have an incentive to have their tip be the highest so that their users transactions get processed first. So say that MetaMask puts a tip at one GWe, then maybe Coinbase Wallets puts it at two GWe. So then some other wallet puts it at three GWe and it's not clear where the equilibrium for what the standard tip will be ends up because it directly affects kind of the UX of the users using those wallets.
00:32:19.390 - 00:32:35.600, Speaker B: Sorry, Tim, I don't understand that point. So if a block is only 50% full, why would you put a tip in at all? Because you just think, oh, look, if my transaction goes in, then the block will be 52% full.
00:32:37.650 - 00:33:23.870, Speaker A: But the wallets might want to do that. So the user might not do that, but the wallets might have that as a default. Right, because MetaMask wants miners to process their users transactions before they process Coinbase wallets transactions. So they can just look at whatever is the average tip on a network and do slightly more than that and assume that miners will put in those first. And you're right, if that leads to having blocks that are more than 50%, it'll raise the base fee again. But they might still keep their tip high because they still want to be the first even once the base fee is higher. So there is probably like some equilibrium where that stops because then the users could get a cheaper option at another wallet by having a lower tip.
00:33:23.870 - 00:33:37.278, Speaker A: But it's not clear that that's optimal just because there is kind of this biding war between the different wallet providers. Does that make sense?
00:33:37.444 - 00:33:38.900, Speaker B: I think, yeah.
00:33:39.990 - 00:34:20.158, Speaker A: And if you're interested, this is something so Dan Finley, the founder of MetaMask, is the author of the kind of counter proposal to 1559, which tries to address that. So, yeah, he has some good thoughts on this as well. Basically, to solve this, there's like three things that you can do, right? First of all, you just do nothing. And kind of like you were saying, Peter, most of the times the blocks won't be full. Most of the first price auctions that will happen will probably be when the blocks are actually full. And that's quite infrequent. So that makes 1559 just a net improvement over where we are today.
00:34:20.158 - 00:35:06.698, Speaker A: And it's fine if it's not perfect. The second proposal is, again, this proposal by Dan Finley, which is called escalator fees. And so instead of using this base fee that changes every block and a tip, you instead keep our current model and just use four parameters instead of one. What's your start rates, your start price, your start block, your max price, your max block. And so you're basically saying what's the range you're willing to pay across, what time and your transaction gets dropped if nothing gets satisfied. So if the price is just too low throughout your entire range, your transaction just gets dropped and you resubmit it. And then this third option which has come up as part of this work on 1559 is what is called escalator tip.
00:35:06.698 - 00:36:14.062, Speaker A: So that you keep the base fee in 1559 and this variable block size which allows us to process kind of spikes in transactions better. But instead of having just a simple tip, which is a fee, you kind of have this escalator tip, which, again, allows you to specify what's the length of time you're willing to wait for your transaction to be processed, what's the range of prices. And obviously, the trade off there is this is kind of the most complicated one to implement, but it does solve most of the problems. And I know this can be pretty abstract, so the folks at MetaMask have done some mockups for this. So on the left side here, you see the 1559, what it could look like in MetaMask. And what's good there is that for a user, you typically only show a single fee, which will be kind of your base fee with a small tip. And they'll be able to see how quickly their transaction goes through and they might be able to increase the tip if they want to be quicker.
00:36:14.062 - 00:37:09.994, Speaker A: In a period where blocks are full. And this graph that's shown, I don't know if you can all see my cursor, I don't think so, but this graph that's in the right column of the left image with all kind of the lines going up and down shows what like the base fee and the tip over time. So you could kind of see that the base fee has gone up and down and then the tip as a percentage of the network has gone up and down again, potentially depending on how many people wanted to use it. So it gives kind of a very simple UX for users who just want to send in the transaction and not have things too complicated. But you can also kind of get a bit more advanced options. And then on the right side you have the sort of pure escalator fees which would show you how long your transaction will take to execute and how much it'll cost you. So you have kind of these two ranges.
00:37:09.994 - 00:38:07.858, Speaker A: So if you look at the fast one, you get five to 10 seconds and two to $4. And then again, in the advanced fees you could see kind of some past data about what was the time the transactions took to execute and what were their cost. So there's a lot of things to consider. I guess once you're looking at these two proposals, there's a few that I've listed here just to give you an idea of the kinds of problems that the implementers are working through. But the first one is just considering that 1559 is kind of the simplest option in terms of tipping, it's already a huge change. And if it works, it's a net improvement. So it might be worth just shipping that first, which the counterargument too, is that both these things break wallets and everything that has to submit an Ethereum transaction.
00:38:07.858 - 00:39:09.530, Speaker A: So it might be worth taking the time up front to come up with only a single proposal, a single change that breaks everything but only does it once. The escalators fees tend to be most useful when the blocks are full, which is not really frequent, but they could potentially prevent this wallet billing war, which is something that we don't have a really good way to reason about. And finally, escalator fees is also something that can be done outside of the protocol as opposed to 1559. So you can just have your wallet do that and not have it be part of the consensus. But the UX is not great for this because it means you would have to resign a lot of transactions or sign a lot of transactions in advance, and it would take up a lot of bandwidth on the network. So right now, transaction propagation is the number one thing that takes up bandwidth on the network. But if you go from sending one transaction at a time to sending N transactions at a time because you specify kind of a range, then you've just kind of imposed a huge extra cost in terms of bandwidth on every node.
00:39:09.530 - 00:39:23.680, Speaker A: So I'll stop here again for questions. I know, again, we kind of covered a lot. Yeah.
00:39:24.770 - 00:39:30.020, Speaker C: Okay. Tim, you mentioned testnet with Bezo and.
00:39:34.470 - 00:39:35.026, Speaker A: Yeah.
00:39:35.128 - 00:39:42.966, Speaker C: If the plan is to send a lot of transactions there, how would you generate those transactions? Is there any system to kind of.
00:39:43.068 - 00:40:14.820, Speaker A: Yeah, there's a script that generates it. So first we had just like a dumb script, I think, that just generated a bunch of similar transactions all the time and just bombarded the network. I believe Abdel wrote that, but not 100% sure. And then the EF is working on some more realistic scripts which would mimic kind of usage on the network over time. So Barnaby at the EF is the one working on that. I haven't had the time to dig into specifically how he's doing it, though.
00:40:15.990 - 00:40:17.314, Speaker C: Can you repeat the name?
00:40:17.432 - 00:40:37.958, Speaker A: Barnabay. B-A-R-N-A-B-E-I think I maybe have. So he's definitely in the 1559 discord that I mentioned at first, so he could answer questions there. And I think I might have another link to some of his stuff at the end. Okay.
00:40:38.124 - 00:40:46.540, Speaker C: And you mentioned the formal game, theoretical proof. Do you have any example of something like that done before?
00:40:48.030 - 00:41:12.980, Speaker A: There's a paper I was pointed to but I didn't read, which I was told was that I can send it to you. But yeah, basically it's just a model. Like if we do that, what are like miners incentives over time and what are users incentives over time and do they converge to what we'd expect they would? But yeah, there's definitely not a ton of work in that area yet.
00:41:15.050 - 00:41:29.880, Speaker C: And another one maybe you mentioned this, but I missed it. Is the base fee ordering or cut off point mandatory for the miner or can it choose?
00:41:30.270 - 00:42:16.870, Speaker A: No, the miner could not include a transaction that's under the base fee because it would basically break a consensus rule at that point. So the base fee is saying like, a transaction can't be executed in this block if the base fee is less than X. Okay, yeah, I don't know about more, but I guess that would be in the client. You'd have to hack your client. Right, but I don't know the implementation well enough to see if you put a base fee that was more than the minimum how the check happens. But yeah, I think all the clients will kind of support it in a way that within a block, if the transaction is less than the base fee, it doesn't get executed. Frank, I think you had a question as well.
00:42:16.940 - 00:42:33.930, Speaker D: Yeah, I had a question related to what? Horace, you asked the second question he had. So you mentioned formally proved and then games and so on. So do you know which type of game theoretic approaches are used to analyze this type of framework?
00:42:34.430 - 00:42:39.562, Speaker A: No problem. And there's been a you mentioned as well, equilibrium.
00:42:39.626 - 00:42:43.440, Speaker D: So I thought it came from Nash Equilibrium and stuff like that.
00:42:44.370 - 00:43:38.740, Speaker A: So there's no one that's officially confirmed on this yet. There's a couple of people that have been approached and that are considering doing this work and I think they'll all bring their different flavor to it. I think the likeliest one is more just like a game theoretic analysis and yeah, trying to find what's like the optimal strategy under this framework and especially comparing across what would be the optimal strategy under today's framework, what do we see? Because I think in practice what you find on Ethereum is a lot of stuff that would be sometimes optimal for miners or for individuals, users actually doesn't happen. So it's worth noting, like that difference between what our fee market permits and what we see and then looking at what would be possible under the new model. But it's still very early. There's nothing that's been set.
00:43:41.350 - 00:43:49.000, Speaker D: Mean, not a formal proof, but a simulator for these games that you can or this type of system that you can use.
00:43:50.490 - 00:44:17.662, Speaker A: Another that's a different area. So there has been some simulation already and that's the work that Barnabay is working on. But I think that the pushback that the community gives on the simulations is just like we'd like to see something a bit more mathematical, if that makes sense, where it's not just a bunch of agents running against it yeah, I.
00:44:17.716 - 00:44:34.370, Speaker D: Think as a formal methods person, I would say yes. But it's extremely hard to study these types of games with many players and coalitions and uncertainties and timings and so on. Maybe for the time being, simulations is.
00:44:34.440 - 00:44:57.770, Speaker A: The best you can and that's the counterargument ethereum is so hard to model that everybody that tries to model the Ethereum typically ends up not doing a good enough like a representative enough model. And we'll maybe get better data just running a test net and giving $5,000 to whoever breaks it than we will by trying to model it perfectly.
00:44:58.510 - 00:45:13.374, Speaker D: Actually, my question was not about, let's say, formally prove something, but to get an idea what type of games is being played in this context. Because you may get some properties of those games, right?
00:45:13.412 - 00:45:14.766, Speaker A: You may say, okay, this type of.
00:45:14.788 - 00:45:22.542, Speaker D: Games is robust against this, but not robust against that and so on, rather than trying to formally analyze it, but to categorize somehow.
00:45:22.686 - 00:45:40.940, Speaker A: Yeah. And I think this is where looking at what we have today is really valuable too because I spoke a little bit to researchers, I'm definitely an expert but it's much easier to contrast ethereum today to Ethereum with 1559 than it is to start from scratch and try to define everything.
00:45:43.230 - 00:46:00.174, Speaker D: An example, for instance, you were mentioning optimal strategies. So there are games in which there's no optimal, but there are many, let's say optimal or best strategies and so on. So that's these kind of properties that are sometimes interesting to know.
00:46:00.292 - 00:46:23.910, Speaker A: And again, what's also interesting here is if you look at Ethereum as like a game we know that the game fails if 50% of miners collude. Right. And it's also kind of setting the bounds of we want it to be strictly better, but not perfect. Thanks. Any other questions, thoughts?
00:46:25.690 - 00:46:26.886, Speaker C: Another one?
00:46:26.988 - 00:46:27.640, Speaker A: Sure.
00:46:30.030 - 00:46:44.480, Speaker C: You mentioned the thing about being no need to be safer than, for example, proof of work. But I assume in the future, for example, proof of stake probably is more safe than that, right?
00:46:48.210 - 00:47:36.510, Speaker A: Good question. The consensus part of eat one won't move to e two. Right? So once we move to proof of stake, 1559 will kind of disappear. There's a lot of proposals, or a lot some early proposals for 1559 style fees on e two. But the models are so different that you basically have to start from scratch. Again, I think what's good personally, one argument I see towards deploying 1559 quicker, assuming it's relatively safe, is that it'll give us a lot of data for whatever we want to do on e two in terms of fees. But we'll have to re implement something anyway because the transaction fees will go to the block proposers and the whole consensus engine moves away from the miners.
00:47:36.510 - 00:47:48.740, Speaker A: Thank you. Any other questions?
00:47:53.590 - 00:47:54.194, Speaker D: Okay.
00:47:54.312 - 00:48:08.786, Speaker A: I think yeah. So kind of the final slide. Yeah. So EIP 59. 59 is a big proposal. Again, at a high level. You're trading out volatility in block sizes to dampen the transaction fee.
00:48:08.786 - 00:49:10.250, Speaker A: Volatility. There's a lot of stuff we need to do to prove that it's safe before we can deploy it. The biggest one of it being can clients actually manage large box? And then what the best tip format is? How do we define 1559 in terms of a game and how do we simulate it appropriately? I had a couple more links here, so, again, the discord is the main place for day to day talk. The simulation research link is Barnabas GitHub, so if you're interested in that, this is the best place to find it. We have roughly monthly implementers calls, so the agendas and transcripts of the past ones are posted in that third link. There's two implementations right now, Besu and Get, which I've posted and I can share in the chat. Also, I think I have the paper, which I believe is the only kind of prior work I've seen with regards to game theory and block reward.
00:49:10.250 - 00:49:47.650, Speaker A: I think this is it. So this is the paper and I think there's also a final the Laylist simulation notebook, I believe is this one, if you're interested. But I haven't had time to look into either of those, so hopefully they're oh, and sorry, I had one last slide about the next talks here, so peter, do you want to go?
00:49:47.740 - 00:50:02.720, Speaker B: Sure. Yeah, I will. So. Thank you, Tim. And everyone give him a clap, whether it be a virtual one or a real one. Thank you. That was awesome.
00:50:02.720 - 00:51:17.734, Speaker B: And I know I've learned a lot and I'm sure so has everyone else. All right, so in two weeks time and plus several hours, we're going to have Olivia and Alexandre to give a talk about doing stuff which is really related to Ethereum Two. And it's this GKR protocol, so that will be interesting. It's about zero knowledge proofs and relates to Ethereum Two. Then, in four weeks time, I'm going to give a talk on applications of blockchain for business. And so this talk is going to go pretty much from assuming you know nothing about blockchain to telling you all about blockchain, all about bitcoin, ethereum, altcoins, ERC, 20 STOs ICOs and then work through stable coins and the DFI and supply chain and the many other applications of blockchain. And so it might be about one and a half hours.
00:51:17.734 - 00:52:16.790, Speaker B: And so actually there should be a one in front of that. So it's 1230 Brisbane, not 230. But yeah, look on meetup.com and then in six weeks time, jacob Cantel from MetaMask is going to give a talk on using MetaMask for application developers and how to get the most out of it and how to integrate it into your application workflow. And we've got many more talks coming up, headed towards Christmas as well, but those are the ones that are locked in at the moment. And if you've got a great idea for a talk and are just dying to tell people about, say, the latest features of hyperledger besu or something like that. Madeline or anyone else for that matter, then please get in contact and we're more than happy to schedule a yeah, so thank you again.
00:52:16.790 - 00:52:17.480, Speaker B: Tim.
00:52:21.530 - 00:52:28.200, Speaker A: Sorry I lost the zoom button. Yeah, glad to be on. And thanks, everyone, for sitting through this.
00:52:29.210 - 00:52:32.350, Speaker B: All right, cool. All right, well, see you later, everyone.
00:52:32.420 - 00:52:34.110, Speaker A: Bye bye bye.
00:52:35.010 - 00:52:35.774, Speaker C: Missing talk.
00:52:35.812 - 00:52:36.620, Speaker A: Tim thanks.
