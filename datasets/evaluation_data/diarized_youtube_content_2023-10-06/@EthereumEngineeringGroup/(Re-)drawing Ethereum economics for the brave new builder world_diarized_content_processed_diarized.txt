00:00:03.050 - 00:00:21.870, Speaker A: Hello and welcome, everyone. My name is Peter Robinson, and today we're having Barnaby come along and tell us all about I was going to say PBS, but it's more than just PBS, isn't it? So why don't you briefly introduce your topic but introduce yourself. Over to you, Barnabay.
00:00:22.610 - 00:00:23.310, Speaker B: Sure.
00:00:23.460 - 00:00:46.666, Speaker C: Hi, Pete, and hi everyone here at the meetup. Thanks for accommodating the time. I'm in Berlin. I think it's a bit late for you all. I've been working at the Ethereum Foundation for a bit more than three years now. My research team is called the Robust Incentives group. I think it's fairly explanatory what we do.
00:00:46.666 - 00:00:50.414, Speaker C: We deal in incentives. We think about game theory, we think.
00:00:50.452 - 00:00:54.922, Speaker B: About mechanism design, any kind of mechanism.
00:00:54.986 - 00:01:36.326, Speaker C: In the protocol that touches on the economics. We try to think about it and analyze it, understand the stability, understand its place in the larger constellation of things that make ethereum work. And so, yeah, today, Peter and Sandra, we've been talking a bit about PBS together a bit more with Sandra. And so the idea was, okay, can you tell us more about PBS? But lately I've been thinking about PBS in the context of the complexification of ethereum more generally, and I think just focusing on PBS might be missing the forest for the trees.
00:01:36.358 - 00:01:41.138, Speaker B: So today I just hope to give a big picture take of the ethereum.
00:01:41.174 - 00:01:58.020, Speaker C: Is getting complex, and I think many people are not necessarily noticing because a lot of it is happening at the, let's say, infrastructure layer, which definitely has less light shining through it. So I'm hoping with this talk, to kind of take you through these changes.
00:02:00.070 - 00:02:17.750, Speaker A: Well, that sounds absolutely awesome. And you did a much better introduction to your talk than I could possibly have done. So, look, please present your slides. And before you do, how would you like us to ask questions? Should we ask them in the chat? Should we ask them live? What would you prefer?
00:02:19.530 - 00:02:46.398, Speaker C: Anything is fine. I think since we're on zoom, can always raise the hand. That gives me, like, a little audio signal that someone wants to say something. I'll still monitor the chat, but in case I miss something yeah, feel free to raise your hand or open the mic. I'll try to give some pause between the slides to make sure that everything is clear. But since there's not so many of us, I think we can be also a bit informal.
00:02:46.574 - 00:02:47.650, Speaker B: Okay, that's great.
00:02:47.720 - 00:02:48.962, Speaker A: Right, well, over to you.
00:02:49.016 - 00:02:49.860, Speaker B: Thank you.
00:02:51.110 - 00:02:51.570, Speaker C: Cool.
00:02:51.640 - 00:02:53.060, Speaker B: Let me start.
00:03:05.470 - 00:03:07.980, Speaker C: You should be able to see the slides now.
00:03:09.870 - 00:03:10.620, Speaker B: Yeah.
00:03:13.150 - 00:03:16.650, Speaker C: And I will move the annoying zoom bar here.
00:03:16.720 - 00:03:18.060, Speaker B: Okay, done.
00:03:19.010 - 00:03:21.886, Speaker C: Right, so, yeah, thanks for having me.
00:03:21.988 - 00:03:22.880, Speaker B: Hi, everyone.
00:03:23.890 - 00:03:44.760, Speaker C: Today I want to tell you a bit more about this idea of redrawing the ethereum economics. I say redrawing because I really think that we are in a very transition kind of phase, especially post merge. But it started to some extent even before that. And so yeah, I want to tell you more about this.
00:03:46.170 - 00:03:47.158, Speaker B: I was going to tell you a.
00:03:47.164 - 00:03:50.920, Speaker C: Bit about myself here, but I think that's done. So I'll just move along.
00:03:51.770 - 00:03:54.006, Speaker B: Yeah, and this is pretty much the.
00:03:54.028 - 00:04:27.986, Speaker C: Main point that I want to make today, is ethereum is getting complex. If you know anything about ethereum, you know that it was already complex to begin with. There's a lot of layers to the protocol, a lot of ways that you can work on it at the DAP level, at the protocol level, a lot of cryptography, a lot of economics. But my sense is that most of this complexity has been so far fairly embedded in the core protocol. But now the complexity is kind of growing outwards. And my kind of read on that.
00:04:28.008 - 00:04:30.834, Speaker B: Is that ethereum is just getting more.
00:04:30.872 - 00:04:40.150, Speaker C: Valuable as a platform and when there's more value coming to the system, it means that players and agents are going to become more sophisticated.
00:04:40.490 - 00:04:43.686, Speaker B: And often what we observe, let's say.
00:04:43.708 - 00:05:23.140, Speaker C: When things get more sophisticated, you try to simplify it. So the way it's usually seen in economies is you have things like division of labor. So you try to have entities that start specializing in very specific niche roles. And if you have this division of labor, then you have to understand a kind of very complex web of relationship between who's doing what in the ethereum world. And so when I'm talking about Ethereum today, I actually mean something a bit more than the core protocol. I really also mean the infrastructure that is sort of growing outside of it as well.
00:05:25.770 - 00:05:29.206, Speaker B: So I want to start, as I.
00:05:29.228 - 00:06:06.306, Speaker C: Said, since we have this idea of a division of labor in economics. In that case you often think about this idea of the principal agent problem, which is, and this is from Wikipedia the conflict of interests and priorities that arises when one person or entity, the agent takes actions on behalf of another person or entity, the principal. So that's a situation that's very common. You're the principal, you ask somebody to do something, that person who's doing something, they might have their own interests, they might not do it the way you want them to do it. And so you have conflicts or you have kind of a problem.
00:06:06.488 - 00:06:08.526, Speaker B: And the problem gets worse when there's.
00:06:08.558 - 00:06:29.162, Speaker C: A greater discrepancy of interest and information between the principal and the agent, as well as when the principal lacks the means to punish. The agent lacking the means to punish. And this idea of control, I think, is very important when we think about decentralization and when we think about trying to not have everyone housed under one.
00:06:29.216 - 00:06:33.334, Speaker B: Centralized entity and the deviation.
00:06:33.382 - 00:06:44.862, Speaker C: So this kind of delta between what the principal wants and what the agent wants is called the agency costs. And these agency costs, they're very fundamental in the kinds of systems we built.
00:06:44.996 - 00:06:47.886, Speaker B: And so we had this conference in.
00:06:47.908 - 00:07:09.046, Speaker C: December at Columbia University where we really dived into these economics and this fairly tenured professor basically summarized it as decentralization is a b world. It's very complicated because it introduces these principal agent problems at every level of the stack. And so in that talk, I kind of want to tell you a bit.
00:07:09.068 - 00:07:14.198, Speaker B: About some of them. So the first one is what I.
00:07:14.204 - 00:07:33.360, Speaker C: Would call the protocol to proposer problem. It's kind of where the story starts and it's, let's say, the original scene of decentralization or the core template that we'll see over and over in this talk.
00:07:33.730 - 00:07:38.574, Speaker B: So the first thing is that you have this fuzzy ID that is the.
00:07:38.612 - 00:07:41.894, Speaker C: Ethereum protocol, which is not something tangible.
00:07:42.042 - 00:07:44.498, Speaker B: It's a set of rules by which.
00:07:44.584 - 00:07:49.890, Speaker C: The participants of the network, of the ethereum network communicate with one another.
00:07:50.040 - 00:07:52.414, Speaker B: And so when you create a protocol.
00:07:52.462 - 00:08:41.502, Speaker C: When you create a set of rules, you're trying to ensure that the people who participate in your protocol, they abide by you're developing peer to peer protocol. You want to make sure that people don't start flooding your network and that they behave in a way that promotes the outcomes that the protocol wants to achieve. And so the agents in the Appium protocol today after the merge, they are known as the validators. They're the ones who participate in consensus formation. They are the ones who make blocks. And so they run this protocol. But the question is, do they run it honestly? So to ensure this honest cooperation, we've designed or the Ethereum protocol designers have worked out a system of rewards and penalties to ensure that there is compliance.
00:08:41.502 - 00:08:43.154, Speaker C: But is that enough?
00:08:43.272 - 00:08:47.442, Speaker B: So if we represent it schematically basically.
00:08:47.496 - 00:09:03.046, Speaker C: The Ethereum protocol, which is this fuzzy ID or this set of rules, kind of delegates the operation or the maintenance of a protocol to these validators, but their goals might not be aligned with one another. So to be a bit more concrete.
00:09:03.078 - 00:09:08.106, Speaker B: Here, what does it imply for you.
00:09:08.208 - 00:09:24.302, Speaker C: When you are a validator? What do you have to do? The first thing is, if you want to become a validator and if you want to participate in consensus formation, you have to lock up 32 E. That's the stake in the proof of stake. You lock up your E in the deposit contract.
00:09:24.366 - 00:09:26.290, Speaker B: You wait for some time and after.
00:09:26.360 - 00:10:21.346, Speaker C: Some time you're activated and then you're called upon to perform these duties of maintaining the chain and achieving consensus along with the other validators and the other full nodes. And so among these duties, once in a while you're expected to propose blocks where you make a block that contains kind of a summary of the consensus data at the moment and also execution data, so things like user transactions and you're also expected to make votes attestation. So you have to provide your view of the consensus once in a while. And you have to then use these votes to finalize blocks. This, I guess, has more to do with the nittygritty of the consensus, which I won't go into it too much, but can kind of keep in mind. The validator here is responsible for maintaining both that consensus layer of how do people get to this shared view of.
00:10:21.368 - 00:10:24.594, Speaker B: The Ethereum ledger and also just providing.
00:10:24.642 - 00:10:37.340, Speaker C: Block space for users to send their transactions. And you synthesize that as a block. The block is really the unit, the good that the validators are creating here.
00:10:39.310 - 00:10:41.846, Speaker B: And so this Ethereum protocol, in proof.
00:10:41.878 - 00:11:17.574, Speaker C: Of stake, it specifies a set of rewards and a set of penalties, which to some extent I would say are a bit more involved than they were even in proof of work. But the typical reward that you can think about is first you have the block reward that you get when you propose your block, when you correctly vote as an attestor. And then you have transaction fees that you get from the execution payload. You have also some penalties. Now since with proof of stake we can, let's say, detect bad behavior and we can penalize it a little more.
00:11:17.612 - 00:11:19.954, Speaker B: Precisely, they come in two shapes.
00:11:20.002 - 00:11:44.286, Speaker C: You have a penalty if you are inactive, so for instance, you're offline because your WiFi is bad and you have a penalty also if you make this very bad attributable fault, that can lead to consensus instability. And so for that you get stashed. So if we can detect that you do this very bad fault, you lose a fair amount of the amount that.
00:11:44.308 - 00:11:45.470, Speaker B: You have at stake.
00:11:45.970 - 00:11:48.974, Speaker C: And so adding to our boxes, how.
00:11:49.012 - 00:11:52.474, Speaker B: The Ethereum protocol basically tries to align.
00:11:52.522 - 00:12:47.090, Speaker C: The incentives of its agents is via these rewards and penalties. And the agents are responsible for producing that blockchain. And hopefully, based on these reward and penalties that try to incentivize a specific behavior, hopefully the blockchain that the validators are producing matches the kind of specification of the Ethereum protocol. And so these specifications, we want the chain to grow as much as possible. We want the least amount of reords and folks, because this creates confusion and we want any user who's paying the minimum fee to enter as long as the blocks are not congested. So they're just like very high level goals, but ensuring throughput ensuring lagness and ensuring safety.
00:12:49.110 - 00:12:55.108, Speaker B: All good up tina so yeah, a.
00:12:55.134 - 00:12:57.036, Speaker C: Bit more schematically is the idea that.
00:12:57.138 - 00:13:01.528, Speaker B: The Ethereum protocol is capable of controlling.
00:13:01.624 - 00:13:58.930, Speaker C: Let'S say, the network of validators, but that control is imperfect or incomplete. So to some extent the Ethereum protocol does have control over these validators because it can see some of their actions, it can reward them, it can penalize them. But there are ways in which the network of validators are out of the Ethereum protocol's control. One of them, and one that will be very interested in this talk, is block building. So there's very few things that the Ethereum protocol has to say about the way that validators are building their blocks. And this is where, let's say, most of the out of protocol innovation has kind of kicked in and sort of made us reevaluate what is the role of the protocol in that system. So before I get there, I need to tell you a bit more about exactly how these blocks are made in the first place.
00:14:00.580 - 00:14:05.728, Speaker B: And so that's kind of the gist here. So I want to give you another.
00:14:05.814 - 00:14:28.680, Speaker C: Maybe perspective on how the protocol works or what it does. And I'm really here adopting the view of the Ethereum protocol goal is to supply network resources, is to provide that block space so that users can perform transactions and participate in the shared state space of Ethereum.
00:14:29.820 - 00:14:32.920, Speaker B: And so what are these network resources?
00:14:33.420 - 00:15:12.112, Speaker C: It's a fairly simple slide. If you know something about Ethereum, how you meter it, how you try to get a sense of how much resources are being provided, is with this idea of gas. So all the nodes that are participating in the protocol, all the full nodes, they receive, all the blocks they execute, and they verify all the user transactions. So these nodes, they're not intangible things, they are servers. They're actual physical things. And the transactions, when they're executed, they consume also against physical kind of quantities. So it can be compute when you have basic operations, it can be storage.
00:15:12.112 - 00:15:37.288, Speaker C: Your node might need to store short term memory. You might need to access states where the balances of user accounts are written. It might need to access historical data, for instance, the record of function calls since the start of the chain. And there's also things like bandwidth resources, which is, okay, how much can my node send over the network to other nodes, like the size of the blocks.
00:15:37.304 - 00:15:42.896, Speaker B: Or the messages, let's say in bytes? And so all of these resources, they.
00:15:42.918 - 00:16:00.100, Speaker C: Are metered with this idea of gas which says, okay, this is how much my transaction is going to use. And so for all of these different types of resources, we just sort of aggregate all of that into this one unique stick that we use to measure and we call that the gas.
00:16:00.600 - 00:16:02.896, Speaker B: So the blocks, they have a gas.
00:16:02.928 - 00:16:25.896, Speaker C: Limit and they can use some amount of gas up to that. Now with this framing of okay, the Ethereum protocol is trying to provide these resources so that people can use the chain and do stuff with it. I like to think of Validators as block producers and validators as kind of.
00:16:25.918 - 00:16:28.712, Speaker B: A meeting place between, on the one.
00:16:28.766 - 00:16:34.040, Speaker C: Hand, the supply of resources that is provided by the protocol via gas.
00:16:34.120 - 00:16:36.684, Speaker B: The protocol says, hey, here's some amount.
00:16:36.722 - 00:17:08.776, Speaker C: Of gas that you can use to make your block. And on the other side, the demand that's coming from the users say I have this transaction, I have this economic operation that I want to perform and I want you to supply to me the gas that I need to execute that transaction and to make it work. And in the middle you have these validators that are trying to be these market makers between the protocol and between the users. And the sort of resulting item from.
00:17:08.798 - 00:17:10.200, Speaker B: That is a block.
00:17:14.340 - 00:17:54.632, Speaker C: So a bit more in the weeds how this market works. So there is one constraint. When you're a block producer, you can't use more gas than the gas limit. But as of August 2021, there's actually another constraint that you need to satisfy, which is the EIP one Five nine dynamic transaction pricing. And so since the activation of this EIP, we require users to pay at least the minimum amount of fee. And that minimum amount is kind of dynamic over time. So you can think of it as uber search pricing.
00:17:54.632 - 00:18:11.764, Speaker C: So whenever the demand to get inside the block gets too high, that dynamic price is going to raise. The protocol is going to tell the user there's a lot of demand right now, a lot of people want to get inside the block. And so you have to pay at least this much to enter. And when the demand is not so.
00:18:11.802 - 00:18:14.976, Speaker B: High, that dynamic price, it reduces.
00:18:15.088 - 00:18:35.704, Speaker C: So this is the update rule here. You can really think of it as block by block. The protocol is assessing whether there's a lot of people trying to get in and a lot of people who are willing to pay and sort of adjusting this enterprise based on that. The way it does that is quite.
00:18:35.742 - 00:18:39.164, Speaker B: Clever, is we say we want to.
00:18:39.202 - 00:18:55.612, Speaker C: Target on average 15 million gas being supplied per block, but we are going to allow the block to contain up to 30 million gas. So we are going to allow the block to execute up to 30 million gas worth of transactions.
00:18:55.676 - 00:18:58.096, Speaker B: And so if we see that the.
00:18:58.118 - 00:19:08.420, Speaker C: Block producer is able to pack more than the target amount of transaction, that means, okay, a lot of people are willing to pay above the protocol mandated price.
00:19:08.490 - 00:19:10.276, Speaker B: And so in that case, we're going.
00:19:10.298 - 00:19:21.764, Speaker C: To increase that entry price. But if the enterprise becomes too high, the block producer is going to fail to find as many people as the target to fill their block.
00:19:21.812 - 00:19:23.576, Speaker B: And so then we are going to.
00:19:23.598 - 00:19:36.764, Speaker C: Get this credible signal that the demand is not that high anymore, and then we are going to decrease this entry price. And so you can really think of it as a congestion price or as a reserve price.
00:19:36.962 - 00:19:41.548, Speaker B: In this sort of auction framing, there's.
00:19:41.564 - 00:19:46.530, Speaker C: A bit more reference around it. It's been very discussed in recent years.
00:19:49.270 - 00:19:53.926, Speaker B: And so that one, EIP 1559, was.
00:19:53.948 - 00:20:39.650, Speaker C: Deployed in August 2021. But as I said earlier, the measure of gas, it kind of folds together many resources under this one stick, and that's a little inefficient. So when you do that in economics, it means that you are bundling together resources that may work independently. Right? If I denominate everything in gas, I'm led to say things like oh, three units of execution or three additions is the same load to my node as one byte that I have to keep in storage sort of forever. And it's a bit of a weird comparison to make, right? It's really apples and oranges.
00:20:44.330 - 00:20:46.120, Speaker B: I'm hearing a question.
00:20:49.590 - 00:20:50.866, Speaker C: Maybe I think.
00:20:50.888 - 00:21:01.122, Speaker B: Someone was off mute by mistake. Yeah, no worries, right? When you have this kind of folding.
00:21:01.186 - 00:21:41.874, Speaker C: Apples and oranges under this one price, it leads to inefficient market because it means I always have to trade one apple for free oranges and that's it. The relative prices between these different items is sort of fixed. But obviously from the nodes perspective, sometimes it's reasonable to say I can keep as much storage as I want as long as you don't reach some kind of limit. And then the execution is more of a bursty process. I only have to do it once. After I executed, I never have to do it again. So it makes sense to kind of decorate the pricing of these items from one another.
00:21:41.874 - 00:22:02.774, Speaker C: And so this idea is to move to multidimensional gas. So instead of having a single EIP 1559 selling you the resources under this one umbrella, having multiple markets, one for each type of resource that the network.
00:22:02.822 - 00:22:05.818, Speaker B: Is providing, and letting these market find.
00:22:05.904 - 00:22:47.240, Speaker C: Their, let's say, prices independently from one another. And this can lead to strictly better allocations. So the first instantiation of this idea, it should actually go live this year, hopefully. So it's hard to make predictions, but it's this idea of two dimensional EIP 1559. And the upgrade that people are talking about is EIP 4844, also known as Proto Dank Sharding. And this EIP goal is to separate, let's say, the gas that we are currently using that I will call exec.
00:22:47.320 - 00:22:53.584, Speaker B: Gas and data availability. So, data availability is kind of a.
00:22:53.702 - 00:23:13.828, Speaker C: Special resource that is mostly consumed by a class of users that is very becoming, let's say systemically important to Ethereum. And these users, they are called roll ups. They are L2 solutions that secure themselves by Ethereum by posting the data.
00:23:13.914 - 00:23:20.996, Speaker B: That they execute on the Ethereum base layer. But the key here is that it's.
00:23:21.028 - 00:23:35.964, Speaker C: Not actually that important that the data is kept around forever. You only need to post it once and ensure that everybody has seen the data at about the time that it's been posted. What the base layer needs to do.
00:23:36.002 - 00:23:38.412, Speaker B: Is just make sure that the data.
00:23:38.546 - 00:23:46.716, Speaker C: Is common knowledge, at least some point in history, so that people can then index it and potentially store it forever.
00:23:46.908 - 00:23:49.056, Speaker B: And so that data availability means we.
00:23:49.078 - 00:24:13.764, Speaker C: Don'T actually need to store this data forever on the Noop as long as we ensure availability once it's an app. And so by decorating this provision of data availability from the execution gas, we can supply more of the data availability to the roll ups and that helps in turn the roll up scale by having cheap access to one of the network resources.
00:24:13.892 - 00:24:15.368, Speaker B: And so this is, let's say, the.
00:24:15.374 - 00:24:16.776, Speaker C: Same plot that was there a couple.
00:24:16.798 - 00:24:18.996, Speaker B: Of slides ago, but now the Ethereum.
00:24:19.028 - 00:24:27.756, Speaker C: Protocol is supplying two different kinds of resources. This except gas, which is the classic gas as we know it, and now.
00:24:27.778 - 00:24:33.588, Speaker B: This new resource, which is the data gas. And so on the one hand, users.
00:24:33.624 - 00:24:37.696, Speaker C: Are going to send their transaction as they've done before, and these transactions are.
00:24:37.718 - 00:24:39.984, Speaker B: Going to use the exit gas and.
00:24:40.022 - 00:24:49.476, Speaker C: The roll ups, which are kind of special users are going to send what's called Blobs. They're going to send blobs of data to the validators and the validators are.
00:24:49.498 - 00:25:02.296, Speaker B: Packing both in their blocks. Okay. All right, so that was a bit.
00:25:02.318 - 00:25:17.932, Speaker C: Of background on, let's say, what exactly are we talking about when we're talking about making a block? What are the resources that are involved in that production? And that leads me then to the.
00:25:18.066 - 00:25:22.620, Speaker B: Second principal agent problem, which is the.
00:25:22.690 - 00:25:42.804, Speaker C: Proposal to builder problem, also known as proposal builder separation. And it's something that been relatively quite discussed in the last few months. The merge has changed quite a bit the situation here. And so I want to kind of.
00:25:42.842 - 00:25:44.710, Speaker B: Take you on that.
00:25:46.440 - 00:25:56.440, Speaker C: To understand better why this has happened and what are the implications in that new separation.
00:25:59.180 - 00:26:03.064, Speaker B: So coming back to this original principle.
00:26:03.112 - 00:26:05.592, Speaker C: Agent problem, we saw that the Ethereum.
00:26:05.656 - 00:26:10.504, Speaker B: Protocol sort of entrusts the correct execution.
00:26:10.552 - 00:26:14.908, Speaker C: Of the protocol and the production of blocks to the network of validators.
00:26:15.004 - 00:26:16.848, Speaker B: But what we observe today is that.
00:26:16.934 - 00:26:48.712, Speaker C: Validators themselves start delegating some of their core functions to new entities that are known as builders. And so the idea here is to draw that line of, let's say, responsibility or that line of delegation all the way to the builder role. So here I'm taking a bit of a, let's say, historical view. So how has this separation happened? To some extent, it's not entirely new.
00:26:48.766 - 00:26:52.440, Speaker B: It's not something that came out of nowhere.
00:26:52.600 - 00:27:09.328, Speaker C: The merge happened and then we saw this separation happen. There were definitely like premises before the merge. And the first type of evidence that we have is in proof of work. You had a separation between, let's say.
00:27:09.494 - 00:27:12.892, Speaker B: Block proposers miners and searchers.
00:27:12.956 - 00:27:22.340, Speaker C: And so you had this new class of entity that we call searchers that were helping miners creating their block.
00:27:22.840 - 00:27:28.592, Speaker B: The reason why this sort of separation happened is miners who make the block.
00:27:28.736 - 00:27:37.124, Speaker C: They realize that when they are making the block, the position of a transaction or the relative position of a transaction.
00:27:37.172 - 00:27:39.368, Speaker B: With respect to one another is actually.
00:27:39.454 - 00:27:52.344, Speaker C: Very important and can be very valuable. So there's this idea that you might have heard about of mev maximum extractable value. And so if I am a transaction.
00:27:52.392 - 00:27:55.768, Speaker B: Sender it might be very valuable for.
00:27:55.794 - 00:28:07.664, Speaker C: Me to be sitting right at the top of the block. For instance, I want to arbitrage financial markets. I'm the first in the block. I can capture all of the arbitrage that's available.
00:28:07.862 - 00:28:09.584, Speaker B: So the way that people were trying.
00:28:09.622 - 00:28:37.916, Speaker C: To express that preference that I want to be at the top of the block because it's a very valuable position for my transaction to be, I can extract a lot of mev is they would just raise the gas prices. They would send these transactions with sometimes thousands or tens of thousands of dollars of gas prices in the hope that the block producers who order the transaction by decreasing order of gas would put.
00:28:37.938 - 00:28:42.956, Speaker B: Them at the top. It turns out, if you're trying to.
00:28:42.978 - 00:29:04.132, Speaker C: Express a preference that you want to be at the top of the block, it's a bit convoluted that you have to go through this effort of competing with the gas price. It means that if there are two people that are trying to get to that spot, they both have to race one another to get to the highest valuation that will get them in. It's just a very inefficient way to organize the market.
00:29:04.186 - 00:29:08.172, Speaker B: And so what we observed is private entities.
00:29:08.256 - 00:29:43.216, Speaker C: So the most famous one is Flashbots. They started saying, well, rather than doing this race in the Mempool sending these priority gas auctions, let's just organize a market between these searchers who find valuable opportunities and try to bid for it and the block producers on the other side. And so that market was organized as an option and the searchers could say this bundle of transaction, this arbitrage that I want to make is very valuable to me, and so I'm willing to pay this much to be at the.
00:29:43.238 - 00:29:44.428, Speaker B: Top of the block.
00:29:44.604 - 00:30:11.710, Speaker C: And so in the middle, you can think of it as an auctioneer that is trying to make the allocation between the searchers who have available bundles and on the other side, the block producers who are making the block. And so back then, it was already the case that the block producers were outsourcing this core function of making the block partly to these searchers and to this out of protocol market.
00:30:14.480 - 00:30:18.588, Speaker B: So that model was not really possible.
00:30:18.674 - 00:30:49.920, Speaker C: In Proof of Stake, the reasons are a little involved, but very, let's say basically is that this auction relied on a trusted relationship between the searchers and the block producers. And the root of that trust is that miners were very often organized under mining pools. And the mining pools, they are identifiable players, they're kind of big, and so they could be trusted by the searchers to honestly participate in that auction.
00:30:50.080 - 00:30:53.156, Speaker B: In Proof of Stake, you have solo.
00:30:53.188 - 00:31:18.240, Speaker C: Validators where people who are just staking from home, people who are not identifiable, people who may be called upon to produce blocks only once every three months. And so you don't have the same idea of trust, you don't have the same idea of repeated games. And so you can't really organize an auction that is universal between these searchers and these, let's say, solo Validators.
00:31:18.740 - 00:31:20.816, Speaker B: And the way to kind of go.
00:31:20.838 - 00:32:03.260, Speaker C: Around that is to say, well, instead of having searchers bid for this top of the block kind of bundle inclusion, validators are going to entirely outsource the block production to a new class of actors that are called builders. And again, this is going to work as an option. So the Validators are just going to passively listen to builders sending beats saying, I'm willing to pay this much to make the block for you. And why the builders are willing to pay is because they expect to get some revenue from the mev that they yeah. And so this auction is taking place between Validators and builders.
00:32:04.080 - 00:32:05.596, Speaker B: I'm seeing a question.
00:32:05.778 - 00:32:20.644, Speaker C: So if without PBS, it will not capture mev, never saying there will be no mev attack to the users, what do you think about that? Is PBS making the network more centralized? So, yeah, it's a good question. And so what I would say is.
00:32:20.682 - 00:32:24.644, Speaker B: That the way I'm describing PBS here.
00:32:24.682 - 00:32:31.076, Speaker C: Is to say that we've made the sort of collusion between the block producers.
00:32:31.108 - 00:32:36.600, Speaker B: And the builders to some extent visible. Like we've said, PBS is a system.
00:32:36.670 - 00:32:52.204, Speaker C: Or this auction which is out of protocol, which is organized under this market called merboost. I'll discuss that amount in a second. Even though this market is out of protocol, we've made it, in a sense, visible. But I think you'd be wrong to.
00:32:52.242 - 00:33:04.192, Speaker B: Say that if you didn't have this market, you would not have mev first, because as I've discussed, you can always extract mev imperfectly by, for instance, making.
00:33:04.246 - 00:33:30.952, Speaker C: These races these priority gas auctions, trying to bid for the bundling inclusion via these mempool races. So if you don't have this infrastructure, you can still do mev. It's imperfect and it has a lot of negative externalities of a network. But also, if you didn't have these structures in public, it would not be hard for people like builders who have a lot of economic sophistication, to just.
00:33:31.006 - 00:33:33.900, Speaker B: Approach trusted Validators.
00:33:35.920 - 00:34:09.140, Speaker C: For the right to make the block. So if I'm coinbase or if I'm lido, if I'm someone that's identifiable, I can very easily find a set of builders that are willing to make the blocks on my behalf, because these builders are able to extract a lot of juice from the transactions that they have. And so if only trusted Validators are able to engage in these markets, it's also pretty bad. It can have centralizing effects in that the Solo Validators don't participate in that economically valuable activity.
00:34:09.640 - 00:34:12.240, Speaker B: And so when I say economically valuable.
00:34:12.320 - 00:34:18.184, Speaker C: Activity, I really mean it in a agnostic kind of sense of the word. I think you're right to point out.
00:34:18.222 - 00:34:23.976, Speaker B: That a lot of the mev extraction can be performed sort of in.
00:34:23.998 - 00:34:36.528, Speaker C: A zero sum game with the user. So things like sandwiches, they hurt users. And yes, this value then flows to the validators, but the user is hurt in the first place. And I think that's a very important problem.
00:34:36.694 - 00:34:40.864, Speaker B: But to me, it's somewhat orthogonal to.
00:34:40.982 - 00:35:37.352, Speaker C: The problem of the value of block building, I really believe, and there are solutions, and I could discuss them, but it's a whole overto. There are solutions to protect the users from, let's say, unfair extraction of mev. But I think even with these solutions in place, it will still be the case that you will have builders in the system to kind of optimize the block building. I can go more over this, too. Schematically what we're seeing is that searchers are trying to build for their bundles to be included by the builders. And so they are trying to give away some of the mev that they extract to basically win the rights to be included. The builders themselves are competing with one another and so they're also trying to give away some of the mev.
00:35:37.436 - 00:35:38.900, Speaker B: And at the end of the chain.
00:35:39.320 - 00:35:57.226, Speaker C: Currently, the proposals are the ones that are sort of getting that revenue for themselves in practice. What does it look like? So today in improvised tech, there's a few ways that you can make your block.
00:35:57.338 - 00:36:01.614, Speaker B: The first one is not use this builder system.
00:36:01.812 - 00:36:15.998, Speaker C: Just like old school, you have your own mempool. You are listening to user transactions. The user sends them to you and you pack your block based on that. So that's the local block building.
00:36:16.184 - 00:36:18.342, Speaker B: But you also have the opportunity to.
00:36:18.476 - 00:36:32.650, Speaker C: Call upon or to summon this external network of searchers of builders to make the blocks on your behalf. So to summon this external network of block builders. And the way you do that with.
00:36:32.720 - 00:36:35.242, Speaker B: A piece of software called Mavboost, which.
00:36:35.296 - 00:36:54.046, Speaker C: Connects to different relays, and the relays are you can think of them as brokers of the kind of deals that the builders are making with the block proposals. But, yeah, Mapboost is really the auction here. So Mapboost collects the bids from the.
00:36:54.068 - 00:36:57.794, Speaker B: Builders and then tells the validator about.
00:36:57.832 - 00:37:16.694, Speaker C: The bids, let the validator sign the bid that they prefer, typically the bid that is the highest, and then ensures that the block is communicated, that the builders reveal the blocks once the validators have signed them.
00:37:16.892 - 00:37:19.254, Speaker B: So there's a lot of, I would.
00:37:19.292 - 00:38:17.296, Speaker C: Say, intricacies to this design. But I think the main takeaway here is that you have a system where a validator can outsource or delegate the production of the block to that fairly complex supply chain. I think some numbers are interesting, like to talk a bit about the market, because as the question was pointing out, PBS can have centralizing effects. And indeed, when the market started, so the merge happened here, that was September 2022. At the beginning, not that many block proposals were using mev boost. So most of the block proposers were making the blocks by themselves from their own mempool. But you can see that over time, more and more blocks are being made by the external network all the way.
00:38:17.318 - 00:38:19.472, Speaker B: To I think today we have between.
00:38:19.526 - 00:38:38.776, Speaker C: 90 and 95% of the blocks on Ethereum are made by builders, so are made by this external block building network. So this chart here, it shows you the relays. And so at the beginning, the Flashbots relay was the most popular one. So Flashbots is the entity that sort.
00:38:38.798 - 00:38:44.596, Speaker B: Of designed this mevboost platform that started ringing some bells.
00:38:44.628 - 00:39:39.748, Speaker C: It said, oh, there's only one entity that is making the blocks on behalf of everyone. That's kind of bad. And since then, more relays have started appearing and I think that's pretty healthy. Like we're seeing a greater diversification of the relay market. So the relays are really these choke points or these more centralized entities that are brokering the agreements between builders and validators. I want to just put some insight here that I think is yes and no, because underneath the builder, the relayer, they are the same builders. The builders, even you use different relayer, it might be the same builder.
00:39:39.748 - 00:40:22.804, Speaker C: So I put yes and no for that part. Yes, you're correct. And I was going to show you then the same plot, but for the builder and to say, okay, you're right. So very often builders are sending the airblocks to different relays. We are still, I think, seeing a bit more diversification in the builder market. So that market is, in my opinion, very competitive. So a builder that is very kind of like making most of the blocks at one point can in the next day or week, become one of the worst builders.
00:40:22.804 - 00:40:26.760, Speaker C: So it feels like it's a market that's highly competitive.
00:40:27.440 - 00:40:30.264, Speaker B: These days, there's five or six builders.
00:40:30.312 - 00:40:46.624, Speaker C: That are kind of well known. So beaver build, Rsync, dashboard builder, ox 69. So we're seeing a lot of Dynamism in that market. But of course, by the design of this proposal builder question, there is also.
00:40:46.662 - 00:40:49.404, Speaker B: The expectation that the number of builders.
00:40:49.452 - 00:41:16.330, Speaker C: That are active is not that high. It's not going to be 100 different builders that are competitive. At this point, I think we can just only observe the sort of progression of these statistics and observe the players in the market. But I'll have some more arguments about where the risks might be here.
00:41:19.280 - 00:41:27.084, Speaker B: Right, but something I wanted to say is that because all of this market is kind of out of protocol, one.
00:41:27.122 - 00:41:34.700, Speaker C: Of the benefits to some extent is that there can be much greater iteration.
00:41:34.860 - 00:41:37.504, Speaker B: Over the design, because when you put.
00:41:37.542 - 00:41:44.870, Speaker C: Something in protocol, the protocol is very hard to change. You have a long review process. You have to really think through every possible edge case.
00:41:45.640 - 00:41:50.196, Speaker B: Today with this proposal builder separation, and with mev, there is still a lot.
00:41:50.218 - 00:42:10.264, Speaker C: Of unknowns we still don't have. I would say a universally clear definition of even what mev is and what mev regroups as a notion. We still have a lot of uncertainties over what is the best design for this proposal builder separation.
00:42:10.392 - 00:42:12.604, Speaker B: And so by having all of this.
00:42:12.642 - 00:42:17.804, Speaker C: Infrastructure out of protocol, there is a path to iterate over these things that.
00:42:17.842 - 00:42:20.248, Speaker B: Is a bit, let's say easier or.
00:42:20.274 - 00:42:38.336, Speaker C: A bit more iterative than if it would be in protocol. And so, as an example, we are seeing some innovation in the way that relays are operating. For instance, this optimistic relaying, this is mostly developed by Mike Neuter and Justin.
00:42:38.368 - 00:42:43.956, Speaker B: Drake is the idea that to make the market, the relays can sort of.
00:42:44.058 - 00:42:57.812, Speaker C: Get a commitment from the builder, that the builder can stake some amount on the validity of the block and that can improve the latency to send the bid to the proposal. So it's a little in the weeds.
00:42:57.876 - 00:43:00.924, Speaker B: But what I'm saying here is that.
00:43:01.122 - 00:44:13.430, Speaker C: Having this market out of protocol for now does allow some amount of experimentation over what is the best way to organize that separation between the proposer and the builders. And in particular if we notice certain centralizing tendencies or if we notice the market going in a direction that seemed less healthy. I think having this infrastructure not in the protocol yet does allow some amount of experimentation and some amount of iteration over what's the design that makes the most sense then. It's of course impossible to talk about this without talking about some of the risks. And the first risk, and I would say the most publicized, is the risk of censorship. And that plot, I'm sure most of you have seen it, but it's the number of blocks that are complying with the American sanctions list. So these lists say that there are some transactions that shouldn't be included in certain blocks for builders or for relays that are hosted in the United States.
00:44:13.430 - 00:44:19.880, Speaker C: Typically these relays or these builders don't want to make blocks or relay blocks that contain these transactions.
00:44:20.220 - 00:44:22.504, Speaker B: At the peak, I think it was.
00:44:22.542 - 00:44:45.148, Speaker C: Something like 75% of the blocks were censoring, were leaving these transactions out of their blocks. It has been better since then, mostly due to the diversification of relays and builders. But I think it would not be fair to say that the risk has been eliminated.
00:44:45.324 - 00:44:47.664, Speaker B: This risk of censorship is to some.
00:44:47.702 - 00:44:55.388, Speaker C: Extent always inherent in the design of this proposal builder separation.
00:44:55.564 - 00:44:59.216, Speaker B: And to give a bit more, let's say, context to that is the Ethereum.
00:44:59.248 - 00:45:35.760, Speaker C: Protocol tells you you should include any and all transaction which pays the fee. And this is, let's say, the net neutrality argument of the Ethereum Protocol. Since the protocol delegates the operation to the proposer, individual proposers, they may want to censor transactions. But because you have a very large decentralization of a validator set, because you have many entities running validators, it's very clear that at some point someone is going to include your transaction. So you want to rely on the decentralization of a validator set to provide that censorship resistance.
00:45:36.100 - 00:45:41.084, Speaker B: But now if proposers evalidators, start outsourcing.
00:45:41.132 - 00:46:43.796, Speaker C: The block production to much less decentralized agents, to the builders, then you might have a problem here because the builders themselves, they may want to censor individual transactions despite the proposer being neutral about this censorship or even having a preference for not censoring. And so that's one of these agency costs in this principal agent framing that the builder potentially, since they are a very sophisticated entity, they may even have some kind of legal structure, and they may have different preferences over the inclusion or not of transactions that are potentially censored. And so there are solutions to that. Some of it is still under research, something called inclusion lists that may force the hand of a builder or may help reestablish some kind of control over the builder network so that you don't entirely outsource the production of the block. But what the research is sort of.
00:46:43.818 - 00:46:46.696, Speaker B: Telling us is that these solutions can.
00:46:46.718 - 00:46:53.800, Speaker C: Be worked out in these out of protocol markets, but it does work better if the protocol is involved.
00:46:57.310 - 00:47:00.990, Speaker B: I think I'm a bit over time.
00:47:01.140 - 00:47:06.558, Speaker C: Peter, I don't know if you no, it's all good. Okay.
00:47:06.724 - 00:47:09.150, Speaker A: Everyone's happy to keep on going.
00:47:09.220 - 00:47:12.670, Speaker C: Please. I have something like maybe ten minutes.
00:47:12.740 - 00:47:14.078, Speaker B: More, but let me know if there.
00:47:14.084 - 00:47:24.020, Speaker A: Are questions that's not at all I mean, I'm sure people will be happy to do questions starting at the top of the hour. Yeah, it's very interesting. So please go on.
00:47:24.570 - 00:47:30.402, Speaker B: Good. Thank you. All right, so we have this separation.
00:47:30.466 - 00:47:34.486, Speaker C: Between proposal and builder, mostly due to.
00:47:34.508 - 00:47:37.180, Speaker B: The fact that it turns out that.
00:47:37.550 - 00:47:57.760, Speaker C: Building blocks, properly building blocks in a way that provides, let's say, the most economic value, is actually a fairly complex task. And so when the task is complex, we observe this division of labor between the proposal on one hand and the builder on the other hand. And in this section, I want to.
00:47:58.690 - 00:48:02.846, Speaker B: Apply that framing to different pieces of.
00:48:02.868 - 00:48:14.662, Speaker C: Infrastructure that we're starting to see appeal and to try and provide a registry of where are these problems happening. And my sort of leading question here.
00:48:14.716 - 00:48:20.770, Speaker B: Is what exactly is the role of the protocol in that environment?
00:48:20.850 - 00:48:26.630, Speaker C: So right now, the proposal builder separation is happening entirely out of the protocol.
00:48:28.510 - 00:48:32.394, Speaker B: Basically, schematized here, the Ethereum protocol has.
00:48:32.432 - 00:48:53.038, Speaker C: This limited control over the Validators. And since, as I was saying earlier, the block ordering is not really under the purview of the Ethereum Protocol, the validators have taken advantage of that to delegate that function to the builders who are now making the blocks on behalf of the validator.
00:48:53.134 - 00:48:56.494, Speaker B: So the question is, should we extend.
00:48:56.542 - 00:48:57.774, Speaker C: The boundary of a protocol?
00:48:57.822 - 00:49:00.370, Speaker B: Should we make it so that the.
00:49:00.440 - 00:49:31.774, Speaker C: APO protocol has a view of what is happening on that builder network, can control it? And can potentially enforce certain mechanisms on that infrastructure. So this is a little schematic. There are designs that are discussed and there's a lot of research being done on exactly the ways that this control should be entrenched. But I mostly want you to see.
00:49:31.812 - 00:49:35.726, Speaker B: That, let's say, mental model of where.
00:49:35.748 - 00:50:00.294, Speaker C: Do we decide to draw the boundary of the protocol? And though it may seem clear to some where that boundary should be drawn specifically for that proposal builder separation, we are starting to observe just more and more and more infrastructures that have to do with the core job of the validators. And so the question is, where does it stop?
00:50:00.412 - 00:50:03.974, Speaker B: If we decide to make builders first.
00:50:04.012 - 00:50:12.860, Speaker C: Class protocol agents, why might we not want to do the same for other things that we are starting to see?
00:50:16.350 - 00:50:20.614, Speaker B: Right, so we have here this map.
00:50:20.662 - 00:50:48.194, Speaker C: And I will add more to the map here. So validators are delegating to the builders the role of block construction and in exchange, the builders are kind of forwarding to the validators, the block space revenue, even in the builder layer itself, we are starting to see some innovation. One of them is Suave, but more generally, this idea of decentralizing the builder role.
00:50:48.322 - 00:50:50.626, Speaker B: So, as I was saying, because builders.
00:50:50.658 - 00:50:54.040, Speaker C: Are centralized, there are potentially many.
00:50:56.090 - 00:50:56.502, Speaker B: Bad.
00:50:56.556 - 00:51:02.426, Speaker C: Things that can come from that. One of them is censorship. So if the builder role itself could.
00:51:02.448 - 00:51:05.706, Speaker B: Be more decentralized, you wouldn't have kind.
00:51:05.728 - 00:51:21.674, Speaker C: Of this one bottleneck that prevents certain transactions from happening. The block would be made by a decentralized set of builders that sort of aggregate things together and that could improve censorship, resistance.
00:51:21.802 - 00:51:30.302, Speaker B: But also you could build in the builder itself things like mev protection per user.
00:51:30.366 - 00:51:58.202, Speaker C: So you could make it such that whenever the user sends a transaction, if the transaction exposes some kind of mev, the builder provides guarantees to the user that the user's transactions will be treated properly, like will not be extracted from, or if it is extracted from that some of that value is rebated to the user. And it's a bit hard to do if you are a centralized builder, you can sort of promise that you won't do things.
00:51:58.256 - 00:52:01.498, Speaker B: But this is crypto and we don't.
00:52:01.514 - 00:52:33.240, Speaker C: Want to just rely on promises. And so what these people are trying to build is infrastructure that commits the builder to some kind of block building routines. And so in particular, you could commit to node front running users, you could commit to ensuring that the user transaction contents are private all the way until the block is being made. And so this is definitely a very exciting research to be done here.
00:52:33.930 - 00:52:37.526, Speaker B: And so, yeah, what we're seeing here is that the networks of builders, they.
00:52:37.548 - 00:53:17.374, Speaker C: Get more complex and you might have things like Suave that are decentralizing, that builder role, and Suave itself might start communicating with other domains. So another thing that I'm not talking about is, Ethereum is not alone. There are many other chains, including chains that are not part of the Ethereum cluster. So things that are not roll ups, you have Cosmos, Solana, there are often people who want to do things on both chains at once. They want to perform arbitrage between a market on Ethereum and a market on Cosmos. And the idea of these decentralized builders is that they can also perform this cross domain med.
00:53:17.512 - 00:53:19.138, Speaker B: But again, that's a different topic.
00:53:19.154 - 00:53:20.646, Speaker C: So I will leave it here, but.
00:53:20.668 - 00:53:22.754, Speaker B: Just to say, the network of builders.
00:53:22.802 - 00:53:52.270, Speaker C: Itself is definitely not a monolith and it can be decoupled further by decentralizing that builder role. Another type of infrastructure that's currently mostly out of protocol, in the sense that the protocol doesn't really have a notion that this exists, is liquid staking. For instance, Lido rocket pool Diva, which hasn't launched yet, but is also an interesting take on the liquid staking design.
00:53:52.420 - 00:53:56.026, Speaker B: And in that case, the Validators, they're.
00:53:56.138 - 00:54:20.134, Speaker C: No longer the principles, they're no longer the ones sort of making the decision, but the Validators become the agents to a set of token holders or to a set of depositors. And so let's say if I am staking with Lido, I'm sending some stake to Lido, maybe I am participating in the Lido governance with the LDO token.
00:54:20.262 - 00:54:27.354, Speaker B: But Lido is contracting Validators to run.
00:54:27.552 - 00:54:29.518, Speaker C: The validation for themselves.
00:54:29.604 - 00:54:33.242, Speaker B: And so now the set of token.
00:54:33.306 - 00:55:07.722, Speaker C: Holders or the set of parties that are involved in this liquid staking starts having some amount of control over the Validators. And so you have this principal agent relationship between the liquid staking infrastructure and the Validators that are bonded to the Ethereum protocol. And in exchange, of course, whenever you have delegation, in one sense you do that because you expect some kind of profit coming to you from the other direction. So the Lido token holders, the people who stake with Lido, they all expect.
00:55:07.856 - 00:55:11.094, Speaker B: To receive some of that protocol revenue.
00:55:11.142 - 00:55:20.638, Speaker C: So the potential misalignment between what the Ethereum protocol wants and what the token holders of this liquid staking infrastructure wants.
00:55:20.804 - 00:55:28.894, Speaker B: Is also, I would say, interesting. But I will leave it at that. Another thing that is being talked about.
00:55:28.932 - 00:55:33.022, Speaker C: Quite a lot, it hasn't formally launched, but I think the idea is very simple.
00:55:33.076 - 00:55:36.046, Speaker B: It's the idea that Validators may submit.
00:55:36.078 - 00:55:47.634, Speaker C: Themselves to additional slashing conditions in order to receive extra. For instance, as a validator who has locked up 32 E in Ethereum, I could say I have this capital at stake on Ethereum.
00:55:47.762 - 00:55:51.670, Speaker B: And if I can submit myself to.
00:55:51.820 - 00:56:08.442, Speaker C: Additional slashing conditions that are not enforced by the Ethereum protocol but that are perhaps enforced by smart contracts deployed on Ethereum, I can convince people that I'm putting my stake more at stake. In a sense, it's the same idea.
00:56:08.496 - 00:56:10.622, Speaker B: As taking a second or a third.
00:56:10.676 - 00:56:14.026, Speaker C: Or a fourth mortgage on your proof of stake stake.
00:56:14.138 - 00:56:17.630, Speaker B: And so if you have these applications.
00:56:17.970 - 00:56:30.466, Speaker C: That are trying to secure themselves, for instance, even other chains or middleware or other applications when they're trying to secure themselves, it can be a high capital cost. And so the idea is to say.
00:56:30.568 - 00:56:33.250, Speaker B: As a validator, I can go through.
00:56:33.320 - 00:57:13.390, Speaker C: This application called Eigen layer, or this protocol, tell Eigen layer I'm willing to add this additional slashing condition. So I'm willing to give you the promise that I will secure that chain. And if I don't secure it properly, you can slash me on my protocol chain, on my protocol stake. And so this idea of restaking is kind of powerful. And because we are in a permissionless environment, we can't really prevent validators from going around and using their Ethereum protocol stake to secure other applications.
00:57:14.210 - 00:57:16.734, Speaker B: But to some extent, there are also.
00:57:16.852 - 00:57:46.634, Speaker C: Potential misunderstandings because now if I'm the Ethereum protocol, I see your stake is not just securing me, it's also securing other applications over which I don't have any control or visibility. And in particular, if these applications are slashing you, I might not have a full view of exactly how much you are staked with myself, the FA protocol. And so that has very interesting questions that we are currently trying to think about seeing.
00:57:46.672 - 00:57:50.010, Speaker B: The question, does restaking fail?
00:57:50.590 - 00:57:57.022, Speaker C: Does fraud on more than one chain? So the stake can be slashed twice, but the idea of Eigen Layer is.
00:57:57.156 - 00:57:59.902, Speaker B: You'Re kind of keeping track of when.
00:57:59.956 - 00:58:57.558, Speaker C: The stake is being slashed. The Eigen Layer smart contract has to be, let's say, a good citizen and make sure that you can't be slashed for more than you actually have at stake. But that accounting is, in my opinion, a bit understudied at the moment. So it's also because Eigen layer hasn't launched and there may be things that they have in mind that we don't have full information on yet. But it's clear that there can be a misalignment between the Ethereum protocol, what it sees as the current stake of a validator, and Eigen Layer, which is keeping track of the real stake that the validator has in the system. Hopefully, you can't slash the same thing twice, but you can slash the same amount by two different amounts that don't add up to the full stake. And so now you have Eigen layers.
00:58:57.558 - 00:59:14.658, Speaker C: So the validators are kind of signing up to this new thing. They're taking on more duties based on the stake that we have in the Ethereum protocol. In exchange of taking on these extra duties, they're getting extra rewards, but they're also getting more risk.
00:59:14.754 - 00:59:16.986, Speaker B: And again, this is something that the.
00:59:17.008 - 00:59:41.310, Speaker C: Ethereum protocol doesn't really have control over. And in fact, Agon Layer, I think, is very powerful and it can be deeply intertwined with other parts of this, let's say out of protocol infrastructure, notably the network of builders or even the liquid staking components.
00:59:41.830 - 00:59:46.002, Speaker B: So, yeah, it can become systemic, but.
00:59:46.056 - 00:59:59.510, Speaker C: It also has, I would say, some positive benefits that it does allow a bit more experimentation in terms of the kind of designs you can do even for the builder network or for the liquid staking.
01:00:00.970 - 01:00:06.466, Speaker B: Okay. And then finally another class of infrastructure which is not entirely out of protocol.
01:00:06.498 - 01:01:19.514, Speaker C: But it's roll ups like roll ups are secured by the layer one, they pay for data availability to the protocol and they also require sequencers or builders to make their blocks. And so roll ups themselves, they're kind of replicas of a validator problem. As you may know, Ethereum is moving heavily in that rollup centric direction. And so that means that now you have on top of that graph the roll ups that are starting to themselves have relations with the network of validators who publish the data for them, have relation to the network of builders because the roll ups are going to need people to make the blocks for them. Might even have relations to eigen layer. There's been recently proposals around having roll up sequencers calling builders and the sequencers themselves are staked via eigen layer. So you're starting to have this very complex mesh of relationships and all around you have all of these principal agent problems popping up because everybody is kind of relying on another party to do something on their behalf.
01:01:19.514 - 01:02:16.580, Speaker C: So when I present this plot, I often find myself feeling a bit like I'm drawing these lines and trying to tell you about this major conspiracy. But I don't think it's a conspiracy. I think it's a very natural, almost evolutionary transformation of the infrastructure in the sense that things are getting complicated. There's a lot of value flowing in different parts of the ecosystem, so it does make sense to have some kind of separation of duties. But since we are building centralized systems and since we don't necessarily have control or perfect control over the agents that we delegate things to, I think it's worth taking a step back and trying to understand exactly how does this complex web of relationship affect the incentives that validators have and what is the role of the ethereum protocol in that world?
01:02:17.990 - 01:02:19.234, Speaker B: That was it.
01:02:19.432 - 01:02:29.240, Speaker C: Thank you for listening. I have a bit more thoughts on PBS. They are available at this blog post and yeah, I'm happy to take questions now.
01:02:33.380 - 01:02:53.930, Speaker A: So thank you very much for that really interesting talk and I'm sorry that my background is a bit dark here. It's gone into evening and there's no lighting above. Anyway. Yeah, where to start with the questions? So does anyone have any questions? Anyone else have any questions?
01:02:56.950 - 01:03:23.100, Speaker D: Yeah, I just have a question, but that's going back to quite a few slides back. By the way, when you talked about the EIP 4844, I was just wondering, with the gas cost for data, sort of like execution gas and data gas, is there a big distinction between the costs of those?
01:03:24.830 - 01:03:44.260, Speaker C: Do you mean the prices? Would the price be different? Yes, that's actually an interesting question and someone in our team has been thinking about it recently, has posted something on if research about that which I could quickly find.
01:03:44.630 - 01:03:48.078, Speaker B: But the main idea is roll ups.
01:03:48.174 - 01:04:19.900, Speaker C: Today are probably not processing as much transaction as would be needed to completely kill the data gas market. So in the sense that whenever four eight four launches, it will probably launch with an oversupply of data gas and so the price of that data gas should be relatively low for roll ups who want to post the data. I don't know if that answers your.
01:04:22.750 - 01:04:25.450, Speaker D: Okay, yeah, the fee marketing.
01:04:28.450 - 01:04:29.150, Speaker B: Thank you.
01:04:29.220 - 01:05:03.020, Speaker C: Yeah. Another thing to understand is the data gas properties are very different from the execution gas properties. So you can think of it as raw data and it's not really actionable. You can build be, I guess, second layer of protocols that kind of build on this data gas, but it has a very different shape and flavor from the execution gas. So people can't use that market to do much more than posting that raw data.
01:05:06.030 - 01:05:26.610, Speaker D: And so the whole idea then with the Eigen, the whole concept of restaking is the whole drive behind that to have extra yield. Is that the motivation for that? Mainly.
01:05:28.790 - 01:05:51.226, Speaker C: It'S certainly, I would say, the motivation for validators to participate in that system. They would sign up to secure these other applications so that I think they can get more yield, they can get more reward from securing that.
01:05:51.328 - 01:05:54.106, Speaker B: From the agony's perspective, I think the.
01:05:54.128 - 01:05:56.474, Speaker C: People who are building that, they're also.
01:05:56.512 - 01:05:59.590, Speaker B: Pointing out that it can be a.
01:05:59.680 - 01:06:20.674, Speaker C: Way to bootstrap some of the security of the protocol to develop middleware. So things that are not exactly entirely out of protocol but that are not also entirely in the protocol. So things that live a bit more in this, let's say gray zone and.
01:06:20.712 - 01:06:23.986, Speaker B: That can be profitable in that you.
01:06:24.008 - 01:06:33.314, Speaker C: Can do a lot of experimentation to some extent you can have this, they call it permissionless innovation of the protocol layer.
01:06:33.362 - 01:06:36.914, Speaker B: So you can build this deeply tied.
01:06:37.042 - 01:06:49.610, Speaker C: To the protocol infrastructure in a way that the protocol has some amount of control over it but not enshrine the application itself at protocol layer directly.
01:06:51.470 - 01:07:03.070, Speaker D: It's the first I've heard of Eigen layer concept. So is that happening at the moment or is that something that's been proposed or what's the status?
01:07:03.590 - 01:07:11.620, Speaker C: My understanding is that they are planning to launch this year. They released their white paper recently, which is a very interesting read.
01:07:13.030 - 01:07:13.634, Speaker B: Yeah.
01:07:13.752 - 01:07:56.580, Speaker C: So I would expect that they would launch relatively soon. But in the meantime they've published a lot of designs. For instance, how eigen layer can help securing a bit more or imposing, let's say more structure over the network of builders. And in particular you could have designed that improve the censorship resistance. They've published something about the Eigen layer being used to secure data availability engines for poll ups so there are some literature around what the system can do but it's not to my knowledge deployed on ethereum today.
01:07:58.550 - 01:07:59.540, Speaker D: Thank you.
01:08:02.870 - 01:08:05.590, Speaker A: Is there any last questions?
01:08:05.740 - 01:08:07.174, Speaker C: Peter, hi.
01:08:07.292 - 01:08:08.486, Speaker E: Can I ask one question?
01:08:08.588 - 01:08:10.200, Speaker A: Yeah, please, go for it.
01:08:10.650 - 01:08:14.440, Speaker E: Hi Bernabe, thanks for the really, really, really amazing.
01:08:15.450 - 01:08:15.974, Speaker C: Thank you.
01:08:16.012 - 01:08:48.530, Speaker E: I know you have a really good sort of economic outlook point of view towards the ethereum, I mean the reward structures and things like that. So this is like a random thought experiment which I have and I would sort of like to get validated by you. So for example, is there a possibility that let me frame that properly. Is there a possibility for proposal builder collusion proposer centralization?
01:08:49.590 - 01:08:50.002, Speaker B: Why?
01:08:50.056 - 01:09:50.840, Speaker E: Because assume there is a cap at the number of validators who can stake in the system. Why is that? Because if you assume different sort of reward structure which is validator payments, mev payments and on a longer horizon eigen layer yield. So for example if say it averages at like 6% for the 50 percentile and the yield and the yield outside the system is the same thing. So some centralized sort of proposers or builders or actors could pretty much cost out a lot of normal altruistic sort of validators and once they have sort of enough critical mass they could probably not try to reorg or poke the chain but extract more mev through that system was able to convey the message.
01:09:51.610 - 01:09:52.360, Speaker B: Yes.
01:09:54.650 - 01:10:29.886, Speaker C: So if I rephrase also to make sure that I understand correctly is you're saying that eventually validators start getting yields from different places like transaction fees, mev eigen layer the more validators enter the system the lower kind of the base reward becomes. And so to remain competitive as a validator you kind of have to be fairly savvy or fairly sophisticated. Sign up to all these different things, extract mev as much as possible, extract.
01:10:29.998 - 01:11:43.014, Speaker E: From just a little bit correction to that it's not like because they have to be savvy. What I'm saying is so for example, obviously we do not have enough data but over a one year horizon let's say we have like a clear sort of 50 percentile sort of yield which is the addition of the validator payments, mev payments, eigen layer which is not we don't know how much it is. So we'll just consider these two and second the beta value of ethereum, right? And these three addition will sort of converge with the yield curve of ethereum itself. So for example, assume that somebody is borrowing to stake or somebody is for example buying ETH to stake. So they are having a sort of cost of capital to this thing. So if there is more validators in the system the rewards go down. So the normal single stakers or altruistic stakers might pretty much get priced out and some central actors could pretty much take up major chunks of these proportions and then they could act maliciously but not.
01:11:43.014 - 01:11:54.720, Speaker E: Entirely because of Gaspar, they would get slashed eventually. But if they just do normal sandwiching and I mean, maybe multi block mev or something like that.
01:11:57.890 - 01:12:48.078, Speaker C: I think you're pointing out that the more validators enter the system, the harder it is to stay competitive as a small validator. Partly it seems you're saying that's also because of the variance of the yield. Like I might be getting highly high yield if I'm looking, but I might be getting low yield as well, and that variance is higher if I'm a smaller validator. I think you're pointing out a lot of centralizing process. So one is variance, the other one is competition over limited yield. And as you're saying, the more validators enter the system, the lower are the protocol provided rewards for each validator. That's another centralized course.
01:12:48.244 - 01:13:01.220, Speaker E: So if the validators are rational, they would ideally not go for lower yield and they might just exit the system and just take the normal yield for the market from the market without actually having any.
01:13:05.190 - 01:14:11.766, Speaker C: Yeah, I think that's a correct analysis and it's something that actually we're thinking about a bit and Sandra has been also thinking about to some extent. So there is this idea of at some point capping the number of validators and having maybe a more floating sort of enterprise to become a validator. And that can have these effects that you describe, where now validators have to compete over this limited yield. And if they find that the market outside offers them better yield, they might get discouraged from participating in the Ethereum protocol. And then if they are discouraged, it's much easier for large parties to take over the validator set and eventually impose whatever rules they want, under of course the constraints that they may be slashed if they do. So I would say to that there are ways that you can maybe soften the centralization pressure. So one idea, for instance, is the idea of mev bur or mev smoothing.
01:14:11.766 - 01:15:04.780, Speaker C: So when I was showing this plot of a value flowing from searcher to builder to validator, you could actually add like an extra cup here, which is Ethereum protocol, so you could make it such that the validators are forced to give the rewards they are getting to the Ethereum protocol. And then the protocol could decide, okay, we are burning these rewards the same way we are burning the EIP 1559 base fee. And so that already lowers a little bit the pressure because mev can be very bursty. So sometimes you get like a ton of mev and most of the time you get not that much. And so that can lower both the variants and you can lower a bit the pressure of this extra that is added on top of the block we want.
01:15:05.790 - 01:15:33.140, Speaker E: Yeah, I think it can fight the sort of validator, it smooths out the validator payments. But for example, if there's a higher proportion of malicious actors between, for example, validators. There's a very good chance of builder validator collusion, but that could not be sort of attributed, I'm not sure, but it was just a thought experiment, so I know it's an open question.
01:15:33.670 - 01:16:17.250, Speaker C: Yeah, question of vertical integration and not just at the builder and proposer layer, but even at the user to searcher or wallet to searcher. So vertical integration is, I would say, one of the big open questions that we have for every layer of this market. And things like Mev berm they're supposed to kind of bust the collusion between builders and proposers because you can't cheat the protocol if the protocol has a view of what the builders are bidding and if there's no way for you as a builder to go around that it makes the collusion between builders and proposals much more complicated. But yeah, this is another topic.
01:16:17.990 - 01:16:25.620, Speaker E: Yeah, that's amazing. Yeah. Keen to sort of also know that where to get in touch with you, like generally to ask these kind of questions.
01:16:26.790 - 01:16:53.840, Speaker C: I would say I'm pretty reachable either on Twitter. I also have my email address here. Yeah. If you find me, I think I can reply. We also have now a server where we are talking about some of the open questions that we have, the RoPS. I can send a link in the chat to Matt. Yeah, that'd be amazing.
01:16:54.610 - 01:16:56.334, Speaker E: Thank you for the answer though.
01:16:56.532 - 01:17:02.382, Speaker C: Yes, thank you for that was a great question. Thank you.
01:17:02.516 - 01:17:04.320, Speaker E: Thanks Peter, for putting this together.
01:17:06.130 - 01:17:06.638, Speaker C: Awesome.
01:17:06.724 - 01:17:23.990, Speaker D: Well, thanks Barbay, for coming along. I think Peter's just switching over to his phone. So I was wondering, Barbay, would you mind going on to just the last few slides that Peter has asked you to put on just about the upcoming talks.
01:17:26.010 - 01:18:18.040, Speaker A: And I can talk to them actually just very so in a week's time I'm doing a talk on assembler, essentially. So how to you can write code directly in the assembly language that you see in Solidity or talk about inline assembler and I'm going to talk about how to jump between one function and another function without a function call and how to do that sort of scary stuff. And look, we've got a whole stack of talks coming up and they're all going to be very interesting and I think that's enough. So, look, Bartabay, thank you for doing an awesome talk and have a great day in Europe and I guess everyone here in Australia have a great evening. So talk to everyone later.
01:18:18.570 - 01:18:20.998, Speaker D: Bye and thanks Barnabay, that was awesome.
01:18:21.164 - 01:18:22.918, Speaker C: Thank you, Peter. Thank you everyone.
01:18:23.084 - 01:18:24.114, Speaker B: Thanks. Bye.
