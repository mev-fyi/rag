00:00:00.090 - 00:00:18.474, Speaker A: Um. Da da da da. I love intro music at conferences. It's incredible, by the way. I had a whole, like, intro thing planned or something that I was gonna say, but I just gotta say, like, reiterate, what, what she just said, that was awesome. I'm. I'm a huge fan.
00:00:18.474 - 00:00:41.734, Speaker A: Like, let's please your unique backgrounds. It is incredibly important. I was gonna talk about that at the end of my slides. Now I'm talking that at the beginning it. Anyway, my talk is on scaling crypto economics and also a plasma primer. So let's dive right in. So, this is a map of human knowledge and consciousness.
00:00:41.734 - 00:00:55.482, Speaker A: We have science like physics equals MC squared. That is a meme. We have computer science. We have philosophy. We've got all these different disciplines. We've got history. We have cryptography, we have economics.
00:00:55.482 - 00:01:04.570, Speaker A: I wonder if you know where this is going. Well, right on this. Right there. Right there. Precisely. There. No other place there is crypto economics.
00:01:04.570 - 00:01:32.890, Speaker A: This kind of very weird, weird thing. It's like an innate idea kind of signal. And so what we have is it is a kind of combination of cryptography and a combination of economics and a combination of distributed systems. It's pulling in a lot of ideas, maybe even some philosophy in there, too. But absolutely no history, because why look back. We, like, mistakes are better the second time. And why physics? There are no physical limits in the crypto space.
00:01:32.890 - 00:02:01.570, Speaker A: Come on, we'll get out of here. Anyway, so we're pulling in all these ideas from different fields to kind of create something pretty cool. What is that? So what does this actually do? We have a bunch of gerbils, and they kind of come. I'm a gerbil person. Hopefully, people know and they're learning about all the different fields, everything that we want to do. And some get into computer science, some get into physics, and hopefully there can be this little flag that says, this is crypto economics. There's something cool here.
00:02:01.570 - 00:02:54.178, Speaker A: Maybe people in this room hopefully think that there's something cool in what we're doing. And so hopefully they can come in and they can get some good ideas and spread that information to different fields, and we can actually influence other fields to really care about decentralization. When we create Internet applications to really make the Facebook 2.0 or something like this, make sure that it's not just a single kind of processor that holds everyone's chat information and holds everyone's private keys, and make sure that video games in the future, maybe they're like assets, or any Internet assets, are not held just by a central operator that can kind of freeze your account, for instance, and instead maybe put it on a decentralized network. Everyone's holding their private keys and encrypting their messages and, oh, my gosh, this is like a dream. This just gets me so excited. It'd be amazing.
00:02:54.178 - 00:03:35.898, Speaker A: And all these assets, maybe they exist on a chain that no one really controls and so no one can actually freeze your account. So maybe, just maybe, we can create the decentralized Internet infrastructure that we all want, that we all know and love. But if we are actually going to spread this information back, there is something that we need to do. Our networks are pretty small, they're pretty relatively wimpy, and if we were to actually have the kind of weight of just the world Internet users on our systems, it would just hold up. No, it actually probably wouldn't work out. 15 transactions per second. That's not going to cut it, right? So we need to scale.
00:03:35.898 - 00:03:42.714, Speaker A: We need to scale up. We need to scale. We need to scale. We need to scale. We need to scale. We need to scale. We need to scale.
00:03:42.714 - 00:03:56.002, Speaker A: It's a shocking number of puns that you can look up for scale. It's incredible. I was shocked. This is a scale bug. Anyway, we need to scale. There's where we are. Prague.
00:03:56.002 - 00:04:10.570, Speaker A: Oh, my God. That's the whole earth, but I'm sure. And here's galaxy. So I created this terrible waste of time website for scale devcon. It's like cookie clicker, but shared. And we can scale. So every time you hear scale, click one on that website, scaledevcon.com.
00:04:10.570 - 00:04:41.750, Speaker A: Anyway, so people are talking about Ethereum 2.0, right? Or serenity. It is incredibly cool. We have all of these, the beacon chain creating all of the regenerating randomness which allows block proposal for these shard chains and committing to finalizing the shard chains. And it's really cool. But in this talk, I'm going to mostly focus on a single chain, maybe plasma. So let's dive in before we have this kind of construction.
00:04:41.750 - 00:05:00.314, Speaker A: I really think that we can have something very cool with plasma. And I'm going to talk about some exciting stuff later on in this talk. So what is plasma in the first place? Let's dive right in. Well, it's an architecture for layer two blockchain secured with an exit mechanism. That's kind of confusing. Doesn't make any sense. Hopefully this will illuminate things a little bit.
00:05:00.314 - 00:05:39.782, Speaker A: And I want everyone to have an idea what plasma is because the entire reason why we're building these systems, what decentralization means is you have a reason to trust the Internet system infrastructure that you're using. We need to establish trust. So you need to know how this kind of stuff works if it's going to be adopted on a large scale. So we have the Ethereum chain, we've got the plasma contract. The plasma contract is deployed to the Ethereum main chain and mined by a miner, right. It's pretty simple so far. This plasma contract has an address, has an ETH balance, and it acts as a kind of judge, as a kind of mediator for all of the funds that it's going to oversee.
00:05:39.782 - 00:06:00.862, Speaker A: And notice that this mediator is deterministic, it is objective. There is no kind of question who's controlling this. It is automatically executed like a robot. Well, in a robot that has no opinions outside of just following orders. So we also have this operator. The operator can be a single entity. It can also be a proof of stake validator set.
00:06:00.862 - 00:06:21.542, Speaker A: It's actually surprisingly easy to turn this into a proof of stake system. So we might as well lock up some coins and do that. So next we have the plasma chain itself. The plasma chain consists on of off chain data. This is where we get our scalability from. This is stored up in the cloud. It's a whole lot of data.
00:06:21.542 - 00:07:15.782, Speaker A: And here it also consists of on chain data like block commitments, as well as deposits and exits. And so this is all on the Ethereum main chain. And the key is that our security actually comes from and derives from the Ethereum main chain. So if the Ethereum main chain is to hold up its properties of censorship, resistance and safety, then what we get is we get the same properties of our plasma chain, we get that same level of security while storing minimal data on the Ethereum chain. And so there's actually something fun that I heard. Well, you can actually achieve this kind of scalability stuff with cryptography just alone using stuff like ZK snarks roll up, and some really cool tech that's coming out soon. But Justin Trake has this saying that I really love, where if you can't use cryptography, then try crypto economics, because the cryptography is very expensive at this moment.
00:07:15.782 - 00:07:44.154, Speaker A: So it's pretty cool. I'm a fan of that little saying. So lastly, we have our users, of course, and so we've got Alice and Bob, Alice on the left, Bob on the right. It's very important that, you know, now we have three steps, main steps for all of these plasma chains. You deposit tokens, you transact on the plasma chain, and then you exit tokens. So first we're going to deposit some tokens. So Alice signs an ethereum transaction, sends it to the miner, the miner mines it, and now it is recorded in the Ethereum chain.
00:07:44.154 - 00:08:12.162, Speaker A: It reduces her eth balance and sends that eth to the plasma contract to control. Sounds good so far. And so now we've got this deposit record. The deposit record is immediately kind of reflected on the plasma chain. It is stored in the main chain. It is a little piece of data, not very expensive, but it's a nontrivial cost of gas, and then that gives us 100 peeth. So this is a kind of plasma chain version of the asset.
00:08:12.162 - 00:09:03.546, Speaker A: And this works not just for ETH, but this works for any arbitrary token as well as ERC 721s. Anything that you want to, any asset works on one of these chains. Now next you can transact on the plasma chain. So Alice creates a plasma transaction, and it's sending to Bob 50 coins, and it's sent directly to the plasma operators or maybe the validators, and created in a, they come to consensus on it, they form a block, and they submit that block to the, create a merkel tree of that block and a compact block commitment. So this is a constant size, basically a hash which is submitted to the main Ethereum chain. That is a commitment to the block, and then the actual block data itself is made available for all users to download. So, notice that the block is currently grayed out.
00:09:03.546 - 00:09:30.606, Speaker A: That's because it's not yet committed to. And so eventually what we will do is we will mine a block on the Ethereum chain with that block commitment, and that will kind of like commit the plasma block to the main chain. And so now we have the security of the main chain. So, sounds pretty good so far. And we now need to update the state. And so we have this pest, and we're going to send it to Bob and -50 plus 50, and we're good. So we've transacted on the plasma chain.
00:09:30.606 - 00:10:11.626, Speaker A: But the point of these plasma chains is we can transact a lot, right? We currently don't scale. We want to scale pretty simple. So what we can do is notice that this transaction process, everything is going on, all the kind of main information is going on off chain, right? It's not actually being committed to the main chain, and there's only a constant size commitment to the main chain. So the larger the block, it doesn't actually affect what you're committing to the main Ethereum chain. So you can instead of having one transaction, you can have a whole lot of transactions. Send them all to the Ethereum plasma operators. They'll create a block, they'll create a Merkel tree Merkel route, and they will submit that block commitment to the main chain.
00:10:11.626 - 00:10:57.866, Speaker A: And so instead of being bound by the Ethereum transaction limit, which is like 15 transactions per second today, maybe 1000 times x that in a little bit. But still, we can already get these massive blocks just by using a kind of sensible crypto economic mechanism like plasma. So how many transactions per second, you ask? Well, we're going to talk about it soon. So the last thing is exiting tokens. Bob wants to exit his coins, and he creates a transaction which is like, I want to exit, sends it to the main chain. The main chain starts out this exit process, and there's seven days for a challenge to be submitted. So essentially what happens is we have this challenge period.
00:10:57.866 - 00:11:41.950, Speaker A: It's seven days, and we wait for, if Alice thinks that this exit is invalid and not actually, maybe it's trying to steal someone else's coins, Alice can send a message saying, this exit is invalid, prove it to this dispute contract, and then the exit will be canceled. But in our case, the exit was just fine. And so it goes through. We wait. And finally, Bob submits a withdrawal transaction, sends it to the main ethereum chain and reduces the balances on the plasma chain, and receives the money on the ethereum chain sent from the plasma contract itself. So this is the general construction for all of these plasma chains. It's pretty cool.
00:11:41.950 - 00:12:45.280, Speaker A: Pretty like all of the plasma designs, whether it be plasma, cash, mvp, et cetera, they all follow the same kind of format, so that's pretty cool. That's pretty cool. Now, unfortunately, this was only one transaction, and there's no point of having a coin on a plasma chain if you only transact it once, because then you're just sending it once, withdrawing it, and the gas cost is like not even, you're not even saving any money. And so we really want a huge number of transactions on these plasma chains. It would be ideal if they could be massive or at least have one humongous plasma chain. That would be so cool, because then we get these cheap transactions for all of the ethereum assets, and we can get them way sooner than we can see, and we'll see how many transactions we actually get pretty soon. So a brief recap of plasma history, right? It's been a crazy journey with a lot of different crazy names ending up with this kind of like, last little plasma thing, which I will talk about.
00:12:45.280 - 00:13:20.522, Speaker A: Anyway, so first it started out with this white paper, right? We're climbing, we're starting the mountain. It had a general idea of the format of plasma, but it was a little bit fuzzy. Didn't feel like you could really implement it just from that spec. And so what happened is Vitalik created this plasma MVP architecture, which was really great. It had a lot going for it, but there were some clear flaws with this spec, and one of those flaws was confirmation signatures, mass exits, and no trustless like lines. So we'll talk about confirmation signatures very briefly. It's a pretty silly thing.
00:13:20.522 - 00:13:45.090, Speaker A: So when Alice sent a transaction and it got committed to the main chain, it turns out that it wouldn't actually be valid yet. In fact, Alice needed to sign a transaction saying, I saw this message and send it directly to Bob. This would make the transaction valid. And to be honest, that is a terrible ux that would be so complicated to implement. You have to sign two things just to send one coin. That's craziness. I don't know.
00:13:45.090 - 00:14:02.266, Speaker A: It was not great. The next one is the mass exit vulnerability. This is the scariest of all, probably. So we have one transaction in this block, and that transaction is red. What does that mean? That means it's invalid. It means that it is spending more money than it actually has. Right.
00:14:02.266 - 00:14:27.758, Speaker A: This is just literally an invalid transaction. Alice is not sending this evil Mallory gerbil nine. Nine coins. That's crazy talk. So what is happening is that transaction maybe gets included into the plasma chain because Mallory and the operator are colluding. Some nasty business is going on. So then Mallory, this evil gerbil, is going to submit an exit of all of those coins attempting to drain the plasma.
00:14:27.758 - 00:15:01.942, Speaker A: Smart contract of all of its money. Right. And it's going to reference that invalid transaction in its proof to the plasma contract. Now, because of the way the plasma contract was designed in MVP, it created this ticking time bomb where everyone had to exit within seven days. And if they did not exit, well, you'll see the people who did exit, they'd get their money back. That's great. But the people who didn't exit time, boom, it would explode, and all the money would be sent directly to the person who had this invalid exit.
00:15:01.942 - 00:15:23.902, Speaker A: Right. So this is extremely bad. If you're, like, asleep for a little bit, then you lose all your money with very little recourse. It's very easy for the plasma operator to just go away and take a whole lot of money. Now it gets even worse. We're talking about a massive plasma chain or a couple massive plasma chains. So in that case, we have a huge number of users.
00:15:23.902 - 00:15:49.446, Speaker A: And if a huge number of users are all trying to submit exits within seven weeks or seven days, maybe that's not enough time for all of them to be processed. And so if you thought cryptokitties clogged the ethereum network, my goodness, this would be a nightmare. It just breaks the whole system. You literally can't scale up to this point. So it's gone supernova, game over. Let's try again. So no trustless like client.
00:15:49.446 - 00:16:46.186, Speaker A: This is another important piece we remember had this, because this ticking time bomb exists. We need to check, every user needs to check that there isn't an invalid transaction included in our block, which means they need to download and process every single transaction looking for that single invalid transaction. This is a serious problem because it's great that they can exit, but the thing is that downloading and processing every single block, if those blocks get really big, creates a huge bottleneck. And so instead of getting tons of transactions per second, we have to download everything. And so that means maybe a hundred transactions per second, maybe a thousand transactions per second, but it's very limited by the client's ability to download the transactions, so that's not good. Next, more viable created. And Kelvin and Ben Jones actually created this spec that iterates on the MVP and removes those confirmation signatures.
00:16:46.186 - 00:17:06.638, Speaker A: Thank goodness. That was needed to go. Needed to go. But then there was also this plasma cache's plasma ridiculousness. Pretty silly, but nonetheless, plasma cache came out. And so that actually got us a little closer, I would say. And so that kind of mitigated this mass exit vulnerability, and it also gave us a trustless lite client.
00:17:06.638 - 00:17:58.358, Speaker A: So we'll look at how this kind of works. What we did with plasma cache is we said, okay, each transaction is going to specify an index in a Merkel tree, which corresponds to a unique asset at that index. And what that means is that gives us these kind of single assets at every single leaf node of this Merkel tree. And so exits will specify the particular coins that you are trying to exit, and challenges will kind of refute that particular coin in that particular index in that particular Merkel tree. Particular. And so we have multiple, this actual information, I won't go into details, gave us enough information to cancel exits if they're invalid. Instead of forcing everyone else to exit, you just respond, proving to that plasma contract that the exit was invalid, that the transaction was invalid, and we canceled the exit in the first place.
00:17:58.358 - 00:18:23.622, Speaker A: So this meant that not everyone needed to submit an exit before that time limit. One person needed to submit a cancellation of that invalid exit. So that's pretty cool. And by the way, a deposit is burned to kind of like pay for the trouble. So no rust to exit and the attack failed, thank goodness. But there is more. Thankfully, we also have a trustless light client.
00:18:23.622 - 00:19:07.738, Speaker A: This is actually pretty cool. So remember that the reason why we had to download everything is because we didn't know where in the block that invalid transaction would be located. But because we have a particular coin id for every coin that we care about, that means that if Alice owns maybe five different coins, Alice is only going to download five different merkel trees. Or in this case, Alice owns one or two coins and they only need to download those particular trees. And so now we can scale the block sizes up and the amount of download, like the size of the download scales logarithmically, which basically means you can scale it exponential logarithmic. It's an amazing thing if you don't know logarithmic. Oh God, I love it.
00:19:07.738 - 00:19:33.346, Speaker A: Anyway, so that means maybe 1000 transactions per second, or maybe even like 10,000 transactions per second. It's pretty good. With this light client. However, unfortunately, we introduced another bottleneck. Really sad. We have these huge transaction history proofs, which means is that if you're downloading the history for your coin, you need to download that history for every single block that's ever published. And that means downloading a huge amount of information.
00:19:33.346 - 00:19:54.282, Speaker A: And so with like 1000 transactions or 10,000 transactions per second, there could be like a gigabyte of history per coin, which is crazy. It literally just doesn't make sense. Once again, it breaks the whole thing. It's insane. It's very sad. So that's a problem. The other issue is that we now have, there's no fungible token support, no good fungible token support.
00:19:54.282 - 00:20:29.222, Speaker A: So the idea here was, okay, every single coin has, every single index has a different unique asset. And so maybe you have a few dollars in some of the indices, and maybe you have a $5 bill at another, or maybe $100 bill. So if you want to send $106, you have to send three transactions with a five and a one and 100. This is like a usability nightmare, to be quite honest, and just doesn't work. Once again, for wallet software, it's like pretty bad. So yet again, another issue, another big leap that we have to hurdle. We're getting closer, but we're still not there.
00:20:29.222 - 00:21:06.980, Speaker A: So plasma debit came along Dan Robinson, super, super awesome kind of addressed this no fungible tokens issue with combining state channels and plasma, and that got us significantly further. It also helped with the transaction history proofs. So this was along the right path. It was getting there. But then a couple posts by Vitalik and 17 plasma implementers calls later, my God, these have been crazy. And yet another plasma, thank goodness, plasma prime. I would say.
00:21:06.980 - 00:21:45.082, Speaker A: I feel like we have finally hit the peak of a mountain, and it is very nice and some sun is coming up. I have felt, to be honest, all of the research leading up to now, there's always been like that glaring issue that you really wanted to solve. But plasma prime, it's looking downhill. It's looking downhill. I'm very excited, as you can see. So what does it do? Well, it addresses this no fungible tokens issue with just replacing all of the leaf nodes with a single denomination. And instead of having a single, like a small merkel tree of a bunch of non fungible assets, we have a huge merkel tree.
00:21:45.082 - 00:22:30.710, Speaker A: And our sends, they specify a range of tokens. And so if I'm going to send you some coins, I'm going to send you tokens zero through 105. And so this preserves our property from plasma cash, that we get a light client support, but it also allows us to get this fungible token support. So it's actually pretty cool. And we have the same simple challenges that we have in plasma cash, so we get to build on that research. Another thing is, it addresses the huge history transaction proofs with some RSA magic, which you can learn about in a plasma implementers call that we had recently, as well as a few blog posts by Vitalik. You can actually prove that there were no coins transacted in a long range of blocks with a single proof, a single witness.
00:22:30.710 - 00:23:17.882, Speaker A: And so what does this mean? This means that as a user, if I don't transact my coin, I can just download one piece of information that kind of covers the entire range of blocks and proves that I have not transacted my coin for maybe 100 or maybe 1000 blocks. So that saves us 100 or 1000 or way more Merkel tree branches that we would have needed to download otherwise. So we're back down to a reasonable size, kilobytes, maybe a megabyte, whatever, transaction history. So our transaction history, instead of growing linearly with the number of blocks that are being added to the plasma chain, it's growing linearly with the number of times we transact that particular coin. Much more reasonable. So this 10,000 transactions per second limit, maybe like 100,000 transactions per second. That would be like incredibly cool.
00:23:17.882 - 00:24:08.874, Speaker A: And it doesn't feel like there is a kind of thing looming ahead that keeps us from doing this in a kind of implementation production setting. So, bonus. While all this research was going on, we kind of figured out how to do atomic swaps as well as batch auctions. Some simple designs, you can just kind of plug and play with these auction designs. And so we can build on this atomic swap thing that is native to the plasma chain, and we get this kind of scalable crypto economics, we get the scalable payments and exchange at the same time. And so this is really, really cool in my opinion, and so even cooler, right? Okay, so I'm saying all these things you have now the intuitions for what all this means, but not only is this research here, but Riverkey, for a friend of mine I was telling about, I was like, man, this stuff is exciting as heck. I don't know what I'm doing.
00:24:08.874 - 00:24:49.910, Speaker A: Plasma prime, I don't know what the problem is yet. I don't know why this wouldn't work. And what he did was he implemented in a single week, literally one week. You can check the commits, a kind of like pre alpha, kind of basic, basic version of a testnet of this kind of plasma variant. And so this is literally right now, it is a little bit, we're going to kind of release hopefully tonight, maybe tomorrow, but a kind of like pre alpha. This was literally one week of work. But the point is that it is actually possible to create this chain in a very reasonable, very, it's a clean architecture, finally.
00:24:49.910 - 00:25:25.634, Speaker A: And this is the kind of process that I've noticed happen all the time, where you research a problem over and over and over again. You iterate, you iterate, you iterate and you find out there's a new problem, there's a new complexity, there's a new area of difficulty, there's a new bottleneck, and you kind of plug those holes and you kind of expand your processing capacity. But this is the first time where a scalable plasma chain kind of makes sense in some ways, which is super cool. And so this was implemented in Python using LeveldB, super simple stuff, basically so that people can read it. Also in viper, I should have written that up there. Shout out to viper. Super fun.
00:25:25.634 - 00:26:28.458, Speaker A: And so great. There is this kind of like what lies ahead and everyone knows who does hill climbing stuff, that this could be a local maxima, but nonetheless it looks pretty good, right? One thing that's really cool is we can actually, the smart contract side of things can stay the same as we scale this operator. So as we kind of optimize the kind of backend side of this plasma chain, we can actually keep the same block structure, keep the same general format, and instead we're just scaling maybe a computing cluster. So basically you can shard merkle trees very easily. So that's cool. So like 100,000 transactions per second. And the thing is that I was not going to be satisfied, or I'm not satisfied until a crypto economic mechanism, like a real secure blockchain, like a blockchain that is really decentralized and good, can process huge amounts of transactions per second that decentralized architectures have been able to process for a long time.
00:26:28.458 - 00:27:18.882, Speaker A: So this is the goal, the explicit goal, and it is actually seeming good. So another cool thing, just like randomly, even in a sharded context, these plasma chains do make some sense. So you can actually, as you're building up the beacon chain, as you're building up the shard chains, you can actually create a plasma chain that has a plasma contract across multiple shards. So if you spawn your ERC 20 tokens on a different shard, then you can actually deposit into the same massive plasma chain and transact that thing independently. So that's pretty cool. And you can commit to token allocations on chain with a Merkel tree and then immediately transact those coins in the plasma chain in a scalable setting. So you don't even need to register the tokens themselves on the main chain.
00:27:18.882 - 00:27:52.754, Speaker A: So it's pretty cool. These are like some very cool designs. And hopefully, and I actually right now am not seeing why not, we can scale to a very large kind of like global Internet scale. We need to make sure that these crypto economic mechanisms, if we're going to say that decentralization is the way, this is the future, this is the way we should do things. Well, we need to show that it actually works for supporting a large number of users. And so of course, Ethereum 2.0 has that kind of vision in it and is actually very far along.
00:27:52.754 - 00:28:30.622, Speaker A: And I wish I had an hour so I could just do the next talk on ethereum 2.0 or on serenity, but hopefully even with this, with plasma, next to ethereum 1.0 or ethereum 2.0 and more, of course, this is not the only technology that's going to be required for this. Hopefully we can actually support this kind of real global economy, and hopefully we can create the crypto economy, make sure that it is self sufficient. This is going to be something that I don't see external value coming into the crypto system. I think this is the point where the external value has come into the crypto system.
00:28:30.622 - 00:28:57.750, Speaker A: People are like, oh, wow, this is really cool, and are speculating all day. However, we need to actually generate value within our economy and actually create this Internet future thing. I don't know, this kind of Internet land that is actually free and decentralized, which would be pretty cool. And hopefully this will be enough to really spread the memes of decentralizations. Decentralization as well as the memes. That's a fun one. Anyway, so that is that.
00:28:57.750 - 00:29:11.190, Speaker A: I just put this here. I'm just like shilling uniswap for a slide. I don't know. That's interesting. Anyway, I'm also shilling cryptoeconomics study for a slide. Cryptoeconomics study. It's a course and a book written by Jing lan Wang.
00:29:11.190 - 00:29:56.282, Speaker A: And I'm working on the lectures. And so I just put through a couple lectures. Actually, it's not just me working on the lectures, to be honest. There's also Kevin, who's working on some lectures as well as. So, like, this is a super cool thing. And once again, this was the beginning of my talk was like, okay, we need to make sure that everyone is included, that we spread this information because everyone has something unique to contribute, really. And to be honest, if we're going to create this new future free, amazing economy, the only way that we're going to prevent it from kind of degrading into a centralized, basically control system, power structure that we hate already today.
00:29:56.282 - 00:30:29.574, Speaker A: Well, it's only going to happen if we have people from different communities that have the actual information, access to this information to build it together, because otherwise we're going to forget certain things. We're going to create systems that don't actually promote equality and instead kind of promote a single person's interest. I fall victim to this, too. Like, I do things that I really, absolutely regret while completely having the right intentions. I will make mistakes. So we all have to remember, we're human. We need to make sure that other people kind of can balance us out.
00:30:29.574 - 00:31:01.214, Speaker A: We're in this together, and hopefully this whole thing will work. So check out that Devcon or scalingdevcod.com, that ridiculous website, by the way. It's probably broken right now, but whatever. But more importantly, check out the plasma prime implementation. That is, I'll send out tweeter or two and you can download it and actually send transactions and mess around on a plasma chain and exit, and then let's scale this thing up, because it's actually possible. I don't know.
00:31:01.214 - 00:31:01.580, Speaker A: Thank you.
