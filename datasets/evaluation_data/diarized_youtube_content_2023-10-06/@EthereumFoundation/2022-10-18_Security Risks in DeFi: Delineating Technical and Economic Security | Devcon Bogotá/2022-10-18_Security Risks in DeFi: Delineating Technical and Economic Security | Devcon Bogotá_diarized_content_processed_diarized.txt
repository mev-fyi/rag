00:00:14.410 - 00:00:49.722, Speaker A: Hi, everyone, and thanks a lot for coming to our talk. So, I'm Daniel, and with me here is Ari. And this is a project that has been done by few people. So there's Sam and Louis, who are in the audience, but won't be presenting here today. And so today we're going to talk about security risk in Defi. And in particular, we're going to try to sort of give some definitions and explain how technical security and economic security are different, or how they differ. So, a quick outline of what we'll be presenting today.
00:00:49.722 - 00:01:48.234, Speaker A: So, this talk is meant to be fairly accessible. So we'll start by presenting a bit the different primitives used in defi, and then we'll present a couple of protocols that can be built. And once we've done this, we'll enter a bit more into the main part of the talk, which will be explaining what technical security and economic security is. And we will finally present a few open challenges for research with a focus on these different types of security. So I will start on a very high level, but what is defi? So we have couple definitions, properties. For DeFi, the definition of a give is a peer to peer powered financial system, and for it to be called DeFi, we're saying that it should have a few idealized properties, first one being non custodial, which means that participants should have control over their funds at any point in time. And next one is that it should be permissionless.
00:01:48.234 - 00:02:56.660, Speaker A: Anyone should be able to participate in these financial activities without restrictions or without being able to be censored by a third party, should be openly auditable, which means that anyone can look at the state of the blockchain or what is powering the DeFi and be able to see the transactions and what is going on. And finally, it should be composable, which means that different protocols should be able to communicate with each other and to interact to form sort of new financial systems on top of this. So, well, with this DeFi coming, there has been lot of controversy and all. And we can see this a bit as like two sort of very point of views, an optimistic and a pessimistic point of view. For the DeFi optimist, DeFi is a huge technological advance, this new financial system that's openly auditable and that has all the properties listed before, and that's obviously very promising for the future. And there has been already a lot of good things with DeFi. For example, stablecoins like Dai has been used in countries like Argentina to fight inflation and sort of things.
00:02:56.660 - 00:04:17.802, Speaker A: And also we have seen that more custodial system has tend to fail in some places where decentralized finance could have allowed people to have more visibility on what was going on. On the other hand, there's also this pessimistic view that is that, well, DeFi is unregulated, it's hack prone, it can allow people through its synonymous nature to commit many sorts of crime like scamming, money laundering and so on. And well, there has also been like many hacks, as probably you have all seen, and this north korean hackers hacking protocols and also a bit more recently the crypto mixer being sanctioned and so on. So well, in this talk, well, we'll focus mostly so on security, which is something that we think is absolutely a complete must for the vision of the DeFi optimist to be fulfilled. And really what we'll be trying to do is to differentiate between what is technical security problem and what is an economical security problem. Before this, we'll give a bit of background around different primitives that are needed for all this. And we'll start with some very basic assumptions.
00:04:17.802 - 00:05:04.030, Speaker A: Here is, well, all DeFi protocols rely on an underlying blockchain, and it assumes some security properties which are consistency, integrity and availability. And they're going to be any DeFi without these to begin with. Then it chooses a few other properties of the blockchain. And here one that I want to highlight because there's a lot of sort of security issues, because this are like many potential, let's say it's atomicity, which means that if a transaction starts, it will either succeed completely or it will revert. But there cannot be a half transaction, that just cannot be. And obviously DeFi relies on smart contracts, which are programs that run on the blockchain. And using these primitives.
00:05:04.030 - 00:05:56.602, Speaker A: There are a few really essential piece of software and of other primitives that are required for deFi. First one being oracles. So because blockchain cannot have access to off chain information, somebody needs to take this off chain information and put it on chain. And these are called oracles and are used for example to get price of, say USD, because this is not an information you could possibly have. Then there is governance, which is used typically to upgrade DeFi protocols with time change parameters and these sort of things. Then we have keepers which are off chain sort of bots, and that will submit transactions to update state. This is because in most blockchain systems you need a transaction to be able to perform any sort of state transition, and therefore somebody has to take care of this and finally, there are many market mechanisms that are used in DeFi.
00:05:56.602 - 00:06:37.802, Speaker A: There are collateralization, where people will put some money at stake to make sure that he cannot default on the position, for example. Then there's arbitragers. There are also liquidations, liquidations which are used if somebody does not have enough collateral for whatever position. So that covers roughly the main primitives that we'll need in DeFi protocols. And now I'll present just a couple of DeFi protocols. Probably most of you are already familiar with these, but just to highlight a few properties so that we can kind of all be on same page, to start talking a bit more about security aspects. So there are many types of protocols, but we don't really have time to go through all of them.
00:06:37.802 - 00:07:39.134, Speaker A: So we'll first start with automated micro makers, which are decentralized on chain centralized changes, because on chain it's way too expensive to have some order book based dexes. Amms are somehow has become extremely popular, and they have a lot of good properties, a few properties that are less good. But the main idea is that people will come and provide liquidity to a pool that consists of typically two or more assets. And by providing this liquidity, they in some way commit to a portfolio of these underlying assets, and a portfolio that will be rebalanced by arbitrage, that will try to keep the prices consistent with some other off chain, for example, prices or prices on some other exchanges. Once that is done, people can trade through this pool, and that generates fees for the pool. And typically this is profitable in the case where they are volatility harvesting. That's why the talk just before was a lot more advanced than this.
00:07:39.134 - 00:08:48.258, Speaker A: But basically, if the price is around some line and going up and down, it's typically profitable, as opposed to if the price is consistently diverging, then maybe not so. And there are still some risk, and especially strategy risk and adverse selection risk involved with these amms. And another very important type of protocol for Defi are a protocol for low limbile funds, also called lending protocols, which are on chain markets where people can borrow and lend assets. So typically people will come and deposit some assets that are pulled in smart contracts. Other people can come and borrow these assets, and to do so, they will need to be over collateralized, so they cannot default on their position. And an interesting thing is that there are algorithmic interest rates, and which mean that typically with this market, there is no duration risk. And if a borrower would default on his position, which means his collateral ratio is not high enough anymore, he can get liquidated based on rules are imposed by the protocol.
00:08:48.258 - 00:09:35.910, Speaker A: And a final point that's also very sort of typical to defi are flash loans. That's quite an interesting primitive, because it allow people to borrow money without having any under collateral, any collateral. And the condition for this is that they repay this loan in a single transaction. And this works mostly because of the primitive I described before, which is atomicity. So with all this, then these protocols can communicate together, as I mentioned earlier. And for example, one person could deposit some money in an Amm and get some LP shares, and use this MP shares, for example, in lending protocol as collateral, to be able to borrow some other type of asset. And that's a very interesting thing with DeFi, that all this protocol can really very easily communicate.
00:09:35.910 - 00:10:33.350, Speaker A: So now that I'm done with this sort of intro background about Defi itself, we'll dive a bit more into the security, and we'll really try now to delineate technical and economical security. And first we'll start with some informal definition. We say here that for protocol or smart contract to be technically secure, it needs to be secure from an attacker who is limited to atomic actions. And where like here, being secure has been kind of get exploited. We have a more formal, definite exploit in the paper that we'll show at the end. But for example, it could be not to be able to steal assets. And so here, atomic actions means that the action would be either a single transaction or either a bundle of transactions, but the property needs to be that all these actions will be executed atomically.
00:10:33.350 - 00:11:24.278, Speaker A: And because of this, attacks on technical security are risk free, because basically the attacker can just perform the attack, and at the end of the transaction or of this atomic operation, he can see if yes or no, he made money. And if he did not make any money, if he made money, he profits, if he didn't, he'll only pay the gas fees and can revert the transactions. So by definition, or by kind of extending the definition, a technical attack will always be risk free. Otherwise it will fit our other type of attack. And some examples of technical attacks are atomic mev sandwich attacks, and for example like renderency, or also attacks that exploit logical bugs. And that's all now fairly well studied. We know more or less how to protect against these.
00:11:24.278 - 00:12:20.386, Speaker A: They're of course like testing smart contracts very well, and program analysis or formal methods. And these are in general the better studied ones. So, type of smart contract vulnerabilities, we have reentrancy, integer manipulation, logical bugs, all of which are by now quite well studied, there are single transaction sandwich tax, which is where if a protocol, say, would use the spot price of an amm to use as a price in their protocol, an attacker could come and imbalance this amm, so that when the protocol would try to look up the price, it would get the wrong price. And an attacker could fairly easily exploit this to make money. Our governance attack. If it's possible in one transaction to do some governance action, hacker could come, probably borrow enough governance token to do so, and execute some malicious proposal. Lastly, there are transaction ordering attacks.
00:12:20.386 - 00:13:00.806, Speaker A: So frameless displayments, attacks where an attacker could front run some particular transaction to make profit instead of the person who initially initiated this transaction. And also multistransaction sandwich attacks, which are an attack where an attacker could come and see that somebody is trying to swap, but have, for example, a very high slippage tolerance. And he could imbalance the pool before to give the victim a bad price, and then rebalance the pool after, and would get the profit that the victim lost because of the price he got. So now I'll give it to ARI, so that he can talk about economic security.
00:13:00.988 - 00:14:08.678, Speaker B: So the other type of security, we define a protocol, is economically secure if it's not profitable for an attacker who can perform non atomic actions to manipulate the protocol into unintended states, where they can essentially extract assets from the protocol or cause other sort of mayhem in the protocol. And so economic security is about where you have an exploiting agent who's trying to manipulate some sort of incentive structure of the protocol to profit, like by stealing assets. And since these are nonatomic, they have upfront tangible costs and are not risk free. Basically you have to set up the attack and then actually perform the attack later on. And something could happen in between those two times. And basically the attack could fail if something happens in between those two actions, such as the market responding or other agents responding. And to address this, we really need to have economic models of what's happening in between these transactions.
00:14:08.678 - 00:15:08.298, Speaker B: And the attacker would need to understand this and basically manipulate what's happening in between these transactions. So let's hammer down a little bit further what the difference is between technical and economic security. So in a technical exploit, we have an attacker who's effectively finding a sequence of contract calls that leads to a profit. And these are either in a single transaction or a bundle of transactions, but it's being done all at once or not at all. And for these formal models of contracts are basically enough, so to say, although it can still be quite a hard computer science problem to work out sort of the optimal ways for attacks to be performed. In comparison, in an economic exploit, an attacker is performing multiple actions kind of at different times or really different points in the sequence, and they don't necessarily control what happens between those actions. And so there's no guarantee that the final action is profitable.
00:15:08.298 - 00:16:21.638, Speaker B: So there's kind of a setup, there's actually performing the attack later, but in between, some sort of market can respond or other agents can respond, and so the attacker doesn't really know if it's profitable at the end. And for this, we need models of what's going on in between, which is a bit different than just formally verifying contracts. And so this is kind of an open area of research, especially around kind of understanding liquidity of markets. So let's hammer down even a little bit further with like a very simple example of something that'll be a technical exploit and then something we can change a little bit about it that turns it into instead an economic exploit. So in the example of a technical exploit, let's say a protocol uses an instantaneous Amm price as an oracle, and that then an attacker performs an atomic sandwich attack to steal assets from that protocol, because this can be done atomically, this is a technical exploit, but we could change it. We could use a smarter choice of oracle so that this isn't possible, and that leads to instead it being an economic exploit. So here, consider that the protocol instead uses a little bit smarter choice of oracle, a time weighted average Amm price.
00:16:21.638 - 00:17:12.498, Speaker B: But these can still be manipulated over time, but it involves risk for the attacker, but they still may be able to steal assets. And actually, something like that just happened very recently in Mango, I believe. So we can see this also in data about what's been happening in different protocols. So one example here to kind of illustrate this a little further is something that happened in compound in November 2020. Now, this wasn't really clearly an exploit, but it kind of illustrates what could have been an exploit and what can be exploits in other protocols. So basically, the price of DAI was trading on Coinbase, and for a very short period of time, the price pumped to a dollar 30. And because compound was using Coinbase as an oracle, this allowed a lot of liquidations to be possible on compound.
00:17:12.498 - 00:18:18.234, Speaker B: And that cost a lot of LP's money in compound and opened up a lot of opportunity for profit from liquidating those positions. Now, this wasn't clearly an exploit, but you could imagine that somebody might set this up, intentionally manipulate this market, that manipulates the oracle price, and then profiting from the resulting liquidations. And that's essentially what we've seen later as well. So in a clear exploit, something similar happened in Venus in May 2021, where the Venus market was manipulated, and essentially the attacker was able to leave the protocol with a lot of bad debt. And again, just recently, something similar happened also in Mango. So what are the tools available to help to fix economic security and make protocols more secure? One of the first ones, the biggest, is really over collateralization. And here this doesn't come without risks, though.
00:18:18.234 - 00:19:29.682, Speaker B: And so it's very important to include an analysis of the actual economics in designing and calibrating your protocol. So, for instance, you could have persistent negative shocks that affect collateral prices, and you could also have kind of illiquid markets around those assets. And this can lead to loans being undercollateralized and the system being left with bad debt. It can also lead to situations where it's unprofitable for liquidators to actually initiate the liquidations, which then also can lead to the protocol having bad debt, because the liquidations don't happen in time. And there's also sort of issues that can happen with stablecoins and deleveraging of these stablecoins, like we saw in dai on Black Thursday, where you had this short squeeze effect, and you also had this sort of collapse of the liquidation engine. Some other things that you need to be aware of when you're designing protocols with respect to economic security is the minor extractable value that you can be setting up. I won't go too in depth here, because there have been a lot of great talks already about minor extractable value.
00:19:29.682 - 00:20:16.930, Speaker B: I'll just point out that DeFi applications tend to give many new sources of MeV, and you need to be considering these. And this is essentially coming from arbitrage opportunities. So, for instance, in dexes, you can have sort of like stale order quotes, and whoever fulfill those is able to do an arbitrage loop and profit. And in lending protocols, there's usually a liquidation incentive. And if you're the person who can come in and perform the liquidation when it's allowed, then you can profit from being the person who does that. And this can lead to consensus layer risks, if this MeV is greater than the block reward. Another important area is in the design of governance and the risks that can come up from your governance layer.
00:20:16.930 - 00:21:19.438, Speaker B: So the governance is basically introducing a way to upgrade protocols. And these need sort of careful guardrails and careful design so that your governors aren't going to have misincentives to do things that are actually bad for protocol users. And so commonly governance may not really be incentive compatible with the actual users of the protocol. And this can be an issue they may not act in the interest of these protocol users. And to illustrate a little bit, in some sense, governors have some honest cash flows, but these cash flows may not always be very high. Sometimes they can crash, and then if they do crash, the region of incentive compatibility might shrink. And it may be more profitable for these governors to, instead of doing sort of honest actions and upgrading the protocol in good ways, to instead decide to attack the protocol and basically steal assets from the protocol or do other things that put protocol assets at risk.
00:21:19.438 - 00:22:31.646, Speaker B: And the cost to do this can sometimes be very low in defi and should be part of the design of governance systems. So for instance, tokens can be borrowed and agents can be sort of anonymous, and this can lead to low costs to actually do these governance attacks. The last one I want to hammer down a little bit on is what we were talking about in the examples of where you have markets or oracle manipulations that can directly affect your protocol. So here we need to distinguish between, one, a market price that is being manipulated but correctly supplied by an oracle, and two, an oracle that is itself being manipulated. So in market manipulation you have an adversary who is manipulating the market price either on or off chain, depending where that market is occurring over some period of time. And they can profit if the manipulation, they can exploit it in a protocol that uses that market as an oracle. And these problems persist even if the oracle is not an instantaneous amm because there is some liquidity in the market.
00:22:31.646 - 00:23:17.398, Speaker B: Depending on that liquidity, there's some cost to affect the market price and you can instigate changes to market price that are then reported through the oracle system. And importantly though, this is risky because you have to do it over time. It can't be atomic, which is again the main point about economic security. And this compares to oracle manipulation, where it depends on the design of your oracle. But even if the market price is not being affected, the oracle might be reporting incorrect prices. So centralized oracles have potentially a single point of failure, and you might want to control for that in designing your protocol. And on chain amm based oracles, as we've seen, can be manipulated.
00:23:17.398 - 00:24:36.230, Speaker B: And so the costs of manipulating that depending on the liquidity in those markets is something you should be carefully considering. And other decentralized oracle solutions are really imperfect for the issue that you can't really verify the correctness of prices on chain and so it's quite an open problem how to do this very well. So that sort of concludes our discussion of technical and economic security, but it leads to a host of new research challenges that are really going to be important for securing d five protocols into the future. So I'll give you just like a quick flavor of these. One is around composability risks. Mostly these are not very well quantified, but a lot of program analysis can be done to understand these risks a bit better and then to design your protocols in ways where how you're composing with other protocols is as safe as possible. Another is what we were just talking about, this governance sort of risk, and modeling the incentive compatibility of governors, and sort of modeling out what we call governance extractable value, and trying to understand when are governors in your system incentivized to do things that are good for the protocol and how do you stop them from doing bad things.
00:24:36.230 - 00:25:36.406, Speaker B: And these need economic models about how these governance systems work over time and how the agents make decisions. Another is around oracles. So basically a similar sort of role as governance incentive compatibility to report correct prices and then in a fair amount of work to be done in meV. And there's just one illustration of sort of like what makes mev very hard is that if you're looking at just intrablock mev, atomic mev, this becomes an optimization problem that resembles napsack, but where the items in the napsack can change depending on the current selection. So it should be even harder than napsack, and so it should be an NP hard problem. And this becomes even harder than if you're looking at interblock mev. And this includes cross chain mev, because now you have to look at an intertemporal version of that same optimization problem.
00:25:36.406 - 00:26:21.014, Speaker B: And there's also a lot of work to be done in sort of making anonymous DeFi protocols and preserving privacy. So that brings us to the end of the talk. Just as a quick recap, we've covered how DeFi has several innovations, but it also has several risks. And to fulfill the vision of the DeFi optimist, we really need to make sure that DeFi is secure. And to do that, we've delineated two types of security risk between technical and economic security. And the key distinctions that allow this to be useful are that it's based on atomicity, and it really tells you a lot about the models. You need to understand security in your DeFi protocol and the types of models that we as researchers need to build out.
00:26:21.014 - 00:26:25.160, Speaker B: So thank you, and let's open it up for questions if we have time.
00:26:25.930 - 00:26:39.646, Speaker A: Just while we're waiting for the mic. So this is based on the paper that we wrote, and this is a QR code in the link if you want to have a look. And there are more formal definitions in there, so please feel free to take a look. So how does this overlap with a.
00:26:39.648 - 00:26:41.694, Speaker B: Lot of what gyroscope is doing and.
00:26:41.812 - 00:26:46.654, Speaker A: Sort of your mission and vision? I'm super, super curious about that.
00:26:46.692 - 00:27:24.502, Speaker B: Yeah, that's a great question. Gyroscope, we're working on a new stablecoin project where we're building a bunch of different primitives that allow what we think is a more resilient stablecoin design. And it's really coming out of all of the research we've been doing. We've set up some of the initial models that help to understand, for instance, economic security. And the mechanism design that went into gyroscope takes all of that knowledge into consideration and tries to do the best mechanism design that we can considering how we understand economic security today.
00:27:24.636 - 00:27:33.050, Speaker A: Thank you so much. Remember, the venue will be open this weekend, so come and talk with the people, with everyone, close deals, et cetera.
