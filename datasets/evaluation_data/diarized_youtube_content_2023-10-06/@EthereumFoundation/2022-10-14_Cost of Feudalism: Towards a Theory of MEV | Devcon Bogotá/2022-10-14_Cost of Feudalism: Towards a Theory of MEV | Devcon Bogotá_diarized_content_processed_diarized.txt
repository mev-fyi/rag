00:00:17.290 - 00:01:10.210, Speaker A: Mev is as much given that there were, if I remember right, 17 or 18 talks about mev. But, you know, I think in the spirit of trying to understand the incentives hidden in a lot of these systems, one question you might ask is, does there exist sort of some type of formal theory for mev? Does there exist some type of mathematical structure to this thing that seems to be captivate people's imaginations, yet no one can describe it? And so I'm going to talk a little bit about different ways of addressing this problem, including some work we've done. And I like to call any analysis Femi V, sort of measuring the cost of feudalism. So that's sort of where the title comes from. Let's start with the operative definition of mev. You know it when you see it. Like, of course, the famous Supreme Court ruling on porn.
00:01:10.210 - 00:02:25.622, Speaker A: And mev comes in many shapes and sizes. Of course, we have everything from sandwich attacks, liquidations, arbitrage NFT, front running and cross chain. And as you can see, it's sort of quite a variable form of revenue for validators and searchers. And somehow, because we know there are many examples and we feel like we can't enumerate all of them, it might feel like the space of all mev is super big. So how do you analyze it? I know there were two talks yesterday about what is and isn't mev, but I think we're going to focus on kind of an operative definition that can be used and we could sort of say mev is any excess value that can be captured by validators, by reordering transactions, strategically adding or removing transactions. The idea is most of this is currently managed via off chain auctions, so people bid on transaction priority atomicity within bundles. And if we take a step back and look at the history of Ethereum as to why we got to the auction world, part of the reason is the blockchain was just getting spammed by people doing liquidations and back running Oracles.
00:02:25.622 - 00:03:09.838, Speaker A: And instead of normal users being able to get their transactions in, you'd have the entire blocks filled with people spam background transactions. On the other hand, of course, as the previous talk was focused on, there's a lot of centralization risk with off chain auctions. So let's try to maybe schematically look at how mev works. We have users who submit transactions which are the Deltas. We have a mempool. The searcher has sort of their own view of the mempool, and maybe they have some transactions that are directly given to them which people would call private order flow. And then the searcher sends their bundle, which they're willing to pay for, to the Validator, and the Validator adds it to the block.
00:03:09.838 - 00:03:58.914, Speaker A: The philosophical question here, though, is how do we know value captured by mev is excessive or in a notion of excess? In this sort of first definition, I said any excess value? Well, how excessive is excess. Describing value flows in mev is actually quite difficult. So in algorithmic game theory, you usually have two main ways of thinking about the world. One is optimizing social welfare. Social welfare means if everyone has some notion of utility, some notion of how happy they are with the world, you want to maximize the sum of everyone's utilities. On the other hand, revenue is the person selling the good, maximizing how much they earn. In cryptocurrency it's actually interesting that you have to optimize both jointly.
00:03:58.914 - 00:04:44.258, Speaker A: So obviously user welfare is important for the success of any network. I don't need to really convince anyone of that. But validator revenue being optimized is actually important for economic security. If validators are not making sufficient income from it, then they're unable to really secure the network. And in decentralized networks versus centralized networks, these are two competing goals. And I think the one reason there's a broad view of how theory, algorithmic game theory, it's different for crypto is that you have to sort of balance these two goals instead of trying to optimize one of them. So what pieces are sort of missing? So how would we kind of describe welfare as how would we describe revenue? One thing is understanding the user's utilities.
00:04:44.258 - 00:05:33.158, Speaker A: What is the user getting out? What is their individual notion of value? And that can vary over the entire network. The other thing is some notion of transaction fees and payments, the distribution of payment sizes that users are willing to handle. And the last thing is an understanding of how an auctioneer so in Flashbots or in PBS, how they allocate block spaces to users. And that last part is actually quite complicated. And these three things are quite entangled when you want to try to write a mathematical theory for mev. And these sort of things actually depend a lot on the application, right? The user's utility for minting an NFT is extremely different for a user's utility for borrowing against some collateral. And inevitably that means that the allocation mechanism should somehow be tied to that.
00:05:33.158 - 00:06:21.142, Speaker A: Okay, so let's try to do kind of like the eli five simple version of this, which is we have a notion of block space, which is sort of a notion of max number of transactions or slots or size or gas. You can choose a unit, but for simplicity just assume there's sort of some fixed number of units. There is sort of a notion of a binary allocation to a user of whether a particular user gets a particular slot. The users have the utility functions. I'm unspecifying the domain and range because of course it's actually quite complicated in the world of cross chain bridging. And we see here that social welfare is defined as sort of the expected total utility of all the users given an allocation. So these x variables are effectively whether that slot is given to a certain person.
00:06:21.142 - 00:07:08.550, Speaker A: And this is sort of measuring their sort of net happiness, let's say. Revenue, however, is just the expected value of the payments. And notice these are quite different. In particular, the social welfare includes the utility of the auctioneer, which means that all of the payments that the users send are subtracted or sorry, are negative terms for the bidders and it's a positive term for the auctioneer. So the payments cancel out in social welfare. So you have no dependence on payments explicitly, whereas in revenue, of course, you depend on payments. So if we wanted to try to formulate what is an economic equilibrium for the system, you might say, okay, well, let's try to find joint maxima of the social welfare and revenue functions.
00:07:08.550 - 00:08:09.894, Speaker A: However, given an allocation that optimizes social welfare, it implies a set of payments. And it can be true that the payments that you get from optimal social welfare are very far from the payments that you get from optimal revenue, right? There's some intuition to that, right? Like if Flashbots just basically gave every bundle for free, obviously there's a lot of user gains, but the auctioneer is pretty pissed, aka the validators miners. And this happens all the time in mev. The idea that the optimal revenue equilibria and the optimal social welfare equilibria are sort of disjoint. So the name Cost of Feudalism is really a pun on the concept of the Price of Anarchy, which is sort of a common concept in algorithmic game theory. Roughly speaking, you can think of the Price of Anarchy as if I have a set of many equilibria. I want to look at the ratio of the worst case behavior of an equilibria to the best case behavior.
00:08:09.894 - 00:09:05.270, Speaker A: It's an approximation ratio. And so what this, for instance, this formula says is what's the worst case that the equilibria, the payments earned by the validator deviate from the payments earned at optimal welfare and what's the best case and what's the ratio of those? And you could basically think of this as if this is really large or depends on the number of transactions or users that's really bad. And so, tongue in cheek, of course nothing in real life is asymptotic. But I feel like these are good heuristics, which is constant. Price of Anarchy is really good. It means that even if you get to a shitty equilibria, it's not that much worse than the best equilibria. If the Price of Anarchy is weekly growing so little o of N, so like maybe it's logarithmic in the number of users or slots, maybe it's square root of the number of user slots.
00:09:05.270 - 00:09:57.066, Speaker A: That's okay, you can deal with that. And if the Price of Anarchy is linear in the number of users, that's horrible. That basically means that the more users join the system, the worse the equilibria is for everyone. Which is like the opposite of a network effect. It's like the anti network effect, right? No one wants that. And the interesting thing is that this quantity, if you try to write it out, depends a lot on your choice of what applications you're modeling, because to compute the prices, you need to sort of know these utilities of the user. And that, of course, depends and not to keep belaboring that point, but I think one of the reasons mev has this, both memeability and inability for anyone to write down equations for it is because it's so dependent on the application, which is something I think the early designers of cryptocurrency networks did not divine at that time.
00:09:57.066 - 00:10:29.202, Speaker A: So let's go through an example, a stylized example of kind of what this looks like. How would you analyze this for AMMS? There's a very famous paradox in algorithmic game theory called Braces Paradox. And Braces Paradox is really about how traffic flows on a network. So we have this network on the left, and we have a source city S. We have a destination city, D. And imagine that there's a bunch of traffic that needs to go from source to destination. Each edge that it takes is a latency.
00:10:29.202 - 00:11:02.794, Speaker A: And so when you see a latency of one, that's sort of like a link that can take arbitrary capacity. It takes the same amount of time for everyone to cross that link. When you see a link of X, it's dependent on the amount of flow in that network. So you could basically imagine that, say we have 100 cars. If 100 cars all go down the route x, then it's proportional to the number of cars that are going. And so what you can do is you can say, hey, what if everyone is selfish or greedy? They're not cooperating. They don't have Google Maps.
00:11:02.794 - 00:12:16.370, Speaker A: So Google Maps effectively gets you around this because it sort of implicitly coordinates people, whether you're thinking about it or not. But assume everyone's selfish and they know this map, how would they choose which path to take? And the thing you can show is basically they would split themselves up 50 50. The traffic would go half on the upper path, half on the lower path, and so the time it would take is three half. We choose some units such that X is from zero to one. On the other hand, you might think that adding more roads always decreases traffic, and this is not true. So there's this interesting thing of if everyone's selfishly optimizing, if you add a link between the two middle cities that let you teleport, then everyone just takes the x middle link, X path, and the total congestion that everyone realizes goes up. And so this sort of paradoxical behavior, I think philosophers would not call this a paradox, but economists call it a paradox is that even though you added a road, you've actually worsened congestion because people aren't routing themselves across the network well, because they're not coordinating.
00:12:16.370 - 00:13:11.354, Speaker A: So you might say, okay, great. What does traffic have to do with crypto? Well, first before we even get to that, you may think mev is always bad. There's always these articles that people are writing that are like, front running is theft, it's bribery, it's whatever. Pick your favorite negatively connotated weasel word and you might just say, okay, yeah, we need to get rid of it at all costs. Instead of thinking, hey, maybe it's just endemic to such systems. We saw Braces Paradox and what we're going to see is we're going to see that for some examples of applications in crypto, you can get around Braces Paradox by having mev, which sort of says mev has some positive externality in some situations, which is the opposite of front running is theft as a service or whatever. And again, not all applications are the same.
00:13:11.354 - 00:14:10.730, Speaker A: So that's where the conundrum in defining your sort of optimization problem shows up. Another thing that's actually really important to pay attention to is if we classify users into two types of users, strategic users who are mev searchers or people who are trying to optimize routes on chain, and non strategic user, like the person who pays AV bips for a MetaMask swap. If we kind of look at those two sides, routing is actually one of the hardest problems for non strategic users. So non strategic users actually in fact outsource that to third parties right now, right? So if I want to trade token A for token B, but there's no pool directly from A to B or there's not enough liquidity, I go to one inch matcha Gem. I'm including Gem from the you could argue NFTs have the same properties and routing is actually quite complicated. So algorithmic game theory has studied routing. In fact, Brace's Paradox is a great example of how to study routing.
00:14:10.730 - 00:15:25.620, Speaker A: And one question you might ask is, hey, does this apply to AMMS? Does this apply to one inch? Does this apply to Mantra? And the interesting thing that you'll see is now imagine in this prior example, instead of teleporting in the middle link, we actually add a small amount of congestion epsilon times the traffic. Now you can show that Equilibria basically approaches something as epsilon gets really large. You go back to the condition where everyone routes themselves across the two paths, and when Epsilon's really small, you get back to the purely selfish thing. And the idea is the mev searchers are actually adding this extra epsilon so that people route themselves across the graph more efficiently. And that's something that's a weird positive externality that if you write out the math I try to not add a lot of the equations to this talk, but if you write out the math, it's actually quite compelling that the social welfare is somehow improved by mev in some scenarios, right? That's not the narrative you hear, right? The narrative you hear is like, oh, grannies are getting robbed in MetaMask and that's just not true always. So like I said, I'm not going to go through how you show such a thing. But I'll at least give you an idea of what the theorem statement looks like for such thing.
00:15:25.620 - 00:15:54.826, Speaker A: And the idea is we showed that even when they're sandwichers, the price of anarchy is constant. Remember price of anarchy constant. That's good. That's very surprising. You would think that, hey, as more users come to the network sandwich attackers make more of a profit, they cause more of a loss, but in some liquidity conditions they do not. And this sort of bottom chart shows you the expected profit on the Y axis. And it shows you sort of the amount of slippage inured by the user and you'll see that it has a maxima.
00:15:54.826 - 00:17:11.622, Speaker A: It's not like it keeps growing. And that's the thing that's actually quite interesting and nice about this example. So you've listened to me try to convince you that mev is not bad, it can have these positive externalities, maybe there's something really interesting about it and maybe you can direct it into being used for some particular applications that are just net beneficial to your network. So one question is what do you do to harness it for good? So one thing I think that's interesting, and this goes a little bit to Alex's talk before, is suppose you did have a mechanism where it was just extremely expensive for people to bribe a validator off chain and in fact people were willing to basically share their mev revenue. Imagine like a mining pool for mev revenue. Now the reason that that's very hard to design is it's very hard to make it collusion proof where people pay one miner ahead of time who's in the pool and they don't share revenue with everyone. But suppose you have a way of doing that and there's a lot of people working on really, really interesting stuff both on the cryptography side as well as on the sort of distributed system side for trying to do such a thing.
00:17:11.622 - 00:18:06.626, Speaker A: But suppose you have such a mechanism, then you can redistribute mev to all the validators in the system. And one very interesting thing is you can show in some sort of different types of for different types of mev, you actually can lower the overall inflation rate of the network if the mev subsidy is large enough. So the x axis on this plot is the percentage of mev revenue shared. And the Y axis sort of is a measure of how much people are adjusting their stake. So let's say there's sort of opportunities outside of staking that people can earn yield on their assets with. One question you might ask is what are the incentives that keep people staking? And the interesting thing is that mev actually adds this feedback loop such that you can lower your inflation but also ensure that people stay staked. And so the Y axis is sort of a notion of percentage of how much of the network is staked.
00:18:06.626 - 00:19:07.702, Speaker A: And you can see that at around 25% to 50% in this stylus model of revenue sharing, you actually get people to continue staking, which is just kind of surprising, right? Everyone's always like, oh, we've always needed kind of hyperinflationary economics, and there's lots of reasons for that. But mev distribution also allows you to avoid having to do that. That's sort of like a kind of amazing blessing in disguise. And there's a lot more research that can be done in this space. I think we mainly looked at how liquidations impact staker incentives. Another interesting thing, and I think this is the type of thing that we're seeing in multiple ecosystems, whether it's Ethereum, especially with roll up auctions, whether it's in Cosmos. But everyone sort of is starting to realize the mev auction of having a single mev auction for everyone to kind of compete in may not be the best form of an auction.
00:19:07.702 - 00:20:02.250, Speaker A: You may want to have an auction per roll up. You may want to have an auction per application so that you can tune the social welfare versus revenue trade off. Right? Now, if you think about it, everyone who's making a flashbots bundle for an NFT mint is competing with everyone who's sandwiching for the same sort of block space. But they may actually, if you segment to the block space and say only this amount goes for sandwiching and this amount goes for NFTs, you might have a very different Equilibria. And I think a lot of the roll up developers are basically kind of talking about this. But an interesting thing, and some current work is you can actually show that disaggregating a single auction into many auctions can actually have better social welfare for the end user. And that's sort of like an interesting kind of trade off that I think as things like PBS get developed, you have to sort of analyze these types of incentives.
00:20:02.250 - 00:21:32.550, Speaker A: So I think I want to just at least impress upon people that theoretical foundations for mev are really important. And I think we've sort of started with this thing as this emergent unstudied phenomena. We sort of backed our way into some mechanisms for doing an auction, coming up with sort of rough reputation scores, which it's not totally clear exactly how that whole system can be analyzed to a point where we actually are really able to start thinking about, okay, how do we optimize for things like redistribution? How do we optimize for social welfare? How do we optimize for validator revenue in a sort of joint manner? And formalism, I think, provides us this way of finding these truths about mev which show that, hey, it's not always Robbing Grannies in MetaMask. And the interesting thing is, I think this is sort of the beginning of this kind of new branch, in my mind, of algorithmic game theory, where you're really focused on the joint optimization of social welfare and revenue, because both of them are extremely important to network survival in cryptocurrencies. And so I want to leave you with some open problems in case anyone kind of is interested in this type of stuff. The first thing is what's a notion of optimality for an auction, right? Right. Now, if you look at Flashbots, it's sort of a first price auction with some filtering because they use a scoring function that removes some public mempool transactions.
00:21:32.550 - 00:22:45.442, Speaker A: Is that optimal? Does that work when you have multiple chains or multiple this sort of hierarchical system also does it sort of deal with some of the problems of, hey, how do I trust the auctioneer? Right now we have a system where everyone basically trusts the auctioneer. And economists have copied cryptocurrency enthusiasts and made some trilemmas recently on proving things about when and when you can't trust an auctioneer. And a lot of that work, I think, if the right people were focused on it, could really determine how PBS functions as an auction and what sort of like the expected properties of it are. On the other hand, there's sort of some notion of lower bounds. Like in an open permissionless system with some notion of value, there sort of has to be some lower bound to the amount that's extracted because without any extraction, it's very hard to imagine validators being able to continue to sustain the network. And so one question is how do you construct those lower bounds? In information theory and in theoretical computer science, the lower bounds are extremely hard. Upper bounds are always easy.
00:22:45.442 - 00:23:49.410, Speaker A: Lower bounds are really sort of some of the hardest kind of things to show. And I think the mev space of lower bounds is still quite open. I think in spite of kind of there being a camp of some people who believe with sort of fair ordering that there exists no such lower bound. I would argue just proving that the lower bound is not zero is already a quite difficult problem that would be worth solving. And the last thing that's a very big open problem, research wise in mev is this concept of aggregation versus disaggregation effects. And so I think a lot of people in the mev parlance will focus on talking about things like private order flow, order flow aggregation, like what happens when a builder has all of a certain type of order flow. There are ways to talk about what the equilibrium of the system are, what's the distribution of revenue to different participants based on these kind of aggregation versus disaggregation effects.
00:23:49.410 - 00:24:50.246, Speaker A: But if I were to kind of give you the stylized version of what this question is asking, it's saying, what is the cos theorem for mev? So coast theorem for those who don't know is sort of a very famous thing that I think basically says, imagine you have a company. Now suppose the company had everyone at the company as an individual contractor. Why is it more efficient to actually organize as a group versus individual contractors who are giving payments to each other. And the Coast Theorem sort of says there's some equilibrium in the middle where there's aggregation effects, where it's cheaper for people to work together and share common infrastructure up to some point. And then after that point, the overhead of managing that many people starts causing you to lower your welfare. And this notion of aggregation versus disaggregation and mev is completely unsolved, yet people are always talking about it. It's kind of implied in people's language, yet not formalized cool.
00:24:50.246 - 00:24:54.858, Speaker A: And so with that, I'll leave you for questions. And also, thank you.
00:24:54.944 - 00:25:02.910, Speaker B: Do you have any questions for Tarun? If so, please raise your hand. We'll get you a mic. We got one question on this side. We'll get to you in a second, got another question at the back.
00:25:03.060 - 00:25:40.630, Speaker C: Hi. So my question is you gave first a theoretical example of how removing an edge from a network can make traffic more efficient. And then you gave an analogy for how this can also happen with AMMS, and you gave a practical example of how it could happen with AMMS, but I did not understand how this practical example works. So could you explain more? How could mev improve the efficiency of trading on this scenario with two pairs?
00:25:40.970 - 00:26:22.338, Speaker A: Yeah, think of it this way. Imagine that there's people who want to trade from token A to token B, and there's an order flow of N orders from A to B. If I look at how to optimally route the orders from A to B, if everyone gets routed on the same route, the price that everyone pays on average could be a lot higher. Right. If everyone gets routed on different routes throughout the network, you could have sort of you're load balancing what the price impact is. And the point is that the mev searchers are sort of acting in some weird capacity as almost like air traffic controllers. When there's a bunch of traffic going on the same route, it increases the mev profit.
00:26:22.338 - 00:27:14.898, Speaker A: But as the mev profit goes up, then people start routing away from that. And you could effectively think of it as a way of sort of having a decentralized coordinator where it comes from the fact that the more traffic going on one route, the more the sandwich profit. But then once people start realizing the sandwich profit, they route elsewhere. And so this routing problem is actually the quintessential example of these cases where congestion sort of you can add in some sort of incentives to avoid congestion. A lot of Internet routing, traffic routing on the Internet, a lot of that kind of work is like where this initially started and this is sort of making an analog of that here. But the key is that someone is getting a worse price by being sandwiched, there's no doubt. But everyone going across the graph is getting a better price on average.
00:27:14.898 - 00:27:19.338, Speaker A: And that's the social welfare versus revenue trade off, if that makes sense.
00:27:19.504 - 00:27:21.500, Speaker B: Awesome. We have another question at the back.
00:27:21.950 - 00:27:32.970, Speaker C: Hello. Good afternoon. Love the presentation, as usual. My question is, have you made any studies around central bank, digital currencies or even fiat currencies using the same theory?
00:27:33.790 - 00:28:15.610, Speaker A: Yeah, I think the hard part with any of these sort of, like, pseudo centralized federated type of things mean the validator can just always do the themselves, right? The limit of the centralized thing is like, well, what are Facebook and Google doing? They're just doing mev on their own auctions, right? They're constructing the biding strategies for you. They're like, we're using the highest machine learning to give you optimal targeting. It's like it actually means, actually, we're just going to front run you in our auction, but it's too complicated to explain how. So in the centralized world, these types of things are not that interesting to analyze from that perspective, in the sense that the centralized coordinator will just choose the most expensive route for you all the time.
00:28:15.680 - 00:28:15.866, Speaker B: Right?
00:28:15.888 - 00:28:26.670, Speaker A: But in the decentralized world, it's actually quite interesting because the user has to choose their own way through the network. So, yeah, that's sort of you.
00:28:26.820 - 00:28:31.230, Speaker B: Great. We have one last question on that side and we'll move on to the next talk. So please go ahead.
00:28:31.380 - 00:28:56.246, Speaker D: Yeah, hi. I'm following up on the first question. In the Ras example, the conditions under which the routing would actually or in which mev would be beneficial is if you can teleport, right? These conditions are usually not met. You said under certain conditions. This applies for MMS. What are those conditions? Does it mean if I can print free money or trade at unlimited or zero exchange rate? Or what are the conditions in which.
00:28:56.348 - 00:29:33.566, Speaker A: No, yeah, actually that's a good point. So the zero is in the traffic example. In the AMM example, you can never have zero effectively in that edge. There's always some amount of liquidity price impact unless it's know a linear AMM. I think the main thing we showed is that the liquidity difference on certain edges on that graph relative to the center edge has to be large. So it's not necessarily that it's saying that, hey, you're teleporting, or it's like you have some sort of non balanced budget condition. It's actually just that the relative liquidity differences on different edges has to be high.
00:29:33.566 - 00:29:45.240, Speaker A: And those are the conditions. You know, I'd say our proof is pretty pessimistic in our conditions, and there definitely were ways of getting much better bounds on it.
00:29:45.770 - 00:29:49.090, Speaker B: Yeah, awesome. Thank you so much. Please give a big round of applause for Tarun.
