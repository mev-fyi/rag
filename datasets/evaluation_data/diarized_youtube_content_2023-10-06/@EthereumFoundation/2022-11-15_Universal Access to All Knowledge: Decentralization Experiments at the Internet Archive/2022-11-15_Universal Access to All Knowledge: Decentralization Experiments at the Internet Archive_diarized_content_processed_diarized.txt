00:00:13.370 - 00:00:38.234, Speaker A: My name is Archaeo Kukarkin, and welcome to my very humbly named talk about Decentralization at the Internet Archive. So a couple quick caveats. This is not strictly official views of the archive. It's sort of my own edgesis. This was submitted at a 30 minutes talk turned into a lightning talk, and now is 25 minutes somehow. So it's going to be a little weird, but that's okay. And thirdly, it does not contain ethereum currently.
00:00:38.234 - 00:01:09.634, Speaker A: This may change, hopefully as an outcome of this session. We'll see. Okay, let's get started. So why decentralize the archive from a spiritual or ideological perspective? So since you're here, you probably already know what the archive is. But just as a quick recap, probably best known feature is the Wayback Machine, which has been archiving the known web since 1996. It has trillions of captures. Any given URL you can punch in and travel back in time quite far.
00:01:09.634 - 00:01:44.590, Speaker A: Of course, that's not all. Okay, so we have thousands and thousands of other collections, everything from books to film to wax cylinders and vinyl. We digitize it ourselves. We partner with other institutions to preserve their collections and so on. It's a lot of stuff. Okay. And we are also perhaps known for our beautiful headquarters, which is here seen in its previous incarnation as a literal church.
00:01:44.590 - 00:02:20.540, Speaker A: And inside is our own Terracotta army, which, by the way, is, I think, the best employee perk ever. After three years, you get a half sized statue of yourself made, and it's placed somewhat creepily on the side of the great hall. And within the very same room is actually some of our servers. We also have more conventional data centers, but I think for the purposes of this metaphor, this is a very good image. These are Petaboxes. At one point they held about a petabyte of data each. Now it's much more.
00:02:20.540 - 00:03:22.518, Speaker A: We've got four walls, we've got a roof, we've got our hardware serving you, your Grateful Dead live set from 1972, or the White House homepage from the that is how we accomplish our mission of universal access to all knowledge. Right? Well, I think actually for a long time this has been true. It might be somewhat true today. But before I try to answer this question, I just want to play this clip of our founder from the very, very beginning. You may have seen him earlier in the week, and here's a much younger version. And there's no audio, but there are subtitles. And he's basically talking about his thinking in starting the archive, which at that time was just a web repository.
00:03:22.518 - 00:04:23.486, Speaker A: And I want you to take two things away from this clip. First is that this is really a web native organization. We do have all this other content and we value it very much. But the web has largely eaten the world at this point. So it is in our DNA to essentially be the missing memory layer of the web and up to this point, the best way to accomplish that was put a bunch of stuff in servers in a box. And the second thing is that underlying our top line mission of universal access to all knowledge is this technological imperative to periodically assess the tools that are now newly available, whether they can help us further that top line and apply them accordingly. So I think for the first time since our founding, we actually have something that's not just better servers, bigger hard drives, better scanning equipment.
00:04:23.486 - 00:05:15.540, Speaker A: We have possibility of potentially fixing this problem in a way that is universal and not just embodied in our service. Okay, so to zoom back in a little bit, why decentralizer archive from a practical perspective? Well, one is physical location risk. So this is a map of seismic risk zones in the Bay Area and the little logos there correspond to our facilities. And that's not great. We're actually building a new data center in British Columbia currently. Unfortunately, that's also on a fault zone. And you might say, well, why don't you stop building your data centers in seismically active regions? And for reasons that are outside the scope of this talk, this is actually surprisingly difficult.
00:05:15.540 - 00:05:54.794, Speaker A: Secondly, political location risk. So we're addressing this a little bit with the Canadian expansion. But as you can see on this map, this is essentially sort of a weighted index of the democratic quality of various countries and we're not doing great at it and it's really trending downward. So this is a real problem for us because we have a lot of stuff that people want silenced. And thirdly, we have pretty significant network bottlenecks. So this is the user sign ups over time. You can see there was 16 in 1996.
00:05:54.794 - 00:06:40.860, Speaker A: It's very cute. And during the pandemic it just went crazy and has never really let up. So in practice, this means our bandwidth is just totally cooked. We are putting fiber in as fast as the city authorities will allow us and it's really just not enough. So you might ask why not just put all your stuff on S Three and use cloud fronts and not worry about any of this stuff? So there are multiple reasons. Some of them are also ideological, but they're also practical ones, like cost. So our model cost, and actually kind of real cost, is around $650 per terabyte to store forever, which in the model means 100 plus years.
00:06:40.860 - 00:07:19.100, Speaker A: On S Three that's about $160 per year. So that multiplied by forever. That's not a very nice number with filecoin, which is sort of presaging what we'll get into a little bit later. The costs are vanishingly low and might in fact be negative for us because there is a network subsidy for culturally valuable data. How sustainable that is we'll find out. Storage is another decentralized storage network. They're sort of a little bit more here and now thinking so they're competing with S Three and they have a slightly better cost.
00:07:19.100 - 00:07:53.954, Speaker A: There's also Arweave, which you might be familiar with as the Forever storage solution and it is expensive. It is quite pricey compared to our model. And I'm a little bit unconvinced about their data availability model for stuff that's unimportant until it is right. So things that are sitting idle for a very long time and then because of a political moment or something like that, they suddenly become relevant. So if you have other thoughts, please talk to me and convince me. I'd love that. And there are others I haven't mentioned here.
00:07:53.954 - 00:08:37.198, Speaker A: I'd love to talk to swarm folks, for example. I don't know what their pricing model is. So please, if you're with that team, find me later. And there aside from all the dealing with negatives, there are also positive new opportunities with decentralized storage and decentralized networks in general, like content addressing, which a lot of them support, which for example can allow for transparent link preservation. Right now when a link breaks, we may have a backup copy. If it's on Wikipedia, we have a bot that will go in and edit the broken links and the citations with our backups. Or maybe if you're an enthusiast you'll be using our extension.
00:08:37.198 - 00:09:50.380, Speaker A: But for the most part an Http link, when it breaks, it just breaks. And of course there is web three forward compatibility as a nice bonus. When this stuff is in a decentralized network and it's content addressable, you can reference it using standard IPFS libraries that I'm sure you're familiar with and so on and so on. So I'm going to quickly jump into a couple of things that we have working today as steps in this direction and then maybe come back to the musings about how an actual decentralized Internet Archive might look like. Okay, so the first one is the simpler one and this mostly addresses the bandwidth concerns and it's streaming media from storage. And if you like to try this yourself, you can do it. We don't currently have a real front end, so you'll need to grab this little bookmarklet from the presentation and just add it to your toolbar and you will be able to follow my example.
00:09:50.380 - 00:10:47.174, Speaker A: All right, so here we have a video from NASA and we have a whole collection of their videos. And in the metadata here you see some internal Identifiers, this archival Identifier ark and then this storage string. So any archive item that you see this string on is actually mirrored on storage. So you can just hit this bookmarklet and hopefully we do not get demo fail here due to network issues. No, it's working great. So here is a pretty big video, full resolution MP4 four gigs do and so as as oh, actually, yeah, that loaded. That's, that's fantastic.
00:10:47.174 - 00:11:55.550, Speaker A: So here we have some wacky astronaut things and as you see on the right here, it's being served from almost 3000 nodes worldwide. The way storage works is sort of like an incentivized BitTorrent swarm. It's not quite the same, but the basic principle applies. They use erasure coding and basically pick 88 of the fastest nodes to give you a nice robust stream without relying on something like cloud front or expensive edge caching. So let's close that. All right, so what do we need for this to actually be useful to you? All is well, one is obviously an actual front end and that's assigned to me. We need browser support because in this case it was sort of cheating a little bit because I was actually using an Http terminator where my browser was talking to a storage service that was then talking to all these thousands of nodes.
00:11:55.550 - 00:12:42.650, Speaker A: It's actually an Https connection to the nodes. So all you need to make this work in the browser in a truly peer to peer fashion is self signed certificate support in a particular context. So if you're with Brave or Opera or another browser that wants to make a play in this space, please talk to me. And lastly, as with many decentralized systems today, there is actually a centralized point of failure, which is the metadata that essentially tells you where to find all the pieces of the file. So we're currently using a storage hosted what they call satellite metadata service. We'll probably be running one of our own soon. But the real solution is of course, not to have the single point of failure.
00:12:42.650 - 00:13:54.118, Speaker A: So that is on the to do list. Okay, so the second demo is a little bit more complicated and for it you might need to have a crash course in web archiving. So the canonical format for web archives is called WARC and it's an IRB standard that the archive has developed back in the it's basically just a dump of Http traffic between your browser and a given server and the the actual file structure is basically tarball or concatenated dumps of these different crawls. And this is how the entirety of the Wayback machine works. It's just a bunch of these giant files that are Http dumps and some index data that tells you what offset in the file to read and out comes the web page. So let's see. All right, so I'm going to go back to the demo here.
00:13:54.118 - 00:14:35.874, Speaker A: So here's an example of such a work file. And it doesn't look like much here because this is sort of internal use. If you open this up in a different front end, you'll actually see the web pages. But this is kind of how the sausage is made internally, just these files. And again, in the metadata fields we have these Identifiers, identifier, say ID and Comp and these are Identifiers within the filecoin network. So we've been storing a lot of these web crawls. This particular data set is our inauguration pre inauguration crawl.
00:14:35.874 - 00:16:03.810, Speaker A: So every US presidential election we capture the entirety of the gov domain and associated things before and after the administration change to see how the politics reflect in the reality of the government web. So we're using these data sets as a test bed because it is in public interest and it is also not copyright encumbered as US government data generally is. So we can pull up oops, actually this one, just grab this Identifier here and go to a filecoin network indexer. So to avoid demo fail, I've actually prefilled this so I'm not going to breeze on it so it doesn't fall over. So here's that content ID and it's founded a couple of peers where we stored it. So we can map this peer ID to a minor ID here and let's see. And it so we'll grab it from that provider and we'll grab it by the Identifier.
00:16:03.810 - 00:17:17.110, Speaker A: And for demo purposes, I'm just going to discard it, but oops. All right, fantastic. So here we are retrieving the kind of bulk package from the file coin effort. At the moment we're sort of treating this as just a dumb blob, so it's being stored on filecoin as essentially another copy. We have a couple of internal copies and this is a third sort of cold storage thing, but things can get a lot more interesting, so we can take a look at some other tools in this space. Okay, it looks a little weird at this resolution, but here we have a capture of the devcon.org site and this tool, it's not an Internet Archive tool, but it's sort of affiliated.
00:17:17.110 - 00:18:24.160, Speaker A: And here we have made a capture of the site and we can store it on IPFS and filecoin through web three storage. All right. And now this bundle is a static self hosted application that provides a view into this web archive the same way that you would get on the wayback machine. But there's no server, right? This is just loaded from IPFS and it has all the nice archiving stuff built right in. You have this timestamp you could travel back in time if I had earlier copies, you can have the links referenced and so on. So the next steps in the filecoin work for us are to try to make our captures structured and compatible with something like this, so you don't actually need our servers to interact with this data. All right.
00:18:24.160 - 00:19:25.300, Speaker A: And beyond that step, there are a few things we need to actually make this work for real. So one is actually encryption and ACLs. You might think of sort of public good information sets such as our collections as being essentially open and that's generally true, but because we capture from the open web and some of our collections do come from sources where just so much stuff goes in that it's very hard to due diligence at ingestion time. There are opportunities where things do require a certain degree of access control in case of legal action or something like that. And there is also kind of a broad concern about data mining of these sets. So we seek to primarily support users and good faith researchers. But there is a broad spectrum of use cases that go from kind of white to gray to black.
00:19:25.300 - 00:20:16.734, Speaker A: Two most important things is indexing and metadata. So right now we're able to store this bulk data fairly well. We spend about a year on this and it seems like kind of a simple thing, but at the end of the day it turns out not to be. But the thing that we don't have a solution for right now is the index because we have, as I mentioned, trillions of captures in the wayback machine. We have billions of other objects and you can't put that stuff on chain, right? And it has to be discoverable somehow. So I'm very open to suggestions from the audience after my talk on how we can attack this. And the second most important thing is scale.
00:20:16.734 - 00:21:22.610, Speaker A: So we have hundreds of petabytes in our collections at the moment and that's a lot of data. I think most folks here who work in on chain things, you're probably dealing with things that are at most a few megabytes, right? It's really not that much data that we're used to dealing with in the blockchain world and we've got tons and tons and tons. So that's something that the Filecoin team has been very supportive of. But we are just getting started. All right. And I think that's it. I guess the question I leave you with that goes back to the beginning is can the web have a memory? Not just web three, which is already somewhat set up for that, but all the web content because we value culture.
00:21:22.610 - 00:21:44.640, Speaker A: That is not just this narrow domain that we inhabit, we value all culture. Right? So how do we preserve that for forever? Thank you. I have a couple of minutes if people have questions.
00:21:49.330 - 00:21:53.140, Speaker B: Are there any questions right here?
00:21:57.430 - 00:22:20.794, Speaker C: So, when you're archiving the web, very often web servers differentiate what content they serve depending on the IP address from which you ask. And it seems to me that there's an opportunity for decentralization here as well. So that your crawlers actually pick from which region they download the web. How are you dealing with this problem now?
00:22:20.832 - 00:23:08.940, Speaker A: Yeah, that's a great point. So we definitely run into these issues as you're just being straight up blocked or a page that has meaningfully different appearance depending on the requesting region. Right now we have a few semi decentralized tools for this. There is an organization called Archive Team, which is basically a volunteer group that runs crawlers that receive these tasks. And there is also academic research in this where different archiving organizations would enter into sort of consortium where they would synchronize their crawls from different regions. But I agree that those are not super scalable solutions. So I think that my short answer is yes.
00:23:08.940 - 00:23:37.150, Speaker A: Thanks for the talk. How do you deal with takedown requests like DMCA Takedowns? So, unfortunately, we are required to comply with that to continue existing as an organization. So we have a legal team that processes them, and if they have merits and are made in good faith, we will generally block the item from being served.
00:23:38.690 - 00:23:45.718, Speaker B: Okay, so unfortunately, time is up. Okay, thank you so much, Akadi. And I'm pretty sure they can find you afterwards. Right?
00:23:45.884 - 00:23:48.040, Speaker A: Okay, fantastic. Thank you very much.
