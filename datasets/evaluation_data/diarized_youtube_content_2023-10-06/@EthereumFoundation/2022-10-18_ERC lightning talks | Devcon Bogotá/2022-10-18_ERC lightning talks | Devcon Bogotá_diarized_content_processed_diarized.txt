00:00:12.890 - 00:00:59.034, Speaker A: My name is Tim. Annette is currently still in a podcast interview, but I think she will come also later. I'm quickly going to give an overview of what's going to happen in the next think we have like one and a half hours. You can already see a bit on my drawn slides. I don't like PowerPoint that much. What will be essentially the content of this entire session? We have lined up like six, seven speakers, including me. We are going to center all of these talks around the Ethereum magicians and specifically we're going to talk about ERC proposals.
00:00:59.034 - 00:01:55.774, Speaker A: So ethereum requests for comments. Right. So basically everything that didn't fit into Annette and Tim bico's earlier session, I think it was about two weeks, two days ago about the Ethereum core roadmap. So how this works, each speaker has roughly 15 minutes and then we have usually like a five minute break where we can set up the next speaker and maybe there's even like time for questions, I guess. We will have some talks about timestamps in Ethereum getlocks from Ronan that just entered the room by chance. We will have some talks about soulbound tokens, about music NFTs, about DSOC. We will have two people speaking about the problems in the web, three music space about content types in NFTs.
00:01:55.774 - 00:03:26.382, Speaker A: And then we'll also have a very recent EIP, namely I think it's for the domain separator in EIP 712. Before we start with the speakers, I think I want to give a quick talk myself though, kind of like my own lightning talk. I want to make it about kind of this weird thing that the ERCs are which are essentially this immutable contracts that are almost like as immutable as a transaction in Ethereum. And the problem that comes with it, which is that we don't really know how to upgrade them. And throughout this whole year of bull market and everything, especially in the NFT ecosystem, I think there's starting to be this debate basically around how can we actually do innovation with these contracts if you cannot change them anymore. Right? And so what can we do about it? And I've tried to kind of express that where this contract, this document, this proposal that once you put it into the final status, then it's really locked like this lock and we can't really unlock it anymore. And so we have to find ways of still upgrading it.
00:03:26.382 - 00:04:37.618, Speaker A: And that's what I want to try to motivate that actually. And I want to try to make an optimistic case for what it's actually cool. But first of all, I think we have to backtrack a bit. This is a comment from, I believe, the GitHub thread on ERP 20 612, the permit standard that allows you basically, it's like a replacement for ERP 20 tokens, where instead of sending the approval on chain and kind of like wasting all of this gas for the transaction envelope. You technically could sign a transaction that gives the spending contract the permission with your signature. And so the idea, I guess would have been that new use cases are kind of enabled and that also we can save a lot of gas, especially considering that each EIP 20 transfer is essentially like two transfers right today. And so if we could already condense that to one, I think the gas savings would be quite significant considering how much we are transacting with EIP 20 tokens.
00:04:37.618 - 00:05:38.070, Speaker A: So this comment is actually a critique, though, on that standard. And basically I don't even fully know the entire history, but I know that I think the standard has some issues. It's not really in final mode either. And then many companies have kind of diverged from it and they're non compliant, I think, with this standard. So it kind of shows, I think, maybe a bearish case for this kind of standardization approach. And then the other case which I had to deal with myself personally because I crawl NFTs, this is the interface for the Zora M NFT contract and M stands for Media NFT. And I think my first exposure to this was that I was kind of like disappointed because essentially when you call the Token Uri, like the regular Token Uri, you are expecting a JSON.
00:05:38.070 - 00:06:51.360, Speaker A: But what I'm getting back is a media file. And so I have to actually have to actually go to the Token metadata Uri. And that's where the metadata is, right? I mean, the name is descriptive of that. I was a bit disappointed because I had to basically build this custom logic around it. But on the other hand, I'm also empathetic with that because in the regular NFT the media file which has been like traditionally the image is literally in a JSON object that we call mean. In my opinion that says a lot about how we think about NFTs and that we see the image or like the media that is attached to the NFT kind of like as metadata to something that is the NFT that is kind of like maybe like a financial instrument then or whatever. And so I think it's actually beautiful that they made the case that we should actually use the Token Uri to embed the media file directly and to center really the NFT around the media file and not make the media file a mere metadata field.
00:06:51.360 - 00:08:35.230, Speaker A: Yeah, and apart from all of this pessimism, I think there's another good reason for submitting and being active on this forum and it's because you get a ton of exposure to your idea. So this is a thread here that I made, I think around in April and it's about like a specification for soul bound tokens, or we now call them account bound tokens. And this thread has gotten 9000 views. And if you would sort by the replies, it's actually the top controversial thread on the entire forum for the entire year, apparently. So I mean, while that is concerning to me because apparently a lot of people have opinions about this, it's also on the other hand, it was like a beautiful chance of receiving feedback and also receiving constructive feedback with which without that this standard wouldn't have gone where it went today. So I initially started this as a non transferable token specification and basically now we have moved into consensual minting and into basically having the signature being checked by both the sender and the receiver and we are actively talking about all of the privacy challenges of Soulbound tokens. And so this has really become basically like a space where this entire standard, all the Soulbound Token things, everything is very verbosely documented.
00:08:35.230 - 00:09:39.714, Speaker A: And I think it's awesome because I wouldn't have had these ideas by myself. So I think this is like a community effort and it's cool, by the way. Basically these slides are all a Eve Magician's blog post essentially. And I need to find a bit my way. But kind of like one of the one of the problems of the EIP standards process is that it's truly permissionless and it's open to everyone, essentially, because you can just go to GitHub.com Ethereum EIPS and you can submit. Your own EIP, and as long as you are complying to the formatting rules and you're receptive to the feedback of the EIP editors and you're not mean to them or whatever, you will actually get your document merged and that document will show up on EIPS.
00:09:39.714 - 00:11:13.506, Speaker A: Ethereum.org. So that's really cool and that's really a strength, but it's also a weakness. And I think this, I guess, is like a bit of a famous cartoon in the standards community at least, where this Xkcd comic where there's like 14 competing standards for a use case and then there's this one guy saying hey, that's crazy. Like why do we need 14 standards? We should have one standard that has all of the that addresses all of the use case and suddenly we have like 15 standards, right? So it's kind of a problem in the ERC process as well that we just have a lot of verbosity and duplication and so on. So it's like on one side we have the strength, the openness and also this it's almost like a spam problem or whatever, but I want to still motivate and I want to say that I find this actually awesome. And I find it awesome because I think that there's a difference between a temporarily emergent consensus and a consensus that is more like spontaneous and probably from this kind of group or a committee of experts. And so I've tried to visualize that with the two different kind of approaches, the two different extremes, so to say, where on one side we have more like a market driven adoption, where the individual kind of makes the decision by themselves.
00:11:13.506 - 00:12:43.650, Speaker A: They do all of the due diligence, and they come to the conclusion that they want to use a standard. And then on the other hand, and this is maybe true for more, I think groups that have to make decisions rather quickly and close to time. I think you have basically this spontaneous committee consensus where 51% can basically overrule the 49%. I just want to kind of make this argument that I believe that the temporarily continuously emergent consensus is actually the cooler one, the one that ends up having a stronger signal over time. And that's because there's one hacky way of just proving that and that's that if you consider how organizations are run today, then it's probably mostly in this 51% consensus style, right? And then on the other side you have this totally chaotic evolutionary kind of thing that is the market that somehow also figures out what is the best decision, but completely different, and not by talking to each other. By no means is this financial advice, but I would always bet on the market and not on an individual committee. Actually, I think that's actually the better approach.
00:12:43.650 - 00:14:28.930, Speaker A: I guess it's also the reason why much of our critical infrastructure is run in that way. I don't think there's a central planning for the Food Network in a city or stuff like that. And so the question is though, how can we overcome this immutability of contracts and how can we actually still innovate on those standards? And this is especially true with all of the eyeballs that have went into the NFT space and kind of this difficulty of innovating with the standard, sadly also with being non compliant to the standard and just trying to grow externally from standards. I think immutability does not necessarily mean stagnation. I think actually there is now we are starting to see a pattern emerge where people are starting to really upgrade the standard and they are doing it in a way where they are basically bolting kind of this one lock to the other almost like in I don't know, on these bridges that sometimes you can see as a tourist kind of thing. I think over the last half a year that has really happened. So for example, we now have a standard event for emitting an event when the metadata is updated in an NFT standard.
00:14:28.930 - 00:15:47.482, Speaker A: And that's the one on the top, right? It's the 49 six that essentially just emits an event. We now have a very interesting standard that basically splits the user and the owner into two different groups. And I think especially with DSOC kind of making us aware that there are subsets of ownership where kind of ownership represents this bucket of right, and then you can have Fructose and you can have usus and Abus and so on. This is starting to become really interesting, right, where we have different kind of roles that could interact with the NFT and then this could have different economies. And so I want to give a shout out that's 49 seven. And then I guess maybe like a more infamous one is the, is the royalties one and it's the 29 81 and that's basically an optional royalties location mechanism for NFTs that is implemented I think, in many NFT marketplaces. And again, I just want to highlight that I think it is definitely possible to upgrade these things.
00:15:47.482 - 00:16:40.250, Speaker A: And we are doing that. I just think that probably the time horizon that we're looking at this and where we're drawn to being a bit more pessimistic. I think maybe we or I mean personally, maybe I have to be more patient and just like trust in the process. And yeah, I guess I have five more minutes. So of course I'm going to shill a standard that I did myself, which is the minimum soul bound token. And it works in the exact same way where basically we are extending and even breaking the EIP 721 interface. And essentially we're allowing people to lock an NFT so you can emit a locked event and an unlocked event depending on whether the transfer function should be reverting or not.
00:16:40.250 - 00:17:41.950, Speaker A: And then we also have this view function that allows you to always check whether a token is locked. And the purpose for this is that if you were to just use like a plain 721 standard, which actually it has kind of like a small line in it where it says like that these NFTs can also be they can be used as a reader, like a read only registry. The problem is that indexes and wallets and so on wouldn't really recognize it because a computer cannot reason from, let's say the transfer is reverting to this thing is like locked because could also be that you have done something else wrong and so therefore the error might be referring to something else. So I personally think that's useful and that's final. Now also and it's building on 721. Yeah, I mean, now I'm at 17 minutes. We're going to have the next speaker.
00:17:41.950 - 00:17:55.560, Speaker A: Thank you for also giving me the chance to give this little talk. And I want to ask to stage Ronan Wiga Wager. I don't know the exact pronunciation. Thank you.
00:17:58.810 - 00:18:49.400, Speaker B: Okay, thank you for coming here. I want to present a very simple proposal and kind of to explain it. I wanted to show a demo and I wanted to show it in real time, but the WiFi made me realize that I should probably have it already done and show you the result. So basically the proposal is to improve. So what I'm building, I'm building an indexer. So that kind of take all the event of a contract and contract the state, which is our most smart contract system under state for basically having data about it. And most project use a back end which is at OD with the vision of decentralized application.
00:18:49.400 - 00:19:32.674, Speaker B: So here my idea was simply let's index in the browser and of course it doesn't work for everything because of the scale of some of these systems. For example, if you wanted to index all the NFT you could do in the browser, but it will take a while. But for some other case it actually worked very well and so I was doing so I have this game so the whole state of the game is actually here. So you have all the fleet. So it's a game in space. You have planet and fleet kind of as the two main things. And it's like I think this state is around seven megabytes, but it's not actually.
00:19:32.674 - 00:20:13.870, Speaker B: I didn't implement a full, so I have an index. I have the same indexer running on the graph and I didn't finish to implement it fully here. So I expect maybe to get to 20 megabytes of state and I can on a normal network. I don't know what normal means, but it took 5 seconds to sync the whole thing. And you can obviously. But I made an assumption that in my game there is this notion of time, so every event so the contract will kind of lazily update per time. And I think it's quite a common thing in smart contract.
00:20:13.870 - 00:21:07.566, Speaker B: And unfortunately when you fetch the logs which is a mechanism by which you index and manage to get back the state all this event basically which you don't have access to the timestamp at which they happen, it's just some reason they didn't thought to add that. So there is a block ash the block number, but there is no block timestamp. And my game. Actually, when I need the timestamp, because I don't have the timestamp in the logs, I get like 20,000 event here. And what I need to do then I need to request 20,000 times, depending a bit less, because you can have an event in the same block. But I have to request that on top. And because it's an in browser indexer, it use EIP 119393, which is like the Wallet interface.
00:21:07.566 - 00:21:48.206, Speaker B: And I cannot do batch request. I have to do all these requests. And though I have this version we actually is still running from last time and sometime here because the RPC is not happy that I'm so the RPC of MetaMask. Because again here it's just a static web page. There is nothing, no back end and it all only rely on the fact that the user have an EIP 1193 wallet. In that case it's MetaMask and if you look at my settings, it's actually an RPC somewhere else. So it's still querying all of this to get the timestamp while the other one have been finished a long time ago.
00:21:48.206 - 00:22:45.380, Speaker B: And only actually you see 580 request is actually 300 because the other one now is just to get the latest block and nothing is really happening in that game right now while this one is still like fetching the state. So it's going to reach probably 20,000 to sync or maybe even more. Yeah, I wanted to show you a kind of a really example, but the proposal is basically to add this to the JSON object. So it's a very simple change you can do in your node. So in go ethereum or whatever. And so actually, funnily enough, like, Tim pushed me to go to the Core Dev meeting the other day. And so we had an interesting discussion about so most of it I already said, but the idea is that.
00:22:47.750 - 00:22:48.066, Speaker C: What.
00:22:48.088 - 00:23:32.640, Speaker B: I could do is that I could add the timestamp to the event itself. But obviously, when you do your contract, you know that there is a block information, so there is no need to add the timestamp to the event. It's just a waste of gas. And time is an important aspect of many smart contract and block number cannot be a replacement for them. And the reason why is because block number timings can change across chains, but also there is no guarantee that a single chain will not keep it. And you could probably emulate an average block time using smart contract itself, but it's kind of ugly workaround. And block times temporary, already easily available, like the block hash or the block number.
00:23:32.640 - 00:24:21.422, Speaker B: So I've been discussing about a few people, but this is extra data you have to put in the log object, but it's small and the alternative is to fetch all of these anyway. So of course, for the one who don't care about timestamp, then they have an extra small, but I feel it's small enough. I also consider alternative, but I will not consider as alternative. Actually, I consider them as complementary. So when I mention them, I'm not saying I don't want them, actually I want them, but I feel they will not replace. Thank you. So, yeah, basically one alternative is to add a batch API for, ERP, 1193.
00:24:21.422 - 00:25:27.894, Speaker B: It was actually part of the conversation initially, but was dropped, but I think it's a valid one to have. But my opinion, it doesn't offer the same advantage as having the block timestamp in the log. And another EIP that I didn't see yet is to have a GraphQL API. So basically an alternative to EIP 1193. And with GraphQL you can ask what you want, which make it more efficient as well for transferring data. So if you don't care about the timestamp, you don't need and actually this one could really by actually solving the first one, so this one is really an alternative, but I don't see any reason to just add other one especially I think GraphQL is not supported in all the node implementation today. And so, as I say, I went to the core dev and we had the feedback and the main feedback was that there is no point to do it because we are going to make the logs not being accessible after a certain time.
00:25:27.894 - 00:26:26.550, Speaker B: And so the argument was like, you will never have that many log and so requesting the timestamp anyway won't matter. And so my reply is that it's an easy change. So my next action will be to make a PR, I guess, for Goetrium. And the number of log actually can still be significant. So even if we remove past log, we still want to have access to them. But actually the main issue with that feedback is that we need to really think how we are going to solve state access about if we don't have access to past log, how do we are going to index in a decentralized manner? Because of course, if you have a backend, you solve your problem. But we don't want to have a backend, right? You want to be able to use tornado cache from your browser without relying with only relying on your node.
00:26:26.550 - 00:26:42.190, Speaker B: I don't know. For me, I would like to have discussion as a community how we can solve that. I know there is work right now about portal things, portal network.
00:26:44.210 - 00:26:44.718, Speaker A: But I.
00:26:44.724 - 00:27:36.378, Speaker B: Think it's important we understand the point of view of application developer that don't want to be involved with our application once it's launched. And another thing. Yeah, so I mentioned, like most system already rely on the log event. So we need this system anyway and even some EIP have been using it to kind of speed up the need or kind of minimize the gas cost, which is EIP 1155. Like you can't query the balance of all the token that the user owns from the smart contract and so you allow the smart contract to be more efficient. And it has been the result of everybody acknowledging that we use logs and events to reconstruct the state. But that interestingly.
00:27:36.378 - 00:28:01.480, Speaker B: One of the things in the Cordev meeting was that that was not the vision initially, but now we evolve, we understand what we need. And so I think, yeah, I will end with like yeah, let's discuss about how to solve this, being able to rebuild the state from the client scan of all for me, any question?
00:28:03.850 - 00:28:15.420, Speaker A: Thank you. Thank you, Ronan. Thank you. Hand Of Applause so, we have time for questions. Do we have any questions?
00:28:18.350 - 00:28:28.026, Speaker D: What are your thoughts on using Getters in the contract? What are your thoughts on using Getters in the contract as opposed to events to get the data for UI?
00:28:28.218 - 00:29:27.758, Speaker B: Yeah, I can talk about my game actually on that front. So the first version, I really wanted to launch the first version without any back end. So the first version of the game, the first alpha, I didn't have an indexer using the log and I was fetching all the data and it actually is not efficient neither because especially list of things and you are wasting gas to support that in many cases. So this is why I mentioned EIP 1155 not having access to the balance and we could also think about seven to one enumerable extension which add actually a lot of gas cost overall. And I think from what we have seen, everybody like evan to do that role. So I think that's what we should do and minimize the role of the minimize the gas cost. Basically that's what we want.
00:29:27.758 - 00:29:41.960, Speaker B: We minimize the things that happen on the chain if we can do it off chain. But this assume we have a system to retrieve it. That's why I think it's important to discuss because maybe the conclusion is like oh, actually we cannot and we have to pay gas to do that, but I hope it's not the case.
00:29:44.410 - 00:30:07.310, Speaker E: Hello everyone. I'm going to start my timer. So I have a reference point here. Yeah, this is my first time actually talking at DevCon. This is my second DevCon and I'm super happy to be contributing back in sharing knowledge and sparking debate and ideas. So thanks for having me and thanks Tim for organizing this as well. Annette.
00:30:07.310 - 00:30:52.640, Speaker E: So today I wanted to talk about EIP 4973 badges and definancializing Dows and beyond as well. So firstly a little bit about me. My name is Rahul. I'm co founder of this little baby company that we started called Order Space and I've been in the crypto ecosystem since 2016. I started off with my journey also with music. I was building NFTs to Assetize music royalties back in 2017 did not work, then moved on to SoundCloud, got FOMO with Dows and I got back to Crypto full time now, so I think I want to start with how this year had started. Actually.
00:30:52.640 - 00:31:52.170, Speaker E: We think that there was this paper called Decentralized Society and it centered our attention on this notion that Web Three centers around expressing transferable financial assets rather than encoding social relationships of trust. When everything is transferable, things can be sold to the highest bidder. So we wanted to challenge that. And that problem is what gave to this idea. And working with Tim on this EIP what we called account bound tokens. Not to be confused with soul bound tokens or you may be, but semantically speaking, you can define this as non transferable tokens bound to an account. And then our goal here was to really it's very semantic based again to create special ownership deeds or creating like permission primitives, but really to create a new ownership experience through this primitive.
00:31:52.170 - 00:32:36.910, Speaker E: You can read more about this. We have written a more extensive article on this. However, ever since we started, we noticed this account bound tokens debate had kind of like exploded. There's soul bound tokens, there was community bound tokens, ENS name bound tokens, now human bound tokens. What we're actually seeing is this non transferable tokens is a spectrum and you can define what is being bound to and what is that binding strategy. And this is where the explosion of ideas are coming. And as a builder, I feel like some of the NFT spec is kind of over optimized for what we actually express our ideas through.
00:32:36.910 - 00:33:57.910, Speaker E: So we're kind of like craving for new tools and new instruments to kind of build our ideas, right? And at auto space, we call something smaller, something simpler. We call them badges, which is powered by EIP 4973 account bound tokens. So I want to dive right into it because ever since soul bound tokens was kind of like really a hot topic, it kind of sparked a lot of hot debates. And debates are great because it really helped us intellectually navigate the space and get a pluralistic opinion from various parties. One of the first things or concerns they put out, I think, was permanence. What if I don't want a soul bound token or an account bound token anymore? And the second one is a lack of consent. What if I get an NFT that's non transferable AirDrop to me with my personal details, what would happen? And key rotation, what if I lose access to my key wallet, to my wallet? Or do I want to change my wallet? And lastly, this more popular active debate about Verifiable credentials and ABTS on chain versus off chain identity.
00:33:57.910 - 00:34:50.022, Speaker E: So lots of things, very simply put, we've written, again, lots of detail on this, but I can kind of summarize this. These were the design decisions that helped us input into EIP 4973. So permanence when we talk about in general what we baked into it is burning and dissociation from the owner of the sole bound token or account bound token can dissociate from the token itself. And then lack of consent. Non transferable tokens through account bound tokens cannot be airdropped. You need to have two way consent, which I will dive into a little bit later. And with order space, we're actually actively looking into recovery mechanisms like community based recovery, especially if you lose access and you have all these non transferable tokens.
00:34:50.022 - 00:35:25.598, Speaker E: And lastly, AVTS versus Verifiable credentials use both, really. It's not mutually exclusive. They have good use cases. And it's really we're in the early stages of kind of like the debate and application. So I'm kind of excited of what would actually come out of this next year. So on a very high level, I'm oversimplifying this. But you can see the key differences if you look at various angles or various dimensions, right? If you look at transferability consent, removal, issuance, expiration and fungibility.
00:35:25.598 - 00:36:05.650, Speaker E: But I think I want to bring focus to where consent and issuance, that's really what we wanted to did not want to compromise on when it came to non transferable token design. So let's dive right in. So this is the ERC 4973. At a glance, you could just NPM install that very easy. So that's a very light interface, right? Like it's just expresses so we can kind of dive into what this actually does. So firstly, this top section, right, this transfer event balance off, owner off. This was mainly to ensure.
00:36:05.650 - 00:36:38.410, Speaker E: Backward compatibility to NFT in general. So we actually implement the IERC 721 mm metadata. So one of the things building this EIP, actually it was super amazing learning experience. We actually didn't have the transfer event first and then we were kind of missing all this stuff. Like Ethoscan was not showing the log events, for example, or MetaMask was not showing the interesting metadata. So we actually started using the transfer event, which is such a simple change. Everything started working automatically.
00:36:38.410 - 00:37:14.018, Speaker E: The support, the interoperability actually came for free. And that's one of the reasons we went back to the transfer event. Although in a non transferable event token, you can argue that transfer makes no sense. But this was one of the design decisions that we learned to kind of ensure backward compatibility. And the next one, and this is really where the consent really comes into play. So if you see the function, there's like three parameters, right? Like the from the Uri and the signature. So we call this a Take flow.
00:37:14.018 - 00:37:55.380, Speaker E: So you cannot actually mint an account bound token unless it's two parties involved. So it's like a peer to peer, fully mutually consented protocol. So you can think about this as like, okay, Alice designs an abt described by a spec, which is hosted by the token Uri. Alice then wants to issue the abt to Bob. Alice can only do that if she signs using EIP 712 signature and provide that's capturing her consent. So now that one party consent is established, bob can now take the SBT. He would then basically authenticate by providing the token Uri, the signature from Alice, and then prove that I can take this.
00:37:55.380 - 00:38:27.646, Speaker E: So this is in AutoSpace we actually call this the Allow list flow. So I'm just like adding people to an Allow list. I'm like signing people to a badge. And the Give flow is actually, it's inverse. When Alice designs an abt, bob wants the abt, so signs it, and then Alice can now give the abt to Bob. So this in AutoSpace we call it the AirDrop flow. So if you give a badge, you can just like, basically I want this, and 100 people say I want this.
00:38:27.646 - 00:39:01.786, Speaker E: You can actually do an AirDrop through an account bound token. And the last bit is this one. It's the unequipped. This basically means complete dissociation from the account bound token. So only the owner of the token can dissociate. So these are basically the fundamental building blocks that kind of helped us create this very bare minimum, very simple, very highly functional, highly utilitarian EIP for nine, seven, three. And then auto space, we are kind of like building more flavors or more layers around it.
00:39:01.808 - 00:39:02.380, Speaker F: But.
00:39:04.190 - 00:39:30.286, Speaker E: What this had served at the fundamental has been working really good for us so far. And I also actively contribute to the EIP. And yeah, it's been super exciting and learning in general. So moving on to the other side of what the topic I wanted to chat about as well, which is definancialization. Right. At AutoSpace, we're like the badges. We see this in six areas.
00:39:30.286 - 00:40:19.986, Speaker E: How we can use a non transferable token, a membership model, non financial rewards and recognition. Onboarding quests to end with the badge, assess the reputation more nuanced governance models, and then unlock access permissions of these badge holders. But I want to bring attention to this bit, this bit of that's. Non financial rewards and recognition. I think we can all agree that the ecosystem is like hyper financialized and we want to challenge that status quo. If you're in a position of wealth and influence, you can buy tokens. And if your community is basically designed their governance on a one token, one vote system, so person of influence can basically assert their entire influence through that power.
00:40:19.986 - 00:41:13.358, Speaker E: So it's basically plutocracy, right? So we want to challenge that and we want to move towards more towards the one human, one vote. But for us, we see the one account, one vote as a necessary step to kind of get to one human, one vote. And then this is really fresh off the grill, right? This happened like a few days ago, the Mango markets. The hacker exploited Mango for 100 million hacker turns around Hoffman's to return the funds, and he used 32 million of those votes to say yes to his own proposal because he hacked those and then executed that proposal. And I think we can do better than this. Right? That's a no brainer, I feel. But really, the takeaway that I wanted to kind of have here is let's move away from the one token, one vote system and away from plutocracy.
00:41:13.358 - 00:41:41.822, Speaker E: And I think let's explore new forms of governance. I think it is no one size fits all. I think we're in a stage where the ecosystem is growing so fast, and we as builders, we definitely need more instruments that are toolkit. We need to spark debate, apply rigor, get feedback. So I'm glad that I'm kind of like getting a lot of that here in DevCon. So that's a lot. That's it.
00:41:41.822 - 00:41:59.540, Speaker E: And that's a Dali author. We don't work. We just create these Dali orders most of the time. My team is surprisingly good at creating Dali orders. You can scan this, it'll give you more information about us. Yeah, that's it.
00:42:02.630 - 00:42:11.240, Speaker A: Thank you. Thank you. Raul, we have some time left. 3 minutes. Do we have questions? Yes. Okay.
00:42:13.210 - 00:43:04.518, Speaker E: Hey, can you elaborate a bit on the account? Sorry, the recovery part? Yeah, absolutely. One of the things with account recovery, it actually came up pretty actively in the debate, like, hey, if I have badges in my account, if you have non transferable tokens, what if I want to rotate my keys? Then how do I do this? And that's one of the criticisms that were pointed at Soulbound tokens initially. Quite frankly, I feel this is not a soul bound problem or soul bound token problem. This is an entire protocol ethereum problem and I feel like we need to wait until we need to do this better and then we can absolutely adopt it. But we are looking at two ways of recovery. One is a proactive recovery and a reactive recovery. But we are offloading this to the community in our protocol at least.
00:43:04.518 - 00:43:53.670, Speaker E: So it's basically like moving your phone. Like if you're porting your number from one phone to the other so you're actually doing a proactive action. So you have to kind of like prove that you are the owner of this account and the account that you're porting over to. But the way we are thinking about this is you can't transfer these tokens but you can burn all the tokens as the owner of the current account and you can get it reissued through the issuing authority which is generally the communities or Dows. The other aspect is reactive recovery, which is where I lost everything. Then that's a tricky one. You have to establish with your Dow, for example, that hey, I'm the same person behind this new wallet, you have to reissue it and one of the models we are looking at there is reissueance but the community perhaps can revoke those badges.
00:43:53.670 - 00:43:56.502, Speaker E: So that's how we're kind of thinking about it.
00:43:56.636 - 00:43:57.320, Speaker D: Thanks.
00:43:59.290 - 00:44:02.680, Speaker A: More questions. We have time for one more question here.
00:44:08.090 - 00:44:32.706, Speaker D: Just quick thing. Regard starting recovery through burning and then reissuing. It would be awesome if there was a way to do that atomically. But the other question was what is the status of the EIP? Is there time to still make breaking changes or is it already so widely adopted? And this kind of relates to this technician discussion, but I think it's yeah.
00:44:32.728 - 00:45:10.222, Speaker E: That'S a good question. I should have actually put the stats on it. I mean, people are already using it. We've seen, I don't know, maybe like 100 and 5300 hits on probably somewhere on GitHub. So we are actively thinking about backward compatibility when we're adding but the EIP is in review stage at the moment and now we are kind of talking about expiration to be baked into a badge where you can give like a 30 day expiration badge, for example, especially if you're like joining a Dow. You get guest badge, for example, you can do some interesting action. So an expiring badge is something we're looking at.
00:45:10.222 - 00:45:33.240, Speaker E: But yeah, this is one of the forums we're hoping to get feedback on. Should we park it? Should we get feedback or invest in extensions? Because there's a lot of utility this can deliver in its current form. And then it would be strange to perhaps stretch this timeline because I think I've seen AIPS go for years.
00:45:34.650 - 00:46:13.234, Speaker A: Thank you, Raul. Applause please. Thank you. Yeah, I'm just going to while the next speaker, Sweetman is going to set up the laptop and so on, I'm just going to walk you through the rest of our timetable, which is, by the way, here. So next up is Sweetman ETH, and he's going to talk about the music NFT engineer. Then we have Andres, who is going to talk about the web3 music NFT multiplayer problems. I'm very excited about that.
00:46:13.234 - 00:46:55.650, Speaker A: I think it's like it comes out of water and music research. Then we have Ian, who is going to talk about rich content types in NFTs. And then finally we have Francisco, who is going to talk about a very recent EIP called 52 67. I think it defines the domain separator of EIP 712. So, yeah, if you're familiar with that, I guess you kind of understand what this if not, then I recommend going to EIPS Ethereum.org and reading up on it. Yeah, okay.
00:46:55.800 - 00:47:34.266, Speaker G: I do have a lot of music NFTs for y'all today. So first I'll ask a couple questions. Who has a music NFT? Okay, who owns any NFTs on Optimism? Who owns NFTs on Arbitrum? Who owns NFTs on Polygon? My goal is by the end of this, you will have your hand up for all of those. Hi, I'm Sweetman E, aka the music NFT Engineer, and today we're going to talk about music metadata. First, the problem. You're going to see QR codes throughout this. The ones on that side are from musicians in Latin America.
00:47:34.266 - 00:48:05.462, Speaker G: If you want to support creators here in Latin America, scan that. Buy the NFT, support local creators. On this side you'll see CC zero music NFTs 100% free mint on different chains, and so they'll be scattered throughout. If you want some NFTs, mint them the problem. And don't worry, the same QR codes are going to be a little bit hidden in here. Music platforms are not creating music NFTs. There's a very spicy take that I like to hold.
00:48:05.462 - 00:48:47.550, Speaker G: You'll see, on your left side, these are metadata from the top NFT platforms. Up top you've got Zora creator. In the middle you've got catalog, and down at the bottom you've got sound. You'll notice that they each have different metadata, but honestly, there's no real differentiation between the metadata of a music NFT and a normal NFT in most cases. Over here on this side, you'll see the music metadata standard. This includes the same attributes as a normal NFT, in addition to attributes that matter for music. Attributes like lossless, audio attributes like BPM, attributes like duration.
00:48:47.550 - 00:49:19.386, Speaker G: These are things that matter when we're talking about platforms like Spotify or Zora wanting to index these NFTs and to be able to differentiate between a music NFT and a normal NFT. Why does this matter when we talk about Ethereum? Congrats. We're in the Ethereum wizards room. We have merged. And so now the next kind of goal in our identity crisis as a community is how do we get global adoption. I see music NFTs as the Trojan horse for Ethereum adoption. While a lot of people don't care about NFTs.
00:49:19.386 - 00:49:52.470, Speaker G: Most people do care about music. And so if we can build platforms that allow music NFTs to plug seamlessly into the existing infrastructure, we can allow for more and more people to be consuming the ethereum technology that we know and love. But the big challenge right now is that musicians are using these platforms that don't really differentiate metadata between normal NFTs and music NFTs. Next, the opportunity. Another set of NFTs. Oh yeah, the last one, I'm sorry, I didn't shout out the creator. So the last creator, this first NFT is Caspiel.
00:49:52.470 - 00:50:21.086, Speaker G: We've got Colombo in the audience, manager of Caspiel. And so that NFT is from a musician named Caspiel who dropped on Zora creator. And that is a music video of her latest music video, Riflejo. And all of my music NFTs are CC Zero from a musician named Segrato based out of Mexico, my favorite, because he does everything. CC Zero. This next one over here, we've got another Zora NFT. I think we've got Tranqui in the audience who helped a Buenos Aires creator named well created a platform called Unun.
00:50:21.086 - 00:50:40.834, Speaker G: And so if you scan this, it'll take you over to Unun to mint some music NFTs from local Buenos Aires creators. And this one is another one from Sogrado. And this one, I believe, is on Polygon. Last one was optimism. This one's on polygon. The opportunity, we have an opportunity right now to standardize music metadata right now. It's been in discussions.
00:50:40.834 - 00:51:02.318, Speaker G: You might have heard about telegram groups, you might have heard about different chats that are scattered amongst the music NFT ecosystems. Maybe you've talked with Hi Fi Labs about their music NFT standards. Maybe you've talked with Zora. There's a lot of different standards out there. We have not really reached consensus. And I find that awesome because there's no gatekeeper, there's nobody that's telling us this is how it is. It's very much a bottom up.
00:51:02.318 - 00:52:04.302, Speaker G: What does each creator want to use when they're making their music NFTs? And again, the full music metadata standard over there on this other side, how you can help? Again, the music metadata standard is not something that we're going to have sony or Warner or some record label is going to come down and say, this is how it is. It's going to be bottom up from the engineers that are building, from the creators that are choosing what platforms to build on. Each of us as individuals is choosing which memes we want to propagate in order to make the best metadata win. The final set of NFTs we've got, this is a catalog NFT from a creator named hey Bella, who is also based here in Colombia, in Medellin. And this one is an Arbitrum NFT, the same NFT by Sogrado spread the memes, all the Ethereum wizards, all of you builders, we are building. It's important that we propagate proper music metadata when we're building. If we're giving these musicians poor metadata, we're setting them up for failure in the long term.
00:52:04.302 - 00:52:52.430, Speaker G: As spotify as itunes, as these other big platforms, the Future tapes, the Spin Amps are indexing music NFTs. If we're not putting beats per minute, if we're not putting keys, if we're not putting the credits on chain, we're missing out. And so what I've been working on is I cloned the Zora metadata render, which is an architecture that allows us to decouple the ERC 721, the ERC 1155, all the tokens we know and love from the metadata that they represent. And so we have a full music metadata standard that's fully on chain, deployed on Ethereum mainnet, polygon mainnet, optimism mainnet, Arbitrum mainnet, as well as testnets for all those chains. It's live, the contracts are verified. It's fully running on a platform that I built called Decent. And so what I'd like to ask the community here, I'm not very familiar with EIPS.
00:52:52.430 - 00:53:21.786, Speaker G: I'm not really familiar with what we do as a community the formal way. I'm really used to building with the musicians on the ground. I don't know if we need an EIP for proper music metadata for us to get aligned. I don't know if we just need to talk with the Zoras to properly plug in the music metadata render into the Zora stack so that musicians can use it. Maybe it's just me writing an EIP with hi fi labs and getting it plugged in there. There's a lot of different ways we can propagate this meme out into the ecosystem. I don't really know what to do, and I'm not going to claim that I'm like the king of all this.
00:53:21.786 - 00:54:08.314, Speaker G: I just would like to have the conversation more. And so I'd like to ask for help in propagating these music metadata memes so that we can help musicians adopt this technology so that musicians can start leveraging these web3 rails that make us and the technology that we love so powerful and groundbreaking and fundamentally changing the world that we know and love. That's it. Viva LaMusica. These are all the music NFTs that I showed throughout. And then these are a lot of musicians that are based in Argentina and Buenos Aires, in Argentina as well as Colombia that I work with on a regular basis. And so if you want to talk to some musicians that are based here in Latin America and you want to get their thoughts or help them out or talk to them about the music NFTs that they're making, I've attached all their Twitter handles above, so please reach out to them.
00:54:08.314 - 00:54:21.440, Speaker G: They are the people that are on the ground doing this. I am just some random engineer that's up here talking to you all. So with that, we've still got 10 minutes, so I kind of zoomed through that. I will leave the rest of the time open to any questions from the community.
00:54:22.470 - 00:54:35.102, Speaker A: Thank you. Sweetman hand of applause. So do we have any questions in the audience. Raise your hand if you have any questions.
00:54:35.176 - 00:55:02.774, Speaker E: Yes, hi, I was wondering what was your process in Navigating to the EIP? How did you gather information about music metadata is a very complex structure, right. And not having consensus over metadata just sounds like a classic music industry, to be honest. So I was wondering how was your process to getting to this stage and the EIP generally?
00:55:02.902 - 00:55:25.060, Speaker G: To be clear, there is no EIP right now. This is a bunch of blank data. I took a screenshot of EIP 721 and I blanked out the data to just kind of like put the meme in your head as something that we can do. I don't question back to you. Do you think this is something we could do with an EIP? Or does this feel like you say, like, the music industry is too decentralized for us to come up with an EIP for a music metadata standard?
00:55:26.250 - 00:55:38.470, Speaker E: I think, yes, there is one part that's probably up for like, off chain versus on chain. I think if you have that perimeter very clearly, I think this is exciting.
00:55:39.450 - 00:56:17.454, Speaker G: In an attribute I didn't talk about. All of these decent NFTs 100% of the metadata is on chain. So one of the awesome parts about L2 S is it's incredibly cheap to store all metadata on chain. And so we can store that entire music metadata on chain for less than a penny. And so musicians that are based in Latin America cannot afford to do transactions on ETH mainnet. But by offering them these rails to be able to create music metadata, we can also offer them the opportunity to put it fully on chain so that there's no trust needed in APIs, like what Sound uses or even like the delay you get by uploading to IPFS. If you're not using a dedicated gateway.
00:56:17.454 - 00:56:24.120, Speaker G: When you store it all on chain, you get that instant availability that you get on optimism, arbitram, polygon, and the other L2 S. Thank you.
00:56:24.650 - 00:56:27.880, Speaker A: We have more time for questions if there are yes.
00:56:30.490 - 00:56:34.778, Speaker D: It wasn't clear. Do you want to write an EAP for this or do you not want to do this?
00:56:34.864 - 00:56:57.470, Speaker G: I'm very open to it. I'm here in the community. My entire life is music NFTs. So if the community decides that we want an EIP, I'm about it. I'm very much of the belief that I don't want to say, like, this is the way I like hearing, like, the music metadata standard. I didn't come up with that. That came out of catalog, and I'm just propagating that meme because it's, in my opinion, the best meme.
00:56:57.550 - 00:57:29.530, Speaker D: Yeah, I think a great first step would be to publish it seems you've done a lot of research to publish that in some written form, maybe in the ethereum magicians form, to just kind of make it visible and someone else can then maybe pick it up and formalize it in their EIP, that would be very valuable. And I want to offer a counter. I don't think that you specifying something and standardizing something would be like imposing your view of things on the world. It's just offering an option.
00:57:29.600 - 00:57:29.978, Speaker G: Right?
00:57:30.064 - 00:57:45.460, Speaker D: And whether that's adopted or not depends on the rest, like you've said. But having an option that is there and specified and standardized is extremely powerful and I don't think it's imposing anything in any way.
00:57:47.830 - 00:57:50.242, Speaker A: Thank you. Do you want to take more questions? We have more time.
00:57:50.296 - 00:57:52.290, Speaker G: Love to, especially if it's from Dan.
00:57:54.470 - 00:58:01.734, Speaker H: Hey, it's quite funny because obviously I wrote the music report yesterday that came out on this subject. Have you not read it yet?
00:58:01.772 - 00:58:02.534, Speaker F: I have not.
00:58:02.652 - 00:58:58.840, Speaker H: Interesting. Because there's definitely points of conflict between how we're seeing this and for me, having worked like Ruhl has, inside the Beast, as it were, one of the biggest issues in music industry comes around multiparty consensus, around data points and also conflicts. And that's always been my hesitance about putting everything on chain because it makes things much more complicated and it also creates friction around how much you can actually trust something versus if it's housed somewhere else in some kind of on chain registry that can be updated by multiparties. And so that's why my feeling on this has always been that Music NFT data should be minimally viable and contextual rich data should be kept elsewhere, but in a fair way, if that makes sense. So, just interesting what you think about that.
00:59:00.090 - 00:59:15.482, Speaker G: What are your thoughts on the metadata render architecture that Zora's put out? Where the creator is able to there's a trusted party, a role that is able to go back in and update that metadata when they choose. Does that make a difference or you still think the best solution is fully off chain?
00:59:15.626 - 00:59:18.318, Speaker H: Well, who decides who the trusted party is?
00:59:18.404 - 00:59:19.466, Speaker G: The creator.
00:59:19.658 - 00:59:21.946, Speaker H: But what if there's multiple creators?
00:59:22.138 - 00:59:24.434, Speaker G: I'm excited to hear Colombo's talk on that.
00:59:24.552 - 00:59:47.266, Speaker H: Yeah, this is the challenge, right? And then you've got different rides, you've got writers, publishers, producers, all these people who are part of this rich soup of influence that creates a piece of art. At the moment in Music NFTs, we're in a pretty nice place in that it's usually been one person putting something out, but shit gets complicated as soon as that expands.
00:59:47.298 - 00:59:47.830, Speaker F: Right?
00:59:47.980 - 00:59:54.860, Speaker H: And I think it's really important that as we're thinking through this, we need to be thinking for mass adoption and how to deal with that.
00:59:55.470 - 00:59:56.700, Speaker G: Point well taken.
00:59:57.710 - 01:00:02.222, Speaker A: Nice. If you are taking more questions, we have two more minutes. Yes. Okay.
01:00:02.276 - 01:00:03.390, Speaker G: Yeah. Tranquy.
01:00:09.170 - 01:00:47.690, Speaker I: This is more just a comment about whether or not you want to do like an EIP or something. I was in a talk yesterday that was like something called like, CAIP. It was kind of over my head, I'm not going to lie, like Cap Ten, but it was a different type of improvement proposal, sort of coalition about stuff related to L two S and things and addresses. So they have the GitHub that's set up. So I think an initial interesting step could just be fork their GitHub and turn it into like a music metadata IP thing. MMIP or something, I don't know. But yeah, just a suggestion.
01:00:48.030 - 01:00:48.634, Speaker E: Yes.
01:00:48.752 - 01:01:27.718, Speaker G: So here's the catalog standard and you're talking about Cap 19 as like cross chain assets. In here we have references to other types of assets. And so you'll see in fields like artwork you have a Uri and a Mime type which is very normal. But then you also have this NFT field which can link to other NFTs and that follows the Cap 19 standard of cross chain. So you can actually link different NFTs. For example, all the NFTs I just made from Sogrado are derivative NFTs of an original NFT. I did not link the original NFT and that's a downside on me and I'm going to publicly say that I could obviously do better.
01:01:27.718 - 01:01:51.102, Speaker G: But the standard is already up to date so that if we want to link other assets within our NFTs, we can. And so when we're thinking about composing NFTs as music that's built on top of stems or music that's built on top of other music, or a remix that's built on top of music that's built on top of stems, the metadata can link back to those underlying works so that we can always be pointing the credit back to those original users. Did I miss the point of your question? I heard Cap 19 and I wanted to show this.
01:01:51.236 - 01:01:52.238, Speaker A: That is cool.
01:01:52.404 - 01:02:13.830, Speaker I: I was mainly referring to the structure they have on GitHub for organizing community like input. So I think just like forking the GitHub they have would be a great place to start. If you were trying to start the process of figuring out how to just coordinate between a lot of people, forking their repo seems like a good place to start. Just start housing that information in someplace.
01:02:14.810 - 01:02:15.794, Speaker G: Thank you, Tranquil.
01:02:15.842 - 01:02:38.526, Speaker A: Thank you. Yeah, that's it. We don't have more time, so thank you very much. Sweetman. And next up is Andres and we are staying actually in music and now we are talking about the Web three music multiplayer problems and I'm very excited about that talk as well.
01:02:38.708 - 01:03:33.134, Speaker F: Thanks. Not a lot of experience presenting, but here we are. So we started off a few months ago in the water and music dow, researching about splits. And we basically got two, three main conclusions. Some of them are very obvious, some probably not that much. One is that blockchains can serve as a log of information and hopefully looking to the future even like a global jurisdiction notary system with legal validation. The second one is that blockchains have the blockchain architecture is based on a singular point of connection or entry for the user.
01:03:33.134 - 01:05:12.838, Speaker F: And the third one is that splits protocols as we understand them in blockchain are focused on distribution of funds. But US creators think about splits more on ownership than really about it being financial. So what is the problem? The problem is copyright, right? We all know it's the problem and it is the solution. And copyright law has been used and has been abused but it's still the only or the most widely used form of monetization of intellectual property, right? And if we're looking to the future where each time we have less and less jobs available, we have a growing creator class, we need to keep copyright as one of those essential ways of monetization for creators. And the copyright industry is plagued with problems, but to narrow them down it is mainly a human problem like it always is. And it is that people do not register their intellectual property as close to the moment of genesis as possible, which is actually the best way to protect intellectual property. And this is maybe because creators think that registering or that speaking about legal aspects in the moment of creation kills the vibe.
01:05:12.838 - 01:06:35.510, Speaker F: So that actually gives birth to a lot of problems. I've had problems with processes in which I have been in a studio. I'm a music producer, so I have been in a studio. We've made a hit song, everybody's super excited, right? The process as it is done is that at least in music, creators get together in a studio and they songwrite, they beat make they record, and then they bounce off the audio program, which is a wave file or an MP3. And then that MP3 gets shared among the co creators and it's either emailed to us or it's WhatsApp and we can listen to the music or what we made and vibe to it and hopefully the next day know if what we did was whack or if it's a hit record. Right. Personally I have been in those situations and I have been muscled out or cut out of hit records because the more savvy people will head out and register the copyright of the song.
01:06:35.510 - 01:07:45.060, Speaker F: And this is a story that kind of like repeats itself endlessly in music making. So what would the ideal process be? The ideal process would be to register, to have a mechanism to register the IP as soon as possible. Right? In a nutshell, it would protect the creators and hopefully in consensus be able to register this IP. In consensus, right. So we have a solution, right? We have temporarily called it a copyright wallet and a copyright wallet allows it's a tool. Basically it's a tool that is inserted in the job to be done. It's like a small sharp tool that is inserted in a job to be done process and it allows for in multiplayer mode deploying registry timestamping, a registry on the blockchain of that intellectual property.
01:07:45.060 - 01:07:55.734, Speaker F: So this is design coming from a musician, right? But in essence what it is.
01:07:55.772 - 01:07:56.360, Speaker G: Is.
01:08:00.730 - 01:09:42.620, Speaker F: An application, an extension DAP, that would register the title of the song. Let's say in this case, the ownership splits of the participants and a mechanism to drag and drop the media. The same way that a chat would have access to listening to a voicemail or a shared audio, the mobile wallets of the participants would receive that audio and they will receive a notification to accept or deny their participation in that creative process. And if there is consensus, then a smart contract is deployed and the non transferable NFT is Minted as registry. So, and before we go to future iterations, I would like to obviously, I think this is time better spent if we open up discussions because this could be a tool that obviously expands and is composed on. But I would like to basically just open the floor to questions to see if we can get to a technical solution. Because the questions that we have is and the main question we have is does this really need to be a wallet or can it be built in a simpler way?
01:09:44.350 - 01:09:50.460, Speaker A: So, thank you. Andres, do we have questions, feedback? Raise your hand, please. Yes.
01:09:56.210 - 01:10:40.654, Speaker I: Thanks. Maybe we could go back to the previous slide. I just had a question about what you're saying in ownership splits and it's kind of related to what you were saying where ownership splits are more than just who's getting what percentage of Mint revenue or something like that. It's much more so when you're in that top left corner, when you say ownership splits, are you already envisioning this breaking down into mechanical and publishing royalties or are you trying to not necessarily be SKU morphic and instead do other types of ownership splits? Or what's the idea here? I guess a greater question at just how much of the current music industry are we trying to recreate on chain versus maybe moving to stuff that's better in some way? Not that I even know what's better.
01:10:40.692 - 01:11:32.282, Speaker F: But yeah, that's a good question. And the answer would be either one of two answers. I'm guessing that the current dynamics are more of like you songwrite and you fixate on a recording immediately, right? Just because the tools are available. So people are not writing songs with their guitar, they just record them immediately. And that is just because we have the tools to do it. Unlike before, we used to write sheet music or write song lyrics on paper. But I guess the answer to that would be we could either do two registries or just split percentages.
01:11:32.282 - 01:11:53.810, Speaker F: Because at the same time writing and mastering is basically a master or recording is like a 50 50 endeavor, right? So we could split from just one big chunk of 100% of ownership or Mint specifics.
01:11:56.650 - 01:11:59.640, Speaker A: Any more feedback? We have more time. Yes.
01:12:07.530 - 01:12:36.686, Speaker G: So is the biggest reason we want it to be a wallet so that we can have that kind of signature based approval. Like the question from Dan in the last talk of deciding when a metadata would get to be updated, or if a piece of work can be included into a movie, or if the rights could be included. Like you have that signature step from each of the participants. Is that the reason kind of thinking of it as a wallet? Or what's the reason to have a wallet be the mechanism for controlling the rights?
01:12:36.878 - 01:13:52.700, Speaker F: So that is one reason. And the other reason is, and this is very personal, like looking into the future. What I think that would happen, or would happen, or would make sense if it would happen, is that this contract is like the master contract of all the IP that is derivative from this original registry. So from this original registry and we spoke about it briefly on Twitter, we could also have some form of progress NFTs where everybody is, for example, we go into the studio and then somebody's going to come and feature on a song, right, that he was not or she was not in the studio on the first day of the recording. Then there's a way of tracking the progress of the intellectual property. Obviously you could go even deeper with content ID mechanisms and whatnot, but I think that this smart contract would probably evolve to be like the master contract where you would mint the one of one of the song or the ten editions of the video and all the derivative works and accrual the value in one contract, basically.
01:13:56.590 - 01:13:57.340, Speaker B: Hey.
01:13:59.070 - 01:14:47.290, Speaker H: Something I'm really interested in is using time as a constraint to force kind of consensus between a group. And this feels like it could be quite a good that could be quite an interesting thing to bring into this. I actually wrote something about this thing like February or something about making multisig wallets in a similar sort of way. But when I did that design, I proposed that you have a time period that can be defined in which data can change and then at that point it's finalized and boom, it goes and that's that. How do you feel about that in terms of this workflow? Do you see that you've got multiple parties kind of putting their information in? Do you think that should be locked down at a certain point? How are you thinking about time as a concept within this kind of formalization?
01:14:50.050 - 01:15:46.640, Speaker F: I think, Dan, I think the ideal scenario is that creatives get agree on percentages of ownership immediately. I wish, right? Yeah, we wish. But if the tool is available, that might be an incentive, right? And if we fulfill the promise of value through these specific type of creative products, then we might be able to take it a step further. Because 20 years ago, splits were nonexistent. Basically, publishers and record labels were the ones actually doing the paperwork. But it has evolved in the creative mind that they own their creations and that they want to be a part of splits. So more and more you see producers and artists and songwriters be like, okay, let's show me the splits, or let's negotiate the splits hopefully as soon as possible.
01:15:46.640 - 01:16:12.280, Speaker F: And this is kind of just like inserting it in that moment of you bounce the song, you share it. Is there consensus? How are we splitting the ownership of this? Let's log it on the blockchain and it should serve as a proof of work in case there's legal challenges on the process.
01:16:14.730 - 01:16:16.098, Speaker A: Yeah. I have a question.
01:16:16.204 - 01:16:20.154, Speaker D: So I understand this, or my mind.
01:16:20.192 - 01:16:29.066, Speaker A: Tries to abstract this, like the concept of self sovereignty in intellectual property, but then I see this conflict between the.
01:16:29.088 - 01:16:32.670, Speaker D: Existing structures and the structures, the social.
01:16:32.740 - 01:16:37.534, Speaker A: Structures, basically, and standards that would have to evolve if this were to actually.
01:16:37.732 - 01:16:40.362, Speaker D: Come and have any chance at becoming.
01:16:40.426 - 01:16:45.710, Speaker A: Like, the dominant form of managing creative IP.
01:16:45.870 - 01:16:48.674, Speaker D: I'm wondering how you see the end.
01:16:48.712 - 01:16:53.726, Speaker A: Game of this playing out. How can this actually win out over.
01:16:53.768 - 01:16:55.494, Speaker D: The structures that we have right now.
01:16:55.532 - 01:16:57.830, Speaker A: Which are very strong power structures?
01:16:59.370 - 01:17:48.614, Speaker F: Well, the grand idea would be to finally have a global copyright database, right? If that makes sense. It has been tried several times. I know a lot of people are accepted to that or I don't know if it even is a good idea, but there has been efforts in just sharing the information. But the power struggle between corporation makes it impossible. Right. They don't want to just have that be one entity and that's where the efforts have died. Is it good or is it bad? I don't know.
01:17:48.614 - 01:18:02.460, Speaker F: I mean, probably haven't thought about the consequences, but just transparency on data I think should be publicly available and should be just like a public good.
01:18:04.110 - 01:18:05.500, Speaker A: Last question.
01:18:11.150 - 01:18:12.620, Speaker F: It thank you.
01:18:13.470 - 01:18:18.700, Speaker D: Are these splits renegotiable at a certain period after said time?
01:18:19.150 - 01:18:20.154, Speaker A: What does that look like?
01:18:20.192 - 01:18:22.914, Speaker D: What's the current kind of discourse regarding that?
01:18:23.032 - 01:18:23.410, Speaker A: Yes.
01:18:23.480 - 01:19:09.390, Speaker F: So copyright law actually states that your right on an idea is immutable. Nobody can take that away from you. So Hypnosis can buy the Bruce Springsteen catalog, but Merck could never say he sang those songs, right. Even though he owns the financial exploitation of the so and that's maybe a stupid example, but having the possibility of making the immutable record of you were there, even though you might see the financial retribution of that IP, you have the right to be credited as the author.
01:19:11.750 - 01:19:49.370, Speaker A: Thank you. Thank you. Andre, thank you for the talk. I think I really liked what you there was like this one quote that you said like copyright is immutable. That's definitely something I think we can probably all take home and think about for a while. Next up is Ian and Ian is going to talk about rich content types in NFTs. And yeah, if you are new here, basically what we are doing is the ERC lightning talks.
01:19:49.370 - 01:20:09.410, Speaker A: We are the ETH Magicians and we are talking about Ethereum requests for commons proposals. So not the core dev consensus layer stuff, but the solidity interfaces application, like these standards.
01:20:11.030 - 01:20:36.154, Speaker C: Thanks for having me, Tim. It was wild. We met at ETH Berlin a while back and to see you back in the space. Yeah, I'm going to give a quick talk on canonical media and EIP content type. So the notes are basically I'm just going to flip through JSON and talk about it. The notes in JSON are on GitHub. If you have questions beyond the talk or you're watching it recorded, make a GitHub issue.
01:20:36.154 - 01:21:14.022, Speaker C: Probably the easiest way to respond. And I'm just going to open a conversation about kind of what we've done previously as an organization at Zora. What I've done personally for certain NFT projects and rendering. So if you go to the original EIP 721, the metadata schema is pretty lightweight. You have a name, description and image. It was designed in the era of crypto punks CryptoKitties where you tracked ownership and the image just kind of showed a cute item or like the thing and then that became more and more important with time. I think it was left pretty open ended for people to build out from here.
01:21:14.022 - 01:22:14.410, Speaker C: And I do like that idea of a very minimal standard and then people can run with it, but I think at some point that standard can also be improved. So an example is, and I've had coworkers ask me this all the time, most recently somebody asked how do I mint a presentation? And the easiest thing to do would be to export your keynote or figma as a PDF and then mint it, right? Well, unfortunately the metadata standard just says image. So what people have done OpenSea kind of added animation URL to show an animation, which could be a web page, glTF audio, a bunch of random grab bag of content. And the great part about an image is if you want to render it as a consumer, you just pop it into an HTML image tag or you put an image viewer. Images are pretty well defined on how to render animations, get a lot more complex. What we could do is we could convert the presentation into an HTML viewer and upload the HTML viewer. That becomes pretty cumbersome and a little bit difficult because the original content is the PDF, it's not the HTML viewer.
01:22:14.410 - 01:23:09.062, Speaker C: And the way Zora approached this with the Zora protocol in 2020 that I didn't really work on, that was before my time, was to separate this concept of metadata and content. Content was one thing, metadata was another. And the idea here is that the NFT represents you own a particular ID and that particular ID represents a canonical off chain content. So I highly recommended to use IPFS, which is decentralized distribution layer, but as a future proofing, also used a hash function, sha two, five, six, which fits really well into a standard solidity data type. The Zora Core V Zero Solidity has a function for the Token Uri, which is not the metadata as the standard defines. It breaks the standard, but is actually the canonical content. So if we were to mint a presentation, it would be the PDF and then the metadata is defined also incredibly simply as name, description, Mime Type, and version.
01:23:09.062 - 01:23:43.122, Speaker C: The Mime type is useful for rendering. As I said, you need to have some idea of what you're going to render before and fetching it from the server. Just to figure out what the Mime type is, is a little bit frustrating. So this here calls the token Uri. It returns a IPFS file. And then here that file is just text of these two icons. The token metadata Uri is name Description mime Type Textplane So that tells the Zora platform to render a text plane image of a text plane of that NFT.
01:23:43.122 - 01:24:08.026, Speaker C: And I don't think there have been a lot of platforms that support this. So when you try to look at it on OpenSea, good luck. And that brings me to my next point of thinking about going back in computing history of what people have done to solve this problem. This is a multi part form data. It's used for email, kind of, and used when you upload files in a classic web form. It has content type and it has certain set of attachments. You can kind of think of this as an email attachment.
01:24:08.026 - 01:24:39.874, Speaker C: So I think having content type is quite important. Content length, maybe we can talk about that a little bit later. And then the body of that exact content. Here you have an example sorry, got out of weight. So an example of what we could do is add a new field to the metadata standard, either through a secondary proposal mechanism or the EIP standard that represents what we just talked about. And there's a lot of details here to unpack. So one of them is maybe you'll want to include the content directly.
01:24:39.874 - 01:25:13.810, Speaker C: Should it be body or should it be encoded in a data Uri? In that case, the Content type is redundant. But when you have an external pinned file, you really want that content type for rendering. It just makes life so much easier. From a platform and indexing standpoint, if you have a really obscure file type, let's say somebody loves to upload Illustrator files. You could use an indexer to find every Illustrator file with a very simple content standard. And I think the idea here is you have a token ID represented by a file, and the metadata describes what that file is. But that file, when you need to have a file with your NFT, is the highest resolution.
01:25:13.810 - 01:26:30.830, Speaker C: The highest resolution, the most well known version of that. An example is Zora was brought on to work with the Warhol Foundation to mint one of the original computer NFTs and it was made on an Amiga with a beta version of software. And art collectors were really frustrated that the NFT was a TIFF file, but it was built with the Zora protocol, meaning it did support TIF files, however, nobody else did. So what we had to end up doing is use the external URL, which is an OpenSea extension to link to something to link to the TIF, and then switch the image Uri to become a PNG that renders everywhere. And this is after back and forth with conservationists and with different protocols as to what they expect the NFT to be. Now, if we were to use the content standard, we could define the image that renders as a preview with IPFS and then we could use the Amica Mime type or just a binary blob with some notes around it in the description to refer to the original media. And I think that would help conservationists feel better that the NFT is representing what it really represents and not needed to be converted into a new format to be an NFT.
01:26:30.830 - 01:27:33.440, Speaker C: A second example of this is Mirror. So if you were to mint a Mirror Marketplace essay, this is what it shows. It just shows a cover image of the text of the title, a description which is a link to Mirror, and that's it. I think there might be like the author information in the properties, but it would be really cool if Quixotic has a relationship with Mirror and they could download the canonical markdown file and start rendering it on their site or at least say, hey, there's a canonical markdown file associated with this. And like GitHub, it would just open a markdown viewer if it understood it. And we can take a look at the JSON here. So if Mirror currently what they have is they have a content field and it goes to an Are we file, which is a custom content type they've defined it's quite rich, has a lot of information, but it has the body, the author information, signature information and stuff they use to run their platform.
01:27:33.440 - 01:28:07.366, Speaker C: The problem is, if we're coming at this from a perspective of an indexer, this is not very helpful. We could try to expand that content field, but that could be any file type. As I said before, it could be some binary blob or it actually could be useful JSON. So if it's defined as JSON or maybe an extension to JSON, you could use that. But the idea here is it would be the markdown. And if Mirror has extra information, they could use their own fields to refer to that information within the content file or outside. There's a way you can actually add JSON headers to markdown files.
01:28:07.366 - 01:29:13.354, Speaker C: So the file itself as an abstraction is really powerful in this case. But if you were to rewrite this using content, you could use text markdown and then Quixotic could easily parse that not just from Mirror, but from Zora tools. If somebody were to mint a markdown file, and this has happened before, when Matthew Ball wanted to mint his original metaverse essay on Zora, but we wanted compatibility with more marketplaces and we wanted parts of the metadata to be fully on chain. The Solidity contract renders the metadata JSON on chain, but it links to an HTML file of the markdown content because that's what animation URL supports. So we're having to change the media type into something that fits within an NFT, an easy way to avoid that. And also if you look at it on OpenSea, it doesn't properly parse an animation Uri with an slash slash right now, but you can see the metadata is getting loaded in. But the SA experience being a tiny box is really frustrating.
01:29:13.354 - 01:29:52.270, Speaker C: And links don't work for security reasons. Here it's slightly better, but also links don't work due to security reasons. The sandboxing on an Iframe is actually pretty difficult to work with. If this were a markdown file, you could just run it through whatever markdown renderer or even provide a link and just show the preview image associated with the NFT. A final example of this is the Dead Ringers. It is a part of the Ringers Art Blocks collection and it is a follow up limited time edition where funds went to charity. And it was a very large SVG, megabytes and megabytes SVG.
01:29:52.270 - 01:30:45.758, Speaker C: And I believe Manifold helped with the mint. And the original file for image was an SVG, but that SVG broke wallets and people were not happy because an SVG is text. And for you to encode text, you actually have to turn the SVG into some sort of Bitmap format and then convert it again and resize it. So it's really difficult to resize an SVG and most marketplaces pass through the SVG. But this particular SVG was so large it started breaking stuff. So what they had to do is they actually had to update that and change the image to a PNG that did render well. But it was a 21,000 by 43,000 pixel PNG, which also caused some problems because Marketplace has taken the PNG or whatever image file, resize it to reasonable size and display it.
01:30:45.758 - 01:31:50.956, Speaker C: So what we could do now with this particular proposed standard would be to include the optimized image that renders well within Marketplaces and then have the canonical content be the super high resolution file the artist intended. So if you own that NFT or wish to display it, you can then download that original file and work with it as you will. And if you were to take the content type, you could then encode the image SVG, XML and then a Uri, and then optionally include a Shaw two five six if you're using Airweave. That's actually a really nice way of verifying that the file is what it is, because Airweave doesn't use Content addressable hash. So the link to IPFS for every file is unique per file, but for our weave it's different. So the idea here is the Sha two five six is a really standard way for a very long time of verifying that a file matches a file and can be included in this. So overall the idea of this proposal is to add in a content field.
01:31:50.956 - 01:32:48.528, Speaker C: And the idea with content is it's quite simple, it doesn't have any underscores and it's the first time I think there's going to be some proposal or thought process around creating nested structures in the metadata. But I think it's quite useful because content underscore type content, it just doesn't like we already have JSON, we can nest this but type Uri two five six and potentially potentially body for those that want to directly put plain text in. But I feel like Uri encoding is also usually a fine option and I'd love to hear what different creators of standards or media have. Another thought was you could have some sort of attachments associated. Say you have an image that a product you're selling as an NFT and you have a slideshow. I recently worked with a team to show a product and the slideshow had five images. You could theoretically include those as attachments and then that would be rendered as like a generic attachment on media.
01:32:48.528 - 01:34:07.636, Speaker C: I think that's a little out of the scope for this project though. And I would like to focus on this idea of a single canonical file instead of a set of files because it makes sense to have a single file and a single NFT ID relate to each other and to not really focus on banners and colors and multiple sizes. Kind of on the side of open graph where you have this media, how do you render it? Well, on a marketplace or in another context, I think that's out of scope for this particular focus. And the meaning of canonical is to have a standard or primary authoritative body on a subject. So the URL is the authoritative idea of what that NFT is and it's left up to interpretation of the creator or the platform to figure out how to best express that and use it. My open questions are should this be an EIP within the Ethereum Magicians Group chat that's a pretty widely debated topic of metadata is included in the original proposal, but it's not really defined beyond that and it's defined quite loosely. So one thing I like to do is try to stick to proposals and I'll typically use the key properties instead of whatever has been defined otherwise because it's in the 1155 stack.
01:34:07.636 - 01:34:53.156, Speaker C: But I am mixing the 1155 spec with a 721 spec and then multiple files. Just an open question. So I'm going to wrap up if you're interested in asking questions from the recording or want to continue the discussion. I have a GitHub of these files and this is my Twitter and zoom in a little bit. And then the one last thing is there was an on chain version of this EIP content type that used Mime content Uri and hash. And this is kind of the inspiration for the off chain version of this proposal. On chain, the idea is if you have dynamically generated SVG, it's more composable, it's easier just to return a struct.
01:34:53.156 - 01:35:28.324, Speaker C: But I think now kind of working on more projects and finding more examples, the off chain example is more compelling and you can still generate a JSON Blob on chain, including the content field. So it kind of works both ways. I just think this is a better start to the approach way to approach this project than including a new getter function as an EIP within the solidity world. This is all off chain metadata we're talking about. I have a little bit of time, so be glad to open it up for questions.
01:35:28.442 - 01:35:38.710, Speaker A: Yes. Thank you, Ian. Thank you for round of applause. We have one question here.
01:35:39.160 - 01:35:44.200, Speaker C: Hi, I'm Marcus. Nice to meet you. If this was implemented as an EIP.
01:35:44.540 - 01:35:45.944, Speaker G: What do you think the second and.
01:35:45.982 - 01:36:25.232, Speaker C: Third order effects of this would be? I hope the very first thing is indexers platforms would include it in Minting. So manifold actually does really try hard to include a lot of metadata. They do image image underscore URL, image includes the hash and the URL and the content type and some other data. So I think kind of syncing with them to figure out what their needs are. But once you start having stuff Minted in this format, I think it's going to hit indexers. And then once indexers can understand this, people can say, oh, I can upload Illustrator files. I can upload WebGL shaders.
01:36:25.232 - 01:37:13.140, Speaker C: I can upload some binary form like you can actually now mint a solidity contract. And when somebody buys it, they'll feel more assured that they're actually buying a solidity contract rather than somebody or the file of a solidity contract rather than somebody saying, oh, here is a solidity contract. And what I typically have advised creators to do is actually explain it and link in the description the IPFS URL of the canonical media. It's hacky, but it seems to have worked and that would kind of remove that and allow for users to see like a link. And I've seen artists on Twitter talking about using unlockable media in Openc to include the source files. And if the artist is comfortable, they could just include the source files and it would be a link or some sort of description on Marketplaces. And since this is relatively easy to implement, once a few start, I think it would start spreading.
01:37:14.520 - 01:37:16.340, Speaker A: Thank you. We have another one here.
01:37:16.490 - 01:37:17.332, Speaker B: Thank you.
01:37:17.466 - 01:37:18.100, Speaker C: Hi. Hello.
01:37:18.170 - 01:37:43.020, Speaker B: Congrats for the project. So Content type is a response header on Http, right? Thinking about the second order effects, have you thought or worked on the request headers equivalent like the Accept and then having some specific wildcards such as text and then wildcard.
01:37:43.680 - 01:38:13.332, Speaker C: So the one problem when you're indexing is that a lot of times IPFS is really slow people's servers go down. If you're able to get the metadata on the client, a lot of people hot link directly to an IPFS gateway and pulling the content type out of the headers really allows for a better set of expectations when you're indexing and rendering the NFT. But your question is to kind of use the Http response conversation to define the Mime type rather than put it in the metadata.
01:38:13.396 - 01:38:13.912, Speaker G: Yeah, sure.
01:38:13.966 - 01:38:37.720, Speaker B: So there is the content negotiation step, right? And then you have from the Accept request header and more often you have some sort of wildcard there so that can help more generic applications to accept, let's say, image column wildcard, something.
01:38:37.810 - 01:39:21.550, Speaker C: So I think a lot of the off chain NFTs go through a decentralized gateway provider and those gateway providers are not very like the control of the server. Retrieving decentralized media is out of the control of the user in most cases. So you can't rely on a server negotiation. You're thinking of a world maybe where there's a server that is connected to the Uri of the NFT and that's becoming a lot less common because that means you're now having a centralized point of failure. So the idea here is if you put it in the JSON, there'll at least be some intentionality. If you're on some weird version of IPFS like node that doesn't understand the media it's serving or there's a bug in it, you'll still have something that kind of works or have an expectation of what the original intention was.
01:39:23.600 - 01:39:34.210, Speaker A: Thank you. Do we have more questions? Maybe one last question? Okay. Otherwise yes. Okay, we have fun.
01:39:41.240 - 01:39:41.556, Speaker F: Here.
01:39:41.578 - 01:39:51.850, Speaker A: You define the content type inside the JSON to save some uploads. Could you define the data in the collection as well?
01:39:52.700 - 01:40:42.692, Speaker C: That's actually a great question that I didn't have time to address. But Mirror and Zora and a few other platforms have additions and I think utilizing a singular NFT metadata in the contract Uri, which is an OpenSea extension, is a really effective way to handle that. And right now I know most platforms that do additions support the contract Uri. So for Dead Ringers and for Zora additions, the contract Uri is actually generated on chain and sometimes we'll put in IPFS depending on how big the content is. And that includes image and includes animation if every single thing in the collection is the same and we use that internally in our infrastructure to give a preview. If there's no mints yet or what that whole collection is supposed to be, there's no standard around it. But this would also slot quite well within the contract metadata.
01:40:42.692 - 01:40:47.770, Speaker C: If you wanted to have a canonical contract content field, it should just work.
01:40:49.020 - 01:40:52.490, Speaker A: Thank you. Ian, round of applause. Thank you very much.
01:40:52.800 - 01:40:53.950, Speaker C: Thank you, everybody.
01:40:55.760 - 01:41:15.120, Speaker A: Next up is Francisco from Openc thank you. Which is going to speak about EIP 52 67. And I have been saying the entire time that it's about the domain separator. Okay, gladly.
01:41:15.540 - 01:42:01.952, Speaker D: Yeah. So sorry, we're going to move on from NFTs now. It's going to be about ERC 20s, which are boring now, but okay, correction, I'm not from Openc. I work at Open Zeppelin maintain and develop Open Zeppelin contracts, which obviously maintains many ERC implementations. And so this is a really important topic to me. So this EIP that I'm going to be talking about is really quite tiny, but I want to use it more as an excuse maybe, to talk about the process of building an EIP and the kind of steps that I think one should follow. Because, like, EIP one, which it's not here, but maybe you've all seen it kind of defines the series of stages, like draft review, last call and final.
01:42:01.952 - 01:43:11.732, Speaker D: But it doesn't really say what should happen in each of those stages. So I want to share how I personally am thinking about that as I develop an EIP. Yeah, so the problem at hand here is the ERC 20 permits. Anyone that has used a AMM, a decentralized exchange before knows that in order to do a token exchange, you need to approve first and then transfer. And this EIP permit is one way of foregoing the initial approved transaction and replacing it with a signature that allows you to do it all in just one transaction by just including the signature in the first transaction. So this saves gas, it's one less transactions and uses the signature instead. But it's kind of weird if you use an exchange or an aggregator, you don't really see this being used very often, I think maybe just for USDC exchanges support it.
01:43:11.732 - 01:44:06.344, Speaker D: But there are many other tokens that have this and don't. So the question that was in the back of my mind is like, why is this, why is that so weird? So this EIP underneath uses this other EIP 712, which is a special kind of signature. It's a signature not of a Blob, which is what we see often most usually, but of a kind of typed data structure. So it's kind of important because it allows you to get more structure to it. In the case of permit, you will include the amount that you're allowing. You will include an expires timestamp and anons and so on. And this is an important standard because wallets can implement support for it and show this structured data to the user in a nice way.
01:44:06.344 - 01:44:55.988, Speaker D: One of the important things in these EAP is the notion of a domains. So when you make an approval for, say, USDC, you don't want an attacker to take that signature and kind of send it to Dai. Right. You don't want an attacker to reuse the signature in a different domain. So every signature has this domain separator inside of it that makes sure that the signature is only valid in one domain. So the decentralex exchange has no way of knowing, given some arbitrary token, what domain they want to use. And I think that is the reason why this hasn't been really adopted.
01:44:55.988 - 01:45:50.872, Speaker D: So you will see that the ERC 20 permit ERC defines a getter that gives you the hash, but really the 712 RPC endpoint requires the entire domain object and there is really no way to find it here. So this is where EIP 5267 comes in. Now we will see. Now, it's a very simple function that literally just allows you to obtain the domain. This is the domain object that you will need to pass into the 712 sign RPC call. As you can see, it's extremely simple. Now, what was also in the back of my mind is that this is not also a failure of the spec 20 612 so permits, but it was also, in a way, a failure of the process.
01:45:50.872 - 01:47:14.532, Speaker D: Because if the 20 612 authors had kind of gone all the way and kind of talked to decentralized exchanges and thought through what it would entail to adopt, that they would have realized that this was missing. So I didn't only want to tackle the technical problem here, but also think about how can I carry out the process for the CIP and other ERCs to make sure that the sort of failure of the process doesn't present itself. So the question is how do we get this now, which is in review stage, how do we get it now to final? What needs to happen in order to get it to final? So, some of the things that I've done and that I would recommend you all do when you build your EIPS. So you should reach out to all interested parties and like applications and companies and projects that you think will be using this and really you should be kind of bothering them to give you feedback, to look at it and give you feedback. So I've reached out to one inch and uniswap and kind of seen tried to get from them. Is this useful to you? Does this solve a real problem for you? And generally the answer in this case has been yes. In the Ethereum Magician thread, there's also been a couple of interesting comments on common questions.
01:47:14.532 - 01:48:46.736, Speaker D: I have taken some of the questions and documented them as part of the EIP as well and also some concerns that have arised. So many of those concerns in the case of this EIP were about the backwards compatibility section which is here. But most of the discussion of the Ethereum Machine thread made me realize that even though I wrote this section kind of thought about it, there really are many more unanswered questions. So I wanted to do some more work to figure out the real backward compatibility story. So another thing that I've started doing, which I think is a really good exercise, is to implement it and not only like, the solidity part of it, but also the many parts of the stack. Again, so I've just started this repository with the implementation and most importantly, a little app, which is just a front end app, which is what I imagine that a decentralized exchange will kind of be doing behind the scenes. And here I'm putting myself in the shoes of I am the UI for one inch, and this is what I'm going to be doing and just kind of really figuring out if it works, if I can actually produce the signatures that they will need to produce and also to use this to figure out the backwards compatibility story.
01:48:46.736 - 01:50:03.624, Speaker D: And I still need to develop this a little bit further, but I'm hoping that I'm going to come up with a good and kind of comprehensive answer that I can then go back in the EIP and document it there to make sure that it really answers the concerns that were raised in the Ethereum Magicians thread. So I think, yeah, that's it. Again, it was very quick, but these are some of the things that I've been experimenting with in order to get this to a final stage. I think we see many EIPS that take more of a fast track and get to a final stage, which is better in a way, because we know that these processes can be long and it's really annoying. But then you get to a final stage and it doesn't necessarily mean anything if it hasn't been thoroughly tested. And then you're really going to run into some issues when, say, openzeppen implements it and people start deploying it and you realize, oh, fuck, this isn't really enough. So then you need to start thinking about, like, a follow up EIP, and it's all really much more complicated than it should be if we do things better before we get to a final stage.
01:50:03.624 - 01:50:08.636, Speaker D: So anyway, those are some of my ideas. Thank you. Happy to take questions, if any.
01:50:08.738 - 01:50:15.390, Speaker A: Yes, thank you very much. Do we have questions? Yes.
01:50:16.660 - 01:51:04.380, Speaker E: Hey, really cool first comment. It reminds me of the Amazon six page written narrative way of you have to sharpen your point or your case, and then you go around and get feedback from people and then incorporate that in a fact at the end of the document because, you know, other people will have those concerns or objections. So that's really awesome. Can you just speak a little bit more about that process and how you followed up with people maybe on this one or something in the past? So it's one thing for somebody to say it looks great, maybe give some feedback on the Ethereum Magicians post. But really an EIP success or failure is like people using it like you just spoke to. So do you have a good example of following back up with protocols and actually getting them to implement the EIP as part of your kind of biz dev work, if you call it.
01:51:04.530 - 01:51:58.850, Speaker D: Yeah, so, good question. I haven't thought about that too much yet. But one of the things that I personally struggle with is that I feel like I'm in a bit of a conflict of interest position because of being an opens up and contracts maintainer. It's going to be really easy for me to put this in the contracts and make people use it, but I don't want to force it down, people. So, for example, one thing that I could do, and now that I'm thinking about it, I think it will be a great idea is to talk to this one inch developer that I talked about and maybe try to get them to walk me through. Do they really see themselves implementing this and maybe what is the timeline and kind of just trying to get more concrete data on their plans and try to get them to commit? Maybe that's what I would do.
01:52:00.660 - 01:52:21.210, Speaker A: Thank you. More questions, feedback, maybe people that have used this or 712, raise your hand if you have a question. Okay, then. Thank you very much. Francisco round of applause. Thank you. Thank you.
01:52:21.210 - 01:53:06.150, Speaker A: Yeah. And that's essentially it. That was the, ERC, lightning talks from the Magicians. I hope you all liked it. You can find each and everyone, hopefully on the Eve Magicians Forum and I'm looking forward to all of the posts that are coming out of these discussions. I want to thank you all for participating so much in this conversation and I really appreciate that we were having a back and forth between the audience and the presenters and so on and yeah, it was great to be able to host this and yeah, thank you very much and see you around.
