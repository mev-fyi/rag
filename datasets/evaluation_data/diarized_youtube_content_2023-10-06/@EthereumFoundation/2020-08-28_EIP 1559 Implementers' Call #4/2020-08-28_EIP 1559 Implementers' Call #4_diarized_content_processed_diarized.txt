00:00:00.490 - 00:00:24.058, Speaker A: Oh, and James just walked in. Great. Cool. So good morning, evening, depending where you are. This is implementers call number four for EIP 1559. There's a couple of things we had on the agenda to cover today. First up was just a status update from the different implementing and research teams.
00:00:24.058 - 00:01:13.540, Speaker A: Then I think the biggest part of, I guess meet for the meeting was just trying to figure out what are the next steps and to get this eventually deployed on main net. What do we see as kind of the intermediate milestones to get there. There was also discussion of EIP 20 718 which is the type transaction. And finally something that came up on Twitter around just is there ways we can speed up development by adding additional resources so if people have thoughts, comments on that we can kind of finish up with those. So first up, let's start with the updates. Yeah, don't know if anyone wants to jump in first, otherwise I can call on people.
00:01:14.550 - 00:01:15.362, Speaker B: I can go first.
00:01:15.416 - 00:01:17.374, Speaker C: I don't have much to update really.
00:01:17.512 - 00:01:18.102, Speaker A: Great.
00:01:18.236 - 00:01:50.240, Speaker C: So this is Ian from vulcanize working on the go Ethereum implementation. So I guess at this point my role is sort of just to keep the guest implementation up to date with the spec as and if it changes and then also to make any fixes or changes that need to be incorporated based on the results of the testnet that the beso team is running. And so there have been some pretty minor bug fixes in those regards. But aside from that there haven't been any major updates from my side.
00:01:54.070 - 00:03:05.880, Speaker D: I can go next. Abdel from consensus working on Bezo implementation. So pretty same as Jan said, we are still aligned with the latest specification, we did some bug fixes and we restarted the Testnet including three get nodes and three Bezu nodes. So we tried to do some performance test, sending high throughput of transactions and we found some issues and there are no fixed and yeah, that's pretty much it. And last thing, we think that there might be an issue on the spec regarding the base fee and we believe we should maybe try to define a minimum value. Otherwise it can be a problem and if we let it go to one or even zero way it can be problematic and it can maybe never go up again. So we can discuss about that later.
00:03:05.880 - 00:03:08.040, Speaker D: That's it.
00:03:10.510 - 00:03:19.370, Speaker A: Yeah, let's definitely come back to that. I see Barnaby is also on the call. Do you have an update? Hi.
00:03:19.440 - 00:03:49.430, Speaker E: Hello. Not too much, just keep working on the simulations. A new notebook soon on strategic users. So trying to investigate what happens when you have a sudden spike in demand and users are trying to outbid each other. So trying to add more things to the library to handle this case, and that's it. And giving a shout out to Fred, who's also joining the effort, maybe, I don't know if you want to introduce yourself, Fred.
00:03:50.730 - 00:03:52.066, Speaker A: Hey, I'm Fred.
00:03:52.178 - 00:03:53.318, Speaker E: I'm going to be helping out a.
00:03:53.324 - 00:03:59.834, Speaker F: Bit with the agent based model and implementing a bit of the other behaviors. I worked a bit with this, but.
00:03:59.872 - 00:04:03.894, Speaker A: In a first price auction, and now adapting a bit of my work towards vip.
00:04:03.942 - 00:04:05.020, Speaker B: One five nine.
00:04:07.070 - 00:04:22.270, Speaker A: Nice. Great. And I see Thomas and Alexa, you're also on the call. Are there any updates from either turboget or nethermind?
00:04:24.950 - 00:04:47.480, Speaker B: Not for me, sorry. Yeah, it's the first time I came to the call just to see what's going on, because there has been a lot of, I suppose, misunderstandings in the twitter specifically. And so I just wanted to see if anybody would come here to talk about this.
00:04:48.590 - 00:04:56.780, Speaker A: Okay. Yeah, that was kind of the last bullet on the agenda, so hopefully we can get to that. Thomas, any updates on your end?
00:04:57.790 - 00:05:28.230, Speaker D: Yeah, sure. So I was spending time on the research side. So, like analyzing it, testing different numbers, making mistakes, and finding some insights. And I think that maybe within next two weeks, maybe free, we'll have net of mind connecting to this, ideally connecting to this bezo gas testnet for EIP 1559. So, catching up with everything? Yeah, it seems very reasonable prediction.
00:05:32.730 - 00:05:37.000, Speaker A: Cool. Did I forget anyone? Did anyone else have an update they wanted to share?
00:05:41.660 - 00:05:44.120, Speaker F: Maybe we should do an update on the funding.
00:05:48.140 - 00:05:51.384, Speaker A: Mean. Yeah, do you want to go ahead, James? Yeah.
00:05:51.422 - 00:06:08.160, Speaker F: So we did the bitcoin grant funding round and had a lot of participation, which was awesome. The funds so far have gone to funding Ian's work on maintaining the Geth project. The rest of the participants have come from the EF or consensus.
00:06:13.230 - 00:06:14.714, Speaker A: We missed the last bit of what.
00:06:14.752 - 00:06:29.950, Speaker F: You said, james, that the other participants have been funded through EFR consensus, just like you and I and Barnaby and Abdul.
00:06:33.330 - 00:06:33.742, Speaker A: Cool.
00:06:33.796 - 00:06:40.930, Speaker D: Is there any information about how there's some transparency behind how these funds are allocated?
00:06:43.510 - 00:07:17.364, Speaker A: So for the. We basically. So it's a public multi seg, right? Anybody can use it. We made it clear we wanted this to pay for research and development of the EEP and not go to people employed by the EF or consensus. That was kind of the high level transparency in terms of the specific transactions. I think so far the only one has gone to vulcanize. Does that make sense? Yeah.
00:07:17.402 - 00:07:41.870, Speaker D: Thanks. There was one interesting thing that I seen someone posting about some blockchain like Ethereum research foundation or something like this, posting information about funding the analysis mathematical and game theoretical analysis of EIP 1559 with some mathematician from I believe.
00:07:43.920 - 00:08:27.960, Speaker A: Yes, it's. Tim Roughgarden is the researcher. He's not on the call today. And so this was kind of a single individual who themselves funded kind of this research effort through I think, what's called the decentralization foundation. And basically Tim, his background is in computer science and game theory. And so he's going to work on doing a formal analysis of 1559 and basically comparing it to the current fee model on Ethereum today and hopefully highlighting some potential improvements or some issues with the EEP.
00:08:28.320 - 00:08:51.440, Speaker D: Yeah, this is very exciting. I've seen it. I mean, it looks amazing. Will he work with Barnaby together? Because I think this work is somehow maybe like they would probably help each other, because on one side we have this mathematical analysis, on the other side we have this. More of the analysis that is running in the simulations.
00:08:53.640 - 00:09:17.050, Speaker E: Yeah, I don't know yet. We've been talking in the initial stage. We've had a chat with team Baco and I try to stay in touch, and I think it's very complimentary. I know that he's also planning to publish some open source code, so I don't know how much he will go into the simulations, but I want to maintain the line with him.
00:09:22.860 - 00:09:26.856, Speaker D: Great, sorry, probably those outside of agenda. I'm not talking.
00:09:27.038 - 00:09:31.850, Speaker A: No worries. Yeah, and it's worth mentioning, it is a big kind of stream of work.
00:09:33.660 - 00:09:34.600, Speaker F: Updates.
00:09:35.360 - 00:09:51.570, Speaker A: Yeah. So I think it might be worth just like going back to the issue Abdel was mentioning with the base fee on the testnet, just to give kind of more light on that. Yeah. Abdel, you want to share more details on this?
00:09:53.940 - 00:10:02.550, Speaker D: I was not there. Jan, can you share more details about that? Because if I remember correctly, you work on that.
00:10:03.960 - 00:10:36.540, Speaker C: Yeah. So essentially, if the base fee currently the current mechanism, if it ever gets down to zero, it can never go back above zero. That's the hard cut off. There's also a bit of an issue at other low numbers above zero. For example, at one, the gas usage needs to be nine times higher than the gas limit. For it to increase up to two, from two to three, it needs to be five times higher, and so forth. There's some sort of function that I haven't actually figured out that describes this behavior.
00:10:37.300 - 00:10:38.850, Speaker G: That sounds about correct.
00:10:43.060 - 00:10:46.770, Speaker D: Should we define a safe minimum value then?
00:10:48.660 - 00:11:06.360, Speaker G: I think the thing that we did on the east two implementation of 1559 is to just set the minimum value to be twice either equal to the quotient or twice the quotient. I guess twice the quotient might be a bit safer. Hmm.
00:11:11.560 - 00:11:20.244, Speaker A: Because I guess at like one where it needs to be nine times higher, just because there's not enough block space, that means it's kind of impossible.
00:11:20.292 - 00:11:35.310, Speaker G: Right. The other alternative to setting a minimum is setting it so that the minimum change is one in either direction. So like, if it's smaller than the target, it always goes down by at least one. If it's higher than the target, it always goes up by at least one.
00:11:40.380 - 00:11:46.120, Speaker C: I like that idea more, but just kind of intuitively.
00:11:49.180 - 00:12:06.144, Speaker A: And so that means in the worst case, you kind of go from one to two to three, and it takes you a couple of blocks until it starts actually going up. It'll take you, I guess, a bit less than ten blocks because then you'll be back to the 12.5%, right, right, exactly.
00:12:06.262 - 00:12:22.020, Speaker G: Well, it'll take you an extra eight blocks, but then going up from eight to a million, or whatever it is, is going to take something like 100 blocks anyway, so I think even longer, like 200 blocks.
00:12:23.880 - 00:12:30.740, Speaker A: Mika has a question. How many blocks between one nano eth and zero? Assuming 100% empty blocks.
00:12:31.660 - 00:12:57.730, Speaker G: So going between one way and eight way. So that's a factor of 125,000,000, then one over eight. I think that would be about five and a half steps to do a factor of two. And then 125,000,000 is about to do the 27. So 27 multiplied by five and a half. 148 vlogs. That sound right?
00:13:01.060 - 00:13:01.810, Speaker B: Yes.
00:13:03.860 - 00:13:06.400, Speaker G: I'm sure. Give or take a few.
00:13:06.550 - 00:13:57.700, Speaker A: Yeah. So does anyone disagree with the idea of having like a minimum increment of one? Yeah, it sounds reasonable. Okay, cool. So let's make an action item to change the spec and the implementations to have a minimum increment or decrement of one. Um, and was that kind of the only outstanding issue on the testnet? I know there was like a transaction pool issue as well when we tried to put in a bunch of transaction. Did that get resolved?
00:14:01.650 - 00:14:16.290, Speaker C: No, I don't think it has. Maybe current can speak to that a bit more. There is a branch that I pushed up today that hopefully fixes that issue and is likely just due to a bug that I introduced on the last update.
00:14:16.710 - 00:14:21.160, Speaker D: We will try with this branch and see if the issue is still there.
00:14:22.010 - 00:15:22.034, Speaker A: Okay, cool. And those were kind of the two big issues, right? Obviously, that we found so far, yes. Okay. I think this kind of leads nicely into the next agenda item, which was what are the intermittent steps to get this eventually on main net? Like right now we have this one kind of small private testnet which has I think like six nodes on it. It's been really useful to find all these kind of corner cases and small bugs. But assuming that in the next week or two the spec gets a bit more stable, Nethermind is going to be ready to join as well. Would the next step be kind of a more public testnet? And if so, what do we want to get out of that? On the public testnet side, it's so that people can begin to experiment.
00:15:22.034 - 00:16:11.690, Speaker A: On the wallet side, is that something that we want to get out of it or is it more like technical vetting and hoping for more randomness due to user activity? I would say the second, at least my perspective. Yeah, cool, that's reasonable. I think that have spinning up and it's going to be hard to get people to just show up and send transactions that are like semi meaningful if it's not an existing testnet. But someone will probably will. Yeah. And I believe there was a miner on the chat who said they would be willing to supply hash power if it was a proof of work testnet. Because right now the testnet we're running between Beisu and geth is a clique testnet.
00:16:11.690 - 00:16:18.060, Speaker A: So I think also testing the proof of work is an important part of this.
00:16:23.070 - 00:16:33.470, Speaker F: If you're looking for block variance, you could just simulate that with the on distribution as well and not have to wait for mining. But just if there was mining.
00:16:35.830 - 00:16:37.060, Speaker A: Yeah, that's good.
00:16:38.070 - 00:16:49.990, Speaker H: I'm personally concerned that we just test the right code paths. So maybe we don't need competitive mining, but we do want to test the actual code paths that would be used in production.
00:16:55.530 - 00:17:49.640, Speaker A: By code paths. I guess to be clear you're referring to the proof of work, the mining ones, right? Yeah. Okay. And I think because, yeah, I think if you get like a small proof of work testnet, you're kind of proving correctness. You know, that the EAP works is intended, which we're in the process of doing on a non proof of work one. And I think the step after that is then trying to go with a testnet that has a larger existing state and seeing does performance degrade on that. Because Rick, the last time you brought this up on awkward devs, I think that was the biggest piece of feedback that you got that it wasn't clear that clients could process these large blocks, especially with state access.
00:17:49.640 - 00:18:13.920, Speaker A: So I feel like that would kind of be step three. So step one is what we have now. Step two is having maybe an empty proof of work testnet, and step three is maybe going to fork something like Robson, where we can then get an existing state and maybe get some tooling to adapt to the EEP. Does that seem like reasonable to people?
00:18:19.790 - 00:18:40.400, Speaker B: Can I just ask a quick question, because, please excuse my ignorance, but does the current implementation imply that the two transaction types we will coexist, or is the change to switch to the new transaction type.
00:18:43.240 - 00:18:45.610, Speaker C: The 2718 transaction type?
00:18:46.140 - 00:19:03.452, Speaker B: Yeah, I mean, I suppose that when this EIP is implemented, will all transactions have to have a new format or there will be possibility for old type transactions to be sent as well.
00:19:03.586 - 00:19:08.120, Speaker D: There will be a transition period where both transactions are accepted.
00:19:08.200 - 00:19:09.672, Speaker B: Okay, sorry.
00:19:09.826 - 00:19:24.610, Speaker D: Yeah. During a certain number of blocks, 800,000 blocks, and the gas pool available for legacy transaction will decrease on each block. And that's it.
00:19:27.780 - 00:20:00.350, Speaker A: I was just going to say one thing that's nice about that that took me a while to understand is because you have the two x block size, even when it's 50 50, you'll still be able to deploy a contract that would say, take up a full block today because you'll just fill half the block with your legacy transaction or your 1559 transaction. So even though you split kind of the available block space in half between the types of transactions, you're not actually decreasing the max block size that someone can use.
00:20:02.660 - 00:20:14.070, Speaker B: Based on your experience with the implementation so far. Where is the kind of biggest complexity in terms of the code lies in which part of the code?
00:20:16.360 - 00:20:42.060, Speaker D: Personally, I would say maybe the handling of different RLP encoding decodings based on the transaction because we don't have the type transaction envelope. But if we make it a requirement for this, I think it will become easier. But yeah, to me it is pain. Point of this implementation is about encoding decoding of different types of transactions.
00:20:42.800 - 00:20:56.016, Speaker C: I'm also a big proponent for 2718, but for the guest implementation, I'd say the most complicated area is the Mem pool. The transaction pool, more accurately, are the.
00:20:56.038 - 00:21:02.960, Speaker B: Rules of the transaction pool very different for this IP than for the existing transactions?
00:21:03.640 - 00:21:21.624, Speaker C: No, not really. Actually, you're just comparing the gas prices between the two types of transactions, but the gas price is derived from the base fee and fee cap or gas premium in the case of the EIP 1559 transaction. So it's just a different process of arriving at that value.
00:21:21.822 - 00:21:26.088, Speaker B: Yeah, the reason I'm asking this question. Yes, sorry, go on, you're good.
00:21:26.254 - 00:21:34.300, Speaker A: Is the complexity in the transaction mempool because you then have two transaction mempools with different logic or just because it's altered in new logic?
00:21:35.520 - 00:21:40.896, Speaker C: The latter, it's actually a single mem pool right now ordering them all based on the gas price.
00:21:41.078 - 00:21:41.824, Speaker A: Got you.
00:21:41.942 - 00:21:54.710, Speaker C: And we do need to update the implementation to rebase on top of 1.919, which adds the deterministic ordering when two transactions have the same gas price.
00:21:58.040 - 00:23:00.410, Speaker B: Okay, so the reason I was asking these questions is because my suspicion was that the most complexity would be in the implementation of the transaction pool. And therefore, when you previously asked the question, what needs to happen for this to go into the main net? I think one of the main thing is to basically preempt any possible questions or problems that would arise with this particular implementation. For example, is this code resilient towards any kind of DoS attacks and then tick that box? Yes, it is. Because such and such and such. Could we do any stress testing on this and such and such? Basically, I think that would help a lot, because then you go into, let's say, go ethereum developers, and you'll say, these are the things that we're preempting most of the questions you're going to be asking.
00:23:06.320 - 00:23:32.340, Speaker C: Yeah, that makes sense. And I think if we roll 2718, which we may be getting ahead of ourselves, because I think that's the next item on the agenda if we decide to implement that first, that kind of introduces some uncertainty into the unlimited uncertainty into the Memp pool in that there's no real clear defined way to order transactions between all these arbitrary types.
00:23:39.580 - 00:23:58.670, Speaker A: Interesting. So it's like, on one hand, 20 718 helps with the RLP encoding stuff and makes the transactions easier to manage. But then if it makes a transaction pool, which is the utter most complicated and bit more complicated, it's not clear. It's like net win.
00:24:01.440 - 00:24:14.450, Speaker D: But we can say that maybe the transaction pool is a bigger problem than the european. We can deal with that. This is not clean, but yeah, we can deal with that.
00:24:16.340 - 00:24:16.704, Speaker A: Yeah.
00:24:16.742 - 00:24:38.250, Speaker H: I just think it's a little under specified where it's at right now for what we're trying to do. So I think that the spec needs to be cleaned up a little bit in order for us, or completed, frankly, in order for us to really start talking about how it would impact the work that we're doing, to Giorgios's point as well.
00:24:43.390 - 00:25:33.850, Speaker A: Yeah, and there's a couple of comments in the chat. I'll just read them so people not on the Zoom call can see. But Giorgio says that 20 718 seems to generalize, do we really want. Oh, is it important to bundle this with 1559? You could add an optional version field if present, and set it to v two and decode it as 1559 transaction. Otherwise it defaults to the current format. Then Mika says 1559 is one of the transaction types that you want, and there's a question about whether we need a generalized versioning scheme for transaction. And 20 718 isn't just 1559 transaction, there's a bunch of other transaction types that people are proposing.
00:25:33.850 - 00:26:01.880, Speaker A: So given, I guess the transaction pool is kind of the most complicated bit on the get side so far, does it make sense to try and maybe just specify that somewhere else in the code so that I don't know if the EEP is the right place for it. But just so like Alexa said, we can kind of proactively address some of the objections around it.
00:26:04.010 - 00:26:07.640, Speaker D: But transaction ordering is not a consensus thing.
00:26:08.410 - 00:26:19.610, Speaker A: Yeah, I know, but at least just saying this is how we did it and kind of explaining that not as like something people have to conform, just as something people can kind of critique.
00:26:19.950 - 00:26:24.750, Speaker F: And it should be added to security considerations in the EIP.
00:26:25.730 - 00:26:38.130, Speaker A: Yeah, that's a good point. So yeah, maybe just adding something about the transaction pool ordering in the security consideration section and why the potential issues can be mitigated.
00:26:40.230 - 00:27:03.820, Speaker F: And although as part of the specification in this strict EIP sense, it isn't as important in the inclusion in a hard fork, it's really important for that discussion that might happen more as those kind of processes are separating in a different place. I'm hoping my audio is better than it was.
00:27:04.270 - 00:27:05.354, Speaker A: It is.
00:27:05.552 - 00:27:21.818, Speaker F: Okay, good. So I think it's time to start thinking of it as from not just the EIP specification, but how do we get this through the hard fork proposal?
00:27:21.994 - 00:27:46.006, Speaker B: And another comment I wanted to make about this transition period. There is some kind of number. Was it 800 sort of blocks or something? Or 8000 blocks? 800,000 blocks. Okay, and so where does this number come from? Where is it coming from?
00:27:46.188 - 00:27:50.520, Speaker A: Four months time for wallets to adapt and change. Is that it?
00:27:52.750 - 00:28:04.540, Speaker B: Well, this is it actually. Is this going to be okay or would we need to have another emergency hard fork to postpone this? Because that's how I think it's going to.
00:28:06.510 - 00:29:03.200, Speaker H: I mean, Alexey, you bring up a very salient point. Yeah. I think that we need to be prepared for a series, multiple hard forks based on what happens when we don't see a sufficient transition from wallet providers, exchanges, what have you, and consequently we don't see the shift in transaction volume. I think to me, that's the biggest risk, because we can all, as engineers, have these conversations about these engineering problems, but we can find a path to engineering problems. What do we do if Omisego just doesn't change their transaction type and they have tether? I think that's a pretty big issue.
00:29:06.770 - 00:29:58.306, Speaker B: So originally, when we met in 2019, I think, was it when we discussed this in Berlin. So I suggested basically the dual transaction types. And one of the reasons I did that is because we could monitor the uptake of the second transaction type and based on this information, to inform when the transition period needs to end. Because what we really want to see is that the number of the new type transaction increasing, the number of old type transactions decreasing, and then when it gets to a certain threshold, would you say, okay, fine, now we're going to make that mandatory? I don't know. Do you think it's sensible or maybe some fundamental issue that makes it a bad idea?
00:29:58.488 - 00:30:38.720, Speaker H: I think there's a psychological component. I think that there needs to be a hard number and a legitimate threat to motivate people. You have to have a carrot and a stick, frankly. So way back when, the stick was, we're going to hard fork, and the carrot was lower gas costs in the new transaction type over time, that lower gas cost narrative, people didn't like that idea, which is fine with me. And so we're still trying to figure that out.
00:30:40.130 - 00:31:30.080, Speaker B: But this is actually quite interesting. Point is that let's say that if we had two transaction pools, I mean, basically two spaces inside the block, one space dedicated to, let's say they're equal in size, right, or in gas sort of limit. And one part can only take the transaction of the new type, and another part can take the transaction of an old type. And then with everything else being equal, if we can see that the users of the first type actually have a benefit that was promised by this EIP, then you can say that, look, these are the transactions in this pool, and they are actually benefiting because they have all sorts of benefits that people are promising. If that doesn't happen, maybe there is something wrong with it. Maybe the modeling wasn't correct.
00:31:30.770 - 00:32:00.358, Speaker E: But this assumes that the benefits will come even if users have a choice between a first price auction and EIP 1559. It's not clear that given the choice between the old transaction and the new transaction, I might want to choose the old transaction sometimes. Well, if I didn't have that choice, you see what I mean? There's not necessarily like an equilibrium where both transactions are working at the same time. There could be interactions between the two.
00:32:00.444 - 00:32:11.702, Speaker B: No, but this is actually going to be ab experiment, because essentially you can look at this as two different blockchains running for the two different rules, but we are basically just combining them in one blockchain.
00:32:11.846 - 00:32:20.302, Speaker E: And then if testing, because you're testing both groups on the same blockchain. So at the end of the day, there's going to be interactions based on the gas price, right?
00:32:20.356 - 00:32:34.558, Speaker B: No, that's true. But don't you think that model should win even in that case? Or does it depend on some sort of coercion that you have to force everybody to stick with the new rules?
00:32:34.734 - 00:33:20.820, Speaker E: It might win, but it might not as well. It's not clear to me that in the presence, let's say, of 1559, the first price auction is an unstable equilibrium where little by little, you see people migrating to a different format. You might have interactions between the two. And I agree with Rick. I think unless you have some sort of psychological deadline where, okay, that's it, you don't have the space to do it, then you avoid being in this equilibrium in the first place. But it's an interesting question, actually, if there are interactions between the two, what does the fee market look like even for the transition period? It could help sort of anticipate what will happen during these 800,000 blocks, or however many.
00:33:22.470 - 00:34:12.260, Speaker B: Yeah, I just saw a question from Mika that he said that the issue is that developers don't have the same incentives as users. We need metamask, tether and et cetera to update, since the users can't update without them. So, yes, I thought about it just now, but given the fact that this EIP has such a wide support, you would think that basically support from the wallets and stuff would actually be a competitive advantage. However, if basically the benefits are so weak that we're not even sure that this sort of EIP is going to win against the status quo, then is it really good? Or, I mean.
00:34:16.790 - 00:34:45.630, Speaker F: Even if the first one, the benefits being so weak, I don't think is the only explanation for what could happen. Like, the interactions of the two could be complicated and then also just people, not the stickiness of the way that things have been done. So I don't think it's fair to say that, because there are other reasonable explanations besides they're not seeing the benefit.
00:34:47.090 - 00:36:06.722, Speaker A: But isn't like one of the carrots here, kind of block space inclusion? Right? So if you have this 800,000 transition period at 400,000 blocks, you go 50 50, and then under 400,000, it means more than 50% of the block space is for 1559 transactions. And at some point the benefit is like, well, if you want a large number of transactions included in the block without raising the base fee, then you kind of need to support 1559 style transactions. And then this is kind of where large applications, if you're like a coinbase or pizza or something else, and you actually have a significant amount of on chain volume, you have a really strong incentive to use that block space. And then the first person to use it kind of creates a race. Like, you want to be the first person to access that block space. So you implement it first, because otherwise, I guess after the 800,000 block period, it's like if you didn't implement this change, you can't send transactions to the chain, which seems like a pretty big distance.
00:36:06.786 - 00:36:17.500, Speaker B: I mean, one of the kind of ways to probably address this, I don't know, does the EIP 1559 fixes the maximum block dust limit or does it not?
00:36:18.190 - 00:36:20.842, Speaker C: It no longer does. It's just using the minor limit now.
00:36:20.896 - 00:36:59.850, Speaker B: Okay, so what if you essentially fix the old style block Gus limit, like forever? Or maybe just make it so that it can only be reduced, but you allocate all future gas block increases to the new transaction type. And in this situation, whenever there is an increase in block size limit, it only increases it for the EIP 1559, which means that the people who did not upgrade, they still have a functionality, but they will have to cram into much smaller space. And so that actually probably is going to be enough incentive for people to migrate.
00:37:00.190 - 00:37:17.854, Speaker H: This was my original suggestion, was that we over almost exactly verbatim what you just said. And I think the complexity of the conversation sort of put people off from that. But if we're coming back to it, I'm very strongly in favor of it.
00:37:18.052 - 00:37:22.714, Speaker A: Increases or shifts in distribution increases.
00:37:22.762 - 00:37:39.560, Speaker G: I think we do want to retire the old version at some point. In general, the protocol can't just kind of keep on increasing complexity by adding new types of things forever without removing old things. Right. So it's just a question of is it four months or eight or twelve or whatever amount?
00:37:42.810 - 00:38:14.414, Speaker B: What I'm saying is that you could do these decisions with having some data, because what I don't want to do is that make all decisions before we even know what's going to happen. So we can say that now we're going to fix the old block size and then we're going to reserve all future increases for the new ones. And then we look back into six months and say, okay, what happened? Did anybody still use the old type? And if not, then we say, okay, we're just doing a ditch it or something like that.
00:38:14.532 - 00:38:45.370, Speaker A: So one, I don't know if we're advocate, anyone's advocating for block size increases right now. And so I don't know if there's much room to grow there. And two, if there's two distinct spaces of block space, they both will be used because there will be sufficient demand, regardless of the fee structure, to use both of them. So I don't think you're going to see the pre 1559 half or portion just kind of die because block space is block space to a certain extent.
00:38:47.070 - 00:39:12.274, Speaker F: And another thing to think about, it would be nice if the two markets were actually separated, but what will happen in practice is we have the standard market or the legacy market, and then we have the 1559 market. And if they exist at the same time, there's a supermarket that encompasses both of them, of people being able to play against them or not against them.
00:39:12.392 - 00:39:20.534, Speaker B: But actually this is going to be great because that means that people have implemented the new transaction type, the fact that they're going to be arbitraging it.
00:39:20.732 - 00:39:39.322, Speaker F: Yeah, but that will make the one being adopted versus the other information not as useful because you're not seeing the adoption, you're seeing the result of both markets existing at once and then playing against each other.
00:39:39.456 - 00:40:11.800, Speaker B: No, what I'm saying is that it is not possible for a third party to modify, let's say if I send the old style transaction, it's not possible for the third party to trustlessly modify my transactions into the, upgrade it into EIP 1559, it has to be me to create that transaction in the first place. So the only per people who can arbitrage this are the per people who create transactions. And if they do that, it means that they've already upgraded, they can already send the second transaction type. So I don't see it as a bad issue.
00:40:12.890 - 00:40:13.350, Speaker A: Yeah.
00:40:13.420 - 00:41:07.640, Speaker H: So the way that I had envisioned it originally was that one five nine transactions always happen. First. You double the total gas limit, and then you basically make sort of like a special block, if you want to think of it, that much bigger block. That double block is split in whatever ratio. And 1559 transactions always come in first, and then they're ordered based on gas price, and then the old transactions are ordered after that. So if you're in some sort of auction, if you're one of these users that's using so much of the gas or what have you, you're going to want to switch to 1559 because you're always going to beat who's ever in the traditional transaction type.
00:41:08.490 - 00:41:33.760, Speaker G: So another possible idea would be that if we want old style transactions to continue being valid forever, then we just make it valid to include them as being part of the 1559 space. And we would just map the gas price to the max gas price and say, just set the bribe to some standard five way or whatever. It's a bit ugly, but.
00:41:36.790 - 00:41:40.210, Speaker A: Do we want to have those transactions valid forever?
00:41:42.230 - 00:41:44.866, Speaker F: I don't think the idea would be.
00:41:44.888 - 00:41:55.462, Speaker G: That at least we would be able to retire basically everything about the old rules except for the format, and we can retire the format later when we want.
00:41:55.516 - 00:42:42.120, Speaker B: I think I would suggest that after a certain amount. So what I suggest is to basically do at least two hard forks in the first hard fork, we do what I've just suggested, and then once we get some more information, let's say in six months time, if we see that the adoption is happening, like people are really migrating, and then we can say, okay, after that we introduce the exponential. Not exponential, sorry, the linear sort of shift of the ratio down to zero. So over a period of time, the ratio is just simply going to drop to zero of the old transaction type. I basically suggest not to introduce this kind of cliff edge moment right now, but introduce it after we've seen what happens.
00:42:43.610 - 00:42:51.450, Speaker A: But I don't know, then there's no incentive for people to adopt 1559 in the first hard fork. Right?
00:42:51.600 - 00:42:53.610, Speaker H: Well, it would only be carrot.
00:42:55.070 - 00:43:16.130, Speaker G: If nobody adopts the 1559, then the base fee on the 1559 thought will be tiny and there will just be this space ready for people to claim it. The economic equilibrium is basically that the ratio of adoption is the same as the ratio of the gas limits of the two spaces.
00:43:16.470 - 00:43:23.250, Speaker A: Right. If you allocate some portion of 1559, it will be adopted by somebody because block space is in high demand.
00:43:23.910 - 00:43:37.160, Speaker B: Oh, yeah. If that is happening, then this is a good data to say, okay, after this we're going to just go do the kind of cliffhange. Not cliffhange, but basically gradual reduction of the.
00:43:38.650 - 00:43:54.570, Speaker A: Another option is have the gradual reduction start 400,000 blocks in, because at that point you can have an emergency hard port turned off if nobody's been using the other half. But otherwise you don't have to schedule multiple hard ports.
00:43:55.570 - 00:43:58.094, Speaker H: Yes, I was going to suggest something similar to that.
00:43:58.132 - 00:44:12.850, Speaker B: So, yeah, I agree with mean, I understand now Mika is saying that we consuming too much time on the call, but I think it's probably worth talking about it because it will make the rollout easier or harder.
00:44:14.230 - 00:45:03.540, Speaker A: Yeah, and I think personally I'm in favor of something that doesn't absolutely require a second hard fork because this idea of having the transition period only kick in halfway through, I think is nice because it gives more warning, although there will be warning by this being deployed on testnets. Right. Like if you look at the whole process. But what's nice with having this transition period in the first EEP, it means that at some point it goes to zero. Worst case, we have an emergency hard fork to push it back. But if it does reach kind of zero block space for all transactions, then the second hard fork is really optional. It's like, do we want to do this to clean up the protocol and make it simpler? But if for whatever reason, we don't want to do another hard fork on eth one or something like that, we kind of don't have to.
00:45:16.460 - 00:45:55.830, Speaker F: And I understand the trepidation towards it looks like somewhat relying on an emergency artwork if we needed it. But I would tend to the. If we were able to do something and then say, hey, we can do something if we really need it, versus we have to push this six months to nine months further back, that the preference of the community would be, we have and we can emergency, they would rather us move forward.
00:45:58.040 - 00:46:17.470, Speaker B: Well, I think this is, I guess, a bit more philosophical question about my personal view that it should be a matter of principle, that if you don't touch it, it just keeps working. You don't have to rely on something happening in the future. But other people have different opinions in that.
00:46:24.570 - 00:46:44.560, Speaker A: Just to make sure I understand this, what would be the advantage of having the kind of transition period only kick in halfway rather than linear over the whole time? Right? Are we just saying we give more today? Because another way to achieve that is like you literally plan the hard forks two months later.
00:46:45.170 - 00:46:54.720, Speaker H: Psychological. It's a game of chicken, right? I mean, we have to tell people we're going to drive off the cliff or else they're not going to do anything.
00:46:55.410 - 00:47:18.070, Speaker A: Yeah, that's what I'm thinking as well. So I think I'm kind of in favor of just having the transition period over the whole, to go from 100% all transaction to 99, 98, rather than just giving this kind of, I don't know, 400,000 blocks of slack which we can get by just delaying the hard fork 400,000 blocks.
00:47:18.810 - 00:47:21.180, Speaker H: I think it's a question of.
00:47:22.910 - 00:47:23.226, Speaker A: We.
00:47:23.248 - 00:48:00.920, Speaker H: Have this evaluation inflection point that I think is very difficult. I think it's a good idea that Alexei's suggesting that we have this point where we as a community make a decision and decide which way do we go. And I think that, again, from almost like a game theory perspective, what we have to say is, okay, we've started the car going towards the cliff and now we can turn the wheel, but we have to turn the wheel to stop from going off the cliff or we do nothing at 400,000 blocks and we continue to go off the cliff. So it's like that kind of game.
00:48:01.290 - 00:48:32.640, Speaker A: Yeah. Okay, that makes sense. And is there a way we can get some preliminary data on that? Right. Obviously, if it's live on a network, then people can start kind of playing around with it. Yeah, I don't know. Is there a way to test this before we get the main net, basically.
00:48:33.090 - 00:48:38.320, Speaker E: Has anybody looked at filecoin yet, like the data that we have already?
00:48:39.330 - 00:49:14.202, Speaker H: Well, the problem with that is every other example is someone implementing something where they don't have billions of dollars literally running on an old transaction type and they need to switch to a new transaction type. For us. There's two separate problems. Right. There's the new set of mechanisms of 1559, which I think can be verified and reasoned about and are not. That's a pretty well defined problem. And it looks like other teams have sort of taken this, what we've started here and gone off and implemented that.
00:49:14.202 - 00:49:39.700, Speaker H: And I think that's fine. And I think that's pretty well defined. And then there's the fact that we have to have a transition period because we have so many existing users that other chains obviously don't have. And I think it's that transition period that really changes the conversation. And I think is what gets lost on people is that there's a social problem that we have that other teams simply don't have.
00:49:44.380 - 00:50:21.328, Speaker B: Yes. And also you have to project. I mean, we could obviously all argue that, yeah. Yes, we're going to just give them a big stick at the end and then everybody has to migrate within 800,000 blocks. But it's sort of like you have to be cooperative towards basically everybody else. And I think it's reasonable to introduce this. And then they say, we're going to do another valuation and decide how quick the remaining of the transition should be because we might find that in four months time everybody migrated.
00:50:21.328 - 00:50:42.030, Speaker B: And we're just going to say, oh, let's just turn the old thing off. Or if we see that the migration happens slower, the new transaction types is taken on, but it takes a bit of time, we can say, okay, let's just do it over next year or something, and we're going to program the linear function to slope down.
00:50:45.760 - 00:51:12.180, Speaker F: There's also a risk of the idea of getting data to then support the decisions on how to turn off or turn down is great. I still am not sure that the data that we'll get is going to be very easily digestible or really say, because it is the union of two markets.
00:51:14.040 - 00:51:26.168, Speaker B: It will be clearly visible how many transactions of the new type got into the block and how many transaction of the old type got in the block. You can chart it and make a little chart out of it. I don't know why it wouldn't be.
00:51:26.254 - 00:51:36.348, Speaker E: Clear, but if both markets end up having the same gas price, which they should, if people are arbitraging, you should expect that both would be filled to capacity, right?
00:51:36.434 - 00:52:12.964, Speaker B: Yeah. That means it's a great result. You mean that there is adoption of the new type. You can also see which, let's say that if you think about the. With some analysis, you can probably identify kind of where the transactions are coming to and from. At the moment, you have a lot of websites which inject transactions for users, like all the whatever you have, lending websites and stuff like that. So what they do, they can just connect to your ledger wallet or what have you, and they create a transaction for you, inject them, blah, blah, blah.
00:52:12.964 - 00:52:31.868, Speaker B: And so you can see how many of these actually transitioned because a lot of transactions will be going into these contracts and so forth. There could be some way of estimating whether the adoption is going on or is it just arbitraging happening?
00:52:31.954 - 00:52:45.252, Speaker E: Yeah, I mean, assume that the 1559 pool is empty, then base fee should go towards zero. And then I think it will be very quickly full again, at least until the gas price in both pools are the same.
00:52:45.306 - 00:52:45.764, Speaker A: Right.
00:52:45.882 - 00:53:01.032, Speaker E: The problem is that you don't really have a counterfactual if you have both things living at the same time. You were mentioning like a b testing, but that's not really what you have because you constantly have this interaction between the markets in the gas price, right?
00:53:01.166 - 00:53:08.890, Speaker B: No, but as I said before, the arbitration actually does require you to upgrade. That's what I'm saying.
00:53:09.340 - 00:53:12.524, Speaker E: Yeah, but I'm sure people would have good reasons to upgrade these days.
00:53:12.642 - 00:53:18.764, Speaker B: Exactly. Okay, so if everybody charges it, that's already a great result that everybody upgraded to the Newton format type.
00:53:18.882 - 00:53:21.840, Speaker F: But that won't show us who hasn't upgraded.
00:53:22.180 - 00:53:42.736, Speaker H: Well, yes, it won't show us who hasn't upgraded. And I'd like to point out that given the current realities of the chain, the users are not the end users. The actual humans who tweet and use discord are not the largest gas consumers.
00:53:42.768 - 00:53:42.964, Speaker B: Right.
00:53:43.002 - 00:54:15.410, Speaker H: The gas consumption is not really indicative. There's heavy gas users. There's people using 100, a thousand times as much gas as other people. And so those people are obviously going to be optimizing and arbitraging. I mean, there are gas arbiters who exist in the market today. They will be doing this price manipulation, not end users. And it doesn't matter if there are these gas manipulators out there manipulating the price, even if it's to our mechanistic benefit, if metamask doesn't support our change, for example.
00:54:17.220 - 00:54:24.050, Speaker E: Yeah, I agree with that. I think we don't really see the iceberg of transactions on the.
00:54:26.680 - 00:54:34.630, Speaker B: Mean if you look at the gas consumption right now. So number one is probably uniswap, right? Uniswap would be one of the first people to upgrade, I'm pretty sure.
00:54:37.080 - 00:55:09.040, Speaker H: Yes, I think we could get them to upgrade. And I think that this is sort of, the conversation is, well, can we get uniswap to upgrade? Can we get metamask to upgrade? Can we get etherscan to upgrade? Can we get coinbase to upgrade? If we can get these different community members to upgrade, if we have a process for engaging them, then we can really lower. I mean, we can talk about this risk from a mechanism perspective till we're blue in the face, but at the end of the day, someone has to go talk to someone and make sure that they're switching.
00:55:10.740 - 00:55:17.540, Speaker B: Well, actually, Mita said that 90% of units opens bots, but actually it's fine because the bots will also upgrade.
00:55:19.400 - 00:55:43.710, Speaker A: And just one thing I'm not sure I understand. So if you don't have a transition period, how do you split the block size? Do you just say the gas limit is x and whatever type of transactions go in and there's no carrot or stick? It's just you can send either type and one block can be 99% 1559 transaction, and the other can be whatever percent?
00:55:47.660 - 00:55:58.236, Speaker H: I've never seen that proposal explicitly. I think I understand your question, but I don't know that anyone has ever proposed what you're describing, so I'm not sure how they imagine it to work.
00:55:58.418 - 00:56:10.050, Speaker A: Yeah, but basically, what we're talking about right now, right? If you remove this transition period to see what happens on the chain. How do you actually allow that? Right.
00:56:13.300 - 00:56:18.416, Speaker F: You just have two buckets and then leave them as two buckets and then say, have fun.
00:56:18.598 - 00:56:36.856, Speaker A: Yeah, exactly. But then, for example, how do you calculate the base fee? Do you take into account normal transactions to calculate the base fee? You obviously can't do that because then you're kind of removing this incentive to use 1559 style transactions. I don't know. Maybe it's something I'm not understanding well.
00:56:36.878 - 00:56:47.150, Speaker B: But I think you just treat them as two different sort of pools, and you look at them as two different blockchains. I think, in a way.
00:56:49.840 - 00:57:00.930, Speaker A: Yeah. It seems to me like maybe this actually adds complexity to the EEP, whereas having the separate clean buckets makes it simpler. But I'm not sure if that's just from a high level.
00:57:04.740 - 00:57:13.972, Speaker H: My intuition is that you have to have two very clear buckets, and if you don't do that, it just doesn't work.
00:57:14.106 - 00:57:37.420, Speaker A: Okay. Got it. Yeah, that's what I'm thinking as well. And then in the chat, there's a couple of comments that say you just leave it 50 50 independent, like, forever. But the challenge there is that's actually more aggressive than the current proposal because the current proposal starts at, like, 0% 1559 and then gradually gets the 50 50. The current proposal starts at 50 50.
00:57:37.570 - 00:57:40.910, Speaker H: Well, it doubles the block size and starts at 50 50.
00:57:42.880 - 00:57:46.944, Speaker A: Got it. Yeah.
00:57:46.982 - 00:57:52.112, Speaker B: So basically there's immediate boost in terms of block gas limit after the hard.
00:57:52.166 - 00:58:16.180, Speaker A: Yeah, I thought it doubled the block size and started at 1000. Sorry, that's my bad. Because if you did that. Right, if you doubled the block size, start at still 100% legacy transaction and over time allow more 1559 transaction, then you get to this 50 50 spot midway through the transition.
00:58:18.840 - 00:58:56.272, Speaker H: Right. And the other option, I mean, I think that there is this sort of desire for engineering parsimony. And I'm sorry, I can't read the chat and listen at the same time, but I appreciate the desire for engineering parsimony where you don't increase the block size. And then what would have to happen is you'd have to ramp in 1559 and then ramp down the classic transactions, which would basically be throttling potential 1559 adoption, which we don't want to do, which is why we double the block size.
00:58:56.326 - 00:59:36.388, Speaker A: Got it. Yeah. So I guess it's kind of circling back to Alexi's proposal of just leaving it at 50 50 until we get more data on the chain. The strongest objections to that is basically that it doesn't create an incentive for people to switch. But if people already kind of want to support this, we'll see how much, I guess, organic interest there is for it. Right?
00:59:36.554 - 01:00:00.220, Speaker B: I think it is incorrect to say that there is no incentives to switch, because if you did create this extra new bucket, which is the same as the current one, anybody who hasn't migrated, they are actually sort of using only half of the space it could be using. So, like, all the new smart people who implemented the 1559 will be using the new bucket while it's still empty?
01:00:00.880 - 01:00:17.570, Speaker H: Yes. I also think that making sure that 1559 transactions simply happen first is a huge incentive that will cause many bots to go to apply it, as well as exchanges and any number of people.
01:00:19.380 - 01:00:44.004, Speaker E: And my objection to Alex's proposal is more that the data won't be able to tell us that 1559 was adopted or not because of a lack of counterfactual. So we could set up some kind of experiment. But I think this is not one that would tell us what we want to know. Like, there's no way to interpret the data in a sense of people prefer 1559 to the old style transaction.
01:00:44.132 - 01:01:42.140, Speaker H: So I think that that's super important to keep in mind. I appreciate the technical point there, but I think that the evaluation that has to happen just necessarily because of what you're saying is social. There is no data on chain that you're going to look at. That's going to answer this question for you, which is in part why we need to have this thing that Alexei is talking about. If we could just use on chain data, then we wouldn't need to give this social decision point. But because there is this large social component to the problem, we have to create this decision point where we will not have enough data, where we can't say positively that the experiment will give us sufficient data. We have to run the experiment, have this inflection point, and then see what happens in the community and actually go out and do the analysis by talking to people as opposed to looking at what's going on on chain.
01:01:42.720 - 01:01:47.584, Speaker E: Okay, yeah, I can agree with this, as long as this is fine.
01:01:47.782 - 01:02:23.080, Speaker F: And my objection is that there will be people that will adopt 1559 because there will be cheap guests and those early adopters will just run for it. But there is a large group of people that are slow and won't adapt without some kind of hard limit. In the end, if there's an option to keep doing 1559, there are people that will just keep doing it. If there's the option to do standard transactions. There'll be a large long tail of people that don't support it unless there is some kind of hardcore.
01:02:30.350 - 01:02:57.380, Speaker A: And then yeah, just for, I guess, completeness. Mika had a couple comments in the chat saying his objection to Alexis proposal is that he doesn't think we'll get any usable data from that change, that there's not a scenario where we don't see both bucket fills other than ethereum usage going to zero. And then what's the objection? To just be willing to hard fork away if we see people not adopting. Oh, sorry, go ahead.
01:02:58.070 - 01:03:24.190, Speaker H: I think we just got a mean. I'm not sure I understand Mika's point completely. I think that Alexei's point sort of encompasses both of that to we have to set a time so that we can say, okay, we should expect a hard fork here to incentivize people, to be prepared and to just give people notice.
01:03:24.930 - 01:04:27.314, Speaker B: From my point of view, this is the two different. I mean, it goes back to our disagreements about, let's say, a difficulty bomb, because I see the approach with the difficulty bomb actually mirrors what has been baked into this current EIP 50 59 proposal. It's essentially what I think is kind of insecurity over the developers that we have to always kind of embed some sort of threat or cliff edge just in case that people don't do what we want, instead of saying, yeah, we have a clear roadmap, this is what we're going to do, and we are basically secure. We know what we're doing and we are going to do what we're going to do. And if you're with us, you're with us, we don't have to threaten you. And that's kind of my approach to this. I don't like creating threats in the future, that if you don't do this, this is going to be hard for you and it's going to kill you or something like that.
01:04:27.432 - 01:04:35.118, Speaker H: I think the difficulty bomb is a great example because I think that what the difficulty bomb has actually demonstrated is that we make empty threats.
01:04:35.294 - 01:04:35.682, Speaker A: Right.
01:04:35.736 - 01:05:50.842, Speaker H: I mean, that to me, to your point, I personally believe we should be making threats, but they should be legitimate threats, not empty threats. And so if we aren't going to commit to actually doing the thing to your point, and I guess that's also sort of an interesting, again, psychological difference. Are we threatening people or are we just saying that as the operators of some level, as the architects of the system collectively, the architects are telling you this is imperative and it must happen. And so the architects are going to do everything they can to make it happen, be prepared, or are we going to, as architects, capitulate to people who are, I think we all sort of collectively believe are actually making things worse for everyone else out of either probably out of more incompetence than malice. And I think that to your point, Lexi, that is exactly like, there's a deep philosophical discussion that we have to answer here. And I think that the difficulty bomb has actually set a precedent of the EF says that something's going to happen and then it doesn't happen. And that's what I think we have to fight against.
01:05:50.896 - 01:06:23.400, Speaker B: Yeah, to summarize this, basically, if we say that, okay, it's going to happen in whatever, 8000, 800,000 blocks, everybody understand that if people didn't have time to upgrade, we're just going to emergency hard work. Everybody knows that. And therefore, I agree, this is a completely empty threat because it doesn't save any purpose. It just basically creates more work for us to. Everybody knows that if somebody puts the pressure, says, oh, we didn't migrate, you're going to kill Ethereum, we're going to do emergency fart fork. And it's also going to look quite bad.
01:06:27.290 - 01:06:47.278, Speaker F: When I'm thinking about it this way, just so I can be clear for myself, I am confident that there are people that will wait till the last moment upgrade. We've seen this with every hard work and every, yes, you just need deployment. There will be people then, but you.
01:06:47.284 - 01:06:56.820, Speaker B: Need to wait till they are in minority and then you can basically get through with it. So you have to make sure that your threats are not empty threats. That's what Rick was saying.
01:06:59.510 - 01:07:38.606, Speaker A: But assuming this is not an empty threat, what's the worst that happens? If we just put in the transition from the start, right? We get to the point where there's no more space for old transactions. Obviously, some amount of, I don't know, altruistic or smart or incentivized people have upgraded to 1559. There are some people who are kind of stuck at that point, and they can't do anything until they upgrade. I guess I'm trying to get an intuition for how big of a group that is and what's the impact on.
01:07:38.628 - 01:08:27.790, Speaker H: Them because, sorry to interrupt, it depends on who they are. If someone on this call just sort of grits their teeth and provides the fork to metamask, if someone goes out and talks to Uniswap, if someone goes out and talks to these people and makes sure that they actually hands them the patch, then maybe there are a bunch of stragglers that are irrelevant. I think it's really hard to say. We have to take a strategy that's much softer. Again, to Alexi's point, I think we have to just be willing to go out and talk to people and make the change as opposed to sort of decreeing it from on high and hoping that people then listen to our decree.
01:08:31.160 - 01:08:53.596, Speaker A: And when you say make the mean, I think it's possible to reach out to people. Right. Like James has done it for the hard forks, the cat herders have done it. I'm happy to help with that as well. It gets obviously harder if we have to implement it for Coinbase and for metamask or. And what do you see as the best or most effective path there?
01:08:53.778 - 01:09:32.250, Speaker H: Well, yeah, I usually stop thinking about this problem at right where you asked this question, but I think we will actually have to be providing forks. When I say we, I think that anyone who wants to see 1559 implemented and has the means and is on this call also needs to be willing to go out and talk to implementers of auxiliary services to make sure that they implement it as well. You can't just talk to us here and think that you're going to accomplish your goal, you're not.
01:09:39.000 - 01:10:16.450, Speaker A: So that's definitely something we can do before the next call is just reach out to various large users of the chain, or both individual large users and kind of gateways for a lot of small users, like folks like metamask and exchanges and whatnot, and just kind of gauge where they're at regarding this. And that would give us, I think, some preliminary data around what they think is the biggest hurdle, how realistic it is, how much advanced notice they need. Yeah.
01:10:26.470 - 01:10:53.660, Speaker F: That might be worth looking at funding, with funding some of that outreach, it's a lot more work than I think people realize. And having done this with hard forks, it is very high touch to even get a rough spawn most of the time.
01:10:54.270 - 01:10:55.340, Speaker A: Got it.
01:10:56.750 - 01:10:59.962, Speaker F: Which translates into that's a lot of man hours to be able to.
01:11:00.016 - 01:11:33.080, Speaker A: Yeah. And just yet to be mindful of time. Maybe that's something we can take offline. And James, I'm happy to follow up with you and Rick also, or anyone who has thoughts about this. Yeah, that's a good and. Okay, great. So just coming back to the actual implementations then, what do we see as the biggest blocker now? So assume, I don't think we have enough data to make a big change to the spec.
01:11:33.080 - 01:11:52.880, Speaker A: If we assume that what we had was good was kind of the good conceptual thing. It seemed like the transaction pool documenting better the transaction pool issues and mitigation was one big action item. What are the other things that we can be working on to move this forward.
01:11:59.400 - 01:12:08.410, Speaker C: Implementer wise? The only other thing that I've picked up is to update the spec so that the base fee is only incremented a minimum of one.
01:12:14.120 - 01:12:32.490, Speaker A: And is there value in going and doing testnets beyond what we have now? Does anyone see value in that or do we think that we kind of need this answer to the large users before we do any of that?
01:12:33.740 - 01:12:40.220, Speaker F: I see some value in having a more public testnet that we put a bounty on breaking the mempool.
01:12:41.440 - 01:12:57.350, Speaker H: Yeah, I think we should do both at the same time. I think we should continue forward with the test nets until we get up to like a Robston level test net because I think that we're going to need that anyway to demonstrate seriousness and commitment for other reasons as well.
01:12:59.000 - 01:13:34.720, Speaker B: Yeah. So I also wanted to say that there are these testnets which are basically tend to be nexus of activity, like at the moment at Syrinkabee that was wrapped robson before, where you can actually see serious action going on in terms of number of transactions, people deploying all sorts of stuff there. And so it would be good if it's possible to get that kind of network to be running on this change to just show that it's actually working. Um.
01:13:38.260 - 01:13:55.668, Speaker A: Yeah. And I feel like that's, that that's really valuable, but it's maybe like a step ahead. Like is there value? I guess that's a question. I'm not sure. But like, is there value to having a smaller public testnet before using forking one of the larger ones?
01:13:55.834 - 01:13:58.916, Speaker H: Yeah, I think we should have a phased approach.
01:13:59.108 - 01:13:59.850, Speaker A: Okay.
01:14:00.940 - 01:14:05.530, Speaker F: And then the step after that would be to get it into a Yolo pattern test net.
01:14:06.700 - 01:14:08.632, Speaker A: Sorry, you kind of cut out there.
01:14:08.766 - 01:14:16.936, Speaker F: So the step after Rick just said would be to get it into a Yolo style test net and then the step after that would be to put it into roster.
01:14:17.128 - 01:14:45.860, Speaker A: Yeah. So right now we're kind of like that. The pre Yolo step. I think over the next couple of weeks we can do a sort of 1559 style Yolo testnet. And the question there is, do we want it to be a proof of work testnet? It seems like yes, based on testing all the code paths. Does anyone have like a strong objections to that? Okay, cool. So proof of work kind of early testnet.
01:14:45.860 - 01:15:20.930, Speaker A: Yeah. Is there anything else? And I think it seems like there's definitely like a month or so of work and we can have another call after that. But just reaching out to the large users, having the spec updates and just the clarification for the transaction pools and the increments, setting up a testnet and then obviously there's all the research Barnabay and Tim Roughgarden are working on as well in parallel. Is anything else missing from this?
01:15:25.600 - 01:15:34.336, Speaker F: I think that's good. Until next time. And then after that stage, then it's getting more clients to adopt, but we don't want to do that yet.
01:15:34.518 - 01:15:42.470, Speaker A: That's good. Mika says 2000 and 718 is also like a thing we should be thinking about.
01:15:46.280 - 01:15:57.800, Speaker F: This is probably just a throwing out there in the air question. Does anyone have a sense for how long it would take to get the transaction envelope EIP into a Yolo testnet.
01:16:01.660 - 01:16:05.596, Speaker A: Basically adding yet to the current implementations, right?
01:16:05.778 - 01:16:15.980, Speaker F: Yeah. How long would it take for us to get implementations or things into the point that we could void as part of a YoLO?
01:16:18.400 - 01:16:21.472, Speaker C: Would it include EIP 1559 or would it be on the base?
01:16:21.606 - 01:16:24.076, Speaker F: No, it would just be the transaction envelope.
01:16:24.188 - 01:16:25.520, Speaker B: What is YoLO?
01:16:26.820 - 01:16:32.892, Speaker F: That's the testnet pretest that Peter Ethereum team made.
01:16:32.966 - 01:16:34.390, Speaker B: Oh, okay.
01:16:35.480 - 01:16:40.340, Speaker F: That's what they're using for integration testing, basically free testnet.
01:16:42.780 - 01:16:49.480, Speaker C: I think it would take about a week or two if that was my focus to get that implemented and go Ethereum.
01:16:50.460 - 01:16:53.610, Speaker D: Yeah, two weeks for Bezu I would say.
01:16:55.040 - 01:16:55.790, Speaker B: Okay.
01:16:58.080 - 01:17:03.196, Speaker F: If we do that, then it's pretty reasonable to start targeting Berlin, in.
01:17:03.218 - 01:17:10.064, Speaker A: My opinion, to target 20 718 or 1559.
01:17:10.182 - 01:17:11.600, Speaker F: 20 718.
01:17:12.420 - 01:17:54.316, Speaker A: Okay. Do you think we should do that now? I feel it might be valuable to just set up the test nets with our current implementation because it already took a lot of debugging to get them to work and we might be making some other pretty major changes based on feedback from large users. So given that, does it make sense to hold off kind of these large spec changes for now, except I guess this sort of increment change, which is a small one and actually makes things run smoother. But to kind of put 20 718 and the potential transition period change on hold until we have more data, I.
01:17:54.338 - 01:18:17.060, Speaker F: Wouldn'T put the 20 718 into the 1559 implementation until that it's 20 718 is on some kind of vote test net. It should be a separate, separate fork that then is trying to be included in an upcoming.
01:18:18.040 - 01:18:18.980, Speaker A: Got it.
01:18:19.130 - 01:18:32.730, Speaker F: And then once that's been accepted then we can go back and do the 1559. But if the sooner we start on getting 20 718 into what it will be implemented, then the sooner we can have 1559.
01:18:34.780 - 01:18:45.404, Speaker C: I just want to draw attention to Micah's comment where he mentions that Peter from the guest team would like to see that implemented with a second transaction type, not just the legacy type.
01:18:45.602 - 01:19:03.668, Speaker F: Yeah, so we can have 20 718 implemented, but not like on YoLO, but not in Mainnet, and then wait until there is something to include. But we can still have it implemented and in the form of what it would be like when it goes to main net that the 1559 team can adopt it.
01:19:03.754 - 01:19:23.450, Speaker H: Right. What everyone's talking about, James, is that you can't just put in, we're being thorough. You can't just have 20 718 by itself. You need 20 718 or 20 711 in order for 2000 and 718 to actually be work. You need the second type.
01:19:24.380 - 01:19:28.572, Speaker A: And I'm just wondering, is that like out of scope for what we're talking about right now?
01:19:28.706 - 01:19:33.116, Speaker H: Well, I think it's presumably all the same people, so we might as well talk about it.
01:19:33.218 - 01:19:33.820, Speaker A: Got it.
01:19:33.890 - 01:19:35.630, Speaker H: But it is out of scope. Yes.
01:19:40.170 - 01:19:46.090, Speaker F: You have to have a segregate type to be able to even have transaction envelopes be implemented.
01:19:47.150 - 01:19:51.206, Speaker C: Well, strictly, but to demonstrate its purpose.
01:19:51.398 - 01:20:27.720, Speaker H: To have it, to verify that it actually is safe and that it works. Right. If you just deploy 20 718 by itself, you just have this weird sort of vestigial thing. You need 1718 plus the actual new. You need to have two envelopes because it's relevant. Now, the thing that was confusing to me about 20 718 was, it wasn't clear to me how it treated the transaction pool. It just sort of acted like the two envelopes were equivalent, which I think more times than not, that's not going to be the case.
01:20:28.730 - 01:21:02.740, Speaker F: Yeah, so I want to be clear here that I'm not talking about main net, where the stuff that you're talking about, how Peter and 20 718 and another transaction type going into main net, all of those things need to be verified. But going into YOLO, which is the pretest net that is used for testing client integration, we could just put the transaction envelopes onto that so at least the 1559 implementers can implement it and then test it and then have that be part.
01:21:03.910 - 01:21:28.490, Speaker H: I think we probably put in a dummy second envelope. If for some reason it's too hard to implement, my inclination would be to do 20 718 and 20 711 at the same time. If there's some reason why we can't do that as from an engineering perspective, then we should come up with a dummy shim for 20 711. But I can't imagine that's significantly easier from an engineering perspective.
01:21:35.810 - 01:22:05.766, Speaker F: The reason I'm getting into this is the changes that 1559 will need to make in order to adopt 20 718 is a future bottle. So if we can get 20 718 to a point where it is moving forward and well specified and the clients all agree and it's on YolO's testnet stage, then the work of redoing 1559 to use that makes sense because we have what it would eventually be.
01:22:05.788 - 01:22:06.626, Speaker A: Paragraph.
01:22:06.818 - 01:22:20.394, Speaker H: Yeah, I agree with all of that. I think that 1559 and 20 718 are separate. The question is what goes with 20 718 since we're basically excluding 1559 from.
01:22:20.432 - 01:22:28.800, Speaker F: That list and either 20 711 or a dummy transaction that was only going to work on YOLO would also be fine.
01:22:30.530 - 01:22:32.160, Speaker H: Yeah, I think that makes sense.
01:22:33.650 - 01:22:51.110, Speaker A: And just in terms of priorities, because like Rick said, it's kind of the same people working on this stuff. Should we get the 1559 testnet up and running kind of before getting this Yodo 20 718, assuming there's not teams that can do it in parallel.
01:22:54.200 - 01:23:02.010, Speaker F: What is the Ian and Abdell kind of thing? Because I would go with what they would want to tackle first.
01:23:04.780 - 01:23:21.630, Speaker A: So first of all, just like the increment change to the spec. So I think that's probably the highest priority because it's like a small change that has a big impact, but then basically setting up a proof of work testnet with 1559 as is specified right now.
01:23:30.850 - 01:23:31.630, Speaker B: It'S.
01:23:33.510 - 01:23:58.714, Speaker F: How long is that a long process with the minimal changes? I don't want to make the decision for. I don't have the enough information on implementations and stuff. I think to make that decision. I'm just bringing the point of there is this future bottleneck that we can get ahead of and so we should, right?
01:23:58.752 - 01:24:13.230, Speaker C: Yeah, I guess it's not even clear to me if I would be the one doing 2718 since it is a separate EIP. But yeah, I don't know exactly how we should prioritize that. The immediate focus would be the changes.
01:24:13.300 - 01:24:15.870, Speaker B: That Tim just iterated.
01:24:20.070 - 01:24:50.060, Speaker A: Yeah. And my bias would also be towards getting the 1559 network up before and getting that to work. Because if there's bugs found there, I think it's a higher priority, at least for us, for the 1559 kind of effort to fix the bugs in the spec and maybe kind of if other people really want to push 20 718 they can start working on the testnet as well.
01:24:50.430 - 01:24:52.506, Speaker F: Yeah, that sounds good.
01:24:52.608 - 01:25:11.486, Speaker H: And I don't know how it's funded amongst the various implementers, but we're definitely only at vulcanize. We're definitely only working on 1559 just as a practical matter. So however that other teams handle that, I think that's on a per team.
01:25:11.668 - 01:25:30.600, Speaker A: Basis and I think for us at Pegasus it's just kind of the same. Like we want to focus on 1559 and kind of put the bulk of our efforts there and obviously 20 718 ends up being a part of that. We'll support it and we'll do that, but we definitely can't be like champions for that.
01:25:31.690 - 01:25:32.440, Speaker B: Yeah.
01:25:37.950 - 01:26:26.310, Speaker A: And I guess with two minutes to go, the idea of funding and accelerating development was the last thing on the agenda. I know, Alexa, you kind of mentioned that at the beginning. I don't know if you had some specific thoughts, to give some context. It seems like a lot of people would like to see 1559 happen quicker and potentially provide funding to accelerate that. My biggest question for the people here is just what do we see as the biggest bottlenecks in term of our execution speed? Would money actually help there? But I don't know if it's, I don't know. I can stay on like 1015 minutes if people want to chat about that. But if everyone has to drop in 1 minute, it's probably too big of a can of worms.
01:26:26.730 - 01:26:31.738, Speaker B: We could probably make it optional. Yes. If anybody wants to stay on, we could discuss this.
01:26:31.824 - 01:27:38.574, Speaker H: I'll have to go, but I'll just make my two cent. I think that the way that I don't feel like development in my whole time working on this project, I don't think that developers have been or engineering has been what's slow. I think it's been communicating to the community that you need to have research, like basic research, like Tim Roughgarden type stuff and I'm sorry, the other guy's name is french, I don't want to mangle it stuff going on. I think that getting people to understand that that has to be funded and that has to happen is like a huge milestone. And then in a similar vein, what James was talking about earlier about someone has to go door to door and make sure that integrations happen and funding that, and I think know those two things, getting funded is way more important, frankly. I mean, we'll figure out how to do the engineering, but from a financial standpoint, but getting the community to understand that we're not incrementing a variable. We're not incrementing a constant here.
01:27:38.574 - 01:27:55.560, Speaker H: We're really changing a lot of a large swath of what's going on. And that requires doing a lot more than just engineering. I think paying for that is where the money should go. And on that note, I have to go. So thanks, everyone, and I'll talk to you all later.
01:27:56.490 - 01:27:57.400, Speaker B: Thank you.
01:27:57.770 - 01:28:00.200, Speaker C: I have to drop as well. Thank you.
01:28:00.570 - 01:28:06.940, Speaker B: Thank you. Bye. Okay, let's see who's left.
01:28:10.270 - 01:28:11.370, Speaker F: Hi, Lexi.
01:28:11.710 - 01:28:15.660, Speaker B: Hi. Let's see who's left.
01:28:16.590 - 01:28:20.320, Speaker A: Yeah, I can stay. Thomas, you can stay.
01:28:23.170 - 01:28:24.510, Speaker E: It's too late.
01:28:26.450 - 01:29:07.594, Speaker B: Late, yeah. So I just kind of wanted us to discuss a tiny bit because I know that Twitter is basically really bad platform for trying to explain these things, and people get offended very quickly. Like yesterday they started lashing at each other and it's very bad. Somebody said the wrong word or whatever. But basically what I picked out from the recent conversation is that there seemed to be this sort of expectation that, okay, now we threw some money in. There's gitcoin grant, you got 60 grand, whatever. How much? I don't remember.
01:29:07.594 - 01:30:06.190, Speaker B: But where's the result? Right. It's not like that, actually. They basically say, when is this going to happen? What is the blockers? Which is all reasonable questions, yes, but we need a way to actually explain, as Rick said, what are the expensive bits of it? It reminds me of a state rent project where eventually the reason why I decided to stop doing it is because I discovered that we would need a lot of these door to door people to go doing really unexciting work of just. Basically just having meetings with people all the time, trying to figure out who can migrate, how they migrate, and all sorts of stuff. And obviously I couldn't do that. Yeah, I don't think we can sort of address this because we don't really have a lot of people. From the other side of the argument, what anybody else thinks.
01:30:11.250 - 01:30:51.006, Speaker A: I agree that there's a lot of communications and outreach that needs to happen. I don't think that's an impossible problem. I guess it kind of depends how you look at it. I'm not an engineer, so for me, the engineering stuff looks harder than having tons of meetings and I guess vice versa. I think with regards to the community's expectations, two things I'm a bit, I guess, anxious about is one, explaining the uncertainty of 1559. So a lot of people have brought up a bunch of issues today with the EEP. To me, it's still not like a done deal.
01:30:51.006 - 01:31:17.270, Speaker A: And I think there's a perception in the community that it's all downhill from here and it's really not. So I think articulating that and making it clear. And because that also translates to funding. Right. So if the people funding their Gitcoin grant are kind of mad that it's not moving fast enough, they'll be really mad if they find out there's like a fatal flaw. And I think it's really important to manage that expectation.
01:31:20.090 - 01:31:28.746, Speaker B: But they also don't. I mean, you look at the Gitcoin grant, it says 60 or whatever. How much did it?
01:31:28.928 - 01:31:32.460, Speaker A: I think it's 80,000. Because the price of ether went up.
01:31:33.870 - 01:32:15.030, Speaker B: Okay. Because somebody gave in ether. Okay, 80,000, sort of. Okay, that's sort of reasonable amount of money. But then how many people can you hire with this kind of money for how long? Then when you start thinking with these terms, it actually turns out that it's not that much. And it sort of underscores the point that the Gitcoin grant is still not capable in completely funding this project. And this is what people need to understand that there's much more if you really want to make it sort of happen at a decent pace with people not getting stressed about doing ten jobs at the same time.
01:32:15.030 - 01:32:21.580, Speaker B: Yeah, you do need to basically splash a little bit more money into this. And who is going to splash this money? This is the question.
01:32:23.630 - 01:32:59.734, Speaker A: Some people have brought this up and reached out and I've been trying to chats with some of them. And one thing like you said that I've made here is like this $80,000. So right now, how things are funded, right, there's this $80,000 grant which will probably mostly go to vulcanized modulo. Some other things. Consensus is we have me and Abdel and Kareem that we can put kind of part time on this, but obviously there's an opportunity cost there. We have paid customers and that's always like a prioritization thing. The EF has people working on this pretty much full time.
01:32:59.734 - 01:33:32.580, Speaker A: So Barnabay, which is great, and then Tim Roughgarden has been paid kind of independently by somebody else. But this means that the bulk of the work is happening by one or two people by the EF. And then one or two developers on both the vulcanize and our know it will move along. But I'm not even sure slow is the right word, but it'll be not as quick as it could be.
01:33:34.470 - 01:34:35.300, Speaker B: Yes, and also there is another issue here, is that sometimes there are certain things that need to happen before you reach your kind of full speed. So sometimes you have to do some preparatory work. An example is this transaction envelope and things, right? If it existed before, the things would be a bit easier. And so what might be interesting is to have this understanding that you not only have to wait for one year for all the work to happen, but for all the things to fall into their places, all the pieces to fall into the places. Like when you launch a test net, you cannot put, let's say, extra $100,000 and make sure that the test net needs to be run for ten times shorter than that. You actually have to wait for something to happen.
01:34:36.650 - 01:35:10.686, Speaker A: I think that's why personally, I've been reticent about going back on all core devs and discussing this again, because there's just known issues with the EEp that we're still addressing and whether you probably need more than one implementation to start addressing them. I think it's been helpful to have Baseu and geth kind of disagree on stuff and fix those, but we definitely don't necessarily need everybody to have this at the top of their priority list because we might find some other issues with it. So yeah, it's like this weird in.
01:35:10.708 - 01:35:49.520, Speaker B: Between period where and also what just Thomas is asking on the time. I know it's a sort of joke, but it's actually not a joke. Of course we should not undersell ourselves. And then it applies to pretty much everybody in the corporate development that our work does cost money, and it probably cost a lot of money. So it is okay to expect to be paid for these things. And I don't know how exactly, but the expectation is could it should be there.
01:35:51.730 - 01:35:52.970, Speaker A: Go ahead, James.
01:35:53.130 - 01:36:30.540, Speaker F: I was just going to say that an opportunity for public, for others to contribute funding in a meaningful way would be to provide funding to help the other clients implement 1559, nevermind Ethereum. The sooner those happen, the sooner it can happen. And those teams are already over. All of the client teams are busy. So to get resources to build, to implement them in all the clients would necessarily make the time.
01:36:32.510 - 01:37:31.470, Speaker B: Because basically what happens is that all the development teams at the moment, they have their own priorities, they have own agenda, because partly some of them basically are thinking about how they're going to get some money to pay their. Rick was saying it on Twitter. Is that okay? Some of them actually have to pay out of their own pocket to make things happen because they actually sort of like, because they have a bit of money or because they hope that they're going to make something out of it in the future, but just basically piling onto that and expecting things to go faster, that's not going to happen. I think that has to be sort of appreciation and respect for people and expecting to throw in 30 grand and things happening in a month, it's not realistic. So if you basically throw in half a million, then you probably can have these much bigger expectations.
01:37:35.570 - 01:37:49.220, Speaker F: So if someone came in and did an implementation into Nethermind, separate from the team to the Nethermind team, does that fit what you're saying or not what you're.
01:37:51.430 - 01:38:28.320, Speaker B: Mean? Obviously I don't want to talk for too much, but it depends on the ability to do that, also depends on the code structure and how it's structured. It's like sometimes in some of the implementations it has to be pretty much the people who are owning that to making changes. In some implementations it's easier to just come from the side and propose the implementation. For example, what we are trying to do in our implementation, we're trying to split everything as much as possible so that to allow people to come and do things on the side. But yeah, I don't know about the others.
01:38:31.350 - 01:39:45.110, Speaker A: And I guess it's also worth noting, this is kind of a weird EIP, because for normal eips client, there's some team that's usually not a client developer that kind of does a POC implementation and then they bring it to all core devs and then the clients all kind of implement it, quote unquote for free, and it gets kind of moved up. And this one is kind of weird because it's like applied r and d in a way. So there needs to be more early implementation and it's also a much larger change than other eips. And it's not clear where the boundary is from paying a third party to provide a reference implementation and then paying all the clients to prioritize that on their roadmaps. And the level of alignment you need. Right? Like how do we get funds for all the clients to prioritize this? And is that the model we want, where if there's this huge change that happens, then we basically need to pay for end implementations. And by we, I guess the community needs to find a way to pay for these end implementations.
01:39:47.290 - 01:40:22.090, Speaker B: If we wanted to eventually come to a much healthier kind of model of development. So that goes back to what we'll be discussing in July as well. If we want to come to much healthier model of development, then there has to be expectation that any work which needs to be done, the money has to come from somewhere. So far, as far as I know, that the core developers haven't figured out the way to finance their development completely without some kind of subsidies. And therefore for now the subsidies have to be applied.
01:40:22.270 - 01:40:23.000, Speaker A: Yeah.
01:40:27.530 - 01:41:16.662, Speaker E: So I think we already know we have a couple of milestones to hit. The first one is freezing the specs. Then we know that we have a yellow testnet. We know that after this we want to have a proof of work testnet or something, and then we know that other clients will need to implement. So a good way also to manage the expectation of a community would be to have a reasonable, let's say roadmap with some kind of timeline, because currently there's a lot of momentum around EIP 1559. Like a lot of people even on Twitter have said, oh, if money is the issue, we can always throw more. But a good way to say, okay, you can give us now, but we don't really need to throw like a half a million dollar on it currently is to have this sort of timeline and to say this will be useful later on once the.
01:41:16.662 - 01:41:31.020, Speaker E: Yeah, I guess after four months, if people don't really see improvement for the community, improvement anyways is very binary, like either it's on the main net or not. Whatever is happening in between, they don't really see as.
01:41:34.750 - 01:42:03.670, Speaker B: The thing about this kind of drip, drip financing is also problematic, as I think Tim mentioned on Twitter, is that the reason I'm talking about throwing in for half a million dollars is because if you know that the money is there, then you can actually really hire somebody to do the work for a reasonable time. You don't have to keep everybody on sort of zero hour contracts and stuff like that. And with saying that anytime when the money runs out, you're fired.
01:42:04.330 - 01:42:24.620, Speaker A: Yeah. And I think that's exactly the situation we're kind of in with the gitcoin Grant, to be sure. Right. We have not insignificant amount of money, but you don't know if it's going to last you three months, six months, twelve months. Right. And obviously the rate at which you spend, you kind of want to be conservative on it.
01:42:27.470 - 01:42:48.980, Speaker B: That's why the model which works the best is either you have a very reliable counterparty, like let's say Ethereum foundation that basically has a contract with you or something like this, that they give you money as long as you don't do anything really stupid or you have a pool of money in front of you.
01:42:56.150 - 01:43:21.520, Speaker A: And I think, yeah, back to Barnabase point, what I find, I think the hardest is like, yeah, how do you, for those intermediate milestones, like setting up a proof of work, testnet and whatnot, what's the right amount of funding? And should we fund client implementations for all the clients to join the testnet, which might not work, right? And if not, how many do we fund and how do we choose it?
01:43:22.610 - 01:43:57.640, Speaker B: You don't need to be so fine grained. I mean, this project is not so huge that you have to be upsetting about fine grained details. So what you could do simply is that let's say that you say okay, for this to happen, you choose the implementations. Let's say we need to go Ethereum, nevermind, whatever, open Ethereum and what else? I mean, choose them. And let's say everybody should get one developer on each team implementing this and make sure that everything kind of works for how many months, whatever. And that's basically it. I mean, really rough idea.
01:43:57.640 - 01:44:28.690, Speaker B: But then you know that in each team there is one person doing this job and of course they can do some other things at the same time. You cannot stop that. But at least the money is allocated, you know that it's there. If this project was for $5 million, then of course you have to have an extra scrutiny about where exactly this money is going. But even like if it's a half a million, I don't see the point of obsessing over the details.
01:44:30.230 - 01:45:00.960, Speaker A: Yeah, and I guess Justen has a comment around the precise funding needs for fast tracking this. I'm not sure. Is there like a way to fast track it with money? I guess, I don't know, past like one developer per team. I think there might be like diminishing returns and I'm not sure if the funding actually fast tracks things or just puts them at like a normal pace. Like we. Yeah.
01:45:07.090 - 01:46:01.200, Speaker F: The, the things that would fast track would be funding the community outreach stuff so that there is the group of people that are ready to go out and make sure people are adopting other things would be having bounties for forking metamask and put in and implementing 50 59 transaction support. So you just put up a list of major wallets and major things and say, hey, anyone that implements 1559 into it gets this bounty. And then the last one would be after this kind of round of RND that's happening for the next month or so when it turns into all the clients need to implement, giving them support through however it is for each client team is kind of the last piece.
01:46:08.640 - 01:46:59.790, Speaker B: I don't know, I don't know if it's the issue with the bounties or something like this. But I just like to simplify this because essentially if you say that there is a money to pay, let's say one developer in each team for six months, right? That's it. And this developer is supposed to be doing EIP 1669. They can do basically, if they're not coding all the time, they can do other things. Testing, write more testing, doing, spinning out test nets, talking to each other, whatever they can do to make sure that it happens, really. And if they're doing something else, as I said, it's fine as well. Would you be really upset if they spend some money on improving performance of their client as well?
01:47:00.800 - 01:48:03.010, Speaker A: And I think at least from our perspective, there's value in saying one developer is paid to do this and it can help. Just prioritize 1559 about other stuff on a day to day thing. Obviously I'd be curious to chat with other client teams to see that and I'm happy to take that action item to reach out. Like Thomas, I know you have a bunch of comments in the chat and I know you can't talk right now, but I can set up a call maybe with mind, I don't know, Alexa, if you want get to be part of this, but to just talk with the different client teams, see what's like a reasonable amount of engineering work. Can we just get one person on each client team to put this at the top of their priority list and then the other kind of more ops work as well? And what would be just like a rough amount for that?
01:48:04.580 - 01:48:10.256, Speaker B: Okay, somebody needs to save the chat before we save.
01:48:10.358 - 01:48:22.272, Speaker A: I'm recording on Zoom, so it'll save. I'll make sure, I'll send it to Griffin. So Griffin does a transcript based on the zoom recording. So I'll send them the chat as think I've.
01:48:22.336 - 01:48:26.356, Speaker E: Yeah, I'm also doing the notes for detailed notes for it and I have.
01:48:26.378 - 01:48:40.300, Speaker A: The chat saved with me. Awesome. Yeah. So I'm happy to take that as an action item to follow up with the different client teams next week and see what are the possible, like what we think makes sense.
01:48:40.450 - 01:48:41.150, Speaker B: Okay.
01:48:51.690 - 01:48:53.720, Speaker A: Anything else anyone wanted to discuss?
01:48:55.130 - 01:48:56.620, Speaker G: Think that's pretty good.
01:48:57.950 - 01:49:02.700, Speaker A: Yeah, sorry, go ahead.
01:49:03.230 - 01:49:05.814, Speaker E: Just one last thing I wanted to throw out.
01:49:05.952 - 01:49:07.246, Speaker A: In the beginning of the call, we.
01:49:07.268 - 01:49:17.078, Speaker E: Were discussing about having the transparency on the funds. So I have just created this sheet for reference and we would be sharing.
01:49:17.114 - 01:49:18.546, Speaker A: It with people who are interested.
01:49:18.648 - 01:49:23.780, Speaker E: It will include all kind of outgoing transactions will be recorded here.
01:49:28.620 - 01:49:59.156, Speaker A: Okay, let me just share my screen so it's in the recording. Okay, so we can see here. Yeah, like we said, the two only transactions so far have been for vulcanize. Yeah. Cool. Anything else? Okay, then. Yeah, so I think there's a pretty huge amount of work to get done in the next couple of weeks.
01:49:59.156 - 01:50:24.030, Speaker A: So some changes on the spec, trying to get a testnet with proof of work out. Following up the conversations around 20 718, there's some r and D work and then the whole funding discussion. Yeah, that's a lot. And I think it makes sense to probably have another one of these calls in, like, a month to give an update on all those things.
01:50:24.800 - 01:50:26.376, Speaker B: Thank you very much. Bye.
01:50:26.568 - 01:50:30.650, Speaker A: Of course. Thanks, everybody. Thank you. Thanks, Al.
