00:00:01.050 - 00:00:35.074, Speaker A: Check, check. Cool. Thanks for coming out, everybody. I'm going to try to keep this quick. I'm going to talk about Cosmos subtitle rearchitecting the blockchain ecosystem. So I don't know if anyone had the painful experience of trying to develop something around the time that bitcoin was new, you had very few options. If you want to do something that was slightly different from bitcoin, usually you would just fork the bitcoin code base and tweak some of the parameters.
00:00:35.074 - 00:01:22.360, Speaker A: It was the first wave of shitcoins. They basically just changed the inflation rate or whatever the pre mine, so they could be the one who ruled them all. But if you wanted to make any sort of fundamental changes, you had to really deeply dive into a very hard to use code base. People tried to use scripting and something called colored coins, sort of shoving metadata or contextual data into the call data field and sort of parsing that as if it was relevant to your application. This was also a really terrible experience. So you have bitcoin doing one thing really well, but as soon as you want to do something else, it gets really difficult. Luckily, we saw the emergence of check check, Ethereum and smart contracts, where you had a lot more freedom to sort of design your application.
00:01:23.450 - 00:01:25.362, Speaker B: Take my microphone, buddy.
00:01:25.506 - 00:02:24.278, Speaker A: As you're all aware of how Ethereum works, you have this amazing ability to write custom logic inside these smart contracts, a generalizable state machine turn complete, which let the sort of app designers design the apps and not worry about networking consensus, benefit from the shared state of Ethereum to take care of those problems and focus on what your app actually wants to do. Of course, this comes with its own limitations. You are all using the same resources. For that reason, you have to have very strict costs for the storage, for state transactions, for state updates and things like that, which often causes the problems. If your app is doing something non trivial, you've probably all run into that as well. So the idea behind cosmos is to sort of solve a very specific use case for applications that need their own resources. Maybe they also need their own sovereignty so that they can make decisions about how those resources are allocated.
00:02:24.278 - 00:03:30.766, Speaker A: Whereas when you have a shared resource environment, you're very much restricted by your neighbors and what they're using it for, which might not be the same thing as you. So that sort of gave birth to a slide that doesn't exist in here, which is sort of the idea of Internet of blockchains. I'm going to hop back, but basic idea is that it makes a lot more sense for each application to have its own blockchain, have its own security concerns, have its own resource allocations, have its own state, things like that. But to not limit a blockchain to itself by creating a form of communication between blockchains so that you're not restricted to your own space, this is going to be a GIF for the whole night. And we think this is really great because you get a lot of the sort of traditional computer environment app development system that you're used to. We've developed an SDK to help that process take place faster and easier. The SDK comes with a lot of sort of.
00:03:30.766 - 00:04:03.962, Speaker A: We call them modules, which would be features you'd expect out of a basic blockchain. We've sort of solved that original problem. That's our goal, which is that it's very difficult to build blockchains. If you ever tried to again fork or use this original bitcoin code base, you ran into that problem. So if we can provide a solution for networking and provide a solution for consensus, which is called tendermint, then we hope that you can do similar to the Ethereum point of view. Just focus on the application state. But since you're going to be the only person using this resource, this blockchain, you can have a much more robust programming environment for that.
00:04:03.962 - 00:04:26.662, Speaker A: Use your system exactly how it should. The final key of this again being inter blockchain communication. So IBC is the focus of the company right now. We look for a four to six timeline on it. The first version of it was available this last weekend during the hackathon. We saw some cool projects playing with it. It is highly based off of TCP Ip.
00:04:26.662 - 00:05:03.760, Speaker A: Our idea of this whole thing is basically to mimic the Internet. You wouldn't expect for everyone's website to be all on just one server, although you might be kind of seeing that with Amazon Web services in a way. But you expect a bunch of independent players in the world and the ability for those different commuters to talk to each other, to do different things, to send packets in between them. So we think this architecture has been working fairly well for the Internet. We want to try to bring a similar model to the way blockchains communicate to each other. This allows for horizontal scaling. And again, this really important feature I keep talking about, which is application specific resources for your application.
00:05:03.760 - 00:05:50.746, Speaker A: And it's sort of the necessary piece to allow you to have similar features set as Ethereum or shared computing state blockchains where you can actually communicate with these different features or different projects or different tools. The Cosmos SDK I mentioned comes with a bunch of pre made modules for you, the core of it being tendermint, which is our fast finality consensus algorithm. IBC has relies on tendermint, but it's not restricted by tendermint. It is similar to TCIP. It doesn't really matter which machine it comes from, as long as it adheres to the standard. So if you want to use some other fast finality consensus mechanism, we fully encourage that. If you want to use some other blockchain architecturing system like substrate, we fully encourage that.
00:05:50.746 - 00:06:51.134, Speaker A: We're sort of betting on the idea that there will be an interchange similar to an Internet, a bunch of different blockchains doing a bunch of different things for a bunch of different use cases. So we just want to help make that vision come to life by creating tools to make blockchains. So whether or not you want to use the SDK or you have your own home rolled solution, that's great. Whether it's, again, substrate or something else, as long as you have this agreed upon standard of communication between them, we can really open up what's possible between these different environments. So Tinderman is our sort of. It's been called the golden standard for consensus algorithms, but we think it's just sort of well tested, robust, out of the box, ready to go. Everything in the company has always been sort of practicality first, taking safety over liveness, sort of starting with the idea of sovereign, independent chains as like the building blocks that you would want for a growing, interconnected ecosystem, instead of trying to invent the whole thing at once.
00:06:51.134 - 00:07:29.814, Speaker A: Could you imagine if the Internet wasn't possible unless you had invented all of the services we have today from day one? So we want to sort of focus on building blocks and let the architecture rise from there. Some of the other features that come with the SDK are staking modules. So this is if you wanted to have, say, a public blockchain, you wanted to have validators who could join come and leave at will. Maybe there's a fixed set of them. 100 is what we're currently using on the Cosmos hub. There's a proposal to increase it to 150, but sort of depending on your security requirements, what you want to do with your blockchain, you might make decisions about exactly how the staking is configured. Maybe you want to have proof of authority.
00:07:29.814 - 00:07:58.230, Speaker A: Maybe you have a very restricted set and you only want to be a single validator. Because whatever reason, we don't make judgments on that. We just offer tools to let you configure it how you would wish. We also have a governance module. So this is liquid democracy. When you delegate your tokens to validators, that delegation can be used as the voting power. You allow that validator to vote on your behalf, or you can use your tokens to vote differently than the validator you're delegating to.
00:07:58.230 - 00:08:49.794, Speaker A: So we think this really opens up a lot of possibilities with governance. This includes the ability for on chain parameter changes. So it's something like in between soft governance and hard governance, where it's not strictly code upgrades, but it is parameters on the running system can be completely under control from the governance system, and that's sort of out of the box ready rewards and fees often used in accordance with governance or staking IBC. I mentioned earlier, I've been working the last couple of weeks on a non fungible token module. If you have any opinions or thoughts about that, I'd also love to talk to you about sort of what that standard looks like when you're moving to an ecosystem of interconnected blockchains instead of a single one. I think there's a lot of really interesting opportunities there. Peggy is a module that's been developed by an ecosystem partner.
00:08:49.794 - 00:09:35.540, Speaker A: It's a module that allows you to basically take assets on Ethereum or another blockchain and create synthetic versions of them inside of the interchange. Because there's this difference between a fast finality chain and a probabilistic chain, you have this discrepancy about when an asset is actually secured on a probabilistic chain. Typically you might have some idea of like eight confirmations, or eight blocks need to pass until it's really secure. But they're actually never really secure because they're probabilistic. You just get into infinitesimally small chances of a chain reorganization. But theoretically, it could always get reorganized. So depending on your security threshold, you might have a Peggy module who's running, or a zone whose entire job is just to make synthetic assets, like I think finance announced they would be doing this week.
00:09:35.540 - 00:10:16.170, Speaker A: So once they see that, say, ether has been locked up inside of a smart contract, for twelve confirmations, they'll mint a wrapped ether, a synthetic ether inside their chain, but give it over to that original person's address so they can move along inside of the wider ecosystem of the inner chain with that synthetic version of ether. If they ever wanted to go back to a specifically ether version of it, they could go back the same way. This also assumes an ETH one point X architecture. ETH 2.0 would have fast fidelity, so there's no reason not to expect that they would support IBC and to be able to interact with them as if they were a cosmos chain from the get go. EVM we've been calling Ethermint. It's now, I think, being worked on by chainsafe.
00:10:16.170 - 00:10:59.390, Speaker A: This is a module that would run inside of the SDK, so that if you wanted to, say, move over your solidity contracts directly onto your own chain, you're just the only contracts running there. To have your sort of increased resources might save you some money on auditing. We think this is sort of a cool feature and opens up a lot of possibilities. But I would also argue that the idea of application specific blockchain opens up a lot more possibilities than just reproducing a really restricted environment like the EVM. If anybody's familiar with developing on Ruby on rails or something like that, it feels a lot closer to that. So these are sort of some other projects that are building with us. Irisnet is another hub in Asia.
00:10:59.390 - 00:11:36.310, Speaker A: Lino is using bandwidth fees and microservices. They have something like Twitch. PewDiePie, the world's most popular YouTube star, is now exclusively using Lino for all of his game streaming. So that's probably the highest user base of any blockchain app out there. I think it's number nine in the App Store. It's just being used for tips right now, but they're moving over to have bandwidth in the future. They're also doing what we've been sort of thinking about as a practical way to launch a blockchain, which is a permission validator set, to sort of establish that things are running smoothly.
00:11:36.310 - 00:12:29.302, Speaker A: And then once you have that sort of confidence, and once you actually have real value coming through there, then you open up that validator set to the public, and then it's sort of the responsibility of the organization to decentralize it as much as possible. But a way to sort of kick start that process is that you probably want to start up with something like a permission set and eventually distribute it once you have a real value that you need to care about. This is a little bit like the security mechanism for private keys. And people get really angry if you tell them to write their mnemonic phrase six times if they don't have any money on the wallet. So wait until somebody actually maybe has a little bit of money on there and then go through the whole security protocol. I think it's a much better user experience and has much better zero to 60 just going to jump through to the last slide. So now the next step, besides IBC, is really getting into what are all the different modules that are going to be out there and creating a good upstream system so that if you start using the Cosmos SDK, you immediately have access to a lot of high quality modules.
00:12:29.302 - 00:13:20.374, Speaker A: I mentioned, I've been working on the NFT module this week, but anything that you could imagine could possibly be a module. There was a WASM module this weekend at the hackathon was really exciting. There's a couple stablecoin projects, a couple Dex projects. It's really exciting that Cosmos is kind of getting to the point that Ethereum's been in for the last couple of years, which is that they get to start having the really interesting conversations about applications and how do you use it? What do users really want, how are their users going to use it? Instead of the really boring in conversations, which is how does the thing work? Like, let's just make sure it's up and running. Finally, Cosmos launched in March of this year, and we're really sort of excited to see the actual applications start building, start connecting and see what everything can really do. So maybe I should touch really quickly. The Cosmos hub as a blockchain is just meant to be a router of IBC packets.
00:13:20.374 - 00:14:09.194, Speaker A: So, similar to the Internet having a hub and spoke model, it's a lot more efficient if everybody decides on specific hubs to route their traffic through than to have a connection with every single computer in the world. And so cosmos, as a blockchain, just wants to be a packet router for all the different blockchains that might exist. I mentioned Irisnet earlier. They're a hub that's in Asia, they're a partner of ours, and they also want to be a hub for a different group of blockchains, different category, whatever it is, you have these options. And that's kind of one of the fundamental aspects of the cosmos idea of the interchange is autonomy and control about how and when you route your information, who you interoperate with. You don't have shared security, you have autonomy to decide who you interact with and what your security threshold is for interacting with them. So we hope to offer that as a service.
00:14:09.194 - 00:14:23.038, Speaker A: The Cosmos hub, keep a very, very high security threshold to allow high quality projects to interoperate. I think that's about it. I don't know if that was fast or slow. Is there any questions now, or are we doing that later?
00:14:23.204 - 00:14:30.062, Speaker C: I know you're not supposed to give timelines, but you gave one earlier, I just kind of didn't hear it. You said IBC. What was the timeline on the roadmap?
00:14:30.126 - 00:14:33.986, Speaker A: This is not by any means a hard deadline, but I think this is a ballpark four to six months.
00:14:34.088 - 00:14:35.230, Speaker C: Gotcha. Thanks.
00:14:35.400 - 00:15:12.590, Speaker B: A basic question to understand the interoperability between blockchains. If I want to transfer, let's say, one easer from Ethereum to the bitcoin blockchain, then the number of easer in the Ethereum blockchain has to be decreased and the equivalent on the bitcoin blockchain has to be increased. And so how does it work? Is there a buffer account between or where the money comes or where the money goes on the one side and where the money comes to the other side? The same question if you transfer an asset.
00:15:13.330 - 00:15:51.754, Speaker A: So the bitcoin Ethereum example might be a little more clear if you think about going from bitcoin to Ethereum, just because the scripting language in bitcoin is a lot harder. So there's two ways you can think about it. One would be one of these peg zones. I mentioned that peg zone has a validator set who's watching the bitcoin blockchain all the time. They have a designated address there where if you were to move your bitcoin into that address, they would wait some safe number of confirmations until they think there's no more chain reorganization. And then they would mint a synthetic bitcoin on their chain. So their chain is connected to probably cosmos and maybe another hub or something like that.
00:15:51.754 - 00:16:30.162, Speaker A: And from there you are able to move that synthetic bitcoin somewhere else. Say you wanted to move it to Ethereum directly. You could move it via a hub or directly to another peg zone who is pegging with Ethereum. They're doing the same thing that I described with bitcoin, but on Ethereum they have some contract where once you send money into it, they wait for eight confirmations. They make a synthetic version of it on their own chain. In this situation, they would have a very special one, which is that they would mint synthetic bitcoin on the Ethereum blockchain with the understanding that after that bitcoin is moved around on Ethereum, it might make its way backwards via that peg zone, via the hub. Peg zone.
00:16:30.162 - 00:17:00.846, Speaker A: Bitcoin. If you're talking about actually transforming bitcoin to ether, you're going to need an exchange, you're going to need a market maker, you're going to need somebody who's willing to take that order, and that could take place in a number of places. Once it's already on the interchange, maybe you take it over to the binance chain, you sell it over there, you take that synthetic ethereum that you bought, and you take it through a peg zone, and now you've got Ethereum. Ether on the final destination chain. Does that make sense? Great.
00:17:01.028 - 00:17:03.930, Speaker B: Great. Thank you so much, widdy, for this great presentation.
