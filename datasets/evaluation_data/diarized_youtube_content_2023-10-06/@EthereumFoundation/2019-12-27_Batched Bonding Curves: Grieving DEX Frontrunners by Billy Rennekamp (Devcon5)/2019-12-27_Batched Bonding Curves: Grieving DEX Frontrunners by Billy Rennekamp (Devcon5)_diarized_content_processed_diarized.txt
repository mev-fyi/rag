00:00:25.090 - 00:01:09.860, Speaker A: Cosmos Network. I'm the founder and creator of Silver's Network. I've also done work previously with Aragon, Black and Gnosis. I'm the author of Cig 16 Three, the Refundable Token, creator of ENS Nifty, which was a hackathon project that inspired ENS to make human names and NFTs, and of course, the founder of Meme Lords, the majestic creation market for memes. Ah, today I'll be talking about market makers front running and going over mitigation techniques that follow. Batch bond occurs. There are three different versions and curious if people have opinions about which one might make the most sense links and then we can open up any questions.
00:01:09.860 - 00:02:15.554, Speaker A: So body curves are automated market makers. You might be familiar with these concepts in the context of prediction markets. A mechanism admitted by Robin Hansen that's used for basically gambling on future events. Bancor, which uses a technique called reserve ratio or Uniswap, which uses products created by Buterin and Alan Liu and implemented by Aiden Adams. Or the slow formula version of Bonnie Curves which is kind of spearheaded by Simon Taylor Rubier. But all these market makers provide liquidity, which is a very important concept in any sort of token based or asset based system. Whenever you have some asset that you're trying to sell or buy and there's not a lot of other people out there trying to buy or sell it, you're going to have a lot of problems agreeing on a price, which means there's low liquidity.
00:02:15.554 - 00:03:00.918, Speaker A: And so there's many situations in which you would have low liquidity. There's just not a lot of buyers, not a lot of sellers, very niche topic or something like that. And so you have designated parties who are willing to buy or sell at some predefined formula or agreement or system and those are market makers. In a prediction market you have this situation because the tokens that you're dealing with are attached to outcome events. This is the sort of gambling on future events. And often these are very illiquid markets because there's not a lot of participants or there's not a lot of tokens in circulation. So if, say, the prediction market is about the future headquarters of Amazon, and I think it's in New York and you think it's in Chicago, I maybe think it could be in Chicago, but you're sure of it.
00:03:00.918 - 00:03:52.210, Speaker A: So we don't really necessarily agree on what I should sell my Chicago tokens to you for. So it might be nice to have something like a market maker who's willing to buy those back. The logarithmic scoring rule is the market maker used in prediction markets usually. And it's really nice because it's calculated in a way so that at the end of all of these sort of events, the tokens that did not occur, the prediction that did not occur, are Team Zero. And there's just enough money inside the contract to pay off all people who had the tokens that did exist. Microeconomies in general, which could take place in app specific tokens like token curated registries, or my Project Clover's Network, in which there's just a very niche clientele for this token, but you don't want them to be sort of limited by that aspect. Probably you won't have access to exchanges or there's just not a lot of people buying and selling.
00:03:52.210 - 00:04:18.880, Speaker A: And so there's very large spread if some were to there's no agreement about what the current price is. This is actually what got me into this toss to begin with. Making my Project Clovers Network it's a game and I didn't want my users to kind of be stuck with this shitcoin and not being able to get rid of it. But there's no chance that exchange was going to list me. So I wanted to be able to offer them the ability to offload the coin for Ether. And so I was able to deploy my own bonding curve in the contract. So users can constantly buy and sell at a price change.
00:04:18.880 - 00:05:05.326, Speaker A: But the general concept for bonding curves which have indefinite token supplies are that the tokens themselves come from the contract, which is the market maker itself as well. So you could send some collateral tokens, often ether, into this contract and it will mint some new tokens for you. The price that it minted is designated from a predefined formula or an adjustable formula. In this situation, it would be basically total supply squared. See, the total supply is on the x axis. This sort of calculates how many tokens are currently in existence and that determines the price which is on the y axis, a really eight. You can imagine when the total supply is at the very beginning and there's almost zero, the price is very low.
00:05:05.326 - 00:05:44.070, Speaker A: As you purchase, the price gets booked up. So let's say the first ten that you buy will be less expensive than the next ten after that, than the next ten after that. If you wanted to get rid of those tokens, you can come back, send them to the contract, they will burn them, which will decrease the total supply, pushing the price back down. And a really convenient aspect of this visualization is that the area under the curve is actually the amount of collateral that's needed to populate that contract in order to generate those tokens. That collateral is always staying in that contract, which means that when you come back and try and cash out, that money's there waiting for you. So it's a bit like an IPO, except for the company doesn't have the money, the money locked up and it's there for buyback.
00:05:44.230 - 00:05:45.690, Speaker B: What is the RR?
00:05:46.910 - 00:06:16.750, Speaker A: So the top right there's some kind of math. And this is the two ways that are often used for thinking about these and calculating these, which is the price formula, which has a basic flow formula. I think this is really useful for visualizing and designing these several mechanisms. But when it actually comes to implementing. I kind of prefer the way bank works on it which uses the concept of the reserve ratio. That's what the RR is. So they think about the price as the reserve which is the amount of collateral divided by the supply times some reserve ratio going to be some number under one.
00:06:16.750 - 00:07:08.414, Speaker A: Basically what percentage of that supply is actually backed by collateral which you can rearrange and see that the reserve ratio is actually the reserve divided by the market cap. So that's kind of like how much is actually backed and the market cap of course is the price times the supply. So those are the two sort of ways I've thought about it. You can actually program it in the original format but there's nice properties of the reserve ratio that lets you do some sort of adjustments while it's moving. I have some slides in that at the end we can go over, but it's not quite part of the talk. The example use case that this new batch bonding curve technique has been used in is in a continuous organization. And this is an idea where you basically have a Dow that has a bonding curve attached to it and when that money goes into the contract it actually can be used by the Dow for operational cost or something like that.
00:07:08.414 - 00:07:57.080, Speaker A: So the shares are the tokens they're bought and sold to bonding curve and that locked collateral in some portion might be used for this working capital and the token holders might receive something like shareholder rights or receive dividends as being a participant inside of this. Sort of more like a traditional company. It's been implemented with Paragon Black called the Fundraising App which should be coming out soon. There's also some other organizations working around it C ORC from TiVo Fabra. It's really interesting working to get these types of organizations classified as reg C in America so that people can participate in without having credit investor status. D.org is also building similar mechanisms using the Dow stack framework for Gnosis, dxDAO and Divis and the common stack is working something similar.
00:07:57.080 - 00:08:57.302, Speaker A: So the continuous organization, instead of going through and paying out dividends I mentioned this might be sort of a feature that you would want in a system like this. There's a really convenient workaround. Instead of sending out a bunch of transactions for all the separate stakeholders to give them dividends, you can actually just put money back in this collateral pool and this sort of will increase the value of all the tokens that already exist. So if you're a stakeholder and having these tokens by injecting collateral back into this contract, the value per token will increase for everybody. So it's sort of like paying everybody dividends with just one transaction instead of an individual one in each person. Because if the collateral increases but the token supply stays the same, you can imagine that the price will get boosted up in that previous graph. Similarly, when you remove collateral, this is a way to basically decrease the value of the token because you've got to spend money to make money.
00:08:57.302 - 00:09:42.934, Speaker A: But these are kind of the two actions that you'd expect in a continuous organization using a bonding curve like this. So front running, as most people know, Ethereum and a lot of public blockchains are kind of slow in their process of transactions and blocks. And for a moment there's this mem pool of not processed transactions. And so in that moment you kind of have full sight of all of the other activities that people are taking place on the blockchain. And if you can see that some of these transactions are buys or sells and are one of these bonding curves, you'll know that there's going to be a price movement. And whenever there's a guaranteed price movement, front running is possible. In the act of front running, imagine a buy order is coming in.
00:09:42.934 - 00:10:17.150, Speaker A: You as a front runner would be able to make another buy order and boost the gas price which might make the order get included first depending on how that minor works. Or you might be a minor yourself. You would make a buy order in front of them with a new gas. They would make one after you and then you would make a sell one. So when you make your buy, the price is pushed up, they make their buy, the price will be pushed even further up. You make your sell and you're back down here. So this is kind of bad because there's no risk in that buyer interacting this market and so they're basically just scraping off some of your money in the buy order.
00:10:17.150 - 00:11:11.490, Speaker A: Do you like going into a store, buying the object in front of somebody else, turning around and selling to them at a markup when they could just buy from the store? Similarly, in a sell order if you see a sell coming in, you can make a sell in front of them, push the price down, they can make a sell, push the price further down and then you can buy back. So this is a way to increase your current position with no risk sort of scraping off their money and using it for yourself. In those two dividend and working capital situations you could similarly front run. So the transaction that might inject collateral into the pool. This is similar to a buy because you know there's going to be a guaranteed price flipping up. So you might decide to buy right before that the injection happens and then you sell right afterwards. Or if the working capital is about to be removed, you wouldn't want to have a situation that you could just sell your tokens right before they withdraw that capital and then buy back afterwards in the same transaction.
00:11:11.490 - 00:12:02.530, Speaker A: So front running in the wild is rather rampant. These are some statistics from last year's talk by phil Dyan about it. So they were doing most of the work on sort of publishing this in the wild. And according to them, in 2017, on Ether Delta alone, which is not a very popular exchange, there was $4,500 a day in August. He and others recently released a paper called Flashboys Two, which is the reference to Flashboys, the high frequency traders who had sort of built their own line of the internet across the New Jersey to the New York Stock Exchange in order to front run orders or do different types of activity like that. And by their estimates, there's 30% of all walks contain some kind of programmatic arbitration transaction which would be included in these sort of front running. If you want to see more data on that, you can go to frontrun me.
00:12:02.530 - 00:12:45.854, Speaker A: There's a lot of really good work doing it there. So this is obviously rampant in the wild and it's only going to get worse. And so we do need to address this because we can't really ask anybody to use an onchain exchange if we know that it's not going to be able to deliver quality service. So batch orders with common clearing prices is one proposed solution, with three versions here calling them ordered batches, match and fill, and a common clearing price. And again, they each have their sort of benefits and drawbacks. And I'd be curious what the general sort of feeling of what you thought the best program was. So the first one, batched orders, sorry.
00:12:45.854 - 00:13:40.914, Speaker A: Well, they all sort of follow a similar idea, which is that you take some span of blocks and you collect all the buys and you collect all the cells in that span. And in order to make things a bit easier, you just combine them into one big buy and one big sell, keeping track, of course, of all the individuals who actually put in those orders. And then you clear them together with some price and then you redistribute it to those users based on that price and the percentage that they paid. So the first version of that has kind of a drawback in that one party gets rewarded over the other. Although you could think of it as a feature, not a product, if you want to reward one of the parties more than the other, for instance, the buyers. So in order batches, it kind of takes the most simplistic approach, which is why we just execute all the buys using the bonnet curve and then execute all the sells, or the way around, do all the sells and then execute all the buys. But this does reward one over the other.
00:13:40.914 - 00:14:12.726, Speaker A: So imagine the execution buys first. So let's say we're starting out in the blue line. That's the current spot price. We execute the buy first, the price moves up to the red. This is really good for the sellers because they want to sell at a high price and so they've now sort of been given this price position of having a high sell price, which then moves the price back down overall. If you were to execute the same order as buy first and Sell first, the final price would be lower. When you do execute the buys first, if you were to execute the sales first, you can imagine starting with this blue line again, it's going to push it down where the green is, which is great for buyers.
00:14:12.726 - 00:14:39.560, Speaker A: They want to buy at low prices. So now they're sort of the privileged party in this situation. The final price is going to be higher than average or higher than the sell version, which are the two sort of features. But if you want to reward buyers in your system, you kind of think they're putting money into the system, they're contributing. I want to make sure that they'rewarded for this capacity. You might say this is a feature and you want to make sure it happens this way. Maybe you have an idea of where sellers do the other one.
00:14:39.560 - 00:15:08.110, Speaker A: So the second method is called Match and fill. And I give a hat tip for Martin Goldman from Gnosis for helping me with this. And this idea is that you have that original spot price, the current one, and of course with the body curve, as soon as you start buying or selling it'll, start moving it. But in that moment you have an exact price, theoretical exact price. So why don't you take that one and match order as much as possible. You've got this big group of buys and you've got this big group of sells. At that spot price, one half of them is going to get completely consumed by the other half.
00:15:08.110 - 00:15:42.118, Speaker A: You're going to have some leftover buys if there was actually more buy orders and some leftover sells if there were actually more sell orders. So whatever's left over execute with a normal bonding group transaction. So you have this entire side that gets taken care of, just adds spot price, disappears. The other side gets a combination of that spot price plus whatever's left over as the bonding curve. The third one is a common clearing price. This is kind of what you would imagine is the goal and this is where you can find some fair price for the entire group of buys and sells. However, it's a little bit too complicated to calculate on the EVM.
00:15:42.118 - 00:16:21.446, Speaker A: Another has to Gnosis member Tom Walter for helping me with this. But you can see the formula for getting this is rather hard to find. It is possible it ends up resulting in one solution that's zero, one imaginary number solution and then one correct solution. What is convenient is that even though it's hard to find, you wouldn't be able to calculate it on the EVM. It is easy to verify on the EDM. So if you were to take that price, which was the correct price in that formula, provide it with the transaction, execute the orders you'd be able to check. Did this mess up the slope at all? Did this change the market maker? Because if it was an incorrect price, it would have modified that.
00:16:21.446 - 00:16:42.858, Speaker A: So it's easy to verify. So there is a solution for that. This is inspired by the diffusion Exchange, which does something similar, very, very complicated execution. But it's easy to verify that they were done correctly off chain. In a similar topic, Uniswap has been working with batching orders. They're calling it netting trades. That's from Dan Robinson and hey Mattis, I just found out about this the other day.
00:16:42.858 - 00:17:25.258, Speaker A: They might be talking about it later today. At 420 in Rupee seven. You can see that when you're using the constant product, it actually becomes much easier to make this batch order calculation. Unisoft is a great product and it's used specifically for tokens that already have sort of fixed supplies or supplies that exist in the wild. Whereas I think that bonding curves get much more interesting, much more useful when there's a situation that the token is actually generated from the same place as the market maker for situations like prediction markets and curation markets. But if you don't have that requirement, then Uniswap is definitely like preferred calculation method and has its convenient batch order system. So there's a link to the GitHub proof of concept there.
00:17:25.258 - 00:18:05.800, Speaker A: It also links to the Art on Black implementation that's still undergoing final audit. And there's also a link to a Medium article that has a bit more details about all these topics. If you want to check that out again later, wait till the phone's going down. And if this is interested to you, come say hello, talk to me, get a hold of me on Twitter, email GitHub. Yeah, that's it. We have any questions, we have a few minutes.
00:18:07.210 - 00:18:12.634, Speaker B: So the three approaches that you described, do you have a personal favorite and why?
00:18:12.752 - 00:18:52.966, Speaker A: Yeah. So for the most part, while working on this, I was really looking forward to this common clearing price, this universal one for everybody. But after sort of finishing it and finding it, I kind of started favoring the second one because I think that the price is more reflective of the way the market is actually acting. Like if there are more buyers and sellers, that buyer should handle the sort of price movement, whereas the sellers are sort of the minority in that situation. So maybe they should actually just have the spot price, which is a preferable one. But I don't know, I mean, the comic book price is also kind of feels good and that's what I meant, sort of. I'd be curious about your opinions if one of those feels better or worse for you.
00:18:52.966 - 00:19:16.000, Speaker A: I mean, of course, the first one also for the use case of rewarding the buyers makes sense, but I skew towards the middle a little bit. The third I don't know. Can maybe get a show ahead. First curve as the best one for general use. Case anybody? Second version got some hands. We got some hands. And third version okay, we got a couple.
00:19:16.000 - 00:19:24.014, Speaker A: So I'd say general consensus. The second kind of makes sense, but yeah. Question in that second version you're talking.
00:19:24.052 - 00:19:33.458, Speaker B: About for the group that's leftover, either buyers or sellers, do you distribute like the price flippage evenly between that entire group or is it like a set of buyers get screwed or set of.
00:19:33.464 - 00:19:39.080, Speaker A: Sellers get screwed evenly between that entire group? Good talk.
00:19:40.810 - 00:19:50.090, Speaker B: So did you look at all at Heuristics or optimizations for the uniform clearing price or did you just implement?
00:19:51.390 - 00:20:25.380, Speaker A: So we found the formula that has all of the necessary variables that you want to solve for, but I ended up just using Wolfram Alpha to solve it. I know there's some Python libraries that are good for that sort of symbolic subbing out, but when you actually solve it for the variable you actually want, it becomes this really nasty, nasty formula that I don't know how to deal with. So I'm sure there are ways to optimize that math, but at the end of it, that's all sort of off chain data, so it doesn't necessarily need to be optimized. All that really matters is that it's easy to verify on chain, which is easy enough.
00:20:29.850 - 00:20:32.502, Speaker B: So what was the you mentioned on.
00:20:32.556 - 00:20:35.138, Speaker A: Top of your last slide that casino.
00:20:35.154 - 00:20:46.620, Speaker B: Swap right doesn't have the same constraints that you were looking at. What is the kind of breakthrough there that prevents front running?
00:20:48.270 - 00:20:57.280, Speaker A: It's the same idea of batching orders and they choose the common fairing price as kind of the third version. So as the orders come in, they get calculated and clear.
00:20:57.810 - 00:21:02.330, Speaker B: So it's not like they're doing anything new. They just have an easier time with the equation.
00:21:02.410 - 00:21:07.060, Speaker A: Exactly. The contact product formula is a lot easier to do than the other one.
00:21:07.990 - 00:21:19.774, Speaker B: Are there any common patterns with the size of the orders that a tend to be the front runner orders versus ones that tend to be front run? Like, does it tend to be small orders, front running, large orders? Or is it kind of uniform across.
00:21:19.832 - 00:21:39.020, Speaker A: The board like front running in the wild? Me? Yeah, I'm not sure about that. I would say check front run me for that kind of data, but I don't know. I've talked to some people and it seems like it's easy picking, but there's actually just such little liquidity on chain that there's not maybe not worth putting in the effort to front run everybody. I don't know.
00:21:40.450 - 00:22:07.220, Speaker B: So I looked for front runners. I've had a lot of talks with different shops about it. The short version is what you were saying. There's just not enough money in it. Making $10,000 a day running a fairly complicated front running bot, even though $10,000 a day sounds like a lot people I talked to said it literally wasn't worth it.
00:22:09.990 - 00:22:14.902, Speaker A: I mean, if we do actually give liquidity and people using DEXes, where that would probably be a different case.
00:22:15.036 - 00:22:26.602, Speaker B: Well, I would assume that at some point there would be a product differentiation between the DEXes where you say no one's going to front run your fill.
00:22:26.736 - 00:22:27.418, Speaker A: Right?
00:22:27.584 - 00:22:38.480, Speaker B: So people would actually just fix the problem. It's an entirely fixable problem in the Dex software itself that allows for the front running. There's no strictest people.
00:22:41.490 - 00:23:03.730, Speaker A: I think we're at time. You want to talk later sometime? Thanks a lot. You our Ram.
