00:00:15.690 - 00:00:52.666, Speaker A: Great. Thanks for hanging with us on day three and we're uport, so it's great to be back on stage in front of all of our friends again. So much is happened since last year and we're excited to have the opportunity to share an update with you about what we've been doing. I'm Michael Senna. I'm product lead for Uport. I'm accompanied by Ruven Heck, project lead, and Pelley Brangard, technical lead, and we will spend the next 20 minutes sharing our progress with you. So if there's one thing that you take away from this presentation, it's that we've built Ethereum's user platform.
00:00:52.666 - 00:01:02.720, Speaker A: So what we've been working on, we're hoping to answer the question, what is uport? We've heard it from so many of you and it's about time we share it.
00:01:04.790 - 00:01:05.540, Speaker B: Thanks.
00:01:06.230 - 00:01:47.200, Speaker A: So if you're building an Ethereum application and your goal is to have end users, we should talk. Because building user friendly Ethereum apps is hard. You need to solve account management and login. So account management for users in a way that begins to protect their privacy or protects them from themselves and bad behavior. As an extension of that, we have key management solutions to help your users avoid danger. Also, we can handle things like onboarding new users without ether or gas. Also sort of abstracting the concept of gas from end users in general.
00:01:47.200 - 00:02:15.990, Speaker A: We can also do things like know your user KYC and reputation systems. So if you're building an app and your goal is to have end users, you should probably think about solving these. And we have a comprehensive solution. And so at a high level, uport makes Ethereum easy. Ethereum today is not really easy. You need to be pretty technical. You have to have an on ramp to acquire ether or gas.
00:02:15.990 - 00:02:57.342, Speaker A: You need to interact with too many low level things in a non user friendly way. So we've built four components. The first are all Ethereum app accounts are in one central place for the user that's easy for them to manage. Users can create a complete user profile that they take with them throughout the web as they interact with various applications. Third, uport enables the user centric storage of credentials and other pieces of signed data that enable a shared user centric data platform. Fourth, we offer mobile factor authentication and signatures for everything. So basically user clicks a button on your app and we have a mobile signer.
00:02:57.342 - 00:03:06.920, Speaker A: So I'll pass it over to Ruben and Pelley to explain some more of the technical details and actually how we implement some of these things. But yeah, looking forward to working with all of you.
00:03:08.670 - 00:04:10.210, Speaker B: Hi. So I'm going to talk a little bit about how uport manages your users accounts. A uport account is something that we wanted to create a form of permanence with, and what that means that it is something that just because you change devices or you lose your phone or anything else happens, that you should not lose access to this. So we have a fairly simple architecture with your identity itself represented by a very simple smart contract called a proxy. This is ultimately controlled by a user's device, where the private keys are stored, and these private keys never ever leave the device in between. Then there we have an upgradable access control system, a spark contract that we call the controller, and to handle recovery. As I say, we don't want people to lose access to their identities.
00:04:10.210 - 00:04:51.340, Speaker B: So we have this smart contract layer to be able to handle recovery of your users accounts and identities. This allows us to do things like social recovery and many other future kinds of recovery. So last year, we presented a much simpler model. There was one good test network, Robston. We had one account representing a user's identity. You use this for interacting with all the different dapps, and this was a great way to get started. Lots of developers used it, but we started seeing a lot of changes happening in the Ethereum world.
00:04:51.340 - 00:05:28.822, Speaker B: So, first of all, there are a lot more different test networks right now. There's also a lot of private chains. Users started having different accounts, there's a lot of more apps in it. So this was a problem that we couldn't just solve, having a single account identity on a single chain. So our new architecture supports multiple accounts on multiple chains, and it's roughly the same smart contract structure that we had before. But we have obviously improved our smart contracts. They're way more efficient right now.
00:05:28.822 - 00:05:41.290, Speaker B: So we can support, easily support having a separate account for each DAP that wants to integrate with us per user, and we can support this over multiple networks.
00:05:43.550 - 00:05:44.300, Speaker A: Um.
00:05:47.070 - 00:06:52.810, Speaker B: The other thing that we learned over the last year is that users really want to manage their interactions for all the different apps in one place, regardless where the app logic is run. And what I'm trying to say with this is app logic isn't just run in the web browser or on multiple Ethereum chains. There are still web, two O server style apps, and there's a lot of hybrid apps as well in between. Newport actually manages account management for all of these, and it's particularly useful for the hybrid solution in the middle. So we do this by having the mobile app maintain all the different accounts. It's a glue that works for integrating the different apps. So for a traditional web3 app, you write your app just like you would normally using web3, or any of the cool new developing developers libraries that are out there.
00:06:52.810 - 00:07:42.186, Speaker B: We have a uport connect library that automatically takes your web3 code sends transactions to the phone. For Web 20, the process is very similar to, say, a Facebook connect. The only difference, of course, is that there are no centralized servers that you interact with and the identity is always under the control of the end user. Finally, a problem that we tried to solve was onboarding of new users. There are a lot of non technical users, and even technical users not familiar with Ethereum. They're coming in and want to try all of these new things. And at the moment, we have to every single time explain about the difference between Mainnet, COVID and ring.
00:07:42.186 - 00:08:30.830, Speaker B: Could be what's gas? How do you fund your accounts, all of these things? These are huge problems for most developers when their apps hit real users. So the first thing that we're doing to solve this is by having a much smarter login flow than our first version. So a developer can go in and specify what network that they want account created on. And then if the user already has an account for your particular DAP on this particular network, that will always be returned. If not, a new account will be created on the fly. And this means that the user never has to worry about whether your app is on Rinkerby, coven, Mainnet, or even private networks. The other big issue is fuel.
00:08:30.830 - 00:09:18.160, Speaker B: Gas is an obvious thing that we all have to pay for our Ethereum transactions, and it's a stumbling block that it's very difficult. You want to get people onto your new app and try it, but first they need gas. They need ether to pay for the contracts. That alone is a big issue. There's also the less obvious issue of lots of non technical end users following links on Twitter, sending Mainnet ETH to a coven account or coven smart contract. So this is obviously a really bad experience. So we're solving this by having all the transactions that go through uport are automatically fueled by our transaction fueling service.
00:09:18.160 - 00:09:25.086, Speaker B: And neither you nor your users have to worry about that again in the future. Now I'd like to give it over to Ruben.
00:09:25.198 - 00:10:25.166, Speaker C: Thank you. So I'm going to talk about user credentials and I think this to Microsoft. So for users after Defcon one way, we presented youport in the role firm from today and we realized that we got a lot of feedback from the community. How to interact and make it much more user friendly for users and more personal. So when you log on to a dub and a simple thing like a nickname or some photo, make it a bit more personal. So it's all about how can we give badges or information from a user back to the user? Because we don't want to store them centrally. So that's something we explored and we talked a lot with the identity community, and we realized there's a lot of opportunities to use the identity from you as an individual as well as from the dub to create credentials from badges or attestations to the users.
00:10:25.166 - 00:11:02.238, Speaker C: It's like some form of verifiable claims. So what we did, thanks. What we did is we built an ability for the user to make this very, very easy. So we have libraries now to issue these kind of attestations to the users. This can be in form of on chain as well as off chain stuff. We had the conversation, we're building an identity platform. So a lot of the information you get, a nickname is maybe less critical, but there's a lot of information about my name, my birthday, that I have a certain degree or maybe have achieved a certain certificate because I achieved an online course or something else.
00:11:02.238 - 00:11:39.466, Speaker C: All of this data is something you don't really want to have on chain, even not encrypted. So we spend a lot of time and our focus on doing this with off chain attestations in a very, very easy way. Last year we had an experiment here. Piper was doing this Defcon two attendance where people went to him, gave him the Ethereum address, and he was basically recording this in form of a smart contact. And we tried to do a little experiment later. Let's see how the Wifi works. But if you have viewports, the latest app, you will see a QR code at the end of the talk and hopefully get an attestation about being attendant or have been attended here.
00:11:39.466 - 00:12:27.626, Speaker C: Cool. So obviously, after your credentials have been issued and stored with the user, we need to make it as well easy for the developers to receive this data back. So what we built is a library that you can easily receive credentials and can validate them. And that's a very critical and very interesting part, because what we allow now to do is that anyone can issue, let's say, a KYC attestation. So there are enough companies in the world who have done KYC before, and they can issue this form to me now in a credential, in an attestation, which is signed from the issuer, that can be a bank that can be a crypto exchange or anyone else. We're now working on the integration of a couple of KYC providers itself. So it's more native as part of this.
00:12:27.626 - 00:13:17.850, Speaker C: And now what you can do, if you have done this, once you go through this process and now you go to a token launch platform and you can reissue this information. So it's a very easy, much more user friendly way to get this validation and can rely on this as a developer as long as you trust the issuing parties. I think that's a very nice way because now we get a lot of feedback in the community that people want to use this for many other dapps. So whether it's Melanort, because you manage certain assets, whether it's a poker platform or whether it's gnosis, there's like multiple reasons why you want to know something about the user that just can be abstract. It can be he's older than 18 or he lives in a certain state or not in a certain country. There's a lot of value in these kind of attestations and it's all like digitally signed to my identity. So it's very secure and powerful.
00:13:17.850 - 00:14:16.906, Speaker C: So ultimately what we built with this is really the foundation that you create an identity which is not just a random number, like a random address. It is now the ability that you have a privacy preserving ability to use as a user interacting with adapt. So you build the trust without revealing too much information. And that's a very powerful foundation anyway, and also the foundation for any reputation system. Because think about this, if you are issuing to a user that in your decentralized Airbnb, he was a good host and he can drive a car because of the driver license. Other things, all these things are part of a very good foundation for any type of reputation. So if you go on a certain website the next time and you can issue transaction of the last hundred interactions with your Airbnb platform, you can just take this anywhere and issue this to this new DAP.
00:14:16.906 - 00:14:49.660, Speaker C: And that will make it much, much easier to build digital interaction. So what I would show you now, hopefully, if the Wi Fi works, how digital signatures work. So that's something we demoed last year already. So we all know that to do any kind of interactions with the blockchain or with Ethereum, you need to have an ability for signing. So Pell already mentioned it. The phone has the private key and we have our architecture with smart networks. What I will try to do, and let's see how that works with the connectivity here is to show you how this could look like.
00:14:49.660 - 00:15:09.262, Speaker C: And I do it live. So I hope it works. So what you see here, first of all, I show you the application itself. It's very simple. It has, at the moment, a couple of information about yourself. So in this case, we just have us and a phone number. This is data which is stored on my phone.
00:15:09.262 - 00:15:35.906, Speaker C: This is not stored anywhere else. We have verifications. This is the stuff which we hopefully can give you as part of this experiment, or at least to some of you, you see that you haven't batched, you have attended this conference. So that might be an interesting thing for next time. If you go somewhere and you want to demonstrate this, that you have a certain experience or you have learned something or get a discount for other means. So that's kind of the verifications. As Pelle mentioned, there are multiple accounts.
00:15:35.906 - 00:16:00.766, Speaker C: We have support now. So in this demo, I just have at the moment a rinkabee account on this. And what I show you now is a mobile phone app. So what we have here is the mobile Safari. It's just a simple dap. And what I do is I connect now my viewport with this Dap. So what it does, it jumps like the Facebook connect into the app.
00:16:00.766 - 00:16:27.558, Speaker C: It pulls now information about this. So you see the logo, you see the details which are requested from this application. And now I can confirm this. What you see on the bottom is a first attempt to build some trust into this whole interaction. What you see, I've done this already 67 times. That's important because there are so many websites which suddenly get spoofed or so it gives you an additional level of trust. This is obviously not the final version, but that's the first start.
00:16:27.558 - 00:16:58.770, Speaker C: So what you do is you log in and now what it does, if the network is fast enough, it will show my name and just a photo. That's something which is just local. This not need to be stored because it's a dap. It's only on my phone, but it gives the user, right good user experience that he's now logged in and not your friend or someone else. What I do now is very simple. What we have in here is you can buy a certain set of shares, which is just like an example of an interaction with a smart contract. So if I click on buy shares, what it does, it jumps back into the application.
00:16:58.770 - 00:17:33.482, Speaker C: And now what you see here is a transaction screen. And that's very important. So what you see is the smart contact you're interacting with. It gives you what kind of function call you're doing and as well the 56 shares I just requested to buy. And that's just very important because at the moment how do you know with Ethereum that what you're about to sign? And I think that's kind of the user experience we want to build in that can be in the future, maybe more customized screens and they will look a bit more beautiful. But for now this is the starting point. So what I do now, the moment when I do approve, I need now to use my private key.
00:17:33.482 - 00:18:03.122, Speaker C: Therefore I need to put my finger on it to unlock the key which is in the secure enclave and do the signing now. And now it will take a few seconds, obviously. So that's kind of what you guys know. So back to the presentation. So what we did just recently was in the city of Suk, a little project with them. And it is a four step thing. So you basically download your mobile application, generate your digital identity and you go to a portal.
00:18:03.122 - 00:18:47.806, Speaker C: On this portal you can enter like a certain set of information about yourself, your name and your ID card. This is only stuff which you would give to the city of Souk as a portal. And then the second step, you go into the office there with your ID card and prove that you are the person who claims to be this. So it's like a real in life validation. And what the clerk then can do is they go to their internal portal and click one button and it pushes a notification back to you as a user. This information now contains that this is your name, you are a citizen of this city, someone has validated. So suddenly we create this connection between your Ethereum address and your real person and someone has validated.
00:18:47.806 - 00:19:26.014, Speaker C: And if you trust that the city of Souk's process or the clerks are doing that only if it's right, you can now trust this attestation or this badge from the city of Suk. So we are working with a couple of integrations like using the suk thing now for the city itself for simple e voting. So they don't do like voting voting. It's more like opening times of the swimming pool or something else as a test bed. But it's a start. And as well we are working with Mellonport and others to integrate this information now into their platform which allows them to trust immediately this identity much more so now that's the end of the presentation. This is a QR code.
00:19:26.014 - 00:20:03.470, Speaker C: If you have Viewport, try to scan it. I don't know with the network connectivity here whether it works. And now we have live stream, so it's not technically attendance, but let's say you listen to this live, because in five minutes we will turn it off. What happens now? You go on this. It will ask you whether you are willing to give us the right to send you a push notification. It's a service we operate at the moment and what it does is basically sends a request and in 5 seconds or so after that we will sign a signature or, sorry, we will sign a piece of data and they send it back to you as a push notification. And that's the badge of attending here in Defcon.
00:20:03.470 - 00:20:09.260, Speaker C: And with that I'm closing and please visit our website and look into integrating us. Thank you.
