00:00:12.650 - 00:00:40.230, Speaker A: Thank you so much, all of you folks, for coming. And especially thank you so much for our panelists that you made it here. And I'm very excited to have many interesting people on the stage here today. So, yeah, let's get into it would say let's start with a round of introductions. So please tell us, what project are you from, what you work on within the project? And we are a defcon. So mention maybe your favorite cute animal or something like that. Favorite cute animal of yours.
00:00:40.730 - 00:01:06.210, Speaker B: Sure. My name is Paul Hauner, co founder of Sigma Prime, which is the company that maintains Lighthouse. Also, I guess, a co founder of Lighthouse. I've been working on Ethereum Staking since about 2018, was involved in founding Lighthouse. I've written a good chunk of the code on that. And now in the day to day, I'm kind of, I guess, overseeing project managing, still engineering as much as I can. My favorite animal is a Quoka Australian animal.
00:01:07.110 - 00:01:08.322, Speaker A: I love cuca so much.
00:01:08.376 - 00:01:35.210, Speaker C: Yeah. Okay. Hi, I'm Chris. I'm co founder of company called L Two Beat. And the two stands not for Ethereum Two, but for layer two. So we're working on researching and providing analytics for different layer two scaling solutions. And we are also running a bunch of nodes, including if 2.0
00:01:35.210 - 00:01:36.010, Speaker C: node.
00:01:36.910 - 00:02:24.570, Speaker D: There is no e. Hello, I'm Diego from Ethereum, the founder of the project. Our main goal is contribute to the decentralization of the theorem network by providing some kind of images for these kind of devices like Raspberry, Pi or Rock Five and turn them into a full Ethereum node pretty much automatically. And this way make it easy for regular users, home users, to run a full node in these low power and resource constraint devices. And so this way we can facilitate this for people to run. To run. Also at home in validators.
00:02:25.950 - 00:02:53.220, Speaker E: My name is Nick Zorakish. I work at East Acre. Staker is a completely volunteer run organization, and we facilitate community education and encourage people to stake. We provide guidance and do technical support for stakers. So we're just connecting stakers to the appropriate protocols that they can use to stake. Oh, my favorite animal. Can I be boring and just say a cat?
00:02:54.970 - 00:02:59.542, Speaker D: My favorite animal is the cat as well. I have two.
00:02:59.596 - 00:03:00.950, Speaker E: Wait, you copied me.
00:03:01.100 - 00:03:02.200, Speaker D: I have two.
00:03:03.690 - 00:03:24.042, Speaker A: I love cats. And I have three cats. It's amazing. I think it's kind of Ethereum culture vibe. There are so many cat people here. And I mean, cats are a great source of entropy, right? I mean, it's also something which is important in cryptography. Okay, anyway, thank you so much for the introductions.
00:03:24.042 - 00:03:34.402, Speaker A: And I'm Mario Havalan from Ethereum Foundation protocol support. And yeah, so the merge something which I've been also contributing to.
00:03:34.536 - 00:03:35.390, Speaker D: Congrats.
00:03:35.550 - 00:03:36.574, Speaker A: Oh, yeah, congrats.
00:03:36.622 - 00:03:37.314, Speaker B: Whoa. It happened.
00:03:37.352 - 00:04:10.620, Speaker A: But we celebrated a lot, the merge. So we are over all the celebrations, and now I think it's time to discuss what's next because the merge was just the beginning. There is no time to rest and we need to build, right? Maybe let's start with some reflection. So how was the merge for you, for your project, but especially what it changed? Was there some challenges that you had to overcome? And now after the merge, what are you facing? Some new issues, new challenges, new changes in your project?
00:04:13.090 - 00:05:30.998, Speaker D: Yeah, from our side we were running nodes on Raspberry Pi's. We have several boards and after the merge we were facing too many issues. First of all, we seen from some clients some issues with performance and later we realized that the Raspberry Pi was a little tight because the hardware requirements after the merge rise a little. So this is a device from 2019 and it's a little old and we are struggling to get notes in sync with a Raspberry Pi. We really achieved this with Geth and Nimbus but it's becoming a little harder for us to keep up with the chain on our Raspberry Pi. But hopefully there is a new device coming up this month called Rock Five that is much more powerful and actually we are validating with this device and with Bessu and Teku. So it's a really powerful device and it's running great.
00:05:30.998 - 00:05:47.020, Speaker D: So for one side, hardware problems in terms of performance, but from the other side, we still can run full nodes in Ethereum with these kinds of devices. So it's running.
00:05:51.410 - 00:06:09.394, Speaker C: Okay, I guess that's my turn. Okay, so as I said, probably I'm the least experienced person here in terms of POS, but just barely. Like one month ago we spinned up.
00:06:09.432 - 00:06:10.020, Speaker B: Our.
00:06:12.630 - 00:06:47.374, Speaker C: If POS nodes to prepare for the merge. Everything went smooth. So my experience with the merge itself was really great. But in my previous life I was a DeFi engineer, I worked at MakerDAO and now I've started running a survey within my colleagues, blockchain engineers, DeFi engineers. Like do you know how eve works after POS? And the answers are no, they don't have a clue. And I know like 50% about I think the word after POS. So I think the biggest challenge now is like education.
00:06:47.374 - 00:07:01.618, Speaker C: There's a lot of talks about if 2.0 whatever, but they are outdated because the spec changed so much. And yeah, that's the huge challenge. I think right now I'm going to.
00:07:01.624 - 00:07:34.510, Speaker E: Echo that just because progress is happening so crazy quickly, everything becomes so out of date so quickly that people come to us and they say, I'm using this guide, but this thing didn't work. And all of a sudden this command is different. And so education is one of the things that Easaker focuses on and it hasn't really changed before or after the merge. We did have a month or two around the merge where we were helping people prepare for the merge, but now it's just focusing on education documentation and matching people to the appropriate protocol.
00:07:36.610 - 00:07:37.454, Speaker B: Cool.
00:07:37.652 - 00:07:38.014, Speaker A: Yeah.
00:07:38.052 - 00:08:09.786, Speaker B: So working on a consensus client implementation, the merge was kind of like a four year project for us. So it's been going for a while, it's been stressful, it's been fun, it's been really enlightening. The merge itself was a little bit of a non event, actually, which is kind of what we wanted. It went better than any of our tests. So yeah, it's been interesting. Just trying to figure out what to do in a post merge world. There's plenty to do, but yeah, just picking up the pieces, doing a lot of monitoring, analysis, keeping the lights on.
00:08:09.786 - 00:08:10.700, Speaker B: Yeah.
00:08:12.030 - 00:09:16.206, Speaker A: Thank you so much for all the answers. Well, we touched many important topics there and I would start with the node requirements or also complexity of running nodes. Right? So now after the merge we need bit more complex setup. Before I was doing workshops for running nodes which is like download and run this, right? Maybe with specific comment. Now you need to download two things. You need to figure out the JWT path and also the hardware requirements with app like huge kudos to Ethereum for being able to validate on armed devices. What is your take on this? What do you think is now, how can we tackle this challenge of not just the node requirements, it's more like the protocol topic, but especially the complexity of running basically different piece of software at the same time in terms of validators, this is very important because we want easy home staking experience.
00:09:16.206 - 00:09:36.120, Speaker A: So yeah, how can we achieve this? What is happening there? And with l two S, by the way, it also touches this because especially with optimistic roll ups, we want to be able to run l two node. We want to be able to create fraud proofs and should be also easy experience. So yeah, how do you see that?
00:09:38.250 - 00:11:18.998, Speaker D: Yeah, I think that complexity is not a problem here because the difference between running an auto premiere and post merge wasn't that different. But what we've seen, particularly in our discord channel is people that as they cannot get in sync the nodes and they are struggling with concession layer, execution layer. They were stressed because their validator were offline and that's something that concerned us because yeah, if you cannot get your validator online, it's a problem because people get stressed. I mean, for us it's not a problem because we are in it maybe 1520 years, we are used to it, but regular users are not. And my main concern is well, if there are no much difference between running an order at home, a validator at home, why? I don't go to a pool, I take my 32 eats, send it to a pool and that's it. I don't take this responsibility, I don't get stress. So that's a concern in terms of centralization of staking and I think that it could be really great if there's some way of incentivizing the stake at home.
00:11:18.998 - 00:11:41.542, Speaker D: I don't know a protocol level or how but it would be great because if not, maybe people are going to go this way, go to pools or these great exchanges that give you this service. So yeah, it's my main concern.
00:11:41.606 - 00:12:53.700, Speaker E: After the match, a little bit of history on me. I got into Estaker because I started staking and when I ran a validator I saw a lot of comments in the subreddit that I was using to set it up that like oh, you have to be really good with command line to do this, you have to have Linux experience, you have to be a developer. And I was like I am none of those things. I successfully set up a validator and so I started commenting in there and being like no, this can be done by anyone. There are lots of tools to reduce the complexity of it and we do need to support those tools more so that they are well fleshed out and have good documentation. And Estacre aims to maximize the decentralization of the network which means that we want people not depositing their 32 ETH all in a centralized exchange, for example. And so we need a centralized place where people can go to to get the information that they need because right now there are a bunch of different protocols putting out a bunch of different information and it's really difficult to find all of your options all at once and find what the best option for you is.
00:12:53.700 - 00:13:11.340, Speaker E: You don't even have to use command line really to set up a node if you use DAP node or any of the other Avato or Wagyu or any of the Staking tools that are built out and so that sort of needs to be illuminated a little bit better.
00:13:12.670 - 00:14:12.814, Speaker B: Yeah, I'd echo that. I think the clients generally are not particularly good at making things usable for non developers. I think the way that we hire is usually for people who are more systems programmers. So people who are kind of thinking about what are the bits look like coming out of your networking interface? And it's not something we're interested in. Generally not something that we're particularly good at is thinking from the perspective of someone who isn't familiar with using the command line and stuff like this. So we do our best to try and make it so that it's straightforward and it's clean and that usually leads to it being simple but I think it's really a place where the community needs to come in and help is when it comes to usability. So like at staker with supporting with people how to use things and I know there's like Nicenose and some other initiatives out there to make it so that you can kind of wrap creating a node into a user interface or something that's easy to use.
00:14:12.814 - 00:14:17.770, Speaker B: I think it's a really good place for people to come along and innovate.
00:14:17.930 - 00:14:35.540, Speaker E: Because if you think about it the amount of people who are comfortable with maintaining a node on a command line interface who are also interested in Ethereum is such a teeny tiny amount of the world. And who has 32 E, that's, like, already a teeny tiny amount of the world.
00:14:36.230 - 00:14:36.594, Speaker B: Yeah.
00:14:36.632 - 00:14:47.030, Speaker E: So if we try to keep it at the people who can run a validator, a 32 ETH validator with 100% effectiveness, you're going to get a very centralized set of operators.
00:14:49.290 - 00:15:13.300, Speaker A: Yeah, thanks so much. Right. I noticed this totally on the workshops when I'm setting up help somebody to step node and the command line comes in and just get scared like that's crazy thing, why would I use this devil's whatever command line that's too much for most of the people. And I very much appreciate tools which make it easy. Also Ethereum on Arm, I mean just flushing it and running.
00:15:14.870 - 00:15:46.054, Speaker D: There are other options like tab download or Abad that make have this great interface web menu, these two clicks and you have a node. There are other solutions than command line. Our project is focused on this kind of devices or low devices but overall there are other projects that make it easy for users to run a node.
00:15:46.102 - 00:16:00.320, Speaker A: Or validate even with Ethereum on Arm or this eat docker kind of stuff. It's still command line but it's minimum amount of commands. Right. So it gets doable even for people who can get scared first.
00:16:00.690 - 00:16:25.190, Speaker D: Yeah, I think that people without technical skills would be able to run an Ethereum app. Yes, it's documented. You have to follow the guide. It's better that if you have Linux experience, for example, she said, but yeah, you could even run a node with no technical skills.
00:16:26.810 - 00:17:16.374, Speaker C: So I have pretty fresh experience of running if POS node and actually the biggest problem for me was that you need to realize that now you're running two pieces of software together, right. Like consensus client and the execution client. And I think the documentation that I read didn't make it crystal clear for me. And that was like one thing. But then the merge, I was totally not sure if it's going to work, if it's correctly configured, because it's been working, but I wasn't sure if the Engine RPC works correctly. I think after merge it's going to be easy to realize that it doesn't work because it's not going to be syncing. But during the merge I was like okay, I have totally no clue if it's going to work.
00:17:16.374 - 00:17:40.926, Speaker C: We're not staking. So it wasn't like a huge deal, but still it was kind of stressful. And now we have this modular two parts of the client and in the future we're going to have new module, new layers, like, I don't know, data availability layer on top of EIP 4844. And it's going to be even harder for people to run all that stuff again.
00:17:41.108 - 00:18:15.498, Speaker A: We are getting there and first I wanted to ask what kind of documentation you read, whether I think it was Prism. Okay. I wrote Ethereum.org documentation running notes, so whether it wasn't clear yeah, but I had trouble explaining it. I realized how much complexity I'm adding to the documentation there. Just to sum it up, what I believe we agree on, it's very useful to have the automatized setup tools which minimizes the technical requirements. Also, because I'm not sure whether I set up correctly or I leave some security hole there and so on.
00:18:15.498 - 00:18:53.838, Speaker A: And also the education. It's really important. Huge kudos to each staker for that. Regarding upcoming stuff. Now, the merge opened many doors, opened many interesting possibilities. And generally before eight, four, four, we already mentioned one thing, but are there any maybe other than that or even including this? What are you now excited for or maybe afraid of? What are the biggest upcoming things for the Ethereum which will influence you, this coming here.
00:18:53.944 - 00:19:36.100, Speaker C: Okay, I can kick off this discussion. So for me, I was surprised to learn that you cannot stake more than 32 if at the same time right now, I mean, you need to have separate validators, validator clients. Yeah. And I found it quite strange, especially for this big staking pools. And I'm excited that this is going to be fixed, I think in the future, even near future, I'm not sure here, but that was something unexpected to me. And also the reasoning behind you cannot do this right now was also pretty interesting to learn. Thank you.
00:19:36.790 - 00:20:17.714, Speaker B: So coming up soon in the protocol will be withdrawals, which I think are pretty exciting. So there's an EIP out there that is pretty well supported by the teams, and it seems like that's going to happen. So that'll be automatic withdrawals to the execution chain. So it means that if you've already withdrawn, or if you do withdrawn, then at some point your Eigth is just going to appear as in your F, one address, and you can claim it. And then for people who are still validating, once you get over 32 F, maybe once every couple of months or something like this, it'll be just kind of dropped into the execution chain and you can get at it. So that'll be pretty exciting, I think. I think the panel is on inspiring people to build things.
00:20:17.714 - 00:20:18.820, Speaker B: Is that right?
00:20:19.670 - 00:20:20.660, Speaker A: Let's see.
00:20:21.350 - 00:20:47.420, Speaker B: Yeah. Okay. So what's interesting with that is that it'll dump the F into an address, but it won't trigger any code. It won't do code execution. So typically in Ethereum, if you do an ETH transfer, when it lands in the account, you can trigger some smart contracts to create a log and then people can know that they got the ref. That won't be the case in this event because it's just.
00:20:50.220 - 00:20:57.496, Speaker A: To clarify, because it's kind of counterinialized by the protocol. Right. So that's the current specification.
00:20:57.608 - 00:21:46.696, Speaker B: Yeah, that's right. So there is a slight complexity to it. That when in the early days of the beacon chain, we weren't sure how withdrawals were going to work. So it was a BLS key that you put in as your withdrawal credentials. Now we decide that we're going to withdraw into an Ethereum address. So that means that users are going to need to users who have used the BLS withdrawal credentials, which is probably most, will need to submit a message on chain signed by that key that elects a Ethereum address to receive those funds. So I don't know how far I want to go into it here, but yeah, once users have done this kind of once off action, then the withdrawals are going to be automatic and they just land in there, which I think is really cool because it's less for people to do it's, less stuff happening on the network.
00:21:46.696 - 00:21:47.708, Speaker B: It's cool.
00:21:47.874 - 00:21:49.324, Speaker A: Can I add just one thing?
00:21:49.362 - 00:22:01.090, Speaker C: So you mentioned that the withdrawal can be yet another way to force ETH into an account without code execution. It's like the self distract trick. Now, that's good to know.
00:22:01.620 - 00:22:08.870, Speaker B: It's actually how Coinbase works at the moment. So the mining reward is delivered in the same way, so it's not too weird. Nick, you had a question?
00:22:09.640 - 00:22:11.540, Speaker E: No, no question, but a comment.
00:22:12.600 - 00:22:13.364, Speaker B: Go ahead.
00:22:13.482 - 00:23:02.900, Speaker E: Following on the withdrawals topic, I'm actually really excited for withdrawals because a lot when the beacon chain launched, there were very few options to stake. And since people have staked, they have not been able to withdraw and maybe change which protocol that they're using if they're not running a full node. And so there's going to be a lot of opportunity to shift things around and maybe address some of the centralization risks that have been brought up. And so I'm excited for that and I'm excited for any documentation that's going to be written up prior to that about how to withdraw correctly and what protocols are the best protocols to deposit into if you're not running a full Validator at that point. Or there could be people who have stacked 32 ETH in that time and want to run a full Validator.
00:23:05.800 - 00:23:58.288, Speaker D: Yeah. From our perspective after the merge, realizing that you could create a block in Ethereum with a device that consumes ten bats was like, whoa, this is amazing. This is great. Feels great. We didn't propose a block yet, but we are still waiting. On the other hand, I am very interested in two use cases that I hope that once the merge went through and L two S are thriving, that they were part of the initial Ethereum design. This Web three and sorry, storage decentralization.
00:23:58.288 - 00:24:19.768, Speaker D: It was swarm protocol. We have IPFS as well, and decentralized messaging. I think that these two cases, I hope that in the coming months or years get an impulse because I think they are very important to succeed for Ethereum.
00:24:19.864 - 00:24:27.296, Speaker B: Yeah, I'd love to see non financial use cases. I really never imagined myself in a fintech role. It's not why I started here. So I'd be keen to see that.
00:24:27.318 - 00:24:41.750, Speaker D: And everybody asks you, what are you doing? I'm in the blockchain Ethereum, what can I buy? No, it's not about that. That's why we're saying this.
00:24:43.080 - 00:25:22.770, Speaker A: Thank you so much for the answers. So, yeah, we tackled few important things here and there is actually big discussion in the community right now. So what should be the priority? Whether it's freight for four, whether it's withdrawals, whether we should try to put them together in Shanghai or separate your voice of communities, folks. So what do you think has the priority for you? What is considering maybe the complexity and whatnot what do you find more important and doable right now? Whether it's withdrawals or 4854, which I mean, there are many other things but I will mention these two because we get into them.
00:25:23.460 - 00:25:47.556, Speaker C: Yeah, so I guess for me, obviously it's 4844 which will help us with scaling Ethereum. And I guess the teams working on different client implementations can have better knowledge about what to prioritize. But the funny thing is that Prism got prior, labs got acquired by arbitrary.
00:25:47.588 - 00:25:50.804, Speaker B: So I guess there will be more.
00:25:50.942 - 00:26:42.030, Speaker C: Consensus there about prioritizing for eight four four. But yeah, I believe that Ethereum in the past failed scaling in scaling game and that's why not only things like Solana not only exist, but also got traction, but also things like polygon, right side chains and users might not realize all the different security properties associated with using these different blockchains or solutions. So I think that should be like the very high priority on Ethereum devs list to solve or improve the scaling of the whole system. And 4844 is like the easiest way to accomplish that.
00:26:42.480 - 00:26:53.644, Speaker D: Yeah, I don't have a strong opinion about that, but I would say that if 4844 means scaling and lowering fees, I would go for that.
00:26:53.682 - 00:26:54.270, Speaker B: Yes.
00:26:55.040 - 00:27:05.730, Speaker A: From the perspective of running the node, what do you think about the four eight four? Like whether I mean, there is a big overhead on the consensus client side by storing more data.
00:27:07.460 - 00:27:09.696, Speaker D: Maybe Paul maybe Paul can consider it.
00:27:09.718 - 00:27:10.764, Speaker A: Is it that significant?
00:27:10.812 - 00:27:40.700, Speaker B: Paul? I think the numbers haven't been chosen for 4844 but it's looking on the order of maybe like 200 to 400 gig extra disk space. There'll be some more network usage as well. So we're very sensitive to these things and we really don't want to set them high. So I'm one of the guys that wants low values. So yeah, less usage, but yeah, we're still figuring it out. But there'll be an impact on disk and there'll be impact on network.
00:27:41.120 - 00:27:54.610, Speaker D: Yeah, I think that the water net wouldn't be a problem with network and disk. So I think we will be good with this.
00:27:57.060 - 00:28:30.750, Speaker E: I'm not going to pretend I have enough expertise to talk about what should be a priority at the protocol level, but I would say not at the protocol level. I think that just abstracting the technical barriers from the user or from the staker is the things that I see and interoperability. I don't know if you guys have had any issues, but when you make a deposit to the deposit contract going through like ledger MetaMask, the deposit contract can have all sorts of issues and it would be great if those teams focused on the interoperability of those things.
00:28:32.880 - 00:29:17.484, Speaker B: Yeah, sure. I thought I should let everyone else speak before a client devs, talk to hear what people want because that's what we should be driven by. So the question of withdrawals or 4844, for me personally, I am prioritizing withdrawals. I feel like the merger is not really done until withdrawals are complete because I think that we did the beacon chain on this promise that we'll let you withdraw one day and the longer that we do that, it just feels a little dishonest to me. So in my opinion, the next fork withdrawals have to happen and then it's a question about whether or not 4844 comes with it. Yeah, I think myself and the other developers kind of flip back and forth between like, yeah, we can do 4844 and no we can't do 4844. So.
00:29:17.484 - 00:29:26.610, Speaker B: Yeah, I'm not sure. We've had a bunch of meetings on it this week making progress, checking it out. Be cool if it came in not explicitly for it or against it.
00:29:27.620 - 00:29:46.548, Speaker A: Yeah. Thank you. Considering the topic should be like what to build after the merge. Right. I think we mentioned many great things. Contributions on the protocol level to withdrawals for the testing and the stake, infrastructure, the education. There is so many things to do right now.
00:29:46.548 - 00:30:30.360, Speaker A: One thing I wanted to add is light clients, which after the merge can actually become usable thing I believe also largely advance the experience of running the node or just being able to participate without a third party. Right. Do we have time? Five minutes. So I have one more question, but maybe are there any questions from audience as well? Feel free to raise a hand. Just wanted to give a space. Yeah, one's.
00:30:30.460 - 00:30:33.108, Speaker C: Hi. Thanks for all the work all you.
00:30:33.114 - 00:30:33.812, Speaker B: And your teams do.
00:30:33.866 - 00:30:42.650, Speaker C: By the way. Curious what you think about homestakers and other folks using Mev boost and if you have any concerns around that.
00:30:43.980 - 00:31:12.540, Speaker B: Yeah. I mean, I definitely have concerns about mev. Boost and mev. I have been a little disappointed with how Mev has gone since the merge. I think it's probably not anyone's fault perhaps of the way that we coordinate the merge. But I think that Mev has kind of showed up not in the same readiness state as the clients have. So there've been some problems with the Mev boost that have been a little disappointing from my perspective.
00:31:12.540 - 00:32:07.856, Speaker B: Things that should have been caught already, things that should have been caught with testing. So I have a lot of respect for the Flashbots team. I think they've done a lot of good stuff, but I'm still very cautious about we've also seen some problems with other builders where they've been unable to produce blocks and they can get themselves in a position where the Validator is already committed to a block and then they fail to actually follow up on their part and produce it. Which means the Validator can't actually produce its own block. So we've seen missed proposals due to mev, we're seeing a lot of late blocks due to mev. And I've also seen some of these scenarios where mev like Mev Boost or mev builders have problems and they don't alert the community quick enough. They don't come out with an announcement saying, hey, we have a problem and we're not critical, so please just turn us off until we fix it.
00:32:07.856 - 00:32:34.892, Speaker B: I haven't seen that from them. So, yeah, I'm actually a little bit unhappy with mev in the state of it. I think it'll get there. My advice to people would be if you cannot run mev, just don't, because it's better for the protocol. And you're also not sandwiching people just trying to sell their money. But I can also totally appreciate why people would do it. And I was one of the people that pushed for including the builder API into including support.
00:32:34.892 - 00:32:45.570, Speaker B: I pushed for Consensus clients to support Mev Boost because I knew it was going to happen by some people and I wanted it to be safe. So, yeah, that's my thoughts on it.
00:32:47.780 - 00:33:22.270, Speaker D: I'm particularly concerned with censorship because some relays that are running on countries like USA that, you know, some regulator says now that tornado cash is legal, so these builders will not include these blocks with sorry, these transactions with tornado cash. And this bothers me because.
00:33:24.080 - 00:33:24.716, Speaker A: If we.
00:33:24.738 - 00:33:41.570, Speaker D: Are using MEB with, for example, Flasboot, are we censoring transactions? Maybe? So if we are using their layer. So it's a little concerning, yes.
00:33:43.140 - 00:34:13.224, Speaker A: Thank you so much for the question. By the way, that was my last question. The censorship, I wanted to drop the negative bump on the end. Right. But yeah, you already mentioned it because of the Mev boost, because of the realized the Validators are currently censoring blocks and it's over 40% right now of blocks which are OFAC compliant. So no good. And there is the PBS, which is, I would say just a meme right now.
00:34:13.224 - 00:34:37.264, Speaker A: It's just like, yeah, there will be PBS, we'll somehow solve it in the future. But the problem is that the longer we wait, the harder it might be to solve. Right. So Paul, thank you so much for mentioning or encouraging people actually not to run the Mev boost. Or I would say you can use non sensor in Korelays. There are these options. Do you have any other sorry, Paul.
00:34:37.392 - 00:34:41.830, Speaker D: The idea is to include mev at protocol level. I'm right.
00:34:46.120 - 00:35:32.096, Speaker B: As in what. I said about including it in the consensus. So before the merge, we had mev geth, which was like, if you wanted to do mev stuff, you needed to run this fork of geth in order to do this stuff. And a lot of people were running it, which meant that a lot of people are running a fork of a consensus client by a team that is not considered to be client developers. So I thought that was not great. So what we did with the consensus clients was to get Flashbots to instead create a separate service and then we support an API to talk to it. So what this means is that Flashbots no longer needs to fork all these consensus clients and then either do a lot of work or jeopardize client diversity.
00:35:32.096 - 00:36:04.648, Speaker B: And it also meant that now the consensus clients choose when to use these builders, these mev builders. So we have failsafes in there to say if the chain is unhealthy in a particular way, then let's just cut mev because it could be the problem for it. So at the moment, the protocol doesn't support it. The implementations kind of acknowledge that it exists and try to do it safely. The way that I think about it is like drug use. Like, it'd be great if it didn't happen, but it's going to, so let's make it safe.
00:36:04.824 - 00:36:05.644, Speaker D: Great example.
00:36:05.762 - 00:36:19.172, Speaker B: Yeah. And then in the future, the protocol wants to support the ability for the validators, not to be the ones that build the blocks. So whether those blocks contain mev, they probably do, but that'd be a bit of a better solution to it.
00:36:19.226 - 00:36:19.830, Speaker D: Great.
00:36:21.960 - 00:36:46.888, Speaker A: Anything to add, folks? If not, I think we are past our time and I would like to say a huge thank you, not just for attending this panel, but especially for all the work that you do in our project. It's what pushes the ethereum well to succeed. Right. So thank you so much again for your work, for being here and yeah, thank you so much for attending the panel.
00:36:46.984 - 00:36:47.790, Speaker D: Thank you.
