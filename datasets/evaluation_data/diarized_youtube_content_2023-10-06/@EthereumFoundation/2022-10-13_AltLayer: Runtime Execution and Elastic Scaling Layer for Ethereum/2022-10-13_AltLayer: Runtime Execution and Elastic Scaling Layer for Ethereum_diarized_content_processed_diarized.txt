00:00:14.250 - 00:01:17.394, Speaker A: So. I'm Yao Chi, the founder of earlier. So at earlier we are basically building the runtime execution and the elastic scaling layer for Ethereum. So, before we dive into you earlier, we want to know what kind of fundamental problems we want to solve, right? So right now we know like Ethereum post emerge and later on we also have this protodank sharding and lots of scaling solutions will be applied sort of on Ethereum. At the same time we have a bunch of L ones, can achieve some sort of hat throughput with low latency. But at the same time, as we can see, right, for the past two years there are more and more popular applications like X, Infinity, dYdX and also upcoming more and more games which already have millions of users and have to handle sort of tons of million requests every day. So in that case, as you can see, for the past two years we encounter a lot of network conjecture, gas war even for some sort of Mint.
00:01:17.394 - 00:02:19.762, Speaker A: Like one example on Ethereum is this other deed like Ft Mint, right? So basically people probably pay more gas fees than the Mint fees. It's not just sort of the scenario on Ethereum, but also on some highly scalable blockchains like Polygon. We had this sort of sunflower game, right? But at the same time just so many transactions and congested the network. Same issue to Arbitron. Basically we had a very successful campaign to onboard more users, but at the same time it's just so popular and at the same time the network was so congested. And then they have to pause until the Arbitrum natural came out, so they can resume such campaign. So, how we solve these kind of network congestion problems for general purpose L ones? So, one sort of thing we observe and basically on our side we want to propose is about this application tailored L two execution layers.
00:02:19.762 - 00:03:09.402, Speaker A: That's something like when we feel like there will be some network congestion for the application. So the application probably can just spin off a dedicated layer for them to handle these transactions. And in that case, all the transactions and requests can be handled on dedicated layer. And later we can roll up all the states back to the L ones. That's all we call either we call this elastic layer two or we can call L Three. So, some metrics, as you can see right earlier, we can really provide very high throughput like sort of execution environment with very low sort of transaction fees with very fast finality. Right now some metrics with some updated and basically we can achieve subsecond block time and even with tons of thousand transactions per second.
00:03:09.402 - 00:03:55.942, Speaker A: Meanwhile, also support both EVM and also Wazan. So there are two products we would like to provide. The first one is also short lived application dedicated roll up and we call Flash layers. And later I will just share with you why we want to have these short lived flash layers and meanwhile there's a persistent roll up solutions quite similar to the other existing optimistic roll ups. The idea to have the flash layers is quite straightforward for a lot of demands and requirements from the applications. Because as we can see for a lot of Ft projects, one of the biggest sort of campaigns is the Ft Mint. Also sometimes it's AirDrop for this short lived campaign, right? Typically only lasts for a few seconds or a few minutes.
00:03:55.942 - 00:05:07.214, Speaker A: In that case they can just sort of click a bunch of buttons via our dashboard and protocol will automatically spin off a dedicated layer to handle the meaningless request for the Ft Mint. The user can just do the Ft Mint and everything will be handled properly within a few seconds or minutes after that protocol will automatically roll up all the states NFTs back to Ethereum without sort of any third party interaction. At the same time, apart from the NFT Mint, we also want to provide very smooth user experience. In that case there will be sort of first car, first serve and also a bunch of add ons to make sure it can relatively easy to onboard empty projects and also for some game projects. Beyond that, as you know right, for lot of games or even some derived exchanges, they want a dedicated layer, not just for short live your time, a short period of time, also for a long time, for months or even years. In that case we will have this typical optimistic roll up for it. It's like our platform, the performance is quite good.
00:05:07.214 - 00:06:02.554, Speaker A: At the same time it's both EVM equivalent and also WASM compatible. Beyond that we also have a bunch of implementation for the Light clients. For example, in the future users or developers can just run the Light client or the Verifiers in their browsers. In that case they don't need to wait for the confirmation from the L two network so they can quickly verify the latest transaction or the latest block themselves. In that case it can further shorten the sort of challenge period and plus with some hardware hardened sort of Verifiers as the challenges so we can further sort of really reduce the verification or even the challenge period. Beyond I. Right, as we all know there are a bunch of state of art and new ZK libraries and also a bunch of game and metaverse SDKs which are not solidity compatible.
00:06:02.554 - 00:07:03.298, Speaker A: In that case we still want to support these libraries. So we have this WASM compatibility, so we can allow the developers to deploy these libraries and later they can use the Solid contract to call these libraries to really have a versatile execution environment for the applications. Beyond that, right, we also did a bunch of sort of campaigns and use cases ourselves to show up sort of the capabilities of earlier. One night we did one of these OG badge mint. Like two months ago, we got over 12,000 people participate in this campaign and all the FTS Minted within 18 seconds on the dedicated sort of flash layer, as I mentioned. Right, so after the Ft Mint, Minted within minutes, so the protocol can automatically roll up the FTS back to Ethereum. So right now, everyone can just treat the sort of Ft around floor price of 0.6
00:07:03.298 - 00:07:55.474, Speaker A: ether or something. And another sort of example is about a game. And we hosted this community round for Daforis like three weeks ago and we attracted tons of hundred players to play the game and basically precise around 100,000 transaction per day. The feedback we got from the players that basically didn't really notice is a fully on chain game. So the performance and also experience are quite good. And in that case, as you can see, apart from this good performance and also seamless experience, we can definitely support both NFT and also game projects. Yeah, and right now, last week, we launched the EVM equivalent testnet so everyone can just try out sort of the product for both of the systems.
00:07:55.474 - 00:08:25.290, Speaker A: And beyond that, soon we will just connect to more L ones, especially the EVM compatible ones, and just try to provide a much better solution for both Ft and the game. And also derivatives exchange applications. Yeah, that's sort of like all about the earlier. And if you want to find more information, just feel free to DM me on Twitter. Yeah? Thank you very much. Thank you so much. Big round of applause.
