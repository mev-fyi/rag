00:00:18.970 - 00:00:37.446, Speaker A: Said hi just now. I didn't hear hi. All right. Oh, great. Thank you. So today I'm going to share some exciting research that I've been doing, I don't know, for the greater part of the last six months, eight months, nine months, I don't know, most of this year. Not that this is the only research I've done.
00:00:37.446 - 00:01:08.478, Speaker A: It is just the most exciting stuff, the stuff that I want to blow your mind with right now. I had to cut out a lot of content from the talk, so I'm going to try to go through it quickly, add it back in without slides because I don't think I'm going to make it. Let me just take out my notes just in case I get there and then I need a refresher. All right. Hey, everyone. So smart transactions. Sounds great.
00:01:08.478 - 00:01:34.060, Speaker A: It is a prophecy of a new paradigm. It's basically a prophecy because it's not something like I decided I'm not like, imposing this on you guys. I'm like making a prediction that you're going to agree with me is like sort of a sound prediction. And then the only thing they might be imposing is accelerating the timeline, which is sort of maybe my fault if I'm accelerating it, but it's not my fault that's going to happen. This wasn't me. I'm like the profit here. I didn't do it.
00:01:34.060 - 00:02:17.922, Speaker A: So here's the prophecy. Basically, Ethereum transactions will become smart, which means, yeah, they're already programmable networks, but they're going to become context aware in this way. That's like characteristic of smart products that you walk beside them and then they start breathing and knowing what you're about to do. And they sort of act smart in a way that's sort of more than just programmable networks, but actually they're reactive to their context. And basically that means sort of over their actual impossible futures in this context and also over their context. And we'll get into that a little in more detail. But today, relatively speaking, I'm going to say that transactions are dumb and blind.
00:02:17.922 - 00:03:48.840, Speaker A: Basically, transactions today are not smart and they will become smart in the sense of smart products, which is like a kind of kind of research in product design where you try to make products like, yeah, programmable networked and reactive to their context in order so that they act right depending on what's happening to them, actually. So basically, Ethereum is and has always already been profoundly disrupted by unexpected semantics of EVM like Solidity and the Reentered C or just all sorts of weird quirks. It takes a lot of time to become a solidity developer because of the weird ways that Ethereum behaves that you wouldn't think. And basically this has come to a real, real head now with mev, where sort of it's much, very much not the expected transaction semantics. It sort of like ends up being like the worst possible semantics that could be interpreted for that transaction and sort of it ends up being kind of worst case execution, reintermediation censorship literally. And this is actually putting all blockchain communities into crisis, into a deep constitutional crisis. So what is a blockchain even? What is a transaction? What does it mean? What does this transaction mean? Because all the different possible ways it could be executed in different contexts and so especially, what does it mean if it's not just sort of included in a block in this sort of natural simple way that we were taught in the white paper and like all the white papers even.
00:03:48.840 - 00:05:24.100, Speaker A: So basically transactions face with evolutionary pressure due to these changing circumstances and they're basically like in fact de facto changing semantics, even though in some abstract computer science sense like oh, unless there's a change to ethereum and their semantics aren't changing. Actually, when the transaction pool changes, when the way people order them in blocks changes, it changes in fact the transaction semantics and they're going to become aware basically at first slowly and then a lot. And any of these search awareness basically will start and is starting as a sort of really minor little hacks and is going to become sort of much more, much more aware. So basically today you might pay out mev in a favorable outcome. In the future you'll be much more actively and much less actively interacting with the search in order to get better performance and sort of a better even understanding of how your transaction is being treated during the transactions on validation. So that was the prophecy basically, because this insane pressure by mev transactions are going to become smart, the semantics are going to be totally different than what we recognize today because basically well, I mean, I'll get to exactly how and why that's like a secured prophecy and not like a speculation. So let's talk about the past, like how did we get here? So we have this dark forest basically we have, I call them ethereal predators in the dark forest because you don't always really know what happened and how this all went down.
00:05:24.100 - 00:06:22.262, Speaker A: Worst case performance, frequent liquidation, stolen arbitrage, hijacked hacks. It's the stuff that we love to read about but also stuff that really hurts people when they transact financially and just in terms of like imagine you're trying to be a whitehead hacker and then your whitehead hacking gets hacked by some front running bot. It's sort of dark and basically transactions went into hiding because of this. They avoid the mempool, they use trusted searchers, they basically try to eliminate their mev in order to avoid this treatment. And this is like what I consider to be sort of dumb behavior. I mean it's a little bit smarter than getting wrecked right away, but it could be a lot smarter really. So we have also this concept of good mev, not all mev is bad, right? And I think this originated with mev tips in bundles, but I wasn't around.
00:06:22.262 - 00:07:15.910, Speaker A: So someone could correct me later. That's great. So that sort of distributed power from the sort of big bad miner who is supposed to take all the mev to searchers who are supposed to be like sort of the good guys protecting your transactions and giving them the ability to influence the block outcome without just sort of this pure extractive politics. More like we pay for the thing to win as long as we win the auction and we're providing a good bundle that's good. And then there's also this sort of really nascent kind of good Mev, which is like the saving out of gas exceptions, which is sort of like a really classic thing that Mev was sort of built for from the start, where basically the space really was for traders who were getting wrecked in this gas price auction. And so the gas price auction became mev. And then there was like good Mev and Madmev as people sort of exploited and also tried to defend themselves and use it as a sort of lever.
00:07:15.910 - 00:08:41.166, Speaker A: And basically I really have to power through here. So basically I sort of picked up on this research this year. I got into the mev space basically when I realized that there's this thing called mev time which is like sort of the time when the search is happening, when the search for this bundle or block is happening, where you can actually interact with Ethereum transactions in a sort of unconventional way. Basically, rather than sort of only having interactions with transactions you can actually interact as the searcher with the transactions directly. Basically by searchers have been adding their own transactions to bundles and interacting with them to sort of take our profits in a normal way but sort of to directly interface with them via like an IO interface where you just load values and they read values. Really opens up the Ethereum transactions to incredible sort of semantics by basically letting you interrupt transaction flow, do some stuff and then continue transaction flow as the searcher in a way where you can sort of update Oracle values many times within the trace of a transaction. You can do all sorts of operations in the middle of a transaction and sort of in some way violating atomicity but in some way it's not because ultimately you still have the same bundle of transactions.
00:08:41.166 - 00:09:33.106, Speaker A: Just that the bundle was set up in a way where the earlier transactions were put in as a function of what happened in the middle of the other. Sort of really just the mev time interaction with transactions really opens up non deterministic semantics of the EVM. Now instead of having like you can just literally have the EVM choose Arbitrarily and then the searcher tells you what you chose and they have an incentive if you tip them good to choose the right thing. And that actually not just lets you take advantage of these magic non deterministic choices but lets you have more information in the transaction than you could before. You can literally just give them anything with an oracle at any view time during the middle of their transaction execution. And so this is actually a tremendous change. But however, it's not really secure today because of the way that bundles and transactions can be reordered out of the search result that you find.
00:09:33.106 - 00:10:49.830, Speaker A: So you imagine, you search for this amazing interaction with the smart contracts sorry, with the smart transactions, excuse me, and then someone else jacks it and uses different input values for the same transactions and then you sort of get wrecked on your execution. Basically the search is not secure and that means that these mev time interactions are not secure. But if they can be secured, actually, basically anything a searcher knows can be given to the transaction and they can use it. They can become aware of not just their execution on this trace, but all the other counterfactual timelines. They have many possible presents, futures and pasts because that's sort of like what transactions are like before they're included in a block and finally actualized. So basically with MVB time interactions, transactions can become aware of sort of this superposition of different possibilities and counterfactual traces that end up being very, very useful. Basically, we need these searches to be secure, basically, like I was saying earlier.
00:10:49.830 - 00:11:46.494, Speaker A: And so basically I did a lot of research as a result into securing this mev search. Like how do we secure the search results that it can't get jacked, that the transaction receipts can't change after you sort of finish the search? Like those are the ones and they can't change. Thankfully, I'm happy to announce that I did succeed not sharing the solution, I'll share an outline and therefore I could make this prophecy very, very comfortably. Because basically, if it's competitive enough, viability is inevitability, basically it's strictly dominant over dumb transactions, it's possible we can do it. It's going to happen because the competitive pressure is too great. And so this argument, I like to say underwrites my prophecy, sort of signs off on it. Basically, you have to take it for granted or you have to believe me that I can secure the search.
00:11:46.494 - 00:12:30.490, Speaker A: But if I can secure the search, I can do this mev time interaction. I can inform the transactions of anything, basically. And then they can sort of do this crazy stuff of lots of wild magic, which we'll get to very soon. So what is the state of the art in smart transactions today? Well, this is sort of the state of the art in my tech research. The economics and law and other research has been sort of there's not enough time for all of it, unfortunately. So basically, smart transaction infrastructure is basically a story of smart transactions. Like pulling themselves up by the bootstraps, using a little bit of awareness to get a little more awareness, to try to get sort of very secure basis, a lot of awareness for the transactions.
00:12:30.490 - 00:13:15.334, Speaker A: And so I split it up into phases that are designed to be sort of acceptable to our current normal trust model at first and then deviate a little bit only as necessary and then come back so that it's a minimally politically objectionable for everyone. So basically in phase one we save gas in this very classic way of not doing those pesky out of gas transactions. In phase one, sorry, we have semi Adamicity, which means you can execute the prefix of a bundle, can't choose a suffix or like anything that isn't a prefix. So it's like not Adamicity. But I can restrict using the EVM's rules only sort of that you can only do a prefix using this thing called cumulative validation. It's going to invalidate it if anything else. Invalidated.
00:13:15.334 - 00:13:50.414, Speaker A: And also cumulative mev two sort of stores up the mev and then pays it only at the end of the bundle kind of story. Phase two is the interesting one that deviates from the current trust model that people have, which is basically I'm saying, like, oh, we actually need to it's essential that we trust the proposer for a moment, just for a moment just for this. Phase two, we trust the proposer. And then in phase three, we remove the trust from the proposer by sort of locking down their commitments, making them unable to screw us. So basically in phase two we sort of normally are very uncomfortable with because the whole movie space has been set up to defend you against the proposer. But I insist. It's necessary.
00:13:50.414 - 00:14:03.426, Speaker A: There's no way to do bundle protection without this. If you try to do without the proposal, you won't be able to do it. The proposal is so important. They're the signature on the block. They make it a block. You can't make a block without the proof of stake validator. It's just not a thing like they're important for building the block.
00:14:03.426 - 00:14:46.598, Speaker A: There's no such thing as a block builder is not a proposer. No offense. I'm sorry, I wasn't even supposed to say that. I take it back. It basically today we sort of have this idea we don't trust the proposer, but we really got to, we really got to in order to get atomicity, full atomicity and then we can lock it down and not trust them anymore in the next phase. And then after we have the atomicity of these search results basically and sort of like the guaranteed full inclusion of them fully or whatever, then we can open it up to basically all sorts of smart contract development sorry, again, smart transaction development and virtual services which is a very cool concept of sort of to the Mev searcher. They're just extracting value from you to you.
00:14:46.598 - 00:15:18.446, Speaker A: You're getting a service from them. But sort of like they're not a real service provider. They're extracting value from you from their perspective. And if your perspective, you're sort of hijacking that in the way that, for example, hijack fruit eating animals in order to spread their seed as an example. So here's some more tech state of the art stuff. So this is an example of formal semantics of what I call smart transitions. So smart transitions is sort of like an idea that comes from smart transactions.
00:15:18.446 - 00:15:51.226, Speaker A: It sort of generalizes it to all sorts of different computer science. This is like a system for describing distributed systems that I'm doing all this notation in. There's going to be a paper released about this, should have been today, but it's going to be like tomorrow or maybe the next day, like latest. So look out for this. It's going to help you understand this. But basically we have like a labeled state transition message production system V. And then I could define another one which has these special operations duplicate speculate and validate, which is going to do basically a speculative execution of this.
00:15:51.226 - 00:16:29.014, Speaker A: Other system in order to see in the future whether the thing that happened was supposed to happen and then validate, basically the current transition based on what happens many transitions down in the future, sort of violating normal transition semantics in a very, very interesting way, which I call smart. And basically the idea is like, they can sort of look into the future, but in general far and wide all over the place. So basically here's the transitions. So let's just go over through them quickly. Duplicate takes a state, creates two copies of the state. If you try to duplicate an already duplicated state, it does nothing. Speculate basically only works on duplicated states.
00:16:29.014 - 00:17:02.098, Speaker A: Otherwise it does nothing. When it's on duplicated state, what it'll do is it'll apply the transition with this label L and this message M to the second state. So the original state is left untouched and the second state is updated to the new state. And then it outputs like a message in this little temporary buffer zone from that transition. And so it collects these messages and updates the state while it's speculating. And then you can do a validate transition, which will either do one of two things. One of them is it'll delete the speculative execution state or it'll delete the current state like the old state.
00:17:02.098 - 00:17:37.486, Speaker A: And so when you do this validate step, it's like a few transitions later, at least one transition later. And then based on the validity of that transition, you sort of either revert all the previous transitions or you sort of choose them. You sort of collapse this superposition of like the old state and the new state, and you just get the new state. So this sort of is a speculative execution transition system based on one transition. And basically the amazing thing about this is that you can sort of implement ethereum out of Gas semantics, sort of like just with this, basically you charge an account gas, you do a bunch of executions, speculatively thinking. They won't run out of gas. If they run out of gas, you throw out all those changes and you go back to that just after the charge state.
00:17:37.486 - 00:18:36.690, Speaker A: And sort of you can use this to justify actually the ethereum transactions are already sort of smart just with respect to the out of gas exception that the block is aware of on the sort of block limit, transaction limit sort of level. I mean the block, I mean it might be the validator or something, but this idea of validating based on what happens in the future sort of could be done much, much more widely than just out of gas. You can just sort of refine those validity checks to add whatever constraints you want. You could have more than this amount of mev, like better than this performance as you revert, et cetera. And the nice thing about this is sort of that was one specular execution but we do the same thing where we do many, many specular executions. Then this could sort of very well encode an Mev search where basically you're just trying a lot of different possibilities and then you can validate based on the whole search whether you'll do any of those transitions and which one you'll do. And that's sort of like extremely powerful semantics.
00:18:36.690 - 00:19:27.586, Speaker A: But that's just looking forward. I mean this stuff really can look back and at different alternative presence either also, which is sort of sort of a trip and it sort of really helped me get intuition for quantum mechanics randomly anyways. So use cases, challenges and implications. There's stuff from the slides I haven't read. I'm trying to really rush through this but some of it is going to come back up now, I realize. So basically there's a bunch of stuff that's useful for first I'm going to stress again the infrastructure and the way that it's pulling us out by the bootstraps by using transactions to make transaction infrastructure and then also all blockchain use cases. I'm trying to say this is like totally dominant paradigm where basically no matter what you think of, you can do more efficiently with smart transactions except for maybe a simple send, maybe Jerry's out.
00:19:27.586 - 00:20:03.280, Speaker A: It's probably more efficient with smart transactions anyways, but it's going to be more like a smart operation or something like that. So basically, long story short, I mean here's a bunch of things. Oh, you know we have these access control lists that don't really work because you sort of might get outside of them and then you still have to execute the transaction and then you just get less of a discount if it doesn't work. It's like sort of a weird hack. It'd be nice. And we can do this to have access control lists that actually work without having to do any code analysis to prove that they work. You just sort of try it and if it doesn't work, convert it's great validation is amazing.
00:20:03.280 - 00:20:47.130, Speaker A: We can save gas and pay without you. This is sort of like classic stuff for mev, but the way that it's done in smart transactions is a little more capital efficient, maybe a lot more capital efficient in some cases. Rent, as expected, mev to justify state and Ram. This is sort of interesting thing. We have a long problem in Ethereum about state, rent and statelessness and how will people have the state? Why will they know, how will they validate my transaction now? How will they search it? And the answer is like, if they expect enough mev, they'll store it and they'll speculate on that in all sorts of ways. Maybe they'll even do it in a way that's sort of like public value as opposed to internalized value. And so basically, rent actually comes in through the backdoor, not through smart transactions, but like mev in general.
00:20:47.130 - 00:21:31.250, Speaker A: But I think smart transactions in particular because they can be rent aware in a way that's sort of like a function of what is happening on the searcher's Ram and what the searcher's policy is for what they choose to put in their Ram. And so it can be sort of very specific and very flexible compared to all the rent proposals so far. Automated collective bargaining. Pretty cool, right? You have a bunch of transactions with a bunch of people in your little union and you decide, hey, we're not going to transact unless we're all treated good. Very good, very good stuff. We'll get those beasts from the dark forest, get our mev back. Direct economic interventions at all scales.
00:21:31.250 - 00:22:00.194, Speaker A: This is very, very cool. You may use macro statistics, micro statistics, meso statistics, and just pay for those outcomes in a sort of very direct way that's sort of lacking today in public policy, where basically helicopter Ben has a really hard time dropping money on people. But we see all the transactions on all the timelines collapsed into one and sort of can pay the searchers for whatever policy goal we want. It's amazing. Just in time. Liquidity pools. It's pretty cool.
00:22:00.194 - 00:22:40.960, Speaker A: Imagine the liquidity follows the different trades within your transaction around, just to serve you better. Amazing. Can't happen today because of the transaction timing and the operation timing doesn't allow for it. Zero capital, zero credit trading. This is very cool, where you can do time travel to borrow profits from the future to do your trade. Now, you wouldn't think, but totally possible in Ethereum today already, but just within the scope of a single transaction. In the future, it'll be across many transactions because an atomic block happens all at the same time, which means that the end of the block happens the same as the time as the start of the block, which means you can sort of borrow the profit from the end of the block at the start of the block and sort of have it all work out.
00:22:40.960 - 00:23:11.434, Speaker A: Amazing. You can hedge, quote unquote, using exactly the cost that incurred at the end of the block. It's not even really hedging because you know for sure the cost, it's like the most efficient it could possibly be for certain instruments and lots of other stuff. But we have challenges still, unfortunately. Unfortunately this can be very, very computationally expensive. Simultaneously searching for all these solutions at the same time for all these transactions, especially if everyone's demanding them, there's a lot of them. It can be very hard.
00:23:11.434 - 00:24:04.490, Speaker A: Who knows how the complexity grows in the smart transactions? It depends on what they're doing. I can definitely design smart transactions that do really bad for the searchers and that basically don't have solutions. The more you add to them, they might have solutions tractably for a few, but then the big O is so bad, like you add ten more and then you can't solve them anymore. And this is why this Dos and gas insurance market is so important because they kind of need to figure out is this a Dos attack? Is this a legitimate smart transaction? Is this something that is going to have a solution? Or is this something that we're wasting our search on because it's just computationally very difficult to find all these solutions. Also I mentioned all these kind of counterfactual stats and claims and things. The searcher knows that. But why should your transaction trust the searcher to give it the right values? There are sort of challenges with respect to verifying these inputs especially efficiently.
00:24:04.490 - 00:24:52.902, Speaker A: And then there's a multi block issue which is sort of like actually we don't want in some way transactions to end in one block, to just finish validating everything in one block. It's sort of very nice to have multi block transactions. And to do this efficiently is a challenge especially composed of all the other search. So rather than all the searches being sort of like this block, imagine you have searches on different timelines, sort of for different transactions that are executing on different timelines. And also there's a whole search organization problem around this. Like how do you organize the searchers actually, but very, very interestingly, this sort of has actually a lot of implications beyond the sort of birthplace of these transactions as sort of this mev space where basically you're responding to this mev search because actually the smart transaction validation is sort of very wide. It doesn't need to be validating anything to do with mev.
00:24:52.902 - 00:25:16.238, Speaker A: And this is sort of useful in distributed systems in a broad way, in transactional systems in a very broad way. And so actually smart transactions are sort of not just mev. Mev is sort of like an economic thing. It's like only one side of the story. They also have really amazing computer science innovations. Not the economic stuff isn't great. I mean the risk management, the smart transactions to like that hedging that I was talking about earlier.
00:25:16.238 - 00:25:45.850, Speaker A: Amazing. Basically can really, really make things much more economically efficient. And then sort of like legally, if you will, it's very low liability to hire, quote unquote, or to be a virtual service provider because you're not a real service provider. And so you're just extracting money. You're just being sort of a selfish maximizer, which means that you're limited in liability. So basically, unfortunately, out of time. This is my concluding slide.
00:25:45.850 - 00:26:04.622, Speaker A: And they're missing a will there. Oh, no. They do actually revolutionize now ethereum's transactional semantics. And sort of like that's like sort of the prophecy and sort of like the fact in the future, which is sort of like, I guess what a prophecy should do. Thank you so much, everyone. Really appreciate it. I have more, I have more.
00:26:04.622 - 00:26:21.730, Speaker A: Come see me later. Thank you so much, Vlad. Sadly, there's no more time for questions, but I'm sure he's going to answer all your questions over here. Yeah, outside the outside. Thank you. Bye.
