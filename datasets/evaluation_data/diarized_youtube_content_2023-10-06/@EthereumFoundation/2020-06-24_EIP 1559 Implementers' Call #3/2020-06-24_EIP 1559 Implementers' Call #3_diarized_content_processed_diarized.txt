00:00:00.410 - 00:00:00.960, Speaker A: You.
00:00:02.450 - 00:00:35.800, Speaker B: So, hi, everyone. Thanks for joining. This is implementers call number three for EIP 1559. And now also other proposals. Oh, we have more people kind of slowly rolling in. Yeah. So the goal of today, as per the agenda, was mainly to try and analyze the different proposals that have been put forward.
00:00:35.800 - 00:01:26.134, Speaker B: So there was the original EIP 1559. Then Dan Finley from Metamask put together sort of counter or composable proposal for it called escalator fees. And then Mika Zoltu, I hope I'm getting his name right, also had another proposal around typed transaction envelopes, which both eeps could use. I think it would be valuable if we can get to a spot where we have pretty broad alignment on what's the best way to move this forward, because then we can start answering some other questions around how do we actually test this? What's required for us to feel confident deploying this on the network? Yeah. Does that generally make sense to everyone?
00:01:26.332 - 00:01:27.080, Speaker C: Yes.
00:01:28.830 - 00:02:37.262, Speaker B: Cool. Okay, so, I mean, I can go through kind of the list of comments that people posted as a sort of conversation starter, but yeah, there were three main things. I don't think any of them are on this call voiced in terms of opinions with regards to if we should bundle or unbundle the proposal. First, there was Mika's comment basically saying that he's strongly against bundling the eeps because they both add value on their own, and so we should just have them separate because of that. Then Barnabay put together kind of a pretty long explanation, saying that either we have to keep the current transaction model with the escalator rule for the fee. And by current, I assume that he means. Yeah, I assume he means what's on main net today.
00:02:37.262 - 00:03:19.980, Speaker B: And then the second option is you use 1559 and you use the escalator rule to calculate the premium. And then finally, Derbit, which is kind of a research blockchain analysis blog, put together a pretty thorough analysis of the escalator proposal and how it works or doesn't work with 1559. And their kind of takeaway after the analysis was 1559 probably provides most of the value and the escalator can be done outside the protocol. So maybe it makes sense to just start with 1559. So I'm curious to get thoughts from just other folks on this call.
00:03:20.770 - 00:03:53.510, Speaker C: Yeah, for the last point, I kind of disagree with that. I think it's better to have the escalator algorithm on the protocol layer because if you delegate this to a third party, you will have to resign the transaction. So you will have a background service on the wallet, for example, and to resubmit transaction. And I think it's better to avoid this signature process if we can have this in the protocol layer.
00:04:08.570 - 00:04:16.910, Speaker B: Is anyone on the all think we should not bundle EIP 1559 with the escalator fees proposal?
00:04:21.170 - 00:04:26.420, Speaker D: And I'll say I'm neutral on that.
00:04:30.070 - 00:05:28.520, Speaker C: For me, it depends also on if we want to make the type transaction envelope requirement of them, because if we don't, it will be hard to, let's say implement IP 1559 alone and after add the escalator if we don't have the type transaction envelope. I think it will be better to have the type transaction envelope before implementing both EIP so that we can even imagine a system where you have some basically three transaction types, EIP 1559 alone, escalator alone, and a combination of both. But I guess it will be maybe bad because the user experience will be different for different types of transaction. But yeah, I will strongly advocate for having the type transaction enveloper requirement for both.
00:05:30.170 - 00:05:37.960, Speaker A: Are you saying have the type transfers first and then do 1559 and or before either of them?
00:05:39.050 - 00:05:55.470, Speaker C: Basically on the same hard work. But just let's say, for example, pass the type transaction envelope to EFI and then make this as a requirement for escalator.
00:05:56.210 - 00:05:59.150, Speaker E: Why do you just joined hard fork?
00:06:00.370 - 00:06:10.674, Speaker B: Sorry, why are you saying that they should be on the same hard fork? Wouldn't it just make sense to do type transactions as soon as possible? And if the next hard fork they're both at it, great.
00:06:10.712 - 00:06:41.614, Speaker C: If not, I mean, it's mainly to avoid changing the user experience from hard fork to another. Because if we implement first, if 1559, we will have some breaking change on wallet implementations, et cetera, also on user experience. And then if in the next hard fork we decide to add escalator, we will again have some breaking change on the user experience. So I think it's pretty bad and.
00:06:41.652 - 00:06:48.590, Speaker A: That'S without the envelope. Or in both cases.
00:06:50.530 - 00:07:14.710, Speaker C: I mean, we could have a combination of both Yap 1559 and escalator without the type transaction envelope. It will be just harder on the pure implementation side, but we can deal with that. But for the breaking change on the user experience, it does not depend on the transaction type of develop. In my opinion.
00:07:22.680 - 00:07:38.010, Speaker E: Hasu just joined who I think would probably have something to say about this if we caught him up to speed. They're talking about bundling these two eips, whether that should happen and kind of the pros and cons against escalator being in protocol or not.
00:07:40.540 - 00:08:21.860, Speaker F: Yeah, hi I don't have a strong opinion on whether they should be bundled or not. I think the escalator in general is a good idea. I think we see that it's being adopted on the client side and it's also something that users do manually already. So that's one of the main points of our analysis that we published today, that there are some arguments that the protocol should be as lean as possible in the base layer protocol. So we should see if it's being adopted on the client side, then if it's very popular, then we can internalize it. That would be my approach.
00:08:25.260 - 00:08:47.730, Speaker C: In that case, you accept to have two breaking change, because even if it already exists outside the protocol, if we integrate it after on the protocol, that will be a breaking change. So, yeah.
00:08:52.660 - 00:09:52.390, Speaker A: If I could have everything all lined up right, just for simplicity of less moving parts, I would prefer for 1559 to go in first and then say maybe in four months we could even plan this advance in advance and work towards them of having like a four month window between deploying 1559 and then adding Nescalier algorithm. It's just there's simplicity in having less moving parts when it first started, because there still is some risk of things going wrong. And so having less things that could go wrong all at once seems nice. As far as breaking changes, I think it's valuable enough for the users of the network to. The reason we don't break changes is because of user experience, and it hurts somewhat users expectations. But in the case that users want it enough, then it makes sense to go forward with them.
00:09:55.560 - 00:10:55.624, Speaker B: So you're saying if you ship 1559 as is, you change the transaction fee, that means every single wallet has to kind of readapt, and then if we then ship escalator, call it four or six months later, you have that adaptation again, right? You're asking once more, every single wallet or thing that sends a transaction to readapt. I feel like that's like a lot. I feel like that's a lot of added complexity to the entire ecosystem that we can maybe manage better by either saying 1559 as is is complicated enough, we want to ship that, and let's just do the escalator outside the protocol. Or if we really want the escalator in protocol, I think it makes more sense as a single eeP, like a new EP that's like a merge of the two in a way, because then you have this very complex change, but you only have it once, right?
00:10:55.742 - 00:10:56.410, Speaker C: Yeah.
00:10:59.420 - 00:11:10.430, Speaker A: So you're saying having 1559 as is, and then having the escalator be done outside of the protocol with the option of coming back later and doing it.
00:11:11.120 - 00:11:31.750, Speaker B: I don't have a strong opinion. Either that or you basically create a new EP that's the escalator with a base fee or 1559 with an escalator tip, however you want to frame it, but you just do it all in protocol from day one. Yeah.
00:11:33.960 - 00:12:24.630, Speaker A: As far as for the difference between the escalator change isn't really that big of a change if it was just on its own, as far as it's true ux, and especially if we were to say we're rolling out in phase one and phase two, so people are prepared and they know that these kind of changes are happening and they have to build the UI anyway for both if we're going to do both, if we say, hey, we're going to do one and then we're going to use some time to inform, to make sure that our decisions are correct on all of these variables and then deploy the escalator tip. Maybe it turns out that we don't even need that because of whatever ends up working.
00:12:28.760 - 00:12:29.316, Speaker B: Yes.
00:12:29.418 - 00:12:38.136, Speaker A: It isn't like we're saying, hey, part one, and then we're going to come around and say, let's do everything again, part two, or like completely separate change.
00:12:38.238 - 00:13:25.304, Speaker C: Because we can. If we do need the escalator after, it will be confusing for user because the field they were using without will mean another thing. So it will be confusing for them because if we combine them, the interpretation of each field is slightly different. So I think it can be confusing for a user. And if it is in such short period, it can be really hard because a lot of the work will be about educating user, I guess. And also E 1559 is already designed to be. There is two phases on E 1559.
00:13:25.304 - 00:13:51.596, Speaker C: So there is already a transition period to make the wallet integration smooth. And it seems to me that we will add complexity if we say we have an ip that makes the integration smooth with the transition period. But four months after, we will have again a breaking change without the transition period again changing.
00:13:51.628 - 00:13:58.320, Speaker A: The minor tip to an escalator, I don't think is complex enough to warrant a transition period.
00:13:59.540 - 00:14:02.544, Speaker C: No, but it's more about the wallet integration.
00:14:02.672 - 00:14:18.280, Speaker A: Yeah, the wallet integration, if it works outside of protocol, like let's say we do 1559 first and then encourage wallets to do the escalator, have the escalator tip outside of the protocol level.
00:14:18.350 - 00:15:00.580, Speaker C: Yeah, I see what you mean. We can leverage Ux UI, but the most difficult part will be about transaction signing because it totally changed how you sign transaction with or without. I mean, if it is outside the protocol. Basically it just simulates escalator by resigning transaction with different gas prices. But it is not the same with the escalator. In the protocol, you sign the transaction only once, so you have to include more fields in the transaction signing and how you encode the Transaction, et cetera. This is the main important change.
00:15:00.580 - 00:15:06.580, Speaker C: It's true that we can leverage the UX UI, but not the signing.
00:15:07.980 - 00:15:55.400, Speaker B: One thing I'd be curious to get other people on the call's opinion is in your piece, Hasu, you mentioned the sort of privacy implications of the escalator fee, right? Because if you kind of put a transaction in the transaction pool and then resign it with a higher gas fee, sure somebody might be able to track that, but it's not like part of the protocol forever or part of the kind of history forever. Whereas if you have the escalator, basically every transaction signals this is the least and the max I'm willing to pay and that's going to be recorded as part of those fields being added to the transaction. What do people think about the privacy implications there? Do people think it's like a concern, is that something that you can already kind of infer anyway on the network?
00:15:57.980 - 00:15:58.730, Speaker G: Yeah.
00:16:02.220 - 00:16:10.076, Speaker F: So I see two implications. The one is on user balances or user accounts. So accounts may be associated with a.
00:16:10.098 - 00:16:10.670, Speaker E: Higher.
00:16:12.960 - 00:16:24.690, Speaker F: Propensity to spend or something like that. But the. Sorry, forgot my point.
00:16:36.740 - 00:17:00.980, Speaker C: I think we already had this thing, maybe less, but because you cannot know from where they started to bid, but you know the final price. So you can have some signals about how important was the transaction for the user. So it disclosed some information less than with the escalator in protocol.
00:17:02.280 - 00:17:38.856, Speaker F: Yeah, I agree. Just remember the second point. The second point is on if miners can use this information to come up with any new strategies to maybe delay transactions if they know deterministically that a transaction is willing to pay x amount in the future if it isn't included. Now, that's information that miners don't have today, but I don't know if there's a way for them to exploit that's.
00:17:38.988 - 00:17:40.070, Speaker C: I don't know.
00:17:41.800 - 00:18:02.510, Speaker A: You could certainly wait and hope that nobody else puts the transaction in. Like if everyone waited till the end, then everyone would have the maximum escalator fee, that maximum fee. So that's actually kind of a good point of having, if it's outside of protocol level, then you remove that information from the miners so they don't know.
00:18:03.360 - 00:18:03.676, Speaker B: Yeah.
00:18:03.698 - 00:18:19.920, Speaker F: I mean, you would hope that there's a coordination problem amongst miners where they are like, one of them is incentivized to break their kind of cartel formation and just include a transaction once it's profitable instead of delaying and delaying and delaying.
00:18:22.580 - 00:18:23.232, Speaker A: Yes.
00:18:23.366 - 00:18:23.808, Speaker B: Right.
00:18:23.894 - 00:18:56.220, Speaker E: If blocks are generally full, though, and most miners are following the strategy of waiting, then once I come along, even if I want to be honest, I'm still going to pick the ones that have been waited on. And so the strategy might still be dominant even if you have one honest person that wants to break it, just because breaking it would assume that they would pick up all the most valuable, but also pick up the ones that haven't reached the top escalator. But if the blocks are full, they don't necessarily have that option anywhere.
00:19:07.780 - 00:19:15.090, Speaker A: So does that suggest that we should think more seriously about how to do it outside the protocol air?
00:19:18.040 - 00:19:28.600, Speaker E: I'm not necessarily suggesting that. I'm just suggesting that in the extreme case, you might have, the honest player doesn't necessarily break the strategy.
00:19:29.500 - 00:19:37.210, Speaker A: Yeah. I'm also wondering more people on the call if that's kind of the direction that this is.
00:19:38.640 - 00:19:46.860, Speaker F: My intuition is that it's not a big deal that you leak this information to minus, it's just an intuition.
00:19:48.080 - 00:19:49.740, Speaker C: I have the same intuition.
00:19:52.640 - 00:19:55.920, Speaker A: So then what are the big deals?
00:19:56.500 - 00:20:07.700, Speaker E: You can still escalator your. If you wanted to not reveal information, you can still put the min and max very tight and then sign a new transaction rather than dealing with the protocol escalator.
00:20:08.600 - 00:20:08.964, Speaker B: Yeah.
00:20:09.002 - 00:20:19.080, Speaker F: You can still use the in protocol escalator strategically where you only encode it for your encoder strategy for two blocks or three blocks and then you.
00:20:19.150 - 00:20:22.276, Speaker E: Right. Even if you're willing to go higher in more blocks.
00:20:22.388 - 00:20:26.360, Speaker F: Exactly. You strategically don't reveal your true preferences.
00:20:27.260 - 00:21:19.912, Speaker B: Right. Yeah. My biggest, I think big concern at this point is just I'm not that confident there's actually the time to do both separately and that the UX burden is worth it. Right. I think 1559, changing the way transactions are formatted is probably the most breaking change you can do on eth one at least, because literally everybody who sends a transaction needs to adapt. I would strongly try and avoid doing that twice, especially given that historically we have like a six to nine month delay between hard forks. So that means that, say, best case scenario, we ship whatever just 1559 early next year and there's another six months.
00:21:19.912 - 00:21:57.240, Speaker B: It means you're still looking at another year before the escalator goes live on the network. And right when everybody's kind of starting to get comfortable with 1559, you're basically breaking things again. To me. I don't know. My intuition is that's worse than either option of never shipping escalator in protocol or just the extra complexity of bundling them together. And I wish Dan fiddly was on this call because I feel he has the best perspective from metamask on how much breakage is acceptable.
00:21:58.060 - 00:22:13.150, Speaker A: Yeah. Is there problems from just like transaction inversion perspective of having, because we don't really have that capability built in.
00:22:16.080 - 00:22:16.444, Speaker B: Or.
00:22:16.482 - 00:22:23.440, Speaker A: Having multiple transaction types, is there implementation problems of separating them from that perspective?
00:22:27.540 - 00:23:28.640, Speaker B: Well, I guess that one I can see is, do you want all your transaction types to burn the base fee? Right. And if you do, which seems to be like a lot of where the community support for 1559 comes from, then if all your transaction are burning the base fee anyway, you're kind of back at this problem, right, where they all have this common component and you're kind of messing with the other parameters. I it. So it seems like, I don't know, no one here has like a super strong opinion for, against bundling.
00:23:29.060 - 00:23:32.220, Speaker C: I have a strong opinion for actually for bundling.
00:23:32.300 - 00:23:32.544, Speaker B: Okay.
00:23:32.582 - 00:23:33.228, Speaker C: Yeah.
00:23:33.414 - 00:23:39.430, Speaker B: Okay, great. Does anyone have a strong opinion against bundling them together?
00:23:39.960 - 00:24:20.450, Speaker E: I would assume that barring more analysis, most people on this call would not particularly have a strong feeling unless bundling was going to significantly delay deploying 1559. If there was additional complexity in implementing this in protocol and getting it tested and getting it released, that was going to push everything back, say, six months or a single hard fork, I would imagine a lot of people in this call would rather push out 1559 than bundle. But I don't have a good handle on the relative complexity of adding elevator and protocol versus just 1559.
00:24:20.900 - 00:24:39.770, Speaker C: To me, it's easier to bundle them than adding them later, especially if we don't have the type transaction envelope. My end assumption was based on the fact we accept to have the type transaction envelopes as a requirement of EPD 1559.
00:24:40.700 - 00:24:45.130, Speaker F: Is it also possible to ask a question on 1559 in this call?
00:24:46.300 - 00:24:47.048, Speaker B: Sure.
00:24:47.214 - 00:25:04.336, Speaker F: Okay. So what would be interesting to me is have you ever tried to simulate any 20 million gas blocks as the proposal suggests? How do clients deal with that?
00:25:04.518 - 00:25:25.300, Speaker C: We decided to remove the block limit riders and let miners decide as it is right now. And there will be a separate EIP to add riders if we think it will bring value. But we decided to separate 1559 from the riders.
00:25:27.180 - 00:25:28.760, Speaker F: Just in terms of stability.
00:25:29.900 - 00:25:30.744, Speaker C: Okay.
00:25:30.942 - 00:25:32.708, Speaker F: Without any million gas blocks?
00:25:32.804 - 00:25:51.390, Speaker B: No. And that was basically the next point on the agenda. But I think the hard part is we basically want to agree to a spec of what those blocks look like before we start those simulations. But I think that would be the next step. Yeah.
00:25:52.400 - 00:26:04.592, Speaker F: And maybe regarding the block voting or the guest limit voting, is anyone seriously in favor of that at this point, or would it be in favor of.
00:26:04.646 - 00:26:07.076, Speaker D: Keeping gas limit voting or removing it?
00:26:07.178 - 00:26:22.424, Speaker F: Of keeping it. I feel like it's a known incentive incompatibility issue of having miners decide the gas limit. So I'm just surprised that there have.
00:26:22.462 - 00:26:30.830, Speaker D: Been arguments made that we shouldn't bundle those two things together. Right. Because they're different proposals in some sense.
00:26:31.440 - 00:26:50.290, Speaker B: Yeah, that's my strong opinion as well. If we want to make the blood gas limit something that's controlled by, say, hard forks, that's a separate ep, but like 1559 shouldn't introduce that as a sort of side dependency because it's a pretty critical change.
00:26:51.940 - 00:26:58.470, Speaker A: And I would strongly be for putting it as protocol layer, not as in minor control.
00:27:01.560 - 00:27:04.950, Speaker B: So we're going to need a blog, gas limit implementers call.
00:27:07.660 - 00:27:36.530, Speaker A: We could do that. I think that would take the discussion. But for answering Hasu's question, there has been some discussion about how to procedurally manage some of the amount of changes that are happening. So we talk about it as removing writers and such, but I think we should seriously consider having the protocol, have it be a protocol level and not something that miners choose.
00:27:38.820 - 00:27:49.700, Speaker B: Yeah, this is kind of a side rabbit hole though. But yeah, I think if we do that, it should be a separate. Yeah, but it should be a separate eep.
00:27:50.440 - 00:27:56.112, Speaker A: I'm fine with that. I agree that that should be the format. I think we should also still execute on that.
00:27:56.266 - 00:29:36.180, Speaker B: Okay, got it. So I guess related to back to bundling the two eeps, would it make sense to try and put together a proof of concept implementation of the bundle and see if it's pretty straightforward? Start testing with that. Because I feel like if the main concerns are either it'll slow things down, then we can't really know that in advance. If there's a concern about maybe we want that at another level of the protocol than the client, I just don't think we have the right people on this call to figure that out. But we can at least move forward with kind of the escalator tip and then start doing stuff like modeling 20 million block sizes, like doing some more kind of formal simulations and whatnot. But at least we have like a single spec to go on. And then if there's any significant problems with that, we can kind of go back to 1559, sort of vanilla 1559 if you want, because otherwise I just think it'll kind of slow every conversation down to always be discussing, do we do escalator? Do we do the original one? And it won't get us to figuring out, can we handle 20 million gas blocks? Can wallets actually provide a good interface for that and whatnot?
00:29:38.220 - 00:30:39.484, Speaker A: Yeah, I agree with that. I think Danny is on point with that. The biggest concern would be around timeline changes. So if we could just agree that the ideal version is to have 1559 and the escalator trip, the question is, how does that move forward? If they happen separately or if they happen at the same time, then we can look at what actual effect on the timeline would be. Because if we had to wait an extra three months, three to six months, to put the escalator tip in, then we've pushed 1559 back a bunch. And then how to say this clearly. So if we have a timeline of 1559 could happen sooner if it was without the escalator tip, and then three to six months later, we could have the escalator tip separately versus if we put them both in, but then they're both delayed three to four months, then that doesn't really solve it.
00:30:39.484 - 00:30:41.230, Speaker A: We end up being worse off.
00:30:42.400 - 00:30:55.330, Speaker F: Yeah, I don't really have an opinion on timelines and so on, but under the condition that one of five f nine is delayed, I would also oppose bundling them together if that's the result.
00:30:56.100 - 00:31:15.830, Speaker C: I don't think it will be delayed. If we add escalator algorithm, we can start implementing a proof of concept to add escalator just to unlock people that will do the simulation. And then we can see if we want to do the tag transaction envelope. But that won't change the simulation basically.
00:31:19.820 - 00:31:31.564, Speaker A: Perhaps, maybe for Besu, but is anyone going to be writing the guest client implementation or the other client implementations for that? There's other.
00:31:31.682 - 00:31:40.060, Speaker C: I can ask Ian from vulcanize who did the implementation to see if he can work on the escalator.
00:31:42.560 - 00:31:43.968, Speaker B: I will ask him.
00:31:44.134 - 00:31:48.272, Speaker A: Yeah, he wouldn't be able to unless we got funding for him to do.
00:31:48.326 - 00:31:48.928, Speaker C: Yeah.
00:31:49.094 - 00:31:55.740, Speaker A: So there isn't currently someone lined up to do that work on the geth client. So that would be something else we need to solve.
00:31:55.820 - 00:31:56.112, Speaker C: Okay.
00:31:56.166 - 00:32:16.170, Speaker B: Yeah, that was the other point. But I think, frankly, if nobody's going to do the implementation work, there's kind of bigger problems of whether or not we bundle the tip, because there's still going to be multiple months of getting this live. Right. It's going to take more than like a reference implementation on wherever the spec was at six months ago.
00:32:17.420 - 00:32:28.860, Speaker A: Yeah, there's a different amount of work to polishing up the current 1559 that actually does things versus refactoring to put an escalator to. That's a significantly different amount of work.
00:32:29.010 - 00:32:35.010, Speaker B: Okay, so I guess.
00:32:39.860 - 00:32:46.980, Speaker A: Can we decide that the ideal world is that we have both and it's about how do we get them in in the best way?
00:32:47.130 - 00:33:11.530, Speaker B: Yeah, I think I would rather go for that. And then we can always trim down and we can just assume they're both going in and figure out the implementation details in the broadest general sense, but at least be clear on the spec of like, okay, this is what it should look like. And in terms of.
00:33:13.360 - 00:33:20.444, Speaker C: If we say the ideal version is to bundle them, we have to decide how we, the.
00:33:20.482 - 00:33:43.200, Speaker A: Ideal version would be to have both, but it's unclear if they should be bundled or released in series. Okay, so we can decide perhaps today that that is what we want to work towards. And the next question is, what's the best way to get to that, whether it's bundled or not bundled, that makes sense with particular sensitivity to timeline, the effect on the timeline.
00:33:43.360 - 00:34:09.996, Speaker E: Okay, by bundling these, are we inducing the ability for more fud by raising the complexity of this change? For example, I know there's some people that are calling for more in depth technical and economic analysis of 1559. If we add escalator and don't as well do this type of analysis, and there's kind of open questions about leaking information and that kind of stuff, are.
00:34:10.018 - 00:34:14.450, Speaker A: We shooting ourselves in the foot a little bit? I would say definitely.
00:34:18.100 - 00:34:18.848, Speaker E: Okay.
00:34:19.014 - 00:35:01.980, Speaker B: Yeah. I think the challenge though, is Dan's rationale for having the escalator in the first place is like, there's a bunch of problems that are not solved by 1559. So. Yeah. And I guess the big open question is also how much of these could we solve outside of protocol? And if we could get 80% of the fixes out the protocol and minimize the consensus change, maybe that's a better approach. Um.
00:35:05.280 - 00:35:12.610, Speaker A: That comes back to, like, agreeing that we want to get to the world where they're both in, but not sure how to best fit them.
00:35:16.520 - 00:35:21.172, Speaker B: Yeah. So maybe in terms of. Sorry, go ahead.
00:35:21.306 - 00:35:33.450, Speaker A: Is there anybody strongly opposed to having that be like, the vision that we talk about is having 1559 with the escalator as the ideal case.
00:35:35.020 - 00:36:08.230, Speaker B: Yeah. And maybe one way we can flesh this out in more detail is I can schedule kind of a call with Dan Finley and Abdel and maybe Ian, if he's available, so that we can actually go over what it would look like to bundle the two eeps, as well as what could be done outside the protocol with the escalator and what the implementation impact of both those things would be. Does that make sense?
00:36:09.640 - 00:36:10.390, Speaker A: Yeah.
00:36:11.720 - 00:36:56.292, Speaker B: Okay, cool. So next thing on the agenda was basically testing. Nick Johnson was on the call, but he dropped off, I think. I know he's been kind of pushing for having a more rigorous analysis of the 1559 spec. Hasu, you mentioned trying to simulate 20 million gas blocks and seeing what the network looks like under those conditions. Barnabay has been working on simulations, so I think it would be valuable to kind of get people's thoughts here on what we think. Good enough testing scenario for 1559.
00:36:56.292 - 00:36:57.910, Speaker B: And the escalator is.
00:37:02.520 - 00:37:13.880, Speaker D: By the way, just a kind of more general question on this one. On the Ethereum test debts, do you know how much activity there is? Like how many transactions a day, how many people using it and so forth?
00:37:18.620 - 00:37:51.524, Speaker B: It just looking now, Robston blocks have like five to 15 transactions each on average. And gas use of like, I don't know, most recent blocks seem to be either, well, either less than like a million or Phil would probably like, I don't know, three, 4 million, which is probably like a couple large contracts that people deploy. If you give me specifics for the.
00:37:51.562 - 00:37:56.230, Speaker F: Question, I can do some SQl queries and get back to you all.
00:37:56.860 - 00:38:35.780, Speaker D: That's a bit unfortunate because I feel like the challenge with this mechanism is that all the economic analysis in the world is honestly going to be less useful than just seeing it run for a while. And if people getting a feel of how to interact with it, and I guess we don't have the ability to really properly use the test apps as an environment for that. I mean, we would, but it's just that the base view would kind of hover around one way most of the time, and then maybe occasionally it'll start spiking up if there's bursts of usage.
00:38:37.960 - 00:39:00.860, Speaker B: Yeah, on the last call or the call before, Thomas from Nethermind said, we should know once we have a spec, have a public testnet and try to just market it pretty heavily so that people kind of deploy stuff on it in the first few blocks because that's kind of what you want. You want like a burst of usage right on the network?
00:39:03.200 - 00:39:19.248, Speaker A: Well, kind of both one way. This might be a little bit extreme, but for Robston is we could temporarily move the gas limit to like 2 million. So even if it's low usage, I.
00:39:19.254 - 00:39:22.384, Speaker E: Was just looking at Gorely and there's like even much less.
00:39:22.422 - 00:39:29.670, Speaker D: Or the thing you could do is keep the gas limit at 10 million but keep the target at one or 2 million.
00:39:30.200 - 00:39:32.070, Speaker A: Oh yeah, that's a better way.
00:39:37.960 - 00:40:06.290, Speaker B: And the other challenge with Robston is obviously applications kind of depend on it and we'd be pulling in a sort of half ready 1559. What are people's thoughts on that? This may be the wrong call. Maybe Alcor Dev is a better place for that. But yeah, what are people's thoughts on breaking robs and early versus using a new Testnet? The challenge there being getting people to actually use it.
00:40:06.740 - 00:40:08.450, Speaker E: Which one is Reddit using?
00:40:10.340 - 00:40:12.130, Speaker B: Yeah, let's not do that.
00:40:14.180 - 00:40:30.664, Speaker D: I ultimately wouldn't. We have to do both. Like first start off with a dedicated testnet and then any hard fork goes on Robson before Mainet. Anyway, though in this case we could do it on Robson like six weeks before instead of three or whatever so that there's more time for it.
00:40:30.862 - 00:40:36.164, Speaker E: But if we do an artificially low target on the gas limit, it might actually affect.
00:40:36.212 - 00:40:37.752, Speaker D: Right, I see usage there.
00:40:37.886 - 00:41:13.750, Speaker B: Yeah. And I can imagine where before we're ready to deploy 1559 in a proper hard fork, we want to get some network usage data because like you said, it's probably what will inform the best what breaks. Right. So I was thinking of like we did this ephemeral test net for Berlin. Could we have another one easily for 1559? And then the challenge is how do you get a lot of usage on it? Is there a way we can just write transactions like a sort of bot that sends tons of transactions to it?
00:41:18.140 - 00:41:41.070, Speaker A: The little bit of complexity as far as looking at it in comparison to Yolo is that part of the equation is looking at how miners react to it. So having it be a mineable test net, is that a make or break for, is it necessary for the pre testnet to be doing this be mined proof of work?
00:41:44.900 - 00:41:55.270, Speaker B: I think it might be just because of the implementation. Right, Adele? Like we said, 1559 won't be like a proof of work thing, is that right?
00:42:00.520 - 00:42:02.550, Speaker E: I don't think it needs to be, no.
00:42:03.320 - 00:42:06.124, Speaker C: It could work with proof of authority network.
00:42:06.192 - 00:42:06.810, Speaker B: Yeah.
00:42:08.940 - 00:42:16.730, Speaker A: That'D certainly be easier to do. And then a lot of the stuff you're talking about of throwing transactions and stuff is very much possible.
00:42:18.460 - 00:42:34.560, Speaker B: So we basically want like a clique testnet probably with more than one validator just to make sure it actually works on bigger than one and we can fake volume on that.
00:42:34.710 - 00:42:35.024, Speaker C: Yeah.
00:42:35.062 - 00:42:42.290, Speaker E: Can we reasonably write scripts to fake volume in a meaningful way?
00:42:45.700 - 00:43:08.920, Speaker B: I feel like we should be able. Especially if you have Genesis accounts with huge amounts of ether. Right. What we might not be able to do is, or might be more complicated to do is just like, complex, smart contract calls. So you're not mimicking that. But if we just want to steal blocks, I don't see why you couldn't automate that pretty easily.
00:43:10.380 - 00:43:16.810, Speaker E: You can also vary the agent's activity to kind of induce spikes and trust.
00:43:18.560 - 00:43:32.930, Speaker C: Yeah, this is what I was going to say. Barnaby is working on implementing some agent date simulation and I don't know the status, but he was pretty advanced last time I talked with him.
00:43:35.800 - 00:43:41.780, Speaker F: Very basic question, but why couldn't you simulate 20 million blocks, 20 million gas blocks on testnet.
00:43:45.080 - 00:43:55.252, Speaker A: That should be done separately? There's two questions to answer. One, is 20 million blocks safe for the network?
00:43:55.396 - 00:43:55.752, Speaker F: Okay.
00:43:55.806 - 00:44:20.450, Speaker A: And then the other one is, does 1559 actually sort of work as we want it to in practice? I think we still haven't figured out the best way to test that. But, like a thick net that all it does is just pump out big blocks and then see how that works is something we should talk about.
00:44:22.260 - 00:44:24.550, Speaker D: I'm going to have to head off now. By the way.
00:44:28.920 - 00:44:30.116, Speaker B: Thanks for coming.
00:44:30.298 - 00:44:31.030, Speaker A: Yes.
00:44:34.120 - 00:45:25.510, Speaker B: I think in terms of blocks, there's a few things. It's like, can the network handle 20 million gas blocks without crashing? And then the other piece is also once you have the transition from regular transaction to 1559 style transactions, you're basically cutting the block, like the block limits based on the type of transactions. So would you make it impossible for large contracts to be deployed because the block is like, say 50 50 between normal transactions and 1559 transactions? Intuitively, I don't think so.
00:45:26.200 - 00:45:41.352, Speaker C: We can reduce the transition period and we can even start with directly phase two maybe. Is there any value to test the phase one where both legacy and new transactions are accepted?
00:45:41.496 - 00:45:44.110, Speaker B: Yes, because wallets need to upgrade, right?
00:45:45.760 - 00:45:49.388, Speaker C: Yeah, but for what we want to test.
00:45:49.474 - 00:45:50.524, Speaker B: Oh, for what we want?
00:45:50.562 - 00:45:56.190, Speaker C: Yeah. In production, obviously there is value. Yeah. Just for what you want to test.
00:45:56.740 - 00:46:34.190, Speaker B: Maybe not initially and I think on main net. So say you're effectively doubling the block gas limit. Right. So if I wanted to deploy a 10 million gas contract, you would always be able to do it because of the slack. Right. So if it starts and it's like mostly old transactions and some 1559, then you deploy it using an old transaction and then once it tips to more than 50% of 1559 style transactions, then you can deploy your 10 million gas contract using a 1559 size transaction. But you'll just fill up the block, right?
00:46:34.720 - 00:46:35.470, Speaker C: Yeah.
00:46:42.020 - 00:47:08.152, Speaker B: Okay. So just to kind of summarize the testnet stuff, it probably makes sense to start with new testnet that we can at least run like a clique version of 1559 on and have large blocks. And see, does this actually work and crash before we do anything else as.
00:47:08.206 - 00:47:13.000, Speaker C: Is or ep 59 alone?
00:47:16.060 - 00:47:17.560, Speaker B: Would that be quicker?
00:47:19.120 - 00:47:24.990, Speaker C: Yes, because we have already the implementation but what we want. Yeah.
00:47:28.640 - 00:47:32.440, Speaker A: Have you tried connecting with the gas implementation?
00:47:32.600 - 00:47:34.992, Speaker C: Yeah, it works.
00:47:35.126 - 00:47:37.792, Speaker A: So then we could do that this week. Next week.
00:47:37.846 - 00:47:42.428, Speaker B: Yeah, exactly. We can set up like a Yolo V two or whatever. 1559. Yolo.
00:47:42.524 - 00:47:45.110, Speaker C: Yeah, we can do that.
00:47:46.120 - 00:47:54.260, Speaker B: What we won't be probably able to do within a week is then fill it with like huge transactions and whatnot. But we can just restart the testnet.
00:47:56.120 - 00:47:57.750, Speaker C: Yeah, that makes sense.
00:48:02.280 - 00:48:19.580, Speaker B: And one thing, I guess this is maybe not on this call, but yeah. How feasible is it to start an ephemeral testnet? Like, I'm not super familiar with how the get team did it, but is this something that, you know, Peter from guest to actually work with you on or is it all open source and we can just do it ourselves?
00:48:26.560 - 00:48:29.730, Speaker C: Is it the puppet thing you're talking about?
00:48:30.900 - 00:48:31.824, Speaker B: I don't know.
00:48:31.942 - 00:48:36.230, Speaker A: It would be puppet and clique basically.
00:48:37.880 - 00:48:54.410, Speaker B: Yeah. So maybe. Yeah. Like James, Adele, me and Ian can look into that and getting that up and running. Yeah. Does that make sense in the next couple of weeks?
00:48:55.980 - 00:48:56.730, Speaker A: Yes.
00:49:01.980 - 00:49:20.370, Speaker B: And then. Yeah, and then once we have that running, I think we'll figure out enough about how the EP works to inform kind of future testing. But the other question is, I guess, Nick Johnson's question of just more formal analysis. But if he's not here, maybe we can chat with him offline about that.
00:49:25.080 - 00:49:32.340, Speaker C: If we are concerned by delay. To me this is the kind of things that could delay.
00:49:33.400 - 00:49:42.790, Speaker B: Well, it's a different thing. Right. Because you want to make sure the thing is properly tested before you move it to main net.
00:49:43.260 - 00:49:44.008, Speaker C: Yeah.
00:49:44.174 - 00:49:55.630, Speaker B: And to do that, you have to have like a final or final ish implementation. Sorry, James, you were going to say something?
00:49:56.480 - 00:49:58.620, Speaker A: Oh, no, it must have been the birds.
00:50:03.400 - 00:50:22.830, Speaker B: Okay, so the last bit on the agenda was funding. I guess before that there was the type transaction. I feel like we've kind of touched on it in a bunch of different ways, but we didn't discuss it directly. Did anyone have any more comments on that?
00:50:26.240 - 00:50:31.390, Speaker C: Can we see if we want to pass it as EFi in the next?
00:50:36.160 - 00:50:43.124, Speaker A: You can. It's not typical that an EIP is accepted into EFI. The same core dev call that it's brought up.
00:50:43.242 - 00:50:43.860, Speaker C: Okay.
00:50:44.010 - 00:50:48.020, Speaker A: But it's definitely something that could be brought up.
00:50:48.090 - 00:50:49.940, Speaker C: It has never been presented.
00:50:51.080 - 00:50:52.660, Speaker A: No, I'm not aware of.
00:50:52.730 - 00:50:53.350, Speaker C: Okay.
00:50:53.960 - 00:51:19.230, Speaker A: And then I'm curious from others here, is making that a requirement to have 1559 is to have this kind of transaction thing? Is that a general consensus we have or people feel strongly about in either direction? I haven't followed it enough to know.
00:51:20.500 - 00:51:29.440, Speaker B: Yeah, me neither. Abdel, are you familiar enough with it to talk about it on all core devs this Friday?
00:51:30.900 - 00:51:33.376, Speaker C: The type transaction envelope itself?
00:51:33.558 - 00:51:39.284, Speaker B: Yeah, I was also planning to go to the all core devs and talk.
00:51:39.322 - 00:51:42.244, Speaker A: About it if you don't want to.
00:51:42.442 - 00:51:44.710, Speaker C: Yeah, feel free to do. Yeah.
00:51:47.240 - 00:52:03.628, Speaker B: Yeah, that would be great, Matt, if you can just bring it up there. And I think based on the reaction of the cordev's call, we can get a feel for how likely or unlikely it is to be kind of something that will delay 1559.
00:52:03.794 - 00:52:04.220, Speaker C: Yes.
00:52:04.290 - 00:52:46.730, Speaker B: Okay. Is there a timeline for when you think 1559 is going to be included in a hard fork yet? I'm not really familiar with it. My hope I'm touching with, as I say this is, I'd like to get it for the next fork after Berlin. Okay. And I don't know when that will be in terms of time, but I just think in terms of roadmap, it probably makes sense. One, it feels like it's kind of getting ready to that point. And then two, I think a lot of the stateless Ethereum stuff is going to start to become kind of ready to ship after that.
00:52:46.730 - 00:53:26.170, Speaker B: And if 1559 is being developed at the same time as all the stateless stuff is being developed, I think you'll have these two things that might interact that are both in development, and that just means it's really hard to move them forward. So, yeah. Anyway, short, long story short, I'd like it to be the next upgrade after Berlin, but I'm not sure when that lands. Okay. I'll present 20 718 on Friday and we'll get a temperature for it. And if things are good, then we can talk more about what the actual attack plan is regarding 1559. Sounds good.
00:53:26.170 - 00:53:51.390, Speaker B: Anything else on the type transactions? Okay, last item on the agenda was the community funding bit. I know, James, you mentioned this already on the call. You mentioned this to me before, like the idea of maybe having like a Gitcoin grant or something like that. But yeah. Do you want to give a bit of your thoughts on.
00:53:54.160 - 00:55:11.050, Speaker A: Ian's been doing a lot of great work for the geth client and continuing to maintain it. I think a Gitcoin grant would be a good opportunity to one fund some of these little things that were looking to happen, like a lot of the little stuff and perhaps have some bounties. It doesn't really need to be a lot of funding, but it would help move things along quicker if we could resolve some of these smaller stuff separately. And then it would also be a good opportunity for the community to signal their support of 1559 because a one die donation is a skin in the game way of saying, yes, I really want it. And having that signal, I think would help a lot for the core dev side because they spend a lot of time on the protocol level, basically keeping the network alive, and that takes a lot of their time and attention and brain cells. So clear ways for the community to tell the core devs how strongly they feel about something I think would be beneficial for their reception. On swallowing the complexity of the change does.
00:55:11.050 - 00:55:15.540, Speaker A: I'm open to other ways, but that just has been my thought about it.
00:55:15.910 - 00:55:23.720, Speaker B: Yeah, I like the idea of the community signal from gitcoin. Do you know when the next ClR round is?
00:55:25.370 - 00:55:27.720, Speaker A: I believe the current one is still going.
00:55:28.090 - 00:55:46.080, Speaker B: Okay. So we could kind of put something together really quick and have it there. And then the obvious challenge also with that is like, how do you kind of allocate the funds? Do people have thoughts on that?
00:55:55.730 - 00:55:57.226, Speaker A: Does anyone other than me have thoughts.
00:55:57.258 - 00:55:58.000, Speaker C: About that.
00:56:03.190 - 00:56:04.370, Speaker A: Or preferences?
00:56:05.430 - 00:56:25.180, Speaker B: So one preference that I have that, I'm not sure how realistic it is, but it's like you ideally don't want people to vote to pay themselves. Right. But given how small a number of people there are, it seems like maybe in practice it actually won't work.
00:56:29.470 - 00:56:50.820, Speaker A: That could be a requirement that the people who administer the funds aren't ones to receive any of them. Yeah, like in my case, my work is funded. I could fulfill that.
00:56:51.830 - 00:57:33.280, Speaker B: Yeah, I think there are Pegasus, too. We're all kind of getting paid as part of our day jobs to do this, so we don't require any additional kind of funding for it. Yeah, I think the two criteria is like, if you're roughly affiliated with 1559 and you don't want to be a recipient of the funds, then we could just have like a majority vote and we can post in the discord slack to see the Discord channel to see who wants to be that. And basically by asking to be on the sort of voting list you're renouncing the funds you could potentially get. Right?
00:57:33.730 - 00:57:34.480, Speaker A: Yeah.
00:57:35.750 - 00:57:54.680, Speaker B: Does anyone disagree with that approach? How do we get the bounty up as soon as possible then and share it to the community?
00:57:55.610 - 00:58:11.734, Speaker A: I can talk with bitcoin. Yeah, you can make it today. You could make the thing. Getting it into the CLR is a conversation with grants.
00:58:11.862 - 00:58:13.500, Speaker B: Oh, okay, got it.
00:58:13.950 - 00:58:32.498, Speaker A: You can deploy the grant outside of CLR. Getting it included in CLR is a matter of just having conversation with them as far as the governance of the funds and things like that. Talking with, as long as we aren't getting a lot and we have transparency about where they're all going.
00:58:32.664 - 00:58:54.330, Speaker B: Yeah, I can, I can maybe, yeah, I can take a stab tomorrow at putting together the, you know, share a draft of it in the maybe. And I'll ask today for some people who might want to be like Ernie fun administrators.
00:58:56.430 - 00:59:33.830, Speaker A: Yeah, I'm sure we could get Hudson to do it. I could ask him. Yeah, Hudson yourself some others who are involved in 1559 or have a lot of domain knowledge. One thing that's been a struggle with finding funding is there isn't a lot of people who have a lot of understanding about lower level understanding about all the things that are going on. So it takes a lot of conversations to say, oh yeah, we do need this little thing because then I'm re explaining over and over and trying to has a lot more friction than I anticipated.
00:59:34.330 - 00:59:36.630, Speaker B: Yeah, I can imagine.
00:59:37.450 - 01:00:18.740, Speaker G: So if I may, I can think that cat hurdles can also help in setting up this thing, this Gitcoin CLR thing. And as far as I know, as long as it is under the CLR, like I believe for this term it is still 4 July. So we are eligible, if we apply before that, we are eligible for getting CLR and we would be happy to coordinate. We did it previously for proper. So yeah, we can do it for this. And distribution should be completely the group's decision. So yeah, we would be happy to help in coordination part.
01:00:21.770 - 01:00:40.300, Speaker B: Sure, that sounds good. Yeah. So I'll try to get a v one of the grant ready tomorrow. I'll share it in the cat herders chat and in the 1559 chat for people to give feedback and yeah, we can take it from there.
01:00:43.630 - 01:01:00.514, Speaker A: The other thing I think we should add to it is as 1559 closes, we should donate any extra funds to matching grants system. So if there's anything left over left over that it will just go back.
01:01:00.552 - 01:01:27.100, Speaker B: In okay, I like that. Um, okay. Was there anything else that anyone wanted to chat about? Okay, well, thanks a lot, everybody.
01:01:28.910 - 01:01:41.278, Speaker A: Let's go over the things to follow up. Call a call with me, you and Dan and some others about implementation. What were the ones?
01:01:41.444 - 01:02:28.480, Speaker B: Okay. Yeah. So I guess starting from the beginning, basically there's three things, right? There's bundling, testing and funding. So for how we bundle things, I'll set up a call with Dan Finley, Ian Abdel, James, if you want to be there as well. Great to see basically how we can bundle them and how much of escalator we can do outside of the protocol and come up with a proposal for that. Then with regards to testing, we should set up another call anyways. Can have this async, but just setting up an ephemeral test net that runs cleak, which we can start feeding 20 million blocks for.
01:02:28.480 - 01:02:50.740, Speaker B: For EIP 20 718. Matt, you're going to bring it up on a core dev. We can kind of get a feel for how other people feel about the air. And then for the Gitcoin grant, I'll set one up tomorrow and I'll share it with folks on this call and in the chat rooms to get feedback on it.
01:02:53.190 - 01:03:00.840, Speaker A: Another one is evaluating the effect on the timeline of if we move forward. 50 59 1st.
01:03:01.530 - 01:03:02.280, Speaker B: Yeah.
01:03:04.810 - 01:03:08.422, Speaker A: It could be a separate call or part of the same one, but it's something to follow up on.
01:03:08.556 - 01:03:27.770, Speaker B: Yeah, I think that makes sense. Anything else? Okay, well, thanks a lot, everybody. Thanks. Bye.
