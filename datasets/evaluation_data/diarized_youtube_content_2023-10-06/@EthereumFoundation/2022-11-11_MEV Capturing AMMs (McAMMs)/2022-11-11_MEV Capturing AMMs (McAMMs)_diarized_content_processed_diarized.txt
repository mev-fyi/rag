00:00:15.210 - 00:00:58.330, Speaker A: Everyone, welcome to my talk. Today I'm going to talk about a different way to design automated market makers in a way that hopefully is going to capture the mev that currently is being lost to miners and other parties. So I'm Federico Jacob, and I'm a smart developer at cowswap. Cowswap, by the way, is an on chain exchange that protects you against mev. So what is mev or maximum start off value? Currently, block builders have the responsibility of updating the state of the blockchain. So how is this done? By including excluding ordering transactions in a block. And for this they get paid fees, transaction fees and rewards.
00:00:58.330 - 00:01:51.520, Speaker A: However, there are other ways that you can use to get money out of the block building process. So one very common attack is called the sandwich attack, in which user transaction is exploited to extract mev. So let's say that a user is creating a transaction once included in a block to sell on an automated market maker 100 e for 100,000 USDC. So, as it's usually customary, there is an extra slippage added in case the price moves between when the transaction is created and executed. And normally it shouldn't really matter, the user should take the expected price. However, the point of send reaching is actually using the slippage against the user. So how does it work? The block builder creates two transactions, one before and one after.
00:01:51.520 - 00:02:33.074, Speaker A: This first transaction buys USDC and moves the price of the AMM to the minimum that would be accepted by the user. The user trades anyway because this is, according to the slippage, still valid. And then finally, the block builder can sell back the USDC at the new price. Basically, this is a safe bet for the block builder because the state update is controlled by them. But that's not everything there is to it. So now we talked about an issue for a user transaction, but we don't need to have a transaction to have mev. One new mechanism of tracking value is called loss versus rebalancing.
00:02:33.074 - 00:03:01.666, Speaker A: And it works more or less as follows. So let's say that we have an AMM on chain and its state is currently well, we have a market price. What we need is more or less equivalent to 1400 die. This could be any market price, not necessarily on chain. So it could be, for example, a centralized exchange anywhere. And let's say that at the same time an AMM is willing to give 1400 die for one eat the same price. Some time passes, no transactions occur on chain.
00:03:01.666 - 00:03:35.906, Speaker A: However, the market price change unclear why. Could be some centralized marketplace that changed the price. So suddenly there is an arbitrage opportunity that can be exploited. So the AMM doesn't know anything about the market price. But if you can execute the transaction and you are guaranteed that it's going to be finalized, you can take this arbitrage opportunity. And this is more or less the essence of loss versus rebalancing the different information that the AMM and the market have. So if the AMM had perfect information, the AMM would be very happy to use the current market price.
00:03:35.906 - 00:03:59.334, Speaker A: However, this is not the case. And this money loss is basically the cost of providing liquidity on an AMM. Currently. So important to notice is also that this is not impermanent loss. So it doesn't really depend on the relative change in value of the two assets in the AMM. This was by the way, part of recent research by Tim Rafgarden. So there are related papers.
00:03:59.334 - 00:04:51.766, Speaker A: Eventually I'm going to give you more information. But that said, how can we avoid this? So let's actually try to build an AMM that captures mev. So we start from any AMM, let's say a constant product AMM, like uniswap, and on top of it, we create a mechanism where we can auction the right of executing the first trade on the exchange. So there is going to be a so called lead searcher which is the highest bidder that is going to take the right to execute the first transaction. As we see, this is a good way to capture this LBR. And the important thing here is that the proceeds don't go to well, go to the liquidity providers. And this is the mev that otherwise would be extracted by miners.
00:04:51.766 - 00:05:35.922, Speaker A: So how can this actually work? So to do this, we simply say that no user can trade until their lead searcher has actually traded first. So you can see if the lead searcher actually trades, then all the transactions go through. Otherwise, if the block is organized differently, then the trade reverts. Naturally, this requires cooperation with the block builder. So the idea is that the block builder is aware of the concept of the AMM and orders everything accordingly. However, there is an incentive that is needed and the incentive would be the gas used by the transaction. If the transaction reverts immediately, it's going to use less gas.
00:05:35.922 - 00:06:15.310, Speaker A: And in particular, this would help the miner having an advantage, the block builder having an advantage on the mev auction. So let's analyze some costs. So first, profits. The profits are estimated to be $9 per block. How are they estimated? So the Eden network is a network that works in a fairly similar way. So it also auctions off the right to the first slot in a block. And this is more or less the profit that comes from the Eden network, which is comparable to our structure.
00:06:15.310 - 00:06:57.918, Speaker A: The costs are estimated to be $3 per block, which is basically the extra gas cost to enforce the rules that we just decided. And note that this is based on 40 G wave gas price. However, it would be much lower in l two. So already, like with this simple scheme, we would have a theoretically captured mev of $6 per block. So I also want to point out that even if the extracted profit now for the AMM is $6. In principle, it could be much higher. So in this graph, I wanted to show the average block reward comparing fleshbots which extracts mev and other parties, which don't.
00:06:57.918 - 00:07:38.570, Speaker A: So you can see in the last two months, it's actually fairly consistently 0.1 ETH reward more, which is actually about more than $100 per block. So this is actually a fairly large amount. And it could also be extracted with different mechanisms of AMMS. Okay, so in conclusion, we have that AMMS have hidden fees because of mev, both for users and for liquidity providers in current designs. Well, these fees go to arbitrator and block builders. However, we can do better and we can try to design our AMMS in a way that distributes fees differently.
00:07:38.570 - 00:08:04.600, Speaker A: And this is what I hope to transmit with this talk. So all of this is work in progress, is being worked on. I would invite you, if you're interested, to join the discussion. And please, any opinion is welcome. If you are building an AMM them, please extract all the Mev. And after this, thank you. And thank you again.
