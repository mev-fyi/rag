00:00:03.200 - 00:00:25.704, Speaker A: This is creativity and solidity development. My name is Anne Kilzer. A little bit about me I'm a software engineer and visual artist. I grew up in Montana, in the United States, and moved to Tokyo two years ago. And I'm now the lead software engineer at Curvegrid. And that's me with a real yak, Curvegrid. We are nine engineers in Tokyo.
00:00:25.704 - 00:01:06.804, Speaker A: We are trying to make blockchain easier to use by building a middleware platform for Ethereum and other blockchains. So first I'd like to talk about creative constraints. Now, when I was in college, I studied fine art and computer science and math, and I found that they often related. So here's an example of a woodblock I was working on in Japan, and I'm trying to make a picture of a train. But in order to make this visual picture, I have to think about color separations and I have to think about technical issues. So I always found the two that science and art really went well together. And here's the finished image.
00:01:06.804 - 00:01:57.930, Speaker A: There's several different layers, but again, there's this problem solving that goes into making the end result. So sometimes in coding and in life, we encounter different obstacles. Maybe our hero here can't get through this door, but sometimes if we take a step back and get some perspective, we might find another way through. So how does this have to do with solidity? Well, solidity is one of the more unique languages I've worked with, and I'm no expert in the language, but I find it really fun that. Well, I found it challenging at first, but then I thought, hey, these challenges are actually jumping off points for creative thinking. So I wanted to highlight some things that I think are interesting about solidity, from language features to things people have built on top of solidity. And these are just inspiration points.
00:01:57.930 - 00:02:48.796, Speaker A: So very popular lately is ERC 721 tokens, or nfts, non fungible tokens, which are great for collectibles. A real world analogy would be the vinyl figurines that you can see in Japan in stores like Mandarake. And these can be very valuable. Some of these go for $500 uS. So people have built all sorts of creative things using ERC 721, from Axio Infinity, little creatures to block cities, to even real world mashups like this austrian postal service stamp that's issued on Ethereum and crypto kaiju, which combines NFC and vinyl figurines with blockchain collectibles. One of my favorite projects is by larvae Labs. It's called autoglyphs.
00:02:48.796 - 00:03:35.504, Speaker A: And these are unique artworks that are ERC 721 tokens. Each artwork is generated, there's an addition of 512 pieces, and unfortunately, they're all sold out. But you can still check out the code. And one of the really novel things about this project is all the code to make the image is written in solidity. So I've got a little snippet of some of the code here. You can see that we're drawing, placing different characters to make these kind of neat, symmetric images. One of the first personal dapps that I wrote was kind of, well, it was completely a joke, but I wanted to do something to make my coworkers laugh.
00:03:35.504 - 00:04:31.476, Speaker A: And I took something common in Japan, which is overpriced fruit. Yes, they can go up to $27,000, but it's more likely at a grocery store you'd see melons from. Thought it would be funny to make a token backed by fruit. And in order to do that, I used the timestamp feature of solidity language. As far as I knew when I did this in 2008, I hadn't seen any other projects that were doing expiring ERC 720 or ERC 20 tokens. But, yeah, so basically, there's a date when you plant your fruit, and the contract records that, and then there's a certain window which the fruit should be ready. The now keyword is useful in solidity, but a word of caution, miners can make small manipulations, so it's good to have the window not too small in case there's cheating.
00:04:31.476 - 00:05:07.936, Speaker A: And I have the source code for this on my GitHub page. If you're curious, here's an example of the internal transfer function for the ERC 20 token. Notice that we require that it's not expired. That internal check is expired is checking against the timestamp. And so basically, when the melon rots, we can't transfer it. Hash functions, or one way functions can be used to kind of mask information or condense it. Another game and dap that I built was a blockchain stamp rally.
00:05:07.936 - 00:05:46.144, Speaker A: What's a stamp rally? It's a treasure hunt that's popular in Japan. Often they're connected with train stations. People will travel on a rail network to different train stations and get different physical stamps, and you can kind of collect these in a book and get a prize. I thought it would be fun to do this virtual as a virtual thing. And it's even more relevant today when many of us are trying to stay at home instead of going to a place. Maybe you could enter a passphrase or enter the lat lawn in some sort of virtual world like Decentraland. So here's an example of the web3 front end that I built.
00:05:46.144 - 00:06:35.244, Speaker A: It has the circle where the stamp would go, and then if you enter the correct passphrase, you get a cute little image. The next feature I want to show an example, I was playing Axie Infinity's blood moon rising the other day and noticing that they've updated their dap a lot. It's pretty cute. But one thing, the DaP is really interactive and it's fast paced, which is great for games. So for a user experience for a game, you wouldn't want to constantly be signing transactions. Can you imagine if you just had pop up pop up and you have to spend gas? That would kind of interrupt with the flow of the game. So some developers use summary transactions where you periodically will sync things to the Ethereum blockchain.
00:06:35.244 - 00:07:30.370, Speaker A: But you don't have to always be doing that because it might interrupt with the flow. Now, it's a little tricky to tell what's going on under the hood with axie Infinity because not all of their source is public, but from what I've read, they're using a side chain built on the Luma SDK, and I believe the side chain is called zombienet or zombie chain, and then they sync it to the Ethereum network. So I was able to look at this on ether scan and you can decompile the bytecode, but it's a bit. Well, there's a little more sleuthing to be done. Anyway, there's clearly these points where you're checking into and syncing with the Ethereum blockchain, but the actual desktop app is really snappy. And unless you really knew, you wouldn't necessarily notice that it's a blockchain game. It just feels like a game.
00:07:30.370 - 00:08:20.172, Speaker A: And here's another picture of it we may be familiar with burning in solidity as far as sending a lot of ERC 20 contracts will have a burn function that you can send your tokens to the zero address and relinquish control of them. And that could certainly be done with any other crypto asset. For example, some of the older axie Infinity code on their GitHub page is calling a burn function inside of when they're retiring an axie. I guess taking it out of gameplay, they're burning it. Now here's the feature where I'm going to use the catchphrase that this is going to change gaming forever. So yeah, here it is. I think this is one of the most exciting things is layering and interoperability.
00:08:20.172 - 00:09:04.860, Speaker A: Because blockchain is public and because it's shared, we can interact with it and it's kind of out there for anyone to use. And this can really result in some wonderful mashups. For example, cryptozombies is this solidity tutorial from the loom network I'm sure most of you have heard of. They actually feed on cryptokitty dna, and that's just kind of fun and whimsical. Another example using cryptokitties is a project called Kitty Hats. Unfortunately, the Google Chrome extension no longer works, but you can still see the source code and some fun pictures. And this is an ERC 20 token that's layered on the ERC 721 collectibles.
00:09:04.860 - 00:09:47.870, Speaker A: And you spend the token to apply the hat, bow tie, apple Watch or monocle to your kitty. And then interoperability is the idea that an item can be used in more than one context. So a lot of NFTs work in different realms. So here's a crypto kitty that is combined with mytherium playing card. And then over on the right hand side, I'm showing a scene from Decentraland and it's featuring Axie Infinity characters, and I believe they plug in with a lot of nfts. So yeah, basically your smart contracts can work together. It's super cool.
00:09:47.870 - 00:10:28.492, Speaker A: The final part of my talk is a brief exercise. We did a longer form of this talk at Devcon five in Osaka last year, and we had 20 minutes and we did this breakout session with cards and people got to brainstorm ideas and that was really fun. Now this is a virtual conference, so the next best thing I can do is show you a software version of the game. So I wrote it quickly in solidity, the brainstorming activity, and I'd like to show it to you. But first let me explain how it works. There's three characteristics of games. I'm making this up, but this is a type of game.
00:10:28.492 - 00:11:07.064, Speaker A: Is it a board game, is it a role playing game? Is it a God game where there's some personality controlling the universe? What are the themes of the game? Like what is the world it's set in, or the time period? And who are the characters? And then what's the novel feature of solidity? That's our starting point for creativity. So here's an example. Let's say the game is a racing game. The themes are post apocalyptic and our characters are ducks. And the feature of solidity we're going to use is burning. So if a duck loses the race, maybe it gets burned. And cool name for that might be mad quacks too.
00:11:07.064 - 00:11:43.276, Speaker A: The pond warrior where ducks are just fighting in some gritty desert future. Another game could be a role playing game where we use baking and japanese mascots and then we use layering or interoperability. Let's say it's like a Nintendo switch type japanese mascot bake off and then the underlying tokens. Each cookie is a different NFT that can be traded in another game. Why not? So I'm going to use the front end. I'm going to show a demo of this. This is the product that we built at Curvegrid.
00:11:43.276 - 00:12:11.820, Speaker A: It's called multibask. Basically it's an API and UI over your smart contract. So I wrote this smart contract, the dap idea generator, and we're going to interact with it. So here we have the name, the address here. I've deployed it on Rinkabee. We've got some of the read only functions of our solidity code. We've got events that have been emitted, and then we can interact with this contract.
00:12:11.820 - 00:13:05.778, Speaker A: Let's see, I'm going to just click send method. Okay, great. So Metamask is going to ask me to sign the transaction and we'll let it go for a moment and see what our new idea is. Okay. Apparently it would be a role playing game with snake people, fashion and burning. So that's the idea. Can generate another one and see what we get and give it a moment, wait for it to be mined.
00:13:05.778 - 00:13:52.158, Speaker A: You can see some of the earlier ideas I generated today, which include a addictive click to win scheme using romance pizza and multi sig wallets. So I think you win if you and your lover buy a bunch of pizzas. Science fiction Wild west using voting and a role playing game. Yeah, so that's the very short version, the lightning talk version of my game, if you'd like to try it out. The contract is uploaded on Rikabee and I'll share a link to these slides in the gitter chat. You can try multibass, our project for free to use on Rikabee and Robston networks. And that's at ww curvegrid.com.
00:13:52.158 - 00:14:02.280, Speaker A: And the source code is on my personal GitHub page for the dap idea generator. Thanks for listening to my talk and let me know if you have any questions.
00:14:06.470 - 00:14:41.360, Speaker B: Thanks so much, Anne. That was a fun talk and introduction, and I learned so many new cool projects that I didn't know before, especially autoglyphs. I don't know how I couldn't know this before. So beautiful. All right, if you have a question for Anne, we still have a couple of minutes left before the next talk, so either shoot it in the GitHub chat or raise your hand here. Yeah, today I didn't mention yet there's a raise your hand feature in jitsi. If you are in the video conference, you can raise your hand.
00:14:41.360 - 00:14:56.180, Speaker B: And then I see that you would like to speak. No questions so far in the room and nothing here.
00:15:00.610 - 00:15:00.926, Speaker A: Yeah.
00:15:00.948 - 00:15:07.680, Speaker B: Then I have a question. What is your favorite creativity solidity project of all of those?
00:15:10.370 - 00:15:39.850, Speaker A: I mean, I liked Lara Labs a lot just because it was completely on chain. And with all of them, there's always a risk of the ones that are sort of hybrids of like, oh, well, what if they lose? How do we make the artwork for this cool collectible? What if that server gets lost? So I like that it was completely blockchain. I'm a little sad that they're sold out and I didn't get one, but that's, I guess, what makes it special. And then I think, second favorite, I like the axes because I think they're really cute.
