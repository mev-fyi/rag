00:00:00.970 - 00:00:45.500, Speaker A: I'm Sanjay. I work for intel. And this Andreas works for Consensus. So today we are going to share some of the work that we have been doing in the space of how we can apply trusted compute for the good of ethereum as an option. So the talk today is like two parts. One is generally talking about how we are viewing this trusted compute to play in the space and then Andreas will complete it with a concrete example of something that we are doing and then tomorrow there's a breakout session that will go into whole bunch of more applications in this space. So with that I'll get started.
00:00:45.500 - 00:02:46.900, Speaker A: There are lots of definitions of when it comes to trusted compute so I thought that would start off with having a level set of what it means, right? Typically when I talk about trusted compute I say that hey, it's a place on your PC or on your server where software can execute without any external interference. So to drive the point home so think of the box in the big box in the middle is your PC or your server. It has two parts to it, the trusted and untrusted part and the blue is the trusted part or the trusted compute and inside there you can run your code or you can have your secrets like keys and any sensitive data. All of that can be processed in this blue part and it will be secure even though in the white part around it you may have a malware or something else is owning that system. So it gives you that isolation on an off the shelf platforms and the other side of it is like the final point there is that whatever it does, it gives you an attestation to what happened so that anybody can verify that the result really did happen inside the trusted compute and these instructions did actually get executed. So I work for intel and Intel's one of the popular trusted computes out there is Intel SGX and more than happy to talk about it in general but today we will talk generally in terms of trusted compute and then there are these other variants of trusted compute based on ZK proofs and MPC. Those are also there that can be used to apply to the concepts that we're going to be talking here.
00:02:46.900 - 00:04:19.598, Speaker A: So the first thing we were saying is like hey, how can trusted compute play in this space? And there are lots of questions and you guys probably seen this picture and what we are asking is like hey, how can if we add trusted compute to this world right now? The problem is you can get two of the three, not all three. So can we basically do something with trusted compute so that we can make it possible to achieve all three so that we have scalability, we have decentralization and we have the security. So let's talk about each of these things briefly and then see how that goes. So first of all, the security is plainly is like transactions per second or seconds per transaction. We believe that given the way these trusted computes work, in terms of you have the integrity of the execution and things like that, you can combine it with the constructs like plasma chains and side chains and you can achieve a lot of scalability in that space. And there has been work in the space done and some of that will be talked about in the breakout tomorrow. The other side of the thing is the security is there are two ways to look at the security one is security of your consensus and things like that and one is the security of around it transaction ordering and things like that.
00:04:19.598 - 00:05:12.190, Speaker A: So again, going to the property that you can trust like hey, if I asked this trusted compute to do one plus one it did do one plus one. So based on that, we are doing some work. And that's the work that Andreas will talk about in a little bit. And finally, the decentralization right there's. A lot of this conversation is like if you rely on Trusted Compute, you let go of decentralization. And this is something that we would like to have a conversation around because if you take Trusted Compute the way I viewed decentralization, the way I have read it in various articles on Sharding and things like that, it's about two properties like censorship resistance and permissioning. And we look at Trusted Compute, it doesn't have either of these properties.
00:05:12.190 - 00:06:21.478, Speaker A: Anybody can my PC has this trusted compute. All of your PCs have it and you are free to run it. So there is no that you need to have a special hardware from somewhere to do these kinds of things. Initially, yes, there were some controls in terms of who all gets to run software in this space and things like that and what at least for intel, we have worked to actually remove all of those controls in terms of we are no longer going to be in the middle of who gets to execute and who gets to attest and things like that. So we have worked in last one year since last DevCon three to ease out all of that stuff. But there is this thing like anything in this space, as we go further, as we go new use it in newer spaces, there's always that, hey, things can get hacked. Which we view is no different than a particular hashing algorithm getting hacked as long as there's a commitment to basically fix it.
00:06:21.478 - 00:07:31.358, Speaker A: And then there is this notion that whoever is the provider of this trusted compute has done the due diligence and is willing to do continued due diligence to make sure that it is delivering on its promises. So in general we believe that trusted compute if it used in a particular ways can be a very helpful tool in addressing and easing this trilema problem that we have in blockchains, can just help it to get deployed very easily in some cases. What I will do is quickly before I jump into some of the ideas we have and then a concrete idea just to level set a common design pattern around us. So you have a translate compute, it can be in a PC or in a server, you have some function that you can basically deploy to it and that typically we call an enclave. And that function can be anything. It could be matching a fingerprint data against template or finding a particular pattern in something. It can be anything.
00:07:31.358 - 00:08:45.990, Speaker A: The idea is that you can be sure that particular sets of instructions were executed and that your data, that whatever you gave it was handled confidentiality. And then there can be any requester who can provide two things. One is the data on which they would like to operate, have that algorithm operate upon and plus you can also provide your own identity that the enclave or the function will check before even executing your request. And then end result of all of this processes, like you have data, you have algorithm all executing inside this container and secure container and output is this attested result that anybody can basically validate. It can be the requester or it can be somebody else who you are targeting it at. And finally, if you are running this trusted compute in the context of a PC, you do have this human secured, what we call protected transaction display. And that basically is that before the transaction is completed, you can prompt a user for some kind of a pin or something like that, so that user has all the control at the end of the day what happened.
00:08:45.990 - 00:10:01.978, Speaker A: So you can build that in and tomorrow during breakout ledger who have built a wallet on top of SGX will talk about some of this. So in general what we believe is like if you step up from all of this, this thing enables this notion that I can prove that something I did or I did not and I can be kind of sure that the data that I gave it to you, it didn't leak. That's what this trusted compute is giving at the end of the day. So now let's jump into one last slide from me is how could it now connect with Ethereum, specifically Ethereum 20? This picture probably most of the people have seen it, it's of the medium articles and the main thing really here is that this whole today morning, like in the morning Vitalik talked about this beacon chain and things like that. So this four tiers of abstraction or the layering of this whole Ethereum 20 in this, there are two things here. One is this beacon chain which I in my view is like it's the control plane that's making sure that things are happening the right way. And then at the bottom is your execution plane.
00:10:01.978 - 00:11:09.122, Speaker A: So in the control plane, this is where you have the validators and verification and all the crypto economics going on in terms of making sure that everybody is doing the right thing. And if somebody is not doing the right thing, penalizing them and all of that, keeping the equilibrium and keeping the system working. So right now the focus really is on, hey, you did something wrong, okay, I'll penalize you. But what we are saying is if you run, say validator or you run a verifier inside a trusted compute and you have all of those log of your activity, you can really prove that, hey, I did do this. That means I did vote on it. Something else in the ecosystem down the line is basically censoring my output or I did not do that because the key that is used to sign the result is safely inside the thing and cannot be leaked. So this is where we see we can simplify some of these things and this is where you will talk a little bit about it.
00:11:09.122 - 00:12:01.890, Speaker A: And then lastly, at the execution layer, signature validations as an example is a common thing and they take a lot of time. You can offload that complex tasks that require lot of gas, you can offload that to a plasma chain built around this or a side chain. So in general, the thing is what we see is at the beacon layer, it reduces the friction or reduces the fear that I might get slashed and I don't have anything to fall back to. So it in a way helps more people to participate and increase hopefully the democratization of this whole decentralization and also helps with the scalability and security. At this point I will turn over to Andreas.
00:12:02.790 - 00:13:04.038, Speaker B: Hey, how's everyone doing? Let's get a little real with what we have here. So we talked about secure private. It's self controlled and it can be ubiquitous. So what are the type of services that could be built with this? On top of Ethereum, so you have, for example, a decentralized device registry, which is valuable when you're talking about IoT self driving vehicles. You have secure multiparty transaction signing which is applicable not only for Ethereum transaction, but for any transaction. You don't no longer need your private key on your device because you can have the signing done in a trusted way by multiple parties. You have secure decentralized cloud.
00:13:04.038 - 00:14:04.886, Speaker B: So we're talking with OEMs to be able to provide, to collect a cloud, a fog of devices that run trusted compute services. And I'll talk at the end for a few minutes about that. You also can do MPC analytics. You can also now do secure Wallets and real time Oracles with this. And you can do secure public or private data stores at consensus. They're a project called Linea at the Decentralized Identity Foundation. We're working together with others on identity hubs where we will actually employ these technologies, then you have what you probably have heard before, off chain compute offload a lot of smart contract heavy logic onto trusted compute entities, as well as secure Attestation validation.
00:14:04.886 - 00:15:15.698, Speaker B: So, for example, if your bank gives you your KYC and it says you have a US or security number, you have a valid US address, you don't want to reveal that, right? But you can prove that you're over 21, that you have a valid source security number, and you can pass this Attestation into a trusted compute that applies the logic to it and generates another anonymized Attestation that still proves the same thing. So after talking about the applications on top, let's come back one step and let's talk about what we can do on an Ethereum note. Apparently I shouldn't touch this. So what Sanjay showed you about Ethereum 20, let's take that level deeper and let's do a little journey of an Ethereum transaction. So it first comes into the transaction pool. Well, nowadays any node can do anything with your transaction. It can do front running, it can put it into any order that it wants, or it might just simply censor it.
00:15:15.698 - 00:15:58.622, Speaker B: So if you add a trusted ordering and encryption service to that, all of this goes away. So you're taking a significant attack vector out. If you're following along, you go to the EVM that goes into the level DB. You can now do a trusted EVM execution service before it goes to proof of work. That's for the main net. If you're now going plasma chain sidechain beacon chain, you're talking about Casper FFG. And here again, you can employ a trusted compute service that actually says, hey, I voted this way, right? And no human being can influence that.
00:15:58.622 - 00:16:33.594, Speaker B: Which means your assurances that the vote was done honestly go up exponentially. So this is for a note. Let's go one level deeper. Okay, so I give you three concrete example already at layer one. Now let's dive one level deeper. This looks really ugly, and it is what I want to focus on. On the right hand side, the actual trusted compute logic for a transaction ordering service is very, very simple.
00:16:33.594 - 00:18:00.118, Speaker B: And on the left hand side, and again, don't focus on all the text. The key thing are the two blue boxes about trusted transaction pool app and the trusted Ordering Registration update service are two updates that can be done to the transaction pool module in a complementary fashion, which means the actual change to the protocol is actually minimal. So with minimal protocol changes that do not require any hard forking or anything like that, you can increase the security of the Ethereum network significantly. Okay, so after going down to the protocol layer, let's go one back up and talk about services. How can you discover these services? Right, you can run Intel SGX or AMD or TrustZone or a zero knowledge proof service on your laptop and that's great, but no one can find it. So that's you the provider, you have your Trusted Compute. What do you need? You need a utility service market platform.
00:18:00.118 - 00:19:16.830, Speaker B: So really for Trusted Compute is best if it has a marketplace with a broker service running on a blockchain such that a buyer who uses and needs this Trusted Compute service can now find it and pay for it on a per transaction or on a subscription basis. And now anybody in the world who runs such a Trusted Compute service can register it, can expose it and can offer it to anyone on this planet and they can actually resell it if they want to. However, because of the way this works, you can now exact another rent. It's fine. If you guys can hear me all right then that's good. So this way the provider can also participate on the subsequent monetization of that secure service through the marketplace. So again, we're discussing with various OEM providers to actually build such a marketplace.
00:19:16.830 - 00:20:46.300, Speaker B: So that's very exciting work that's going on that we want to push forward. And so when you look at the services, the applications and the layer one, you see how the Trusted Compute can really add to, as Sanjay said, to the democratization and decentralization of blockchains, not only Ethereum, but any blockchain that's out there. So that's why we're really excited about this aspect and therefore it's really want to finish here with a call to action to the community. Right? We invite you to review, improve and to help implement this vision not only for Ethereum, but for all blockchains such that they can be successful and deliver on their promise. And as a first step, please join us tomorrow at the other Trusted Compute and other Trusted Compute enthusiasts actually in the ultraviolet room at 10:00 A.m., where we talk about the future of Ethereum with Trusted Compute. Thank you, thank you very much guys, we got eight minutes for questions, so let's get this started.
00:20:46.300 - 00:21:30.330, Speaker B: On that previous slide, you had the buyer reselling data from the provider and the provider collecting rent from the buyer's third party customers. How in the world can you do that? You're actually not reselling the data, you're reselling the service, which means you still control who gets the service, you still hold the permissioning. So if he wants to resell it, the other party needs to be added to that service contract. So that's how you ensure that you get paid for that service if it's resold.
00:21:31.790 - 00:21:55.060, Speaker C: So what do you say to ease the fears of people that generally notice that Trusted Compute relies on trusted hardware that's oftentimes closed source and not allow for security reviews, resulting in things like the level one terminal fault and then a recent breach that exposed system management mode on intel chips that invalidated SGX completely? Just how do you reconcile that?
00:21:56.310 - 00:22:49.700, Speaker A: So the general thing is being as much as open as we can in terms of the breaches happen, not because they are intentional breaches happen because we are starting to use this technology at scale and many people are looking at it and at intel. We are committed to working continuously and quickly to provide patches, provide whatever is needed. And as the breaches that happened, there's a lot of information on Inter website in terms of where you can get the patches and how we can basically put it on the systems and how we can figure out whether the system has been patched. So there's a lot of information there.
00:22:50.550 - 00:24:14.640, Speaker B: Also, if you think about side channel attacks, actually I talked with Marley Gray from Microsoft yesterday and we'll probably do a little experiment with Microsoft Research to see whether you can actually do a side channel attack on a laptop in a Starbucks. If you can do that, then you really have a problem, right? Because typically you will not be able to get the apparatus you need into a secure data center. That's really hard. So it's more like on your custom laptop and we'll do that and we'll hopefully in some time be able to produce a little video about that and see how well that works or doesn't work. So looking forward to that. In the end, the more you get these trusted compute services out into the marketplace and into the hands of people, the more secure it's going to be and the more decentralized. So if people are offering those services and other people use it, the risk of a few controlling the many is really low.
00:24:16.930 - 00:24:49.306, Speaker D: I just had a question if you could try to correlate for the naive observer who sees a vision here for something that allows additional scaling, better efficiency of compute and so forth. But then it's not really on the roadmap when the Ethereum Foundation and the group is talking about what's in Ethereum 20 knowledge proofs are as both scaling and privacy. Can you say some words about that?
00:24:49.408 - 00:25:48.060, Speaker A: Yeah, I can start that. Right, so you're right and a lot of it is like generally not information about how trusted computes work and all that stuff. So we have done lot of work in the context of Enterprise Ethereum wherein for example, we have released a 0.5 version of an API via which anybody on the chain, a smart contract on the chain can talk to a trusted compute and bring results back and things like that. It's 0.5 version and the idea is to get that kind of a conversation going and that's why we are here in terms of like hey, there are these things and that trusted compute API that we have put out there, it's not specific to a particular thing. We want to comprehend hardware based and software based trusted computes because it's not a silver bullet kind of a thing.
00:25:48.060 - 00:26:16.360, Speaker A: So that's what we are doing and that would be a great place to start because they got a lot of their stuff work in there is like right now, more enterprise y in terms of the flows. But immediately we're going to start work on how to make that API apply for public Ethereum where you have the gas constraints and things like that.
00:26:18.410 - 00:26:21.238, Speaker E: Yeah, sort of a follow up to.
00:26:21.244 - 00:26:25.000, Speaker A: The gentleman in the back. Yeah.
00:26:25.370 - 00:27:08.198, Speaker E: So sort of a follow up to the question that was just asked about how we don't really see this on the roadmap with Ethereum 2.0. I think one thing that would help is if these designs were open, that would help people actually trust what's going on. And then another thing is, have you all approached them? Even the whole idea of feeding randomness from Rand on the Beacon Chain into a VDF, there's all this research and work going on to create a verifiable delay function, ASIC could this help that? Could that replace that? So why don't we talk about that $20 million on it?
00:27:08.284 - 00:27:37.806, Speaker A: You're right on the mark. Right. Because we have some really hardened random generators within the hardware that feed off the entropy within the system. And when I look at Randall and all that in context of Beacon Chain, it becomes very interesting. So that's where we talked about it's. Like, there is a role to be played and that's why we are here. It's like, let's have that conversation going.
00:27:37.908 - 00:27:43.040, Speaker E: What's the right way to are you all approaching Justin Drake to ask him?
00:27:43.570 - 00:27:52.500, Speaker A: We have not yet, but the idea is first was to get the API out, have something to shoot against, and yeah, but that's the idea.
00:27:52.870 - 00:28:02.774, Speaker E: That would just be a really good way to get an answer really quick about what reservations they have so that could be moved forward. Thank you.
00:28:02.812 - 00:28:03.206, Speaker A: Yeah.
00:28:03.308 - 00:28:50.150, Speaker B: And this is the beginning of a dialogue. Right. And one thing that want to point out was just really important. What we're saying here is we're not replacing any of the current security features. We're not saying replace proof of work with proof of elapsed time using Intel SGX or any other trusted enclave. What we're saying we're adding additional security features to the ecosystem stack that makes the whole thing more secure, allows better decentralization, and lowers the barrier to entry. Because it is literally ubiquitous.
00:28:50.150 - 00:29:30.462, Speaker B: Right, already. Right. If you run an I Seven and I Nine, you can turn on Intel SGX and deploy a trusted service in a few minutes. So it's about educating the ecosystem, about this novel idea. And it really has only come out in the last six months, really? Six to nine months, really, that we've been working on on this to formulate the ideas, to talk with people like Virgil, to get feedback. And it's a slow process. Right.
00:29:30.462 - 00:29:44.180, Speaker B: Because intel came out first and it was intel held the keys and that's what's stuck in people's heads. And you're saying now intel doesn't hold the keys anymore, or AMD or arm, it really doesn't matter.
