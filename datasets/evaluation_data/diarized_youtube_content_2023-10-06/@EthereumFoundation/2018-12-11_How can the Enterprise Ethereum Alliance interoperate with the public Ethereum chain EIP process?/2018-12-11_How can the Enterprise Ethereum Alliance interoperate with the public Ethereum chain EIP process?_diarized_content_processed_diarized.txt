00:00:00.730 - 00:00:29.138, Speaker A: My name is Boris Mann. I am an organizer that helps out with ETH Magicians. I also have founded a company with Brooke, who you'll hear from in a little bit, called the Special Projects and Decentralized Engineering Company, and we work on open source, low level infrastructure for Ethereum and other decentralized protocols. And with that, why don't we do an intro of all the participants?
00:00:29.314 - 00:00:31.874, Speaker B: I'm Jamie, and I work at the foundation.
00:00:31.922 - 00:00:33.190, Speaker A: What's your surname?
00:00:34.330 - 00:00:35.302, Speaker B: Full name?
00:00:35.436 - 00:00:36.120, Speaker C: Yes.
00:00:36.490 - 00:00:45.900, Speaker B: Jamie Pitt, and I work at the foundation, and I also work with the Ethereum Magicians. And it's been a lot of fun working for both.
00:00:46.750 - 00:00:57.280, Speaker D: I'm Charles Neville, and my address is I work at the Enterprise Ethereum Alliance. So.
00:00:59.010 - 00:01:12.530, Speaker E: That I'm Brooklyn Zalanka. As Bruce mentioned, we work together. I'm the CEO and chief scientist at the special Project Decentralized Engineering Company. And I've written about 5% of the ERCs.
00:01:13.030 - 00:01:23.766, Speaker A: Hi, I'm Bob Samuel, previously of the foundation and of consensus and EEA ethereum community person. Hey.
00:01:23.788 - 00:01:29.480, Speaker F: My name is Alex Vodo. I work with Consensus and volunteer some of my time helping EEA groups form.
00:01:30.650 - 00:01:47.790, Speaker C: Hey, everyone. I'm Connor Svenson. I'm the Technical Standards Working Group Chair of the Tech Spec Working Group, Chair of the EA. I'm also the founder of a company, BLK IO, and the author of Web Three j the Java Library. For working with ethereum.
00:01:48.690 - 00:01:58.340, Speaker G: I'm Nick Johnson. My microphone is not on. I'll talk louder. I'm Nick Johnson. I'm EIP editor and also the lead of the ENS project.
00:02:00.710 - 00:02:17.560, Speaker A: Fantastic. Now we know all the players. I think we're going to start with the EEPs process. How many people in the room are confident that they could currently explain the Ethereum improvement proposal process? One.
00:02:18.110 - 00:02:21.340, Speaker D: Do you mean accurately or just two?
00:02:22.030 - 00:03:08.140, Speaker A: Three. Okay, four. Amazing. So we're going to try and up that number from four to at least eight, or maybe make some of those four flip and cause them to question whether they're correct or not. So we know that this process is not something that a lot of people have necessarily engaged with, and that's definitely something that there's a desire to improve, make it less scary in general, and improve the quality of it because it improves the protocol for all of us. And this is one of the roles that we're trying to help with at Ethereum Magicians. Although it's sort of outside of the process, it forms a discussion and organizing layer around it.
00:03:08.670 - 00:04:04.060, Speaker B: I will start this off by how many of us here are familiar with EIPS EEPs improvement proposals? How many of you are familiar with other kinds of standards that are out there? Okay, that's good. There's familiarity. Okay, so this is about how to Ethereum improvement proposal, and you might want to create a standard in the community. You might want to create something like this famous standard ERC 20. So these are some resources. You might want to pull them up on your phone or computer to follow along. A very special one, an important one, is EIP One, which is sort of the procedures, almost a constitution for the process.
00:04:04.060 - 00:04:48.940, Speaker B: And it's all described right there, how it works. So an EIP is an improvement proposal and it describes a standard. And most of us know EIPS as core, like the core improvement proposals for a forking change. And those are widely publicized, and many of us are familiar with ERC 20 and many of the ERCs. These are application level standards. This is a distinction, it's a subset. And in general, what is a technical standard, that's something to keep in mind.
00:04:48.940 - 00:05:42.810, Speaker B: It's a formal document, and often these kinds of things take years of deliberation. So much just gathering of stakeholders and engineering that goes into these things. So the process, what it's for? It's essentially to create high quality proposals that are accepted by the community. And a lot of times in the community it's kind of vague, right? What's community? And that's coming to head. We're starting to understand that community involves stakeholders and it's not just an amorphous concept. And so you want the best input you can get in the process and you want buy in from stakeholders. You want that consensus.
00:05:42.810 - 00:06:39.500, Speaker B: And one thing to note about EIPS, it's in a Git repo, specifically GitHub and GitHub issues are critical to it. It's a critical piece of the EIP infrastructure, and you can just go directly to GitHub and see it there. So what is the work involved? This is specified in EIP one. Like what is involved? And the EIP one describes the format, and that giving you recommendations as to how you're supposed to proceed, that you're supposed to format it in a certain way. You're supposed to find consensus. What EIP one does not tell you. It's like the subtext to that as you develop any technology.
00:06:39.500 - 00:07:20.620, Speaker B: And there are EIP editors that are involved in the process and their responsibilities are very specific. They don't weigh in on an EIP, as you might assume they do. They're very much about formatting and moving the process along. They don't judge what you're doing in the sense that they're like administrative, they see it through, they run the process. And I'll have Nick, if you would, at any point Nick here might weigh in?
00:07:21.070 - 00:07:22.460, Speaker G: Happy to, yeah.
00:07:24.270 - 00:07:26.700, Speaker A: He'S an editor, so he doesn't weigh in.
00:07:27.150 - 00:07:29.034, Speaker G: Yeah, I have no, that's right.
00:07:29.152 - 00:07:57.714, Speaker B: But this is not the EIP process. And we have Brooke here as well, a user of the system who has submitted ERCs. And here's a list of the current editors. You may know their names. Who in this list are most active, do you think, Nick, in terms of moving it through the process? Are there any dormant besides myself?
00:07:57.832 - 00:08:14.540, Speaker G: Probably recently, Casey and Hudson, nick Savers has done a bit. We're all kind of like none of it. This isn't our full time job for any of us, so it tends to come in fits and starts, unfortunately, something we'd like to smooth out, and part of that is automating the process better.
00:08:14.990 - 00:08:15.980, Speaker B: I see.
00:08:16.910 - 00:08:21.074, Speaker A: Is this list other than on this slide public somewhere?
00:08:21.222 - 00:08:22.814, Speaker G: It is in EIP one.
00:08:22.932 - 00:08:23.502, Speaker A: Great.
00:08:23.636 - 00:08:29.258, Speaker B: Yeah. Would you like more community involvement? More people to volunteer?
00:08:29.354 - 00:08:33.140, Speaker G: If you're the sort of person who loves editing documents, then we want you.
00:08:36.150 - 00:08:36.674, Speaker A: Go ahead.
00:08:36.712 - 00:08:37.202, Speaker G: Yeah, please.
00:08:37.256 - 00:08:37.970, Speaker D: That was my question.
00:08:38.040 - 00:08:38.226, Speaker A: Yeah.
00:08:38.248 - 00:08:41.506, Speaker B: At any point, anyone can kick in and ask a question. Absolutely.
00:08:41.688 - 00:08:51.042, Speaker D: What's the procedure for adding an editor? Someone has to stand up and say, I would love to do a whole lot of work for fame and glory.
00:08:51.186 - 00:09:26.580, Speaker G: For little to no recognition. Step one. The rest is slightly ill defined, but the general process is propose an amendment to EIP one, adding yourself or someone else against their will as an editor, and get approval from enough existing editors, where enough is kind of ill defined to get that EIP merged. Technically, like any EIP, change only requires approval from one editor. But for changes to EIP one, we've historically tried to seek a real consensus amongst editors since it changes the whole process.
00:09:27.430 - 00:09:31.220, Speaker A: And when you say adjustment, you mean make a pull request. Yes.
00:09:32.710 - 00:09:36.146, Speaker B: And we'll go over that. We're going to specify that because I.
00:09:36.168 - 00:09:40.920, Speaker D: Think people might not person whose name got put up whether they're actually willing to do it. Right.
00:09:41.690 - 00:09:43.218, Speaker B: Did you say there's a volunteer?
00:09:43.314 - 00:09:45.874, Speaker D: No. Yes, but he's called Boris.
00:09:46.002 - 00:10:00.630, Speaker B: No, I thought you were okay. Okay. So here's one thing that people might not understand. They might think there's only two kinds of VIPs, because those are the ones in the news, core and ERCs. Right. But there's actually more. There's a general category called standard track EIPS.
00:10:00.630 - 00:10:13.138, Speaker B: You have core, which basically means improvements requiring a consensus fork. And Brooke, you had pointed out, and I hadn't put it in here, but there's another distinction that actually seemed kind of vague to me.
00:10:13.304 - 00:10:22.910, Speaker E: Yeah. So in EIP One, it says it's requiring a consensus fork or things that may not but are of interest to core devs.
00:10:22.990 - 00:10:41.290, Speaker B: Okay. And I found that I wasn't sure how to interpret that. So there's networking, EIPS, interface, EIPS. And would JSON RPC be in that category? I know it's not defined as an EIP.
00:10:41.950 - 00:10:44.666, Speaker G: I would say it probably belongs in networking. Yes.
00:10:44.768 - 00:10:46.026, Speaker B: Okay. Sorry.
00:10:46.048 - 00:10:48.650, Speaker G: In interface again, confusion.
00:10:50.590 - 00:11:04.574, Speaker B: It's a good point. And of course, ERCs, and then you have informational EIPS. And this is an interesting one because I think this is actually quite open. I think more people should submit these. Right.
00:11:04.692 - 00:11:19.800, Speaker G: If you wanted to write like a Best Practices for Contract Development, then that would absolutely be welcome in an informational capacity. As long as you could demonstrate that there was consensus on these being good practices and it wasn't just your personal idea on how to do it.
00:11:20.490 - 00:11:26.278, Speaker B: Yeah. This could be the new medium. Right? I mean, we're using medium. This is the hot thing right now.
00:11:26.364 - 00:12:04.014, Speaker A: There's technically a Boris versus Nick blog post that still has to happen at some point, where we talked a little bit in Berlin in the summer of whether the EP process could use top of funnel curation to reject. More EEPs or whether in fact so that's the Nic version for the purposes of debate or whether, in fact, the Boris version of all the EEPs all the time. Let's have a thousand EEPs bloom and we'll scale the process of moving it along. That is still undefined in blog posts.
00:12:04.062 - 00:12:12.054, Speaker G: Yet to be written unsurprisingly. The person who's an editor wants Fury IPS to edit, and the person who isn't wants more. Yeah.
00:12:12.092 - 00:12:14.710, Speaker D: If we do that, I will volunteer you, Boris.
00:12:16.970 - 00:12:35.790, Speaker B: And then we have Meta EIPS, which are the process, the decision making process. And this one, it says surrounding Ethereum, which sounds know, really big, or could be I think it could be a lot of different things could become Meta EIPS. So these are different types of EIPS.
00:12:36.770 - 00:12:42.430, Speaker A: An ERC is an acronym for ERC.
00:12:43.430 - 00:12:48.334, Speaker G: Ethereum Request for Comments named after RFCs.
00:12:48.382 - 00:12:48.786, Speaker A: Right.
00:12:48.888 - 00:12:49.540, Speaker B: Yeah.
00:12:49.990 - 00:13:19.194, Speaker A: Which is the IETF request for comments. In general, what we're doing here is we're demonstrating that we would like everyone to call out things that they don't understand. And I will attempt to be as you see, we've demonstrated we're trying to do the there are no dumb questions. So that we expand things like acronyms. This will be especially important when we get into Enterprise Land, which is made entirely of TLAs three letter acronyms, and.
00:13:19.232 - 00:13:21.870, Speaker G: Etlas Extended three letter acronyms.
00:13:27.090 - 00:13:39.380, Speaker B: So we're going to focus on Core EIPS. And what's interesting is, I think most people in the community would probably be submitting ERCs, but I think understanding Core EIPS is really important.
00:13:40.790 - 00:13:41.540, Speaker A: So.
00:13:43.590 - 00:14:02.250, Speaker B: Who are involved? And you have these three main groups, and the Ethereum Core developers are the ones you hear in that conference call once every two weeks. And are there other stakeholders in this process? There might be.
00:14:02.400 - 00:14:03.100, Speaker H: So.
00:14:04.830 - 00:14:40.760, Speaker B: The workflow, it has to do with starting with the template. There's a template in the repo and you submit a pull request. You fork the repo and you submit a pull request when you're ready to submit your EIP. That's a flow that perhaps people are not used to. What do other standard bodies do for this kind of thing? How does that work? Because I know this happens in Python, this submission, so I'm not familiar myself.
00:14:41.370 - 00:14:57.980, Speaker G: With a lot of bodies. The IETF operates their own issue tracker. Basically, it has a specialized process for submitting and updating RFCs, which has evolved over time, but it's designed specifically for it. Shall we move out a bit?
00:15:00.750 - 00:15:28.130, Speaker B: And essentially what you're doing is you're submitting pull requests and trying to pull it through these steps. And every one of these steps has some special conditions, otherwise it's not going to make it out of that step. So the first step is working process. And you create the EIP, do the pull request, and it's reviewed. And I believe that there's not much restriction to submitting one of these. Am I correct?
00:15:28.200 - 00:15:29.110, Speaker G: We have a question.
00:15:29.260 - 00:15:42.186, Speaker B: Oh, yes. What you said about the IETF is correct, but all of the newer working groups, almost all of the newer working groups in IETF do all of their practical, everyday work in GitHub. Really, almost everybody switched to using that.
00:15:42.208 - 00:15:49.702, Speaker G: It's just so they when they have a new version of the draft, is that's the only time they submit it to the tracker?
00:15:49.846 - 00:16:03.762, Speaker B: So they basically edit in GitHub and then yes, whenever they want to, they can submit it anyway. So there's just an awful lot of work that happens in GitHub now, even for IHF work.
00:16:03.816 - 00:16:04.274, Speaker G: Good to know.
00:16:04.312 - 00:16:06.274, Speaker B: Thank you. W three C as well.
00:16:06.472 - 00:16:07.518, Speaker D: And EEA.
00:16:07.694 - 00:16:24.390, Speaker G: Yes. And to answer your question about work in progress, basically, work in progress isn't an official state. It's what we tag something when somebody sends a pull request that clearly they're still working on. The first sort of official state that gets merged is draft.
00:16:25.610 - 00:16:53.470, Speaker B: I see. Okay. And then to get it to draft, there's more requirements. One thing I'm interested in is this notion of agreeable. And if, Nick, you could give me some insight on that. That's one thing I don't quite understand. And I see in the EIP one, it talks about what might cause it to fail to reach draft.
00:16:53.470 - 00:16:57.150, Speaker B: What would you consider to be acceptable?
00:16:57.230 - 00:17:37.360, Speaker G: So this is something that's evolved over time. The earlier versions of EIP One were quite vague about this. A lot was left to edit judgment. And I've been trying to push towards a more sort of objective process where EIP editors in the early stages at least act as effectively editors in the newspaper sense, the typographical editors. So to be acceptable, it has to pass the continuous build, which checks a bunch of stuff about the formatting of it and so on. It needs to have at least the relevant headers, especially the one disclaiming copyright at the end. And it needs to be I'm going to put the broad category of not obviously crazy.
00:17:37.360 - 00:17:45.410, Speaker G: So it needs to look like something that could eventually evolve into something people would want to standardize.
00:17:45.830 - 00:18:25.390, Speaker B: Okay. And this final one okay. So there's some history behind EIPS, and it's rooted. It's been through there's a long history that goes all the way back to Python for a while, and then Bitcoin took Python's system, and then Ethereum took Bitcoin's improvement system. But they kept some of these things like this philosophy line here. And if you look this up, there's a lot of discussions online about it. So even now, there's still legacy pieces from way back that might lead to confusion.
00:18:25.390 - 00:18:34.900, Speaker B: So that's one thing to keep in mind about it. But as Nick is describing, there's the de facto process, and it might not exactly match EIP one.
00:18:35.270 - 00:18:41.730, Speaker D: Are there examples of EIPS actually being knocked back because they're not in keeping with the Ethereum philosophy?
00:18:42.470 - 00:18:44.980, Speaker G: Not the ethereum philosophy clause. No.
00:18:46.150 - 00:18:48.100, Speaker D: You've never actually used that process?
00:18:48.710 - 00:18:59.050, Speaker G: No, and I personally believe the philosophy line shouldn't be in there. If you want to write an EIP on the best way to boil kittens, then you're a monster. But I'll still accept your full request.
00:19:02.670 - 00:19:34.578, Speaker B: So there's a notion of last call, and again, it's the agreeability concept, but then there's a set deadline for it and then there's two levels of fail on this. And I'm assuming fail just a regular would be it doesn't make it to last call, but I call this the second one fail plus plus it gets knocked back to draft. And has that happened? How many times have you ever encountered that before?
00:19:34.664 - 00:19:59.980, Speaker G: Since we introduced the last call process about three months ago, we've only had a few EIPS go to last call, one of them went back to draft. And I wouldn't really categorize it as a fail because last call is an opportunity to get more attention to your draft and it should be in a state where you believe it's mature, but learning about things that you hadn't considered is an opportunity to make it a better standard.
00:20:00.370 - 00:20:05.630, Speaker B: Okay, my language may be too strong.
00:20:05.780 - 00:20:06.480, Speaker D: Okay.
00:20:08.210 - 00:20:19.010, Speaker B: And then there's accepted. And this means in the case of a core EIP, that this change is now in the hands of the developers, the client developers.
00:20:21.750 - 00:20:32.790, Speaker A: Do we know what we mean by client developers? So geth parity. Pegasus. Trinity et.
00:20:36.330 - 00:20:37.542, Speaker B: This. I'm sorry.
00:20:37.596 - 00:20:37.990, Speaker G: Go ahead.
00:20:38.060 - 00:20:54.080, Speaker D: How does that actually work out? In know I am sitting in my garage in Bangalore writing a client. Do I come along and say, hey guys, I'm writing a client, so I should be on that list?
00:20:54.530 - 00:20:55.280, Speaker A: Yes.
00:20:56.450 - 00:21:02.366, Speaker D: And we assume that the guy in Bangalore who's doing that will figure this out and come along and say, so.
00:21:02.388 - 00:21:14.830, Speaker G: There'S a nice sort of objective threshold here, which is if your client can sync domainet and keep up, then you've demonstrated enough technical competency to contribute to the process basically as a core developer.
00:21:14.910 - 00:21:16.774, Speaker D: And is that sort of formal thing.
00:21:16.812 - 00:21:20.706, Speaker B: That you do of no, but it's highly visible.
00:21:20.898 - 00:22:02.638, Speaker A: Yeah. So I think that's the thing. For instance, there is not a canonical list of all core devs, but generally if you're working on an active client, you are invited to join the all core devs calls. And then some of these EEPs might be listed for discussion, again using GitHub. GitHub.com ethereum PM, short for Project management, where the calls are organized and what exactly will be discussed will come up. And Hudson is the cat wrangler of that all core devs call.
00:22:02.638 - 00:22:04.234, Speaker A: Is that the correct title?
00:22:04.362 - 00:22:05.798, Speaker G: I think so, yes.
00:22:05.964 - 00:22:20.530, Speaker A: And that's also an open it's open to a public call as well. Yeah, it's also live streamed and then recorded on YouTube. So it all can be reviewed. Although the people who are actively speaking are the all core devs only. Yes.
00:22:20.620 - 00:22:35.610, Speaker B: If you want to participate, I'm sure that if you pinged Hudson that you would get on that call if you're one of the client implementers. And as Nick said, it's really clear if a client is viable or not, that it's on the network running on mainnet.
00:22:36.050 - 00:22:42.378, Speaker A: And generally other people are sometimes invited to come on the call and talk live to all core devs.
00:22:42.394 - 00:22:42.802, Speaker G: That's right.
00:22:42.856 - 00:22:47.010, Speaker B: Yeah. There's been key stakeholders invited to certain.
00:22:47.080 - 00:22:50.450, Speaker G: Calls as well as authors of core EIPS.
00:22:54.970 - 00:23:10.102, Speaker B: Yeah. And there's an interesting clause here and that's the three viable clients have implemented to reach final. And this final designation, nick, I'd like you to weigh in a little bit on that if you yeah.
00:23:10.236 - 00:24:01.290, Speaker G: So currently the EIP process is still quite entangled with the all core devs process. So in my mind, what we have is effectively two separate things. One is standardize on a set of changes or a technical spec of a thing we want to do in Ethereum, and the other is schedule a hard fork for it and push it out to the main network. But the reality is that you can standardize things that don't get put on the main network because we have more than one Ethereum network out there and there are private networks and testnets and there's Ethereum Classic and so on and so forth. And I, in the long run would like to see more separation between core devs and the standards process. The standards process should standardize things that make sense and are well written and deserve to be standards. And the client devs can contribute as contributors and they are the ones who decide what their clients implement.
00:24:01.790 - 00:24:51.020, Speaker A: And specifically, when we say standard or specification, what we mean is there is documentation in such a way that that standard or specification can be implemented by a client and that those clients who correctly implement that spec will be interoperable. So that's a long way of saying it, but it's very important. A realization to have, and it's becoming only more true in the wider Ethereum community, is that specifications are in fact more important than open source code. If you have a specification, then you are that much more open. Anyone can create open source or closed source code that implements that specification without being tied to any particular repo or language or anything else.
00:24:53.550 - 00:25:25.186, Speaker B: And so this describes core EIPS and let's say ERCs, there's many subcategories of those ERCs, and how that process moves along and how those reach do those reach final? Yes. And how does that work? Who would vote on that or not vote, but who would come to consensus on that? I think that's unresolved in some ways.
00:25:25.288 - 00:26:14.318, Speaker G: It'S better established as part of the EIP process than core. Now, I think due to some recent changes, the idea is the same. It follows the same process, but without the accepted step. So it probably helps to elaborate a bit on what Last call is. The basic idea is when you believe your EIP or your working group believes their EIP is mature, they send a pull request asking for it to be moved to Last Call, and that starts sort of a two week clock. And during that period, people are expected to submit comments and criticism and feedback and so forth. And at the end, the authors of the EIP are expected to submit a pull request or a message saying, here are all the objections that were raised during the last call process, and here is how they were resolved.
00:26:14.318 - 00:26:51.198, Speaker G: Where resolved could be we changed the EIP to accommodate it, or it could be, we decided that this is not relevant to our EIP. And then there's a somewhat subjective but as objective as possible process on the part of the editors to assess whether those issues were dealt with properly and whether they were substantive enough to send it back to draft. So if you move it to Last Call and you have some people may raise some minor issues that you fixed, then no objection to moving it to final. But if there were substantive things that hadn't been addressed before, even if you fix them, then you should probably go back to draft and keep working.
00:26:51.364 - 00:27:17.334, Speaker A: And a phrase that kind of comes from the IETF and is being used or adopted in many other places is rough consensus and running code. So the rough consensus means agree, disagree, over my dead body. And in general, if there are still people in the room saying, over my dead body, those should be looked at.
00:27:17.372 - 00:27:20.620, Speaker D: Very, very highly or we arrange it.
00:27:22.510 - 00:27:24.810, Speaker A: Wait, just real quick, what's the difference.
00:27:24.880 - 00:27:27.530, Speaker D: Between consensus and rough consensus?
00:27:30.430 - 00:27:41.440, Speaker G: And people with more IETF experience can correct me? Consensus implies everyone has agreed that this is a good thing. Rough consensus implies nearly everyone agrees where.
00:27:42.390 - 00:27:45.682, Speaker D: Okay, wait for the mic, please.
00:27:45.816 - 00:27:56.100, Speaker A: Sorry, just rough consensus is the absence of strong disagreement. Right. And so it's not 51, it's not 65.
00:27:56.470 - 00:27:58.822, Speaker D: Consensus says everybody can live with it.
00:27:58.876 - 00:28:05.506, Speaker A: Yeah. Rough consensus says no one is saying we should go down a different path. No one's blocking.
00:28:05.618 - 00:28:13.414, Speaker G: Right. I didn't mean it relied on quantity of people, but rather that there can still be objections, but they have to be addressed.
00:28:13.462 - 00:28:20.346, Speaker A: Right, but the big difference is it's not about people saying yes, it's about having no one screaming no.
00:28:20.448 - 00:28:38.930, Speaker G: Yes. And I think the other thing that I didn't really grok until I started sort of observing the IETF more closely is that it's not about voting. It does not matter how many people say yes or no. What matters is the technical arguments they raise and the sort of the strength of their objections.
00:28:42.150 - 00:28:48.522, Speaker A: Just a quick question. Where are these comments and feedback? Where is this happening on GitHub, on different mediums.
00:28:48.606 - 00:29:07.290, Speaker G: So each EIP, when it's accepted as a draft, has to have a discussions to URL, which has to be some form of open discussion forum. Common choices are either an issue opened for the purpose or a Theory Magicians link, but it can be really anywhere that people can engage in open discussion.
00:29:08.830 - 00:30:00.714, Speaker B: I think one thing about this is how does the editor know that this has been evaluated by the right people and that they've reached rough consensus and this is where the community comes in and takes ownership groups together and takes ownership of certain types of ERCs or certain categories of things. And that the editors. I'm hoping that perhaps someday that the editors would recognize that there's a group of people who are interested in this particular type of ERC, and then that would be a working group, a ring, a little standards body just for that, and then they would work with the editors to move those forward. So that final actually has meaning.
00:30:00.842 - 00:30:53.520, Speaker G: That's what I'd like to see as well, not just because it lightens my workload, but because we're seeing working groups, the Theorem Magicians called them rings forming around topic areas on Ethereum. And I would very much like to see them take ownership of areas of technical standardization. And that gives the editors the more power to go to people and say, this looks great, please take it to the working group. And for the working group to do sort of more intensive review of their particular topic area because the editors don't have the time or the expertise to comment on everything. And then it would still be possible to submit an EIP yourself directly without a working group. But it's going to come under greater scrutiny because the question will be, is there an appropriate working group? And if there is, then what was the reason for not working through that process?
00:30:54.210 - 00:31:33.180, Speaker B: Okay, this is just briefly about the format of EIPS. These are the various this is the breakdown of what you would be submitting and it's in Markdown format now. At this point, I think I'll turn it over to Brooke briefly to talk about the ERC process because of what you've been working on. Could you give us some ideas about how that is? And there's so many ERCs in there, and I myself was intimidated by it just looks like kind of crazy.
00:31:34.990 - 00:32:42.080, Speaker E: Yeah, sure. So typically we're seeing individuals or groups, but typically groups that want to standardize some application level interface will come up with a draft shared internally, say within the company or amongst their friends. When they think they have it in relatively good shape, they'll either put up an issue or ideally a pull request with this in the correct format and then link it to, as mentioned, to place for discussions, which is what we have on the slide here. This is an announcement on Ethereum Magicians requesting comments and further discussion on the topic in terms of it being intimidating. I think people see that just like the sheer the numbers and they get really scared like oh, ERC, 1400, there's a lot of these, right? But there isn't because it's tracked on GitHub. Every issue that's ever been filed, every pull request, every typo change gets its own number. So there's ERCs, there's 61 currently.
00:32:42.080 - 00:33:38.340, Speaker E: So even though it's around what, 1500 now, there's huge gaps in between there. So I've written three and that's 5%, right? So it shouldn't be as intimidating as that. And even if there's a template that you can fill out, like literally copy paste, fill it out and if there's something wrong with it, something needs to be adjusted or rewarded, typically somebody will go in there and give you a hand. It's not adversarial, right? Everybody's trying to make the whole system better, which is great. And then again, forums like Ethereum Magicians are very helpful. People can organize them in tags, people have interests or these working groups can form essentially spontaneously and move the state of the art forward.
00:33:38.790 - 00:33:44.260, Speaker A: Why do we have issues and pull requests? What's the distinction between those two?
00:33:44.790 - 00:34:50.730, Speaker G: Historically people opened either so the original EIPS repo was created with a directory for EIPS and the intention that at least final EIPS would all end up in there. However, people started opening issues as drafts and sort of actively editing them in the issue and using that as a discussion venue as well, which led to sort of a bit of chaos in terms of what it took. To be called an EIP, whether it even had to have the headers and so forth and where an EIP was and what would happen when ERC 20 is merged. And do you close issue 20 now that it's a final and not a draft and so on. So part of the revamp we've been doing is trying to sort of be firmer about that and say if you want a draft then it's a pull request that's merged and the only drafts are the ones that are in this directory. So issues generally are welcome to be used for discussion of open drafts, non finalized EEPs, but you don't put the EIP itself there, that goes in as a pull request and then gets managed as a file.
00:34:51.070 - 00:34:54.890, Speaker A: Is it still useful to have issues at all or is that a distraction?
00:34:55.630 - 00:35:11.760, Speaker G: If we could I would probably actually close issues on the main repo with the intention of sending people elsewhere for discussion. I mean if I could I would have some sort of integrated discussion that was better integrated with the EIPS in general but we work with what we've got.
00:35:12.770 - 00:35:50.220, Speaker A: I think part of it ends up being that so the barrier to entry, to participating this is having a GitHub username and a text editor so that's a relatively low bar. And so issues and comments and subscriptions were the default messaging thread sort of. Thing. And ETH Magicians has a slightly better threading notification, et cetera interface. But to be very open and accessible, GitHub is the default that people already have the tools to participate in.
00:35:51.470 - 00:35:59.178, Speaker D: How many discussion for are used? How many different ones have been used in the 60 ERCs?
00:35:59.354 - 00:36:15.650, Speaker G: So from my experience, it's basically all either issues in the repository or Ethereum Magicians. There have been maybe two or three EIPS I've seen that have specified other URLs, in which case I've gone and manually checked that anyone can sign up and comment.
00:36:18.970 - 00:36:34.090, Speaker A: So three or four with the bulk GitHub, ETH Magicians and other roughly, and ETH Magicians, you can use your GitHub username to log in. So I think that's one of the other things that says you already have the ability.
00:36:35.630 - 00:36:46.014, Speaker B: So that pretty much concludes my overview of the process. So I think at this point we can move to the next stage of what we're trying to do.
00:36:46.052 - 00:37:14.470, Speaker A: Does anyone else have questions or comments on the EEPs process as it stands today? I wanted to ask, sorting through the proposals, has there ever been the case that, I don't know, the community vetoed on a decision? Like you say, okay, this is not a good proposal and we're going to dismiss that. Has there ever been like backlash or anything like that?
00:37:14.540 - 00:37:57.094, Speaker G: So a couple of categories of that, really. One is like I alluded to earlier, the distinction between standardizing things and implementing them on the main chain. So there were of course, the things like the various proposals around the parity multisig issues and they received a lot of backlash. And my opinion is still that if they're technically sound, we should standardize them. And then the debate about whether they should actually be implemented is one for the all core devs. The other is there have been one or two contributions that were just badly structured. For instance, there was one that basically tried to write a new EIP that would somehow change the EIP's process.
00:37:57.094 - 00:38:08.940, Speaker G: And my pushback and others was this should be a change to EIP one, not something new. And that's the only time I've really encountered hard pushback on sort of the process itself.
00:38:10.670 - 00:38:23.806, Speaker A: I would say I've seen a couple that essentially go stale where majority of drafts go stale. So people say things like this doesn't make any sense, you should update it, and then the original author never comes back.
00:38:23.988 - 00:38:27.150, Speaker G: Some of those even have authors such as Vitalik Puterin.
00:38:27.490 - 00:38:35.700, Speaker B: That's why EIP one emphasizes the championship. You will champion the EIP. So, kind of a dumb question.
00:38:36.550 - 00:38:40.610, Speaker D: Have you seen EIPS being accepted and then never implemented by clients?
00:38:41.430 - 00:38:56.310, Speaker G: Not with accepted because it generally only transitions to that. If there's been an all core devs and everyone's agreed to implement it, certainly there are ERCs that have been accepted or finalized and then they're just not popular.
00:38:59.550 - 00:39:08.122, Speaker B: Have you put any thought towards codifying some of these EIPS in the form of test cases and things because as.
00:39:08.176 - 00:39:09.786, Speaker G: Somebody has tried to implement some of.
00:39:09.808 - 00:39:16.222, Speaker B: Them specifications in English text aren't always sufficient to describe why things are the way they are.
00:39:16.276 - 00:39:33.380, Speaker G: Are you thinking about core EIPS or ERCs? Mostly core EIPS. Yep. So actually there is a separate testing process. There are consensus tests that are built by dedicated EF members for all of the core consensus changes.
00:39:35.590 - 00:39:37.234, Speaker B: There are, but they don't link back.
00:39:37.272 - 00:39:39.334, Speaker A: To the EIPS to describe why those.
00:39:39.372 - 00:40:04.160, Speaker G: Tests pass or fail. There's no textual description of them and there has been some discussion about whether core EIPS should be required to provide their own test cases. I'm sort of ambivalent about it because on the one hand, it would certainly help with implementation. On the other hand, writing consensus tests is a very highly specialized skill set. Even people at client, you know, even client implementers, not everyone knows how to do it.
00:40:07.810 - 00:40:49.770, Speaker D: W three C, which has a similar shape. In some ways there has been a trend over the last few years to say yeah, you can't put a change in without a test. More and more of the work is like, yeah, you really have to actually have a test before you can put a change up because although it's specialized, it's specialized work because what you're messing with is specialized work and you need to make sure you got it right. People have to be actually able to implement against it who are not the people who wrote the proposal.
00:40:50.510 - 00:40:57.978, Speaker G: I mean, the offset I'd say to that is that currently we do have people whose dedicated job it is to build consensus tests.
00:40:58.154 - 00:41:04.682, Speaker D: It's fine if someone else does it, but it's just like the gate requirement is you've got to get that test written somehow.
00:41:04.826 - 00:41:16.070, Speaker G: What worries me is if we push back the needing a test to getting to draft, for instance, then our already overworked test writers are going to have to write stuff for things that nobody ever actually wants to implement.
00:41:19.930 - 00:41:22.280, Speaker A: Which just speaks to a scaling problem.
00:41:22.650 - 00:41:36.460, Speaker G: It does, but it also speaks to unnecessary work in that I think it helps to vet proposed core changes before putting in all the effort of building a test suite because if it's obviously a bad idea, there's no point in writing consensus tests for it.
00:41:36.830 - 00:41:55.374, Speaker A: Why don't I mark this down? I think this is thing that warrants further discussion. So again, this is like a live GitHub issue queue. I'm now suggesting that, yeah, this is something that deserves I will open an issue around it or a place for discussion and that might be an E One change.
00:41:55.412 - 00:41:56.670, Speaker D: She had the microphone.
00:41:57.970 - 00:41:59.826, Speaker A: Yes. Question.
00:41:59.928 - 00:42:00.482, Speaker D: Cool.
00:42:00.616 - 00:42:12.662, Speaker A: Hey, Nick, first of all, thanks for merging our four ERCs into the repository. My question was around whether there's been a standard that was implemented not because it went through this process, but rather.
00:42:12.716 - 00:42:14.230, Speaker G: That adoption made it happen.
00:42:14.300 - 00:42:18.902, Speaker A: So like for example, just people picked it up and decided to use it before it was merged in.
00:42:19.036 - 00:42:47.090, Speaker G: I mean, ERC, 20 kind of it was submitted as a draft and it became a de facto standard long before it was actually marked as final in the repo. And the version that people implemented differed in some small but significant ways from what was actually written down in the draft. So about a year ago we went through and we actually made a point of updating, ERC, 20 to reflect the actually implemented standard and then actually finalizing it. So it was a real standard rather than de facto.
00:42:48.470 - 00:43:21.150, Speaker A: Cool. Thank you. Other questions. I was just wondering so it kind of sounds like for core EIPS, it really does just come down to the client developers. So has there ever been a time where there was a core EIP that was highly supported by the community but refused to be implemented by the client developers? Because, for example, maybe there's.
00:43:23.090 - 00:43:23.566, Speaker D: Some sort.
00:43:23.588 - 00:43:46.900, Speaker A: Of thing that could be introduced into the consensus protocol that somebody researched who is like a highly skilled PhD who just doesn't know how to code, and then client devs didn't want to implement that. So it kind of sounds like most of the power or all of the power is in the client developers. And I'm wondering if that's ever happened before, and if you guys even think that's a problem.
00:43:47.990 - 00:44:32.180, Speaker G: I'm not aware of it happening, but I can certainly hypothesize situations like you're talking about. I think the thing to remember is that these are all open source projects, so implemented in a client doesn't necessarily mean the client developers themselves have to implement, it just means they have to accept a pull request. And if they're really determined not to accept the pull request, you can fork it and have your own parity or your own guess. The thing is that there's ultimately, like, we can't write an EIP process that somehow forces client developers to implement what we want them to implement. Their time is spoken for by the organizations they work for in themselves, and ultimately, if they don't want it in their client, it won't be in their client, maybe in a fork of it.
00:44:33.430 - 00:44:58.540, Speaker A: I think that researcher implementer is sort of an interesting thing and there haven't really been community generated, none of those categories, and it would probably not fit a sort of correctness test, if you're like, hey, I think something cool should go into ethereum. So there's an expectation that somehow you gather resources, but there aren't technically no barriers to it. Does that make sense?
00:45:00.130 - 00:45:05.920, Speaker D: Other Questions I would just comment that if you get to that problem, it's a mark of.
00:45:08.850 - 00:45:18.766, Speaker A: Yeah, yeah, exactly. Part of the Tachyon consensus. Cohort.
00:45:18.958 - 00:45:20.130, Speaker B: Hi, Boris.
00:45:21.030 - 00:45:41.546, Speaker F: So I guess my question is about if there's any expected conflict that could occur between the philosophies of the Enterprise Ethereum Alliance and the larger community in terms of rough consensus and potential over my dead body types of so why.
00:45:41.568 - 00:45:52.042, Speaker A: Don'T we segue straight to intro of the EEA? Because I think that it's fair to actually have that framing first. Fair segue.
00:45:52.186 - 00:46:44.640, Speaker D: Can I reuse Jamie's slides? We pretty much work by the same kind of process. We have this formal voting system for you file an issue on GitHub because our specs in GitHub, it's a private repo, but all the members go into GitHub. They file their issue, the members discuss it, and then we either reach consensus, we put a formal proposal on an agenda and anyone can object to that, which means we're not there yet. But we either reach consensus or our formal voting rules are this very complex calculation where we count up how many meetings you attended out of the last ten meetings. And then if we have a vote, we obviously haven't got consensus, so we don't really care what the numbers are because we're not there yet.
00:46:45.170 - 00:47:36.560, Speaker F: It might be helpful to just take a quick step back and just mention what the Enterprise Ethereum Alliance is. So the Enterprise Ethereum Alliance was created just over, I think, a year ago. And it was basically a forum for large organizations in the enterprise space to actually come together, discuss best practices for Ethereum, initially develop code, although that has kind of currently been we don't ship code. Yeah, we don't. Yeah, initially there was this kind of push for that, but that's been pushed down in favor of actually focusing primarily on specifications for how people implement Ethereum and enterprise contexts. And specifically, the primary product of the EEA is a client specification for an enterprise grade Ethereum system. And I think there's a lot of misconception of what enterprise Ethereum really means.
00:47:36.560 - 00:48:23.754, Speaker F: Enterprise. Ethereum could mean ethereum mainnet. Right? If the needs of the enterprise community are met by the Ethereum clients that are currently operating on Mainnet, then that's totally fine. But this is just a way for enterprises to say we need these kinds of privacy guarantees, these kinds of messaging capabilities, or these kinds of protocols or these kinds of interfaces to legacy software to make us feel comfortable with using this and protecting their customers. And so initially EEA was just a soup of small kind of working groups that were each interested in either industry topics or technology. And it was kind of amorphous. And initially it was kind of just expected to sort of bubble up and kind of emerge as a set of specs.
00:48:23.754 - 00:49:36.006, Speaker F: But I think in about October of last year there was a big push to actually kind of get that spec process to happen amongst a group of people whose primary concern was doing that. So this was the Enterprise ethereum client specification v. 1.0 effort. And so a bunch of people came together and actually wrote, what are these requirements that we all have? And then there was a group that Charles is participating in, Connor Chairs, that basically helps kind of mediate that process, take in all these requirements and then formalize those into a document and then get rough consensus on basically on putting that together to get things into that specification. Now so that's a client spec for any ethereum client that is deemed to be enterprise grade by the general enterprise community as defined by the Enterprise Ethereum Alliance. But then there are industry subgroups that not only just discuss, hey, what's happening in supply chain? What are the kinds of interfaces or APIs we need in the supply chain space, but also can bubble up requirements that they have that they think all enterprises should adopt based on what they've determined from their use case.
00:49:36.006 - 00:50:26.782, Speaker F: Or add an addendum to that client spec that says if you are operating, for example, in healthcare, you must guarantee these additional privacy guarantees. There's these kinds of what are called special interest groups and those are industry focused. And then on the other side there are these task forces which are technology focused. So there's things like identity and permissioning and trusted execution which includes like off chain groups. And so that for example, the trusted execution group just added an addendum to the V 2.0 spec of the client specification that includes this extra process for people to implement off chain computing solutions so that include Iexec included Golem, Microsoft, Oracleize Consensus. So lots of folks working together, both small organizations and large ones, to kind of define these processes.
00:50:26.782 - 00:50:34.678, Speaker F: So that's kind of the general idea. It's not just about defining the client spec, it's about each of these industry use cases and kind of making that a little bit more clear.
00:50:34.844 - 00:52:01.154, Speaker D: So I want to tweak one more thing, which is Alex, it's for large organizations. Some of these organizations are as large as seven or eight people because there are organizations as large as seven or eight people who have a legitimate case for something. The question was, are we going to come into conflict with the sort of public process? And from the EEA side the answer is like no, because that would be stupid. We build stuff on top of the ethereum, the general ethereum thing. And the fundamental reason for doing that is every piece of the puzzle that we put together, every piece of the puzzle that an enterprise, your local library or your local multinational super monster corporate company or your government, when they develop something, they pay a human being to do it. And if that human being already knows all of the ethereum stack, then everything that you didn't change and specialize, they already know how to do that right? And you can be pretty sure that they won't make mistakes. There where people make mistakes is where it's, you know, we invented our own special consensus algorithm called the which I did last night.
00:52:01.154 - 00:52:31.098, Speaker D: This will be an EIP shortly. It's the proof of paying Charles consensus algorithm and people might actually implement that wrongly they might give their money to Boris instead because they're not used to using that piece. So we actually base a lot of the stuff very explicitly on here are, you want an EVM, and what better choice than the EVM? Right?
00:52:31.264 - 00:52:34.320, Speaker A: Well, there's not a the EVM. Yeah.
00:52:36.450 - 00:52:39.194, Speaker D: You want a set of JSON RPC. APIs.
00:52:39.322 - 00:52:40.734, Speaker A: Well, then you cry because there's no.
00:52:40.772 - 00:52:48.706, Speaker D: Better choice than the set of JSON RPC APIs and let's stick with Opcodes. That's safe, right?
00:52:48.808 - 00:52:49.938, Speaker A: Opcodes. Yeah.
00:52:50.024 - 00:53:50.886, Speaker D: So we do have right, it wasn't actually the EVM, but it is the Opcodes. We were like, yes, you have to have the same Opcodes. So that the thing runs. We got to the JSON RPC question, I was like, yes, you have to have the standard list of JSON RPC. APIs that actually matter, which turns out to be a combination of reading the documentation of this is what we formally think is here, and looking at what clients actually need in order to work, because there are some other ones in weird places. One of the things that we found trying to say here is ASPEC, which is these are the pieces of ethereum you pick up, and we pick up nearly all of it. Proof of work is the one thing we do not require because proof of work as a way of running your local library system is a good idea.
00:53:50.886 - 00:54:33.858, Speaker D: Said no library ever. They don't need it. And so everyone said, yeah, you don't have to do that. Other than that, you pretty much have to be able to run on main net. So if you could drop in that proof of work to most of the clients, you'd probably find that they would run fine. But it's literally Enterprises, the members of the EEA and By Enterprises, they're all sorts of organizations figure out what it is that they need. And so we go through sort of all of the pieces of the ethereum stack and say, yeah, we need that, and let's do the thing that everyone does.
00:54:33.858 - 00:55:16.402, Speaker D: Yeah, we need that. Proof of work is a sort of standout example of, no, we don't need that. None of the people who are building enterprise clients in the discussion, all the implementers said, yeah, no, we're not going to do that work because we don't have any demand for it unless we're also running on main Net. So making that a requirement would be dumb. The implementers will just say, yeah, you can put that in your spec. Jamie said, A standard is this technical document. In my thinking, a standard has another property, which is that people are using it in reality because if people aren't using it, it's just a spec.
00:55:16.402 - 00:55:24.994, Speaker D: And specification is a great literary genre, but doesn't make much difference to the world.
00:55:25.192 - 00:56:39.622, Speaker C: So just to also, I think, reiterate the beginnings of the EA as well in terms of why it was formed. And there was a lot of companies who were doing proof of concepts on blockchain technology. And of course I'd be looking at well, when it first started, I guess R three's corridor was only just emerging, but you had IBM fabric and lots of companies were running up private Ethereum networks. They were running them privately because they wanted private permission blockchains that they could control. And that's kind of disconnected from really the goals of the public Ethereum ecosystem. And so in order to try and support those enterprises and also give Ethereum more of a voice in the enterprise environment as well because and this is still like a problem that Ethereum has is that naive people sort of say, oh, how can you use Ethereum? Doesn't that use loads of power if you want to do a proof of concept on it? It's like these sorts of challenges. And so the EA was about forming an organization which could really talk to those different enterprises, really make them realize that Ethereum can be a serious technology to use in this environment, but also take into account their requirements.
00:56:39.622 - 00:58:04.614, Speaker C: And so originally that has been very focused on, as John Whelan says, the three P's, basically the permissioning aspect of it, the privacy aspect of it, and performance. And so privacy. I think that there are on chain techniques, but it's kind of still accepted that off chain, the sort of quorum style way of doing it is what most organizations are comfortable with just because they don't necessarily want even if it is encrypted data and provides a degree of forward secrecy, it still might not be enough to comply with regulations that they have to abide to. On the performance side, of course, the consensus mechanisms there that are used. We do have POA, which has come from the public network, but then there's other ones that have had adoption there and then the permissioning side. And this is still sort of a slightly grayer area, but at least when you have these blockchains in a private consortium network, then you can control it to a greater degree, I think, especially when we're talking about the different goals of the public ethereum versus private. There are fundamentally different drivers there but there's a common goal of trying to do the best we can with the technology and also ensure that it can fulfill the needs of the many so that there aren't competing technologies that can come along and displace it.
00:58:04.614 - 00:58:41.010, Speaker C: There's one other point as well, just on the governance side that's worth mentioning about the EA and that's that it has a board as well. So if, say, in the Spec development a formal objection is raised, then that objection can go all the way up to the board and the board will have final say as well on the release of specifications too. So what was announced a couple of days ago in terms of the EA Spec version two and the Trusted Compute .5 specification, again, they've all had board approval. So there is some differences in governance there as well within the EEA.
00:58:41.750 - 00:59:12.686, Speaker A: Can I just summarize the EA shape to spit it back to make sure I'm getting it right? And then if the audience has any questions so I'm hearing there's the Enterprise Ethereum Alliance. It has a board. The board runs and approves day to day operations like a corporation, and it also approves the release of specifications. There are special interest groups or Sigs, which roughly align to industry areas like healthcare or trusted off chain computing. And then you have task force that.
00:59:12.708 - 00:59:14.080, Speaker F: Last one, not the trust.
00:59:14.530 - 00:59:29.550, Speaker A: Yeah. And then you have a task force that covers certain technology guides, certain interoperability and specification of technical areas such as identity or privacy and trusted execution.
00:59:30.150 - 00:59:31.986, Speaker C: And then there's Ron as well, which.
00:59:32.088 - 00:59:33.746, Speaker A: Yeah, here you go.
00:59:33.768 - 00:59:34.580, Speaker F: Hold on one.
00:59:41.830 - 00:59:43.118, Speaker D: Why don't you say who you are?
00:59:43.224 - 00:59:45.574, Speaker H: I'm Ron Resnick, I'm part of the.
00:59:45.612 - 00:59:49.000, Speaker A: EA, the Executive director who's speaking.
00:59:50.170 - 01:00:20.740, Speaker H: So I come from the telecom side. And so I have a talk on Friday that we'll talk more about a roadmap. So I'm not going to address that. But just real briefly, as a board, and I think this is really important, the board empowers a team. And so that's the main qualifier because the board folks, they all represent their own companies. They have a fiduciary responsibility to be neutral. It's very challenging to do that, so they try to have somebody.
01:00:20.740 - 01:00:49.290, Speaker H: So we're employees of VA, so we're basically neutral trusted folks who don't have a business interest. So I think that's really important to acknowledge. And that's the main point. Everything else that you guys covered is fine. So our responsibility is to run the day to day operations as a team. The board meets once a month and we fill them in. They don't like it, they boot us out.
01:00:49.290 - 01:00:51.950, Speaker H: They like it, they keep us great.
01:00:52.020 - 01:00:52.990, Speaker A: Thank you, Ron.
01:00:57.090 - 01:00:59.520, Speaker D: So that there's a question at the back.
01:01:08.310 - 01:01:36.380, Speaker I: Yeah, I have two questions, actually. The first one is, what is the role of EA when it comes to implementing the blockchain protocol with enterprises? Like, do you actually supply sub developers? Do you have a team to supply to these enterprises interested in doing some POCs with them? Or do you just connect with other startups who's actually doing it? And then you just build a bridge? That's the first question.
01:01:37.470 - 01:01:52.582, Speaker D: Can I answer that and then get the next question? Is that easy? We don't have a team of developers. We don't do the work. There are members of EEA and that's what they do. People like Connor.
01:01:52.666 - 01:01:55.806, Speaker I: So members as in the blockchain startups?
01:01:55.998 - 01:02:04.762, Speaker D: Yeah, companies who are making stuff or doing consulting or running tools, building tools.
01:02:04.926 - 01:02:13.350, Speaker F: So that even includes like, Morgan's Quorum team, who created the client spec or the client quorum implemented those folks.
01:02:14.890 - 01:03:22.442, Speaker D: If you go to EEA, what EEA itself gives you is, here are the standards, here are the specifications. That these clients should conform to. And because it's a place where people are interested in actually defining together those agreements. There are the implementers, the people making clients, there are customers, people who say, well, I'm going to want to pay you to give me a client, and here are the things that I want to make sure it can do. And so I'm joining the conversation because I want to make sure that the standards actually mean I can get a client. And not only is it interoperable, but it does useful things because the customers say these are the things that need to be useful. And then there are consultants and people who are in sigs because there are people who really just want to learn, but there are also people who are, I'm a consultant in this space, I want to put in my two cent worth occasionally.
01:03:22.442 - 01:04:17.022, Speaker D: I want to meet other people in this space, in the enterprise space, because all these buyers are coming into this forum and I'm selling. So it has more of an informal role as a marketplace that you can go to, but EEA itself doesn't do any of that. We work on the standards and we work on the special interest groups where people set up. We want to know about what things are important to us as real estate people. Where are the vendors, what are the products, what are the ideas, what proof of concepts are there? And who can I go to build me one? Or I'm a builder and I want to find real estate people. Why don't I come and talk to this group?
01:04:17.156 - 01:05:02.720, Speaker A: And a key aim when we were starting, really was saying what's the delta between where we are versus getting to something that can get to production? We're sort of in this proof of concept, lots of things being rolled out, but can't get to production basically because of this perception and reality that ethereum based systems, well, they're not finished yet. You're not going to get support, they're not going to be standardized. You're going to get implicitly vendor locked. So really wanting to say here is a specification. If you start using something based on this specification, well, you'll be able to be supportive. You're getting a higher grade, really.
01:05:03.730 - 01:05:06.270, Speaker D: So you had a second question as well.
01:05:06.340 - 01:05:34.726, Speaker I: Yeah, my second question. So EA is part of the ISO. So you also mentioned about the standard. You do advise on the standard as well. So do you have anything to say about that part? Or I know this session is more like DevX related or we can actually have a talk after the session as well.
01:05:34.908 - 01:06:31.078, Speaker D: So EEA participates in ISO. ISO has a group that ISO is the International Standards Organization. This is a treaty based legal thing where basically countries go and vote on standards and they make standards for all kinds of stuff. ISO 9000 management standards about how to make sure you're doing a good job of managing your organization and ISO standards for making sure that cameras work or seatbelts won't break. There's masses of these things. Yeah, date formats is a really good example at this point. ISO has a date format standard, which I've never read.
01:06:31.164 - 01:06:32.662, Speaker I: What is date format?
01:06:32.806 - 01:07:16.150, Speaker D: Sorry? How to format a time and a date. It's ISO 8601 and I've never read it, largely because I know it is a big fat document and it costs like $100. And I'm like, yeah, I don't need all of that. I know a lot of the stuff in it. ISO makes standards fairly slowly as a rule. There are some groups that work quite well, and there are a lot of groups that work very slowly. And the final decision making process of ISO is every country in the world basically has one vote.
01:07:16.150 - 01:08:15.900, Speaker D: And so you get literally some country has something they want to standardize for some reason or other, and they go and find a whole lot of tiny countries who do not care at all about this thing, and they pay them to vote. And that's how these decisions end up happening in some cases. So the benefit of ISO is there are a number of countries and a number of legal areas of work where people say, it's got to be an ISO standard. Or they say, if this is an ISO standard, then the government pre approves you doing things, or companies will pre approve buying anything that is ISO certified, something or other number. The EEA. I think our basic position is.
01:08:17.710 - 01:08:18.074, Speaker A: Like.
01:08:18.112 - 01:09:01.180, Speaker D: Many, like W, three C and IETF, we work on and Ethereum. Ethereum we work on rough consensus and running code. We're interested in making standards that are useful very soon for people who actually need them and being decided on by the people who need these things to work. And really, I'm not sure why ISO wants a blockchain standard, beyond the fact that they want every sort of standard. There is an ISO standardized HTML. There is an ISO HTML standard. There are precisely zero implementations of this standard in history.
01:09:01.180 - 01:09:12.582, Speaker D: You literally cannot get an HTML browser for the ISO standard. No one has ever built one. Just doesn't exist.
01:09:12.726 - 01:09:20.058, Speaker G: I think ISO also standardized how to make a cup of tea? I think so. I believe there's an ISO standard for milk.
01:09:20.074 - 01:09:24.340, Speaker A: It is quite the standard is probably rubbish. They probably do the milk the wrong way around, don't they?
01:09:26.230 - 01:09:51.286, Speaker B: Yes. I'm curious about what happened, what conclusions and what consensus, what kind of ideas you came to. Two days ago, you had a meeting gathering at the Council of Prague with magicians and with EEA individuals, and the discussion was about EEA's involvement with EIPS.
01:09:51.478 - 01:10:34.534, Speaker D: So I wanted to take basically that topic and the question we do we envisage disagreements? And it's like, no, I don't think we envisage disagreements. I think one of the key underlying principles of the technical. Work at EEA is we're based on Ethereum. Essentially. We can't afford to disagree in a way that creates, like, a hard fork. We may not use a different piece and we have to work out how you do that in a way roughly. Which means when people build a client did they release Pantheon yet?
01:10:34.732 - 01:10:35.480, Speaker A: Yes.
01:10:36.810 - 01:11:18.902, Speaker D: Pantheon runs on Main Net. Pantheon will be an enterprise client. If we make requirements where Pantheon has to choose one or other of these things or Clearmatics or any of BlockApps any of the clients, that would be stupid because why would we do that? A little bit more work and a little bit more thinking and we can make sure that we're actually compatible. And the big win of the compatibility is we get clients. And as I said at the beginning, you can go out and hire a developer and they know how this thing works because it's basically just mean.
01:11:18.956 - 01:11:51.070, Speaker A: I think if anything, it's the other way around. Something I sort of envisaged at the very start was actually the fact that EEA was doing a clearer spec with compliance would actually be a means to drive to more canonical specification on the public network where there are areas of ambiguity where that's kind of been okay in that scenario but it isn't on the enterprise side. You need to get to clarity something like the RPCs being a key point.
01:11:51.220 - 01:12:25.482, Speaker D: That's exactly the example I want. With the RPCs, it's like we had to decide like clients decide as they implement what are the real set of RPCs. And it turns out that this is basically public Ethereum stuff and we're writing it down inside EEA for the things that you have to do inside EEA. Probably that's a thing that we should just be contributing back to the public community. Having done all that work. We should just give it to you guys. Right.
01:12:25.616 - 01:12:35.680, Speaker A: So this was I think Jamie was kind of prompting for this. So we had a session at ETH magicians covering EEPs. And EEA is Eric from infura in the room?
01:12:36.850 - 01:12:37.920, Speaker F: Eric too.
01:12:39.970 - 01:12:42.174, Speaker A: I'm unsure since I haven't met him in person.
01:12:42.212 - 01:12:43.570, Speaker F: Yeah, I think you just left.
01:12:43.640 - 01:13:02.770, Speaker A: Okay. So this has come up multiple different kind times. So actually, I'll clarify something around and other people can jump in and correct me as I understand it. So there's the Ethereum yellow paper which describes and is the specification for Ethereum.
01:13:02.930 - 01:13:03.910, Speaker D: That's correct.
01:13:04.060 - 01:13:54.070, Speaker A: Asterisks it turns out, that not everything that you need is in that yellow paper. One of those things is the JSON RPC interface as Geth and Parity were the two leading clients and they kind of disagreed and there was no solid spec. They have slight variances. So you need to choose whether to be bug compatible with Geth or Parity. And each of them kind of disagree which of the other ones is buggy. As we're moving from two to N clients some of which are also enterprise Ethereum clients. It turns out that the work of specifying those things and testing whether you're compliant needs to be done.
01:13:54.070 - 01:14:43.846, Speaker A: Infura, which runs lots and lots of client nodes, is one of the people that really feel this pain. On new releases, they have internally written some JSON RPC integration tests that are cross client. I have started discussions with Infura about contributing those integration tests as a public validator yes, please. So we have a thread on the Ethereum Magicians. We'll announce public calls and I think this is going to be one of the test cases where public Ethereum and Enterprise Ethereum will really converge and work together on this. And then more broadly in that discussion, we surfaced a couple of other different things. So.
01:14:43.846 - 01:15:16.430, Speaker A: Jason RPC watch for that. That was actually one of my slides at the launch event of EA. Was that specific use case perfect. We're 18 months on, maybe we'll do it. Yes, exactly. Something was brought up by actually Dan, who's in the room here, was asking about if right now, when you contribute an EP, you need to commit the context of the standard to the public domain. So that covers copyright.
01:15:16.430 - 01:15:55.382, Speaker A: What it does not cover is anything relating to patents. So there is a danger that clients and other implementers could implement things that are patented. So patent trolls might attack the Ethereum ecosystem. So this is another thing that enterprises are very concerned about. So they get that very clear. So there's work to be done and we need to file an issue. This might be something that, first, we need like a human to guide the process and secondly, likely some funding to get legal advice and perhaps a group of people speaking to the EF and other funding bodies to help get that done.
01:15:55.382 - 01:15:58.222, Speaker A: So we've posted that as an item that's going to be followed up on.
01:15:58.276 - 01:16:01.978, Speaker F: Just to mention, the EEA has both a legal industry working group and internal.
01:16:01.994 - 01:16:15.298, Speaker D: Legal counsel too, and a patent policy to address this problem. So within EEA, it's already clear you come along, you leave your patents at the door and agree not to use them against people.
01:16:15.384 - 01:17:12.440, Speaker A: And bodies like the W, three C and IETF have had various policies around this as well. So finally, on the EA side and on the special interest group side, charles and Alex have agreed to go off and talk to all of the industry groups and get a short list of hey, here's some stuff that lots of end users are interested in that may make sense to move through the EIP process. So again, more flush out even pre EIP saying here's some possible working groups who's out in the open and wants to talk about possibly standardizing or specifying some of these things. So really we're looking forward to seeing what that looks like, something that I actually want to mention at this point. And I apologize, but we need to kind of get a lot of this out and into people's brains is Nick has a day job. He works on ENS. He's paid by the EF to do various things.
01:17:12.440 - 01:17:48.670, Speaker A: He volunteers to be an EIP editor, as many other people volunteer to leave comments or do other things like that. Brooke and I have started some community calls where new EEP implementers can come and talk about it. So a lot of it is just throwing it out the flagpole. Jamie does an excellent job of parsing through interesting no EEPs and pulling discussion together and saying, hey, look at this. So these are all roles that are sort of emergent, that are happening. None of these things are the Ethereum community. There is no the ethereum.
01:17:48.670 - 01:18:22.122, Speaker A: There's a set of processes that we agree to kind of roughly use. That is one of the difficulties with many corporate entities is they look for an entity that they can interact with the company. The Ethereum company. Exactly. Even the Ethereum Foundation is not in charge. This is a developer conference put on by the Ethereum Foundation. It is not the developer conference.
01:18:22.122 - 01:18:47.320, Speaker A: Right. Edcon in May, run by a group somewhere out of Asia that themselves are a nonprofit linked time. The Ethereum Community Conference. That happens last year in Paris and I think is going to happen this spring again in March. So we are all Ethereum is the word that kind of happens here. And also none of us are because none of us can speak for it.
01:18:48.250 - 01:20:04.910, Speaker C: There's something else I wanted to add as well, just through some discussions that we've had with Nick too and other ways that we can work together. And one is using the working groups as a way to disseminate information about EIPS that are actually in their final sort of draft stages and telling members, you know, these EIPS are due to be finalized shortly. It's definitely worth commenting on them or feeding into them because again, there is, I think, that perceived problem that was spoken about earlier where people don't know where to start with it. But if we use the EEA as a vehicle to get people across them, I think that's very relevant because especially like the core EIPS and the networking ones and so on, they're very likely to be referenced in the EA specification down the line as well. So that's one area. And then another area was whether to have an enterprise ring within the actual Ethereum magicians as well. So that again becomes a way of ensuring that the information flows from within the discussions the magicians are having back into the EA too.
01:20:04.910 - 01:20:11.600, Speaker C: So I think those are some other initiatives that we think could have some good traction great as well.
01:20:12.930 - 01:21:12.034, Speaker D: So one other piece of the EEA thing is why haven't we done this yet? And the answer is, well, we haven't done it yet. We don't actually have a process inside the EEA today where we can say this is how the EEA members bring something back into the world. We do have a lot of members who understand that that's a useful thing to do. We have understanding amongst a lot of the people, particularly participating in technical work, where there's stuff that we will do in EEA because, for example, it's not that important to Mainnet. So the Mainnet implementers are not going to be excited enough to do this on the scale that Enterprise users want. They'll develop it in EEA. And some of those pieces we think will be interesting to Mainnet over time.
01:21:12.034 - 01:21:36.410, Speaker D: And we want to work out how do we take those pieces out to Mainnet. How do we have the discussion? Right now our discussions are in a private repo and coming to the public ethereum community and saying, look, we have a solution and you all should just adopt it because you'll love it. Doesn't fit very well with the ethereum philosophy. Right. And doesn't work very well in practice.
01:21:37.470 - 01:22:15.382, Speaker A: I think there's something interesting to note here where if anyone's heard of the Ubuntu and other Linux distro LTS Long Term Support Edition, in some ways, as Charles was talking about timeline, it's actually the reverse ethereum public main net is kind of like LTS. It needs to be the hardened, conservative, completely adversarial environment. So Enterprise likes that because it's like, okay, if it works out there where everybody's beating on it, it'll probably fine.
01:22:15.436 - 01:22:16.594, Speaker D: From very bulletproof.
01:22:16.642 - 01:22:17.842, Speaker A: It's very bulletproof.
01:22:17.906 - 01:22:19.190, Speaker D: It's just getting all the bullets.
01:22:19.270 - 01:22:46.130, Speaker A: So an interesting thing that both DEFINITY and Cosmos said in some of the kickoff meetings of the EA was that one of the main reasons they were looking to launch public networks was because running their consensus for an extended period in a public network is the best possible proof that you can have to show that that would work in a load bearing enterprise context.
01:22:47.430 - 01:22:48.210, Speaker H: Here you go.
01:22:48.280 - 01:23:24.720, Speaker A: All the attackers in the world can go at it and it's still fine. I think it'll work for you. I just want to poll for questions. We're coming up on I think we have about close to a half hour left. Any particular questions that people want to dive into right now? I want to ask if you can, step by step, explain your internal governance process. Because we've heard like, okay, there's a board and there's meetings, but how does it really work? Step by?
01:23:28.610 - 01:23:30.960, Speaker D: Yeah, it's top secret, of course.
01:23:31.650 - 01:23:32.062, Speaker B: Yeah.
01:23:32.116 - 01:23:33.600, Speaker D: Ron, you should probably explain.
01:23:36.930 - 01:24:13.306, Speaker H: We and you asked about ISOs. I come from other standards orgs and I've seen how they operate from Etsy. And then there's a three GPP. Three GPP partnership project, which is more of a they're the guys who actually write the spec and Etsy rubber stamps. It for telecom and that's how you get LTE. And then I've got a lot of years experience in the IEEE and so we're trying to pattern ourselves to be similar to how those kinds of operations work. So I'll share with you, this will be part of what I talk about Friday.
01:24:13.306 - 01:24:41.362, Speaker H: But those organizations are all based upon and you're talking about IPR and patents. And that world is called Rand reasonable and Nondiscriminatory, which means that there's a royalty. The world that I joined here, there isn't any. So it's been real interesting to see how we balance the two. And so the governance, though, is similar to an alliance. So I'm familiar. Like, I don't know if you guys are familiar with the Wi Fi alliance.
01:24:41.362 - 01:25:16.162, Speaker H: Open mobile alliance and there's open connectivity foundation. We're like that. So that gives us a little more freedom than an ISO, like an IEEE, which can't do marketing, but the Wi Fi Alliance or our organization, we could do more. And so we're really not an ISO. And if we did, we'd have far more stringent requirements right, to be an ISO, but we're an alliance. So the governance side, there's a board of directors, and that board of directors hires a management team. And actually, Ethereum Foundation did the same thing.
01:25:16.162 - 01:25:40.742, Speaker H: Aya is an executive director. She works for the Ethereum Foundation. So there's a management team. And so I ended up getting that team. So we have to bring on others. So the membership fees that come in from the EA, it's a nonprofit called 501. So we're not a fundraiser.
01:25:40.742 - 01:26:17.330, Speaker H: We raise a revenue through the management fees, and then we spend it for the betterment of our members. So our job is to support whoever is a member. We drive along the direction that the members want with guidance from the board. So basically, whoever the board hires, the management team and these guys, we're all part of the team. Then we put together our objectives, our roadmap for the spec, what we want to do to create value for membership. And then we try to execute on that. And all we do, we write specs.
01:26:17.330 - 01:27:11.394, Speaker H: And then the one thing we left out is in the world I came from, there's a certification program. So the philosophy that I see us trying to do is harmonization of a global ecosystem. So I'm a personal big fan of doing that. So I'd like to see that kind of model come across so we can deliver. And you guys have a different definition of interoperability. The interoperability that I'm used to is there's a spec that these guys working really hard to deliver. And then we have a certification program, which we will do starting at first part, probably 2020, anyone who develops a client will submit their solution if they want to use our logo to certify, but our spec is freely downloaded.
01:27:11.394 - 01:27:22.810, Speaker H: Anybody can develop. They don't have to be a member of the EA. And we're trying to do some more to create more openness. And Charles and I, I can mention that if you guys are okay with that.
01:27:22.960 - 01:27:24.060, Speaker D: Yeah, I'm good.
01:27:24.510 - 01:28:04.710, Speaker H: So these guys have been pushing me because I come from another world of a closed open organization. But to accommodate the folks in the world of ethereum we're going to open up through the GitHub the opportunity to see the work that's being done in the EA. You don't have to be a member. You can make comments and pass this along even though we're going to do more. We'll promote this and you can make comments and we'll take a look at it. But if somebody want to make a formal contribution they would have to be a member because they vote.
01:28:06.810 - 01:28:31.294, Speaker D: There's two things members have a vote on. The thing as I said, I'll come back to actually the other thing is there's a patent policy. Members, when you contribute something, you've made a commitment that this is not going to be trying to sneak stuff in so that you can get a patent license saying if you put this in you give it to the community for free.
01:28:31.492 - 01:28:38.980, Speaker F: Does that mean that an outside contributor could suggest something and then someone from within the EA with membership can champion it and basically put that on?
01:28:40.150 - 01:28:48.598, Speaker D: That is a potential risk. Right. This is a known that's a risk that happens everywhere. No one's ever solved that.
01:28:48.684 - 01:28:50.274, Speaker H: Yeah, it's not solvable.
01:28:50.322 - 01:28:51.798, Speaker F: No, I don't mean that as a.
01:28:51.804 - 01:28:55.318, Speaker A: Problem, I just mean that right for benefits actually.
01:28:55.404 - 01:28:56.406, Speaker F: Yeah, that's what I'm saying.
01:28:56.508 - 01:29:01.034, Speaker A: Here's someone with a good idea. Well great. If it's a good idea, other people.
01:29:01.232 - 01:29:56.858, Speaker D: The specific risk and this has happened in reality is company A goes and files a patent on something. Person B out in the community says I've got this great idea, you should do this. Company C, which is a member puts that into the spec and all of our implementers go off and implement it. And then company A writes a letter and says since I own the patent, here are my licensing terms because I didn't make any agreement because I wasn't the one who put it there and all the implementers get hit with a few hundred grand worth of legal demands and we do not want that to happen. This is why we said in the magicians thing we would like the EIP process to have more robustness in the way that we've got to try and protect against that situation.
01:29:57.024 - 01:30:01.406, Speaker A: But I mean your ABC, there's no defense on that. In general.
01:30:01.588 - 01:30:10.350, Speaker D: Yeah, there are holes in the system, right. You can fall down but having at least some fence is useful.
01:30:10.930 - 01:30:14.080, Speaker A: I just wanted to ask how voting actually works.
01:30:14.530 - 01:30:31.480, Speaker D: So that was what I was going to say. The voting actually works in the technical group as I said, on the basis that if we have to take a vote, if someone calls for a vote, there's not enough agreement yet and so we're not ready.
01:30:34.730 - 01:30:43.562, Speaker F: So something comes up, somebody wants to add something to the specification either from a special interest group or task force or directly from the client spec working group.
01:30:43.616 - 01:30:44.074, Speaker A: Right.
01:30:44.192 - 01:31:14.318, Speaker F: They raise it as an issue in GitHub and then basically people discuss it and then at some point there's a pull request to the specification, people comment on it, and then during these calls that happen twice a week, every week, every week, basically. And it rotates on time zones. People basically discuss the proposal. There's an opportunity for questions. And basically, if people have any formal.
01:31:14.414 - 01:31:37.770, Speaker D: Agenda that goes out, you've got a few days to check what's being actually proposed for agreement. You can say no. Stop. And that means it's like, yeah, we haven't got there yet. We will go back to it. Any member can participate in any group. So if you join up, you can be in all the sigs you want, you can be in all the working groups.
01:31:37.770 - 01:31:42.320, Speaker D: Once you're in, you're in wherever you want to be in.
01:31:42.930 - 01:31:51.630, Speaker F: And that call is basically the final opportunity for anyone to raise any final blocking objections. And if there is a blocking objection, it's dealt with accordingly.
01:31:52.130 - 01:32:26.650, Speaker D: Well, so in the formal governance model, the spec still has to go through the board, right? The board could say, no wait, this is crazy in practice. The board has then got to go and face the members and say, why did we throw away the work that you guys did? So they've got to have actually a decent answer that says, because it was crazy. We have not exercised that process because fortunately, we haven't yet done anything that stupid. I hope we don't.
01:32:27.230 - 01:32:52.020, Speaker B: So this is what I wanted to add is that I believe there is a formal voting process. The reason Charles is not describing it is because we don't ever intend to use it. It has not been used. We're basically working very hard not to actually ever get to such a process. Okay, so yes, there is one, but that is not how the group is operating on a day to day basis at all.
01:32:55.270 - 01:33:08.550, Speaker D: We will have straw polls and we will test whether we've got consensus. But if we haven't got consensus, we don't do stuff, right, which is a higher bar than a vote. So we don't need the voting process because we already do something that's tougher.
01:33:09.210 - 01:33:10.566, Speaker G: So you don't do humming.
01:33:10.678 - 01:33:11.050, Speaker D: Sorry?
01:33:11.120 - 01:33:12.998, Speaker G: You don't do humming then we don't.
01:33:13.014 - 01:34:07.130, Speaker D: Do humming because it doesn't work very well over email and it's kind of hard to hum on GitHub, but we do do thumbs up on GitHub comments. The consensus test is first, are there people actually are supporting something because it's not enough to say I got a proposal and no one looked at it and so it went in. People have to be supporting this thing and agreeing, and then you check whether no, no, stop. The I wanted to point out a specific issue so we could see how that would work in practice between EIPS and EA, how they would participate on the EA spec. We had an issue up and says we should support Whisper. The witcher replied, there's no spec for Whisper. So how would you go about working together to have a spec for Whisper?
01:34:08.110 - 01:34:41.080, Speaker A: How would that look like? I'm just going to redirect a little bit on this is the way that it is phrased. It sounds like there is an EEA, which is a true statement because it's an entity and an Ethereum, except there's no an Ethereum. So that's the tricky part in this. Does anyone want to talk about how that might look like from or perhaps the EEA has some questions for some assembled ethereum individuals of how that might happen.
01:34:42.010 - 01:35:49.254, Speaker C: Specifically. Actually with Whisper and Dev p to P, I think they're good points to bring up. Just because where we are in the EA anyway, is that we use the term clients should implement Whisper support. It's not essential to actually run a client and run a network, but at the same time it's kind of a standard that's been established within the public ethereum ecosystem. And what we do around the actual reference points for the implementation, it tends to be pointing back to the relevant Wiki pages or EIPS potentially, but it's really digging around to see what we can find that already exists that's kind of closest to a specification. So sure, in an ideal world it would be that if there wasn't something we'd be able to write something or someone would, but in practical terms it just takes up too much time. So what we find is that we're linking to a number of different sources.
01:35:49.254 - 01:36:25.926, Speaker C: For instance, as well with the V two of the spec, we now specify the eight different pre compiles that clients need to support. Those eight pre compiles are defined in the Ethereum yellow paper and so the spec actually points to the section in the yellow paper there. So it's really about us aggregating the best sources we can find and then referencing them there. Now with dev p to p. This is something else that we want to have as a must in the spec, because there are other p to p technologies and Ethereum 2.0 is obviously looking at lib p to p. But realistically, for 1.0
01:36:25.926 - 01:36:53.270, Speaker C: clients, that's really the sensible mechanism to use, and it's the most tried and tested right now. We don't really have the definitive enough version of it for that and so we're again digging around but as each case comes along, really we're just looking out there to see what there is that we can point us the reference, but it's not certainly not foolproof.
01:36:53.450 - 01:37:07.240, Speaker D: So I said before, the short answer is we don't have a process for this yet and we can't force any more than this open ethereum world can force gift to do something.
01:37:08.730 - 01:37:11.720, Speaker B: We can't say that again, I didn't understand what you just said there.
01:37:12.570 - 01:37:15.238, Speaker D: You can't force guest to do something.
01:37:15.324 - 01:37:18.890, Speaker B: Right no, we're speaking to internally at EEA.
01:37:19.390 - 01:37:33.230, Speaker D: We have the same situation. We can't force our members to do something so we don't have a policing mechanism. We're aware that we would like to have a better spec for Whisper.
01:37:33.810 - 01:37:36.138, Speaker A: Has that been signaled publicly anywhere?
01:37:36.314 - 01:38:07.640, Speaker D: It has not been signaled publicly yet because we don't have a process for doing that either. But coming here is the beginning of that is part of how do we work out that process? And one of the key pieces is how do we build a process in EEA that although there's no you guys, we're all you guys, and we are you guys too, how do we make that work in practice in a way that is useful to the outside EEA world? Because.
01:38:09.370 - 01:38:11.586, Speaker B: How do you do things like form new working groups?
01:38:11.618 - 01:38:12.280, Speaker H: At the.
01:38:14.010 - 01:38:45.118, Speaker F: Was. There was originally a process for there was a Governance Committee, and there was a form you'd fill out for a kind of working group you wanted to create. It would get submitted to the Governance Committee. We'd take a look at it, make edits, pass it back and say, this scope is too large, or it's not clear what industry you're doing. And then it would get basically approved, and then it would get into practice. Right now, it's basically, whether it's a SIG or task force, same sort of kind of document and scope sort of thing. But it's basically just approved by Ron, the executive director, and the board.
01:38:45.224 - 01:38:53.190, Speaker B: Does the Governance Committee still convene? Does it still exist? Maybe your first step is to spawn the Governance Committee.
01:38:54.970 - 01:39:11.146, Speaker D: The formal mechanism is that the board approves this, right? The board approves a group in practice for a lot of the stuff. They delegate that job to Ron, and they say, you have a look at it, approve it or not. If people scream, they'll scream to the board, and the board will come back.
01:39:11.168 - 01:39:26.178, Speaker B: And just you were saying it was amorphous. You were saying it's amorphous. But then I hear that there was a Governance Committee, and then there's potentially even something even more clearly like leading leadership. Yeah, it doesn't seem so amorphous to me.
01:39:26.264 - 01:39:48.422, Speaker D: It's not so amorphous. The point I was actually making is that outside ethereum is kind of amorphous. Outside Enterprise ethereum. Okay. That the rest of this world, as Boris said, doesn't have a formal shape. We can't go to the ethereum and talk to them as Enterprise alliance comes.
01:39:48.476 - 01:40:13.438, Speaker B: I mean, the thing is, you're saying if internally inside the EEA, you can say, well, you can come to consensus, you can make a decision, however way you do it, that we would like to collaborate on advancing Whisper standard. I'm sure that you can get the Whisper devs together in a ring or just independent of magicians. Sure, you can make that happen.
01:40:13.524 - 01:40:16.738, Speaker D: We can and we should. And we need to figure out how.
01:40:16.904 - 01:40:17.890, Speaker H: Let me add to that.
01:40:17.960 - 01:40:18.978, Speaker B: Trying to get this.
01:40:19.144 - 01:41:04.430, Speaker H: I really want to inculcate. We're a member driven organization. The members rule in our organization. Our job is to administer and help facilitate the direction that the members want board members at the highest level, they can vote or say yes or no, but I can tell you they're not that involved on the day to day operations. So how we're set up for establishing a working group or anything, at least I encourage the members to approach. They could approach any one of us and say, and this happens all the time, particularly in our special interest groups. Or it could be what you just talked about, any kind of work item, if it was a work item.
01:41:04.430 - 01:41:26.006, Speaker H: So we just talked about it. So I'll give you real stories. We talked about a testnet. So we just met yesterday and we decided we should form the best way to do it is a testnet working group. And then what we'll do is they'll write up a proposal and it's the members who do this. So to what you said, it's ideal. That's the right way it should be done.
01:41:26.006 - 01:41:32.954, Speaker H: The members all get together, write up a proposal, and then somebody's got a champion. It, I think, same thing that you.
01:41:33.072 - 01:41:45.998, Speaker B: Are there, I guess, potential champions that would I mean, who do you see in this group of members that would find it most interesting to collaborate with the greater Ethereum community?
01:41:46.084 - 01:42:11.240, Speaker A: Let me just redirect a little bit because I think I want to use the flip your language back at you because I think I've discovered the key to this. So what I heard Connor say is, yeah, we kind of cobbled together some Wiki pages because there was no whisper spec. And same for dev P to P. So does that mean there is no work item that directs EEA staff to make a better spec?
01:42:12.330 - 01:42:16.870, Speaker D: Yeah, EEA staff don't make the specs. Right.
01:42:17.020 - 01:42:17.778, Speaker A: Okay.
01:42:17.964 - 01:42:19.660, Speaker D: There's not that many of them.
01:42:24.430 - 01:42:27.306, Speaker A: As I have described it. Is that the correct language to use?
01:42:27.408 - 01:42:45.090, Speaker D: It's good enough. Okay. We can go to the members and say, and your question is spot on. It's like, who is going to be putting up the effort to define whisper? And the short answer is, until we've put the question and got the answers.
01:42:45.910 - 01:42:48.462, Speaker A: Propose a work item. Is that the correct language?
01:42:48.606 - 01:42:50.158, Speaker D: We would propose a work item.
01:42:50.254 - 01:42:51.470, Speaker A: Is the we a member?
01:42:51.550 - 01:42:55.278, Speaker D: Sorry? Someone in Enterprise ethereum alliance.
01:42:55.374 - 01:42:55.902, Speaker A: A member?
01:42:55.966 - 01:43:35.010, Speaker D: A member or a staff member would propose that we do some work on this. And there are two things that we could do. One is we could propose to set up a working group inside Enterprise Ethereum Alliance where we set up this group. And following our current process, we come along with the whisper spec and it's all done. We say, look, aren't we wonderful? Here you are. Another thing we could do is say, well, actually, this is a thing that's. Been developed already in public with the Ethereum philosophy.
01:43:35.010 - 01:44:23.102, Speaker D: And maybe we want to do it using the EIP process. Maybe we want to do it just by talking to a bunch of developers. Probably I in person would actually write email to the members list and say, hey, members, or hey, tech Spec Working Group members. We all know that it is a problem that there's no good definition of whisper rather than standing up an EEA Working Group inside EEA, because this is a public piece of the infrastructure. We, the people who want this thing, should go into the public space where it's actually developed and do the work there.
01:44:23.236 - 01:44:27.710, Speaker A: I think in general, I would encourage you all to write this down publicly.
01:44:27.870 - 01:44:30.066, Speaker H: We can do this the API for.
01:44:30.088 - 01:44:34.834, Speaker A: The EEA so that those of the outside know how it works. Yeah.
01:44:34.872 - 01:45:25.838, Speaker H: I'm going to add one other thing that we're doing now, and it's called an Associate Member Program for other organizations or entities. So I've discussed with Aya to have it's called an Associate and we want this to happen. The Ethereum Foundation, the management team, can be part of the EA and be a member. We talked to Bob yesterday and Nick about doing the same thing with the Ethereum Magician. So I'm picking up, how do you get something externally to be able to have even more visibility and participate and contribute? So we're an open organization, and so we're trying to encourage more of that. So that's another way. But I can tell you because I get the emails, if I had anyone say, oh, why are you guys not doing whisper? You don't have to be a member.
01:45:25.838 - 01:45:40.730, Speaker H: And if I would bring it to these guys and say, this is how it works because I'm not the hardcore developer, I would take it to these guys. And if they said, this is something we should do, you don't have to be a member, you could send it in our way.
01:45:40.880 - 01:45:50.570, Speaker D: So then we do this buck passing thing where I pass the buck to Connor and Connor passes it to Antoine. You know about this. Go do it.
01:45:50.720 - 01:45:51.850, Speaker B: Hey, Boris.
01:45:52.670 - 01:45:53.930, Speaker A: Yeah, please. Yeah.
01:45:54.000 - 01:46:02.126, Speaker D: I want to talk more of a macro philosophical level for EEA. You're talking about the majority of members. Are the majority of the members kind.
01:46:02.148 - 01:46:04.994, Speaker A: Of enterprise corporations, governments, or is there.
01:46:05.032 - 01:46:07.090, Speaker D: Like a small companies?
01:46:07.240 - 01:46:07.986, Speaker A: Sure.
01:46:08.168 - 01:46:20.840, Speaker D: The question I do have is obviously EA kind of started out through not the Ethereum Foundation, but the Ethereum community, I guess. Right. To give a say towards the enterprise and government community.
01:46:21.690 - 01:46:25.186, Speaker A: Where does EA currently sit in evangelizing.
01:46:25.218 - 01:46:31.766, Speaker D: The ethos and the philosophy of Ethereum? Where does the line sit between the community and enterprise?
01:46:31.878 - 01:46:34.406, Speaker A: And has the enterprise and the governments.
01:46:34.438 - 01:46:38.554, Speaker D: Resonated at any level of the philosophy? Or they just kind of want their.
01:46:38.592 - 01:46:40.438, Speaker A: Stack, they want their kind of usable.
01:46:40.534 - 01:46:43.120, Speaker D: Interface and usable products and then kind of leave?
01:46:45.090 - 01:47:11.346, Speaker F: I'll just speak to. So I don't do this as much. I still participate in the EEA from a kind of like volunteer organizing perspective, trying to help. Basically I hop into certain groups and encourage people to share more, encourage people to work with each other more and all these other things just the social catalyst. That doesn't happen when you just have structures. It's kind of like okay, what do we want to do together? What do we want to play with? It to the Ethos thing. I think a lot of organizations so also a little bit of background.
01:47:11.346 - 01:48:11.206, Speaker F: Prior to this, I was at a think tank where I was working with groups like procter, gamble, walmart, IBM, cisco, intuit whole host of groups on what they thought the future of blockchain technology in general would be, and getting them together with entrepreneurs who were actually building this stuff and devs who were even we would bring in people who would consider themselves anarchists. Yeah, I think that most organizations have had trouble kind of envisioning anything other than just kind of like a small consortium or accomplishing their immediate needs from an operational standpoint. But I think over the course of a number of months, we started to see groups say, like, oh, no, wait a second. There is this broader public ethereum vision. And they're starting to realize they're coming off of a lot of isolated island private nets to say, there's so much more Usability, so much more of a community, so many more developer tools. And this opportunity to actually participate with other people and share their assets with other groups who can use them. Pull data, pull information and things from these groups.
01:48:11.206 - 01:48:41.122, Speaker F: They want to play with the broader public ethereum ecosystem. And that's why I think it's really important and we're trying to groups like me as an individual, I've been trying to push people to say you should be engaged in sidechain research. You should be engaged in actually working. On all these technologies for PublicNet because it both achieves what you want as an enterprise from a privacy and sort of standpoint, but also enables you to actually join everyone else on this kind of broader mission of big Web three.
01:48:41.256 - 01:49:40.082, Speaker I: Just continue the question is there a way because I know that there are a lot of working groups and they are doing something. Is there a way to get a holistic overview, what other groups are doing, where to get this information? Because okay, honestly, I'm subscribed on all these newsletters, they provide a lot of controversial information. It is not possible to get any understanding of what's going on and basically I can easily get what not easily, but easy year to get what community is doing. But for EA is totally like here there and you have to look to the news of the particular corporations, what are they doing? Is there any way to get that structural? Because for the whole broader ethereum community it would be really nice to understand where actually those enterprises are investing, what are they doing, what they're interested in, because there are some fragmental specifications, but not like the roadmap is not clear at all, and especially between the working groups.
01:49:40.146 - 01:49:40.760, Speaker A: Yeah.
01:49:42.170 - 01:49:45.986, Speaker F: Again, speaking as a person and as a member of consensus.
01:49:46.098 - 01:49:47.320, Speaker A: As a person.
01:49:49.390 - 01:50:05.062, Speaker F: I made the joke earlier corporations are people, too, which was pretty funny in the context. But I felt like EEA has served an immediate kind of functional need for organizations to get together and talk and to form specifications for them to start using clients.
01:50:05.126 - 01:50:05.402, Speaker A: Right.
01:50:05.456 - 01:50:35.478, Speaker F: This is very kind of like bare bones stuff, and a lot of that has been they needed to talk to other enterprises. But I think it's very clear that in order to get the most value out of why they got into blockchain technology to begin with, to start integrating with the rest of the community, they need to have a cohesive or sort of shared voice that's available to others. And for them to be able to call out for help, for them to be able to express what they have in abundance that they can share with the rest of the community, I think it's not just a marketing thing. It's not just a snippet share thing. So I think that's something that we want to develop and actually help.
01:50:35.564 - 01:51:12.020, Speaker D: Foster, I want to answer your question. The short answer is not really. There's a lot of stuff there. You can get a sense of the shape of things. So you can see that there are sigs and there's a list of sigs. If you want to find out what's happening in those sigs, you sort of got to drink from the fire hose, because if you're not drinking that stream of fire hose, you don't have a real overview. And we don't have the bandwidth of people who are drinking all the fire hoses and distilling it down.
01:51:12.020 - 01:51:31.420, Speaker D: And that's kind of unfortunate. It's probably also fair to say that our systems, our website and so on are not that good. And we know that improving that and making it easier to find stuff and making it clearer is a kind of important.
01:51:37.310 - 01:51:38.060, Speaker I: Part.
01:51:38.670 - 01:52:00.334, Speaker F: Yeah. You know what's kind of funny is we have two minutes, but Boris has kind of get driven ego death in me. He's like, there is no it's like this hardcore existential journey. It's the same, honestly, with enterprises. Enterprises have different goals, different needs, and they're just starting to form that. So there is no enterprise goal.
01:52:00.462 - 01:52:05.762, Speaker D: There's no grand plan here. Right. There just isn't a grand plan because there's not like, a bunch of people.
01:52:05.816 - 01:52:32.006, Speaker A: They're building a Death Star. We can finally reveal it. The EA is building a Death Star on ethereum. Thank you very much. Unknown, not planned that we were so effective. One of the things that came out of the discussions earlier with ETH Magicians is that Alex and Charles are going to go off and try and source a list of likely items that may be submitted to public Ethereum. And I think that's the next deliverable.
01:52:32.006 - 01:53:13.450, Speaker A: We say, I want to go over other things that we surfaced. What we said here in the session is we would love to know what the API for the EEA is. Let me state it correctly. A URL that we can point to that if someone asks, we say go here, and that's the latest snapshot of it. There's a desire to do more work together. I think to go back to what you said about the philosophy of Ethereum that is more likely to happen on the outside. I think, Alex, as an individual is interested in pulling from some of that and bringing it inside and vice versa.
01:53:13.450 - 01:54:01.642, Speaker A: I almost think that what you brought up before about an enterprise circle may not be a correct thing. I think interested people going into the areas that they're interested in. One of the things that I was also surfaced that I checked and we forgot to mention is that Snarks or ZK snarks is there is some stuff being worked on from an enterprise perspective that could very much work on Mainnet. And I may have seen an announcement, I don't know if it was an EA member or not that released something on Mainnet. And a lot of this is as the EA evolves its processes, that on the public side, we get clearer of resources and everything else. So I want to thank Jamie for putting this slide deck together. It's actually in a repo that can be forked and cloned and you put it under an open license, I think.
01:54:01.642 - 01:54:26.954, Speaker A: Sure. And so that EEP process is something I hope to have this same presentation, either the EEA only version or the EEP version keep happening and keep being distributed. This forced this was the shelling point of vaguely getting our act together on some of these things. All of the wees. Right, Alex. And there's sort of a commitment between a lot of individuals to keep more working together. Watch ETH magicians.
01:54:26.954 - 01:54:47.414, Speaker A: I'll tweet about it, but Ethmagicians.org is a place that you can find out more. I've added an EEA tag, so anyone can tag a topic. And so there'll be one link where anything that's related to the EEA actually will show up on all the new items. That is it. I want to say thank you to everyone for participating in a very open way.
01:54:47.612 - 01:54:52.102, Speaker F: Thank you. Thank you so much to the magicians and the broader community for inviting us to learn more.
01:54:52.156 - 01:54:52.420, Speaker A: Thank you.
