00:00:13.370 - 00:00:23.040, Speaker A: We're here to talk about designing before you build products. And just before we kick off, who here is a designer? Just show our hands.
00:00:24.450 - 00:00:25.702, Speaker B: Let that part.
00:00:25.836 - 00:00:38.130, Speaker A: There was more. Who here has worked with a designer? Okay, cool. That's pretty much everyone. So everyone knows the experience. That's pretty good to know. Cool. My name's Charlie.
00:00:38.130 - 00:01:12.820, Speaker A: I'm going to talk about the current state of design and what's currently happening with blockchain applications and design. And awkwardly, Andre gets to talk about a exciting new future with kind of the better job here. These are some of the companies that we've worked with, but this show is mainly about you guys. It's not about us. And the reason you're the best is because you're building pretty incredible as developers technical infrastructure. I don't really understand this, but it's pretty cool. And there's numbers which are really starting to show through at the same time, too.
00:01:12.820 - 00:01:51.530, Speaker A: And with that infrastructure, there's also techniques and methodologies from Web 2.0, which means that we can really quickly build quite amazing products on top of it. And we all know that we can build things faster, better and cheaper. Companies like Spotify have competition with Google, Amazon and Apple, and they're building significantly better products. And our competition is even slower. And maybe someone in the room might want to be doing that. But the only thing is that my expectations of where we want to be are kind of a linear scale of where we should be going a little bit faster.
00:01:51.530 - 00:02:29.740, Speaker A: But in reality, we're probably somewhere underneath that. And I'm not very impressed with where products are at the moment. The reality is that when you have technology innovation, it's an exponential curve. And hopefully we're going to go end up somewhere up there, and we don't know where that is. If we looked at the App Store launch, we had no idea that apps like Uber and Airbnb would be the ones that would be most successful. So these are the time it took these companies to get to a $1 billion market cap. So generally what happens with technology is things are just getting faster and faster and faster, and that's when disruption comes in.
00:02:29.740 - 00:03:10.618, Speaker A: So why is disruption not happening? Applications in fintech or just Web 2.0 have really great user experience and they're a pleasure to use, but at the same time, they're not that technology. Innovative daily users of apps kind of speaks for itself, especially when you put it against traditional fintech apps. 6 million users of Robin Hood, compared to 20,000 daily users of Ethereum, dapps. And if we do a Google search for best apps, things look incredibly exciting. Do a Google search for dapps. We're asking who is still alive? And I can kind of understand why.
00:03:10.618 - 00:03:56.694, Speaker A: Whether the question of losing a user's photos on social media is actually more valuable compared to losing somebody's money is a conversation for another day. But you are building things which have smart contracts, which have value, which you don't want to lose. So this methodology doesn't necessarily work. And what this means is that traditionally, to get a product out or to validate an idea, you go from the idea, you build, you launch, you get data, and you validate if it works. But in Web 3.0, that process is significantly longer. You got to think about token economics, wallets integration, smart contracts, security, governance, audits, testnet list could go on for quite a long time before you actually launch a product.
00:03:56.694 - 00:04:14.750, Speaker A: Then, only then do you get the data, and only then do you validate if the idea works. And, yeah, blockchain starts to look a bit more like this. We've got a process which takes an idea, gets data, and validates it as quick as possible. And I'll hand it to Andre.
00:04:15.490 - 00:04:36.802, Speaker B: Hello, I'm Andre, nice to meet you. So, yeah, let me go through a couple of tools and things that we've discovered or that we found to make this happen. Who knows? Oh, yeah, this could be you. Who knows this guy? Okay, you know him? Do you know him personally? Yeah, no, not personally.
00:04:36.866 - 00:04:37.238, Speaker A: Okay.
00:04:37.324 - 00:05:11.102, Speaker B: He's very nice. He wrote this book. Who knows this book? Okay, good, nice. Then I don't have to. Well, this is basically the fundamentals of what, or like the beginning of what I'm going to talk about in a minute, because that's where, I guess, all the process started that we have developed by now. It came out in 2016, so actually, only three years ago, and we've been working exclusively in design sprints to kind of work on them and make them as efficient as possible. And this is basically what it's about.
00:05:11.102 - 00:06:03.780, Speaker B: It's shortcutting all this process into just having an idea or maybe not even having an idea and getting real life data before you actually have to implement stuff. So it's like super rapid process, very important slide. And it's basically just a structure for innovation in any type of industry, for any type of product. It's broken down in the most essential steps that any product or any product development should have, which is ideation, which is like map. So basically, the whole team aligns on a concept or on idea, then everybody sketches out what it's actually supposed to be. Then you decide on what you want to build. You build a prototype, and then you test the prototype, and then you have the whole cycle, and you can do it again and again, or you just also develop it at some point.
00:06:03.780 - 00:07:12.594, Speaker B: And all of this leads to basically solving a lot of questions. So is the product actually understandable for people? This is a thing that we built for consensus that got presented yesterday, and we needed to figure out whether people understand the whole transition from ETH, from the current state of EtH phase zero to phase two, and will actually invest in staking into the e 2.0 platform to figure out whether you're developing the right thing at all. This is Hummingbot. They only had a CLI interface, a command line interface, so they knew that they're creating bots that people could run to get them best traits, but they didn't know whether people would actually need a proper interface and play around with it. They ended up not building it because they reprioritized. But they learned that the actual demand exists, or molecule is probably one of the most complicated and complex systems that we've worked on, which is basically revolutionizing the entire medical industry, which is huge task.
00:07:12.594 - 00:07:39.760, Speaker B: It's going to take a lot of years, but we built it. We figured out how it could work. We found out that it's going to take a lot of time. And now they kind of know exactly the roadmap, or at least more or less the roadmap of which tests that they should make in order to make this a reality soon. And, yeah, also finding the best way to actually market a product. You can do this, actually. Okay.
00:07:39.760 - 00:08:06.680, Speaker B: Some of you already know the book. For those who don't know the book, how long do you think that all of these products took? Approximately. So, all of them took approximately the same amount of time as a product that I've just shown, and it's like a prototype that's like several screens. I don't know if you would say, like, any time scale from 1 hour to, I don't know, a year.
00:08:07.950 - 00:08:08.794, Speaker A: Six months.
00:08:08.912 - 00:08:24.282, Speaker B: Six months. Three months. Three months. Okay. Who's less? What did you say for Tennessee? What did you say?
00:08:24.336 - 00:08:24.998, Speaker A: One week.
00:08:25.104 - 00:08:40.530, Speaker B: One week. Okay. Did you read the book? Okay. You want something? Here. It's a sailor moon candy. I found it. Congratulations.
00:08:40.530 - 00:09:38.070, Speaker B: Yeah. So basically, all of these things take only one week. After one week, you have a lot of data, and it's actually so much data that a lot of teams don't really know how to actually use that because it's so much. And basically, by the end of the week, we normally start off either another iteration week, so we figure out exactly what needs to be built, and by then they are able to basically ship it or, like, implement and ship it, or they find out exactly what they need to do. It's a super short amount of time. The only problem is, or was, I would say Jake wrote this book, and he was like, this is only an office structure because you need to have people in a room. You need to put them all together, so they work in a closed room, so they understand the social interactions among each other, so they understand how everybody works.
00:09:38.070 - 00:09:56.410, Speaker B: And he was like, andre, this is not going to work remotely. I'm like, let me. Yeah. Because the whole blockchain industry is completely split up. We are decentralized. We are decentralized by nature, and we have to figure out a way how to connect those. And that's when I met Charlie.
00:09:57.630 - 00:10:39.378, Speaker A: Yeah. So I live in Ibiza, in Spain, and I'm always a bit nervous saying that because the typical image that comes to people's heads is something like that. I haven't been to one of these in about two years. Just to give you an idea, the real reason I live there is because it's absolutely beautiful. I live outdoors, and it's all about prioritizing, for me, health and being outdoors and being fit. Now, the problem with that is that skills in ethereum are spread out around the world like the best developer, the best technology isn't on the world's party capital. Last year, I met Andre at Devcon, and he said, hey, I've got a process which takes creative work, and you can do it remotely.
00:10:39.378 - 00:10:57.710, Speaker A: I was a bit skeptical. I used to work for a startup, and we tried to work remotely. What we found is that the constant pivots, the constant changes you had to make, we had to talk across time zones. It just didn't work. You couldn't move fast enough to actually disrupt the competition. Back to Andrea.
00:11:01.010 - 00:12:00.180, Speaker B: Oh, yeah, we wanted to work with a lot of things remotely. Going back to this process is basically split up in five days. I mean, kind of makes sense by what you know by now. So every single day in the book is one of these steps. And that was the original design sprint from 2016, which is already pretty impressive, but every day takes a long time. So what we did was basically, like, in the last three years, shortened it down to four days, split it up, split the collaborative sessions into approximately three hour sessions per bit. So it would be like deciding on what you want to build in like about 3 hours, sketching out individual solutions in about 2 hours together, deciding on which of these elements make the most sense, and then storyboard it all together and pack the best ideas into one thing so that all of these things that actually need to happen collaboratively were bashed into much, much shorter amounts of time.
00:12:00.180 - 00:12:48.274, Speaker B: And the other ones we could just do alone, like prototyping, we can just sit down, or like Charlie can sit down for a day and just do it, back it all up. User testing, you can also do it in one day like one person. But the point is that all of this structure made it possible to kind of split it up and make it usable across all the different time zones. So this is actually a project that was actually the calculator, I think, with different, completely different time zones. And it just works because people get up at different times. Obviously there's a couple of sacrifices, so some people might want to get up earlier or work until a little bit later. But we are in a world that's evolving and we're redefining the way we work and what is it? Nine to five jobs are not a sustainable thing anyway.
00:12:48.274 - 00:13:13.098, Speaker B: So I think this is a progression towards that. In an area, in a creative area, which is normally unquantifiable, but we can make it work if we apply the right structure. Yeah, and we already have the basic guidelines for that. We already have the infrastructure. Obviously this is just a joke, but these are the tools. The main tools already exist, and they're super user friendly. They work.
00:13:13.098 - 00:13:29.280, Speaker B: Just combine them together to replace the natural office interactions with remote collaboration tools and you have it. You can work for on whatever you like in a super short amount of time. So.
00:13:31.090 - 00:13:55.560, Speaker A: We can work remotely, but how do we get the right people solving problems? And ethereum in particular, I feel lacks expertise. Cross section. I'm glad to see this in designers in the room. I know that straight after this, Joe Lubin's doing a talk downstairs called when 1 million devs. That's pretty cool. I really want that to happen. But we also need 1 million devs and 1 million other people as well, different skills to come in.
00:13:55.560 - 00:14:36.534, Speaker A: And I can understand it with designers, because what typically happens in the relationship is you understand the technical problem, but you need somebody with design skills, so you give them a brief and they go away with their skills to design something like an interface or a solution, and the end result is they come back with something and you have to give them this, which is feedback. And nobody really enjoys that process. It's not very nice. And I think the primary reason that happens is because designers tend to try and solve a problem they don't really understand. The people who actually understand it are the developers themselves. So the design spirit process is collaborative. Everybody who comes into the process, they design the solutions together.
00:14:36.534 - 00:14:42.280, Speaker A: So when the designer brings in their skills, they're only bringing in their specific skills, not stuff that they don't understand.
00:14:45.610 - 00:15:06.080, Speaker B: And the basic structure is actually just this. You have a team of people who all at the same time with zero discussion. It's actually kind of counterintuitive. So you don't actually talk in all this process. So you only write down things. This is like the first bit. Everybody writes their own thoughts and ideas into one space.
00:15:06.080 - 00:15:41.340, Speaker B: Then you move over, and that's like time pressure, like time box. Very important. Everybody votes on the things that they think are the best. So almost like you can imagine that, like a dow or something, like a mini dow. Everybody suggests ideas, and then everybody, at the same time votes on them. And then you prioritize, because democratically, you understand what's the best feeling in the room. And if most people think that one idea or concept or solution is the most important one to go for, then that's probably the best to go for for now.
00:15:41.340 - 00:16:33.350, Speaker B: And so you can do that, obviously, with text or with solutions to problems that you write out, but you can also do that with sketches. So this is actually from the summingbot example, where everybody individually, and that was project manager, CEO, CTO us, drew a concept on paper, what the interface should look like our own version from our personal perspective. And I know this is super, super small, but there's dots, like, little red dots on it to vote on the most important ideas. And all of these heat map leads to us creating this storyboard based on all the best ideas from this cast here. They're a bit more up close. I don't know if you can see them, but there's, like, a lot of tiny red dots scattered across. So there's a lot of different roles that get combined from everybody's perspective.
00:16:33.350 - 00:17:17.090, Speaker B: So you only get the most valuable information for the best goal that everybody's working for from the experts. And then you're basically finished with a storyboard. Okay, so that's on the bottom. Then you finished with a storyboard. That's precisely, exactly what you want to build, because it has exactly the words, exactly the buttons, exactly the interface you would like to build. So there's no back and forth between you and the designer or between the designer and product manager, or you don't go a linear process anymore, you just do it all together and everything is super clear. So that we can just go in and prototype this thing in one day by prioritizing the most important things and just build it in Figma.
00:17:17.090 - 00:17:44.580, Speaker B: And if we two people who work in Figma even better, then we're faster. We can make it look even prettier. This is an example from Hummingbird, and it looks like their actual interface. This is probably not the biggest work of art, but it's a prototype that looks like the real thing. And if you show that to someone who's never seen that thing before, they'll be like, how do I use that? They'll start clicking around. That's exactly what you want. You want people to believe that's the real thing so they can gather actual valuable data.
00:17:44.580 - 00:17:49.940, Speaker B: And that leads us to the user testing. So that's how basically. Oh, yeah, sorry.
00:17:51.110 - 00:18:26.080, Speaker A: That's cool. So with user testing, it's kind of not done so much. And I can do statements like this which kind of explain why if you're a founder, you kind of think, say, for example, with Blockchain technology, if you asked people what they wanted from their bank, they wouldn't have necessarily come up with, I want an ethereum wallet and I want stablecoins. And that rings true from things like Steve Jobs. It's not the customer's job to know what they want. Problem is that at the moment in this space, we're all just high fiving each other with what we think is cool. Does anybody know what this actually is?
00:18:27.810 - 00:18:30.270, Speaker B: Do not smell freedom.
00:18:34.150 - 00:18:36.130, Speaker A: Who said dodge air freshener?
00:18:36.790 - 00:18:49.380, Speaker B: There you go. Hey, a little bit unfair. Couldn't read it. Enjoy it. Thank you.
00:18:50.650 - 00:19:10.778, Speaker A: To take some of those sports from, like, web. Two point startup. This guy's Paul Graham from Y combinator. What tends to happen in this space is his strategy against, which is big launches actually tends to happen. People go away and build products, they launch it in the space and it actually gets great feedback. Everyone's like, wow, that's so cool. And it starts to get some initial traction in the community.
00:19:10.778 - 00:19:31.460, Speaker A: The problem with that is it never moves outside the community. So what we want to do with user testing is actually ask real people who are going to be the end user what they think and how we can improve and iterate slowly, as slow as possible. And if we don't do that, what we do is we end up building products which have loads of features and we have no idea if users are actually going to love them in the end.
00:19:31.910 - 00:19:51.914, Speaker B: Yeah. So that's what I can see in a lot of products. That's where my attention drop goes first when I see products in this space is that we work on a technology. It's fucking amazing. Yes, we know we can do a lot of different things. Let's just put them all into this app and then like. So what is that then? Frankenstein monster or something.
00:19:51.914 - 00:20:19.394, Speaker B: So with the user testing, you know. Exactly. You can just show all these features that you think are good or not good or whatever you kind of came up with. You show it to them and oh shit, we're almost done. And basically that way you understand what people resonate to and what they don't care at all about. And then you know how to prioritize stuff. This is just a screenshot of how that looks.
00:20:19.394 - 00:20:33.426, Speaker B: It's super easy. Just do it with five people. That's enough. Normally four is also enough. Then you can see already overlaps of what they think about this whole thing. So then you have that so summary. You get unstuck if you're stuck.
00:20:33.426 - 00:20:57.342, Speaker B: You align your team on a common goal. I mean, I know you can also read this. You get actual user feedback. So that's also quite valuable because the only next real step is actually shipping the product. So this is the closest you can get to understanding your target audience. And it's real because they think it's real. And you really quickly learn if that's actually what the people want.
00:20:57.342 - 00:21:20.134, Speaker B: And that's super important before you implement it, before you put a lot of money into it and make it work. So yeah, this is one of the final slides. We basically put together all the tools we need. Or you need. Sorry, all the tools. We found all the books, articles. There's one exercise that you can try which takes an hour.
00:21:20.134 - 00:21:46.282, Speaker B: It's super cool. We use it every single week in our own kind of studio. So it's almost like a retrospective or it was this process that I showed you like the three step one. So basically you come up with problems in a team, you come up with solutions to the problems in the team and then you just delegate. It takes 1 hour, solves all your problems really. And also just a lot of books that are nice. Some articles.
00:21:46.282 - 00:22:04.750, Speaker B: Have a look. Yeah. If you want to get the link, take a photo of that or ask us later. Cool. One more thing. Sorry, I think I have one more. Okay, so this is one more thing that I actually find personally pretty fascinating.
00:22:04.750 - 00:22:26.890, Speaker B: Just going to move me. 1 minute. I'm almost done. So this is one thing that I find very fascinating because I've been working on these things for three years and I know that, I kind of know the structure and I think this can go all pretty much. First of all, obviously we can solve a lot of problems in products. We have this space, we have that problem in the blockchain space that we need to make products really user focused. We need to get expertise to work together on one thing.
00:22:26.890 - 00:23:13.334, Speaker B: So this can be applied to every of your products and make it like really amazing in a very shorter time. But what if we solve problems that are unrelated to product design? We can do exactly the same process. We can think about how we can use a network of different expertise to solve problems that are not actually just building a product, but maybe solving problems with governance. Something that's like not having with a result. It's not an interface or a product, but actually something that's a more fundamental solution to a problem. Or things like creating cures for undiagnosable health diseases. We actually did that two months ago with a team of different experts and had a patient just work on their health as having different people to work on one thing at the same time instead of going from doctor to doctor.
00:23:13.334 - 00:23:37.370, Speaker B: Or maybe at some point we manage to battle climate change. But yeah, either way, whatever your problem is, I think this is one of the most fantastic processes and principles that you should apply to your work. You're all problem solvers. I love you all. You can solve everything remotely and learn report building, and people will love your products too. Bye.
