00:00:23.730 - 00:01:24.574, Speaker A: So hello everyone excited to be here talking today on the patron of Saragosa which is her de Pilar. And I'm Alex Vinas, I'm a marketing manager and cal protocol. And today I'm going to talk to you about how does cow protocol reduce MEB by optimizing transactions through patch auctions. I've broken down the talk into four topics which is the first one MEB, the good, the bad and the ugly. Then what is cow protocol? Then the difference in the mindsets of maximization versus minimization. And lastly, where are we heading? So MEB, the good, the bad and the ugly? Will Ethereum remain under this utopian dream of building decentralized finance for fairness for all the users or will the dystopian side take over? And as always, will the bigger fish eat the smaller fish? So first let's try to define what is MEB. MEB was first coined as minor extractable value but now has been recoined as maximal extractable value.
00:01:24.574 - 00:02:28.562, Speaker A: And maximal extractable value is this hidden power that the block producers have and what this hidden power allows them to do is the ability to arbitrarily, include, exclude or reorder any transaction in the block. Of course this is a bit of a problem because right now with the introduction of MEB boost we're incentivizing the block producers to only care about the maximization of the profits and not care about the overall healthiness of the network. Before block producers no miners only had the source of revenue which was gas fees. But with the introduction of mebgeth and also the boom of DeFi summer then suddenly maximum extractable value became a thing and Ethereum kind of like turned in the wrong direction and starting hurting what makes Ethereum great which was their users. But in reality, where does MEB come from? Now MEB comes from two ways. From either the execution layer and the application layer. In the execution layer it comes from the fact that as we just saw that the block producers have this sort of hidden power to ordain the transactions in their own will.
00:02:28.562 - 00:03:25.910, Speaker A: And basically like as we all know and we've seen data shows that they're constantly doing this. But not only that, it also comes in the application layer because it is important to realize that the different trading mechanisms that you use when interacting in Ethereum will expose you to less or more mev. So be careful out there choosing your trading mechanism when you're executing your trades on Ethereum. Not only that, but it also comes from the fact that we're always going to live in a world that there's going to be difference in prices between the reality that's happening off chain and the reality that's happening on chain. In other words, there's always going to be latency arbitrage kind of like this competition to get the opportunity to buy cheap in either uniswap or whatever and kind of sell at a higher price in a centralized exchange. And lastly, what is truly like a little bit. The nonsense in here is that even though the transactions are truly atomically happening in Ethereum, the prices are not.
00:03:25.910 - 00:04:16.998, Speaker A: We often see that we have blocks that have multiple transactions and they're happening atomically at the same time. But if you kind of look carefully at the data you can see that there's a price disparity with the same token pairs and even in the same token, even in the same trading venue. This is a bit of a big issue in finance because it's very nonsense that the transactions are happening at the same time but the prices are completely different. And now that we know the definition and we know where MEB comes from, let's see what you can do with the power of inserting transactions at your own will. So there are three main forms of attack in mev that are well known. The first one is front running. And basically front running consists of any transaction that has any sort of value such as like a liquidation on our arbitrage will go from I get it, to basically the block producer get it.
00:04:16.998 - 00:05:17.170, Speaker A: And they do that because they have the power to insert the transaction wherever they want. But not only that, the irony is that if I send the transaction to kind of get the liquidation through the mempool, what the block producer will do will replicate the transaction, put their transaction in front of mine. And even like, the ironic thing is that my transaction will also be included after so that they can earn the gas fees that I've paid. And in the end, my transaction gets reverted. Then we have back running. That even though it's kind of notorious that people argue that back running is less harmful in the ecosystem, one can argue that back running is harmful because it is still taking away the opportunity from someone else. And basically this is if you're like a large hedge fund or whale or a big trader and you're doing, let's say, a million dollar trade against a single AMM, you're going to leave the reserve prices of that AMM on balance in comparisons to the other AMMS.
00:05:17.170 - 00:06:35.220, Speaker A: Of course you know you're going to do that because you know what you're doing. That means that your first trade is going to create kind of like an arbitrage opportunity to rebalance the other pools and you can try to sequence the trades in a way that you are the ones that snatch that opportunity. But because you don't have the power to kind of sequence the trades in the order that you want, mainly as soon as your transactions hit the mempool, someone else is going to take that opportunity from you. And lastly, the most famous one, the sandwich attack and the one that is most hurtful to the users and the sandwich attacks happen because in reality you think that you're placing a market order when you're trading on an AMM or an aggregator. But essentially what you're doing is setting a limit order that is controlled by your slippage tolerance. And this is how the block producers take advantage from you because what they do is basically insert a transaction in front of yours that pushes the price up to your maximal slippage dollars pain point, then insert your transaction so it pushed the price even higher to later on execute another transaction in the opposite direction. And what this finalizes is that the miner has been able to make profit at your cost by basically buying low and selling high at the expense of you getting a very bad price.
00:06:35.220 - 00:07:37.182, Speaker A: But how damaging is MEB? Well, according to Eganfi website, which is a website specialized in DeFi and MEB analytics, throughout the last month of September in the last 30 days, 90% of the top ten exploited contracts are either AMM or aggregators. Not only that, but ten out of the 13 billions that MEB volume has moved in September have been used to perform sandwich attacks. And as we just saw, this is the most hurtful attack for the users because it gives them the worst price. And lastly, chain sign analytics, using the data from the flashboard team, has estimated that since 2020 there's been a total of $1.3 billion of mev extraction from the users. Now, why are these numbers a problem? These numbers are a problem. Because if Ethereum truly wants to become the world computer due to its ability to settle transactions in a decentralized, open and atomic manner, we need to try to fix mev.
00:07:37.182 - 00:08:53.530, Speaker A: And we need to try to fix mev because I think we all want to and believe that Ethereum will indeed become the world computer and absorb all the transaction value of the world. And then if that happens, the logical thing to say is that at the current stage of things, also MEB is going to increase. And if MEB increase, this is going to poke the regulators and basically the regulators are going to come in and kind of try to dictate how we should operate the market. We've already seen that in several reports from the bank of International Settlements how they try to establish whether front running or sandwiching is illegal activity. Or even more particularly in Europe where I'm from, we can already see this in the Mika regulation that the current forms of front running or sandwich attacks will be deemed illegal under the ESMA market structures. This of course is a problem because I think we all don't want to have the regulators to come in and dictate how the market should run, but rather we want to just build technical solutions that address this problem so that the regulator doesn't have to step in and kind of ruin the party. So what is cub protocol? Cub Protocol is the trading mechanism that underpins, hopefully now the famous UI culture of exchange.
00:08:53.530 - 00:10:01.940, Speaker A: And it's similar to an AMM or an aggregator, but with a fundamental small difference that we add a theme batching layer on top of them that allows us to execute sorry, that allows us to aggregate multiple trades together and execute them in a single ethereum transaction. Not only Batching allow us to do this sort of aggregation for transactions, but it also allows us to give structurally better prices via cows which stands for coincidence of ones. And this gives better prices because if the counter opposite orders are in the same batch, we can match the user peer to peer and therefore they don't need to go to the liquidity pool and thus save on transaction and transaction costs, on liquidity provider fees and on price impacts. Batching also allows us to be the sort of MetaDex aggregator similar to Skyscanner. We can query all the AMMS or all the liquidity on chain as well all the other aggregators. So that in a sense your kind of baseline price is always going to be the price that the AMM or the aggregator gives you. But because batching offers certain benefits we almost always improve it.
00:10:01.940 - 00:11:12.940, Speaker A: Then it also offers MEB protection because one of the key reasons for batching is that the batch executors have to guarantee the price that you get. So either you get your price or your trade is not going to go through and thus you're not going to be faced with failed transactions. And lastly, for all the ETH maxis that we're all here, it also allows you to do gasless swaps which basically allows you to pay the gas fees in your cell token and you don't need to eat actually for trading on cowswap. So how do we actually reduce the mev on chain through batch auctions? Well, the goal is that through batch auctions we want to reduce the overall interactions with AMMS. And if we have to go to AMMS, then at least we're going to try to diminish the level of exposures that the trades are going to have against mev by applying certain rules to the batch auctions. The main way to actually reduce mevs, as we just saw, is executing coincidence of ones and because you don't need to trade against a liquidity pool and the trades are matched completely peer to peer. Therefore there is no matter in the order of those transactions because it's a pure simple transfer between two parties and there is nothing like no one can get in the middle.
00:11:12.940 - 00:12:12.554, Speaker A: Then second, if we have to go to the AMMS, then we try to break order dependency by having a single price per asset per batch. And basically this is achieved because every single batch settlement that happens in Cow Protocol has uniform clearing prices and uniform clearing prices. That means that the people that are trading the same token pairs in the same part are always going to get the same price, unlike what is happening right now that we see a lot of price disparity. And this is guaranteed because the executors of the batch commit to a price vector that regardless of the order of the trades, are always going to give the same outcome. In other words, no, the order of the factor does not alter the product. And lastly, batch auctions allows us to re aggregate fragmented liquidity via ring trades. This is something very interesting because it allows us to actually kind of match different users without the need to go through many like without the need to go through many liquidity pools.
00:12:12.554 - 00:13:20.050, Speaker A: And, for example, here we have a batch where we have four different users and where we have kind of like a coincidence of one and a ring trade where the four different users are trading four different tokens and they're all trading in the same batch and without having to touch an AMM because each user is kind of providing the liquidity needed for the other user. Kind of like in the circle. So in the first one it would be like in the top. Now we have Dai against Aura and actually the liquidity for the first one that's selling Dai goes to the other one that's trying to buy USDT and so on. And like we make a circle USDC, USDT and USDC against Aura. Now, how do we actually compete for mev minimization cub protocol outsources the settlement of these batch auctions to a competition of third party algorithms. Whatever algorithm gives the best price improvement for the user and thus minimizes mev the most is the one that actually wins the right to settle the batch auction.
00:13:20.050 - 00:14:24.166, Speaker A: Not only they win the right to settle the batch auction, but it also gets rewarded for doing so. Currently right now there are twelve different solvers competing against each other for kind of like minimizing the amount of mev or in other words, maximizing the value for the users and they can be grouped into four different types of solvers. We will have single order solvers that basically specialize on just settling one order in a batch. Then we will have batch cloud decks aggregator solvers that specialize on finding this coincidence of ones amongst users. Then we will have mixed integer programming solvers which kind of are able to settle multiple trades against like uniswap b two or uniswap b three style kind of pool. And lastly, we will have the quasilinear solver or quasimodo that specialize in settling trades of the batch auctions in more fancy pools like balancer. So what are the difference between the maximization and minimization mindsets? Is really mev protection? Is all the mev protection out there the same thing? Well, of course not.
00:14:24.166 - 00:15:22.006, Speaker A: Although one can argue that in my opinion, no. Flashbust technology and co protocol technology are kind of two sides of the same coin. They're two sides of the same coin because both technologies outsource the settling of the transaction to a competition of their parties. And in that competition, the kind of the winner is the one that optimizes the bundle of transactions in the best possible way for the users. The difference here is like who is the monarch in both systems? In the case of Flashbots, no, they're trying to maximize the value for the validators and thus kind of like maximizing the extraction from the users. But in the case of Cow Protocol, we're trying to maximize the value for the users and thus minimize the value for the validators. So what are flashboard goals and mission? Well, Flashbots is a collective group of individuals that have done a lot of work in kind of like highlighting the issues of MEB in the space and kind of educate a lot of people and make us realize what are the consequences of building systems that are prone to mev.
00:15:22.006 - 00:16:05.202, Speaker A: But from their website you can take that their goals is divided into three steps. The first one is to illuminate the Dark forest and they've done so via mev expect or mev explore. And basically this helped educate a lot of people within the theorem community by putting a number and seeing how hurtful MEB is. The second one is democratize the extraction before mev geth or mev boost. The extraction was only available to a very few amount set of players. But now with the democratization of their tool, a lot more people can do it. And while it's good that a lot more people can actually do extraction, we need to try to realize that we're kind of democratizing a weapon that is harming the overall ethereum users.
00:16:05.202 - 00:16:46.706, Speaker A: So it's kind of like a tricky situation here. And then lastly distributing the benefits. This is still not very clear part or very clear how they're going to achieve it. But right now one can say that they're redistributing the benefits to the wrong people because the benefits right now that are coming from mev extraction are going to the validators which are not the ones that are creating the opportunities because in the end the opportunities are created by the traders. Are created by the traders. So what are Cow protocols, goals and missions? Well, Cow Protocol goal is to actually achieve one single price per token per batch. And we want to try to achieve that by basically executing one batch settlement per every block.
00:16:46.706 - 00:18:02.110, Speaker A: But if we are to compare as well into three main points, we will have that. The first one is protection from the Dark Forest and basically we do this by executing the coincidence of Once, where the user doesn't have to go against the liquidity pool and also through a delegating trading model execution where the user doesn't send the transaction directly to the Mempool, but rather sends it to an off chain set of relayers that will be the ones that kind of, like, handle how the transactions hits the Mempool. Then the second one is if we have to go to the AMMS and if we have to go to the mempool, we try to avoid extraction by enforcing certain rules to dispatch actions. And the most important rule is the uniform clearing prices which in the end breaks the order dependency and thus makes those trades much more less amavable and lastly distribute the benefits. If you're trading on Capsap already today, you already know this, if not, I recommend you doing so. But already today, kind of like the price improvements that these so called solvers or searchers are able to find are giving to the users instead of being kept for them. And for example, in this case we can see kind of like the patch in the middle that there was like 18 different trades and on average there was a surplus of 2.5%
00:18:02.110 - 00:19:31.530, Speaker A: for each order. But to sum it up, how are they different in the case of cow protocol technology? If we look at the key metric that evaluates the success of the technology is the overall reduction or overall reduction of the exposure of mev versus in the case of Flashback technology, the key metric is how much mev is being extracted. Looking at the word democratization, one can argue that cow protocol technology is democratizing the tools for protecting users versus flashboard technology that they're democratizing the tools for extracting value from the users or from attacking the users or hurting the users. And if we are to look at how these two different technologies interact with on chain, the goal of cow protocol technology is kind of reduce the amount of AMM interactions that the users have because in the end, like AMMS are the reason that mev exists. But in the case of Flashbots, they want to maximize the amount of MMA interactions because these ways they can maximize the slippage tolerance from your trades and kind of extract the most value from you. And lastly, if we look at how both systems kind of like play by the rules in the case of Cow protocol we see that the more money to the users, the less mev and the higher the chances of have for winning and the right to settle the batch. And in the case of flashboards, the more money that goes to the validators, the less money that goes to the user and therefore the more mev, the higher the chances you have of winning.
00:19:31.530 - 00:20:31.680, Speaker A: So where are we heading? As I said before, not all is lost. We believe in building technical solutions that can kind of address these type of problems and we think we're on the right path to kind of reduce all the big chunk of mev that is happening right now on Ethereum. So what is the future of DEXs? We believe that the future of DEXs is one that focuses on fairness and cost improvement for the users rather than just lets them trade in kind of like some optimal ways. It is one also that offers mev protections because as we said before, if the transaction value in Ethereum is going to increase, mev protection is going to become more and more important. It's also one that puts the users at the center of it in the end. In our system the users are the monarchs because they are the ones that are creating the opportunities for different price improvements so they are the ones that should actually be rewarded for it and not other parties in the system. And lastly, it's one that abstracts users from complicated technology.
00:20:31.680 - 00:21:57.362, Speaker A: It is unrealistic to expect that everyone is going to know what is an RPC or how to add an RPC or even stay up to date on all the different liquidity pools to trade your token or what is the hottest new DeFi like trading venue and how are we going to get there? What does the future of finance look like? Well, the future of finance looks like one that we have a cow batch builder where this builder commits to have the first transaction of the block to be a cow protocol settlement. And this is important because if the first transaction of the block is a cow protocol settlement then we're going to have uniform trading prices in all the trades that are happening within there and therefore there is no MEB that can happen with the trades. Then if that's the case and we have that first transaction, then the transactions that are going to come after are going to actually be like through intents of arbitrage from the market. And we're going to be able to have the overall ethereum ecosystem, in a sense focus on the real market efficiency. Because right now a lot of the arbitrage that's happening is toxic arbitrage and it's not arbitrage from the market, but rather the leftovers that the mev attackers are kind of living in there. And lastly, it would be like the combination of the utopian side of the flashbust technology with cow protocol. So how does this look like? Well, currently we have this scenario right now in Ethereum where we have the mempool and we have the different searchers or private order flow that submit their bundles to the builder and then it goes to the relay and the validator.
00:21:57.362 - 00:22:40.840, Speaker A: But for us, the key is to kind of break the order and kind of transform searchers into cow builder and put cow protocol and cow shop in the middle of it in a way that if we convince builders, to focus on the utopian side and kind of shift their revenue mindset from hurting users to actually protecting and maximizing to the value of the users, then we're going to have a much overall better outcome within Ethereum. And will the market fix mev? Well, the question is that if mev maximization takes over we will have not built the future of finance but rather have just built the new old system but just with new rails. So help us build the future of finance because we're hiring for a lot of positions and thank you very much.
00:22:52.330 - 00:22:56.310, Speaker B: Hello, Alex.
00:22:56.850 - 00:22:59.326, Speaker A: OG. Sorry. No problem.
00:22:59.508 - 00:23:19.300, Speaker B: Question. So the batch auction process you're describing is one in which you have a bunch of orders from individual traders and then a collection of solvers each submit a price vector that can satisfy all of those orders. How do you get the individual traders to commit to an order without them knowing the final price?
00:23:19.910 - 00:24:07.602, Speaker A: Well, basically it's like they see in a way it works is that when you go to Cowswap, you sign a message with your intent to trade and basically your baseline price is the quarter price that we give you. So from there, the solvers start working on trying to improve the price. So you're always, at least at base, you're going to get what we have showed you in the UI. And from there, if there are price improvements that the solvers can find be a coincidence of one or some sort of batching, then it's going to be rewarded in the form of surplus from you. So you're going to get more. How is the course price calculated? By basically looking at the on chain prices and from there we discount the gas. Okay, here.
00:24:07.602 - 00:24:49.890, Speaker A: Sorry. Thank you for the talk. The question is, do you have any guarantee that the individual user is going to have its trade executed in a batch? Like the way it works is that you sign a message and then if your prices get out of market, then the trade is not going to execute, but you're not going to get charged for a failed transaction or anything because simply the trade doesn't execute. So in a sense the guarantee is that if your order is more or less within the market pricing, then within a matter of 30 seconds to 1 minute is of course going to be included.
00:24:51.670 - 00:24:53.442, Speaker C: Hi, I'm here.
00:24:53.576 - 00:24:53.922, Speaker B: Sorry.
00:24:53.976 - 00:25:08.706, Speaker C: Hi. Thanks for your thought. I was just wondering, you compare Flashbolts and Cowswap, but isn't Cowswap solving for a subset of the mev that Flashpolts is trying to solve for? And also how do you feel about mev maximization with mev rebates being equal to mev?
00:25:08.738 - 00:25:12.438, Speaker A: Minimization, can you repeat the question? Sorry, I didn't hear you.
00:25:12.604 - 00:25:27.558, Speaker C: So you compare Flashbolts and Cowswap, but how do you feel about to me it seems like Cowswap is solving for a subset of the mev that Flashbolts is trying to solve for. As in, for example, you don't solve for illiquid pairs, you only solve for mev that goes through AMMS.
00:25:27.654 - 00:26:06.514, Speaker A: But Flashbolts is not trying to solve for mev. flashboards is just making a tool that is making mev extraction more excessively common for whatever user. But in the end, the goal of their action is that the more mev, the more I'm going to pay and the more likely I'm going to be included. Like my bundle is more likely going to be included on the next transaction. And they do that because they're in the execution layer. And the problem is that they are able to do that because the trading mechanisms that people use like AMMS expose their users to mev. But what we try to do is kind of like fix the mev at the application layer so that then flashbox wouldn't have a way to extract mev.
00:26:06.514 - 00:26:22.234, Speaker A: So in the end, if the servers kind of find the optimal prices and uniform clearing prices, the mev that will go to the block producers is non existent because there's it doesn't matter the order of the transactions. I don't know if I convince.
