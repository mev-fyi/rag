00:00:00.410 - 00:00:34.662, Speaker A: You. Okay, we are recording. So hey everybody, this is EIP 1559, call number nine, which feels like a lot. So I shared the agenda in the chat. We have a couple of things to go over today, a few updates from different folks and then going over kind of the large state test that testing and yeah, that should be it. I know. Enskar, I see you're on the call.
00:00:34.662 - 00:00:38.870, Speaker A: And I think you had to head out early, so do you want to start with your updates?
00:00:39.530 - 00:00:53.680, Speaker B: Wait, I don't think I have to head out early. I think that must have been someone I'm sure to go first, but it sounds like maybe someone else has to leave early or something.
00:00:55.570 - 00:00:57.134, Speaker A: Does anyone else just go ahead?
00:00:57.172 - 00:01:00.880, Speaker C: Dan Scar. Yeah, I mentioned it to Tim.
00:01:02.210 - 00:01:04.480, Speaker A: Okay, yeah, but go ahead. Okay.
00:01:07.250 - 00:01:32.614, Speaker B: I think I might have finished scheduling conflict, but I kind of moved the other thing. Okay, so sorry. No, but yeah, I can go ahead. So basically I linked like a little document again, that was kind of the follow up of the previous one I had maybe two months ago or so. I think maybe roughly two months ago. Exactly. That's a new one.
00:01:32.614 - 00:03:01.746, Speaker B: I linked that yesterday. I'm not sure, maybe it was a little bit late if people had the chance to have a look, but basically so I've been thinking a little bit more about quite a bit more about specifically the sorting aspect or the sorting aspect in clients for 1559 transactions. And basically, as it said in the TLDR in the beginning. So basically when I first started thinking about it, just because I didn't really have a lot of background in 50 59, it looked very much just like now you have two parameters, right? The maximum total fee cap and the maximum minor bribe. And basically now you have to sort like in this two dimensional space with all the complexities that came from that and kind of reevaluation every block and everything. But the more I kind of looked into it, to me it seems more like that it's really mostly about understanding kind of the very specific structure of how of like how 50 59 will affect transactions and kind of optimizing the client around that. So what I mean by that is basically if we look at the mem pool under 50 59 in a normal situation where it's not one of these extreme demand spikes, that might be the rare kind of exception to these normal situations, but in any normal situation you usually only have a handful of includable transactions, right? Includable transactions means that the fee cap of the transaction is above the current base fee.
00:03:01.746 - 00:04:08.806, Speaker B: And the reason why you only have a few is basically mostly by definition, right? Because with 50 59 in the steady state blocks are on average just the target size. So they might be a little bit over, a little bit under, but on average they only target size and miners always include as many transactions as they can up to twice the size. So the fact that the blocks in the steady state are only one time the target size basically already indicates that on average a miner that creates a new block only has enough transactions to fill like one time the target size basically. And so in the Mempool of course that means that usually the vast majority of transactions are actually not includable at the current price, which is probably like a very trivial observation but took me a while to fully get there and understand the implications because it actually has a couple of implications. I think the more obvious part is for mining. So of course for mining you only care about the county includable transactions. You don't care about what might be in a couple of blocks.
00:04:08.806 - 00:05:26.230, Speaker B: You're mining a count block and you need the transactions that are includable at the count block. And so basically what that means is that the Mempool ideally should have a way of only giving you the currently includable transactions. And then I initially was concerned with really designing really an optimal algorithm for managing a partially sorted structure that always gives you the highest paying transactions. I think I outlined a design for that in the last document. And then this, I'm not sure if he or she or they are on this call, the minaminao, the user, they kind of took this approach and kind of implemented an example sorting mechanism there which was awesome to see. Yeah, exactly this one. But basically, I think the main insight though, on that specific topic is that this is probably an optimization that is maybe not necessary at all, or at least not necessary in the beginning, because what miners already do today at least.
00:05:26.230 - 00:06:08.420, Speaker B: At least? Well, I'm most familiar with the gas miner, but what the gas miner already does is they get a complete list of all pending transactions and I can't like, before 1559. That can be thousands of transactions and they sort all they basically sort them once per second. Or like I think the default is once per 3 seconds or something. And then they discard that and completely resort every 3 seconds. So basically they're doing much more already than they'll have to do under 1559. So under 50, 59, the effort for the minor only goes down. And so we can always still kind of optimize but it seems like this is really like a very simple thing.
00:06:08.420 - 00:07:16.674, Speaker B: And then the main change that I think is actually most worth talking about for Minor then is not even the sorting itself, but actually how do you handle the stream of incoming transactions? Because right now what the miners usually do is they basically create a block and then they start mining on an empty block just to be able to start hashing immediately. But then as soon as they have created a block, they start switch over to that and mine on top of that block. And then again with this interval, like once every second, I think the default is 3 seconds, but you can ramp that up to once every second. They basically create a completely new block, right, because there might have been new transactions coming in since then. So they create a completely new block and once that's done they again switch on to mine on top of that. And of course you can do the naive thing and just do the exact same thing under 50 59 as well. But if you look at again the specifics of 50 59, as soon as a block comes in from outside that you want to mine on top of or like that you want to mine the next one for the chain that will probably already use up most of your includable transactions.
00:07:16.674 - 00:08:24.362, Speaker B: So you'll start out as a miner with only maybe zero, maybe like a very small amount of transactions to include in the block immediately. And then over time while you're mining and you haven't yet found a block, new transactions will come streaming in. And so then on average, I don't know, let's say every 12 seconds or whatever the average for non empty blocks, the mining effort will be on average it'll take you 12 seconds to collect enough transactions for one normally full block. And then after maybe 24, again, it's just like very simply spoken but after 24 seconds you'll finally hit the cap and your block is like full, actually twice the size. And so basically, what you ideally want to do is you will want to just immediately, as soon as a new transaction comes in, just append it to the block you're already mining on top of and then maybe still once every second, every 3 seconds or something you can do like a reorg where you rethought them by some other metric, which doesn't really matter for the Miner, but maybe for the Network as a whole. It's nice if they mostly kind of prioritize higher paying transactions even within the block still or something. But basically there's immediate append action that's not done currently in Gas.
00:08:24.362 - 00:08:51.220, Speaker B: And that's something that I would propose to that should probably already be done as part of the initial 1559 implementation. But even that part of optimization there is optional. And then again for the broader sorting side for mining, it's really simple, I would say maybe before I go to the other big topic, the Eviction, does that make sense so far? Do I maybe have something backwards there?
00:08:53.290 - 00:09:46.310, Speaker C: I think that all makes sense. The one thing I would say is I think first in, first out is actually slightly healthier for the network than price based if there's no contention. And so my vote would be is until the block is actually full, don't bother resorting the transactions if we have no need to do it. It doesn't help the network really, I don't think to sort by gas price because that just encourages more gas price auction stuff. Whereas if we're doing FIFO most of the time, gas price auctions become much harder and much less profitable, which is kind of good because gas price auctions are not the healthiest thing, they're a thing that we deal with because we have to. But it'd be nice if they just kind of went away. And so my boat would be if you don't have a full block, just do first and first step.
00:09:46.310 - 00:10:14.320, Speaker C: And like you said, just append only until your block is full. Then once the block is full, then decide, okay, what am I going to kick out of the block and then have to rebuild it. And then at that point, sorting might be the easiest way, in which case, sure, go ahead and sort. But my hope is that if most blocks are not too X full, then we can do basically FIFO miners still get all their payday and we don't encourage this behavior of people hammering the network with gas price wars, basically.
00:10:15.570 - 00:11:00.240, Speaker B: Yeah, and of mean this is a little bit tricky because for miners these gas wars might actually still be beneficial because that drives up the minor drive. But I think at least we still need the functionality of the resorting, as you were saying, to use as soon as we reach the actual two X cap. So I think it probably wouldn't hurt to at least expose it to minor so they can optionally switch and do that immediately or something. But yeah, I think at least the simplest approach would really just be first in, first out until you reach the two X cut. But I would say this can probably be left to the individual client depths to just make the decision on.
00:11:03.650 - 00:11:44.800, Speaker C: Just to build slightly on that. I think most importantly is if we have Geth do first in, first out until two X full and other clients do slightly better sorting, it would encourage more client diversity in miners. So basically this is kind of like almost make Geth not quite as good as the other miners and also make it so Geth doesn't do as much work to encourage people to switch to Nethermine and open ethereum. So I hope nethermine, open ethereum go and make a better sorting algorithm, gives miners slightly better money, then it'll encourage people to switch to Nethermind off of GAAP, which I think we generally want. We want more client diversity in miners, I believe.
00:11:49.730 - 00:13:02.086, Speaker B: Yeah, I can see the point there. I just want to just basically give the kind of the counterargument that I gave in the discord as well. But I'm personally open on this question, but I would just say given that 1559 is already like a somewhat disruptive well, I think disruptive kind of overemphasizes it, but it is at least like a significant change for miners already. So I think it would probably be best to kind of keep the changes or the changes to the minimum necessary to support the switch to 1559. This is why I might think that maybe changing this might be something we should rather push then for on its own instead of as like part of the overall 1559 implementation. But I don't really personally have a strong opinion. So I think that this is like in general, this kind of summarizes the minor side of that quite well.
00:13:02.086 - 00:14:00.730, Speaker B: And also I talked with Gary from the gas team yesterday, who does the gas implementation of the miner as well, just to double check my assumptions there. And it seems like this is indeed kind of how the current situation is, and they're actually interested in looking into how they can adapt to 50 59. So that would probably continue as a conversation. Okay. And then the other part, again, probably that also is familiar with people by now. That's of course the Eviction side, that's where you also need sorting to now know on the bottom end of transactions which ones to get rid of if you running out of space. And there the idea again, if you basically think about this situation where under normal circumstances, most transactions will be like in this non includable zone, and then you look at those in a little bit more and more like a little bit more closely.
00:14:00.730 - 00:15:27.166, Speaker B: One thing, of course, is that I think it's rather likely that clients will do something similar as they do today with this minimum gas price that they enforce, right? And they just drop transactions that are below that. So I can definitely see that happening also with the minor bribe, where now in a 50 59, if your minor bribe is below some standard, I don't know, 1 something, the transaction gets even dropped immediately by the Mempool. I don't know, maybe not maybe, but I think that's at least something definitely realistic. And so that would basically put like a lower bound on the minor bribe that any transaction in your Mempool will end up paying if it ever gets included. But then the interesting thing is there's also at least some soft upper bound for what an effective bribe a transaction will probably end up paying if it's currently not includable. If a transaction comes in and the current base fee is 100, let's say, and the transaction comes in and has like a fee cap of 200, right? So it's immediately includable, then it could potentially pay all the difference there all the 100 extra as a minor bribe, that's possible. But on the low side, if it's action in the mempool that's waiting to be includable again at all that transaction, even if it has, like, a really high maximum minor bribe, it will almost never actually end up paying this whole big minor bribe.
00:15:27.166 - 00:16:38.922, Speaker B: Because it will be included as soon as the base fee drops low enough that it becomes includable. And this is like a topic we have to talk a little bit about. How often do we expect significant drops all of a sudden or something, maybe with empty blocks occasionally or something. But generally a transaction will be most of the time become includable just barely right where the base fee just dropped just low enough that it became includable and maybe includable with this minimum minor bribe kind of distance. But that means that most transactions, even if they potentially are willing to pay 10, 20, 30 way of minor bribe, if they are currently not includable, they'll probably in the future, if they ever become includable, will probably end up only paying a small minor bribe just because they'll only barely become includable. And then again, the question is how often do we expect significant shifts in the base fee? And so this is of course the details, how small this kind of the span of expected minor bribes can be. This is still a little bit unclear or there are different assumptions to be made there.
00:16:38.922 - 00:17:49.682, Speaker B: But the general insight there basically is transactions in the currently not includable side of things will probably all end up paying only a small minor bribe. And so then kind of getting back to what I was initially in this first document and I think we also talked about on the call maybe like two calls ago or something, what I was initially thinking about was kind of really optimizing for this expected minor value of transaction. So that took into account like the minor bribe and the chance of inclusion, of eventual inclusion basically. But now with kind of the minor bribe kind of looking more that it's almost uniform again within this small band, it turns out that this kind of mostly reverts really back to the simple approach there that we started out with. So it's basically like just sorting, making eviction decisions by fee cap, like just the total fee cap per gas. This really gets us close, very close at least probably to this expected value to the miner. And so then of course there's still a case to be made to really optimize to still kind of go beyond that.
00:17:49.682 - 00:19:08.874, Speaker B: But I think this at least kind of makes it kind of very kind of likely to me that it looks really like just going with a simple implementation. Here again is also just really hits this good enough for mainnet launch threshold. So basically just have nodes do the simple thing. And then once we actually have good data of how does the base fee change, how often do you actually get these significant drops? So basically how much of a difference is there between transactions that are waiting to be included that have maybe a big smaller or larger maximum minor bribe and can we maybe do some more optimized sorting? But it really seems like just the very basic thing just sort by fee cap per gas that can use all the existing implementations with a very small change. It really looks like this will be good enough for mainnet launch, basically. But I feel like this is basically the one question where I also feel like and I think BanaBay, you were talking about that in discord as well, how this might be a really good target for some additional simulation work just to see under some assumptions. And again, of course, these simulations are usually like whatever assumptions you put in, you get out.
00:19:08.874 - 00:19:24.980, Speaker B: But still just under a few different scenarios. How much of a difference is there that could potentially kind of be optimized for with an optimal algorithm? I think this is kind of my view on the Eviction side.
00:19:28.310 - 00:19:53.114, Speaker A: Is there a way to is this spam proof? In a way. So is there a way where you can constantly raise your fee cap? Because if you, say, had a fixed minor bribe and the base fee changes or whatever, is there a way you can spam the transaction pool by just constantly raising your fee cap? By one way, yeah.
00:19:53.152 - 00:20:30.840, Speaker B: So basically I didn't put it on this document because I don't think it's like one of these kind of complex issues where there's a lot of open questions. But I think for transaction replacement right. With the same account, same nons I think this kind of simple heuristic, I think that was already that we also already kind of talked about at least as a likely candidate. There like the simple heuristic of you have to have at least the same minor bribe and you have to have at least some again, like a 10% increase of maximum fee. And if you just have that, then you have a very similar situation as you have today. It's basically the same.
00:20:32.650 - 00:20:33.640, Speaker A: Got it.
00:20:35.690 - 00:20:38.506, Speaker C: He wrote that in his previous doc as well.
00:20:38.608 - 00:20:47.340, Speaker A: Okay. Yeah, I just wanted to make sure that this kind of still held even though this sorting is quite simple.
00:20:52.320 - 00:21:30.340, Speaker B: Yeah, but basically the idea that they're really just make replacement expensive so that you could just can't do a lot of replacements before you actually hit the includable zone. So it's really like basically the idea is really like the network is mostly just optimized, like just looking at Fee cap per gas for all of these decisions, for Eviction, for replacement for all of that and then the minor bribe that's actually mainly just used then at the point of inclusion at the minor themselves for these decisions. But the network mainly just looks at the fee cap.
00:21:31.270 - 00:21:58.640, Speaker D: I have a question. Yeah. I forgot to ask this morning when we talked, but basically you are assuming there is only a 1559 transaction in the pool. But what if there is a mix of legacy transaction and 1559? What is the ordering? Basically you consider the fee cap to be the gas price for a legacy transaction. Oh, yeah, just simply okay.
00:22:00.450 - 00:22:43.190, Speaker B: Basically just convert legacy transactions to this kind of 50 59 format where the maximum minor bribe equals the maximum total fee. Because, again, either they just get included immediately, in which case, again, they only have the issue that they might overpay, which is just like the kind of the trade off there, or they end up in this. Not immediately. Includable zone. Where then, at the end of the day, that they set this high? Max minor bribe doesn't really matter because most of the time they'll end up only paying a small one anyway. So then they kind of are more similar to the native 50 59 transactions than basically initially.
00:22:43.350 - 00:22:45.100, Speaker D: Okay, that makes sense.
00:22:48.440 - 00:23:02.192, Speaker B: But yeah, what that means basically is I would strongly argue that mempools should immediately just implement full conversion of these legacy transactions and not have like, two separate mempools. I don't think there's a case to be made for really keeping two separate mempools.
00:23:02.276 - 00:23:03.630, Speaker D: I agree. Yeah.
00:23:18.040 - 00:23:18.452, Speaker B: Cool.
00:23:18.506 - 00:23:20.980, Speaker A: This is great. Yeah, go ahead.
00:23:21.130 - 00:24:23.286, Speaker B: Yeah, thanks. One question that I was just having was I'm not that familiar with where all the participants the question was just do we do we have someone from some of the other clients? I already talked to Abdel about the situation with Bezu, but I would also be interested in how about other clients? Is the implementation. There also kind of compatible with what I outlined here, or there are other aspects that I didn't think of that might not kind of need adaption, there adaptation, but that was like the one thing that I still wanted to do was just reach out there and see if there's anything. I wouldn't expect it because it seems all rather straightforward there. But just to double check. But yes, I don't think there's for.
00:24:23.308 - 00:25:11.602, Speaker E: Us for nevermind at the moment, the implementation is just taking the very similar behavior as before. So sorting the transactions by the value for the miner. So I'm listening here, but is it the final plan for the sorting and do you think that this should be implemented in the clients? Because from the very beginning, when we were talking about sorting in the transaction pool, I'm thinking of this is not part of the consensus, which means that it can always be implemented differently and according to the miners requirements. So as long as this is most beneficial for minor, I think it makes sense and it will be stable. But if it's not, then people start replacing it with whatever is most beneficial for miners.
00:25:11.666 - 00:25:56.260, Speaker B: Right, yeah, I definitely agree that it's not consensus relevant. And so I think it's really just important that there's like, one good enough implementation that everyone can basically fall back on if they don't want to do something of their own. I would just be curious then for that. When you're saying optimizing for what's most like for the value for the minor, say any transaction that you're looking at that's currently not includable, how do you calculate the value for the minor there.
00:25:57.130 - 00:26:06.678, Speaker E: Because when you say not includable, you mean by the fact that the base fee is above the block level, right?
00:26:06.844 - 00:26:09.094, Speaker B: Exactly. Yeah.
00:26:09.212 - 00:26:22.582, Speaker E: So it's just the question whether you want to keep some of them in transaction pool while they are waiting for the turn on. You just keep evicting them. So I know that we want to keep the transaction pool minimal and keep evicting the transactions.
00:26:22.646 - 00:26:22.874, Speaker B: Right.
00:26:22.912 - 00:27:08.060, Speaker E: So I think for us it may be even configurable by the miner. Do you want to evict them or you want to keep them? Then the question whether you want to propagate them when normally they would be evictable. Probably not. If other clients would evict them anyway, then you just don't propagate them and keep them for the miners. So when the base fee goes down, they can include them. This makes sense from our perspective, but I want to read this much more in details what you wrote. And like now with the approach that we have probably will start suggesting the users to pick the implementation of the transaction pool one of a few and the behavior so parameterize it a bit.
00:27:10.670 - 00:27:49.990, Speaker C: One thing we have to keep in mind is that while not technically part of consensus, the various clients do need to have an agreement on what criteria will cause you to drop a peer. And so we do need to make sure that we do agree on at least that part. So if you've got some threshold where you're like, hey, you're spamming me now I'm going to drop you, we need to make sure all the clients are in agreement. That what that threshold is. We make sure we don't have one client that's saying, oh, this transaction is fine, whereas another client is like, no, that is spam and I'm going to disconnect from you. That's what we don't want. So not technically consensus, but something we do need to agree on before launch.
00:27:50.970 - 00:28:11.070, Speaker A: Yeah. And I think that's almost like more of kind of an all core devs conversations in a way. To me it is a threshold we need to agree on, but it's not going to block anything. I don't think we'll ship or not ship 1559 based on the value that thresholds. Yeah, agreed.
00:28:15.030 - 00:28:16.180, Speaker B: Sorry, go ahead.
00:28:18.230 - 00:29:42.282, Speaker C: I was going to say something to keep in mind is that we always talk about how if there's a better mining strategy for miners, miners will switch to it. We actually have many years of evidence that suggest that's not actually true. Miners seem to be reluctant for unknown reasons to actually write code that changes their clients significantly. And we see that because there has been massive for years now, there's been massive opportunity for miners to take extractable value from DeFi and no one has until the MEB people basically came in and did it for them. And so if we have a transaction sorting algorithm, that's good enough and while technically a miner could do something else, our evidence suggests most of them will not. And going back to the first in, first out sorting, if most miners are doing first in first out, then it becomes very expensive to do gas price auctions because most miners will just ignore your gas price war and we'll just include first in, first out and you'll just waste money. So even if some miners defect and write their own clients that are more optimal, it won't likely affect the network and people won't leverage that because you can't leverage it unless all the miners do it.
00:29:42.282 - 00:29:52.720, Speaker C: So just keep that in mind that while theoretically game, theoretically, I 100% agree miners should be optimizing these things. Our evidence suggests they don't for whatever reason.
00:29:53.970 - 00:30:50.450, Speaker E: But I feel like we want to trick miners into using something potentially suboptimal. And it's okay if you do that as a particular client implementer and it's your decision but to try to spec it, which is against game theory, and say, okay, so we'll just do that because no one will implement their own solution. I would leave it to client implementers saying this is some suggestion for EP 1559, but it's not part of consensus. You can do that whatever way you want. If some other clients will drop you because you propagating transactions that are not nice for them, then obviously you will adjust because you don't want to be disconnected from the network. And there'll be some clients that will have a bit of more to say depending on their network participation rate. Right, so their market share.
00:30:50.600 - 00:30:59.700, Speaker D: Well, that's the plan. All of this is not part of the specification. It's a set of guidelines. It's a soft agreement, but yeah, you are not obliged to do so.
00:31:01.130 - 00:31:35.070, Speaker B: Just to briefly clarify, this kind of does not propose any kind of rules that are purposefully suboptimal for the miners. This is all kind of trying to optimize just sometimes maybe prioritize simplicity over optimization. But at no point, again, this was just like an additional proposal by Micah. We were talking about how we could maybe get could do some decision specifically, even more simpler something, but in general, at no place kind of purposefully chooses the not optimal.
00:31:35.430 - 00:32:32.626, Speaker E: Yes, I was referring to the Micah's suggestions and something that Rick was also suggesting before trying to decide for the users how they should treat the transactions in a transaction poster. I prefer the solution, which is based on suggestion where we discuss it, but not try to enforce it among the clients and just say, okay, so we discussed it, this is how it behaves as head works. This is not damaging for the 1559, but we don't want to spend too much time on it because it delays us in the actual implementation. That's how I see it. It's super useful, the analysis and something that I read with pleasure. I'm just here saying that we won't be necessarily. Saying that it's exactly the way we implement it.
00:32:32.626 - 00:32:42.630, Speaker E: And we want to keep that freedom of saying, okay, transaction pool is outside of consensus logic. So we want to be able to do something that will decide will be most beneficial for users.
00:32:43.770 - 00:33:29.134, Speaker C: Yeah, and to be clear, I definitely don't think that we should force anyone to do this. The reason I bring it up is just because one of those things where if we all happen to, on our own, write clients that do first in, first out, I believe that will be healthy for users of the network, even though it may come at a cost, a minor cost to miners. And so it's one of those things where we can maybe opportunistically get a free win for users. And to me, that's something we should maybe think about and try for. But I definitely don't think that any client should be forced to follow a strategy. It is non consensus, just a, hey, if we do this thing, maybe we get a pretty easy win. And if we don't, then it reverts back to what we were going to do anyway.
00:33:29.134 - 00:33:30.550, Speaker C: So it's not a big loss.
00:33:31.210 - 00:33:53.630, Speaker B: Although, just to mention, personally, I'm not sure I'm fully on board there because I do think that this would then in turn just incentivize kind of side channel communication with miners directly to basically pay for positioning in the blocks directly, which ends up being the same thing, just with more friction.
00:33:55.810 - 00:33:56.990, Speaker C: That's a good argument.
00:33:57.490 - 00:34:59.838, Speaker A: I guess if we take a step back. I think the reason we wanted to do this work is there were concerns that we could not find a suitable way to sort the transaction pool that would be kind of spam proof. Under 1559, I feel like we're definitely at that spot now where we have at least a solution that would not make the status quo significantly worse or cause a security issue. I'm pretty satisfied with what we have right now. If different clients want to do different things or if we all align, that obviously has its own set of trade offs. But I feel like with regards to the risk that having 1559 introduces in the transaction pool for dos vectors and things like that, I feel like we're in a pretty good spot with this. Right? And then if different clients again want to tweak it, I think that's a separate conversation.
00:34:59.838 - 00:35:16.760, Speaker A: But yeah, I guess maybe my question is, does anyone feel like there's something more that we need to help justify that 1559 is sound and safe that's not being presented here?
00:35:24.860 - 00:35:34.110, Speaker B: I mean, sound and safe under this aspect, I'm generally convinced that it's sound and safe, but of course this only covers the kind of mempool sorting side of things.
00:35:34.640 - 00:36:19.420, Speaker A: Yes. And then I think, like we mentioned earlier, we'll need to discuss also how the clients want to do peer management and stuff like that. But I think to me, this was like the biggest potential risk with 1559. It's just like can we efficiently sort the mempool? Can clients kind of manage their transaction pool without it becoming crazy? And yeah, I feel like I'm much more confident in that now. And the rest kind of feels like an implementation detail at this point, right, where we can have long drawn out conversations about that. But it's not going to be a blocker for the EEP.
00:36:22.160 - 00:36:26.476, Speaker B: Yeah, that makes a lot of sense to me, especially when a block is.
00:36:26.498 - 00:36:37.570, Speaker C: Not full, sorting still has a cost. So by appending only the miner might already find a block in that time.
00:36:38.260 - 00:36:54.120, Speaker A: And we see that on Main Net already, right? Like with empty blocks that get mined and I'm fine with like we don't need to solve all of the inefficiencies of Mainnet to deploy 1559. We just ideally have to not make any one aspect significantly worse.
00:36:56.940 - 00:37:07.790, Speaker C: I'm with you. I was a little bit worried about the sorting algorithm. Not worried, like as a blocker, just worried it was going to be hard, but that this research has convinced me that it's easy.
00:37:08.400 - 00:37:26.640, Speaker A: Yeah, same and yeah, again I think thanks a lot Anskar, for this. This has really benefited from having somebody who's actually spent time thinking through it deeply rather than as a side thing on top of everything else. So yeah, this has been really helpful.
00:37:27.940 - 00:38:43.524, Speaker B: Awesome. Yeah, thanks. Just briefly, by the way, to mention because I have it under further questions, just like one thing that I realized dealing with this is just, I think at some point but I think that it's not necessary before we launch on Mainnet. But I think at some point it's probably also a good idea to get back to for one to just the aspect of what are the kind of the things that might also at some point change with ETH Two, right? Because we'll probably just want to move this 50 59 over and also use on ETH Two, but that's of course a little bit further in the future, but maybe, I don't know, it might just be that 50 59 only ships half a year before the merge or something. So this might become relevant quite soon then. And then also the ETH One specific topic. So how can we maybe long term, that doesn't have to be in the first release, but long term kind of keep the base fee a little bit more smooth and stable even under this distribution of block times, right? Because right now what will happen under 50 59 is sometimes you have very quick blocks and that means that they are either like the second one is either empty or almost empty and then the base view will drop quite a bit or sometimes you have very long time periods and then that looks like congestion.
00:38:43.524 - 00:39:06.610, Speaker B: So basically the block will be doubly full and so there could be arguments to maybe at some point do like time adjusted adjustments as well or something that also take into account the time since the last block or something. But again, I think all of these are things that definitely not necessary for the first version, just things to keep in mind.
00:39:06.980 - 00:39:39.790, Speaker A: Yeah, I agree. Just in general. That came out in the Tim Roughgarden report that the base fee update rule was simplistic to say the least, and it's probably not a blocker to ship it right now, but there's definitely some room for improvement there. And I suspect it would be helpful to have actual main net data before we were to tweak it because we know what we have right now probably works, but is not optimal and it's kind of hard to make assumptions about what the usage conditions will be before we actually deploy it.
00:39:41.360 - 00:39:42.300, Speaker B: Agreed.
00:39:44.880 - 00:40:07.800, Speaker A: Cool. Just because we're about halfway through already, I want to make sure we get to the rest. So any final questions on the transaction pool sorting? Okay. Yeah, again thanksgar. This is really good. Thanks. Yeah.
00:40:07.800 - 00:40:19.270, Speaker A: Abdel, do you want to give an update on the large stake testnets and where things are at and how this could work with other clients? I see that you're chatting also on Discord.
00:40:19.430 - 00:40:28.314, Speaker D: Yeah, I will give some precisions about that. Okay. Should I just give my update and the demo later or I do both.
00:40:28.352 - 00:40:31.934, Speaker A: At the same time? Let's just try to focus on state test net for now.
00:40:32.052 - 00:41:47.410, Speaker D: Okay. So yeah, basically we have a large state testnet. The idea was to have something comparable to mainnet. So we managed to get testnet with 100 million accounts and 100 million entries in the state storage tree and yeah, the problem is that we use the bezos specific feature which is to have a fixed difficulty and I forgot to ask if it was supported in Get and it seems it's not. So I was asking basically Ramil that if he will be okay to hard code it for the testnet and I'm also talking with Thomas about that in the Discord channel but basically that will be the only trick we would have to do in the code base to make it work on the state. And again, if it would easy to generate the testnet again I would restart with different parameters but it will take two weeks to get the same state size. So I would rather hard code the fixed difficulty value in the code rather than delaying the performance tests.
00:41:48.650 - 00:42:05.660, Speaker A: Yeah, we are working on it right now and we met some another issue with base fee calculation so we are trying to investigate it and so it's in progress. I will provide some update today later.
00:42:06.030 - 00:42:07.100, Speaker D: Okay, nice.
00:42:13.250 - 00:42:18.080, Speaker A: And Thomas, would that work for Nethermind to hard code the difficulty like that?
00:42:21.510 - 00:42:24.020, Speaker E: I'm just implementing it now actually.
00:42:24.870 - 00:42:26.114, Speaker D: Okay, thank you.
00:42:26.232 - 00:42:38.200, Speaker E: Thank you for that genesis block handling and there are a few questions on Discord I want to clarify of how to get it. Ideally, I would start syncing it today.
00:42:39.450 - 00:42:42.790, Speaker A: And Abdel, how long does it take to sync the testnet?
00:42:45.230 - 00:42:54.730, Speaker D: Well, it took roughly, like, something like, maybe two days with Bezu with a full sync, obviously, I guess.
00:42:54.800 - 00:43:27.800, Speaker A: Yeah. The reason I'm asking is if then we want to do this kind of performance test, would it make sense to schedule another call and do that synchronously with all of us? Or not necessarily everyone here, but just get Nethermine and Basu and I don't know, is, like, a week from now good enough to fix the bugs and be ready for that? Because it feels like I don't know, it might be easier to do this type of testing if we're all kind of on a call together.
00:43:30.970 - 00:43:50.320, Speaker D: Yes. Maybe before that, once the nodes are synced, I can submit a single transaction just to verify the consensus rules, and then we can plan a call to do the actual performance test, if that makes sense.
00:43:53.570 - 00:43:58.400, Speaker A: Yeah, that works for me. Thomas Ramil, does that work for you guys?
00:43:59.830 - 00:44:06.100, Speaker E: Yeah, sure, anytime. Let's say I'll be targeting today for the sync start. We'll see how it goes.
00:44:07.190 - 00:44:57.250, Speaker A: Yeah, so if, say, we get them fixed today or tomorrow, they sync over the weekend, then early next week, we can probably have Abdel just send a few transactions to make sure it all works and then schedule something for maybe the same time next week or something. But I'll follow up on discord about the specific times. But, yeah, I think that, to me, this is, like, the last kind of big test thing we need to do on 1559. And if we can get that done, that's pretty good. And I have something else that's slightly related, but just want to make sure. Is there any other questions or concerns about the testnet? Okay, yeah, one thing. I'll just share my screen.
00:44:57.250 - 00:45:51.250, Speaker A: Vitalik, I asked him to do this a while back, and he did this week, which was great. So the main reason for doing this test on the large state is, like, the fear that the large blocks cannot be handled on mainnet. And Vitalik wrote a small explanatory of why he thinks this is probably not even a problem. It's quite short. I encourage people to read it. But at a high level, the biggest risk is like, well, clients maybe cannot handle 25 million gas blocks, and then if they could, why wouldn't we just double the block gas limit and have them handle 25 million gas blocks all of the time rather than just doing 1559? He basically explains why that's the case. So there's, like, three reasons why we can't just increase the gas limit a ton.
00:45:51.250 - 00:46:54.040, Speaker A: The first is, obviously the average block processing time will increase if all the blocks are much bigger. The second is that the risk of denial of service attack increases if the biggest block is much bigger. And the third is, like, the storage size growth rate will also increase if all the blocks are bigger. And one thing that he notes is that the first and last of these are really only impacted by the long run average block size rather than the maximum block size we see on the network. So that means even if we can't do those three things, given that 1559 doesn't increase the average block size significantly but only kind of some blocks from time to time, the only issue we have to worry about is the second one. And then there's a few arguments why the second issue is maybe not that bad at all. The first being that 29 29, which is going live into Berlin, will help compensate for some of the denial of service risk based on storage access.
00:46:54.040 - 00:47:47.800, Speaker A: So I think this is very good point and also kind of a reason why it would be pretty complicated to ship 1559 before Berlin. So having 29 29 helps with denial service protection. And then the second argument is that obviously if we have a short term denial of service, it's less worse than if we have a long term denial of service. And 1559 actually helps here, given that the base fee increases when the gas uses more than 100% in the blocks, this means that the cost to sustain a denial of service attack on the network kind of goes up exponentially with time. So realistically attacks could not be very long. And that means that even if you could create a denial of service attack, you're almost in a better spot after 1559 than we are today. Where today the cost to do this is kind of a fixed cost.
00:47:47.800 - 00:48:47.420, Speaker A: Then the third argument is that the block creation process itself today is poison distributed and that would lead to having two X spikes happen on the chain roughly once a week just by randomness. This one I think is the one that's like the least fleshed out and it would be interesting to see data for. But just like with the first two arguments, it feels like 1559 is like a net improvement over the status quo and the risks are probably pretty minor. So this is not to say we shouldn't do the performance test, I feel like we're basically there, but it's really good data, I think to show that even if for whatever reason we can't sustain like an hour of very high load or whatever, 1559 probably still isn't a major denial of service risk for main net.
00:48:51.710 - 00:49:35.862, Speaker E: Um, generally think that from EP 1559 perspective, the the one thing that we should do now in parallel to the final testing and implementation is just to ensure that there is very, very active dialogue with miners about when the change will be introduced, what their current stance is. Do they still have some concerns they would like to address and clearly tell the community what the decision is? Are the core devs trying to go against any minor concerns. Is there any compromise? So how exactly the transition will look, and all the miners, the majority of miners, what they say about the transition.
00:49:35.926 - 00:49:44.350, Speaker C: Process, that is a giant can of worms.
00:49:45.330 - 00:49:50.660, Speaker E: Yeah, if you don't open it now, it will open itself the moment when we'll start.
00:49:51.830 - 00:50:46.900, Speaker C: It already has, I don't know if you hang out in the r and d 1559, those three channels, and then also on the e three search, if you subscribe to that, there's like three new people a day that show up and complain about their fees going down with 1559. And we try to talk to them. So far, none of them have been able to formulate a solid argument. Besides, I want to get paid more. That's kind of the root that I've derived from most of them is just like, I want more money. There are some other arguments that they make that they're worried that or they claim that mining will centralize in china, but I think that was actually debunked earlier. Apparently I learned I didn't know this, but apparently mining in ethereum appears to be mostly in europe, not china, which was surprising to me.
00:50:46.900 - 00:51:25.898, Speaker C: But yeah, that's like the two things. One is I'm going to make less money. I don't like that. And two is this is going to lead decentralization. And the reason decentralization argument is kind of reasonable because when the profitability of mining goes away, the people that have the thinnest margins are the ones that are going to get kicked out. Like the people with big fat margins, they're going to stick around and the people with very thin margins are going to get kicked out. The belief is, and this is a reasonable belief that the large mining pools have the biggest margins and the small pools or single miners have the thinnest margins.
00:51:25.898 - 00:52:07.790, Speaker C: And so if we do something that hurts miners in some way or decreases their profitability in any way, then the people who are going to leave are going to be the thinnest margins, therefore, the non pooled people or the non farm people. And that can lead to centralization. I'm not really worried about that because the ethereum's price volatility, I think, has a far greater impact on that than 1559 will. That's my suspicion, and we already have to deal with that. That's just the nature of mining, is that it tends to centralize over time and nothing do about it. Sorry, go ahead.
00:52:07.940 - 00:52:43.590, Speaker E: Sorry. Maybe the last research that we want to have on paper is the analysis of what exactly is the expected the hash rate drop based on the responses from miners. Like, do we lose big miners? Do we lose lots of small miners? What will be some kind of document that will tell miners, this is what you were making before, this is what you're going to make now? Based on all the analysis and then based on that, see what responses are and try to judge what the hash rate drop will be and how it will affect the security of the network.
00:52:44.410 - 00:53:51.646, Speaker A: So I think there's a few challenges with doing such an analysis. The first is, like, people are obviously biased in their responses, right? It's like before the change goes live, every miner has an incentive to tell you that they're going to drop if it goes live, and then if it does, they're not bound to that. I think the other challenge is we don't know, there's no good way to model how much their revenue will decrease because we don't know the amount of high tips that people are willing to pay for things like arbitrage and whatnot. So it could very well be that for most transactions, the fees go to barely anything, but for the highest paying ones, the fees still stay relatively constant. And those were a majority of the transaction fee revenue anyways. I think with regards to the security of the chain, a few things worth noting is one, Ethereum is still by far the largest GPU chain. And I think that would probably still be true if we lost even a large amount of hash rate.
00:53:51.646 - 00:54:51.360, Speaker A: And it might be worth finding out exactly how much. And that is probably the biggest risk. We don't want to be the second largest GPU chain because then you open up a bunch of attack vectors. And then the other challenge is the hash rate is at an all time high right now, which makes it obviously less profitable for miners given the increased competition. And it's hard to predict how the hash rate will evolve because there's more than 1559 affecting it, right? Like there's 1559, obviously, but then there's the price of Ether, which is a big factor. And there's also the willingness to pay high transaction fees, which is mostly fueled by DFI. Right now, personally, I would just be very uncomfortable providing an estimate and having people kind of make their decisions based on that because it's such a dynamic thing.
00:54:51.360 - 00:54:56.906, Speaker A: Yeah, I guess that's just my estimate.
00:54:56.938 - 00:55:37.150, Speaker E: It makes sense, but maybe it's just kind of clear communication of this is what we expect to be the effect of the change on miners. And this is just to inform community on these miners that saying this and this and this and maybe collect. Are there any miners that saying they're going to join because of that change? Because if the market changes, even as those statements might be biased, as you say, at least informing community what the collected opinions from miners are and what their stated actions are so the community can prepare to know at least whether to expect the turmoil or to expect the Smith transition.
00:55:37.730 - 00:56:17.002, Speaker A: Yeah, I think that's fair. I can definitely look into trying to collect some statements and just list the general changes. And I guess the philosophical argument that you end up with is, should miners be actively part of the ecosystem and influencing decisions? Or should they be kind of price takers where the ethereum protocol has certain properties, and then they can choose to mine it or mine another chain or not mine at all? I think that's where most of the disagreements come in.
00:56:17.136 - 00:56:55.670, Speaker E: Yeah, I think it's tough. I'm not having any statement on this one here. I'm just saying that we should clearly communicate what the process will be. If the core deaths say for this change, we take the stance that even as miners strongly oppose or if they do not strongly oppose the state, even as miners mildly oppose or do not oppose whatever it is, even then we decide to go forward with the change. And then the community can expect that there will be some potential risk around the change because the miners are not aligned with Cardiff's.
00:56:58.730 - 00:57:38.550, Speaker C: Mind. Historically, it has been very difficult to get feedback from miners. You have this nonstop stream of people coming into the channels and whatnot, complaining and saying their opinions, but when you try to actually reach out to the big pools like F two pool and Ethermine and Spark pool, you get no response. It's very hard to actually talk to the farms. The farms are non communicative. I don't know why that is, but historically, that has been the like, we can get people who say they're miners to show up and talk, but no one will admit to being a major farm or, like, a large scale miner.
00:57:39.290 - 00:57:48.710, Speaker E: I think at least in the past, we were saying that Hudson was having a channel to connect to mining pools and be able to collect.
00:57:49.550 - 00:58:01.630, Speaker C: He has a channel to talk to them, but that channel hasn't historically not my understanding is that his channel has historically not worked for getting feedback from them. Like, if you give them a survey to fill out, even just like, one question, you just won't get anything back.
00:58:01.780 - 00:58:36.706, Speaker A: Whereas I can follow up on that. Yeah, we did get some feedback from I think so. When we did the first outreach, we got some feedback from miners. I think generally, most of them didn't want to be identified with regards to their entity. I might be wrong. Some of them might have wanted, but the general sense was people didn't necessarily want to be identified. But I can reach out and see what people might be comfortable with and.
00:58:36.748 - 00:59:07.170, Speaker E: How we could aggregate them as the names of the mining pools that are mining blocks. They are publicly known. So we can just provide a list to community saying these miners decided not to comment on the change. These ones are for, these ones are against, and which is clear on the list. There'll be like eight or nine entities of the pools or big miners that we see, assuming that we can actually identify who is behind the pools. But I think this is not really a secret.
00:59:07.830 - 00:59:09.300, Speaker A: Yeah, I think that.
00:59:11.350 - 00:59:19.110, Speaker B: But I also think Thomas had a good point in just saying that this is something we should definitely talk about at some point on the all Cordefs.
00:59:19.530 - 00:59:19.942, Speaker A: Yes.
00:59:19.996 - 00:59:22.840, Speaker B: Because I think that's a proper place.
00:59:23.370 - 00:59:50.030, Speaker A: Yeah. And I'll try know before this gets brought up on Cordev's again to follow up about the minor conversation. And I guess both try to list I think we can list the objective changes that 1559 will bring to miners. Like, you're going to get the tip, but not the base fee and whatnot and some hypotheses about how this can affect them and try to get their feedback.
00:59:52.130 - 01:00:12.386, Speaker B: But also, just to be clear, right, the merge is probably coming within I don't know, I don't want to be too optimistic, but like six to twelve months after after 50, 59. So this is the point at which we just sunset mining completely. So yeah, I think it is important to keep that in perspective. We are talking about the last six to twelve months of mining.
01:00:12.498 - 01:01:07.078, Speaker A: Yeah, but I think I like Thomas's point, where we might very well decide to go ahead, even if there was, say, like, 100% opposition from mining, and just say that, you know what? Other people will mind the chain and whatnot. And that's fine, but at least we can kind of be clear with that decision and people can expect some sort of potentially turbulent upgrade. And that's very helpful for folks like, say, infra or exchanges or whatever to know. Yeah, I guess to be clear, I don't think that because we collect negative feedback from miners, we should not do the change, but we can make a conscious decision to do the change even though there's negative feedback, because there will always be negative feedback from any stakeholder group on any large change to the network. Right.
01:01:07.244 - 01:02:01.020, Speaker E: Yeah. I'm not saying here withdrawing from something that is quite clearly supported on the Cardiffs channels, but also not to be quiet about the lack of support from miners and be clear with the community. And if we decide to say, okay, we're going with it, even against some opposition, then we have to be clear and not try to just hide it and be quiet about that. So community needs to know because it may actually lead to some potential problems during the transition. Right. Like some miners can be very adamant if they feel totally ignored and not even included in the communication channel. So I'm not saying that there will not be some heavy lobbying and campaign on Twitter and so on, but the more you try to hide it, the more of a problem it may become.
01:02:02.590 - 01:02:04.140, Speaker A: Yeah, I agree.
01:02:09.230 - 01:02:09.980, Speaker C: Absolutely.
01:02:13.970 - 01:02:35.960, Speaker A: So the last thing, I guess there were two more things I had on the agenda. So Abdel put together an EEP for the base fee opcode, and he also had like a quick demo for how to join the 1559 testnet. Oh, 20 718 as well, I guess. Yeah. Is there anything else that people want to discuss just because we only have 20 minutes?
01:02:41.050 - 01:02:50.810, Speaker C: I would like to spec out 20 718 sooner rather than later. I'm not a huge fan of letting it wait, but if everybody else wants to continue waiting on that, I will concede.
01:02:52.430 - 01:03:01.360, Speaker A: So for 20 718, if we have the testnet test over the next week or two, does it make sense to do 20 718 right after that?
01:03:04.530 - 01:03:18.462, Speaker D: We can do that in parallel, I think, because we have the other test net to do some changes and doing integration testing. So I will not wait for the performance results to start personally.
01:03:18.526 - 01:03:30.310, Speaker A: Well, I guess Nethermind and vulcanize, can you also do it in parallel or is it valuable to maybe just start with Besu and then add the other clients?
01:03:31.290 - 01:03:42.860, Speaker E: Yeah, we already have the implementation for 2000 and 718. Maybe not with the latest changes that are not fully agreed on, but we do have an implementation. We can forecast that when it's ready.
01:03:46.590 - 01:03:52.640, Speaker D: Did we agree on the transaction types we are going to use, et cetera, the value, the actual value.
01:03:55.090 - 01:04:15.730, Speaker C: We haven't speced out at all for. Someone needs to submit a request, probably me, to 1559. That adds in 20 718 integration. And as part of that, we'll pick transaction types. I'm going to most likely just pick whatever's after I forget what numbers you use for them, but we'll use whatever.
01:04:15.800 - 01:04:17.426, Speaker B: Okay, that makes sense.
01:04:17.448 - 01:04:24.774, Speaker A: And yeah, I guess if you can just reshare that PR Mika in the Dev channel or something, just so people can review it, that's probably a good way to start.
01:04:24.972 - 01:04:27.800, Speaker C: I need to write it first. I've been waiting to write it.
01:04:28.910 - 01:04:45.038, Speaker A: I thought you said you had it. Yeah, no worries. Cool. Yeah. So, yeah, if you can get started on that, then we'll review it when it's ready and we can get that started. Thank you. Cool.
01:04:45.038 - 01:04:56.260, Speaker A: Anything else before we go to the base code in the testnet demo? Okay, abdel, over to you.
01:04:57.030 - 01:05:48.850, Speaker D: Yeah, so the create basic cut. So nothing crazy, we just want to add a new EVM OPC to get the value of the base of the current block. I created the PR. So basically with the value and the proposed gas price and yeah, I added the nominal case and we decided to do exactly what we do with Opcode. For example, if we reach an Opcode that has the value of the base Opcode, we just throw an invalid operation error like we currently do. So, yeah, nothing crazy. So I created the heap and waiting for review.
01:05:48.850 - 01:05:51.810, Speaker D: So Mika did the first review and merged in Master.
01:05:53.190 - 01:06:02.550, Speaker E: So what does the gas price return and what does the base fee return? So gas price will return the actual price to the traction, right?
01:06:02.620 - 01:06:09.846, Speaker D: Yeah, exactly. And the base here returns the current base fee in the block header.
01:06:10.038 - 01:06:12.060, Speaker E: Great. Nice. Yeah.
01:06:12.990 - 01:06:14.700, Speaker D: So, yeah, very simple.
01:06:18.030 - 01:06:18.682, Speaker E: And yeah.
01:06:18.736 - 01:06:20.970, Speaker D: That's it about the IP.
01:06:24.830 - 01:06:33.460, Speaker C: Out of curiosity, do any client desk here think that that EIP will be hard in any way or is that something that we can just kind of shoe in?
01:06:36.720 - 01:06:44.350, Speaker E: I think it'll be super easy to implement at the same time. If it doesn't happen at the beginning, it's not a big issue.
01:06:50.080 - 01:06:53.330, Speaker A: Cool. And yeah. Abdul, you want to share your demo?
01:06:57.700 - 01:07:02.790, Speaker D: Yeah, let me show my screen. Can you see it?
01:07:05.240 - 01:07:09.352, Speaker A: Yes, we see the block, the page.
01:07:09.486 - 01:08:43.334, Speaker D: Okay, nice. So basically yeah, this is the network status page for the new testnet. So currently we have four Bezel nodes so we are close to 1 million blocks and yeah, as I said, we have 100 million accounts on this testnet and 100 million entries in the state storage. And basically we implemented the tool to join the testnet easily. So the idea is to build a client diagnostic tool but for the moment I only have Bezu implementation. But the idea is that after that I can try to add netamind and get support if you give me just some basic stuff like a binary capable to do 59 stuff as the genesis and the config file and then I could try to add nettermind and get support. And basically you install this command line tool and then you simply run EP 1559 run so it will download config file templates, it will prompt you for name to display in the HTA.
01:08:43.334 - 01:10:01.576, Speaker D: So for example, implementer of course nine and then detects that you don't have Bezu installed on your machine. Yeah, because by default Bezu is a default choice because I don't have the other client support for the moment. So I will install Bezu automatically. Okay, so it prompts the command line to run the node but if you press Enter, it will run automatically and open the network status page. Shemo effect sorry, let me the comments again. Okay, so now Bezo is running and it started to connect to the peers. Okay.
01:10:01.576 - 01:10:50.920, Speaker D: The synchronization started and yeah, basically if I refresh again, I had the new node and it started to sync. So the first block are really big because I generated the tool basically to fill the network with a lot of accounts and a lot of entries in the smart contract. And yes, there is another command also in this tool. Basically it's a simple faucet. So for example, I want to add some it to this address to play with it. So basically it 1559 for set with the address and you will get 0.5 it on the testnet.
01:10:53.820 - 01:10:54.424, Speaker C: Yeah.
01:10:54.542 - 01:11:55.470, Speaker D: Okay, this is 0.5 it. The idea is to have a simple tool to join the testnet and to have more users running the node on EP 1559. We also have a tool to basically submit transaction to this testnet because there is no implementation yet in the wallet provider. So basically if you want to submit 59 transaction you have an estimate button that will generate VCAP for you and you can submit the transaction and you have the link to the block explorer and yeah, basically you can submit 1559 transaction and yeah, that's pretty much it.
01:11:59.200 - 01:12:41.990, Speaker A: Yeah, that's pretty cool. Thanks for sharing. Cool. Anything else anybody wanted to share, discuss, bring up? Okay, well, yeah, thanks everybody. I guess we'll follow up on the Discord Dev channel to set up the largest state testnet. Mika will also be waiting for your PR and we'll review that. Yeah, and then I guess we can figure out, based on the testnet test, when we want to have another call or follow up, but yeah, I think this is looking good.
01:12:43.400 - 01:12:45.430, Speaker D: Yeah, thanks.
01:12:45.800 - 01:12:48.310, Speaker A: Thank you. Yeah, thanks everybody.
01:12:48.680 - 01:12:49.520, Speaker B: Thanks. Bye.
