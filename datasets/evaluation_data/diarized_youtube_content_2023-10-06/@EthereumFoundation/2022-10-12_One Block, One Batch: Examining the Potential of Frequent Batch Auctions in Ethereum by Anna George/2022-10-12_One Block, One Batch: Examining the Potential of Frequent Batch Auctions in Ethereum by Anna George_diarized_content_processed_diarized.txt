00:00:15.450 - 00:00:16.846, Speaker A: I should have put Mev in my.
00:00:16.868 - 00:00:18.862, Speaker B: Talk title because we are actually talking.
00:00:18.916 - 00:00:42.250, Speaker A: About mev and I think we would have a higher attendance. But anyways, it's going to be an interesting talk, I promise. So yeah, the focus for today is how basically application design decisions can remove or at least reduce the centralizing force that mev is placing on the Ethereum blockchain.
00:00:44.350 - 00:00:48.714, Speaker B: All right, so let's see. Basically the first part of the talk.
00:00:48.752 - 00:00:54.874, Speaker A: Will focus about how the degree of centralization in proof of stake.
00:00:55.002 - 00:00:56.686, Speaker B: So basically we will look at a.
00:00:56.708 - 00:01:41.434, Speaker A: Few data points telling us how decentralized are we actually today. And then the second part will focus on a more bright layout for Ethereum where we are heading and hopefully ways of how we can avoid the Dystopian future scenario. And that will lead us to the next part where we will talk about how specifically we can make design choices for applications to reduce MAV and then dive into car protocol as one implementation of batch auctions that basically facilitate this. Cool, let's dive right in and look at some data. So we had a talk, the talk right before was focusing on Validators and like he was saying actually is that.
00:01:41.472 - 00:01:43.870, Speaker B: The set of Validators today is quite.
00:01:44.020 - 00:02:39.434, Speaker A: Centralized in a way. You have staking providers such as Lido who hold more than 25% of the market share followed by individual stakers. But then already you have the centralized exchanges Coinbase, Kraken and Binance who in total combined also make up more than 25% of the entire validator set on Ethereum today. So you can say we have already some degree of centralization in Ethereum today but of course now with mev you add additional risk of decentralization growing further, right? Like mev. Why is that helping? Why is mev causing centralization is because people or like Validators that have the chance of proposing the next doc, they can move transactions around in a way that they are able to extract additional.
00:02:39.482 - 00:02:40.366, Speaker B: Value out of it.
00:02:40.388 - 00:03:23.886, Speaker A: In this way they're actually able to reap more rewards from the blocks than anyone else would be able to do. And this way they grow their pie more and more over time. And this was already bad. This already existed in proof of work, but now in proof of stake. This was accelerated because now you also have the downside, basically, that you know in advance who are the next set of Validators. So you can have more sophisticated mev attacks that involve multiple blocks and even are taking place across multiple blockchains. The response to that is PBS the proposal Builder separation where basically you now divide the tasks of the validator into two.
00:03:23.886 - 00:03:55.286, Speaker A: You have the block proposer and the block builder. And now the block builder is basically competing against each other and the one that is able to extract most value is winning the competition because they are basically bidding against each other. And the one who is able to pay the most to the validator is the one who is picked. So you might say that basically now PBS is helpful to move the responsibility like to move the centralization away from.
00:03:55.308 - 00:03:57.186, Speaker B: The validators to the block builders.
00:03:57.298 - 00:05:00.154, Speaker A: But now actually this is problematic because now you have more centralizing force on the block builders. You can even enter a scenario where basically more than 60% or even more and more than 90% of all blocks are created by one single block builder. And this can even be accelerated if they for example would have access to private order flow. So if now you would have a wallet such as MetaMask who decides I'm my transactions to a single block builder, then the single block builder would have additional advantages over the other block builders and would more reliably be able to win this block builder competition and gain more and more share of the network. Okay, now let's actually get to the interesting point and look at some data. So here you see basically how much mev has been extracted 145,000 blocks before the merge and after the merge. And this is roughly equal to 20.1
00:05:00.154 - 00:05:19.134, Speaker A: days. And basically, I mean proof of stake has only been live for not even four weeks at this point. And if you look at this data it almost looks like we are extracting less mev right now than we did before the merge. That's interesting, right? But what is the conclusion?
00:05:19.182 - 00:05:20.500, Speaker B: Why is this the case?
00:05:21.910 - 00:06:29.480, Speaker A: Now if we look at this slide we basically zoom into one specific kind of mev sandwich attacks and we can look basically that it's starting, it's showing the first 20 days of sandwich attacks on Proof of Stake. And you can see basically that the amount of value extracted via this attack is growing, right? So basically at the beginning when we moved from Proof of work of Proof of stake, we had one short period of time where less mev was extracted. But now over time we are getting back to the same stage as we did before. And now here, what we see here is basically a chart that is showing the adoption of Mafboost. And Mafboost is the protocol created by the Flashbots team that allows for this proposal builder separation, that allows for this block builder competition. And the interesting part is that basically they correlate, right? Like you see how with the growing adoption of MAV boost you also have growing extraction of sandwich attacks. So that's one important point to make.
00:06:29.480 - 00:06:59.250, Speaker A: But then also let's see how the adoption is going. So today already more than 49% of all validators that we were looking at in the first slide, they have already integrated Mafboost. Now let's go one level further and look actually at the relays themselves. So Mavboost was created by the flashboards team but it's open source so anyone can create their own relayer with their own rules of the game. For the competition.
00:07:00.390 - 00:07:02.866, Speaker B: However, the relayer that was created by.
00:07:02.888 - 00:07:08.920, Speaker A: The flashboards team is by far the most leading one, right? It has 83% market share.
00:07:09.690 - 00:07:11.974, Speaker B: So you would say what's the problem with that?
00:07:12.012 - 00:08:11.434, Speaker A: What's the problem about flashboards having a large market share? But the problem arises then when one of these relayers decides to start Censoring transactions. And this is exactly what Flashbot does today, right? They are complying with OPAC with OPAC? With the Office of Foreign Asset Control. And this means that any transactions that were created by the accounts that have previously interacted with Tornado cash are not being put into these blocks. So if flashboards has 83% market share of 50% market share, basically of those that are being integrated by validators, this means that today already more than 40% of all blocks on Ethereum are Censoring transactions. They're censoring the accounts that have previously interacted with Tornado cash. Now we zoom one level further and.
00:08:11.472 - 00:08:13.398, Speaker B: Look at the block builders.
00:08:13.574 - 00:08:44.514, Speaker A: So who is actually behind these block builders? And here you see basically this is an entire overview of all the block builders today operating with any of the relayers in PBS. And you see that the top two have more than 50% market share. That means if basically you have 50% adoption of MAV Boost and within MAV Boost, 50% of blocks are created by two players that in total, of all.
00:08:44.552 - 00:08:46.914, Speaker B: The existing blocks that are today created.
00:08:46.962 - 00:08:58.450, Speaker A: In Ethereum, 25% of them are created by two single individual block builders. And then just adding again the argument that I'd mentioned at the beginning.
00:08:58.530 - 00:09:00.646, Speaker B: Basically, if you have private order flow.
00:09:00.678 - 00:09:03.334, Speaker A: If Musk or anyone else is deciding.
00:09:03.382 - 00:09:05.306, Speaker B: To sell their order flow to this.
00:09:05.328 - 00:09:26.046, Speaker A: One individual blockbuilder, you have very fast and accelerated centralization force even more like these Blockbuilders will win even more market share. And suddenly this dystopian future scenario of where Ethereum hopefully is not heading towards suddenly doesn't seem so unlikely anymore.
00:09:26.238 - 00:09:28.494, Speaker B: Already today you have two block builders.
00:09:28.542 - 00:09:31.234, Speaker A: Having 25% market share and they can.
00:09:31.272 - 00:09:33.970, Speaker B: Easily grow this very quickly.
00:09:34.120 - 00:09:46.374, Speaker A: Okay, that was like the negative side of the talk that's now focused more on the hopefully more utopian future where we are heading in Ethereum. And for this, let's have a look.
00:09:46.412 - 00:09:49.398, Speaker B: At a quote that Vitalik said earlier this year.
00:09:49.484 - 00:10:50.686, Speaker A: So what is his vision for Ethereum, right? Like how can you avoid the centralizing force of mev? And what he is saying is that we have to create an insulation layer around the core protocol to basically ensure that these negative externalities that are created by mev cannot affect the core decisions that we are taking. Because right now with having smart contracts built on top of Ethereum, you have these applications that now allow suddenly for decentralized exchange trading and for liquidations. And all these transactions, they basically set incentives now for value extraction that give more power to very important players and stakeholders of the Ethereum network. And we need to find a way to not do this because right now our solution is basically, okay, damn validators are centralized, so let's move it to the block builders. But now the block builders are centralizing. So where do we move this? And we need to find a way to avoid this.
00:10:50.708 - 00:10:52.282, Speaker B: We have to have a better structured.
00:10:52.346 - 00:10:59.520, Speaker A: Way of protecting the Ethereum core protocol. And what Vitalik said himself is basically.
00:11:00.050 - 00:11:03.130, Speaker B: The way forward is that these risks.
00:11:03.210 - 00:11:32.730, Speaker A: They need to be absorbed elsewhere. They need to be absorbed either by layer twos or by the applications themselves. Here we have another quote by Stefan, the co founder of Flashbots, who actually last week announced that he's leaving the team because he does not agree with the censoring that Flashbots is doing today. And he is also stressing the point that the right way of dealing with MEB is not to basically try to extract it and then sell it or.
00:11:32.800 - 00:11:35.674, Speaker B: Distribute it, but the right way is.
00:11:35.712 - 00:11:53.242, Speaker A: To create applications that don't extract the value in the first place. And this leads us basically to the next part of the talk where we will look at how can we design applications in this way that they are not exposing mev.
00:11:53.386 - 00:11:54.914, Speaker B: To do that, we first have to.
00:11:54.952 - 00:12:03.380, Speaker A: Understand where mev is actually coming from. Why do we have this? We need to understand where it's coming from in order to be able to avoid it.
00:12:04.470 - 00:12:08.342, Speaker B: We basically believe, or it's pretty clear.
00:12:08.396 - 00:13:07.538, Speaker A: Actually, that one of the reasons, or like the main reason why MEB exists today is that within a single ethereum block, you have multiple different token prices for a single individual asset. So if you use the example of decentralized trading, for example, you can have a block where five people all want to sell USDC, for example, they all interact with the same AMM, but each of them would get a different price within a single block that has one single time. It's very interesting, right? Like you have an AMM, one person interacts with it, they move the price. The next person interacts with it, they move the price again. And because of that, they basically create incentives for other players to jump in, move their transactions around, place additional transactions in front, and after them to extract value from these users. To give a more concrete example of.
00:13:07.564 - 00:13:10.540, Speaker B: A real block, this was like six days old.
00:13:12.350 - 00:13:19.206, Speaker A: We had one single block where there was eleven different traders that all traded East USDT.
00:13:19.398 - 00:13:22.894, Speaker B: And East USDT is obviously a super liquid pair, right?
00:13:22.932 - 00:13:59.930, Speaker A: It's like one of the most liquid pairs on ethereum. And still within a single block, you had eight different clearing prices. Like the price spread across 1337, USD to 1351. So you had more than 1% spread in price within a single ethereum block. And this very much demonstrates the value that can be extracted if you have so many different prices in one single block. Here, this was just like a nice pointer because Mev obviously has been discussed for a very long time. It hasn't been addressed for a very long time, but it was known about since 2014.
00:14:00.590 - 00:14:01.946, Speaker B: This is a reddit post.
00:14:02.048 - 00:14:10.974, Speaker A: And the interesting part here is basically the screenshot on the right where Vitalik interacted with. And he basically said, well, one way.
00:14:11.012 - 00:14:13.710, Speaker B: Of how we could tackle this problem.
00:14:13.780 - 00:14:18.830, Speaker A: Of value extraction is by processing orders in batches.
00:14:19.410 - 00:14:20.670, Speaker B: So let's take a look.
00:14:20.740 - 00:14:22.346, Speaker A: If like looking back at the previous.
00:14:22.378 - 00:14:23.646, Speaker B: Block that we just saw, where we.
00:14:23.668 - 00:14:43.350, Speaker A: Had eleven different traders who got eight different clearing prices, what would happen if we were able to batch them all together and would give them a single unique clearing price? Then we would actually be able to even offer them better prices because we wouldn't have to move the price on a price curve up and down, up and down.
00:14:43.500 - 00:14:45.910, Speaker B: But we would also be able to.
00:14:46.060 - 00:14:50.694, Speaker A: Not have this much price impact and have additional value that we could give.
00:14:50.732 - 00:14:52.006, Speaker B: Back to the users.
00:14:52.118 - 00:15:00.346, Speaker A: And in this concrete example, it would be 930 US dollar that we could additionally pay out to the users. But the real benefit on top of.
00:15:00.368 - 00:15:01.670, Speaker B: This is that because you have a.
00:15:01.680 - 00:15:34.520, Speaker A: Single clearing price, you don't expose those trades to Mev. Okay? And this leads us now to Cow protocol, which is basically an implementation of batch auctions on Ethereum today. How does car protocol work? So we are doing batch auctions, we are batching trades together. And what happens is that basically users on Cowswap or Cow Protocol, they go to our UI and then they sign messages. They sign and intend to trade. And this is actually really important, right? Because they sign a message and.
00:15:37.050 - 00:15:37.366, Speaker B: They.
00:15:37.388 - 00:15:55.534, Speaker A: Don'T just sign a transaction on Ethereum. This gives us more flexibility what to do with these transactions. We are actually then able to match them together. So we collect all these orders in our off chain order book and then we have a competition. We have a competition of so called.
00:15:55.572 - 00:15:58.414, Speaker B: Cow batch builders that basically look at.
00:15:58.452 - 00:16:52.474, Speaker A: What are all the transactions that currently exist in our off chain order book and try to find the best possible way of matching them together by finding a unique clearing price for all these trades. And then the winning cow batch builder is the one that would settle these trades on chain. And what is to be highlighted here is that it looks maybe on high level, it looks very similar to the block builder competition, but it's very different. It's quite the opposite actually, because in the block builder competition you are really high. Like you're focused on extracting most value from the transactions, right, in order to be able to win the competition against the other block builders. But on Cowswap, you maximize the value for the users.
00:16:52.522 - 00:16:54.126, Speaker B: The bot builder, the batch builder that.
00:16:54.148 - 00:17:08.374, Speaker A: Is able to find the best possible prices for our users is the one that would win the competition. And this is enforced by the objective function that we are using. The batch builder that is maximizing most.
00:17:08.412 - 00:17:10.326, Speaker B: The utility for the users is the.
00:17:10.348 - 00:17:16.214, Speaker A: One that wins the competition. All right, so how does this work?
00:17:16.252 - 00:17:18.566, Speaker B: How do we keep our cow batch.
00:17:18.598 - 00:17:41.870, Speaker A: Builders honest is they participate by staking on our protocol. Then they can participate in the competition, and in case of malicious behavior, they would be slashed. But if they actually win the competition and they execute the trade on chain, they're being rewarded by the protocol. So now this is all like all sounds very good in theory, right?
00:17:41.940 - 00:17:43.658, Speaker B: Let's look at it in practice.
00:17:43.754 - 00:18:26.314, Speaker A: So Cow Protocol has been live since a year and a half. We have been processing $15 billion in trading volume. So we have a lot of real life examples. This is like an example batch from eleven days ago where we had one user that was wanting to sell $40,000 worth of moneyfall against USDC and another user that wanted to actually buy moneyfall, wanted to buy $48,000 worth of moneyfall. So in this particular batch, our cow batch builders were able to match the two trades together and in this way create additional surplus for our users, additional.
00:18:26.362 - 00:18:28.394, Speaker B: Value that could be given back to the users.
00:18:28.442 - 00:19:33.170, Speaker A: Because instead of processing $48,000 worth of tokens on one AMM and shifting the price and then settling another transaction of 40,000 $48,000 and moving the price back instead, we were able to match these two trades directly against each other, and only the leftover amount of roughly $8,000 needed to be placed and executed in an on chain AMM. And this way we were able, due to the price impact, the removed price impact, we were able to save $1,500 for users. And also we were able to save on protocol fees for the users an additional $800 that didn't have to be paid to the AMM. Cool. And that basically leads me already to the final slide of my talk. So our vision is to protect the users and our vision is to protect the Ethereum core protocol against the negative centralizing externalities of mev.
00:19:33.910 - 00:19:36.246, Speaker B: But to achieve this, we really have.
00:19:36.268 - 00:19:42.006, Speaker A: To become the backbone of decentralized trading on Ethereum. And for this, what we would like.
00:19:42.028 - 00:19:44.182, Speaker B: To achieve is that really, like, our.
00:19:44.236 - 00:19:49.526, Speaker A: Cow batch builders are submitting one batch for each Ethereum block.
00:19:49.718 - 00:19:52.182, Speaker B: Ideally, this batch would actually be placed.
00:19:52.246 - 00:20:25.780, Speaker A: First in the block because this way we could also avoid negative slippage and fail transactions. But the real argument here that I want to make is that even if our batch is not placed first in a block, by growing our share, we are basically reducing the total amount of mev transactions in a block. And this means, in other words, growing the share of Cow Protocol means at the same time reducing the share of mev. Thank you everyone, for watching.
00:20:27.610 - 00:20:33.862, Speaker C: Thank you, Anna. We still have five minutes more. So if there are questions, I got one.
00:20:33.916 - 00:20:34.520, Speaker D: Two.
00:20:36.650 - 00:20:47.500, Speaker E: Hi, I have one question. How it can be more profitable when MEF so you have to reward more than flashbots, right?
00:20:49.630 - 00:20:53.840, Speaker A: Can you repeat your question? You mean how can we ensure that.
00:20:55.330 - 00:21:02.510, Speaker E: How you can give more rewards to cover builders than me? Of builders?
00:21:03.510 - 00:21:08.500, Speaker A: Basically, maybe can I go back in my slides just to make this point clear?
00:21:09.190 - 00:21:12.754, Speaker B: Is that possible? Okay.
00:21:12.792 - 00:21:24.066, Speaker A: Otherwise I can explain it. But basically we had this one slide where you could see that the value chain of a transaction from it's being placed and it's being executed on chain.
00:21:24.178 - 00:21:25.400, Speaker B: So basically.
00:21:27.290 - 00:21:27.942, Speaker A: Yeah.
00:21:28.076 - 00:21:35.574, Speaker B: Okay. These are two separate processes, right? Like the first part is basically car protocol.
00:21:35.622 - 00:22:17.010, Speaker A: That is the application on top. And what we do is we collect the user orders and we collect them they're signing intents to trade. So we collect them off chain in an off chain order book. And then we have the cow builder competition and they basically they have their own set, they have their own rule set and their own competition rules, right? And it is completely separate from the blockbuilder competition. So someone who is participating on a cow batch builder competition, basically they know if they participate, they only get rewarded, they only win if they are maximizing value for the user. But this is orthogonal to the block builder competition on Ethereum that happens at a later stage.
00:22:17.090 - 00:22:19.030, Speaker B: So, right, like the cow batch builders.
00:22:19.450 - 00:22:27.034, Speaker A: They find the perfect solution. They then submit them on chain. And on chain, they can actually decide how they want to submit this.
00:22:27.072 - 00:22:29.286, Speaker B: This is up to the batch builders.
00:22:29.398 - 00:22:46.466, Speaker A: They can either submit them directly to the public Memphis, or they can submit them via a relayer if they decide that they want to additionally protect themselves against mev. However, basically at this point in the execution, if they are being front end or sandwich, this is actually something that.
00:22:46.488 - 00:22:49.554, Speaker B: The block builders, sorry, the batch builders have to pay for.
00:22:49.592 - 00:22:52.114, Speaker A: So at this point, the user is.
00:22:52.152 - 00:22:55.538, Speaker B: Already protected by the price that the.
00:22:55.544 - 00:23:03.894, Speaker A: Cow batch builder promised. So the cow batch builder wins the competition by promising. I can get at least this price and then they are hold accountable for this.
00:23:03.932 - 00:23:06.360, Speaker B: So this is for sure the price that the user gets.
00:23:06.730 - 00:23:32.854, Speaker F: Hey, thank you for laying out the problem with L One right now in terms of mev, the very nice slides. I'm curious about how you moving this problem into the application layer. How you deal with censorship, resistance problems in the off chain order books specifically. So today, if I go to the cowswap website and I make a transaction, how do I know I'm not going to be censored by the cowswap like company or whoever runs this protocol?
00:23:33.002 - 00:23:33.314, Speaker A: Yes.
00:23:33.352 - 00:23:34.482, Speaker B: No, that's a very good question.
00:23:34.536 - 00:24:00.970, Speaker A: It's basically something that we're working on. We still have some centralizing facts. Components in car protocol. But essentially basically right now we have this off chain order book that is hosted by us. But the idea is that in the future this will be decentralized and not hosted by us anymore. And yeah, basically this is the answer. It's an ongoing process where we have to decentralize more and more of the components.
00:24:02.270 - 00:24:04.060, Speaker C: One last question, Anna. Here.
00:24:06.190 - 00:24:25.410, Speaker D: Question is when you're trying to remove the math in the blocks by cutting these batch builders in between, how is it then still attractive from a builder perspective? Since he has less math in the block now, how can he still win the bid auction and then how you make sure that the block gets actually proposed?
00:24:27.590 - 00:24:40.174, Speaker A: Right now, usually not 100% of the transactions in a block are mev transaction, right? So basically, even if you're not the first in the block, you could still ensure that you're part of it. But I think one interesting point that.
00:24:40.232 - 00:24:41.654, Speaker B: Where we could get at is by.
00:24:41.692 - 00:24:48.902, Speaker A: The more order flow we are actually processing, the more surplus we are generating, right? This was the point on this one.
00:24:48.956 - 00:24:51.210, Speaker B: Slide over here where we have this.
00:24:51.280 - 00:24:55.750, Speaker A: Real example of creating an additional $2,300 in surplus.
00:24:55.910 - 00:24:57.626, Speaker B: So what we could do is for.
00:24:57.648 - 00:25:25.390, Speaker A: Example, if we are creating this much more value for users, we could take a percentage cut of this. If it was needed in the future to pay block builders to guarantee execution in a block, we could do this. But our future scenario is more focusing in the direction that hopefully this won't even be necessary, right? Because we are basically trying to win over more share of the general transactions on Ethereum and then that would automatically reduce the amount of mev transactions in a block.
00:25:26.250 - 00:25:34.210, Speaker C: Thank you Anna. We are running out of time, so you have enough time to go to the next talk. Thank you so much. And a big round of applause for Anna.
