00:00:12.730 - 00:01:02.362, Speaker A: I'm Isaac. I'm the co summoner of the Logos Dao, and I'm also a research fellow at Metagov. And today I'll be talking about some real world examples of how daos have been exploited once by me based on proof of inattention and just generally lack of monitoring infrastructure. So I'll be detailing how I was able to steal some money from a Dow, how other people are attacking them even as much as, like last night, and how you should be protecting your infrastructure from this type of vulnerability. So I've been referring to this as like, proof of inattention. So attention is really the most scarce resource in dows, and so governance tooling should be designed accordingly. There's all sorts of optimistic architectures out there that rely on people to actually pay attention.
00:01:02.362 - 00:02:21.318, Speaker A: And that sounds pretty simple, but people paying attention is not something that you can actually assume is happening. So safesnap is an example that I think is one of the most widely used optimistic architecture tools in Daos, which uses reality eth to bring off chain gasless votes on chain for execution. But Malik Daos also have a lazy or optimistic consensus mechanism where there's no minimum quorum for proposals to pass. Thankfully, they do require sponsorship, but these are just two cases of things where people could very easily sneak proposals by into dows while people are not paying attention. So the main thing that I want to highlight today is about reality eth. I'm called on to set up many dows, and often people are like, well, why can't we just have gasless voting and use reality eth to execute our stuff? And I think the assumption is that it's this magical thing that brings reality and truth on chain, but that's not inherent. And so the way that reality eth works is that anybody can ask a question of the oracle that's like, hey, did this dow vote to pay me $20,000? And then that goes in this really confusing format to reality eth that you can see in the middle, which is like almost impossible to decipher.
00:02:21.318 - 00:03:04.882, Speaker A: And then if you put down yes and nobody says no, then that just happens. And so it's not anything that actually relies on a vote having to take place. Reality ETH is a general purpose oracle that you can use when attached to a gnosis safe to take money. So this is just a configuration of how that architecture usually works. Many dows have a gnosis safe, which has multi sig signers. Many dows, including things like one inch, I think, shapeshift a lot of daos out there that use a lot of voting on snapshot have added this reality eth zodiac module. When you add a zodiac module to your nosisafe, you're basically giving it super user privileges.
00:03:04.882 - 00:03:50.678, Speaker A: It can shortcut all signatures. It can do anything with any assets in your safe. And so you have to be very confident in how you've configured that. So reality ETH is the separate application which brings the decisions on chain which get executed on your safe. So anything in your safe, the nfTs, the assets, the interaction with other contracts, it can all be executed by the reality module. And anybody in the world can ask questions of the reality ETH module. So when you're setting something like this up, there's a bunch of parameters that you can use to configure, and it's important to understand the impacts of every single one of these, because if you misconfigure one of them, then you can make yourself significantly more vulnerable to an attack.
00:03:50.678 - 00:04:30.740, Speaker A: So when you set up this oracle, you want to set up a timeout. This is the duration during which people can answer questions. If it's 24 hours, then your question is live for 24 hours, and then whatever the answer is at the end of that period becomes the truth. If it's a week, then you have a week to answer the question. Cooldown is like a grace period after the truth comes on chain, but before it can actually be executed. Expiration is how long it stays valid, and bond is how much you have to put down to make an answer. Now, there's other configurations, but I have some nice timelines that make this a little easier to understand.
00:04:30.740 - 00:05:29.622, Speaker A: So the way that we intend for this to work, that a lot of dows intend for this to work, is that they host a vote on snapshot. And then once that voting period is done, there's a little button on snapshot which says, execute this. And so that asks reality eth a question, and then it goes to the pool of people that sit on reality ETH and answer questions. Unfortunately, there's like three people that sit on reality ETH and answer questions. So usually it's the main person asked the question that also answers the oracle, and they tend to answer honestly and then execute. So this is the intended scenario where you've had your gasols vote, you've minimized your on chain transactions, and then everything executed according to plan. So there's also the dishonest oracle scenario, where any attacker can pose a non existent proposal to reality ETH and submit their own fraudulent answer.
00:05:29.622 - 00:06:04.962, Speaker A: So you don't even have to go to snapshot. You don't even have to make the vote. You can craft a transaction that's like, hey, did this snapshot vote, which didn't really exist, pass? And then you put down a bond and say, yes, it did. And then you wait for that cooldown period, hoping that nobody's paying attention, and then, congratulations, you've been able to steal money from the dow. There's a few different ways that dows can protect against this. There's, of course, overriding the malicious answer. So reality Eth works in a way where you put down a bond to answer a question.
00:06:04.962 - 00:06:56.770, Speaker A: You can put down double the previous person's bond to correct their answer. And that can kind of continue forever until it becomes not profitable to put down those bonds. So the easiest way to do it, that reality ETH wants you to do is just correct malicious answers because you'll take the bond if your answer becomes the truth on chain. You can also request arbitration. So if a dishonest question is posed, anybody could trigger arbitration. But what I've found in surveying a lot of dows on reality ETH and snapshot, most of them kind of skipped, electing an arbitrator, or they set the arbitrator to themselves. And so these very simple misconfigurations can make it so it's like, well, now we don't have an arbitrator, so if we're not paying attention for a week, all of our money is at risk.
00:06:56.770 - 00:07:30.966, Speaker A: There's also the opportunity to veto if there's a cooldown, period. Surprisingly, also, I found that a lot of the Daos that I looked at in doing this research just skipped cooldown. They were like, now, let's just execute this as fast as possible. So these are all things which may seem, like, logical when you're setting up a dow, assuming, like, we're all going to be paying attention for our NFT investing Dao all the time. But then people go on vacation, your multi sig signers go to Devcon. They leave their ledgers at home, and now you're pretty vulnerable. So each one of these can be misconfigured and is often misconfigured.
00:07:30.966 - 00:07:58.194, Speaker A: So if your timeout is too short, then it makes it too hard to catch a malicious transaction. If your cooldown is too short, you have no opportunity to veto. If you have a low bond, it's trivially inexpensive. Somebody could put down a $10 bond for a fraudulent answer. If you have no arbitrator, then you have no final safeguards. Against that, and an absent or negligent multisig signer removes the vetoer opportunity. All of these are actively being exploited, even like yesterday.
00:07:58.194 - 00:08:36.554, Speaker A: As I was saying, this is very much an ongoing issue. So first, I'll detail how, in the springtime, I noticed a vulnerable honeypot, actually called the emoji, like honeypot dow eth or something, where I wanted to figure out how easy it was to actually exploit this. So a little over a year ago, gnosis put up this bounty. They're like, raila ETh is this great new module. Let's put $50,000 in here and see if anybody steals it. If no one steals it, then we can feel confident that this is safe. But like so many things in crypto, it just kind of went under the radar.
00:08:36.554 - 00:08:55.750, Speaker A: No one really noticed. So this thing sat dormant. I have the address here, and I'll share this. After. It sat dormant for a little over a year, no activity. And so I decided to try to exploit it, but I was doing it for research purposes. So I live tweeted the exploit to make it good and not illegal.
00:08:55.750 - 00:09:41.782, Speaker A: So what I figured out is how to craft the exploit using the ad proposal feature on Etherscan, where you craft a transaction. And in this case, I was like, okay, I want this dow to send me, like, 19,420 die. And so I crafted the transaction locally and then hashed it and included it on the etherscan link. Now, a quirk of this is that looking at this proposal, you actually don't know what my transaction is, because it's only a hash of the transactions that gets asked to the oracle. So this is another scenario where if you see a malicious proposal, you don't even know what the attacker is trying to do. They could be trying to take $1. They could be trying to drain the whole treasury, but all transactions are hashed so that you have absolutely no idea what's going on.
00:09:41.782 - 00:10:09.262, Speaker A: So in this case, I submitted a fraudulent proposal, and then I went on to Reala eth, and I paid 0.1 eth as a bond to say, yes, this is true. It was fine for about 24 hours, and then I saw a tweet from Oren. I cheekily called my proposal id. Nothing to see here, because I kind of wanted it to get detected. I could have put a proposal id, which blended in even better, but I put know nothing to see here. Oren found that funny, I guess.
00:10:09.262 - 00:10:38.562, Speaker A: And so Oren and some of the other folks from gnosis were like, hey, it looks like somebody's actually trying to drain our gnosis safe. We should veto this. But much like the gnosis safe table earlier this morning, nobody was present to veto the transaction. Being a honeypot. Dow, they set this up as like 24 hours, periods, whatever. It'll be fine. I'll go back to my funny slide just for pictures.
00:10:38.562 - 00:11:00.894, Speaker A: Thank you. But it was too late. So at this point, I was like, on another call with another thing, and people were, like, asking me questions. I can't talk right now. I need to finish stealing this money. So I went on and I executed it. And I tweeted about that as well, that I successfully drained 19,420 die from this nosis safe and nicely offered to give it back.
00:11:00.894 - 00:11:25.730, Speaker A: They said, don't worry about it. So it was too late because arbitration could not be requested because their arbitrator was set to the zero address. The cooldown was too short. And I think one person was on vacation and nobody else. On reality ETH was paying attention to refute my answer. Like, Oren refuted me once, but then I refuted him and put a higher bond. So I actually got his honest bond in addition to the exploit.
00:11:25.730 - 00:12:05.438, Speaker A: And so this system, yeah, it's not perfect. But then it was quiet again for a while until, like, two weeks ago, when people actually started using this to try to steal money. So some folks from the opium network, thankfully had some monitoring infrastructure set up on one of their safes and noticed that somebody was submitting fraudulent proposals to try to drain their entire treasury. But being nice people that they are, they were like, is this attacker doing this to anybody else? And what they actually discovered was the attacker first went after this really easy target. It's this dow called, like, lolly dow, it's never been used. It's like one person. But there was seven and a half eth in the treasury.
00:12:05.438 - 00:12:42.478, Speaker A: And they had reality ETh configured 24 hours voting periods, no arbitrator, no minimum bond. And so the attacker snuck some money into a fresh wallet. I think they withdrew from, like, aztec into a fresh wallet, put down a bond, and within 24 hours had stolen seven and a half eth. So now they had seven and a half stolen eth that they could then use to put down bonds on other things. And so there's this NfT collecting gao called, there's this NFT collecting framework called seasons, which uses dows that set this up. And some of them have hundreds of me bits or, like, a bunch of stuff in their dows. And so the attackers started going after those.
00:12:42.478 - 00:13:43.618, Speaker A: And so they used their ETh to place bonds on all of these other dows saying, did this pass, did this pass, did this pass? And at this point, you could very easily flood the reality eth UI because it's like web three UI and takes 10 minutes to load when you go to the page, and it's really frustrating to use. So they put these like six proposals down. They put down. Thankfully, the seasons folks have done some really good configurations where they had a minimum one ETH bond, a seven day voting period. And so that gave us enough time to defend. And so some of this was going on in the ETH security telegram channel and chatting with the seasons folks, I was able to actually go in and put down eight ETH in bonds to overcome the four ETH that they put for theirs. If they then came back and put down 16, being like, no, I really want to steal all these me bits, then I would have had to start calling up some friends and being like, can you guys please donate some ETH so that I can defend these safes from this attack? Thankfully, they got scared and ran away and took their three ETH in profit and the attacker went away.
00:13:43.618 - 00:14:23.486, Speaker A: But this is continuously happening for the next week. I basically had this screen open on my computer, refreshing, like every hour to make sure that the attacker wasn't coming back. So it was a bit of a stressful time until they finally gave up. And I was able to claim their ETH and make sure that the honest answer made its way on chain. So there's hundreds of millions of Dow treasuries that are at risk of what I would say are inattention attacks. And in fact, reality, ETH is like the one that I've been highlighting, but there's malic dows that are vulnerable to the same thing. And I want to include some links to.
00:14:23.486 - 00:15:04.078, Speaker A: So sky sent me from a metacartel, sent me a proof that he did of a molokdao in attention attack, where if you're in some molokdaos, maybe you're in one, maybe you're ten, maybe you're in like 60 of them. And oftentimes they go dormant for a while. There's no monitoring infrastructure in place. And so any member could be sneakily submit a proposal while everyone's at a conference. And I'm saying this to try to scare you, to look at your dows and make sure no one's trying to take things from you while you're sitting here. I think that attacks like this are only going to start happening more and more frequently. So beyond smart contract audits, we need configuration audits, it's not just enough to have the core logic right.
00:15:04.078 - 00:15:48.540, Speaker A: It's a matter of how you stitch together all of these composable pieces into something that is also audited and safe. And so configuration audits are something that I really want to see become more prevalent in dows, like whether it's the safe app where it's like, hey, if you add these modules, you might be vulnerable here. Or like, hey, you have a green checkmark. This configuration seems pretty safe for you. And I know it's early, but these are things we should be adding before we have some sort of trauma of a bunch of safes getting drained. So I have some tips on how you can protect you and your dows from people like me and people that are worse. This is a bunch of text, but I made this to kind of take pictures and I'll post this out later.
00:15:48.540 - 00:17:11.910, Speaker A: I think as somebody that has went through like a soc two audit with a startup before crypto stuff, there's actually a lot of stuff from those processes that I think dows could adopt. They make you think about, what's your resiliency plan? What's your continuity plan? Who has control over this administrative thing? Is there some random multi sig somewhere that actually holds veto power to the Dow that we're just too lazy to get rid of? There's a critical need for more monitoring infrastructure. So I know a lot of people are working on dashboards for individuals to track their portfolios and stuff, but we really critically need more monitoring infrastructure for dow tooling that can woof style, I don't know, ping you everywhere every time there's some sort of big transaction going on. There's cool automation tools that I think are underused as well. Openzeppelin has a tool called defender, which I really like for identifying dangerous scenarios, setting up alerts, and then actually submitting triggers to pause contracts. You can create these defender bots on that tool that look for a malicious proposal. Or maybe your dao is going into sleep mode and you want to set up something where it's like, okay, if anyone tries interacting with this smart contract, this pause transaction is going to go out and you can pre sign a transaction, preload it, and have all these defense mechanisms ready to go for your communities.
00:17:11.910 - 00:18:07.810, Speaker A: I think it's also really cool to see that simulation tools are getting more used because I don't think I've seen an attack like this, but I wouldn't be surprised if somebody submitted a proposal at some point that was like, hey, we should submit my monthly payroll, but then they just added zero to their paycheck. That would be pretty hard to detect. And most people that are on a bunch of multi sigs are like, approve, approve, approve, approve. But thankfully safe has added tenderly simulations where you can just say like, okay, what would happen if I actually approve this? And you can choose to see, okay, is that person getting paid $1,000 this month? Or simulation tools in dows are critically needed as well. We need to conduct regular configuration audits and detect when configurations change. All of the things that in legacy companies are really boring and they have entire departments of people for things like change management are actually needed in composable governance settings. We should always minimize cross chain communication.
00:18:07.810 - 00:18:37.120, Speaker A: Anytime you're using a bridge, you're probably just waiting to get exploited. We need to implement spending limits and transaction guards. Everybody should use hardware wallets, not backup their stuff in. And now this is just like general purpose, like housekeeping stuff. But a last one that I think would be cool is if we could set up some sort of like on call ships and rotations for people that are on like 60 multi sigs to make sure that they know that, hey, this person's on vacation. These six people are in Bogota. We need to keep track of what's going on.
00:18:37.120 - 00:19:12.350, Speaker A: In conclusion, composable governance tooling is why dows are going to be great and powerful and transformative. But we also need to be very careful about how we configure things or else we are just going to start seeing floods of malicious proposals coming in and people are just going to get overwhelmed. So take care of your daos and protect them. Thank you. Thank you. Thank you, Isaac, for that inspiring talk. Are there any questions from the audience?
00:19:13.570 - 00:19:28.498, Speaker B: Is it possible to set up prevention rather than monitoring? Because I just see, like, if you would have a lot of monitoring tools in your dows, then what makes it so different from the traditional financial system? Does that make sense?
00:19:28.584 - 00:20:16.178, Speaker A: It does make sense. And I was chatting with some folks earlier about better architectures for this kind of stuff, where proposals should actually be minimized in daos, where you can set up different governance architectures that are much more like set it and forget it. Like the folks at protocol guild and also like the build guild. The way that they have their payroll set up is like, it's just streams which are set up until they're not. And so I think that more things like that, where governance is a, you set it and you only have to do governance when you want to change things versus constantly having to do proposals makes it so that you could have much longer voting periods, much more safety. And I think that generally architectures that prioritize that over active attention based governance would be better. And then we're not just flooded with notifications, which is not necessarily better.
00:20:16.264 - 00:20:20.930, Speaker B: Right. So that means that there's a huge opportunity for UX and designers in the space. Right?
00:20:21.080 - 00:20:32.630, Speaker A: For sure. And also the UX of the governance itself and thinking about things on time spans and cycles and attention and stuff. So for sure.
00:20:32.700 - 00:20:34.120, Speaker B: Really interesting. Thanks.
00:20:35.290 - 00:20:52.074, Speaker C: You mentioned sending on alerts when there was a possible attack going on. Have you thought about somebody trying to exploit those alerts and creating many, many false positives so that people stop paying attention to the alerts and then it allows somebody to start the attack?
00:20:52.112 - 00:21:01.840, Speaker A: Notification fatigue is like, yeah, it would not necessarily be better because then we're just like, okay, which of these alerts is real? Which is not? So, yeah, it would be similarly bad.
00:21:03.090 - 00:21:17.518, Speaker D: You've mentioned earlier about arbitration and that some of the dows are basically setting themselves as the arbitrator. What are the other options and how would that process work if you get there and you need an arbitrator?
00:21:17.614 - 00:21:44.382, Speaker A: Yeah. So some daos have like Claros court set up as arbitrators, hello. Which is cool. So that would be a great option. Or other systems that have, or just any other system where somebody can be like, here's an independent board that your arbitrator also needs to be responsive. And so that's why it's kind of good to go with a protocol versus an individual. Because if you have like a one elected individual arbitrator, people go on vacation, people go away.
00:21:44.382 - 00:21:57.840, Speaker A: So yeah, I would say using other consensus mechanisms like that would be ideal. This is what I enjoy helping with. So reach out more questions. Sure. Thanks.
