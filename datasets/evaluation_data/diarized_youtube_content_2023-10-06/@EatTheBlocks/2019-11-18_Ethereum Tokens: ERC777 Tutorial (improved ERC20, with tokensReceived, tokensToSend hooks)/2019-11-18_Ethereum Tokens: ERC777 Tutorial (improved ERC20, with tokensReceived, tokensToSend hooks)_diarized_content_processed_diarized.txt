00:00:00.250 - 00:00:39.606, Speaker A: Hey, this is Julian and you are on it. The blocks in this video I'm going to show you the ERC triple seven standard, which is an improved version of ERC 20. So there are three main differences with ERC 20. The first one is the delegated transfer system. So for ERC 20, the way it works is you can allow thirdparty addresses to transfer your tokens, but up to a certain amount. In the case of ERC triple seven, we have a similar system. So in this case, third party addresses are called operator, but they are not limited by a specified amount of tokens that they can transfer.
00:00:39.606 - 00:01:18.854, Speaker A: So if you allow an operator to transfer tokens on your behalf, this operator can transfer all your tokens. There is no limit. The second difference is the two hooks that are called when you transfer tokens. The most important one is the receive hook. It allowed to call a function in recipient smart contract or addresses. So in other words, these addresses can react to incoming token transfer. So this is similar to what we had with ERC two two three and it allowed to do delegated transfer just with one transaction instead of the two transaction of ERC 20 when you first have to approve and then call transfer from.
00:01:18.854 - 00:01:56.574, Speaker A: The difference with ERC two two three is that with ERC triple seven, not only smart contract can react to incoming token transfer, but also regular addresses. And this is possible thanks to ERC 1820. So I'm going to explain just after height work and there is also another hook for the sender of the token. So this is useful in case of a delegated transfer. So a token owner can decide to cancel a transfer of an operator by reverting in the sendhook. So here you have a false smart contract. So first you have the sender.
00:01:56.574 - 00:02:36.398, Speaker A: So that's the current owner of a token and this address want to send his token to another ethereum address which is the recipient. So it's going to call the send function of the ERC seven token. Then the token is not going to do the transfer directly, but first it's going to call the registry contract. So that's the ERC 1820 that I talked about in the previous video. So if you don't know what is ERC 1820, make sure to check out this video. So it's going to ask the ERC 1820 registry if the recipient address has registered the token receive interface. So token received is the function that's going to be called.
00:02:36.398 - 00:03:28.510, Speaker A: So it doesn't mean that the recipient address has to implement this function itself. It can delegate it to another smart contract, but it has to register it to this ERC 1820 registry first. So the ERC 1820 is going to answer to the ERC seven token and give the address that implements token received. For our example, we're going to keep it simple and we're going to assume that the implementer of this token received function is the same address as the recipient, but it doesn't have to be. For example, if the recipient is a regular address, then it's impossible for a regular address to implement any function. So in this case, token received will be implemented by another address. All right, let's continue our explanation of the transfer process.
00:03:28.510 - 00:04:07.258, Speaker A: And next, the token is going to call the token received function on the recipient smart contract. And if there is no error in this function, the transaction is going to be completed. So in this example, I show you how the receive hook work. But we also have the send hook, and this will be triggered in the case of a delegated transfer, when an operator transfer a token on behalf of another address. So in this case, the send hook is called first and the receive hook is called second. And for the send hook, you also have this interaction between the token and the ERC 1820 registry. All right, so now let's see some code.
00:04:07.258 - 00:04:37.086, Speaker A: So this is the solidity interface of ERC triple seven. So there are a couple of functions that are similar with ERC 20, like name, symbol, token supply granularity. In ERC 20 is called decimals. Then you have a couple of function to manage the operators. So you can authorize an operator, you can revoke it. Then for transferring token. So in ERT 20, this is transfer, but for ert seven, this is send.
00:04:37.086 - 00:05:18.654, Speaker A: Then when an operator want to send a token, then it's going to call this function operator send. And by the way, you can attach some metadata for each transaction. So here you can attach data. And for a delegated transfer, then data here is from the sender of the transaction, and operator data is from the operator, and this metadata is going to be forwarded to the send and receive hook functions. Then a couple of function to burn token. And then you have couple of events that are emitted during transfer or when a token is minted or burned. By the way, the standard does not define any function to mint token because this is very custom to each implementation.
00:05:18.654 - 00:06:02.934, Speaker A: All right, so let's scroll down. So then we have the send and receive hook. So these are not inside the token contract, but they are implemented by sender and recipients. So this tokens to send function is the send hook that is called in the case of a delegated transfer. So if you want to prevent an operator from sending a token, you have to revert in this function. So this has to be implemented by the sender or a smart contract that implement this function on behalf of the sender. That means that first you need to register this interface in the ERC 1820 registry, and second, we also have another function for the recipient of token.
00:06:02.934 - 00:07:07.778, Speaker A: So that's the token received function. So again, if a recipient wants to refuse an incoming transfer, then it has to revert inside this function and you also have to first register this interface in the ERC 1820 registry. So if you want to have even more information about ESC triple seven, then you can check the official standard at this address. So there is really a lot of information about Ethereum token and I've prepared a short cheat sheet with all the most important information, and you can get it for free by following the link in the description. All right, so that's it for this explanation of what is the ERC seven token standard. I hope that now you understand the benefit over Es 20 and ERC two two three and especially the send and the receive hooks are really, really powerful and a really simplified delegated transfer, which will come quite handy for decentralized exchanges. In the next video, I'll introduce you to ERC 721 tokens than that for nonfungible assets.
00:07:07.778 - 00:07:17.380, Speaker A: So these, together with ERC 20 are the two pillar of Ethereum tokens. So make sure to watch this video as well. Thanks for watching and see you for the next video.
