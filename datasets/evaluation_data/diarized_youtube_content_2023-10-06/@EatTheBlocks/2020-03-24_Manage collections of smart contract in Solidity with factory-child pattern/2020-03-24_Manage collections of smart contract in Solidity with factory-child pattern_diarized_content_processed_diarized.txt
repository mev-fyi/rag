00:00:00.250 - 00:00:30.226, Speaker A: Here is a typical scenario with solidity. You want to create the same smart contract many times and you want to keep track of all the addresses. You can do it off chain, but the best way is to do it on chain with the factory child pattern. Let's see how this works. Hey, I'm julian and you're on my channel, eatthoblocks, where I teach blockchain development and solidity. Here I have my two contracts, the factory contract and the child. The factory contract is going to create a child smart contract.
00:00:30.226 - 00:01:15.406, Speaker A: So let's create a function for that. It's going to forward the data argument that is accepted in a constructor of child. To create a new child contract, all we need to do is this, and we're going to store a pointer to this contract in our function. Next, we want to save this pointer in an array. So let's define an array of child contract. Then we add our pointer to our array. Then we might also want to create an event so that we can more easily track which child contract have been created from the front end.
00:01:15.406 - 00:01:54.240, Speaker A: So let's define an event. We're going to define three field first, the date of creation of the contract, then the argument that was used in the constructor, and finally its address. So now we're going to emit the event, the current date, the data of the constructor, and for the address, we are going to cast our shell pointer. All right, so now let's try to compile our contract. Oops. Here there's a small typo. Okay, so now it should work.
00:01:54.240 - 00:02:19.460, Speaker A: Okay, and so now let's deploy our contract. You can deploy it and after, if you want to create a child smart contract. Here we provide a value for the create child function. And here we create a child segment child, et cetera. Next, if you want to keep learning a ton of other super cool solidity tricks, check this playlist on my channel. I'll see you there.
