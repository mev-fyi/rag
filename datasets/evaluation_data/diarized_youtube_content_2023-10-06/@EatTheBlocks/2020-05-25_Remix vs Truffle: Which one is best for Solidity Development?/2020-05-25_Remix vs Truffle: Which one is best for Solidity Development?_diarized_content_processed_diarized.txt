00:00:00.330 - 00:00:39.114, Speaker A: Hey, this is Julian and you're on edoblogs. And in this video we're going to talk of whether you should use remix or truffle for developing solidity smart contract. So truffle and remix are two different tools that allow you to develop smart contract, but they don't work the same way and they have different advantages. So let's start with remix. So Remix is an online ide for the solidity programming language. So in most simple terms that is a code editor for Solidity. So you don't have any installation to do.
00:00:39.114 - 00:01:15.890, Speaker A: You just visit the website of Remix and right away you can start developing your solidity smart contract. So it might seem like not much, but it actually help you a lot because when you want to get started with solidity programming, you also need to set up a local blockchain for development. And this can be a little bit intimidating for beginner. So it's very, very convenient that remix already does everything for you. You just show up and boom. You can deploy your smart contract right away and interact with it right away. And you have a nice visual interface.
00:01:15.890 - 00:02:07.990, Speaker A: So I would say the main advantage of remix is for beginners. If you're just getting started and you're learning solidity, then you should absolutely start with remix. By the way, I have a whole series here on my channel where I teach solidity using remix. So check it out if you want to know more about solidity. The other use case for remix is that for more experienced smart contract developer, sometime they want to experiment with a new feature of solidity, or maybe that they're not quite sure about something work, how something work in solidity. So in this case, you just quickly fire up an instance of remix by visiting the website and you play around and you'll have your answer. So this is like a nice easy to use playground.
00:02:07.990 - 00:02:50.110, Speaker A: Now the problem with remix is that because it's also very easy to use. The disadvantage is that it's also not very extensible, even though there are some plugins for remix. But still, it's a little bit harder to do test. And if you're working on a real project, it's a bit difficult to do your daily coding with just a solidity. So in this case, you'll probably want to use another tool that we call Truffle. So Truffle is a JavaScript framework for developing solidity smart contract. So it runs on node JS.
00:02:50.110 - 00:03:47.022, Speaker A: So you will need to install node JS on your computer. It will work equally well on Windows, Linux and Mac. And after, with the NPM package manager, you'll be able to install globally the Truffle framework, and after you will use the CLI so the command line interface of Truffle to create and manage your smart contract project. So truffle like Remix also integrate a local blockchain for development. So it will also be quite easy to deploy your smart contract and interact with them. But you will have to use the command line, which isn't as beginner friendly as the user interface of Remix. Also, another big advantage of Truffle is that you can not only build your smart contract, but you can also build the front end for your decentralized application that will directly integrate with your smart contract, which is something you can do with remix.
00:03:47.022 - 00:04:21.130, Speaker A: So what do I recommend? Well, if you're a beginner and you're just getting started, you should definitely use remix. And if you're more advanced in your learning of blockchain development, or if you're a more advanced smart contract developer, of course you should do your project with Truffle. But sometime if you need a quick playground to test out a new feature of solidity, you can just check out Remix and it's going be very quick and easy to use. If you have any question, ask them in the comments down below. Thanks for watching and see you for another video on blockchain or Ethereum programming. Bye.
