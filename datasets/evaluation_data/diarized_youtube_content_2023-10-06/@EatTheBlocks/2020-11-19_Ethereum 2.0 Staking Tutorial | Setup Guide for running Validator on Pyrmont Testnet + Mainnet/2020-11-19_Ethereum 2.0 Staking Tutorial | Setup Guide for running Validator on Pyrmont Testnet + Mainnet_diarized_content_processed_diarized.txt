00:00:00.250 - 00:00:36.994, Speaker A: Ethereum 20 is coming next month and it's super exciting. It's been delayed many times, but this time it's really happening. So Ethereum is going to become way more scalable and it will also offer an opportunity to earn some passive income with the yield of up to 10% annually. In this video I will show you how you can become a validator in Ethereum 20 by staking your ether. I will cover how the staking mechanics isn't work. I will give a detailed step by step instruction for how you can run a validator node. I will also show you how to stake your ether by depositing it into the deposit contract.
00:00:36.994 - 00:00:59.978, Speaker A: And we will do all of this both on the medala testnet to train ourselves and on mainnet where the real stuff happened. What I'm going to show you is a little bit technical, but not too much. So we won't do any real programming. It will be just a bunch of command to execute in your terminal. You can just copy and paste, so don't be too scared. Anybody can do it. You don't need to be a programmer.
00:00:59.978 - 00:01:50.602, Speaker A: There are other ways to stake your ether, most simply though by using services like staker and rocket pool. So with these services you just use their graphical interface and they do the staking for you. The big disadvantage is that first, you need to trust that these services will stake your ether properly, and second, they take their cuts so you don't take as much as if you stake it by yourself. So we are going to do the staking the hard way, but it will be more rewarding at every level. And if you don't know me, I'm Julian and on my channel idoblocks, I teach Defi and blockchain development. And before we continue, if you're a beginner and you want to get started in blockchain, I'm going to do a free live training on November 27. It's going to cover how to get your first blockchain job, how to launch your own blockchain project, and how to make money programmatically in blockchain.
00:01:50.602 - 00:02:51.614, Speaker A: So it's going to be a live event where you can ask me any question and there will not be any recording available after. So if you want to participate, the only way is to register for the event with the link down below. This is totally free, you only need your email in order to register. So before we dive into the step by step instruction of how to run a validator and stake your ether, I want to give you a high level overview of how staking works in Ethereum 20 so first there is Ethereum 20, which is the next version of Ethereum, which is going to be way more scalable. Vitalik buttering said that by combining Ethereum 20 and L2 scaling solution, we could go up to 100,000 transactions per second. That's really huge. The way Ethereum 20 achieves high scalability is by splitting the data of blockchain into different parts that we call shots in order to connect shots and validate transactions.
00:02:51.614 - 00:03:26.234, Speaker A: There is another chain called the beacon chain. On the beacon chain, the consensus mechanism is not proof of work like on Ethereum one, but instead it's called proof of stake. With proof of stake, the equivalent of a miner is a validator. The job of validators is to validate pending transactions. Each validator needs to invest 32 ether. This is what we call staking. If a validator validates an invalid transaction, it is slashed, meaning that it will lose a significant portion of its stake.
00:03:26.234 - 00:04:00.290, Speaker A: If a validator goes offline, it receive a penalty by losing a portion of its stake. But this penalty is smaller than in the case of slashing. If a validator validates a correct transaction, on the contrary, he earns some ether. This reward ether is created by the network, so it does create some inflation, but it's moderate. The more ether is staked, the less the reward per validator. And conversely, there are some website that help you to calculate your staking reward. So how can you become a validator? You need to do several things.
00:04:00.290 - 00:04:41.734, Speaker A: First, you need to run a validator and a beacon node. These are two separate processes. You also need to stake 32 ether per validator, which is about $15,000 at the time of recording this video. To stake this 32 ether, you send your ether to a smart contract on Ethereum one, which is the current Ethereum network. So this smart contract is called the deposit contract. When you send your ether to the deposit contract, you also specify a public key which is associated to your validator node. That's how we can establish a relationship between the staking deposit on Ethereum one to the validator nodes on Ethereum two.
00:04:41.734 - 00:05:12.222, Speaker A: Very important to note, once you send your 32 ether to the deposit smart contract, there is no way of going back. You can't withdraw your ether from the smart contract to Ethereum one. This is a one way operation. The only way to get your ether back is on ether two, and even on Ethereum 2.0 you won't be able to withdraw your ether right away. You will need to wait until phase two of Ethereum 2.0, which will probably be released in about two years.
00:05:12.222 - 00:06:00.570, Speaker A: So you have to be okay with this commitment. Okay, so moving on to the beacon chain. So the beacon chain constantly scans for new deposit in the deposit contract. When it finds a new deposit, it activates the account of the associated validator and from this moment it expect the validator to validate transactions twenty four seven and will apply penalty and reward depending on the behavior of the validator. Okay, so now you understand how staking works. Next we are going to do the first step of staking your ether, which is to run a bitcoin chain node. There are several software for running a bitcoin chain node, but the most popular one is the multiclient of prism.
00:06:00.570 - 00:06:29.586, Speaker A: So we are going to choose this one. Before sticking on Minet, it's better to train yourself on a testnet. So we are going to use Piermont, the testnet of Ethereum 20 which is connected to goalie one of the testnet. For Ethereum one, the procedure is almost the same for main net. I will explain the differences later in this video. As a side note, Piermont was introduced recently to replace another testnet called Medala. In the future, it's possible that Piermont might be replaced itself by another testnet.
00:06:29.586 - 00:07:00.654, Speaker A: So if this happened, the instructions of this tutorial will probably still apply 100%. Except that you will need to change the flag of the testnet when you start the beacon chain in your terminal. So this is the instruction for running a prism validator on the pyramid testnet. First we need to install the prism multi client. There are different methods. You can install prism directly with a script, you can use docker or you can build it. But the easiest solution is to use the installation script.
00:07:00.654 - 00:07:28.950, Speaker A: So that's what we're going to do. So prism can be installed on Windows, Linux and macOS. However there are a couple of system requirements. So you need to have 8gb of ram and 20 gigabyte of available space. So that's the minimum specification. But if you can, it's better to meet the recommend specification. So 16 gigabyte of ram and 100 gigabyte of storage and of course a good Internet connection.
00:07:28.950 - 00:07:58.514, Speaker A: So for the demo I'm going to do everything on my laptop. But when you run this in production for minute, it's actually better to do it on a server. Why is that? Well, it's important to understand that you need to keep your validator online 24/7 every time it goes offline you will lose some money because you will receive a penalty. So your laptop is not really ideal to run any software. Twenty four seven. A server is much better for that. There are a couple of hosting providers you can use to provision a server.
00:07:58.514 - 00:08:33.890, Speaker A: I personally recommend digitalocean because it's very simple to use. So creating a server on digitalocean is outside the scope of this tutorial. So I will skip this part, but just be aware that when you provision a server, you can choose the hardware specification. So make sure that it's compatible with the recommended specification of Prism. And when you provision your server, you will also have to choose which operating system to use. I recommend to choose the latest version of Ubuntu. Okay, so we're going to install prism, so I'm going to select the instruction for macOS.
00:08:33.890 - 00:09:19.066, Speaker A: First we're going to create a directory for Prism, and second we're going to download the install script and make it executable. So we just copy everything. So you need to have install curl. So that's a utility in order to do HTP request. Okay, so now we have the executable here. Okay, so the next step will be to get some test ether on the goli network. So here in your documentation of prism, they tell you that you can get some test ether by going to their discord server.
00:09:19.066 - 00:09:41.222, Speaker A: But I prefer to use another faucet at this address. It's a bit more simple. So which Ethereum address you're going to put. So for that you are going to install metamask, which is a very popular wallet for Ethereum. So you can find it in the chrome web store. This is a chrome extension and once you install it, it's going to create a couple of addresses for you. So you can just pick the first one.
00:09:41.222 - 00:10:23.838, Speaker A: So for example, for me the first address is this one. So I'm going to copy it. So after you go to one of your social media and you post your address, you tweet it and then you copy the URL and you go back to the faucet, you put the link and here you select 35 ether because we need at least 32 ether to do the staking. Okay, so we good. So the next step will be to run your pico node. So here if you scroll down you'll see the instructions. I go to macOS.
00:10:23.838 - 00:11:29.190, Speaker A: And so here you can see that to run your beacon node you will need to have an endpoint to Ethereum one. So we're not going to run our own ethereum one node because it's a little bit too difficult. But instead we're going to use infra, which is an API for Ethereum. So with infra you don't have to run your own Ethereum node, you use the API so you can create a free account and after you can create an Ethereum project and they will give you a couple of endpoints for the different network. So we're going to select Goalie and I'm going to select the HTTPs URL. I'm going to test this in my notes. So back to the documentation of Prism and we're going to copy the command to run our beacon chain, and then in our note we're going to paste this and we're going to replace the path that is the URL to the Ethereum one endpoint.
00:11:29.190 - 00:12:19.640, Speaker A: So that's what we got from infra just before. Okay, so copy this, then back to your terminal, you paste the command, press enter and it's going to start the beacon node and then you just have to let it run until it's completely synchronized with the pyramid testnet. It might take between ten to 20 hours. So if you are like me, you're trying to run it on Mac. It's possible that you have an error because of a missing library called JPG. So in this case you can install this library with brew install JpG and if you don't have brew installed, then you need to google this and install it on your Mac. This is a package manager for Mac.
00:12:19.640 - 00:13:06.260, Speaker A: The next step is to deposit 32 eth on the deposit smart contract on the goalie testnet. So for that you will need to check the documentation of the launch pad for the pyramid testnet. Go to continue. So then you need to acknowledge that you understand that your deposit of 32 E is a nonreversible one way transfer. So in this case this is just a testnet, we don't care. But when you're going to do it on main net, it's important to understand this. You'll only be able to get back your 32 e in two years when phase two of Ethereum two will be implemented.
00:13:06.260 - 00:13:39.632, Speaker A: You also need to acknowledge the fact that you understand it's important to keep your validator online and updated. If you don't want to be slashed or penalized, I accept. Then you need to acknowledge that your mnemonic threads will be the only way to withdraw your phone. So you will see that later we'll generate two public and private key for the validator. So here something it tells you you need to be careful with these keys. So here it tells you that you will need to wait before you're able to withdraw your ether on Ethereum too. So that's what I was telling you just before.
00:13:39.632 - 00:14:08.036, Speaker A: It's the same thing. They tell you you need to be committed, this is for the long haul. And finally they tell you that they are risk because you are an early adopter. So just to be clear, if something totally catastrophic were to happen for phase zero on Ethereum 2.0, I'm pretty sure that they would do a hard fork of Ethereum in order to restart the process because this is super, super important. So I accept. And finally you click on continue.
00:14:08.036 - 00:14:39.652, Speaker A: So just want to make sure that you know all of this thing. So here they tell you that you need to run an Ethereum one node in parallels. So in our case we using infra but I think we still have to choose something. So we'll just choose guest. Okay, continue then for if the client we're using prism. Okay, so here we click on continue. How many validator we want? We want one validator and my current operating system.
00:14:39.652 - 00:15:18.828, Speaker A: Well this is Mac. Okay, how do you want to run the CLi download CLi app. Okay, so then we're going to download this from GitHub. So this app will allow us to generate the two pair of public private keys that are required for our validators. One of these pair of public private key will be used to identify our validator on Ethereum two and the other pair will be used to redraw our 32 e stake. So let's scroll down and here you need to download the correct version for your operating system. So for Mac this is Darwin.
00:15:18.828 - 00:16:03.120, Speaker A: Then you also have a version for Linux and a version for Windows. Okay, and after in your terminal you're going to uncompress this file. So I'm going to use the command tar XVF and then the path to the compress archive. If you don't have tar on your computer, if you're on Mac you can install it with brew. Okay, so now we are going to move the uncompressed folder to the folder where we are running prism. Okay, so now let's go to this folder and after back to the website of the launchpad for Piermont. And we scroll down, we're going to find the next instruction.
00:16:03.120 - 00:16:32.600, Speaker A: So that's the instruction to generate the two pair of public and private keys. Go back to the terminal, we go in the folder of the ClI. Oh damn, I have two version here. Okay, probably there is an old one. Let me remove the old one. Okay, so now we good. You pass the instruction and it's going to execute the Deposit executable.
00:16:32.600 - 00:17:17.044, Speaker A: Okay, so we need to choose the language for the mnemonic phrase from which to set up public private key will be generated. So let's say English and a password that secure your validator key store. So choose whatever password you want. They want eight character. Okay, so I'm going to copy paste this in my notes. So of course when you do this for minute, make sure to handle this very securely because anyone who has this will be able to steal your 32 ether on Ethereum two. Okay, back to the terminal, press any key and please type your mnemonics.
00:17:17.044 - 00:17:55.488, Speaker A: I'm just going to paste what we have in our note creating your key. And the keys were created in the validator keys directory. Great. Okay, so now let's go back to the launchpad to see the next instruction. Okay, so we continue and after we need to drag a file that we just generated. So here I am in my prism folder and I go in validator keys. And what we need to drag and drop is deposit data JSon.
00:17:55.488 - 00:18:23.630, Speaker A: So the sensitive data is in keystore. So this actually encrypted. That's why you need to remember your password. And in deposit data that's going to be the input data for the deposit smart contract on ethereum one. So it's going to contain a very important piece of data which is the public key that identify your validator. So that's how the deposit smart contract is going to associate your deposit with the correct validator on ethereum too. So we drag and drop this.
00:18:23.630 - 00:18:53.830, Speaker A: Okay, we click on continue, then connect wallet click on metamask. I'm going to select the first account, but I don't think I am on the correct testnet. Please connect to the goalie testnet. Yeah, that's correct. So here connected to the goalie testnet in metamask and we can see our 35 eth. Okay so 35 goldie eth available. Then continue.
00:18:53.830 - 00:19:19.500, Speaker A: Okay, scroll down. Proceed with question. So here you just tick the different boxes. Okay click on continue. Okay, so initiate the transaction. So here we can see that we are going to send 32 ether to the contract and we click on confirm and then we can track the Transaction on Ether scan goalie here. And it's confirmed.
00:19:19.500 - 00:20:00.108, Speaker A: Great. Okay, so back to the launch pad and click on continue. And that's the end of the process to stake our 32 eth. So here we can see a couple of statistics. So total staking balance for the whole network on Gurley and how much we added and what's the launch threshold so actually before November 24 of 2020 on main net, we need to reach this amount of ether stake in order for Ethereum 2.0 to get started. And if this fails, we don't know yet what's going to happen, but probably that they're going to be a fork of Ethereum and that another launch of Ethereum 2.0
00:20:00.108 - 00:20:34.872, Speaker A: will be planned later. But I'm pretty sure we're going to reach this threshold. So for the next step we're going to run our validator nodes. For that we need to first import the validator accounts into the validator node. So the validator accounts, that's what we generated just before with the CLI. So here we scroll down and we will find the command in order to do this. So let's go in our note, got to pass this and we need to change this a little bit.
00:20:34.872 - 00:21:07.712, Speaker A: Okay, so now in my terminal and I want to know what is the path to my validator key. I'm going to copy this. Okay, so then we copy this back to the terminal and we paste the command, press enter. Oops, wrong directory. So I need to go to the root here, prism. Okay, try again. And this time it's working.
00:21:07.712 - 00:21:35.592, Speaker A: So now I'm going to press enter for the wallet directory. Then I need to create a password. Okay, it's a bit picky for the password. Okay, after I need to put the password for my validator accounts. That's the password that we used previously in the previous section. Okay, so now the validator accounts are imported in our node. So next we need to run our validator.
00:21:35.592 - 00:22:28.508, Speaker A: So we're going to copy this instruction and rerun it in our terminal and it's going to ask us the wallet password. Oops, wrong password. And now our validator is running. So after you need to keep open the terminal window with your validator node as well as for your beacon chain node, and you need to wait between five to 12 hours after you make your deposit on Ethereum, one before your validator is activated. And that's pretty much it. So what I've showed you is for the Prisman testnet, but what about for main net? The instructions are almost exactly the same, except that when you run your bitcoin chain node and radiator node, you don't specify the Prisman testnet for the network. You don't need to specify anything.
00:22:28.508 - 00:23:00.832, Speaker A: Mainnet is the default. Also when you use the launchpad of Ethereum, this time it's launchpad ethereum.org. It's not prefix by the name of the testnet. So what about node maintenance and monitoring? Well, there are a couple of things you can do. First, in order to make sure that your bitcoin chain and validator node stay online all the time, you can use a tool called systemd. And for monitoring, you can use two other tools called Prometheus and Grafana. So this is a bit outside the scope of this tutorial.
00:23:00.832 - 00:23:43.568, Speaker A: So if you want more details on this, you can check out this article. Okay, so maybe you have tried to run a validator on the medal at Testnet, but you are still not sure about investing 32 ether to become a validator on Mednet. So at the time of recording this video, 32 ether is roughly equal to $15,000. And it can be quite a big commitment to stake this amount knowing that you won't be able to get your ether back before several us. When phase two of Ethereum 2.0 Robbie rolled out, it's actually possible to pull some money from several investors to stake some money on the same validator. So in this case, you don't need to invest the whole 32 ether by yourself, but you can just invest a part of it and let other people provide the rest.
00:23:43.568 - 00:23:47.470, Speaker A: And in next video, it's exactly what I'm going to show you. Check it out.
