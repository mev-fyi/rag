00:00:00.490 - 00:00:37.426, Speaker A: Hey, hey. This is Julian, and in this series I'm going to teach you solidity, which is the programming language for developing Ethereum smart contract. So solidity can be used for developing smart contract on Ethereum, but not only it can also be used on many other blockchain such as Tron, such as Hyperledger. So really you're making a really good investment by learning solidity. It. By the way, I created a free email course to teach you how I got my first remote blockchain job, paid $100,000 a year. So if you want to learn all my secrets, you just have to sign up at this URL.
00:00:37.426 - 00:01:13.502, Speaker A: So if you're learning solidity, there are a few caveats. So the caveat number one is solidity. Syntax really look like JavaScript. So there are many web developers who think oh, I know JavaScript, so I can just pick up solidity like this. It's going to be very easy. Actually, this is very tricky because you see, this is just at the surface level that these languages are similar, but the actual rules of solidity are very different. So in this series I'm going to explain you especially what are all these difference between solidity and JavaScript.
00:01:13.502 - 00:01:52.538, Speaker A: So I'm going to assume that you already know JavaScript. If you're just a newbie and you want to learn solidity, this is not the best series for you. You need to have some experience in JavaScript to understand the sort of reference I'm going to make in this series. Also, another caveat when you want to learn solidity is that there are many tutorials that make you set up a lot of development tools. Like they make you set up a development blockchain using the go implementation of Ethereum, which is called Geth. They make you create your private key, your wallet. So there is really a lot of setup.
00:01:52.538 - 00:02:39.550, Speaker A: And this is really annoying because when you're a beginner you don't want to do all these things, you just want to learn the language and develop right away. Well my friend, I also created this series just for you because we are going to use an online Ide for solidity that is called remix. So with remix it's very easy, you just go to a URL in your browser and boom, you can get started right away. There is an integrated blockchain, everything is already connected. This integrated blockchain give you some fake ether. So you can use this ether to send transaction to the network and you can use a nice graphical interface, no need to use the command line. So that's really basically, the best way to get started on solidity.
00:02:39.550 - 00:03:13.526, Speaker A: Another caveat is that solidity moves really fast, so you will see a lot of tutorial that use outdated version of either solidity or remix. So what I'm going to teach you in this series is the latest of solidity. So solidity 0.5. Be careful if you see some old tutorial that teach you solidity 0.4. The language has changed a lot between 0.4 and 0.5. Also, I'm going to use the latest version of remix, the online IDe for solidity.
00:03:13.526 - 00:03:59.682, Speaker A: Most other tutorial they use the old version of remix. This is not a huge deal, but it's better to use the latest version. So this tutorial is going to teach you solidity from a theoretical point of view. So I'm going to teach you the different aspects of the language, like the variable types, the functions, interaction with other smart contract, how to send ether, and even a little bit of solidity assembly, which is a very low level language. So I'm not going to give you example of smart contract. We're going to focus really on the language. If what you're looking for is example of smart contract, you can look in the description.
00:03:59.682 - 00:04:19.690, Speaker A: I have other videos that give you exactly this. This course is more about mastery of the solidity language itself. So that's it for the general introduction of the series. In the next video, I'm going to introduce you to remix, which is the online IDe for solidity. See you in the next video. Cheers.
