00:00:00.410 - 00:00:39.542, Speaker A: Lot of projects in DeFi reuse the same building blocks and combine them like Lego. If you want to understand how to build your own defi project, first you need to understand what are these building blocks. So in this video I'm going to explain what are the main building blocks of DeFi, such as tokens, oracles, Dao, etc. Hey, I'm Julian and on my channel on ether blocks, I teach blockchain development and how to get your first blockchain job. The first fundamental building blocks is assets. So assets are of two type on the blockchain. So you have native assets.
00:00:39.542 - 00:01:13.710, Speaker A: So this is basically ether and you have tokens. So tokens can be yas 20, yasi 721, yasi 755. There are many kind of tokens, but the main two kind are yas 20 and yas 721. Yas 20 are for all the assets that are fungible. So like a dollar bill for example. And yas 721 are for all the assets that are nonfungible, like a piece of art. So how are they used? In D five project ether is mainly used as a store of value and as a collateral.
00:01:13.710 - 00:01:55.342, Speaker A: When it comes to token, what is really, really used in DFI is a special kind of token called stablecoin that is built on top of ERC 20. The basic idea of a stable coin is that it always has the same value, so it's very good for payments. The most famous stable coin is DAi, but there are many others. So when you build a stable coin, you need to have a way to guarantee that it always keep its value. So with DAi, it's guaranteed by some ether that is locked inside the Dai smart contract. But for other stable coins like tether, this is actually real money that is kept off chain. The big problem of that is that you need to trust the company to keep enough asset off chain.
00:01:55.342 - 00:02:35.498, Speaker A: So it introduced an element of centralization and it really go against the principle of the blockchain and decentralization. So if possible, it's better to use a stable coin that have collateral that is stored on chain. What if you need to create an asset that is also collateralized? Let's take the example of an ES 20 token. So in your s 20 token, you'll have a function to create new token. We usually call this function mint. So that means that in this function, anytime you want to create a new token, you will also verify that a certain amount of collateral was also sent to the token. So it can be ether or another token.
00:02:35.498 - 00:03:10.954, Speaker A: And depending on the amount of collateral that was provided, you will create some new token accordingly and you'll have another function to destroy token. So we usually call this function burn. So when you do this, they destroy your token and you give back the collateral to the calling address. Using this technique you can build a very sophisticated asset on the blockchain. Next, once you have these assets on the blockchain, you need to be able to trade them. So it's possible to trade them outside the blockchain using centralized exchange. But that's not the best way to do it.
00:03:10.954 - 00:03:54.120, Speaker A: If you want to stay defi compliant, the best way to do it is to do everything on chain, and for that we use decentralized exchanges. Decentralized exchanges allow traders to buy and sell their token in a decentralized way on smart contract in the blockchain. So let's see how this works. So let's say that there is Bob and Alice. So Bob has some ether, Alice has some token, and Bob want to buy the token of Alice. So Bob first is going to send his ether to the smart contract of the decentralized exchange. Alice is going to send her token to smart contract of the decentralized exchange as well.
00:03:54.120 - 00:04:34.174, Speaker A: Then Bob is going to create a buy order and send it to the smart contract. And Alice is going to see this and she's going to create a sell order for the token. And the smart contract of the decentralized exchange will see these two orders and will match them and it will actually carry out the trade. So it will proceed to transfer the assets. So the ether will go to Alice and the token will go to Bob. But the trick is it actually doesn't leave the smart contract at this stage. Everything still is owned technically by the smart contract.
00:04:34.174 - 00:05:13.098, Speaker A: But there is an internal ledger that knows which asset is actually owned by who. And after that Bob can redraw his token and Alice can withdraw her ether from the smart contract. And after that they are free to do whatever they want with the asset. What's really interesting is that we didn't need anyone permission in order to do this trade and it was absolutely safe. So for your defi project you don't necessarily to build your own decentralized exchange. There are already many out there. But if you need some advanced feature that don't exist in other exchange, then you will need to build your own decentralized exchange.
00:05:13.098 - 00:06:13.266, Speaker A: And this is actually one of the most interesting kind of defi project and I've actually created a free training that explain you how you can build your own decentralized exchange link in the description next let's talk of oracles. A big problem with blockchain system is that it needs to communicate with the outside world. But smart contract and anything inside the blockchain is absolutely unable to call external API. So we solve this problem by using oracles. The basic idea of oracle is to inject some outside data inside the blockchain and once the data is inside the blockchain then any smart contract can use this data and take some decision based on that. So let's say that my Defi project has a smart contract that need to use an oracle. So how does this work? Well, first you have an external API, then on the blockchain you have the smart contract of the oracle and then you have the smart contract of your defi project.
00:06:13.266 - 00:07:01.202, Speaker A: So first our defi smart contract is going to call the Oracle smart contract to register a callback. So it will say that it's interested in a specific kind of data and when this data is injected then it wants to be called back with a specific function. Next we have the xno API. So let's say for the example that we want to monitor the result of some soccer game. Once in a while our Xno API is going to hit another API. So that's going to be the official API for the result of soccer game. And when it has a new result to report then this external API is going to inject this data in the blockchain by creating a transaction and sending this transaction to the smart contract of the oracle system.
00:07:01.202 - 00:07:43.710, Speaker A: And then the oracle smart contract is going to execute the callback function of our defi smart contract with the data that was injected. So the problem of this system is that you need to trust the xnode API to report the correct result. So it really makes your system less decentralized. So there are a few blockchain projects that focus on this problem like oracleize. And the idea is that instead of just one API that report the result, you have many and they all report the same result to the oracle smart contract. And if anybody report a different data then we will know that there is a problem. So if you're just getting started, you can just build your own oracle system.
00:07:43.710 - 00:08:36.290, Speaker A: But if you want something more sophisticated then you can check out a project like oracleize that implements the most sophisticated system I just described. But it's clearly more work to integrate a system like oracleize than to build your own oracle system. Next we're going to talk of on chain governance and dao, which are short for decentralized autonomous organization. So a defi project has to be decentralized. And at some point in the future, if you want to change the protocol, you, the developer, cannot just decide on your own that you're going to make this change, but you need to involve the community and other stakeholders, and that's what dao are used for. So dao are smart contracts that allow stakeholders of a project to vote and take certain decision. Sometimes this decision can change the protocol, sometimes they can decide to invest in something.
00:08:36.290 - 00:09:13.018, Speaker A: So it works like this. First you need to create a token that represents a vote inside the dao smart contract. So generally when you launch your project, that's when you're going to distribute the different voting token to your community and all the stakeholders. So you can do this with an Ico, with an airdrop, or with any other mechanism. And at any point people are able to create a proposal in the DAO smart contract. So they will call a function in the smart contract of the DAO. And after that people will have a certain time to vote.
00:09:13.018 - 00:09:56.902, Speaker A: And after the vote is finished, then depending on the result, then there's going to be an update of the smart contract of your deFi project or some investment decision is going to be taken, some ether will be sent to another address. So it can be quite tricky to code your own DAO smart contracts. That's why I don't recommend to do this yourself. But instead it's better to reuse a template that is provided by another project. And in particular you can check out the DAO smart contract of Aragon. That's really the reference in the industry. Next, there is still another kind of building block that you can use and that's basically all the other DeFi projects that deploy on the blockchain.
00:09:56.902 - 00:10:52.250, Speaker A: So because DeFi projects are implemented in smart contract, you can call them and you don't need to ask anybody permission in order to use the API. So for example, in your defi project, if you need to have a trading functionality, then what you can do is connect to call the smart contract of Uniswap and you'll be able to do some trading programmatically. Another thing you can do is if you receive some asset, like some ether or token, and you want to monetize this asset, you want to get some interest on them. You can lend them by calling the smart contract of compound. So when you build your own defi project, it's really fun to play with all these building blocks, combine them and create something new. One of the most common thing you need to do in your DeFi project is to manipulate a stable coin like Dai. And that's what I'm going to show you in the next video of this series.
