00:00:09.490 - 00:00:40.320, Speaker A: And we're live. Hi guys. In this video, I will show you how you can spot Defi scams. So as Defi is becoming more and more popular, we also have more and more scammers. Nowadays, every single week we hear about some news scam. So we never know if it's really outside hacker. Sometime an insider job like the developer of the project who hacked themselves.
00:00:40.320 - 00:01:19.622, Speaker A: So we have to be really careful. So in this video, in order to analyze how DeFi scam can be spotted, we're going to analyze them according to different things. So first we're going to see the team, then the social media community, then the product, and finally the code of a smart contract. We're going to review a couple of DeFi projects. So just before this video, I asked you on my email list to send me some project to review. So we had a couple of feedback. So we're going to review earn finance.
00:01:19.622 - 00:01:45.720, Speaker A: We're going to review spacemind Defi, another one which is called Pump Farm. And if we still have some time, we can still add other project. Actually, you can let me know in the chat if you want to review a specific project. So hi everybody in the chat. Sumia Kanti Thx Barry. Hi guys. Let's get started.
00:01:45.720 - 00:02:30.510, Speaker A: So first, when we review the team, so just some general remark. First of all, we want to make sure that we have a public team. I don't like anonymous project. Really, there is no reason to be anonymous. You really need to be. You need to be public. Then do we have like photo pictures, links to LinkedIn for the team? Any track record? Also, if you type the name of the person of the team, plus scam, what happened? If you google this, do you find something? Also name of the project was scam.
00:02:30.510 - 00:03:02.814, Speaker A: Do you find any bad stuff then for the social media and the community? So check out the community discord telegram social. Any active participant. Any active participant. Are there too many people who are too much positive? In sometimes some telegram group, you have all these people like super fake. They're like, oh yeah, this is amazing. I sent some money and I sent my token and I already made so much profit. And you see everybody's posting the same thing.
00:03:02.814 - 00:03:26.230, Speaker A: This is super weird. You can also check the social media of people. For example, on Twitter, if someone praised a project, but you can see that all the people who do this in their Twitter profile, it's all they do. They only praise project. And this is kind of weird. Yeah. So that's general remark about social media and community.
00:03:26.230 - 00:03:56.510, Speaker A: Now for product, what's super important is that we have a clear product description, it's not too vague. They don't just try to shill blockchain in general. They're like oh yeah, blockchain is such a revolution. This is going to be amazing, blah blah blah. But there is nothing about the product itself and they only talk about the token and how it's going to go up. So this is also a big red flag. And after, when it comes to smart contract.
00:03:56.510 - 00:04:42.606, Speaker A: So first of all you need to make sure that we see the address of the smart contract published clearly on the page of the project. Then this smart contract needs to be verified in Etherscan. Then they need to have a public GitHub. Then for the public GitHub you can see when it's created how many commits they have, how many committers. If they just created the GitHub and there is just one commit, it's not so good then reading the code of the smart contract itself. So the danger come from two parts. First, the code of the token itself.
00:04:42.606 - 00:05:34.590, Speaker A: So maybe that there is something weird with the way that they transfer token, for example. And second danger zone is the other smart contract where you will send your token, for example, some yield farming contract or something like this. What happened after you send your token? Because you're probably going to get some liquidity provider token in exchange. So how can you redeem your LP token? Is there a way for the liquidity of the pool to be drained? So this is a little bit more complex to find. And then what else? Some general remark for solidity. Yeah, you got to really read all the code because sometimes you can have some function that have some name, but maybe that they do something else. So it can be a bit misleading.
00:05:34.590 - 00:06:13.814, Speaker A: Then you need to check token addresses. So sometimes you have hard coded in smart contracts, some token addresses, for example, they claim that this address is the address of Uniswap or something. Maybe it's not the address of Uniswap. So there's also something you need to check. You also need to check if the token is pre mined. So that means a large chunk of the token is owned by the dev teams. Because in this case they can do a pump and dump like you invest in the token and then when the project is released, boom, they sell and then you're left holding the bag.
00:06:13.814 - 00:06:52.200, Speaker A: Not great. Then you need to make sure. And this one is also quite tricky if they have any updatable logic. So basically maybe that they have a core smart contract and they delegate some features to another contract, but maybe that some admin can vote to update the address of this other smart contract. And in this case, this can be quite dangerous. I think it's what we saw for, if I remember well, harvest finance or no, I think Pico, yes, it's like a yarn finance clone. So basically a Defi aggregator project.
00:06:52.200 - 00:07:28.260, Speaker A: Yield aggregator project. They optimize your defi yield. And so someone, a developer updated, added a new strategy, but this strategy had a problem and that's how they got. So after that, I'm going to show you some specific examples. So we're going to start review some project. Okay, let's do this. 1 second I show my screen.
00:07:28.260 - 00:08:03.450, Speaker A: Okay, so first of all, this project on finance net. So someone asked me to review it. So I'm going to start with the team. So is there any public team? Let me see any public team. Where is the team? Scroll down. Scroll. Meet our creative team.
00:08:03.450 - 00:08:44.330, Speaker A: Okay, so Alex chan, Gary Alvaro. Okay, so we don't see the picture. There is no links to why. Why we have the name like this, like vertical. Is it on purpose so that we don't try to select them? Let me see. Alex chan, earn finance. Can we find anything on LinkedIn? Okay, so no Alex chan at all.
00:08:44.330 - 00:09:05.674, Speaker A: Okay, this is Will. How about that guy, Gary Alvaro, earned finance. Alvaro, Gary. Okay. No, nothing. Okay, so this is not good. We don't find the officer and founder partnership on operation.
00:09:05.674 - 00:09:32.780, Speaker A: We don't find them. So I'm not even sure if this is real people. Even if you find them on LinkedIn, it doesn't mean they are real because you can also create some fake LinkedIn profile. But at least this is one more positive step. Okay, so already I don't like this. I don't even know if these people are real. These people look fake to me already, so I can't even verify any track record.
00:09:32.780 - 00:10:23.510, Speaker A: Yeah, I'm not even sure if this is real people. It's not even useful to check if they were involved in some sort of scam. How about if I check earned finance scam? Like, is it reported anywhere? Earned finance scam? No, nothing about earned finance. Okay, so then what about the. Oh, yeah. So another thing I don't like about this project is their name earned finance, because this is very close to yearn finance, which is the original legit project of Andre Kronre. And so it feels like maybe they're trying to be a bit misleading.
00:10:23.510 - 00:10:47.298, Speaker A: Maybe some people who don't take the time to read clearly, maybe they will think, oh, earn finance. Or maybe this is a young finance project. I heard about. Okay, I'm going to invest in it. So already I don't like that they take this name. Make sure you take a name that doesn't exist. Otherwise, some people like me, they can think you're trying to fool them.
00:10:47.298 - 00:11:36.062, Speaker A: Okay, so then what about the social media and the community? Do they have any telegram? Okay, what about Twitter? Do they have any Twitter? Earned finance? Twitter, let me see. Earn finance, Twitter, let me see. Earned finance. So join November 2020. Okay, so it seems to be very new. They don't follow anyone. Well, I mean, if this is a Twitter account for a company, it's normal.
00:11:36.062 - 00:11:59.926, Speaker A: They don't follow anyone. A lot of followers. Okay, good. They promote their coin. But what happened on any of their posts, I want to see the reply. So for example, that one, what people are saying, next generation of decentral. Congratulations.
00:11:59.926 - 00:12:11.638, Speaker A: Nice, good project. Nice, good, nice project. Good project. Mind blowing project. Very impressed. Very impressed. Okay, super will.
00:12:11.638 - 00:12:46.338, Speaker A: Super freaking will. How comes everybody is so excited about the project? Like, nobody criticizes anything. And people, they all say the same thing. Okay, so for example, let's select some people at random to see if they seem like legit people or not. Let me see. Nice. Okay, so what about this guy? So this guy, let's see his Twitter profile.
00:12:46.338 - 00:13:02.510, Speaker A: Okay, he joined in October 2020. So very recently. And he only shield project. That's the only thing he does basically. Or he retweets some stuff. He never said anything. Okay, so that profile, weird.
00:13:02.510 - 00:13:33.094, Speaker A: How about that one? Join a year ago, slightly better. Only promote project. Okay, weird, weird. How about that guy? Only promote project. And I'm pretty sure for this one, for the last one, this is the same. Okay, also joined very recently, not good. And only promote project.
00:13:33.094 - 00:14:15.890, Speaker A: Okay, guys, I can tell you right away that seemed just bad. The whole social media thing seems like fake. And all the Twitter account that support them, they seem fake. So that's not good. Okay, so we have evaluated the team, the product. Now how about the team, the social media and community? Now how about the product? So let's go back to the homepage of earn finance and see if we can find anything about the product, anything interesting. So invest in the world's biggest decentralized finance ecosystem.
00:14:15.890 - 00:14:53.840, Speaker A: It's kind of vague. Okay, right away they're like, okay, discount, token sale. They seems to be super eager to sell you their token with a 60% discount, which I find a crowd sale, it's not even spelled properly. So 60% discount. Like, this is weird already. What do you mean discount? Do you think this is Amazon? Like this is Black Friday or what? Come on, this is weird. So right away they talk about the token, the number of token you receive depending on your amount you send to the flash sale address.
00:14:53.840 - 00:15:10.086, Speaker A: Buy token. Again, buy Token. But okay, why you asked me to buy the token and you don't even explain me the project. Okay. Overall output over 60 months, it doesn't mean anything. Doesn't mean anything. Next generation of decentralized system.
00:15:10.086 - 00:15:39.166, Speaker A: So combine some of the best feature of money market protocol while using offering is your own unique feature. Okay, super vague, don't understand. Get started instantly. Fully decentralized, no kidding. Insurance. Okay, so this is just some like buzword, but basically don't say what they do, we don't know what they do. Create a win win for everyone.
00:15:39.166 - 00:16:05.426, Speaker A: Some marketing bullshit. Okay, learn more about unfinanced tokens. So it's all about the token. There is nothing about what they do. So under development, distribution of token, community building, exchange listing uniswap. So they're going to list their token, okay, don't care. Pre development of proprietary crypto liquidity pool.
00:16:05.426 - 00:16:33.300, Speaker A: So it seems like they're doing some sort of yon finance, but they don't say it clearly then here, regulatory compliance, yeah, kind of bullshit word. Development of proprietary crypto liquidity. Okay, development of staking platform. Okay, it's a bit vague. I don't really know what they do so far. I rate them poorly on every metric like team. No, not good.
00:16:33.300 - 00:17:26.398, Speaker A: Social media community, not good. Product, not good. And then how about the smart contract? So do they even have a smart contract? So let me see, did they even have a GitHub? Okay, apparently they don't even, okay, let's try to search for that. But I think I didn't find any GitHub for them. Earned finance. Okay, so yarn finance, GitHub, I find yarn finance, but that's another project, no. Okay, so it seems they don't even have their smart contract, their GitHub somewhere.
00:17:26.398 - 00:17:56.374, Speaker A: So yeah, just bad. So this project is probably not legit. Really. Okay, so next one, space mine defi. So I think that someone told me they had a problem recently. Problem recently. I pretty sure this is a scam, but I mean let's do the analysis.
00:17:56.374 - 00:18:20.302, Speaker A: So first the team. Team, where is the team? Show me the team. No team. Find us on. Okay already no team. Okay, wow, that's not good. Then social profile.
00:18:20.302 - 00:18:50.910, Speaker A: Let's see Twitter. Let's see the twitter. How is it Spaceman defined? So they joined very recently. Yeah, not great. Yeah, they do have some followers. Okay, so let me see, what do they say? Please sell your what they tell people to sell their mind the token. Okay, this is weird.
00:18:50.910 - 00:19:21.906, Speaker A: We're going live. Okay. Not too many people seems to be involved in their twitter. So I would say yeah, looks slightly better than the other project. Okay, how about their, I don't know, do they have a discord? Let me see the discord. Discord, discord, discord. Accept.
00:19:21.906 - 00:19:59.122, Speaker A: All right, so what's going on in their discord? Positive. Negative. Okay, so welcome, welcome, general chief. There is some discussion and not everybody seems to be shilling the coin. Okay. I would say not the fire. Social media.
00:19:59.122 - 00:20:19.254, Speaker A: They are not too bad. How about the medium? Let me close this. How about the medium? Space mining. Space mine. Liquidity mining. Let's see if they say anything interesting. Hello.
00:20:19.254 - 00:20:50.990, Speaker A: Okay, slowing. Hello, space miner. Your liquidity mining mission start in the 30 minutes. Okay. So they explain the detail of the different pool. Okay, so I like when they are a little bit detailed, but there is no mention of the smart contract. Okay, why did I don't announcement? It's been brought to our attention by community auditors that there is security concern.
00:20:50.990 - 00:21:45.878, Speaker A: Okay, but how come you don't mention the address of the contract? Okay, well, so far I think I like their online presence for social media, but I don't like the fact we don't see their team. Then what about their product? So we have a clear product description. So defi aggregation powered by total connected to top decentralized exchange and tinetics asset provider when you execute a swap. Okay, so basically defi aggregation, that means that they connect to many decentralized exchange and they allow you to buy and sell your tokens at the best price. So this is a clear description. I like it. However, they are not actually doing it themselves, but they're delegating this to another project, another project called Total.
00:21:45.878 - 00:22:25.034, Speaker A: So if they just delegate this, they don't provide much added value. But then they have this other thing, automatic insurance through Nexus mutual. So users are covered for up to 600 if in the event that funds are lost. Okay, so that's nice. So basically they add this extra layer on top of total. So yeah, this is like good way to monetize an existing. Yeah, I like their product description, although it would be nice to verify their claim about Nexus mutual.
00:22:25.034 - 00:22:54.810, Speaker A: So I don't know this project, I don't know how you can check this, but I would ask them in the community like more detail about this so that we can verify this ourselves. Okay. So we've covered the product. So next we're going to cover the smart contract. So someone sent me the address of their smart contract by email. So I would have preferred to see the address of their contract on their website. I don't like that.
00:22:54.810 - 00:23:49.094, Speaker A: I don't see it. Really. Okay, so we are on Etherscan, this is their smart contract, and we're going to verify a couple of stuff. First of all, do we have a GitHub space mine? Space mine? GitHub space mine defi, right? Is it this thing? Space mine? Oh no, it's not this one. The full name of the project is spacemind Defi. Okay, do they have spacemind defi? Do we have a GitHub? No, we don't. How about like this? Do we have a GitHub? No, no GitHub.
00:23:49.094 - 00:24:29.958, Speaker A: Okay, so I don't like that we don't have a GitHub. But anyway, let's see the contract on Etherscan. In Etherscan we can see that the contract is verified. So that's very important. What does it mean to be verified? Verify means that you have submitted your code to Etherscan. And so etherscan, what it's going to do, it's going to basically take the code that you give it, it's going to compile it with the exact compilation parameter you give it. So you can specify everything, the version of solidity you use, the optimization parameter of the compiler, everything.
00:24:29.958 - 00:25:32.266, Speaker A: Ethereum is going to compile this and then it's going to get what we call the bytecode of your smart contract. So this is like a set of elementary instructions that this is basically what is stored on the blockchain. Because the blockchain doesn't understand solidity, only understand what's called the evm bytecode. And Etherscan is going to compare this bytecode with the actual bytecode that is stored at the address of this address on the blockchain. And if this matches, then ether scan will say, okay, well, you know what? I think this is a legitimate contract in the sense that the source code that you claim it is to be, this is the actual source code that is deployed, because otherwise a project can bullshit you and say, okay, we are on etherscan, and then they show you their smart contract code, which seems legit, but it's not the actual code that is deployed. So that's why it's super important that it's verified. It doesn't mean the contract is safe.
00:25:32.266 - 00:26:06.850, Speaker A: You must not be mistaken. It doesn't mean it's safe. I'm coughing here because I'm seeing too much defi scam make me cough. So it only means the source code they submitted is the real one, but it can still be a malicious source code. Okay, so then we're going to analyze this source code. So actually it's a bit hard to read like this. So let's going to paste this in remix.
00:26:06.850 - 00:26:18.460, Speaker A: So I got remix. They've done a nice makeover. They added this new theme, dark theme. That's pretty nice. Okay, so give me some space. Remix. Thank you.
00:26:18.460 - 00:26:37.358, Speaker A: So let's scroll down. So first off, Dt version, it's better that they use a new year version. Yes. 0.6. Yeah, that's relatively new. Ownable context. This is some utility.
00:26:37.358 - 00:26:56.870, Speaker A: So nothing too interesting here. This is taken from open ziplink probably then library safe. Yes. 20 tokens. So also taken from open zip link. Nothing too interesting here. Then library address.
00:26:56.870 - 00:27:24.800, Speaker A: This is to detect if an address is a smart contract or not. Okay, let's. Nothing too interesting here. Safe mass. Yeah, this is a library to avoid overflow. Underflow. This is related to arithmetic on smart contract, probably taken directly from open ziplin as well.
00:27:24.800 - 00:27:48.060, Speaker A: Then the interface of yas 20. So this is to interact with other smart contracts. So yeah, very standard so far. Erc. Then they start to build a yes. 20 token. Okay, so here the code is transfer function.
00:27:48.060 - 00:28:23.460, Speaker A: So this function are important because you can basically modify them to make them vulnerable. So here, actually I don't think this is the final implementation. Let me see. Underscore transfer. Okay, we need to go to underscore transfer. Underscore transfer. Okay, here require a sender to be transfer recipient before token transfer.
00:28:23.460 - 00:28:41.340, Speaker A: Okay. Modify the balance here. Okay. Seems to be fine. Let me go back to transfer from. I want to make sure they record they make transfer transfer public override return. Okay.
00:28:41.340 - 00:29:06.850, Speaker A: Why doesn't verify the sender? Maybe in underscore. Yeah. Okay, here message MSG sender. Yes. So only the sender can, can transfer. Okay. MSG sender.
00:29:06.850 - 00:29:56.354, Speaker A: Okay, so this is fine then let's scroll down space mine core. Okay, so this is the actual token. Yeah. So they add some new, they basically override some function of ERC 20. You know what I'm going to do like a small post here. Let me see the question in the chat quickly. Sumai Canti say, could you show us to do a demo how to find a smart contract bug? Yeah, it was kind of what I'm doing.
00:29:56.354 - 00:30:34.800, Speaker A: Hey, the blogs. This is off topic, but I was wondering if you also help prep for interviewing your courses by any chance? This is part of the course six figure blockchain dev. Yeah, this is in the bonus section. Tshx say it's the Christmas season. Therefore whoever scam goes to the naughty list. Sebastian, I like to see a video about chain link solidity to find prices of another coin for epic coin. Okay, I'll think about it.
00:30:34.800 - 00:31:02.166, Speaker A: Sebastian, I'm working on a wrap, like on project. How do I make sure it looks legit and presents and doesn't seem as basically every other project? I want it to be unique. Okay, so yeah, this is not. Maybe I'll address this a little bit later. But it's not directly about the defi scam. Sebastian asked me if French. Yes, I do.
00:31:02.166 - 00:31:51.826, Speaker A: I'm french. Lama saying sorry to hear about your scam. Someone else looked like hffs just got scammed. Okay, maybe we can have a look after. Marcio is saying, what are the risk of an unverified contract? If someone wanted, would it be possible to verify a contract without ether scan? So the risk of an unverified contract is that the code at this address is different from what the developer are claiming. So the developer, they show you a nice code that looks very legit and. But actually it's not legit.
00:31:51.826 - 00:32:27.950, Speaker A: The actual smart contract deploy is totally different. So that's the big risk. Is it possible to verify a contract without ether scan? Yeah, you can do it yourself, basically. So you would need a three DT compiler. So you compile the source code that the developer claim it is. You compile the source code with exactly the same parameter. Then you get some bytecode, and then you will need to use a tool to get the bytecode at the address of the contract.
00:32:27.950 - 00:33:12.202, Speaker A: So I think you can do this with web three. If not, you can probably do it with some security analysis tool like me. Thrill let me write this in the chat. I haven't used it much, but I'm pretty sure it offered you to get the bytecode at a deploy address, and then you just compare the two bytecodes. So yeah, you can do it yourself. Yeah, okay, I think I've done all the questions so far. So, yeah, back to our smart contract analysis.
00:33:12.202 - 00:34:20.066, Speaker A: So yeah, I was checking the transfer and transfer from function. So it's very important to go down the rabbit hole and to see all the channel of inheritance, because even if a child contract defined a function, you can still override this function in a parent contract. So maybe you can have like a safe version of transfer before, but because you overwrite it, actually you make it not safe. Okay, so then let me see how it work here. So transfer require that the sender is the owner or that is locked. Okay, that is not locked. I don't like the or it should be an end because then it means that basically if you are not the owner, you are the admin of the smart contract.
00:34:20.066 - 00:34:47.680, Speaker A: Then you can unlock it here and you can execute the transfer function. So that's weird. Should be an end then the tax amount. Okay, so apparently they don't know why they take a tax for each token transfer. This is strange. Why taking a tax. There is no tax on token transfer like this should be the totally free.
00:34:47.680 - 00:35:36.510, Speaker A: Let me see. Basically they take some money for each transfer. I fund this wheel because now who set this tax rate? Okay, if they set this tax rate to 100%, then nothing here transfer amount will be zero. And so here they don't transfer you anything. Okay, so it's actually really bad because yeah, they send it to 100%. Then here this transfer amount will be zero. Then super transfer.
00:35:36.510 - 00:36:06.186, Speaker A: What happened here? Super transfer will be called, but will it fail? Will it fail? Let me see. Will it fail? Super transfer. So let's go up. Let's go up. Under transfer. Transfer here. Underscore MsG sender.
00:36:06.186 - 00:36:32.760, Speaker A: So what is this underscore MsG sender. Where is this function? Underscore MsG sender. Let's find this. No. Or maybe it's in context. It's probably in context at the very top. The very top.
00:36:32.760 - 00:36:58.640, Speaker A: Context. Context. No, underscore MsG. Okay, so it return the sender. So this is the original sender of the transaction. Okay, so let's go back to underscore transfer. Sorry to just transfer.
00:36:58.640 - 00:37:35.480, Speaker A: Erc. Erc. Sorry for all the scrolling. I know it will make you like you are on the boat, seasick. So here is going to transfer from this address to the recipient and let's see how underscore transfer is implemented exactly. Sender recipient. But it doesn't check.
00:37:35.480 - 00:38:08.050, Speaker A: It doesn't check that this. Okay. Hmm. Okay. So yeah, you can, you can, you can only transfer from, from the sender. Okay. So it's not possible for another address to take some money out.
00:38:08.050 - 00:38:43.500, Speaker A: Okay, let me go back to transfer. I will need to spend more time with it. But I think there is some exploit if the tax rate is 100% because it's going to. Yeah, I think there is an exploit here and here. We also have the same problem with the function that you can execute with that. With this or here. Let's see exactly what is underscore lock.
00:38:43.500 - 00:39:00.610, Speaker A: Ch. Underscore lock underscore. Okay. So here you have an unlock function. Okay. Underscore lock. This is just a boolean value.
00:39:00.610 - 00:39:46.124, Speaker A: So you can call unlock if you're the owner of the contract, which is the admin, I guess. And then yeah, you can do whatever you want. Let me see. How about I'm checking how you can become an admin in this contract. Where can you become an admin? Taxer is the owner and the owner, if it takes the owner function of open zeppelin, that means that's the deployer of the contract. Yes. Basically you deploy this contract and then you are the owner.
00:39:46.124 - 00:40:32.830, Speaker A: How about the tax rate? How do we set the tax rate? Is it possible to change it? Tax rate, tax rate. Set tax rate. Yeah. Okay, so yeah, you're the taxer, you put the tax rate at 100%. And I think after we have a big problem. So I don't know if this is some error of the developer or they did it on purpose. Actually, I think if I remember well on their medium, that's what the article was talking about, they said that they wanted to fix this, but since they don't have a GitHub, we don't really know what's going on.
00:40:32.830 - 00:41:09.096, Speaker A: So yeah, that's an example really of a problem I found in this contract. Okay, so that's it for space mine adventure. So I'm not clear on that one. I would say some positive stuff. The product seems clear, social media are good, but for the code we would need to have some back and forth with the developer team. Something is not clear. Okay, so let's move on then.
00:41:09.096 - 00:41:45.732, Speaker A: There was this other project called Pump Farm. So it's sure that he was a scam because their website is down now and apparently a lot of the money has been drained from their contract. So I won't be able to review the team. I won't be able to review. How about their social media? I think it's gone. Also pump farm, Twitter, was there any warning sign? Pump farm, defi, I think it's gone. Yeah, it's gone.
00:41:45.732 - 00:42:19.772, Speaker A: Okay. So I can't say much. So all we can do is a sort of a postmortem analysis really. So it's the token of pump farm. Let me go to the page of the contract. So here, this is the verify contract. Okay, so the contract name is the farm token.
00:42:19.772 - 00:43:00.780, Speaker A: Actually, I think we do have their GitHub. Yeah, actually, you know what, let's check the GitHub. It's easier to read. Oh, by the way, you have to make sure that the code on GitHub is the same as the one which is verified because once again they can put one code on GitHub, then they put another code on etherscan and it's verified and everything looks great. But actually the code that is verified is azure vulnerability. So yeah, careful with. So first of all, let's do some general analysis about the GitHub repository and their organization.
00:43:00.780 - 00:43:36.932, Speaker A: So it seems like they just show more activity. Show me all the activity. So they joined GitHub very recently, created their first repo. Just a few comments and that's it. That's not great. Ideally we would like to see more activity on GitHub. It doesn't mean they just started, because sometimes people use their private repository, like you can use a private repo on GitHub or on GitLab and it doesn't show any activity.
00:43:36.932 - 00:44:13.300, Speaker A: And so they work on the private repo and then at some point they publish it to a public repo. So yeah, it doesn't mean they just started. But in general I like to see like a sort of trail of activity for some time. Then let's see this repository. So it seems like this project is a clone of Sushiswap. I'm pretty sure about this. Okay, so they mentioned the three contract here.
00:44:13.300 - 00:44:44.850, Speaker A: So that's good. Hey, Batman in the. Yes, so, okay let's see in the contracts code. What's going on? Okay, so that's the code of their token. So this is an ERC 20 contract. So they use open zeppelin. Okay, good.
00:44:44.850 - 00:45:32.990, Speaker A: So the deployer of the contract has all of this token that are minted. Okay, so does it mean they have a pre mine? So I'll be curious to see what would they do with the token here. When you see an underscore mint in the constructor means, just to be clear, a lot of token will be to whoever deployed this contract. So potentially you have a pre mine, then mint. Okay, so the owner is able to mint any token he wants. Okay. And then there is some function related to governance, I guess.
00:45:32.990 - 00:45:59.668, Speaker A: Okay, let me check. Function. Delegate. Okay, so some function about governance in the token. Okay, so here we have some low level code. This is related to signature. It's a bit complex, but here I don't see anything that looks fishy.
00:45:59.668 - 00:46:39.670, Speaker A: It's about some votes. Okay, votes, votes. Delegate. Okay, nothing too fishy here. Marcio Babozashi. Can I pay? Eat the blocks with crypto? Yes, you can check the faq of each of my course I put my address. You know what, actually, just to be sure, this is my address here.
00:46:39.670 - 00:47:07.560, Speaker A: Okay. Back to our contract. No. Then Governor Alpha. So this is about the governance. Okay, proposed, you can propose a vote. Q reverge.
00:47:07.560 - 00:47:43.640, Speaker A: Okay, I don't see anything fishy here. It's about proposal cast votes, actually. Okay. It will probably require more time, but there is a way that they can exploit this. So basically, if there is a vulnerability in the votes, then even if they have a minority of tokens, but they know the vulnerability, they can pass a proposal that update some contract. And the new contract has a vulnerability. So indirectly, with the governance mechanism, they could take control of the project.
00:47:43.640 - 00:48:20.070, Speaker A: If it's done poorly, then migrations. So I think it's related to the vampire attack of sushiswap. So basically, sushiswap is this clone of uniswap. So this is a decentralized exchange for sushiswap. What they did is they offered some reward to the liquid provider of Uniswap if they stake their token on Sushiswap. And so they called this, I think they did this with the contract migration. So I think that's the purpose of this.
00:48:20.070 - 00:49:17.408, Speaker A: Okay, so not much to see here in the migration then time lock. So this is used to, I think this is used with the governance contract to enforce a time lock for the vote or something like this. So some delay, Q transaction, cancel, execute. Yeah, I think all of this is used for governance. Okay, nothing fishy here. And then pump farm. Okay, so I think this one is high risk because that's where you will stake some token and then you have a risk.
00:49:17.408 - 00:49:40.456, Speaker A: You have a risk because in exchange you get some LP token, but maybe when you try to redeem it, your funds are gone. So that one is high risk. So let's see. Pump farm is ownable. You know what, let's check out the repo of Sushiswap because I'm pretty sure this is the same code. Sushi swap. I can't say it properly.
00:49:40.456 - 00:50:14.102, Speaker A: Sushi swap. Okay, so contract then which contract is the. I think it's sushi restaurant. User. User info. Let me see. Yeah, user info, yeah.
00:50:14.102 - 00:50:55.230, Speaker A: Okay, so it seems to be the same. So what would be interesting? So here, I cannot do it easily in my live stream, but you could do a side by side comparison. So you open two web browser, you do a side by side comparison of these two tokens. So the contract of sushi, I think there are no vulnerability in it. So you can try to spot the differences between both and if they are the same, well, I should be fine. Okay, so let me see what's going on. With this token.
00:50:55.230 - 00:51:38.160, Speaker A: So constructor farm token. Okay, so add a new lp to the pool set migrator. Okay. Pen date pool. It looks super okay. Deposit deposit. So does the function you call when you deposit your lp token to farm.
00:51:38.160 - 00:52:24.530, Speaker A: So I don't see anything to. It seems exactly the same code of Sushiswap, but to be honest, that code is a bit more complex. It's a bit difficult to do a live analysis of that one. Yeah, okay, so that one, I don't see anything obvious. I will need more time to do a side by side comparison, but there is nothing obvious fishy about their code. So I would like to know more about what happened to this project. If anybody has some info, what was the exploit? Let us know.
00:52:24.530 - 00:53:28.784, Speaker A: Okay, well that was already quite a few project reviews, so maybe we can do a last one quickly. Let me see what we have in the chat. There are a lot of scams where you cannot sell the tokens. Once you buy it, Uniswap will keep throwing error. How can we look at code and identify such scam? Well, it depends on the error basically. So yeah, do you have more info? What do you mean some error? Because basically once, let me see, if you send a token to, if you're a liquid provider and you send your token to Uniswap, so then it's Uniswap, the owner of the token. Okay, so then you can buy this token automatically.
00:53:28.784 - 00:54:17.776, Speaker A: So it's going to execute the transfer function of this token. But then if this is not a standard ES 20 token in the transfer function, there can be something that prevents you from doing the transfer. So Unisop tried to do the transfer, but the ES 20 token blocks it. So in this case you need to check the code of the ES 20 token and especially the transfer function. Another thing I haven't mentioned, super important is the address of the token. So it's possible from the front end of a project that they change the address. So you verify the contract, everything is fine, there are no bug, no vulnerability.
00:54:17.776 - 00:54:44.492, Speaker A: But from the front end, when you validate on metamask, it actually do the transaction for another address. So you need to also to verify this what metamask shows you which address. Okay, so let me continue with the chat. Crazy cool. Hey, what's up Julian? Use diff checker. Oh yeah, there is a tool called diff checker to make a side by side comparison. Late night for me about to go live.
00:54:44.492 - 00:55:26.120, Speaker A: Yeah, well I will do two time, maybe like 11:00 p.m. UTC plus eight on Monday and 11:00 a.m. On Friday so that I can cover both America and Europe. What else? Oh yeah, another thing I wanted to tell you is that on Uniswap, so anybody can publish a coin with any name. So me, if I want, I can publish die for example. Okay. And I can also make it verify.
00:55:26.120 - 00:56:02.532, Speaker A: So here you will see the checkmark, I can put the logo, I can put everything, I can create my own die basically. So when you do the search on Uniswap, be careful. So one way you can quickly verify that the contract is legit is to do so. For example here I check this address, starting that the max total supply, okay. Holders a lot of addresses. So this one is very difficult to fake, okay. Because it costs money to have owners, okay.
00:56:02.532 - 00:56:28.510, Speaker A: So even if you deploy a fake version of DAi and you generate all these fake addresses that will have some fake DAi, you need to send all these transactions. So this will cost you a ton of money. So I'm not sure that a scammer will go to such length. Really, it's too much effort. Yeah. So what you see here official website, it doesn't mean anything. You can put whatever you want here.
00:56:28.510 - 00:57:05.080, Speaker A: Also another thing that is very important is the number of transaction here, how often they happen and how recent they are. So here you can see we have a lot of transaction very recent. So it's extremely unlikely that this is a fake version of DAi because otherwise it will cost so much money to the hackers to send all this fake transaction. You can see also all of these transfer come from different contract. Yeah. So basically really gives you some strong guarantee. This is the real address.
00:57:05.080 - 00:57:57.276, Speaker A: But of course the ultimate verification is always to check on the website, make sure this is the same. But just when you are working quickly on ether scan, that's how you can make sure this is the actual saying. I don't want to get a paycheck job, but endeavor creating a defi token. Would your course be good? Yeah, I mean with six trigger blockchain dev, basically you can become a blockchain developer, but you can also create your own blockchain project, your own defi project. So basically you choose what you do with your skill. I always recommend to go with a job first because it gives you some solid income and then you can use this income to do your project on the side. But if you want to do your project directly, that's up to you.
00:57:57.276 - 00:58:47.736, Speaker A: It's fine. SD saying Congeco has correct addresses most of the times. Okay, good to know. Okay, so I was saying just before, maybe we can do a last token analysis. So someone was saying Deco before Deco was saying look like HFS just got is HFS or YFFs. Let me see, FFS defi introduce YFF finance hack. What happened? What happened? Okay, so you say this project was hacked.
00:58:47.736 - 00:59:23.050, Speaker A: Okay, well you know what, I don't know about this project so let's do a last analysis about that. Where, where is the project? So why FFs finance? Okay, this account doesn't exist. Okay, already doesn't look too good. Where is the, okay we have a GitHub, but where is the website? I want to see the website. Do they have it? Oh, the GitHub doesn't exist. Okay. Doesn't look very good at all.
00:59:23.050 - 01:00:11.844, Speaker A: Wow, okay, look, terrible guy, no medium, no twitter, no GitHub. What else we can do? We can check on etherscan, maybe yffs, yffs finance. Okay, they have two farm and I guess this is the token. No, let me see. Contract. Okay, so this is verified, verified contract. Three DT compiler bugs.
01:00:11.844 - 01:00:52.244, Speaker A: Okay, I don't know what this means. Okay, so they use an old version of solidity safe mass. Yeah, this is normal ERc basic. This is the contract interface. Basic token transfer. Okay, standard token. Okay, so the override transfer from, I believe, then check the allowance here.
01:00:52.244 - 01:01:41.952, Speaker A: Okay, so the two transfer function look good to me. Multi ownable. What is this? Burnable mintable token. So who can mint so the owner and then you have another modifier can mint. Then finally the actual token is this one ifs token constructor. Okay, so here is the initial wallet as an initial supply. So maybe they can do a pump and dump.
01:01:41.952 - 01:02:16.960, Speaker A: Have to see what they do after with this initial supply. Transfer from nothing. Oh, transfer is overwritten here. Only transferable, not blacklisted. Okay, so what are these two things? Only transferable and not blacklisted because basically there is the way they can block your transfer. Let me see, only transferable and black. Not black minted, not blacklisted.
01:02:16.960 - 01:02:41.164, Speaker A: What is not blacklist but who can add to this blacklist? Require add to blacklist. Okay, so the owner can, okay, so super not good. Super not good. This is basically a centralized coin. Yeah, they can block you. And then there was another modifier. What was that? Only transferable.
01:02:41.164 - 01:03:33.450, Speaker A: So what is this? Only transferable, only transferable only okay let me, only transferable is unlocked. So they can also lock the contract apparently and okay, so this one, I don't see anything fishy here. This is, okay but he's unlocked. Hook unlocked. So you see you have to do this game of a detective basically unlock transfer. Okay. So they have a way to lock all the transfer and another way to block a specific address.
01:03:33.450 - 01:03:58.930, Speaker A: So just based on that, for a defi project, I find this super weird. There is no reason to do this. So. Yeah, I don't like this. And then there was another contract. Yffs farm token. Okay.
01:03:58.930 - 01:04:33.240, Speaker A: And I'm pretty sure that one will be quite complex. Let's go on. The contract is verified. Okay, it seems this is another clone of sushi swap. Let me go all the way down. I want to see the name of the last contract. Y farm token.
01:04:33.240 - 01:05:03.540, Speaker A: Okay, so yeah, another clone of sushi swap. Okay, yeah, but that one is a bit more complex to analyze because they have many different things. But just based on the problem we saw in the token already. I don't like it. Okay. That was a lot of project verify. Let me see what we have in the chat.
01:05:03.540 - 01:05:25.800, Speaker A: Crazy cool. Say, how do I repair an NPM build? I don't know what you mean exactly, but you can just delete the folder of the build and you run it again. Alton Joseph saying, greeting from the Philippines. I love your. Hey. Hey. Thank you, Alton.
01:05:25.800 - 01:05:44.640, Speaker A: SD. SD saying, marcio Julian won't toot his own, so I will do for him. He was the best classes on Ethereum development I found so far. Try other places. His classes are so far the best. Well, thank you, SD. Really appreciate.
01:05:44.640 - 01:06:06.570, Speaker A: Derek. What about other Defi project on Tron scan? Maybe I can do this another day, but. Yeah, today I wanted to focus on ethereum crypto centron. A lot of scammer. I'm done with it. Oh, really? There was a lot of problem with Tron. Okay, well, it's good to know.
01:06:06.570 - 01:06:36.192, Speaker A: I'm not surprised. I'm not surprised because I think the kind of people who go on Tron are more opportunity driven. Whereas for Ethereum, it just feels the community is more serious. It doesn't mean that you can have legit people on Tron. You can, but yeah, I just don't like that it's just a copy and paste of Ethereum with really not much added. Really? No. Derek, that's crazy.
01:06:36.192 - 01:07:13.048, Speaker A: They give bad behavior to cryptocurrency for the selfish reason. What about Hex? I don't know about Hex, but I've just heard that there are a lot of, how to say, controversy about Hex, but it tries to be some sort of another blockchain at this point. We have already so many blockchain. When someone comes up with a new blockchain, I'm not too bullish at this point. You should just build on Ethereum. Seriously. Unless you have access to a ton of capital.
01:07:13.048 - 01:08:01.260, Speaker A: But otherwise all people who create their own blockchain, the only case where it could make sense is if you build some private blockchain for some corporate, for example. So you represent some consortium in maybe the supply chain or banking industry. Okay, so maybe it makes sense to build your own blockchain. But for a public blockchain, I would say just use Ethereum. Julian, I have problem on verifying contracts on remix. Is that something I have to do different? I haven't done it on remix. But why do you want to do it on remix? Is it for your own project? Because you have to do it on Ethers scan.
01:08:01.260 - 01:08:40.408, Speaker A: I know there is a truffle plugin that integrates with Etherscan where you can verify your contract with the API. So you can even hook this to some sort of automated system where every time you publish a new version that you run this plugin on truffle and boom, this is verified on ether scan. Barry saying, thanks for the great live stream. Hey, glad you. No, Derek saying people on hyip platform are the same on Defi. Defi sucks before there's gas fee. I don't know this hyip platform.
01:08:40.408 - 01:09:00.704, Speaker A: Don't know about this. Crazy cool. Tron is cheap. Yes, their main selling point. But beside this, it's basically Ethereum with different parameters. They just tweak the parameters to make the transaction fees cheaper. But this is just a hack, really.
01:09:00.704 - 01:09:17.700, Speaker A: It won't really solve the core problem. But that's okay because now we just launched Ethereum 2.0. I mean, we're doing well in Ethereum. We're doing well. Crazy cool. Build six dapps on Tron. Okay.
01:09:17.700 - 01:10:01.796, Speaker A: Was it easy to build a dap on Tron? How was that? No. Lama say thank you so much for this. Well, I think that was it. Yeah, we reviewed a couple of Defi project. It's possible that in the future we do other review of Defi project because maybe I feel like this is something that will be interesting. So maybe we'll do other reviews. If you guys are interested in specific project, you can send me email or you can put in a comment or in the chat, you tell me.
01:10:01.796 - 01:10:29.800, Speaker A: Hey, Julian. Hey, can you review this project and. Yeah, I'm totally done for doing other reviews. Okay, guys, so we're going to wrap it up here. So, yeah, thanks for following. I know that this is not a convenient time for everyone and have a great weekend, guy. And I'll see you next week Monday, for the weekly news on Ethereum and Defi.
01:10:29.800 - 01:10:37.740, Speaker A: All right, guys, have a great weekend. Bye. Cheers.
