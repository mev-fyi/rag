00:00:00.170 - 00:00:35.318, Speaker A: Do you want to create your own token on the blockchain? But you don't have any coding skills or you know coding, but you don't want to learn blockchain. In this video I will show you a tool to create your own token in a quick and easy way. Everything is visual, there is no coding required, and in a few minutes you can have your own token deployed on Ethereum or on binance smart chain. If you don't know me, I'm Julian. I am a professional blockchain developer and on etherblocks at each blockchain. So here is a token maker of edoblocks. You can access it at tokenmaker edoblocks.com.
00:00:35.318 - 00:01:02.846, Speaker A: With this tool you can deploy your own token on two blockchains. Ethereum and binance smart chain when we deploy a token on Ethereum, we call this an ES 20 token. And when it's a token on the binance marching, we call this a BeP 20 token. ES 20 and Bep 20 are what we call token standard. They define how the token should work. Technically, there is no difference between an ES 20 and a BEP 20 token. The code is exactly the same.
00:01:02.846 - 00:01:27.094, Speaker A: The only difference is that ES 20 tokens are deployed on Ethereum and BeP 20 tokens are deployed on binance smart chain. So back to the token maker of it, the blocks. To get started, you need to click on create your token. Then the next step, you select your network. So Ethereum or binance smart chain. So we're going to choose Ethereum and after you have to configure your token. So first token type.
00:01:27.094 - 00:01:51.658, Speaker A: There is no fee at all to use our tool in this case, but there are less customization available. Then you have basic which is slightly more expensive with more customization. And finally custom, you can customize everything. So let's pick custom to see all the option available. So here the name of your token. Here the token symbol. This is what will be displayed in decentralized exchange.
00:01:51.658 - 00:02:16.822, Speaker A: So for example, tkn the number of decimal. So decimals are a little bit like the cents for tokens. Most tokens use 18 decimals. So in most cases you should leave this to 18 unless you have a very good reason to change this. So for the supply type it can be either fixed so that's the most simple. For example 1 million token and it will never change. Then you have cap.
00:02:16.822 - 00:03:13.050, Speaker A: So this allow you to mint some token after the deployment, but up to stone level and then unlimited, which means you can mint as many token as you want after deployment. So you have to be aware that in general, investors prefer a fixed supply because it means that the value of their token is not going to be diluted by new tokens that are created after. So after you have to specify the initial supply. So this is really up to you. So for example, let's choose a capped token, and so here we can choose an initial supply of, let's say 1 million, so 123123 and the maximum supply. So let's say that it's going to be 2 million, and then here you can choose a couple of options, I guess actually the first free one, you cannot change them, but you have no reason to. So first we guarantee that the token we create will conform to the ES 20 standard.
00:03:13.050 - 00:04:02.970, Speaker A: Then the token will be verified on ether scan, which means that when you go on ether scan at the address of your token, you will be able to verify that the code deployed at this address is the code of an S 20 token. And this is very important so that investors can trust your token. And finally, there won't be any copyright link in your contract. And that's because we chose the custom token, otherwise it would be added. And so here we make our token mintable so that we can create new token after we deploy the token. If you want, you can also make your token burnable and also recoverable. So recoverable means that if someone send by mistake a token to the address of the contract, for most tokens, this means that this is going to be lost.
00:04:02.970 - 00:04:46.546, Speaker A: But if you activate recoverable, it means that there will be an extra function to allow you to recover these lost tokens. Access type. So here you have two choice owner or roles. So in most cases you will want to choose the owner option, which means that the deploying address will be the owner of the contract and will be able to mint new token. Okay, so after we're going to select the network. So we already selected Ethereum before, but if you want to test the tool, you can choose Ethereum Covan test network. Then you click on the agreement and because we chose the Covan network, so there is no commission fee.
00:04:46.546 - 00:05:24.606, Speaker A: But if this is an ethereum network, there is a fee. And even though in this case you don't have commission fee, you still have to pay for the gas fee for the deployment transaction. But in this case, since we're using Covan, we won't use real ether. So here I've installed Metamask and before you click on confirm, you need to select the correct address in your browser. So you will need to make sure that you've selected the correct address in Metamask. If you never heard of metamask, if you don't have it yet, install it first. Then you launch it in your browser and you have to select the correct network.
00:05:24.606 - 00:06:06.622, Speaker A: So if you wanted to deploy on Ethereum mainnet, you will choose the correct network. But in our case, we're going to deploy with Covan test network and you need to make sure that you have enough ether in your address to cover for the transaction fee and for the commission of Token maker. So in this case, since we are on Covan, this is just for testing. What I did is that I copy pasted, I got some ether from a. So a faucet is a tool that allow you to get some free ether on the Covan network. So here I copy pasted my address, I clicked on get eth and that's why I have some Covan ether here. And so I'm going to click on confirm.
00:06:06.622 - 00:06:37.222, Speaker A: So you'll see the pop up of metamask. So first it's going to ask you which address you're going to use. So this is the address that will pay the transaction fee and the commission fee, and that will also be the owner of the contract. And then here I'm going to select the first address next. Okay, so you click on connect because now I have enough ether. And here this is cut off on my screen, but I'm going to click on the confirm button of metamask. And now it's deploying the smart contract.
00:06:37.222 - 00:07:09.938, Speaker A: So now we need to wait for the transaction to be mined. So depending on which network you're deploying to, this is more or less, it takes more or less time. At some point you will see a pop up from Metamask telling you that the transaction was confirmed. And here you can add your token to Metamask so that you can see your token balance automatically. And you can also see the deployment transaction on Metamask as well as the token address. This is a transaction for the deployment. And here this is the address of the smart contract.
00:07:09.938 - 00:07:44.970, Speaker A: And here we can see our token deploy on ethers scan. Here we can see the name of our token, and here we can see the symbol of our token Tkn the address here, the number of decimals, and that's it. Our token is deployed. That was easy. As you can see with this tool, you don't need to know any coding at all, and you can still create your own token in a few easy steps. Next, go check out our tool at tokenmaker idoblox.com. Click on create your token and it will take you to the app and after with just a few clicks, you will have your own token deployed.
00:07:44.970 - 00:07:55.250, Speaker A: If you need custom development for your token, you can also contact the team of edoblocks. The details are on the website. Thanks for watching and I will see you in another video. Bye.
