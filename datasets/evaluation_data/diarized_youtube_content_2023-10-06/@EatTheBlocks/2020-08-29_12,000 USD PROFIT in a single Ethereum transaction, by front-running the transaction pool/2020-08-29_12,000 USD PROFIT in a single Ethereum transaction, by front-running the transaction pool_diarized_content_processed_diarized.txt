00:00:00.650 - 00:00:29.302, Speaker A: Another week on Ethereum. Another crazy story. One guy made $12,000 in just 1 second in one transaction and he didn't even make any effort. All he did was stealing the transaction of somebody else. This is called front running. So in this video I'm going to tell you the full story of how that happened. Hey, if you don't know me, I'm Julian and on my channel, etherblocks I teach blockchain development and how to find your first blockchain job.
00:00:29.302 - 00:01:18.242, Speaker A: And before we continue, quick mention to my new upcoming course, advanced Solidity. If you want to be notified when it comes out and receive some exclusive preview, register with the link down below. So our story starts with Uniswap Uniswap is the most popular decentralized exchange on Ethereum. On Uniswap, if you want to be a market maker, you send your tokens to the smart contract of Uniswap and in return you get some liquidity provider tokens or just LP tokens. At any time you can redeem these LP tokens and get back your initial tokens plus the trading fees you earn. When you want to redeem these LP tokens, you have to one, approve these tokens to be spent by Uniswap. Two, call a function on the smart contract of Uniswap.
00:01:18.242 - 00:01:49.726, Speaker A: This is all done automatically by the interface of Uniswap. However, someone made the mistake of sending these LP tokens to the smart contract of Uniswap directly. Terrible mistake. Smart contracts have no way of reacting to incoming transfer of ES 20 tokens. That's why we always do pool based transfers instead of push based transfers. So now the tokens are locked in the contract of Uniswap and nobody can do anything about it. Really.
00:01:49.726 - 00:02:54.750, Speaker A: Actually, there is a bug in the Uniswap smart contract that allow these tokens to be retrieved. In the smart contract of Uniswap, when you redeem your LP tokens, the amount of tokens you get in exchange for your LP token is not based on how many LP tokens you send, but based on the current balance of LP tokens of the contract of Uniswap. Under normal conditions, these two amounts are supposed to be the same since no LP tokens are supposed to remain on the contract between transactions. But if someone accidentally send LP token to the contract of Uniswap, we do have a balance of LP tokens between transactions. So it's possible for someone else to redeem LP tokens without sending any LP tokens and still get some tokens back corresponding to the balance of LP token that were already present on the contract of Uniswap before the call. So we found a solution. We can get our tokens back.
00:02:54.750 - 00:03:35.230, Speaker A: Really not so fast, because there is another problem called front running. Front running is a technique used by miners to make money by leveraging information of the transaction pool. Unfortunately, front running is done at the expense of the original sender of a transaction. So let's see how it works. When you send a transaction to the Ethereum blockchain, it doesn't get included in the blockchain right away. For most decentralized application, you send it to Infira, which then forward the transaction to other Ethereum nodes, including miners. When miners receive your transaction, they put it in what we call the transaction pool.
00:03:35.230 - 00:04:39.942, Speaker A: This is a collection of pending transactions not included yet in the blockchain. When there are enough transaction in a transaction pool, miners take a bunch of these transactions, put them in what we call a block template, and they start the mining process. If they are the first one to mine the next block, these transactions are included in the blockchain and the process is repeated for the next block. The important part is that miners can choose which transaction to include in their block template. Miners want to maximize the profit, so they will usually choose the transaction with the highest transaction fees. However, miners have another way to make money if they detect that any transaction will make money if they were the sender of the transaction, they can decide not to include the original transaction, copy paste it, modify the sending address, and include their own copy only. This way, the original sender of the transaction, who did all the hard work of funding the opportunity, gets nothing and miners take all the profit instead.
00:04:39.942 - 00:05:04.518, Speaker A: If you're interested in how it would work technically, let me know in the comments below. I could maybe make another video about that. So that's the danger we are facing. Can we prevent this from happening? Yes, we can. So we want to protect ourselves against front runners. For that, we're going to create two smart contracts. First one a setup contract, second one a ghetto contract.
00:05:04.518 - 00:05:42.630, Speaker A: The ghetto contract has a function that take the money out of Uniswap. It's protected by a required statement. The contract needs to be activated first. So first we're going to deploy the setup contract, then the getter contract. Then we send two transactions, one to activate the getter contract by using the setup contract, and another one to finally take the money out of Uniswap. The trick is that we are going to send these two transactions in the same block, which will leave very little time for front runners to find out about that opportunity. So everything I described so far started in the support forum of Uniswap.
00:05:42.630 - 00:06:19.454, Speaker A: A user explained how he locked his LP tokens and another guy thought about how to get them back. It's that other guy who found out about everything I explained so far. The original plan was to take the money out of Uniswap and give it back to the original unfortunate trader. So based on everything we said, it looks like it's gonna work, right? Well, actually, no. The good Samaritan that was helping to recover these LP tokens carried out his plan. First transaction to deploy set of contract. Second transaction to deploy the getter contract.
00:06:19.454 - 00:06:50.718, Speaker A: Then in the same blog, he submitted two transactions. First one to call the set function of get a contract. Second one to call the get function of get a contract. But the second transaction was rejected by Inferra. He submitted the transaction again, but now we were in the second block. At that point, the geta contract was already activated and anybody could front run the transaction, and what had to happen happened. Miners saw that opportunity, front run the second transaction and took all the money and made $12,000.
00:06:50.718 - 00:07:28.740, Speaker A: And the original guy who wrongly sent his LP token to uniswap never got his money back. So front running can be really profitable, but that's really an advanced technique. And before this, you need to first understand how you can make profitable transaction on the Ethereum blockchain. There are several ways to do this, but one of the coolest tool we have is flash loan. So with flash loan, you can borrow large sums of money without providing any collateral. And with this money, you can use it to make some arbitrage, liquidation, and a lot of super cool stuff. And if you want to learn about Flash loan, I actually have a full series here on my channel, so I'll see you there.
