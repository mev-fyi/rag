00:00:00.170 - 00:00:50.934, Speaker A: In this video I'll show you how you can delete elements in solidity arrays without leaving any hole in it. Hey, I'm julian and on my channel idoblocks, I teach blockchain development and how to find your first blockchain job. So here is my example smart contract. So I have an array of string with some data already in it and I'm going to create a function to remove element from this array. So let's call this function remove, no order, and it's going to accept a single argument. So the index that we want to remove. So how are we going to proceed? So what we're going to do is we're going to overwrite the elements that we want to delete with the last element of the arrays, for example, if we want to delete the second element.
00:00:50.934 - 00:01:33.034, Speaker A: So for example, Bruce, then we're going to copy here cherry into Bruce, it's going to override Bruce, and after we're going to remove the last element of the array. So that's a very simple algorithm that's very fast. So let's do this. So first let's overwrite. So here the element that we want to delete, it's data index and we're going to override this by data, by the last element. So that's data length minus one because the arrays is zero indexed. And after that we need to remove the last element of the array and that's it.
00:01:33.034 - 00:02:04.562, Speaker A: So the pop method has been added in solidity 0.6. So if you use solidity 0.5 you won't have access to it. Also if you see some old tutorial of solidity, you will see something like this, like data length minus minus when you want to remove an element. So in solidity 0.6 you shouldn't do that because when you use the pop method, it automatically decrease the length of the array. Okay, so what I show you here is cool, that's very simple, that's very fast.
00:02:04.562 - 00:02:46.290, Speaker A: But there is a problem because it leaves our array not in order because now before cherry, for example, was the last element, but after our function, then it's going to be not the last element anymore. So can we find a way to delete an element from an array and keep the array in order? Yes we can. And I'm going to show you this. So going to create another function, remove in order. So same thing, accept the index as an argument. And this time we're going to create a for loop. And the way it's going to work is that we're going to shift all the element of one slot before.
00:02:46.290 - 00:03:21.226, Speaker A: So, for example, let's say that we want to delete Bruce. So we're going to start here, we're going to iterate from the position of Bruce. We're going to copy Tom into Bruce, we're going to copy Bart into Tom, and Sherry into Bart. And at the end we'll have an empty position here. And we will delete the empty position at the end of the algorithm. So let's write this for loop. So here we define integer and we're going to start at the index and we're going to stop when we reach the second last element.
00:03:21.226 - 00:03:57.794, Speaker A: So here it's going to be strictly inferred to data length minus one. And then we're going to increment our index. We're going to start with the element that we want to delete. We're going to copy the next one, and once the for loop is finished, then we're going to remove the last element. And now we have deleted our element and kept the array in order. But compared to the first algorithm, there are more steps involved in this one. So it's going to consume more gas.
00:03:57.794 - 00:04:07.970, Speaker A: So you should only use this method if you absolutely need to keep your array in order. If you want to see some other cool tricks for solidity, check out this playlist. I'll see you there. Bye.
