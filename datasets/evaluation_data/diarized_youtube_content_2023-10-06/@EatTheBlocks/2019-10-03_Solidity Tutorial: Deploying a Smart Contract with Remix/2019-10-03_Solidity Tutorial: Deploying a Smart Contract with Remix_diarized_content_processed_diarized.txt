00:00:00.490 - 00:00:42.522, Speaker A: In this video I'm going to teach you how you can deploy a solidity smart contract to a local development blockchain using the remix online IDE. By the way, I created a free email course to teach you how I got my first remote blockchain job, paid $100,000 a year. So if you want to learn all my secrets, you just have to sign up at this URL. So I am in remix now and this is the smart contract that we created in the last video and we're going to deploy it. So first we need to change the menu. So you're going to click on this icon on the left and you're going to see the deploy and run transaction. We have a few options to set up.
00:00:42.522 - 00:01:21.986, Speaker A: So first you see here an option that is called environment. So this is important. So this allow you to define where you want to deploy your smart contract. So you have different choices. So you can deploy a smart contract on the real Ethereum network that is also called Mainnet. So on this network people use real ether and basically everything you do on this network is the equivalent of production. So when you're developing a smart contract, you don't want to use main net because first it's going to cost you money, and second, it can have some real life consequences.
00:01:21.986 - 00:02:07.698, Speaker A: Instead, when you develop a smart contract, you want to have a safebox isolated environment where you can make mistake without any consequences. And in order to do that you need to set up a local Ethereum network that runs only on your computer. It can be a little bit complex to set up this local development blockchain yourself, but unfortunately remix already does it for us. So here you're going to click on the drop down and you see the different options. So JavaScript VM injected, web3, web3 provider. I'm not going to explain all of them now, but the option we want for the local development blockchain is JavaScript VM. So we're going to let it selected.
00:02:07.698 - 00:02:43.578, Speaker A: Then we have another option which is called account. So on the Ethereum blockchain there is the concept of Ethereum address. So every user, no matter if you're a human user or a smart contract, everybody is identified by an Ethereum address. Ethereum addresses are related to public key cryptography. So this is an article of Wikipedia and on the right you have a schema. So this is the basic ID. So let's say that there is someone called Alice who want to participate in the Ethereum blockchain.
00:02:43.578 - 00:03:34.094, Speaker A: So first Alice is going to generate a large random number and then using this random number, Alice will generate two piece of data. First, what we call a private key, and second, what we call a public key. So this private key is the equivalent of a password. This will be used to sign the action of Alice and the public key will be an identifier. So like a soul of a user ID, ethereum addresses are derived from this public key. So back to remix. And why all of this matter for Ethereum? Well, on Ethereum, every time you want to modify the data on the blockchain, you need to build a piece of data called a transaction, where you describe the change that you want to make on the blockchain.
00:03:34.094 - 00:04:22.790, Speaker A: And this transaction will be signed using the private key that is associated to your Ethereum address. And when we're going to deploy our smart contract to the blockchain, this is also considered a transaction. So that means that I need to use an Ethereum address to make this deployment. I cannot just deploy this smart contract out of thin air. It has to come from one Ethereum address. And after the deployment, the smart contract itself will also have its own address which will not be controlled by my private key. This is another kind of address that is not controlled by any private key, but only by the code of the smart contract.
00:04:22.790 - 00:05:12.126, Speaker A: So when you use the local development blockchain of remix, remix automatically create five ethereum addresses and it puts some ether in these addresses. So here, if you click on the account, drop down, then you can see the list of all this address. And next to them you can see that these addresses have been prefunded with some ether. And this is very important because no matter if we want to deploy a smart contract or interact with it, we will need to spend some ether. By the way, if you wonder where we have the private key of these addresses, basically remix manage everything itself. So we don't have to deal with private key, we just have to click on the deploy button and remix internally will sign the transaction properly. We don't have to deal with anything.
00:05:12.126 - 00:05:46.874, Speaker A: So that's very, very easy to use for development. By the way, just to be clear, the ether that is associated to these addresses is not real ether. It's only valid in our local development blockchain. So if you try to spend this ether on the real ethereum network, it will fail. So otherwise remix will be like a magical bank that creates money out of thin air. That would be wonderful, but it doesn't work like that. Okay, so we've explained what is the environment option, what is the account option, then we have two other options called gas limit and value.
00:05:46.874 - 00:06:04.750, Speaker A: And we're going to skip this for the moment. We're going to explain this later in this tutorial series. Next, you need to select which smart contract you want to deploy. So here we just have one. It's called mycontract Sol. And then you click on the deploy button. And below you should see here this gray box appearing.
00:06:04.750 - 00:06:49.710, Speaker A: So this is a deployed instance of your smart contract. So using this box we will be able to interact with our smart contract. And if we click on the deploy button again, then it's going to deploy another smart contract. So we can see that the address here of this smart contract is different from the deployment that we did just before. So we can keep deploying smart contract and we will have more and more boxes here. So what is important to understand is that all this smart contract are if you modify data in one of these smart contract, it does not have consequences on other smart contract. All right, so that's it for this video.
00:06:49.710 - 00:06:57.850, Speaker A: And in the next video we're going to learn how we can actually interact with our deploy contract and execute the two functions.
