00:00:00.170 - 00:00:42.314, Speaker A: Did you know that you can write fast, smart contracts with GitHub Copilot? Developed by GitHub and OpenAI, Copilot helps developers write faster code by predicting what the coder might want. Let's see how that works with solidity. If you're new here, I'm Stefan, and on either blocks we help web two developers get into web3. So first, head to the copilot web page to start your free trial. So sign in with your GitHub account, start a free trial, enter your payment details, submit, select your preferences, and you're good to go. Now let's install the extension in vs code and sign into GitHub. So let's see what Copilot can predict for us right off the bat.
00:00:42.314 - 00:01:20.360, Speaker A: By pressing tab, Copilot suggest an ERC 20 contract. And then if I type contract and press tab again, copilot is suggesting me how to start the contract with a constructor. You can either accept or you can open the GitHub copilot, which is going to show you some other solutions. In my case, it was more related to testing in solidity. So instead I'm just going to press tab and I'm going to press tab again to accept that. Now what about if I want to add an access control for the import copilot, suggest a burnable. I'm just going to remove that and replace it with access control.
00:01:20.360 - 00:01:56.558, Speaker A: Then my contract is ERC 20 and access control. Now if I type a Byte 32 copilot correctly predict that I might want a minter role with Kchik 256, then a constructor with setup roles and a mint function that requires the minter role. Cool. Okay, but now let's directly tell Copilot what we want. I'm going to say ERC 20 with access controls. Now if I go to the next line and press tab, Copilot suggests the ERC 20 contract, which is correct. Then the access control contract, also correct.
00:01:56.558 - 00:02:16.180, Speaker A: Press tab again. And now copilot gives me the whole beginning of an ERC 20 contract with access control with setup roles in const structure and the mid function that requires minter rule. And it really just took a few seconds. That's it for this introduction. Thank you for watching. Let us know in the comment section if you want to see more of it. And with that, I'll talk to you in the next one.
