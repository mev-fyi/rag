00:00:00.410 - 00:00:48.090, Speaker A: In this video, I'm going to give you five tips to quickly understand new DeFi project. DeFi is evolving very quickly and there are new projects every week. So it's very important that as a blockchain developer, we have the capacity to quickly study new DeFi project and understand how we can integrate them. I've worked with tens of DeFi projects and I found that there were a lot of common pattern. So in this video, I'm going to explain you all of this. If you don't know me, I'm Julian, and on my channel, eatoblocks, I teach blockchain development and how to find your first blockchain job. So the first tip is to have a high level understanding of the DeFi protocol without delving too much into the detail.
00:00:48.090 - 00:01:21.490, Speaker A: But you should understand what it does. And one of the best way to do this is to use the white paper of the protocol. So sometime the white paper, actually you have two white paper, a technical white paper and an end user white paper. So you might want to start with the end user white paper, which is a little bit easier. And after you start to read the technical one, if you start to see a lot of mathematical formula in a technical white paper, that's fine. You don't have to understand all the formula. You can just ignore the things that look a little bit too complicated.
00:01:21.490 - 00:01:57.342, Speaker A: Don't panic, it doesn't really matter. And once you have a rough idea of what the protocol does, you are ready for the next step. So for the next step, you are going to use the DeFi protocol as an end user. So you're going to use their interface. So usually on the website of the DeFi protocol, they have a link to open the app. Usually you have to connect your wallet and you also have to fund your wallet first. And after that you can start to do some basic tasks.
00:01:57.342 - 00:02:38.042, Speaker A: For example, if you own compound, you can start to send some liquidity to a compound protocol. On Mecodao, you can start to mint some die. The key here is to not invest too much money because you don't know yet what you're doing. So it's really possible that you make a mistake, that you get liquidated really easily, that you lose all your money. So really only use some small sums. And after you finish this, this is finally the time to do some programming. So for my next tip, you're going to do some off chain integration.
00:02:38.042 - 00:03:23.710, Speaker A: By offchain integration, I mean that you are going to interact with the Defi protocol, but from outside the blockchain so you have different options. A first option is to use the official API of the Defi project. So not all DeFi projects have an API, but some do like compound, it has a rest API. So you can send some HTTP request, you can read data from the smart contract and also write data. So that's really good because you don't really have to study and understand how smart contract work. You just have to look at the documentation of the API and very quickly you can interact with the protocol. So that's super, super convenient.
00:03:23.710 - 00:04:07.786, Speaker A: Sometimes some projects don't have an API, but they have what we call a subgraph. So there is a project that is called the graph. The graph is a GraphQL API service for Ethereum and that allow anybody to very easily create a GraphQL API for any smart contract on Ethereum. So that's slightly more work than if they have their own API, but it also work. And this is still more simple than integrating with smart contract. And a third option you have is to use a JavaScript library if they have one. And this is especially interesting if interacting with a smart contract is a bit difficult.
00:04:07.786 - 00:05:02.566, Speaker A: And that's the case of Uniswap with their Uniswap SDK. I tried to interact with Uniswap directly with a smart contract, and that was a little bit challenging. But then when I used the Uniswap SDK, it did a lot of low level stuff and I didn't have to take care of this and that was much more simple. So once you have done this off chain integration, it's time to get a little bit deeper in the integration with the DeFi protocol. So the next step is to do an on shen integration. So you're going to interact with the spot contract of the Defi protocol, but from Ethereum, so from another spot contract. So for this you will need to understand a little bit better the different spot contract of the defi protocol.
00:05:02.566 - 00:05:49.434, Speaker A: That's a little bit harder than doing an off chain integration, but that's also more powerful because you are not limited by anything. Like when you're doing some off chain integration. Sometimes it's not possible to do certain things, but when you interact directly with a spot contract, there is no limit. This is the maximum flexibility and it's also faster, which is very important if you are doing some competitive things like liquidations or arbitrage. So in order to do this, you will need to go to the GitHub of the DeFi protocol and try to understand how the repo are organized. So sometimes they have a repo just for the spot contract. Sometime in the same repo, you have the spot contract and the front end.
00:05:49.434 - 00:06:17.410, Speaker A: So that's what we call a monorepo. So you start to study the spot contract. You probably find that they have many spot contracts, so don't panic because you don't have to understand all the spot contract. You only need to focus on the interface. So there will be one specific spot contract with which you will need to interact. And you don't even need to understand what's inside the function. You only need to understand the function signature.
00:06:17.410 - 00:06:52.718, Speaker A: So which parameter to provide to this function and what do they do? But that's it. Optionally, you can also have a look at the test in these repos that really will teach you what is the format of the parameter you need to provide to this spot contract sometime. Because these spot contracts are really difficult to interact with. And that's the case of Uniswap. For example, if you want to interact with a pair in uniswap v. Two, so that's basically a market. It's not so easy.
00:06:52.718 - 00:07:20.798, Speaker A: So they created another spot contract that they call the router spot contract. And this is a sort of proxy that you can use and that make interacting with uniswap much more simple. And other protocol also do the same thing. Dai, I know they have a proxy spot contract. Kyber also have a proxy spot contract. So do some research, see if they have one. Sometimes this sort of spot contract is not in the same repo.
00:07:20.798 - 00:07:53.538, Speaker A: Sometimes it's in what they call a utility spot contract or something like this. So do some research. So after you do all of these things, maybe that you will stumble upon some problem. So don't stay blocked and ask for help. A lot of these Defi projects have their own community, either on a telegram channel or on a discord server. Sometimes they even have separate community for developer and end user. So make sure you go to the developer community.
00:07:53.538 - 00:08:34.046, Speaker A: Otherwise, if you ask on the end user channel, you're going to have answer from support people who are not necessarily technical. They can really help you. So people on these channels in general try to be helpful, but sometimes they're really overhelmed because just the volume of message is just huge and they're just doing this for free. They're not paid for this. So a good way to solve this problem is to be part of the itdoblox community. So there is a private discord channel for the students of itoblocks. So currently this is only open to people who took one of my course, but soon I will be launching a new membership that give access to this community.
00:08:34.046 - 00:08:50.180, Speaker A: So if you want to get notified of when this happened, make sure to join my Facebook group. And if you want to keep learning about Defi programming, make sure to watch this series where I explain a lot of defi protocol like Uniswap, compound, et cetera. I'll see you there.
