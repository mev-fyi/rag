00:00:00.250 - 00:00:16.586, Speaker A: This video will show you how to interact with your existing ERC 721 smart contract. We need to know more than just minting a smart contract to be used to sell an NFT collection.
00:00:16.698 - 00:00:17.118, Speaker B: Right?
00:00:17.204 - 00:00:55.198, Speaker A: We want to understand what other functions can we use in that smart contract, one of them being the with draw function. You sold nfts. The purchase of those nfts, the crypto, the token that was used to purchase those nfts, will land or will be stored in the smart contract itself. The developer. If you as a developer, need to withdraw the earnings from your NFT sales, that amount will be placed in the smart contract and you'll need to execute a withdrawal function.
00:00:55.284 - 00:00:56.062, Speaker B: What will happen?
00:00:56.116 - 00:02:14.386, Speaker A: A withdrawal function will basically grab the smart contract and know take out of the smart contract that crypto and transfer that to the owner wallet of the smart contract. And when I say owner wallet, when we mint the NFT smart contract, the wallet that is used to trigger the mint of the smart contract on the blockchain is the owner wallet. So you better make sure that you have access into the owner wallet, else you're not going to be able to withdraw those funds. It's only the owner wallet of that smart contract, the only one that's going to be able to withdraw that crypto. So once we do the withdrawal function, basically it just grabs the crypto that is stored in the smart contract that was sent by the buyers of your nfts, and then it's just going to withdraw into your personal crypto wallet, right? So that is one important function. The second important function that we should discuss is the pause function. The pause function holds the smart contract from issuing, transferring any nfts or any ERC 721 crypt tokens from that smart contract.
00:02:14.386 - 00:02:57.590, Speaker A: Let me explain. You hit the pause function on the smart contract. No one can make any purchases and no one can transfer ownership of that NFT or aka transfer the NFT from one wallet to another. So you have to be very careful with that particular function, because if you hit that function, then users cannot move nfts around because they're tied to the smart contract. Anytime some NFT holder does an action, it talks to the smart contract, then it verifies if we have the action and then proceeds to do it. If the action is not coded in the smart contract, that means that I cannot go ahead and do that. Okay, so that will be the pod function.
00:02:57.590 - 00:03:49.586, Speaker A: Lastly, we want to discuss the transfer ownership function in the smart contract. What does that do? It allows me to transfer from wallet from the owner wallet that we initially deployed the smart contract with, or we minted the smart contract with to another wallet. So let's say you have a group of people, a couple of developers. Either one of them is retiring or it's moving to another project and he owns or she owns that smart contract because his wallet was used to mint the smart contract. He can actually transfer that to another wallet and that new wallet will become the owner wallet, which is very important. The owner wallet literally dictates what can be done in the smart contract. Okay, so let's bring those three functions.
00:03:49.586 - 00:04:18.602, Speaker A: Let's take a look and see how can we go ahead and use remix to call those functions on a ethereum compatible blockchain. So we can use the same functions for Ethereum, for polygon, for BSE, for avalanche, you name it. All the ERC compatible blockchains that uses bytecode or the ABI bytecode. We can actually go ahead and mint that or we can trigger those functions. Okay, transfer ownership, withdraw and pause.
00:04:18.666 - 00:04:37.106, Speaker B: Let's begin. Okay, so the first thing we got to do, let's go to our id. So we want to first copy the entire smart contract. So we want to grab that blockchain smart contract, copy the entire blockchain smart contract.
00:04:37.218 - 00:04:38.358, Speaker A: So in this case we're going to.
00:04:38.364 - 00:05:09.866, Speaker B: Copy the NFT smart contract that we previously minted because we need to compile that smart contract inside remix ethereum.org. Okay, so let's go ahead and copy the entire thing. So when I'm right click, we're going to copy next what we need to do. We need to get into the remix ide. We are going to make sure that our workspace has a default workspace. We want to use the default workspace. Next we want to create a new file.
00:05:09.866 - 00:05:41.802, Speaker B: We can label this NFT. We are going to type NFT Sol, which is the solidity extension. Next, now that we have the NFT sold, we are going to paste the smart contract code onto the IDE. We have the contract pasted. Next thing we got to do, we got to go ahead and compile the smart contract. And we already went through this when we initially minted the smart contract. So you should be familiar with how to do this.
00:05:41.802 - 00:06:03.086, Speaker B: Okay, let's go ahead into the compiler. Let's make sure that we select the version in the compiler to be, which is the version that we used. Compile the contract. So that's here if you can see solidity. Okay, so that's basically selected here. Make sure that language is solidity. Of course.
00:06:03.086 - 00:06:28.082, Speaker B: Enable, autocompile and press compile. So we press compile and the smart contract should have been compiled successfully. If we don't see any errors, that means that we're good. Okay, next thing that we have to do, we now have to attach ourselves into the owner wallet of the smart contract. Because if we don't do that, we cannot execute the withdraw function. We cannot do anything. That's a protection mechanism.
00:06:28.082 - 00:07:00.242, Speaker B: So if your smart contract is able to be attached to any wallet, then guess what? Anyone can attach to the smart contract and steal your money. You don't want that, right? So let's go ahead and do that. So what I'm going to do now, I am going to select my owner wallet. In this case, I have the owner wallet right here. So what we need to do now, we need to get the contract address. So the smart contract that we previously minted, we need to find that contract address. And obviously you'll have the contract address.
00:07:00.242 - 00:07:03.938, Speaker B: You know how to find that? So in my case, this is my contract address right here.
00:07:04.024 - 00:07:04.322, Speaker C: Right.
00:07:04.376 - 00:07:32.742, Speaker B: So let's go ahead and copy it. Instead of us deploying a brand new smart contract, we don't need to do that. We are actually making changes to the existing smart contract. So with that said, I have to load the existing contract address right here. So we're just going to copy and paste. So what I'm going to do now, I'm going to click it. The moment I click it's going to talk over the Ethereum blockchain or in this case I'm using the wrinkle by testnet and talk to the smart contract.
00:07:32.742 - 00:08:16.758, Speaker B: Okay, so in this case I want to make sure that I'm doing an injected web3 call because I want to use the owner wallet of that smart contract which is my metamask. Okay, so let me change that to injected web3. The moment I hit the address I was able to see that there is a smart contract associated to that address. I should see all my options right below here. I don't see that. The reason why is I have to make sure that I select the right smart contract, which in this case is the name of the NFT collection. In this case I'm going to select my net to dev NFT from the NFT Sol after we compile it, basically created all those contracts or all those files.
00:08:16.758 - 00:08:42.178, Speaker B: But this is our actual contract right here. So we're going to select this and we're going to click. And now let's go ahead and remove this because we don't need this one. So let me go at address. And there we go. So once we go at address, I can see now that I see all the available functions inside the smart contract. What we want to do.
00:08:42.178 - 00:09:12.142, Speaker B: First of all, we want to understand how much we should get from that smart contract. So we already sold a couple of nfts. During my demonstration, I was able to buy some nfts. That is where that crypto is stored in the smart contract. So now we want to transfer this amount onto my wallet, my owner wallet. Okay, so let's go ahead back so we know that we should receive 35 ethereum. Let's go back now.
00:09:12.142 - 00:09:39.634, Speaker B: If you can see right here, we have a withdraw function. Let's go ahead and hit that. What do we see right here? The caller is not the owner. Remember, the wallet has to be the owner wallet. Whichever wallet we use to mint the smart contract, that is the only wallet that we can use to call those functions. You have to make sure that you don't lose that wallet. Okay, so let me cancel the transaction.
00:09:39.634 - 00:10:14.234, Speaker B: Now let me go ahead and switch to my owner wallet. Let's give it a shot. And there you go. This is my actual owner wallet. So that's why I was able to execute the web3 call to the smart contract. Okay, now I'm going to confirm, once I confirm that I should receive the zero point 35 Ethereum onto my wallet from the smart contract, that is basically the amount of ether that we were able to collect because of our NFT sales. Okay, so we're going to confirm.
00:10:14.362 - 00:10:14.842, Speaker C: Boom.
00:10:14.906 - 00:10:22.898, Speaker B: Now we are just awaiting confirmation from the blockchain and this balance should increment. Let's take a look at that and see that in real time.
00:10:22.984 - 00:10:23.566, Speaker C: Boom.
00:10:23.678 - 00:10:27.378, Speaker B: We got the ethereum deposited into our wallet.
00:10:27.474 - 00:10:27.830, Speaker C: Awesome.
00:10:27.900 - 00:10:49.882, Speaker B: So now we got the earnings from that sale onto our wallet. Amazing. Let's go back into the ether scan and see if the balance has decreased to zero. There you go. This is what we are expecting. We are expecting a balance of zero. Next, let's go ahead and execute a pause function we mentioned early on the video.
00:10:49.882 - 00:11:23.160, Speaker B: We want to hold any minting on the smart contract. We want to hold holders from transferring nfts. Let's say we want to hold the collection until there's an issue. We need to work with some ownership transfers, whatever is the case, and you need to pause the minting. We can do that. So let's go ahead and make sure that you also are using the owner wallet because you're not going to be able to. So in this case, what I'm going to do I'm going to hit the pause right, but right now it's saying the boolean state.
00:11:23.160 - 00:11:47.598, Speaker B: There's two values, obviously true and false by default. Let's see the pause function on the contract when we initially minted. So let's scroll all the way to the bottom and let's take a look. Pause. Guess what? Its current state is false. Of course it's going to be false because we want people to buy nfps. So that has to be false because we want the contract to actually work.
00:11:47.598 - 00:12:24.870, Speaker B: If we change this boolean value to true, no one can mint an NFT from the smart contract. So let's go ahead and do that. Let me change this by typing true and I'm going to send the transaction and it's going to ask me, hey, do you approve this? It's going to charge me some gas fees. We're going to confirm and we have officially paused the smart contract from any interaction with any web3 wallet. Okay, so let's wait a little bit of time here and that should complete that. Wait for this. And boom, the smart contract has been paused.
00:12:24.870 - 00:12:44.494, Speaker B: No one can make any new purchases. No one can make any transfer. It's basically halted. Okay, now we need to make one last change. And this is, I am going to transfer the ownership of this smart contract from one wallet to another. I'll show you right now. But first I have to change this to be false.
00:12:44.494 - 00:12:45.938, Speaker B: Okay, so let's change this back to.
00:12:45.944 - 00:12:46.930, Speaker C: Be false.
00:12:49.110 - 00:12:51.330, Speaker B: And let's go ahead and confirm.
00:12:52.470 - 00:12:53.070, Speaker C: Boom.
00:12:53.150 - 00:13:14.090, Speaker B: And now we got false. So we should now have the contract ready and enabled so we can interact with it. Last thing we want to do, we want to transfer ownership of this smart contract to a new wallet. So let's say you want to transfer the ownership to someone else so they can administer the smart contract and make changes.
00:13:14.160 - 00:13:14.634, Speaker C: Okay?
00:13:14.752 - 00:13:24.382, Speaker B: And when we say transfer ownership, whoever is the new owner, he or she is going to be able to do anything on the smart contract. So you have to be very careful on this one.
00:13:24.436 - 00:13:25.040, Speaker C: Right.
00:13:25.490 - 00:13:54.886, Speaker B: So in order for me to do a transfer ownership, I need to know which is going to be the new owner wallet of the smart contract. So let me go ahead and find a new wallet. So let's go ahead and use this one that I have right here. So what I'm going to do, as a matter of fact, which one is this? This is one. This is the one that we're working with. You know what, let's use this one. Copy it.
00:13:54.886 - 00:14:32.754, Speaker B: I'm going to then execute that. But first I have to make sure that I'm attached to the owner wallet. And yeah, this is the owner wallet, but then I copied the wallet that I'm going to be transferring ownership to. Okay, so you can see right here, transfer ownership and we just need to paste the new wallet id. Copy and paste that new wallet id and we are just going to hit the function now. It's basically telling, hey, you want to transfer ownership of this smart contract from one wallet to another? That's what we want to do.
00:14:32.872 - 00:14:34.398, Speaker C: Confirm. Boom.
00:14:34.494 - 00:14:44.886, Speaker B: Once this is done, we have successfully transferred ownership of this smart contract to another wallet. So let's wait for this. Let's wait for the confirmation and we should be good to go.
00:14:45.068 - 00:14:45.602, Speaker C: Boom.
00:14:45.666 - 00:14:52.810, Speaker B: And now have completed the ownership transfer of this smart contract to a new wallet. There you go.
00:14:52.960 - 00:15:06.238, Speaker A: Okay, so there you have it. We discussed the withdrawal function, the transfer ownership function and the pause function. And you saw how can we trigger those functions in case we need to? The withdrawal function.
00:15:06.324 - 00:15:08.190, Speaker B: Obviously that is a very common function.
00:15:08.260 - 00:15:21.994, Speaker A: And you're going to definitely use it. Don't lose the owner wallet, the wallet that is current owner of that NFT smart contract because you're not going to be able to execute any of those functions.
00:15:22.042 - 00:15:22.590, Speaker C: Okay.
00:15:22.740 - 00:15:23.306, Speaker B: Alrighty.
00:15:23.338 - 00:15:32.770, Speaker A: So that was it for this video. If you like my content, please give it a thumbs up. Subscribe and you haven't subscribed to and we'll see you on the next one. Bye.
