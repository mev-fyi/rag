00:00:00.170 - 00:00:30.150, Speaker A: Hey, this is Julian and you are on edoblocks. And in this video I'm gonna teach you how we can use events in solidity. By the way, I created a free email course to teach you how I got my first remote blockchain job. Paid $100,000 a year. So if you want to learn all my secrets, you just have to sign up at this URL. Alright, so let's get started with solidity events. You can push data from the smart contract to outside consumers, such as web front end, for example.
00:00:30.150 - 00:01:03.234, Speaker A: So let's have an example application of this. So let's say that we are building a decentralized exchange. So that means on a smart contract, traders can trade es 20 tokens. So from your smart contract you can emit an event every time there is a trade. An outside consumer can be informed in real time of all these new trades so they can stay up to date. So in order to use events, this is a two step process. So the first step is to declare your event at the contract level.
00:01:03.234 - 00:02:00.142, Speaker A: So for that you use the event keyword and after you name your event. So for example, we're going to call our event new trade. So it's a good convention to use camel case, which means putting an uppercase for the first letter of each word. After that you open parentheses and inside you are going to define the field of your event. Because events are structured data and you can reuse all the types of solidity. So for example, if we have a type that is a date, so this will be the type integer, and after the type, you specify the name of your field, and after you separate your field by a comma. So next field for a trade, probably that we want to know who sent this trade.
00:02:00.142 - 00:02:32.990, Speaker A: So this is going to be a field of type integer and we're going to call this from. And after that we'll have another address field for the recipient of the transaction. So that's two, and then another integer field for the amount. And that's it. And then we terminate the event definition by a semicolon. Okay, so here we have defined an event with all the fields inside. But if we just do this, it's not going to emit any event.
00:02:32.990 - 00:03:07.254, Speaker A: This is just a definition. So to actually emit an event, we need to use the emit keyword inside a function. So let's create a function that we're going to call trade. And this function is going to take two arguments. One argument for the recipient of the trade and another argument for the amount. So an address, two and for the amount, we define an integer argument. Okay, make it external and inside.
00:03:07.254 - 00:03:35.730, Speaker A: When we want to emit an event we use the emit keyword. By the way, you might see some old solidity code before solidity 0.5 that does not use the emit keyword, but that just use directly the name of the trait of the event. So don't be confused by this. In a new version of solidity we do need this emit keyword. And after that we specify the name of the event. And after that we need to populate each of the field of the event.
00:03:35.730 - 00:04:06.598, Speaker A: So first the date. So it's going to be with the keyword now which is the current timestamp in solidity. Then for, from, it's going to be the sender of the transaction. Then for the recipient this is going to be what we specify as an argument. And for the amount, the same thing. And when you do this, an outside consumer who are listening to the event of this smart contract will receive this event. And they are doing this using the Webstery library.
00:04:06.598 - 00:04:44.262, Speaker A: And in the future I'll do another video on how to listen to events with Webstery. But this video is just about events in solidity. So we've defined our event, we've emitted our event. And the last thing I would like to show you is the index keyword. Because when outside consumer are listening to your events, they might want to listen to just some specific events because there might be many many events. But in some cases, for example, maybe that a specific trader want to listen just to his own trade. So for that he will need to filter the event by the from address.
00:04:44.262 - 00:05:26.322, Speaker A: But in order to do this, you need to use the index keyword. Otherwise Ethereum will not let you filter this event. So every time use the index keyword, that means that you can filter event according to this field. By the way, using an index keyword make it more expensive for Ethereum to store your events because now he has to build an index. So maximum you can use three index in an event. So here we have used one index, here we can use another one and maybe a last one for maybe the date. But if you try to use a false one, then it's not going to work.
00:05:26.322 - 00:06:04.382, Speaker A: So it is not going to accept this. Okay, so this is really the basic of event. So before we finish this video, I would like to quickly tell you two important things about event. The first one is that events cannot be read from a smart contract. For example, in my current smart contract, after I emit this new trade event, it's absolutely impossible for my contract to somehow read the emitted event in the past. You can just emit event and they will be consumed by entities outside of the blockchain. But this is really a one way communication from the blockchain to the outside world and that's it.
00:06:04.382 - 00:06:40.590, Speaker A: So this is very different from a storage variable that you would define like this for example uint a. So this variable, you can read it in the future from the smart contract, but not the events. And the thing. And thing to know about events is that gas cost is lower than storage variables. So if you don't need to access your variable from the smart contract in the future instead of using a storage variable, then you should definitely use an event. By the way, if you don't know what is gas, don't worry because I'll do another series just on gas in the future. Okay, so that's it for this video.
00:06:40.590 - 00:06:48.700, Speaker A: In the next video I'm going to show you how we can send ether to a solidity smart contract. Thanks for watching. See you for the next video.
