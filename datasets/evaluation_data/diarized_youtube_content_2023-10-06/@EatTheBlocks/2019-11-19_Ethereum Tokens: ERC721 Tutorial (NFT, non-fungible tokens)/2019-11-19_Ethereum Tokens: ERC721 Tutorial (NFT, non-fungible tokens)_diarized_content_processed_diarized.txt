00:00:00.250 - 00:00:41.782, Speaker A: Hey, this is Julian and you are on idoblox. And in this video I'm gonna explain you ERC 721 tokens. So this is a standard for nonfungible assets. And that's different from a fungible asset of ERC 20 to a fungible asset is any asset that you can exchange for any other one, like a dollar bill, for example. But a nonfungible asset is an asset that you cannot exchange for another one, such as a piece of art or any sort of unique creation. One of the first example of ERC 721 token is in the game cryptokitties. So in cryptokitties you can collect unique virtual cats on the blockchain.
00:00:41.782 - 00:01:29.266, Speaker A: And these cats are represented inside an ERC 721 token. So the way we identify an asset with ERC 721 is different. For the ERC 20, we just need to know the Ethereum address of the smart contract. But for ERC 721, we not only need to know this ethereum address, but we also need to know the token id. The token ID is an integer that uniquely identify an asset inside an ER 721 contract. So just to be clear, that means that a single ERC 721 smart contract can store several assets contrary to an ERC 20 token that only can store one asset. All right, so now let's see the implementation.
00:01:29.266 - 00:02:12.690, Speaker A: So this is the interface of an ERC 721 token. So we're going to go through the different function. So first, like for ERC 20, we have the balance of function. However, because we are dealing with nonfungible assets, the balance of an address has a different meaning for ERC 721. So the balance of an address with ERC 721 means the number of assets that are owned by this address. For example, if the balance of an address is five, that means this address owns five different assets in this token, not five times the same asset. Then we have another function related to ownership.
00:02:12.690 - 00:02:38.206, Speaker A: So that's the owner of function. So you give it a token id and it's going to tell you which address on this asset. Then we have a couple of function to transfer token. So to safe transfer from functions. So this is an overloaded function and a transfer from function. So the most simple is the transfer from function. So it can do delegated transfer and simple transfer.
00:02:38.206 - 00:03:25.350, Speaker A: So unlike ERC 20, we don't have two different function for normal and delegated transfer. Also unlike ERC 20, you need to specify which token you want to transfer with this argument. Also, you will notice that you don't need to specify any quantity in the transfer function, and that's because each asset is unique, so quantity is irrelevant. Then you have the approval mechanism to do delegated transfer. So like for Es 20, you have an approved function and you specify the address that you want to approve. You also have to specify the token id that you approve. So you approve an address for a specific asset, not for all the assets, and you also don't need to specify any quantity.
00:03:25.350 - 00:04:37.158, Speaker A: So the approval for token id is binary, is yes or no, and if you want to know what is the address that has been approved for a specific token id, then you can call the get approved function and you can also approve an address for all your tokens. So in this case you call set approval for all. And if you want to know if there is an address that is approved for all, the token of an address, then you call ease approval for all. And finally, there are these two safe transfer from function. So these function are used to transfer token in a more safe way because what they're going to do is check if the recipient, if a smart contract, it will make sure that it implements an interface, and behind the hood is going to use ERC one and 165 if you don't know what it is, you can watch my other video in this series about this topic. And so if the recipient smart contract does not implement the recipient interface of ERC 721, the transfer is going to fail and this is going to prevent some token from being locked in smart contract. So for this function you need to specify from to token id.
00:04:37.158 - 00:05:15.162, Speaker A: And there is an overloaded version where you can also forward some data to the recipient smart contract. So if we scroll down then at the bottom here you can see the interface of the receiver. So if you want your receiver smart contract to receive Yash 721 token, you need to implement this function and it has to return a specific constant. And this is specified in a specification of Yashi 721. I'll show you this after. And next we have two optional interfaces. First, the metadata interface.
00:05:15.162 - 00:06:11.838, Speaker A: So this is a set of function that your ER 721 token can optionally implement. So name and symbol, this is the same as for Es 20, so probably that you will need them, and token URI. So this is going to return a string that points to a URL that's going to return a JSON document that describe your token. So just to be clear, this JSON document will be outside the blockchain. So the ERC 721 specification tells you the structure of this JSON document here. Finally, there is another optional interface the enumerable interface total supply will give you the number of assets managed by the ERC 721 contract. Then token index is going to return you the token id for each token.
00:06:11.838 - 00:06:52.366, Speaker A: So if you want to enumerate all the assets that are tracked by the contract, first you call total supply. Then for each of the integer from zero to total supply, you're going to call token by index. For example, if total supply is ten, then you're going to call token by index with 0123, et cetera, up to nine. And for each of this index you're going to get the token id. So the token id is decided totally arbitrarily by the implementation of each contract. So you cannot assume that it's going to be incremented by one every time. So that's why the index of the token and the token id can be totally different.
00:06:52.366 - 00:07:40.650, Speaker A: And finally, you can also enumerate all the assets owned by specific address by using the token of owner by index. So first you call the balance off function for the address, it gives you the number of assets owned by this address. And after you call token of owner by index with the address of the owner and all the index up to the balance off. So exactly same logic as with token by index, except this is for a specific address. So I know that there is really a lot of information to learn about Ethereum token. So I've prepared a short cheat sheet that conveniently sums up all the most important information for all the major token standards. So yes, all the token standard covered in this series.
00:07:40.650 - 00:08:13.958, Speaker A: So if you want to get your hand on this cheat sheet, this is totally free. You just have to follow the link in the description of this video. All right, so that's it for this video on ERC 721 token. So you can find the official specification at this address. And in the next video I'll introduce ERC 1155, which allowed to combine ERC 721 and ERC 20 in the same token. So that's really, really convenient and that's used by a lot of projects. So really make sure to watch this video.
00:08:13.958 - 00:08:20.010, Speaker A: If you have any question, ask them in the comments below. Thanks for watching and see you for my next video. Bye.
