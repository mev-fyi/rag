00:00:00.330 - 00:00:25.766, Speaker A: You. Hi, this is Kieran. Today let's talk about MeV. What is MeV? Mev stood for minor extractable value on ethereum one and on ethereum two, we refer to MeV as maximum extractable value as there are no more miners. However, both of these are the same thing. They're sometimes called validator extractable value on e 2.0, it doesn't really matter what you call it.
00:00:25.766 - 00:01:26.018, Speaker A: MEV is a measure representing the total value that can be extracted permissionlessly from the reordering, inclusion, or censoring of transactions. It's basically how much eth a special miner account or a special validator account can extract, given a set of user transactions with an initial state and a set of contracts by inserting own transactions, censoring from the user transactions and then reordering them. In other words, it refers to profits that can be made by extracting value from Ethereum users. By reordering, inserting or censoring transactions with blocks being produced. Miners on ethereum 1.0 profited from the MeV in really two ways, selling number one, selling scarce block space to non minor MEV extractors through priority gas auctions in exchange for exorbitant transaction fees. What is a priority gas auction, you might ask? Well, as pure arbitrage opportunities offer unconditional revenue.
00:01:26.018 - 00:02:15.046, Speaker A: Bots often competed against each other by bidding up the transaction fees or gas in the PGA's priority gas auctions, which further drives up fees for other users. And number two is via reordering, including or censoring transactions to profit from on chain liquidation or arbitrage opportunities for themselves. Mevs are powerful because it shows how reordering transactions can give rise for front running and sandwich attacks. There are also other attacks possible with the use of mevs, though, such as Dex arbitrage. This is basically if two dexes are offering a token at two different prices, someone can buy the token on the lower price decks and then sell it on the higher price decks. This creates an arbitrage opportunity. Front running is another one.
00:02:15.046 - 00:02:54.930, Speaker A: Searchers basically use customized frontrunning bots to monitor the network for large orders on Dexes and submit competing transactions with higher gas fees to be mined before the pending transaction. Number three is sandwich attacks. Sandwich attack follows a specific course. It basically detects the victim transaction. Front run the victim's transaction, then victim transacts and suffers higher slippage, and then finally the attacker then backruns the victim. That's how a sandwich attack is done. There are also other types of attacks such as back running liquidations, time bandit attacks, the uncle bandit attacks, and so on and so forth.
00:02:54.930 - 00:03:38.690, Speaker A: MeV cannot be removed 100%, but they can be minimized. So how do we actually do that as users? Some of the ways to mitigate front running are to basically avoid low liquidity pools. What that means is low liquidity pools are a front runner's dream because there's less chance of competition among other front runners, so you should avoid them to minimize the ods of being targeted. Second way you can minimize is by setting low slippage. Most Dexes decentralized exchanges allow users to set a maximum slippage tolerance, so you should keep this value very low, somewhere around 0.5% to 2% to avoid front runners. The larger your order, the lower you will want to keep your slippage.
00:03:38.690 - 00:04:20.814, Speaker A: Number three is you can overpay on gas. Slow transactions give the front runners more time to formulate an order to siphon the value from your trade. So by underpaying on gas, ods are your transaction will be queued for a longer period of time, giving frontrunners more time to work. Consider overpaying on gas to improve the priority of the transaction in the form of fast gas option on your wallet like metamask. Number four is you can place a smaller order. Front runners usually need to risk a lot to win very, very little, so keeping an order to a smaller amount means you're less likely to be targeted by frontrunners. That doesn't result in much profit for them in the first place.
00:04:20.814 - 00:05:30.258, Speaker A: Other ways to really mitigate the attacks that are possible with mevs are commit and reveal strategy off chain ordering, oracle ordering of the transactions determining the minimal expected value now getting back to the original topic of the video, does MeV exist on ethereum 2.0 whereby there are no miners at all to begin with? Well, since the transaction ordering process in e two is the same as that of proof of work ethereum, which is eth one, it is reasonable to think that MeV opportunities will still exist as we know them today. Well, to put it simply, the expected profit for a validator is determined by two factors. Number one is MEV availability. Does the network expose significant MeV at the time? The validator is a proposer, and number two is MeV expertise itself. Does the validator have the expertise to extract the MeV? So MeV is still possible on E 2.0? However, it depends on the amount of ethereum staked by the validator and if the validator has knowledge and infrastructure to extract the MEV.
00:05:30.258 - 00:06:07.900, Speaker A: While most validators may not have this capability, it is still possible. One alternative is to use external builders, which can propose a block with a significantly larger profit to the validator. As such, MeV won't really go away. MeV is like Crypto's version of Wall street front running, and as such, all the previous front running attacks, such as sandwich attacks and liquidation are still possible on E 20. MEV works nearly the same as it does on E 1.0, although you may need to be more knowledgeable and have enough firepower to pull it off. So you should still strive to develop your smart contracts as securely as possible.
