00:00:00.170 - 00:00:38.410, Speaker A: Hey, welcome for this new episode of Idoblox. And today I'm going to show you how to deploy a DaP on the plasma chain of Loom network. So Loom network is a company that works on a scaling solution for Ethereum. So a layer two scaling solution. So it's like a side chain that is connected to the main chain. And big advantage of this solution is that your DAP doesn't, doesn't require your user to spend gas. And also the block time is much faster than for the main net, so it improved dramatically the usability of your DAP.
00:00:38.410 - 00:01:26.386, Speaker A: And recently they released a tutorial on how to deploy a DaP on the plasma chain. And so I turn it into a video. So this tutorial will show you how to use the loom SDK, which is the main entry point for every development related to loom. And it will also use an example DAP that use truffle. So really something very standard that you can reuse for your own project. All right, just before we get started, very briefly I'd like to show you the course I release with mining Ethereum DAP in motion, where I teach you how to build a decentralized exchange on Ethereum. And you can also sign to my weekly newsletter if you want to receive news and tips for Ethereum DAP developer.
00:01:26.386 - 00:02:15.270, Speaker A: All right, that's it for the self promotion. Let's get started. First, create a folder for your local sidechain and execute this comment. So basically it's going to fetch the loom SDK and it's going to install it and make it executable. Once it has been downloaded and set up on your computer, you can execute this command to initialize the Genesis file and the chain data directory. So basically this loom SDK executable is going to run a local sidechain just on your computer, and that's very useful for developing and testing. So once you've executed this Loom init command, then you can start your sidechain with the Loom run command.
00:02:15.270 - 00:03:33.552, Speaker A: So you will need some private keys to sign your transaction to the sidechain. And for this you will need to generate these private keys with this command. So make sure to save the output that you see on the screen somewhere, because even though it's also saving the file, it's saved in an encrypted form. But later in this tutorial we will need the unencrypted form and it's easier if you just copy it like this. Next, go back one level in folder hierarchy and you're going to clone the DAP example which is provided by loom and clone it in another directory. And when the download has finished, step in this new directory and you're going to copy the private key that we generated just before with this command. As you can see, it's a standard truffle project with the contracts directory, a truffle configuration, but you also have other things like a private key.
00:03:33.552 - 00:04:15.624, Speaker A: So there is the private key that we copied from the local sidechain, but there is also another private key and another public key which is actually provided by the repo of the DAP example. And these are for deploying to testnet. But what is interesting is the truffle config file. So we're going to cat this to see what is inside and then we see that we have different options for deployment. So the first option, loopdap chain, basically allows you to deploy to your local side chain. So that's what we're going to do first. Then we have the second option which is Xdev.
00:04:15.624 - 00:04:49.608, Speaker A: So basically this is the testnet of the sidechain. And finally we have an option to deploy to ring by to the testnet of Ethereum. And you'll notice that you will need an infra API key environment variable, otherwise it will not work. But we will not see this last option in this tutorial. And now you need to install dependencies. So in the repo of the example Dap they tell you that you can choose to install dependency with yarn and NPM. But I've tried with NPM and it doesn't work.
00:04:49.608 - 00:05:32.096, Speaker A: So instead try with yarn. And the command is very simply yarn install. So it's going to take a bit of time and when this is finished you are finally ready to start your DaP. So you need to run the yarn deploy command. So this command is going to deploy your smart contract to the local sidechain and then you need to run Yanserve to serve the front end of the DAP. And then you need to open up a browser and go to localhost colon 80 80 and you should see this. And this is the front end of your DaP that should be connected to your local sidechain.
00:05:32.096 - 00:06:14.976, Speaker A: And to make sure that it works you need to try in the UI to set a value. So basically the smart contract that we deploy in this example dab is very simple, you just store value. So try to store ten. So you put ten in the input and you click on the button and then you should see the UI refreshed with the new value. And if you scroll down you can see the details of the transaction. And if you go to blockExprorer, Lumex IO, you can use the public block Explorer which by default connects to your local sidechain. And you should see like on my screen, different blocks.
00:06:14.976 - 00:06:48.928, Speaker A: That indicates that there were some transactions going on in your local sidechain. So that show that there is some activity and everything is working. And now we're going to try to deploy to the testnet of the loom plasma chain. And for this we need to go back to our terminal and to execute this command and it doesn't work. And the reason is because we need comma. So comma is like gas on Ethereum, but comma is the equivalent of gas on the plasma chain and our private key doesn't have any. So this is not a problem.
00:06:48.928 - 00:07:26.508, Speaker A: We just need to go to the public faucet of the plasma testnet at this address and then we're going to paste here the public key that I told you to copy at the very beginning of this tutorial. We're going to copy it here. You're going to click on the button. You just need to wait a few seconds and then the UI will refresh and tell you that your public key has 100 comma. And so after that you can go back to your terminal and try to deploy to testnet again. And it fails again. I know why.
00:07:26.508 - 00:08:11.544, Speaker A: It's because I've made a mistake when we copied the private key that we generated from the local sidechain before. So yeah, just rename the private key like this. And once this is done, re execute the command and we have no error message. Everything is working. Fantastic. So now your smart contract is deployed to the testnet of the plasma chain of loom network, which means that it's not just on the local side chain, but everybody can access it potentially. So if you wanted, you could create a test app that connect to this testnet and yeah, everybody can use it.
00:08:11.544 - 00:08:47.588, Speaker A: So congratulations for following up to here. And I know that the first time we get into the loom network inside chain, it gets a little bit overwhelming. It seems like it's an abstraction on top of an abstraction on top of another abstraction. That's really how I felt at the beginning. But if there are some part of this tutorial that you didn't understand, go back to the beginning of the video and rewatch it again and do it several times. That's actually how I had to do it for myself when I first saw the explanation for this. It took me a couple of time to get it, but you will get it.
00:08:47.588 - 00:09:33.860, Speaker A: And then you can start to explore the documentation of loom and start to do things that are more sophisticated for your DaP. And when you think of all the benefit that the loom network is going to bring to your DAP, then it gets really interesting. And also I was really interested in learning about the general roadmap of the loom network and what they want to do with this plasma chain is the equivalent of a shared hosting for websites. So on the plasma chain, everybody DaP developer could use the plasma chain against a small rent. So I think the initial fee is something like $2 a month. So I mean it's quite cheap. And so you, the DAP developer, will have to pay, but your user will not have to pay.
00:09:33.860 - 00:10:19.052, Speaker A: So that's very critical because otherwise you have almost no chance of getting any user, even if what they have to pay per transaction is really small. It's just like a huge friction and no user will ever tolerate this. You can also use the technology of loom to deploy your own side chain, and you can have your players run node to run this side chain. And if they want, they can fork the side chain if they don't agree with the choice that you're making for the game. So it's good because it can bring some democracy back into gaming communities. So I know, like, okay, it seems quite crazy. Like side chain, you can folk sidechain.
00:10:19.052 - 00:10:47.460, Speaker A: Yeah, that's crazy. But when you think about it, it makes sense. But this approach of creating your own side chain is a little bit more involved technically. So more gaming. Dap developer, what they want to do is they just want to develop a game and they don't really care about blockchain stuff necessarily. So that's why I think that the plasma chain that is planned by the loom network is going to be quite successful. And I really look forward to the next updates.
00:10:47.460 - 00:11:00.860, Speaker A: Thanks for following this video. If you learned something interesting, don't forget to give me a thumbs up and also make sure to subscribe to the channel to see more tutorial like this. And again, thanks for following guys and see you for my next video. Have a good day. Bye.
