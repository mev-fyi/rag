00:00:00.280 - 00:00:42.498, Speaker A: In this video I will introduce the Aptos blockchain. Every blockchain developer should pay attention to Aptos because it's very scalable, it's very secure, and it offers a great user experience. And for smart contracts it uses Move, a programming language based on rust and focused on security. If you are new here, I'm Julian and at eat the blocks I teach you blockchain development. And to get started in our introduction to Aptos, let's talk of Move, the programming language for Aptos smart contracts. Move was first developed by Meta for a blockchain project called Libra, later renamed Diem. Today, most Mov smart contracts are written for the Aptos blockchain.
00:00:42.498 - 00:01:13.222, Speaker A: Move is based on Rust, which is one of the most loved programming languages. According to Stack overflow. Move was designed with security in mind, making it ideal for smart contracts. But what makes move so secure? Move was designed with resource oriented programming. Resources are basically on chain assets. Movs enforces strict rules on how resources are created, transferred and destroyed. With move, resources are attached to an account, but not to a specific smart contract.
00:01:13.222 - 00:01:49.850, Speaker A: Contrary to ethereum, the resource model also prevents reentrancy attacks natively. Reentrancy are complex attacks that were the source of many hacks with solidity. Smart contracts there is a solution in solidity, but its up to smart contract developers to implement the protection themselves and if they are not careful they will be vulnerable to reentrancy. With move, there is no need to worry about this. Because of the resource model, reentrancy attacks are just not possible. Another thing I like with move is that you can write tests directly in the move language. No need to use another language like JavaScript or Python.
00:01:49.850 - 00:02:38.656, Speaker A: It makes tests much more simple and much more readable. Finally, the move programming language has a formal verification tool, which is a huge win for security. Formal verification is a mathematical method for checking that a smart contract really does what it claims to do. You first have to describe what the smart contract does using a specification, and then you run a formal verification tool on this specification and the entire Aptos standard library and framework are formally verified. So movies great, but what about the other development tools for Aptos? Well, it's pretty awesome. Aptos has a very versatile command line tool to create accounts, deploy modules, or run tests. Aptos also offers an amazing typescript library to interact with the Aptos blockchain.
00:02:38.656 - 00:03:20.864, Speaker A: It's very easy to understand and you can use it to easily build backend or front end applications. Aptos also has a free graphQl indexer, meaning that it's very easy to read complex data on the blockchain. This is much more simple and flexible compared to directly reading the data from the blockchain, and everything is very well documented for developers. More on this at the end of the video and to finish under developer tools, the Aptos ecosystem is much more integrated than other blockchains. The same entity created the entire toolchain and it feels way easier to piece everything together. Another reason to build on Aptos is its randomness API. Many blockchain applications need some randomness.
00:03:20.864 - 00:04:10.720, Speaker A: There are many use cases for randomness like decentralized games, randomized nfts, etcetera. However its very difficult to generate randomness on the blockchain or to be more specific, its difficult to generate decentralized secure randomness. One solution is to take the current timestamp of a transaction as a source of randomness, but this can be easily manipulated by miners which introduces a security vulnerability. Another solution is to generate a random number off chain and send this number on chain via oracles. This is implemented by chainlinkvrf and it's currently the best answer to randomness generation on ethereum based blockchains. Unfortunately it's centralized. Can we do better than this? Can we have on chain decentralized and secure randomness? Yes.
00:04:10.720 - 00:04:48.722, Speaker A: On aptos you can use the aptos randomness API. Under the hood it generates randomness on chain in a decentralized and secure way. So when you need the randomness in your decentralized application, there is no need to either use some randomness oracle or create your own system. Next lets talk user experience on most blockchains the user experience is not great. Usually users have to use a wallet where they have to deal with private keys, but managing a private key is very stressful. What if you lose it? There is no password reset, no customer service. If you lose your private key youre done.
00:04:48.722 - 00:05:21.796, Speaker A: All your money is lost. Can we do better than that? Yes. Aptos has a unique feature called keyless accounts. Aptos Keyless allows users to set up an Aptos blockchain account with their existing social account and with your Aptos account you can access any blockchain applications on AptoS. No need to download a wallet, no need to manage a private key. With the Aptos account system it's also possible to set up a special account controlled by multiple private keys. Its like a multisig but implemented natively in the Aptos protocol.
00:05:21.796 - 00:06:10.144, Speaker A: Thats a great improvement compared to other blockchains where Multisig have to be implemented outside the protocol with smart contracts, which reduces security and compatibility across blockchain applications. In the Ethereum ecosystem, the closest equivalent to a keyless account would be smart contract wallets, which are on chain wallets implemented as smart contracts, but it's not implemented natively in the protocol. It's not widely implemented yet, and it's nowhere as good as Aptos keyless. That's why Aptos offers one of the best user experiences across all blockchains. Next, let's talk about fungible tokens. Tokens are said to be fungible when any unit of a token can be exchanged for any other unit of the same token. So on the Ethereum ecosystem, fungible assets are represented with ERC 20 tokens.
00:06:10.144 - 00:06:55.126, Speaker A: They are implemented as smart contracts, known natively on Aptos. The equivalent of ERC 20 is the fungible asset standard. With this standard, you can easily create fungible tokens on Aptos implemented as Aptos smart contracts also called modules. The fungible asset standard of Aptos is way more modern than ERC 20 tokens and allows anyone to easily represent many assets like financial assets, commodities or real estate. This leads to more standardized implementations, which means less work for developers, better compatibility, less bugs and less security vulnerabilities. Next, let's talk about nfts or non fungible tokens. Non fungible tokens are crypto assets that are unique.
00:06:55.126 - 00:07:46.290, Speaker A: When most people think of nfts, they think of projects like base app, yard, club or cryptopunks. So far, digital art has been the biggest use case for nfts, but nfts have many more use cases, including for unique financial instruments like insurance contracts. On Ethereum we have ERC 721 for nfts and on Aptos we have the digital asset standard. And once again, Aptos was able to learn from the mistakes of Ethereum because the digital asset standard introduces some huge improvement compared to ArC 721. Like simplified token management, improved user experience, enhance interoperability, and it also introduced the concept of composable nfts. Next, well talk of another huge advantage of Aptos parallelism. One of the biggest problems of blockchains is scalability.
00:07:46.290 - 00:08:32.630, Speaker A: We want blockchains to be as scalable as possible, meaning that they should be able to process as many transactions as possible. However, most blockchains are very limited. For example, whereas Ethereum can process 15 transactions per second, visa can process up to 4000 transactions per second. The limiting factor for Ethereum is the EVM, short for ethereum virtual machine. Thats a critical part of Ethereum that executes smart contracts because the EVM processes transactions in a sequential way, its very difficult to scale the Ethereum blockchain. Aptos has developed an execution engine called BlocksTM that can process several transactions at the same time. This greatly improves scalability and gives it a massive advantage over other blockchains like Ethereum.
00:08:32.630 - 00:09:24.002, Speaker A: There was a demonstration of the throughput of Aptos in a mainnet mirror environment called Previewnet where it achieved 2 billion transactions in 24 hours, which is equivalent to 25,000 system transactions per second and up to 30 transactions per second at the peak. Okay, so to recap, Aptos was able to learn from earlier blockchains and come up with a better design. It uses move, a programming language developed by senior engineers of meta and that was designed for security. Aptos has the equivalent of ERC 20 and ERC 721 tokens, but it improved them. With Aptos you can generate randomness in a decentralized and secure way. At the protocol level. It has a great user experience thanks to innovations like keyless accounts, and it's very scalable thanks to its native parallel execution.
00:09:24.002 - 00:10:03.450, Speaker A: For next steps, I recommend learning more about Aptos so that you can build decentralized applications on it. First check out the white paper of Aptos. It's only 17 pages and there isn't any complex math formula. Then check out the technical documentation of Aptos. This is very well done and completely up to date, and on the same website you will find documentation for the move language. Just to be clear, if you Google move, you may find documentation about different versions of move in the context of other blockchains, and this can be confusing. If you want to build on Aptos, stick to the official move documentation on the Aptos website.
00:10:03.450 - 00:10:18.030, Speaker A: They also have great tutorials where you start with simple tasks like sending a simple transaction to creating your first move module, and building a full decentralized application on move with the front end. Alright, that's it for today. Bye.
