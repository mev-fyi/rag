00:00:00.330 - 00:00:35.094, Speaker A: Hey, this is Julian and you are on Ed the blocks. In this video I'm gonna introduce you the ERC two two three token standard. This token standard is very similar to ERC 20. It also allow to represent tokens on the blockchain and to transfer these tokens. However, it addresses a flow of ERC 20. So what's the problem with ERC 20 tokens? If you send an ERC 20 token to a smart contract that does not know how to handle these tokens, then the tokens will be lost inside the recipient contract. Let me explain with an example.
00:00:35.094 - 00:01:51.950, Speaker A: So let's say that here I have a smart contract which is a recipient, my recipient contract, and you send token to it. Once these tokens are transferred to the contract, the only way you can send these tokens from your contract to another ethereum address is if you have a function in your smart contract that allow this, for example function transfer address to and here an integer for the amount and inside you will call the ERC 20 token to do the transfer. But if you don't have this transfer function, then it's impossible to move your tokens. A smart contract is different from a regular ethereum address where you can assign transaction however you want. In a smart contract, the only thing you can do is call the function that already exists inside. And actually on the discussion thread of ERC two two three, you can see a list of project that got a lot of token lost because of this flow of Es 20. Another problem of ES 20 is that recipient smart contract have no way to react to incoming transfer.
00:01:51.950 - 00:03:02.066, Speaker A: It'd be really nice if when EsC 20 token is sent to a smart contract, this smart contract could have one of his function executed, for example. So let's see how ERC two two three solve this problem. So let's scroll down to the specification and we will see some of the same function as for Es 20, like total supply, name, symbol, decimals, balance of and then two transfer function. So the first transfer function has exactly the same function signature as for ES 20 tokens. And this is for compatibility with ES 22nd transfer function takes a bytes argument so that allow you to attach data to a transfer. And so the big difference between these two transfer function and the one of ERC 20 is that for ERC two two three, if the recipient is a smart contract, it's going to invoke a function called token fallback on the recipient contract. And if the recipient contract does not have this function, then the transaction is going to fail.
00:03:02.066 - 00:04:00.358, Speaker A: So that's really the big difference with ERC 20 tokens. You'll also notice that there is no delegated transfer for ERC two two three, so no transfer from function. And the reason is because with this new mechanism, by calling this token fallback function on recipient contract, then you are not supposed to need delegated transfer. By the way, I know that there is a lot of information to digest about Ethereum token, so I've prepared a compact cheat sheet with all the major token standard and it's totally free. If you want to get your hands on it, just follow the link in the description. So the solution introduced by ERC two two three is pretty cool and it really simplified token movements. If you take a step back, the general idea introduced by ERC two two three is that for smart contract interaction, it'd be useful for a smart contract to know if another smart contract implement some function.
00:04:00.358 - 00:04:11.340, Speaker A: And there is another standard that formalized this. That's ERC one six five and we're going to see this in the next video. All right, that's it for this video. Thanks for watching and see you fun in the next video.
