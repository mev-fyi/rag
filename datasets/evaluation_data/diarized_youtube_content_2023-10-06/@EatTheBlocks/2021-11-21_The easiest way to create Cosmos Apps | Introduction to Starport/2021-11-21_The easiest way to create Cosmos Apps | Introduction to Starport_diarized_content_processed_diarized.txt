00:00:00.250 - 00:00:39.458, Speaker A: The Cosmos network is exploding with tons of new projects. But building apps on Cosmos is not easy. In this video, I will introduce Starport, a tool to easily scaffold and run applications on Cosmos. If you are new here, I'm julian and at the blocks I teach blockchain development. First of all, let's talk of Cosmos and its eco system. Cosmos is a proof of stake blockchain that focuses on interoperability. It all started in 2014 when JQuan created a company called Tendermint to develop a new proof of stake consensus algorithm called Tendermint bft.
00:00:39.458 - 00:01:14.894, Speaker A: In 2016, Tendermint published the white Paper of Cosmos, a blockchain based on the tendermit proof of stake algorithm. In 2017, Cosmos raised $17 million in 29 minutes during an ICO. And in 2019, the Cosmos network finally launched. Today, the native token of Cosmos. Atom has a market cap of $8 billion, and it's the 27th largest crypto on coin gecko. There are more than 256 project built on Cosmos, and there is more than $121,000,000,000 in total locked value. When you build a cosmos application, it's actually its own blockchain.
00:01:14.894 - 00:01:47.866, Speaker A: It's done its smart contract on a blockchain. So that's very different from the way other blockchains work. If you want to build a Cosmos application, there are two options. Either you build your application in the Cosmos network, or you build your application on its own blockchain, but based on the Cosmos technology. And in both cases, you want to use the Cosmos SDK, a framework written in Golang. But building with the Cosmos SDK is not easy. You have to clone GitHub, repo, change a lot of file names and install manually a lot of packages.
00:01:47.866 - 00:02:26.090, Speaker A: And that's why some people created a tool to make it easier to use the Cosmos SDK, and that's called Stopport. Stopport is a CLI tool to easily scaffold, build and run applications on Cosmos. It's based on the Cosmos SDK and it's written in Golang. To install it, you can run an installation script. You will need to have a recent version of Golang on your machine. The main feature is to scaffold a new Cosmos app powered by its own blockchain. It creates not only the blockchain path, but also the front end path with a skeleton code.
00:02:26.090 - 00:03:10.610, Speaker A: Using Vue. It can also compile and build your application into a self content executable, which makes it easy to run your application on any machine. Another cool feature is that you can use the Stopport CLI to send queries to your application, which can be very useful for debugging. You can also define the data model of your blockchain app by using Starport. You can also use Starport to install some extra modules of the Cosmos SDK to bring in new functionality. It also has hot reloading, which means every time you change a file, it automatically redeploy your application, and it's always up to date with the latest version of the Cosmos SDK. And besides the scaffolding capabilities, it's also able to run your application and connect to other Cosmos networks.
00:03:10.610 - 00:03:54.786, Speaker A: In terms of the developer experience, when I first used this tool, it felt like a sort of create react app on steroids for Cosmos. And after using it a bit more, I felt it was more like the Rails CLI. If you have done some rails development before, development with Starport is more similar to developing a backend MVC application, which might seem more familiar to web developer, versus building a DAP on Ethereum, where the backend is in the smart contract. So in conclusion, I see four benefits to using Starport. First, it's an all in one solution. This is the same tool to build, launch and run your crypto application. Second, it's adaptable to any project, so it allow you to build any kind of blockchain application or even a sovereign blockchain.
00:03:54.786 - 00:04:30.354, Speaker A: Third, it's make it easy to launch and connect your blockchain and tap into the interoperability of the cosmos ecosystem. And finally, it comes with full support. The starboard platform provides a rich documentation, delegated support, and also a launchpad platform to accompany you during the launch of your project. This launchpad can be very useful to find Cosmos validators who are willing to run your blockchain app. Okay, so that's it for this overview of Starport. Next, we're going to have a discussion with a team member of Starport. Hi, guys.
00:04:30.392 - 00:04:37.890, Speaker B: So today we have Dennis from Tendermeet, who is the director of developer experience. Welcome, Dennis.
00:04:37.970 - 00:04:39.302, Speaker C: Hey, thanks for having me.
00:04:39.436 - 00:04:51.702, Speaker B: So Dennis is going to talk about Stopwatch. And first, Dennis, can you tell us what is the difference between building blockchain apps on Cosmos versus other blockchains?
00:04:51.766 - 00:05:26.770, Speaker C: So the philosophy behind Cosmos is that you implement your decentralized application on a sovereign blockchain. So on other blockchains, you build smart contracts and you deploy them. And these ecosystems are trying to attract developers on their particular blockchains. With Cosmos, it's different. Cosmos provides all the tools you need to build something that is completely sovereign and independent from any other blockchains so it's sovereign, but at the same time it's connected to any other blockchain in the ecosystem and even beyond.
00:05:26.930 - 00:06:05.938, Speaker B: I think this is a very important point that actually when you build an app on Cosmos, it can be its own blockchain. Stoppot Cli is a tool to scaffold cosmos blockchain. But since in many case Cosmos blockchain actually app, we can say that Stoppot CLI is actually a tool to scaffold your blockchain. So we could compare it to something like create react app or Rails CLI, if some of you guys are familiar with it. And can you tell us, first of all, if we didn't have this tool, what would we need to do?
00:06:06.024 - 00:06:50.154, Speaker C: Sure. So what people used to do before Starport existed is they took an existing blockchain, forked it, and had to go through the source code, changing all the names, modifying the source code, and kind of like dealing with a bunch of boilerplate code. And that's not ideal. There was a tool that scaffolded code, but it still didn't produce like a fully functional blockchain. So the developer experience overall was lacking. And we are on a mission to improve developer experience dramatically. And I think we've done a great job, because right now it just takes one command to produce a fully functioning blockchain that is customizable.
00:06:50.154 - 00:07:06.158, Speaker C: And it is indeed, as you said, very similar to, in some ways, it's similar to tools available for traditional web application development, such as react and view and server side applications like rails.
00:07:06.334 - 00:07:17.286, Speaker B: We said that we could compare it to something like create React app, and in create react app, it's possible to pass templates, and there are a few options. So what about stopport, how customizable it is?
00:07:17.388 - 00:08:22.118, Speaker C: Yeah, it's very customizable, because what you start with is a template that is the same for everyone. You can change, like address prefix and things like that, but what you get is a template, and then you can add features to it. And that's probably one of the most powerful features of Starport, because cosmos blockchains are modular. So what you do after you scaffold a new blockchain, after you create a new blockchain, is you create a module and then you add features to it. And features are represented by messages and types and IBC packets. So all of these abstractions that are used during blockchain development are just one command away in starboard. So typically what happens is you have an idea in mind and then you run like five or six commands to scaffold the skeleton of your application and you have pretty much all the boilerplate code in place, and then you go and implement the logic in message handlers.
00:08:22.118 - 00:08:29.440, Speaker C: So it saves like 90% of the time and you need to focus on the things that are unique to your particular application.
00:08:29.810 - 00:08:38.594, Speaker B: So would you say that no matter what you want to build, you can probably use topple, or maybe there will be some cases where you won't be able to customize enough?
00:08:38.712 - 00:09:09.398, Speaker C: No, you will be able to customize everything you need. I think it's really important that we have these tutorials that guide developers from zero to being very proficient. And the first tutorial is like a hello world, and the last one is building an IBC enabled Dex. So if you can build a like, you can build pretty much everything because it's a pretty complex application, but you can spend like a couple of hours and master Cosmos SDK development with starboard.
00:09:09.574 - 00:09:25.310, Speaker B: Yeah, I think it's great that you guys address this problem because I know as a developer if something is too complex to set up, then I just won't bother. So it's very important. So besides scaffolding, can you talk of all the other feature of Stopwatch?
00:09:25.910 - 00:10:05.866, Speaker C: Sure. So after you create a new chain, probably the first thing you want to do is start it locally, right? So there's a command that you run Starport chain serve, and it starts a validator node in development with automatic code reloading. So it's very convenient. And it's also something that we kind of borrowed from traditional web application development, where you write your code, you press save, and the server automatically reloads. The same thing happens with Starport. So it's very like, the feedback loop is very short, so it's very easy to iterate on the source code. So that's one feature.
00:10:05.866 - 00:10:54.560, Speaker C: Another one is you can customize the whole thing very precisely with a config file. So you can set accounts, you can change parameters, you can tweak all of this in development very conveniently. And we have a set of other features like generating typescript clients. So blockchain development is not only about building blockchains, it's also about other applications that interface with these blockchains, and very often it's web applications. So for that we automatically generate a typescript client and vuex client as well. So it's always up to date. You run one command and an up to date client is generated, so you can publish it on NPM and of course use it yourself.
00:10:54.560 - 00:11:36.742, Speaker C: So one more cool feature is built in IBC relayer. And we also have a tutorial for that that guides you through creating an IBC enabled module. So IBC is a killer feature of cosmos. And of course we adopted IBC as soon as it was shipped. Actually we adopted it like three months before it was shipped. So we're trying to stay on the cutting edge of what's available in cosmos. And yeah, we have additional tools that advanced developers might be interested in, like manually automatically generating go code from proto files.
00:11:36.742 - 00:12:02.766, Speaker C: And there are a bunch of advanced tools as well bundled with starboard. And last thing I'll probably mention is how easy it is to install the tool. So it's just one CLI command and it downloads a binary. Everything is in a single binary. There are no dependencies except go. So there's really no reason why you wouldn't just install this binary and spend a couple of hours on a weekend trying building a module.
00:12:02.878 - 00:12:07.058, Speaker B: Yeah. Okay. So no matter if you're windows, Linux or Mac, it will work.
00:12:07.144 - 00:12:47.860, Speaker C: Yeah, on Windows we recommend using WSL. So Windows system for Linux you actually don't even need to install it. If you want to try it or you just have an iPad, for example, you can visit our website and there is a button to try it online. So it opens a visual studio, basically a text editor online that has Starport preinstalled and you can just start working in your browser. It's not really convenient if you're planning on using it on a daily basis like we do for building blockchains, but it's definitely very convenient if you just want to try it out or go through a tutorial or two.
00:12:48.550 - 00:12:53.586, Speaker B: Okay, very cool. And I'm guessing you guys have all sort of tutorials on your website?
00:12:53.688 - 00:13:14.598, Speaker C: Yeah, absolutely. Right now there are I think seven tutorials and one more will be released soon. And they're ordered how complex they are. So initially it's just hello world, then blog, then you kind of progress into building more advanced modules and finally you're building an IBC enabled X.
00:13:14.684 - 00:13:19.286, Speaker B: Yes. So guys, if you want to build a blockchain app on Cosmos, really make.
00:13:19.308 - 00:13:20.346, Speaker C: Sure to use a Starport.
00:13:20.378 - 00:13:34.090, Speaker B: Cli is going to save you a lot of time, save you a lot of headache. Of course. I'll put all the relevant links in the description. Well Denise, thanks a lot for coming here and helping us to understand more Starport.
