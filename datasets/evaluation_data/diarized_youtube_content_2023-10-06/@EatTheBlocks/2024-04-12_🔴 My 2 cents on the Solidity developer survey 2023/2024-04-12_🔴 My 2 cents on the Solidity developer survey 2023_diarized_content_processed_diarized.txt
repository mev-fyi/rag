00:00:08.840 - 00:00:34.866, Speaker A: Alright and we are live. Welcome everybody for this new live stream. And today we gonna talk of the solidity survey of 2023 that was just released. And so there are some interesting data. So let's check this out. If you're new here, I'm Julian and eat the blogs. I help you to become a professional blockchain developer.
00:00:34.866 - 00:01:18.074, Speaker A: And if you are new here, check out my free training on how to become a blockchain developer. I will tell you exactly the skills that you need to master and how to get your first blockchain job as a complete newbie in the space. So I put the link in the chat in the blogs.com roadmap. Check it out, it's very useful. All right, so let's check out this survey. So here we are.
00:01:18.074 - 00:01:51.186, Speaker A: Survey is here. Hi everybody. In the chat, I see there is tv here. Hey man, good to see you. So first of all, where do solidity developer leave? So without surprise, USA comes first. So you know, on the west coast we have a lot of tech companies because that's also where we have the Silicon Valley. But in other countries we also have a lot of solidity devs.
00:01:51.186 - 00:02:23.216, Speaker A: So each India for example, rapidly growing countries. So all the countries where the living cost is lower typically, and where a lot of people are unbanked. Crypto is really popular there without surprise. Nigeria also number three. And in Europe, surprisingly, Europe is pretty high in the ranking. Germany and France relatively to the size of the country. We have a lot of french people in solidity and then we have China.
00:02:23.216 - 00:03:01.334, Speaker A: It's a bit weird that China is so low because it's just so much bigger than Germany, France and even Nigeria. So I would expect China to be number one or number two, but probably related to the language. But yeah, a bit surprising. And then some other european countries, United Kingdom surprisingly is half of France. So maybe because those numbers are low, so maybe we cannot interpret them too much. I don't know. But you know, I would expect more people from the UK since they're same size of France and they speak English.
00:03:01.334 - 00:03:44.804, Speaker A: All right. But the point is that really we have solidity developer all over the place, it's not just in the US. So what's your native language? Yeah, so majority of native language which is English, but. But not only. And yeah, which language do you speak predominantly at work? English or even for a lot of people who are not native english speaker, they still need to speak English at work. In international teams. Would you prefer read the 3d documentation in your native language or English? Most people say English.
00:03:44.804 - 00:04:23.212, Speaker A: Yeah. I agree there. You know, it's super annoying to when you learn the technical words in English and then you have to translate back in your language. For example, when I read some documentation in French, actually, I find it more difficult than in English. So if you weak on English, really you gotta get on top of it because otherwise that's really going to slow you down a lot. So yeah, a couple of languages here. All right, so here now we're going to talk of the question related to the professional situations.
00:04:23.212 - 00:05:16.284, Speaker A: Are you currently employed? Yes. So there is a majority of solidity developer who are working. So for everybody who's saying that there is no demand for solidity dev, well, you can see that that's not the case. And otherwise we have a lot of students, it's 20% not employed at the moment. What industry do you work in? Crypto. So of course, but not only technology. So technology mostly some web, two tech companies that are adding a web three feature to their product, and then we have some other industry, for example, financial services, 4.5%
00:05:16.284 - 00:06:01.814, Speaker A: media gaming. And so in the future, I expect that this traditional industry to represent a bigger portion of all the 3d devices, because basically everything that we call crypto right now, some of this will actually move to the other segment. And in the future, if a company has some webster component, we will not necessarily say that this is a crypto company, but we will just say, yeah, that is a company that just has some crypto component. Exactly. Like for web company. Before, when the web was new, people were saying, oh, like we were web company. But now the web is everywhere.
00:06:01.814 - 00:06:40.004, Speaker A: So just having some web product doesn't make you spatial. So the same thing will happen with crypto. It will become as common as being on the Internet in. So next questions. How many years have you coded professionally as part of your work? So here is a majority of people who are three t developer who have between three to five years of experience. And I'm a little bit surprised. I was expecting a much more beginner.
00:06:40.004 - 00:07:05.530, Speaker A: Usually we have a curve that is more like a downward slope, like a lot of beginner. And then as you progress through the cohort, you have less and less people. So, so that's, that's a bit strange. But we still have some beginners. So some people have never quoted as part of my job. Let me see how many percent, 6.1% have never quoted as part of their job.
00:07:05.530 - 00:07:41.514, Speaker A: 9% have only coded professionally for less than a year. So even if you're a total beginner, you can still be a three developer. And then, so we have a peak, three, five years. And then what happened is that a lot of people manager or just, just go on and do other things. Developer profile. So which of the developer profile best describe you? So most solidity developer identify as smart contract developer. Yes, makes sense.
00:07:41.514 - 00:08:14.296, Speaker A: Small portion tooling developer. So that's pretty advanced. And then we have the auditor. So how many percent is sad? 4.4% of people are auditors. And so, you know, that was strange in 2022 and 2023 it just felt like, well, 2023 exactly. It felt like there was always more, almost more auditors than developer, especially on crypto, Twitter.
00:08:14.296 - 00:09:20.912, Speaker A: But here you can see that this is actually a small portion and I expect that with the bull market, this will, the ratio will even continue to grow in the favor of smart contract dev. Yeah, so more this part will grow here. Smart contract developer. When do you use solidity? So for personal uses. So 25% of people just for fun or for learning, then the same proportion just at work and half are using it in both contexts, which is good because it shows that solidity dev really enjoy solidity and just are not just mercenary, but actually enjoy what they do and do personal project with it. How frequently do you contribute to open source projects written in solidity? Daily, weekly, monthly? Never. Alright, so we have more than half of people who do contribute to open source.
00:09:20.912 - 00:09:37.952, Speaker A: 40% never. And this is specifically open source in solidity. So, you know, contributing to open source. This is awesome. But this is not something for beginner. Okay. This is more like for intermediate to advanced.
00:09:37.952 - 00:10:13.934, Speaker A: So wouldn't really recommend it to everybody. Programming language preferences. Which programming language to use the most? Solidity. Yeah, well that makes sense. And second, typescript and JavaScript. So we have a good, so yeah, roughly like 30%. So basically 30% of solidity dev, actually at least 30% are full stack, meaning that they do the smart contract, but also, but also the rest of the application.
00:10:13.934 - 00:11:02.374, Speaker A: But, but, but interesting to note, still the majority of solidity developer are just solidity developers. They don't, they don't also, they don't, they don't do something else. And I think that this proportion increased. So we observe a big hike of participants who use solidity the most going from 30% to 43% this year. So what does this mean in terms of market dynamics? It means that the market tends to specialize and we have more and more demand for specialists. So that really makes sense. And this is why for our bootcamp, we only teach solidity because it's always more valuable to be super good at solidity than just to be a sort of jack of all trade who knows a little bit of everything.
00:11:02.374 - 00:11:40.574, Speaker A: All right, so next, next, what's your favorite programming language? Solidity. So not every user of solidity has solidity as their favorite language? Python. So here Python is, was actually just 9% in the chart above, but here is at number two. So yeah, developer love Python. Yeah, like some people mentioned Java as their favorite language. Come on guys, how is it possible? Or C sharp. Come on.
00:11:40.574 - 00:12:27.014, Speaker A: Don't get it. Preferred operating system. So it's equally split here, Windows, Linux, macOS. So doesn't matter which platform you use, you can always be a solidity dev, but still a majority on macOS, which is more expensive. But that's okay because as solidity dev we are rich, so we can afford it. Solidity expertise. So on a scale of one to ten, how would you rate your, your solidity expertise in here? So it's a bit strange because we have a majority of people, the biggest category here is number eight.
00:12:27.014 - 00:13:10.336, Speaker A: So quite good. I would have expected people to be a little bit more humble. So the reality, most people tend to overestimate their skills. I think the reality is that this chart is the real number, are probably more to the left and here, interesting to note, between the beginner, between one and two, we see a decrease. And actually this makes sense. This is, this chart here. So when you start to learn something, you think that you progress quickly and you reach the top of monstupid where you don't realize your actual level.
00:13:10.336 - 00:13:35.504, Speaker A: And then when you understand the complexity of the task at hand, then you realize you're actually much weaker than you think. It's called the troph of sorrow. And finally the climb to mastery when you're really progressing. So yeah, this is, this is what we, what we see here. But I'll be impressed by this. There are, the real level is more to the left. All right.
00:13:35.504 - 00:14:39.826, Speaker A: Oh, and here I noted one thing to be, oh yeah. Here, the highest number of respondent users who have two, three years of experience in solidity. So this graph here. So majority of user, the biggest category I've been using for two, three years and still a decent number of beginner here. But that's also this, this chart is a little bit strange because usually that's the country, usually you have more people who basically it goes decreasing. So the most, most people are the most recent ones, or less than three months and a little bit less people, three, six months, etcetera. So I believe this is probably some statistical bias introduced by the survey because the people who are the most likely to answer this survey are more senior.
00:14:39.826 - 00:15:10.686, Speaker A: Senior. So the reality is that the majority of so deaf are beginner, not senior, that's for sure. How long did it take to become productive with solidity? Less than a month. Okay, so these guys here, they are, they finally on the month? Stupid. Okay, no question about this. Less than half a year. Yeah, seems about right.
00:15:10.686 - 00:15:30.106, Speaker A: Less than one year. Yeah, probably for most people it will be somewhere between six months to one year. And after? Well, depends how. What do you call productive, etcetera. But more than one year, it seems like a lot. And there are some people who never make it. I don't feel productive.
00:15:30.106 - 00:15:54.690, Speaker A: Sorry about that. Sorry, buddy. How often do you use solidity? Daily. Almost half of people use solidity daily. Good. So that means we have a very engaged community and 33% here weekly. So yeah, you have more than two thirds dev that use it at least weekly.
00:15:54.690 - 00:16:25.714, Speaker A: So very, very engaged community. Then where do you get the 3d binaries from? Okay, so it's a bit technical, but, but basically how people compile a smart contract. So usually using a framework and an ide. But there are some people who like to do it manually. So they do it with NPM, with GitHub released directly, or they build it from source. Real warrior. But yeah, most people you just use a framework.
00:16:25.714 - 00:17:00.284, Speaker A: Which editor do you use for writing solidity? Ah, this is it. The most important question of this survey. Okay, wars have been fought for this, guys. So most people use versus code, unsurprisingly, but after we have Vim at almost 5%. So if you're a real programmer, you use Vim. Okay? Otherwise I don't respect you. This is as simple as this.
00:17:00.284 - 00:17:32.024, Speaker A: I'm sorry. Sorry now, but seriously, Vim is great. I love it because basically you don't have to use your mouse at all. So it's good to protect against RSI. Do I say it right? Yeah, I mean, you know the thing that hurts your wrist if you use it too much. So that's the main reason I use it. But yes, versus code has all the plugins and is more like fancy and shiny, etcetera, so it's not surprising.
00:17:32.024 - 00:18:21.438, Speaker A: All right, which really related plugin do you use? So here's thing is they mean for versus code. So just like last year, the three DT extension by Juan Blanco and hothat versus code by Nomiq foundation. So that must use extension. Do you use an ethereum specific development environment? So here. So basically they are talking of frameworks and tool. So first we have hot hat, which used to be the, which has to used to have much more traction, but it has decreased a lot. So I think they mention it here, 33%.
00:18:21.438 - 00:18:55.684, Speaker A: Hot hat remain the most popular ethereum development environment, but significant lower than in 2022 when roughly 75% of respondents were using hot. Hot. Okay, so huge decrease. It used to dominate a lot, but not anymore. And foundry, a close number two. Foundry ranked second with 32% but not much change compared to 2022. And then we have a truffle.
00:18:55.684 - 00:19:41.244, Speaker A: So truffle is nice as a legacy framework, it was discontinued, but it was the first framework for solidity, but it's been discontinued. And then we have some other framework that not very known, like brownie for Python people and Buck also. Alright, so which soy t version do you currently use? Yeah, so most people use the latest one, and some people, I don't know why they use old version. So usually it's because these people, maybe they interface with older smart contracts, but, but otherwise you have no reason to use an old version. Just, just use the latest version. Solidity usage. Okay, so that is not a little bit too technical.
00:19:41.244 - 00:20:19.832, Speaker A: So let's skip this, let's keep this, let's keep this smt checker. So this is for people who write compilers. We don't need this. Okay, let's keep this, this flatten your contract. We don't care. Okay, here we care. Other EVM network do you use solidity outside of Ethereum, Mainnet and Testnet? So for one third of people, no, they are just on the ethereum network, but the majority of people, yes.
00:20:19.832 - 00:20:54.264, Speaker A: And that's because Ethereum, the EVM technology, is used on many other blockchains and that's also the power of solidity, really. You can really leverage your investment across a wide range of technologies and that's very good in terms of career potential. On which other network do you deploy your stability smart contracts. So we will see a lot of ethereum l two here. Yeah. So polygon, arbitrum, optimism. So those are the biggest l two binance chain.
00:20:54.264 - 00:21:25.772, Speaker A: We don't see, we don't see bayes because bayes just took off very recently. And this is a 2023 survey, but probably that, for the next survey we'll see that base probably in the biggest category here. What other smart contract languages do you use? So for one third of people, none of them. Yeah. So it is really, really dominant. There are some other languages, but they are really, really far behind. Yo.
00:21:25.772 - 00:22:08.604, Speaker A: So I was really surprised by this 24% of three t dev use yo, I thought it would be just a few percent. So yo is basically a low, a low level language, how do you say a sort of low level dialect of solidity that allow you to target the EVM directly. But so that's really powerful, but that's also very dangerous. And yeah, I'm surprised like almost one fourth of people use yield and Viper. So that's a python, like a smart contract language. I thought it was dying, but apparently not. And then we have some very niche language.
00:22:08.604 - 00:22:46.488, Speaker A: So huff, this is a language mostly to learn and then some other smaller language here. All right, so next, next recurring issues. Do you encounter the same issue multiple time? Yes. And which one? It is stack two deep. Okay, so if you learn solidity very quickly, you will become crazy with this error bytecode size limits. Yeah, so spot contract cannot be too big. So super annoying limitation debugging issue.
00:22:46.488 - 00:23:25.562, Speaker A: That's, that's a big thing. So getting started with the no good, nothing interesting here, not, okay, let's, let's here scroll down. Which feature do you like the most? So we have mappings, mapping, basically a key value stores exactly like in JavaScript, super easy to use. So that makes sense. Contracts as objects. Semantically, it's quite easy to understand what is a contract. You have data and function encapsulated and this is separated from other contracts.
00:23:25.562 - 00:24:07.424, Speaker A: So I think this is a logic that people can understand easily. Modifier, very useful for access control. 1012 percent of people who like the most inline assembly. So that's basically y'all. Um, okay, surprising, this is very, very obscure part of the language, but why not? All right, so what's the biggest pain point with solidity? Stack 2d. Yeah, people, people go crazy about this. Gas usage, gas usage, what? Mapping memory optimization.
00:24:07.424 - 00:25:13.678, Speaker A: Okay, so people not happy with the gas optimization of solidity here, but yes, stack two deep, the biggest pinpoint. All right, do you use external library? Almost half of people know, so they just write pure custom solidity code. Very surprising because we almost always need a token and for a token we'll use open zippling. Right, let's keep going down. What's the most anticipated feature you like to see in solidity in the near future? So first, generics. Okay, so generics, that's some advanced stuff that you see in some complex language like, like c. I don't know why people want this because it's just going to make three DT more complex require with custom error type.
00:25:13.678 - 00:25:46.354, Speaker A: So basically a better way to do access control with your custom error. Yeah, I can see how that could be useful. Transient storage. So transient storage is new feature of the EVM that allow you to have some temporary key value store. A little bit like this is temporary. It only lasts during the transaction. A little bit like a storage in a web browser.
00:25:46.354 - 00:26:13.604, Speaker A: So an up and coming feature. All right. And I think, I think that's pretty much it. Let me see, let me see. Yeah. Interaction with other three DT developer. Do you interact with other three DT developer? So half of people.
00:26:13.604 - 00:26:33.126, Speaker A: Yes. And otherwise for the other half rarely or. No. So we have half of three t developer who are autistic. Yeah, that makes sense now. But you know, when we are in the flow, we don't want to talk with other people. So it's not special to us.
00:26:33.126 - 00:26:51.164, Speaker A: All devs are like this. Alright. So I guess that's pretty much it. So yeah, was pretty interesting. Let me see what people are saying in the chat quesi. Let's get some likes, folks. Thank you.
00:26:51.164 - 00:27:33.284, Speaker A: Peter, when do you see blockchain being more mainstream and adopted by big existing companies? I've been following blockchain for four years and I still feel like it's a bit risky to find something safe. Yeah, I think it's going to come. So there are many industries that will adopt many industry where it could go mainstream. But I think gaming. So finance, clearly we will see more and more assets tokenized. We have some big investment fund like Blackrock which are talking about it. So I can see Wall street coming in Defi.
00:27:33.284 - 00:27:59.154, Speaker A: Then we have gaming. Yeah, gaming. Absolutely. Coming in defy and we have overseas payments. So couple of things. And yeah, from the top of my head this, those are the biggest one. But yeah, those are gonna be huge justice.
00:27:59.154 - 00:28:16.718, Speaker A: Hey, Julian. Peter. My focus is security, like pen testing. So I'd be interested in pen testing. In blockchain. Yeah, so we don't blockchain. There is no pest testing but pen testing.
00:28:16.718 - 00:28:53.964, Speaker A: Sorry. But there is. We have smart contract security and smart contract audits. So you have a whole community of smart contract dev who are specializing in funding some bugs. And right now this is really booming. But if you do this, really the core skill that you need to acquire is solidity so that you can understand what's going on. There are a lot of people who are attracted by smart contract security, but they jump straight at the audit aspect without learning solidity and after they struggle a bit.
00:28:53.964 - 00:29:45.910, Speaker A: All right, guys, so there's no more question in the chat. We are going to stop here. So blaze line surprise. No question related to AI usage for smart contract security, for example. Yeah. So we probably see some AI tool for smart contract security, but there will just be some tools to help smart contract auditors. But it's very unlikely that it will be the AI tool that does the whole smart contract audit by itself, because, people, AI is good when it does something a bit creative, when we don't need some specific and exact result.
00:29:45.910 - 00:30:16.844, Speaker A: But in, in the case of security, we do need something specific. So would you trust AI to secure your smart contract? And there are millions of dollars at stake. Most people wouldn't. So I don't think this is necessarily the place where it's going to have biggest impact. All right, guys, so I guess we're going to stop here today, though. Thanks for coming, and I will see you next week. Bye.
