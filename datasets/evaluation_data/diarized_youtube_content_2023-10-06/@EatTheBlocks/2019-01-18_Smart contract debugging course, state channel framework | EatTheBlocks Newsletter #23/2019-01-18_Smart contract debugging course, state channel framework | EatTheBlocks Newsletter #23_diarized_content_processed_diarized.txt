00:00:00.410 - 00:00:48.140, Speaker A: Welcome for this newsletter of Idoblox, a weekly newsletter for Ethereum developer. If you haven't subscribed to the newsletter yet, go to my website and click on subscribe. So you will receive an email every week with all the links and you will never miss an episode of the newsletter. So this week I've released a new course on Idoblox Pro, smart contract debugging. So this is something that I've been wanting to do since a long time because that is something that is quite, very important when you develop a smart contract, but it's also something that is very difficult to find. I've searched everywhere and it was very difficult to find any resources on how to debug a solidity smart contract. So I've decided to launch a series on Idoblox Pro.
00:00:48.140 - 00:01:42.270, Speaker A: So in this course I will teach you how you can debug smart contract using the remix debugger, the Truffle debugger, and many other things such as how to have the equivalent of console log statement in javascript with events in solidity. So if you go to the page of the course on eitherblocks Pro and you scroll down, then you will see all the class curriculum. I've already released half of the videos, there are about eleven of them and all the videos are already recorded, so I'm just going to drip them in the next few weeks. And so it's very detailed. So first I talk about some stuff very general, like debugging calls versus transaction. What are the different kind of errors? So you have syntax error, runtime error or logic error. Then I also tell you about the different types of solidity runtimes error.
00:01:42.270 - 00:02:29.638, Speaker A: Then I give you some solution for some very common problem like VM exception out of gas or VMX invalid opcode revert. So that's something that is very confusing for beginners, like what is this thing? Invalid opcode this is weird. So I explain you everything in this video. Then I give you a lot of tips like how to inspect the storage with call and return statement, how you can use, require and revert to debug. Not many people notice how you can debug with events that is super good. And finally how to use the remix debugger. So this is very difficult to use the remix debugger if you don't find a tutorial, and I haven't found really any good tutorials.
00:02:29.638 - 00:03:06.038, Speaker A: So that's why I've made this video. And the remix debugger can be extremely valuable if you know how to use it. So yeah, I hope that you guys will find this course useful. If you've already debugged a smart contract, or try to debug a smart contract and you have any question or comment to make, please write in the comment. Then I find this news about the counterfactual framework. So counterfactual framework is a new thing. It's basically a framework for developing DAP with a state channel.
00:03:06.038 - 00:04:08.938, Speaker A: So you've probably heard of this L2 scaling solution that allow you to basically do free transaction and very fast block time. So solution for L2 solution include the loom network, but also raiden and you have a couple of others like this. But most of this scaling solution, they are for very simple transaction such as just ether transfer or ERC 20 token transfer. But what if your DAP need to scale on a L2 solution but with complex custom smart contract transaction then there is no solution yet. Well, state channel have been developed to answer this problem. So state channel as some sort of generalized L2 solution. And this framework counterfactual really help you to design your DAP and implement it with a state channel.
00:04:08.938 - 00:04:47.826, Speaker A: So there are different part. There is the smart contract part, there is the interaction between the smart contract and your DAP, and there is also the state channel part which is basically the L2 solution itself. So there are three parts in this framework. It's still in heavy development, but it might be worth checking out how it works already. And in this article, basically you'll have an update by the development team. Then on Reddit I found an interesting thread that explained the create to opcode. So create two is a new opcode that's going to be rolled out in a Constantinople fork that is upcoming.
00:04:47.826 - 00:05:31.666, Speaker A: So before you're able to use the create to opcode, you'll need to wait for solidity to add it in a solidity programming language. This being said, if you already want to understand how this can help for your dub, then you can check out this article. Then I find this article on efficient Ethereum addresses. So this is something I had no idea about. So basically, let's say you have a smart contract and you call your smart contract several times. So you would think that if you call the same function then the gas cost will be exactly the same. Well no, that actually depends on the value of the arguments and for example addresses that have more zeros.
00:05:31.666 - 00:06:16.934, Speaker A: If you give them as an argument of a function then it will result in a lower gas cost, and if they have more zero it will result in a higher gas cost. And if you don't believe me, you can actually try this out. So try to send an ERC 20 token to different addresses and you will see that depending on the address that you send it to then the gas cost will be different. So this article explains you why and goes deep in the EVM bytecode. Then I found this tutorial on how to build a token recommender using the Google Cloud platform. So if you're interested in mixing AI, machine learning and blockchain, this is the perfect tutorial for you. It uses Tensorflow, which is a famous framework for machine learning.
00:06:16.934 - 00:07:01.742, Speaker A: It also uses a lot of the infrastructure of Google Cloud. It doesn't go too deep into machine learning stuff and math heavy stuff, so you don't have to worry too much. It also uses Google Bigquery which recently has started to index a lot of data of the Ethereum blockchain. So you can basically query this service like you would query a database using like a SQL like language and get some information on the blockchain. And based on that and mashing learning then you will produce a recommendation for buying or not a certain ERC 20 token. So it is very interesting. Then there is a new beta release of Ganache GUI.
00:07:01.742 - 00:08:00.002, Speaker A: So in a previous episode of this newsletter I introduced what are the major improvement in Ganache Gui too. So it's still the beta, but if you want to try out the new features now, you can check it out and there are some very interesting features around. Project and blockchain snapshot then the Zero X protocol is introducing a market maker program where basically they offer you up to $15,000 if you run a market maker. So they have a couple of tools that can allow you to easily set up a market maker. And basically after you do this then you probably need to be a little bit creative, but you can reach out to them and basically get this grant. If you really can show that you will contribute to the ecosystem, then there is this tutorial on how to run a parity node in two. So parity is one of the major Ethereum clients.
00:08:00.002 - 00:09:16.890, Speaker A: The most famous one is Go Ethereum, but parity is the more enterprise run and it is written in rust. However, running an Ethereum client isn't as simple as just running a command line, just like start and waiting that everything work because the blockchain is so huge in a lot of cases. Actually if you don't set up the correct flag and you don't have the proper hardware, then your node basically will not sync up to the network and basically you will not be able to use your Ethereum node. So there are different synchronization mode and this article will explain your differences between them and what are the different options that you need to set up and basically how to make it work. Then there is this article that summarize the main changes that are brought by the Constantinople upcoming fork. So you know that regularly Ethereum introduces some new feature and some new changes in the algorithm. And when this happened then the network need to do a fork which mean that all the miners and all the users of the network have to upgrade its software with the latest version of the different Ethereum implementation so that they can have the latest feature of Ethereum.
00:09:16.890 - 00:10:31.990, Speaker A: So on January 16 we were supposed to have the Constantinople fork and well it's been delayed for a reason. I will explain just after this article, but basically this article of consensus explain you what are the main feature of the Constantinople upgrade? For us developer we don't have much to worry about except the create to upcode that I've explained earlier in this newsletter. But other than that the other changes are very internal. So I said that the constituent upgrade was delayed and that was because some people figure out that there was a new reentrancy attack that was brought by this folk. So why do we have this vulnerability? Well you see in the EVM there is an opcode that is called SS store and basically SS store allow you to save some data on the blockchain. Before the upgrade, SS store has a certain gas cost. After the upgrade the gas cost of the SS store operation decreased a lot and basically reintroduce the attack.
00:10:31.990 - 00:11:51.726, Speaker A: This is something that I explained on Etherblocks Pro, so I'm not going to explain it here, but basically it's a security vulnerability that can potentially allow an attacker to empty the ether of a smart contract. And that's what famously happened in the DaO smart contract hack in 2016. So if you have let's say a smart contract a that calls a smart contract b, then the smart contract b can actually call back the same function that was triggered in smart contract a and basically do some state changes. This vulnerability was fixed when solidity introduced the address transfer method, which basically constrained the amount of gas that the smart contract b can spend when doing the reintrancy attack. So we had what we call a gas stipend of 2300 gas which did not allow to do any SS store operation. But now that SS store is the cost of SS store is lower then basically address transfer became dangerous. So the team of Ethereum is fixing the problem and hopefully we will have the actual fork happening in the coming weeks.
00:11:51.726 - 00:12:31.760, Speaker A: And finally, I find this link on what's new in Ethereum 2.0. So ethereum 2.0 is the new name of what we call before the serenity update. So that's the future of Ethereum with sharding Casper, et cetera, et cetera. And so this thing that I'm showing, it's run by a developer that update it every week and basically explain what is new in Ethereum 2.0, both in terms of the specification and also in terms of the implementation. So if you're into this, then check it out.
00:12:31.760 - 00:13:19.482, Speaker A: It's mostly about programming, but not too much about math and not too much cryptography. So yeah, if you're not a mathematician, but just want to follow this as a developer, then you can totally do it. And before we finish, I'd like to give you a brief preview of what you can see as a student in Edoblox Pro, my private website where I upload a ton of courses and private tutorial for Ethereum and solidity smart contract. So if you buy the monthly subscription for $10, then you have access to all the video, all the courses. So so far there are 70 videos and almost 10 hours of content. And the interface is really polished. So here, for example, I am in a course smart contract three.
00:13:19.482 - 00:13:59.846, Speaker A: So you can see all the class curriculum on left with all the different sections. So here, beginner after intermediate, et cetera. And here, if you click on a video, it's going to play here on the right. Hey, and also if you scroll down, then I copy paste the code. So basically you have the code and the video in the same screen, so it's really convenient to use. So in terms of update, then I maintain a change log where basically I show all the updates. So long term I will be uploading one video every week, but for the launch of it, the blogs, I'm actually way faster than that.
00:13:59.846 - 00:14:35.860, Speaker A: And I upload a new video every day. So in the change log, if you scroll down, then you can see all the details. So here, Friday, today I uploaded this video, yesterday, this one, et cetera, et cetera. But basically every single day I upload a new video. So this is quickly becoming by far the largest resources for learning Ethereum and smart contract programming. So for just $10 a month, like don't hesitate guys. I mean you're going to do yourself a favor and basically you will not have to spend house and so much time searching for different information.
00:14:35.860 - 00:15:00.460, Speaker A: Everything will be at the same place and also, if you have any request and you want a specific content then you can just ask me. So if you have any question regarding this newsletter or Idoblox Pro, please ask me in the comment here. And thanks for watching my weekly newsletter and give me a like if you enjoyed this video and I hope to see you for another video of bye guys.
