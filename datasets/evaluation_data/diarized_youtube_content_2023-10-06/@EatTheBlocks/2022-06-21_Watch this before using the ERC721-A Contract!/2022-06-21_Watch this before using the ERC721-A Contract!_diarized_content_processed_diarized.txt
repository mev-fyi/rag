00:00:00.410 - 00:00:37.458, Speaker A: Are you an NFT creator or community member tired of seeing extreme gas fees for minting nfts? Well, Azuki created a smart contract called the ERC 721 A. Maybe it can help. This video will help you decide if it is the right contract for your project. I'm Jack and on eth the blocks, we help web two developers transition into web three. Let's say you want to mint a bunch of nfts from your favorite project, and you go to mint and you find that the gas prices are outrageous. You only end up minting one just to save money. This is the exact problem that the ERC 721 a contract fixes.
00:00:37.458 - 00:01:07.602, Speaker A: Check out this chart supplied by the Azuki team. It shows the difference in gas used for minting nfts. As you can see, ERC 721 a barely goes up, while the standard contract has a big increase in gas. To see how this works, first I'll explain how the standard contract mints five nfts. Once a transaction is started, the contract will find the total supply amount and start minting with the next token id. We will then loop through this method four times, updating my address and the token on each iteration. The total supply will now be at the end of the list.
00:01:07.602 - 00:01:37.020, Speaker A: This wrote to the blockchain for all five tokens, resulting in five times the gas fees. When Bob comes along, he can now mint the next one. Now, for ERC 721 A, this contract will find the total supply amount and start minting with the next token id, just like before. However, instead of looping through each token id, the contract will just move the total supply up by five. This is what the result is. We now have four nfts with apparently no owner. Now Bob can mint just like before.
00:01:37.020 - 00:02:12.006, Speaker A: Even though these tokens say they are owned by the zero address, they are still mine. Looking at the owner of function and the smart contract, we can see how this works. The function first looks to see if the NFP has a real address. If it does, it returns the owner of that address. If not, it will decrement the id by one and try again. The contract will keep doing this until it finds a nonzero address to return. In our case, if we ask for the owner of id three, the contract would start at three, then two, then one, and then it would find my address at id zero and return that address.
00:02:12.006 - 00:02:42.622, Speaker A: Since this is a read function, it won't take any extra gas. However, as with all gas optimization, it comes with a cost. The cost is in transferring nfts after mint. Let's say I transfer token number two to Alice. The contract will also have to claim the next token in the list as mine id number three, so that I can still be the owner of tokens three and four. This transfer will then cost double the gas fees as a standard contract would. In the end, both contracts work great, so it will be up to you to decide if this contract is worth it.
00:02:42.622 - 00:02:52.380, Speaker A: Every NFT project is different, so you will need to think about how your community will be minting and exchanging their nfts. I hope you enjoyed this video. Thanks for watching and I'll see you later.
