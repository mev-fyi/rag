00:00:00.170 - 00:01:07.150, Speaker A: Smart contracts are deterministic programs that run on blockchain. However, they are not self executing, meaning their code will not run and make state changes on a blockchain until triggered by an onchain transaction. To fix this issue, it is very common nowadays to automate the execution of the smart contract's function based on different parameters. And you can automate virtually anything you want, from cross chain NFT minting to liquidating under collateralized loans to yield harvesting to gaming, et cetera. And so today I'll introduce you with a demo to our top three smart contract automation services naming chain link keepers, open Zeppelin defender and gelato Autotask. Hey, if you're new here, I'm Stefan and on ildoblocks we help web two developers transition into web three keepers are externally owned accounts that are incentivized to trigger the execution of smart contracts based on predefined conditions, which are generally based on time and events. They help you get to market faster and save gas by offloading expensive on chain automation logic to its decentralized keepers network.
00:01:07.150 - 00:01:48.798, Speaker A: So let's have a look into it. To use keepers, you need a smart contract that's compatible, and you need to register your smart contract for upkeep with the Chainlink Keepers network. Now, if we look at the code given in the example, it is a simple counter that increments the public variable counter by one if the difference between the new block and the last is superior to an interval. So to be compatible, your smart contract must implement the check upkeep method. This is where the offchain computation happens on the chainlink node. If it returns that upkeep is needed, then it will perform upkeep on chain and you also need the perform upkeep method. That's where we first reverify that everything is correct, that an onchain modification is needed, and then actually make the state change.
00:01:48.798 - 00:02:21.302, Speaker A: Let's go ahead and open the application that powers the chainlink keepers network. You can also interact directly with the registry contract, but for this video we are going to use the interface now. To use that service, you're going to need some link tokens. You can use this faucet right here for the COVID network. Add your address and you'll receive ten links and 0.1 east compile. Deploy with an interval of, let's say 30 seconds and copy the contract address to be registered for upkeep, head to keepers chain link register a new upkeep, connect your wallet and fill in the details.
00:02:21.302 - 00:02:54.350, Speaker A: And that's it. As soon as the next round of the keeper nodes executes. Checkupkeep will returns that upkeep is needed, which will then perform upkeep and increment our counter. Boom, here we go. What are the pros of using keepers low cost off chain computation on chain verification? It's very intuitive, easy to set up, has been created and maintained by a pioneer of the blockchain space. It mixes very well with open Zeppelin Defender, which we'll talk about next. Now for the cons of keepers, you need the link token, the ERC 677 to pay the network.
00:02:54.350 - 00:03:33.946, Speaker A: Your smart contract needs to be compatible, and keeper supports less network than Defender or gelato. Next is defender from Openzeplin. So Defender allows you to manage all smart contract administration, including access control upgrades and pausing, and works with popular multisigs including NeosiSafe. Defender has a lot of useful features like relays for private signing and sentinels to monitor and respond to smart contract exploits. Using the same example as before, let's head to the defender page and add a relayer. Give it a name, choose the network Covan for us, and hit create and copy the relayer address. Then, using your favorite faucet, send some ETH to the relayer.
00:03:33.946 - 00:03:58.882, Speaker A: So copy the relayer address and pass it into your faucet. After a few seconds, even if the balance says zero, you can hover over the balance. You'll see the actual value for the auto task. Name it. You can choose to trigger the task via a schedule or via an HTP request. Let's do schedule in every minute, choose the relayer. Finally, we pass the JavaScript code that will call our increment function hit, create, and voila.
00:03:58.882 - 00:04:46.930, Speaker A: Every minute our increment function will be executed as long as we've got enough balance in our relayer. For the pros of using Defender, you can get notified by multiple medias, email, Discord, et cetera. You can add roles with the relayer option on Testnet, minnet, layer two, and side chains. It works well in conjunction with keepers, where, for example, defender can automatically check if your contract properly implements the upkeep interface, or you can manage maintenance tasks on chaining keepers using open ziplink. Defender and also defender supports a large number of networks. On the cons, it might be slightly less easy to use than keepers. Finally, gelato the gelato network is a decentralized network of bots used to automate smart contract execution on all major public EVM compatible blockchains.
00:04:46.930 - 00:05:27.058, Speaker A: It was created to replace legacy centralized keeper systems with an easy to use interface and reliable infrastructure to power the next generation of defi, NFT and gaming application and web three. Now to demo on a testnet. We'll use the rinkby network since it doesn't support coven. Now head to gelato network. So first thing first, you can pay for transactions either with the balance of the automated smart contract or by adding some funds directly into Gelato. Let's add some funds to Gelato, connect metamask on the rinkbee network and just deposit some tokens. Then create task pass the deploy contract address, get the ABI and pass it here.
00:05:27.058 - 00:05:55.070, Speaker A: Choose the function to be automated. Then you can choose between frequency executing at each block or depending on specific conditions. Let's choose a frequency of every five minutes, which is the minimum here with immediate start so it will execute as soon as we create the task. Choose if you want to use the balance from the automated smart contract or from gelato and give the task a name. And that's it. Counter has been incremented by one and it will continue to increment every five minutes. For the pros, it's very easy to use.
00:05:55.070 - 00:06:18.598, Speaker A: You get two ways to pay for transactions with the automated smart contract balance or the gelatos balance. It supports many networks, including optimism and arbitrum. For the cons, you cannot edit a task once it's created. I hope you enjoyed this video. Let us know in the comment section how you would use smart contract automation. And if you want to know more Bougielato, check out Julian's video right here. Thanks for watching.
00:06:18.598 - 00:06:19.730, Speaker A: Stay safe. Bye.
