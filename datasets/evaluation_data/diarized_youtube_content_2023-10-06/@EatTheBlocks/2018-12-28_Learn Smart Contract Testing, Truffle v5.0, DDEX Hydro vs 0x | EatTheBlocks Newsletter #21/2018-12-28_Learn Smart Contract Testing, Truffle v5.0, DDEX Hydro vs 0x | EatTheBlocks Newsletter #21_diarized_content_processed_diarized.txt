00:00:00.410 - 00:00:40.454, Speaker A: Hey, and welcome for this newsletter of Edoblox. I'm sorry I'm a bit late this week. It's Christmas, so I hope that you guys can forgive me. Make sure you have subscribed to the newsletter on my website. If you want to receive all the newsletter every week by email and without further ado, let's get started. So this week I've released a new course just for smart contract testing on etherblocks Pro. So smart contract testing is very important because when you deploy your smart contract, then contrary to a normal web application, you don't have a second chance to update the code if there is any problem, because the code on the blockchain cannot be changed.
00:00:40.454 - 00:01:18.930, Speaker A: So before you test it, before you launch your smart contract, you need to make sure it's 100% tested and that it works super well. I haven't found any really comprehensive resource on testing, so I thought that that might be super important to create one. So let's see what we have inside this course. So in this course, so let's scroll down to the curriculum. So basically in this course I start from the basics of testing. So if you never heard about testing before, then I'm going to introduce you the high level concept that you need to understand. There are actually very few people who explain this.
00:01:18.930 - 00:02:08.102, Speaker A: Most tutorials on testing they will right away show you how to write some tests, but they don't really explain you the high level concept. And it's kind of a shame because there are some stuff that are important to understand, such as what is the test driven development approach? TDD. So first you write the test and after you write the code. So that's the approach that we're going to follow in this course, and I'm going to explain you. What is it exactly? What's the difference between unit and integration test? What is the range act assert testing pattern aaa? Also, I'm going to answer questions like what to test. So people who start testing in general, they just don't know where to start. So I have a very simple answer for you and then I'm going to start to introduce the different testing frameworks that we're going to use.
00:02:08.102 - 00:02:50.430, Speaker A: So most of the tests that we're going to do in this course, they are JavaScript test. You can also do solidity test for smart contract and we will also do some. But in general most of the people, they use JavaScript to do integration testing for smart contract. It might seem a little bit surprising maybe that you're expecting that most people would use solidity. No it's JavaScript and specifically node js. There are two frameworks that are very used for testing smart contract and it's mocha and Shy, which are very popular framework for Javascript project in general. But the thing is, truffle has a testing framework and behind the hood it actually uses mocha and shy.
00:02:50.430 - 00:04:21.146, Speaker A: So if you've never heard of mocha and Shy, it's a good idea to have a short introduction and that's why I give you in this course. And then once we have finished all these sections, we're going to go through many smart contract tests together, tens and tens of tests, starting by really simple stuff, going through intermediate after and all the way up to advanced testing patterns. And at the end of the course I will even show you how you can set up a super optimized development setup with code linting with automatic test coverage. So once you finish this course, you will be able to test really your smart contract like a pro, and you will be much more confident before you deploy them to mainnet because now you will know that your workflow is really optimized in this course. You also have a couple of diagram to help you understand some nice visual in terms of the smart contract that we're going to test, I'm going to reuse a lot of the smart contract of my other course on etherblocks Pro, which is a smart contract 30 where every day for 30 day we create a new smart contract. So if you follow this course before then it's a bonus, but you don't need to. In any case, we're going to use the TDD approach.
00:04:21.146 - 00:04:31.220, Speaker A: So we write the test first and after the implementation. So I'm going to explain how each smart contract work. You don't need to have follow any course before.
00:04:31.670 - 00:05:04.862, Speaker B: And lastly, before we finish on this, I like to mention that currently there is a discount if you buy the monthly membership. It's ten us per month to have access to all the courses of eitherblocks pro. So there's already, I think we have almost 6 hours of video and more than 50 videos. I'm adding new one every day at the beginning. So yeah, discount is going to last until the end of January. So buy yourself a Christmas present and becomes a member of idoblox Pro. Next.
00:05:04.862 - 00:05:53.680, Speaker B: I published an article on the blog of coin Market cap on what is Ethereum 2.0? So Ethereum 2.0 is the future version of Ethereum with Sharding and Casper, and that's an aggregation of several research projects that were developed separately before, and that were merged only really recently. That was announced at Defcon four bot by Vitalik buttering. And that's an ambitious project to make the blockchain scalable basically. And also if you hear the word serenity, it's also another word of Ethereum 2.0. So ultimately it will make the Ethereum blockchain very capable and actually able to fulfill its initial vision of being the Web 3.0.
00:05:53.680 - 00:06:33.546, Speaker B: Ethereum 2.0 is a little bit complex because there are all these different moving parts. There are actually three main part of the project, the main net. So the same blockchain as now, the beacon chain, which is sort of a chain that stands between all the sharding chain, and then you have all the shards where all the data will actually live in the future. So in this article I explain everything with diagrams, graphics and high level explanation. If you want to give me any feedback, or if you have any question about this article, please write them in the comments. Next.
00:06:33.546 - 00:07:17.670, Speaker B: Truffle 50 was released last week, so this is a release that I was super excited about, because in this release, finally they've updated to Webstery 1.0. So that's really great, because before we were stuck with web3, before 1.0. And so if we wanted to use the latest feature of web3, we had to separately import the new version of web3. And that was a little bit messy. So for example, with web3 1.0 you can use all the async await feature of ES six, which is way better than the old callback based interface. Then another thing that you can do with Truffle 5.0
00:07:17.670 - 00:07:56.742, Speaker B: is you can bring your own compiler and very specifically you can use a viper smart contract in truffle, which is pretty cool. Then the migration command has been upgraded and now you have much more information after you migrate your contract. If you remember currently before 5.0, the migration message were not super clear. You had to really look carefully to understand what was the different deployed address, et cetera. So now it's much better. Now you can also create some sort of plugin with a truffle 5.0,
00:07:56.742 - 00:08:28.254, Speaker B: so you can create your own truffle run command. Then they've also updated to solidity 5.0 with all the modern feature of solidity. So that's great. And then in the debugger now you have breakpoint. So I'll probably do a video on the debugger of Truffle, because I think that's interesting but not necessarily super easy to use. And that's it for Truffle 5.0.
00:08:28.254 - 00:08:55.846, Speaker B: So if you want to update, it's very easy. At the command line you do NPN update G Truffle and it will automatically update to the latest version. Then there is a new version of Ganache that was released. So Ganache 2.0, which is still in beta. So it's about Ganache Gui, it's not the Cli that we are talking here. So one of the new feature in Ganache 2.0
00:08:55.846 - 00:09:39.714, Speaker B: is the workspace. So with workspace you can basically save some settings for a specific project, like for example the state of the blockchain. So let's say you're working on a project and you create your workspace on Ganache 2.0 and you want to close everything. So you save it in your workspace and the next day when you come back to work, you can load everything and all your blockchain, including your smart contract already deployed with all the state exactly intact inside you will find everything back. So that's pretty cool. Another thing that you can do is also there is a new screen for contracts.
00:09:39.714 - 00:10:05.050, Speaker B: So now you can inspect the contracts that were deployed to your blockchain. You can do this in a visual way. You can see all the data inside and you can also see events. So events, they are super convenient if you want to debug your smart contract. But keep in mind that everything is still in beta, so you can just try it out if you feel a little bit adventurous. Otherwise you just wait for the normal release. Next there is a new release of solidity.
00:10:05.050 - 00:10:49.722, Speaker B: So 0.5.2. This is a minor release and the most notable feature is a faster compilation time. Next I find this tutorial to teach you how to use the new tools of Zero X and in particular Zero X instance and Zero X launch kit. So if you remember in the past newsletter I talked about, that one is a widget to get access to Zero X trading sorry, order books. And the other one, the Zero X launch kit, is a project to help you to deploy your own Zero X relayer. And so this tutorial show you how to use these two projects in combination. So that's pretty cool.
00:10:49.722 - 00:11:30.694, Speaker B: I'll learn a few things. Also it show you some tools of the Zero X ecosystem like the Zero X Polo, where you can interact with the Zero X network. So that's pretty cool. On that note, talking about Zero X, I've been asked by a few people if I could create some tutorials on Zero X. So I'm definitely thinking of doing this sometime in 2019 and probably that it will be first a course on idablox Pro. So make sure to become a member of Idablox Pro if you want to learn about Zero X. Next, there is an article of DDEx which explain why it has forked the Zero X protocol.
00:11:30.694 - 00:12:45.650, Speaker B: So DDEx is a decentralized exchange based on the Zero X protocol, and in the past they have been quite vocal against the use of the Zero X token in the Zero X protocol. So as a short introduction, basically in the Zero X rating protocol there is a token which is called the Zero X token that is used for governance of the protocol, and it's also the token that is used to pay transaction fees in the zero X protocol. And so DDEx wasn't a big fan of this and so it has fork the Zero X protocol into its new protocol called Hydro. And of course Zero X is not super happy about this, so it has responded to this. So in this article, ecosystem update Ddex in the Zero X roadmap so weird. Warren is basically the guy who created the Zero X protocol in this article. He basically reassert the importance of the Zero X token for the governance of Zero X.
00:12:45.650 - 00:13:57.122, Speaker B: But from my point of view, it hasn't really replied to the criticism of DDEX. And another interesting thing to notice is that also in the same week Zero X has announced their acceleration program, they will basically fund project that help the development of the Zero X ecosystem. I think they have something like $1 million in grant total for next year. So I don't think that it's a coincidence that they just announced this project just after the fork of DDEX. Of course they want to reaffirm that they are really committed to the development of the Zerox protocol. Personally, even though I think some of the criticism of the DDEx exchange are valid, I'm not such a fan of folks in every direction because blockchain and Ethereum are such niche industries, they are still nascent. And so if we start to be too divided, we have absolutely no chance of ever going mainstream.
00:13:57.122 - 00:15:00.140, Speaker B: So I'm against too many folks, but I still welcome the criticism of DDEX. And then there is this article on the blog of Openzeppen about the state of EVM package. So EVM package there are live instance of smart contracts deployed on Mainnet that you can tap in in your own smart contract. So it's a little bit like if there was some live instance of jquery, for example, deployed somewhere on the web and that you didn't need to use your own version of jquery. Well, that's actually what you have with CDN somehow. The big difference is that with CDN you have no state store, but with EVM package, the smart contract that you will use in a mainnet, they will keep some state. So that can potentially simplify your job on main net.
00:15:00.140 - 00:16:00.094, Speaker B: And finally, I find this website which is Ethereum 2018 in review. So that's a super cool website with a lot of visual and like animation to show you different numbers on the Ethereum network. So number of block, number of ether, some stats about gas, there are also some stats about ERC, 20 tokens. Also some stats about the number of smart contract. So I think that there are 70,000 smart contract as of late 2018. So it's kind of cool to have some general ideas for some of these figures. So that when you compare with other blockchain, then for example with EOS, then if someone tells you that oh, EOS is becoming super popular, then if you have some reference on Ethereum, then you can ask questions.
00:16:00.094 - 00:17:01.162, Speaker B: You can say okay, so how many smart contracts on EOS? Then you can make some interesting comparison. Before we finish this video, I would like to tell you that next year I would like to start experimenting with a new format for this newsletter. I would like to do live streams so that you guys are able to react in real time and ask questions in the chat so we can have a more interactive conversation. So first of all, is it something that is interesting for you? And if yes, can you tell me what is the day and time when it's best for you? So I agree that it's probably going to be difficult to find a day and time which is suitable for everybody, but let's just try. Just tell me when is best for you. I'm roughly thinking of Tuesday in the evening asian time. So I mean gmt plus eight, but this can be adjusted.
00:17:01.162 - 00:17:15.378, Speaker B: So yeah, just let me know. Give me your feedback about this idea. Thanks for watching guys. And if you have any question, any feedback about this newsletter, make sure to write in the comments and I hope to see you in my next video. Have a nice day. Bye.
