00:00:00.560 - 00:00:25.646, Speaker A: It becomes a lot easier for a lot of teams to say, you can build on a L2 or layer three, but ultimately be secured by Ethereum, building the Ethereum ecosystem. And you don't have to sacrifice, you don't have to make those sacrifices today because I get you. I get that. It's like, it was like ten x more expensive. You're probably better off on an alt layer one because it's better for you. We get that. And I never judge a team for saying that, but our job was, okay, how do we narrow that gap? How do we meet people and say, okay, you can actually have your cake and eat it, too.
00:00:25.646 - 00:00:31.334, Speaker A: You can be in Ethereum, but you can also run a business and not have to worry about, you know, being out competed by someone else.
00:00:32.154 - 00:00:55.506, Speaker B: Hey, everyone, if you have been listening to empire, you know that Santi and I are fed up with unaffordable fees and frustrating transaction speeds that make the on chain experience basically unusable. So the arbitrum team reached out, and they showed us the platform. They showed us what you can do on arbitrum. Whatever you're doing, you can experience frictionless transactions at lightning speed on arbitrum. So head over to portal dot Arbitrum.
00:00:55.650 - 00:00:57.120, Speaker A: IO and check it out.
00:00:57.242 - 00:01:43.216, Speaker B: This episode is brought to you by Monad, which has not only the highest performance evm l one architecture ever built, but also the wildest and craziest community in crypto. Monad's internal devnet is live and public. Testnet comes out soon, so make sure you join the monad community today at Discord dot gg Monad. M o n a D, Monad. Are you tired of high gas fees? I'm excited to let you know about Skale, a zero gas fee modular blockchain that's become a perfect fit for gaming and AI apps because of their instant finality and lack of mev. Explore the Skale ecosystem today at Skale space forward slash ecosystem. And stay up to date with the gasless blockchain on X at Skale Network.
00:01:43.216 - 00:02:02.274, Speaker B: That's at Skale Network. Big thanks to Skale for sponsoring Empire. All right, folks, we promised we'd do this episode. We got the episode lined up. We have Steven Goldfedder back on the pod, co founder, CEO of off chain Labs. Stephen, welcome back.
00:02:02.434 - 00:02:04.250, Speaker A: Hey, thanks for having me. Great to be back.
00:02:04.362 - 00:02:14.414, Speaker B: Yeah. And if folks don't recognize the name, I'm sure they do. Off chain Labs is affiliated, associated with arbitrum. What is the relationship there?
00:02:14.834 - 00:02:36.262, Speaker A: So we initially built the arbitrum technology obviously, today, the public arbitram chain. So that's arbitram one. Arbitrum Nova, are decentralized and controlled by the Arbitrum Darwin foundation. But we are still a core contributor to the technology and are big believers in the arbitrum tech and are building out arbitram or pit and other programs that utilize the technology as well.
00:02:36.358 - 00:03:04.734, Speaker B: Cool. So I'd love to start with just almost a state of the union. Actually, Santi and I were talking on the roundup last week all about l three s, and we were debating them and why do these things exist? And didn't we just get l two s? And l two s aren't even there yet? Maybe you can walk us through how we, how we got into this world where now everyone on Twitter is talking about l three s? And what are l three s? And should we be focusing on them when l two s aren't even fully developed yet? Take us into this world of l three s. How did we get here?
00:03:05.034 - 00:03:24.458, Speaker A: Absolutely. So I think l two s, they definitely still, as you mentioned, l two s, generally, as an ecosystem, have a way to go until they're sort of their final completion. Not that they'll ever be final. People say to me, is ethereum in its final state? And I say, no, of course not. But, like, l two still have some development. I think arbitrum is. That's l two.
00:03:24.458 - 00:04:10.020, Speaker A: L two s. Generally, I think arbitrum is by far the most developed l two from a maturity security ecosystem perspective and just core technology perspective that exists today. But that's not to say that it doesn't have still things that are in the works, because it absolutely does. But the problem is, or the good thing, I should say, is two ways to look at it is l two s have gotten really, really popular, and you have this sort of desire or need for more block space secured by Ethereum and more block space maybe, where the applications have more control over the fees and the pricing. So I'll give you an example. Arbitrum Nova is the gaming chain controlled by the arbitrum dao. And just past couple of weeks, it's been doing insane number of transactions.
00:04:10.020 - 00:04:38.838, Speaker A: It's actually gone down a little bit now, but it was doing by far the most transactions than any other Ethereum roll up or L2 solution. And what was happening was the fees were going up because of it. And this was sort of problematic for some games that were on there. They're like, hey, like, you know, I'm glad that you're succeeding, but like, the congestion of the network is sort of everyone's paying for this resource. And some have said, hey, we want our own priority lane. We don't want to give up any theory. We want to be on Ethereum.
00:04:38.838 - 00:05:09.346, Speaker A: We love the arbitrary technology, but we being sort of in a chain that has our own sort of. We have more control over the environment, more control over the field fees, and more consistency there. That's one area where we've seen some people that some push towards chains. You have chains, for example, like wonderful teams, like proof of play, building pirate nation. They actually are a team that went from Arbitra Nova, were doing fantastically well, actually. They initially came from Polygon, went to arbitrary. Fees, were slashed by like, I don't know, 30 x or something like that.
00:05:09.346 - 00:05:29.288, Speaker A: And then they said, you know, we're doing really well here. And now they actually have their own arbitrum orbit chain that they're using. There are also other places. So that's one. It's like fees and predictability. But there are some other core features that have also pushed others that love Ethereum, love the arbitrary technology, but want to be in their own environment. One is feed token.
00:05:29.288 - 00:05:49.776, Speaker A: So there are projects that said, hey, I want to build a chain in which my token, whatever that token is, is the fee token of this chain. So you pay in this token. That's something that arwitch orbit stack supports. A good example of one of those. Recently there was a chain called Degen chain. This is a chain, actually not an arbitrary one, but on the base blockchain. So it's an Altrion base.
00:05:49.776 - 00:06:12.246, Speaker A: And they wanted to launch a chain with their own custom token, and they chose the arbitrum orbit technology. So the arbitrary technology stack to do that, because it's the only technology stack today that's customizable in this way that allows you to do that. You have chains like rarible rari chain that they want to enforce at the chain level, enforce chain royalties, creator royalties at the chain level. They can take the orbit technology and do that. You can't do that on a public chain. It's just not feasible. It's not viable.
00:06:12.246 - 00:07:15.266, Speaker A: You can't sort of build your app into the rules of the chain, but you have your own chain. You can get all the benefits of the technology, but also customize it. And I'll round out with just two more examples of like, and just to give you sort of a flavor of the different types of customizability people are doing orbit chains, you have a team called kinto, and they're focusing on institutional investors, and they are building sort of KYC, institutional focused arbitrage and chain, an environment where institutional investors can use the arbitrage technology, but in a sort of environment that they're comfortable with and get all the regulatory comforts that they need. And then you have a chain called Phoenix here. Phoenix is spelled with an FHE. Fhe is also an acronym for fully homomorphic Encryption, which is a cryptographic primitive used for privacy, in this case, where everything on the chain is encrypted, and they are taking the arbitrary technology stack, but not just using it vanilla and slapping a brand on it, but they're actually adding cryptography into the core chain logic and adding privacy there. So you have this wide, wide range of uses for l three.
00:07:15.266 - 00:07:53.172, Speaker A: Some are like, hey, we just want our own customizability, or we just want our own branding on the chain all the way to. No, we want to kyc at the chain level, enforce, create a royalty, or add super deep cryptography into the chain level. And the unifying factor of all these is they want the security of Ethereum, so they want to be on Ethereum, and they also want to use the arbitram stack, which is the most advanced L2 or layer three stack. And they're able to do that by building a layer three blockchain on arbitrary one or on base or wherever they are. So you have layer threes elsewhere. Some of these chains are actually building L2. So you can use the arbitram orbit technology to build L2s, layer threes.
00:07:53.172 - 00:08:09.436, Speaker A: I'm sure one thing we'll get to is, okay, so I'm a chain for one of these. Like, many reasons. Like, I want to build a custom chain, why l three versus l two? I'm happy to get into that, but let me just pause here, because I've been rambling for a while. I warned you guys before, I warned you guys beforehand that I can ramble, and I think I've proven myself to do that.
00:08:09.460 - 00:08:24.586, Speaker C: So I think our listeners would agree that we, one of us, two out of three here, ramble. I want to get to. Actually, you read my mind. That last piece. Can you. Can you go into that? The distinction between building an l two using the AP stack versus an l three.
00:08:24.770 - 00:08:44.290, Speaker A: Yeah. So first, I'll say a little history here, which is the whole arbitrum orbit program is just about a year old. So a year and a month around. It launched in March of 23, which is when the DAO launched. And the idea was together with that, it was community owned. I like to call it community sourced. Right? So there's like a classic, there's like open source and closed source, but that's sort of a binary.
00:08:44.290 - 00:09:22.278, Speaker A: It doesn't really exist in crypto because in the regular software world, you have to make a choice which is like, okay, do I allow people to use our software or do I not? And that's basically it. And you have an open source world. It's sort of a tragedy of the commons that emerges. Sometimes you'll have libraries that are used by every big tech company, and these companies are generating literally billions of dollars in revenue off this. And it's supported by three developers that can't get funding. This is unfortunately something that you've seen, and you'll find these bugs and then you'll say, why was no one giving them any money and supporting this? And this happens over time and we start supporting more projects. But I think in crypto you have a third option, which is like, it doesn't have to be like fully open, which anyone can take it and not contribute back.
00:09:22.278 - 00:09:42.714, Speaker A: It shouldn't be closed, which people can't use it. It could be what you call community source, which is, hey, you can use this, but you just have to become part of the community and contribute back and support its development. And that's where arbitrum is. So let me explain what that means. The history is. Anyway, when arbitrum orbit launched, it was just for layer three s on top of the arbitrum blockchain. But it quickly became clear that.
00:09:42.714 - 00:10:24.586, Speaker A: And that's not true, it was self serve just for layer threes. But if you want to build a L2, you had to go and ask the dial for permission. It quickly became clear that there was a problem because there was a lot of teams that wanted to L2s but also wanted to use the arbitrary technology, but they didn't want to sort of go and air their dirty laundry publicly. It's like, hey, we're doing this super secret thing. Dao, can you vote on this? It's like, no, that wasn't working for teams. So now today there's a self serve option for orbit, which you can build a L2 chain or layer three chain, and they're all aligned, they all have some sort of align with the arbitrum. Dao, either in the case of layer three is an arbitrum one, you are building on the chain, contributing to the chain that way, or you're, in the case of L2 is you're explicitly asked to contribute back to the chain, to the DAO.
00:10:24.586 - 00:10:54.396, Speaker A: To support the funding of the chain and the ecosystem and the technology that you're using. But anyway, that's the history today. You can do l two s and l three s, both in an aligned way with the arbitram dow. But the question is, why would a developer want to choose a L2 or layer three? The answer is on the L2 side, there's some, I would say people like the branding of it. Like, there's a little bit of stigma still associated with layer three. Sometimes people are like, I don't want to be a layer three on top of arbitrary, more on top of some other chain. I want to be my own thing.
00:10:54.396 - 00:11:27.300, Speaker A: I want to be my own L2. Now, there's some irony there, because even in L2, you're still like on top of Ethereum, right? And it's funny because if you go back six years ago, I had literally the same conversations that people want to layer down. People said, what? You're building arbitrum as a L2? Are you crazy? Don't you want to be your own thing? Like, you're just going to be always secondary to Ethereum? So today, like, everyone's accepted a L2 is our quote, unquote, their own thing. And now that conversation has emerged on layer three, it's like, we need to be like an independent L2. We can't be a layer three. So there's some stigma. And I'm not trying to, like, you know, I clearly, like, don't think, I think that over time that stigma will go away.
00:11:27.300 - 00:11:59.464, Speaker A: But I'm also not trying to minimize it. If a team feels that their community won't like that they're L2, like, you know, that's their prerogative. And they, or I should say if a team feels their community doesn't like their layer three, then maybe a L2 is better for them. But there are some technical benefits and really some pragmatic benefits, I should say, of being a layer three. And there are several, but I'll just focus on two because I think that they're really illustrative of the core taste of why being a layer three just makes so much more sense for a lot of teams. Number one is the cost of onboarding users. So say that you are a layer three.
00:11:59.464 - 00:12:30.758, Speaker A: Say you want to have your own blockchain and your users need to get their funds there. So you're a user, let's say, in Coinbase, and you want to get your fund to this new app chain. Okay? So if you're a L2 and let's assume also on day one, you're not going to have support where I Coinbase and Binance. And like other exchanges directly onboard to your chain, you're going to have to go via the chain beneath you. Right? So Ethereum has support from all the, all the top centralized exchanges. Arbitrum one has support from all the top centralized exchanges. Maybe your chain will eventually get there.
00:12:30.758 - 00:12:48.954, Speaker A: And actually, we've seen orbit chains get there. Xi Xai is an example of an orbit chain that does have a direct integration from Binance. It was the first one that got it. It's like a super big milestone. But most chains won't have that on day one. So you have to think about how am I, users getting to my chain? And your users can be on Ethereum, they can be an arbitrary, they can be in Coinbase. Let's just use the Coinbase example.
00:12:48.954 - 00:13:28.168, Speaker A: If you're building a L2, what you'll do is you'll go to Coinbase and hey, give me my ETH on Ethereum, and then I'm going to go over the bridge on Ethereum to new L2 chain. That's two ethereum transactions, right? Coinbase has to do one Ethereum transaction that you're going to pay for, then you have to do a second one on the bridge. Or the other thing you can do is build a layer three. And then you say to Coinbase, hey, Coinbase, give me my funds. On arbitrum one, that's a L2 transaction, and then from arbitrum, you do another L2 transaction and go to your chain. So it's two transactions either way, one from Coinbase to the chain beneath you, and then one over the bridge. In the first case, you're doing L2 transactions.
00:13:28.168 - 00:14:03.344, Speaker A: In the second case, you're doing layer one transactions. And it turns out that today, L2 transactions are something like 99% plus cheaper than layer one transactions, which means the cost of onboarding your users has gone down by 99%. So that's like the bottom line. If you, if I've lost you in my, in my, like, previous, like, monologue, the idea is 99% cost reduction in onboarding users, because rather than have to do expensive ethereum transactions, you can do cheaper arbitrum one transactions. And that actually makes a lot of, you know, will actually matter for a lot of people. So that's reason number one. Yeah, let me pause there.
00:14:04.204 - 00:14:17.772, Speaker C: I believe you have more reasons on this point. On user acquisition. How do you envision that playing out over the next year or two, where bridging and connectivity between these chains just becomes far easier.
00:14:17.828 - 00:14:43.296, Speaker A: Presumably, it's a really interesting question. So I think bridging connectivity between chains will become easier. And in fact, that's something which we at off chain labs are actively working on, which is better. Interop technology, we call it arbitrary orbit to signify, like, the chains are like moving together and they're coordinated. It's not just like random chains in the atmosphere. And the idea is that over time, as you mentioned, interop will get better and better. That's from the work that we do.
00:14:43.296 - 00:15:45.390, Speaker A: That's from the work that partners like Espresso do. That's the work like bridging projects like Layer Zero, hop connects across Dot. There's a lot of different people that are sort of eating away at the same problem. And the result's going to be fast forward in a couple of years, we'll have much better interop. That being said, interop between new chains will always be a little bit harder. So what I mean by that is some of these features will just be, okay, you're building orbit chain and you get interop, and we're working on those things, but some of it will be like layer Zero has to support you, or like Espresso has to support you, or some piece of infrastructure has to support your chain. And the idea is there, you're always still going to think about the same way you'll think about eventually I'll just have centralized exchange integrations, but you're still going to think about, okay, but how long will it take for infrastructure to support my chain and will I be able to survive that period? And so the cost of onboarding, particularly in the early days, I think, is not going to fully go away, even as bridging gets better.
00:15:45.390 - 00:16:11.044, Speaker A: I think eventually it will eventually be at a point where any chain, you just launch a chain and it's greatly interop. But I think we're farther away from there then to a point where for the selected chains that these partners select, choose, you'll have better interop between those. And then the question is, okay, just like eventually I'll get centralized exchange support, eventually I'll get better support as part of this. And again, we're working away at this problem to build general interop, but I just don't think that it's going to get to zero costs soon.
00:16:12.184 - 00:16:15.764, Speaker C: I think you were going to go into more number two, number three, number four.
00:16:16.184 - 00:16:53.776, Speaker A: Yeah, I'll just do number two for now, which is, and the second reason is chains have to post data back to Ethereum. It depends how they're configured. They might post all their transaction data to Ethereum. If they're a roll up, maybe they'll send some of their data to a data availability committee like arbitrum, any trust, or maybe they'll send it to Eigen layer, Celestia, espresso, any other of the DA avail, da da solutions that are coming online. But in any event, you're going to have to post data back to Ethereum. You're going to have to post either the actual transaction data or some representation of the transactions data back to Ethereum. And it turns out that in any case, there's a fixed cost of going back to Ethereum.
00:16:53.776 - 00:17:34.671, Speaker A: So it costs money to go back to Ethereum. And there's like an overhead, essentially, of posting to Ethereum. And if you are a, you know, if you don't have many transactions, it's actually going to be pretty expensive. Like if you're doing like transactions like arbitrageum one, which is tens of transactions per second, okay, it doesn't really matter, right? The overhead is going to advertise away, but if you're like a new chain, it's going to have spiky usage or spotty usage. So you might have like 100 transactions during this minute and you'll go like ten minutes without a transactions or maybe overnight in whatever region, you know, you're not popular in whatever, you'll have lower transactions. You're going to have times where you have very few transactions. And, but, you know, if there's one transaction that comes in, but they have to.
00:17:34.671 - 00:18:10.064, Speaker A: But the cost of posting just the blob to Ethereum is a fixed cost of like $50. It's going to start getting really expensive, either for you or for your users. And the analogy I like to use here for layer threes versus L2 is L2 is taking the car over the toll, so you have to go, it might be the only person in your car, but you have to go over the bridge, pay the toll, and that's going to be expensive. For layer three s, you're actually going to take the bus. And what that means is you're not going to ethereum yourself. You're just talking arbitrum one. And all of your data is getting packed together with all the rest of the arbitrum one chain and all the other layer threes that are doing the same thing and you're going through ethereum, it doesn't matter.
00:18:10.064 - 00:18:31.864, Speaker A: Like if you have spotty transaction because you just need to buy your bus ticket and that's sort of, you know, would be my most too compelling reason. So to wrap them up, it's, you know, 99 plus percent reduced cost of user onboarding and take the bus to Ethereum rather than the car carpool lane, which is going to be really helpful, especially when you have one person you don't want to drive a bus in with one person, you know, you sort of get on the bus to everyone.
00:18:31.904 - 00:18:48.814, Speaker C: Else, from value accrual to arbitrum and maybe by extension Ethereum l one. Does it matter? Like, how do you think about the teams using an l three versus an l two? What's more beneficial for value accrual to you guys than to Ethereum?
00:18:49.514 - 00:19:31.930, Speaker A: So this is basically what I was sort of hinting at before, and I mentioned, like, alignment with arbitrary community source. I think it's critical that whether you're building a L2 or layer three, I think the arbitrary ecosystem should be agnostic, right? It should want to support you in whatever's best for you. The way to get it agnostic is to make sure that you're contributing back in either way. In the layer three case, if you're building a layer three in arbitrum one, you're actually not asked to give anything explicitly. The idea is arbitram one is your hub. You're transacting via arbitrum one. You're settling onto arbitram one or arbitranova, and therefore free to use, free to customize, do whatever you want, and you don't have to contribute anything explicitly.
00:19:31.930 - 00:20:37.066, Speaker A: In the case of, hey, you're taking the technology and building a L2 on ethereum, which isn't necessarily contributing back to arbitrary one by its own nature. Anything it could be a competitor's chain says, hey, we like the original technology. We're going to compete with arbitrary one using its own technology, or you're building a layer three on a different blockchain that's not controlled by the DAO, and the DAO doesn't get the fees for that's, I think, where you have to build these explicit alignments. What's the arbitrum license program is set up if you want to build L2 or you want to build a layer three elsewhere, you're asked to contribute back 10% of the chain's net revenue. So like, you take all the, everything you paid out of layer one and subtract that, you don't pay that your costs, whatever your sort of l two profit, if you will change profit, it gets 10% of that 8% to the arbitram Dow and 2% to the developer Guild, that sort of this group of developers that will hopefully emerge. And it's open actually for teams to join that are building the core technology just to make sure the technology is funded. And the idea here is that it's fully customizable.
00:20:37.066 - 00:21:07.458, Speaker A: The meme is arbitrary, which is you can take this technology, you can do what you want. You don't have to ask anyone for permission, but you do have to either explicitly or implicitly contribute back to the arbitrum dao, contribute back to the community that's building it. No one's stopping you. You don't need anyone's permission, but you need to contribute back. But the interesting thing is, if you're like, hey, I want to build a L2, but I don't want to contribute back, you can go to the arbitrum dow and ask for a special case. You're like, hey, can you like, let me build a L2? And I only want to give 9%, not 10%. Like, you can go ahead and make your case to the Dow.
00:21:07.458 - 00:21:30.944, Speaker A: They have the ability to off chain, technically does, too, but we don't intend to. We'd much rather have people go through the DaO route that seems much more community aligned. And the idea being that you go to the Dow, you can ask them for whatever special deal that you want and they can consider it. And, you know, it's really up to the Dow.
00:21:32.684 - 00:21:56.684, Speaker C: How enforceable is that or implicitly is? Have there been cases where someone uses your stack and just kind of doesn't pay? Like, how are you enforcing the 10% at the contract level? I assume not. It's more like soft.
00:21:56.984 - 00:22:59.444, Speaker A: I think, you know, it's early days, so I don't know of any cases of teams that haven't, you know, you know, complied, but I imagine that any reputable team or any team that sort of, you know, wants to build something interesting and build something community, you know, you know, build something for the community will comply. And all early signs that I've seen, again, a lot of this goes through the, down the foundation. So I'm definitely not privy to any, everything. But what I've seen as part of the community is that teams definitely are interested in getting a license. And this is something that's always the case. Like, sure, it's possible someone somewhere will take the code and not comply, and then it's up to the dow and foundation to figure out what they want to do about that. But, like, I think that most reputable teams will want to apply, and particularly here, when, you know, it's not like it's going to the community, right? So it's not going to off chain labs.
00:22:59.444 - 00:23:44.016, Speaker A: It's not even, like going to actually to the arbitrum foundation. It's going actually directly to the 8%. 2% is going to the developer guild, which hopefully will build up to many teams, but 8% is going to directly to the arbitrum Dao's on chain wallet, right? So you're going to see this interesting thing, which is today the arbitrum Daos wallet has, like, a ton of arp in it, also a ton of ETH, because there's like, if you look at last year, just like the chain, profit was like $50 million in ETH. So a lot of ETH, billions of dollars Arp. And you're going to start seeing all these, like, weird tokens, if you will, like going to the deck, because, like, remember, some of these chains are collecting fees and they're in their own tokens. And so the arbitrage from Dow is just going to have this, like, interesting on chain portfolio that the Dow itself can vote on how to spend. So it's very, very transparent.
00:23:44.016 - 00:24:08.900, Speaker A: It's hard to argue and say, hey, we don't want to contribute back to this core community that's funding the technology of the chain. It's not like you're enriching a particular individual. You're literally contributing back to the community and saying, hey, guys, we spent years building this tech. It's community owned. Today, all we're asking you to do is just contribute. You keep 90% of it. Just contribute back something to the sustainability of the community and align with the community, or do it implicitly, or just build a l three at arbitrary one.
00:24:08.900 - 00:24:22.436, Speaker A: That's another option, which you can do. Or if that doesn't work, go to the DAO and ask for a custom deal, and maybe they'll give it to you if you have a case. But I think there's just so much optionality and flexibility there that I think most teams will find an option that works for them.
00:24:22.580 - 00:24:43.084, Speaker B: Steven, how do I make the decision? Let's say we wanted to launch blockworks, some blockworks app or whatever. How do I make the decision between just building an app without a chain? Just building an app on, on like an l two or an l three first. Building an l three first. Building an app chain, like something like Dy DX is done. How do I make that decision?
00:24:43.784 - 00:25:09.040, Speaker A: Yeah, so that's a great question. So number one is the question you should ask yourself is, do you need a chain? And, you know, we sort of, like when we started, gave all the reasons that people might want to customize a stack, you know, to have their own chain. But the truth is, for many applications, they don't need their own chain. They don't need to worry about infrastructure. They might be want to be on a chain with someone else. Like, if you're a Defi app today, you're going to want to be an arbitrum one. You're not going to want to, like, launch your own chain, have fragmented liquidity, et cetera.
00:25:09.040 - 00:25:35.256, Speaker A: If you have great bridging, you're still gonna have some degree of fragmentation. So number one is the question is, do you have a compelling reason to launch your own chain? Right. There are some out there that are sort of trying to push everyone out to their own chain. I don't think that makes sense. The way I see the ecosystem forming is there's going to be the general purpose chains that are long term, relevant, long term, very important. This is where arbitrary one is leading, is leading today. And then there's going to be the application chains or chains where, you know, for applications that it may.
00:25:35.256 - 00:26:00.824, Speaker A: And it could be ecosystem chains. It could be like, okay, we're building a gaming chain. It doesn't have to be a single application. More special purpose chains, if you will. So that's the question, which is like, why are you building your own chain? And does that make sense? And you might have good reason, but you should be able to articulate that reason is number one. And then the question is, okay, so I want to build my own chain. What do I do? And I view l three, and app chains is actually very like, basically the same in the sense of the l three.
00:26:00.824 - 00:26:32.594, Speaker A: If you take the arbitrary, morbid technology, you can do whatever you want on the chain, but you can also sort of customize it as you want, and you can restrict it as you want. So, for example, if you want to say, hey, we're building the blockworks chain, but. And I'm not trying to, I have no knowledge here, so just, just, yeah, just spitballing here, but we're building the block, the blockworks chain. And, you know, but we actually want to restrict it. That only blockworks can launch apps on the chain. Like, imagine, like, it's an open chain, permissionless chain. Anyone can go ahead and use it, but like, these are the only applications on the chain.
00:26:32.594 - 00:27:07.698, Speaker A: So you can actually restrict it in that way without compromising the security by ethereum part, without compromising the anyone, any user can interact with it, and you can basically have a restrict, more restricted application. And why might one want to do that? Because you might say like, well, I really want to control the congestion of the chain, so I don't want someone launching something else on the chain. And then all the blockworks users are getting ingested because this other random app that doesn't even belong here is now using all the block space. Or you can be like, that would be awesome. I don't care who builds here, we just want to be blockworks branded. That's fine too. But my point is, you have a lot of customizability with the arbitrage and warped stack.
00:27:07.698 - 00:27:18.054, Speaker A: So I would say the difference between open l three versus app chain is very much how you configure the stack, but it's the same stack.
00:27:18.394 - 00:27:31.934, Speaker B: Is it fair to say this might be an overly broad categorization, but the l two is for general purpose scaling and l three is more for, I guess you could either say customized functionality or customized scaling.
00:27:32.454 - 00:28:12.332, Speaker A: So that might emerge in how people are using them. But actually from a core technology perspective, the l two stack and the l three stack are on the surface. Like in terms of the developer and user surface, literally identical. So there's nothing you can do on an l two that you can't do in an l three and vice versa. So from an ecosystem development perspective, we may very well see that those who have a more broad vision to have it be a general purpose chain, to be like, okay, we're going to be a L2, because we think that that's like how you position yourself for a general purpose. And those who have a vision to sort of be vertical specific or applications specific might tend towards l three. Although we've seen a lot of l three s that are very broad in their ambitions.
00:28:12.332 - 00:28:46.934, Speaker A: You know, you have, for example, in gaming, arbitrum has a ton of gaming l three s that are not just that one game, but are actually sort of, you know, looking to build gaming. So think about like game publishers, where they're attracting, you have like treasure chain xi ape chain muster high topia. There's like ten or so different gaming chains in the arbitrary ecosystem as an example. So that might emerge as a pattern of usage, but from a technical level, there's like any, any chain that's built as an l two could be built as an l three. Any chain that's built in l three built as an all two.
00:28:46.974 - 00:29:20.894, Speaker B: Technically, if I'm playing this out far enough, like not next one to two years, but like, five to ten years. If I'm in your, if I'm in arbitrum's shoes, at some point you got to make the, you got to consider, actually, this is going to maybe seem crazy, but getting off of Ethereum, and I'd be curious if you've thought of, like, how you think about that as an l two and, like, how you think. Do you think that l two s and arbitrage specifically, or anyone else will eventually try to launch their own l one and basically say, look, we use Ethereum for security today, but we don't need them anymore.
00:29:21.434 - 00:29:50.070, Speaker A: So that, to me, would be like a big violation of, like, everything, you know, that I care about and the reason we set things up, I can tell you. So earlier, I alluded to this whole conversation we're having now between l two versus l three. I had l one versus l two. So to give you a little more context there, that was in the context of 2018 fundraising, when we were trying to fundraise, say, hey, we're doing this, like, radically new thing at the time. We're building a L2 blockchain. Like, who else is doing that? A general purpose L2 blockchain. No one else was doing that at that point.
00:29:50.070 - 00:30:29.708, Speaker A: And they were raising funding for that. And we saw a lot of pushback, which particularly from investors, some investors, obviously, we found some really great investors that believed in the vision, and here we are today. But we had some investors and some very smart people push back and say, it doesn't make sense. You should build your own chain. Why would you always be subservient to Ethereum? That doesn't make any sense. What are you doing? And our response was like, and it's very aligned with what later became Vitalik's role of centric roadmap, which is, no, we believe that Ethereum has, you know, is the most secure and has the strongest story to be that security layer and be that secure blockchain. We also think it needs to scale.
00:30:29.708 - 00:31:14.312, Speaker A: And that's the, that's what we want to do here. So, you know, my point is, like, it would have been a lot easier to just start there and build, build the layer one today. That seems funny because L2s are all the ways and all the way it was moved to the L2s. But, like, it was always a principle based decision of, we should add to scale the scalability of Ethereum because we believe in Ethereum security, because you believe in Ethereum decentralization. So I personally would fight very hard against, I should say, I'd be very against chains like arbitrum becoming their own blockchains. I think Ethereum is contributing a lot to them. And I actually think Ethereum is also doing a lot to reduce its, its fees and its costs to make this environment more competitive for rollups and make it that roll ups.
00:31:14.312 - 00:32:30.252, Speaker A: What I mean with that is an environment where rollups can use Ethereum for security and compete more. But the other thing is, I do think that we have to be careful as an ecosystem because, yes, there definitely probably will be chains that realize that, hey, they can bootstrap as a layer to gain a community and then sort of, I'll say rug, you might agree or disagree with that term, but like, sort of drop Ethereum. I think that that's a very dangerous thing, which is why I've always been an advocate of like, hey, guys, we have to. And I'm not suggesting that any particular other chain is doing this today, to be clear, I'm not like pointing fingers at anyone, and I have no knowledge of anyone. That is, I just think as we proliferate to 2030, 40, 50, hundreds of chains, will one of them have this idea? Absolutely. And that's why I think building out the core security makes a lot of sense. Because if you're arbitrary today, you're like, hey, we've been, you know, this chain has been posting fraud proofs on Ethereum, has been like, actually secured by Ethereum since its launch, where if you take another new chain that launches today and it doesn't have anything security, you know, anything related to security, Ethereum, it's a lot easier to go to your community and say, hey, you know, it turns out we're paying all these extra fees to Ethereum, but it's actually not providing us anything in this case because, you know, some roll up might not have the core technology that actually provides us.
00:32:30.252 - 00:33:20.294, Speaker A: So that's a lot easier to go and say, hey, let's turn that off. But if you're actually getting the benefit of Ethereum, I think it's harder to make that argument because I think there's a ton of value from there. So again, I'm not suggesting that any chain that I know of today will do that or is doing that, or I suspect them of doing that. But I do think that as you have chains that are not actually benefiting from Ethereum, but are paying Ethereum for a service that they're actually not utilizing, that is something which we as a community should be careful about and make sure that those that are actually building on Ethereum are actually getting the benefits of it and have a community that cares about the benefits of it. And if they don't, then they can go build a layer one. But anyway, that's my thought, which is I'm very against arbitrary and other big L2 doing that. I think Ethereum provides a ton and I think it's worth the premium that you pay for Ethereum security.
00:33:21.474 - 00:33:34.874, Speaker C: How would you articulate the main benefits of building on Ethereum? And could you point to certain examples where a chain, not arbitrum, may be using Ethereum, but may not be getting the benefits that you are getting?
00:33:35.774 - 00:34:01.578, Speaker A: I think so the core benefits of using Ethereum are there are actually two. Number one is the security and decentralization. So actually building a L2 and actually being secured by Ethereum. And that means it could be a validity roll up. Like a zk roll up where you're posting proofs to Ethereum and having Ethereum verify them. ZK proofs. It could be an optimistic role of garbage in one where there's a fraud proof mechanism that if engaged, will get resolved on Ethereum.
00:34:01.578 - 00:34:50.055, Speaker A: And that's where Ethereum is, you know, and also chains like arbitrary one that are actually using Ethereum as a data availability layer, where Ethereum is actually giving guarantees. It's a lot cheaper today because of 4844, but still Ethereum is providing that core service. I think that's where these chains are using Ethereum and they're actually benefiting from it. And it's a type of benefit, like you don't think about it on a day to day basis, but you know, as there's a proliferation of new chains trying new things, eventually you'll understand, you know, we'll see. Okay, like, I see what happens, you know, I hope nothing goes wrong ever. But like, the point is, having security is a thing that like, you don't appreciate until you actually appreciate it, until you need it. Hopefully that time never comes for any chain, but I think it's something that's worth paying for and something that like I'm very, very supportive of.
00:34:50.055 - 00:35:11.775, Speaker A: And you get that by actually having a proof system on Ethereum. Data availability on Ethereum. That's not to say, to be clear, that I'm not a favor of. I don't think there's a trade off space. Like I'm not anti at all the data availability space. I think, you know, we even in the arbitrary ecosystem built arbitrary many trust, which was probably the first live alternative DA. And there are a lot of great teams like Espresso Eigen Layer.
00:35:11.775 - 00:35:46.004, Speaker A: Celestia Naira Vail, you know, really, a lot of that zero gravity, a lot of these teams that are building alternative das that, I think they have a point, they have a, you know, there's a point in the tradeoff space where it makes sense to use them and. But I just think there's a gamut of services that Ethereum, that Ethereum, that Ethereum provides in the case of arbitrage one, it's data availability and also settlement and just core security that if there's some dispute, Ethereum will referee that and resolve it.
00:35:46.834 - 00:35:52.906, Speaker C: Fair to say that if you don't have fraud proofs, you're not getting any of the benefit as a user from the security of Ethereum.
00:35:52.930 - 00:36:35.634, Speaker A: L1, yeah, you may still be getting the DA. So those are, you might still be putting your data in Ethereum. So you know your data is there. But if you don't have fraud proofs built out Ethereum, there's going to be a centralized, generally centralized in the ones that I've seen a centralized, let's just call it entity or sequencer in there in this case that basically decides the state of the chain. And if they decide to be dishonest or if they get hacked in some way where someone else decides to be dishonest, that now is now empowered, you can't go ahead and say, hey, theory, I'm like, this is clearly wrong, the rules don't allow this. Can we resolve this? Because that mechanism just literally isn't there.
00:36:36.374 - 00:37:06.856, Speaker C: Can we go into this? Because you and I have talked about this at length. There are certain l two s that don't have fraud proofs and they've been deployed for many years or just been around for a while or are securing a lot of value. You guys, just what is it about fraud proofs that makes it so difficult to build and to deploy and then contrast that to centralized sequencer? Because I think people conflate the two. They're vastly different, in my opinion. But let's go down this rabbit hole.
00:37:06.980 - 00:37:46.700, Speaker A: Yeah, absolutely. So fraud proofs are actually kind of funny because on the surface they're like very, very simple. Like you look at, like ZK proofing and you look at fraud proofing and fraud proof just looks very simple. But there's a lot of different edge cases and protocol cases that make them, you know, very delicate. And, you know, we've been studying these systems for years now, you know, close to a decade actually, from the earliest days. And there's still things that we're learning and figuring out in the arbitrary, bold protocol is a really nice protocol, but that's like the third or fourth generation of arbitram fraud proof protocols. And there's a lot that we figured out along the way, and there's a lot of tricky cases and gotchas.
00:37:46.700 - 00:38:25.954, Speaker A: So there's definitely a lot of complexity in figuring these things out, figuring these things out. But it's a lot more the nuance of the protocol and different classes of attacks that could happen. And what happens if some bad actor comes in? How do we know that the good actors can and can win? Are there any edge cases? That's where a lot of the complexity comes in there. But to your second question, there are two roles in the arbitrary ecosystem, or really in any role of ecosystem that people often confuse. And I'll use the arbitrary terminology, but again, in any optimistic world up, there's going to be. These are two roles that exist, even if they're called different things. One is the sequencer.
00:38:25.954 - 00:38:52.520, Speaker A: And the sequencer's job is to, as you said, sequence transactions. So it orders transactions. Transactions come in, the sequencer sort of gives an ordering, and the sequencer posts those transactions on chain. Posts these batches of transactions on chain. There's a second role called the validators. And these are the ones who actually provide the security of the chain, and these are the ones who will engage in the fraud proof system. What the validators do is they don't actually talk to each other.
00:38:52.520 - 00:39:21.910, Speaker A: They don't even talk to the sequencer. They just look at the chain and they see this feed of transactions the sequencer is posting, and they sort of execute it and get the result. And one validator goes ahead and posts the result on chain. And other ones say, do I agree or disagree? If they agree, they do nothing. If they disagree, then they'll go ahead and engage in the fraud proof mechanism to come out to the right decision to figure out what the correct execution is. But the idea is that the validators keep everyone in check, including the sequencer. All the sequencer is doing is it's posting the transaction routes on chain.
00:39:21.910 - 00:39:45.376, Speaker A: It's not telling you what the result is. It can't take money out of your wallet. It can't post a bad transaction if it includes a bad transaction. It'll just get ignored by the validators, right? If the sequencer is kept in check by the validators, the sequencer is just sequencing and ordering transactions. Now, people always say, decentralize the sequencer, and there is something to be decentralized there. And I'll get into that. But I think a lot of times people misunderstand the thing.
00:39:45.376 - 00:40:23.814, Speaker A: When you say decentralized sequencer, they think the sequencer is the dictator and can do everything. In actuality, there's the validators that keep the sequencer in check. In the arbitrum case today, there's about a dozen validators, including larger institutions like Google and consensys, and off chain labs, web two and web3 big players that are validating the chain. The goal with bold is to open this up to everyone. But even today, there's already a really nice distributed set of validators. You just have to trust one of them, as long as you trust that all these twelve don't go ahead and collude. Ethereum foundation and there are a lot of different, like, you know, representations of really strong companies with strong beliefs.
00:40:23.814 - 00:40:55.014, Speaker A: Again, opening up is better, but arbitrary. Today, validation is already distributed, the sequencing is still centralized. And what that means is this ordering is centralized. So what does that mean? It means the arbitrary sequencer, if it wanted to reorder transactions, it could do that. It doesn't. In practice, it does a first come, first serve ordering, but it could go ahead and reorder transactions. Can it censor? It can delay you, but it can actually censor long term, because you can always go on chain and say, I'm going to bypass the sequencer and post my transaction on chain now.
00:40:56.314 - 00:40:58.174, Speaker C: But that's only if you have fraud proofs.
00:40:59.954 - 00:41:32.142, Speaker A: Well, the forced inclusion that you can actually. So if the sequencer doesn't and you can force it to include, you could technically have a forced inclusion probably without fraud proofs. But I don't know how you exactly enforce it, but there may be some design there. But certainly the validators are only, certainly the validation is only if you have fraud proofs. The fact. So in some of these other systems that you sort of alluded to before that don't have fraud proofs, it works very differently. There are no validators, because there's no mechanism for them to engage or become, or there's no recourse.
00:41:32.142 - 00:41:49.810, Speaker A: So there's no system of validators. The sequencer is the dictator in that case. So the sequencer doesn't only say, hey, here are the transactions. Sequencer also says, and by the way, here is the result. So it turns out the sequencer is saying, yeah, Steven's wallet, you know, minus one ETH. Santiago's wallet, plus one ETH. That's all done by the sequencer.
00:41:49.810 - 00:42:20.580, Speaker A: So the sequencer decides to just like make stuff up and like take money out of my wallet. It can do that if the sequencer decides to push bad transactions that aren't valid. It can do that if you don't have a set of validators. So that's why I think, and that in these other systems, that role is played by the sequencer. And that's why I think when a lot of people say decentralized sequencer, they're not thinking about the important but more narrow issue of, hey, can we have a distributed protocol that makes the sequencer not reorder? And by the way, we're working on that. We're collaborating with espresso systems on that. It's a high priority to get that.
00:42:20.580 - 00:42:31.568, Speaker A: But I think that's a relatively smaller issue than not having validators as a sequencer basically serves as a dictator. I think people sometimes confuse those two again.
00:42:31.616 - 00:43:05.704, Speaker C: And why would you attribute to, like, I appreciate some of the criticisms I've heard about arbitrum is this point around you have to trust this group of validators, which is a fair point. Look, I mean, you progressively, but it's way better than systems that don't even have these, this group of validators. Again, the question is, like, why hasn't, like, optimism some of these other players, like, why haven't they built this group of validators? And I mean, I appreciate maybe they have recently, but it took them a long, long time. Like, I'm just kind of curious, like what makes it so hard?
00:43:07.364 - 00:43:08.412, Speaker A: They still have, oh, no, no.
00:43:08.428 - 00:43:10.172, Speaker C: It's on bait. It's on testnet, I believe.
00:43:10.268 - 00:43:25.364, Speaker A: Yeah. So, right. So on main net, they don't have any fraud proofs that are deployed, to my knowledge. And I think they're working on it. And I, and I hope that they're working that they're, they know that they'll be successful. I really do. And I know that they have a lot of, you know, good people trying, trying to work on this.
00:43:25.364 - 00:43:50.798, Speaker A: So I think there are two things to say. Number one is it's actually really complex. There was an interesting thread on Twitter, which I know because I lived it, but actually just I saw a few days ago, which actually went through some of the history of fraud proofs. And the answer is actually, if you go back two or three years, they did build it. There was this historic debate between two different types of fraud proofs. There was what we call interactive fraud proofs. That's what was in the initial arbitrary paper and we've always been building.
00:43:50.798 - 00:44:22.360, Speaker A: And then there was what's called one shot fraud proofs, and we were always in the interactive camp, and they were in the one shot camp. They actually built one shot fraud proofs and deployed them on Mainnet, I think in, like, 2019, 2020, or 2020 or so, maybe 2020, 2021. But they had, like, critical bugs in it, so they had to turn them off. So that's. And then. And then they sort of, you know, the community and everyone sort of aligned to. Okay, arbitram's method of interactive fraud proofs is the correct way to do fraud proofs, and everyone's aligned on that.
00:44:22.360 - 00:45:19.114, Speaker A: And then I think they've been buildings ever since. And I know that they've had, you know, some progress recently. Again, I'm hopeful that they do this, but I think it's like, if you actually look at the history, you can find, like, passionate debates between me, Harry, I think Vitalik's definitely gotten involved at times on Twitter, on Reddit, going back to, like, 20 some good archives. I should actually pull up one day, um, where, like, you know, people were passionately debating these two different ways of building fraud proofs. And we were always, you know, and everyone's sort of come around to today to, okay, this is how you build fraud proofs, which is interactive fraud proofs. The fraud proofs that sort of, you know, we've been building since the initial arbitrum sketch in 2014, but it's not that they haven't tried or even deployed something. It's that sort of, you know, they, I guess in the consensus, you now went down the wrong path and retraced and are now going down a different path, which is the path that we went down.
00:45:19.774 - 00:45:32.074, Speaker C: Does anyone try to. Juan, have you open thought about open sourcing this interactive fraud proof tech, how people try to look at it and copy it as opposed to try to build their own flavor of it?
00:45:32.814 - 00:46:17.516, Speaker A: The code has always been public and source visible, so anyone can look at it. I have no knowledge of anyone trying to copy it, but I haven't really dug too deeply into trying to figure that out, but not to my knowledge, but definitely some of the core ideas which are not part of the coda. So I'll give you an example. One of the big protocol breakthroughs that we figured out back in 2021 was to use chess clocks as part of this protocol. I remember being very involved in this and having this idea of, hey, use chess clocks. The idea is you have two challengers, and they have, like, variable timers. Before that, we thought that everyone sort of had a fixed timer, and it became problematic because the protocol just got very long.
00:46:17.516 - 00:46:34.186, Speaker A: Everyone had this clock, and then it was like this aha moment. I remember it, like, very well. I was like, oh, why don't we just use chess clocks? And actually, this came to me when I was watching this movie. I forget it was a Netflix, like, chess documentary about this. I forgot what it was called. Do you remember what I'm talking about? There's like, this girl, but.
00:46:34.210 - 00:46:37.250, Speaker C: Yeah, yeah, well, it's not a documentary. It's a show documentary.
00:46:37.282 - 00:46:57.466, Speaker A: Sorry, sorry, the short series. Yeah. So I'm watching the queen's gambit, and that's when, like, this idea came, came and like, okay, chess clocks. That's the answer. Boom, we got it. We figured it out. And now if you look at, like, every competitors protocol, they all talk about just chess clocks, which is fine, right? That's not like, you know, you know, it's not part of the code.
00:46:57.466 - 00:47:20.124, Speaker A: It's not a patented idea. It's just the idea. But my point is there are definitely, like, the ideas have been shared. Arbitrary has been pioneering interactive fraud proof since 2014. And the ideas and the years of work that we put in it is no question contributing to every protocol that's building interactive fraud proofs today. But that's fine. That's actually a good thing, in my opinion, the exchange of ideas.
00:47:20.124 - 00:47:47.274, Speaker A: And I think as an ecosystem, I'm in favor of collaborating more and building things and finding shared resources. So that's no issue in terms of the other question of. So the code is visible today, and you can use it as part of the arbitrary orbit program, which means if you're building a L2 and you want to use it, all you have to do is join the arbitrary morbid program. You can use the nitro technology stack. You can use the fraud proofs, and no problem. You can use it. So, yes, it's visible.
00:47:47.274 - 00:48:08.938, Speaker A: Yes, you thought about open sourcing it. But we believe the best model is community source. And dozens of chains are using this today. These are layer threes, these are L2s, are using the arbitrary orbit technology. And if a competitor wanted to go ahead, you know, if a competitor on a different stack today wanted to go ahead and say, hey, Arbitrum, you know, we just want to use your fraud proofs. They would absolutely be able to do that if they just complied with the.
00:48:08.986 - 00:48:12.214, Speaker C: Orbit license program, because they would need to find validators.
00:48:13.314 - 00:48:22.494, Speaker A: They'll need to find validators. Yes. For it. Or they can launch arbitrary and bold, which will sort of be open to open. Open to everyone.
00:48:24.774 - 00:49:02.520, Speaker B: All right, I mentioned them in the pre roll now I'm going to bring them up again. It's arbitrum. Santi and I are really fed up with these high fees, and we're really excited to have teamed up with Arbitrum for the next couple of months on empire. As the leading Ethereum scaling solution, Arbitrum now powers hundreds of decentralized apps across defi, herps, nfts, gaming, and a whole lot more. The team has showed us everything in the ecosystem, both now and what's to come, and we're really, really excited about it. Arbitrum allows both daily users and developers to interact with Ethereum at scale with low fees and faster transactions. The way the team got me excited was through portal arbitrum IO.
00:49:02.520 - 00:49:47.326, Speaker B: So my call to action to you is to get started by visiting portal arbitrum IO. Go experience on chain like it was meant to be. This episode is brought to you by Monad Monad's thesis is simple. The EVM is here to stay, similar to JavaScript and web two, but unfortunately, today's EVM lacks the high performance and the scalability that developers need to make certain applications possible. Monad addresses these concerns in these bottlenecks while preserving seamless EVM composability. For application developers, there's a seamless transition to Monad, as the Ethereum RPC API allows for really easy portability. And for developers, Monad can support 10,000 real transactions per second with their unique parallel execution environment.
00:49:47.326 - 00:50:06.590, Speaker B: And of course, there's full compatibility with EVM bytecode. Monad's internal devnet is live public. Testnet comes out soon. You can join Monad's journey in two ways. One, go follow them. They're on Twitter at monad. M O n a D, underscore X Y Z, and also join the monad discord it's discord gg monad.
00:50:06.590 - 00:50:50.490, Speaker B: Big thanks to Monad for sponsoring Empire. Hey everyone, Jason here. I know you've been hearing a lot about the intersection of crypto and AI, and that's why I'm really excited to share our newest partner and sponsor at Empire, Skale, a high performance modular blockchain that's revolutionizing gaming and AI. With zero fees and instant finality, Skale's unique architecture allows for massive scalability and has already saved users over 6 billion in gas fees. The five main takeaways that you need to know for Skale, 10 gas fees. Two, Skale has instant finality and lack of mev. Three, the zero gas fee model of Skale is really important for blockchain gaming adoption, as gamers don't have to pay transaction costs or have the SKL token.
00:50:50.490 - 00:51:19.600, Speaker B: Four, Skale is multi chain. This design allows for nodes to be combined to create chains and for individual sub nodes to actually be removed and relocated, which creates greater security and collusion resistance. And five, scale has become a really good fit for AI dapps because they're fast, automated zero fee transactions. Big thank you to scale for sponsoring Empire. We're excited to partner with you guys. Bridge over to scale. If you're listening to this at scale space forward slash ecosystem, follow the journey along with scale on x.
00:51:19.600 - 00:51:24.444, Speaker B: At scale network. That's at scale network. Big thanks again to scale for sponsoring empire.
00:51:26.504 - 00:52:00.324, Speaker C: I want to take us back to just the builder mindset. We've discussed a lot about the trade offs, the decision tree process of building your own app chain. Your l two, using arbitrary merchants. Your l three. What would you say to someone that may just come in and say, hey, like this kind of l two, l three bridging sounds really complex from the user standpoint. Why don't just go build in some of these higher throughput chains like Solana, Suisay, Aptos, Monad down the road? Like, what would you say to that?
00:52:00.904 - 00:52:23.776, Speaker A: Yeah, so I'd say a few things. Number one is like, I think the entire space is one of experimentation. So you're not going to hear me say a bad word about, like, these guys. You know, they're taking a different approach, they're trying a different thing. I can tell you why I think the Ethereum approach, I think, is a better idea. What? I think it will live out longer. But, like, you know, Solana is a differentiated experiment.
00:52:23.776 - 00:52:58.864, Speaker A: There's no question about it. They're doing, they're trying something else, and they have a really great community that's building this with them. And there's no question about that, that I have. I think that they are definitely doing something interesting. Do I think it's the quote unquote right thing? No. I think that Ethereum finds itself on a different point of this trade off when it comes to decentralization, the requirements to run a node, the stability of the core, layer one technology. I like those benefits of Ethereum more, and I think that there's, you know, there's.
00:52:58.864 - 00:53:31.160, Speaker A: It's worth the sort of trade offs. But the point is, I'm also pragmatic about this. So in 2022 or so, we were having a lot of conversations with gaming teams, and they were saying, like, we can't come to arbitram one. It's just too expensive, right? Because we were at that point, say, 90% to 95% cheaper than Ethereum. And while a couple of cents per transaction fee is great for a defi app, because you can trade $100 and your fee is $0.05, that's perfect. Even for moderate size trades, it was really, really great.
00:53:31.160 - 00:53:54.432, Speaker A: But if you're game and you're paying a couple cents every time you do an on chain transaction, a gaming transaction, that gets very expensive very quickly. So we understood that. Well, and what happened was these people were all going elsewhere. They were leaving Ethereum and going elsewhere. And that's where it's sort of arbitram Nova came in. That's where we said, okay, we need an alternative da solution. We need something that gets them the most of the benefits of Ethereum, but also gets them to the price point where they can be.
00:53:54.432 - 00:54:27.144, Speaker A: And the idea was because it wasn't like we were sitting in, like, our ivory tower saying, ethereum, guys, you got to build Ethereum. I don't care if it's more expensive, like you need. They're like, all right, well, I can just shut down shop because no one's gonna play my game if I'm gonna pay. It just won't work. It's not fun, it's not interesting. I won't have a community, and you have to sort of meet those two things together. And my point is, like, if you look at Ethereum before L2s, like arbitrary, or even if you look at L2s, like arbitrary before EIP 4844, I think we're about to do it again with arbitrary stylists about to reduce fees significantly again for those app to use stylists at each point.
00:54:27.144 - 00:54:56.392, Speaker A: There are points where teams can say, you might have great reasons, Stephen, why I should use this technology, and you can lecture me on that. If it doesn't meet the price point of my users, if it doesn't actually get me to where I need to be on a business standpoint, it doesn't matter. The conversation is not worth having. And that's why I think we've narrowed that gap massively. And today, because of the work we've done as L2 teams, but also as layer one teams. Building EIP 4844. Building the Ethereum roll up centric roadmap.
00:54:56.392 - 00:55:26.070, Speaker A: Building arbitrum. Building out the core technology. It becomes a lot easier for a lot of teams to say, you can build on a L2 or layer three, but ultimately be secured by Ethereum building the Ethereum ecosystem, and you don't have to sacrifice. You don't have to make those sacrifices today because I get you. I get that if like, it was like ten x more expensive, you, you're probably better off on an alternate alt layer one because it's better for you. Like, like, we get that. And I never judge a team for saying that, but our job was, okay, how do we narrow that gap? How do we meet people and say, okay, you can actually have your cake and eat it too.
00:55:26.070 - 00:55:55.034, Speaker A: You can be in Ethereum, but you can also run a business and not have to worry about, you know, being out competed by someone else. Alt layer one. I'm not saying that we'll see how the fees ultimately land with Ethereum. There's still some market dynamics that may change over time, particularly as more usage comes up and more demand for blob space. There's a lot of open questions, but I think we've done a very good job narrowing that gap. So teams that care about Ethereum don't have to make the ultimate sacrifice, if you will, to build there. They're actually able to succeed and build there at the same time.
00:55:56.014 - 00:56:01.714, Speaker C: And this my last question on this point. I'm sure you have others, but how important do you think composability is?
00:56:03.174 - 00:56:50.264, Speaker A: I think composability is very important for a lot of applications, probably less important for others. And I think this is to Yano. Your question before is, do I want to build my own chain or do I want to build an application on Ethereum? One of the things which I said before is why do you want your own chain? But the other thing question you should ask yourself is do you need composability? What level of composability do you need? Do you need synchronous composability? Do you just need asynchronous compatibility or really good bridging? But I think it depends. So I'll take DeFi, for example. I don't see DeFi like fragmenting because I think there is a network effect there. The fact that you have $19 billion in tv on arbitrary today is very attractive for DeFi protocols. The fact that you have every other Defi protocol in arbitram one today is really attractive.
00:56:50.264 - 00:57:12.672, Speaker A: I'm building a DeFi protocol. I want to worry about one thing. How do I build the best product that will attract this existing user base to my app? What I don't want to worry about is I want to build a great product. And now I have to figure out how to get users on the chain in the first place and get liquidity here. And then once they're here, I got to. It's just like, you don't want to deal with that. You want to be composed with other apps, you want to be with the user.
00:57:12.672 - 00:57:46.054, Speaker A: And the same thing's for gaming, by the way, too. There's a trade off here. So some games might be like, okay, we want our own chain because we don't care about composability. Others might be, well, we want discoverability of our game, we want to be coalined. So it really depends on what the game is. How in game assets are used? Are they bridged? Where do they need to live? There are lots of different questions, but ultimately some applications need lots of composability, others can live on an island. And Defi is certainly in the composability first bucket.
00:57:46.054 - 00:58:09.414, Speaker A: Gaming can go either way, but you can definitely imagine a game that doesn't care about being sort of in a little bit, a little bit isolated. It doesn't want to be too isolated, but it's just an extra click and then users can get funds there. Okay, fine. That's pretty fine for many games. So it really depends on the application, but also on the flavor of the vertical. So different verticals will have different tolerance for proposability.
00:58:10.754 - 00:58:33.104, Speaker C: And I said it was my last question, but I am curious, just to get your thoughts around, why do you think Coinbase chose the op stack, particularly all the things that we've talked about for operations and everything else, like how is that give us some insight into that process? Because people are really excited about it. Obviously Coinbase is playing a big role, and they built some really good tech, their wallet and whatnot. But I'm curious why they didn't build on arbitrum.
00:58:33.524 - 00:58:59.226, Speaker A: So I can't speak for them. I don't know why they. Why they didn't build an arbitrum. I don't believe that before the decision was made, I wasn't involved in a conversation where they were seriously considering it. So I don't really have those details. I don't know of a diligence process that we were a part of, but I'm sure that they took on considerations internally. The other thing is, which they've been very public about.
00:58:59.226 - 00:59:35.560, Speaker A: To their credit, there was Coinbase got, I think it was something like 2.75% of the op token supply for that decision. So there was definitely a financial aspect to it, which again, they've probably disclosed, and I could be wrong on the exact number, but that's in that ballpark of my recollection. That's a lot of money today in the hundreds of millions of dollars. So I think there were probably a lot of factors at play. But the interesting thing is, moving forward, coinbase obviously is on the op stack and base is built on the op stack. And that sort of just is what it is.
00:59:35.560 - 01:00:18.454, Speaker A: But I think that there are really interesting things happening on layer three where the arbitram stack is not only powering, layer three is an arbitrage one, it's actually powering. As I mentioned at the beginning of the pod, the biggest layer three is on base. Like a degen chain is an arbitrary, morbid chain. So I think there are actually what happened in the past, I would call what are under the bridge at this point. But going forward, I think that there are a lot of compelling cases where, and it could actually make sense, there are certain, Coinbase obviously has a great brand and there are certain applications, certain verticals they're going to go after. And you might see some developer that says, hey, I want to be on base, but I also want to have the best technology from IO layer three. And that's fine.
01:00:18.454 - 01:00:57.518, Speaker A: I think arbitrary one obviously has its strong points, and it's the leader in Defi, the leader in gaming today. But there definitely could be and will be chains like dj and chain that say, hey, we want to build on base. And what we say as a community, me as part of the developer community, but also part of the broader community, is we support that. And we'd love ways to scale Ethereum more generally. So it doesn't have to just be, you know, our goal is to scale Ethereum and to really make the arbitrary stack useful for, you know, scaling Ethereum generally, and super excited to see the many, many ways that it's been used.
01:00:57.646 - 01:01:05.422, Speaker B: Santa, you want to know the reason? I'm going to get a lot of shit for saying this study. Andreessen Horowitz yeah, yeah.
01:01:05.518 - 01:01:11.718, Speaker C: I mean, I think Coinbase Ventures made of also invested in optimism. I forget, but yes, only a 16.
01:01:11.766 - 01:01:14.062, Speaker A: C hash is actually invested in us as well.
01:01:14.238 - 01:01:53.314, Speaker C: Yeah, yeah. Which is. Yeah. But yeah, I still remember like, they certainly rolled out the red carpet for optimism and withdrawals and it took them longer for optimism. But not to go down this rabbit hole further. I do just as a follow up in this scenario of Degen chain, in a world where like, if you're an app that is deploying an l three using the arbitram stack, but using optimism as an l two, how does the fraud proofs in the current state actually work? Because optimism doesn't have them. But you may be using an l three where you're using the tech that has it.
01:01:53.314 - 01:01:56.826, Speaker C: So kind of like my brain's been fried.
01:01:57.010 - 01:02:22.564, Speaker A: So the number one is it depends on the configuration of your chain. The original orbit stack says you can use fraud proofs, but you can also deploy your chain where you, you just have one validator who's yourself. I'm not saying that you do, by the way, that they do. I'm just saying. So for any orbit chain, you have to not just look at the tech stack says what you can do. It doesn't say what is automatic. Just because someone's using the orbit chain doesn't mean that they have a dozen validators that are independent.
01:02:22.564 - 01:02:59.344, Speaker A: So you have to look at that always. I actually don't know exactly the configuration of these gen chain. So this is not like a comment on them. It's just a comment generally that you should look at the deployment of the technology as well as the core technology. But assuming someone does, you know, they want to launch with like live fraud proofs and the like, and they have a nice set of validators or, you know, they'll use bold soon and they'll open up validators to everyone. If you're, what that means is if you're, if you're a layer three on a L2 that doesn't have that, so you're just basically relying on the L2 to resolve your disputes. But then, and they, and they become sort of, you know, your ultimate referee as well.
01:02:59.344 - 01:03:27.380, Speaker A: So. Right. The layer 2 may be centralized. So you have a whole, you'll have a decentralized protocol that when it sort of has a dispute, it will ultimately be resolved by the rules of L2. And if that's centralized, then ultimately that means your referee will be centralized. So it's kind of could lead to, lead to some funny cases. But I think in the long run, ideally, the L2s that are powering layer threes will themselves ultimately be decentralized and everything will sort of be flowing down to ethereum.
01:03:27.380 - 01:03:38.576, Speaker A: That's at least the goal. But certainly you can imagine combining these technologies in ways where the decentralization ends up at a centralized point. Yeah, yeah.
01:03:38.600 - 01:03:48.872, Speaker C: You always look further down at the stack where the settlement is happening. And if there's the security, that's like the weakest link, so to speak. There are no security farther down the stack. You're kind of screwed.
01:03:49.008 - 01:03:58.446, Speaker A: Exactly. So your path to Ethereum is the weakest link from the layer three, you know, down to, down to ethereum. That's exactly right, Stephen.
01:03:58.470 - 01:04:09.238, Speaker B: If we fast forward a couple, like when. So we have layer threes now, people are going to build on the layer threes. So then there'll be l four s. When does that game end or does it not end? And that's totally fine.
01:04:09.366 - 01:04:38.014, Speaker A: So I think a lot, a lot of the core benefits. So if you remember those two things I rambled on earlier on, those two core benefits of building layer three is the interesting thing is those, like, you basically get all that from being a layer three. If you build a layer four or five or six, it doesn't really buy you much. And just to recap, those two things were the 99% reduction in onboarding cost. That's because, you know, L2s are already. Already get you there. Layer threes aren't 99% cheaper than L2s.
01:04:38.014 - 01:05:04.986, Speaker A: And, you know, there are other reasons to get you there like this. Right? That what? So, so the idea is you're not going to have that benefit on layer four or five or six. You'll have the same benefit as layer three, but it doesn't sort of compound that way. And similarly, taking the bus to ethereum, the same thing happens. You can join the bus from a layer three or layer four or layer five, but you're not getting, like a compounding benefit. So I actually think that layer three is where those benefits stop. And I don't see us going to layer 45678.
01:05:04.986 - 01:05:35.048, Speaker A: I do think you'll see layer fours, and I'll tell you why. But I think that's where it basically will likely stop. You'll see ecosystems building. Because the one thing we didn't discuss is the other reason why to have layer three is say you're building a gaming chain today, and your goal is not to just build a game, it's built a universe of chains. Or say you're doing this in whatever it could be in any space. We see a bunch of chains, like treasure, for example, plans to have many chains. Proof of play talks about a multi chain world as well.
01:05:35.048 - 01:05:55.462, Speaker A: So eventually you're going to have many, many different chains that are part of one ecosystem. You know, it could be in gaming, it could be something else. It makes sense to sort of glue those together, right? To have sort of one base chain for these and then to have all these other chains that are part of that ecosystem. Maybe every game has its own chain, right? So they're all sort of like.
01:05:55.518 - 01:06:00.326, Speaker C: Like Nintendo would be the l three and then all the other franchises would be the l four.
01:06:00.470 - 01:06:27.892, Speaker A: Exactly. Something like that. And the idea then becomes that, like, so you might see that happen where some chain deploys as an l three because they want the 99% cheaper onboarding because they want that taken the bus to Ethereum, but now they want to build an ecosystem of chains. So it makes sense to go up to layer four. But it's not like the core benefits that the compounding lower costs won't happen. Right. So that's why I think you're not going to be like, oh, I'm building a layer four because it's 99% cheaper than layer three that I don't see happening.
01:06:27.892 - 01:06:54.266, Speaker A: That's true for layer three to L2, I don't believe that it really extends up. So I think it's not going to sort of go on forever. But this ecosystem thing you might see. So layer three might have layer fours and maybe at some point you'll see one of these. Layer four is like Nintendo, like, you know, has like a hundred of these others and then there's some other game that now became a platform. So you might see things like that happen, but I think that will be driven mostly from ecosystem dynamics more than technology dynamics.
01:06:54.330 - 01:07:28.432, Speaker B: I actually think an analogy could. Like, the way I've been thinking about it is like this development from, from SaaS to platform. So for people who use like Salesforce or HubSpot as their CRM, for example, like these were just SaaS brands that eventually had so many users and so many customers, they started to transition from a SaaS company to a platform where you could build something on top of them. And in this case, it's kind of like maybe AWS is the l two, Salesforce is the l three. They're fine being an l three for years, but once they get big enough, they then have these apps or l four s whatever on top of them.
01:07:28.528 - 01:07:33.424, Speaker A: Exactly. And maybe, who knows, maybe ten years down the road one of those apps will be big enough that it becomes big enough.
01:07:33.464 - 01:07:34.480, Speaker B: Exactly, exactly.
01:07:34.512 - 01:08:05.380, Speaker A: But that's going to be driven exactly by those dynamics. But as opposed to like, like. And this is something that a lot of the, like, you know, alt l one folks on Twitter like don't understand. Like every time you say all three, they're like, haha, four l five, l six, which is like, like they don't understand that. Like, no, like, l three actually makes a lot of sense from a core, like dollars and cents perspective. All fours and five, like, it could grow that way if a team wants it to, but it's not like you just get this like infinitely compatible. Like if that was the case, we just like jump straight to like l 100 and just like, okay, look, we just like reduced fees to like negative one.
01:08:05.380 - 01:08:06.636, Speaker A: You get paid to use the chain, right?
01:08:06.660 - 01:09:25.348, Speaker C: That's not, I asked this question and then there's a few. I think ETH Maxis just thought that it was a stupid question, so I'll ask it anyways because I don't care what they think. Like, at what point does Nintendo realize that it's just better to launch their own l one? And the reason I ask this is because we're asking these questions in a state of the world where we don't have like mainstream applications, right? We have like, I don't know, like the, there's always this tragedy of the commons, right? So like in a world where you have, you're an l three, you have a ton of demand, millions of users, then you're like, okay, well, what's stopping me from going down to the l two and then why do I stop there? Why do I not go to and build my own l one? And like, I know this is a broader debate which may go down like a huge rabbit hole, which is bootstrapping. What are the requirements of like starting an l one, finding validator, security, all that, but my front run and just say if you have like a ton of demand, ton of users, you're probably going to be solving some of the other stuff fairly trivially. I think if you have that because you'll attract validators, because the feed pot is huge and people want to validate on your chain, like, so I'm sure you thought about this. I'm curious if you have an opinion.
01:09:25.446 - 01:10:12.617, Speaker A: So from like l three to l two actually might make sense because those arguments that I gave you before, and there are more arguments, but let's just focus on those of like much, you know, 99% cost reduction on onboarding. That was because of the assumption we made. That said, you're not going to have centralized exchange support on day one, but if you're like a massive brand, if you're Nintendo, I'm pretty sure you can get, you know, if Nintendo actually wants to launch an arbitrary, morbid chain, I'm pretty sure I can get centralized exchange support on day one. Like that would be like pretty, pretty solid. I take that bet. And the other one, which is like reduce your get on the bus. That's only, again, the benefit of that is in a world where you're going to have spotty fee, spotty usage usage if Nintendo comes down and build a chain, they probably know that they'll have pretty, pretty good, consistent usage of their chain.
01:10:12.617 - 01:10:33.936, Speaker A: They'll be able to sort of guarantee that or pay the cost. Up until when that happens, that's going to be a massive worry for them. So it could be for a big brand like Nintendo. Those two things don't apply. And they'd be like, hey, that makes sense for us to be a L2, or there's no reason not to be a L2. When you get to layer one, though, I don't think they're going to really want to get it. You mentioned bootstrapping.
01:10:33.936 - 01:10:52.554, Speaker A: I don't think it really makes sense to want to get into that business of now building, dealing with all that. You could take Ethereum's consensus out of the box and use it and just focus on building the chain. Or you can now try to build proof of stake program and detract value.
01:10:53.014 - 01:11:16.674, Speaker C: You've used tendermint like DyDX, and then in a world, there's a lot of restaking. You could kind of maybe use even Ethereum as part of your security. Like what ethos is trying to do into Cosmos Eigen layer e three staked, and then use it to bootstrap the security to incentivize validators and presumably lower the cost to get your own app chain started.
01:11:17.134 - 01:11:36.516, Speaker A: You absolutely could. So, yeah, there you could. That's not going to be quite, you know, we'll see how these services develop. I can tell you today that's definitely not quite as simple as just building a L2 and using Ethereum. But definitely, you know, the ecosystem could develop in a way. In a way that is. But I'd argue that in all likeliness.
01:11:36.516 - 01:12:17.520, Speaker A: So there's still going to be. There's still going to be an uphill battle for you to sort of get that level, because even, you know, restaking Ethereum means you get to borrow some of the security of Ethereum, but you're not going to be on the level of the entirety of the security ethereum. You'll get to borrow some of the Ethereum security to secure your chain, because Ethereum will still be more secure. But anyway, maybe you don't care that much about security. Maybe that's not you being this hypothetical chain, maybe that's not your top thing. But the other thing I would say is, other way to look at this is, I think it's kind of think about the Internet for a second. The Internet, we're here streaming on the Internet, and there are multiple layers of Internet stack beneath us, we have, like, you know, HTTPs and we have, you know, tcp iP.
01:12:17.520 - 01:12:45.562, Speaker A: We have, like, you know, lots of protocols going on underneath us and layered to us. And at some point, you know, I think these things should be abstracted away, that you don't think about them that much. Right? So you say, I want to launch my chain. Nintendo is not like, thinking about, like, I want to launch my chain on the Internet, which in this case means on Ethereum. And that's just sort of the core infrastructure. Like, from a user, whether it's an l two or an l one or an all three, the users don't really have. Shouldn't have to engage with it that much.
01:12:45.562 - 01:13:00.522, Speaker A: And this should just be, okay. It's secured by Ethereum chain, but I sort of interact with it as a first class citizen. I don't think about, like, today you don't have that because I got it. Okay, I got to go to Coinbase. I got to go to ethereum. I got to go to arbitrary. You're very much interacting, this layer.
01:13:00.522 - 01:13:11.188, Speaker A: I think one of the things of interop we need to do in UX is to sort of abstract that away from users the way we, like, we don't. We don't go ahead and say, okay, I want to build, like, you know, a streaming service. So. So let me. Why don't I reinvent the Internet?
01:13:11.236 - 01:13:28.660, Speaker C: Like, that's like, yeah, no one's building the entire stack. I hear your point. I was thinking about that while I was asking the question. The distinction here is, though, is that the value accrual at different parts of the stack. It's much more lucrative and attractive from an incentive standpoint. That wasn't possible in the Internet, and that might change the dynamic. I do agree.
01:13:28.660 - 01:13:35.794, Speaker C: Like, it's not your core competition. Why build an HTTPS 2.0? Like, no, right. At some point, these things become standards.
01:13:35.914 - 01:14:01.520, Speaker A: That's true. You will need to choose a part of the stack. But I guess my point is, like, I think the value crew on L2 is good, and I think it just sort of abstracts away a lot from you. And then, like, we're gonna get to a point where, like, again, like, this whole conversation of, like, the stigma involved different layers. That's because, like, the layers are so much in your face. So if I'm a chain that's thinking about building a layer three today, their users are going to be, like, hyper aware of, like, okay, I have to climb three. Three wrongs to get here, actually.
01:14:01.520 - 01:14:46.758, Speaker A: We're building, like, something internally a tool which will allow you to jump directly from ethereum to layer three. It's like a bridging tool. But the idea is anyway, like today, these things are very early, so your users are very hyper aware of where they are, of what they are, where they sit on the stack. But I think if we're successful, and this is ironic, but if we're successful, it's ironic because, like, for me to say, because I sit here and I'm building one of these sort of things that are sort of in the infrastructure level, but the truth is, if we're successful, like mass market successful, which I think we as a community have been, but we still have ways to go, a lot of this will get abstracted away, so the user won't be thinking about, like, am I on layer one, L2, or layer three. All they're going to think about is, I'm on Nintendo right now, and I know the Nintendo chain is secure. I've read that. I trust my sources.
01:14:46.758 - 01:14:59.334, Speaker A: This is secure chain. But I actually don't even know exactly what layer I'm on right now. I just know that I open up my wallet and I can get my funds to Nintendo chain in one click. I can get them back to whatever other chain I want to in one click as well.
01:14:59.674 - 01:15:09.934, Speaker C: I want to end this discussion with just your overall take on one particular thing that I've thought about a lot is, like, how would you define network effects in crypto?
01:15:11.714 - 01:15:53.880, Speaker A: Yeah, so I think we're obviously learning a lot, definitely as an ecosystem, as we see, different application, application verticals join, application verticals pop up and, you know, sometimes get disrupted. But I think there are definitely lots of network effects on the infrastructure layer, for sure, on the sort of chain layer. I'll say, where does that happen? Liquidity is definitely one. And so I'll give you. I used to say this, like, I always talk about security, and the truth is, though, that maybe only 20% of users care about security. I made that up. But, like, let's just assume that 20% of users care about security.
01:15:53.880 - 01:16:49.024, Speaker A: But there's a network effect here because of synchronous composability, right? The fact that you can build apps that talk to each other in a single transaction using multiple apps, the fact there's shared liquidity. There's a network effect here. So if my better security solution can attract those 20% of users and your 80%, but your solution will alienate those 20%, but only to be the 80%, then we're better off using the more secure one because we're actually going to be able to get a much larger network. So I think particularly one of the magical things about DeFi, for example, Defi Summer, was just the fact that you can just take building blocks and compose them. Anyone can go ahead and just launch an app that directly ties into this monetary system, and they can also tie into not only the core liquidity, but to other, you know, they can build a pool on uniswap. Right. They can actually tie into other pieces as well.
01:16:49.024 - 01:17:21.660, Speaker A: So I think that there are very, very big network effects on the chain level, particularly in applications that require liquidity. And this is something which we're obviously seeing play out. But that's very, very clear to me. And I think that's actually, as we're gonna, as we see now, increased CFI, if you will, or like tradfi coming on board as well. They're also looking very, very much to this. Right. So arbitrum has seen a bunch of launches from more traditional finance companies, including Franklin, Templeton, Robinhood.
01:17:21.660 - 01:17:41.914, Speaker A: Essential future is building their liquidity pools there. And I think that the ultimate goal for tradfi is to tie into some of these really nice network effects and things that you can do synchronously. And I think over time, we'll probably see a merging there between Tradfi and Defi. Not a full merging, obviously, but we'll see them merge in a significant way.
01:17:42.734 - 01:18:30.436, Speaker C: I think that's a really good response and a good way to end it. There are folks that have said that most crypto networks have anti network effects. And I think they're focusing on the feed degradation. The more users that come, even if you have composability, even though you have security, when you look at it on the lens of fees, right. We're all go back to days where now, one, you're paying like thousands of dollars in Ethereum to settle a transaction, then obviously that has anti network effects as you scale. But with recent improvements, you know, 4844 and other scaling solutions, you know, like l two s, l three s, then I think that takes the backseat. And the more important thing is the user experience, right, or fees at some point, like the marginal improvement in fees is, is not so much as important, whereas the network effect becomes like more.
01:18:30.436 - 01:18:39.236, Speaker C: So the composability that the ecosystem of apps that you're seeing. And so I think it's a good way to put it, and seeing kind of what has been built in arbitram.
01:18:39.300 - 01:18:39.788, Speaker A: Right.
01:18:39.916 - 01:18:46.772, Speaker C: But like a year or two ago, you would have said, yeah, most network, most crypto certainly ethereum had anti network effects at the l one. Like, it was just really bad.
01:18:46.868 - 01:19:31.380, Speaker A: Yeah, I think this is where, like, actually separating out, separating out verticals is really important because the problem was, if you go back a few years ago, was everyone was competing for this ethereum layer, one block space. And like, you know, as soon as cryptokitties or one app got successful, it sort of ruined the experience for everyone. And the analogy that I like to give is like, tv channels, which is obviously a data analogy at this point, but I think it's useful, which is if you had like one channel and every, every tv program was supposed to go there, every show was going to give this channel. Like, it would be terrible, right? It wouldn't work. You know, just, you'd be alienating. You know, you never get find someone that speaks to your audience. And it would just be terrible if you had, like, and in the other extreme, if you had every tv show had its own channel, it would also be terrible because there would be like, no discoverability.
01:19:31.380 - 01:19:52.638, Speaker A: I can't just go and say, hey, I know, I don't know what I want to watch now, but I like game shows. Like, well, there is no game show network. You can go to the particular network for this game show and then, you know, good luck finding anything else. Or even like, think about like advertising deals and distribution. Like, every show would have to sort of negotiate those for itself. We'd have is like, most of the day you have empty programming. What we actually have is you have grouping by vertical.
01:19:52.638 - 01:20:35.930, Speaker A: So if you like cartoons, you have the cartoon network. If you like nature, you'll have National Geographic. And the idea is there might be overlap here you can have a cartoon about nature, which could go either way. And we'll never be a perfect system where it's obvious where everything goes 100%, but users will know where to go when they want to find something and developers will know where they go. I think that's what we're doing here. So the idea is like, when you and, you know, in response to like, the sort of, the anti network effect is we need to sort of self shard ourselves. I think that's a lot of what we're seeing in this, in this world where l three s and more l two s are taking off, where you're going to have chains that are sort of specialized and specific for certain purposes.
01:20:35.930 - 01:21:19.254, Speaker A: You have to find the right balance. Not that every app has its own chain, but every vertical sort of had its own chain or two. And I think that's going to help with a lot of those things because, yeah, in a world where everyone's competing for that same single channel, like, yeah, the fees are going to kill it, it's going to be a terrible, you won't be able to scale, but in a world where you have multiple channels and paths and you can sort of self shard and self organize around the ones where the same user set wants to be and is willing to pay for the fees associated with supporting that set of applications, you're going to probably find the right balance. And obviously we're still in middle of this experiment, so we don't know exactly what will be. But that to me looks like the most promising path, and indeed I think it's the path we're on with the proliferation of specialized blockchains that we're seeing today.
01:21:19.674 - 01:21:40.190, Speaker C: We got four more minutes, so I'm going to squeeze one last question, just because Monad, and full disclosure, I'm going to bust from both you and Monad, but I'm curious, what would you say to the criticism? Like, the EVM is flawed, it's single threaded, let's parallelize it, let's have local fee markets, kind of like a monad approach. What are your thoughts on that?
01:21:40.382 - 01:22:51.352, Speaker A: Yeah, so I think there was this interesting study, this post I saw from Polygon where they basically showed for their workload on their chain, what percent is parallelizable? And it turned out it was like 50%, which means even if you have perfect parallelization, you're going to get a two x reduction, and that's fine. But I think that's number one, where a lot of the hype that I see and maybe I'm sure this team understands that. I'm sure that a lot of sophisticated people understand that, but I think probably most people sort of think parallelization, think, okay, we're going to take one core and now we're going to have 64 cores and like things are going to go crazy. But it turns out a lot of the work just isn't parallelizable. And the reason for that is, by the way, the reason for that is that a lot of times if something gets hot, it's the same thing that gets hot, meaning if there's like a particular, you know, if the chain is like, you know, kind of dead and not, no one cares, and then it heats up, it's because there's that one NFT drop that everyone wants to hit that same contract right now, and parallelization is not going to help you there. You know, a localized feed market is not going to help you for that, because everyone's sort of going right there and then. But I do think that there is, you know, a case for.
01:22:51.352 - 01:23:16.266, Speaker A: There's definitely pros and cons for something like localized hue markets. Again, it won't help you in this case, but. But I also don't know that parallelization and localized hue markets have to be connected. That's another interesting thing. I think you could build technology, you can build the stack to sort of. You can imagine a simple design where you just have different allocation for different applications. You can't use too much.
01:23:16.266 - 01:23:56.734, Speaker A: I'm not saying it's a better or worse design. I'm just saying these two things aren't tied at the hip. You can have parallelization, you can have local fee markets with or without. Parallelization is another thing. And I do think that the real answer is, it's a broad question around changing the EVM and the community's conversation around that, which I think one that we need to have as a community, because there's no one today that I don't think anyone in the world, not Vitalik, no one in the world that would say, I'm giving you a clean slate, we're going to roll back to 2015, let's launch EVM again. Do you want to change anything? And I think everyone in the world today would say yes to at least something. There's a laundry list of things that we can't change because of backwards compatibility.
01:23:56.734 - 01:24:34.926, Speaker A: So there's a broader conversation around. Right now, a lot of l two s are, including arbitrum. One are what we call ethereum equivalent, that they literally don't deviate by design from the EVM. And there's a conversation there. But arbitrum is actually taking a different approach where it's building arbitrum stylists to what we call EVM. So the EVM is staying exactly as it is, not breaking, not changing at all. But in the same environment, you'll also be able to write rust and c and c contracts and interact synchronously with EVM contracts, and you won't even and get a ten x reduction, ten x reduction in cost of computational costs for doing that.
01:24:34.926 - 01:25:06.854, Speaker A: So we are very much thinking of how do we expand and how do we afford more to developers and users without changing the EVM, by adding to the EVM. And it might well happen that fast forward ten years, no one's using, or most people aren't using the EVM on arbitrary anymore. They're using something else. But the EVM is not going anywhere. That's our commitment, because we're still not sure, as developers and the community conversation, not mine, but it's still not clear to me, like, that the community is ready to sort of, you know, change the EVM fundamentally. So that's the approach we've taken, which is, yes, we want to innovate. We also want to leave the EVM.
01:25:06.854 - 01:25:12.582, Speaker A: So stylus is in the realm of evM. It's keeping the EVM where it is. Yeah.
01:25:12.638 - 01:25:16.558, Speaker C: You can't change it because of backwards compatibility. There's some things you just can't change.
01:25:16.726 - 01:25:19.398, Speaker A: Exactly. I mean, you could in theory, but yes, it's.
01:25:19.486 - 01:25:21.142, Speaker C: Yes, it's social consensus.
01:25:21.198 - 01:25:23.554, Speaker A: You would have exactly. Like, it wouldn't be good.
01:25:24.034 - 01:25:53.792, Speaker C: Yeah, I think that's a good place to end it. I would love to have you on. I mean, just have a. As I think about, like, the next time, because you're a repeat guest, and I think there's a few people out there that can actually understand the history and involved you are. But around this broader topic of resource allocation, I love to explore just how you think about, like, local fee markets, like load balancing. These are things that, like, in the Internet, like Netflix pioneer, like microservices, like, a lot of things that have to happen in order for you to watch the same show. Queen's gambit.
01:25:53.792 - 01:26:25.458, Speaker C: Everyone wants to watch it when it releases. How do you balance that load? Like, this is networking thing. These are problems that engineers have to face when the Internet was being built and as you scaled. And so I think it's no different in crypto, like resource allocation and pricing. Solana is having issues now because they need to figure out a better pricing mechanism and research allocation mechanism. So these are growing pains for every network as you get scale. And the exciting thing is we're getting scale, we're getting more and more users interested in using this tech.
01:26:25.458 - 01:26:36.758, Speaker C: So it's not a bad problem to have. But I think, to your point, I don't think anyone has solved it, but, you know, the teams that are more agile, like, perhaps you guys are higher probability of solving it over time.
01:26:36.926 - 01:26:56.834, Speaker A: Yeah, absolutely. And, you know, happy to, obviously, you know, come back and talk all about that and, yeah, there are a lot of open problems in the space and a lot of shared ground. We're all trying to solve some of the same problems. You have, like, a list of problems, and, like, scaling was, like, number one. And I feel like scaling Ethereum. We've done a pretty good job there. And it's not like the list goes away so now number two becomes number one.
01:26:56.834 - 01:27:02.854, Speaker A: And, you know, some of these problems have just elevated and are now some of the most important things to think about in the space.
01:27:03.994 - 01:27:11.762, Speaker C: Awesome. Stephen, as always, pleasure having you on. Thanks for taking the time and, yeah, prepared with our simplistic questions here.
01:27:11.938 - 01:27:15.106, Speaker A: Thank you for having me. Always love coming on, everyone.
01:27:15.170 - 01:27:43.886, Speaker B: Jason here. Thank you so much for watching today's episode. Wanted to take a quick second to thank today's title sponsor, Arbitrum. We know you are tired of on chain experiences that have unaffordable fees and frustrating transaction speeds, and that's why we partnered with Arbitrum. You can experience frictionless trades, lightning speed, and lag free transactions, all for pennies per transaction. Explore arbitrum's expanding ecosystem at portal dot arbitrum dot IO. That's portal arbitrum IO.
01:27:43.886 - 01:27:45.314, Speaker B: See you for the next episode.
