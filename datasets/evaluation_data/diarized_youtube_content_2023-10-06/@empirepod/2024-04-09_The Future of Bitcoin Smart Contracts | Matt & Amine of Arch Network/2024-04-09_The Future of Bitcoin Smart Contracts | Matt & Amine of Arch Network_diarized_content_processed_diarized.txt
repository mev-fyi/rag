00:00:00.240 - 00:00:37.766, Speaker A: Hey, everyone, if you have been listening to Empire, you know that Santi and I are fed up with unaffordable fees and frustrating transaction speeds that make the on chain experience basically unusable. So the arbitrum team reached out, and they showed us the platform. They showed us what you can do on Arbitrum. Whatever you're doing, you can experience frictionless transactions at lightning speed on Arbitrum. So head over to portal Arbitrum IO and check it out. This episode is brought to you by Monad, which has not only the highest performance evm l one architecture ever built, but also the wildest and craziest community in crypto. Monad's internal devnet is live and public.
00:00:37.766 - 00:01:21.046, Speaker A: Testnet comes out soon, so make sure you join the Monad community today at discord GG Monad. M o n a D, Monad. Tired of high gas fees? I'm excited to let you know about our newest sponsor, scale a zero gas fee modular blockchain that's become a perfect fit for both gaming and AI apps because of their instant finality and lack of mev bridge to scale today via their portal. It's portal scale space and follow their journey on x at Skale Network. You'll hear more about Skale later in the show. All right, everyone, welcome back to another episode of Empire. Very excited for this one.
00:01:21.046 - 00:02:00.934, Speaker A: We've got a special, I would call it a Bitcoin l two podcast, but it's not actually going to be, as you will find out, a bitcoin l two show. But really just talking with Matt and Amin, the CEO and CTO and the two co founders of Arch. Many of you might know them, many of you might not know them. And we're here to both share the story, but also talk about what's happening on bitcoin right now. Matt, I think I'd pick on you to, like, at least personally, I need some context because I've seen, at least in the private markets, just this explosion of funding and activity happening on bitcoin. It feels like Defi is finally coming to bitcoin. Lending and borrowing is happening on bitcoin, and there's this explosion, and I don't fully understand it.
00:02:00.934 - 00:02:16.514, Speaker A: So I'm going to pick on you to kind of tee up, like, how did we get here? And what's, like, maybe what happened with the taproot upgrade in November 2021? And how did that lead into, like, this cambrian explosion of activity that we're seeing on bitcoin today?
00:02:17.574 - 00:02:55.284, Speaker B: Yeah, I think that it was, it really represented a watershed moment for bitcoin because like you mentioned, the combination of tap roots, enhanced programmability, and the data inscription capabilities that are introduced by ordinals really marked a foundational shift in bitcoin's evolution. It really signaled the beginning of a new era where bitcoin could serve as a base layer for more complex protocols, paving the way for innovations like arch that could seek to harness bitcoin's inherent security and most importantly, the liquidity for a broader range of applications. So that's ultimately what Arch set out to do, which is unlock and extend the capabilities of bitcoin and bring programmability to the base chain.
00:02:55.784 - 00:03:06.484, Speaker A: Nice. Say more. Why was this so important? I don't know if this is a question for matter for Amine, but what was it about taproot that was so important for bitcoin?
00:03:08.184 - 00:03:40.176, Speaker B: It was significant because for the first time ever, you could put arbitrary data on bitcoin. That's important for the modular stack and creating the potential for native programmability via smart contract and execution. So that was what initially made it possible. And so that. So for all the people out there that are wondering, bitcoin's been around forever. It's never been possible before. Why is this happening now? Why is everybody all of a sudden interested in building on bitcoin now? And that's the answer, right? Is ordinals.
00:03:40.176 - 00:03:54.354, Speaker B: And the taproot upgrade really made that possible and paved the way for builders to come in and take advantage of bitcoin's absolute security and liquidity. That is, know best, best in class.
00:03:54.734 - 00:04:11.314, Speaker A: Okay, so we get, we get taproot, right? We get this upgrade in November 2021. It gives us programmability on bitcoin. And then after Taproot, this thing called ordinal starts happening. Right, so walk us through like, what happened here is kind of the first voray into like, building things on bitcoin.
00:04:12.574 - 00:04:55.964, Speaker B: Yeah, I think like last year, early last year, it was very exciting to see you had a bunch of different programmers, builders, all excited with this newfound capability of putting data on bitcoin. And at first you saw everyone inscribing jpegs, audio files, and that whole ordinal movement really took on, which was a phenomenal thing to see. And I think that that was an elegant proof of concept. But we're heading into the most exciting piece now where it's a watershed moment for bitcoin, where you'll see developers and builders actually building intuitive applications like you've seen over the last six years on Ethereum. I think it's an incredibly bullish situation for bitcoiners altogether.
00:04:57.344 - 00:05:08.324, Speaker A: I saw on that notion page you had this like, all right, so you've got taproot plus ordinals equals like foundational shift, basically. What is this, as you guys call it? Like, what is the foundational shift?
00:05:09.604 - 00:05:12.260, Speaker B: Yeah, I mean, you want to take this one? Yeah.
00:05:12.292 - 00:05:36.830, Speaker C: So ordinals became huge. A lot of developers came from Ethereum and Solana, and they saw the potential of being able to store data on bitcoin and do more stuff than just payments. And I think this is what propelled people to start building on top of bitcoin instead of just going for all the other.
00:05:37.012 - 00:06:06.414, Speaker D: Yeah, can we go maybe a little bit more specific into Ark itself and canvassing? As Jan alluded to, there's been sort of an explosion of let's build an l two on bitcoin. I have my reservations on that. And that's how I got to know you guys, because I think you guys are quite different in that approach. So let's maybe just start venturing into how you guys are approaching this and how you see the kind of the current landscape evolving.
00:06:07.554 - 00:07:15.068, Speaker B: Yeah, I think like our, you know, when we, when we were Amin and I really came up with the idea for Arch, we were, you know, grinding every single day around Thanksgiving in the bitcoin startup lab. Day and night we were interviewing developers, various customer interviews, interviewing other builders in the space that were all in one form or another, trying to address some type of, of native application or protocol that they wanted to bring to bitcoin, take advantage of this giant movement. But in interviewing all of these people, we realized that they were all trying to figure out which l two they wanted to build on. And that was kind of our aha moment for Amin and I. As we said, why is everybody giving up on bitcoin? Why is everyone, like, going down to the L2 in order to achieve this native programmability or native and air quotes for the listeners at home. But we realized that this is already played out on ethereum. There's many, many, many different l two s in the Ethereum ecosystem that offer different things like scalability, speed, low fees.
00:07:15.068 - 00:08:17.490, Speaker B: But the majority of the liquidity is going to stay on the layer one network where you aren't sacrificing or trading off in your trust, assumptions and security principles. And we think we're pretty, we feel pretty strongly about this, that bitcoin is going to be the same way. You're going to have the majority of the liquidity sitting on the base chain where you have more principled features and security. We realize that even bitcoiners are even more so this way, where they care about their sovereignty, they care about keeping ownership of their keys, and not necessarily bridging their assets to a completely different chain. So that's what we set out to do. We created a novel solution to bring native programmability to basically foster bitcoin native applications, as opposed to bridging those assets down to a L2 or a layer three, for that matter, which seem to come about nowadays. But, yeah, you don't have to give up on bitcoin.
00:08:17.490 - 00:08:28.754, Speaker B: You can achieve that programmability on bitcoin without, I mean, now that this taproot and ordinals upgrade are available to foster this level of innovation.
00:08:29.734 - 00:08:53.774, Speaker D: The first, as I'm hearing this, it makes a lot of sense. The first question that comes to my mind or two are concerns I'd say are scalability and cost. Whenever you're trying to do something natively in the l one, at least in ethereum, it's been, the challenge has been, to your point, scalability and cost. So is that an issue for your approach, and if so, kind of, how do you mitigate that or work around that?
00:08:55.234 - 00:09:35.664, Speaker B: I'd say that we're still definitely confined to limitations of bitcoin in block size and block times, but we were extremely explicit in the trade offs that we were making when addressing the design principles of arch. And the main trade off is we're willing to deal with, with the block fees and block times in order to not give up the security principles and sovereignty of the users. Coins and keys, these other l two s, they may focus on scalability and low fees, but they certainly are trading off more of the principled security that is more accustomed and accepted by native bitcoin users.
00:09:36.124 - 00:10:16.254, Speaker A: I just have one question about how does you are basically saying we're fine with these long transaction times, and the reason we're fine with that is because we don't want to compromise on the security. How does this impact actually how the ecosystem develops, DeFi and all these things? If I was playing on Solana, or playing on arbitrum or Optimiz or an l two, I would not be okay with hour long wait times, whatever, 30 minutes wait times. But maybe your vision is like, okay, well, our ecosystem is just going to develop very differently than Solana, but maybe you could paint a picture of what you envision this looking like.
00:10:18.754 - 00:10:41.664, Speaker C: I think like for bitcoin, the main use case for DeFi is high volume transactions. People that are not willing to make the trade off of bridging and trading off security. And also luxury jpegs, which we've seen like, just have this massive boom with ordinance.
00:10:43.204 - 00:11:19.884, Speaker B: Yeah. Also, I would say that our design is massively inspired by the Solana VM. We store states independently inside of Utxo so that we can run them in parallel, which actually increases its efficiency for processing transactions and execution. If we did this the EVM way, it would be much slower and much more inefficient. So we were very intentional in the way that we created our design to create for this efficiency. But that being said, ten minute block times are a reality of bitcoin. So in order to do native bitcoin transactions, you have to submit to the mempool and actually be included into the block.
00:11:19.884 - 00:11:46.394, Speaker B: And that takes ten minutes, and that's until a soft fork happens into bitcoin. That's nothing. We can't do anything about that. But that was an intentional design choice by bitcoin back in the day to really prioritize security over speed of execution. I would say that we're right there in the middle of it. I don't think that these faster transactions on the l two s are necessarily worthy of bridging your assets at the end of the day.
00:11:47.734 - 00:12:40.658, Speaker D: Yeah, I go back to most l two s. Remind me of just either badger or wrap bitcoin. If you're a bitcoiner and you were willing to accept these security trade offs, you would have bridged over to Ethereum Defi and started playing around there. A lot of the current l two designs on bitcoin kind of are that. So I'm a bit, not very impressed, and I pass on most of those rounds because why is this different? And it's like, it's not. Let's go back to Yano's question around, like Defi, for instance, in how you're, you know, what kind of applications do you think are really going to thrive in your ecosystem? When you think about, as alluded to, payments or defi, fast sellment times are pretty critical. Like composability is a thing that keeps coming over and over again.
00:12:40.658 - 00:12:49.774, Speaker D: So do you have a view there? What kind of applications or developers are really interested in building on the network?
00:12:50.514 - 00:13:18.794, Speaker B: Yeah, we have about 20 different projects who are currently building on arch and on top of bitcoin, mostly defi and things of that nature. Some have come from other chains like Ethereum and Solana to come build. But before we unpack that, actually I'd like to go back to the previous point real quick, that we're talking about these evm l two s and Amin's got some great insight into why these developers are actually choosing to go this route and why we think that this is not the way to go.
00:13:20.254 - 00:13:57.774, Speaker C: Yeah, I think most of the developers just came straight from ETH with all their baggage and just started making the same stuff that already existed on ethereum. So since ethereum, or they had programmability, they just started making l two s on bitcoin, which we think isn't the good way to do it. You need to wait and see what bitcoin has and what it lacks, so you can make the best, the best execution layer for it, which is what we're making.
00:14:00.674 - 00:15:22.080, Speaker B: Yeah, I would say in addition to that, that there's a lot of different design choices, that these massive amounts of L2s that are coming into the picture are choosing some of them more EVM copy paste, some of them more novel in design, like stacks, for example. At the end of the day, what we want to see for bitcoin in the long term is continued development, innovation directly into it. We don't want to see this activity being traversed away from bitcoin. And more importantly, we don't want to see the EVM taking the majority of the activity and fees that otherwise the miners could be generating, which ultimately is securing the blockchain for the long haul. The havening are these built in mechanisms to try to get us as a community or as a developer community, I should say more specifically, to create these types of innovations that can secure the network for the long haul. And I think that that's what we're mainly addressing, is we want to keep as much of the activity for DeFi and other consumer applications on bitcoin itself, so that not only it secures the future of bitcoin and crypto as a whole, but also continues to allow native bitcoin users to tap into secure yield opportunities, which is what they want to do. We're seeing this every day.
00:15:22.080 - 00:15:39.084, Speaker B: You can look at applications like liquidium, who is doing borrowing and lending against ordinals on bitcoins, layer one, and they're growing at a phenomenal pace because this is an accepted thing that now bitcoiners want to engage in. They want native yield for their assets.
00:15:40.044 - 00:16:11.656, Speaker D: I want to. That's a good point. I want to double click on what you just said, which is you're inspired by the SVM design and parallelization. And of course, the EVM is a single threaded. And how does that play into the security, like when you think about parallelization, but also the constraint of like execution of the l one. Like how do you introduce that into like natively? I would assume that there's some security. Like you are making a minor trade off.
00:16:11.656 - 00:16:21.484, Speaker D: Maybe it's not as much as an l two, but I am curious if you're free to push back on that. I'm just trying to understand how that fits into like natively into the l one.
00:16:21.984 - 00:17:03.424, Speaker C: Yeah, so the way Rx is, we store states inside Utxos, so for non overlapping states you can basically run transactions in parallel instead of doing it the EVM way. If we did it that way, we'll do like one transaction per block and then need to wait for it to confirm to process other transactions, which would be like a very bad user experience. Imagine waiting ten minutes just for someone else to process another transaction on a Dex. But yeah, we do store state inside Utxos, which gives us this ability without even trading off anything.
00:17:04.704 - 00:17:17.576, Speaker B: And let's, I guess maybe talk a little bit more amin about the actual architecture of arch and how the VM and the verifier network ultimately plays into this execution and state change.
00:17:17.760 - 00:18:11.584, Speaker C: Yeah, for sure. So arch starts with invocation transactions, invocation transaction which contains all the relevant information for execution. The last state you can pass PSVT, some other smart contracts calling for, and then you go ahead and run the execution inside the ZKVM. The smart contract needs to output an unsigned transaction which reflects the asset change that happened during execution. The resulting states which reflect the state change that happened during execution, as well as approve for that execution. And then everything is then sent to a verifier network which basically runs a proof of stake mechanism using threshold signature schemes, where each node in the verifier network votes on the validity of the proof before sending the transaction to bitcoin.
00:18:13.124 - 00:18:45.454, Speaker D: I see. So there you are trusting this verified network that is sufficiently decentralized distributed. So as a skeptical bitcoiner that is, you know, let's just assume that that's your, like your market, they would probably be most interested in understanding how is this verified network composed of who's actually running it. Because if that were to break, and maybe we can talk about scenarios where that may or may not, then, then you might have an issue, right?
00:18:46.114 - 00:19:31.504, Speaker C: Yeah. This sets of trust assumptions we picked is, is actually very interesting. It makes it so that the makers who are providing liquidity take on additional trust assumptions, but the takers don't. So let's take for example an amm at DAX, the people who will be providing liquidity inside the liquidity pools would be taking additional trust assumptions and sending their biscone to this smart contract controlled wallets. But the takers of that liquidity will be taking that liquidity in one transaction. Transaction would be atomic, so they wouldn't be taking any additional trust assumptions. And that doesn't happen on any l two.
00:19:31.504 - 00:19:34.424, Speaker C: You need to bridge to the l two to use like, anything.
00:19:38.444 - 00:19:59.774, Speaker D: And from a maker perspective, like, so in this scenario you just described. So I'm providing liquidity to an amm that is built on an arc. What, what is the most important thing there? Like, what would be the worst case scenario for a liquidity provider? In this case?
00:20:00.474 - 00:20:28.854, Speaker C: Yeah. So to participate in the verify network, you need to put up stake, and anyone who has done anything considered malicious gets slashed in this state. Yeah. So as long as what you're putting in is below what's staked inside the network, you're good. There is no reason for the participator in the network to steal your funds.
00:20:29.354 - 00:20:46.324, Speaker D: This might be a really stupid question, but what is the requirement to participate in the validator network, like on the verifier network? Is that just, you're just a liquidity provider by default, you're staking, but who's like, doing the verification and what are perhaps the requirements to do that?
00:20:46.784 - 00:20:56.336, Speaker C: Yeah, so to participate in the, in the verifier network, you need to put up stake, of course, and then run an arsenal. Run a what?
00:20:56.360 - 00:21:02.364, Speaker D: Sorry, arsenal, okay, and what are the. Who would be doing that?
00:21:03.544 - 00:21:23.694, Speaker C: Yeah, so while we're bootstrapping the network, we're limiting it to a set of trusted, trusted people, our network partners, who have stake in the protocol as it launches. But after that, as the network is bootstrapped, we will make it open and permissionless so anyone can run an ashmole.
00:21:24.114 - 00:21:31.654, Speaker B: We're also working with quite a few commercial validators as well that are interested in participating in the verifier network.
00:21:34.464 - 00:22:12.254, Speaker D: Yeah, got it. And so this would, that is perhaps the, when you think about maybe a bitcoiner saying, wait a minute. But like, I really want to understand who these folks are from a censorship resistance perspective, which, that's been the biggest criticism. If you talk to bitcoin Max, you'd be like, why look at Ethereum, proof of stake generally, like, most of these nodes are in jurisdictions where censorship resistance can be an issue. Is this perhaps going to be an issue or just a concern for a subset of the bitcoiners that have been historically critical of just Ethereum and its current architecture?
00:22:14.754 - 00:22:31.434, Speaker C: I don't think so. As the network decentralizes and more nodes join the network, it would be fairly decentralized to secure the whole stake that's inside our. The whole liquidity that's inside our.
00:22:31.854 - 00:22:32.542, Speaker B: Yeah.
00:22:32.678 - 00:22:48.314, Speaker D: So you plan just give us a sense of just how you envision this sequence. Initially you'll have a curated list of validators, so to speak. And then like, what would you need to see to get comfortable to open it up to other people?
00:22:48.974 - 00:23:12.104, Speaker C: Yeah, we just need to see more, more, more people participate in the network. At first, we're going to curate people who join the network to not do anything malicious. But as the stake gets big and overtaking the network gets harder, will make it more and more permissionless.
00:23:13.004 - 00:24:15.904, Speaker D: Got it. Just to round out this discussion of the architecture, you're still in the l one for just trying to simplify for folks, you're still in the l one, but within a particular block you are using parallelization and that allows you to process many, many more transactions. Within a block you are kind of offloading some trust assumptions onto a validator network. A lot of that security lays on the liquidity providers and then a subset of people that are running validation, initially curated by you guys, over time open it up and then that should, is what you guys are saying be a much easier or perhaps jump from a security standpoint than an l two that is currently built. You know, some of the other ones that are being built on that you have to bridge, you have to trust a lot of their kind of setup and whatnot. But maybe we can. Okay, so I wasn't far off mark there.
00:24:15.904 - 00:25:15.424, Speaker D: Maybe we can start perhaps talking more from a consumer standpoint, how you, a lot of folks when they may be hearing this would be like, well, how is this going to be any different? Like look at Ethereum, people have just accepted some l two s, some which don't even have fraud proofs, which are just basically multisigs. And, you know, people time and time again in crypto have, I guess, put security on the backseat and just chase yield, do some of these things. It matters what, how much is at stake. It matters perhaps the type of application, if you're doing gaming versus a high value defi transaction. From a consumer standpoint, how would interacting in your network contrast to maybe some of the ten other bitcoin l two s that are cropping up in terms of fees, in terms of speed, in terms of variety of applications? I know it's a difficult question, but I'm just curious if you have a view there.
00:25:15.944 - 00:26:02.486, Speaker B: Yeah, I think I'll take this one. I think that first and foremost, we're not here to say that the l two world is not going to exist. If that won't exist. We think there are some use cases that may be fair to some l two s, and it's still going to be a couple hundred billion dollars opportunity. But by comparison to all the liquidity that's sitting on the layer one network, it pales in comparison. And the major, major difference from a user standpoint is that you don't need an additional wallet or you don't need to bridge those assets in order to participate in DeFi or programmability on bitcoin. That's the first step for all of these l two s is you first have to bridge with arch.
00:26:02.486 - 00:26:35.894, Speaker B: You don't need to bridge anything. You simply can sign a bitcoin transaction on whichever DAPR protocol that's integrated with us or built on top of our VM, and you can sign a bitcoin transaction through your X verse or your unisat through your magic Eden wallet. It doesn't matter. You don't need anything custom and you can participate. And that's the major, major differentiator for us is in addition to builders being able to tap into the 1.3 in today's liquidity that's on bitcoin. But from a user experience standpoint, it is so much more of a better experience.
00:26:35.894 - 00:27:13.274, Speaker B: And if you ask a native user of liquidium why they participate in ordinal borrowing and lending on liquidity versus another project on NL two, it's because they don't want to bridge their expensive and premium assets to these new side chains or L2 chains in order to achieve that yield. It's just something that they don't want to do. But I think that as we've seen this play out on Ethereum time and time again, there's going to be some liquidity that gets bridged down there to participate in these low fee environments, because it's just not going to make sense to pay $20 in bitcoin fees for a $10 transaction of a shitcoin or something like.
00:27:13.434 - 00:27:31.854, Speaker D: Yeah, maybe, I mean, I'll throw it over to you. Can you comment a little bit on the, on this point, on the perhaps the fees and the speed of transactions? How might those compare your network versus another bitcoin, L two?
00:27:32.834 - 00:28:05.974, Speaker C: Yeah. So for arch, we are confined by the block size and block signs. So we can like assuming all transactions in the block are transactions coming from arch. We can do about like 3000 to 4000 depending on the, on the block. And for the l two, of course it's gonna be like, it's gonna be a 20 x roundabout if they actually implement everything right? Using ZK and stuff.
00:28:07.454 - 00:28:12.274, Speaker D: So say that again. So let's be like $3. Did I hear you at 3000 6000?
00:28:12.654 - 00:28:25.874, Speaker C: Like, yeah, it's like all transactions in the block are transactions that are coming from our. Since. Since we do like parallel execution with anyone.
00:28:27.494 - 00:28:28.070, Speaker D: Right.
00:28:28.182 - 00:28:31.114, Speaker C: The EVM way, it would be one transaction per block.
00:28:31.754 - 00:29:16.664, Speaker D: Yeah, I would be be just incredibly slow and expensive. The one last thing before we just move on in terms of what is the mechanism for, like, when you're running parallelization? Like, or there's like, I guess like in the Solana, like the SVM kind of way. Like there are different types of parallelization. Not to like make this a podcast about parallelization itself. It is an interesting topic, I think. How can you just comment on like how the parallel, as I understand it, like, if you compare, like sui, say, aptos, Solana, some of them use deterministic, some of them use probably like probabilistic, I believe. Like, how do you guys, what was your thinking in terms of which one to implement or what type of mechanism to implement? Maybe it's a different one.
00:29:17.444 - 00:29:56.684, Speaker C: Yeah, so all of the chains that you mentioned have an accounts model in mind. So it's really hard to different bitcoin. Yeah, it's really hard to implement Paris in there since you still need to access the kind of a global state of how much each account has in Seoul or say, but with bitcoin, we have Utxos, so there isn't that problem. It's actually bitcoin was made in a way that parallelization fits in very well.
00:29:58.144 - 00:30:03.256, Speaker D: Can you for maybe most listeners may not have appreciated that, but can you go deeper into that?
00:30:03.360 - 00:30:23.934, Speaker C: Just so bitcoin uses the Utxo model where basically you lock your bitcoin inside the script that can be only unlocked using like a pub key or like multi six scripts. So this makes it so a lot of people can lock bitcoin independently. And all of those transactions can be run in parallel.
00:30:24.954 - 00:30:25.506, Speaker B: Right.
00:30:25.610 - 00:30:45.962, Speaker D: Because you're very clearly defining what is spent, what is not unspent. And so that allows you to very quickly order the transactions very efficiently and then run. So presumably the way you run parallelization, does that make it way more efficient, just higher throughput relative to traditional parallelization techniques that we've seen in other chains. Is that a fair?
00:30:46.138 - 00:30:59.954, Speaker C: Yeah, if you're doing parallelization with the Utxo model, since every Utxo is logged independently, you don't need to go through the global state of accounts, which makes it way, way easier to use.
00:31:00.974 - 00:31:03.194, Speaker D: Right. Okay, that's really interesting.
00:31:03.494 - 00:31:22.864, Speaker B: Also, from the worship standpoint, we do use validity proofs, which is fairly different than what other L2s rely on in a more optimistic setup. So maybe Amin can share a little bit about why that matters, and also how it plays into the requirements for node operators as well.
00:31:23.684 - 00:31:25.344, Speaker D: Yeah, that's a great point, man.
00:31:25.684 - 00:32:08.794, Speaker C: Yeah, so a lot of l two s right now are using bitvm, claiming to use BitVm, which is not out yet. BitVm uses fraud proofs which require this challenge period to settle execution for the l one bitcoin. That's not possible to run smart contract transactions there. Imagine a Dex where people wait for a challenge period to use it. So the only option for us was using validity proofs, and instead of assuming something is correct and waiting for someone to invalidate it, we just prove it's valid, which makes the user experience way, way better.
00:32:10.334 - 00:32:15.074, Speaker B: It also makes the requirements for the node to run the node much lighter as well.
00:32:16.694 - 00:32:21.354, Speaker D: Yeah, that seems to be a common mid curve skepticism or criticism. Right?
00:32:23.294 - 00:33:01.070, Speaker A: All right, I mentioned them in the pre roll, now I'm going to bring them up again. It's arbitrum. Santi and I are really fed up with these high fees, and we're really excited to have teamed up with arbitrum for the next couple of months on Empire. As the leading ethereum scaling solution, Arbitrum now powers hundreds of decentralized apps across deFi, perps, nfts, gaming, and a whole lot more. The team has showed us everything in the ecosystem, both now and what's to come, and we're really, really excited about it. Arbitrum allows both daily users and developers to interact with Ethereum at scale with low fees and faster transactions. The way the team got me excited was through portal Arbitrum IO.
00:33:01.070 - 00:33:50.050, Speaker A: So my call to action to you is to get started by visiting portal Arbitrum IO. Go experience on chain like it was meant to be. This episode is brought to you by Monad. Monad's thesis is simple, the EVM is here to stay, similar to JavaScript and web two, but unfortunately, today's EVM lacks the high performance and the scalability that developers need to make certain applications possible. Monad addresses these concerns in these bottlenecks, while preserving seamless EVM composability for application developers, there's a seamless transition to Monad as the Ethereum RPC API allows for really easy portability. And for developers, Monad can support 10,000 real transactions per second with their unique parallel execution environment. And of course there's full compatibility with EVM bytecode.
00:33:50.050 - 00:34:05.100, Speaker A: Monad's internal devnet is live public. Testnet comes out soon. You can join Monad's journey in two ways. One, go follow them. They're on Twitter Monad, Monad xyZ. And also join the Monad discord. It's Discord GG Monad.
00:34:05.100 - 00:34:50.552, Speaker A: Big thanks to Monad for sponsoring Empire. Hey everyone, Jason here. I know you've been hearing a lot about the intersection of crypto and AI, and that's why I'm really excited to share our newest partner and sponsor at Empire, Skale, a high performance modular blockchain that's revolutionizing gaming and AI. With zero fees and instant finality, Skale's unique architecture allows for massive scalability and has already saved users over 6 billion in gas fees, the five main takeaways that you need to know for 10 gas fees. Two, Skale has instant finality and lack of mev. Three, the zero gas fee model of Skale is really important for blockchain gaming adoption, as gamers don't have to pay transaction costs or have the SKL token. Four, Skale is multi chain.
00:34:50.552 - 00:35:20.594, Speaker A: This design allows for nodes to be combined to create chains and for individual sub nodes to actually be removed and relocated, which creates greater security and collusion resistance. And five, scale has become a really good fit for AI dapps because they're fast, automated zero fee transactions. Big thank you to scale for sponsoring Empire. We're excited to partner with you guys. Bridge over to scale if you're listening to this via the portal portal scale space and follow the journey along with Scale on X. At Scale network. That's at Scale network.
00:35:20.594 - 00:35:34.204, Speaker A: Big thanks again to scale for sponsoring empire. What is the reason why someone would build on arch? Like when you're sitting down with a founder? What is the pitch here?
00:35:35.344 - 00:36:41.514, Speaker B: The pitch is quite simple. Look, there's all this liquidity sitting on layer one, looking for something to do with their bitcoin to find safe and secure yield. Are you going to build somewhere where the liquidity already is? Are you going to build somewhere where you're going to wait for that liquidity to arrive and then address those users once they come? But it is our strong belief and conviction that while the majority of the liquidity is going to remain on the layer one that gives us a total advantage when speaking to these developers and dapps and protocols who want to tap into that liquidity and bring Defi in a meaningful way. Like I said before, we've seen this play out on Ethereum. We don't feel that that much liquidity in comparison to the total amount of bitcoin liquidity is ultimately going to bridge, and that's where we have that advantage. So we're speaking to and working with many different dapps and protocols who want to bring these various ideas that are proven concepts on other chains, but now trying to take advantage of the security principles and the liquidity that bitcoin can offer.
00:36:42.194 - 00:37:07.162, Speaker D: Cool on this point because I asked it before, but it wasn't clear in my mind. We definitely talked about the security assumptions, we talked about the transaction speed or throughput on the fee side, because I think it matters in terms of the type of users and the type of transactions that you might see on the network initially. Do you have a sense of how expensive or not it's going to be to interact in the network when you.
00:37:07.178 - 00:38:10.114, Speaker B: Go on liquidity right now? And I'm just using them as an example, because as of this moment, there isn't a lot of DeFi applications on bitcoin for obvious reasons. Right. The only thing that's before arch that was available for pseudo programmable solutions would be dlcs, discrete log contracts, which effectively require you to pre determine two transaction pathways, two parties, and what those, the conditions of those transaction pathways ultimately are going to set in. And then you, then you require an oracle to ultimately determine which transaction pathway should be centralized workload that which transaction pathway will ultimately take effect. But as you see, these transactions ultimately play out on bitcoin, users are technically paying anywhere from like eight to $15 per transaction in order to participate in this type of programmability. And we've seen this type of stuff play out on ETH again, where gas fees can be expensive, but not a detriment to the protocol or the debt.
00:38:10.804 - 00:38:45.744, Speaker A: Yeah, I have a go to market question, actually. So you guys have the benefit of having dozens, if not actually probably hundreds of roll ups, and you've seen the whole monolithic versus modular thing play out and all these l two s, what are your takeaways in terms of when you look at the different go to market strategies and I guess, honestly, tech stack strategies that you've seen over the last, let's call it three to five years, what do you want to, what do you want to do? Like what do you, what have you learned that you want to kind do of lean into? And who have you learned from? And maybe the flip side of that is like who have you seen maybe not do this in the right way?
00:38:46.644 - 00:39:38.304, Speaker C: Yeah, this, this has, I think this has already played out and monolithic versus like modular. There is different things that you can do for both different use cases, but I think here the, the clear winner is the monolithic. Solana has been doing great. And although these l two s had a lot of time to experiment during the last bull markets and bear markets, they haven't achieved the speeds nor the reliability for mass adoption, while Slovakia has. So I definitely think the winner is Solana. But for app chains and stuff, for specific applications, I think there is a merits for layers.
00:39:41.724 - 00:39:52.264, Speaker A: What's your. Maybe if you guys are successful, I mean, what is the five year vision here of arch or ten year? What does this start to look like if you guys are wildly successful with everything?
00:39:52.844 - 00:39:53.196, Speaker D: Yeah.
00:39:53.220 - 00:40:42.180, Speaker C: So first of all, I would like to see the pillars of Defi, like lending and borrowing, liquidity pools on bitcoin, stablecoin, which there is teamwork. We're working on stablecoin. I think stablecoins is pretty much the biggest crypto use case and it hasn't been possible on bitcoin in a decentralized fashion. So pretty excited about that as well. I would like to see a defi boom on bitcoin. That would be awesome. Like similar to what happened on Ethereum on 2016 2017 and leading to the bull markets of 2020.
00:40:42.332 - 00:41:49.770, Speaker B: I think you could draw comparisons to the emergence of the whole Ethereum ecosystem from 2016 all the way to 2020 and today, where you have a whole vibrant ecosystem of dapps and protocols and composability and money legos, all these that ultimately contributed to the, the surging value of Ethereum. And you can really draw that back to programmability via smart contracts. That's what made that all possible. So what I think that you're going to ultimately see on bitcoin is you're going to see at least everything that was once tried and proven on Ethereum and Solana at the very least is going to be tried on bitcoin. Some will take effect and maybe not, like ticketing dapps and things of that nature will never make sense on bitcoin. I think there's a lot of DeFi pillars and protocols that have proven themselves to work and be something that traders want to trade on top of and arb and participate in all these different forms of speculation and decentralized finance. I think you're going to see that on bitcoin over the next year and a half, and then the sky's the limit.
00:41:49.770 - 00:42:02.414, Speaker B: Then you can start to bring various institutional products into light that allows you to leverage the native yield that some of these DeFi protocols ultimately, um, you know, create the possibility for.
00:42:03.914 - 00:43:05.408, Speaker D: So, um, in a scenario where we're going to, my working assumption is we have a proliferation of l two s on bitcoin. We may have also proliferation of ordinal activity on the native chain. Uh, just going back to fees, like, we've seen a pretty substantial spike in fees, um, in the bitcoin network, which, candidly, from my standpoint, really good. You know, you have to at some point work the security budget for bitcoin. And miners are really incentivized. Miners have always had the final say. But how do you think about the viability of your architecture in a world where transaction fees on the l one might just really skyrocket, make it pro, what would be prohibitedly expensive, where it's only a very narrow subset of users, is that market large enough? How do you think about, by the way, may not play out exactly as Ethereum, but like Ethereum, l one, fees are continue to go up, right? Yeah, of course you can offload a lot of stuff with modularity, yada, yada, yada.
00:43:05.408 - 00:43:27.674, Speaker D: But the reality is l one is for a very small subset of users that are willing to accept that. How do you think about. Because while you're running parallelization, you are competing in that block with other folks that might want to do a million other things. How do you think about that?
00:43:28.494 - 00:44:10.954, Speaker B: It's a really good question. I think Amin has something to say about it. But I would say that block inclusion is going to be a major factor in a major commodity, block space being a major commodity in the next year and a half, as everyone is going to be fighting for that distribution. So I think it's going to be very interesting, interesting to see how it plays out. But we are making a lot of considerations for exactly that future. Speaking with miners, working with them to make sure that we are included in these blocks versus other chains that are trying to compress that data and bring it back to bitcoin. I think that we're in a good position to address this, but Amin might have some comments.
00:44:11.854 - 00:44:26.974, Speaker C: Yeah, I do think, I do think there'll be, in the next bull market, there'll be a big fight for block inclusion from, from all the l two s and also the mev scene will pick up, like, quite a lot. Yeah.
00:44:27.474 - 00:44:30.294, Speaker D: Who's gonna do that on bitcoin? I'll find out.
00:44:31.034 - 00:44:44.504, Speaker C: Yeah, it's gonna get crazy, man. Like, we've seen people do private pools now, and, like, it's gonna get quite hectic in the next bull market. But that's good. That's good. Like.
00:44:46.924 - 00:45:45.444, Speaker D: Do you ultimately think, I mean, doing upgrades like, the taproot upgrade was like a herculean effort. You still have many people in the bitcoin core kind of just being really skeptical of it and the hate ordinals and whatever. At the end of the day, like, the market always wins, I think. But I'm curious, like, do you think that there may be a future where fee markets in bitcoin? Like, there's a modification to where you can have, I don't know, like any IP 50? This might be, again, stupid analogy, but like an EIff EIP 1559 type of mechanism in bitcoin. And this is where I'm tipping my hand because I actually haven't really paid much attention to how fees actually work on bitcoin. Like, you can, you can buy private Memphis, you can probably pay higher fee. But I'm curious, like, is there a version where you think that there could be an upgrade to the l one where fees become there's just a fee upgrade to make it, you know, to work around the problem?
00:45:45.824 - 00:46:12.264, Speaker C: The only way to make fees cheaper on bitcoin is to increase the block size, which, which is a big wars that was quite traumatic for a lot of people. Gladly, I wasn't there, but yeah, I don't think that would happen. But, like, anything can happen at the end of the time. We just need to see, to see it play out.
00:46:14.484 - 00:46:57.444, Speaker D: Yeah, maybe I'm curious. You guys have been around, you've paid attention to the space for a long time. I think everyone, like, is salivating over this idea that, like, there's all this on unproductive capital in bitcoin, still the largest network. Why wouldn't you build there? Why wouldn't you facilitate more utility? But it is quite hard to build there, I think. But you guys could be doing million other things. Why build here? Did you explore other possibilities? Build your own chain? Build on Ethereum, build on Solana? Like, I'm curious, why are you doing this?
00:47:00.264 - 00:47:48.988, Speaker B: I think, I mean, we both, Amin and I, come from extensive backgrounds in, you know, chain agnostic. Whether building on top of Ethereum, Solana, bitcoin itself, or investing passively from the sidelines over the last, you know, decade, it feels like, you know, my time in bitcoin has really dated back to my time in Tallahassee at Florida State where someone told me that bitcoin was going to be $100,000.01 day. And at the time it was less than ten. So naturally I was incredibly excited to immerse myself in the culture and learn as much as I could, which led me down the rabbit hole of learning to mine in my dorm room and day trade those coins on bit instant, like a long time ago, if you even remember what bit instant is. But I think the main reason for us on why we reached this conclusion was no one else is doing it. Everyone is giving up on bitcoin.
00:47:48.988 - 00:48:50.840, Speaker B: Even though we all agree that this radical shift just happened, creating a new possibility. And we knew that this opportunity was going to be absolutely massive because while it offered that the functionality that people absolutely desire, and you see this with the programmable dapps and protocols that they're already starting to build on stacks and even bitcoin today, liquidium, as I keep mentioning, but there just wasn't the picks and shovels available for these builders to actually build what they wanted to build. So we viewed that as just an absolute massive opportunity. And I think that our investors and advisors would agree from that standpoint. And also the extraordinary amount of interest that we've been getting from the developer community to want to come and build something on Arch has been extremely encouraging. Incredible amount of interest from. From people who want to build natively on bitcoin as opposed to, you know, trading off security principles and putting their users into the position of having to decide that.
00:48:50.840 - 00:49:00.484, Speaker B: I think that that's been extremely encouraging. And we knew that this was a massive, massive opportunity, so that it was just we, there was no interest from us to build anything else.
00:49:00.904 - 00:49:31.734, Speaker D: Yeah, I do want to go back to this thing and I want to make sure I get it right. There is. It is certainly like your setup is more. I guess you give up less on security relative to an l two. You are still making some mark. What a marginal trade off where you need to get comfortable with this network of participants that are doing the validation as you're running parallel transactions in that block, right?
00:49:32.074 - 00:49:46.026, Speaker B: That's right, yeah. As a market maker or maker, depending on the use case that we're talking about here, you will be engaging in some limited trust assumptions and putting that trust on the network of notes on the network.
00:49:46.090 - 00:50:30.380, Speaker D: Yeah, on that point. And I keep going back to this because I think it's the most important thing because when what is the mechanism for dispute and resolution. And to roll it, I don't want to say roll it back, but, like, in an instance where the, like, I guess you can, you're slashed, but as a user, can you contest that? Can you, like in a. In an l two. As an example, in an l two without fraud proofs, it's like you're gone, right? There's an l two that has fraud proofs but has a centralized sequencer. They can ultimately, like, withhold the transaction. They can stall it, but you can always settle it back to the l one.
00:50:30.380 - 00:50:53.384, Speaker D: But I think a lot of people have that confusion. Right? They criticize, like, the centralized sequencer. I'm like, that's not a security trade off you're making. That's because ultimately you can always bring it back to the l one and claim your assets. It might take some time, you might be liquidated, whatever. But if you don't have fraud proofs on an l two, you're kind of hosed in that scenario. Like, that's a very big jump.
00:50:53.384 - 00:51:09.584, Speaker D: Where are you guys in that continuum? Like, in a scenario where you might want to contest that, you might want to challenge that, you get slashed, whatever. Is there a mechanism to dispute that, to ultimately sell? Like, I don't know if the question makes sense.
00:51:10.204 - 00:51:38.504, Speaker C: Yeah. So within the network, we have a vote program where each node votes on the validity of the transaction that's being settled. And once that transaction gets the majority of the votes that settled. And this program handles, like, slashing and which knows got it right, which ones didn't and what's considered malicious or not got.
00:51:38.544 - 00:51:49.056, Speaker D: And that's, there's a, I guess, approver, and then there's, like, observants that are just voting on it, and then once that's done, it's done. Right. There's no, like, period where you can contest that.
00:51:49.080 - 00:51:49.280, Speaker C: I guess.
00:51:49.312 - 00:51:52.624, Speaker D: Once it's settled. Settled, you're confined by that block time.
00:51:52.924 - 00:52:02.064, Speaker C: Yeah, we are committing. We are committing the settlement to bitcoin. So you really can change it. Once it goes to bitcoin, it's fine.
00:52:03.324 - 00:52:56.364, Speaker B: Yeah, but, Santa, you brought up a great point that a lot of these l two s are just very, like, thinly veiled multisigs at the end of the day, that as a user, you have absolutely no recourse if anything goes awry. And that's what we're strongly counter positioning against. Feel that even though that there is a multisig in the loop of what arch entails, there's no bridging of those assets everything is proven to be correct and the execution actually did happen in a secure way, and that's the main difference. And you can draw assumptions to program derived addresses on Solana or smart contract controlled wallets. On Ethereum, we're doing something similar with multisigs, but at the end of the day, there's no bridging that happens of this asset. And the verifier network is what keeps those wallets and those smart contracts and these applications in check.
00:52:57.224 - 00:53:09.324, Speaker D: Right? Yeah. How much disclosure will there be? I assume pretty transparent on who is part of this network or would you, for security reasons, not really make it as public?
00:53:11.784 - 00:53:22.564, Speaker C: I would make it public like who is participating in the network at every stage on the way that we make everything decentralized and permissionless.
00:53:23.264 - 00:53:44.938, Speaker D: Yeah, everyone wants to chase yield. It is important. Anyone that tells you it's not is kidding themselves. We are rational economic people. What is the type of like, inflation curve? What is a fee like incentive for these people? Maybe we just touch a little bit on tokenomics and how that plays in and how that's important to kind of bootstrap. Yes.
00:53:45.026 - 00:54:16.174, Speaker B: So we do operate on a gas model similar to that of Ethereum, where in addition to the bitcoin fees that you'll pay, which is going to be standard and required to post the transactions back to bitcoin. Can't get around that. But we mark up the network resources of the VM, which is extremely small compared to what the bitcoin fees turn out to be. And we share those fees with the validator network who are running the nodes.
00:54:18.024 - 00:54:25.764, Speaker D: Got it. But initially, is it like most networks, you have like a high inflation curve and then it kind of decays over time. There's like a.
00:54:27.864 - 00:54:31.924, Speaker B: In terms of, like the Roi for these, for the people putting up stake.
00:54:32.384 - 00:54:34.216, Speaker D: Yeah, yeah.
00:54:34.280 - 00:55:15.704, Speaker B: I would say that running a node is going to be one of the best opportunities in our ecosystem. And initially, the, you know, the APY or ROI, of providing stake is going to be an enormous opportunity for those who want to get involved early. So, yeah, I would say that that's definitely going to be an attractive scenario for people who want to participate and support the network. And then, of course, as time goes on and the token rewards start to plateau a bit, then we'll be fully decentralized by then, and permissionless to the point where we no longer need to prove the efficacy or the, the attractiveness or allure of wanting to supply stake to secure the network.
00:55:16.284 - 00:55:28.744, Speaker D: Right. Two questions as we just kind of round it out. One is how easy is it for developers to build? What's the tooling, the developer experience?
00:55:30.084 - 00:56:10.244, Speaker B: We put a huge emphasis on onboarding developers and their experience to make it as elegant as possible. We're completely built in rust, so anybody who knows Rust, they can come in and deploy in our testnet and maybe just a little bit of bitcoin knowledge, but you don't need to know any bitcoin script or any additional programming language in order to deploy, which is easy from the standpoint of onboarding developers and projects. We're working with several projects coming from the Solana ecosystem who are obviously already built mainly in rust. So porting over their smart contracts that they've already worked on or built or their frameworks is. Is an easy lift for them.
00:56:10.624 - 00:56:11.364, Speaker D: Right.
00:56:13.104 - 00:56:31.084, Speaker C: It's also very similar to the Solana programming model, since we're still doing parallelization. So for Solana developers, it's really easy. You don't even need to change the way you think, but it's for other people, it's still easy. You just trust some high level bitcoin knowledge.
00:56:31.544 - 00:56:41.044, Speaker D: Yeah, you should go talk to tensor guys or some of the apps in Solana, because magic Eden is kind of eating a lunch in bitcoin. I would assume that they might be interested in deploying an arc.
00:56:44.144 - 00:56:54.404, Speaker B: I can't confirm or deny, but. But, you know, if I was. If I was tensor, I'd definitely be looking at the ordinals ecosystem for coming into to play around there.
00:56:55.424 - 00:57:13.714, Speaker D: Very nice. Maybe let's just talk about the roadmap from here. I know you guys are coming out of stealth. What are the next 612 months look like? And, I mean, don't kill me for asking the questions, because I know developers hate when to get deadlines set on the development roadmap.
00:57:15.094 - 00:58:13.894, Speaker B: Yeah, so I mentioned our devnet has been live now in private beta for about six weeks. So we've been working with about 20 different projects who are all currently building and integrating into our stack, or our solution into their stack, I should say. So in the coming weeks, we'll definitely be launching our public Devnet, which will be inviting anybody who wants to come in and build into bitcoin on top of arch to come in and deploy dapps or protocols. Shortly after that, we'll roll out our incentivized testnet so the builders who have been building on arch can actually deploy their applications in a way where now the consumers can participate in those testnet environments and come see what smart contracts on bitcoin and smart applications on bitcoin ultimately look like and then shortly followed after that, it's mainnet release. So we're looking at May as our timeline. Yeah.
00:58:15.154 - 00:58:26.454, Speaker D: Wow. Well, this is fascinating discussion, guys. Yeah, this is good. Anything else we haven't discussed that you guys want to touch on while we're here?
00:58:29.554 - 00:59:23.254, Speaker B: No, I think we literally just hit on it. I think that. Stay tuned for the rollout of the public testnet because that's going to be an exciting moment for Arch and the bitcoin ecosystem as a whole, where we can see now what programmability actually looks like. Because for most people who are knowledgeable in the space, but maybe not knowledgeable with respect to Arch, they're convinced already that programmability is out of bounds for native bitcoin. So we're here today to share that that's not the case. It's coming and pretty soon you'll be able to participate in what that programmability is ultimately going to look like and maybe farm some points on arch, farm some points on these applications who are also going to be launching their own incentivized programs and it's going to be an exciting time. Defi Summer 2.0
00:59:23.254 - 00:59:25.214, Speaker B: that's awesome.
00:59:25.794 - 00:59:42.052, Speaker D: Well, really cool, guys. Thanks for coming on, sharing the story. What's the best resource for developers and users and other folks in the community to learn about? You know, dive into documentation, but also maybe your hiring and other stuff first.
00:59:42.108 - 01:00:08.744, Speaker B: I'd say follow our twitter. That's where we're going to be extremely active on comms in the coming weeks. Arch network with no vowels on the network ntewrk. And you can go to our website, ArchNetwork xYz or arch.net work and you can apply, if you're a developer, to be given access to our Devnet as well as dive deep into the docs, which there are links as well there on the website.
01:00:10.964 - 01:00:33.216, Speaker D: Really cool, folks. Well, it's great. We always like to bring on teams that are coming out of stealth. I think we've had a pretty good track record. Yado, so thanks for coming on and sharing the story. Very exciting. Yano and I both had Bitcoin L two s or bitcoin more programmability in bitcoin utility as a key theme, and we still certainly believe that.
01:00:33.216 - 01:00:43.644, Speaker D: So it's great to hear the story and how you guys are positioning and differentiating. So best of luck and we'll certainly be following your progress and maybe we can have you guys on later on this year as you roll out mainnet and start seeing more traction.
01:00:44.184 - 01:00:47.484, Speaker B: Absolutely. You guys had Cathie Wood on before, right?
01:00:48.024 - 01:00:49.684, Speaker A: We did last week.
01:00:50.344 - 01:01:02.310, Speaker B: I think her base case for bitcoin is starting to sound less and less kooky as Defi summer rolls out. So maybe, maybe we could do a show with her sometime when when this whole thing plays out.
01:01:02.462 - 01:01:02.702, Speaker C: Yeah.
01:01:02.718 - 01:01:03.246, Speaker B: I love it.
01:01:03.310 - 01:01:06.726, Speaker A: Cool. I mean, thank you, Matt. Thank you. This is this is great, guys.
01:01:06.910 - 01:01:07.822, Speaker D: Thanks, Jens.
01:01:07.958 - 01:01:35.464, Speaker A: Cheers, everyone. Jason here. Thank you so much for watching today's episode. Wanted to take a quick second to thank today's title sponsor, Arbitrum. We know you are tired of on chain experiences that have unaffordable fees and frustrating transaction speeds, and that's why we partnered with Arbitrum. You can experience frictionless trades, lightning speed, and lag free transactions, all for pennies per transaction. Explore arbitrum's expanding ecosystem at portal arbitrum IO.
01:01:35.464 - 01:01:38.864, Speaker A: That's portal arbitrum IO. See you for the next episode.
