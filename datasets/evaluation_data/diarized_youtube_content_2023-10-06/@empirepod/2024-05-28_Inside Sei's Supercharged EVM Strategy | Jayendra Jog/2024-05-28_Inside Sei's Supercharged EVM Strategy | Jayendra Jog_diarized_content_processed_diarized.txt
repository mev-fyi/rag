00:00:00.480 - 00:00:27.350, Speaker A: Scary stat for you. The odds of falling victim to online crimes are one in four. Aura provides digital security protection to keep your personal information, passwords, online activity and technology safe from online threats. For empire listeners, aura is offering 14 days free plus up to 55% off an aura subscription. When you visit auraaura.com forward slash blockworks terms and conditions apply. See cipher details.
00:00:27.350 - 00:00:57.044, Speaker A: You'll hear more about aura later in the show. This episode is brought to you by Kinto, the safety first L2 that features user owned KYC and native account abstraction to solve the two biggest roadblocks to mainstream adoption. One, security and two, user experience. Their founder, Ramon sent me the onboarding flow. It's engine Kinto XYZ. I would highly recommend becoming a founding member of their launch program. You'll hear more about Kinto later in the show.
00:00:57.044 - 00:01:33.344, Speaker A: Are you tired of high gas fees? I'm excited to let you know about Skale, a zero gas fee modular blockchain that's become a perfect fit for gaming and AI apps because of their instant finality and lack of mev. Explore the skale ecosystem today at Skale space forward slash ecosystem and stay up to date with the gasless blockchain on X at Skale Network. That's at scale network. Big thanks to Skale for sponsoring Empire. Hey, everyone, welcome back to Empire. We are joined by Jay, co founder of say Labs. Jay, welcome to show, man.
00:01:33.724 - 00:01:35.772, Speaker B: Yeah, long time listener. Thanks for having me on, man.
00:01:35.868 - 00:02:04.240, Speaker A: Long time listener, first time caller. Love it. Good to have you here. We have spoken a lot in kind of just, like, private one off conversations about your thoughts on the industry, and I always leave those conversations questioning more things than I did going in. So I wanted to have you on the podcast to talk about some of those things. But before we do, uh, we are recording this on May 13, uh, Robinhood has shut down the buy button for GameStop. Uh, GameStop has been halted, like seven or eight or nine times already.
00:02:04.240 - 00:02:13.564, Speaker A: Uh, it's up, I think, 100% today. You spent some time at Robin Hood, um, before, say, and I just. I don't know, I just love to get your take on this whole Robinhood situation. What do you think of it?
00:02:13.984 - 00:02:18.568, Speaker B: Yeah, I mean, so for context, um, today, roaring kitty's, uh. Roaring kitty.
00:02:18.616 - 00:02:20.428, Speaker A: Roaring kitty, yeah, yeah, one of those.
00:02:20.536 - 00:02:52.074, Speaker B: Yeah. So there's this guy named Keith Gill who was, like, one of the initial people who helped get the entire game swap target started. He just had, like, a deep, fundamental belief in GameStop as a sock. Back when I think it was trading like $5 per share back in, like, 2019 or 2020. And he just kind of held onto it and, like, he wrote through it. And basically what kickstarted a lot of activity today, I think, is because Keith Gilgi, like, tweeted for the first time in, like, uh, two years, uh, three years, something like that. Um, and that just made people go absolutely crazy.
00:02:52.074 - 00:03:47.528, Speaker B: So right now, there's a massive pump happening, uh, for GameStop, the actual stock. And whenever you start seeing something like a meme stock that starts to do well, um, it results in short squeezes as well, um, because there's people that are, like, sophisticated investors that are like, oh, the stock is overvalued. Um, and they're, like, betting against the stock. And when the stock starts going up in value a lot, uh, there's this concept of a short squeeze where these people that are holding short positions, they need to basically buy back the stock to close off their position once theyre enough of a loss. So when they buy back the stock, that leads to increased sell pressure or increased buy pressure, which just results in the stock doing even better. So its absolutely crazy, and its just really, I think, exciting to see all this playing out. I used to work back at Robinhood and when this happened as an insider from an engineering standpoint, which is a total mess, because whenever something like this happens, it's just, like, super chaotic internally because there's always, like, new production issues that come up.
00:03:47.528 - 00:03:55.128, Speaker B: But if someone just watching, I think it's really magical to see, like, normal people winning and, like, these institutions that are starting to take losses.
00:03:55.216 - 00:04:15.564, Speaker A: Yeah, I don't know who's out here shorting Gamestop, right? I'm like, there's a million other stocks you can short, like, shorting this stock that can be moved like this. So you were a software engineer, Robinhood, through, I think, end of 2021, if I remember that correctly. So you saw some of the craziness play out. What happens behind the scenes on a day like this?
00:04:16.624 - 00:05:21.494, Speaker B: Yeah, behind the scenes at Robinhood, from, like, the engineering side, there's, like, a bunch of production outages that used to happen. It's interesting because Robinhood previously used to be architected with, like, initially it was a monolithic system where there was, like, just one primary server that was, like, one primary service that was handling all the traffic. And then from there, it became more of a microservice architecture, where there were a bunch of different components, and they all needed to interact with each other. And this transition to being more of a microservice architecture, it actually resulted in a ton of issues, and that's why whenever we ended up having any period of a spike in activity, there'd just be a ton of engineering issues and incidents that would happen, which I think is actually an interesting comparison to monolithic versus modular chains, which you can probably talk about in a bit. But, yeah, from an engineering side, it's just a complete mess. And then from, I think, more the actual business side, it's really exciting, because days like this is when you end up having the most number of new users that are creating accounts, the most amount of activity that's happening as well. So days like this are kind of just, I think, some of the days that end up defining the company's direction.
00:05:21.494 - 00:05:26.286, Speaker B: So I'm sure Vlad Beijing and the rest of the team are just super happy with the activity happening right now.
00:05:26.390 - 00:06:06.326, Speaker A: Yeah, yeah. Especially a week or two after they kind of clap back at the SEC. So, anyways, let's get him to say, man, uh, say sits at this, like, interesting intersection, um, of this kind of, like, l one l two debate, I would say, of the infrastructure debate. So I remember when you came into the blockworks office, it must have been, like, fall of 23, and you were kind of saying, like, um, there's, like, full monolithic over here, there's full modular over here, and, like, actually say, kind of sits in. In the middle a little bit. I'd love to get your. I know that was several months ago, and I'd love to get your just updated view of where there's, like, monolithic versus modular, l one versus l two, evm versus non evm.
00:06:06.326 - 00:06:10.714, Speaker A: There's all these different debates that are happening. Where does save fit into this whole conversation?
00:06:11.054 - 00:06:42.356, Speaker B: Of course. Yeah. So maybe just going over sail briefly for listeners that don't really know much about us. Save is the fastest layer one right now. Save V one went live in August of 2023. So however many months, that is, like, nine months now since it went live, and it's just been the fastest chain in terms of finality out there. The biggest point of feedback that we've gotten from developers, though, in the past nine months, is that if you have a chain without the EVM being supported, it's exceptionally difficult to get developers to build on it.
00:06:42.356 - 00:07:28.070, Speaker B: And that was the inspiration for save you two, which is the first paralyzed EVM. And in terms of why we decided to build this, just from these conversations we've had with developers, there's, like, one core idea, one core point of conviction we've developed, which is that the EVM is here to stay because every single crypto native engineer right now, essentially all of them are using the EVM. There's some people that are building on Solana's runtime sea level, but outside of that, there's very close to no one that's building on move cosmosm, fuel vm, or any of these other alt vms. And at the end of the day, the EVM is not just a tech stack. It's honestly much more than that. It's an ecosystem. It could even be compared to religion in a way.
00:07:28.070 - 00:08:15.550, Speaker B: But fundamentally, it's extremely difficult to get people to leave the EVM and start building on some kind of new execution environment. So rather than trying to build a new vm and trying to get adoption over there, which I think is extremely difficult, the only way you can do that is by pulling in web two developers and then have them grow at a faster rate than they would by building with the EVM. It's much more effective to support the EVM and improve whatever shortcomings that currently are with the EVM. And the biggest limitation of the ethereum virtual machine right now is a lack of throughput. So throughput, you can think of it as the number of transactions that are being processed for any given unit of time. People typically talk about it in transactions per second. I think now there's a growing push to start thinking a bit in terms of gas per second.
00:08:15.550 - 00:09:01.213, Speaker B: I personally don't actually think that'll start getting that much adoption, but we'll see. But if you think in terms of transactions per second, Ethereum L1, and essentially any chain that's using Ethereum data availability right now, it's like any ethereum roll up as well. They're not able to get more than around 50 transactions per second. And this ends up leading to an extremely restricted design space for developers. Because if you can only build with 50 transactions per second, then you have to make a bunch of shortcuts. You have to make a bunch of design trade offs that result in you being able to build something, even if that's not being built in the best way possible. One example here would be automated market makers, which don't exist in traditional finance, but they do exist on chain because they fit the limitations of what the Ethereum virtual machine has to offer.
00:09:01.213 - 00:10:00.604, Speaker B: And that's why we decided to start working on building the first parallelized EVM, because parallelization is one of the mechanisms that allows you to get greater throughput. We can touch on that in a bit as well, but when you do end up having parallelization, you're able to increase the design space for developers that are now able to build entirely new types of applications. So we anticipate to get roughly 100 x improvement in throughput on what the EVM currently offers. That's why I think the EVM save you EVM has been particularly interesting for devs in terms of where we stand on this entire landscape. Sei is an integrated chain in the sense that it combines execution, settlement, and data availability all into one chain. And the reason that we chose to make this design choice is because with Sav two, the biggest thing that we care about is performance. And integrated systems have by definition, the best performance.
00:10:00.604 - 00:10:42.304, Speaker B: If you have, let's say, three separate components to the stack, all these components need to interact with each other, and that adds communication complexity. So if you were essentially to take some kind of modular system, combine all the parts, you will end up having better performance. That's exactly what an integrated chain is in terms of how this industry is going to play out. The sense that I have is that there's two ways to scale the EVM. The first is through this high performance route, which save you too, is going down. The second way is through a modular approach where you encourage experimentation and give people dedicated block space. I think there's a ton of use cases in which performance doesn't matter, but having dedicated block space or being able to control your infrastructure does matter for teams.
00:10:42.304 - 00:11:08.184, Speaker B: From a cynical standpoint, I think a lot of teams are going to be enthusiastic about that because they want to launch a token and having their own infrastructure lets them do that. But even from like, a more product focused standpoint, I think it does end up being better because you can have your own dedicated block space, you can control mev, you can control the user experience. There doesn't end up being state contention. So I do think that allows you to have, like, there's a very clear reason why people would want to build modular chains as well.
00:11:08.604 - 00:11:19.330, Speaker A: Let's walk through. There's actually this David Phelps tweet said chain. I dislike blast chain. I think is underrated. Radix chain. I like ethereum, solid bitcoin chain. I love arweave chain.
00:11:19.330 - 00:11:45.694, Speaker A: I feel most myself in cosmos chain. I dream of building on monad, say bear chain and chain. I still need to try please God no more. So I actually want to maybe compare, say, to a couple of these and the first one being monad. So when I think the industry thinks of the two, like, best parallelized EVM chains that are being built right now, it's Monad and say, I would assume that's what people think. How are you guys different than Monad?
00:11:47.574 - 00:12:20.730, Speaker B: Yeah, I mean, Kentley, I think the way. So first of all, I think their team has done a fantastic job. I think especially in community building. That's probably one of the, like, I think that a lot of teams in crypto, they focus on building good tech. I think there's very few that are able to build exceptional communities. So I think that's one of the things that they've done a really good job at in terms of how I anticipate that dynamic to play out. Like, we are still extremely early and there's plenty of examples of dynamics like arbitrum optimism or like aptos and sweet.
00:12:20.730 - 00:13:10.046, Speaker B: And I think this is going to end up being one of those situations as well, where there's essentially two market leaders and both of these are going to keep innovating, drawing in good teams, and being able to get activity to happen on chain. In terms of the differences, it's difficult for me to speak about the technical differences because there really isn't that much that is publicly available. I've read through their docs. A lot of the stuff around how their database optimizations work are still pretty opaque to me, so I can't really speak much about that in terms of the user experience. It should be the same because both of them will be supporting a backwards compatible EVM. So developers will be able to take stuff that exists on Ethereum, all one, and then deploy it to say, deploy it to Monad and just have it work. So I think probably the bigger difference is going to be just around the philosophies that the teams have.
00:13:10.046 - 00:13:41.694, Speaker B: In our case, we're very much a Silicon Valley team, like me and my co founder. We both grew up in the Bay area, and the Silicon Valley mindset is definitely one of chip fast and then iterate, because that's really the only way that you can grow a startup, especially in Silicon Valley. I think that is the resounding ethos. Shift fast, collect user feedback and iterate. And that's exactly the approach that has been taken from the very get go, let's say. And I think that approach does lead to you being able to launch faster and then be able to get more activity and kind of more adoption happening in a shorter window.
00:13:43.674 - 00:13:50.134, Speaker A: How would you stack se up against some of the l two s? Like, let's put arbitrary optimism in this bucket.
00:13:50.954 - 00:14:33.776, Speaker B: Yeah, I mean, say it's just going to have better performance. Like, I think that the modular approach ends up being good for certain things. I think, like the op stack, for example, is a really good way for teams to start building their own dedicated chains. But at the end of the day, the biggest thing you care about is performance, and you want to have 100 x better throughput because you want to not really fit into the limitations the EVM currently has to offer. It's a no brainer to build on something that is high performance. And that's why I think as the industry matures, definitely by the end of 2025, probably by the end of this year as well, parallelization is going to start becoming a default. There's no reason that you wouldn't want a high performance chain if you are able to get it.
00:14:33.776 - 00:14:53.724, Speaker B: And that's why I think that essentially every single EVM implementation that is not paralyzed right now, they will start moving in that direction if it fits the data availability and bandwidth constraints that their architecture is going to be supporting. So by default, every l one, I think, will start supporting parallelization. And I think if you're not using Ethereum for data availability, then you'll start moving towards parallelization as well.
00:14:55.424 - 00:15:30.884, Speaker A: What do you think about this idea that maybe the counterargument to that. If I was at arbitrum or optimism or something like that, you'd say that, like, I'm going to venture outside of my full understanding here, but, like, in parallelism, and there was this tweet thread by the, I think, I think her name is Rachel, she's tech leaded. I think at arbitrum, she said in parallelism ten x, the core has only cut some costs when workloads are parallel. But this, in reality, in crypto, this rarely happens. Right? Like dapps, aren't parallel. Everyone wants to mint at the same time, like claim airdrops, et cetera. And that web3 and crypto apps are not like web two apps.
00:15:30.884 - 00:15:42.864, Speaker A: Right? And that's why historically, there's been, like, minimal opportunities for parallelism among, like, eth's historical transactions. I'd be curious, like, I'd be curious how, how you think about that counter argument.
00:15:43.284 - 00:16:10.088, Speaker B: Yeah, so, I mean, I think that's just predicated off an incorrect assumption. There's been analysis that have been published by Ren from electric capital paradigm as well. Only around 20% of transactions historically for ethereum l one have touched the same state. So 20% of transactions might be touching the same state. Everything else can be paralyzed. So I think in practice, it actually is, just by default, very parallelizable. And you are able to get pretty significant performant gains from that.
00:16:10.088 - 00:16:20.484, Speaker B: If you add on other things, such as making database optimizations, you're able to get even better performance. So I do think there's actually pretty substantial amounts of performance gains that you can get.
00:16:21.364 - 00:16:24.544, Speaker A: Uh, last one here, save or Solana, how do you think about this?
00:16:25.364 - 00:16:59.314, Speaker B: Yeah, so it's interesting because one mental model that people have brought up about jv two is kind of like Solana, except having, um, the EVM as a first class citizen. And I think that ends up kind of being the biggest differentiator over here. Solana is catered for a different type of audience than save U two is, um, in Sebi two's case, we are building for the EVM developer, and Solana's case, they're building for. I mean, honestly, it ends up being a web two developer that then needs to start building on any chain that has an OPM. So I actually don't even think of, say, in Solana as being competitive. I think they're just catered for totally different types of developers.
00:17:01.654 - 00:17:16.674, Speaker A: Let's say you're sitting down with a really good founder, and here she is saying, look, jam thinking about building on, I'm building a dap, I'm building some sort of defi app or something. I'm building a Dex, let's say I'm down to, say, versus Solana. How do I make that decision?
00:17:18.144 - 00:18:04.854, Speaker B: Yeah, I mean, I think a lot of it depends on the, I guess, their belief in the EVM. Like most EVM developers, like most crypto native developers right now, they are very reluctant to move off the EVM, and it only ends up being for very strategic reasons. They would move off, but by default, they would choose to build on an ecosystem that supports the EVM instead of going to an entirely new execution environment. And I mean, the fundamental reason for that, I think it ends up being, like, multifaceted. One part of it is purely technical. From a technical standpoint, if you're already familiar with the quirks of the EVM, it's much easier for you to write safe code. If you go to a new execution environment, you write some smart contract over there, and then you make even a small bug in that that can result in your entire project getting grained.
00:18:04.854 - 00:18:49.396, Speaker B: It ends up being just an existential risk in a way. Beyond that, there's this entire ethereum alignment side of things, where fundamentally people think of the EVM, in a way, as a religion, and it's really difficult to convert someone and have them move off. And I think we've actually kind of seen something playing out, something similar play out with JavaScript as well. Back in the day, like 1990s was when JavaScript came out, there were initially a lot of different contenders, none of them were really able to win. And the JavaScript just started getting more and more mind share, more and more tooling and developer audience built up around it. And it's been really, I mean at this point it's been impossible to get people to move. Webassembly came out as well back I think in like 2017 or something, and even that wasn't really able to get people to move off.
00:18:49.396 - 00:18:57.584, Speaker B: So I don't think it's like better tech that's going to make people move off the evM. It's going to have to be something completely different to force that transition.
00:18:58.244 - 00:19:24.874, Speaker A: How does that religious aspect around a technology, around an ecosystem drive how you think about building community, zooming out? Like I would love to just hear, like you mentioned, Monad has like good community. Like, I'd love to just hear like how you as a founder of one of these protocols, think about just like the importance of community, how, how you build community. Like how important is the narrative? Like, yeah, just take me behind the scenes here.
00:19:25.814 - 00:20:18.890, Speaker B: That's an interesting question. So I fundamentally think that with any open source project, tech is never the differentiator because anyone can just take your source code and like copy it. I think maybe monads not the best example there because it's closed source. But I think for every single major project that you see right now, like Ethereum, Solana, you can go and take Ethereum and fork it, but you're never going to have the same type of outcome as Ethereum does just because there's all of the mind share that's already around the initial project. So I do think the stickiness for projects ends up being around the users that are there, the liquidity, but even liquidity can move pretty quickly, so it just ends up being around the belief that folks have in that ecosystem. So that's kind of what I think about for like what makes people choose one ecosystem. It ends up being like the mind share the belief that people have and the excitement that they have around one particular ecosystem.
00:20:18.890 - 00:21:07.474, Speaker B: And I think that you don't really see this until after the project goes live. I think that historically there's been a lot of projects where there's a huge amount of excitement before the launch happens, because there's a lot of people that are excited for perhaps an airdrop, or it just ends up being very hyped up I would say that community is really only there probably six months after the launch happens. And that's one thing that Solana has done exceptionally well. Solana has a genuine community. A lot of the more recent launches that have happened for perhaps l two s that are maybe not as like in the limelight anymore. They end up having a ton of excitement before the launch, and then after the launch, people have gotten their airdrop, and then they move on to whatever the next meta is. I do think it's something that you really need to be focused on after the launch happens, because before the launch, it's really just one way to think about is it's oftentimes just your golf farmers.
00:21:09.254 - 00:21:22.674, Speaker A: What's the strategy to building a, like, how do you build your community? How do you, like, what do you talk about internally at your Tuesday, 02:00 p.m. meeting when you're like, all right, what's our, what's our community strategy here? Like, how do you do it?
00:21:23.094 - 00:22:07.816, Speaker B: So, I mean, I personally am just much more focused on the tech. There's folks from Safe foundation that think about a lot of these questions, but I think the way that things have played out in safe space, I can just kind of go over that. It ended up being, I think, multi step, multi step kind of approach. So the first thing is there needs to be a very clear narrative around what you're building with, save you to the first paralyzed EVM. I think there was that narrative around exactly what the product is. And I think a lot of projects, honestly, they struggle with even having that clarity around, like, what that ecosystem is going to be building and having values tied to that. For example, in the case of, say, it's around fast iteration, being able to move quickly, and collecting user feedback as quickly as we can from that.
00:22:07.816 - 00:22:46.944, Speaker B: I think what we observed was that there were a lot of people that got really excited about, say, just completely organically. You could see this on the timeline back in December, for example. But there were several people, like, I think, Ansem Saka, like a lot of people, that were just really excited about the ecosystem. And then this led to more and more people coming on, getting excited about the project overall. And then once there's, once there's interest from normal people, that's when it becomes much more strategic for developers and other folks to come on, and it becomes just like virtuous loop where you have normal people that come on. This leads to more people that are building, which then leads to more normal people that come on. I think in say's case.
00:22:46.944 - 00:23:03.644, Speaker B: That's how that was able to click. And I actually do think say is probably one of the top ten communities in crypto right now. And especially after the v two launch, I think that could become even more. It could grow even faster once there's just new types of EVM applications that are deploying on chain.
00:23:06.224 - 00:23:40.496, Speaker A: This episode is brought to you by Aura Online. Crime is growing at an alarming rate, and cyber criminals continue to find crypto investors like the empire community lucrative targets. We've all heard of someone who's fallen victim to some sort of online attack. Aura helps prevent against that. For example, if your online accounts or your passwords were leaked online, or if someone tries to open a bank account in your name, you'll get notified in real time about that. With twenty four seven us based support, Aura's team will be there for you to resolve fraud issues, even if it means getting on a three way call with your bank at midnight. Not saying I had to do that, but I might've had to do that.
00:23:40.496 - 00:23:59.244, Speaker A: So aura.com blockwork sign up for the 14 day free trial. Terms and conditions apply C site for details Aura is the new standard in digital safety. Check them out. Aura.com blockworks free 14 day trial this episode is brought to you by Kinto. Kinto is a safety first layer.
00:23:59.244 - 00:24:21.152, Speaker A: Two, that features user owned KYC and native account abstraction to solve what are probably the two biggest problems in crypto. One, security and two, user experience. I'm an investor in Kinto. I've known their founder, Ramon for a long time. Ramon the other day sent me a message on Telegram and said, you got to try this onboarding. I'm super proud of it. Please, just go ahead and try this out.
00:24:21.152 - 00:24:46.728, Speaker A: Tell me what you think. It is the most magical, seamless onboarding experience onto an l two that I've ever had. You can. You can try it out. It's enjin engen.com. i would really recommend going through the whole onboarding flow just to see what the future of crypto can feel like and what it probably will look like in the future. Go onboard Engen dot XYZ.
00:24:46.728 - 00:25:15.374, Speaker A: Let me know what you think and if you want to chat with their founder, Ramon. Happy to make the intro. Hey, everyone. Jason here. I know you've been hearing a lot about the intersection of crypto and AI, and that's why I'm really excited to share our newest partner and sponsor, Empire Skale, a high performance modular blockchain that's revolutionizing gaming and AI. With zero fees and instant finality. Skale's unique architecture allows for massive scalability and has already saved users over 6 billion in gas fees.
00:25:15.374 - 00:25:51.858, Speaker A: The five main takeaways that you need to know for 10 gas fees. Two, Skale has instant finality and lack of mev. Three, the zero gas fee model of scale is really important for blockchain gaming adoption, as gamers don't have to pay transaction costs or have the SKL token. Four, scale is multi chain. This design allows for nodes to be combined to create chains and for individual sub nodes to actually be removed and relocated, which creates greater security and collusion resistance. And five, Skale has become a really good fit for AI dapps because they're fast, automated zero fee transactions. Big thank you to Skale for sponsoring Empire.
00:25:51.858 - 00:26:24.224, Speaker A: We're excited to partner with you guys. Bridge over to scale. If you're listening to this at scale space forward slash ecosystem, follow the journey along with scale on x. At scale network. That's at scale network. Big thanks again to scale for sponsoring empire. Maybe similarly, like how do you think about building a developer ecosystem? I've we just, on some of the calls that we've had, like, it does feel like you think about building the developer ecosystem a little more like building a, like how a SaaS company almost thinks about building a developer ecosystem, but I don't, I don't know if you would categorize it like that.
00:26:24.764 - 00:27:16.426, Speaker B: Yeah. So if you kind of take a step back and think about like what a blockchain is, a blockchain is a piece of technology that you then have two types of people that are using. One of these people is developers that are building projects on it, and then another group is users that are like the end people actually using it. As someone building technology, the group that you have the most control over is the developers that are building on top and the developers are then what lead to more of these end users that are actually coming on. So fundamentally you are a SaaS company in a way. If you have that mental model where you're building infrastructure and then there's going to be developers that are the customers, then build on top of you, you ideally want to be optimizing to improve the developer experience as much as you can. I think there's some things that you, from a developer standpoint, fundamentally they really just want to build an ecosystem where they can win.
00:27:16.426 - 00:28:10.332, Speaker B: Part of this just ends up being users and liquidity, which is why building on Ethereum, l one, or Solana, that ends up being a very good choice for a lot of developers because that's where they have the highest odds of success in a way where there's already the most momentum in that ecosystem, but then there's a lot of other things that you can control that makes it better for a developer to build in your ecosystem. So from one aspect of developer experience would be optimistic parallelism versus having developers need to define their dependencies. The way that several chains, like, for example, Solana, have parallelization be supported is developers need to define all the state that every single one of those transactions is touching. And this adds more complexity to the developer experience. Optimistic parallelization, which is wutsei uses. In that case, all you need to do is just write the smart contract. You don't need to think about parallelism at all, and then the chain is just able to handle parallelism under the hood.
00:28:10.332 - 00:28:44.150, Speaker B: So with these differences in the developer kind of the developer experience, it does become a much easier process to get developers to come on and start building. So I think that you do want to make it as simple as possible for developers to build. And then in the future, I think you start seeing these developer ecosystems start kind of spinning up to a large extent organically. Like once there's some really good developers come on, this encourages, they kind of become magnets for new developers to come on. And if there's like, clear signs that an ecosystem has momentum, that results in it just being like positive ev for a lot of developers to come on and start experimenting there.
00:28:44.302 - 00:29:13.194, Speaker A: Yeah, yeah, it's interesting. One thing you've started to notice is, like, some of these consumer apps actually boost a chain more than, like, anything else the chain can do. Like, I don't like fantasy with Blast or I think base really took off from, I mean, Farcaster, but even before that, friend tech, um, pumped up fun is having a big impact on Solana. Like, how, how crucial is that one app to the success of a chain?
00:29:13.814 - 00:29:58.070, Speaker B: I think it is the single most important thing that matters for the long term success of a chain. If you don't have any killer applications, your ecosystem will fizzle out probably after the first year or two after the launch. Um, I think there's a lot of projects that have come out recently where the ecosystem kind of fizzled out, like week two, like after the Airdrop happened, after the initial hype was gone. These ecosystems have fiddled out in a lot of their cases. I don't think they're really ever going to recover. I think if you're able to get at least even just one killer application built on some kind of infrastructure, that infrastructure is going to be staying around for some time. And if there's a history of killer applications coming and launching on some specific chain, I think that chain is probably going to be one of the top five or seven, uh, just infrastructure projects out there.
00:29:58.070 - 00:30:12.474, Speaker B: And that's one thing that I think Solana has done exceptionally well. Like, there's always just different types of killer applications that are launching that are leading to a ton of excitement and a ton of activity. And most chains are not able to build anything like that, which is why most chains have not had the level of success that Solana has had.
00:30:15.054 - 00:30:37.974, Speaker A: How do you get that? How do you get that developer? Like, how do you. Yeah, how do you, I mean, I guess how much of your day is spent thinking about how do I find that one founder who's. It's your job almost becomes like venture, where it's like you can take 100 bets on people, but like, one, one company is going to return your fund. Like, for you, like, if you go get 100 founders to build on, say, like, one person's going to return the fund, essentially.
00:30:38.274 - 00:30:59.332, Speaker B: Exactly. So from the technology standpoint, it's kind of like a SaaS company from more of the commercial standpoint, ends up being more like a VC firm, as you mentioned. That's what a lot of folks at TAFE foundation spent their entire day thinking about. And it exactly is, as you said, a VC firm. You want to find like 100 potentially great founders. And I think you kind of have to. There's like two playbooks.
00:30:59.332 - 00:31:38.988, Speaker B: Like, one playbook is where you just try to find every single founder out there in the world. Even if they're bad, you just try to support them and then maybe they'll work out. Another approach is where you basically just filter out and only get the people that you think could be phenomenal founders. So if they're like a b tier, a c tier founder, you don't really even support them. And then from there, you just help these, like, eight tier founders in whatever way you can, and then some of them might end up being successful based off. It seems like the approach where you just focus on the top tier founders and really support them is the one that will be more effective. And it does end up being like a VC firm where you want to find a good number of top tier founders, support them in any way that you can, and then afterwards, a small number of them might end up building killer applications.
00:31:38.988 - 00:31:43.600, Speaker B: And if they do well, that's what leads to the outside returns. Outside returns for ecosystem.
00:31:43.732 - 00:31:51.684, Speaker A: Yeah. Do you have a sense of what that could be for, say, like, do you think it'll be a consumer app? Will it be some, like, massive Dex that does something new? Like what? What's it going to look like?
00:31:52.664 - 00:32:24.878, Speaker B: Yeah. In general, I think that consumer applications in web3 are similar. I mean, applications that lead to activity in web3 will be similar to those in web two. Things that lead to activity will be consumer applications almost by default, because these are applications that people can come and use. For what it's worth, I also count Dex as, like, a consumer facing application. And if you look at the kinds of things to take off in Web two, one way of explaining it is that they end up all being tied to some cardinal sin. If you look at Robina, for example, it's tied to greed, where people go and trade on it.
00:32:24.878 - 00:32:57.554, Speaker B: Look at Tinder, it's tied to lust or something. So I think a lot of these applications, they have a really acute feeling that they make you feel, and I think it'll probably end up being similar in crypto as well. So the way that I see things playing out is initially, it'll probably be tied, like, across, like, essentially every ecosystem. What it seemed to be working so far, as things tied to speculation. And that ends up being the spark that leads to a lot of other types of applications that come on and start building in that ecosystem as well. So I anticipate most ecosystems that take off will be following some kind of activity like that.
00:33:00.254 - 00:33:08.394, Speaker A: Yeah, that's interesting. Is there anyone, if you could have, like, I don't know, do you guys think you have this yet, or are you still kind of trying to find that founder?
00:33:09.784 - 00:33:25.576, Speaker B: I think that right now for save, too, it's still pretty early. Overall, there are a ton of really talented founders that are building in the ecosystem, but it's really difficult to say if anyone is launching a killer app until after that app is launched. And then you see activity. Typed that on Mainnet.
00:33:25.680 - 00:33:32.964, Speaker A: Yeah. You mentioned save to a few times. Give me the overview. Give me the primer. I've been hearing about it a few times.
00:33:33.624 - 00:33:37.596, Speaker B: Yeah. Do you actually just want to share your screen? I think there's a slide that could.
00:33:37.760 - 00:33:41.612, Speaker A: Yeah. Is it this one?
00:33:41.788 - 00:34:07.298, Speaker B: All right. Yes. So Sav two is the first realized evm. This slide kind of shows the differences between what savvy one had and what Sav two will have. So there's, I would say, three primary differences. The first one is Sav two will support the EVM. This ends up being an interoperable EVM, which means that the EVM is able to interact with the cosmos side and vice versa.
00:34:07.298 - 00:35:07.314, Speaker B: So essentially, this means that everything that is there on, say, right now, all the nfTs, all the tokens that are there, all the smart contracts as well, you can interact with them via metamask. So say it's like essentially one of the first chains there's offering something like this. The second thing that's there is optimistic parallelization. I was going over this before, but essentially allows you to just take something from Ethereum one, deploy it to save e two, and it just works. It's able to paralyze transactions under the hood, but from a developer standpoint, you do not need to do anything. And that's one of the really nice things about the EVM, being a first class citizen in, say, you're able to abstract away a lot of this, whereas if you look at other chains, for example, if you're supporting the EVM as a smart contract in another ecosystem, for example, neon on Solana does this, you still have to fit the limitations and the requirements of what Solana needs. So you still need to, for example, define all the dependencies that each transaction is going to be touching.
00:35:07.314 - 00:35:43.194, Speaker B: In the case of beyond, which adds in a ton more developer complexity. That's one part of it. The other thing that we're doing is we're adding in SATB. So one of the biggest issues that come up when you increase throughput is that it leads to state load. State is essentially it's all the data that needs to persist for a chain to be able to process new transactions and to be able to generate the state route. So this is data that is stored on each full node, and this essentially ends up being, I mean, mental model could be two things. The first thing is account balances.
00:35:43.194 - 00:36:18.344, Speaker B: So, like, you have ten say, I have 20 say, that'd be one example. And then it also ends up being smart contract data. So, like this Uniswap pool has this much, has this many, I guess these are the tokens that are being traded there. These are the balances for each of those tokens. So it's data that needs to persist for these transactions to actually be processed. So when you have more transactions per second, you end up generating more state, and then you need to account for how to actually handle that state. So we created state EB to help there, and it just helps massively reduce the amount of data that is being stored on each node.
00:36:18.344 - 00:36:22.444, Speaker B: And it also helps improve the statesync times to be able to start running a new full node.
00:36:25.344 - 00:36:32.924, Speaker A: Give me the impact for like a user. Like if I'm trading on Uniswap or I'm trade like, what is the, what is the impact on a, for a user here?
00:36:33.464 - 00:37:04.058, Speaker B: Yeah, so there's two things. The first is that gas fees are cheaper. If you remember like a couple of months ago, ethereum l one had like way that was like, it was like over 100 per unit of gas. So it just becomes completely inaccessible for, for a normal person to be able to using, uh, to be able to use an ecosystem where the gas fees are so high. Um, so cheaper gas fees for the normal person. I anticipate in today's case it'll end up being somewhere in the range of around one cent per transaction. I think if you go too many orders of magnitudes below $0.01,
00:37:04.058 - 00:37:34.734, Speaker B: uh, it encourages spam and it really just results in more bought add activity happening. Um, like normal users, if transactions are on like a center something, then normal users that are manually submitting transactions, they will be able to do that. They're not priced out of it. But if you become too cheap, then it actually just results in a lot of spam and network degradation like you would see with potentially other chains like Solana. So that's one part of it. The second part is there will be a bigger design space for developers. And when developers have a bigger design space, there'll be more types of applications they can build.
00:37:34.734 - 00:37:58.474, Speaker B: So that'll result in just more stuff that users can use on chain as well. When is mainnet the classic question? So what's been publicly, publicly announced so far is that sad complete. So right now there's just going to be smaller bug fixes that are going in, and there should be a governance proposal to upgrade to save e two coming in the near future.
00:37:59.014 - 00:38:21.824, Speaker A: Maybe we can get away from save you two and into some of those like, opinions that I mentioned at the beginning of the podcast. So one of the things that you've mentioned to me is this idea around pushing extreme decentralization is actually bad. Maybe, yeah, let me leave it at that. Why don't you expand on that and we can take that conversation any way that you want to go.
00:38:22.244 - 00:39:12.476, Speaker B: Yeah, so I think that there's this overarching idea that I think everyone agrees that decentralization is good. Decentralization is one of the core tenets of crypto. Decentralization is important. I think that there's a lot of projects where they just blindly associate decentralization with having as many validators as humanly possible and having like, let's say 10 million validators is viewed as having like, I mean, that, that's more decentralized, that's better than having like a small number of validators. But if you think about this like a validator, when you have 10 million validators in a network, each validator is re executing the same sets of transactions. So it ends up being a lot of redundant work for people to be able to verify the state of the blockchain. And the way that a validator works is people will only run a validator either if it's strategic for them to do so.
00:39:12.476 - 00:40:04.064, Speaker B: So maybe they're centralized exchange. In that case, they'll be incentivized to run a validator just for strategic reasons. But typically people only run a validator if whatever the income they get from like any, like processing transactions, any tips that they're getting, staking rewards, that income ends up being greater than the expenses that is needed to run, that is needed to run that value. Right? So this expenses is composed of multiple things. It's composed of both, like the actual costs of running that machine, like the electricity costs, the hardware costs, but it's also the opportunity cost of whoever that person is. Like their time to be able to run this. So when you end up having a large validator set, that results in a lot of expenses for the network, which makes that network long term less sustainable to be able to maintain.
00:40:04.064 - 00:40:42.620, Speaker B: And I think implicitly, every single project that has launched in the past couple of years has understood this. Like if you look at every single infrastructure project, they do one of two things right now. They either have a validator set that is less than 200, or they're a centralized sequencer roll up, which is essentially a validator setup one. And when you have this, you end up having like this all happening implicitly. I don't think people are really explicitly realizing this yet, but you end up having just much like, there ends up being two benefits. Like one is just around performance. When you have a larger validator, smaller validator set size, you can have higher hardware requirements, which results in you being able to process more transactions per second.
00:40:42.620 - 00:41:23.284, Speaker B: Um, and the second thing is that the network is just much more sustainable where you don't need to have like 10 million validators whose costs are being offset by the network. So the direction that I see the industry moving in in the longer term is one where you end up having smaller validator set sizes. Um, I don't think that this single, single sequencer roll up meta is going to continue for uh, too much longer. Like maybe in the medium term it will continue in like the next year or two, but I do think sequencer sets will start decentralizing in the future. But then longer term, I don't think they're going to be that big because you could have live clients that are consuming zero knowledge proofs, though. There will be ways to verify the state of the blockchain without needing to have super large validator set sizes.
00:41:26.744 - 00:41:52.174, Speaker A: What's the right balance though? Because you could argue that one validator is right because it's the most efficient way for the system to be running. Um, but there, you know, there is a reason why, like, you have thousands of validators, is because the more validators, like, you know, less. Less efficient system, yes, but, you know, more decentralized system, which maybe makes it more, you know, intolerable, breaking whatever.
00:41:52.954 - 00:42:35.934, Speaker B: I think the industry will start moving towards a direction that is considered the acceptable amount. I can't give you an exact number like 20 is the golden standard, 21 is like good, 19 is bad. But I do think the industry overall is moving to a range somewhere in like this 40 to 100 validator range, which is where it's decentralized enough. It's sufficiently decentralized where it's spread out across enough countries, it's spread out across enough independent entities where no one can really, even if a small number of them collude, you can't really have any significant impacts on the network. But I do think once you start becoming too large, it just becomes really, really, really bad for the reasons that I was mentioning before. So I think the industry overall will just move in whatever the best direction is. I don't think it's going to be one.
00:42:35.934 - 00:42:46.990, Speaker B: When you have one, that leads to a lot of liveness issues, at least to regulatory issues as well. But once you have something that's like in this few dozen kind of fringe, I think we're going to start seeing more and more people viewing that as being acceptable.
00:42:47.182 - 00:42:50.434, Speaker A: Huh? What happens to Ethereum in this world?
00:42:51.854 - 00:43:40.762, Speaker B: I think Ethereum is going to be just fine. I do think that in Ethereum's case, whenever you have harder or higher lower hardware requirements, it becomes much harder to process more transactions. So they will need to move in this direction of dang sharding in this role of centric roadmap. But I also don't think that any other change will really start going down that same route. And if you look at any layer one in the past two years, like say, aptos, whatever else you can think of, no one's really going down this route of having thousands and thousands of validators just because it is extremely inefficient. So I don't think we'll start seeing, I would say that nearly all new layer ones will start having much smaller validator set sizes compared to Ethereum. And I think every L2 in the near term will be launching with a centralized sequencer, and then in the next year or two they'll move to a decentralized sequencer set of probably in the range of 50 to 100 nodes.
00:43:40.898 - 00:44:00.814, Speaker A: What standard do you think we should hold? Different l one s that are launching and different l two s that are launching too, in terms of decentralizing their sequencer, because that, what you just said is what a lot of folks have been saying, but now they've been seeing it for a few years and it happening, but it's happening slower than they originally said. So what standard do you think users should hold the l two to?
00:44:01.394 - 00:44:29.464, Speaker B: Yeah, I mean, because l two s benefit from, I guess using DA settlement from the base layer, the argument could be made from a technical standpoint that there could be, they could be held to a different type of standard than layer once. Well, but I do think in the long term everyone will converge to the same standards that probably will be in that range that I described before of like 4000 to 100 independent notes that are there for either sequencing or validating transactions.
00:44:33.004 - 00:44:45.594, Speaker A: Yeah, that's interesting. What about. There's one other thing that we've talked about in terms of like value and shipping, product versus value, and being a research culture. Would love to hear how you think about this dichotomy.
00:44:46.374 - 00:45:46.178, Speaker B: Yeah, so Silicon Valley is very much, or SAI is very much a Silicon Valley team where we have the mindset of being able to ship as quickly as possible, being able to collect as much user feedback as you can, and then kind of directing the product based off that user feedback. I think that's the only way that you can really build something that people actually use. If you have too much of a research culture, I think there's like a spectrum, and if you're too far on the research side of the spectrum, you're just never going to ship anything. That's why, I mean, a lot of VC's that you talk to, they end up being less enthused about a professor founder, like someone that's like an academic. Because if there's too much of a culture of research that's ingrained in an organization, it often prevents people from being able to move quickly and being able to ship things. I think there are some very well known examples, counterexamples of that where people like Tree Ram, for example. I think they have been able to move very quickly.
00:45:46.178 - 00:46:00.734, Speaker B: But in general, I think if a culture is too academic or too research oriented, it's just much harder for it to move as quickly and to actually solve user problems. So I think if you're going to be on one side, it's much better to be on the side where you're actually doing things versus just thinking about things.
00:46:02.634 - 00:46:40.064, Speaker A: If I had to play Devil's advocate, the devil's advocate is that there's this kind of, like, group of maybe 20 to 50, like, crypto, that kind of think fluencer crowd, where a lot of ideas actually come from. Like, I'd probably put, like, I don't know, Hasu and John Char and, like, that kind of crew and a lot of, like, basically what they. When they kind of grasp onto these ideas, which oftentimes come from research, then things like ideas kind of permeate from them, I would say, and people start grasping on these, and that's kind of what ends up becoming some of these big narratives, I would say, yeah, I.
00:46:40.484 - 00:47:15.090, Speaker B: Agree that you need to have a certain amount of, like, any project that does well, there needs to be innovation behind that project. You can't just, like, copy Ethereum, vanilla and then have it be something that, like, people get excited about. But I think there is a direction in which you can go too far, where you spend several years just doing research. There's a ton of ideas you have for, like, innovation that you can go down, but you can't. You just decide that, like, oh, we have to keep doing more. We have to keep chasing this idea of this perceived sense of perfection. And then a year from now, you might have solved the problems you were thinking of before, but now there's like, ten new problems that are, like, the industry meta standards that you need to be solving.
00:47:15.090 - 00:47:47.294, Speaker B: So I think it is definitely. You need. You definitely need innovation, but I think you can go too far. And I think a lot of crypto projects in general, they don't really think about user problems and they don't really think about, like, they just don't have the Silicon Valley mindset, and that just results in them either not shipping at all or shipping something that people don't really care about. So if you. If you're going to be too far on one side, I think you will be better served as a founder to be just focused more on implementation and execution versus just, like, thinking about abstract research. Problems.
00:47:47.874 - 00:48:18.908, Speaker A: Let me ask you a maybe more question that I find interesting, but maybe listeners might find more boring. But I'll ask it anyways because this is, this is my pod. Um, what about manag? What is your management philosophy? Like, how do you. That's a fluffy, that's a fluffy word. Uh, to make that a more tangible question, like, how do you think about hiring? Um, and specifically, like, add a, add a protocol. There's one way that you might think about hiring, which is like, extremely crypto native. Um, because you just need that.
00:48:18.908 - 00:48:31.294, Speaker A: And like, bottoms up. Create the narrative. Everyone needs to be super crypto native. Then the other side of this is like, there's all these super crypto native protocols. Like, let me try to, you mentioned, like, web two, moving fast, Silicon Valley, a lot. Like, how do you think about hiring?
00:48:32.114 - 00:49:16.294, Speaker B: Yeah, so I can touch on the engineering side. That's what we're focused on from, say, labs. And I would say, first of all, in terms of, like, overarching philosophies, moving fast is like, probably the biggest philosophy we have internally. Being able to move quickly, I think, is what differentiates successful projects versus not successful ones. And with that being said, for hiring engineers, I actually think it's better to hire for aptitude versus hiring for the skillset that they already have. And probably a generalization of that would be it's better to hire people that are good web two engineers versus hiring mid web3 engineers. And it's really difficult to hire web3 engineers that are really, really talented because a lot of them end up just becoming founders anyway.
00:49:16.294 - 00:50:02.624, Speaker B: So there's a very small number of web3 really talented web3 engineers that you can actually hire. So because of that, it's much more effective to hire web two engineers and then to train them on how crypto works because they end up just becoming much more impactful, like six months after they join than someone who's not very good, but maybe more crypto native. Interestingly, one of the things we found to be really effective for us is hiring people part time. Initially, when you hire someone part time as an engineer, they could still be working at their really prestigious job, that they're kind of hesitant to quit. And then they can get a sense for the culture that you have. You can obviously kind of get a sense for what their work style is as well. So it ends up being a really, I would say, efficient way to understand whether both sides would mesh well together.
00:50:02.624 - 00:50:10.390, Speaker B: And in general, I think, like, interviews are not that effective. This ends up being a much better way to gauge if someone will be a good fit.
00:50:10.542 - 00:50:15.542, Speaker A: So you'll bring someone on for six months as a contractor first or full time.
00:50:15.598 - 00:50:39.422, Speaker B: Typically like, typically like one month or something. I think that gives more than enough signal to see if someone would be a good fit on the team. And the six month comment was more, if you hire someone from, let's say, databricks to come on, they might not be crypto native, but six months in they will be crypto native and they will also be really talented engineers. So you end up getting the best of both worlds if you're able to make a few month commitment or investment to help onboard people.
00:50:39.558 - 00:50:51.074, Speaker A: Yeah, that's interesting. If say, is extremely successful and executes 100% of what you want to do in the next 18 to 24 months, what does that world look like?
00:50:51.814 - 00:51:37.414, Speaker B: I think state will become one of the chains where it'll first. In general, I think crypto is, and blockchains in general are winner take most types of ecosystems because people tend to congregate around places where there's already the most activity, users liquidity. I think if save too is able to do a good job here, say it will be one of the top projects out there where there's the most amount of activity happening. I think what makes say, and any kind of parallelized EVM in particular more poised to get there is because it's much easier to start growing that initial ecosystem because you can have many more developers that are seamlessly able to start building, and then you're also able to have like, the process of just getting killer apps started in that ecosystem ends up being much faster as well.
00:51:39.474 - 00:51:42.254, Speaker A: Jay, man, anything else we missed that you want to cover?
00:51:43.074 - 00:51:51.650, Speaker B: No, I think this is a fantastic conversation. It's always fun to talk about stuff like decentralization and how the ecosystem might be focusing on the wrong things right now.
00:51:51.762 - 00:51:55.512, Speaker A: Yeah. Cool, man. Excited for you. Thanks for the time. And, uh, rooting for.
