00:00:00.240 - 00:00:47.854, Speaker A: This episode is brought to you by BitMex, the OG crypto exchange that is back and better than ever. You'll hear more about Bitmex later in the show. All right, everyone, we have a really amazing episode coming at you. We got Brian Pellegrino, co founder and CEO of Layer Zero. Hilarious. Before we were, before we hit record, we were just talking all about what'd you do after school, you're from New Hampshire. He's talking about how he traveled, saw like 80 countries in eight years playing professional poker, then built a daily fantasy sports app, sold that, then wrote some machine learning models, sold them to some sports teams, has just built an incredible wealth of knowledge in the AI and machine learning space, built several companies, sold them.
00:00:47.854 - 00:01:14.506, Speaker A: And now he's taking on his biggest challenge yet, trying to create interoperability and just solve one of the biggest issues in crypto with layer zero. They're coming off a massive round, $135 million round, co led by Sequoia, FTX, and Andreessen. Some other folks that invested Coinbase Ventures, PayPal Ventures, Tiger Uniswap, and per usual, our friend, Mister Santi. So, Brian, welcome to Empire.
00:01:14.650 - 00:01:15.906, Speaker B: Thanks so much for having me.
00:01:16.010 - 00:01:16.690, Speaker C: Welcome, Brian.
00:01:16.802 - 00:01:48.046, Speaker A: Welcome, welcome, Brian. I want to just start really, really big. So you built all these companies, brilliant, like, machine, in the machine learning space. You've built these great AI models. You built a daily fantasy sports app, you could make a whole living, and you did playing poker. Why, of all of the companies in the world and why actually, maybe I should just frame it as, like, the challenges and the problems to tackle. Why is bridging and, like, interoperability of crypto, of different layer ones the biggest problem that you want to tackle and spend the next 1020 years working on?
00:01:48.190 - 00:02:17.984, Speaker B: Yeah, I mean, ultimately, I think. I think about this a little bit different than most in that most people, like, want to be a founder, they want to start a company, they want to build something. Like, I've streamed my co founder from my prior company was exactly like that. It was like the only thing you wanted. I've always just wanted to solve hard problems. I just kind of have been down this path, and things are interesting to me and I try to solve it, and that's what led us here. This didn't start from, this is the thing we're going to tackle.
00:02:17.984 - 00:02:55.244, Speaker B: This started from BSC launched, and every single day I was getting spammed with messages like, binance smart chain has more traffic than all of Ethereum, and, like, all this volume and everything. And it was like the first time anything happened meaningfully outside of Ethereum at all. And we're like, okay, that's interesting. And kind of like, as technologists, the way we think about things is just like toy models. We're like, we just make this little game and we'll just play it across both chains and just, like, prove out this example. Started to build this and very quickly realize, like, there isn't any way to, like, make these contracts do something without just, like, having a centralized server, like, dictating things. And we're like, well, the bridging works.
00:02:55.244 - 00:03:27.944, Speaker B: How does it work? And we actually looked into all the other bridges, and we're like, whoa, we would not trust any money to any of these existing models. This is insane. So I started, we're like, okay, well, let's just build a better bridge. And we started building a bridge early. This was actually the earliest version of Stargate. And as soon as we started building that, we were inventing our own transport layer to, again, make the communication function. And very quickly just realized that, like, oh, this thing is actually, like, this generalizable piece is the problem to be solving.
00:03:27.944 - 00:03:47.436, Speaker B: And then we just went through the normal routine of, like, try to break it, try to harden it, try to break it, try to harden it, and just build a system. Like, what is the system that, like, would be the easiest? Like, what would we want to build on top of? And what do we want to basically provide to the consumer or, like, using our applications that are building on top of this thing?
00:03:47.580 - 00:03:55.618, Speaker C: A lot of what I like to ask founders when I meet them, and I think I asked you this question early on, is, why hasn't it been built before? And so why don't you just start there?
00:03:55.746 - 00:04:26.630, Speaker B: Yeah, I think, one, it's not, like, interoperability. Like, communication between chains is not necessarily a new problem. Right? Like, cosmos tried to do this in 2017, so it's been, like five years. But if you go back 18 months in time, it literally, like, wasn't like, it was not very clear at all that it would be a very multi chain future. People were not thinking along those lines. When we started this problem again, Binance Martin had just launched. It was the only thing where anything was happening.
00:04:26.630 - 00:05:03.132, Speaker B: And so we started building because we loved building. We wanted to build an awesome solution. And in those 14 months, the world coalesced around this being the holy grail problem to solve, because all these other layer ones finally started coming into fruition. I actually don't think it's that nobody has tried to solve it before. I think that it wasn't obvious that this should be solved. And we happened to start working on it way before anybody else did. And start, like, really making something that is meaningfully usable way before anybody else did.
00:05:03.268 - 00:05:14.724, Speaker C: Yeah, absolutely. Maybe for the general audience. Can you describe the problem that you saw and what is it that you're solving? And from a user experience, like, why does it matter?
00:05:15.224 - 00:05:38.536, Speaker B: Yep, 100%. So what we saw was one. Again, we wanted a game, right? We wanted to build a game that passed messages back and forth. Something was happening on each of these chains, and it was affecting something on the other chain, and there was no way to do that. So there were bridges. People, every, before we announced, every single project only cared about value transfer. That's all you ever had.
00:05:38.536 - 00:06:16.480, Speaker B: You had a user with a bag of money who's going to walk over a bridge and, like, land in some other, you know, land, and you go around and use the money over there. And we decided very early on that value transfer is just a special case of generic messaging. Would you really want, like, think Internet? You really want to solve for, like, packets, right? You want to solve for generic messaging, arbitrary contract invocation, the ability to just do anything at the contract level. And if you're sending value, amazing. You can do that too. And so I think that was one way that, like, we meaningfully approached it differently than anybody else at the time was that we weren't focused on value transfer at all. It was purely solving, like, the most extensible primitive.
00:06:16.480 - 00:07:05.504, Speaker B: And then all the other things we built around this were for consumer experience. So, like, how do you make it, like, the thing that I've been thinking about for a very long time, since starting this is like, how do you make it so you have this, like, Robin Hood of crypto style app. How do you make it so a user can have a wallet that's connected to all these RPCs, and they can go asset a on chain x to asset b on chain y. This farm with 20% APY to that farm with 60% APY nfts, all of this without ever needing to know the underlying chain. Connect to this, use this RPC, the underlying gas asset. How do abstract all of that away from them? And so that was one of the really big components in that, like, you can execute this really complex contract flow of like six calls on two different chains, and the user just signs once one transaction on the source chain, a whole flow gets executed. User never thinks about destination gas.
00:07:05.504 - 00:07:24.416, Speaker B: They don't need both ETH and Sol or to claim it on the other end, all of that gets abstracted away. And I think we're moving. There's a bunch of things that, like, we haven't talked about, like, we're moving even more and more towards that direction, giving the application developers the ability to just totally abstract that away from the user side of things.
00:07:24.560 - 00:07:56.040, Speaker A: You mentioned messaging, which seems so core to what you're actually building here. When I think about what the Internet did, it made it so that you could send messaging and information in a peer to peer manner. The thing that crypto does is it makes it so you can send money and value in a peer to peer manner for the first time. When I look at layer zero and I'm like, oh, you can send messaging now in this peer to peer manner. The first thought that comes to my head is, we already did this. We've got like SMTP, we have the protocols, it's SMTP and HTTP. So like, why does, why is this a problem that needs to be solved again?
00:07:56.152 - 00:08:22.448, Speaker B: Yeah, because you have that in the Internet. You don't have that on contracts. You have this contract that's sitting on Ethereum, right? So a great example of this might be sushiswap. Sushiswap was on like 14 chains, but none of them could communicate together. You couldn't. So they were just independent silos that may have well been, you know, completely different projects. They couldn't send a message to like do a swap here and do a swap there, affect a piece of state here and also synchronize that state on other chains.
00:08:22.448 - 00:09:06.588, Speaker B: So you have things, you know, it can be something very simple, like casting a vote. In governance, you have, your project lives on multiple chains. You want to be able to govern from all of them, not just need to, hey, if you want to participate in governance, bridge your tokens back and do it from Ethereum or do it from whatever chain. And then you have things like games are doing things now. I had somebody pitch me the other day, which I thought was very interesting, like their game is going to run on an avalanche subnet, but you have like a Twitter profile picture like the hexagon that lives on Polygon or Ethereum, and you do something on the subnet that's very high, you know, 1000 clicks, 200 hours. And when you do, you kill a boss, you're in an achievement. You do whatever it sends a message, mutates the metadata of your NFT on Polygon or Ethereum, and that automatically syncs to your Twitter profile picture, which like updates.
00:09:06.588 - 00:09:34.576, Speaker B: So you like, have a crown now and without needing to, like, do anything or say anything. So it's actually like, think state share. The other thing that's pretty exciting to me is application design, being able to change. So everything designed right now is fairly monolithic. In that early Internet, we would write an application and you'd host it on your computer, in your house, or if you're lucky, you'd put that server in a data center. But everything was just. All the code was just on that one server.
00:09:34.576 - 00:10:20.286, Speaker B: You look at modern application design and everything is microservices. You have things that are hyper optimized for compute and for storage and for all of these different things. Now, if you have a seamless messaging layer, you can almost treat chains as microservices. So now you can have an application that can do something that could never do before. Like, it's way too expensive to store all this stuff on Ethereum, but now we can put all of our storage on arweave or ipfs, and then you can take that and bundle it up and do this really complex computation on Solana, and then roll the result back to Ethereum. Right. I don't think anybody else is excited about this yet, and I'm not sure that will play out that way, but I'm excited about seeing the evolution of this and having the potential to really change the way that applications design or what that can look like, the complexity of applications that can be built.
00:10:20.286 - 00:10:24.594, Speaker B: I think there's a lot of cool unlocks at pure messaging layer.
00:10:25.214 - 00:11:13.810, Speaker C: We had Ilya from Nier earlier on, and I think we touched on microservices. This was huge for the Internet. A lot of software investors out there would probably recognize the thing that allowed you to stream video and run all these super intensive applications like Netflix on the fly is microservices. And that, like architectural redesign of a lot of web applications. The thing that I want to get your take on is I always come back to, yes, architecturally, you can borrow a lot of these concepts, but it comes back to when you're making these state transitions. You got to make sure that what happens in one chain, like Ethereum, is super secure, but another chain may not be as secure. How do you work around that? Which to me is always, you're only as strong as your weakest link when you're connecting a lot of these different chains.
00:11:13.810 - 00:11:17.454, Speaker C: How do you solve that issue of security?
00:11:19.554 - 00:11:22.482, Speaker B: Hopefully, you guys don't mind me going on a slightly longer rant.
00:11:22.578 - 00:11:24.414, Speaker C: We like going down rabbit holes here.
00:11:25.674 - 00:11:55.820, Speaker B: I think it's important to understand the way that most systems work. Right now the way most systems work is you have two chains and they want to talk to each other. And kind of the way that people solve this is you'll write a transaction here, you will put some consensus mechanism in the middle that will come to consensus as to like the validity of the source. It will say, okay, that's a valid transaction and then it will write a transaction out to the destination chain. And the problem with that construct is that that middle chain is ultimately the arbiter of everything. It holds the parameterization of security. It writes all transactions out.
00:11:55.820 - 00:12:38.916, Speaker B: If that consensus mechanism is ever broken, doesn't matter. If it's for a short period, doesn't matter at all. It has the ability to arbitrarily write messages to every application on every paired chain. So breaking that basically wins everything, catastrophic risk plus unlimited contagion. So that itself is scary. You have this mechanism that controls 5 billion and okay, maybe that's great, maybe that's acceptable, but then uniswap opts in and it's 20 and Aave opts in and it's 50. And basically every new application opting in is creating this adversarial incentive for every prior application, unless the bond in the system is growing like non linearly, which has never ever been the case and would be super capital inefficient.
00:12:38.916 - 00:13:17.740, Speaker B: So they're making it less and less secure because there's a larger and larger honeypot at risk. And so that was like, as a principle, that was a system that we didn't think could ever scale viably. Long term. You're ultimately a bit, you're going to be connecting hundreds of billions, if not more in value across these chains, plus contagion effect. And it's extremely unlikely that you're going to have this chain that sits in the middle, that has bonded a trillion dollars basically in value to have economic security. So the construct that we went with is a couple of things. One is you're doing this ad hoc block validation.
00:13:17.740 - 00:13:48.116, Speaker B: So you're basically taking this block and validating the other side. You split up this block into two pieces, block header, which has a receipts route transaction proof. So MPT for evms, combine it and do the walk directly on the destination chain. But how it's being split up is being split up by these two parties that we call oracles and relayers. A little bit of a misnomer because people always think traditional oracles or relayer networks like they work now. But really you can just think of these as two arbitrary systems. An oracle is passing a block header and a relayer is passing a transaction proof.
00:13:48.116 - 00:14:30.676, Speaker B: And so the difference here is that there is no broad consensus that sits in the middle. There's no, like Sybil to attack, there's no round robin every application option to exactly the oracle and relay component that they want. And there's a bunch of reasons for this. One is just a sharding of risk. You can take some broad system, I don't know, pick your favorite oracle and say it costs $2 billion to attack, and maybe you win like $5 billion if you attack it. So eventually, at some point in time, this will probably happen and this thing will get attacked and you'll win $5 billion, or there'll be $5 billion in damages, I should say. But now you can take this oracle and it still costs $2 billion to attack, but you can shard it by splitting up a bunch of relayers.
00:14:30.676 - 00:15:29.314, Speaker B: And now, even if that oracle is attacked, even if it's a malicious collusion with Relayer A, you're only winning this very narrow band of risk of exactly applications using that Oracle and relayer A. So anybody using relayer b through z, anybody relaying their own transactions, anybody using any other oracle, stay completely unaffected. So what this means is that the price to attack the oracle hasn't changed at all, and yet you're only winning one 30th or one 300th of overall system of risk. So like, the effective attack on the oracle now has gone up exponentially. But more than that is the ability, you know, small applications, whatever your normal midsize, they're going to say using Chainlink as my Oracle and Coinbase as my relayer, like, I'm fine externalizing or pricing the risk that both Chainlink and Coinbase will not be simultaneously broken and malicious and colluding against me. Like many will say, okay, there's a price that I'll pay for basically not needing to deal with infrastructure side of things. But you're Ashuj application, your curve, your aave, your whoever.
00:15:29.314 - 00:16:18.950, Speaker B: Now you have the ability to run one of these components yourself. And if you run one of those components, if you run your own relayer, even if 100% of other network participants are malicious, there is nothing that anybody else can do to affect your security. There is no takeover of consensus unless you are colluding with the oracle against yourself, which obviously you would not do. There is nothing that anybody else can do to affect you. This is part of the thing that I think is really important is moving this parameterization up to the application layer where now the applications, there's defaults if they don't want to think about it. But now the applications basically can create this line of, you know, there's a direct correlation between cost and security, period, right? If you could have better security for cheaper costs, like of course everybody would select it. So you have this, this like Pareto frontier of cost and security, and you can create these structures.
00:16:18.950 - 00:17:01.304, Speaker B: Maybe it's chain link and Coinbase, maybe it's 100 nodes, maybe it's 10,000 nodes, maybe it's a bonded node system. You can create this line and applications can basically choose where they want to live on that line of cost and security. And part of the reason for this is something I thought was so insane about the current structure in that all of the parameterization lives at the technology layer and not at the application layer. Was like the example I always give is you have two things that are happening. One is like a game that wants to verify on chain b that it owns like a copper sword on chain a. And the other is somebody trying to send $500 million. Like in what world should they be opting into the same set of security parameters? Either somebody is wildly overpaying or somebody is not getting nearly enough security.
00:17:01.304 - 00:17:28.711, Speaker B: Somebody is so far out of bounds and probably both are so far out of bounds. And so like, there just isn't a world, I think, where parameterization lives at the technology layer. So all of that gets moved up the stack. And I think like we really focus on modular, like application design. They should have the ability to choose this construct of security. We have the ability to put out new validation libraries. So like a new ZKP like state proof generation speeds up 1000 x tomorrow.
00:17:28.711 - 00:17:43.936, Speaker B: Fantastic. We can take that, put in a validation library. Anybody who wants to use it can now point to the state proof generation. Like ZKP validation, totally fine. Like it's immense to be modular. This thing that I'm even describing to you, like the oracles and relayers, that's just one thing. That's our ultra light node.
00:17:43.936 - 00:18:11.360, Speaker B: That's one single validation library in layer zero, of which there can be thousands. Because we are not at all convinced that any validation mechanism that exists today will be the defective validation mechanism five or ten years from now. We built with that in mind. We're just like, we're going to build something we think is better and more modular in terms of security and application choice than anything today. But we're not going to build it in such a way that this is the system. And we're going to tell you, yeah, this is only system overviews. It will scale, it'll be perfectly secure.
00:18:11.360 - 00:18:18.096, Speaker B: No, for us, we're very on top of security research, and the goal is to just progressively get better and give applications choice.
00:18:18.160 - 00:18:48.082, Speaker C: Always in this world where there is more choice for the application, how do you envision that actually playing out? Going back to your example, if you want to send $500 million, and also on the gaming side, if you want to send like a trivial amount, like a sword or whatever, who is actually making that informed decision of where to, where in that continuum? Is there a market? Is there the application that is making that? How do you, how do you work this out?
00:18:48.178 - 00:19:16.970, Speaker B: The application can make it because they can run one of their own. But I think what's most likely, like, almost certainly there'll be some narrow parameterization. There'll be like five broad parameterizations where like 95% of applications fall within. Right. And it's basically on this curve, you want to live here, here, here. And basically there'll be a measure of how much risk is in basically each of these bands. And so people might want to say, I'm going to take the same band, but opt for like a different relay or different oracle.
00:19:16.970 - 00:19:56.962, Speaker B: So broadly the same construct, broadly the same kind of system or parameterization. But at the end of the day, like, I think most people will live on default or just choose one of like, these presets that everybody else is using because that's way easier than, like, needing to choose yourself. But it also opens up a world where, I don't know, Aave wants to make, again, Aave wants to make their own security around this, and they create an AAvE net relayer. And all of the AavE users can bond aave into this relayer and basically perform this action and gives applications the choice to play a role in their own application security and doing all of this. And I think that's really important as well.
00:19:57.018 - 00:20:32.932, Speaker C: So that's really interesting because now if you're AAvE, you're competing against compound and you're competing against other protocols, jet and some other protocols out there, money markets. So what you're saying is then it is sort of like a very interesting go to market where these applications that may want to retain users, may want to attract users are going to start offering these services and being built on top of you guys to maybe give. It's like the analogy would be like Verizon giving everyone 5g for much cheaper than what at and t. If at and t only gives you 3g, it's a bad example. But I think this is where applications own the customer relationship.
00:20:33.068 - 00:21:14.584, Speaker B: Of course. Yeah, I mean they will unlock both lend and borrow, which is one of like the broad use cases I'm most excited for. And we can talk about why I think wrapped assets suck and like that is clearly the future. But then also, obviously if they make this relayer network, well sure they're using it, but also like a huge number of other applications are going to say they're using it like it's good enough for me, basically, and we'll default to that rather than using like this prior construct. So I think there is this, this huge unlock that allows tokenomics that they can mix in. There's a bunch of things they can do that are broadly good for AAVE and incentivize AAVE users.
00:21:15.524 - 00:21:27.104, Speaker C: From a validation standpoint, there is still some assumption there that you're making that people are validating correctly and there's a robust validator set. I'm making that assumption. Is that true?
00:21:27.764 - 00:22:09.642, Speaker B: Again, it really depends on the system. You can have a system that's four chain esque and everybody bonds 150% and like that's a deal. You bond bonded value into the system and like you get slashed if you don't validate correctly. You can, you know, there's, there's, for us it was very intentional to basically not have, like we'll publish some reference implementations for how we think we'll publish something to make it very easy to like make your multisig in Oracle or relay. Well, like we'll do things to make it easier for people. But broadly, the only, like an oracle is just any system whose output is a block header, and a relayer is any system whose output is a transaction proof. And what that looks like can be anything, any take any crypto economic system that exists today and apply it.
00:22:09.738 - 00:22:35.070, Speaker C: No, that makes sense. And in terms of what do you see as the, for listeners, the context is you recently launched and what are some of the maybe what has been your learnings so far since you launched? And where I'm going with this question is where do you see the biggest security attack vectors for a network like this?
00:22:35.182 - 00:22:59.710, Speaker B: Yeah, so it was funny. We launched and within two weeks we have $4 billion of TVL and Stargate, which was the fastest growing defi application of all time. And naturally we said a million people trying to attack it all the time. We're just sitting there watching attacks come in from every single possible anger. All these external contracts attacking the Stargate on the other side, trying to forge messages, trying to do all these things. So there's like a couple things.
00:22:59.782 - 00:23:30.780, Speaker C: Wait, wait a minute, wait a minute. Let's just pause there because I want people to conceptualize how adversarial crypto is. Like, of course, like, it's like, how stressful is that as a builder. Like, you're sitting there, I saw pictures of you guys, like, the teams just like, deploying it, and all of a sudden, you know, you would think that the world is a nice place, right? Which is like, great. We just launched this, what is a novel tech, and all of a sudden you have all these trolls, like, immediately try to, like, hack this system. Like, what does that mean about, like, just humanity in general? You know, I don't think.
00:23:30.812 - 00:23:39.092, Speaker A: I don't think it's trolls. I think it's like when you have a. When any sort of market, like, when there's an inefficient market, like a hedge funds job, is to go in and basically attack, exploit it.
00:23:39.108 - 00:23:47.324, Speaker C: Yeah, that's a very friendly way to describe that. I think this is not activism, investing. I think this is, we want to, we want to take $4 billion and run away.
00:23:47.484 - 00:23:48.052, Speaker A: That's fair.
00:23:48.108 - 00:23:48.460, Speaker B: That's fair.
00:23:48.492 - 00:23:53.218, Speaker C: But Brian, like, tell us about as a builder, like, what do you feel when you see that?
00:23:53.346 - 00:24:26.248, Speaker B: So I think broadly, like, humans on a broad scale, not individuals, but humans on a broad scale will always just do whatever is like, if you give them an incentive, the incentive is going to get taken, period. It doesn't matter what it is. And you can't put money in a contract and expose the keys and hope somebody doesn't take it. So the thing about crypto is it's either 100% perfect or it's totally broken. There is no in between. If there's a flaw, it's going to be exploited. And so for us, broadly, like, we understand the week of launch, we stayed up for five days straight to launch.
00:24:26.248 - 00:24:51.564, Speaker B: Layer zero on Tuesday, Stargate on Thursday. We were rotating, like two hour naps on these bean bags in the office. Michelle from sequoia was like, they're just like, trying to support us. It was literal madness. And then post launch, we just saw TVL just start going like this. And then we started to see these attacks coming in. And obviously, like, we did every possible thing that we felt we could do from security ahead of time.
00:24:51.564 - 00:25:19.164, Speaker B: And even still, there's like, you're just terrified, right? Because you don't know. We see these and we're like, we're inspecting everything that's coming through as it's happening. And we're like, okay, like, that shouldn't work. Like, nope, this is fine, fine. And just like checking, going back, checking everything. And then you have somebody funds a wallet through tornado cash, and somebody reached out to us and says, hey, this guy just funded from tornado cash, is doing this weird thing, like, okay, check that. And so, fortunately out everything totally fine.
00:25:19.164 - 00:25:56.534, Speaker B: And then we got into, how long can we do this for? And what can we do to basically change it? And so there were three broad things that we did after that that we spent. Like, we expected to spend the next three weeks just like, integrations, new networks, everything. We literally just spent the next three weeks on security, nothing else, which is not what we thought we were going to be doing. Basically, the three big things we did is, one, we made this thing. So at the relayer level, we made this thing we called the dome, which is just like no external contract can ever send a message to the UA on the other side. So if you're not coming from Stargate, you will not talk to Stargate on the other side. So, like, that's one thing.
00:25:56.534 - 00:26:16.878, Speaker B: Step two is this thing we call Precrime, which is basically you take a message and it's going to the other side, and before you deliver it, you take it, fork everything, run it locally, and verify that it meets these invariants. Your invariance can be very simple, like solvency, et cetera. And then if it does, then you get to pass it. And if it doesn't, basically, you know, it's an attack.
00:26:16.926 - 00:26:19.702, Speaker C: And you, does that introduce latency in the system?
00:26:19.798 - 00:26:43.958, Speaker B: Or it, like, basically zero? Effectively zero. Yeah. And so now you have this message coming through. And before you hacker would be clever, and he'd like stuff a bunch of bytes and try to trick the message, the contract on the other side, to say, yeah, you know, look, it's verified. I put $20 million over there. Give me $20 million over here. And now this thing checks and says, hey, we're going to give $20 million over here.
00:26:43.958 - 00:27:19.082, Speaker B: Does the system still add up? So things like Ronin and a bunch of the other hacks using something like this would have just been like, of course we're not going to give the hacker all the money because there isn't money on the other side to confirm it. And so it allows application to do that. And that actually we thought was like, we were just like, hey, we need to do this thing. This seems like this will protect everything and ensure what we need. And we talked to a bunch of these white hat hacker groups, and they're like, this is the most exciting thing that we've seen in a decade in this. This is incredibly cool. And so we didn't realize as we were building how cool it is, but people are super, super excited about it.
00:27:19.082 - 00:27:37.814, Speaker B: And then we're working into, like, how all applications basically can set these invariants and, like, roll it in the relayer set. And then the third thing is we put up the two largest bug bounties ever. Like, 15 million for both Stargate and layer zero. But, no, it was like. It was terrifying. Like, none of us were sleeping. We're still all on constant pager duty.
00:27:37.814 - 00:27:44.882, Speaker B: Yeah. You will never get over that in crypto. Like, I'm sure eventually you learn to sleep okay. But, like, it never goes away. Yeah.
00:27:44.898 - 00:28:02.122, Speaker C: I think there is no such thing as going fast and breaking things. Talk to us about your journey in building this. I heard you say earlier that I think my estimation is. A lot of founders in this space see an opportunity to go quickly. You'll try to build fast because it's super competitive. Web three world code is open source. Anyone can fork you.
00:28:02.122 - 00:28:22.874, Speaker C: You're always on the edge. But there's also. What you're saying is most people don't think about security, and stuff breaks, and it breaks. Like, you're done. It's really hard to recover. Users get hurt. But how do you make that trade off? And maybe tell us, from your experience, how has this journey been for you to get to where you are now?
00:28:23.334 - 00:28:46.598, Speaker B: Yeah, I mean, for us, again, we didn't approach this from the stance of, like, we want to build a huge company where I do this big thing. It's me. It's two of my closest friends in the world. Started our first company together, sold it, did academic research together. I've known them 16 plus years. We were just building a thing that we thought were cool. So, actually, through all of our fundraisers, we've never had a pitch deck.
00:28:46.598 - 00:29:00.950, Speaker B: We've never gone out and been actively raising. Right. We were building something we thought was cool. We were excited about it. We're showing it just to people around, like, this thing we think is pretty awesome. And then we got preempted our last round, we got preempted, like, six times. So, for us, we haven't approached it from, like, this builder.
00:29:00.950 - 00:29:24.688, Speaker B: So we built 100% in stealth before we announced to the world, like, the protocol was done. The paper was done in May. The protocol was basically totally written by the time we did the last one. And then since then, everything was just making it better. Everything. Like, I think we cut gas by a factor of three. We did twelve different security audits from all these firms.
00:29:24.688 - 00:30:00.544, Speaker B: We spent like a million and a half dollars on audits. We have an entire team auditing ourselves. Everything was just like, okay, we built this thing, it works, we've used it, we're playing with it on testnet, we built contracts. We published this demo showing uniswap v two force doing this native to native swap composing Stargate in the middle, which was something we were super excited about. And then everything, like, we wanted to launch then we thought we were going to launch last October, and it was just like, not good enough, not good enough, not good enough. And so everything from then till now has just been that. And, like, we launched ultimately when we thought it was good enough.
00:30:00.544 - 00:30:48.810, Speaker B: And, like, we saw us losing, like, slowly. Other people, like applications who were excited about building on us were building on other people because, like, they had to launch. Like, what are they going to do? They're not going to wait six more months for this. And so every day, basically we had that thrown in our face of you're losing market share, you're losing market share, you're losing market share, or the competitive edge of being early is going away, but it was just like, you have to get through and do it right. And ideally the delta of what you're offering and how much better it is than everything else then fixes all of that. So from our mindset, it was just that, yes, we absolutely, as a team, collectively we're 27 now. The entire time we've been in Bahamas, like, we basically are in the office seven days a week.
00:30:48.810 - 00:31:05.118, Speaker B: Basically 09:00 a.m. To 10:11 p.m. Like, nobody's not enforced, we have no set hours. It's just like, as a culture, we're there because we very much recognize we need to run faster than everybody else to win, like, period. But you still have to do it, right?
00:31:05.186 - 00:32:00.858, Speaker C: So, yeah, my submission is that I think you want to build a really strong foundation, and that might take a long time, but once you have that, it allows you to go much, much faster than perhaps other people that might just die along the way, like wormhole. Very close. I am curious, before we get to, I want to get your take on what does this really unlock for the space? What does it actually mean from a user perspective, from a scalability perspective and adoption and use cases. But before we get there, just, just on the fundraising itself, I think I can't think of a more stacked group of just traditional investors, I think it was. Correct me here, but this is sequoia and PayPal folks that have never even considered or have been skeptical on the fence of maybe making a decision of who to partner with because they see the spaces early. How are those conversations? And maybe just give us some insight into why was it you guys that they finally decided to just jump on and really make a very explicit bet on a piece of tech?
00:32:00.966 - 00:32:35.414, Speaker B: Yeah, I mean, ultimately, I think it's probably a question best for them, but I will say, like, most of these groups got it pretty early on, like, impressingly so. And PayPal was similar. Like, PayPal, you know, this was a big pivot for them. This is the first time they've ever invested in a token, ever. They had to change the structure of PayPal to be able to hold tokens. They had to figure out how to do all of these things, but, like, they were willing to go through that process with us and, like, make that bet. And it was, like, pretty apparent early on that, like, they wanted to go through the work to make it happen.
00:32:36.474 - 00:32:54.642, Speaker A: We interrupt your programming with a special announcement. Empire has a new sponsor. Santi and I are very excited to welcome Bitmex. That is right. Bitmex is back. The exchange we all know and love is back and better than ever. We're going to be dropping a couple updates on Bitmex over the next couple of months.
00:32:54.642 - 00:33:25.020, Speaker A: This first one is a big one coming soon. Bitmex is rolling out their spot exchange and they're giving, giving away $500,000 in bitcoin to new users. That's right. Listening to Empire has got the Alpha Santia and I got you $500,000 in bitcoin going to new users for the ogs. I don't think I need to tell you why you need to use Bitmex. It's a love of the game kind of thing. You respect crypto, you use Bitmex for those newer to the industry, Bitmex has a long and great history of innovation.
00:33:25.020 - 00:33:49.528, Speaker A: Since their launch in 2014, they created perps and a whole lot more. Now they're back, they're better than ever. They're making waves. So what do you need to do? Go sign up for the Bitmex spot exchange for a chance to win some of the $500,000 in bitcoin that Bitmex is giving away. Bitmexbitmex.com. That's bitmex.com. Go make it happen.
00:33:49.528 - 00:33:51.640, Speaker A: Now let's get back to the show.
00:33:51.832 - 00:34:16.512, Speaker C: That is a good segue. Into what I want to go next. Which is, what does that mean? What does this mean for crypto? We've seen all these competing l one s, there's a lot of maximalism, but ultimately I think, like to your point around finance, smart chain, just users are willing to go where, where the best service is, is at without maybe necessarily appreciating all the really technical nuances. So what does this really mean for the space and how do you see this kind of impacting of the next six kind of twelve months, two years, three years down the line?
00:34:16.608 - 00:34:57.420, Speaker B: Yeah, there's a bunch of things, there's a bunch of things I've found interesting. One is like from the adoption side. So even just talking about PayPal, like most of the conversations that I've had, I've been in the space for nine years. So there are things like, okay, early on the balance sheets of s and P 500 companies and legal tender in a country that surprised me. That was five to ten years earlier than I expected. Same thing now where yes, we got PayPal in the round, but we also spoke to every single consumer fintech product, basically that exists, every major financial institution. Like conversations that I thought were very, very clearly five to ten years out are happening now.
00:34:57.420 - 00:35:36.250, Speaker B: So I think there is this huge push broadly for like what that looks like in terms of mainstream adoption or the potential for this truly underlying, like really significant rails in ways that just like people have not been thinking about or considering. And then like within the space, broadly, I think it's exactly that. And that at the end of the day, application developers want to make the application. Like security is a, it's a prerequisite. Everybody, like, it should be the base plate, everybody needs it. Nobody should be able to do anything. Basically that, that isn't secure, like that should always be the prerequisite.
00:35:36.250 - 00:36:08.498, Speaker B: But once you get over that, you have a system that you think meets that criteria, then everything else, like application developers want to build an application that gets used by consumers. They're very clearly optimizing for like maximum use. And consumers want to use something that is like easy to use. Right. And so I think people are, you have a lot of people in this space that overengineer solutions. I feel like. I think you see it happen all the time and you have these really, really complex things that they think unlock this little bit of extra gain but make the consumer experience ten times worse.
00:36:08.498 - 00:36:29.134, Speaker B: People just aren't willing to bear that the application developers want something. So any amount that you can add to unlocking consumer experience, any amount that you can add to abstracting away, making the entire thing more of a singular system, I think is just valued so highly by the developer side of things and just completely underserved.
00:36:29.254 - 00:37:06.014, Speaker C: Where do you think we are in this crypto adoption phase? There have been attempts to build consumer facing applications like social and gaming, but it has always felt that even axie, unfortunate as it is, but the ronin hack feels to me we still are in this infrastructure layer where a lot of, where a lot of really basic stuff needs to be built first. But we're trying to do this all at the same time. You guys are obviously focused on the infrastructure layer. It sounds like you are. But I'm curious, where do you think we are in the adoption phase? Maybe if you can do the analogy with the Internet and how that evolved.
00:37:06.094 - 00:38:00.740, Speaker B: Yeah, I think it's messy. I think people are running in a bunch of different directions at the same time. So again, 1617 years ago, when I was working with my co founder, when we met my co founders, we worked in a testing and conformance lab doing like IEEE early Internet technologies, right? And like, I was there writing test tweets and conformance suites for some of these standards for products that were getting rolled out into every single, like, household in the world, every data center in the world. And the amount of times that those things were just like broken or non conformant or just like totally didn't meet the standard, and we're going to be put everywhere was like, it was way, way, way messier than people like to remember. And I think we're basically in that phase. I think we're in the phase where technologies, like the technologies that unlock all this stuff are being developed and they're being developed, like on the fly. Like that's incrementally happening right now.
00:38:00.740 - 00:38:23.284, Speaker B: It's unfolding. And I think applications are trying to run, like faster than infrastructure is catching up. And that introduces, like, yeah, a lot of things are breaking, a lot of things are messy. But I think, like the introduction, like, it's all going to get consolidated, it's all going to resolve. Like, I think it's just a natural part of like massive expansion of any space. And we have had the craziest expansion of anybody.
00:38:23.324 - 00:38:45.976, Speaker C: So talking about the Internet stack, like, there are standards now, HTTPs, TCP, IP, there's just one standard. And a lot of times people like to make that analogy and say, and make the claim that there will only be one chain to rule them all, whether it's bitcoin or ethereum or some other chain. What is your response to that? What is your view in terms of a multi chain world?
00:38:46.040 - 00:39:40.468, Speaker B: Yep. So I think treating the chains as the standard is not necessarily the right approach. So like early Internet, right? You just have these clusters of computers that were like sitting at universities, you had intranets, you didn't have Internets, right? So you had like these small systems of connectivity and you could do some things, but you couldn't do everything. It wasn't until you had these standards and obviously run the cable and did everything to like make them connect, that basically everything could start talking to each other. And like, I think that's sort of where we're at now. Like, again, I think the chains themselves are more. If you're treating the chains like standards, the question is like, will everything live in one chain? And so you're really asking the question of like, are you going to have ethereum with a bunch of l two s that all conform to a single set? Or are you, is there a world where we have a bunch of l one s and competing systems? And I think the chains themselves are more like programming languages than anything else.
00:39:40.468 - 00:40:28.116, Speaker B: I think you use C, use CUDA when you need to, use Python or JavaScript when you can, because it's easy and it's fast to do. I think it really is more akin to those properties where I do think, I have the personal opinion that chains that are very small, iterative, like shades of gray. So you have like Ethereum and you have something that like lives on either side. It's like mostly Ethereum, but like a little bit more scalable, a little bit more something like, as technology gets better, like they will have a hard time maintaining any sort of competitive advantage as Ethereum scales. But like chains that take very strong orthogonal trade offs. So you're talking the Solanas of the world, things that are again, throughput, storage, etcetera. Like, I think those, like Ethereum will just never do those things as well as those chains, period.
00:40:28.116 - 00:41:07.224, Speaker B: Like, it's not going to happen. Even ask like the most ardent supporter of their own chain, like Vitalik, Anatoly, whoever, like, none of them believes that, like their chain will just handle all scale of everything. Like, it's just nobody has any state of belief that like, that is going to be the case. And so, yeah, for me, I think it's more broadly like that. Like when you compare, like, you know, react or Ruby or like, you know, whatever, a bunch of similar, similar constructs, similar languages, you're going to get one winner who wins in this vertical. But when you have these big orthogonal trade offs. Again, you're just not doing in python what you're doing in C.
00:41:09.244 - 00:41:34.066, Speaker A: Brian, what are your thoughts on the analogy to different l one's being different cloud providers? Almost like AWS versus Google Cloud versus Microsoft Azure, where we're recording this thing on Riverside. I've got a Google Doc pulled up here, I've got telegram. I have no idea what service these things are running on in the background and that the future might look something like, I have no idea if the game I'm playing is on Ethereum, avalanche or Solana.
00:41:34.250 - 00:42:19.502, Speaker B: I certainly hope that is the world that you have no idea where it is. I don't equate the chains as much like maybe right now because it's messy. Everybody is trying to be a cloud provider in that everybody, like all the cloud services are broadly trying to do the same thing. I think the end state of the chains, all the chains are not necessarily trying to do the exact same thing, but they're trying to optimize for like one thing extremely well. So again, I really think about the framing and like strong orthogonal trade offs where they're going to do this thing better than anything else. But in terms of like, yeah, I mean there's, there's definitely like relationship between cloud services where like you have this thing that is running on this effectively peer to peer like system of nodes, of validating nodes.
00:42:19.598 - 00:42:51.100, Speaker C: So yeah, 100% from a use case perspective, when I first heard the pitch, it was very much defi centric, I think like doing a swap and that, doing multiple hops. How do you. I'm curious to get your take on the. I mean, you could do so many different things when you're connecting all these different chains. But where do you see most of the activity today? Where do you think it's going to happen over the next twelve months from a use case perspective? And what does that mean from a user? They might just be using a wallet, like argent or whatever.
00:42:51.292 - 00:43:25.284, Speaker B: Yeah. So we absolutely came with everything at like a very, very defi sku. There was like a couple of use cases we were highlighting, all of them were defi. And then we announced in like 50% of our inbound was gaming and nfts. This is similar, right? We launched, we launched Stargate shoot success. But like shortly after, like Ghostly Ghost, this random NFT project launched and like sold out instantly became the number one trading NFT on Opensea, like immediately after. And then like 100 other NFT projects have launched and every NFT project is basically looking at this so there's been huge factors in the same way of tradfi.
00:43:25.284 - 00:44:22.574, Speaker B: Interest was not what I was expecting. But again, we're talking to every single consumer, fintech and like all these neo banks and just things that I did not expect to zero, like all these different verticals where people are interested, I still think the broadest immediate unlock, like, for me, the thing I'm most excited about is I'll go on my wrapped assets tangent now is I think there are a couple elements of just like, pure, potentially systemic risk at scale. And I think wrapped assets is one of them. In that you have this construct now, which is how most bridges work. Where you want to bridge from chain a to chain b, you're going to lock some asset up and you're going to mint a synthetic asset on the other chain. And that's just how bridging works today for 99% of bridges. The thing that I really disliked about that was that if you have a huge amount of outflow, if you have $100 billion of outflow from chain a to chain b, you will lock up 100 billion on chain a and you will mint 100 billion of synthetic on chain b.
00:44:22.574 - 00:45:04.950, Speaker B: And the problem is that you have that 100 billion of standing risk forever. That as long as that as long as the synthetics are in circulation, you will have 100 billion sitting in a contract that's at risk forever. So if the consensus mechanism ever breaks, if anybody can ever figure out a clever exploit at the contract level, any of these things, it's gone wormhole. Saw this. A bunch of other people have seen this, right? This has happened many, many, many times before. And so that always seemed like just not a great way to do this, especially when you end up like, daisy chaining bridges. So, like, you bridge ethereum to Solana, and then you bridge, like, Solana to near, and then you bridge, like, near to binance, smart chain, and to avalanche.
00:45:04.950 - 00:45:48.268, Speaker B: And, like, all of a sudden, you're, like, adopting like, five different bridge parameterizations of security where if any of them break, everything breaks. And so that's just broadly scary. So when we made stargate, one of the things that we did was Stargate works with, you just have like, two pools of native assets, and you incentivize people to rebalance the pools. You add to one, subtract from the other. And so you could have in that sort of construct, you could have the same outflow of like $100 billion with simple, like, $100 million pools on each side. So without ever exceeding $200 million of overall risk, assuming you can re incentivize, rebalancing, you can have the same exact outflow with none of the standing risk. And so, like, seeing people move in that direction, I think is hugely important.
00:45:48.268 - 00:46:24.492, Speaker B: But what's more important is, like, the real question of wrapped assets is, do you need it? Like, do you actually need to have Saul on Ethereum, on Phantom, on whatever? And, like, my argument is that you absolutely do not. Like, nobody wants to have Saul on those chains. What they want is to leverage the purchasing power, the spending power of their sol, right. They want to collateralize Sol and Solana and then, like, borrow against it another chain they want to unlock, like, access to capital without losing their sol exposure. And so, like, I think the entire premise of wrapped assets is really silly, that you're going to take your ETH to another chain. You're going to take your sol to another chain. Like, you don't need to do that.
00:46:24.492 - 00:47:16.600, Speaker B: There's no reason we need sol pairs or sol staking on phantom. Like, it just doesn't need to exist. And so that is, like, the single thing I think I'm most excited about in the near term. The defi side of things is this cross chain collateralization, where you collateralize it rather than having wrapped assets everywhere, rather than taking your assets that aren't being used and don't have a protocol on the other chain. And just like having a million assets over there being able to collateralize and borrow against them in a way that actually makes sense. And I think there are some reasonably sized hurdles that need to get solved for that to be able to be done very elegantly, but I think it will be by far one of the biggest unlocks in the space. And I think it will change both the overall surface or construction of risk in all of this and also the way that people interact with it by a pretty big margin.
00:47:16.792 - 00:48:14.670, Speaker C: Is there an instance where I think, like, for instance, if you want to swap and you want to take advantage of yield, another chain, but you have assets in Ethereum, you see a lot of activity in avalanche, okay? You want to swap quickly, take advantage of that. And maybe it's a quick arb, maybe it's just a farm for a week or whatever. Is there a version where the cost of interacting in the system to doing that is higher than the benefit of just making this operating across multiple chains? Because a lot of what we've seen now is this mercenary capital rotating very quickly. But these yields are getting back in the day when I was yield farming maniac, well, I still do. But back in the day early on, early defi summer, the first five minutes, the first day, it was very lucrative and it commensurate to the risk. Now it's sort of marginally just come down. These opportunities go away really quickly.
00:48:14.670 - 00:48:37.814, Speaker C: There's more capital, there's more people playing. There might be a state of the world where it's just not worth the cost, the time to hop around and do all these operations. What do you say to that? Do you agree with that? Is that just not a state of the world? Because historically these hops have been happening through layer zero, they've been happening through bridges and all these other Yankee solutions.
00:48:38.114 - 00:49:42.130, Speaker B: Yeah, no, I mean, I think probably what you're describing is a system that you have enough latent capital on every ecosystem to fulfill the demands of that ecosystem. The question is, like, in terms of capital efficiency, in order to have purely enough, it means it's like sitting there mostly inefficient. And when, like these high demand periods have, it's just like immediately serviceable without anything else. Right. And so I think what is much more likely is that you have these systems that have broadly elastic supply and it's easy or seamless to like move in and out of these ecosystems, or take the broad constructs of like insert stablecoin here and allow that to be anywhere, rather than having these isolated. Like, we're going to have a billion here and 10 billion here and x billion there, and like, it's just going to be sitting there, a billion of like inefficient capital that's like not being put to use or put to use at like incredibly low yields. And then magically, like, when this huge shock comes, this demand shock, and basically you need to have it there.
00:49:42.130 - 00:50:16.054, Speaker B: Like it's just going to been sitting there ready and it'll get armed out immediately, like, no, I think you need some system for doing that broadly. But I do think with everything, like, and there's a huge interest of like the tradvy side of things, things like everybody wants to arb out these yields. There's not a world where I'm not sure we're going to get DeFi summer again, where in 20 minutes you're making your six month of yield. I don't think basically, as these systems become easier and easier to again move this capital around, it will just always get armed out faster.
00:50:18.074 - 00:50:41.820, Speaker A: Zooming out from layer zero. I just want to get your take on what yours, just your almost thesis for where you see like the next six to twelve months going in crypto. It really feels like last year was. There's so much shit going on. It was like, starting with Defi summer in 2020, and then, like, we moved into, like, the beeple $69 million NfT sale kicked off like a crazy. Just, it's been like, the last 18 months with nfts have been insane. And then the metaverse narrative kind of came and went really quickly.
00:50:41.820 - 00:50:54.894, Speaker A: But gaming is super hot. And so, like, I just want to almost ask you, like, what are you really excited about? Uh, kind of two questions. Like, what are you really excited about right now? But also, where do you see, like, the next six to twelve months going in crypto?
00:50:55.234 - 00:51:36.222, Speaker B: Yeah, so I think it's been a weird period where there have been a lot of times I was excited about a lot of different things the last, like, twelve to 18 months outside of the problem that we've been working on, like, I in this, maybe that I've been so, like, blinders on, focused on what I'm doing, but there, like, hasn't been anything that got me really excited. I know a lot of people I think are sharp or excited about, like, celestia or avalanche, just like the modular blockchain construct, which I think is interesting. That's a world. Maybe the world develops that way. I think the last thing I got reasonably excited about was probably Bancor v three. I still haven't made it through the 70 page paper. Now, they've actually released a detail.
00:51:36.222 - 00:52:39.306, Speaker B: But the construct of Bancor v three, especially around, like, the consideration of what we're doing was broadly that you can take this system where now everything is two sided pairs, so everything is x to ETH, whatever. And you, across all these chains, you have all of these two sided pairs. You basically have all this redundant capital use. And Bancorp v three was proposing a model where you have single sided pools of all of these assets everywhere in, like, one pool of b and t that sits in the middle, and you can effectively go between them. And again, I still have not spent enough time going through the pure construct, but if they have created a system that prices those well and allows you to do that, then you can imagine a system where now a Dex that lives across a bunch of chains looks like single sided asset pools everywhere. And let's say, like a pool of USDC that sits in the middle, right? And, like, you have this single asset that's kind of the pair and pricing mechanism for all of them. And now, rather than having X to USDC and Y to USDC and a to USDC and so on, you can have single sided pool of zones with a broad pool of USDC that lives everywhere.
00:52:39.306 - 00:53:21.970, Speaker B: And you can go like, x to USDC, USDC to Y, like, very, very, very easily across all pairs, across all chains. Chains. And so, again, that is broadly what they were presenting in the early material, and I think that's still what they say they're presenting. But I have not gone through in depth paper to do it. But that concept of, like, taking the Dex construct and reinventing it in such a way that you're almost like two x, more capital efficient, can deal with long tail, and can have this kind of, like, flow between without needing to have, like, multiple fees of swaps. Like, building something bottoms up from that, especially across a bunch of different chains, was one of the things I got, like, most excited about. This will be very interesting.
00:53:21.970 - 00:53:23.454, Speaker B: I want to see this happen.
00:53:24.034 - 00:53:58.884, Speaker C: It's funny you mentioned Bancorp, because I have respect for the team. I think generally they have. I think most people don't appreciate deep, deep cryptographers and technical people on their bench. Unfortunately, it's sort of like the ugly duckling black horse of crypto, because they raised a big ico, which other protocols did too, like Filecoin and dfinity, and people forget, but somehow the market is selective, and they get a lot of criticism. I've talked to the team a lot. I said, look, I think the way they frame certain things, like, impermanent law solution was like, it didn't do them service. But I do think it's one of the more underappreciated teams out there, at least in Defi.
00:53:58.884 - 00:54:36.224, Speaker C: What is your take in? Just generally, you've been in the space for nine years as a builder, as an investor. Like, how do you think the space has changed? And, like, you know, where do you kind of, like, maybe just, I'm trying to get some insight from you on what are the hardest things as a builder, because the community can be very difficult at times. Like, I sympathize with founders. Like, it could be very adversarial, not just from there's all these hackers out there that want to break $4 billion in TBL, but it's also the community doesn't help at times. What's been your experience with these communities?
00:54:36.644 - 00:55:03.780, Speaker B: Yeah, I think proudly. Like, we've all watched this space change where go back to 2013, and it was only two categories, pure ethos and speculators. Like, that was it, right. It was like people were die hard. Like, in the ethos of bitcoin and everything that sort of, that had the potential to provide. And then there's people who were just like, speculating. This is like feather coin, and like, you know, every random thing that was coming out, it was just people who were trading jigsaw in the same way that they do now.
00:55:03.780 - 00:55:52.732, Speaker B: Speculators have not gone away in the space. And slowly, again, you had this renaissance in 2016, 2017 that Ethereum brought up this entire new pure ethos of people of like, okay, this is not just bitcoin store value, monetary, this is like, you can build really interesting things. You have the ability to do something, build systems that broadly change things more, the way you saw a bunch of incredible things and then especially towards the later half of that into 2018, just so many terrible things. So, like, you saw that entire cycle and then, like, things die and like, all those people went away and you came up in like defi summer, same thing. Like, this is incredible financial rails. And like, maybe the space got ahead of itself and that, like, pricing everything as if it was like, pure had already achieved like mass adoption. But like, clearly the potential was there.
00:55:52.732 - 00:56:26.134, Speaker B: And I think everybody inside the space, outside the space, like, use that and recognizes the potential that all of this has. I think as a builder, the broad experience was like, even, even on the vc side of things, when we raised the round, people ask, what are we going to use money on? What are we going to do? All of it. Our focus broadly is to build, period. We're not going to spend, we've raised a lot of money. We're not going to just spend the money because it's there. We loaned out all of our money at eight and a half percent. We have positive burn.
00:56:26.134 - 00:56:49.950, Speaker B: We spend less in salaries, we spend less in expenses than we generate in income on the money that we have. And our goal is just build for a very long time. It is. We're not going to be a team who like, blows all the money and does all this. We spend $0 in marketing, promotion, none of that. So our goal is to build for a very, very long view and build a system that scales and has absolute mass adoption. That is the only thing that we care about.
00:56:49.950 - 00:57:25.684, Speaker B: Yes. When you go through the community and you launch something, my promise to people is that we will build and we'll build the best possible thing that we build, will make the most usable system, and I will get as much integration adoption as we possibly can. Like, that is my role, right? Build the system that is most usable and get the most use on that system. Everything else is extraneous to that. Everything else is either markets and outside of my control or like that. So when people are like, you know, on both sides of things. Oh, I bought Stargate at now it's $4 and amazing.
00:57:25.684 - 00:57:42.490, Speaker B: Amazing. Or like, oh, it was $4 and now it's like $2 something terrible. Like that kind of stuff. There's so much noise, there's so much like everybody. You haven't spent time talking about this thing. Like you're focusing on these other things and not on this thing. You know, it's just like a constant hundred messages every day about this stuff.
00:57:42.490 - 00:57:51.394, Speaker B: And as a builder, like, I want to spend my time building and designing the best possible systems and getting adoption. And like, that is the thing that I'm focused on. That's what I want to do.
00:57:51.474 - 00:58:07.784, Speaker C: So you say you solve this idea of interoperability. You build this connective tissue across chains. What's next? You're going to have a war chest. You're going to have probably a lot of tokens for different protocols. You're going to have all these integrations. What do you do after that?
00:58:07.944 - 00:58:35.648, Speaker B: I think for us, the pure focus now is get adoption. That's very clear. Do that thing, I think on that pathway. The main goal is get everybody else to build on top of us and then take things. If nobody else is going to build things that we think are huge unlocks within the system, then we will likely build some of those things. I'm sure we will build things that are purely value additive to the broader ecosystem.
00:58:35.696 - 00:58:38.688, Speaker C: But like the security features that you mentioned earlier.
00:58:38.776 - 00:58:39.280, Speaker B: Yeah.
00:58:39.392 - 00:58:42.064, Speaker C: Which that might be a standard in of itself for other protocols.
00:58:42.224 - 00:59:29.746, Speaker B: Absolutely. So just anything like that. And so after like post broad adoption, I try not to think about it too much. In the same way, I try not like people always want to see this super long vision. And I think one of the problems with that is like when you commit to something, even if it's just in the back of your mind, you like, you have this sunk cost, you start dedicating like mental capacity and space to like, oh, eventually we're going to do this, eventually we're going to do this. And then like if it gets to a point where like maybe it's better to not do that, you feel like you've spent all this time designing and think about in doing this thing, like you want to go down that path anyways. So for me, like, I try to really keep, like the broad view is connect every single contract on every chain, like period.
00:59:29.746 - 00:59:54.642, Speaker B: That is the ultimate goal. That should be the guiding light no matter what. But from here to there is just figure out what you think is the highest value thing in some fixed time window and focus on that thing. I don't allocate too much time to thinking about anything else around that other than just make the system better, get adoption for the system, for all the.
00:59:54.698 - 01:00:17.882, Speaker C: Builders out there, people that are perhaps on the fence trying to find a vector to build on crypto, you've done both. Web two, you built there, you've been successful there, you've come to Web three. It may be different in so many ways. I think the same. But what would be your best advice for folks that want to get involved in the space and come and build?
01:00:18.058 - 01:01:09.444, Speaker B: I think my best advice by far is just broadly be interested in what you're doing. Again, we didn't approach this as company, we approached it as we're going to build something cool that we think is interesting, we're going to get better, we're going to do that. You'll eventually find this problem that you can't turn your head away from. I think one is just actually enjoy building, play with the technology, build contracts, deploy things, build toy examples of all of this. Then the other thing I think that we've done is it's very, very easy. We've hired almost exclusively outside of the space. I think that's not super common and we're a little bit advantaged because us three founders were all very, very native and had built a bunch of stuff in this space and that we could catch everybody else up to speed.
01:01:09.444 - 01:02:20.230, Speaker B: But I think people, there's this really insane delta right now where you can get like, your two options for a hire is like a kid who did a coding boot camp and published one solidity contract that got low to medium usage, or like a distributed systems PhD who you need to teach solidity, right? Like, those are literally your options, right? And for us, we've always taken like, try to get the best possible people we could working on the problem and then spend the extra time to get them up to speed. Leverage your network, whoever else, to get like, this is why we spent so much on audits is why we spent all this. We want to be working with people to say, like, here are the flows you need to be thinking about, here are the things maybe you missed, here's whatever, right? So I would way rather get better engineers, get better people working on this and spend all the extra money that I would have spent on getting like, insert solidity engineer x and spend it on auditors, spend it on advice from like the best people who architect and build and, like, look at other contracts, look at the best protocols built. Like, use those as sort of frames of references. And I think that's a mistake. I see a lot of people is, like, they're gonna build a company, and, like, they're just pick any three. So these are, like, the three solidity engineers I can get.
01:02:20.230 - 01:02:27.214, Speaker B: So, like, I got them, like, no, find the best possible engineers you can and, like, get them excited. Solid is the language you can. You know, you can learn it.
01:02:27.254 - 01:02:43.146, Speaker C: Yeah, yeah, absolutely. What's the best way for people to get involved? And then we'll get to, like, where they can learn about you guys. I mean, obviously, we'll link in the pod and everything, but, like, if someone wants to get involved, wants to build, wants to tinker, what are some of the resources? What are some of the opportunities out there for folks?
01:02:43.290 - 01:03:40.434, Speaker B: Yeah. So our goal is to make it so the docs and bottoms up experience is, like, by far the best in the space, right? Like, we want to be the stripes in that regard. And our penance right now is what I tell the team is that anybody who doesn't have that experience of just, like, sitting down and just, like, being able to build bottoms up without asking and, like, with having everything presented and handheld and fed in a way that is super digestible, our penance is spending the time. So if you are building, like, reach out to the team, we will help you write contracts. We will spend time with you, we will fix the docs when we find things that you didn't understand, like, until we've gotten to the point where that bottoms up process is, like, just unbelievably dead simple and straightforward, like, we have, I don't know, 500 telegram groups with people who are building on top of us who we will spend a time building in there with you. So, like, if you're interested in tinkering around, jump in the development channel on Discord. Like, play around.
01:03:40.434 - 01:03:56.538, Speaker B: There's other people who will talk to you all day on, like, things they found. Do this, do that. This was interesting. Look at this. And we're more than happy to jump in and, like, assist however we can. And that is exactly what I tell the team. I say anytime somebody has a question that they cannot solve from our doc structure, like, that's our penance.
01:03:56.538 - 01:03:59.170, Speaker B: We spend the time, we help them, and then we go make it better.
01:03:59.362 - 01:04:39.582, Speaker C: That's awesome. Well, Brian, thanks so much for coming on the show, man. I'm obviously super excited what you're building, and I hope this has been helpful for folks trying to get an understanding of what you're building and why it's so exciting for the space, which I always like to tell people. Again, abstracting away the complexity of interacting with these chains. No one ultimately is going to care and have a lot of affiliation or passion about these layer ones as we see today. It's going to be, no, I want to use a certain use case. I think we're moving from this small tribalism of groups and clusters that have big bags and certain chains to just a more consumer, mainstream centric focus of around a particular use case.
01:04:39.582 - 01:04:57.618, Speaker C: I think that's what gets really exciting, that we have workable products. There's real utility in the space. It didn't exist five years ago, three years ago, now there is. And now it's incumbent upon the community and builders in this space to just build really seamless layers of infrastructure that connect all of it and stitch it all together. And I think you guys are coming at the right time, which is super important.
01:04:57.806 - 01:05:36.802, Speaker B: People ask my five to ten year goal, like where do I want layer zero to be? And I always say like my goal, like in an ideal state in five to ten years from now. Like nobody knows what layer zero is in the same way that nobody thinks about TCP IP, nobody thinks about Ethernet. Like if you take a networking class and Cs degree in university, like you'll learn a little bit about it. But otherwise, like not a single person using a consumer product thinks about those technologies, but it underlies everything that we do. And I think that is the broad goal and I think many of the layer ones like have the potential to also like if that level of distraction happens, then it's the same users. Users will not care. Like developers care whether you're using AWS or all of these others.
01:05:36.802 - 01:05:42.074, Speaker B: They care about the tooling they're using, they care about the thing that they're doing. But end consumer doesn't ever think about it.
01:05:42.154 - 01:05:55.636, Speaker C: Hey Brian, thanks so much, man. Really appreciate you coming on the pod. I know you're super busy and so we'll obviously link to your Twitter and layer zero and all the resources out there. And hopefully it's a word of encouragement for everyone out there listening to check out one of the more exciting protocols.
01:05:55.650 - 01:05:58.032, Speaker B: Calls him space anytime guys. Thanks so much for having me.
01:05:58.088 - 01:05:58.944, Speaker A: All right, do well, Brian.
