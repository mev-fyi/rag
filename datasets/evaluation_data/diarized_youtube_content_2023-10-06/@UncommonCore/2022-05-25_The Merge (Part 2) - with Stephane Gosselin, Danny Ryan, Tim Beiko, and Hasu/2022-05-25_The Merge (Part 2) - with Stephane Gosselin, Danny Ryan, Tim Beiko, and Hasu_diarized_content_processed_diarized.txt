00:00:03.370 - 00:00:55.070, Speaker A: Welcome to Uncommon Core where we explore the big ideas in crypto from first principles. This show is hosted by Su Zu, the CEO and Chief Investment Officer of Three Arrows Capital and Me hasu a crypto researcher and writer. Welcome to the second part of our conversation where with Danny Ryan and Tim Baco on the merge, which is Ethereum's upcoming transition to proof of stake. Proof of stake touches on so many parts in the protocol. It's such a complex upgrade that has been in the works for so long that we really couldn't just do it in one episode. So in the first part we covered how consensus works. What's the difference between proof of stake and proof of work and the potential trade offs between the two.
00:00:55.070 - 00:02:12.530, Speaker A: But also what has the road to proof of stake for Ethereum looked like? How does it affect important topics like client modularity and diversity? And how did all of the Ethereum client teams test for such a massive event? In part two, we're going deep on two topics that are also very closely related to proof of stake. The first being Mev and the second, Lido and the rise of liquid staking. So. Why Lido? Now that anyone who has ETH can, in theory, participate as a staker on the beacon chain, there's a huge demand in order to delegate that stake to someone else who will run a node and validate the beacon chain for you with a very high uptime so you can turn your ETH from a non productive to a productive asset. And what Lido has done is give your ETH to these professional node operators but also give you a derivative that represents this ETH that's currently being staked on the beacon chain and allows you to do stuff with it in DeFi and on centralized exchanges. So it greatly lowers sort of the cost of capital on staking and basically turns just regular eve into a productive asset. However, Lido is the current market leader in this segment.
00:02:12.530 - 00:03:12.470, Speaker A: Their rise has been very strong so they make up currently 30% of the stake that is on the beacon chain. And to be very clear, like they delegate it to over 20 node operators and they don't stake any of this themselves. But Danny Ryan, who has been sort of one of the most outspoken critics of Lido and liquid staking he has in the past sort of warned people to exercise some caution, maybe to put it mildly, and also ask Lido to self cap their growth. And so we are very excited to hear from Danny Ryan today and dive deeper into some of these arguments. What he sees as the risks of liquid staking and what he would like to see lido to do also. What he would like potential competitors of Lido to do and what are maybe like arguments pro and against self capping and other sort of techniques. The second topic that we are going to explore is the one of mev.
00:03:12.470 - 00:04:07.594, Speaker A: And mev affects almost everyone on Ethereum. So if you have ever traded on a decentralized exchange before, then you've likely gotten front ran by board operators. If you trade on a decentralized exchange and you cause a price impact, then there will be arbitrage sort of bringing the market price back in line. If you use the lending market before, then maybe you've gotten liquidated. So mev definitely interacts with regular users of financial markets in many ways, but it has this almost existential risk on blockchains in general as it threatens to centralize block production. That is because a lot of skill goes into extracting Mev. And if some Validators are better at extracting Mev than others, then this has basically a very centralizing force on how the distribution of these Validators can look like.
00:04:07.594 - 00:05:20.882, Speaker A: And this is extra important after the merge because what happens at the transition from proof of work to proof of stake is that the current node operators, the current Validators on the beacon chain, take over the Ethereum execution chain and they start earning the fees. And the Mev that currently goes to the miners in proof of work. And paired with this reduction in the block subsidy, that is sort of also the result of the merge. Now mev plays an even bigger role in the revenue that Validators make today. And so it is even more important that we have a way to democratize access to all of the mev to all Validators. The company that sort of pioneered this approach of running a public market for Mev extraction via an auction system and that makes these mev blocks available to all miners today is Flashbots. And so Flashbots is where I work and I am very, very excited to, for the first time in his career, bring in one of our founders, the founders of Flashbots and also a steward and architect of many of these systems, stefan Gosalin, also known as the Go Step.
00:05:20.882 - 00:05:22.254, Speaker A: Welcome, Stefan.
00:05:22.382 - 00:05:43.174, Speaker B: All right. Super excited to be here. I think this is an amazing episode. I can't wait to talk with both of you. Tim and Danny. Yeah, I'm Stefan So. I'm one of the co founders at Flashbots, also steward and sort of the lead architect behind some of the products that we've launched.
00:05:43.174 - 00:06:12.290, Speaker B: So mev geth sort of earlier on in the flashbots journey right software to help miners deal with mev and introduce sort of a separation that allows them to outsource mev searching and then more recently sort of the product that's ready for the merge mev boost which will allow Validators to do mev and outsource mev production on proof of stake ethereum. So, super excited to talk about all this.
00:06:12.440 - 00:06:43.438, Speaker A: Yeah, this is the reason that I really wanted to have you on for this episode, because of the intersection between proof of stake and mev and how the merge is going to change proof of stake and how flashboards and the ethereum foundation are thinking in terms of addressing the problem of Mev. Yeah, so why don't we jump right into that? Could you give a small overview of what Mev Boost is and how it relates to the status quo on Ethereum today?
00:06:43.604 - 00:08:07.586, Speaker B: I think the way that we can think about the Mev problem is a problem of unbundling the activity, the economic activity that a block producer does on the blockchain. So in proof of work, Ethereum before flashpot sort of came around miners picked up transactions from the transaction pool and then they put them into a block, proposed a block to that network. What we saw and the reason why we sort of wanted to introduce a new project here is we saw miners starting to want to compete on having access to private access to hash rate. So miners developed private endpoints that allow them to receive transactions directly from bot operators in this case and include those into their blocks, construct them also in ways that didn't necessarily follow the traditional ordering. So there's a traditional greedy algorithm that orders transactions by the gas price that they're paying to the miner to the Coinbase address. And they were starting to experiment with new approaches to ordering. So we wanted to introduce a new abstraction that would help users of Ethereum sort of express their preferences in a more complex way while also maintaining the ability to communicate with the majority of miners at the same time.
00:08:07.586 - 00:09:19.962, Speaker B: So that's what Mevgeth sort of introduced and ability to outsource the production of blocks and introducing new transaction types for miners. What it kept, however, is the job that miners have to aggregate all these transactions in a way that's optimal for block construction. So with a lot of the research that we did following the launch of this we sort of discovered that block building block construction remained a fairly sizable centralization risk because of the ability or the amount of specialization that goes into block construction. And we saw some of the miners also starting to specialize in this block building. So Mevboost, along with the merge, sort of does a further unbundling of this role where it separates out the job of block building of block constructions completely from the job of proposing a block to the network and validating a block. And this is sort of the idea and the basis behind the concept of block builder block proposer separation which has been introduced on the research roadmap for Ethereum.
00:09:20.026 - 00:09:51.034, Speaker C: And correct me if I'm wrong there's another goal of Mevboost is that the existing way that the flashbox architecture works with the mining today is that there's only so many participants that you could handle because of the requirement of kind of policing the theft of Mev. And that Mevboost also allows for kind of this relay actor to serve as this kind of coordinator and help bypass some of those scalability problems.
00:09:51.152 - 00:10:36.230, Speaker B: Yeah, for sure. I think it's an improvement in another way, which is it's more decentralized in the way that Flashbots works today. Because the system in which Flashbots works today requires Flashbots to operate as sort of a watchdog over the transactions that are sent to miners and make sure that the miners aren't abusing what they view inside of those transactions. In the Boost setting, the validators don't see the content of the payloads that they receive from builders at all. They only see the hash of the content. And so you don't need to do this policing anymore. There's some other sort of trust requirements involved, but at least it's not like a policing one.
00:10:36.230 - 00:11:11.678, Speaker B: And it actually shifts the onus of monitoring and of verifying that the system is healthy to validators. So individual validators become responsible for auditing the performance of the bundles that they receive. The net impact of this is that it allows any solo staker to participate in receiving optimal Mev blocks, just like large pools would, and eliminates sort of the incentive for teams to specialize on performing Mev extraction at the pool level. And instead, everyone has access to this open and permissionless marketplace for blocks.
00:11:11.774 - 00:11:37.174, Speaker D: Okay, so I have another just question for you, Steph, if you can expand on Boost just in the naming. The first version of this was Mev Geth, which is basically an extension to the Geth Co space. And Mev Boost was designed in a bit more of like a client agnostic way. So can you kind of walk through just basically how the diff works in practice to current clients and how that's changed from Mevget Geth?
00:11:37.302 - 00:11:59.650, Speaker B: Yeah, this was a really fun design process. Right. We've sort of enumerated some of the features and the properties that Mevboost have. These were sort of all outlined from the start and were like, requirements for how to design a better system for proof of stake. The other one was to support client diversity. So Mevgeth was implemented as a fork of Geth. Right.
00:11:59.650 - 00:12:44.974, Speaker B: And what happened in early 2021, sort of overnight, the majority of miners all of a sudden were running this third party fork of Geth, like 80% of the miners or something, which I think Hasu has referred to it in this way before. This is kind of like a minor activated soft fork, right? It's a different client that's running and producing blocks. To avoid this going forward, the goal was to produce a client that was completely neutral and agnostic to the client that's being run. So it's being implemented as a sidecar that just communicates with the standard consensus clients over sort of an API that's defined and very generalized for outsourcing block construction.
00:12:45.022 - 00:13:04.210, Speaker C: Yeah, I think if we didn't go down that path, we could wreck all the progress in client diversity overnight. As I said, Hasu, I take issue with the soft fork. I don't know if it's the soft fork because it doesn't change the consensus rules. Like any node running is just going to see these as normal Veloci blocks. Why would you say soft fork?
00:13:04.370 - 00:13:50.646, Speaker A: Yeah, that's a good question. I think because there is an outcome to the system rules for most participants even though they didn't opt into them. And I think that's like one of the core hallmarks of what a soft fork is. So for example, if you're someone who is transacting on a decentralized exchange, then the miners activating the software fork would make it all of a sudden cheaper for you to be sandwich attacked. This would be one, but also other sort of behavior became possible, right. The ability on the flip side to get transactions mined privately. If you also communicated with miners through the use of this client, I think it's a bit like tongue in cheek because no transactions became invalidated as a result of this.
00:13:50.646 - 00:13:57.154, Speaker A: But it definitely sort of happened without the explicit sort of opt in of users.
00:13:57.202 - 00:14:08.362, Speaker C: It restricts and it changes kind of the rules of how most blocks are produced. But if someone produces a block differently, it wouldn't be restricted out of the consensus. So I see the similarity and the difference there.
00:14:08.416 - 00:14:41.030, Speaker D: Yeah, well, yeah, there is this one weird thing though. When you get 100% or close to it of hash rate running mev geth, you've implicitly changed the rules in that the majority of the hash rate and overwhelming majority will consider a blocked mine by mev geth as valid if there's a bug in it. Whereas previously we had open, Ethereum was actually the second largest mining client and because of a bunch of reasons that stopped being true. So there's this weird thing where if you had a bug in mev geth.
00:14:42.090 - 00:14:43.670, Speaker C: It could be enshrined.
00:14:44.010 - 00:14:52.358, Speaker D: There's, like, a much greater probability that it would be enshrined than in the previous status quo where you had just say Geth and Parity, both mining blocks.
00:14:52.454 - 00:15:17.998, Speaker C: Which is more to the client diversity question and how putting this inside of baking this inside of a client kind of incentivizes the reduction of client diversity, which some of the second order effects is also, you now have, like, a piece of software that's maintained independently of the client. Like mevgas is. And it's actually probably a much more kind of safer in terms of software production and release cycles and stuff for the sidecar to be kind of a third party piece of software as it's an mev boost.
00:15:18.094 - 00:15:21.810, Speaker B: I'm much less stressed about making mev boost releases than mev gat.
00:15:22.230 - 00:15:26.740, Speaker C: I'm much less stressed about you making those as well.
00:15:27.510 - 00:16:10.930, Speaker A: To any listener who appreciated sort of the nuance on the minor activated soft fork. There's also this other, I think, nuanced idea, which is that I don't know how many people know that in proof of work, there was actually also an implicit form of commit reveal scheme happening between block builders and miners in the form of pools. Because flashboards was only able to scale in the first place with this role of the trusted miner, because we only had to reveal the block content to the pool. And then the pool only sends the hashed block header to its workers. And then these workers, they hash the block header again with the golden nons. Trying to find the golden nons. Right.
00:16:11.080 - 00:16:16.370, Speaker C: That was a function of how these pools already worked right. Out of convenience. And you just kind of get to leverage that. Yeah.
00:16:16.520 - 00:16:41.722, Speaker A: Really fortunate. Right. Because in proof of stake, every validator just falls. Like it's almost like they fall back to being their own builder again. And you don't have this abstraction in the form of pools. Right. In proof of work, someone who has a mining machine at home, they can opt into a pool and just sort of do work on the block that someone else built without knowing what's in it.
00:16:41.776 - 00:16:49.162, Speaker C: I mean, most miners that hook in a pools probably don't run a node at all, like in full implementation of the protocol, they're literally just running mining software.
00:16:49.226 - 00:17:12.854, Speaker A: Exactly. Yeah. And this wouldn't be possible in proof of stake. In the same way, if you run an Ethereum client at home and you want to have 32 E and want to run your own validator without math boost, it wouldn't be possible for you to perform the same kind of work on the block that someone else built. So you can think of Map boost as like fundamental pool infrastructure as well.
00:17:12.892 - 00:18:12.378, Speaker C: In a sense, I think it might be interesting to talk about the kind of mavboost tries to create, proposer, build separation without l one, without the layer one protocol kind of enabling it. Maybe it's worth talking about some of the downsides to this design as like bolted on rather than kind of integrated natively. And I think one of the big ones that comes to mind is that I, as a validator, I sign a block knowing what the value I'm going to get out of that block, but without knowing the full block, without knowing all the transactions. And then I now have signed this thing that I can be slashed for if I sign something counter to that thing. And now I'm beholden to someone else revealing the full block. And so you have some of these kind of withholding attacks, like potential liveness attacks, maybe you have to deal with reputation a bit more because of the kind of the nuances around signing a blinded block, as we call it.
00:18:12.544 - 00:18:42.910, Speaker B: Yeah, it's not like a perfect solution. It's not what has come to be referred to as Enshrined PBS because of these limited trust vectors. I think a lot of the design of Mapboost has been to limit the impact of it, eliminate liveness risk by having easy ways for the client to fall back to normal block production, for example, being critical for having safety properties that work for Ethereum.
00:18:42.990 - 00:19:10.106, Speaker C: Yeah. I think another interesting part is not just falling back locally but attempting to have it be Attributable if some sort of relay or builder fails and is messing with people. So not only are validators signing things, but likely the other side of the aisle would sign things. So that there's some sort of Attributable nature to repeatedly not getting your block out if you're a builder or something like that.
00:19:10.208 - 00:19:54.646, Speaker B: Yeah, exactly. So maybe I can try to describe a bit where that attribution comes into play. So sitting in between builders and validators in the MAV Boost model, there are relayers and relayers are sort of permissionless entity. Anyone can spin up a relayer and start accepting payloads from builders. The job of the relayer is to simulate that bundle, sort of score it, say, like, how much is that bundle worth? Sign on top of the header of the bundle and how much it's worth, and then submit that to the validators that are sort of accepting payloads from this relay. So the relayers all sign and say, like, this bundle, I've simulated it, it's worth this much. And they also escrow the content of that payload.
00:19:54.646 - 00:20:26.046, Speaker B: So when the validator returns back a signed block header, it can then reveal the block to the network and the entire network can see both. Who is the relay that signed the payload? Was the value that they claimed? Who is a validator that accepted the payload and was it revealed successfully to that network? So that Attribution allows to have sort of collective data that you can use for building reputation of the relays and help validators inform which relays are high performance and trustworthy.
00:20:26.158 - 00:20:26.446, Speaker A: Yeah.
00:20:26.488 - 00:20:45.050, Speaker C: So the amount of value from the bundle, that's extremely attributable. If they signed something that's false, the timing around whether it was released on time and stuff is probably a bit more hard to get in aggregate, but I think many will be observing. So I think those reputation metrics are tractable as well.
00:20:45.200 - 00:21:26.038, Speaker D: Yeah. Steph, you just mentioned relayers, and I think one thing that might be useful for people who are not super familiar with the design is can you walk through the incentives of the different participants to actually fulfill their role? If you look at just from the proof of stake side, like the validator, they get paid or they get slashed. So we have these in protocol incentives for them to submit a valid block. But if you go from like, okay, they're like the proposer, but where are the incentives for the builder? What are the incentives for the relayer? Who do you see in practice as actors filling up those roles? Just because it's like a very abstract divide. And I think it helps people to get like, what's the type of entity that sits in each slot, basically, and why are they doing it?
00:21:26.124 - 00:22:21.126, Speaker B: Yeah, definitely. So right now, builders really are miners, right? They're miners who run either Vanilla Geth or mev Geth to have a bit more profitable block construction in a mev boost setting. Anyone can run a builder, anyone can start building, doing block construction, and they can pull transactions wherever they want. They submit it to relayers. So the relayers, I think, act very much so as RPC providers do today. So everyone who's developing on Ethereum is familiar with companies like Infura and Alchemy who provide sort of a routing service, a sort of a centralized RPC, to route transactions to the transaction pool and get data from the chain. A similar thing happens here where you have an RPC provider who's specialized in doing simulation and routing payloads to validators from builders.
00:22:21.126 - 00:23:10.454, Speaker B: In terms of incentives, relays are building a reputation and they want to have the highest data availability possible. So that the issues like Danny mentioned of late reveals aren't a concern. So they're focused on high performance infrastructure, high throughput simulation and uptime. And they'll charge for that service in one way or another, typically probably through API request fees. In terms of builders. So builders are doing much more of an mev job of optimizing block construction. So they'll say, based on all the set of transactions I have available to me, what is the best way to combine them to create a block that has the maximum amount of value? There's multiple different types of builders.
00:23:10.454 - 00:23:45.620, Speaker B: So some builders might set constraints and say, I don't do certain type of ordering. Like anything that could be considered front running is not included in my ordering. Or a builder could say I only do first in, first out ordering. So I include transactions only the way that I sort of receive them by the time that I receive them. Or they could say like, I only want to use the vanilla ordering algorithm that exists within Gas today, which is like, I just order by gas price. And that's the only thing. So builders can order in whatever way that they want.
00:23:45.620 - 00:24:00.182, Speaker B: But really sort of the way that they can monetize is if they build a block that's more profitable than the next builder, they can charge sort of a fee on top of that, like a spread in the value that they've created by creating a more valuable ordering.
00:24:00.246 - 00:24:42.278, Speaker C: I kind of see builders as and this analogy does break down, but the role of kind of these high frequency trading firms that have they're always kind of looking for the next strategy. They're always looking for a new edge. They're always looking to understand the markets in a way that for some amount of time they can make something more profitable happen in trading and other things than others. And the builders aren't necessarily well, the builders can be traders. They can insert their own transactions. But I imagine they're at these highly specialized entities that they're doing a lot of research, they're doing a lot of development to get transactions out of the network, get transactions out of private sources and stuff, and kind of inserting and recombining them in different ways.
00:24:42.364 - 00:25:24.146, Speaker B: Yeah, something I'm super excited to see is in a way, this bundling of builder and miner together has limited innovation, right? Like limited innovation in the types of block construction that you can have and the types of products that you can offer users of Ethereum by having more sort of control over block construction because mining pools have historically been focused on doing other things. So if you open this up and make participation in block building permissionless and pure competition, how many more features are these builders going to be able to provide to Ethereum developers and users to improve the usability of the system I think is a super exciting path of development here.
00:25:24.248 - 00:26:12.370, Speaker A: Yeah. And this to me, this goes into a similar discussion as we had before, which is should we do Mev boost outside the protocol or should we go straight to an enshrined version of PBS? And I think so if you saw Mono's Talk Vanabie from the robust and Senate group of the Ethereum Foundation, he gave a great talk at MEF day where he talked about exactly about this trade off. And the way that he thinks about it is he wants to first let the market discover what very good market outcomes and market structures are and let these actors sort of find the best way themselves and then let us see how we can pull them into the protocol, make them more trustless, if possible.
00:26:12.520 - 00:27:11.010, Speaker C: Yeah, I tend to agree. I think something that will likely there's something that's kind of not necessarily orthogonal but very related and any sort of l one scheme that's going to deal with builders in protocol is also going to probably need to address this, and it's certainly not addressed in MVV boost is the censorship resistance. If we claim that builders are going to be this highly specialized entities that are firms that are doing lots of research to optimize and it's kind of hard to maybe break into this market, there might be only a handful of them that are really like the strong market participants at any given time. And thus there's much more ability to knock on a handful of doors probably to censor things. And so I think there are these constructions that help enhance any sort of PBS, whether it's extra protocol or in protocol, but certainly when it comes in protocol that try to layer censorship resistance back in, even when you assume this kind of external builder actor.
00:27:11.090 - 00:28:12.154, Speaker B: Yeah, I think super interesting research to be done here around. Could you actually build like a censorship market on top of a builder construction? What does a builder who offers out a transaction type that says you can pay me to censor someone look like? And when you take this thought experiment to the limit, I think you start to discover some of the beautiful economic properties that blockchains have of censorship over multiple blocks being prohibitively expensive and that sort of any party that engages in that in a sufficiently competitive market is going to be doing so at significant cost. So I think it's going to be a question mark. What are the mitigation techniques that can be implemented at the protocol level for this? It seems like there's like a super promising area of research and the other one is just economically, how big of a cost is there for performing for performing any sort of censorship, right?
00:28:12.192 - 00:28:20.998, Speaker C: But it's not always about costs. If you have three entities and they live in maybe one jurisdiction cost maybe doesn't matter, depending on who's asking for the censorship.
00:28:21.094 - 00:28:30.618, Speaker B: Exactly. So in that case, I'd sort of describe building as not being competitive enough, where there isn't the ability for someone else to come up and compete.
00:28:30.714 - 00:29:21.982, Speaker D: But in practice though, it does seem like that is one of the biggest risks. I think there are obviously call it like blockchain native censorship, which is like, yeah, I bribe these builders to censor these people specifically. I doubt that regulators will engage on that front. Right. Regulators are not going to reach out to builders and give them an East Denominated payment to censor some country that they sanctioned. So literally, they'll just make it illegal to have economic interactions with that country, for example. And even if you do have decent jurisdictional distribution for builders, I do think that's like a major risk because you can imagine a world where like 80 90% of jurisdictions can agree on something like a sanction, for example.
00:29:21.982 - 00:29:34.370, Speaker D: And I think that is something that at the protocol level, if builders could be almost like unable to discriminate at that level, where it's a very difficult.
00:29:34.440 - 00:29:48.146, Speaker C: Problem, there's probably two avenues. One would be that they can't discriminate and they have to utilize the mempool as it is seen to some extent. But then that requires coming to consensus on the mem pool.
00:29:48.258 - 00:29:54.218, Speaker D: Yeah, there is no mempool, right? This might not be obvious, but everybody has their own.
00:29:54.304 - 00:30:10.426, Speaker A: It's funny how we rehash sort of conversations that have existed like six years ago in bitcoin cash and about sort of zero conf transactions, right? So if you could have consensus on the mempool, right, then you wouldn't need proof of work mining, which you can't.
00:30:10.458 - 00:30:42.186, Speaker C: But you can probably have kind of these alternative mechanisms where validator a at some prior slot makes a claim about a list of things and that list needs to show up at some point in the next few blocks. If not, the blocks become invalid or something. There's weird stuff with incentives here because all of a sudden, if you make these constructions naively, then that list just becomes for sale similar to the rest of the block. But I think that there's an interesting design landscape there.
00:30:42.208 - 00:31:07.806, Speaker A: At least before we get sort of rabbit hole here, I want to zoom out a little bit and then double click on these concerns that we all. Have about builder centralization. So Stefan, could you outline what is this risk of builder centralization? What are the forces that the economies of scale that sort of drive one or a few large builders possibly to emerge?
00:31:07.918 - 00:32:13.074, Speaker B: Sure. So I think block builder centralization is one of the big open questions of mev in general. How much does the natural economic forces of mev lead towards single entities being sort of winner take all in the system? And how can you prevent these entities from having negative impact if they do emerge having a negative impact on the rest of the system? What does a negative impact look like? I think you mentioned censorship. I think that's definitely one that's on top of mind. I think another one is just entrenchment. So doing vertical integration up and down the value chain such that it becomes increasingly difficult over time for competition to emerge and sort of take over this winning position. So I published a talk and an article called The Mev Supply Chain, which looks at sort of this value chain from user to validator in an mev context and how it can sort of end up in two distinct futures.
00:32:13.074 - 00:33:36.210, Speaker B: One of them which is sort of more dystopian of there being a single block builder that everyone interfaces with to be able to get their transactions mined on chain or more utopian, where it's actually a network and sort of a market of independent competitive actors that are all bidding for inclusions in one way or another. And these are sort of the two potential futures I think we can be headed towards. And when we make a lot of these decisions on designing solutions, we have sort of a moral imperative to think about. Is this decision leading more towards a utopic or more dystopian future? Does it lead towards more builder centralization or more builder decentralization in the short to medium term? Because a lot of these questions of how the ecosystem develops aren't answered. I think this is where social norms come into play and actually play a very big role in picking between these two futures. So not only do we want social norms that say like as an ecosystem, we will favor solutions that lead towards more decentralization, but I think that there can also be specific social norms in the type of activity that actors are engaging in that is sort of deemed helpful or less helpful towards decentralization. And having conversations about those is super important.
00:33:36.360 - 00:33:56.166, Speaker A: One thing that's also affected by the merge is instead of a lottery determining who the next leader in block production will be, we now have we now know the next I don't know how many leaders in advance. So is there any impact on mev as a result of this?
00:33:56.348 - 00:34:46.326, Speaker C: Certainly. I mean, people are exploring the domain of multi block mev and trying to leverage this, which if unmitigated or regularly abused, can have centralization pressures, could have block timing pressures, such that maybe if I have two blocks in a row, I don't release block one until I release block one and two at the same time. So I think there are some in protocol things that are under exploration. For example, if that first block was released late, it would just be orphaned under normal considerations. Well, that's a hard problem, but in the ideal you would expect it to maybe be orphaned additionally. Yeah, there's a lot there. I think as well with the proposal, you can imagine a couple of additional things happening.
00:34:46.326 - 00:35:30.214, Speaker C: You can imagine one single secret leader election, but also single secret leader election that does not have the predictability of say, an epoch of 32 validators such that it's just in time. Single secret leader election, that might make things more difficult. But then again, if that block reveal actually reveals the next one, then you can abuse it as well. So then there's a question of, well, is it not the block that decides, but maybe the implications kind of ripple outward. But there's a lot in our design tool belt that's being kind of explored to better kind of make sure mev is on a level playing field, that it doesn't disrupt the kind of M protocol mechanics too much.
00:35:30.332 - 00:36:13.250, Speaker D: Do you think it's easier for applications to design resistance to multi block mev than it is for single block mev? Because you can imagine a lot of the naive strategies are like you change the Oracle price in the last transaction and then you include your swap in the first transaction of a block. And naive applications might have some guards across, don't do too many updates in the same block or something like that. So those feel like they would be easy, you just say instead of doing one block, do n where it's very unlikely that many blocks are controlled. But is that like a naive view? Is it easier for an app to be resistant to multi block mev than single block where they can't really control anything at the app level about where the different transactions in the block end up?
00:36:13.320 - 00:37:17.782, Speaker A: Well, I think it's always like it's relying sort of on TWAP Oracles, for example. So an Oracle that sort of takes the average weighted price of the last, let's say 20 blocks, will always be more robust to manipulation than just relying on the last blocks price. And I think for any applications that use onchain Oracles at all, I think they have migrated to this kind of t wop Oracle that's provided to them by unisop v three. I think that my view is that sort of this leader transparency and the rise of multi block mev will definitely put us back in terms of the Oracles that we can use on chain. Because as you said so applications can run a lot of checks before executing actions. But we see in practice they generally try to avoid even the most basic kinds of checks because this is just stuff that you have to math operations that you have to repeat, you have to perform on chain and repeat in every transaction. And they really do blow up your complexity and the kind of gas costs that users have to pay.
00:37:17.782 - 00:37:37.130, Speaker A: So they love to sort of outsource this to, for example, Unisop, which just performs the TVAP operation once per block for every pool instead of every app doing it itself. So in practice, this is what we have seen and yeah, I think it's TBD like how usable this still will be after the merge.
00:37:37.290 - 00:37:55.390, Speaker C: Do you all think that either the fair ordering protocols or some sort of encrypted and then later revealed transactions to just eliminate mev? Do you think those are actually like fruitful design avenues or research avenues or are they kind of just roadblocks?
00:37:55.470 - 00:38:29.658, Speaker A: Okay, I have two takes on this. I think the first one that I wanted to make earlier, but I forgot. And I think a cool nuance about mefboost that we didn't get to talk about is that it's actually completely neutral infrastructure that can in the same system house both builders that use fair ordering protocols and builders that use an Mev auction or a sort of more opinionated Mev auction that excludes sandwich attacks and so on. Right, and this is all so what Mapboost does is only provide this decentralized more or less market for full block templates.
00:38:29.754 - 00:38:34.978, Speaker C: Okay, but you're saying that Validators might choose to use builders that have strategies that are fair.
00:38:35.064 - 00:38:35.362, Speaker A: Yes.
00:38:35.416 - 00:38:40.562, Speaker C: Okay. Because those strategies, if I'm just looking at the price, are likely not going to win.
00:38:40.616 - 00:38:42.450, Speaker A: Yeah, they will be.
00:38:42.520 - 00:38:47.382, Speaker C: But if we have known participants and they have reputations and they always follow the strategy. I got it. Okay.
00:38:47.436 - 00:39:44.470, Speaker A: I was saying that first to say we might actually see in the wild competition between builders who use these different strategies, which I think can be really cool, but sort of my view on fair ordering protocols in general is they can't eliminate sort of the pressure for mev nor like the existence of mev itself. Right. So even if you're fully private transactions, then there's no front running possible. If, for example, as a user I make a trade, I create a background opportunity because I unbalance the liquidity pool in DeFi, then if this cannot be immediately captured by a searcher, then these state differences will just accumulate and move to basically top of the block Arbitrage in the next block. And so what you get is you turn this game of biding for mev opportunities via the gas price. Not the gas price like the fee that's paid to minor in the auction. Exactly.
00:39:44.470 - 00:40:02.174, Speaker A: You turn it into a latency war that replicates high frequency trading that we see in the traditional financial system. And we think it's way harder to create a level playing field and low barriers to entry for participants in the supply chain. If they have to compete on latency instead of price.
00:40:02.292 - 00:40:20.962, Speaker C: Certainly agree. I mean with traditional New York Stock Exchange there's a dozen entities that play the high frequency trading game at the highest level and they have their fiber lines measured so they're exactly the same length. So they're all playing by the same rules. We're not going to get there here. We'll see where it goes.
00:40:21.016 - 00:42:04.530, Speaker B: So I want to follow up on that conversation about multi block mev. To me, multi block mev is kind of a red herring. There's not that much more that you can do, aside from some maybe lowering the cost of oracle manipulation in certain cases from an Mev perspective, but where things do end up looking quite a bit different, I think after the proof of stake change is sort of perhaps lowering the cost of reorgs, like the impact that more frequent short term reorgs might have on an MUV market. I think I'm looking specifically here and thinking about some of the other proof of stake chains that have sort of emerged over the last couple of years and noticing the frequency of reorgs in those and the types of mev strategies that bot operators have been engaging to make sure that they're able to be on sort of the winning reorg of the chain. So the way that you could think of this strategy is if I control a large pool of the validator network, I can propagate through a subnet for attestations from these validators ahead of attestations from other validators and maintain sort of a second consensus weighted chain that I can always swap back to if I need to and have more votes to exclude the block from some adversary somewhere on another chain. And we've seen these strategies be extremely effective in other proof of stake chains. As Flashbots, we sort of made a decision not to build software that enables the development or the extraction of reorg based mev because it doesn't seem to be in line with sort of the ethos of a chain that just keeps moving forward, instead makes it move backwards.
00:42:04.530 - 00:42:11.378, Speaker B: But I'm wondering how you all think of this from a protocol development perspective. Is this sort of a major risk?
00:42:11.474 - 00:43:23.786, Speaker C: I think as a general rule there's many domains of these types of attacks around reorgs and subtleties that without mev you might say who's going to do that? But with mev all of a sudden you have very incentivized actors for each of these types of attacks. And so as protocol designers and researchers these are at the forefront of our minds trying to find the correct constructions and the correct balance of parameters that make these hard or costly. I think right now in the ethereum protocol crypto economic security is not accumulated on a per block basis, it's accumulated on a per epoch basis. And so short range reorgs, although might be hard unless you control certain portions of the validator set, are not costly. If you actually do them. And so all of a sudden things like single slot finality, which I think is a bit of a misnomer, it's more like cumulative crypto economic security on a per block basis. Those become very probably high priority on the kind of two year time horizon because they do make these things that are now probably much more incentivized to be actually costly.
00:43:23.786 - 00:44:14.554, Speaker C: Which is funny, you still have a bound, right? If there's a reorg and it's going to cost something, then if you have a high enough mev, then all of a sudden it's going to become rational to induce such a reorg. But without certain mitigations, then you do have kind of the flashbots view of it in that it's not in line with the chain's ethos. And so you do have kind of some second order effects protecting you. If I am a pretty large staker and I am doing things that are bad, whatever that may mean, I might be affecting kind of the stability of the chain, I might be affecting the kind of the implicit value of the chain and things like that. So you do have second order effects helping you, but we don't want to rely purely on those on the multi year time horizon and get to a safer place in light of these types of attacks.
00:44:14.682 - 00:45:05.626, Speaker A: Okay, so that concludes our discussion on mev. And I actually now want to transition to probably what many listeners, but also us here have been waiting for. Let's Talk about Lido. So, to give a quick introduction, lido is a decentralized staking pool protocol where as a potential staker, you can give them ethereum and they will allocate it to one of currently 22 professional node operators. These node operators will stake the ether for you on the beacon chain and you receive what they call a staking derivative called staked ETH in return. And this accumulates the rewards from staking and can later be redeemed for ETH. It's just basically a representation of ETH that's being staked on the beacon chain.
00:45:05.626 - 00:45:37.586, Speaker A: And while Ethereum proof of stake has been designed with making solo staking as easy and accessible as possible, the outcome that we have seen in practice is quite a bit different. Right, so Lido currently has around 30%, I believe, of all stake that is currently on the beacon chain. So I have seen you, Danny, sort of come out with the Tweet very recently. I'm curious, what is your thoughts on Lido and how has your thinking on this evolved over the last couple of weeks?
00:45:37.708 - 00:46:46.240, Speaker C: So the thinking has evolved over many, many months, not just the last couple of weeks. I personally believe that such constructions, although do mitigate some of the classic centralization risk. So for example, if Coinbase had 30%, I do believe that there are kind of inherent risks in the pooling of these assets at certain protocol thresholds, call it 20%, 33%, 50%, that kind of stuff. That we're not really acknowledging as existent due to smart contract, risk due to governance risk due to well, governance is, I think, a big one, especially considering the ratio of the assets staked versus kind of the governance, the value of the token that governs the protocol, also the number that govern the protocol. Then you add in pooled rewards and you add in mev and different things. I think this type of protocol becomes kind of a natural stratum for cartelization of the protocol. And my personal view is that I wish there was better competition in this space twelve months ago, which there's not.
00:46:46.240 - 00:47:14.722, Speaker C: Lido's made a great product by all means. These guys have an exceptional product. They got in front of all any competitor by twelve months easily. But I'd hope that there's one better competition in this space. Two, an acknowledgment of the risks that exist by both capital allocators and the people considering the protocol. Because I think there's two types of risks. There's risks to those putting capital into a system at certain thresholds.
00:47:14.722 - 00:47:54.898, Speaker C: There's also risks to the protocol. I think that individuals allocating capital will certainly price and should price the risks to their own capital. I think it's much harder if the risks are purely to kind of the protocol and maybe cartelization it's much harder due to the tragedy of the commons for individuals putting capital into to price it. But nonetheless, I think there are many risks here. I think it's very important for people to discuss the risks. I think it's very important for competition to emerge. And I also think it's important for those in the Lido community to kind of consider and acknowledge what has happened in proof of work protocols for quite a long time.
00:47:54.898 - 00:48:20.566, Speaker C: Pools have self restricted easily in bitcoin and in Ethereum, there could have been pools that did exceed the 50% threshold. I remember a number of times in the past that a pool would kind of get there and all of a sudden there's a big conversation and people are like oh no. And then the pool would self restrict because of the kind of second order effects on the security of the protocol and the impact of kind of the view of the protocol to just hook.
00:48:20.598 - 00:48:40.178, Speaker A: Into the question of comparing mining pools and staking pools because I think do you think that they're actually comparable? Because in proof of work the mining pool is the one building the blocks, whereas in Lido sort of it's the node operators who all are individually incentivized to make good blocks. And Lido has yeah. Direct.
00:48:40.264 - 00:49:38.726, Speaker C: I did note that I think in the normal case that the distribution of node operators underneath such a Lido protocol, it's better than if Coinbase had 30%, and I'll get to that in a second. The mining pools are very interesting because the capital allocation is actually much more liquid. So if I actually don't like a mining pool, I can move over much more quickly, that becomes more possible post merge, but it's not really possible at this point. But I do believe that because of the levers at play, the governance levers because of upgradability, which I know is intended to be minimized over time with Lido, but because of a whitelist of operators, because of the reputation required to be an operator or not. And the governance levers there. I do believe that in the extreme that governance can coerce this capital to operate in a unified way, whether it be deep attacks. Very likely not.
00:49:38.726 - 00:50:02.810, Speaker C: It's probably not like a one third slashing event through a concerted attack to double finalize and double spend. It's probably much more insidious in multi block mev in short range reorgs in that kind of stuff. That due to the way the whitelist may work and due to the kind of pooled rewards and penalties that I think that you kind of have some insidious things that emerge.
00:50:02.890 - 00:50:08.878, Speaker A: Tim, do you have sort of your own view or would you subscribe to what Danny has said?
00:50:08.964 - 00:51:14.674, Speaker D: I definitely agree with the vast majority of that. I think the one thing that's interesting to me as well is if you look at something like Lido, the two biggest problems are one, you have on chain governance, and then two, you have like, a whitelisted operator set. And unfortunately, they kind of balance each other out in that if you make the protocol more trustless, there's less things you can do on chain to fix things. And actually having off chain relationships with operators makes it easier to mitigate issues. So imagine a world Lido completely abandons on chain governance and then there's a fatal flaw in the Sts token, right? And if there's only these 22 node operators that you mentioned, the Lido community can get together with the 22 of them, deploy a new contract and kind of agree that this is the new SD ETH and the other one is worth less. Something like that, right? So you can recover some scenarios because you have off chain trust with the operators. But that's another one of the problems in Lido is you do have this off chain trust.
00:51:14.674 - 00:51:30.806, Speaker D: So that means that there's another failure mode where it's like it doesn't even have to be malicious to the protocol. But it can just be they do not let other operators join the whitelist because they've established a dominant market position and they make a ton of money and so why split it with more operators, right?
00:51:30.828 - 00:51:33.226, Speaker B: Like they could just choose to restrict that set.
00:51:33.328 - 00:52:09.138, Speaker D: So then there's like this other kind of critique where you would like some sort of less permissioned way for people to join Lido, maybe having a bond or having metrics, whatever. But then if you have that and there is an on chain issue, you don't have a guarantee that you can actually contact these operators in as efficient of a way. So I think this is like the other thing I would add there is like a weird catch 22 there. And if you solve the governance thing and you make Lido completely trust minimized, then you're kind of going to rely on the off chain relationships that you have as much more of a crutch and vice versa.
00:52:09.234 - 00:53:19.670, Speaker C: And I do believe that Lido can be designed iteratively and better over time. I don't believe that all of the risks of centralization can be mitigated, nor do I believe that governance can be entirely eliminated. And say you put in an upgradability kind of time bound where if those that didn't want to participate in whatever the new rule set is, could have time to exit. Which is good because in the extreme probably you can't have the theft ratio issue where a small amount of Lido governance tokens and governance holders could steal all of the staked can be diminished over time. But I do think you don't really eliminate. I think in the extreme you don't really have the choice that that would imply because if staked death becomes systemic, then minor changes to the way the rules are going to be operated and minor changes to how things that kind of compound over time don't really become reason enough to leave. But you still have kind of this kind of extra protocol governance force on maneuvering and steering kind of things by a small minority.
00:53:19.830 - 00:54:24.958, Speaker D: Yeah, on one point I'll add on that as well. It's worth noting for listeners is Lido is multi chain, right? Like Staked ETH is the biggest product but there's a bunch of other chains and it is still the same LDL governance token that acts as governance for what happens on these other chains. The Token lives on ethereum. But if I was another chain than Ethereum, there is this weird incentive misalignment where say that the Lido ethereum community wanted to be very hostile to the Lido avalanche community or something like that. They can pass a governance vote on Ethereum and affect how st AVAX or whatever is managed. And as an Ethereum person, I sleep fine at night because Lido is mostly like an ethereum product. But I think that the solution there is you definitely want some mechanism for individual chains to be able to veto or block or extend a delay on changes initiated by LDO holders.
00:54:25.054 - 00:55:01.942, Speaker C: I think that's actually a design being explored. I think the intention over time is to study a governance model that can incorporate say, staked ETH with ETH upgrades or staked whatever that token is called with their types of upgrades, which I think makes sense. And again, I agree. I believe that these designs can should be made better and I'm excited. I know the Lido community is very interested in trust minimization, but I think the Lido community is very cavalier about the risks involved in decentralization. And I challenge others that are getting involved in the protocol to question the proposed lack of risk.
00:55:02.006 - 00:55:45.738, Speaker A: So let's take a step back. I like to play these thought experiments, I like to play them with mev. Where would we be if there were any flashboards today? How would the market have played out otherwise? And I think I would like to play the same thought experiment here where would the market be if there wasn't lido? So I think we can start from this assumption that users have eve they want to stake their ETH and they want to earn yield, but like 99 point whatever percent of them are not going to run their own validator like we even know. It would be deeply uneconomical for many reasons if it weren't for map boost, if it's not for pooling of rewards and smooth payout functions and all of these things. Right, so what do you think would have happened?
00:55:45.904 - 00:56:33.866, Speaker C: So a couple of things there. I do believe that 99.9% of users are not going to self stake even if you make it incredibly easy because this is not what they're going to do. But I think it's very important part of the protocol to increase the amount of independent operators, to increase the amount of independent nodes, to increase centric resistance in the extreme and other types of things. And so people do that and I think actually if you look at some of the graphs early on, likely there was a pretty high portion of kind of solo stakers whether they be Staking 32 E or Staking 32,000 E even. There were some large whales at the beginning, but I think that's diminished over time because I think there's kind of the amount that wanted to do so kind of got in. And I think you have some growth here and there.
00:56:33.866 - 00:57:48.734, Speaker C: I think you have new people come online. But there's always going to be demand, certainly for a significant portion to be professionally operated. I definitely agree with that. And so then I guess the thought experiment supposed to point me in the direction of would it be well distributed or would it be naturally increasingly centralized over time? And I think that without a Lido product that you probably would tend to see centralization under a few large operators and that Lido does for the amount of capital that shows up, distribute nicely to more operators underneath the hood. I do think that based off of conversations and based off of historically what we've seen in different avenues, that large exchanges and others that hold large custodians of capital would self cap. And I think that Lido gives us this kind of like middleware where we think it's okay to not when you exceed certain thresholds. And so I think that's one of the big differences here is that Lido and this version of reality where Lido exists, we have a bit of a backdoor into increasing the capital under one system beyond certain thresholds.
00:57:48.734 - 00:58:23.194, Speaker C: And I don't think that you get that as naturally in a non lido world. I do think in terms of the thought experiment, I think the lido world or some version of it is probably inevitable because smart contracts exist and the way that kind of capital can be put under the control of smart contracts here in the system. And so I'm in a lido world and I'm trying to make the best of it and I hope that there's five more lidos and a lot of exploration and competition in this domain.
00:58:23.322 - 00:59:49.254, Speaker A: So I think if we like, no matter what reality we want to live in right now, we live in a reality where Lido exists. And also some people believe that the staking market is sort of naturally very centralizing. Fortunately, we have the ability to build reasonably decentralized, like or progressively decentralized staking pools in order to sort of feather that risk, which I think otherwise completely depend on what you describe as self regulating or self capping their stake, which even though it has worked for mining pools, personally, I've never been satisfied with that solution. We always knew that, for example, some of the Asian mining pools had exactly the same owners and for most of the history they probably operated way more than 50%. Just put a different label on it, right? And so I think we should be genuinely curious and excited for ways to build legitimately decentralized staking pools, but also, I think, be very wary about the risk that exists. And I think lido has done a reasonably good job at that, sort of always coming out and saying so what risks do we personally pose for the protocol? And please hold us accountable. And here's how we are currently thinking about addressing these.
00:59:49.372 - 01:00:36.354, Speaker C: I agree when I say attack, I don't mean the bad guys. I do disagree with some of the approach taken here. I think spending millions of dollars a month on DFI incentives when you've reached 30% of state capital is maybe a bit nefarious. But I don't think these are the bad guys. And I think they've attempted to design a very good protocol and attempt to refine that and be open about some of the risks over time. I also don't think that self capping is the only solution. I do think Stefan was talking about earlier with Flashbots, just kind of like the assessment of risks, the ethos of the kind of community and the structure there can have a lot of impact over time and how this capital is allocated.
01:00:36.354 - 01:01:24.482, Speaker C: But I will also say there are in the event of, say, a lido supermajority is like in equilibrium for some amount of time, the protocol is resilient to being attacked. In the event that there's kind of in protocol attacking capital can be burned. And in the event that there's some sort of nefarious activity that cannot be flashed in protocol, the ethereum community and those users of the protocol, which are not just those that hold ETH, can. Ultimately fork out. That attacking capital. That's not something you want to get to. But it is even similarly to centralization concerns that we've talked about for many, many years of capital under a central operator.
01:01:24.482 - 01:01:32.010, Speaker C: The same recovery modes exist for this and it's kind of nice. In lighter's case, extremely attributable.
01:01:33.150 - 01:02:17.480, Speaker D: So I have a question about capping. So I think right now it's a really bad approach because users of Lido are basically locked in right until there's withdrawals on the beacon chain and there is a curve pool, but obviously that does not accommodate all the volume and it's not like a proper exit. And behind the scenes the ETH is still staked with the same operators. Do your views change about a cap in a world where we do have withdrawals? And it's almost a world where then you can abstract it on chain, right? Like you can have almost like a router which will withdraw from the certain operators and then move it to another operator once we do have withdrawals. Does that change your views on a cap?
01:02:18.090 - 01:02:40.670, Speaker C: I think that a cap is a personal issue within Lido governance and those that operate their product. I don't think that a cap on their product really changes in terms of like post merge or pre merge. I don't see why that is a very important inflection point on how they'd consider kind of the economics of such a cap. Can you explain that? Again?
01:02:40.740 - 01:03:23.226, Speaker A: I think one possible explanation for why Tim's question makes sense would be that right now the switching cost between Lido and these different providers is higher. So in case Lido ever were to exert undue pressure against its node operators, then right now people staking with Lido have no way to escape from the system. But after the merge, maybe especially if sort of forced withdrawals are enabled, then they could switch freely and there's really nothing that Lido could do about it except for the argument that you already gave. If staked EF were sort of the de facto eve, then they would have to exit into a much smaller token potentially.
01:03:23.338 - 01:03:37.546, Speaker D: I think the other thing that withdrawals change with caps. So imagine a cap today, there's two ways you can implement it. One is you block deposits to the smart contract. Like you just literally revert them past an amount and then what you're six.
01:03:37.588 - 01:03:40.686, Speaker C: Oh, you mean an in protocol cap? Like l one capping.
01:03:40.718 - 01:04:04.086, Speaker D: It no a Lido smart contract cap. So there's two things you can do. One is the Lidl mint function stops working right, or the Sts mint function. And so what you're saying then is only the users who have deposited before the cap can enjoy sort of the service that Lido offers, which maybe is not the end of the world, but it does kind of create this two tiered.
01:04:04.198 - 01:04:10.314, Speaker A: I think you would see a really fun scenario where staked ETH would trade at a pretty big premium to Eve, right?
01:04:10.352 - 01:04:48.742, Speaker D: Yeah, that as well. And then the other way to implement the cap I want to get in, let me in because Lido right now, socializes rewards across people who are also in the deposit queue, as I understand it. So then if you have a cap, the easy way to implement a cap in Lido is you probably just leave people in the deposit queue kind of forever. But then that's a griefing factor across all the current SD holders because you can just park your ETH there, earn, yield and dilute it for everyone and you can just kind of keep doing that over time so there's just weird situations you end up in.
01:04:48.876 - 01:04:54.806, Speaker C: It's at least a costly griefing factor. Someone's ETH, you got to put in an ETH.
01:04:54.918 - 01:05:01.754, Speaker D: But you also get paid though, because you also get the part of the rewards because you're going to be sure.
01:05:01.792 - 01:05:05.066, Speaker C: But you would argue you could put it somewhere else and get more rewards.
01:05:05.178 - 01:05:09.550, Speaker D: Yes, but it's an opportunity cost refrain fact, not like a cost.
01:05:09.620 - 01:05:36.790, Speaker C: And to the framing of how a cap maybe is more beneficial now than later because they have optionality later. I'm not worried about on the twelve to 18 month time horizon. I'm not worried about kind of the systemic types of attacks here. I think it's more on the kind of 3510 20 year time horizon that I think these attacks become increasingly scary.
01:05:38.170 - 01:05:39.240, Speaker A: I want to finish.
01:05:41.470 - 01:05:49.142, Speaker C: You'Re going to put the limit in, but I'm just saying the difference between what happens now and in six months from now isn't.
01:05:49.206 - 01:06:26.354, Speaker D: Okay, I lose much more sleep over the next one to three years than the next ten to 30 years. I think the ODS that we make it, and this is true also for mev, I think there is a perfect path five years away where we've fixed these issues and we just have this great world and I think there's like a pretty good chance we get there. And my fear is just like we just fuck it up sometime in the next three years because of some bad decision. And so, yeah, I think we're going to make it, but I think it's like we're walking this very narrow road and one bad step would just fall off the cliff.
01:06:26.402 - 01:06:58.770, Speaker C: And I guess I agree with that sort of risk assessment. So maybe I'm just worried about everything all the time. What keeps me up at night is designing something that kind of works now because there's the cultural norms or because everyone's generally aligned but what really worries me is if in a few years this isn't what I want to do and I don't want to steward it and it kind of ossified what happens in ten years. What happens in 20 years is it actually resilient to those types of time horizons and the types of attacks and issues we might see there.
01:06:58.920 - 01:07:35.740, Speaker A: So we talked about sort of this idea that lido could be throttling its own growth. And I think as a holder of staked eevee, I think I actually want them to keep growing for the very simple reason that the more other people are staking via lido, the more useful the staked ETH asset becomes. To me, it becomes more liquid, finds more adoption in DeFi where I can use it, et cetera. So in a sense like liquidity begets liquidity. Yeah, that's exactly right.
01:07:36.130 - 01:08:04.934, Speaker C: I have a question though. Do you think that the second order effects or third or fourth order effects, whatever they may be, to the Ethereum Platform, for that to kind of meet its extreme? Do you think that that keeps ETH in a valuable place or do you think that kind of brings systemic risk in that maybe challenges the value of being part of that? And obviously you have kind of the tragedy of the Commons as an issue here. But just in the extreme, what do you think?
01:08:05.052 - 01:09:02.314, Speaker A: I think you're hitting on the exactly right point, which is that it has very positive first order effects. And I would say the effects are actually it's almost like we're creating a completely new asset here. It's like if you imagine Eve to be like cash today, then the idea that you can stake ETH and use it the same way that you use ETH today is almost like sort of the leveling up from cash. To a bank account where you trade in deposits with other people and can transact them seamlessly while also lending them out. And the capital gets sort of put to use in a productive way in the economy. So I think it's almost sort of that moment for Ethereum and just as a staker, I think the first order effect for me is great if that continues. And I also want more people to sort of enjoy this benefit of having this asset and I want to be able to trade with them.
01:09:02.314 - 01:09:24.640, Speaker A: So I just want to be like, I think, make clear. I think the first order effects of this are really great. And I think where it gets very interesting is sort of the second and third order effects which down the road, definitely if lido weren't know decentralized, as we all hope it does, then I think definitely then you get into a precarious situation.
01:09:25.590 - 01:10:19.790, Speaker D: One thing I think this is the thing I disagree the most with say you and you wrote this piece with Giorgios about liquid Staking leading to monopoly. I appreciate the returns to scale. Like, I get the argument that obviously you want lido to be on DeFi even if it's not on DeFi. You want to have the STF token, have high volume and stuff, like you want liquidity and that has a ton of positive reinforcing cycles. What's not clear to me is when do those stop? Because it kind of feels like if you have an asset that's say, tens of billions or hundreds of billions of dollars in market cap, you have liquidity for all intents and purposes right. For most people. And so a world where, say, there's like four staking derivative with a ten to 100 billion dollar market cap or something seems like one where you do get those benefits, but you also don't have the systemic risk.
01:10:19.790 - 01:10:45.514, Speaker D: So, yeah, I'm curious how you think about that, because I get there's like a level why you want liquidity, but past a certain point, it's like the risks to the protocol might outweigh the additional benefits. And as an end user, like today, I like to think of it as stable coins. USDC or USDT or Dai all have deep liquidity and you can trade in and out of them and use DeFi with them.
01:10:45.552 - 01:10:45.850, Speaker C: Right?
01:10:45.920 - 01:10:59.022, Speaker A: Yeah, that's right. I mean, I think it's still an open question whether these coins can survive sort of in the state that they are, if there will be some more, like, centralizing outcome among them.
01:10:59.156 - 01:11:23.720, Speaker C: I'm optimistic that there are designs, alternative designs, and not just alternative designs, but market valuable designs that are valuable to the market that Lido has not explored and wouldn't be covered by their construction. And that in the coming year that we see a number of these pop up and maybe give Lido run for the money such that you do. Like, there's a reason Dai exists. There's a reason.
01:11:25.530 - 01:11:26.600, Speaker D: And there's a reason.
01:11:28.650 - 01:11:30.742, Speaker C: If you need more money, you print more money. Obviously.
01:11:30.876 - 01:11:40.300, Speaker D: No, no, but what I mean is if you take like, USDC and Tether, they have very different risk profiles, but it's like great that both of them exist. Right.
01:11:41.310 - 01:11:46.050, Speaker C: I guess I don't know enough about USDC recently.
01:11:46.150 - 01:11:59.342, Speaker D: I would not sleep well at night if, like, USDC was the only stable coin on, like, that would feel like a systemic risk to me. And nothing against them in particular, but it's like, yeah, I like that we have different ones with decorated risk profiles.
01:11:59.406 - 01:12:04.414, Speaker C: Yeah, I think that's valuable. I think it's systemically valuable. I hope that it's valuable in users.
01:12:04.462 - 01:12:13.186, Speaker A: I have two follow up questions to this. First one for Danny. So what kind of designs do you think we haven't explored in decentralized staking pool?
01:12:13.298 - 01:12:23.642, Speaker C: Well, one's very obvious, and it's not decentralized. It's the USDC of staked assets. Some sort of large centralized provider. I'm not saying that's a good thing.
01:12:23.696 - 01:12:28.582, Speaker A: I do Coinbase has that right. It's just you cannot withdraw it from the exchange.
01:12:28.646 - 01:12:29.114, Speaker C: Oh, no.
01:12:29.152 - 01:12:31.286, Speaker A: On chain.
01:12:31.478 - 01:12:42.030, Speaker D: If you could withdraw basically, if you could withdraw your staked ETH, whether it's at Coinbase or another place, so you get the SDE, but there's no LDO token. It's like managed by a company.
01:12:42.100 - 01:13:05.446, Speaker C: Right. I'm not claiming that's necessarily a good thing. I'm claiming that that might be valuable to some users in a different way to stake these. And I would be surprised if we didn't see something like that. I do think that you can the the rocket pool collateralized version that just does not have the types of network effects. You just can't scale that as quickly. So I don't think that's really a competitive here.
01:13:05.446 - 01:13:45.458, Speaker C: I do think that there is a new tool coming in the wheelhouse that I'm sure Lido will be exploring. But I think there's going to be a lot of interesting things to explore for new companies as well, getting in and that's DBT distributed validator technology just to more kind of trustlessly combine NoTOR operators, potentially lower the barrier to entry. Obviously that can be leveraged by Lido, but I think that kind of marks an inflection point where a bunch of new people can maybe jump into the game to play with new things. But surprise me, I think that there are very likely some things in here that I'm not keen to and that the market will kind of play with over the next year or so.
01:13:45.544 - 01:14:19.680, Speaker A: I want to raise another builder bridge to something we already talked about, which is proposer builder separation. Right? So we have discussed that Lido like the risk that Lido could exert pressure on its node operators to include specific payloads which might be bad for the ethereum chain. So I'm curious, both staff and you two as well, how you think about Lido outsourcing its entire block building to a decentralized block building market like Mapboost or PBS. And if this would sort of alleviate some of your.
01:14:22.290 - 01:15:46.170, Speaker C: Is, I think that it's likely that large operators or large consortiums of operators actually become kind of mev powerhouses in and of themselves. So I think that if they outsource naively, then in the normal case maybe you don't have kind of the cartelization and the maybe inter block MUV or short range reorgs that maybe having that much capital would incentivize. But I think a large enough actor is incentivized to do one of two things to have either special relationships with such a market where they're saying, I'm the next three proposers help me out. Or to be large enough for them to not need the market and to do the MEB research and the searching and stuff in the context of their very special situation. I think that's one of the reasons that mev boost is very important is such that even if even a 30% operator isn't going to get outsized opportunity with respect to a solo at home operator, but in the extreme you pass certain in protocol thresholds, especially 50% the solo operator with the opportunities that begin to look kind of like attacks short and reorgan stuff. The solo operator, even with a sufficient market, isn't going to be able to participate. Unless they join the cartel, of course.
01:15:46.240 - 01:15:50.658, Speaker A: Is this really true, Stefan? Could we build multi block mev into Flashbots?
01:15:50.774 - 01:15:52.800, Speaker C: Certainly the answer is certainly.
01:15:55.010 - 01:15:57.230, Speaker B: Just an information hazard question.
01:15:57.300 - 01:16:06.894, Speaker A: So you're saying it's a moral imperative in a sense that a builder gets big enough that they can extract multi block mev and make that available to all validators.
01:16:06.942 - 01:17:00.062, Speaker B: I'll put it this way. I'll say if the blockchain requires the majority or like a cartel of validators to be benevolent, for it to continue moving forward, it's probably not a blockchain anymore. So it probably is not a good outcome to have software that requires that. If we actually think, okay, there's only a bounded risk of short term reorgs and we have epoch finalization anyways, maybe it's fine. Maybe we want to stress test the system and see what happens. If there is infrastructure for performing short term reorg at scale that is inclusive so that allows even solo validators to participate in the reorg game. I think that is like a design space that could be explored.
01:17:00.126 - 01:17:31.966, Speaker A: Well, that's already a step further right from just multi block mev, which is just forward looking cartels as a service. Yeah, in a sense, if the market trends towards cartelization, for example, between mining puts and searchers, then the only way that you can what you can do is make this cartel public, right, and make it so that anyone can join it and make it accessible to all participants both up and downstream of the supply chain. And I think this is actually the right way of thinking about what Flashbots has done so far. Right.
01:17:32.068 - 01:18:25.294, Speaker C: And I'll go back to some of the in protocol stuff at a certain point, block slot, which is kind of further incentivizes, blocks arriving on time and single slot, finality or single slot crypto economic accumulation. These types of things, I think, on the two, three, five year time horizon are very important. Refinements the protocol to reduce the impact of cartelization as a service and the impact to users. Ultimately, this is a thing for users, and if you regularly have five block reorgs to optimize profits for those running validators, whether they're in a cartel or running at home, that has an impact on users. And that's the reason to remember that we would continue to refine and harden these things.
01:18:25.412 - 01:19:05.002, Speaker A: We talked about mev and Flashbots and Map Boost. We talked about Lido and Staking. So I think I want to, for the final chapter, take a step back and see. So both Flashbots and Lido is kind of in utrent, right? It's protocol external projects that are playing very important roles in the protocol that are both very adjacent to sort of the core infrastructure of the protocol and very important for its security both in the short and long term. As the ethereum foundation. How do you think about the existence or the rise of these protocols and how do you manage your interactions with them?
01:19:05.136 - 01:20:07.642, Speaker C: We are looking for solutions that help make the protocol more stable, more robust, and ultimately valuable to kind of the end users and communities that use these. So when we're thinking about, say, interacting with Flashbots, the EF isn't thinking about, okay, what's Flashbot's revenue model? Is this going to help them or hurt them? It's more of can we collaborate to find better solutions that help enable the markets, that help stabilize the protocols and things like that. And we found, especially with Flashbots, that there's actually been a lot of really nice overlap in the goals here. Right. I think Flashbots does want an open market, flashbots does want a stable protocol. And so in doing so, when we're exploring both extra protocol designs like Map Boost or in protocol designs like Enshrined PBS, we've been able to kind of collaborate very fruitfully. It really kind of depends on the alignment of the project with the ethos of kind of stabilizing, hardening, decentralizing ethereum.
01:20:07.642 - 01:20:11.130, Speaker C: And if we generally have alignment there, we usually can figure out how to collaborate.
01:20:11.210 - 01:21:04.830, Speaker D: Yeah, and one thing I'll also add is beyond the EF, the other really critical people are like the client teams themselves, which again, in case people are not aware, there's many of them, the vast majority, every single one of them except Geth is not within the EF. And having them interact as well is like a really valuable thing. So I remember when Flashbots kind of first started off Thomas from Nethermind. Thomas is the founder of Nethermind and he started getting involved in Flashbots. I had a long call with him and he had reviewed the MEB geth code base and that made me sleep better at night. I was like, if Nethermine is generally on board with this and happy at first, the concerns were a bit different. It was like, is there something in Flashbots or like an mev geth that could create a really bad block in Geth and cause a consensus bug on the protocol? So it was much more, I guess, basic concerns in that way.
01:21:04.830 - 01:21:51.166, Speaker D: But having Thomas kind of review that and be part of it and be involved in the design, I think was really valuable. So I think this is the other bit as well, is assuming these teams genuinely do want to collaborate and build a good solution, putting them in touch with the teams who write the protocol software is really helpful and a bunch of people are in touch with Flashbots. Now, for Mev Boost, the Lido team has reached out to a bunch of client teams also to get some feedback and potentially run some nodes. So I think kind of broadening the set of people to interact with. So make sure it's not just like EF researchers, but also all the different teams who build the infrastructure. And this goes beyond also, it's not just like a Flashbots and Lido thing. We talk with Inferra, we talk with Coinbase, we talk I don't know.
01:21:51.166 - 01:22:36.400, Speaker D: Foundry when these infrastructure providers want to interact, I think putting them in touch with the folks who build the protocol and you do kind of want to do some screening because you don't want to dos the people working on the protocol. And this is where just making sure these teams are kind of aligned with what we're trying to build is valuable. And then when they're not communicating why we think that and there have been projects in the past that have built protocol adjacent things that have some weird incentives. And we've communicated why we thought it was a bad idea, what we thought was broken, making sure we modulate the amount of interaction based on how aligned we are and how valuable it is for protocol devs and researchers to spend time on this.
01:22:36.770 - 01:22:52.830, Speaker C: Given that it's an open source ecosystem and it's a very open project, everyone has a seat at the table. The EF has certain things that we're attempting to do and when we're aligned with any sort of ecosystem actor we're usually very happy to kind of work with them towards common goals.
01:22:52.910 - 01:22:56.070, Speaker B: Should I talk about the other side of the table?
01:22:56.730 - 01:22:57.480, Speaker A: Absolutely.
01:22:58.090 - 01:23:33.390, Speaker B: So I've been building on ethereum since 2017 and I've seen this playbook happen a lot of time. I think the position of credible neutrality that the EF and all EF researchers and builders are in can be at sometimes comical, but at some other times absolutely necessary. So on the comical side, there's like an obsession with renaming things. Anything that is produced externally is going to get for sure renamed before it gets any sort of rubber stamp from what's an example.
01:23:33.460 - 01:23:34.480, Speaker C: What's an example?
01:23:35.250 - 01:24:49.650, Speaker B: I think PBS is probably like an example of that but there's like millions of others even at the standards level, everything gets renamed a million times. But that's just like part of the joy of collaborating in sort of an open source manner. I think what ultimately makes it really fun to work with the EF is just the intellectual honesty and the commitment to principles that they've laid out for the organization, where if you're working more in an industry setting and looking at partnerships and collaboration, everything sort of ends up reducing down to some type of negotiation over power and economics. And that just doesn't happen with the EF. It's always just negotiating on the technical what is actually the best way to achieve technical objectives which really makes it like a joy from a design perspective. There's obviously a lot of open mindedness. I think one place that there has been frustration in the past for various different projects has been that because the EF is not like an industrial body, it is like a bunch of individuals that are collaborating on building things.
01:24:49.650 - 01:25:02.246, Speaker B: It can seem difficult to engage with, it can seem difficult to access and know who to talk to, how to build the relationships, to be able to be in the conversations and be at the table.
01:25:02.358 - 01:25:13.342, Speaker C: And sometimes I imagine you have a conversation with party A and then you have to rehab the conversation with Party B because they're not communicating, they don't know what's going on and they might have different views on things.
01:25:13.476 - 01:25:13.726, Speaker D: Yeah.
01:25:13.748 - 01:25:33.190, Speaker C: The EF kind of for better or for worse, mirrors a lot of kind of the open source ecosystem. It's a bunch of different teams working on different projects that have certainly common goals at its core. But it's not like when you interact with an individual or team of EF that you're interacting with the EF necessarily at large.
01:25:33.340 - 01:25:45.514, Speaker D: And almost in a lot of cases, team is a bit strong of a like, you can't know, having a conversation with Danny and one with Justin Drake and with Dankrad and getting three different.
01:25:45.632 - 01:25:47.900, Speaker C: With that group, you're definitely going to get three different.
01:25:49.790 - 01:26:22.034, Speaker D: And so, you know, I sympathize with like, if you're an external project coming in and you're know, Danny, Dankrad, Justin, what should we do? And they tell you three different things and you're trying to figure out what the EF thinks, it'll be hard. So I do think, like, high level, obviously, in terms of values and vision for the protocol, there's like a ton of alignment. But it's also probably a bit hard given that there's not like a party line on every single topic. Right. We do have a bunch of independent people who think about this stuff and come to different conclusions.
01:26:22.162 - 01:26:31.874, Speaker A: Fantastic. I think this has been such a great discussion. Thank you so much, Danny and Tim, for participating. And also, Stefan, for your I think this has been your first podcast appearance.
01:26:31.922 - 01:26:33.590, Speaker B: Yeah, thank you so much for having me.
01:26:33.660 - 01:26:47.322, Speaker A: Incredible. We are so glad that you chose Uncommon Koi oh, that's fun. As days to make your splash your date. Fantastic. Yeah, guys, have a good evening.
01:26:47.386 - 01:26:49.550, Speaker C: Yeah, I really appreciate it. Thanks for having us again.
01:26:49.620 - 01:26:51.422, Speaker D: Yeah, thank you both. Both parts were great.
01:26:51.476 - 01:26:51.946, Speaker C: Bye bye.
01:26:51.978 - 01:26:59.130, Speaker A: Talk to you guys sooner.
