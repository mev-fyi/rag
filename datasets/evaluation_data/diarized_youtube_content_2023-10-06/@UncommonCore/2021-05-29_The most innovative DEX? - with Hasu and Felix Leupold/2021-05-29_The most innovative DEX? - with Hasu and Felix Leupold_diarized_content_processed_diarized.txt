00:00:00.730 - 00:01:06.850, Speaker A: Welcome to Uncommon Core where we explore the big ideas in crypto from first principles. The show is hosted by Su Zu, the CEO and chief Investment Officer of Three Arrows Capital and Me Hasu, a crypto researcher and writer. Earlier this week I did a deep dive on a new Dex trading protocol called Cowswap and I was very surprised to see them combine many great ideas into what I would say almost is the most complete trading experience that I had seen so far. In DeFi, to give you a quick overview, first of all, you no longer publish a fee paying transaction to the public Mempool. Instead, all you do is you sign a transaction and you submit it off chain to the Cowswap relayer, which then handles the execution for you. You do not have to pay a transaction fee when you just sign a transaction for you. This means you can safely set a very low slippage tolerance or even zero, because you only ever have to pay a fee if your trade succeeds.
00:01:06.850 - 00:02:13.814, Speaker A: Second, and this gets us to the real innovation, cowswap looks for so called coincidence of wants or Cows before sending your order to the regular on chain exchanges. For example, if one trader wanted to buy eve at a certain price and another wanted to sell it, usually these would both be matched against the automated market makers on, let's say, uniswap. But these two could also be matched in theory without paying any IP fees at all, right, by just matching with each other. And this would save them the fees. And Coswap has off chain solvers who can look at this off chain order book and they solve this optimization problem and submit basically optimal matchings for these orders. And one guarantee that they give is that all trades in a certain batch have to settle at the same uniform price. And if they all settle at the same price, then there's no point in reordering the trades for miners as well.
00:02:13.814 - 00:02:38.000, Speaker A: So this incidentally also serves mev only after this matching phase is over and no more coincidence of ones can be found. Then basically Cowswap sends any access order that hasn't been filled yet to the regular on chain exchanges, right? And sort of settles the rest there.
00:02:38.370 - 00:02:39.758, Speaker B: And if you didn't get all of.
00:02:39.764 - 00:02:56.850, Speaker A: That immediately, then don't worry, neither did I. And that's why I invited Felix Loipold from Cowswap and Gnosis to answer my remaining questions. Originally we were just going to do that, just chat about the protocol and he was going to answer my questions.
00:02:56.920 - 00:02:59.174, Speaker B: But I did ask if I can.
00:02:59.212 - 00:03:16.570, Speaker A: Record our conversation without having any concrete plans of publishing it. But it turned out to be such a great conversation that it wasn't really much of a choice at all. So please enjoy this fascinating conversation on Cowswap with Felix LOOPHOLD.
00:03:24.290 - 00:03:43.806, Speaker B: Hi Felix, thanks for taking the time to talk to me so spontaneously. I have a few questions about Cowswap. It seems like a really interesting protocol and I would like to learn more about it. So to start out, can you tell us a bit about yourself and what is your position at Cowswap and Gnosis?
00:03:43.918 - 00:04:40.386, Speaker C: Yeah, and it's great to be here. Thanks for making the time. I'm tech lead at the Gnosis Protocol team, which is one part of our company. And Cowswap to us really is kind of the first application of the underlying protocol that we've been developing agnosis for almost three years now. So I joined Hynosis about three years ago and since then have been focusing first in a very small team just on kind of batch auction mechanisms and how we can apply them to ethereum. And then most recently well, last year we launched Hygnosis protocol version one, which had some success in the Ido space. And from then on, kind of the team split and we created Gnosis Auction, which is kind of another division within Gnosis, focusing just on a protocol for IDOs and buybacks and liquidations.
00:04:40.386 - 00:04:49.330, Speaker C: And we continued the batch auction kind of idea with Gnosis protocol version two, which we now are launching to the public under Cowswap.
00:04:49.490 - 00:04:56.746, Speaker B: What do you see as the main problems that exist today in the Dex space or the AMM space?
00:04:56.928 - 00:05:25.710, Speaker C: Right. So when we started out, we already saw that it felt weird if two people trade in the same block on the same token pair, but they're getting different prices because, well, everything that happens within a block is kind of atomic at the same time. So for us, it felt weird to have kind of a continuous time priority kind of mechanism bolted on top of kind of decentralized trading within ethereum.
00:05:25.790 - 00:05:31.458, Speaker B: And not just same price, right. They also pay twice the liquidity fee.
00:05:31.554 - 00:06:25.666, Speaker C: Right. But even if they trade in the same direction, so even if there's no opportunity for them to trade peer to peer directly with one another, even then they pretty surely will get different prices. Well, the first one will get the better price than the second one. And then most recently, well, this has been really manifested itself with kind of the rise of mev and this topic has become really big in the ecosystem. And this is where we kind of see batch auctions or that was kind of the original reason why we thought that batch auctions might be a good mechanism for that. And then the second kind of idea behind Gnosis protocol, which is kind of less I would say, well, it's less famous or less spoken about right now. But one thing that we also kind of feared was fragmentation of liquidity across many different tokens.
00:06:25.666 - 00:07:21.930, Speaker C: Since creating a token on ethereum is so cheap, we can see it with stablecoins. For example, there's 1015 different stablecoins tracking the US. Dollar. And so by falling back to kind of these two dimensional markets like Uniswap, I guess, balancer is a protocol that actually allows multidimensional markets, but kind of the classic order books are two dimensional. We thought that it would be nice to just kind of treat all the trades that happen within a block on Ethereum as like a giant kind of exchange economy. Like when you're on the market and you want to trade one good for another and you can do ring trades, for example, it doesn't have to be matched directly against one other person. But if you're trying to buy GNO and somebody else is trying to sell GNO for Dai and somebody is trying to sell Dai for ETH and then another person, well, you're basically trying to buy GNO with ETH, then we can form a ring and by that can kind of work around potentially fragmented liquidity.
00:07:23.230 - 00:08:07.030, Speaker B: Okay. One major problem that I see is front running and sandwich attacks as well. And as I understand it, this is also something that Costrop tries to address via the batched auction approach. And I want to dive into that in a second. So as I understand it, you take all these problems so there's no unified settling price for trades in the block. Even if two users could be matched, like in a block, they don't trade in the same direction, but rather they trade in opposite direction. So really they could be matched with each other, but instead they are both matched.
00:08:07.030 - 00:08:50.440, Speaker B: They both trade against the market maker instead of with each other. And so they both pay the liquidity fee. And then on top of that, sort of, you have the mev where every trade can get front run. And probably like if the slippage limit allows it, then it will get front run and the price impact allows it. And you have built a system that to me, it looks sort of like a layered approach to addressing this problem. And I would kind of like to work through that with you here briefly. So can you describe what are the layers that Cowswap uses in order to give the trader the best possible price?
00:08:50.890 - 00:09:30.274, Speaker C: Yeah, so maybe another challenge that I forgot to mention that kind of ties in here is that it is kind of difficult for users today on Ethereum to actually do transaction management well. And so kind of the first thing that is different and the most kind of user facing thing that is different about cowswap than other exchanges is that instead of trading via a transaction, like actually sending a transaction to trade yourself. Executing your trade yourself. You just sign a message and hand this message over to an off chain order book where multiple orders can get batched together.
00:09:30.472 - 00:10:18.500, Speaker B: Right. Actually, let me interject there already the transaction management. This is a very interesting point already to dive deeper on. So it's much better UX for the trader, of course, if they don't need to have ETH in their account, for example. But it also serves a very purpose for people who do have ease in their account who would be willing to pay transaction fee. And that is that it's not really economic for basically medium sized and smaller trades to use zero stippage tolerance right on your trades. And that's because the market will occasionally move against you, too frequently move against you, and then your transaction simply fails and you pay the fee anyway.
00:10:18.500 - 00:10:30.466, Speaker B: And this is completely removed here. Right, so if I just sign a message and hand it to you, then I basically give this execution risk to cowswap.
00:10:30.658 - 00:11:09.022, Speaker C: Exactly. And there's one other advantage kind of when the transaction kind of stays, let's say the network is really congested and even with a very professional transaction management, we wouldn't be able to settle it quickly. And maybe the price or the well, not the price, but the route that you were about to settle your trade against. Let's say you were using balancer, is no longer available. But maybe another route via SushiSwap became available then in our model. Since you have only agreed on a price and given us a signature for this price, you don't care about the actual route that is being taken. The so called solvers.
00:11:09.022 - 00:11:16.050, Speaker C: So the execution layer of Gnosis protocol can actually change the route between attempts of settlements.
00:11:16.550 - 00:11:24.866, Speaker B: Oh, cool. Do you know if sort of other aggregators like One Inch work the same? So the execution route can change between blocks.
00:11:25.058 - 00:12:15.030, Speaker C: So as soon as you have to submit the transaction yourself, the transaction data contains the route. And so if you set a gas price that is not mined immediately, or if there's a spike in usage and you're not speeding up your transaction, then as soon as this route is no longer available, your transaction will fail. And this would be even the case for kind of the execution layer within Cowswap, but to the user that is completely hidden, a solver that notices, oh, this route is no longer available, could try to replace their transaction with a higher gas fee. Same nons to just basically try to, well, let's pick a different route. Or if the transaction did fail, then the solver would take that risk and resubmit it with a different route rather than having the user deal with a failed transaction and having spent a lot of gas on basically doing nothing.
00:12:15.180 - 00:12:37.790, Speaker B: Yeah, okay, so before we get into sort of the coincidence of once and such to stick with the topic of transaction management, so how does cowswap manage to sort you? I, as a trader, I just give my signature and sort of hand this blob to you like a signed transaction and you can sort of do whatever you want with that, right?
00:12:37.940 - 00:12:39.630, Speaker C: It's not a signed transaction.
00:12:40.290 - 00:12:43.200, Speaker B: Yes, sorry. So what exactly do I sign?
00:12:44.050 - 00:13:01.160, Speaker C: So the thing that you're signing is basically a sell token and a buy token, which of the two is fixed. So if you have a buy order or a sell order, then kind of your limit price that you're willing to accept for this trade and an expiry date.
00:13:02.170 - 00:13:08.534, Speaker B: But isn't this a transaction? Except I don't publish it, so this.
00:13:08.572 - 00:13:50.146, Speaker C: By itself would not be executable on ethereum, kind of on the base layer. On top of that, there is kind of an approval that you give to our settlement contract. And our settlement contract has the logic built into it that if it gets the request to execute a settlement, it will basically check this blob and verify that well, basically you have authored this before using your funds. It will verify that you have actually authored this transaction and that authored this trade and that the limit price that the solver is trying to execute is actually in line with what you are willing to accept.
00:13:50.338 - 00:13:59.994, Speaker B: Okay, so what I sign is basically a blob of data that allows you sort of the cowswap protocol to build a valid transaction from that.
00:14:00.112 - 00:14:01.050, Speaker C: Exactly. Yeah.
00:14:01.120 - 00:14:20.314, Speaker B: Okay. And I don't pay a fee on that because I just give you this blob of data off chain. But when your solver the protocol submits the transaction or sort of this off chain relayer right, that you run, you still have to pay the gas.
00:14:20.362 - 00:14:41.750, Speaker C: Right, exactly. And so what we do is the user also specifies a fee amount in the sell token and basically if the transaction goes through, then the author or the settlement contract can basically keep a fraction of the sold tokens as a reward.
00:14:42.250 - 00:14:58.122, Speaker B: Okay, so for example, I get Eevee back, then you're basically taking a little of that in order to recoup the gas fee. And if it's another token, do you also accept any sort of variety of shitcoins that someone might buy?
00:14:58.256 - 00:15:19.966, Speaker C: Yeah, so basically at the moment there's a list of tokens that we accept. And basically what happens if you're trying to well, if somebody tries to trade a token that we don't want to have exposure to, which I think at the moment we are still in alpha phase. So we're actually accepting, I think even most of the coins saw someone trade.
00:15:19.998 - 00:15:22.562, Speaker B: Some kind of doc token that I'd never heard of.
00:15:22.696 - 00:15:58.330, Speaker C: Right, but so basically the logic of the protocol could be that instead of holding on to the token that you're selling because it is already doing a swap, it could kind of route that fraction into some other token that it trusts. So let's say you're trading one shitcoin for another shitcoin, but it goes via ETH. Then the protocol could just say, well, I have the right to so many tokens of your cell token, but I'm trading it anyway, so I might just convert it with the rest of your trade into ETH. And then just keep the ETH or keep some other token on the route or even put in a separate hop if you're trading shit token to shit token directly.
00:15:58.410 - 00:16:46.246, Speaker B: Yeah, I see. Okay. And would you say this is sort of the optimal approach because to me it seems so of course, Kaosov is still taking the risk that the transaction fails and isn't this couldn't you do it? I've thought about this. I think like Mist Exchange launched a few days ago and they did something that I had been like then approach that I had already also talked about in the past that seemed sort of rational to me is where actually, you transmit sort of an actual zero fee transaction to sort of Flashbots, for example, to Gefmev and also pay the miner from the output token.
00:16:46.358 - 00:16:47.020, Speaker C: Right?
00:16:47.730 - 00:17:00.370, Speaker B: So the benefit with that obviously being that your transaction just cannot fail because the miner can't make any money on the trade unless it executes. It only executes if the zero slippage limit is tolerated.
00:17:00.710 - 00:17:57.154, Speaker C: Right? So, yeah, we looked at the Mist Exchange and also at Archerswap, which I think works very similar. And so one caveat or one thing that is suboptimal about or I will say why it's actually giving us benefits in the long run. But at least just if you're just by yourself trading completely isolated and just handing off the execution to some other party going through our settlement contract is a gas overhead because, well, the signature verification has to happen in a smart contract instead of kind of the ethereum protocol. So we pay Gas for all of this. And so there is a fixed overhead overusing kind of our transaction submission logic. On the upside, we feel like, well, the one thing that I mentioned already that the executor can basically change the route. The concrete execution plan, as maybe the best liquidity sources change.
00:17:57.154 - 00:19:08.534, Speaker C: That is a huge advantage. Also kind of in the context of having multi signature wallets or Dows trading where it may take minutes or hours to actually collect all signatures and you cannot really make a proposal, let's use this route because maybe in 2 hours this route won't be optimal anymore. But also kind of the thing and that's maybe where cowswap or the name Cow comes in. One thing that's super powerful is that the settlement layer can not only execute trades one after another in a single transaction, but it can actually execute many of these signed orders at the same time in the same block. And that's where we get into the possibility of trading or matching trades directly with one another. So avoiding going through uniswap or some other on chain liquidity, avoiding paying liquidity provider fees, avoiding being front run, because those trades can only be executed within the context of Cowswap. And so we think that even if people just trade in the same direction, we can batch the single, we can basically make instead of hitting uniswap five times for five trades, we can just do one uniswap interaction.
00:19:08.534 - 00:19:14.590, Speaker C: And so we think that we can actually, with enough traction, save on gas for the user.
00:19:15.250 - 00:19:22.960, Speaker B: So you do have the overhead of sort of the batching contract and the solver how do you call it?
00:19:24.050 - 00:19:25.222, Speaker C: What is the settlement?
00:19:25.306 - 00:19:41.522, Speaker B: The settlement settlement contract. Okay, so you do have the overhead of the settlement contract, but what's your guess? How many trades need to be there in the same direction in order for the saving to be larger than sort of the overhead?
00:19:41.666 - 00:20:11.098, Speaker C: Yeah, we benchmarked. And with uniswap, it was around three trades per three trades were better. Well, but it would have to be on the same pair. So we haven't done yet many benchmarks where it's like, even there, we can get some benefits. If we just trade 30 random trades just in one transaction, we can at least save the 20,000 gas for each transaction. So there's likely also, just by batching, there's some synergies that we can get in terms of gas.
00:20:11.274 - 00:21:08.530, Speaker B: Okay, so to get sort of the listener on the same page so you and I, we both want to make a trade. You want to buy WBTC with ether, and I want to buy ether with WBTC. And we want to make this trade at about the same time. And instead of both trading with the automated market maker, we could also trade with each other, except that we don't know that the other person exists. Right. And sort of that's where Kowswap comes in, because it first checks if there are two people available who want to trade with each other and then they are matched. But then, as you said also, which I hadn't considered before, even if we want to both buy ETH with WBTC, then it can still make sense for us to execute our trade together because we only have to tap we want to swap once, basically instead of twice.
00:21:08.530 - 00:21:18.520, Speaker B: So for the two of us, it doesn't make sense, but maybe there's another person there's also, like Martin or something, and then suddenly it makes sense. Okay, that's interesting.
00:21:18.890 - 00:22:13.800, Speaker C: Maybe even to add, you mentioned kind of the obvious coincidence of want scenario, which is kind of that's really clear, that if we want to trade the opposite thing, we can have this cow, this coincidence of want. But even if you're trading some random token, like some project token for US. Dollars, and I'm probably buying some other random project token with US. Dollar, then what happens in most cases is that it will actually be a two hop trade of project token to ETH and then ETH to USD. And so even though we don't have kind of an obvious coincidence of once we're trading different things, part of our route actually overlaps in kind of the opposite direction. So we can dissect the trade into its components and then still create a coincidence of once and save part of the LP fee on one hop of our two trades for.
00:22:15.850 - 00:22:21.640, Speaker B: I mean, it sounds logical. Can you give an example? Because I don't think I've digested it.
00:22:24.330 - 00:22:30.314, Speaker C: To buy, let's say I want to buy GNO with US dollars and you might want to buy and by US.
00:22:30.352 - 00:22:31.542, Speaker B: Dollars you mean like USDC?
00:22:31.606 - 00:23:19.194, Speaker C: USDC, for example, yeah. And then we can even say you might want to buy repbitcoin with dai, for example. And then let's say if you did this on uniswap or kind of on whatever AMM protocol you'd be using, it would route me from GNO to ETH because that's the most liquid pool. And then it would route me from ETH to let's say that, well, for you it's kind of the other direction. So for you it would also route you. It would route you from dai to ETH and then to repbitcoin. Well, basically we can basically skip let's say that the amount is roughly the same.
00:23:19.194 - 00:23:49.578, Speaker C: We can basically skip at least one route going via ETH. Maybe let's actually say that you're buying it with USDC. I think then it's more obvious. So we both use the same stablecoin. But even if it's different stablecoins, we can use the fact that for example, curve or other providers have really tight rates for stablecoins. So we can even get a little bit more margin there. But yeah, just the more obvious case is probably if it's both I'm, I was going to buy geno.
00:23:49.578 - 00:24:12.734, Speaker C: So when I'm buying ETH from USDC, and because you're selling repbitcoin, you're going via ETH, you're selling ETH for USDC, then on this part of the route we have a coincidence of want and we can just trade against one another and only use the second hop of the route for getting our kind of more exotic, interesting, but not identical tokens interesting.
00:24:12.852 - 00:24:36.242, Speaker B: Okay, so you and me, we both sign this. I'm still going to call it a transaction, even though it's just a blob of data. So we just sign a transaction, we don't publish it, we hand it off chain to the relayer. Sort of what happens next. I'm sort of looking to understand what actually is a batched auction, how does it work?
00:24:36.376 - 00:25:26.606, Speaker C: Right? And so there's maybe a difference between what happens now and what we want to happen in the future. Because of course the protocol is supposed to be fully decentralized. And so basically what happens is there is an off chain order book that is queryable kind of public for people that are running these solvers that are trying to find matchings. Basically right now the reality is that we are running a few different implementations of algorithms. But yeah, right now it's not really decentralized yet. But basically permissionless, well, the only permission that these party have to have is that they have to have staked a certain bond in, well, not the settlement contract, but kind of in an authentication contract that allows them to become a so called solver.
00:25:26.718 - 00:25:37.586, Speaker B: And that is because by not decentralized, like what is actually the thing that they can do, right? So they get the order flow basically. So they can take order flow is very valuable.
00:25:37.698 - 00:26:40.620, Speaker C: Yeah, they get the order flow and they can even so in the protocol they can also execute the settlement transactions so they have access to the entire order book and are basically then trying to craft a solution to this multidimensional batch auction problem, basically having all the limit orders and knowing kind of the state of everything that's on chain. What can we do to maximize and that is kind of where the competition comes in and where not everyone can just pick the orders that they like and match those and kind of ignore the other orders. Basically when they have a solution, they announce it to the protocol. And we have an optimization criterion which can be roughly estimated as the trader surplus. Basically. How much more in sum did people get after? Well, when the matching is taken into account compared to their limit prices. So if you were willing to buy ETH at, I don't know, $2,500, but you actually got to buy it at $2,400 and you bought one ETH, your surplus is $100.
00:26:40.620 - 00:27:29.930, Speaker C: And so there's a little bit more nuances to it. And this criterion has to be kind of more carefully. Well, we have a blog article on our forum that explains it a little bit more, but in a high level. Kind of the idea is we want to maximize the surplus of all the traders in the batch and let kind of bonded, but permissionless solvers compete for finding the optimal solution here because the problem is mathematically very complex. It's a multidimensional auction with kind of a lot of different liquidity sources and where trades could come from. So we expect this to be not really deterministically solvable within like 1015 seconds. And this is why we think there should be different heuristics and different approaches, different algorithms and want to kind of turn this into a competition.
00:27:30.770 - 00:27:47.890, Speaker B: Understood? Okay, yeah, I would have more questions about the servers, but it's not really the most interesting part about it. So let's move on sort of to how actually a batched auction works and what guarantees it gives to the participants.
00:27:48.710 - 00:28:44.366, Speaker C: So the smart contract basically only verifies that the order that is settled is well, the signature is valid. So the user has actually authored this transaction, has authored this trade, the limit price is satisfied, so they're getting at least what they asked for. And that roughly is kind of what is verified on chain. However, and that is kind of the reason why solvers are bonded. We can, of course, on a protocol level enforce other kind of soft criteria such as the clearing price that has been chosen can only be within a certain margin of error, let's say even 0.3% of the spot price of the most liquid pool on chain. And that nosis as a dow could decide.
00:28:44.366 - 00:28:58.930, Speaker C: Well, we take uniswap, let's say V three as kind of the oracle for what is a fair price of a token and then there could be some kind of soft guarantees on top of just what the smart contract guarantees.
00:28:59.090 - 00:28:59.702, Speaker B: Yeah.
00:28:59.836 - 00:29:21.790, Speaker C: And kind of that's why we also solvers need to be bonded because well, theoretically I could just pick one order and just settle it against myself because I know it has a very generous limit price. But then basically the assumption or what we have to kind of balance is that the bond is higher, much higher than the value that can be extracted.
00:29:22.370 - 00:29:24.622, Speaker B: From such and you can take away the bond.
00:29:24.766 - 00:29:25.266, Speaker C: Yeah.
00:29:25.368 - 00:29:35.918, Speaker B: Okay. So let's assume for now to keep it simple that the servers, they act not maliciously, so they don't participate in their own auctions.
00:29:36.014 - 00:29:36.754, Speaker C: Yeah.
00:29:36.952 - 00:29:50.166, Speaker B: So what happens then? Let's say like you, me and three other people, they all want to trade the same pool, or not even maybe the same pool, but just we have some overlap. So what kind of happens there then?
00:29:50.268 - 00:30:48.998, Speaker C: Yeah, so we all submit our signatures into this off chain order book and then many solvers, or the one that ends up winning solver will query that order book and get our orders. And then it depends a bit on the strategy that the solver employs. We have one solver that actually models this problem as a mixed integer optimization problem. So it really kind of tries to find the globally optimum solution and as long as the problem size is small, that's fine. So it will actually figure out that maybe there's a ring that we can trade in and maybe then there's some excess which we can't match in the ring. So it has to find the best on chain liquidity for this and then well, it figures out what that is and kind of crafts this on chain transaction which consists of our signatures, the clearing prices, the amounts that our orders are being traded with. So basically, well, if it's fill or kill orders, the full amount and then what we call interactions.
00:30:48.998 - 00:31:23.042, Speaker C: So kind of what are the on chain liquidity pieces that need to be called into in order to fill up the access that we cannot trade directly with one another. And then the smart contract well, executes the logic. It basically takes the funds from it takes all the costs from the traders that are involved. So just the sell token gets transferred into the settlement contract. It then invokes all the kind of on chain liquidity interactions that it has been sent. So it might call into, let's say, uniswap and get some other funds from balancer.
00:31:23.106 - 00:31:34.406, Speaker B: Yeah, and maybe to just like in case it hasn't been clear to everyone who's listening. So if there's an access that cannot be matched via the coincidence of once, then this is just sent to regular on chain exchanges.
00:31:34.598 - 00:31:46.362, Speaker C: Exactly. And then the last step is to pay out the proceeds so everyone gets the buy token according to the uniform clearance prices that were submitted to the settlement contract.
00:31:46.506 - 00:31:52.000, Speaker B: How do you ensure that everyone in the batch gets the same price?
00:31:53.750 - 00:32:37.550, Speaker C: So we could ensure this in the smart contract logic we could basically say that the prices are submitted as a vector and so it means that basically to get the exchange rate between two items in that vector we basically have to multiply it. Basically, let's say the unit in this vector is US dollar and you have bitcoin and etc in that vector and they are represented at dollar prices. But somebody's trading ether for bitcoin, then we would say, well, because it's uniform clearing prices, they're arbitrage free. And so it means basically I can multiply the two prices and just deduce the exchange rate from bitcoin to ether by only having the price in US dollar from bitcoin and ether.
00:32:39.250 - 00:32:40.000, Speaker B: Okay.
00:32:41.810 - 00:32:58.230, Speaker C: Let'S give an example. Let's say the price of bitcoin is $25,000 and the price of ether is $2,500 in this vector then just by knowing well, there's no arbitrage and it's uniform clearing prices I know. Okay, bitcoin trades ten to one against ETH.
00:32:59.210 - 00:33:09.034, Speaker B: Yes, but okay, I'm not sure if my question was too simple or too simple to you actually.
00:33:09.072 - 00:33:36.270, Speaker C: What you asked how the smart contract at the moment, the smart contract could theoretically have different prices for different token pairs. And so at the moment, this is also something that we expect the protocol or the dow to observe. And basically, if a solver submits a different price on the same token in the same batch, then that would also be a slashing criteria.
00:33:36.430 - 00:33:55.730, Speaker B: Yeah okay, so basically just the solver has this sort of rule that they have to obey which is everyone should have the same clearing price and if they don't, then they get slashed. But isn't this possible to check this like a trivially in the smart contract? Right, if everyone has the same price then it fails.
00:33:55.810 - 00:34:34.690, Speaker C: Yeah, that's why I said how it could be done. The reason why we didn't go with this now in the concrete implementation is that we already rely on a bunch of other kind of soft criterias from the solvers where we say the protocol needs to enforce it. And it was slightly more simple to write. Like just the data structure we could use in the Smart contract was simpler to write if we didn't have to actually enforce that it's a vector and that basically the exchange rates can be computed just from each item. We said, well, if we create a client that can check that the solvers are behaving correctly and we'll basically flag an alert if that's the case, then it's trivial to add the uniform clearing price check also to this.
00:34:34.760 - 00:34:42.486, Speaker B: Yeah, every kind of mathematical check in the transaction makes the transaction more expensive so I see why you want to.
00:34:42.508 - 00:34:55.414, Speaker C: Reduce this but opposed to the optimality criterion, like is this really the optimum solution which is impossible to compute on chain? You're right that the uniform clearing prices could if we really had to or wanted to be enforced on chain.
00:34:55.542 - 00:35:19.758, Speaker B: Okay, but it sounds like this is an example where it's much better to have sort of a fraud proof, for example, where anyone can permissionlessly submit transaction where the uniform clearing price has not been obeyed and then they get the bond of the solver who basically disobeyed the rule.
00:35:19.934 - 00:35:20.418, Speaker C: Right?
00:35:20.504 - 00:35:22.146, Speaker B: Yeah. Okay, that makes more sense.
00:35:22.248 - 00:35:32.626, Speaker C: And given we have fraud proofs in the system, kind of in the logic already, then if this was the only thing we relied on fraud proofs for, then it would probably not be worth it. But given that we kind of it's.
00:35:32.658 - 00:35:39.770, Speaker B: Not even just like someone from the Gnosis team hits the slash button, it is actually based on fraud proofs. Okay.
00:35:39.840 - 00:36:25.634, Speaker C: So at the moment right now, we are kind of whitelisting or allow listing the solvers that can participate. And so we make sure that we have a certain trust relationship with participants in this competition. In the future, we expect this to be done kind of automatically allow listed by posing a bond. And then we would assume that the Gnosis dao so a decentralized kind of committee or even like a Gnosis protocol. Dow if we want to break it down further, will enforce the slashing and kind of well create may it be realta, could be even prediction markets or something like basically create a mechanism that allows to whistleblow and slash.
00:36:25.762 - 00:37:03.886, Speaker B: Yeah, I see. So when I submit a trade to you and then sort of first you try to match it with another trader. You try to find some overlap, whether it's for the entire road or for some part of the road. But this sort of requires for there to be other people who do want to make similar trades and to create this overlap. So I'm curious, how long is sort of the length of every batch? How long is my limit order valid to be filled by others before it kicks into this on chain mode where sort of the access is sent to, for example, one inch.
00:37:03.998 - 00:37:37.050, Speaker C: All right, so first of all, you have control over how long your order is valid. You can change this in the UI. You can say by default the order is valid for up to 20 minutes. But our logic at the moment is that after 30 seconds we will match it with whatever is available. So we wait for well, at the moment up to 30 seconds. But you're totally right that of course this is kind of a chicken and egg problem and we need kind of enough people to use the system for it to actually be valuable.
00:37:37.210 - 00:37:43.550, Speaker B: I don't actually see it here in the UI. You're not talking about the transaction deadline setting, right?
00:37:43.620 - 00:37:44.240, Speaker C: Yes.
00:37:45.810 - 00:38:07.350, Speaker B: Doesn't this have a completely different like in the regular Dex interface, this has a completely different meaning. Right. Just the transaction doesn't execute. Whereas what I'm asking is sort of how long can I keep my order in the order book before it's kicked out of the order book to the onchain exchange? Not expiring.
00:38:08.730 - 00:38:13.782, Speaker C: So right now you don't have control over this parameter. It's set to something like 30 seconds.
00:38:13.846 - 00:38:15.002, Speaker B: 30 seconds, okay.
00:38:15.136 - 00:38:49.094, Speaker C: And what we do is at the moment, in order to get traction, we subsidize the fee significantly. So the fee that you're paying on a cow swap trade will actually be much less than what you would pay if you go, let's say, on uniswap and did your trade directly. And we're envisioning that this form of subsidy could be dependent on how long you're willing to wait. Kind of similar to how Uber pool back in the days was launching. At least I remember it in the US. They had like, okay, if you're willing to wait for five minutes, we're going to give you a cheaper rate. And then most of the time you didn't get matched because there were not that many people using it at the time.
00:38:49.212 - 00:39:11.440, Speaker B: It's not even that. Right. I mean, I'm kind of curious how you wrapped at 30 seconds. It seems that so, okay, there's one obvious reason people want to get their trades executed in some reasonable time. But to me, it seems like I would be inclined to wait like many minutes in order for there to be to increase the chance that there's some coincidence of wants there.
00:39:12.050 - 00:39:51.370, Speaker C: Right. So to the users that we spoke, basically we are introducing a completely new way of trading by not sending a transaction, but sending a signature. And so one of the feedback that we got immediately was, yeah, well, this is cool, this is great, but it takes forever. And if I'm trading my well, it takes forever, but if we wait five minutes, which is actually what we did in Gnosis Protocol V One, people were saying, my trade takes forever and I'm trading some more volatile tokens. So the price movement of the token within these five minutes against you might actually be more impactful to you than saving 0.3% liquidity provision fee or saving a bit of gas.
00:39:51.790 - 00:39:56.154, Speaker B: But that's what I use a small slippage tolerance for, right?
00:39:56.272 - 00:40:31.734, Speaker C: Yeah. So if you do that, and if you're an kind of expert user and know kind of what this does and how you can fine tune your transaction to still be kind of protected against bad price movements, then I can see this is totally fine. And this is totally something we should offer, kind of with cowswap as a product. What we try to start off with is kind of uniswap and the type of user that goes to uniswap and kind of understands the UI and understands what's happening and wanted to make it as little different as possible from the status quo of trading. And that's why at least right now, there's no user control.
00:40:31.852 - 00:40:36.626, Speaker B: So you were saying you optimized it for the regular uniswap trader.
00:40:36.738 - 00:41:25.126, Speaker C: Yeah. And maybe just one number that kind of makes us confident that even with the 30 seconds we can already kind of see will be able to see a few cows in action, is that there's roughly about 30 Dex trades within a block. And in the very beginning when we subsidized the transaction fees by 90%, so made it really cheap for people to trade. We actually did already see multiple batches with, I think, up to 2025 trades in them. And then because of the thing that I tried to explain earlier, where we can break up the trades into different hops or different parts, we can actually find coincidence of wants or match people with one another on just parts of their trade instead of kind of finding the perfect coincidence of want, where people really want to buy the same thing at the same time.
00:41:25.308 - 00:41:41.920, Speaker B: So if I want to trade pretty frequent pair, let's say, like Efwbtc, so what is basically my ODS at any given time in these 30 seconds that I see someone like that, I get a coincidence of once.
00:41:42.850 - 00:41:57.700, Speaker C: Yeah, we did this study basically when we started building the protocol. I don't have the numbers off the top of my head, but we did find a reasonable basically we decided I think it was about was it 20%?
00:41:58.070 - 00:42:01.202, Speaker B: That would have been actually my top of the head number as well.
00:42:01.256 - 00:42:23.814, Speaker C: Yeah, it was something like and of course, it depends we had different scenarios. How much of the traffic do we get? And of course, if we get 100% of the traffic, if really all Dex trades are settled via something like Nos protocol, the coincidence of one potential is much higher than if, let's say, we get 5% of market share or 1% market share or 10% market I don't.
00:42:23.862 - 00:42:48.094, Speaker B: Often say this, but you should definitely do liquidity mining. I mean, very few protocols have such a big can gain so much from that just because, let's say Avil does sort of liquidity mining, right? Then people deposit to Avil, as long as their liquidity rewards them and the rewards are gone, they withdraw, go to the next protocol.
00:42:48.142 - 00:42:48.546, Speaker C: Right.
00:42:48.648 - 00:42:59.842, Speaker B: But with you, it's actually so once the people are in there and you can remove the rewards completely and they still benefit tremendously from being matched with each other instead of sent to the AMM.
00:42:59.986 - 00:43:14.762, Speaker C: Right? Yeah. So for us, it's really the question if we need a liquidity mining program, because really the liquidity just the kind of passive liquidity can come from any protocol. What we really want is a trader incentive program.
00:43:14.896 - 00:43:23.770, Speaker B: Yeah, sorry. I use this word as a reward for a usage mining thing. Like just a reward for people to trade there.
00:43:23.920 - 00:43:34.482, Speaker C: And one idea that we have that might be cool is something like a happy hour where basically we say at this point in time, we either subsidize it completely or reward out where we say let's all meet on call.
00:43:34.536 - 00:43:41.970, Speaker B: That's such a great idea. That's such a great idea because this is like you bundle all of the matches in that 1 hour.
00:43:42.120 - 00:43:42.820, Speaker C: Right?
00:43:43.510 - 00:44:00.474, Speaker B: Damn, that's pretty clever. Yeah. Cool. That's a good idea. Maybe to round it out. So what are your plans with Cowswaps? What are sort of the next features on the roadmap? The low hanging fruits and so on?
00:44:00.672 - 00:44:52.650, Speaker C: Right. So for us, as I said in the beginning, cowswap is really just one application of Gnosis Protocol in the wild. And this is kind of our approach at kind of a maybe meme driven and kind of easy to understand, playful, user friendly application of this kind of multi dimensional batch auctions Gnosis Protocol kind of at its core. What we're planning with Gnosis Protocol in the near future is actually to have other decentralized exchanges, also provide their order flow to Gnosis Protocol and increase kind of the amount of trades that we can match with one another. So, kind of on the horizon, we are working very closely together with Balancer, who recently launched Balancer V Two and are hoping to get basically the Balancer front end interface to work via Cowswap. Sorry, viasis protocol?
00:44:54.110 - 00:44:56.780, Speaker B: What does Balancer have to gain from that?
00:44:57.870 - 00:45:47.850, Speaker C: So Balancer really is interested in giving users the best kind of price and trading experience. Well, first of all, the user experience will just be better with gross's protocol because users will not have to pay gas for failed transactions. They don't have to worry about transaction management and kind of the user friendly aspects of it. And on top of that, Balancer is also interested in just providing an interface where people are guaranteed to get the best price. They believe that they can be more well, at least I cannot speak for them, but what I understand is that they believe they can be more successful if they are not kind of super opinionated on. You can only trade on our interface via Balancer pools. But if two people match at the same time, then it's totally fine if they trade against one another and then only the access is sent to a balancer.
00:45:48.430 - 00:46:02.320, Speaker B: So basically this means if I trade on balancer, then my order would be first sent to cowswap to look for any coincidence of ones, and then it's basically sent to balancer pools after that. But not sort of to one inch, for example.
00:46:04.150 - 00:46:11.650, Speaker C: As far as my understanding goes right now, then yes, they are. Even agnostic to which Solver would be handling these orders.
00:46:12.630 - 00:46:18.070, Speaker B: Okay. I mean, it would make sense that at least the access is sent then to Balancer.
00:46:19.450 - 00:46:39.526, Speaker C: Yeah, there's one thing about the Balance integration on our end that we actually very tightly integrated with their V Two contracts and so that it is more gas efficient for agnosis protocol to go via a balancer pool than, let's say, calling into a completely different, let's say, going via uniswap pools.
00:46:39.558 - 00:46:39.802, Speaker B: Yeah.
00:46:39.856 - 00:46:56.866, Speaker C: And so as long as the prices on balancer V two are roughly the same as on other protocols, there will be a gas advantage for Ognosis protocol to settle via balancer pools. And so the solvers would be choosing those because the overall that's because in.
00:46:56.888 - 00:47:01.150, Speaker B: The single token vault, internal calls basically are cheaper.
00:47:01.310 - 00:47:25.366, Speaker C: That for one. And then also our integration with their vault is so tight that it's, like, really tightly integrated. That the smart contract, the settlement contract can even hold some balances inside the internal vault. And so we can even avoid kind of depositing into the vault and withdrawing from the vault if we don't have to. So our integration there is extremely focused on gas efficient.
00:47:25.478 - 00:47:36.000, Speaker B: Cool. Thanks so much, Felix. You have built a tremendous protocol here. Haven't done an episode focused on any projects for a long time. So this was very interesting.
00:47:36.770 - 00:47:39.902, Speaker C: Thank you for your time. It was very interesting to talk about it.
00:47:39.956 - 00:47:45.650, Speaker B: Do you want to tell our listeners where they can find you on Twitter and where they can find Cowswap?
00:47:46.070 - 00:48:17.674, Speaker C: Yeah, so Cowswap Exchange is the name of well, it's the user interface that you can use Gnosis protocol as kind of more fundamental protocol is currently mostly documented on the Gnosis forum forum, Gnosis IO. And then myself. I tweet under the handle. Floypolt. F-L-E-U-P-O-L-D. Underscore. And, well, Gnosis PM is also a Twitter account where we kind of post news about our products.
00:48:17.674 - 00:48:33.500, Speaker C: And of course, at Mev Protection is the official Twitter account from the Cowswap Exchange, which will update kind of new features that we post push on this front. And maybe when happy hour becomes a thing, we'll post about these kind of things. So, yeah, that's a good, fun account to follow as well.
