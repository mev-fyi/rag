00:00:00.330 - 00:00:21.920, Speaker A: So the big difference between us and the Cosmos SDK is that Cosmos is meant for building layer one blockchains. And so in order to do that, you have to recruit a validator set. You have to get a network of full nodes. You have to do all of the decentralization things in order to give your users security as a rollup. Of course, you inherit the security of some other blockchain, so the barriers to entry are much, much lower.
00:00:24.890 - 00:00:59.594, Speaker B: What's up, everyone? Welcome back to another episode of Zero X Research. Today is April 3, and we've got a great interview lined up with Preston Evans, the chief scientist over at Sovereign Labs, where we'll be discussing everything roll ups. I was unable to make the episode, but Westy was able to sub in for me and probably ask better questions than I would have been able to anyway. So before that, though, as always, we're joined by two blockworks research analysts, Matt and Ren. This time we're not doing a hot seat cool throne segment. We are going to be to discuss Arbitrum governance. And there's been quite a bit of debate on this front with the first proposal going live recently.
00:00:59.594 - 00:01:02.062, Speaker B: So, Matt, I'll kick it over to you to explain that situation.
00:01:02.196 - 00:01:42.198, Speaker C: Blockworks research's first step into governance was really becoming a delegate for arbitram, meaning if you're an ARB token holder and you got an airdrop, you'd be able to allocate us your tokens just for voting. So you can give blockworks research your tokens voting rights. We don't have any control over them, and we'll go ahead and vote to what we hope is in the best interest of the Dow and the protocol. The first proposal, AIP one, did three big things among a few smaller things as well. The first was it set up a governance process. The second was that it created a security council of twelve members who actually have full control over the protocol. They're kind of like a backstop against if there's ever a vulnerability or something of that nature.
00:01:42.198 - 00:02:12.440, Speaker C: And the third thing, and the most important was it sets up an arbitrum foundation. The arbitrum foundation was to be funded with seven and a half percent of all tokens. This is 750,000,000 ARB tokens, worth a little bit over a billion dollars. When looking at this proposal, we had no issue with the first two points or any of the smaller ones. But we did find a few small issues with the Arbitrum foundation, and because of this, we had to vote no and against the proposal passing ren was the one who actually found the issues to start, and the whole blockworks research team kind of contributed. But would you go ahead and take.
00:02:12.810 - 00:03:33.066, Speaker D: Our core concern lied within that 750,000,000 ARP tokens worth more than a billion dollars to us. Those 750,000,000 ARP tokens were seemingly under the control of the Arbitram foundation, and the Arbitram foundation will be run by three initial directors. The names were listed out in the proposal, but no one really knew who they were. I think the main concern from there on was that even though the proposal itself was speaking in future tense, that the foundation will move the 750,000,000 ARP tokens into this administrative budget wallet, actually, all of those actions had took place already. We found out that 750,000,000 ARP tokens had been separated from the Dow treasury of roughly 4.3 billion ArP tokens, and that furthermore, the foundation had sent around 40 million ARP tokens to a market maker, which we now know is winter butte, for them to market, make the Arp token on certain centralized exchanges, and had also sold 10 million ARP tokens to fiat in order to fund their operating expenses. To us, that seemed like, at the bare minimum, a miscommunication in terms of what people thinking that they were going to vote on, because in all honesty, reading the proposal, it seemed like that that would have happened in the future had the Arbitram Dao passed this proposal.
00:03:33.066 - 00:04:01.398, Speaker D: But that was obviously not the case. And there was a large lack of clarity within the proposal in how those funds would be used, how they would be allocated, how they would be distributed, what sort of accountability there would be from the foundation in terms of KPIs OKRs, or how they would report back to the arbitrage Dow. And it was mostly that lack of clarity that drew up a lot of the questions that we had and ultimately led us to voting against on the proposal.
00:04:01.494 - 00:04:49.650, Speaker E: Right. And I think that makes a ton of sense there. And broadly, from the point of contention being around how these 715,000,000,000 tokens were allocated, it's more so in the communication side of things, right. It's not that there is a foundation that has this control over these tokens. It's the fact that it wasn't really clear who owned these tokens to begin with. The initial classic pie chart, token allocation had 42% of the tokens under the community control, right? Really, more specifically under the Dow control, with another portion going to user airdrops. And so of those 42%, it wasn't clear that 35% would be directly in the Dow treasury and the other remaining 7% would be held by the foundation.
00:04:49.650 - 00:05:21.934, Speaker E: And so if you compare that 7% for a foundation to some of the other Alt L ones or l two s in the space, it's a pretty reasonable allocation, right. It's even the smallest of the bunch that you would come up with comparing to things like polygon, avalanche, or Starknet. And generally speaking, foundations really are for the benefit of the protocol. Right. A classic example of something a foundation can do that a Dow would really struggle to do is making partnerships with large web, two brands. Right. From the initial onset of those conversations, you're under NDA.
00:05:21.934 - 00:06:00.794, Speaker E: You can't disclose the party you're talking to or the deal you're communicating about. And that's simply something that a Dow could never do. Right? You can't have all these Dow participants sign an NDA with this private organization. By the nature of the construction of a DAo, that's just not possible. So there are many other reasons why a foundation would be beneficial as well. It's just a question that it was really poorly communicated and something I think that the arbitram team could come out and really own a little more. Like, hey, we really should have done a better job in how this was communicated to the community, because again, in the reality, having a foundation is a net positive for the ecosystem.
00:06:00.794 - 00:06:26.534, Speaker E: So the question really ultimately is, how do we move on from this, and what's a good strategy to move forward? And something that blockworks research as a whole has really put a lot of time and effort into thinking about how do we kind of make amends here with the community, but also still make sure that there is this foundation that is pushing the arbitrum ecosystem forward. So maybe Matt or Sam, I can toss it back over to you to really kind of summarize our thoughts on a recent forum post we had that kind of communicates what we believe.
00:06:26.652 - 00:06:26.982, Speaker A: Yeah.
00:06:27.036 - 00:07:00.014, Speaker B: Just one thing before, Matt, I pass it over to you to talk about that, I think it is important to recognize the fact that they did come out and say, okay, yes, there's x amount of votes against this isn't going to pass. But really, this was just a ratification saying like, hey, we're implementing this no matter what. It's kind of no turning back type of thing. It's required in order to actually establish the foundation in the first place. So I get that. And now all votes will go through tally. So if we did want to propose to send the tokens that were put in the budget wallet for the foundation.
00:07:00.014 - 00:07:35.674, Speaker B: That would have to go through a 30 to 40 day process, get back into the Dow control. Another proposal would need to be made, and then another 30 or 40 days through tally and the whole governance process again. So then the foundation wouldn't be able to effectively act on behalf of the Dow, which is not good, obviously, because foundations are great for comparison. Optimism put 25% of their treasury into the foundation, if I'm recalling correctly, and they just kind of put it into different buckets. I believe eight, 9% of that 25% isn't even allocated at this point. So that'll require a Dow process as well. So it's not necessarily the sheer amount of tokens.
00:07:35.674 - 00:07:55.014, Speaker B: Seven and a half percent is honestly really small, in my opinion. I would almost like to see it be more with the grain of salt that investors and core contributors of arbitrum, in comparison to optimism, got more of a percentage of the pie. So I don't know, you kind of got to look at it and make your own decisions. But, yeah, we definitely have a lot of good ideas as a team. So, Matt, I'm curious, how do you think we should carry forward?
00:07:55.092 - 00:07:55.334, Speaker A: Sure.
00:07:55.372 - 00:08:35.242, Speaker C: And just one last small thing to add is there's a lot of rhetoric on crypto Twitter that the reason that the arbitram team went about it this way and kind of didn't include the foundation in the supplies for legal reasons, we're unable to confirm whether or not that's true, but there's just a lot of support for the team is coming from that angle on crypto Twitter moving forward. We really think, like Sam said, the foundation is not a bad idea. The real issue is that we have no idea who's involved in the project. So we don't know know allocating these grants, who's doing these potential business dev partnerships, funding public goods, whatever else this foundation might do. And that's another problem. So we don't know who's doing it, and we don't really know what they're doing. All they really said was special grants.
00:08:35.242 - 00:09:12.762, Speaker C: We can think of a lot of good uses of special grants, such as the ones I just said and plenty more. But it'd be really nice to see exactly what these use cases are and how much money they expect to be giving allocating to each of these uses. So the two things we want to see is more transparency around the team and who's involved, and we want to see more transparency around how the funds are going to be used, maybe a justification for the budget would be a good word of how we want to see that allocation justified. I think those are the two biggest things. Additionally, it would be nice if the team were to maybe admit that it wasn't the best optics. They could have done better. But at the end of the day, I think at this point, we just want to move forward.
00:09:12.762 - 00:09:53.130, Speaker C: We want to move forward. We want this to be in the past, just like something that we got over and everyone forgets about at the end of the day. This really did create a whole lot of controversy. And while a lot of it was positive and people calling for transparency and a lot of positive conversation did occur as a result of us finding and publicizing our statement, there also has been some more negative outcomes in people not focusing on transparency as the main issue, but rather looking at, oh, they dumped 10 million tokens on us. This is just a slush fund. And we just want to say, like blockworks research, or at least I personally, I definitely don't believe that's what's going on. I think there's a stupid mistake made and that it can be rectified and that we can move forward.
00:09:53.130 - 00:09:57.718, Speaker C: And mostly that's going to be through transparency around the team and the spending of the budget.
00:09:57.894 - 00:10:37.350, Speaker B: Yeah, strong agree there, Matt. I think the main thing I want is also on top of what you said was a vesting schedule, and it's kind of hard to come up with an ideal vesting schedule for these tokens considering we don't actually know their budget. No one knows the budget as well as the offchain labs team and the arbitrum foundation itself and the people in charge over there. So just getting a better idea on how much it does cost to run a dow at scale. Like at the scale of largest, really the largest chain, one of them in all of crypto, top five by TVL. So just transparency is all I would ask for and how the funds are going to be spent. And then that way we can come up with a vesting contract that actually makes sense to meet those budgetary requirements.
00:10:37.350 - 00:10:56.830, Speaker B: That would be my number one on the wish list. And then also just every quarter kind of go through. Look, we spent this much money, we had to liquidate these many tokens to fund these activities. These are the partnerships we can pursue, just providing more transparency in general as we actually live out the process of the DAO.
00:10:57.250 - 00:11:25.842, Speaker D: To add a balanced opinion here, I do think that there's nothing that wrong with arbitram still being relatively centralized in terms of the arbitram foundation at this stage, it is near impossible to develop a large ecosystem like arbitram without a governing, centralized body. We have seen time and time with gain that if you really want to run a business as the DAO, it is near impossible and that nothing will get done. And as a secondary point on transparency, likewise.
00:11:25.906 - 00:11:26.182, Speaker A: Right.
00:11:26.236 - 00:12:02.526, Speaker D: It's nearly impossible for arbitrary foundation to provide an accounting statement for every single month, for every single line item that they've expensed on. You also wouldn't expect governance participants or delegates to sort of go through arbitrage budget and say, hey, I want to spend $2,000 on this weekly lunch. Hey, I want to sponsor a party at permissionless for $3,000. That's not really what we're here for, and that's not what we're really here to do. Our role as delegates and as participants within the arbitrary ecosystem is to provide overall accountability.
00:12:02.638 - 00:12:03.154, Speaker A: Right.
00:12:03.272 - 00:12:11.510, Speaker D: Maybe we can skip the more granular stuff, but as long as the overall accountability and transparency is there, I think that's what the community really wants at the end of the day.
00:12:11.580 - 00:13:03.830, Speaker E: Yeah, I totally agree with you there, Ren. And just to continue on, on what Sam said, I think a vesting schedule really does make a lot of sense here and some reasons why is like, okay, let's say you're trying to enter into a multi year partnership with another group, right? You need to know I'm going to get x amount of tokens every year, so then I can pre allocate tokens in the future that a vesting contract is going to give me in order to kind of budget out things into the future, whereas more of like a verbal agreement with the Dow and saying, each year we'll come back to the Dow and try to top up our coffers and then pursue forward that isn't a known cash flow in the future. And so it makes it a little harder. Right. Think about being on the other side of that. If that's the counterparty I'm dealing with, and they have to go through a Dow process for a Dow vote to get future cash flows, then I'm a little bit more concerned about making that multi year deal. So it does make sense.
00:13:03.830 - 00:13:22.650, Speaker E: And I think that setting an industry standard here as a foundation, having a vesting schedule, is a pretty interesting opportunity, because today that's really not the case. And most of these foundation allocations are just taken directly out of the initial token supply. So it is kind of a good way to help push forward an industry standard as well.
00:13:22.720 - 00:14:00.534, Speaker C: I'd really like to just echo what Ren said, which is at least I'm a huge supporter of the idea of subdaos or metadaos. I think the one token, one vote on all spending initiatives is just not a sustainable way of going about Dao governance. So I think ens, DYDX, makerdao, these are good protocols to look towards because they have respectively, they all call them something different. I think it's like working groups, subdos, metadals. But it's basically the idea that you budget an entity under a semi centralized entity under your main dao, it gets a budget for the know. If they do well, you continue to fund them the next year, if it doesn't do well, you don't continue to fund them. To Dan's point, I agree.
00:14:00.534 - 00:14:27.002, Speaker C: I think it's better to give know if they have it vesting so that they become a better counterparty. Cool. But Dow governance better still have control over those vesting contracts just so they can pull them in case they had to. And that's kind of how I see governance in the future. Very few things are actually voted on by the main Dao besides those reallocation of funds to these subdos or metadals or whatever you want to call them. But that's just my opinion on kind of the whole idea of Dow governance and something that we could work towards.
00:14:27.076 - 00:14:57.834, Speaker B: Yeah, strong agree there, Matt. And I also just think it's worth noting and highlighting again that today is Monday and governance and crypto in general moves super quickly. So I imagine a lot will come out in between now and Wednesday when this episode airs. But it's definitely been like a fun conversation experience and just kind of generally seeing people express their opinions and get super involved in governance. That's exactly what the space is about, and in the very least, that's what we accomplished over the past week. So that's super exciting to see, and I'm excited to see arbitram and offshame labs response. All right.
00:14:57.834 - 00:15:36.150, Speaker B: On that note, though, I think it's a good time to hand it over to Dan and westy to talk with Preston Evans from Sovereign Labs on all things roll up. I cannot recommend enough for you guys to all check out blockworksresearch.com. If you go over to the research tab and toggle free research, you're going to get access to some of the best free reports in the industry. And if you want to subscribe to Blockworks Research, you can do so using zero x research ten at checkout in order to receive $250 off. And you can also sign up to our free newsletter if you want to just get a little taste where we give alpha on governance, dgen, trade ideas, market commentary, charts of the day, et cetera. Kind of get you caught up to speed on everything you need to know in the market. Within five to ten minutes.
00:15:36.220 - 00:15:57.470, Speaker E: Give us a follow at Blockworks res. Blockworks res on Twitter. We'll release our new reports during the week. And even if you don't have access to the reports, you're not a paid subscriber. You can still check out the topics we're writing about and get a little bit of a brief insight into what the contents of the report is about. You want to know a little bit more how we think on the data side of things? Head over to our Dune public account. We have four dashboards live there for free.
00:15:57.540 - 00:16:02.670, Speaker B: The revolution will not be quarterly reported, so definitely check those out and let's kick it over to the interview.
00:16:03.170 - 00:16:30.054, Speaker E: All righty, everyone. We are joined by Preston Evans, the CTO of Sovereign Labs. Preston, thanks a lot for joining us today. We're super excited to kind of dive into everything that you're building. So I guess we can probably start this by if you could just give us an overview of the various scaling architectures for rollups and really what sovereign Labs is building and kind of how that differs from the market landscape today. That'd be a great starting point for this.
00:16:30.092 - 00:16:54.378, Speaker A: Yeah. First of all, thanks for having me on. It's great to be here. So, yeah, let's talk about roll ups. So, broadly speaking, there are two categories, which I'm sure your listeners have heard, but there's ZK rollups and there's optimistic rollups. And at sovereign labs, we build ZK rollups specifically, and then we make a slight tweak to the architecture, which makes us a little bit different from everybody else. And what people call us is sovereign roll ups.
00:16:54.378 - 00:17:33.898, Speaker A: Now, that may be a little bit of a misnomer, but a sovereign roll up is just like a regular roll up, except that it expects end users to decide for themselves what the state of the roll up is. So let's back up just a little bit. Right. What is a roll up? A roll up is a blockchain, and it's a blockchain that posts its data onto another chain. So you've got some set of transactions that you've posted onto an l one, and those set of transactions logically give you some particular state. So maybe, Dan, you sent me five ether, and then I sent those five ether back. At the end of the day, I should have zero ether, right? And you know that just by looking at the transactions on l one, that logical state is there no matter what.
00:17:33.898 - 00:18:28.782, Speaker A: So the question of ZK and optimistic and sovereign, none of that really affects the underlying reality of like you posted some transactions on l one and you got a state route or a new state out of that. The question really is like how do you as an end user decide what the state is? How do you become aware of what it is? So there are a few ways that you might do that. A traditional roll up, you will be a light client of the l one. So you will have your little phone or your metamask wallet or whatever, following Ethereum, and it will get the Ethereum block headers, and that Ethereum block header will have some commitment to the current state of the roll up. So there's some smart contract on the Ethereum l one that is following the roll up and checking proofs in some way to decide what the current state of the rollup should be. And then you as a user, you look at that smart contract and you say, okay, the current account balance for Preston is zero ether. A sovereign rule is just a little bit different.
00:18:28.782 - 00:19:06.246, Speaker A: Instead of following a smart contract on the l one, we send you the proofs directly. So somebody creates a zero knowledge proof off chain that says, I have looked at all the transactions, and when you apply them in order, here is the new state. Preston has zero ether. So that's really all that sovereign labs does. It's a little bit different from everybody else, and we're probably not the only ones building sovereign roll ups. It's become a very popular space recently, but really I think the whole difference between sovereign and non sovereign roll ups is maybe a little bit overblown. The important thing is are you optimistic or are you zk? And what properties does that give to your users?
00:19:06.358 - 00:19:32.818, Speaker F: Would love to dive more into sort of the guarantees around that. So I know when you have sort of like an enshrined smart contract in an l one, it helps define, like you said, the roll up state as well as the canonical roll up in the case of like a fork choice. So I'm wondering sort of what guarantees are different between having like a sovereign roll up where there's not actually that enshrined smart contract, and actually having that enshrined contract with the l one?
00:19:32.904 - 00:20:15.250, Speaker A: Yeah, that's a really good question. So things get complicated here very quickly because there's a massive design space for what your roll up could end up with. So I'll just highlight a couple of kind of interesting points in the design space, but know that there are other options out there that I may not cover here. So I'll start off by talking about what sovereign does at sovereign. What we do is we create a zero knowledge proof which says that essentially we have read all of the transactions from the l one. So that means there's no possibility of a fork on the l two roll up, right? There's no such thing as needing a fork choice rule or something like that, because your fork choice rule is just always take all of the transactions. So what that means is that you really do inherit the underlying guarantees of the l one.
00:20:15.250 - 00:21:05.594, Speaker A: So anybody who posts a transaction onto the l one gets that transaction included on the l two as well. So you inherit its censorship resistance and you inherit the liveness guarantees of the underlying l one, because there's no extra party who has to sign off on transactions before they get included. It's just l one validators. Now this is not necessarily the case for other roll up designs. So for example, if you're running an optimistic roll up as a sovereign roll up, it's not necessarily clear to your users if they're following the canonical chain. So what we do is we create a snark that says, I've looked at the block headers, I've looked at all the data contained in those headers, and I ran a processing function over all of that data to get the new state. If you don't have that proof, then as a user you do have to worry about the possibility that somebody left out a valid transaction.
00:21:05.594 - 00:21:31.670, Speaker A: So this is what the sequencer could do. They could leave out some valid transaction. Maybe Dan sent me five ether and then I sent it back and they ignore that second transaction. So it appeared on the L one, but they didn't include it in their state. Well, that's fraud, right? So in theory, somebody would create a fraud proof which would catch them. Now the problem is, as a user, you don't have any guarantee of when that proof is going to become available to you. So let's say west eth, that you never find out about that proof.
00:21:31.670 - 00:22:19.730, Speaker A: You will go along thinking that I have five ether, and maybe I say, oh sure, I'll send you those five ether, and now you end up with these five ethers that don't actually exist, right? With a Zk proof, you don't have that problem. And the reason you don't have that problem is because as soon as you see the proof, you know that it's valid, as opposed to optimistically sort of assuming that I'm not lying to you and hoping you find out after the fact. So I guess that was the difference between ZK and optimistic in the sovereign setting. The last piece is how does the smart contract play into it? Right. For a smart contract roll up, you don't really have that problem because you assume that the l one is censorship resistant. And so you know how you would find out about that? Fraud proof, right? Somebody would post it onto the l one. The smart contract would check it, and then you know, whether or not somebody has lied for ZK, you don't really need anything on the L one for optimistic.
00:22:19.730 - 00:22:24.010, Speaker A: It's not necessarily clear how secure you are without posting your data onto the L one.
00:22:24.080 - 00:22:54.638, Speaker E: Yeah, great. Thanks for that overview as well. And so one thing, sovereign Labs is creating the sovereign SDK to build these roll ups on any base l one, as I understand. Is it indeed any base L one? And if so, how would you kind of compare and contrast yourself to the Cosmos SDK? Because most people in crypto at this point have heard of the Cosmos SDK and understand that it's like this modular base to build blockchains out of. So what are the comparisons? How would you compare and contrast against that SDK?
00:22:54.814 - 00:23:24.110, Speaker A: Yeah, that's a very good question. So we really do see ourselves as being very similar to the Cosmos SDK in spirit, if not in the details. So the big difference between us and the Cosmos SDK is that Cosmos is meant for building layer one blockchains. And so in order to do that, you have to recruit a validator set. You have to get a network of full nodes. You have to do all of the decentralization things in order to give your users security as a roll up. Of course, you inherit the security of some other blockchain, so the barriers to entry are much, much lower.
00:23:24.110 - 00:23:45.726, Speaker A: Other than that, we're very similar to Cosmos. Right. We're both targeted at supporting app developers who want to come in and build something new that hasn't been tried before but don't want to start from literally zero. Right. And so this thesis of, like, app chains or even just standardized infrastructure is very much shared between sovereign and the cosmos ecosystem.
00:23:45.838 - 00:24:25.998, Speaker E: Right on. Yeah, that's great to hear. And it does make sense why you'd want to kind of use this set of modules to build something that doesn't exactly take the full effort of building an entire blockchain from the ground up. And so from my understanding, really, using an l one as a settlement means you have this enshrined, marked contract that helps define the role of state? I don't know. I guess. Can you really expand on the role of settlement and what guarantees are added or taken away by either outsourcing the settlement or being completely sovereign? Essentially, what is the difference between having that enshrined smart contract in a general trustless bridge?
00:24:26.094 - 00:25:11.454, Speaker A: Yeah, this is a really interesting area. So there's some ongoing debate in the community right now about how exactly we should think about this, but I'll kind of try to give you the high level perspective and we'll go from there. So basically, as a roll up, your goal is to scale some underlying blockchain, typically, at least if you're a roll up, as they exist on Ethereum today. So optimism wants to be able to process a lot of transactions involving ether and cryptokitties that were issued on Ethereum and those sorts of things. And in order to do that, you need a trust minimized bridge, right? You don't want everybody to be trusting some committee to make sure that they can't steal assets and that sort of stuff. So the smart contract is the bridge. The roll up is doing its thing.
00:25:11.454 - 00:25:46.042, Speaker A: It's processing transactions. And then the smart contract checks that the roll up is following its own rules. And so as long as the roll up isn't buggy, you can guarantee that your funds can't be stolen. Now, in a Starbuck roll up, it's the exact same thing. We'll have a bridge which is a light client of this roll up, and it can check that the rules are being followed. The only difference is how do end users interact with the chain? So for a smart contract roll up, you interact with the smart contract to find out what the chain state is. For a sovereign roll up, you interact directly with the roll up's p to p network to find out what the roll up state is.
00:25:46.042 - 00:26:33.462, Speaker A: But the guarantees you get should be the same if the system is well designed. Now, of course, you can make a buggy roll up that doesn't do that, but there's no difference in the guarantees you should get as a ZK roll up whether you're optimistic or using a smart contract, the only difference that users will experience is they should be able to get sort of faster confirmations and cheaper fees on a sovereign roll up. So let me explain why that is right. That's kind of a bold statement. The most expensive thing for most ZK roll ups is verifying the proofs on chain. So verifying a typical gross 16 proof is maybe on the order of half a million gas and something like a stark proof could be up to 5 million gas or even 10 million gas. Maybe that's a ton of money to verify a single ZK proof on chain.
00:26:33.462 - 00:27:32.154, Speaker A: And so systems like starkware, they don't post proofs onto the l one very often, right? Because a proof doesn't get any more expensive to check if it's bigger. So you can prove 1000 transactions or a million transactions for the same l one gas cost. So if l one gas is the biggest cost in your system, then you want to wait as long as you can so that you can spread that out across more transactions and each individual transaction pays less fees. Okay, so in practice what that means is starknet posts approved maybe every few hours, maybe six to 8 hours or something like that. And it's not that they can't prove faster than that, it's just that they don't want to pay the gas to verify the proofs on chain. But because as the user, you're looking at the smart contract to decide what the state is, your personal view of the state doesn't update until starkware posts the proof. And so you experience a latency of 8 hours or 12 hours or whatever it is for your transaction to be included as a sovereign roll up.
00:27:32.154 - 00:27:58.598, Speaker A: You don't have to do that. So you can still have this bridge which checks the proofs on the side, but users aren't looking at the bridge. So sure, maybe you wait every 8 hours or 12 hours to submit a proof onto the l one bridge, but you can create other proofs and send them directly to users in real time. So as a user of a sovereign roll up, you can check a proof from the peer to peer network. And if the proof checks out, you know what the state on the l one will be in 8 hours or whatever the time limit is.
00:27:58.684 - 00:27:58.934, Speaker C: Wow.
00:27:58.972 - 00:28:26.682, Speaker F: Yeah. That's a really good explanation. I know you mentioned that previously in the conversation with Anatole about whether ZK proving is actually the bottleneck in finality or in reality you can just send it to the peer to peer network. So really appreciate that. Would love to dive into next sort of data availability and how that fits into the sovereign thesis. So could you give a quick overview on what data availability is, why it's important, and how it relates to sovereign?
00:28:26.746 - 00:29:02.082, Speaker A: Yeah, sure. So I assume your listeners are probably a bit familiar with the roll up design space, but backing up, if you had a roll up that didn't have any of its data available, that would be completely insecure. So in that situation someone would give you a zero knowledge proof or a fraud proof. And they would say like, hey, look, I had some transactions, and now here is a commitment to the state of the roll up afterwards. And as a user, you're like, well, that's great, but I don't know what's inside that commitment. Like, I don't know what anyone's balance is. And so if the prover is malicious, they can give you one of these proofs, and it really is a valid ZK snark.
00:29:02.082 - 00:29:21.870, Speaker A: It really does commit to some state, but there's no way for you as a user to know what that state is. And so you can't do anything with it. You can't withdraw your money. You can't check somebody's balance. You can't do anything. And so your funds are effectively frozen. Right? Okay, well, now as a user, you're like, how do I get my money back? I want to do something with my money.
00:29:21.870 - 00:30:07.514, Speaker A: You have to, I don't know, pay a bribe to the prover or do whatever the prover wants so that he'll move your money for you. So it's very important as a user that you know what's inside the state commitment that the ZK smart attests to or that the roll up attests to. That's the data availability problem. So how do you know what's inside this valid proof? All you need to do to solve that problem is you need to publish the data on the Internet somewhere. But the question of what does it actually mean to publish data is a little bit hairy. So the gold standard for data availability is to post it onto an l one blockchain. People have started out doing this with Ethereum, and nowadays there are specialized chains that are just meant to do this, and that way users can know what the current state of the roll up is and that it's valid.
00:30:07.514 - 00:30:27.446, Speaker A: Not just that it's valid. So there are probably three or four, maybe five chains nowadays that specialize in data availability. And the best way to build a roll up is to use one of those chains and post all of your data on that chain. And your roll up is only valid once the data appears on that l one.
00:30:27.548 - 00:30:38.950, Speaker E: And just piggybacking on that note. So what do you think is the most optimal data availability solution today, and how does that fit in directly with sovereign?
00:30:39.550 - 00:31:28.678, Speaker A: Yeah, it's a tough question, actually. So at Sovereign, we are not betting in particular on any particular data availability layer. We see a lot of innovation in that space, and it's too early to call a winner and frankly, like many of them, make different trade offs that I think will be good fits for different kinds of applications. Now, that being said, there are some clear winners and some clear losers in terms of the technologies that you choose. So all of the really good data availability chains are integrating a technology called data availability sampling. And what that lets you do is as an end user, you can very trivially check that the data availability chain is really doing what it claims that it's doing. So if somebody posts the data on chain, you as a user really can download it, and you can check that you can download it without having to actually download it at all.
00:31:28.678 - 00:32:18.498, Speaker A: So what that means in practice is basically these chains can be much more secure and they can support a much higher throughput of data than a traditional blockchain could. Other than that, all these data availability chains make slightly different trade offs in terms of consensus and time to finality and things like that. And frankly, we think most of them are pretty well designed. So we're very excited to see the explosion of innovation there. We support, or we plan to support basically any chain you can imagine as a platform for building sovereign roll ups. So we've started out integrating with Celestia for our first demos, but we'll quickly add ethereum once proto tank sharding or EIP 48 44 finalizes. We will add avail, we will add probably bitcoin pretty quickly, and then we'll keep on adding chains as bandwidth permits.
00:32:18.498 - 00:32:24.438, Speaker A: We've chatted with a bunch more layer ones, and kind of everybody is adding this capability as time allows.
00:32:24.534 - 00:32:43.262, Speaker F: We'd love to ask you about sequencers. I feel like that's a pretty hot topic within the rollup space at the moment. So I'd love to know, what is your framework for sequencers? Do you think centralized sequencers are okay or maybe optimal in certain contexts, or should all sequencers look to be decentralized? So, yeah, I would love your opinion there.
00:32:43.316 - 00:32:58.754, Speaker A: Yeah, this is a really good question. And again, like with so many things, there's a broad design space here. And so we'll have to talk a little bit generally about what tradeoffs people are making. But overall, we're big fans of decentralization. We kind of think that's the whole point for roll ups.
00:32:58.802 - 00:32:59.014, Speaker D: Right?
00:32:59.052 - 00:34:04.134, Speaker A: Like if you just wanted a centralized chain, why not use a database on AWS? So we think decentralization is important, but it's important because it gives you specific guarantees, right? It's not important just in the abstract. It's important because it translates into better censorship, resistance more resistance to things like regulatory capture, all of these sorts of things. So we think centralized sequencers are probably kind of just a stock gap because they're easy to build. But in the long term it's very likely that some jurisdictions will treat centralized sequencers as being a money transmitter or something like that. Who knows what's going to happen? And then as a user, a centralized sequencer shouldn't really be acceptable because you never know what's going to happen with a centralized sequencer. But if they decide to start censoring you, then you're kind of straight out of luck, right? So there's this Useful concept that we talk about called time to finality or time to censorship resistance. With a centralized sequencer, either they can make your time to finality infinite.
00:34:04.134 - 00:34:52.394, Speaker A: So that's like if there's no way to get around the centralized sequencer, or they can at least delay your transactions. So think of optimism. Or arbitram's inbox model, right? If the sequencer tries to centralize you, sure, you can still send it on l one, but it might take five or 6 hours to get processed from l one onto the roll up. And so if you're trying to do something time sensitive, like liquidate a position on Medicare, dow, or something like that, there's lots and lots of time sensitive operations you might want to do, and the sequencer can prevent you from doing those time sensitive operations. So that's just not acceptable for power users or really for any user. So we think every design needs to be for something where the sequencer can't prevent you from accessing the roll up for very long. Now what exactly that looks like is a really interesting question.
00:34:52.394 - 00:35:52.550, Speaker A: There's lots of kind of unique designs to explore here, so I'll just lay out a couple that people are excited about right now, and then I'll sort of mention how they fit into the sovereign ecosystem. So one popular design these days is what people are calling like based roll ups, where you just outsource all of the sequencing to the l one. So instead of having a centralized sequencer at all, you just say like, hey, there's some smart contract or there's some namespace on the l one, and any piece of data that lands there we will treat as a transaction and we'll process it right away. The nice thing about that is that you inherit the exact guarantees of the l one, so you get its full censorship resistance. And you can guarantee that there's no like two classes of citizens where some of them get fast access and some of them get slow access. The downside to doing things that way is you don't get soft confirmations. So a soft confirmation is essentially a promise from a sequencer that says, hey, I saw your transaction and this is what's going to happen with your transaction in the future.
00:35:52.550 - 00:36:40.966, Speaker A: And the nice thing about that is the centralized sequencer can give you a soft confirmation much faster than the l one would finalize. So if you send a transaction onto Ethereum, it typically takes 15 seconds, 30 seconds, maybe a minute for it to finalize. But if you send a transaction on Starknet, you can get this soft confirmation instantly. So there's other interesting designs that try to marry the best of both worlds. You can do something like maintain a separate validator set for the roll up, and those people can vote on transactions off chain and still give soft confirmations faster than the l one finalizes, but without having just one entity that you're trusting. So at sovereign we like the based designs. We're looking at ways to try to combine based designs with an optimistic centralized sequencer.
00:36:40.966 - 00:37:11.042, Speaker A: So the idea would be like you have a centralized sequencer who always has the right to include some transactions in a block. So he can still give you a soft confirmation, but he doesn't have the right to make the whole block. So even if he tries to censor you, your transaction still gets included in the next block. So there's lots of interesting designs to explore here. Frankly, it's pretty early. A lot of these decentralized sequencers designs are really just white papers at this stage, so who knows how it's going to play out. But there are lots of interesting efforts.
00:37:11.042 - 00:37:54.898, Speaker A: There's the espresso sequencer, there's suave, which is trying to decentralize building, so we're keeping a close eye on this space. Now lastly, at sovereign we treat sequencing as a module. So our whole system is a bunch of components that plug together. Sequencing is just one module, so you can swap in a different sequencing model without really touching the rest of your chain. So if you want to start out with a centralized sequencer for testnet and then swap to a base roll up or swap to using espresso sequencer or Astria or something like that, that all should be very easy to do. So we try not to bet too hard on any particular model and just sort of contribute to the research and help push people towards the good decentralized models. But it's really too early to pick a winner right now.
00:37:54.984 - 00:38:26.458, Speaker E: Yeah, and just kind of like diving deeper onto the state of l two s and sequencers today. So today is March 24, Friday, and we just heard Zk sync launch the main net alpha of era, their Zkevm. And then you hear Polygon has been talking about how they're going to be the first Zkvm to market as well. So Zk is like, Zk Zk Zk. It's everywhere. You guys are building Zk roll ups. And so if we look at the state of ethereum l two s today, we see two of the largest l two s are actually optimistic roll ups.
00:38:26.458 - 00:38:37.474, Speaker E: And so where do you think optimistic roll ups kind of fit in, into the roll up landscape? When you look a little further out on the timelines here, are Zk roll ups the end state, or do you think there's room for optimistic roll ups as well?
00:38:37.512 - 00:39:12.700, Speaker A: Yeah, this is a really good question. So as an optimistic roll up, you make some trade offs, right? You get much longer times to finality for end users. So in an optimistic roll up, you have to wait for somebody to submit a fraud proof if the sequencer did anything malicious. And because you can't know if somebody's going to submit a fraud proof, you have to wait for just some subjective length of time. And over time you get more and more confident that the sequencer wasn't malicious. Right. And so there's fundamentally just no way to really get that window down to the sort of timescales that you could get with a ZK roll up.
00:39:12.700 - 00:40:01.600, Speaker A: Maybe, as usual, you're comfortable that no one's going to submit a fraud proof after a week. Maybe it's a day, but it's certainly not like 100 milliseconds. And that's just a really bad user experience if you're trying to do things that involve cross chain interoperability. So if you have a token on optimism and you want to move it over to arbitrum, you just have to wait the week so that the L one can finalize your roll up. Right. So that's really bad for applications that need composability across chains, but it has a lot of advantages too, if what you really, really care about is just having super low fees, because creating ZK proofs is not that expensive, but it's a lot more expensive than not creating a proof at all. So if you don't need quick composability across chains, then being an optimistic role might make a lot of sense for your application.
00:40:01.600 - 00:40:40.914, Speaker A: So broadly speaking, we see optimistic as being incredibly well suited for things like gaming, potentially for new applications that haven't really started taking off yet. But like, I don't know, if somebody does a medical records on the blockchain sort of thing, you don't need composability across chains for many applications. For all of those things, optimistic makes perfect sense. Now, the last thing I should add here is that it's kind of true that the biggest roll ups are optimistic today, but really there aren't any roll ups today. There's only one roll up and that's fuel v one. And they are optimistic, but nobody else actually has a secure roll up like optimism. Doesn't have fraud proofs.
00:40:40.914 - 00:41:06.222, Speaker A: Arbitrum doesn't have sort of working fraud proofs. They've got fraud proofs, but nobody's allowed to submit them. Starkware has. They're the only ones who are allowed to submit ZK proofs to their roll up. And there's reasons for that that I won't get into. But basically none of these are roll ups yet. We're still really early, so I wouldn't read too much into the fact that certain chains have been successful so far.
00:41:06.222 - 00:41:10.738, Speaker A: Every chain currently is just a bet that this technology is interesting and worth building on.
00:41:10.824 - 00:41:46.650, Speaker F: Yeah, it's definitely a fantastic point. A lot of the roll ups that exist, there's definitely a lot to bake out in terms of, like you said, the proofs, as well as decentralizing the sequencers, which is still super early within the rope ecosystem. You touched on composability a bit in your answer there. So would love to dive into how sovereign thinks about composability. I know we've heard ideas with how roll ups can be composable with things like l three s. We have some sort of shared proving system as well as things like a shared sequencer. So we'd love to know, how does sovereign think about composability between the roll ups?
00:41:46.730 - 00:42:12.294, Speaker A: Yeah, so this is a really interesting question. Again, lots of cool research going on here. So essentially what we see this as each roll up is its own independent universe. And within that universe you have what we call synchronous composability. So think of Ethereum. You can take your token out of uniswap and you can drop it straight into compound all within a single transaction. And as a user, there's like no delay between those two things happening.
00:42:12.294 - 00:42:56.260, Speaker A: And you can also guarantee that if the uniswap withdrawal reverts, so there's the compound deposit or whatever. So that's synchronous composability. Sovereign rollups or any roll ups also have synchronous composability within chains. But across chains, they should be their own separate universe. So all the operations should be totally asynchronous. So that means that if you want to bridge your cryptokitty from ZK sync onto optimism, the optimism minting operation needs to wait until it's very confident that the Zk sync freezing operation really has happened. So what exactly the properties of that look like depend, again, a lot on the specifics of the system.
00:42:56.260 - 00:43:32.910, Speaker A: But at Sovereign, we have this design that we're pretty excited about. So what we do is because we're sovereign and we don't have to pay to submit proofs on chain, we create proofs in real time. So every time a new block of transactions come in, we create a ZK proof that says this block of transactions was valid, and here's what the result was. So if you lock up your cryptokitty on one of our chains, within a few seconds, you'll have a proof saying, okay, I really have locked this cryptokitty. Now off chain. Anybody can take that proof, and they can aggregate it with any other proofs they want. So let's say you've got roll ups, A-B-C all the way through Z.
00:43:32.910 - 00:44:12.460, Speaker A: They can take all 25 of those proofs, 26 of those proofs, and compress them down into a single proof. And this new proof says basically like, hey, here's what chain A's state was, here's what chain B's state was, blah, blah, blah, all the way down the line. Now, you can take this metaproof, this aggregate proof, and you can give that aggregate proof to any one of the roll ups. So maybe pass that new proof on to chain c. Now, all of a sudden, chain C can say, oh, yeah, Preston really did lock up his cryptokitty on chain a, so now it's safe to bridge it over to chain C. Or maybe something on chain Z happened that was interesting. Maybe somebody burned some USDC, so they're entitled to mint some new USDC on chain C.
00:44:12.460 - 00:44:48.450, Speaker A: So the magic here is you can use off chain proof aggregation. And of course, off chain operations are basically free. So it's very, very cheap. And because we can produce proofs in real time, you can do this very, very quickly. So what that means for a user is you submit your transaction on chain a, you wait for it to finalize, and then you wait a few more seconds for the proof to be created. As soon as that happens, somebody submits that proof onto chain C, and within four or 5 seconds, you can move your NFT over from a to b. And the magic of this is that there's no central party in the middle, including a chain.
00:44:48.450 - 00:45:22.610, Speaker A: So let's say you want to do the same thing with smart contract roll ups on Ethereum. The typical way that you would do that would be you would take your cryptokitty from Zk sync, and Zk sync would submit its proof to the l one. The smart contract would verify it. Now, your cryptokitty is on l one. Then you send a transaction over to whatever, the starkware smart contract, and then the smart contract sends it back up to the l two. So you have to wait for this transaction to go through the l one. The problem is just that the l one is congested, right? Like, everybody wants to be on l one all the time, and so you have to pay really high gas fees.
00:45:22.610 - 00:46:00.094, Speaker A: So this is like an l one, l two system, or an l two l three system. Basically, these systems all work by passing the asset down from some chain up here down to a root, and then over to a different chain and back up. What we do is we do a completely flat topology, so there's no central party, there's no going up and down. All you do is you send things directly where they're supposed to go, and what they'll let you get is very concretely low bridging times, and hopefully concretely low costs. We haven't actually finished building this yet, so this is all speculative. This is one system. There are lots and lots of other ways to approach this problem.
00:46:00.094 - 00:46:12.098, Speaker A: L two s and l three s are another sort of approach, trying to do the same rough thing, except that instead of sending things through l one, they send them through l two. So does that answer your question?
00:46:12.184 - 00:46:22.694, Speaker F: Yeah, it definitely answers my question. One thing I'd want to know is, does this only exist within the sovereign ecosystem, or can another role sort of outside, say, hey, I want to plug into this system?
00:46:22.892 - 00:46:58.866, Speaker A: Yeah, it's a really good question. So there's no reason in principle, that you couldn't plug in a roll up that's not using the sovereign SDK into a system like this. And in fact, we do hope to support that pretty quickly. There is one caveat that I should mention here, which is that all of these systems only work across a shared DA layer. So if you have two roll ups on the same DA layer, they can do this back and forth in the same way that they could send transaction from ZK sync to starkware through ethereum l one. But if you're moving across different DA layers, fundamentally there's no way around having a trusted third party doing your bridging for you. So this is the same for us.
00:46:58.866 - 00:47:09.666, Speaker A: And for every other system that's trying to do bridging, you're going to have a trusted third party unless you are on the same DA layer, in which case you can do more interesting things like aggregate proofs, or l one to l two bridging.
00:47:09.698 - 00:47:17.910, Speaker F: And then going back to the comparison with Cosmos, how does this differ between something like IBC in terms of its security guarantees?
00:47:18.250 - 00:47:52.558, Speaker A: Yeah, this is a really good question. So IBC is actually a very impressive protocol, but it's fundamentally impossible to do bridging. So bridging is known to be equivalent to the asynchronous fair exchange problem, which is provably unsolvable. So all you can do is trust some third party. Now, specifically, in IBC, the party that you trust is the validator set of the other chain. So the validator set of the other chain will sign off on a statement that basically says, like, hey, some guy on this chain really did lock up ten USDC. We promise it's safe to mint them on the Cosmos hub.
00:47:52.558 - 00:48:37.620, Speaker A: And now that, in practice, that's probably a pretty good assumption, right? I'm not aware of any IBC proofs being forged, but if that validator set of chain B is malicious, then they can convince an IBC bridge of an untrue statement. In an optimistic or a ZK construction, there is no trusted third party. If you're on a shared DA layer, you're not trusting the validator set, you're checking their work. And so fundamentally, you can be much more secure. And then there's also this whole class of problems that just can't happen. So let's imagine a bridge from Solana to Ethereum, right? Ethereum's chugging along and producing blocks. And in one of those blocks, maybe I send you a transaction, and that transaction is supposed, know, whatever, lock up my cryptokitty and mint it on Solana instead.
00:48:37.620 - 00:49:06.010, Speaker A: So Ethereum processes this transaction. The cryptokitty is locked up, and then Solana sees that transaction, and it says, okay, we'll mint a new cryptokitty. Well, now Ethereum rolls back. So all of a sudden, that cryptokitty that was locked up on Ethereum at one point is no longer locked because of a reorg. But Solana has already minted this thing. So now either Solana has to reorg, or we've created a cryptokitty out of thin air. So this is like the fundamental thing that makes bridging difficult.
00:49:06.010 - 00:49:36.654, Speaker A: IBC has the exact same problem. So the way they get around this in cosmos is they basically just say, like, hey, all you IBC chains, you are not allowed to reorg. You have to use tendermint. And if you ever reorg, then that's a validator set fault, and we'll use social consensus to resolve it. Now, IBC, the protocol actually has workarounds for this. So they try to support chains that are not rework free. But it's, like, pretty janky and Dicey, which is why IBC is really limited to the cosmos ecosystem so far, or one of the reasons.
00:49:36.782 - 00:50:20.082, Speaker E: And I have another question on IBC, and I don't want to dive too far down the IBC hole, but during this conversation just sprung to my mind, and is IBC a case where your security is really your total security is the weakest chain security? Right. Because IBC assets are path dependent. Let's say there was malicious chain a that IBC'd assets to osmosis, but then a user on osmosis brought those IBC'd those to, let's say, kanto. Well, now Kanto is holding the receipt of these IBC tokens that were maliciously created by. Am I thinking about that properly? That ultimately, IBC as a whole is only as strong as its weakest link?
00:50:20.136 - 00:50:50.730, Speaker A: You're completely right with one caveat, which is that IBC actually tracks all of those paths. So assets on osmosis are not fungible. Like, let's say you had an asset that started on chain a, and then some of them went from b to osmosis, and some of them went from a to c to osmosis. Those two things would be completely separate assets in osmosis'eyes. So if one of either b or c is malicious, it sort of doesn't affect the other assets in the pool. It only affects the ones that have actually gone through that path. But, yeah, you're completely right.
00:50:50.730 - 00:50:59.342, Speaker A: If chain b is malicious, then they can convince osmosis that they have a bunch of assets they didn't really have, and the price of those assets will crater or whatever, right?
00:50:59.396 - 00:51:10.162, Speaker E: No, that makes a ton of sense. And so when we look at sovereign, how is that not applicable in that ecosystem? And I know you kind of just touched on that, but if you could just kind of double down on that for us.
00:51:10.216 - 00:52:03.474, Speaker A: Yeah. So the reason this isn't applicable is basically because you're not trusting the validator set. So in IBC, what you're doing is you're looking for a signed statement from the validator set that says, hey, we really did lock up these 20 assets and it's safe to mint them on chain c. Well, if they're lying about that, you have no way to check, right? What we do is we use ZK proofs instead, and so there's no way for them to lie to you. Now, I should mention that there are a bunch of caveats here, because just because a ZK proof is valid doesn't mean that it's useful or meaningful. So somebody could create a perfectly valid ZK proof, but which doesn't say anything, right? And so if all your smart contract is doing is verifying the proof, and not like checking some semantics as well, you're vulnerable to the exact same thing. So to give an example, I could create a valid ZK proof which says that one plus one equals two.
00:52:03.474 - 00:52:22.454, Speaker A: And then I could tell you like, hey, here's a proof that I locked up twelve assets on chain a. Well, no, it's a proof that one plus one equals two, not that I locked assets. And so you have to be careful that the proofs you're validating are actually meaningful. Basically that the roll up chains you're bridging with are actually meaningful chains that have a notion of assets and locking them up and those sorts of things.
00:52:22.572 - 00:52:50.862, Speaker E: And so we've gotten pretty in the weeds here, and I kind of want to just zoom back out for a second and take a more holistic view of what's going on here. And sovereign essentially allows you to create roll ups on any one. And provided they can use any DA layer as well. And so how do you think about the entire roll up ecosystem today? And I guess the ultimate question here is, if I'm a user looking to build a roll up, why am I choosing Sovereign? What is Sovereign Labs X factor?
00:52:50.926 - 00:53:27.994, Speaker A: Yeah, Sovereign is obviously like pre launch right now, so you can't use sovereign to build your roll ups today. But we think we're going to be a great contender for a lot of reasons. One of them is that we are by far the most agnostic of any way to build roll ups. So if you look at all the roll ups today, like ZK sync or Polygon, Zkeepm or Starkware, you couldn't take that framework and use it to build something completely different. They only have code for doing ZKE evms. That code is super customized all the way down to their proof system. And then you can only deploy them on Ethereum.
00:53:27.994 - 00:54:01.042, Speaker A: There's no way to port them to other chains. Sovereign is fundamentally different, right? We are like a framework meant for building custom things. So we don't make you pick any particular chain, we don't even make you pick a particular proof system. So if you want to use ZKlvM from like the nil foundation to do your proofs, you can do that. If you want to use risk zero, you can do that. So fundamentally, we're just much more flexible and hopefully much more developer friendly than all these other frameworks. So we're just in a completely different category, right? There's nobody else who's building tools for building roll ups.
00:54:01.042 - 00:54:17.774, Speaker A: Everyone else is building the roll ups themselves. And then we think that the reasons you would pick a ZK roll up are kind of obvious, right? Like you get good scalability, you get strong security, all that sort of stuff. So for now, we're kind of the only game in town, but hopefully we'll provide a really great developer experience as well.
00:54:17.812 - 00:54:39.730, Speaker E: And one of the other things that we hit on earlier that I would like to go back to was the ability to pick your own. L one means you could ultimately build a roll up on top of bitcoin. And a lot of people view bitcoin and its proof of work network as like the strongest form of security that we have today. So what exciting ideas have you heard about or are thinking about as far as building roll ups on top of bitcoin?
00:54:39.810 - 00:55:16.690, Speaker A: Yeah. Boy. So frankly, it's really early. Roll ups on bitcoin are like this cool idea that's starting to get a tiny bit of traction. But I think this is maybe the first proposal that has a way of doing it incrementally. So every other proposal that I've seen requires bitcoin to add new opcodes and do a bunch of other stuff, which is fundamentally just quite difficult because bitcoin is a conservative chain, for good reason. So with that being said, there's not actually too much talk about what specifically you would want a roll up on bitcoin to be yet, because we're just now discovering that they're kind of possible in a reasonable time frame.
00:55:16.690 - 00:55:56.846, Speaker A: But some things that I would like to see, I would really love to see general purpose programming on top of bitcoin. So maybe something like Ethereum, maybe we don't want to take the EVM, maybe we use, I don't know, fuel VM or Solana's BPF or something like that. But some general purpose programming on top of bitcoin would be really cool. I also think there's a ton of demand for DeFi primitives specifically. So something like duality or some other osmosis. Any of these Dex specific chains I think make a lot of sense on top of bitcoin, especially if you also have an asset issuing chain, somebody that can essentially do ERC 20s. But it's the early days for sure.
00:55:56.846 - 00:56:24.690, Speaker A: I guess the last one I'll mention is nfts. Ordinals have gotten a lot of attention recently and they're great, but they don't really have any programmability baked in. Like it's just jpegs on the blockchain, but with a sovereign roll up, you could make nfts on top of bitcoin that have the same guarantees as ordinals but also had programmability. So you could pay royalties, you could use them as membership tokens for exclusive dows and that sort of stuff. The sky's the limit.
00:56:24.770 - 00:57:06.306, Speaker E: One of the interesting points you mentioned there was that this would require no changes to the bitcoin code itself. And I think a lot of true bitcoin maximalists out there rejoice at hearing that even myself, who's a little bit more interested in the smart contracting ecosystem rather than bitcoin itself, that's a really cool proposition, because ultimately bitcoin's greatest value is the fact of its simplicity. And it's almost its refusal to change is why I personally find it interesting. So hearing that is pretty exciting to kind of know we can build an ecosystem on top of that. But then the first thing that pops in my head is like, okay, well, those pesky ten minute block times, that would be something that like a roll up built on top of bitcoin wouldn't be subject to that, correct?
00:57:06.408 - 00:57:49.842, Speaker A: That's a really interesting question. So it would be possible to build a roll up on top of bitcoin that has sort of faster than ten minute soft confirmations of some sort. But you wouldn't get the full security of bitcoin until after the bitcoin block had finalized. Now, I've been sort of kicking around this interesting idea for trying to turn proof of work into add an overlay onto proof of work to let you commit to some small pieces of blocks. So the rough idea is basically like miners lock up their bitcoin instead of just withdrawing it. So whatever they earn from mining, they lock up. And then they use that to run like a little voting scheme, basically based on how much hash power they have.
00:57:49.842 - 00:58:34.090, Speaker A: And this voting scheme is allowed to apportion some small chunk of the block, maybe like 100 block. So basically every 15 seconds. Some miner is allowed to say like, hey, I'll take a few transactions that are meant for the roll up and I'll promise that these are going to get committed. And if all of the miners are working together to do that, they can give you faster confirmations without affecting the properties that bitcoin gives you. So anyway, there's interesting design spaces here, as everywhere else, but you won't get full security until the ten minutes for sure. And then one last thing that I should add here is that it is really cool that you can build these things on bitcoin without needing to change bitcoin in any way. But you don't get a trust to minimize bridge with bitcoin.
00:58:34.090 - 00:58:54.530, Speaker A: So there is a little bit of a distinction there, right? You can't take your bitcoin and swap it for an NFT on this chain. But if you're holding an NFT on this chain, it has the same security guarantees as your bitcoin. So it really does inherit bitcoin security. It just can't speak natively with bitcoin until you add an opcode to verify snarks back and forth.
00:58:54.610 - 00:59:11.734, Speaker F: Awesome. Going back to like, one question that comes to my mind is sort of, what's the business model here? Since you're creating sort of an open source SDK? Yeah, what's sort of the business model here? What's the plans to actually monetize sovereign?
00:59:11.782 - 00:59:39.378, Speaker A: Yeah, it's a very good question that we've been thinking about a lot, and frankly, we haven't settled on a particular way to monetize yet. One thing we're very committed to is making sure that the SDK is free and completely open source. A lot of businesses do this thing where they open source their code under a license that says you're not allowed to use it unless you pay them. Ours is completely free, completely open source. It's apache license. Like, you can take it and do whatever you want with it, and it's always going to be that way. So we will find other ways to monetize.
00:59:39.378 - 01:00:09.134, Speaker A: We're not completely settled on anything in particular, but there are lots of good models for funding things, including some stuff inspired by retroactive public goods funding. There's also lots of opportunities to provide useful services around the SDK, so we could help people run prover networks and help people run sequencers. But at the end of the day, we think the SDK will create a lot of value. And once there's a lot of value being created, capturing some of it is not quite as hard as creating the value in the first place.
01:00:09.252 - 01:00:25.378, Speaker E: Yet another parallel to the cosmos SDK itself. I love that approach that you're taking there. That's exciting to see. And so being pre launch, the obvious question is, how's development going? What are some challenges you've hit? And I think you're probably your least favorite question I have to ask, what's the ETA looking like?
01:00:25.544 - 01:01:09.442, Speaker A: Yeah, so we try not to give any super specific timelines just because we're still early. We're hoping to have something usable in a year to a year and a half, but who knows? That depends on a lot of things, including hiring and other stuff. Concretely, what I'll say is we ran our first Devnet yesterday, so we actually sent transactions. We had all the data running on Celestia and that serviced lots of bugs, but it did work. So that was really good. We're hoping to partner with a couple of other teams to basically test out an alpha version of the SDK very soon. Our ETA for that is like a week and a half, but that will not be sort of like, the code will all be up there, but we're not recommending that people try to use the code as it is.
01:01:09.442 - 01:01:19.846, Speaker A: It's got lots of known bugs and that sort of stuff. So, yeah, a year to a year and a half. Hopefully we'll have a real productionized, audited, ready to go product.
01:01:19.948 - 01:01:40.022, Speaker E: That's fantastic. Yeah. Congratulations on that first milestone as well as hitting first Devnet. Well, Preston, this has been a fantastic conversation. Really enjoyed getting to talk with you on the idea of what Sovereign Labs is building then. Super exciting to push the roll up space forward. I'd love if you could give the listeners a closing thought and where to find you and learn more about sovereign labs.
01:01:40.086 - 01:01:54.510, Speaker A: Perfect. Yeah. You can follow us on Twitter. We're at Sovereign underscore labs, if I recall correctly. And yeah, closing thoughts. We're really excited to see all the innovation in the ecosystem. It's a great time to be in blockchain and we really think this is all positive sum.
01:01:54.510 - 01:02:03.790, Speaker A: We really believe that sovereign rollups are good for Ethereum and they're good for bitcoin and that we'll do better things if we all work together on them. So come build with us. It'll be great.
01:02:03.860 - 01:02:10.290, Speaker E: Awesome. We'll go ahead and throw links to sovereign lab socials and website as well in the description, but thanks a lot, Preston. This was great. Cheers.
