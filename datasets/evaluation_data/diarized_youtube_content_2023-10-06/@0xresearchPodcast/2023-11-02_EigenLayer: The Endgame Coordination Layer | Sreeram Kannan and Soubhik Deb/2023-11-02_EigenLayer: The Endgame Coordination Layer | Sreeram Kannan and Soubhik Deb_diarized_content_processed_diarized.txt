00:00:00.170 - 00:00:10.922, Speaker A: In one world, you have 100 protocols, each of which have $1 billion staked. This is world one. In world two you have $100 billion staked, which is restaked into all the 100 protocols.
00:00:10.986 - 00:00:14.654, Speaker B: Which world is better? The benefit of world two is to.
00:00:14.692 - 00:00:32.630, Speaker A: Attack any one protocol, you now need to attack the $100 billion in world one. To attack any one protocol, you only need to attack $1 billion. The second world you brings the benefit of pooled security. The first world doesn't. So what we are very careful about is convergence.
00:00:35.050 - 00:01:12.002, Speaker C: Hey everyone, Sam here. If you're like Dan and I, you probably don't pay a ton of attention to the institutional macro side of things in crypto and are laser focused on the Degen shenanigans happening on chain. However, in order to onboard the first trillion dollars of capital on chain, it's incredibly important to hear from these institutional players and get them involved. That's why we're excited about hosting the digital asset summit in 2024 in London, the land of tasty pastries. Be sure to join us at the event next year and we will tell you how to get 20% off your ticket a little bit later in the show. What's up, everyone? Welcome back to another episode of Zero X Research. Before we dive into today's episode, a quick word from our sponsor, Hexons, the most hardcore security team in web three.
00:01:12.002 - 00:01:28.610, Speaker C: Pioneering in ZK and novel cryptography, Hexens is trusted by tier one projects like Polygon, Mantle Risk, Zero, Lido, one inch, Newbank and more. Check them out on the ground at DefConnect and be sure to mention Zero X research when requesting a quote. And you'll get a free webtoon pen test with the purchase of your audit.
00:01:28.690 - 00:02:15.510, Speaker D: All right, everyone, welcome back to another episode of Zero X Research. We have an interview episode lined up with the gentleman from eigen layer today, so it's going to be an exciting conversation about some cutting edge technology getting built in and around the ethereum ecosystem. We're joined by Sriram, the CEO, and Shabik, the head of ABS research. So doing a lot of the groundwork there on the R D side of things. So thanks a ton for joining us today. We've got an exciting conversation lined up, but again, when we have these conversations about this really novel and nascent technology, I think it's always best just to start a little bit high level before we tear back a few layers and get into the weeds of things. So you launched back in June and already have over 200 million in TbL between about 21,000 unique depositors, which is a very impressive milestone, showing some serious demand for what you guys are building.
00:02:15.510 - 00:02:21.914, Speaker D: But if we could just start from the top and kind of say, all right, we're building Eigen layer to solve these subset of problems.
00:02:22.112 - 00:02:24.218, Speaker B: One way to think about it is.
00:02:24.384 - 00:02:39.806, Speaker A: Imagine you're back in 1995 and you look at web application development in 1995, you'd have maybe two options. You could go build a website. Most of you here are too young to know this, but you could go.
00:02:39.828 - 00:02:43.278, Speaker B: Host a website on geocities, which would.
00:02:43.284 - 00:02:45.826, Speaker A: Be a static web page. You just have your home page put.
00:02:45.848 - 00:02:56.174, Speaker B: Your photo up, something basic. You don't have to do much work to actually do that. But if you wanted to build anything more complex, you want to store complex.
00:02:56.222 - 00:02:58.510, Speaker A: State, you want to have identity, login.
00:02:58.590 - 00:03:03.046, Speaker B: Payments, any of these things in 95, you would have to build everything yourself.
00:03:03.148 - 00:03:07.766, Speaker A: You have to build your own server stack, you have to build your own identities, payments, you have to build your.
00:03:07.788 - 00:03:10.162, Speaker B: Own database stack, and then you build.
00:03:10.236 - 00:03:12.970, Speaker A: Whatever thing that you actually want to build.
00:03:13.120 - 00:03:21.334, Speaker B: So that's the state of web development in 95. If you look at it in 2023, that's absolutely not the case.
00:03:21.472 - 00:03:22.894, Speaker A: What you would do is you would.
00:03:22.932 - 00:03:24.894, Speaker B: Say, hey, I'm not building my own.
00:03:24.932 - 00:03:28.622, Speaker A: Servers, I'll use AWS for a lot of it.
00:03:28.756 - 00:03:32.678, Speaker B: You'll say, I'm going to use Oauth.
00:03:32.714 - 00:03:35.218, Speaker A: For authorization, stripe for payments, MongoDB for.
00:03:35.224 - 00:03:43.362, Speaker B: A database, and then focus on the really new thing that you're building. A stat is that pretty much an.
00:03:43.416 - 00:03:47.774, Speaker A: Average consumer application uses 15 fast solutions.
00:03:47.902 - 00:03:49.730, Speaker B: On the back end, right?
00:03:49.800 - 00:03:55.910, Speaker A: Not one, not two. When people talk about, oh, you're going to have many layers in the modular ecosystem and you have to pay each of these.
00:03:56.060 - 00:04:11.614, Speaker B: They haven't seen how web development works. Each consumer application uses 15 SaaS services in the back end. This is already the way the world works. So the thing about these SaaS services, each of them think very narrow, very.
00:04:11.652 - 00:04:16.974, Speaker A: Powerful, just payments, I want to solve payments, I want to solve authorization for.
00:04:17.012 - 00:04:22.962, Speaker B: Social, I want to solve something very narrow, but solve it in the most.
00:04:23.016 - 00:04:34.180, Speaker A: Powerful way possible, right? If you look at basically the arc of civilization, it always bends towards specialization and SaaS services demonstrate an example of that.
00:04:34.710 - 00:04:43.174, Speaker B: And if you look at the crypto economy today, we are basically between 1995 to 2000. So if you want to go build.
00:04:43.212 - 00:04:47.254, Speaker A: An application which will fit as a smart contract on an existing blockchain like.
00:04:47.292 - 00:04:49.434, Speaker B: Ethereum, you could go ahead and do it right.
00:04:49.472 - 00:04:51.434, Speaker A: You could just go like customize your.
00:04:51.472 - 00:04:58.410, Speaker B: Contract and deploy that. It's easy, it's simple, but you're constrained.
00:04:59.310 - 00:05:10.474, Speaker A: Into the language environment, into the set of functionalities, into the gas limits, into the particular distributed system architecture that underlies.
00:05:10.522 - 00:05:13.614, Speaker B: These systems, and then you could say, no, I don't need to do it.
00:05:13.652 - 00:05:25.942, Speaker A: I can actually go be my own thing in let's say build a cosmos chain. You have to build your own validator network, you have to build your own underlying token of value, you have to build your own tac and customize it heavily. This is open source software, know, but.
00:05:25.996 - 00:05:28.774, Speaker B: A software is not the same as.
00:05:28.812 - 00:05:33.542, Speaker A: Just a bunch of SaaS components that you just choose custom parameters and integrate, right?
00:05:33.676 - 00:05:40.090, Speaker B: So you have that and then you can go and deploy it. So there is a powerful option which is to go build your own chain.
00:05:40.670 - 00:05:43.846, Speaker A: There is a less powerful option, just deploy a contract.
00:05:44.038 - 00:05:55.994, Speaker B: But can we get to the SaaS type world where there is a common place, there's lots of protocols on top, and an end user application simply concatenates.
00:05:56.042 - 00:05:59.310, Speaker A: A bunch of these protocols and then deploys it.
00:05:59.460 - 00:06:02.526, Speaker B: So that's our vision for what we.
00:06:02.548 - 00:06:12.094, Speaker A: Are looking forward to. And the first difference, when you think about the difference between the cloud era and the blockchain era, the cutting hyperplane.
00:06:12.142 - 00:06:17.160, Speaker B: The dividing line is decentralized trust. So if you're running all these things.
00:06:17.850 - 00:06:20.374, Speaker A: Any one of these components depends on.
00:06:20.412 - 00:06:25.160, Speaker B: A centralized validation, then you lose the whole benefit of decentralized trust.
00:06:25.530 - 00:06:28.954, Speaker A: So in order to build the crypto economy, all of these have to be.
00:06:28.992 - 00:06:31.206, Speaker B: Run on a decentralized trust network.
00:06:31.398 - 00:06:34.346, Speaker A: And the thing with security, security is.
00:06:34.368 - 00:06:42.246, Speaker B: The weakest of all the things that you depend on. So our vision is shared security on the base layer.
00:06:42.278 - 00:06:48.346, Speaker A: So you have the Ethereum validator set. Eigenvet makes it more flexible and more programmable.
00:06:48.458 - 00:06:56.686, Speaker B: That's the base of trust, on top of which anybody can build permissionlessly new protocols as a service, right?
00:06:56.708 - 00:07:04.014, Speaker A: So basically you just write a protocol. The way you deploy a SaaS service is you write your code and then you send it to AWS, and AWS.
00:07:04.062 - 00:07:05.140, Speaker B: Takes care of everything.
00:07:05.750 - 00:07:08.066, Speaker A: That's roughly the world that we want to build.
00:07:08.168 - 00:07:12.474, Speaker B: You write your protocol, decentralized protocol, tip it to Eigenair.
00:07:12.622 - 00:07:16.358, Speaker A: Eigenvear takes care of where the trust is coming from, making sure that the.
00:07:16.364 - 00:07:19.098, Speaker B: Trusted nodes keep to what they're needing to do.
00:07:19.264 - 00:07:28.586, Speaker A: And then you can now start building, everybody can start building their own specialized, highly powerful services. And then now you concatenate all of.
00:07:28.608 - 00:07:32.026, Speaker B: These services and then build an end user application.
00:07:32.208 - 00:07:34.734, Speaker A: So that's the worldview and vision that.
00:07:34.772 - 00:07:37.760, Speaker B: We are actually kind of building towards.
00:07:38.130 - 00:08:16.854, Speaker D: That's awesome. So what you're powering this from a security standpoint is with staked ETH and restaked ETH. So I mentioned that 200 million ish in TVL. Just looking at some of the statistics here and breaking that down, about half of that is Lido staked ETH. About a quarter of that is rocket pool and CB staked ETH. So Coinbase's LST and then that last chunk there, the last remaining quarter is native staked ETH, which is a really interesting mix there. One question I have is why only limit this to staked ether? Because ultimately what this is really doing is just putting some respected value at risk.
00:08:16.854 - 00:08:32.406, Speaker D: It's Sort of like, in some ways it's kind of similar to proof of stake chain, but why not open the door into a larger basket of assets, maybe like a USDC, or if you wanted to remove some of that centralization, maybe like a dai. What is it just about eth that kind of makes you excited to build around that asset?
00:08:32.538 - 00:08:34.242, Speaker A: I think the way we think about.
00:08:34.296 - 00:08:35.220, Speaker B: It is.
00:08:38.390 - 00:08:49.080, Speaker A: It'S not so important whether it is Eth or USDC or something else, but it's important to build a category of asset on top of which.
00:08:50.090 - 00:08:53.926, Speaker B: The same stake powers all the different services.
00:08:54.028 - 00:09:00.298, Speaker A: I think that is very important. The convergence is very important because convergence is what gives you pool security.
00:09:00.384 - 00:09:02.266, Speaker B: So the way to think about it.
00:09:02.288 - 00:09:10.342, Speaker A: Is, I'll give you two different worlds. In one world, you have 100 protocols, each of which have $1 billion staked.
00:09:10.406 - 00:09:14.382, Speaker B: This is world one. In world two, you have $100 billion.
00:09:14.436 - 00:09:17.130, Speaker A: Staked, which is restaked into all the hundred protocols.
00:09:17.210 - 00:09:22.046, Speaker B: Which world is better? Okay, if you ask this question, then.
00:09:22.228 - 00:09:23.822, Speaker A: What is the benefit of world two?
00:09:23.876 - 00:09:25.614, Speaker B: The benefit of world two is to.
00:09:25.652 - 00:09:27.666, Speaker A: Attack any one protocol, you now need.
00:09:27.688 - 00:09:30.434, Speaker B: To attack the $100 billion in world one.
00:09:30.472 - 00:09:32.066, Speaker A: To attack any one protocol, you only.
00:09:32.088 - 00:09:39.826, Speaker B: Need to attack $1 billion. The second world brings the benefit of pooled security, the first world doesn't.
00:09:40.018 - 00:09:47.346, Speaker A: So what we are very careful about is convergence and the natural place. Because we are building on Ethereum, we are aligned with the Ethereum values.
00:09:47.378 - 00:09:51.602, Speaker B: The natural place to build this on is Ethereum staking.
00:09:51.746 - 00:09:57.686, Speaker A: And so that's why we are focusing on that as a kind of a natural shelling point, because what we don't.
00:09:57.718 - 00:09:59.834, Speaker B: Want to have is some protocol saying.
00:09:59.872 - 00:10:02.734, Speaker A: I only take steed. Some protocol saying I only take, like.
00:10:02.772 - 00:10:06.026, Speaker B: USDC, somebody saying I want to have bonds staked.
00:10:06.218 - 00:10:08.800, Speaker A: These will all happen in due course and time.
00:10:09.170 - 00:10:14.014, Speaker B: But what we don't want to miss is that big chunk of stake, which.
00:10:14.052 - 00:10:16.866, Speaker A: Is then shared security for all the different services.
00:10:17.048 - 00:10:20.626, Speaker B: That is very important. So it's not so much.
00:10:20.728 - 00:10:22.434, Speaker A: That's why I think even the word.
00:10:22.472 - 00:10:24.030, Speaker B: Restaking is a misnomer.
00:10:24.110 - 00:10:26.546, Speaker A: It's really permissionless, programmable staking.
00:10:26.578 - 00:10:30.854, Speaker B: That's what we're building. When you're staking, you're normally staking into.
00:10:30.892 - 00:10:33.014, Speaker A: A condition that the protocol kind of.
00:10:33.052 - 00:10:35.378, Speaker B: Enshrines into the protocol.
00:10:35.554 - 00:10:46.534, Speaker A: And what we did is just break that open and say it's programmable, and it's programmable permissionlessly. Anybody can come and program what the staking conditions are. And I think that is the core.
00:10:46.582 - 00:10:47.690, Speaker B: Thing that we are building.
00:10:47.840 - 00:10:50.826, Speaker A: So it's absolutely true that we could open it up to all kinds of.
00:10:50.848 - 00:10:53.386, Speaker B: Assets, but it is basically this shared.
00:10:53.418 - 00:10:58.154, Speaker A: Security versus dispersed security that we want to avoid. That's why we have the dual staking.
00:10:58.202 - 00:11:03.626, Speaker B: Model, where if you're building a new service, you can rely on some portion.
00:11:03.658 - 00:11:08.434, Speaker A: Of security coming from ETH and some portion of security coming from your own. But we do want to keep that.
00:11:08.472 - 00:11:12.158, Speaker B: Portion of shared security coming from a common pool.
00:11:12.334 - 00:11:15.278, Speaker A: That's what makes this really powerful.
00:11:15.374 - 00:11:58.414, Speaker D: All right, everyone, I'm excited to tell you a little bit more about Crypto's flagship institutional conference, the 2024 Digital Asset Summit in London. The UK's open regulatory environment has laid the groundwork for growing institutional adoption. DAS brings together over 600 institutions that manage a collective $800 billion in assets. So there's no better place to hear perspectives on digital assets than straight from the world's largest capital allocators. This year's speakers lineup is fantastic, and we're going to hear insights on macro trends, RWA adoption and utility, the fluid regulatory landscape, the evolution of stablecoins, and more. Between the all star speakers and the relevant topics, DaS 2024 is a can't miss event for anybody interested in the growth and maturation of our industry. Hit the link in the show notes to secure your tickets and be sure to use the promo code Zero X 20 for 20% off.
00:11:58.414 - 00:12:01.230, Speaker D: I look forward to seeing you all at DAs London in 2024.
00:12:01.380 - 00:12:38.990, Speaker E: I had a sort of follow up question to that concept of shared security already, right? So today, Eigen layer has deposit caps for Stakedeep, rocket proof CVE, and sort of native stakedeep. I guess there's two questions there. First, will we ever reach a point where there are no deposit caps and individuals can deposit as much as they want? And the second question is, in that scenario, what if, for example, for some reason there's some market dynamics where 100% of the restaked deep was only like Lido's staked deep? Would you see that as something that is either problematic or requires intervention?
00:12:40.210 - 00:12:43.970, Speaker B: Yeah, these are complex.
00:12:46.150 - 00:12:49.394, Speaker A: Dynamics that we cannot predict. So it's possible that something like that.
00:12:49.432 - 00:12:54.210, Speaker B: Happens and we have to steer the protocol.
00:12:56.470 - 00:13:14.874, Speaker A: Ethereum is, as a protocol, I think Eigen layer is somewhat different from Ethereum right now. For example, Ethereum wants that Lido should have a good share, but not like more than a certain percentage. That's what Ethereum wants. But Ethereum has no tools at its.
00:13:14.912 - 00:13:18.570, Speaker B: Disposal to actually get that outcome.
00:13:19.230 - 00:13:30.282, Speaker A: Whereas I think Eigenve, the goal is to create a shared security mechanism for decentralized trust. So we will have, over time, mechanisms.
00:13:30.346 - 00:13:34.434, Speaker B: To shepherd this in various ways, because.
00:13:34.472 - 00:13:38.062, Speaker A: There is going to be like a decentralized governance process which can actually exert.
00:13:38.126 - 00:13:45.010, Speaker B: Judgment on these decisions, because it is really, from our point of view, the.
00:13:45.080 - 00:13:49.954, Speaker A: Eigenveier governance over time, as it becomes more and more decentralized and involves various.
00:13:50.002 - 00:13:56.774, Speaker B: Stakeholders, has to balance the different sides of the marketplace. So we have stakers on the one.
00:13:56.812 - 00:13:58.278, Speaker A: Side, we have node operators on the.
00:13:58.284 - 00:14:00.378, Speaker B: Other side, we have services on the other side.
00:14:00.544 - 00:14:09.494, Speaker A: And all of these three, actually, you can even think of it as takers, operators and AVS service creators. Avs is this idea of privately validated.
00:14:09.542 - 00:14:12.726, Speaker B: Service, which is anybody can build a new protocol.
00:14:12.758 - 00:14:27.742, Speaker A: You can even think of it as like protocol as a service, just like the SaaS economy in the cloud, which is basically protocol. As a service, you can take your protocol, throw it into Eigenvear. And Eigenvear makes sure that it's being run through the decentralized validation mechanism.
00:14:27.886 - 00:14:42.582, Speaker B: But these three segments, stakers, operators and avSs, are coordinating to offer a service to the consumer of these avs. Right?
00:14:42.636 - 00:14:49.270, Speaker A: Like imagine if the avs is an oracle, somebody's consuming the oracle. Imagine if it is some other thing that is a different consumer.
00:14:49.350 - 00:14:57.862, Speaker B: But the important thing is Eigen layer governance serves as a place to coordinate.
00:14:57.926 - 00:15:18.466, Speaker A: Between these different sites. So that is what the governance's goal is. And to maximize the long term utility of this platform, the governance has to engage in complex negotiation between these multiple sites. And that's the nature of the platform. And in fact, we had already stated that this is the nature of our.
00:15:18.488 - 00:15:22.738, Speaker B: Iconair platform, is whether when somebody is.
00:15:22.744 - 00:15:27.054, Speaker A: Building an ABS or a service, whether they treat all liquid staking tokens equally.
00:15:27.102 - 00:15:28.260, Speaker B: Is up to the service.
00:15:28.890 - 00:15:34.854, Speaker A: That's an example of how we let that side express its preference. You could say, I only want 50%.
00:15:34.892 - 00:15:40.034, Speaker B: Of the stake to come from steep. Somebody could say that if they're building.
00:15:40.092 - 00:15:41.306, Speaker A: A service, they have the power to.
00:15:41.328 - 00:15:43.126, Speaker B: Express, or somebody will say, I don't.
00:15:43.158 - 00:15:44.342, Speaker A: Care, I just need capital.
00:15:44.406 - 00:15:49.722, Speaker B: Capital is capital. But the point is, capital is only.
00:15:49.776 - 00:16:02.126, Speaker A: One side or one aspect of decentralized trust. Decentralization itself is another aspect of decentralized trust. And for a given service, I've given this example before, but I think it's a pertinent example.
00:16:02.308 - 00:16:04.346, Speaker B: Imagine I'm doing secret sharing.
00:16:04.538 - 00:16:07.698, Speaker A: I want to take a secret and then spread it into small portions that.
00:16:07.704 - 00:16:15.486, Speaker B: Are held by different nodes. I want these nodes to be as independent as possible. It's not enough that they have staked.
00:16:15.518 - 00:16:19.506, Speaker A: A lot, because what if they all meet in a private room and disperse.
00:16:19.538 - 00:16:22.598, Speaker B: That secret to each other? I wouldn't know.
00:16:22.764 - 00:16:29.494, Speaker A: And to make it as collusion resistant, actually having many distinct parties as possible who are normally not coordinating in any.
00:16:29.532 - 00:16:32.186, Speaker B: Way is what brings us that property.
00:16:32.368 - 00:16:40.922, Speaker A: And so somebody building an avs might say, I want very, very decentralized notes, and that's the right kind of thing that they should ask for it.
00:16:41.056 - 00:16:44.906, Speaker B: So over time, the eigen layer becomes.
00:16:44.938 - 00:16:47.194, Speaker A: A coordination mechanism for people to express.
00:16:47.242 - 00:16:52.754, Speaker B: These complex preferences and to actually, that.
00:16:52.792 - 00:16:56.510, Speaker A: Creates a certain derivative or certain pressure.
00:16:56.590 - 00:16:59.090, Speaker B: For certain amount of decentralization.
00:17:00.230 - 00:17:03.842, Speaker A: And it depends whether people want decentralization or not.
00:17:03.896 - 00:17:05.314, Speaker B: And if people are happy with their.
00:17:05.352 - 00:17:09.414, Speaker A: 30 nodes, then, or like 100 nodes, or maybe next year, Lido becomes 1000.
00:17:09.452 - 00:17:10.694, Speaker B: Nodes and that's good enough.
00:17:10.812 - 00:17:14.854, Speaker A: We don't know. These are all complex dynamics for the marketplace to figure itself out.
00:17:14.972 - 00:17:41.642, Speaker D: What's up, everyone? As we explore today's blockchain landscape, let's take a moment to recognize Hexons, the premier cybersecurity provider in web three. Hexons is trusted by tier one projects like Polygon, including a security review of the new Polygon, ZKE, EVM, Mantle, Risk, zero, Lido, one inch, Newbank, and more. Get a deep dive into your technology stack with the most comprehensive analysis and cybersecurity consulting. With over $55 billion secured, they cover everything from smart contracts to blockchain to web two pen tests.
00:17:41.706 - 00:18:02.258, Speaker C: There has been nearly $7 billion of total value hacked in crypto's nascent history. So it's safe to say that your team has a lot on the line. Don't skip out. Take your security seriously and choose hexans. Don't forget to mention zero x research for a free web two pen test with your partnership, and you can reach out to Hexans at Hexens IO or find them on the ground at Devconnect. Without further ado, let's get back to today's episode.
00:18:02.354 - 00:18:28.874, Speaker D: So I want to dive into kind of some of the interesting research you guys have done around the ABS landscape. But before we do that, one of the things you mentioned was kind of the parties involved in this dynamic here. So you have operators, stakers, and the ABs themselves. I think stakers are pretty straightforward, and then abs are like these applications that are getting built on top of this technology. But can you expand a little bit on the role of the operator and what exactly that role entails, as well as who kind of plays that role?
00:18:29.002 - 00:18:32.240, Speaker B: Yeah, you can think of.
00:18:32.610 - 00:18:39.790, Speaker A: Internally, we think of eigenair as the coordination engine, the coordination mechanism for open innovation.
00:18:39.870 - 00:18:41.182, Speaker B: So the principle.
00:18:41.246 - 00:18:44.946, Speaker A: The goal that we're optimizing is open innovation. We want people to be able to.
00:18:44.968 - 00:18:54.178, Speaker B: Come and build complex things with very low barrier to entry, because innovation is, I think, one of the most prototypical.
00:18:54.354 - 00:19:01.466, Speaker A: Non zero sum games, is the way in which you take something that doesn't exist, it's not a resource, and then.
00:19:01.488 - 00:19:03.530, Speaker B: Make it into a resource, like taking.
00:19:03.600 - 00:19:08.714, Speaker A: Oil and making it into energy, taking air and making it into spectrum, and so on.
00:19:08.832 - 00:19:11.566, Speaker B: So that's the goal, to be the.
00:19:11.588 - 00:19:14.170, Speaker A: Coordination infrastructure for open innovation.
00:19:14.330 - 00:19:17.866, Speaker B: And if you think about the role.
00:19:17.898 - 00:19:22.706, Speaker A: Of operators so broadly, if you think about what is needed to build the.
00:19:22.728 - 00:19:25.620, Speaker B: Coordination mechanism for open innovation, think about.
00:19:27.430 - 00:19:29.538, Speaker A: Who'S bringing the resources, who's bringing the.
00:19:29.544 - 00:19:31.794, Speaker B: Capital, who's bringing the ideas. Right?
00:19:31.832 - 00:19:38.214, Speaker A: Like, that's the three different components that go into the stakers are bringing in the capital to underwrite and promise that.
00:19:38.252 - 00:19:39.826, Speaker B: The service is working correctly.
00:19:39.938 - 00:19:47.320, Speaker A: The operators are bringing the resources and the infrastructure to actually run these things, the computational infrastructure, and then the.
00:19:49.310 - 00:19:50.060, Speaker B: Services.
00:19:50.750 - 00:19:54.666, Speaker A: The avs creators, are actually coming up with the ideas and the code that.
00:19:54.688 - 00:19:55.834, Speaker B: Actually make this work.
00:19:55.952 - 00:20:10.862, Speaker A: And all these three are coordinating. They're working together. It's this code plus this stake, plus this node. Operations together is what makes the service. So, again, there being the coordination mechanism for all these three sites to converge and then offer a service.
00:20:10.996 - 00:20:16.206, Speaker B: So that's the core principle. So if you're looking at who can.
00:20:16.228 - 00:20:42.620, Speaker A: Be an operator, an operator is the permissionless role in the eigenvear ecosystem. So anybody can be an operator. You can be a staker, and you can be your own operator, and you delegate to yourself. But you may be like, yeah, no, I already trust ABCD for some other purpose, for custody, for some other thing that I'm already using, whether it's a coinbase, whether it's a figment, whether it's a p to p, like whatever is the kind of operator that you like, you're already using them. You may say, yeah, I'm going to delegate to them.
00:20:43.310 - 00:20:48.198, Speaker B: And the trust for delegation is not in protocol.
00:20:48.374 - 00:20:53.086, Speaker A: So there is no mechanism that says that this delegate is going to be nice to you or not nice to.
00:20:53.108 - 00:20:55.360, Speaker B: You or anything like that. It's like.
00:20:57.330 - 00:21:02.958, Speaker A: You find a service provider who is actually trustworthy and then you.
00:21:03.044 - 00:21:05.794, Speaker B: Give them to actually run your services for you.
00:21:05.912 - 00:21:12.466, Speaker A: So that's the delegation mechanism. Other people can build more complex coordination mechanisms on top, and we'll see some.
00:21:12.488 - 00:21:19.346, Speaker B: Of them come up. For example, there is people building trusted.
00:21:19.378 - 00:21:24.754, Speaker A: Execution environments on top of Eigen layer. So you can run inside a hardware.
00:21:24.882 - 00:21:28.966, Speaker B: Enclave, the software, particularly a software we.
00:21:28.988 - 00:21:40.630, Speaker A: Call anti slasher, which basically simulates what the slashing contract is going to do, and then tell you that, okay, if I sign this, I'm not going to get slashed. And this is run inside a trusted execution environment.
00:21:40.710 - 00:21:47.694, Speaker B: That means that as a consumer, as a staker, I can actually trust a.
00:21:47.732 - 00:21:57.586, Speaker A: Node operator without knowing who they are. So there are all these ways in which you can reduce the barrier of trust between stakers and operators. But this is a market mechanism, this.
00:21:57.608 - 00:21:59.490, Speaker B: Is not in protocol for ion.
00:22:01.190 - 00:22:07.494, Speaker A: So the role of an operator is a permissionless. Anybody can volunteer to provide nodes and.
00:22:07.532 - 00:22:10.118, Speaker B: Run various services, and you could be.
00:22:10.124 - 00:22:12.120, Speaker A: Your own node, you can delegate to somebody.
00:22:12.890 - 00:22:16.274, Speaker B: Some avs, some services will have caps.
00:22:16.322 - 00:22:29.898, Speaker A: On how many nodes they want to participate because of, if you're running a secure multiparty protocol, like the communication complexity depends on how many nodes and so on. Some protocols may have no limits. It's kind of taking a middle road.
00:22:29.984 - 00:22:38.174, Speaker B: Between the cosmos approach of in protocol delegation to the Ethereum approach of like.
00:22:38.292 - 00:22:45.634, Speaker A: I don't even know if you're delegating, I know you're delegating. And I want to bring out. So surface information and optionality that is.
00:22:45.672 - 00:22:48.418, Speaker B: The Eigen layer view is you want.
00:22:48.424 - 00:22:51.422, Speaker A: To surface the information that these are different node operators.
00:22:51.566 - 00:22:55.870, Speaker B: And then as an avs, you can decide how to reward.
00:22:55.950 - 00:22:59.874, Speaker A: For example, a service may say, I'm going to cap like a per operator.
00:22:59.922 - 00:23:03.446, Speaker B: Reward to 5%, 10%, whatever that is.
00:23:03.468 - 00:23:06.210, Speaker A: So that already drives different kinds of behavior.
00:23:06.290 - 00:23:09.098, Speaker B: So you can have very sophisticated market.
00:23:09.184 - 00:23:11.290, Speaker A: Discovery for what kinds of things work.
00:23:11.360 - 00:23:13.770, Speaker B: As opposed to enshrining these in protocol.
00:23:14.350 - 00:23:50.520, Speaker E: Gotcha yeah, no, I think it's really interesting how Eigen layer seems very simple, yet at the same time, it's this very complex coordination game between various different stakeholders. And so one obvious question that I have to ask is that governance is a very important part of coordination. And so the question is, how will Eigen layer governance work? I think right now, at least for, let's say, Dapps, we're very used to a one token, one vote sort of governance model. And sort of what does governance for Eigenvea look like, whether that's now three months later?
00:23:52.490 - 00:24:09.194, Speaker A: We are in early stages, so I don't think we are in a position to dive deep into it. But it is something we want to give a lot of thought to about how to bring these different parties together, what are the inputs we need from these different parties, how to make sure.
00:24:09.392 - 00:24:10.140, Speaker B: That.
00:24:13.890 - 00:24:17.310, Speaker A: The coordination mechanism remains solid.
00:24:17.810 - 00:24:20.906, Speaker B: But it is too early to do a deep dive.
00:24:21.018 - 00:24:28.930, Speaker A: Hopefully, I or somebody else can come back on and do a deeper dive on governance, but it's too early for us to talk about it.
00:24:29.000 - 00:24:30.690, Speaker B: It's in R D right now.
00:24:30.840 - 00:24:55.740, Speaker D: Okay, that's fair. And yes, absolutely, we'd love to have you back on to kind of dive into things. It was always a pleasure getting some of the latest and greatest with Eigen later, but diving into what can be built with this kind of side of things. So maybe, Shabik, if you can give us a rundown of some of the cool research you've been doing on the AVs side of things and what that landscape is looking like, as well as some of the potential things that are either ideas at this stage or actively getting built.
00:24:56.910 - 00:24:57.418, Speaker A: Yeah.
00:24:57.504 - 00:25:35.202, Speaker F: So one of the major category of services that people are trying to build is something called roll up services. So basically, there are various aspects of roll ups for which you can inherit security from Ethereum via Eigen layer. So, for example, if you want data availability. So we are building eigenda in house, which gives like, hyper scale data availability while inheriting security from Ethereum. At the same time. Then there is decentralized sequencing. For example, espresso is actively building a decentralized sequencer by also having a dual staking model on top of eigen layer.
00:25:35.202 - 00:26:08.820, Speaker F: So that's one more. There are like certain other protocols, certain other teams who are building bridges on top of Eigen layer. For example, Lagrange. They are actively building the outbound bridging. So that's a very cool project. They are also trying to get consumers for that bridge. So this is the aspect of the Avs consumer side, the fourth aspect that remains hidden from most of the discussion, but that's another category of actor that we need to care in general.
00:26:08.820 - 00:27:09.826, Speaker F: And then there is something called fast finality layer, basically in Ethereum, right? If you want to get finality, you have to wait for two epochs on average. But can you get finality much faster? So with Eigenver you can get an economic crypto, economic security towards that kind of fast finality. So this is like a roll up services. People are also building watcher networks. So there's this team from Princeton called witness chain who are building a watcher network for generating challenges to optimistic roll up services. If there is malicious execution and something, it's just one aspect, but there can be watcher networks for many other proposals, many other protocols. Then people are building kind of applied cryptography oriented applications like fhe or secret sharing that Shiram was mentioning.
00:27:09.826 - 00:27:46.580, Speaker F: So how to distribute shares across a decentralized set of actors, and while also trying to prevent collusion among them, then there has been like a recent interest in trying to run AI inference engines on top of Eigen layer. So here you need to guarantee. So since it's a decentralized, there are a lot of actors who are running the inference engine. So you need to guarantee against program integrity like they're running the right model that you want. It's not like some other model. They are running with some other parameters. So there is this program integrity you need.
00:27:46.580 - 00:28:24.022, Speaker F: People are building projects around that. So that will be really cool. How AI and crypto can, the marriage between that AI and crypto, it will be really awesome. And hopefully in future, people can extend it to federated training, not having one entity do all the training and get all the models, but have data sets coming from different people, having a market model around data sets also, because if you have data, you want to make money out of your data, right? You're supplying data to someone to train your model, so you want to make money out of that. So having economics around that, figuring out it will be really exciting.
00:28:24.086 - 00:28:59.450, Speaker D: Also, I love how there's a couple different categories that you're all working around, and the AI stuff is pretty interesting. I just saw Akash. We recently talked to Greg Asuri, and they're training a model, obviously on Akash. So it's like a fully decentralized model being trained for the first time, which is super, super exciting. So it'd be really exciting to kind of see how this pairing between crypto and AI really evolves. But one of the other interesting things you mentioned was what espresso is doing with the dual staking model. Can you zoom in on that specific example and explain what the dual staking model looks like and why this is really beneficial for espresso?
00:29:00.030 - 00:29:58.902, Speaker F: So in their dual staking model, so they have a parallel consensus protocol going on, they call it hotshot. So now in hotshot, there can be two types of nodes. One is the native eth staker nodes, and another could be their native token nodes. So suppose you have restaked axe it and opted into the espresso protocol. You have some corresponding stake weighted in the consensus protocol. If you put x native token of espresso, then that will be like some stake weighted around that, and the consensus protocol will consider that weighted stake. And whenever it's finalizing the proposed block, so it will consider that weighted stake as the value for deciding that has the 66% threshold has been achieved or not on that newly proposed block.
00:29:58.902 - 00:30:31.826, Speaker F: So this is the dual staking model at an architecture level. So what is the benefit they are getting? So by just having ETH restaking, you can get benefit around if downward spiraling of tokens. So it's a protection against that. So you want to protect the, so there are two aspects. There is a protocol, there is a token, right? The native token of the protocol. So you want to secure, say make the protocol safe. So you can use the ETH to make the protocol safe.
00:30:31.826 - 00:30:44.460, Speaker F: And there's this token aspect of the protocol, which by using it as part of the dual staking, you can bring additional utility to that token. Both the benefits are there.
00:30:45.790 - 00:31:28.780, Speaker E: Following up very quickly on that duo token staking model, right. Sometimes it feels to me that value accrual in crypto is a zero sum game. For example, espresso only used restake deep. Then all of the sequencer profits would go to, for example, espresso. And for example, if there was $10 million of sequencer profits between the shared sequencer that connects to, for example, arbitram optimism, then perhaps only 5 million can go to arbitrum. 5 million can go to whatever token espresso chooses to use. How do you guys think about this sort of value accrual problem with Eigen layer or in a generic dual token staking model?
00:31:29.230 - 00:31:30.998, Speaker A: So when you have a dual token.
00:31:31.094 - 00:31:36.810, Speaker B: Usually the native token is what is performing the governance on these systems.
00:31:37.870 - 00:31:40.206, Speaker A: And you can ask what are the.
00:31:40.228 - 00:31:44.510, Speaker B: Benefits of the first point is because.
00:31:44.660 - 00:31:46.830, Speaker A: That is the token of governance.
00:31:48.130 - 00:31:50.846, Speaker B: You can see that over time, if.
00:31:50.868 - 00:31:57.538, Speaker A: There is no benefit in using dual staking, one can steer towards more and more towards a single staking model.
00:31:57.624 - 00:31:58.066, Speaker B: Right?
00:31:58.168 - 00:31:59.602, Speaker A: So one of the nice things about.
00:31:59.656 - 00:32:02.734, Speaker B: Eigen layer is it's not a binary switch.
00:32:02.782 - 00:32:08.822, Speaker A: It's not like, do I need single staking or dual staking? It's about how much dual staking do I need?
00:32:08.876 - 00:32:11.334, Speaker B: And you can say, yeah, I'm only.
00:32:11.372 - 00:32:14.722, Speaker A: Giving 5% of my fees to each staking.
00:32:14.866 - 00:32:19.734, Speaker B: It depends on what you're getting from it. Okay, so that's the first point.
00:32:19.772 - 00:32:25.126, Speaker A: So because the governance token is the one that's going to have control over how much fees is going to flow.
00:32:25.158 - 00:32:29.466, Speaker B: Between these two quorums, really the value accrual is, if you look at the.
00:32:29.488 - 00:32:33.226, Speaker A: Long term horizon, the value accrual is fundamentally towards the governance token.
00:32:33.258 - 00:32:35.246, Speaker B: It is not towards any other system.
00:32:35.428 - 00:32:42.414, Speaker A: So other systems are there only to the extent that it adds value to them, whether eigen layer or something else.
00:32:42.532 - 00:32:44.542, Speaker B: Is there only to the extent that it adds value.
00:32:44.596 - 00:32:46.650, Speaker A: And that's, I think the correct principle.
00:32:46.730 - 00:32:50.946, Speaker B: For building open marketplaces is that to.
00:32:50.968 - 00:32:52.418, Speaker A: The extent that they provide value, they.
00:32:52.424 - 00:32:53.026, Speaker B: Should be using it.
00:32:53.048 - 00:32:54.114, Speaker A: To the extent that they don't provide.
00:32:54.152 - 00:33:00.246, Speaker B: Value, they should not be using it. And the thing with the dual quorum model is, and then you can come.
00:33:00.268 - 00:33:01.750, Speaker A: To the question of why should somebody.
00:33:01.820 - 00:33:05.478, Speaker B: Continue to use dual token model in.
00:33:05.484 - 00:33:07.766, Speaker A: The long run versus just use it.
00:33:07.788 - 00:33:09.314, Speaker B: As a bootstrapping mechanism.
00:33:09.442 - 00:33:12.394, Speaker A: So firstly, there's value in it as a bootstrapping mechanism, right?
00:33:12.432 - 00:33:17.100, Speaker B: So you want to get more economic security than you can offer by yourself.
00:33:17.630 - 00:33:19.770, Speaker A: But there are also other reasons to.
00:33:19.840 - 00:33:21.760, Speaker B: Keep the dual staking model.
00:33:23.250 - 00:33:29.118, Speaker A: Eventually. For example, imagine that there's a whole bunch of services that a given application.
00:33:29.204 - 00:33:33.582, Speaker B: Uses, and all of them have one.
00:33:33.636 - 00:33:37.626, Speaker A: Site of security coming from each staking.
00:33:37.658 - 00:33:48.614, Speaker B: And the same large token stakers restaking into all of these things, then you know that to compromise that service, to.
00:33:48.652 - 00:33:50.838, Speaker A: Compromise that particular application, you have to.
00:33:50.844 - 00:33:56.834, Speaker B: Compromise that quorum that's needed. So this becomes a crucial trust assumption.
00:33:56.882 - 00:34:05.334, Speaker A: That to compromise this application, I have to compromise this large eth token quorum.
00:34:05.382 - 00:34:07.846, Speaker B: Not any of these separate token quorums.
00:34:07.878 - 00:34:09.654, Speaker A: Because just doing that is not sufficient.
00:34:09.702 - 00:34:11.180, Speaker B: To compromise the system.
00:34:11.630 - 00:34:17.934, Speaker A: So you have this chat security benefit. So over time, if this chat security benefit is not adding up to what.
00:34:17.972 - 00:34:24.778, Speaker B: It is, say, I don't need this chat security. I just saw my own way, totally. That's acceptable.
00:34:24.954 - 00:34:29.906, Speaker A: And so fundamentally, I think if you look at the value of the future.
00:34:30.008 - 00:34:32.626, Speaker B: Kind of value of the token, which.
00:34:32.648 - 00:34:34.014, Speaker A: Is due to the future cash flows.
00:34:34.062 - 00:34:38.038, Speaker B: Or profits or whatever the mechanism, I.
00:34:38.044 - 00:34:39.382, Speaker A: Think it doesn't fundamentally change.
00:34:39.436 - 00:34:47.778, Speaker B: Eigenve is just optionality to increase it and to also protect it against potential debt spirals.
00:34:47.874 - 00:34:55.578, Speaker A: So one of the debt spiral of endogenous staking is as your stake goes down in value and the economic security.
00:34:55.664 - 00:34:59.034, Speaker B: Goes down, people consuming your service may.
00:34:59.072 - 00:35:08.010, Speaker A: Want to disconnect, because if economic security is what they were relying on in the first place, now it has less economic security, so less ability to support new applications.
00:35:08.170 - 00:35:32.390, Speaker B: And as applications disintegrate out of the kind of service, you actually have a kind of positive feedback cycle in the negative direction, right? So you basically kind of can collapse, whereas with restaking, you have like one side which is provided by each staking. And even if your token goes down value, you still have each value.
00:35:32.460 - 00:35:35.798, Speaker A: And as long as you're able to pay enough to compensate for the opportunity.
00:35:35.884 - 00:35:38.374, Speaker B: Cost of that capital, people are not.
00:35:38.412 - 00:35:49.740, Speaker A: Whereas in the native token quorum, people are holding your token and getting exposure to the downward price moment, whereas in this one they just need to be paid for the opportunity cost of restaking into your service.
00:35:50.190 - 00:35:51.838, Speaker B: And so I think it is a.
00:35:51.844 - 00:36:01.534, Speaker A: Protection against death files that may occur in protocols. It's a protection, you get the benefit of chat security. If one quorum is common across all.
00:36:01.572 - 00:36:05.220, Speaker B: The different services, you get all these benefits over time.
00:36:05.670 - 00:36:10.498, Speaker A: If those benefits are not significant, you may start getting composability benefits.
00:36:10.584 - 00:36:16.706, Speaker B: Right? So because all of these are in common trust zone, an application will be.
00:36:16.728 - 00:36:26.598, Speaker A: Much more interested to integrate, because it's a common trust assumption to integrate with all these services. So these are the benefits that you get by sticking to eigen layer in.
00:36:26.604 - 00:36:31.546, Speaker B: The long run if it takes off. Right? So that's the answer, yeah, I think.
00:36:31.568 - 00:37:24.182, Speaker E: It'S really interesting how Eigen layer can also act as like a backstop there. And I think it's important to remember that abs do have the power to sort of choose how much eve is contributed as shared security to the value of their network. Right? And there's another interesting point you mentioned there, that if it, for example, doesn't make sense for a middleware protocol anymore, then they can stop using Eigen layer at any point of time. I wanted to ask the opposite question of that. Is there like a service level agreement for how long a validator has to secure a protocol leveraging eigenve? Or can the validator stop securing it whenever they want? Thinking of like a slightly ridiculous example, like there's a large oracle protocol, they do something that's really malicious, or they did something that's really bad socially. In the real world. And then all validators say, that's not good behavior.
00:37:24.182 - 00:37:28.780, Speaker E: I don't want to align with that anymore. I'm going to put out right now. How would something like that play out?
00:37:29.470 - 00:38:00.840, Speaker A: Right now? Our mechanisms are instantaneous, which means you opt in, you have like a service period or an unstaking period. You have to stay for that period. But beyond that you don't have to stay. But we are already doing r and D on longer term commitment. So I stake, and then I make a promise that I will stay not only for this period, but also for a much longer period. Why would I do that now? You would give me additional APR or whatever, because you need some amount of stake to stick with you through.
00:38:03.050 - 00:38:04.358, Speaker B: The good and bad.
00:38:04.524 - 00:38:12.374, Speaker A: So you can actually have these mechanisms programmed into Eigen layer already out of protocol.
00:38:12.502 - 00:38:15.386, Speaker B: But we'll start giving more and more.
00:38:15.408 - 00:38:17.562, Speaker A: Functionality in protocol for these things.
00:38:17.696 - 00:38:25.738, Speaker F: It is somewhat similar to reserve bandwidth in Amazon EC two. So it's like reserving security for a longer horizon.
00:38:25.914 - 00:38:58.150, Speaker A: Yeah. So the idea there is that when you stake, you make a commitment that you're not going to withdraw for some amount of time from these services. And so by making this additional commitment, you get additional payment and an out of protocol, out of eigenve way to do this is to say that you are giving rewards asymmetrically to stakers who have been around in your protocol for longer periods. So that creates posture incentives to remain. But through eigenve also, if it becomes enshrined in protocol, you can also enforce.
00:38:58.510 - 00:39:07.100, Speaker B: That you cannot go anywhere else. So these are things under research, but over time they can be done.
00:39:08.030 - 00:39:13.550, Speaker A: To answer your other question, which is whether validators don't like somebody and then they can unravel.
00:39:14.610 - 00:39:20.894, Speaker B: I think that this is not the default type of thing that we expect to happen.
00:39:21.012 - 00:39:22.898, Speaker A: The thing that we expect to happen.
00:39:22.984 - 00:39:28.162, Speaker B: Is people unstake because there is a.
00:39:28.216 - 00:39:30.914, Speaker A: More lucrative staking opportunity.
00:39:31.032 - 00:39:41.430, Speaker B: And we think actually restaking lessens this kind of like a dynamic. Because you don't have to choose between.
00:39:41.500 - 00:39:53.180, Speaker A: Staking to service one versus service two. You're staking to all the services that you actually want. So you're not choosing between staking to service one versus service two. So your capital is being allocated across all of these services.
00:39:55.710 - 00:40:00.586, Speaker B: So the dynamic with eigenve is if your operating cost, if you're not able.
00:40:00.608 - 00:40:15.950, Speaker A: To make fees more than your operating cost, then you absolutely will opt out. And I think that's the right thing you should do, because why are you wasting your time and energy doing something that is not worth your while. But that is a very different level.
00:40:16.020 - 00:40:18.340, Speaker B: Of when you will opt out than.
00:40:18.790 - 00:40:20.322, Speaker A: If it's just like, a race between.
00:40:20.376 - 00:40:22.462, Speaker B: Hey, I have, like, 32 eats staked.
00:40:22.526 - 00:40:26.622, Speaker A: I have to choose between Dan's protocol and ran's protocol and Shawwick's protocol.
00:40:26.766 - 00:40:29.358, Speaker B: That puts me at, like, oh, Shawik.
00:40:29.374 - 00:40:30.302, Speaker A: Is the most profitable.
00:40:30.366 - 00:40:31.386, Speaker B: Screw Dan and ran.
00:40:31.438 - 00:40:42.118, Speaker A: Right? That is exactly what we don't want. That's what restaking. That's why I think shard security is the right framework for thinking about it, rather than restaking.
00:40:42.214 - 00:40:44.742, Speaker B: The idea is that I have a pool.
00:40:44.886 - 00:40:58.480, Speaker A: Instead of securing 100 million to Dan, 100 million to rent, and 1 billion to Shawik, because Shawwick is more attractive, I'm going to kind of put the 1.2 billion in all three of you, so all of us are better off.
00:40:59.810 - 00:41:14.626, Speaker D: Could you elaborate a little bit more on exactly how that mechanism works? Because I don't think I'm following how one deposit equals. I'm securing as, like, a pool versus an individual operator or an individual abs.
00:41:14.728 - 00:41:21.702, Speaker B: I would say, yeah. So imagine there's, like, simple numbers, like.
00:41:21.756 - 00:41:27.334, Speaker A: 10 billion, and 10 billion is. And there are ten protocols. There are two different models one can.
00:41:27.372 - 00:41:30.090, Speaker B: Imagine, and there are ten protocols.
00:41:30.430 - 00:41:38.762, Speaker A: Each protocol gets allocated its own sub pool, says, oh, this 1 billion securing that protocol, that 1 billion securing this protocol, and so on.
00:41:38.816 - 00:41:42.198, Speaker B: And they have no relationship with each other.
00:41:42.224 - 00:41:44.942, Speaker A: This is one model of the world, right?
00:41:45.076 - 00:41:47.166, Speaker B: In this world, to attack any one.
00:41:47.188 - 00:41:48.874, Speaker A: Protocol, I need to acquire a capital.
00:41:48.922 - 00:41:52.334, Speaker B: Of half of 1 billion and then.
00:41:52.372 - 00:41:56.226, Speaker A: Go and make a profit more than the half of 1 billion, because I'm going to get slashed for that half.
00:41:56.248 - 00:41:57.970, Speaker B: Of 1 billion, right?
00:41:58.040 - 00:42:05.460, Speaker A: But in the pooled world, what happens is, I have $10 billion staked, and every staker is restaking into every service.
00:42:06.070 - 00:42:08.434, Speaker B: That's what it means. By tab.
00:42:08.482 - 00:42:12.886, Speaker A: Security is every staker is restaking into every service. This is not a default or a.
00:42:12.908 - 00:42:16.006, Speaker B: Requirement in eigenve, but if this happens.
00:42:16.108 - 00:42:24.794, Speaker A: This could happen because people want to participate in many services. And if computational modelneck is not limiting them, they will restake into many services.
00:42:24.992 - 00:42:26.650, Speaker B: So if they restake into many services.
00:42:26.720 - 00:42:30.698, Speaker A: What'S happening is that every staker is restaking into every service.
00:42:30.864 - 00:42:33.150, Speaker B: So if an attack happens on service.
00:42:33.220 - 00:42:35.294, Speaker A: One or service two, or service any.
00:42:35.332 - 00:42:43.726, Speaker B: One service, I'm going to be able to slash that service will be able to slash all the violators, which could.
00:42:43.748 - 00:43:04.674, Speaker A: Be more than $5 billion. So that is what I mean by pooled security, is to attack any one thing. You have to attack the collector. So this is stronger together. It's exactly like how nations, kind of like cities, come together into a nation, and the nation is stronger together because you have to now attack our army for the entire nation, rather than my own cities army.
00:43:04.722 - 00:43:06.966, Speaker B: Right. Thing that happens with this kind of.
00:43:06.988 - 00:43:11.298, Speaker A: Pool security is you're missing out on attributability.
00:43:11.474 - 00:43:12.890, Speaker B: Let's go to the previous example.
00:43:12.960 - 00:43:17.226, Speaker A: Let's say Dan had like $100 million stake, Ren has $100 million stakes, and.
00:43:17.248 - 00:43:21.034, Speaker B: Shawik has like $1 billion stake. Now I create a pool, and this.
00:43:21.072 - 00:43:26.474, Speaker A: Pool has 1.2 billion. It seems like it's a good deal for Dan and Ren, but somewhat worse.
00:43:26.522 - 00:43:29.674, Speaker B: Deal for Shovik because he had 1 billion separately.
00:43:29.722 - 00:43:34.290, Speaker A: Now he has 1.2 billion shared between these three individuals.
00:43:34.870 - 00:43:40.270, Speaker B: The thing is, in version one of our protocol, we have no attributability.
00:43:40.350 - 00:43:44.290, Speaker A: Like Ethereum has no attributability. No blockchain today has any attributability that.
00:43:44.360 - 00:43:48.598, Speaker B: For example, in Ethereum, if there's a.
00:43:48.604 - 00:43:59.370, Speaker A: Double spend in Ethereum and Uniswap got asymmetrically attacked, or only Uniswap got attacked, or only Coinbase got attacked, doesn't matter, some party got attacked.
00:43:59.790 - 00:44:04.902, Speaker B: Now the slashed funds are just like burnt indiscriminately.
00:44:04.966 - 00:44:08.486, Speaker A: It's not compensated to Coinbase or to Uniswap specifically.
00:44:08.518 - 00:44:11.914, Speaker B: So there is no attributability. And that's how eigenver V one is.
00:44:11.952 - 00:44:16.362, Speaker A: Eigenveair V one is. It doesn't matter who triggers slashing. The condition is verified.
00:44:16.506 - 00:44:18.686, Speaker B: And if that condition is correct, all.
00:44:18.708 - 00:44:22.670, Speaker A: The stakers on the burnt. So it's basically like indiscriminate.
00:44:24.850 - 00:44:28.000, Speaker B: It harms the attacker, but there's no specific.
00:44:29.810 - 00:44:33.614, Speaker A: Redistribution to dance protocol or rents protocol or Shawix protocol.
00:44:33.662 - 00:44:43.346, Speaker B: So it is kind of smudged into a pool. In V two, we have upcoming mechanisms which actually solve this problem where what you say is you have a pool.
00:44:43.378 - 00:44:46.626, Speaker A: Of $1.2 billion stake, but Dan buys.
00:44:46.658 - 00:44:50.258, Speaker B: And so the slash funds are not like just burnt.
00:44:50.434 - 00:45:01.226, Speaker A: Maybe some portion is burned, but some portion is redistributed. And how it's redistributed is based on slashing priority that Dan bought and Ren bought and Chauvick bought. Maybe Dan bought a slashing priority for.
00:45:01.248 - 00:45:03.466, Speaker B: 100 million, Ren bought it for 100.
00:45:03.488 - 00:45:18.366, Speaker A: Million, and then Shawik bought it for 1 billion. And the total slashing priority sold is less than the total amount at stake. So essentially you can get the benefit of attributable security. You have your 100 million to slash and Ren has his 100 million to.
00:45:18.388 - 00:45:20.254, Speaker B: Slash and Chauvin has his 1 billion.
00:45:20.302 - 00:45:21.746, Speaker A: But to attack any one protocol, I.
00:45:21.768 - 00:45:24.786, Speaker B: Still need to attack the collector. So you can get the benefit of.
00:45:24.808 - 00:45:28.022, Speaker A: Pool security and the benefit of attributable security all in one.
00:45:28.076 - 00:45:30.710, Speaker B: So we think this is simply like.
00:45:30.860 - 00:45:36.310, Speaker A: Superior to anything out there. So this is actually the right way to build shared securities.
00:45:36.730 - 00:45:53.174, Speaker D: I appreciate that. That makes a ton of sense now is it opt in for the stakers? You know, Shavik has this great protocol, this great Avs. I'm interested in actually helping secure that with my stake. But Ren, it's a shitty protocol I want nothing to do with. So like, can I opt in as a staker?
00:45:53.222 - 00:46:02.638, Speaker A: So the staker has opt in to which subset of services they are securing. But how to allocate the insurance or slashing priority is not up to them.
00:46:02.804 - 00:46:06.446, Speaker B: Because your commitment is. You're a staker, you're opting in.
00:46:06.628 - 00:46:14.050, Speaker A: If you do something bad, your money will be taken away. That's your commitment to the protocol. It's up to the protocol to figure out how to take all this money.
00:46:14.120 - 00:46:16.130, Speaker B: Allocate insurance to different parties.
00:46:16.710 - 00:46:19.800, Speaker A: So that's up to the protocol, not to you.
00:46:20.570 - 00:47:15.670, Speaker E: So on the topic of slashing, I had one question. There's a few ideas of AVss out there. One of them is the fast finality chain, where it settles optimistically on Ethereum and it verifies it through ZK proofs and arrives at consensus within seconds. And another thing that's enabled sort of through Ethereum inclusion trust, is single slot finality. And both of these things are sort of like within a block things, for lack of a better term, on Ethereum mainnet. So my question was, when someone is slashed on Eigen layer, how long does it take for Ethereum to know that that has happened? And for these abs, which require what I would kind of define as low latency within a block confirmation of security, so to say, is that like a potential problem if the slashing event takes a long time to be transmitted to the base layer.
00:47:17.610 - 00:48:23.290, Speaker F: All the AVss in agile, they are kind of optimistic in nature. So whenever a task is done, so there is a challenge window. And within that challenge window anyone can put a submit proof that something malicious has happened. And if that is passed, then the particular operator gets slashed. So the moment the challenge window moment, someone has done put up a successful challenge, that moment itself, that slashing gets finalized. So that's a basic model, but we have something like veto committee, which vetoes the slashing, which introduce certain other delay that veto committee has to check, is this slashing request being like, is the challenge, the slashing that is being requested, is it correct or not? Based on if there is software bug or something? Maybe that's the reason, that's why something like slashable event has happened. So this is the additional delay.
00:48:23.290 - 00:48:55.526, Speaker F: So this additional delay that we are introducing will keep it as at a level which is acceptable to most of the, to the stakers, because at the end of the day, this veto committee is acting as a safety net, right, for their protection against some kind of software bugs or something like that. In a manner of speaking, you can say that it's instantaneous. The slashing is instantaneous, the moment when the successful challenge is done. But we introduce a small delay which would be acceptable in return for the safety net.
00:48:55.628 - 00:49:25.860, Speaker E: I guess I have a quick follow up question to that. For these abs which sort of require Ethereum inclusion trust, for example, single slot finality, would that require a supermajority of restaked deep to achieve that? Or would it not require, and if it does require like a supermajority of reset deep to achieve that, what happens if, for example, it starts above that supermajority threshold and then it just fluctuates below and above and below?
00:49:26.310 - 00:50:08.750, Speaker F: So yeah, the Ethereum inclusion trust, you're right, there is a quality of service that's dependent on how many stakers or the Ethereum validators have opted into that particular service. So for example, if we look into event driven activation, so suppose this service says that if your collateral is underwater, they will fill it up, they will trigger a transaction. They will fill it up, if only, let's say 5% of the stakers or validators opted in. This service is very bad. Like once in 20 blocks maybe someone will come and fill, and within that 20 block you might be under collateralized, you might get liquidated. So it's very bad service. So you want say 80, 90? Yes.
00:50:08.750 - 00:51:15.506, Speaker F: So that's a caveat with the Ethereum inclusion trust. But there are certain ways how you can get around that. Like for example, you can have the Dapps execute transactions only if they are signed by a pool of economic trust takers outside the Ethereum. So there's a service who says that, oh, if this transaction, we have attested to this transaction only then the Dapps execute. Now, who are these people who are running this like attesting to that transaction? They could be the Eigen layer of validators and they could have economic trust that I'm putting my stake to attest to this transaction after doing some due diligence or some check. So that's a way to get around the problem of economic the problem of high opt in is required in the Ethereum inclusion trust. So that's one way.
00:51:15.688 - 00:52:14.950, Speaker E: Yeah, so you mentioned, it seems like there's a lot of inherent network effects in terms of the number of validators for these Ethereum inclusion trust abs, right? And I know there's other research reports that you guys have written out. For example, for Mev Boost plus, which is the whole idea of partial block auctions, and Mev Boost plus plus, eliminating the trust assumption of the relay. And at that point, it kind of seems like there's a lot of these abs which would benefit greatly from a large amount of staked deep that's currently staked at the base protocol layer being restaked. So the obvious question that I think is also a hot topic right now is enshrinement of eigen layer. Right. At that point, how do you guys think about enshriment layer, given all of these sort of Ethereum inclusion trusts? And what does enshriment of Eigen layer mean to all of these stakeholders? Whether that's the current people that have opted into Eigenvea, the people that have staked their lsds into Eigenvea, or for example, even investors.
00:52:15.610 - 00:52:17.946, Speaker A: To understand what the implications are to.
00:52:17.968 - 00:52:21.578, Speaker B: The various stakeholders, first we need to.
00:52:21.584 - 00:52:32.490, Speaker A: Know what are we talking about when we mean enshrinement. What does it mean? What things can theoretically get enshrined? What things cannot get enshrined.
00:52:32.570 - 00:52:34.800, Speaker B: There's a lot of nuance to this.
00:52:37.970 - 00:52:42.640, Speaker A: The starting point of this is to understand that.
00:52:44.870 - 00:52:49.986, Speaker B: You know, the. So first, like, why would we want.
00:52:50.008 - 00:52:52.690, Speaker A: To do, you know, enshrinement? I think maybe that's a good starting.
00:52:52.760 - 00:52:56.414, Speaker B: Point is if there are certain things.
00:52:56.472 - 00:53:00.086, Speaker A: That you can do, if things are in protocol that you simply cannot do.
00:53:00.108 - 00:53:10.106, Speaker B: If they're out of protocol. That's kind of a good reason to think about enshrinement. One example of where that is the.
00:53:10.128 - 00:53:17.818, Speaker A: Case is this notion of ethereum inclusion is if you want to include transactions into a block and you want to.
00:53:17.824 - 00:53:20.526, Speaker B: Make a promise with eigenvear, you can.
00:53:20.548 - 00:53:27.146, Speaker A: Only get that to be crypto economic. The idea being that you will lose.
00:53:27.178 - 00:53:32.010, Speaker B: Your e if that inclusion condition is not valid.
00:53:32.170 - 00:53:41.790, Speaker A: Whereas if you make it in protocol into Ethereum itself, then it's possible that other people can verify that you've satisfied the conditions that you need to satisfy.
00:53:41.950 - 00:53:44.114, Speaker B: So that gives a higher bar of.
00:53:44.152 - 00:54:06.170, Speaker A: Trust than what auto protocol can give. There are some situations where enshrining makes sense when you get more powers by being like default part of the protocol versus not a default part of the protocol. And this is an example, Ethereum like inclusion guarantees.
00:54:07.230 - 00:54:08.986, Speaker B: If you just take this, and this.
00:54:09.008 - 00:54:21.950, Speaker A: Would be like amazing over time to figure out how to enshrine some of this into Ethereum. There's a lot of complexity in this. For example, how do you specify an inclusion condition?
00:54:23.350 - 00:54:26.910, Speaker B: How do you meter whether the gas.
00:54:26.990 - 00:54:35.246, Speaker A: For whether all the inclusion conditions have been satisfied? Because you move from one of the reasons Ethereum has like this user driven.
00:54:35.278 - 00:54:37.826, Speaker B: Model, is you only pay fees for.
00:54:37.848 - 00:54:39.330, Speaker A: What is actually being used.
00:54:39.480 - 00:54:41.526, Speaker B: But if you had inclusion conditions which.
00:54:41.548 - 00:54:44.822, Speaker A: Are theoretical, which means you have to check them, like whether a limit order.
00:54:44.876 - 00:54:47.494, Speaker B: Has been paid every time, who pays gas for it?
00:54:47.532 - 00:55:02.686, Speaker A: What is the gas model? How do we make sure that Ethereum has enough bandwidth and cost to actually check all these conditions on a persistent basis? There is a lot of complexity in these things, and what's the language and.
00:55:02.708 - 00:55:04.478, Speaker B: Semantics in which it's done?
00:55:04.644 - 00:55:13.658, Speaker A: So it's theoretically possible to envision in like a five to ten year period that you can actually create complex ck proofs that you've satisfied all the conditions.
00:55:13.674 - 00:55:19.854, Speaker B: That need to exist. But ck proofs cannot be done for things that are not provable.
00:55:19.902 - 00:55:24.286, Speaker A: Like for example, I have to include any transaction sent by Dan in the mempool.
00:55:24.398 - 00:55:27.266, Speaker B: Let's say that's the inclusion know.
00:55:27.288 - 00:55:28.358, Speaker A: How do you know the transaction is.
00:55:28.364 - 00:55:32.166, Speaker B: In the mempool or not? So I think this is such a.
00:55:32.188 - 00:55:36.454, Speaker A: Complex thing even we're just focusing on Ethereum inclusion trust.
00:55:36.572 - 00:55:39.562, Speaker B: Like there is a complex topography of.
00:55:39.616 - 00:55:43.018, Speaker A: Ideas and conditions under which these things work.
00:55:43.184 - 00:55:45.754, Speaker B: So I think the right mechanism is.
00:55:45.792 - 00:56:01.882, Speaker A: These things get tested out of protocol, and then when things are working well, but you can add a lot of power by making it in protocol. In fact, what we do envision is, even for Ethereum inclusion trust, we'll find narrow use cases which are really powerful.
00:56:01.946 - 00:56:06.930, Speaker B: But are not like complex, and those get enshrined rather than some very general.
00:56:07.000 - 00:56:12.898, Speaker A: Purpose thing which we don't know how to meter, how to cost, how to make sure the complexity is contained, how.
00:56:12.904 - 00:56:15.010, Speaker B: To make sure that programming errors.
00:56:15.510 - 00:56:20.006, Speaker A: Here is one thing we can do out of protocol, which is very difficult to do in protocol is like a.
00:56:20.028 - 00:56:22.614, Speaker B: Slashing veto committee, right?
00:56:22.652 - 00:56:36.394, Speaker A: It's a subjective committee, like we starting with small group, but we could expand the group size over men. But the problem is, if you want to make it in protocol and anybody can opt into all these complex inclusion conditions and imagine they opted into something.
00:56:36.432 - 00:56:42.746, Speaker B: Crazy and then everybody's stake blows up. That's going to be a disaster, right?
00:56:42.848 - 00:56:48.126, Speaker A: Or Ethereum liveness is affected because you're checking for some inclusion condition, but the.
00:56:48.148 - 00:56:50.190, Speaker B: Inclusion condition creates a deadlock.
00:56:51.090 - 00:57:08.598, Speaker A: There are all kinds of crazy things that can happen. So this is just for one dimension, ethereum intrusion. Plus we are building a platform, like I said, which is very generic. You want people to use this for AI, you want people to use this for secure multiparty computation. You want people to use this for.
00:57:08.604 - 00:57:14.294, Speaker B: All these three things. So we have to take steps, one.
00:57:14.332 - 00:57:21.622, Speaker A: Step at a time, to understand what are possible. But we are very open to things that are more powerful.
00:57:21.766 - 00:57:25.926, Speaker B: Being native in Ethereum, and this fits.
00:57:25.958 - 00:57:32.830, Speaker A: With like Vitalik and EF's thesis of minimum viable enshrinement, right? You don't want to go so complex that you're going to enshrine everything.
00:57:32.900 - 00:57:39.386, Speaker B: You're going to choose a point where you ensure the things that if they're.
00:57:39.418 - 00:57:52.770, Speaker A: In protocol, they're so much more powerful than if they're out of protocol. So that is really the kind of thing that we envision will happen over. But the reason we are not so worried, you mentioned various categories of people.
00:57:52.840 - 00:57:55.474, Speaker B: That what happens to stakers, what happens.
00:57:55.512 - 00:58:12.890, Speaker A: To operators, what happens to services, what happens to us, our investors or something. We're not so much worried about the last thing, because we invented this category. We are building lots of use cases that will consume shad security in a way that simply other people may not understand how to use.
00:58:12.960 - 00:58:14.554, Speaker B: So we'll have things to do.
00:58:14.592 - 00:58:16.982, Speaker A: And our vision is positive.
00:58:17.046 - 00:58:18.170, Speaker B: Thumb games.
00:58:19.070 - 00:58:29.598, Speaker A: The better the coordination mechanisms, the better the innovation that we can build. The sum total of what we're building as a society, as a community expands, and that's what we care about the most.
00:58:29.684 - 00:58:33.806, Speaker B: So happy to see any aspects of.
00:58:33.828 - 00:58:35.706, Speaker A: Our protocol become part of Ethereum.
00:58:35.818 - 00:59:06.650, Speaker D: Okay, that makes sense. Yeah. The idea of enshrinement, it was always tough for me to understand just because of that exact point of, at the end of the day, it has to be a business and it has investors. But if you're focusing on kind of like the abs landscape and saying, hey, nobody's better qualified to build the best things than the people who have built the underlying layer, that makes a ton of sense to me as well. And so maybe just as working towards the close here, it's kind of. We're coming up on an hour. When can we expect to see some of these ABS protocols go live.
00:59:06.650 - 00:59:17.200, Speaker D: I know you have an interesting relationship with Mantle, the l two launching on Ethereum that's going to use I canda. So just wanted to get your take around that of when we can expect to see some of these really exciting abs hit the market.
00:59:18.130 - 00:59:20.960, Speaker B: Yeah, right now.
00:59:23.110 - 00:59:28.500, Speaker A: On the main net there's only staking, there's no delegation node operation or services.
00:59:29.190 - 00:59:35.346, Speaker B: So we are working towards a testnet sometime this quarter which would basically be.
00:59:35.368 - 00:59:44.998, Speaker A: A public testnet where we have all the sides of Eigenve and eigenda running. So that would be a major milestone on the public testnet and then a.
00:59:45.004 - 00:59:47.480, Speaker B: Few months after that will hit the main net.
00:59:47.930 - 01:00:00.342, Speaker A: So that brings in like Avs node operators, Eigen Da, everything together, this whole complex marketplace. So we are working hard on getting that ready.
01:00:00.416 - 01:00:04.554, Speaker B: But that's the roadmap is this quarter.
01:00:04.602 - 01:00:06.462, Speaker A: We'Ll get the public testnet and q.
01:00:06.516 - 01:00:10.800, Speaker B: One, q one to q two. We should mean it.
01:00:11.170 - 01:00:37.160, Speaker D: Fantastic. I know that's everyone's least favorite question, so I appreciate you tolerating it. But Sriram and shave, this is an awesome conversation. I really appreciate the both of you coming on to jam on all things Eigen layer. And like you mentioned earlier, we'd love to have you back on when audience gets a bit more closer to being live and we can really jam on the inner workings of the design. So maybe, Sriram, I can leave it to you to kind of leave the audience of where they can find more about Eigen layer or point to some of the exciting research your team is.
01:00:38.810 - 01:01:23.014, Speaker A: You know, the best place to discover what's going on is. Please follow our twitter handle at eigenve. What we're doing over the last couple of months is starting to write a bunch of blog posts. So that's a blog Eigen layer XYZ, which explains, for example, the most recent one is on the inner workings on Eigen layer. Shabikan team brought up another post on 15 Avs ideas for what things you can build on Eigen layer. So all these posts are super helpful. If you have any thoughts or ideas, you can comment on some of them on the Forum Eigenve XYZ, which is our research discussion forum, and we'll look at it as a team.
01:01:23.132 - 01:01:37.560, Speaker E: I'll put a plug here for Eigenve. Their research is some of the best out there, and they just announced the Eigenve research fellowship one week ago. So if you're really interested in contributing to research at Eigenver, definitely go apply for that. It sounds like a really fun job.
01:01:39.130 - 01:01:42.780, Speaker D: I love it. Thanks a lot. Randon, Sriram, Shubik. This has been great. Cheers, guys.
