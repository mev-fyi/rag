00:00:00.170 - 00:00:27.910, Speaker A: ZK Login is pretty much what we feel is one of the most advanced technologies invented in crypto in the last five, six years. And this is a scheme that allows anybody with an existing web two account to engage with the blockchain without a third party. Now, the great thing about that is you're not giving your private data to some third party who custodies it. It's effectively the chain that gives every app in this week because it's on that functionality. Which means for the first time, billions of people with an this and web two account can use the blockchain.
00:00:30.170 - 00:00:46.950, Speaker B: What's up, everyone? Welcome back to another episode of Zero X Research. March is just around the corner and I wanted to make sure to give you a quick reminder to not top tick your prices of your Das London tickets. If you use code Zero X ten at checkout, you can lock in a 10% discount on your ticket. Don't miss out on your chance to get ahead of the curve. I'll see you in London.
00:00:47.030 - 00:01:15.220, Speaker C: Welcome back to another episode of Zero X Research. We have a great episode lined up today with Evan and Adeny, co founders at Meister Labs, which is delivering the benefits of web3 with the ease of web two. Today is Friday, February 9, and as a reminder, be sure to use code zero xResearch ten at app blockworksresearch.com for 10% off your annual subscription. Now onto the interview with Edvin and Adeny. Thank you so much both for coming on today.
00:01:15.750 - 00:01:18.038, Speaker D: Of course. Thanks for having us.
00:01:18.204 - 00:01:35.418, Speaker C: All right, so I'm going to dive right into it. Last episode we had Brendan Farmer from Polygon come on. And he basically started by saying that no single chain can scale to that of the Internet. And to kick off the conversation, can you say whether you agree or disagree with that and why?
00:01:35.584 - 00:02:30.934, Speaker D: Completely disagree? It's almost like back in the days when people are using dial modems and say, wow, this is like how much more you can do. You can push to 1024, right? It's like, wow, you have to think differently, right? So a lot of the problem with the blockchain limitations, all the focus about scalability is, well, they are doing a lot of thing that's wasteful. The architecture doesn't allow you to scale the way the kind of web two infrastructure can scale. If you use cloud infrastructure, you never worry about scalability issue. So, you know, they can increase capacity to meet demand. This is what's needed for this industry as well. And the fact our stance is, well, we have architecture, we know it's going to scale to meet whatever it's necessary.
00:02:30.934 - 00:03:02.520, Speaker D: We don't need to scale to millions of transaction because it will be wasteful. But when the demand continues to increase, the way we know it's going to continue to increase will be right there. Right. You build architecture correctly, you break out the box of what blockchain look like, and if you look inside suite, look at the diagram, look at the stages, how it process transaction, then you understand, no, this is very much misunderstanding what technology progress looks like.
00:03:03.130 - 00:03:29.918, Speaker A: Yeah, probably back that out is if you look at the makeup of our team, the background is very steeped into building large scale distributed systems, systems that power billions of users. Google never turns away business because it doesn't have the capacity to scale. The whole business premise is the ability to actually take all your data, all your workload and actually run it on cloud. So we have exactly the same premise. So our background really talks of that and the technology we have ultimately allows that to happen.
00:03:30.084 - 00:04:03.050, Speaker D: Yeah. One thing that's really important to point out is while everyone else is still building a blockchain that basically look the same at a very high level architecturally. Right, mempool, consensus execution, then writing the results into authenticated data structure. Right. Of course you keep on building a faster dial modem, you're going to rent out your hero. So we didn't do that. We say, okay, let's forget about that.
00:04:03.050 - 00:04:26.162, Speaker D: And we want to want to build an architecture that's completely different. What that also means we have to change other parts of the entire system. The data model has to be very different. So expose all the information you need to be able to scale. So expose all the information you need so you don't do wasteful work like doing consensus ordering of transaction. They have no storage and everything.
00:04:26.296 - 00:04:27.074, Speaker A: Yeah.
00:04:27.272 - 00:04:36.354, Speaker D: So it's not about paralyzed execution, it's paralyzed the entire pipeline, including the ordering part. So that's how you do things.
00:04:36.552 - 00:04:51.606, Speaker C: All right. Yeah, no, that's a great follow up to my next question. There are a lot of next gen l ones out there in the wild, such as Aptos, say, and probably hundreds of others these days. What is suisse primary differentiator from all of these newer chains?
00:04:51.798 - 00:05:29.270, Speaker D: Yeah. So first of all, you're going to see us not really paying attention to the scalability debate because it's in our opinion, that's solved. Right. Our background is collectively we build a lot of kind of products and developer platforms. Truly in the past, they reach many millions or billions of devices or humans. We think long term, we think more in terms of top down, right. What value we're trying to deliver to the world, what changes we want to affect.
00:05:29.270 - 00:06:19.814, Speaker D: And then how do you build the kind of platform that enable the product developers to build new kinds of products and business and reach many, many millions, hundreds of millions of customers? We think very differently. So we build very differently. So we want to focus a lot more on the hard problems the consumer developers are facing, which is coordination across lots of different kind of functions, applications and product. Right. So the way you think about things today is everything is very much a custody kind of model or a silo. You enter into a service, any kind of large scale service. You basically, in a way saying, go ahead and custody my information, custody my data, I trust you.
00:06:19.814 - 00:06:57.666, Speaker D: Or custody my asset, such as my photos, my video, whatever you can share with my network and all that, you can do whatever you want with it, right? I have little control over. So remember, the whole premises of blockchain is not just to turn everything into tokens, right? It's a coordination. It's a platform for coordination. Consumer in the middle, and they coordinate with the product and service. Say, now you can use my resource, my information for this and somebody else can. Right? You're cutting across the silo. So we're solving a lot of these kind of problems.
00:06:57.666 - 00:07:46.402, Speaker D: So how do you build these kind of product? What tools you need to build this kind of product? What is a consumer product experience should look like? That's why we're pushing very hard into latency. Everybody have their favorite time to finality numbers. They all kind of block time, right? That's the first stage of the transaction processing. We're talking end to end to end. Like everything finalized on the blockchain, nothing ever changes, right? No guesses or anything? We're going to get to two to three round trip depending on the kind of transactions. So two to three round trip. Just so you know, roughly 200 milliseconds around trip around the world, right? Between London and New York.
00:07:46.402 - 00:08:04.742, Speaker D: Right. So you're talking 400 to 600 millisecond, real finality. Why is that important? That's consumer experience, right? Consumer don't wait for things. Why do we have things like zk logging? Well, onboarding, problem solving the problem, all these things. That's what we're about.
00:08:04.876 - 00:08:37.374, Speaker A: Yeah, I want to touch in on that. The folks you mentioned are just simply building a blockchain. We're building a really large scale development platform that empowers people to build products that enables ownership. Now, in reality, if you look at all the things that we've built, yes, there's a blockchain, and yes, we've solved the scalability problem. Sui doesn't have a Max TPS. You just keep adding more workers and sui scales infinitely. The other benefit is all the things we're building around developer adoption and also enabling developers to build powerful applications.
00:08:37.374 - 00:09:13.738, Speaker A: Evan touched briefly on ZK Login. Zk Login is pretty much what we feel is one of the most advanced technologies invented in crypto in the last five, six years. And this is a scheme that allows anybody with an existing web two account to engage with the blockchain without a third party. Now, the great thing about that is you're not giving your private data to some third party who custodies it effectively. It's a blockchain that verifies your login, which is super powerful and very unique to SuI, which means every app in Sui has a power of magic link. You don't have to integrate magic link. You don't have to integrate some third party solution that you charge for.
00:09:13.738 - 00:10:13.066, Speaker A: It's effectively the chain that gives every app in the suite because it's on that functionality, which means for the first time, billions of people with an existing web two account can use the blockchain. And the other addition is the fact that we have something called sponsored transactions. Sponsored transactions allows you to transact on the blockchain without paying gas, which means now you not only can able to log in to any of the apps in Sui using an email or any kind of Facebook account or whatever web two account you like, but you can also transact in Sui without ever touching gas, which means we've given web3 builders the ability to build web two ux in a most seamless possible way. And now you can have wallets that simply would either sponsor all your transactions because they have a partner with a Dex or some other kind of application ecosystem. You start to build these real kind of relationships between applications that are incentives based. And I think that's a real power. And you're going to see more and more of these ingenious capabilities come to suite.
00:10:13.066 - 00:10:41.002, Speaker A: We have a feature coming this year that lets you effectively transact on suite without even an Internet connection. That's unheard of. These are the levels of invention that you need to come up with to make crypto go to billions of users. Being able to send transactions without paying gas, being able to use your email or whatever identity you have to transact, being able to send money across the world without ever worrying about Internet connection. These are the things that really set Sui apart while everyone's just building a blockchain in our view.
00:10:41.136 - 00:11:19.602, Speaker D: Well, I want to come back to just the blockchain. Right part. Even the blockchain is very different. So Sui with the data model can scale storage, which is very different. So obviously you don't want to store your video on chain, but you need to create vibrant and complex assets that represent actual real world asset. An asset contains a lot more than just a link to a JPEG. So to be able to store on chain scale storage also have the data model allow you to specify any kind of complex types.
00:11:19.602 - 00:12:09.830, Speaker D: And for objects asset to be composable, they allow you to build very powerful, very different kind of application. So one of the reason why suite is starting to take off recently is because of that developer has figured out, wait, this is the level of composability, permissions, composability, they never experience it elsewhere. So defi builder are the first one to figure that out. How to use programmable transaction blocks to really do this kind of code composability across a lot of different protocols, and you build better product. And guess what, traders is telling me to make more money. And then everybody's coming, right? That's why not only our TVO is growing, our transaction volume is in 100 million now. For a couple of days in a row, we're in the top four, top five now.
00:12:09.830 - 00:12:33.822, Speaker D: And then the same thing people are figuring out, say, wait, data composability. This is what's about. You can think about almost like in a gaming model. So you have your hero, they have inventory. Then you can add more things to your magic sword to make more powerful that level of composability. So there's a lot of things very different. Perhaps the way we summarize it is, well, it's almost like everybody is 2d.
00:12:33.822 - 00:12:56.260, Speaker D: We're playing a 3d game kind of thing. These assets are self enforcing in terms of rules about transfer and everything else. So we'll talk a lot more about this in the coming weeks and months. But, yeah, it really is not a blockchain that other can compare, right. It's very different in a lot of different ways.
00:12:56.950 - 00:13:25.374, Speaker C: Yeah, that sounds really exciting. Especially that point about not needing an Internet connection. I'd love to dive into that later a bit more. I think one thing that many of our listeners are probably relatively familiar with is sort of Ethereum's data storage model, or perhaps, for example, Solana's account based storage model. But sue has this sort of like object oriented storage model. So would you mind just briefly running us through that and perhaps also talking about the implications. Right.
00:13:25.374 - 00:13:42.642, Speaker C: Ethereum is really struggling with data availability layers today. There's like a whole host of other data availability layers. Does this object oriented model fundamentally mean that, for example, suede needs much less data availability compared to other type of storage models? What's the trade offs here?
00:13:42.776 - 00:14:29.826, Speaker D: Yeah, the way you think about it is solidity. I mean, Ethereum or any other chains right now is basically one giant global state where everything mixed together, right? So that's the same model with processing transactions, everything, right? So you have Marco tree, so you kind of have the storage overhead. As the tree goes bigger and bigger, it becomes very significant. So then when you're reading, you also have to tease apart which part of your data you care about. We have a completely different model where it's not a company is everybody, it's a global sort of object store, put it that way. And it's really each one of them represent an asset, or smart contract is an asset and how they interact with each other. Right.
00:14:29.826 - 00:15:07.502, Speaker D: That's the mental model. You have to shift around. It's asset based. Rules are also encoded in the asset rather than being enforced by human. So all that makes the problem completely different. When you think about kind of data availabilities and how do you read? So one of the things we are going to work, it's possible with three, is the ability for you to only focus on the states you care about. If you're building application, you have a game, you have consumer product, you know exactly which are the objects that you care about.
00:15:07.502 - 00:15:25.794, Speaker D: You don't care about all the other states. So the reading part of the suite can become very different. You can think about a light client being constructed very differently. There is a lot of active work happening in the area right now on.
00:15:25.832 - 00:15:36.920, Speaker E: The consensus side of things. Suite has two consensus protocols, one for more simple transactions and one for transactions that touch the same object. Can you kind of walk into these two and how they work?
00:15:37.470 - 00:16:04.298, Speaker D: Yeah. To be clear, you don't need consensus for owned object. Think about it. The easiest way to think about it is in the real world. This is my cup and my cup only. Nobody else can touch it. If I want to do something with this, I don't need consensus, I don't need ordering, I don't need to worry about somebody else trying to grab the same resource.
00:16:04.298 - 00:16:19.554, Speaker D: Grab my cup, it's mine. No one can touch it. So I transferred to Ederne right now. It just happens. So the process more of a broadcast, making sure everybody knows this is happening. Everybody is okay. Everybody validate.
00:16:19.554 - 00:16:58.850, Speaker D: This is a valid transaction and you don't go through the consensus. That's the fast pass. That's what works, right? So the pipeline, I'm not going to go into the detail describing it without whiteboard. It's too hard to describe with our whiteboard, but it's basically a broadcast. And then followed by if you share object, like your smart contract for minting NFT, everybody can send a transaction to that same object touching the same object. There's contention then now you actually do need to order them. In that case, you go through consensus, right? So it's sort of like this two stage thing.
00:16:58.850 - 00:17:04.270, Speaker D: And if you're a fast pass, if you own object, you just go through the fast pass. You don't need to go through consensus.
00:17:04.350 - 00:17:44.480, Speaker A: It's important to denote the difference, right? Like in Swede, there is real asset ownership, right? What Evangelis described, the fact that he can hold a cup and it's in his hand, it's because his keys own that actual asset. Nobody else does. In ethereum, the difference is it's a contract that owns the asset, and you have to engage with the contract to command and control that asset. And you can essentially have the contract take the asset and you're screwed. SUi is very different. The security model allows for actual users to own the assets that they've purchased and define rules around how those assets are transferred. It also allows us that we have these great mechanisms that enforce royalties as well.
00:17:44.480 - 00:18:55.346, Speaker A: Web three was promised as this great technology for creators where you can create a piece of artwork and then you can monetize the royalties over time, because it's a new model for freeing creators to actually monetize the great work that they do, only to have web3 rug them and have it be by human consensus as to who pays royalties versus not. Sui doesn't do. That suite allows a creator to freely define what kind of royalties, whether they want to make it harshly enforceable or not at all. So we have a standard called sui kiosk, which effectively allows designers to build an asset, store it within a kiosk, and this kiosk will specify what conditions need to be met before the asset can be transferred outside of a kiosk into another. So it means now I could specify that this asset will not transfer on Mondays, or this asset will not transfer if the price is above x amount of dollars, or this asset would only transfer when a royalty of 20% is paid on a net present value. So you start to have these really complex rules you can build around real world assets and ownership of assets. That gives developers a lot more freedom.
00:18:55.346 - 00:19:04.890, Speaker A: And I think you're only going to start to see more and more of these rich interactions on suite just because it's not possible to do that on a chain that doesn't enforce ownership as a key primitive.
00:19:06.030 - 00:19:33.454, Speaker D: Yeah, I'll touch on the consensus on a couple of things. Right. So early on, when we talk about scalability, why we believe that we have an architecture to scale the blockchains, like horizontally, right? Think about it. You have two smart contracts. Each one serve a different function. One is minting NFT, the other one is a Dex. There's going to be naturally a cluster of transactions that target that one, the NFT smart contract.
00:19:33.454 - 00:20:33.158, Speaker D: Another one target, the DeFi smart contract. These two groups of transactions, artistic, they have no relationship to each other, right? So now you have a mental model, how you can process, including the consensus part, these two groups in parallel, simultaneously. That's why, this is why you need to change how you represent data in the first place, to be able to scale in a way that go beyond what conventional smart contract platform or blockchains can do. So very different way of thinking about it. Another thing I was just touching on, I saw some people saying, well, why do you need to add this fast pass? Right? So most of the transactions are going to be shared objects. You're paying the price. Well, that's completely wrong.
00:20:33.158 - 00:21:08.958, Speaker D: We are seeing very smart builders are figuring out how to leverage that fast pass, that really fast kind of for really fast commitment. Confirmation of trading. Bluefin is able to do 28 millisecond. I think something around that 28 millisecond confirmation, optimistic confirmation. But this is the kind of thing allow them to build a very different kind of product. And that's why they blew up. Right? That's why they gave up on Armbatron.
00:21:08.958 - 00:21:36.890, Speaker D: That's why they say, okay, guess what? Sui is better because even though it's a smaller community right now, it's 20 times more capital efficient for them. It's a better product experience. So again, too often people are thinking of everything around blockchain in the lens of what has been done before, and we want to challenge the audience to think differently.
00:21:37.870 - 00:21:57.490, Speaker E: I would probably argue that a lot of the, I guess, constraints to blockchain scaling ultimately is hindered by the fact that decentralization is something that people value very highly. And you kind of have that classic blockchain trilemma. How do you guys think about decentralization? And what does that look like in suite.
00:21:58.070 - 00:22:31.558, Speaker D: I think the blockchain trilemma is a completely different conversation and probably needs at least a healthy 30 45 minutes, if not an hour debate. Because remember that trilemma is defining the lens of what a blockchain looked like back in the day when Ethereum started. We're going to challenge. That's actually wrong. So decentralization, let's talk about it. How do you define it? Right. People mostly define as number validator, which is completely wrong because it's really about.
00:22:31.558 - 00:23:25.930, Speaker D: They all run on some kind of hardware, a lot of them. If you look at Ethereum, what percentage actually runs on AWS, Google Cloud and a few big cloud services? So you still actually have look at how they're actually quite concentrated as a result. So there's a better sort of things we can look at. Nakamoto ratio is once better, right? Essentially you release address the one part of the equation. Why do you care about decentralization? It's basically making sure you're not being taken down by bad actors, right? So then you talk about how many nodes you have to go down before your network lose liveness and that sort of thing. That's a little bit better. But even that, it's probably incomplete.
00:23:25.930 - 00:23:45.874, Speaker D: It's a very difficult. Right. There is a trade off for sure. In our case, the trade off is probably more latency. Then you have to figuring out what is the right balance. When are you sufficiently decentralized. Remember it's about trust, right? You don't want to trust a single company behind this.
00:23:45.874 - 00:24:34.340, Speaker D: You want to trust all these different entities. Sort of like keeping each other honest, right? So there is a certain number, then it becomes like in practice you're decentralized enough. Then you add other ways for individuals or business other to verify the network is doing the right thing. There's no collusion and no other funny business going on. Then you have a sufficiently decentralized system and you keep on growing it. You find ways to continue to basically sort of like ensuring your platform don't suffer the risk of attack or over concentrated kind of a cloud service. Those things will take time.
00:24:34.340 - 00:24:58.810, Speaker D: So that's the way we think about decentralization and it's something that we're happy to have a debate about. But a lot of these kind of different topics are sort of lumped together and that's really not the right way to think about it. There is a trilemma, but we also disagree with the way that's defined.
00:25:00.110 - 00:25:11.726, Speaker C: Yeah, I definitely agree with you. I think in general, I'm in the camp of sufficiently decentralized. Not everything needs like 100,000 nodes across the world in every single country.
00:25:11.828 - 00:25:29.094, Speaker D: Well, to be frank, right. It's about voting power. Two third voting power move forward, right? So you have a lot of redundancy, you have thousands of nodes, but most of them have 0.1% of the voting power. Actually don't matter. They are there. That's good.
00:25:29.094 - 00:25:41.100, Speaker D: It's replications, fail safe, but a lot of these a bit of a decentralization theater. So those things actually don't matter much.
00:25:41.870 - 00:26:10.562, Speaker C: Yeah, I would agree there. On the note of sort of scalability, right. I think the object model makes it so that it's easier to shard execution. It's easier to skill storage because you can shard objects by owners and IDs. And it's easier to verify the state because you don't need to have a whole view of global state. But I know your guys definition of sharding is slightly different from perhaps how most people in blockchain think of sharding. For example, with near.
00:26:10.562 - 00:26:12.734, Speaker C: Would you mind walking through what sharding.
00:26:12.782 - 00:26:36.426, Speaker D: Looks like most like near? They're talking about state sharding. So you may want to spread them out. Different distinct shards. If you want to compose across two assets, different shards, you kind of have to do some synchronization ahead of time. Right. That's very hard. And I actually don't know where they are right now.
00:26:36.426 - 00:27:10.710, Speaker D: It's being talked about for a long time. There's a reason why state sharding really hasn't taken off or even being implemented is because one, it's very hard to get right. And if it's not synchronous, you have other kinds of problem. And it's just think about if you want to do it explicitly, right? Do you want the developer to be aware they are or not aware? So. So there is a lot of complexity. Think about how hard it is to write smart contract as it is. Right? You add another dimension.
00:27:10.710 - 00:27:51.902, Speaker D: Any developer knows writing a sequential algorithm is one thing. Writing a parallel algorithm is something completely different level complexity in suite. When we talk about sharding, it's invisible to the developer. For them, it's a one giant space where with all these objects, one global namespace, whatever you want to call it, right? All these objects, they interact with each other. You can compose it freely. The sharding is the implementation detail behind the scene. Think about each validator itself can become a distributed network.
00:27:51.902 - 00:28:15.370, Speaker D: That's a way to think about it in terms of mental model. You can distribute your work per validator to multiple machines, they may say, okay, this machine is responsible for certain thing, different function, or you can think about, they are focused on different hot objects and all that, right? There's different ways you can do that. We'll publish more on that.
00:28:15.520 - 00:29:04.374, Speaker A: To touch on that, think about the benefits of what we just described. Namely, for a developer, it's a better developer experience. It's not thrown in your face the fact that you need to figure out which particular shard is this particular asset that you're trying to engage with. So if you're working on subnets, for example, you have that intrinsic problem. You also start to have issues, right? Where if you're using these things that expose developers to programmatically the shards themselves, you now have fragmented liquidity, or do you even have the ability to bridge assets across if you wanted to? It doesn't create a really good developer experience and actually it creates a worse developer experience. If anything, our thesis is ultimately because these chains don't know how to scale. They ultimately just build replicas of the same blockchain and start to create a new world in that new blockchain.
00:29:04.374 - 00:29:25.620, Speaker A: And you have this intrinsic problem of having to move assets between chains, and it's a mess now. We don't think it's a way to go. We think the intra validated sharding described here, where the infrastructure takes care of the scale, the infrastructure takes care of where workloads need to go, and the developer is completely not having to think about it. That's the way in which infrastructure should ultimately work.
00:29:26.070 - 00:30:00.538, Speaker D: Yeah, I mean, if you look at how many l two s for Ethereum, they usually are replications of the ecosystem, different swaps and different derivative platforms and all that. You can't really compose across L two s. It's a very similar kind of mental model when you think about sharding, even for L1, if it's explicit, has to be managed by the developer or automatic. Right? This is different kind of problems you are dealing with.
00:30:00.624 - 00:30:21.122, Speaker B: What's up, everyone? March is approaching fast, and I want to give you another reminder not to miss out on Das London. It is coming. It's right around the corner, and it's in March. From the 18th to the 20th, we have three full days of content. This is your chance to bump shoulders with some of the world's top executives and have open dialogue with both attendees and speakers. We're going to be focusing on a range of topics that I'll let Ren discuss for you.
00:30:21.176 - 00:30:57.870, Speaker C: First on the list, we have bitcoin catalyst, the halving and spot ETF. Next we have a view from the buy side from investors on things like strategy, portfolio allocation and more. We also have a topic on rwas tokenization and stable coins, which I think we can all agree are going to pay a large role in Crypto's future. We'll also talk about global regulatory frameworks like compliance, best practices, and the evolution of global standards that are shaping the global investment landscape. We'll also have someone from the institutional front to talk about infrastructure such as banking and payments, with financial giants like Visa and Morgan. And last on the list, the macro case for digital assets. So don't miss out on this monumental event.
00:30:57.870 - 00:31:34.570, Speaker C: Seats are limited, so be sure to register today by hitting the link in the description and using the promo code zero x ten to save 10% on tickets. See you in London. I have a quick, slightly nerdy question. I was thinking of atomic bundles as they are on either Ethereum or Salana, and I was thinking, what does it look like on sway if someone submitted like an atomic bundle that included like a normal simple fast path transaction, and maybe like a transaction that interacts with a shared object, or even just is there MeV on sway today? What does that look like?
00:31:34.720 - 00:32:31.402, Speaker A: So Swee has this mechanism called programmable transaction blocks. Programmable transaction blocks doesn't let you deal with just instructions as some people try and do. It lets you actually essentially write a transaction that can effectively bundle over 1024 heterogeneous transactions in an atomic way together. So we actually have that today on suite. If you look at what's happening with flash bots and things like that, these are all PTBs. So you can, in one transaction, do a transaction, buy a token on a Dex. Within that same transaction, take the token you've purchased, put into a lending protocol, borrow, do a flash loan directly against that asset, and then do some kind of some optimization trade on debook, which is a central limit order book on chain, and do that all in one single transaction, and the user only has to click one button without having to wait, and it's all or nothing.
00:32:31.402 - 00:33:00.698, Speaker A: If any of the transactions fail or the condition is not met, all you've done is pay gas. It's actually very cheap. So it's another way where any kind of parallel system needs to have a mechanism for batching, right? So you can effectively even batch transactions in one go and save a lot on the gas. Correct. So from suite's perspective, it's the most advanced scheme that any chain actually has. It's not just commands you're talking about. I can call individual smart contracts.
00:33:00.698 - 00:33:19.398, Speaker A: I could take the input out of one, roll into the other, and do that all the way through up to 1024 transactions. It's really just the limit we've imposed for now. There's no reason why it can't be higher. But that is a scheme that we see. It's allowing DeFi on suite to take off significantly. You have this, what we call is real composability that you actually get on suite.
00:33:19.414 - 00:33:37.746, Speaker D: Now it's permissionless composability. You don't need to write a new smart contract. You can basically construct this program transaction block. You don't need the protocol to give you a hook to participate. This, they don't even need to know. Right. You can just compose these into one, and you can do flash loans and all that.
00:33:37.746 - 00:33:57.430, Speaker D: We saw that the other day. We're like, wait, somebody who is unknown just did, what, 400 million worth of transactions using these bots, basically using these flash loans and borrow and then do some trade and then pay back like that? Yeah, it's really powerful.
00:33:59.290 - 00:34:25.040, Speaker C: Gotcha. Follow up question, then. When I think of sort of like the object oriented model, right? I know it's slightly different. But Solana has seen some headaches with developers that lock accounts, because when you write a transaction on Solana, you need to specify which account you want to lock. Does sue have problems like that? And how is sue thinking about its fee markets today? And are there any problems that you guys are running into?
00:34:25.990 - 00:34:50.422, Speaker D: So I don't know the precise answer to your question. I don't know that level of details. Perhaps that's something we can come back with. But what we have is testimony from veteran Solana developers saying, no, this is not like Solana. You don't have to specify all these things up front. The boilerplate code is so much smaller. The developer experience is depending on who you ask.
00:34:50.422 - 00:35:09.134, Speaker D: Some say it's like three, four times better. Some say it's ten times better than Salana. But I don't know the details, what you're talking about in terms of locking account, so I can't answer you. The fee market. Yes, we support local fee market, and that's the only way. Right. So remember, very important one.
00:35:09.134 - 00:35:54.990, Speaker D: The design principle we have is predictability. Predictability comes in two forms. One is, if I'm developer, I want to use your infrastructure. I know you're not going to rent out capacity on me. The other one is that you are not going to surprise me by jacking up the price of my fee because somebody else is doing something really stupid. So we have this auction process, we have this kind of basically stabilization mechanism. Even if the token price shoot up or goes down, it's just going to be staying stable relative to the fiat for the epoch the 24 hours, you're going to know exactly how much you're paying basically more or less like within a very small range.
00:35:54.990 - 00:36:19.670, Speaker D: The fee market wise you should think about is globally stable. Locally if you have something really hot, well yes, you can have a fee market say well this is in contention like millions of people are touching on this auction. You probably want to jack out the price. So there's mechanism, both local and global.
00:36:20.090 - 00:36:52.350, Speaker A: On the account locking question. It's not an issue in Sui primarily because Sui's lowest unit of compute is an object, strongly typed object. In Sui, all you deal with is an object. You specify the object you're dealing with and then you put that into a contract or you engage with it directly. You don't have to worry about abstract concepts that are alien to developers like accounts or things like that. You're simply dealing with strongly typed objects. That is a user experience that most developers actually can actually grock very quickly, which is why people are know to write an application.
00:36:52.350 - 00:37:05.250, Speaker A: Solana is like in glass, chewing glass as they say. But writing something in suite is very, very akin to what they're used to in any other strongly typed programming language. So yeah, that model doesn't exist. That problem doesn't exist in Swede.
00:37:06.250 - 00:37:33.360, Speaker C: I guess following up there, I think we've heard pretty good experiences from just like the developers we've talked to. We have some developers launched like similar protocols from Salana onto C and they've said that the Devex is like a ten X improvement. So to follow up, would you mind going a bit deeper into why specifically is a devex so superior on suite? Is it move? Is it the object oriented data model or something else?
00:37:34.130 - 00:38:25.738, Speaker D: It's everything. It's an opinionated developer experience. A lot of the things that are taken care of you starting from move, basically intensive security, define away a lot of class or problems. That's common in smart contract language. That saves a ton of headache for developers. Off the bat then the object model really allow you to do things, compose things much more freely, much more easily, and that's what is about. So with swimove we did a lot more of also runtime, enforcement, everything around ownership object, right? So remember this is a coordination smart contract coordinating who gets to use the assets, who's touching it.
00:38:25.738 - 00:39:23.438, Speaker D: Only one, right? It's like all the things you have to do is making sure you verify ownership. So if you forgot an ownership check, you're going to end up with reentrancy attack. That sort of thing is taken care of at the runtime as well at the language level as it was a runtime, right? So the ownership model, owned or shared object, the things rules around that is all taken care of at the runtime. So these all come together. Object model makes huge difference just in terms of you're thinking about programming. In the modern programming, everybody understand what object oriented programming model look like, whether that's we don't believe it's a great fit for everything for smart contract because of manipulating assets, right? So that model makes it really easy. And you also have strongly static type, then you can build better tools.
00:39:23.438 - 00:40:02.094, Speaker D: One thing people may not be aware of is when you talk about dynamic type versus static type, it's a trade off between speed, ease of getting on boarded versus, well, getting it right for a smart contract. Because ultimately everything you spend all your energy on making sure it's right. So this is the right model and this is actually trading off. This is not even a trade off to consider. This is better for efficiency, for getting things right. And that allow you to build much better tooling because when you have static type information, your tools are going to be better. Could do analysis for you.
00:40:02.094 - 00:40:28.920, Speaker D: And also the model of code in solidity. You're probably familiar a smart contract carries states. So the code is actually not reusable. As opposed to move, there's a separation. So your code is a bundle you can reuse. So reusabilities also help with modularity, also help with developer experience. All these things add up.
00:40:29.770 - 00:40:44.940, Speaker E: So I'm hearing like ten X dev experience, infinite scalability, like all of these things that everyone wants to accomplish in blockchains. But candidly, setting bias aside, what would you say is sweet's biggest pain point today, and how do you guys plan on addressing it?
00:40:45.550 - 00:41:31.580, Speaker D: Well, I think getting our words out, making sure people understand our design, our thinking, why we do things a certain way for people to even be aware the blockchains are very different. You don't take your traditional blockchain and move on top and say all of a sudden he's like, yes, problem solved. That's an incremental improvement. It's a big improvement, but it's not how we design suite. So that's the biggest pain point is to making sure people understand that why we design suite this way and why you need to come suite and without them, actually, because it's just so noisy out there, right? It's just so noisy in their space. It's hard to get the words out. People just think about all paralyzation as if it's all the same thing.
00:41:31.580 - 00:42:24.154, Speaker D: And why is this important? Well, another thing that's a real big pain point is I think this collective for the whole industry, I think we can be honest with ourselves. Like people outside the industry, a lot of them have very negative views about the industry. Think about bunch of silly stuff, or even worse, bad actors. And we need to change that. So we're seeing good progress there, but we're not there yet. We're not at a point where every big company is like, okay, it's time to use a blockchain to solve our customer royalty problem or customer engagement problem, even our privacy problem, or all these other problem that's perfectly suited to be solved by a public blockchain and people not really understanding it. Sometimes they are sensitive because all the bad press around it.
00:42:24.154 - 00:42:26.220, Speaker D: So these are the pain points.
00:42:28.350 - 00:42:48.062, Speaker C: I wanted to spend some time on the consumer side of things. Eddie, you mentioned sort of like offline payments and perhaps in web two payment systems like WeChat Pay, you have offline payments. Mpeza in Africa, you're able to pay over cell service. How does offline payments on Sweetwork? Would you mind walking through it? Through that?
00:42:48.196 - 00:43:26.202, Speaker A: There's not much I can share yet. We're holding some of that back. But I can tell you that while we're Facebook, our goal was essentially to enable everybody in the world with a cell phone, anybody in the world with any kind of device that has any form of radio to communicate with one another. So you're going to see us launch this year a scheme that allows any phone in the world, any device that has, whether it's Bluetooth, whether it's VSAT, doesn't matter, to actually transact on the sweet blockchain. And you could do that without a full blown Internet connection as well. These are the things. And by the time you marry things like deepen on top of that, it's going to be a game changer.
00:43:26.202 - 00:44:07.386, Speaker A: We think this is where web3 really needs to go in taking the technology to where people are. Everything we've done, if you think about ZK Login, where users are right now, is their web two accounts. We bring the technology to them now, where users are with very basic phones, whether it's some device that has a very bad connection, it doesn't matter. Wherever you are in the world, we want to ensure that anybody in the world can gain access to this ledger that we've built. So you're going to hear some news around that with some partners, hopefully sometime this year. But our goal is really to really change the narrative on web3 being just purely speculative, but a fundamental piece of infrastructure that people use day in, day out.
00:44:07.568 - 00:44:37.190, Speaker D: Yeah. One thing I'll point out, just sort of almost like a prerequisite for offline payments to be possible, is you need to break this interaction model. In crypto, payment is like, well, you need to download wallet on the recipient side. You need to tell me your public key. Yes, there are some apps that can abstract away, but you're not doing it fundamentally at the protocol level. You beholden to a third party. So unilateral payment is the key.
00:44:37.190 - 00:45:00.534, Speaker D: Right. This is something back at Novi, back at Facebook, we couldn't do. We knew that that was a limitation of the technology. Think about like, I just want to know, rain, give me your phone number. I know your phone number, I know your email account. I want to send a payment to you. I don't care if you have a suite address or not a wallet or even three tokens to pay for gas.
00:45:00.534 - 00:45:15.970, Speaker D: I can just send the payments to you. That's unilateral payment and that is what zk logging in and zk sent has already proven to be possible. And that's a prerequisite to be able to do this kind of offline payment for the masses.
00:45:17.590 - 00:45:41.370, Speaker E: You mentioned the sweet token there, and I find it interesting that a lot of projects in crypto are trying to provide more utility to their token. And it seems like in your guys'case, you're almost trying to remove some of the utility by gasless transactions. Seamless user experience, which I strongly believe is the right way to go. But I'm just kind of curious, how do you see in the grand scheme of things, suite playing a role in the suite ecosystem?
00:45:41.870 - 00:45:58.622, Speaker D: I mean, the gas is always there, right? Gasless means somebody else paying for you, a product pay for you. This is not a new model. Somebody's paying the infrastructure cost. It's just not the consumer. It's solving the onboarding problem. So we will forever have a lot of this value. Yes.
00:45:58.622 - 00:46:33.030, Speaker D: We're not like Ethereum is almost arguing the expensive overhead or cost is good for the token or some OD. Weird reason. This is how big the piece of pie you have and you try to capture as much as the pie. We believe in growing the pie. So growing the pie means, yes, the gas prices needs to be low, the friction has to be removed, all these sort of things. But ultimately what we want to reach is what you can imagine. Every product, every interaction on the Internet may involve a blockchain and transaction on the blockchain.
00:46:33.030 - 00:46:57.234, Speaker D: And that's where we're going. And we're talking about millions of interaction per second. This is even old numbers from 2021, somewhere around 5 million /second so that's where we're going. So don't think near term, think long term. To get to that kind of skill, you have to remove all these frictions, all the things that's holding it back.
00:46:57.432 - 00:47:19.218, Speaker A: So if you think of sui, there are limited number of tokens, but infinite amount of TPs of transaction you can do. So the goal is to get as much transactions on Sui as possible. That's the goal. You don't want Swee to be a commodity. Sui needs to be a utility. There's something people use on a daily, daily basis, whether they recognize they're using it or not. That's the ultimate goal.
00:47:19.218 - 00:47:43.950, Speaker A: And our goal is to drive as much transactions onto a network via the applications who are actually finding value in using it as possible. And Sui has that capacity. But more importantly, I think Sui enables people to actually build things that they could not build in web3 or web two. So we think marry all those schemes together. It just makes it for a great opportunity for developers to come in and build some amazing applications.
00:47:45.330 - 00:48:16.490, Speaker C: I guess as a follow up question to that, then, I know Sui, the token has a finite supply of 10 billion. And that's a very different dynamic from perhaps other proof of stake networks such as Ethereum Salana, which both have flexible monetary policy, if that's the right word. Would you mind just sort of going through why that design decision and how you guys are thinking about long term monetary policy, or why, like a finite supply and perhaps how the storage fund and on chain data requirements plays into those dynamics.
00:48:16.990 - 00:48:23.866, Speaker A: I wish we had Alonzo on the call. Alonzo is our chief economist. He designed the entire scheme. I don't know if you want to jump in. I'm happy to.
00:48:23.888 - 00:49:40.530, Speaker D: Yeah. I mean, it's actually a little bit deflationary. This is a part people don't understand, right? Because when you have the storage fund and then later on you get it back, but there is a part forever there, right? So the more you store on chain, there are actually fewer tokens are actually available in circulation. And so over time, that's actually a deflationary. Now, you, traditional sense, you're burning tokens, but they are essentially locked away in the storage fund. So I think we believe this is the right design, because ultimately you want to get to the point where you're not almost like you don't create this artificial incentive for the network participant to just have free money, put it that way, because if you print more and then you just basically can just have infinite subsidies, which is probably an easier way to go, but it's probably not the right thing because you really do. The principle of it is to have the finite number of tokens and encourage utility, and making sure there's enough activities on chain, the utility can sustain the upkeep, the cost incurred by the network participants.
00:49:40.530 - 00:49:50.634, Speaker D: So that's the general principle, but the deflationary part perhaps is too subtle. And we really haven't talked about it much, but that's very key as well.
00:49:50.752 - 00:50:23.870, Speaker A: Yeah. Another thing to consider with Swee, validators are actively voting every epoch to set the gas price. And the reason for that is it creates an element of competition, but also it actually encourages gas fees to always stay low, and if anything, flat with respect to the dollar. And that's actually true. If you look at Swede's gas prices over time, it's actually been flat. Even in the periods of very high usage, when there was inscriptions and other networks and it took people down, it was almost boring. Nothing happened because the gas never changed.
00:50:23.870 - 00:51:10.530, Speaker A: Transactions went through the roof, but nobody notices because it could handle the load. The reason why we designed it that way is validators every single day have to effectively quote what gas price they're willing to charge, and they quote that as close to their cost as possible. If they quote too high, they earn less fees because others lower will earn a majority of the share. If they quote too low, they basically end up losing money because they're quoting less than the actual cost. So we've seen this scheme work really, really well over the last nine months since Mainnet, where validators are actively quoting price on a daily basis, and the price has actually been relatively stable. So it's a sustainable economic model that we've designed. There's a 26 page paper on the suite to economics that talks about these designs, including the storage fund.
00:51:10.530 - 00:51:12.660, Speaker A: That spells this whole thing out as well.
00:51:13.110 - 00:51:41.820, Speaker D: Yeah, I think there's two principles you have to remember when you think about suite design, is one is we're designing with the developers in mind, first and foremost, what they need, how they build a sustainable business, and then second is the free market dynamic. Right. We want the market to basically decipher itself through competition. Fair open competition subsidy can only take you so far. Eventually, the market dynamic dictates everything.
00:51:43.470 - 00:52:05.540, Speaker E: Yeah, that makes a lot of sense. And I can admire the fact that you're taking a little bit of a different approach than copy and pasting what's already been done in the industry. So kudos to you guys on that. But you mentioned earlier that there's a lot of different DAP ideas that you can think of that really are only possible on suite. Can you kind of dive into maybe one or two of those that each of you guys are excited about and maybe whether or not projects are actively building that idea.
00:52:06.550 - 00:52:40.442, Speaker A: So what's already started to happen, you probably see it soon, is every app in this week or system will allow you to log in using web two. Right. Every app you have to have a wallet. It means bluefin in the next week is launching this as well, where you can log into the app with your web two account and instantly, by the way, this is a self custodial login. It's not one where they take ownership of your keys and they have your password. It is a self custodial model where you log in with your Google account. You'd have the ability to trade with $50 for free and start engaging.
00:52:40.442 - 00:53:21.382, Speaker A: Think about what that does for onboarding for web3 applications. We think now app, since we can get a lot more adoption than apps and other ecosystems because they've opened up the door to onboard the next billion users using traditional incentive schemes. So that's what we're very, very excited about. And on top of that, you have apps start to give you the ability to transact without ever worrying about addresses. So if I want to send money from what I'm trading on Bluefin to what I'm doing on Navi as a lending protocol, you could just use human readable names to do that without to worry about actual on chain addresses. We think the experiences you can build on SUI will be very different to experiences that you can build on other chains. And in web two, in web two, assets are locked in your silo.
00:53:21.382 - 00:53:33.550, Speaker A: Now you have freedom of movement of assets. Users for the first time will have the idea that I have this asset in this ecosystem or in this particular application, and I can move it freely between other applications. We think that's very unique to Sui.
00:53:33.890 - 00:54:15.450, Speaker D: Yeah. Another thing I want to touch on is different. Right. So the category kind of applications, I want to take a step back and think about what blockchain was meant to do in the first place is replacing human disintermediation. So in a way I can say Sui is the first one that can disintermediate human. What does that mean? The problem with say the current model, ERC 721 trading AFts familiar example, familiar story. You heard everybody stopped dropping enforcement of royalties because the royalty enforcement was done by who? Human, not code, not software, not pre verified software.
00:54:15.450 - 00:54:47.698, Speaker D: It's fundamentally broken model. And I don't have time to go into all the details, but this interface model defining a standard that everybody have to come together, agree upon doesn't work. So you are fundamentally failing as this intermediation. So the other thing we are seeing right now is that, okay, I need a private chain, I need an app chain, I need a subnet because I want to control everything. Who are the participants? I want to control how the assets have been used and all that. Also the one we think about is right. Think about permission assets.
00:54:47.698 - 00:55:16.018, Speaker D: On top of permissions, blockchain, what does a permission assets mean? It's all these rules you want to enforce. If I want to require KyCML, that's permission. If I just want to enforce royalty payment, that's permission in some way. If I want to say I can only trade this to you. The trade can only complete if you agree to tweet about this experience on chain. You can do this. So that's the mental model.
00:55:16.018 - 00:56:03.550, Speaker D: This is what you can build with suite because you actually have this asset centric view. These assets are not just token that represent ownership of asset actually live off chain. This is fully on chain asset. It's atomic asset that enforce rules themselves. And that completely changed the game because now human representation and they can own assets and they can decide who has access to the asset. The coordination between human consumers and the products can be done at large scale because you can also do permissionless composability at both echo at asset level. This really opens up the so again, very, very different mental model.
00:56:03.550 - 00:56:04.942, Speaker D: But that's what we're striving for.
00:56:04.996 - 00:56:24.470, Speaker A: Yeah. Imagine being able to say you could only trade in this pool. If you have a JPMorgan account or you have an account with this particular kind of firm or whatever, you can verify. The smart contract on chain will verify that. In fact, the network itself can verify that engagement and allow the transactions to go through. It's a new form of model that I just don't think others are thinking about that it's enabling.
00:56:25.690 - 00:56:41.046, Speaker E: That is super interesting. And I know we've come up on time, so thank you guys so much for taking an hour out of your busy schedules to come on. Do you guys want to share any closing thoughts or where they can learn more about Sui or your individual Twitter handles? Whatever you want to close with the listeners?
00:56:41.238 - 00:57:03.550, Speaker A: Yeah, you could go to Sui IO. That's the best place. We actually have a new learning Sui or intro to Sui course you could take. It's actually very easy. You get to learn more about the paradigms that make Sui unique and also move as well. We've got a page that's dedicated to move that allows you to learn a lot about why the language is so easy to use and give you some really great examples you can build with. I'm on Twitter.
00:57:03.550 - 00:57:09.240, Speaker A: It's at Eman Abio. And Evan, I don't know if there's anything you want to add.
00:57:11.050 - 00:57:17.062, Speaker D: I'm Evan Webstery on Twitter. Easy to remember. Awesome.
00:57:17.116 - 00:57:26.438, Speaker E: Well, thank you guys so much. We will be sure to bring you guys back on in six months to get a checkup from you guys if you're free. So until next time, take it easy.
00:57:26.604 - 00:57:27.858, Speaker A: Thanks very much, folks.
00:57:27.954 - 00:57:45.390, Speaker C: Hey, everyone. Thanks for watching today's X research episode. I wanted to take a second and remind you about an upcoming 2024 digital asset summit in London this march. Seats are limited, so hit the link in the description and use the promo code zero x ten to save 10% on tickets. See you in London.
