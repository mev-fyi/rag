00:00:00.240 - 00:00:33.838, Speaker A: Eigen layer is designed on the principle of open innovation, which means let the people decide what what. Let each AV's decide what they really want to do. Each staking provides objective slashable security, Eigen provides intersubjective social slashable security. And your own token provides alignment, which is a different kind of crypto economic security. Your token stakers are the most aligned. They are the ones who will feel it the most. So these are different kinds of crypto economics.
00:00:33.838 - 00:00:47.398, Speaker A: This is like a swiss army knife of crypto economic toolkit. So you decide what aspects you want to load on, like your own token, what aspects you want to outsource. It's designed to be this flexible system.
00:00:47.486 - 00:01:26.184, Speaker B: We've teamed up with the Wormhole foundation, stewards of the wormhole protocol, the leading interoperability platform, powering cross chain transfers for 200 plus multi chain teams. Payment unique wormhole NFT just for zero x research listeners today, pair is an innovative pair trading exchange built on top of Simeo. Users can trade trending narratives with one click from blue chip narratives such as long BTC short ETH right through the whiff versus bonk. The hat stays on. Simeo's intent centric architecture enables deep liquidity, source off chain and broad on chain, and combined with pear, has democratized access to complex trading strategies typically reserved for institutional traders.
00:01:26.304 - 00:01:41.084, Speaker C: Avalanche is a smart contract platform that has a novel consensus protocol, subnet infrastructure and the HypersDK toolkit, which allows web3 developers to easily launch custom, powerful blockchain solutions. You can start building today by checking out the link below.
00:01:43.064 - 00:02:00.232, Speaker B: Before we get into today's episode, just a quick disclaimer. The views expressed on this podcast by either myself or any guests are their personal views and do not represent the views of any associated organization. Nothing in this episode should be construed or relied upon as financial, technical, tax, legal, or other advice. All right, let's jump into the episode.
00:02:00.368 - 00:02:12.884, Speaker C: What's up, everyone, and welcome back to another episode of Xerox Research. Today I have a fantastic episode lined up. We're joined by Sriram, the founder of Eigen Layer, a restaking protocol built on Ethereum. Shriram, thank you so much for joining us. How are you doing?
00:02:13.464 - 00:02:17.564, Speaker A: Very good. Thank you so much. Really excited to be here and chat with you all today.
00:02:17.894 - 00:02:41.874, Speaker C: Fantastic. Today is Thursday, May 9, but this episode will go live in two weeks on Thursday, May 23. As a reminder, you can use code Zero X research ten for 10% off your blockworks research subscription. Let's get into it, Sriram. Do you want to give a short introduction on Eigen layer and what you guys have been up to over the past month with the mainnet launch, the AV's mainnet launch as well as the Eigen token.
00:02:42.254 - 00:03:35.470, Speaker A: Yeah, the Eigen layer is a protocol that allows new decentralized protocols to borrow trust from the Ethereum. Staking so the root of trust in Ethereum, why do we trust the Ethereum blockchain is because Ethereum is built on proof of stake, which means you stake your ETH and then make a promise that you're going to run the Ethereum network correctly. And that's why we trust that the Ethereum blockchain is running correctly. And what Eigen layer does is to extend this. Like people can stick their ETH and make a promise not only that they're running the Ethereum protocol correctly, but also that they're running other decentralized protocols correctly. So this creates a new economy where like, you know, anybody can now just build new software. We call them avss, actively validated services.
00:03:35.470 - 00:04:34.654, Speaker A: Just think of them as like any decentralized protocol. Now, anybody who has an idea for how to build a decentralized protocol, they can write it as an AV's and write arbitrary code. You know, there's no constraints on what kind of code you can write and then deploy it to Eigen layer. And Eigen layer basically brings the stakers, which is the economic security, the node operators, which is the computational resources to actually execute these transactions, and then the settlement, which is on Ethereum, that is slashing and, you know, proofs that you can actually write to make sure that the nodes are doing their job correctly. So that's the kind of eigen layer economy. So you can think of it as it's bringing together stakers, operators and avss to actually create useful, productive services for the crypto economy. Another way of thinking about it is what is the kind of dividing line between what we call crypto or blockchain, and everything else is decentralized trust.
00:04:34.654 - 00:05:21.024, Speaker A: And so decentralized trust is the raw material out of which the crypto economy is manufactured. You can think of Eigen layer as a marketplace for decentralized trust, so you can actually kind of decentralize trust as a service. And so now, like, once you have decentralized trust as a service, you can start building newer and newer interesting applications on top. And so that's the goal of Eigen layer. So in terms of the roadmap and where we are at, you know, last year, I think, June, July, we launched the Mainnet where we had one side of the marketplace on Mainnet, which is staking. So essentially you can stake via two mechanisms. One is you can stake in Ethereum and set the withdrawal address to go through.
00:05:21.024 - 00:05:46.564, Speaker A: It's like a stop through the withdrawal flow, go through the eigen layer contracts. So that's a first mechanism we call native restaking. The other one is called liquid restaking. You can take an LST and then deposit it. These two features were live on Mainnet, you know, now for nine months. And, you know, we took a gradual rollout approach. This is our consistent approach we adopt across, you know, all our deployments.
00:05:46.564 - 00:06:37.638, Speaker A: The gradual rollout is we start with a capped amount of deposits and then like slowly raise it so that we can stress test the system all through. You know, smart contract systems are always risky and because it's immutable, and, you know, that's true for Eigen layer also. But the way to slowly stress test it and increase the kind of range is how we adopted it. That's the same philosophy we take to deploying the Eigen layer system, not only the deposits on Eigen layer. So the next phase of the rollout was in April, where we brought not only stakers, now node operators on Mainnet, avss. Anybody can build and deploy avss on Mainnet. Our own particular AV's called Eigenda event on Mainnet.
00:06:37.638 - 00:07:09.484, Speaker A: So eigenda is a data availability system, which is a data publishing system for rollups. So if you're an Ethereum roll up, it costs a lot to publish data on Ethereum. Instead, you publish data on eigenvalue. So Eigenda went live and the whole ecosystem kind of came together. Two major features missing in the mainnet is payments. You know, AVSS cannot do payments yet to operators in protocol. Of course, you know, there can be order protocol payments, which we see some emerging.
00:07:09.484 - 00:07:58.302, Speaker A: The next one is slashing. The core contracts for slashing were already there from last June because, you know, you can, the core of slashing is very simple. Burn your funds, right? So it's not like it's difficult to write a contract that just burns your fund. The hard part is actually making sure that the system, and like when, when an AV's deploys on top of it, how to make sure that they are actually, the slashing conditions are solid. How do you make sure that there is a, you know, process for vetoing? Does every slashing needs to go through the veto? There's a lot of complex details that matter a lot. And so we are just taking, again, a cautious rollout approach. So that's what's on Mainnet.
00:07:58.302 - 00:08:53.642, Speaker A: One of the reasons payments are not yet on Mainnet is we want to understand the market structure better as to what is the balance of powers, because initialization on some of these marketplaces matter a lot. If one side has too much market power, they'll basically command. So we are observing before we deploy. So that's the approach that we're taking. Of all the things I forgot to mention as we were building several of these, kind of a mechanism for AVss to borrow decentralized trust, one aspect that we found was missing is the ability to slash for things that cannot be proven on chain. And so that led us particularly to develop a mechanism to do it. And that gave rise to this concept of the Eigen token, which we announced in a major white paper a week or so back.
00:08:53.642 - 00:09:07.114, Speaker A: So that's the other dimension to the launch and going forward, several of these features are coming live, payments coming live, slashing is coming live again. Gradual rollout of all of these features.
00:09:09.294 - 00:09:38.974, Speaker C: Perfect. A lot to unpack there, but I kind of want to start off with the Eigen token. I feel like that's the most recent and I guess the most, in my opinion, one of the most exciting parts of it over the past month. I kind of want to diving into the white paper. I think the first thing that most people notice is inter subjectivity. And I kind of want to get your take on how you would describe this to somebody who is just reading it for the first time. What do you want them to take away?
00:09:39.834 - 00:10:14.474, Speaker A: Yeah, I know it's. We coined the term, like, pretty seriously, but it's amazing to see. It's a meme in crypto. We memes matter. In fact, intersubjectivity itself is basically just another way of saying what we all believe in. So let me start from the basics. I think, you know, back in the day, like maybe five, six, seven years back, if you think about, like, what people were talking about, what is a blockchain? And some people would say a blockchain is a truth machine.
00:10:14.474 - 00:10:54.984, Speaker A: I just heard this thing and I'm like, how does blockchain know anything about truth? Even I don't know what is true. Like, how does a blockchain know what is true? And that was a weird kind of a phrasing. And so that caught our attention quite a bit. So I'm like, what does a blockchain really do? And over time, I've kind of created our own mental models for what a blockchain is. And one way to think about it is, it's a device for commitments. I make a commitment that I'm sending this money to you, which means that commitment is automatically enforced. So, you know, this.
00:10:54.984 - 00:11:46.526, Speaker A: The reason I mentioned the truth machine thing is if something like that can exist, it's really amazing that, you know, there is a truth machine that can serve as a kind of, like a center point for society. But then you start thinking about what kinds of truths exist. And, you know, I would say, roughly, you can say that there is objective truth, which is mathematical truth, right? Like, so one plus one is two, or whatever. There's mathematical truth. Scientific laws are a form of objective truth. Okay? The law of gravity, prolarity, whatever. But so what blockchains have access to today is fundamentally just mathematical truths, right? So I, you know, I have a private key relative to a public key, and therefore I can send my bitcoin, that's a mathematical kind of a statement, that I have the private key relative to the public key.
00:11:46.526 - 00:12:40.824, Speaker A: So I have the rights to move my bitcoin around. But if you look at a lot of society, it's built on social truths. A social truth might be, is gold worth anything? Who is rich? A social truth might be who's the president of the United States? Who's the founder of Eigen Layer? These are all social truths. And they are truths because we all agree that it's true. And so if you look at kind of like, the structure of coordination in society, you'd see that a lot of coordination is built out of social truths. And a way for describing what is social truth is inter subjective. You know, what is objective is facts, right? Subjective is beliefs that a person holds.
00:12:40.824 - 00:13:11.466, Speaker A: Intersubjective is things we all believe in. We all believe that X. You know, Biden's the president of the United States, and somebody is the CEO of some company. All of these kinds of statements we all believe in. And that's the right kind of philosophy of what. How do we bring. If you want to build a truth machine, then you need to know what is the basis for what you're calling truth and inter subjectivity, or social truth is what a lot of you know.
00:13:11.466 - 00:14:06.018, Speaker A: When you think of an oracle problem, like, how do you know the bring the BTC to USD price on chain? It's basically intersubjective truth that the price was at that level at that time. You want to settle a prediction market. It's inter subjective truth that, you know, the Biden won the election or not won the election. You want to know, taking closer to home example, like we were building eigenva, a data availability system. One of the big faults of a data availability system is there's two functions of a data availability system is to store the data and then preserve the data. Okay, it's possible to create a zero knowledge proof that you're storing the data, because you know the data and you know your private key and you create a zero knowledge proof for it. That basically means you can actually prove that you're storing the data.
00:14:06.018 - 00:14:51.880, Speaker A: But did you serve the data to all honest people who are interested in it? That's not observable on chain, it's not provable, it's not a mathematical statement because I may say I served it, my network was bad or whatever. It's not observable, it's not rigid, it's not solid, but it is inter subjectively observable. We all sit outside and we see the system and say, hey, I tried querying this RPC and I never found this roll of data. I went and ran a full node and tried to connect to the peer to peer network for a week and I still don't have the data. I tried to run a light node and I tried to sample portions of the data and I tried to download it. I still don't have the data. And all of this tells not only me, but everybody who's outside can observe and say, oh, the eigenvalue nodes all colluded and withheld data.
00:14:51.880 - 00:15:51.206, Speaker A: So there is a data availability fault. So this is an example of an inter subjective truth. So I eigen token was created as a framework for bringing inter subjective truth on chain, or to punish validators for inter subjective faults. False that we will all agree from outside the reference frame of the blockchain that such a fault happened. But inside the reference frame of the Ethereum blockchain, the blockchain doesn't know. So that's the high level idea of the starting from if blockchains were to be truth machines, what do you need? You need basically a locus or first a definition of truth, objective and social truth. And then once you have social truth, how do you bring social truth on chain? And so that basically sets up the problem of we want to either punish validators for things that are socially attributable, but not objectively attributable.
00:15:51.206 - 00:16:01.990, Speaker A: So that's the scope of what, what we want to do. It is, you know, super fun. That intersubjective is a kind of like a memeable term, and a lot of people meme about it. I'm super happy about it.
00:16:02.102 - 00:16:44.728, Speaker B: Wormhole is the leading interoperability platform for multichain bridges and applications. With over 1 billion messages sent and 40 billion in value transferred, wormhole leads the industry in cross chain message volume and total value transferred. If you're a builder, wormhole has an extensive suite of tools and infrastructure to securely build multi chain applications. You can use wormhole to power defi NFTs governance and so much more. And wormhole supports over 30 blockchains and six different runtimes. Gamer unique wormhole NFT just for Zero X research listeners today fill out a forum, prove that you've listened to today's episode of Receiver Pro app, and you'll get an email over the coming weeks to claim your limited edition. NFT Pair is an innovative pair trading exchange built on top of Simeo.
00:16:44.728 - 00:17:05.514, Speaker B: Users can trade trending narratives with one click from blue chip narratives such as long BTC shortef ride to the whiff versus bonk hat stays on. Simeo's intent centric architecture enables deep liquidity, source off chain and broad on chain, and combined with pear, has democratized access to complex trading strategies typically reserved for institutional traders.
00:17:05.634 - 00:17:47.726, Speaker C: The age of interoperability is here with the launch of Teleporter, Avalanche becomes a seamlessly linked network of many sovereign blockchains that communicate so smoothly they feel like a single chain. Teleporter is an EVM compatible cross chain communication protocol built on top of Avalanche Corp messaging. It allows any EVM chain on avalanche to send messages, assets and data to one another in a simple, fast, affordable and secure way. Teleporter and Avalanche web messaging provide a new foundation for how avalanche blockchains can communicate and how developers can easily build cross chain applications out of the box. Build anything you want, any way you want, on the eco friendly blockchain designed for web3 dapps. Check it out by clicking the link below.
00:17:47.830 - 00:18:06.934, Speaker D: I definitely love to dive in specifically how you like use intersubjectivity within the eigensystem. So I'm curious, I guess to start off, what is the actual mechanism to decide or to actually slash within this eigensystem?
00:18:11.514 - 00:19:29.364, Speaker A: The next point. So now that we kind of set up the stage that okay, I want to bring social truth on chain and how do I do that? Particularly in the eigen layer ecosystem, we have a narrower scope. The narrower scope is we want to be enable arbitrary, decentralized protocols to be built like that's our goal, and to supply decentralized trust for protocols that are validated by that don't need to bootstrap their own trust network. So that's the kind of like a core requirement. So we start from the broader concept of intersubjectivity or social truth, but specifically what we want is some group of nodes are promising to run a certain kind of validation and they fail in that particular task of doing the validation correctly, and then you want to hold them to account. That is the core narrow problem that eigen layer wants to solve. Why does it want to solve it? Because we have this economy of actively validated services that are being built and you cannot slash eat for things that are not provable on chain.
00:19:29.364 - 00:20:32.850, Speaker A: You can by putting a committee and saying the committee is going to decide, then you don't really have higher trust than the committee itself. And of course some people are going to do it, but it's not a rigid enough principle to build a long term sustainable economy on top of. So how do we slash validators for faults that are attributable outside but not socially but not on chain? That's the specific scope. That's why we call it an inter subjective work token. Or you can think of it as an inter subjective staking system. So we want to just, so this is indifference from things like Kleros or like an Aragon court where you have jurors and people are actually sitting down and debating and deliberating and coming up with what is the right answer? That's not the scope of Eigen token at all. Scope of eigen token is nodes are performing automated validation in the normal mode.
00:20:32.850 - 00:20:58.450, Speaker A: No humans exist. It's just nodes are performing automated validation. You may be running an oracle, you may be running a da, you may be running an AI, you may be running a gaming system, something. It's all automated and just running on its own, but they all collude and try to actually attack the system. And then when the attack happens, they should be slashed. That's the narrower scope. That's why we call it an intersubjective fork token.
00:20:58.450 - 00:22:05.544, Speaker A: You have to stake the token for doing automated work like digital validation. And when you're doing that, we want to make sure that if you're not doing it right, you can be slash. Okay, how do we, how do we slash people for this? And the, the principle goes back to how does Ethereum slash when a majority of nodes are malicious? Majority of stakers are malicious. Okay, so one of the things I was really like surprised to learn as an academic coming in, in the academic world, a lot of the models for how blockchains work are all based on, if a majority of nodes are honest, then the protocol works and the remaining nodes can do whatever they want. But the majority are honest, then it works. That's the kind of like, you know, models that academics, you know, I used to study, you know, three years back. But as I entered into the ethereum ecosystem, one of the things I realized is actually the people building these blockchains are specifically in the Ethereum community.
00:22:05.544 - 00:22:50.318, Speaker A: Worry about even if the majority of the nodes are malicious, the system should still survive and go forward, which is a crazy, kind of like an aspirational goal. And that's the same goal we have. So you ask, how does Ethereum survive a majority fault? And the answer is, fork the chain. That's the answer. If the majority of the validators go rogue, as the community, as the society that is observing from the outside, from outside the Ethereum blockchain, we can all see that these guys have behaved maliciously. There should be an observability. For example, the majority of nodes sign an invalid block, then it is observable that, hey, the block is invalid, or the majority of nodes sign a block header.
00:22:50.318 - 00:23:33.710, Speaker A: But the data is not available for Ethereum. It's observable from the outside. So any observable fault automatically triggers all the outside nodes to come in and say, hey, this is actually wrong. I'm going to fork the chain. Okay? So forking is a mechanism to create not only a penalty for the majority nodes, but also to create this, you know, bring social truth on chain, because you fold the chain. Okay? So that was the basic starting point. That's how you become, that's a principle, right? Like, so you start with the social truth, but then how do you bring the social truth to bear? And on a chain, and the principle is forking, right? You fork the chain.
00:23:33.710 - 00:24:19.424, Speaker A: That's how you do it. Now you come and, you know, Vitalik wrote an article back in, in June last year, and he said, do not overload ethereum consensus. And it's a very important article, and it sets the shelling point for what we as the community actually agree or disagree. It's a very difficult thing when you have social consensus to agree on what we will fork the chain for and what we will not fork the chain for. And so Vitalik's kind of setting a shelling point for, hey, ethereum is not going to fork if Eigen layer or somebody else screws up. That's what he's saying. And it perfectly makes sense because a system with undefined social consensus basically leads to chaos.
00:24:19.424 - 00:24:46.174, Speaker A: A system with predefined social consensus and self verifiable, self absorbed. For example, in Ethereum, everybody knows if the Ethereum block is invalid, we will fork the chain. You don't need to tell anybody. It is a pre agreed rule that we self execute. So this is another important thing that I want to point out. People think, oh, Eigen token is used for social consensus. We don't mean social consensus as in we all meet in a room or meet in discord, and then we make a decision.
00:24:46.174 - 00:25:18.126, Speaker A: That's not what we mean. We mean that there is a pre agreed rule for how forking will happen, that you can self observe and self execute. Now, you know you have to fork. And so this is how Ethereum works. Now, coming back to how do we bring this? The problem is, if we're building Eigen layer on top of Ethereum, and you know something, somebody is slashing based on a committee, and the committee goes rogue, or they lose the keys, or something happens, and they just do this mass slashing, then now Ethereum has to fork. That's a disaster. So we don't want that.
00:25:18.126 - 00:26:12.258, Speaker A: We want to containerize a certain portion of slashing in the Eigen ecosystem. And so what we did is we figured out how to create a system where forking doesn't happen at the level of the blockchain, but forking happens at the level of the token. It's a brand new kind of idea. The roots of this idea exist from before. And I can talk a bit about it, but the idea is I don't need to drag the Ethereum chain into my, like, it's like my family dispute, and I'm dragging, like, the United States to it? You know, it's not fair, not reasonable. So can we actually build a containerized system where the token can fork like, it's a forking at the application layer, rather than forking at the chain layer. So how does this work? The Eigen token is what we call a forkable token.
00:26:12.258 - 00:26:40.994, Speaker A: Just think of like, okay, why is this particular ERC 20 contract, the Eigen token contract? Because we all agree it's inter subjective truth. It is social truth that that contract is the eigenvalue. In fact, you can go to, like, you know, Etherscan, and you'll find, like, scam tokens called Eigen already deployed. Somebody's deployed them, and they think that's. But nobody believes that that's the Eigen token. That's why that is not the Eigen token, which is the Eigen ERC 20 token is a social truth. It is not an objective truth.
00:26:40.994 - 00:27:21.922, Speaker A: So, okay, so that's the starting point. So now you can say, oh, maybe all you need to do is, yeah, there's the Eigen ERC 20 token. And if some people go crazy, we just like force the Eigen ERC 20 contract. That would be the simplest version of this. And really eigens, just a system built on top of this core idea that all you need is all value is the Eigen token. Is that the ERC 20 contract of Eigen token is a social truth. Can we, if the majority of the nodes, which is the problem that we are worried about, is majority of eigenstakers go and attack an oracle, because you need a majority to misreport in order to get a wrong answer.
00:27:21.922 - 00:27:59.388, Speaker A: Need a majority to withhold the data in order to get a wrong answer. You need a majority to do some of the. So each of these avss, you need, like, a lot of, lot of the eigenstakers to actually behave badly in order to create a malicious outcome. And maybe then it's worth it to actually fork the token. Okay, so that's the kind of, like, the next level of the idea is you have all values into subjective. Let's just fork the token. The problem with why you can't do this for any ERC 20 token today is that token has a non containerized life, which means somebody is trading the token in an exchange.
00:27:59.388 - 00:28:26.556, Speaker A: Somebody is using that token in a Dex. And now you say, fork the token. Then, like, it's chaos, utter, unrestricted chaos, because you know, somebody's selling that token, but you say, no, that's not the token, and this is the token what happens. So that is a major problem. So you can't just go willy nilly, fork a random ERC 20 token. It doesn't work because that token is, the surface area of the token is very wide. And so now you can't go and fork the token.
00:28:26.556 - 00:29:07.750, Speaker A: If you fork the token, then you have uncontrolled downstream impact. And that's really what the eigensystem is designed to solve, is we call this property isolation. Isolation is staking. And forking should be isolated from holding a token, from, you know, having a token in defi having a token in all these other places. If I can create a system where, you know, a version of the token is forkable, but another version is not forkable, then you kind of solve this problem. So that's the high level idea. Then there are other problems, which is forking creates a social cost.
00:29:07.750 - 00:29:39.842, Speaker A: Okay, suppose I have a token. And then, like, westy comes and says, oh, this is the real token. And then now, like, all of us have to create chaos and confusion, and everybody has to sit down and debate whether that's the right thing or this is the right thing. So, social forking has a social cost. So we need to meter the social cost and make sure that, you know, there is a, there is a system of reward and penalties for creating a fork. If you create a right fork, you should get rewards. If you get a wrong, create a wrong fork, you should get penalized.
00:29:39.842 - 00:30:11.518, Speaker A: Otherwise, we are wasting everybody's time here. So metering is the second problem. The third problem is, I call universality. Universality is you need this to work across a range of applications, because Eigen layer is an open innovation system. We are not building the Eigen token for eigenvalue. Building the Eigen token so anybody can come, and tomorrow you have a better oracle, you have a better AI in front, somebody else has some other thing, they should be able to leverage this to stake and support their security. So, universality, and universality has multiple dimensions.
00:30:11.518 - 00:30:44.774, Speaker A: One is, one dimension is the pre agreement on the token should be that it is universal. Like that it will fork for all these Avss. So I'll give you an example. There is a, this kind of a forking idea was already there in a prediction market called Auger. And so that's why, you know, a lot of the idea, like flow is, you know, this was implicit, this was there in Auger. And prior to Auger, it was already there in some of Vitalik's posts. And I'm told Vitalik's post has some precedent from this thing called truth coin.
00:30:44.774 - 00:31:31.380, Speaker A: We haven't traced that lineage down carefully beyond Vitalik yet, but we'll do it. The idea is that auger was a token which was used for, it's a forkable token, but used in the context of a prediction market. And because it's used in the context of a prediction market, auger will not fork for data availability or some other go and stake the auger token, and something bad happens somewhere else. It is not going to fork. The pre agreement is not that it will fork for all these other things, whereas the Eigen tokens, like, designed to be universal. So that's one part. There's another part to universality, which is, for example, when Auger was built, augur had an internal crypto economic calculation.
00:31:31.380 - 00:32:33.784, Speaker A: What it would do is it would maintain how many bets are open on all the prediction markets and say, oh, you know, the total amount of bets open on all the prediction market is 30 million. So I need to make sure that more than 30 million is slashable in the auger token. So it has an internal metering of the profit from corruption, an adversary, how much they can extract profit if they go rogue. And what is the cost of corruption? How much can they slash the adversary? This calculation is intrinsic and maintained inside the auger system. And because it's application specific, it's easy to do it because, you know, oh, that's the total amount of bets. So in terms of intersubjective tokens, you can think of, Auger was an application specific inter subjective token. And Eigen is a universal intersubjective token, just like bitcoin was an application specific blockchain, and Ethereum was a universal blockchain.
00:32:33.784 - 00:33:25.916, Speaker A: This is the same kind of mapping. But the problem to solve is, how do you know, like, if Eigen is used across 300 AbS's, how do you know the profit from corruption? How do you know the cost of corruption? How do you maintain the system in crypto economic equilibrium and make sure that it's always secure? So that's the hard problem, right? It's not to just say, here's a token can fork for anything. That's easy to say, it's just what you say. But the maintenance of that condition is hard. And so how we do that is a whole thing. That's a third problem. So I talked about, you know, the cost of social consensus, the isolation between Defi and, you know, forking, and then the universality.
00:33:25.916 - 00:34:05.784, Speaker A: And then the last one is what I call compensation. So, compensation is basically the idea that, you know, if I'm using Eigen, da, and I got wronged because, you know, validators basically colluded and made data unavailable. My roll up gets rugged. So I'm suffering the consequence of the bad action of these eigenstickers. Now, I should be given some compensation for this, like, bad action of these stakers. Till now, before Eigen layer, no crypto economic system had a system of slashing and redistribution. This was not that.
00:34:05.784 - 00:34:34.493, Speaker A: And we introduced this in a kind of a major paper called stake. Sure, for just like objective false, what you do is you stake, and instead of just slashing and burning the funds, you slash and redistribute the funds according to certain, you know, calculations. And that is the fourth property that we built into Eigen. So I've just given a property tour of what set of properties we have. There's a whole thing to go into like how we get these properties.
00:34:36.473 - 00:35:20.880, Speaker E: No, that was a really comprehensive answer. I actually had a question later on about stake. Sure. And with respect to attributable security, because I did read that paper that you released back in January. It was really thorough and I think identifying the cost of corruption versus the profit of corruption, I think it was my understanding, my conclusion, please correct me if I'm wrong before I guess dive into the next question, was it sounds like the cost of security should be related to effectively bridge volume of a given AV's and not necessarily like the TVL because you looked at, I think you used like Ethereum as an example. There's x dollars of TVL and Ethereum, but there's only, I think like $33 billion of staked, stake to the network, which at that time in January. I don't know exactly what the number is today, but it was, it was a really interesting piece overall.
00:35:20.880 - 00:36:11.940, Speaker E: So. And I know a couple other shared security solutions in the market are actually using that as a point of reference for how they plan to, I think, create a similar restaking mechanism to Eigen layer. One question I do have around the universality of Eigen, the Eigen token for inner subjective slashing. And then I think drawing parallels to auger with it being application specific. In this world of 100, of 1000 avss leveraging Eigen layer, there's obviously a cost of forking. There's a social cost of forking. How, how does the system, how does the system be able to challenge every inner subjective fault in a world of thousands, thousands of ABS is obviously, which is the, I think hopefully the end goal of Eigen layer is where we see, you know, this level of adoption.
00:36:11.940 - 00:36:27.314, Speaker E: Because I, I understand having, taking off the, shouldering the responsibility of not overloading social consensus on Ethereum. But I'm concerned is that now Eigen itself is overloaded.
00:36:28.214 - 00:37:19.450, Speaker A: Great question. Okay, so the scope of the current white paper is when what I would call perfect restaking, or you could say everybody's staked into everything. Okay, so imagine all the eigenstakers are staked into all of these different applications, which is in some sense the most overloading and the thing that people are most should be most worried about. But actually I think it's the best case. Okay, so what happens in this scenario? So firstly, when we are talking about slashing, we are, we are talking about a majority of. So we are only talking about Abs's where a majority have to do something bad in order to get to a fault. Not like one guy did something bad.
00:37:19.450 - 00:37:48.464, Speaker A: And then like, you have to get to a fault. So that's not the scope of the type of slash ability we are talking about. And the way you would handle one guy going bad is by saying that if one guy goes bad, the other guys can then like come in and double check. So you can have a two tier escalation model and the other nodes which are opted into that particular AV's can double check it. And like, only if they all went bad, then something bad should happen. So that's the starting point. First, everybody's taken to every abs.
00:37:48.464 - 00:38:36.552, Speaker A: That's the scope of the current white paper. We have more coming up to expand it, but already this is a mouthful. So let's, let's keep this brain full. The next one is, suppose everybody's taken into every areas and the avss are such that if a fault happens, a majority of nodes, or like, you know, one third or some significant fraction are attributable that they are wrong. So that's the starting point. And that already like, makes this a very extreme, very narrow, like, rare event. Just to take the history of all blockchains, this has happened zero times, right? And so then it used to be like, why build things that happen zero times is because these things exist.
00:38:36.552 - 00:39:02.774, Speaker A: It will not happen, right? Because the system is designed carefully that if you attack it, you're not going to profit, you're going to get screwed. You will never attack it. It's kind of the mutually assured destruction. It's not mutual, but assured destruction to the attacker basically means that you never do it. So that's the principle. So firstly, slashing only when. So everybody's taken to everything.
00:39:02.774 - 00:39:29.544, Speaker A: Second, a majority have to be bad to create a fault. And therefore even a challenge that this should be forked should be very, very rare. It's not a normal thing. So it's not a, you know, we say it's a forkable token, but it's not a forking token in the sense that you don't expect it to be forking all the time. It's not like every dispute results in a fork. Nothing. It's very, very rare to fork.
00:39:29.544 - 00:40:08.772, Speaker A: And how do we impose it? Okay, so you can say, yeah, you know, this is what we expect to happen. How do we ensure that forking is rare? And so here is a couple of parameters that are built into the protocol called CPF and DPF. CPF is called commitment per fork. Commitment per fork is. Think of it as if I want to create a fork, I need to burn a bunch of eigen tokens in the current fork. Why am I okay with burning a bunch of eigen in the current fork? Because I will of course, issue myself those eigen in the new fork, and I believe the new fork. So I can kind of burn the eigen in this fork.
00:40:08.772 - 00:40:58.440, Speaker A: It's really serious. So for you to actually burn a bunch of tokens, to say that the other one is the right one, and, you know, what is this parameter? Is it like 2%? Is it 5%? Is it 1%? This is need social like, you know, setting up of this parameter, it has not been set up, but some parameter exists, like that CPF commitment per fork, which is basically saying that if you don't burn enough amount of eigen, you will not be allowed to create a fork. So forking automatically becomes serious. It's not like a, oh, I just, you know, callously say, oh, here is a fork, here is a meme, and therefore I'm going to fork. You can't do it. Okay, so that's number one. Number two, on the other fork, like CPF says that I'm going to burn on the original fork.
00:40:58.440 - 00:42:00.092, Speaker A: DPF is called deflation per fork, which basically says in the new fork, the total supply should be lesser by DPF. And why should it be lesser? Because you found an attacker, you're going to burn their token, at least some percent of their token. That means the total supply should be lesser. What this does is if forking worked correctly, which means either this fork took off or that fork took off, then in both the forks, the total supply of eigens reduced, and you've compensated for the social cost of all the people who had to worry about is this fork right, or is that fork right? That's the social cost incurred. And you're paying off the social debt by extracting the value either by the wrong, from the wrong attacker, or the wrong challenger, or from the malicious takers, you're extracting the value and distributing it to the. To the community. So that's how metering, basically the solution for metering, the cost of social consensus, that's how it works.
00:42:00.092 - 00:42:30.614, Speaker A: This is why we think if the system is well designed and properly set up, forking should never happen. Just like 0% of the. In the history of all blockchains, there has been a majority malicious attack, which lead to majority slashing. There have been isolated incidents where you slash one guy. We are not talking about that. That could be handled inside the AV's. The AV's has to have a majority fault before it gets triggered to the eigen social consensus.
00:42:30.614 - 00:43:09.586, Speaker A: So that's how it's handled. So this is a principle in computer science called amplification is basically, you say a fault occurs in a small group. You amplify that fault to a majority of nodes, and then now it's enough, and it's serious enough that everybody can consider whether that is a fault or not. So that's how the Eigen system works. So it's really rare to be in a scenario where you need social consensus. When it is there, you can exert it and actually create the fork. Imagine a majority of Eigen da stakers actually go rogue and do something crazy.
00:43:09.586 - 00:43:16.214, Speaker A: Then you need a last resort to actually slash them. And this creates the last resort to slash them.
00:43:18.274 - 00:43:31.064, Speaker C: Sriram I'm kind of curious about avss. How do you see, see the supply and demand match over there? Like it's $15 billion too much in security for what's needed. How do you see the market playing out?
00:43:32.404 - 00:44:20.590, Speaker A: Yeah, the core bet of Eigen layer is that once you make decentralized trust easily accessible, lot of people will want to use it. That's a corvette. It's kind of like when you try to size the market. In many times when new technology comes up, the size of the market expands because of the ease by which something is possible, you know. So that's the core bet. How long will it take for that to manifest? It's not this year. It's not this year.
00:44:20.590 - 00:44:52.762, Speaker A: It's not next year. It is going to take time for actually thousands of avss to be built and those avss to have productive yield. Absolutely. The. But I think people are thinking about the yield question a little bit erroneously. The idea is, if you're not. So imagine this $15 billion state.
00:44:52.762 - 00:45:44.108, Speaker A: And there's really only demand for $5 billion of like state, you know, of security. As long as there is, you know, liquid staking or liquid restaking tokens, which basically anywhere others otherwise exist. Imagine lido exists, and that is an LST. And what is the opportunity cost of staking on Lido? You get Steth versus you can hold eth. As long as powerful liquid restaking protocols exist on top of eigen layer, the opportunity cost of actually staking through Eigen layer can be very small. So what's happening here is basically there is a trust flow under trust assumption. So that's.
00:45:44.108 - 00:46:33.120, Speaker A: That's how like you think about eigen layer is staking. And, you know, having proper node operators run the software is the trust assumption that AV's is taking. But. And the way you're getting the trust assurance from Eigen layer is that, hey, these guys can be slashed if that goes wrong. But for somebody who can actually assume that stakers and operators are going or operators are going to do the right thing, there is no additional real risk. Of course there is smart contract risk, but that also exists in a liquid staking protocol. There is a world in which even if the relative yield of eigen layer is small, still worth it because it's a little bit more for.
00:46:33.120 - 00:47:02.766, Speaker A: And you still have liquidity and you still have, like, you can go and do all the other things. So, okay, so that's just to set some, you know, comparative expectation. Because, you know, you have something like Lido already there. You get an you stake and then you get an STE. And what is the fundamental risk of holding STE is that the operators don't do something malicious. That is the fundamental risk of holding STE. And there's something similar that you can build on Eigen layer.
00:47:02.766 - 00:47:49.112, Speaker A: Of course, you're adding the fact that the AV's slashing contracts are correct and some few other things. But the core eigen layer contracts are similar to the core, let's say, lag of contracts. And so you could do that. Okay, so that's the first thing to normalize, you know, even if a lot more stake is sitting on Eigen layer. As long as there is the, the liquidity premium is you don't have to pay because you have liquid staked tokens that actually have, you know, can be used elsewhere. That's number one. Number two, what is the rewards that people are getting? You know, we think about real, real fees actually being paid to the AVss and then come back.
00:47:49.112 - 00:48:22.576, Speaker A: I think that's still going to be a bit further in the future. What we do see is AVss have token emissions that they're using for already, for security. They'll be paying a portion of it to, you know, whoever is securing it. Usually, you know, you look at the total market of, you know, in, in cosmos, in like every chain. How much is given for inflation. A portion of it can be allocated to each stakers in Eigen ladder. So that's the second thing that we are starting to see will happen.
00:48:22.576 - 00:48:53.026, Speaker A: And when we're designing, for example, I've mentioned the payment router and the payment system. We're observing and understanding what is the market dynamic here that actually will play out. So that we build a payment system that's actually compatible with it. So that's the second one. So the. Because a lot of the real yield, which is actually people paying in ETH. And that satisfying the ETH stakers is further into the future.
00:48:53.026 - 00:49:20.992, Speaker A: It is not this year. So that's the next thing. And this is different from, oh, you know, because people are using this system, they're going to air drop or some other thing like, that's not what I'm talking about. I'm talking about paying a fixed fraction of their inflation to the stakers that are actually securing their system. There is a clear synergy and a win win deal there. It's not a out of goodwill. You have to do something.
00:49:20.992 - 00:49:57.368, Speaker A: Okay, so that's the other, other part. And the third one is, I think when people think about this, I saw people writing like, thread and so on about how much security is enough for a given abs, and in a pooled security model for everybody, like, oh, 1 billion is good enough. I think this is. I think maybe other people built restaking. This is how it would have looked. We do not, you know, we are not building a system where everybody thinks they have the same security and that security is completely leveraged. That's not the system we are building.
00:49:57.368 - 00:50:25.954, Speaker A: We have us in eigenvalue. We have a system called attributable security, which we just talked about. The idea of attributable security is that you can slash and redistribute a portion of the stake to the different AVss. When you have attributable security. This is non leveraged. So the total amount of attributable security. So Eigen layer maintains a calculation called proof of solvency.
00:50:25.954 - 00:51:21.538, Speaker A: And proof of solvency basically means, even if each AV's has a certain amount of attributable security from the Eigen layer protocol, even if all of them trigger slashing simultaneously, the total, all the attributable security can be honored simultaneously. That is the proof of solvency. So the way we don't do this by decoupling the pool, we don't say, oh, you know, in AV's one, I have $100 million state, in AV's two, I have $100 million. Now, that's not what we're saying. Saying the stakers are staking into potentially everything into whatever they want and potentially everything. But the protocol, the Eigen layer protocol takes up the role of how to allocate and these attributions across these things, collect the fee of all of them, and then redistribute to all the stakers. This kind of like a central crypto economic engine is running through Eigen layer.
00:51:21.538 - 00:52:21.154, Speaker A: So once you go to the attributable security world, it's clear that avSs, a base built as an AV's, would want much more attributable security than a kind of like a random AV's. And so you want to make sure that there is this expressivity in the protocol so that people are paying for actually something that they're getting from the protocol. This kind of like attribution and attributable security is built, is coming up not only for each staking in agile, but also for eigenstaking. So eigenstaking, when you go back to the question of whether there are hundreds of AVSs trying to use the same stake, how do we know that the system is in crypto economic equilibrium? Because each AV's can specify how much attributable portion that they have that they can slash and redistribute. So that's how the kind of eigen layer system works. So the three points are. Number one is minimize opportunity cost.
00:52:21.154 - 00:52:47.444, Speaker A: Number two is before real yield comes in, the AVSs use a portion of their token to actually fund security for themselves. The third one is actually create an incentive for people to. To have a portion of attribution to them instead of being smudged into a big pool where they don't know what they're getting and therefore not going to pay for it.
00:52:50.624 - 00:53:33.906, Speaker E: That makes a lot of sense. I've personally been pretty involved in the cosmos ecosystem for a while and saw the launch of replicate security, saw the issues with replicate security. Obviously, there's a lot of lessons learned, best practices from, I think, polkadots, crowd loan and paraslot, para auction slot mechanism. I think one of the questions I have is around the payment structure. Specifically, one of the concerns that I've had, and this is not eigen layer specific, this is shared security as a whole, because you kind of hit the nail on the head. A lot of these AVss, or consumer chains, whatever you want to call them, it takes years for them to hit sustainability where they can really function on their own, stand up, their own, their own validator set. And I think that's been a lot of the points of contention.
00:53:33.906 - 00:54:28.694, Speaker E: I think in the cosmos ecosystem around the cosmos, hubs like consumer chains, is there like a general. One of the concerns I think I have is like this idea of security mining. So in DeFi saw liquidity mining, you saw people farming emissions for DeFi protocols. I think one of the concerns I have, and you're going to see, I think, in other shared security models as well, is depositors are going to farm emissions to secure the chain. And the moment that those emissions dry up, you know, pull out their, their assets and then they maybe move on and attribute their, their security to another AV's. Is there like a mental framework or is there, is there a framework that either like the liquid restaking protocols themselves are taking on, or maybe Eigen layer eigenfoundation is taking on to try to like create a model for like, what does good, a good emissions budget or security budget look like as an AV's? And maybe this is application specific to AV's, but would love to free to like kind of opine or, or further.
00:54:30.194 - 00:55:26.734, Speaker A: Yeah, so the way we solve. Okay, so there's two parts to this. How do you set the security budget from an AV's point of view? What's the right inflation? How much do you pay? Very, very hard kind of question. Because, you know, when you set this parameter, we could, for example, set a parameter and say you have to pay x percent of your token, and that's what you have to do. If this is miss set, then you either miss a large portion of the market, they just go away, or it's too low. And the real fees model that the replicated security was running on, where it's too low, it's not enough to keep the system running. How do you have enough expressivity in the market that basically you're making sure that all the market participants are actually meeting their demands.
00:55:26.734 - 00:56:10.076, Speaker A: Otherwise this market will unravel. And it is a hard, hard, hard question. So we think about it a lot. This is not the kind of thing where you can simply many, many systems which look like they're taking off will unravel if the market structure is not correct. So it's very important to get it right. But going to the thing of what we are doing, despite like how to make it robust, one thing is draw a lot of pools. Always have a lot of pool security, but have a portion of attributable security.
00:56:10.076 - 00:56:41.998, Speaker A: So this is a kind of first principle. And the principle is that, hey, if my rewards dry up, I should still get a lot of pool security. What do I mean by pool security? To the cost to attack my chain is still high. I want to maintain that, but I will not be able to slash and redistribute a lot. It's okay. I mean, like, that's all that you can offer, that's all that you are paying for, that's all that you'll get. So this differential quality of service, which is that if you pay more, you get more attribution, but a lot of people get a lot of pool security.
00:56:41.998 - 00:57:24.688, Speaker A: So that is one very important concept. But one thing when we are talking about pool security is right now we are only calculating the cost of capital. There's also a cost of operations. So we have this framework, you know, again, like everything is gradual and no, in phases in eigen layer, but we have a framework for computation payments as separate from security payments. In fact, this, I think is the biggest error in all of crypto today is these two are smudged into one thing. Like in Ethereum, you're paying a transaction fee, which is gas. It seems like it's for computation, but really computation is much cheaper in AWS.
00:57:24.688 - 00:58:25.194, Speaker A: Why are you paying for gas on Ethereum? Because you're getting security security and computation are smudged in to one cost. They should not be, they should be different. So Eigen layer will have computation payments, which basically keeps the computation and the operators afloat because that's the marginal cost of pool security is I have a pool I want to just add on more things I need to keep, make sure that the operators can run at a healthy profit margin. That's the computation payments. And things that have more computation should have more computation payments, things that have less competition should have less competition payments. So commutation payments as a separate phenomenon from, you know, security payments and security payments for pool security as a different phenomenon from attributable security payments. So basically like create this graded structure of what are you paying for? What are you getting? How do you keep that market participant healthy and active? So.
00:58:29.674 - 00:59:16.198, Speaker E: I could. Yeah, no, that makes sense. It's definitely not an easy problem to solve. Nobody's really come up with it. But I agree generally, like, there's two payment structures. It's paying the node operators and then paying like the security, which is paying the delegation, the assets that are backing the node operations, node operators. One question, one follow up question to this, and obviously west team and Bokachu loves for your time and after, what are your thoughts on like validator bonds specifically? Because one thing that I think I've seen, like, I think ETH research write a little piece about as well, is like in DPOS systems, node operators are obviously delegated their stake overall majority.
00:59:16.198 - 01:00:01.458, Speaker E: But at what point is like, they don't necessarily have skin in the game themselves because they maybe, like I know some of the top operators in Cosmos ecosystem, for example, 99.9% of their stake is delegated to them and they have no, they don't own their own, the own native asset of the proof of stake network do you envision? I know this is very hard to have like on chain rules for like off chain actors because you can especially like with centralized validator, centralized exchange validators that control their delegated stake, they could always put up their own customers deposits as like a validator bond. But do you do envision a system around Eigen layer where there is like the more stake you get through eigen layer deposits, the more bond you have to put up as your own on your balance sheet?
01:00:01.626 - 01:00:55.586, Speaker A: No, we don't have that at all. Somebody could build an LST or LRT on top of Eigen layer which actually enforces that. Kind of like rocket pool, right? So rocket pool has that kind of a mechanism, but we don't have it. We don't enforce it because why is this? Imagine you're blackrock and you want to make a deal with Coinbase to actually run your node operations correctly. That is a massive amount of not only trust, but also legal compliance and other things which makes the operator behave correctly. So by enforcing anything in protocol that now Coinbase has to put up like, you know, $1 billion for every $10 billion from Blackrock, we are enforcing a market structure that is not necessary for that participant. So we want to create like a universal mechanism.
01:00:55.586 - 01:01:46.638, Speaker A: So we don't want to enshrine a particular opinion that this is how trust is formed between the staker and the operator. But we want to encourage many, many mechanisms of trust to be formed between the staker and the operator. So some LRT would be like rocket poll and they'll do this. We also have other mechanisms for enforcing trust between staker and operator. Some operators already we have like LRT's like this, which are run your, run your node operations inside trusted execution environment, which is a hardware protection. So unless Intel's crooked or whatever, I would basically be sure this is the code that the node operator is running. And you don't have to run the entire code inside that hardware module.
01:01:46.638 - 01:02:22.708, Speaker A: You only run the critical code like signature issuance, and you don't double sign that is happening inside that module, for example. So we call these anti slashers. So you are basically like making sure that you can't get slashed. Because the thing that triggers slashing is double signing. And the double signing code is not run like, you know, it's run inside this trusted execution environment. So even if the operator goes rogue, unless they break the te, they cannot actually get you slashed. So this is a different trust model, right, between staker and operator.
01:02:22.708 - 01:03:08.964, Speaker A: And solving the principle agent problem and in general putting this pressure onto the staker that hey, if you don't delegate correctly, you will lose your ETH is actually a really interesting and important thing. It's one of the things we are thinking a lot about is how to make sure they feel this pain so that they actually do this delegation correctly. If you make slashing really, really, really rare, then they'll never feel this pain and there'll be just like one major catastrophic event where everything gets slashed. So you have to make them feel the pain in the short term. So I don't want to give up too much of our new slashing design, but that is, these are important issues that we have to consider to actually build the system correctly.
01:03:11.024 - 01:03:49.988, Speaker D: Awesome. I definitely want to get your thoughts on. So we've talked about like basically this two token system of ethan Eigenvalue. What we're going to start to see is like almost third tokens in the system, which is the ABS's themselves. Obviously as an AV's, you're going to want to provide the most value to your individual token. So I'm wondering your thoughts specifically on how like a third token and AV's token potentially fits into this roadmap. What are some things avss need to be considerate of? Of like yes, you want to provide value to your token, but you also need to provide the utmost security to your users, etcetera.
01:03:49.988 - 01:03:54.444, Speaker D: So like, what are the things you're thinking about of like introducing a third token.
01:03:54.604 - 01:04:34.430, Speaker A: Yeah. Eigen layer is designed on the principle of open innovation, which means let the people decide what, what. Let each AV's decide what they really want to do. How much of shared security do you want? How much of personal security do you want? But I want to just say that these three different quorums provide very different kind of security. Each staking provides objective slashable security, Eigen provides inter subjective Social Security. And your own token provides alignment, which is a different kind of crypto economic security. Your, your token stakers are the most aligned.
01:04:34.430 - 01:05:20.294, Speaker A: You know, they take exposure in your ups and downs. So if there was something which was neither like inter subjectively attributable nor objectively attributable, but is going to lead to downfall or degradation in your own value, they are the ones who will feel it the most. So these are different kinds of crypto economics. This is like a swiss army knife of crypto economic toolkit. So you decide what aspects you want to load on, like your own token, what aspects you want to outsource. It's designed to be this flexible system. So a lot of people say to me that, oh, you know, over time maybe all the avss, they'll rely only on their own token, all of this, it's possible if that happens, and that's what leads to more innovation.
01:05:20.294 - 01:06:03.664, Speaker A: It's amazing that we helped bootstrap lots of new avss, but we do think there is a lot of value of shared security that people don't fully understand. For example, when you have five services, DEA, Oracle tier, storage, Ji, whatever, that you're integrating to actually create an end user application. If the same stake is taking to all these applications, I only need to take one x the attributable security instead of five x the attribute. Imagine there was a separate insurance for an oracle, separate insurance for a DA, separate insurance. I have to pay five x the premium to actually get. You know, I need to make sure the Oracle is secure for 100 million. I have to make sure the DA is secure for 100 million.
01:06:03.664 - 01:06:34.242, Speaker A: I have to make sure the each of these things are secure. Instead, what Eigen layer does is offer an economy of scale so that the same stake secures all these five things. You only need to take one extra insurance and that protects you against all faults of all these different people. That's a really, really, really crazy benefit. So over time, the economy of scale outweighs. So just kind of sense of numbers and how we think about it. A typical cloud application uses 15 SaaS services in the back end.
01:06:34.242 - 01:06:58.918, Speaker A: This is our vision for where crypto will head. A typical crypto application will use 15 avss in the background and you just bundle all of these. So Eigen layer allows you to create post market bundling. Post market bundling. So you, I built, I'm the best guy to build an AI inference. You are the best guy to build an oracle. Somebody else is the best guy to build a threshold encrypted mempool.
01:06:58.918 - 01:07:34.314, Speaker A: They build all these things and I just go and subscribe to these services and I have an economy of scale as though they were built pre market. Somebody decided like Tara bundled the Oracle and the chain and they bundled the oracle into the chain and this needed somebody to think that these two had to be bundled. Eigen gives you post market bundling, open innovation and shared security, and there's a superpower of economy of scale there. And if it's worth it, people will stay. If it's not worth it, they'll go to their own token and it's exactly how it should be.
01:07:36.254 - 01:08:02.264, Speaker C: Perfect. Shuram I actually have a question on how you guys approach avss, or rather like how avss approach you. This is something that I've wondered for some time, because obviously the end goal is like hundreds and thousands of AbS's. What level of support do you guys provide to these abs's? And like, how does, do you guys actively seek services? Do they come to you? What's the relationship like?
01:08:02.644 - 01:08:45.721, Speaker A: Yeah, I think right now I would say there are three categories of how, you know, we interact with avSs. There are one is, I would call them bundles. So pre existing bundles like Alt layer has a bundle called restaked roll up. It's a bundle for actually running a roll up with sequencing and validation and finality on top of Eigen. And so they've already built it. And so what they do is they go and get lots of people to come and use it. So this is a bundle ethos is basically built a cosmos SDK on top of eigenvalue.
01:08:45.721 - 01:09:19.650, Speaker A: And so they can basically get consumers to actually come and build it. So they have inside their own framework, some kind of atomic composition, whatever. So they have their own economy. But it is. So this is one aspect bundle. So the bundles can scale a lot because it's just the same box being run by like hundreds of thousands of these different people. The second one is there are outside teams which are actually building things like SDKs to help avss build new things.
01:09:19.650 - 01:09:57.729, Speaker A: Authentic is one of them. We have others coming up, but that basically is a market where they are saying, hey, you know, you want to build an AV's, I'm going to help you build an AV's. So that's, that's a second one. They have a set of tools, they have, you know, personal interaction and so on. And of course we also do it, but our bandwidth has been somewhat limited and we are scaling that effort quite a bit. The third one is, the third category of ABS is we call these actively validated services, not chains. And it's for a good reason.
01:09:57.729 - 01:10:46.944, Speaker A: It's because we think that these services are the minimal atomic unit of what needs to be built. And then you should be able to concatenate many, many services and create like your own, you know, end application. So this is a different view than both the, what I would call a single chain view of the world, or kind of like a roll up view of the world. This is basically saying each application basically concatenates a bunch of like, you know, decentralized services. And that's what an application is. And the, in this world. So what we do is we have put up a lot of ideas on how, what is the structure of avSs? We work closely with people who are inventing categories of AbS's.
01:10:46.944 - 01:11:32.640, Speaker A: So whether that is a ritual which is doing any inference, whether that's a phoenix that's doing fully homomorphic encryption or incoherent, or, you know, people who are basically like inventing new categories of like, what could be structured as avSs, that's like really hard because you have to come up with a brand new protocol. You have to think about it from first principles. You have to figure out what is the trust model, all of that. So because that's the place we, our own inputs are most helpful, is kind of navigating the landscape of trust models. So that's the three categories that we have with bundles, custom help and tooling. And then the third one is actually working together to design the protocol perfect.
01:11:32.712 - 01:11:46.444, Speaker C: And going off that eigenda is obviously closely related to Eigen layer. Are you guys planning on launching any more abs's or inter subjectivity services?
01:11:47.344 - 01:12:38.454, Speaker A: No, we are expecting or working with other people to launch more services. We already have way too much to build just to get Eigen layer going. So it's not our intention to necessarily build all the AVss on top. Our intention is to encourage people to build Avss on top. And the thesis is open innovation, right? And the thesis of open innovation basically says that the, the amount of insight and innovation that exists out there is far higher than the amount of insight and innovation that likes this inside any, any entity or company and our core development team. And that's our core principle. But there are some things that unblock a lot of other things downstream, right? Like those are the only things that we will try to build is things that require coordination across all these AVss.
01:12:38.454 - 01:12:50.004, Speaker A: Things that require like, you know, a place where all of them will come and coordinate. So we want to be the coordination layer for innovation, so other people innovate. We just help coordinate.
01:12:52.104 - 01:12:57.364, Speaker C: Perfect westy effort. Do you guys have any other questions for Shira?
01:13:00.024 - 01:13:34.616, Speaker E: Yeah, I can. So in the paper, it mentioned the Security Council, and it mentioned this progression from v one Eigen layer to v two and then v three, and how eventually, I guess, like the end state Eigen layer doesn't have to rely on the trust assumptions of the Security Council. Is my understanding correct that the Security council is likely going to be something as part of the Eigen layer system forever? But in V three, it doesn't necessarily require the security council to be around or.
01:13:34.760 - 01:14:38.084, Speaker A: Okay, so there is a difference between the eigenstaking and ETH staking. Okay, so in each staking, because all faults are subject, you know, or objective. And on chain, what's going to happen is each AV's will initially be on the security console and once it's ossified, it can go, you know, without a security console. But that has to be something like that for each staking because eats taking has on chain slashable faults and only some set of them can be so like well tested that you can just go without like, you know, slashing veto on the other side with, with Eigen. Because the inter subjective, like forking is much more powerful than a committee, right? Because you, you don't, you can actually fork on things with intersubjective understanding. You don't need a committee. So the goal of eigenstaking is to be free of any committee.
01:14:38.084 - 01:14:57.924, Speaker A: And that's the superpower of eigenstaking that we unfortunately haven't found a way for how to get rid of that for each staking. But each AV's can have a journey where they say initially they go on the Security council and then they ossify and then they go out of the console because now they are well tested.
01:15:00.354 - 01:15:12.454, Speaker C: Perfect, I guess, like just to wrap it up. Shuram, do you have anything you wanna. We talked about the roadmap early in the episode. Do you wanna share a bit more about what's coming up?
01:15:13.754 - 01:15:47.564, Speaker A: Yeah. The next milestone that we are looking for to hit on the main net is payments because it's clearly the most burning problem. People think flashing is the most important thing. There are many, many existing systems without slashing many chains. Maybe most chains other than Cosmos and Ethereum don't have slashing, and Avalon subnets don't have slashing. Slashing is an optional feature. And we have to be careful when going with slashing.
01:15:47.564 - 01:16:32.566, Speaker A: The next feature that's rolling out on main net is payments. And that I think sets up the market structure a lot, or at least gets the market structure starting. So we have real feedback to adapt it. The payments not going to be in the final form, it's going to be a starting form. The thing with payments and slashing is these two are coupled in one way because you're paying for node operations and like stake, but you're also paying for like, are you paying for attributable security? Are you paying for pool security? These have different like economic models. So there'll be an evolution of payments along with slashing. But the initial form of payments going that's going to be the next one, you know, within, let's say three months coming up on Mainnet and then slashing.
01:16:32.566 - 01:17:11.766, Speaker A: So those are the two main things. The other thing that we're going to be doing in parallel is conversations like this where we actually talk about like how forking works, what are these parameters? And kind of get to a common understanding of, okay, this is the set of parameters. This is the how much you have to burn in Eigen, like all of this stuff. And it's set. And now we can, because right now, even though Eigen staking is going to launch soon, there's not going to be the forkability. So forkability is going to be a feature that gets, the contracts are there to do it. We want to be careful in rolling out again like the phase deployment approach that we always have.
01:17:11.766 - 01:17:17.364, Speaker A: So that's the next set of things that we are looking for to go live with.
01:17:18.464 - 01:17:26.924, Speaker C: Perfect. Shiram, thank you so much for joining us. Really appreciate you taking the time to dive into the white paper and talk about everything that's coming up.
01:17:27.264 - 01:17:33.044, Speaker A: Thank you so much. This is so awesome to do this with the zero X research team and blockworks. Thank you all.
01:17:33.344 - 01:17:34.232, Speaker E: Thanks for help.
01:17:34.328 - 01:18:02.334, Speaker B: We have teamed up with the Wormhole foundation, stewards of the wormhole protocol, the leading interoperability platform, powering crossing transfers for over 200 multi chain dapps. Wormhole isn't just a bridge, it's the leading interoperability platform for multi chain applications. So go and claim your unique wormhole nfts. Just for Zero X research listeners today, hit the link in the description to fill out a form and to prove that you've listened to today's episode and receiver Po app, you get an email over the coming weeks to claim your limited edition NFT.
