00:00:00.090 - 00:00:43.690, Speaker A: Alright everyone, welcome back to another episode of Zero X Research. We are recording this on March 6 and have a great episode coming for you. Talking account abstraction with matter Labs and Argent. But before we get into the interview today, we are joined by Westy and Rent, who have just returned from ETH Denver. So, you know, looking, but look at, looking at the market this week, we see ETH and bitcoin have pulled back about five or so percent, but we have this great excuse to blame it a major crypto conference. So Wesie and Ren, I know you guys were out there repping the blockworks research team and I'd love to get a little, maybe a brief overview. Just like what were the vibes like at this conference? How are they acting? Was it maybe different than we've seen over the past six to twelve months? How was the overall feeling there? Maybe I'll toss it to you first, Ren.
00:00:44.110 - 00:01:10.578, Speaker B: Yeah, definitely. So Wesley and I were there for the main conference. As far as a conference and vibes go, pretty immaculate, to be honest. Energy was high. Every side event that you went to was ten x oversubscribed. The main conference was packed full of people. And when I say packed, I mean like probably 5000 people stuffed into that warehouse to the point where you basically had zero cell service just because there were so many people there.
00:01:10.578 - 00:01:22.914, Speaker B: And I think it was very sort of inspiring seeing that even the deaths of a bear market, there were so many builders, vcs, protocols, founders, everyone congregating on a single location.
00:01:22.962 - 00:01:23.222, Speaker C: Right.
00:01:23.276 - 00:01:45.840, Speaker B: And I think East Denver is one of the better events out there because it's very dev and technical heavy. And so you really see the amount of work being done behind the scenes at a conference like this where everybody comes off the shelves and talks about the progress they've made and that you have to say the industry is still thriving, people are staying, no one's leaving, and it paints quite a good picture for the days ahead.
00:01:47.730 - 00:02:40.480, Speaker D: Yeah, I can definitely agree with that. As soon as you stepped into the building, you could just feel the energy. Like as Ren said, there was like 5000 people at once in this place all walking around. And it didn't feel like a bear market type of conference in that way, but at the same time it did in terms of the conversations you had where a lot of them were focused more on the fundamentals of things like where we're going as a space as opposed to a lot of the pumpamentals. Yeah, a lot of these projects did try and attach like CK, which is the newest narrative, but at the same time it didn't feel like that euphoria that you would normally get at the top of a cycle. But at the same time, there's a lot of energy, a lot of passion for the industry. And I know I can say I had a lot of fantastic conversations with a lot of these builders over the past few days.
00:02:41.810 - 00:03:03.960, Speaker A: Yeah, nothing will make you refocus on fundamentals like negative price action. We know that's a great quote from zero x pibbles himself, but any particular speakers that you saw that you were like, wow, that's a huge thing I can take away from this conference. So and so did such a good job breaking down maybe this complex topic or a new innovation that is coming to the space.
00:03:05.690 - 00:03:34.766, Speaker B: Yeah, definitely one that stands apart from the rest. I mean, he's been talking town for the past few months, has been Sriram from Eichendair. He was probably one of the most popular guys throughout the whole of East Denver. And most of these speakers show up at like five different talks every single day. I'm not even sure how they appear at so many places simultaneously. But Sriram managed to do it. If you talk to him in real life, the guy is super nice and has a very clear vision for what he wants Eigen layer to do.
00:03:34.766 - 00:04:05.480, Speaker B: Right. Increasing the vector for permissionless innovation. And you do that by leveraging the security of ETH. And of course, he gave that usual talk. There were some points that sort of, as you walked around the room, people, whether that's investors or VG, still had questions on whether that's about, for example, how the slashing works, how will it be distributed? Will institutions really want to set the withdrawal credentials to an eigenvalue smart contract, which I think are all valid questions. And there were some good conversations around that.
00:04:07.530 - 00:04:21.466, Speaker A: Yeah, we had Sriram on the pod. Let's see. He was one of our first guests, maybe in the first ten episodes. So that's a great episode. We'll throw that in the show notes just to get you caught up on all things Eigen layer. But it's great to hear that. When we spoke to him, he was such a great big personality.
00:04:21.466 - 00:04:30.290, Speaker A: And it's cool to see that that was the case in real life as well. And speaking of in real life, I hear he's a little taller than expected. Is this true, Ren? Can you confirm?
00:04:30.630 - 00:04:38.690, Speaker B: He is pretty tall, but also, I'm not that tall. So most people at East Denver were taller than me, but, yeah, he is decently tall.
00:04:39.030 - 00:04:58.860, Speaker A: I love to hear it. I love to hear. Yeah, no, I think one of the more interesting points with Eigen layer is really how they're going to deal with the slashing mechanism. As you say on our podcast, you mentioned this insurance bond mechanism, which really haven't seen too much clarity come out around. Did that get brought up at all, or is that still an idea that, you know, that they're pursuing that?
00:04:59.310 - 00:05:30.470, Speaker B: So we did specifically ask him that question, and he also said that Zerox research is probably one of the only times that he's bought that mechanism up. We pushed a little. He didn't want to give that much information because I think he didn't want people to speculate on it. He really wanted the narrative to be focused on Eigen layer as sort of like a generic use case for what is like protocols to spin up their security. And so, yeah, he did sort of like, rush us aside very casually when we pushed him on that insurance bond mechanism.
00:05:32.810 - 00:05:52.090, Speaker E: I know he talked a lot on our episode about permissionless innovation. And Ren, you mentioned that he said that a bunch at the actual conference. But did he also talk about in more depth, I guess, the concept of a market price for a decentralized validator set? Because that was like one of the more interesting pieces that I took away from our conversation.
00:05:55.250 - 00:06:30.102, Speaker B: I don't think I heard him mention anything specifically about of. So the main event that Shiam was at was an event called shared security Summit. It was sort of like a gigabrain day with a lot of big brain researchers from Eigenvea, Avalon, all of the Eve infra, people like John Charvino was there. And I don't think there was a lot of conversation about the pricing of decentralization. It was sort of, how do we get these protocols security to sort of interact with each other? And how do we leverage that to sort of build blockchain?
00:06:30.166 - 00:06:30.442, Speaker C: Right.
00:06:30.496 - 00:06:36.650, Speaker B: It was more of a grand vision event rather than getting to the nitty gritty.
00:06:37.550 - 00:06:52.160, Speaker A: What's your take on that, Sam, though? Do you think there will be a time where solo staked validators will kind of sell at a premium to something like a staking derivative if you were going to use Eigen layer for building out an application?
00:06:52.770 - 00:07:21.370, Speaker E: Yeah, I think it makes a lot of sense for something that really needs to be truly decentralized. So like a Thor chain or a tornado cash or something along those lines, that decentralization is priority number one. So I could see that becoming a big thing with Eigen layer of people being like, hey, no staking derivatives, no staking consortiums or what have you. Just like we want at home validators to secure our chain for max decentralization purposes.
00:07:24.350 - 00:07:59.954, Speaker A: I got a dumb question on this too, and wesy, you can probably correct me pretty much immediately like, so when you think about something like ige later, they're using this most commonly probably will be these liquid staking derivative tokens. Could they theoretically use USDC or some stablecoin for the same exact purpose? Or is there something inherently tied to the fact that it is a ethereum staking derivative which is securing the ethereum network? Because essentially what you're doing is putting value at stake to be slashed to make commitments to things very similar to a proof of stake network.
00:08:00.002 - 00:08:00.262, Speaker F: Right?
00:08:00.316 - 00:08:06.920, Speaker A: So why does Eigen layer need to be built around staked ETH as opposed to another asset that holds value?
00:08:10.330 - 00:08:53.000, Speaker D: Yeah, I actually don't know the answer to that question. I believe it has something to do with that. You already have something up for stake and you're putting up for additional slashing risk. I'm sure something could come along where you leverage your USDC, but at the same time that's managed by a centralized entity, you could easily manipulate things in the back end. And so to have a sort of completely decentralized trust layer that you're utilizing, I'm sure it goes a long way in terms of the security, but as far as the specifics are concerned, yeah, I'm not sure why you'd necessarily need to use ETH over something else that has a large market cap.
00:08:53.610 - 00:09:27.810, Speaker E: I feel like to piggyback off what you said, wesy, just no one would want to run a decentralized know with the staking asset being USDC or tether, given the regulatory risk, the custody risk, et cetera, associated with those two assets. So I feel like ETH is really the only logical choice because it's the only decentralized asset with the largest market cap. And then there's also probably a lot of developer speak that we don't understand. That plays a pretty key role in terms of ease of deploying contracts, developer tooling, et cetera.
00:09:30.230 - 00:09:51.290, Speaker A: Yeah, no, that actually makes a ton of sense. And I guess if you think about what is the most natural crypto asset, it would be something like a base layer asset like ethereum or avalanche, et cetera. I think that's actually exactly the reason it is really centered around decentralization and giving the ability to build on top of that decentralization.
00:09:51.790 - 00:10:10.670, Speaker E: I feel like we also saw a lot over the weekend about, was it called roll kit? I'm still catching up from the weekend, given it's a, you know, different stuff with sovereign roll ups on bitcoin and using bitcoin as their DA layer. Did you guys hear anything about that at ETH Denver? Is that just something that's floating around Twitter over the weekend?
00:10:12.370 - 00:10:53.440, Speaker D: Yeah, no, it's not something I heard at ETH Denver, who was also at the shared security summit, was Babylon, which is like, within cosmos, using bitcoin as a checkpoint for additional security, which I think is in sort of the same realm as utilizing bitcoin in some way, shape or form. And so I think that's like an increasing narrative, is how do we actually utilize bitcoin security in other ways beyond just using the bitcoin blockchain? And I think ordinals have really sort of spun that up in people to realize, okay, we can do a lot more with bitcoin than just send bitcoin from one address to another.
00:10:55.890 - 00:11:47.360, Speaker A: Yeah, those softened roll ups are fairly interesting, right, because they kind of got a little bit advertised as, like, a true l two built on top of ethereum. But in my understanding is it's not, like, technically an l two, again, because it's using that checkpointing technology as opposed to fully inheriting the security of the l one that it's settling to. But there was actually a GP from high framework actually had a great take on this. It was basically just saying, let's not battle whether or not that this is like a true l two or whatnot. Let's just embrace the fact that we're pushing into something we haven't pushed into before, and kind of expanding the bounds of experimentation, which is really something I always like to see happening in the space, especially given its tendencies to kind of want to have that forking mentality and just recycling the same projects that have existed before. So, personally, I'm excited for this.
00:11:48.370 - 00:11:56.900, Speaker E: Yeah, wesy, actually, I think there's a lot of people who don't know what sovereign roll ups are. Are you able to give us a little eli five on what they are and whether or not you're bullish on them?
00:11:57.750 - 00:13:08.380, Speaker D: Yeah, I can give a little quick explanation. So, as you know, with modular blockchains, it splits up execution, settlement, consensus, and data availability. And for something like a normal roll up, you basically have just execution on the roll up, and the other functions are sort of given to another entity. But in the case of sovereign roll ups, the only thing you're essentially offloading is data availability, and so on your layer, you still have the ability to settle, and some people don't really think it's like a L2, because you don't have a trust minimized bridge going from the roll up to the l one. But at the same time, you're using the DA guarantees of that network. And I know Celestia is building with sovereign roll ups in mind because they're like a hyper scaled DA layer, and so they're focusing just on that and allowing these sovereign roll ups to almost act like l ones built on Celestia. And so I think it's going to be one of the bigger areas for innovation, especially as Celestia comes out later this year.
00:13:11.070 - 00:13:35.840, Speaker A: Westy, we'll keep you on the hot seat here. And Ren's major takeaway was the Eigen layer founder himself, Sriram, and all these innovations that are coming along with that, which really isn't too surprising, given how hot that's been on CT over the last couple of months, honestly. So not even just weeks. But what's your major takeaway? What was something that you kind of walked away with thinking about differently or really excited about?
00:13:36.550 - 00:15:16.634, Speaker D: Yeah, so a lot of my conversations, which I didn't think this is going to be the case going into it, but a lot of what I talked about was MeV specifically. So I think one sort of area in which MEV is evolving is in the case of private order flow, which I've talked about in a recent Xerox research podcast, if done incorrectly, it could be a pretty centralizing force to the network. But there's a lot of these protocols, such as flashbots, with their new MEV share, as well as rook, which have more decentralized versions of private order flow, where you still have an auction system for searchers and block builders, except the MEV, rather than going to the validators, goes back to either the user or the wallet, whatever sends that RPC to the private RPC node. And I think this is going to be a really big narrative going forward. Definitely in a lot of my conversations, is how do these entities compete for order flow? I think there's going to be a lot of battles over the wallet specifically, so something like rucker flashbots can partner with Metamask, for instance. They are like, the largest source of order flow goes through the infura RPC via metamask. And so if one of these private order flow protocols can plug into metamask, that's going to be a huge revenue driver and will likely change the MEV landscape, where a lot of MEV will be extracted through these protocols instead of going back to validators.
00:15:16.634 - 00:17:02.194, Speaker D: And so I think fighting for private order flow is going to be a big narrative in the next year or two. I also saw a really good talk from Tarun on cross chain MeV and what that actually looks like in practice. And it's obviously extremely difficult because you have to worry about the gas fees on the current chain, the gas fees on the chain that you need to arbitrage to, as well as you could have gas fees on the chain you're bridging to actually changed with the first transaction you did, because you could be trying to arbitrage. The token uses gas. And so, yeah, it was a really good presentation from Tarun. The arbitram MeV situation was something I talked about with the arbitram folks for a while, and they're thinking through a solution where you have a delay, period, so that all searchers have access to the same transactions while also having that auction mechanism, which is a lot better than the proof of work they're going to implement as well as had an interesting conversation with Tim from relic about fraud proof MEV as he called it, where essentially you could have really sophisticated searchers who are able to issue fraud proofs in the exact block that you have some sort of failed transaction on an optimistic roll up and able to capture some value there. So, yeah, I had a lot of really big brain, interesting conversations around MEV, and it's definitely things that I'm going to be thinking about for the next probably month or two is like, how does the MEV space evolve? Because it's really a really long rabbit hole you could go down.
00:17:02.392 - 00:17:27.450, Speaker A: All right, well, you cheated because you just gave me like four, but they're all bundled into MEV, so I'll let it slide. But if we go back to the first one and private order flow, if I'm a user, how does this affect me? Do I care that the route my order is taking is slightly different? Does that impact my privacy, or am I just overall getting a better transaction price? So maybe I'm just happy about that. How does it look like for the user?
00:17:28.190 - 00:18:34.154, Speaker D: Yeah, it's a good question. So it's actually much better from the user's perspective. You can think of it like Robinhood now, that has sort of private order flow to Citadel, and that helps them get no fees on their transaction as well as better pricing. But at the same time, Citadel is able to extract value by being able to see your order flow. It acts in a similar way where for the user, you can think potentially maybe they get rebates based on the amount of MVP that was extracted. Maybe they have feeless trades, so maybe like uniswap partners with rook, and they have sort of a private flow type of model, and all of a sudden they say, hey, we actually have 0% fees or very minimal fees, but really it's because they extract MEV and that private order flow makes its way back to users. And so from a user standpoint, you're more likely to go through some sort of private order flow because you're able to have more value, whereas in another situation, the MEV makes its way to validators.
00:18:34.154 - 00:18:39.460, Speaker D: And so obviously, if you're the user, you're going to want that value and not giving it to somebody else.
00:18:41.830 - 00:19:26.800, Speaker A: So it seems like there's this really interesting dynamic of where MeV value will flow to, because today it is the validators, but tomorrow it sounds like it's going to increasingly become to the protocols and then ultimately back to the users, which kind of like brings in an interesting point around ETH security, right? Because the MEV does flow to validators, and that is an incentive to stake ETH and participate in network security. Do you think there's a risk to the end state of ethereum if all of the MEV starts flowing elsewhere? And do you think MeV will exist on the base layer into perpetuity or eventually just kind of phase out from things like private order flow or maybe transaction activity? Moving to l two s, great questions.
00:19:27.650 - 00:20:42.010, Speaker D: First of all, no, I don't think it's a problem for the security of the network in the same way that a lot of these e three researchers are trying to push for MeV burn, which would burn the MEV, as opposed to giving it to validators, which is sort of giving it to all eTH holders, as opposed to just the validators. You can think of it in a similar way where they actually want there to be less incentives to stake, because that means less emissions of eth, and there's really a marginal difference once you get enough validators. The next validator isn't really super important for the overall security of the network. So I think it'll be fine in terms of security. But I think the second question, I agree. Like MeV, I think in terms of staking rewards is going to be a very small amount of the staking rewards on l one, given that one activity is going to be moving to these l two s as opposed to the base layer, as well as MeV is going to be extracted through private order flow, I think, in a large chunk of it, as opposed to going actually, to validators. So over the long run, I don't see MeV as a large source of income for youth stakers.
00:20:44.670 - 00:20:48.506, Speaker A: Yeah, that makes sense. And the data kind of matches up with what you just said.
00:20:48.528 - 00:20:48.714, Speaker B: Right.
00:20:48.752 - 00:21:11.058, Speaker A: I just pulled up our Ethereum dashboard on Dune, and the total eth that has flown to ETH stakers in 2023 is around 241,000 etH, and 44,000 of that has been through MEV payments itself. So about twelve and a half percent or so. So, yeah, pretty interesting. Makes a lot of sense there. Ren, were you going to add anything to that?
00:21:11.224 - 00:21:35.734, Speaker B: No, I was just going to add that if you went to East Denver, I think it became pretty clear that most of the smartest guys within the crypto space are working on MEV. Everyone that's in that space is either super talented, super curious, or just super smart. And it was sort of like a common sentiment that there were still a lot of incentive mechanisms to figure out around MeV.
00:21:35.782 - 00:21:36.138, Speaker C: Right.
00:21:36.224 - 00:22:18.294, Speaker B: Even though, say, flashbots has done a lot of work in the past year, people still see it as more or less a completely black box, because, for example, as more blockchain ecosystems come online, cost of main arbitrages become more prevalent. Or, for example, people start doing more statistical arbitrage type meb. And so there is still a lot of excitement and undiscovered areas in the space. And I think a few other interesting things that we sort of heard from a few searches that we talked to is a, the number of searchers out there is still pretty small, at least smaller than Wesley and I thought sort of like rough numbers that we had were maybe around 20 to 40. And so not as much as one might think.
00:22:18.332 - 00:22:18.486, Speaker C: Right.
00:22:18.508 - 00:22:54.610, Speaker B: I think the number that Wesley and I had initially was 100 searches or so. That's probably the same situation on the builder side. And second of all, that there are still sort of like niche mev opportunities out know. Of course, there's very common ones such as like back running sandwich attacks, decks and sex arbitrage. But there are still very profitable mev opportunities if you're really willing to dig into sort of like how the contracts work or sort of looking the white papers and understanding these granular inefficiencies.
00:22:55.990 - 00:22:56.354, Speaker F: Yeah.
00:22:56.392 - 00:23:44.194, Speaker D: As Ren said, I think one really cool aspect of MeV that's going to evolve is statistical arbitrage, or like statistical meV, as they might call it, where you have something like, say, which has batches built into its blockchain, essentially for all of its swaps. Really, there is no mev you can really extract in a single block. So as a result, you're probably going to see a lot more sort of statistical arbitrage. Rather than having an explicit profit and loss in that block, you base it off of your expected value on the next block. And so I think a lot of stuff along those lines is going to result. And yeah, like I said, the MEV is such a rabbit hole. You can go down for real.
00:23:44.232 - 00:23:51.046, Speaker E: It sounds like it. I'm so jealous. I wasn't out there, Dan. You were. At least in. You were. You were out west and got to enjoy it.
00:23:51.046 - 00:24:09.530, Speaker E: At least I was still stuck in Ohio. But I'm curious, what was the sentiment at ETH Denver around Zke evms? Because if you go on Twitter, you think that's like ethereum being reborn. But is it actually all the hype that we see on Twitter, or is it not quite as much hype as you would have expected?
00:24:12.450 - 00:25:26.418, Speaker B: I would say walking around east Denver and all of the side events, ZK was definitely talk of the town, right? Sure, you had a lot of attention being paid to optimism roll ups because of Coinbase's base and arbitram, but there were so many ZK events and ZK talks that I couldn't keep track of them. And also a lot of the vcs, the funds, the builders, everyone was interested in ZK. It's sort of like that meme that if you put ZK in your name, your valuation just goes up by 100 million. That kind of felt like the vibe was at Eve Denver. So still a very exciting space. I think some of the general questions had some of the general conversations around Eve Denver I had about ZK. Was that, a, will those ecosystems be built out in time before optimistic role of sort of like gain too far of a deed? B are people more interested in sort of like ZK as infrastructure tech, as in ZK EVM, or more so as ZK technology that enables sort of like real world use cases, whether that's decentralized identity or zero knowledge data of some sort.
00:25:26.418 - 00:25:29.350, Speaker B: And so I think those are the two main points for ZK.
00:25:30.810 - 00:25:51.680, Speaker D: I think it was funny that polygon in their booth, they had the first Zke EVM in big letters, and the ZK sync booth wasn't too far away. You could see it from their table. And the scroll one was right around the corner. The fight was going on in real time and that was what was funny to me. But yeah, Ren nailed it on the head.
00:25:55.330 - 00:26:10.580, Speaker A: Love that. Was there any protocol that you went in not knowing about that. Maybe you talked to their team, or it was kind of like the talk of the town that made you end up diving into the docs that you're now like, okay, this is something that I'm going to pay attention to over the next six to twelve months.
00:26:11.750 - 00:26:56.526, Speaker B: I haven't dove into the docs yet, but there is one protocol that I'm really excited about. I'll give some context first. So Wesley and I were at a MeV sort of event on Saturday night, and we just showed up at this table. We started talking to this guy. At first, we started talking to him about gas price derivatives, right? So we started talking about what's a good way to design the mechanism? Is it a perpetual future with a funding rate? But then we sort of talked about how the funding rate won't be sensitive enough to gas by changes. And then out of nowhere, this guy comes along, and of course, it's none other than Dan Robinson from paradigm and Westy. And they were like, okay, so we're having a really great conversation about gas price derivatives.
00:26:56.526 - 00:27:06.062, Speaker B: And Dan Robinson suggested, for example, you could fork squeefe, which is squared e, a power perpetual on e, and apply that to gas price derivatives.
00:27:06.126 - 00:27:06.594, Speaker C: Okay?
00:27:06.712 - 00:27:45.694, Speaker B: And then Dan Robinson goes to the guy next to us that Wesley and I have been talking for quite a while, and then we realized that he was a paradigm CTF winner for 2022. And for a second there, we were like, okay, where else in the world will you be able to sort of get in an environment like this where you talk to two gigabrains within the space? I mean, paradigm CTF winner and paradigm researcher. It's kind of crazy. Okay, but anyway, back to Dan's question. The one protocol that I was talking about is Reddick protocol. So essentially they're going to use ZK snarks to give smart contracts access to all of Ethereum's historical state. And I'm still reading into the docs.
00:27:45.694 - 00:28:55.238, Speaker B: I may not be doing the perfect explanation here, so apologies to Tim Becker first, but here's a few practical examples that they state on the website. For example, revolutionizing on chain identity, you can securely validate any past activity on the blockchain, from account age to contract interactions, token amounts, and more. So, in the past, if someone was doing an airdrop, right, it could just be either someone putting up a spreadsheet and airdropping tokens to wallet addresses, or someone just looking at historical transactions. There's no way to securely validate that, and Reddit protocol enables that. Another example would be historical price oracles Reddick protocol allows you to drop external off chain relayers and create trustless fully on chain price oracles for any on chain data, including Dex prices, block parameters, for example gas prices and more. So when I first talked to Tim Beckware at Reddick protocol, I first thought was, know why was this needed? You can sort of recreate ethereum state if you want to. You just go into the block explorer, you pass the transactions and you sort of backtrack the state.
00:28:55.238 - 00:29:10.300, Speaker B: But then I realized that there is a fundamental difference between doing that and being able to validate that in a trustless manner. And I'm not smart enough to have figured out all of the use cases yet, but Tim Becker definitely explained some very exciting use cases at night.
00:29:11.950 - 00:29:49.570, Speaker A: That's a new one I've never heard of relic protocol. We'll put the link to that website in the description as well so you guys can check it out with us. But that's pretty cool and I love the context you provided around that. Right? You're just having a casual conversation. Well, I guess casual conversation about gas price derivatives probably doesn't exist, but nonetheless you're just having some nerd conversations and upwalk Stan Robinson, that's awesome. I'm glad you guys had such a great time at ETH Denver and were able to kind of impart some of that knowledge you picked up on us as well. But without further ado, it's probably a good time to hop to our interview with Matterlabs and argent covering all things account abstraction.
00:29:49.650 - 00:30:21.230, Speaker E: I cannot recommend enough for you guys to all check out blockworksresearch.com. If you go over to the research tab and toggle free research, you're going to get access to some of the best free reports in the industry. And if you want to subscribe to Blockworks Research, you can do so using zero x research ten at checkout in order to receive $250 off. And you can also sign up to our free newsletter if you want to just get a little taste where we give alpha on governance, DGen, trade ideas, market commentary, charts of the day, et cetera. Kind of get you caught up to speed on everything you need to know in the market within 510 minutes.
00:30:21.300 - 00:30:42.522, Speaker A: Give us a follow at Blockworks res. Blockworks res on Twitter. We'll release our new reports during the week, and even if you don't have access to the reports, you're not a paid subscriber. You can still check out the topics we're writing about and get a little bit of a brief insight into what the contents of the report is about? You want to know a little bit more how we think on the data side of things? Head over to our Dune public account. We have four dashboards, live there for free.
00:30:42.576 - 00:31:15.570, Speaker E: The revolution will not be quarterly reported, so definitely check those out and let's kick it over to the interview. All right, we've got a great episode today. We've got Alex from Matter Labs, the team behind ZK Sync and the ZKE EVM era, and then Julian from Argent, the company behind one of the most cutting edge wallets in the entire industry. So thanks so much for joining, guys. We're excited to have this conversation around account abstraction. Kind of a hot topic nowadays. But first, Alex, I kind of wanted to kick it over to you to get an update on era and where you guys are at in the process of launching.
00:31:16.090 - 00:31:34.070, Speaker C: Sure. Thank you for having us here. It's a pleasure. ERa is doing really great. We recently opened the mainnet to developers to start deploying applications at if Denver. We had a chance to open it to the first users. The ETH Denver food truck experience was powered by Ziki Syncara.
00:31:34.070 - 00:31:55.890, Speaker C: It went smoothly without no friction, was really great because of native account obstruction that was implemented in Era from day one, so user did not have to pay the fees. It was completely gasless and very easy to use. I'm happy to talk more about this topic.
00:31:57.190 - 00:32:05.460, Speaker E: Yeah, and then Julian, you mind sharing just some things about Argent, what you're working on and maybe how you're partnering with era and kind of the synergies there?
00:32:06.070 - 00:32:35.470, Speaker F: Sure. At Argent we've been building smart contract wallets for five years, starting on Ethereum one, and then we've been waiting for a couple of years to have a roll up, a L2 that would scale and at the same time that would make our model native. And that's exactly what ZK Singer is providing as well as stocknet. So we've been really focusing on these two L2s, making sure we can build amazing user experience by leveraging account abstraction.
00:32:37.250 - 00:33:08.374, Speaker E: That's super interesting. I noticed that you kind of picked the two ZKe evms that are on opposite ends of the spectrum. You've got one that's kind of using a compiler method and taking high level source code and compiling it into solidity. And then you've got starkware, which is using Cairo, a completely different language altogether. So is there any reasoning behind choosing these two to partner with in particular, outside of the ones hoping to achieve more? I guess type one or type two equivalents in the words of Vitalik yeah.
00:33:08.412 - 00:33:44.206, Speaker F: I mean, the clear differentiator of bothnet and ZK Singera is that they support native account abstraction. And that for us was really super important. There's a lot of talk recently around ERC four three seven, which is one way to enable some form of account abstraction at the application level. But that's what we've been doing at Argent for five years. Our smart contract wallets on Ethereum, they are, from a user's point of view, equivalent than what four three seven will get you. And I mean, that's an amazing achievement. But at the same time, what we've realized over the years is that the ecosystem is still built around the OAS.
00:33:44.206 - 00:34:29.170, Speaker F: And so if you build like an abstraction at the application layer, I mean, you can build great products, but your products will never be compatible with 100% of the Dapps because there will always be DAP developers that don't think about smart contract wallet and that kind of are stuck in that era paradigm. While with ZK, Sing and Stacknet, because they have native account abstraction, our model is the default model in a sense, and that guarantees us 100% compatibility with the DApps, which of course is essential. So there's a lot of zkvms, there's a lot of optimistic roll ups that are great in terms of scaling, but when it comes to being able to make our model native and make sure we can build really the best experience for users, choosing Starknet and Zksing era was a no brainer.
00:34:32.530 - 00:34:44.130, Speaker E: Do you think you guys could start by maybe going a little bit more high level and explaining exactly what account abstraction is? And maybe starting with Ethereum as an account based blockchain with eoas and contract.
00:34:46.710 - 00:35:20.506, Speaker F: I mean, I'll be happy to start. And then Alex, feel free to jump. Mean. As people know, there's two types of accounts on Ethereum, you have externally owned accounts which can trigger transaction, and then you have smart contract accounts that can contain logic. But unfortunately, there's no account on Ethereum that can both trigger transaction and pay transaction fees and at the same time contain logic. And so as a user, you're always required to start with an EoA. The object that you have and that you use to interact with the blockchain is always an eoa.
00:35:20.506 - 00:36:16.862, Speaker F: And the problem with Eoas is that their account model has been hard coded, really in the EVM, in such a way that the account is completely coupled with a private key that I like to call a signer. And that's why when you create an account you're forced to back up a seed phrase, for example, which is a way to say you're writing down that private key on a piece of paper. So on Ethereum, the accounts that users manipulate, they are completely coupled to that signer, that cryptographic object, in such a way that if you lose that object, you basically lose everything. And if I have your signer, I have your private key, I have everything. And all that logic is hard coded in DVM. And that's of course, as we've witnessed over the past five or six years, this is really hard for users, even us, I would say, as expert early adopters, we do make mistake. Sometimes we go on the wrong website and our seed phrase is compromised, or we just lose our seed phrase, we lose our account.
00:36:16.862 - 00:36:48.858, Speaker F: So this user experience is of course, very complicated. And we've believed at argent for a long time that this would never scale and reach mass adoption. Account abstraction, on the other end is the ability to program your account. So again, taking a step back, an account on Ethereum, it does four things. It validates the transaction, it executes the transaction, it pays the fees to the miner, and it makes sure there's no replay attack. You cannot pay the same transaction twice. So these are really the four functionalities of an account.
00:36:48.858 - 00:37:21.614, Speaker F: On DVM. Today, everything is hard coded with account abstraction. You can really program these four functionalities because your account is a smart contract. So you can really start putting logic on how a transaction is validated, how a transaction will be executed, sorry. And how the fee will be paid to the miner. And so in terms of validation, that means that you can choose a different elliptic curve, you can choose a different signature scheme. Maybe you want your transaction to be validated by two out of three signers, making it a native multisig.
00:37:21.614 - 00:37:46.960, Speaker F: If you think of the execution, if you can program it, that means you can start doing stuff like multiples, executing a sequence of operation in one transaction. And if it comes to paying the transaction fee, if you abstract that, then you can start letting someone else paying for your transaction. And that's what Paymaster do. So really account abstraction for me is really the ability to program the functionalities of your account. And that opens a completely new design space.
00:37:49.090 - 00:38:37.630, Speaker C: And I can add to this, maybe I can compare the EAP 4337, which is now implemented on Ethereum Mainet, versus native account abstraction at L2. With EAP four three seven. We're dealing with basically just a standard, a convention on how contracts can be repaying the gas fees to the centralized more or less actors who will be submitting transactions on the user behalf. So there are multiple problems with this approach. First of all, it's great that Ethereum has taken a step forward to implement it, and we have something now on Mainnet that is more or less standardized. Argent was on the forefront and they were doing this meta transaction for quite a while. And now more projects can join and do something on Mainet.
00:38:37.630 - 00:39:46.002, Speaker C: But the first problem is you introduce trust assumptions, you introduce new centralized actors. Even if there's going to be some decentralized marketplace, then you have to deal with the security properties, censorship resistance properties of this marketplace. So instead of just having know with the wallet vendor and the blockchain itself, you have to depend now on some parties to submit transactions for you. And the second problem is that, as Julian mentioned before, the protocols are not designed for interacting with these types of accounts, and many things will just break because the transaction origin will deviate from the account that is actually initiating the action. So some things will not function properly in this paradigm. But there are more problems with the protocol implementation per se, like the way ERC 20 is structured and other protocols. Many protocols are doing EC recover and relying on certain way.
00:39:46.002 - 00:41:12.442, Speaker C: They expect the accounts to be EOA, so they expect that the address is actually a cryptographically valid reflection of a private key on the public key space, and that you can verify this contract. But I would say one really big problem on Ethereum with account abstraction implemented in a way like AP four three seven is the cost. It's not just more expensive to transact because it's layer one. And we know that layer one is expensive and cannot really accommodate the search of users that we expect with et Altus, where the fees are much cheaper, account transaction implemented in this way makes the transactions even more expensive because you have to pass the separate signature, so you have to pay for the original transaction for the initiation of the call. In addition to that, you have to pay for providing all the data and verifying all the data on layer one of this new transaction. Like maybe an extended signature scheme, which can be relatively large, maybe you want to pass some more met data for the transaction. You have to pass the address, all the normal transaction information wrapped in some envelope to be passed to the smart contract.
00:41:12.442 - 00:42:11.342, Speaker C: On top of that, you have to pay for the execution, so you have to be sending tokens back. So all of this increases the transaction cost multiple times. Whereas if you look at the native implementation of account abstraction at Zk sync, for example, we have a really interesting approach to data availability and we are only publishing state diffs and not the transaction inputs on a rollup data. And one of the decisions, or one of the factors where we went for this decision was that it makes abstracted accounts and transactions on abstracted accounts much cheaper. So essentially the costs of transactions with account abstractions does not deviate from the cost of normal transactions. You're eventually only paying for the actual things that are happening on the blockchain. You make a call to uniswap to trade some tokens.
00:42:11.342 - 00:42:40.410, Speaker C: You will only be paying for trading these tokens, not for all this meta information, not for all the additional checks, guards, signature verification, et cetera. Not on blockchain. At least you will be still paying for them in the proof generation. But the proof generation is going to be negligibly duplicate cheap. It's going to be very inexpensive. The bottleneck of scalability of l two s will, for observable time remain the on chain data costs.
00:42:41.710 - 00:43:23.290, Speaker A: So it sounds like Zk sync has really taken an approach that putting account abstraction directly in the base layer, making it native to the protocol, whereas Ethereum didn't do that. And much of that is really the ecosystem we see today has just kind of been built off an unfinished protocol. And so we have these shortcomings, if you will, of protocols will likely have to adapt and change to make themselves more relevant in the new era once this EIP gets introduced. But given the fact that it's more expensive to generate these transactions, do you think it's practical to have account abstraction at the Ethereum l one? Or is this really just something that's better suited for Zksync and other l two s to be utilizing?
00:43:24.030 - 00:44:18.170, Speaker C: I generally think that the majority of the users will be transactional L2s in the near time, and the activity will, almost the entire activity will migrate from layer one to L2. The cost is one major and huge factor in scalability, just the sheer number of users and transactions you can process with L2, but also the fact that l two s have the freedom to innovate, whereas Ethereum rightly must take a much more careful, much slower approach. It's much more prudent for Ethereum to have the L2s come up with new ideas, bottle test them at the news playground, and then only adopt the things that have been verified by real usage. So in this sense, l two s can just move faster than l one, which is normal and expected.
00:44:19.550 - 00:44:43.582, Speaker F: Yeah, I fully agree with that. And actually at argent, that's what we've been advocating for more than a year is that account abstraction should start in L2s. Exactly for the reason that Alex mentioned L2s. They are kind of starting as a blank page. And I like the word you use. You say ethereum, the protocol is unfinished. And actually people are getting excited about account abstraction.
00:44:43.582 - 00:45:12.822, Speaker F: But Ethereum was always meant to have account abstraction. If you look at the roadmap, Vitalik started talking about account abstraction in 2015. There's the first EIP, like early 2016, I think. So that was always part of the roadmap. But of course, Ethereum was such a complex project that they needed to start simple in some places, but it was always meant to have native account abstraction, full account abstraction, like it's implemented on ZK Singer. That was always the plan. But of course they started simple with DOA.
00:45:12.822 - 00:45:42.574, Speaker F: And then you start building, and then you have a lot of legacy. There's a lot at stake. I mean, there's a lot of funds on Ethereum. And then making such a fundamental change becomes extremely complex. There's always something more important to do before doing that, and that's completely normal. But then again, no, we are at a very exciting time where L2s are picking up. I think we have all these years of learning from the EVM and from Ethereum, and I think we shouldn't shy away of updating the things that should be updated.
00:45:42.574 - 00:46:30.258, Speaker F: And I think while five years ago when we started at Argent, people thought we were a bit crazy making smart contract wallet, I think now today, kind of everybody agrees that this is the solution. Account abstraction is not a question of if, it's a question of when. And I believe clearly the shortest path to make that happen on the entire Ethereum ecosystem is to do that on L2s, as Alex mentioned. Because L2s can innovate, they can test. A good example of that is actually ZKC contributing to ERC four three seven, because the way they implemented account abstraction at the protocol level was heavily inspired by four three seven. And so they realized that they could relax some of the constraints with respect to the validation phase. And that actually fueled back ERC four three seven, which included them.
00:46:30.258 - 00:47:30.038, Speaker F: So I do think this is the right way to go. We should, as an ecosystem, push more L2s to really be bold and actually go where we know we have to go, because now is the right time. If L2s wait two or three years to start thinking about native account abstraction, they will be in the position that Ethereum is today, meaning that they will have a lot of legacy, there will be a lot of stake and it will become increasingly more complicated for them to make that transition. So I think we have really a window of opportunity to make that happen. Some L2s were brave enough to go down that road, which is great, but I think more L2 should embrace that, and then we can make sure to bring all that expertise and at some point bring it back to Ethereum. But again, kind of like Alex, I don't even know if bringing that to Ethereum is actually needed because I kind of agree that most normal users, then the next wave of users will be on their twos, not on their one. So in the end, if it comes back to Ethereum for me is not that important.
00:47:30.038 - 00:47:43.500, Speaker F: What's important is that it comes back to DVM, because there are a lot of L2s that are EVM equivalent. So it is more important for me to have a kind abstraction in optimize marbitrom and so on than actually on layer one.
00:47:44.590 - 00:48:17.990, Speaker E: Yeah, strong agree there. We're already kind of seeing the first real wave of l two adoption right now, with total transactions between some of the leading roll ups surpassing Ethereum, which is super encouraging and exciting to see. But something with account abstraction that I haven't been able to figure out is as an l two, you still need to pay your l one settlement costs in eTh. So how does that actually look under the hood? If you as a user are paying for transaction fees in USDC or some other token, how does the settlement costs actually flow to the base layer for settlement?
00:48:19.130 - 00:49:12.710, Speaker C: So that will mean that the validators who accept the transaction have to convert the proceeds into eth somehow. So the one simple way to do it is to use liquidity inside NL two and use automated liquidity, automated market makers to convert all of these proceeds just in time. You always have a slight delay between the accepting of the transaction and the actual payment of the fees, because you need to wait for the block to complete. You need to wait for zero knowledge proof to be generated and for transaction to happen in Ethereum. And so since you're accepting some slight risk of fluctuations of the price anyway, you can do it at the last steps. You can process many transactions and then batch convert them into the ether and then pay the fees.
00:49:14.670 - 00:49:43.170, Speaker E: Okay, makes sense. That's what my intuition was leading me to. Now, I also hear a lot of things in terms of social recovery, like with email addresses or maybe two fa gated text messages or something of the sorts. But it kind of scares me as a user to think that maybe I'm not in full control of my seed phrase. So is there any security trade offs that come with account abstraction that users should be aware of? Or is that something that you guys have kind of thought about very thoroughly?
00:49:44.150 - 00:50:16.746, Speaker F: So I think with any technology, you need to think about security for sure. But what is clear is that, for example, you take the example of social recovery. We've been doing social recovery on argent since 2018. At some point, we're securing more than a billion dollars. We have users that have 50 plus millions on argent that actually lost their phone. But with social recovery, they were fully in control and they were guaranteed to get back access. So I do think social recovery, in that respect, for me, it's much more secure actually, than a seed phrase.
00:50:16.746 - 00:51:18.234, Speaker F: It's easy to lose a seed phrase while social recovery, you control who will help you for that recovery, maybe to help people understand. If your account is a smart contract, that means you can start to put custom logic. And the idea of social recovery is to say that you have one key that has special right, it's the owner key of the account, it's the one that can trigger transaction, to transfer assets, interact with Dapps and so on. But because you can program the account, you can add other keys on that account and this key, or other signers, and these signers, they cannot trigger transaction, they cannot transfer token, they cannot do anything, but they can only help you, and they can only do one security action, which is the recovery. And so the flow is as a user, you suddenly lose your primary key. What you do is you contact the holders of this guardian key and collectively they can give you back access and reprogram the account to have a new key. So it's really like the model that you have today with your bank.
00:51:18.234 - 00:52:00.618, Speaker F: With your bank. If you lose your credit card, you actually call your bank and you ask your bank to send you a new one and to reprogram your account such that the new cards control can spend the fund on the account. Social recovery is exactly the same, except that you choose who act as your bank. So it can be a centralized service that you trust, and you will authenticate to that service with an email and a password, or with an sms, for example. But it can also be friends that you trust, or it can be yourself with a hardware wallet, or it can be a combination of all of those. And they will need to have a majority of these guardians accepting the recovery. So you are 100% in control with recovery.
00:52:00.618 - 00:52:43.078, Speaker F: It's a no brainer, and I personally believe that it is more safe, I trust more. For example, my setup on argent is a centralized service. The argent service that we provide, it's myself with a hardware wallet, and then it's a friend was argent as well. And when I need to do a recovery, I just need to contact two of these parties. I personally trust that much more than having everything written on a piece of paper, which of course I won't remember exactly where it is and have a 50% chance to have it lost if I don't put in a safe. So social recovery is 100% secure, that's for sure. And for me, I personally think that it is more secure than a seed phrase.
00:52:43.078 - 00:53:29.226, Speaker F: I think something that people underestimate is that security is not the core principle per se. It's about the user experience of security. So yes, a seat phrase, it's extremely secure if you can, and you are fully in control if you can manage that, if you have perfect process and so on. But the thing is, the majority of people don't, and so that makes it less secure. While I think social recovery for me is the perfect trade off between convenience and true security, it is extremely secure because everything is written at the level of your account. It's really on chain in the blockchain, all that logic is programmed in your account. But at the same time, it's very easy to understand because it's the mental model that we are used to with any account that we have online.
00:53:29.226 - 00:54:01.702, Speaker F: And so I think it's the perfect combination of true security and convenience, which in the end make it very safe solution. Of course, some people will say are the smart contracts. Smart contracts have bugs. Yes, smart contracts have bugs. But then again, writing good smart contract is a question of process. When you take a plane, you basically put your life at the end of a computer because the plane is being piloted by a computer. And nobody questions that because we know they had good process in place.
00:54:01.702 - 00:54:29.470, Speaker F: And actually this computer software are extremely secure. Again, so you can write extremely secure smart contract. And that comes from having good process, having your code transparent so that anybody can inspect, having audit doing. I mean, all the tools that are available. But yes, for me it's a no brainer. Smart contract wallet and stuff like social recovery makes actually self custody much safer for users.
00:54:30.290 - 00:54:58.390, Speaker A: I feel like I say it all the time on this podcast, but I just love the idea of making crypto easier to access, right? Because today it feels sort of easy at times for people like us that spend all day, every day in the depths of Defi, but the reality is it's not. So I love the idea of social recovery and bringing that to the space. But does account abstraction or use of a contract wallet change any privacy assumptions?
00:54:59.690 - 00:56:09.850, Speaker C: We can talk about privacy. I just want to add one thing about security, which I think is extremely important. When you're looking at security like what problems can be introduced by this new technology. You also have to look at the same time what problems will be removed and what's the balance on the outcomes. You can look at the self driving cars and see some crashes of those cars and be like, oh, how can I trust a self driving car to drive me home safely? But if you look at the per mile accident rate of the self driving cars, it's a lot less like for every accident that happens there, hundreds are prevented that would have otherwise happened by people who are driving the cars. The situation with account abstraction here is extremely skewed towards protecting the users. I can't remember any security incident happening with any of account abstracted or like any smart contract wallets being it argent or noisesafe or any others that existed.
00:56:09.850 - 00:57:21.318, Speaker C: But the number of ways in which you can increase security for the end users is enormous. So it's important that not only you are secure most of the time, you want to give users a sense that they are secure all of the time, that they can make mistakes, and these mistakes are not going to be deadly for them. They should not be afraid to sign a transaction because they know that this transaction can take all of the money from them. With account abstraction, you can implement guards, you can implement some checks in the beginning, at the end of transaction that will say it will only succeed if only this token is being touched. And my final balance for this token is not more than whatever amount you're trying to spend or authorize for this particular transaction. So this is one example. With social recovery, it's not only important that you can do social recovery, it's important that all the guardians that you appoint, all the people who you trust, can also do social recovery in a very easy way so they will not lose their accounts, which you rely on.
00:57:21.318 - 00:58:16.306, Speaker C: Vitalik recently wrote a post about UX and his experiences with social recovery done in a worse way with secret sharing. And it turned out in a case where he needed to recover a wallet, all the people, or like some of the people, were not available because they lost their seed phrases because it was not convenient. So Julian brought up multiple times the example of PGP versus signal, or PGP is a massively superior technology from the point of view of privacy preservation. But signal is much more convenient, and it also offers you end to end encryption. And so it took off. And PGP did not, despite many more years of advantage. So coming back to the question of privacy account obstruction will be a necessary part in implementing privacy preserving protocols on Ethereum and all the Ethereum scaling solutions.
00:58:16.306 - 00:59:17.420, Speaker C: The reason for this is that for privacy, you fundamentally need to change the paradigm, change the way you think about the user experience. With any privacy preserving protocols, you need to separate the keys to authorized changes of your account from a secret and commitment to the secret which you hold on chain. You have to keep some secret to yourself, and in order to be able to replace this secret, you need separate keys that will be, you need to have to preserve the continuity of your address, but you also need the ability to rotate the keys because those are going to be the keys that if you lose them, you will lose all of the insight into what's the state of your account of your privacy applications and you will not be able to recover. Like there are multiple UX challenges around privacy and you just need code, you just need smart contracts, you need some programmable logic in order to implement them.
00:59:19.710 - 00:59:40.340, Speaker A: Yeah, that makes a lot of sense. And even thinking from I spend a lot of time on dune analyzing data. So using the example, if I was looking at users that have interacted with a uniswap pool, let's say, would a smart contract wallet still have that same from address? When I'm looking at a user that's made a swap through a pool, yeah.
00:59:40.950 - 00:59:49.330, Speaker C: It will feel exactly the same way, except for the part of actually verifying authorizing transactions and paying fees.
00:59:51.350 - 01:00:03.114, Speaker A: Exciting. So even if I was using like a paymaster, right, so someone else was, or another address was making the payment on top of for my transaction, would that still kind of have that same UX as well?
01:00:03.312 - 01:00:51.400, Speaker C: Correct your interaction with the Paymaster smart contract that is paying for the transaction to the validators of the transaction is separate from the actual transaction that originates in your account and goes towards the protocol you want to. So you can think of it as two separate transactions. One is going and doing the Uniswap trade, and then one is going to a separate account and paying the fees. Or maybe Uniswap contract itself will be paying fees and it guarantees you that you're only paying a percentage of your trade, and then whatever fees are currently in the market, they are covered by the treasurer of the protocol, which is also a nice user experience because you have a guaranteed. It's very similar to how you would trade on centralized exchanges or like Robinhood app.
01:00:53.850 - 01:01:22.900, Speaker E: Now something that gets me super excited about account abstraction is when looking at stablecoins that's kind of proven to be one of crypto's killer use cases with over $100 billion of stablecoins in the middle of a bear market. So could you kind of describe how stablecoins and account abstraction could work together to really enable crypto rails payments? And then Alex, I know you guys had a cool event at e Denver that had something of the sorts on display, so maybe kick it over to you to start.
01:01:23.430 - 01:02:01.230, Speaker C: Sure. So while stablecoins are important is because it's very hard to explain to ordinary people, what is ether? What is gas? Why I need several tokens. You create a whole space of mental models that needs to be filled before the person even can start using some application. Whereas compare that to an experience of I just send you, you're new to crypto, and I say, look, I'll send you $100 to play with. Give me your address, just download this app, you will see the address and you can invite me. I'll send you some virtual dollars. You don't have to understand any of that.
01:02:01.230 - 01:02:45.562, Speaker C: You're just like, okay. Then you see the value is 100 USDC or die or USDT or whatever, which corresponds to $100 fine. Now you can just send it to someone, or you can go and buy an NFT, or you can go and interact with protocols and then you will pay fees as a percentage of that. That's a super simple model to understand. So I had an experience with a friend of mine, received a payment for some consulting work he did in crypto. He downloaded a wallet and he was sent 1000 USDC and he called me and said, look, I'm trying to send it to an exchange to transfer it to my bank account, and I can't because it says that I need to pay the fees in ether. It says not enough funds, but I have $1,000.
01:02:45.562 - 01:03:23.590, Speaker C: How is it not enough funds? I'm like, well, you need some ether to be able to pay for this transaction. He was like, yeah, I figured that out already. So I tried to swap this USDC into ether to pay gas, but it says I don't have enough funds to make the swap. So it's kind of this cage 22 loop, which is very hard to explain, and most people will fail if just left alone with this stable coins, being able to pay fees is a fraction of whatever token you're transacting with solves the problem and paves the path for much easier experience onboarding.
01:03:25.470 - 01:03:28.140, Speaker E: Julian, I'm curious, do you have anything to add to that?
01:03:29.470 - 01:04:24.502, Speaker F: No. I love the example that Alex gave. And again, at Argent, for those who've used Argent, you'll realize that you can pay in ESC 20 tokens, because being a smart contract wallet, that very loop that Alex mentioned, that complexity, unnecessary complexity, we identified it right away. And so even though we were not using directly the paymaster as defined in ERC four three seven, because we had our own implementation of that entire meta transaction part. But we've had lots of users who were just paid a transaction in die, meaning that they only had die in their account and that was sufficient. Exactly like Alex mentioned, you don't need to think about having another currency to make your transaction. The way I see it as well, I think, is that account abstraction is really a way to abstract not only accounts, but the complexity and the friction of interacting with blockchain, abstracting the protocol.
01:04:24.502 - 01:05:00.070, Speaker F: Because again, as a user, you don't care about the protocol, you care about the application, the user experience. And so for me, ETH is actually a part of the protocol. It's only there to pay transaction fee to the miner that's really at that base layer. But normal. And majority of users shouldn't care about that lower level of the protocol, they only care about the application. In this case, the application is having a currency, having dollars in your account and making payments. So yeah, I think again, being able to sponsor transaction or to pay transaction in stablecoin is very important.
01:05:00.070 - 01:05:40.066, Speaker F: Use cases of account abstraction. I was going to say to extend on that. That's one. But I think the ability to sponsor transaction is another important one. I think in the future adapt may want to pay the transaction fee of the first five transaction of users on their platform, for example. I mean, there's a lot of model that will come and that can be enabled because you have account abstraction and you can never pay master. At Argent, when we started, we believed that users shouldn't have to pay transaction fees, the same way that if you go on an application on web two, you actually don't pay the cost of the AWS server that's running the application.
01:05:40.066 - 01:06:08.190, Speaker F: You come to an application and maybe you pay because there's a business model, but you don't see all that base layer of the interaction. And we felt it should be the same on Ethereum. So we started by sponsoring transaction. I think there will be a lot of use cases like that that will be enabled because you have the ability to either sponsor or pay transaction fees. In a different token, I think we'll again see an entire design space, and that will enable and trigger a lot of innovation.
01:06:09.570 - 01:07:10.990, Speaker C: I just wanted to add the exact same thing and say that I'm really curious to see all the creative ways people are going to use in counter abstraction, like not all the straightforward examples that we're always using, but really pay the fees. If you're the first hundred minters of this NFT collection, then the fees are going to be covered for you. Or if you own this NFT, you're a member of this club and all the transactions are going to be covered for you of this Dao, then the transactions are going to be covered for you by the Dow treasury, or you're paying for some goods and services and starting with certain amount, transactions are going to be free for you, just like shipping is free for you if you purchase something on Amazon starting at certain price. All this in unconventional ways where you can program things that look at certain properties of the user, of the transaction, of the interaction itself, take them into account and decide on how this is going to be taken in consideration by the paymaster.
01:07:12.950 - 01:07:39.180, Speaker A: One thing that is another kind of like an unlock with account abstraction that I don't think we've hit on yet is session keys, or the idea of signing transactions for a given period of time, which anybody who played some of the OG crypto games, maybe like Defi kingdoms, signing a transaction after every time you interacted with a part of the game is one of the most brutal experiences. Is there anyone that's using session keys in a really exciting way that maybe you guys have spoken with or helped build?
01:07:40.590 - 01:08:05.822, Speaker F: Yeah, I can comment on that. Funny story again. We kind of had the idea of session keys, I think in 2018, and we implemented in the Argent wallet on Ethereum. Nobody cared. And by the way, our implementation was not that efficient. And then the smart guy Ethereum, more or less at the same time they were also bidding a smart contract wallet. They kind of improved on our design, but again, we call them dap keys.
01:08:05.822 - 01:08:56.974, Speaker F: Nobody cared. I don't think not a single users use that. And so now that we are kind of bringing back these ids because there are now much more affordable because of L2s, we have seen some use cases in onchain gaming for the moment in the stocknet ecosystem, because we have an implementation of session keys on Starknet, we are yet to make that happen on Zksync. One of the main reason is that on Starknet we have a browser extension which is much more developer focused. And so we kind of gave tools for developers to mess around. And for the moment on Zksync we have our mobile application which supports Zkyn era. And by the way, that's an announcement I should make that we are supporting Zkacy era in the argent mobile application for the moment only available for developers.
01:08:56.974 - 01:09:37.146, Speaker F: But so if there are developers working on Zkacing era, feel free to ping me and we'll get you on board it. But so anyway, yes, there are some games that experimenting with session keys. I think for me a killer combination is actually session keys with multiple, because the idea of session keys is that a DAP or a game will basically create a key locally. During the session there will be some constraint associated to that key and the account will authorize that key. So for example, a game will say I want to authorize a session key for 20 minutes and the key can only call this and that contract and this and that method. As a user you approve. This is all happening on chain.
01:09:37.146 - 01:10:31.362, Speaker F: So all these constraint, these policies that are really at the level of your account on chain, and after that the DAP, in this case the game can make direct transaction to your account, so it no longer needs to call your wallet. You see a pop up, you approve. So every on chain action is actually transparent to the user and users can really focus on the game. So of course that's fantastic. But I think there's a trade off to fine people imagine that they will send transaction every 10 seconds, even though, even if L2s are very cheap, this is probably not going to happen. So what we are seeing on stocknet for the moment is that game developers combining that with multicol, so when you play the game, they will basically stack transaction with the session key, say for one, two or three minutes in a multicol. And then at the end of that period, two or three minutes, they basically send all these transactions and they reconcile the state.
01:10:31.362 - 01:11:18.894, Speaker F: So you kind of combine the best of both world, you are not making too much transaction which is really inefficient and will end up being costly even if it's a L2. But at the same time you can really benefit from that amazing experience. And if for some reason something goes wrong, you are only losing, say a minute of your game, because every minute your game reconcile all these small transactions. So again, I think this session keys are I believe required for onchain games, but I think they will be required for other stuff. But then again for me we see that as an unlocker of possibilities. If you give smart developers new tool to play with, I think they will use them in ways that we are not even thinking of. And the example of combining session keys with multicode I think is something we did not anticipate.
01:11:18.894 - 01:11:24.420, Speaker F: But I think there will be much more amazing use cases unlocked by technologies like that.
01:11:26.870 - 01:11:48.570, Speaker E: Is there a lot of different implementations of account abstraction? Like let's say the one that's native to starknet and then also the one that's native to Zksync era? Like do we think that this is kind of like proof systems and that everyone just kind of building and innovating in different ways and eventually will settle on a unified format? Or is it kind of apples and oranges in that respect?
01:11:50.510 - 01:12:27.366, Speaker F: That's a good question. I'll let Alex comment on that. But from a point of view of developers, what we are seeing, I think, is that a lot of people agree. Erc four three seven is actually a great architecture. Account abstraction is actually very complicated. When you start digging, it's not complicated to understand, but if you want to make it right, if you want to make sure you don't open ddos, act like vector for the protocol and so on, it's actually complicated to get it right. And the previous attempts of account abstraction, the previous eips that tried to do so, they were unlocking some of the possibilities of account abstraction, but not all of them.
01:12:27.366 - 01:13:34.170, Speaker F: And four three seven really finds the correct tuning I think is the correct approach and the correct architecture. But again, as I mentioned, I don't think 457 is the end of the road, but because it answers most of the question and basically found solution for the majority of difficulties, L2s can be inspired by four three p seven and simply taking one level down. And so the implementation of account abstraction of Zksync is not exactly the same, but it's very similar to the one that Stacknet is doing because they are both taking four three seven as is and bringing it one layer down. So there might be a few differences here and there, but 95% is the same and conceptually is the same for developers, which I think is really good. So what I believe is that it's kind of a no brainer that all year twos on Ethereum will adopt account of abstraction. And if they bring it natively it will be some variation of ERC four three seven. So they will be very similar with small differences at that point.
01:13:34.170 - 01:13:52.180, Speaker F: It would be of course great to have some kind of a standard and make sure they are equivalent from a developer's point of view. Will that happen? I don't know, but what is sure is that there will be. In my opinion, they will be equivalent up to some minor differences, but globally they will be very similar.
01:13:55.430 - 01:13:57.300, Speaker E: Alex, do you have any thoughts there?
01:13:58.230 - 01:14:32.080, Speaker C: Yeah, I think that we will converse. So we're working very closely with Ethereum foundation on following like our protocol follows largely the design of AP four three seven with only minor deviations that were necessary to actually implement it natively on the protocol level. And as Julian said, some of these changes were taken back by Ethereum foundation. They realized that it's a good addition to the protocol. So we expect the protocols to cooperate and eventually come up with a single standard.
01:14:35.250 - 01:14:49.540, Speaker E: Awesome. Well, that's all the questions I had for you guys today. Thank you guys so much for coming on and being generous with your time. Do you guys want to take a second to share with the audience where they can find out more about your projects and yourselves? Julian, I can kick it over to you.
01:14:50.650 - 01:15:27.600, Speaker F: I mean, love people to experiment native account abstraction today. So go to WW, Argent, XYZ and there you'll get access to our different products and specifically for Zksync. If you are building on Zksync era, ping me over Twitter or get access to us because we want to give access to Dapps so they can really start building and see what experience they can build with account abstraction today. So again, if you're building on Zksync era, contact Arjun and would love to give you access to our mobile application and get you started building.
01:15:29.010 - 01:16:12.826, Speaker C: And for us, you can find us on Twitter under zksync and our website is zksync IO. You will find all contact information there and you can follow us on social networks. And I want to share also that we're still actively hiring after raising a significant series c very recently. So we're really well capitalized. We're not laying off and not going to lay off anyone. Growing steadily but slowly. If you are an engineer with experience in smart contracts, security and building protocols, especially protocol design, especially senior engineers, or even a rust engineer, or you have experience in consensus mechanisms and you want to help us scale ethereum, please contact us.
01:16:12.826 - 01:16:15.306, Speaker C: You will find the information on our website.
01:16:15.408 - 01:16:15.770, Speaker F: Awesome.
01:16:15.840 - 01:16:20.960, Speaker E: Thank you guys so much. We'll catch you guys later. Our.
