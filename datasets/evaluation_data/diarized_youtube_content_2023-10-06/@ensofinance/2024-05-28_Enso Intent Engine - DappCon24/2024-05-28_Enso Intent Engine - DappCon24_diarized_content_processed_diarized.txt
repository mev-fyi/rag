00:00:00.840 - 00:00:33.904, Speaker A: Cool. So intents are not real without the intent engine. I'm Connor Howe, one of the co founders of EnSo. I've been building on Ethereum full time for the last eight years. Prior to that, I was in bitcoin in 2013. And EnsO's went through many evolutions to be able to get to where it is as of today. The agenda of today will be giving you a bit of context of the evolution of EnSO, so you can get some insight into how we ended up too intense.
00:00:33.904 - 00:00:59.650, Speaker A: What are intents and the ENso network? The ENSO network is not being publicized anywhere. There's no blogs, there's no tweets. So you're getting real, real alpha today. So crypto projects generally have two choices. Either artificially create product market fit by launching a token. Hopefully you survive after two or three years. Most don't.
00:00:59.650 - 00:01:43.724, Speaker A: Or you go through the fog of unknown. That's what we done with Enso. We started off with a vampire attack. We attacked six different protocols, gamified this whole experience and incentivized it with nfts. We then launched social trading, where anybody could create a social strategy of monetizing your investments into DeFi and Erc. 20 tokens. Whilst building this, we found a massive, massive problem, was how do we integrate all of DeFi simply, conveniently, without spending over half a million of dollars in audits, which we did only for 15 DeFi protocols.
00:01:43.724 - 00:02:36.790, Speaker A: So went back to the drawing boards, rebuilt everything from scratch, and had one holistic UI for interacting with all of DeFi. Whilst building this, the architecture underneath, we built in a very nice way that we're able to integrate a new DeFi protocol from inception to production within 30 minutes safely. But users again don't use a product unless you give them free money, which doesn't really make sense. But we got a light bulb moment, which was everyone else has. Not everyone, but many people have the same problem as us in the v one of how to integrate all of DeFi into your product. We spoke to many projects and teams and two results came out from this. The question was, how do we get users? One, launch a token, two, we have the same issue.
00:02:36.790 - 00:03:52.824, Speaker A: So we spun up an API and within the first week of the API, we got 11 million volume more accumulated over the two years of Enso being around. So that's what you know at EnSo as of today, this Defi middle layer enabling application developers to embed Defi actions into their products, ranging from lending, borrowing, swapping LP's involves. So if you're a developer and you're building a wallet, a treasury management tool, whatever it may be, and you want to offer your users defi, you don't need to build it all over again manually, one by one. You can simply just call our API for this. And in a matter of three years, we went from first year of $8 million to now 12 billion plus with 35 plus projects using is in production, all without incentivizing this with a token. Whilst we were building this, we always had user centricity at the forefront. Users want to interact with DeFi without needing to know every single individual complexity of how to interact with that DeFi protocol.
00:03:52.824 - 00:04:45.494, Speaker A: So let's say, for example, you want to interact with beefy, that requires an aura LP, that requires a balancer LP, that requires three individual tokens. But then, so you can just say, I want that balancer LP, and will abstract all that away for you. Or beefy LP, we call this shortcuts of blockchain. Other people call this intents. For those who don't know what intents are, they're really not that complex. Some people like to make them sound more complex than what they are, but they're saying I have a and I want b, C and D, and I don't care how you get that. For me, all of this logic of how to get that is abstracted away for the developer, and B, C, and d could be a token state, NfT defi position, or any interaction on chain.
00:04:45.494 - 00:05:32.894, Speaker A: You may have heard a lot of hype about intents. And if a user wants to express their intention to go from token a to a DeFi position, you'll go to what people call an intent network. There's many different intent networks. As you can see, all these intent networks inherently are is a job bulletin board. So you go to LinkedIn jobs, you go to fiverr, you go to Glassdoor upwork, you say I have a, which is money in the context of a job, and I want this task to be done. It's the exact same for an intent network. And underneath, people that fulfill this task or this intent are called solvers.
00:05:32.894 - 00:06:27.416, Speaker A: Some people call them resolvers, some people call them fillers, some people call them transmitters. Whatever name somebody creates next is the same thing. I have a task, I have an a and I want b, c and D, and somebody figures out how to do that for you. But all solver is really doing as of today, is swapping from token a to token b. There's only two players in this whole ecosystem that are doing non just token swaps so, for example, if you want to be a solver, you're creating this map of all smart contract interactions. Token a goes into this contract, token b comes out, and you start to graph all of these relationships to give you a visual representation. This is one of the orders we fulfilled.
00:06:27.416 - 00:07:33.960, Speaker A: This is doing 112 different individual transactions to be able to obtain the most optimal route for the user. So you start to see that these are individual points in a map and how all these relationships start to connect with each other. Yeah, I mean, you can see the extent of this, right? It's quite big, not gonna explain everyone. But again, the ecosystem is not just about tokens. B, c, and D could be a token, a DeFi position, an NFT, a state outcome. It could be an approval, it could be a transfer, it could be a mint, it could be any smart contract interaction on chain. Our vision of this ecosystem is all developer interactions will be intent based in the future, defining what you want and not how you should get.
00:07:33.960 - 00:08:31.978, Speaker A: That makes the most logical sense. As a developer that wants to offer maybe a DeFi product, a DeFi protocol in their product, they need to integrate maybe four or five different DeFi protocols before they can even offer that to their users. So these developers are turning into a dev shop, an integration house for building every single integration, waiting for audit slots, looking at four, five, six months before you can release an mvp of maybe just one defi protocol your user asked for. This is where Enso comes in. So we have built the world's first fully decentralized shared network state for building transactable data across all blockchain frameworks. It's his own blockchain. And this word choice of a shared network state to really just break this down.
00:08:31.978 - 00:09:24.126, Speaker A: The world is a map, right? You have many different countries in a world, you have many different cities in a country. And the ENSO State is a world of all smart contract interactions across all blockchain frameworks. So in this case, Ethereum can be represented as a country. Each individual smart contract you can see as a city. By having all of this within one place, we can then start understanding the relationships, how they intertwine, how they communicate with each other, not only for tokens, but for any smart contract interaction on chain. Similar to how a train line may work, you want to go from point a to point b. You're going through many different cities to be able to get there.
00:09:24.126 - 00:10:08.944, Speaker A: With this as a full map, we can start understanding the relationships of smart contract interactions. And all of this turns all developer experience into purely outcome based. If you have all smart contracts, how they intertwine, how to build executable data, or being able to only specify your outcome. Developers don't need to care about all the individual nuances for every single smart contract they integrate. Developers can now just say, I want this. Instead of each individual step, they have to build manually. So a developer would come to the ends of network, specify their intent.
00:10:08.944 - 00:11:04.338, Speaker A: The intent could be, again, an NFT deFi position, a token, a state override, and all of the individual parts to be able to obtain that is abstracted away. With the ENSO network, for example, even approvals that's required as a prerequisite is abstracted. The three different network participants we have is an action provider, a grapher, and a validator. We have competition, but also collaborativeness between network participants. An action provider you can envision is somebody coming along and saying, here's how you interact with a smart contract conforming to a standard that ENSO has built. Similarly, how a developer goes to sub graph, well, the graph and creates a subgraph that other people consume. Let's say, for example, you want Aavey lending, you will come along to the ENso network.
00:11:04.338 - 00:11:37.004, Speaker A: Here's how to lend on AVi. This now is a plot inside of the ENSo map. The graphers will listen to intent requests. These are purely mathematicians that do not care about where the data is coming from. Mathematicians don't care that it's blockchain data. They just traverse every single action on the ENSO map. For building the most optimal solution, these graphers will propose their solution of bytecode of how to solve the intent into the mempool on the cosmos.
00:11:37.004 - 00:12:12.824, Speaker A: Chain validators will then simulate this and then find the most optimal solution that was proposed. These validators in the background are running transaction simulation tools. We open sourced our transaction simulation tool about ten months ago. It's called tempur. So if you are using tenderly, you can just use this for free. So EnS was this full map of all smart contract interactions. You need people to contribute actions to the network.
00:12:12.824 - 00:13:00.304, Speaker A: So a developer, maybe in this room, comes along and says, I want to add the subtraction for the smart contract. If you add this, you get a fee of all solutions that are being built using that action. The question you may have is, what does this turn into? Domain squatting, not necessarily because there's a full economy of token staking on top of the actions that get provided. So if an intent solution comes in and two actions are the same, the one that has the most amount of EnSo token to staked gets selected for that solution. Why? Tents aren't real without the intent engine. Intents are purely just job bulletin boards. You need people underneath to fulfill these different intents.
00:13:00.304 - 00:13:49.634, Speaker A: We cannot build hundreds of thousands of draw bulletin boards when there's only really a handful of solvers in the ecosystem that are only doing token swaps. As of today, as this ecosystem grows, which it is, with the amount of blockchains, the amount of L2s roll up as a service, we're turning into this real multichain future. And we keep forgetting developers want to integrate all of this. If you integrate one blockchain, you have to build months for this, have all infrastructure for this, and then integrate each smart contract. This does not scale. Integrating every single chain manually itself. And we need people to use this technology.
00:13:49.634 - 00:14:41.604, Speaker A: If we expect developers to integrate everything manually, it doesn't work. We learned that ourselves the hard way in the version one of ENSO spent over a year integrating 15 Defi protocols, over half a million dollars in audits. If we want people to build products on top of this, they need a convenient way of embedding all blockchain into their applications. So what do we build but whatever? However, wherever using EnSo abstracts all of this away for you to embed all blockchain into your product, the only limitation, really, is your imagination. Now you don't need to spend months integrating every protocol. Yeah, that's the presentation. If you want to contact me, Connor and email.
00:14:41.604 - 00:15:12.474, Speaker A: Still got five minutes. You know, we are hiring, so two engineers, a Twitter intern, if you like to shitpost, let me know. Developer relations, cosmos developers. And if you think you aren't hiring, you know. Exactly. Is it the head? There you go. But if you think you will be fit, and we have.
00:15:12.474 - 00:15:20.994, Speaker A: If I turn my head. No, just reach me and. Yeah. Thank you. If anyone's got any questions.
00:15:30.174 - 00:15:47.564, Speaker B: Thanks for the talk. Staying, in your map analogy, how do you add new cities to your map? Is it a Google Maps or an open street map? Like new smart contracts? Like staying your map analogy, how do you add new smart contracts to your protocol?
00:15:49.664 - 00:16:08.364, Speaker A: It's a standardization of different primitives. You come along and plug it in and you say, here's how you land on aavey. Here's how to execute. So anyone can do it. It's not really deploying a new smart contract. It's just like an interface layer of knowing how to interact with these other smart contracts.
00:16:12.764 - 00:16:24.944, Speaker C: I assume the proofs depend on a certain state of the blockchain. So how do you make sure that the blockchain does not change in a way that the proofs are not valid when the actual execution happens.
00:16:25.684 - 00:17:15.205, Speaker A: So there's no real proofs inside of this. It's more once you call action to not only I didn't say in the presentation, but you specify how to execute and also how to validate that execution happens, then the validators are then going through each individual action which is used comprise of the solution, and then also validating insights for these individual getters. And they're also the getter's not there. Validates can start adding custom modules for then state overrides. I run a bit of infrastructure.
00:17:15.349 - 00:17:16.293, Speaker B: I can code.
00:17:16.333 - 00:18:00.334, Speaker A: How can I participate in anso if you can code one? You can build smart contract abstractions and just contribute them to the network. I recommend you to start doing it whenever it's live from day one, because all the solutions that are being generated, you will get portions of that fees. So it's kind of like you're front running other people contributing to the network. I wouldn't recommend grappers if you're a coder, because it's purely mathematicians. And then the third one is a validator. So if you've run any nodes before, just take this docker image and then just run it. What about the graph? Yeah, I wouldn't really say it's more.
00:18:00.334 - 00:18:22.274, Speaker A: I wouldn't think that's a coder. It's a purely mathematician. So you're doing like k shortage path. You're building custom algos to traverse a whole map. You can do that if you want, but I think validators and action providers probably easier for you now. I've got two now. Okay, double whammy.
00:18:29.474 - 00:18:52.424, Speaker D: Thanks for the presentation. Maybe just one quick thing. So if I wanted to say I have Dapp and I wanted to offer my users to deposit some funds on Aave and do something with yield, I had to build an intent and then I could use, use that intent and anyone else could use that same intent.
00:18:53.164 - 00:19:29.030, Speaker A: It's a really good question right now. No. So you're basically saying specify, and then storing this somewhere so people can reuse what you've requested, right? No, but what you can do is a Dao, you can just call the ENSO API and it's fully abstracted away. So you will store most likely in your backend. Hey, I want to go from a to b, and this could be lending on Aave. So, you know, that call would generate the call data and then the user would execute themselves. If you do want to make it more funky, you can use gelato web3 functions so you can kind of automate this whole process under these conditions.
00:19:29.030 - 00:19:39.754, Speaker A: If Apy on Avi is X, call Enso API, get call data, and then also gelato can execute on behalf of the smart wallet or the smart account.
00:19:41.834 - 00:19:42.614, Speaker D: Thanks.
00:19:52.034 - 00:19:56.414, Speaker E: Thank you. I'm just wondering, what is your business model? How are you charging?
00:19:58.994 - 00:20:36.164, Speaker A: So right now it's kind of taking spread comparison to other people. So the assumption is not only are are we going to have direct developers using us, we're also going to have other intent networks consuming us. So for example, like we're solving cowswap brink users aperture, many different intent networks, we can see what our solutions are compared to other people as well inside of this, and then we can take the percentage difference moving forward, most likely a fixed fee variable based upon how much volume is coming through this, whoever's consuming the network right now, TBD.
00:20:36.744 - 00:20:54.204, Speaker E: Okay. And then one follow on question. Then you said you can see how good your solutions are compared to other solutions. And that solution you showed is really looking highly complex. I'm just wondering, what kind of improvement are you currently seeing your solutions offer over the best in the market.
00:20:55.104 - 00:21:27.992, Speaker A: So we're not the best at token swaps. Probably not public knowledge, but now it is. We're more good at DeFi routing. So, like, we with another person are the only ones doing DeFi routing. So our edge is being able to interact with a new DeFi protocol very quickly. Let's say you want to get into Sdai. Many people try and purchase that on a secondary exchange, but the most optimal route, maybe swap into X different tokens and then mint SDI directly.
00:21:27.992 - 00:21:29.936, Speaker A: So that's kind of one of our edges.
00:21:30.120 - 00:21:32.164, Speaker E: Okay, cool, thank you.
00:21:40.984 - 00:21:59.654, Speaker F: Yeah, hi. So what part of the solution are centralized? What are off chain? On chain? Because if we are talking about competitive rollative routing solutions, for example like Uniswap X or cow swap solvers, so they have different type of centralization inside the system.
00:22:00.834 - 00:22:02.970, Speaker A: You asking about them or the answer?
00:22:03.002 - 00:22:16.374, Speaker F: No, I'm asking about you. So, as I understand these interfaces, they are not on the blockchain, they are on the backend or on the API levels. So what parts are on the backend, what parts are on the blue off chain?
00:22:16.734 - 00:22:48.284, Speaker A: So as of today, it's fully centralized. Once the network goes live, it will be the validators first, and then over time will be individual graphers. The graphers will be running their own proprietary algos off chain. They won't be putting that on chain, they'll be putting the solutions generated from their algos on chain, then the action providers that's put on chain. So people saying, here's how to interact with a protocol. Over time, it'll be individual RPC requests are being made to the network itself.
00:22:51.104 - 00:22:52.324, Speaker F: Okay, thank you.
00:23:04.784 - 00:23:27.510, Speaker G: How far do you abstract away the intent? So, for example, if I want to take on, let's say I have $1,000 in Ethereum, and I want to take on 1.1 leverage on that ethereum, and I do that through lending markets, do I need to specify in my intent that I want to do this on Aaver or maker, or can you abstract it away completely?
00:23:27.662 - 00:23:55.004, Speaker A: Yeah. So I think people will build tools like that on top, and it will turn into three different types of intents. Explicitly. That is, I want to do my leverage on that protocol. That's like explicit, semi explicit is I want to obtain this leverage. But you're creating these boundaries that solvers can then still use. So maybe it could be an Avi, maybe it could be a maker, maybe it could be GMX, whatever it may be.
00:23:55.004 - 00:24:04.404, Speaker A: And then the third one is not really explicit at all. And it would be a AI execution bot that's learned from your previous behavior what you would do in these markets conditions.
00:24:04.984 - 00:24:06.844, Speaker G: I want more money is the intent.
00:24:08.544 - 00:24:16.344, Speaker A: Really, though. Thank you.
