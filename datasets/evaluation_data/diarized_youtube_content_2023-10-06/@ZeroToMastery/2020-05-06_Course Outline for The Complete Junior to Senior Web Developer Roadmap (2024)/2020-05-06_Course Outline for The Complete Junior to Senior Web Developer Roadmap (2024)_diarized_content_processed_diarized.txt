00:00:01.000 - 00:00:56.126, Speaker A: Hello. Let's walk through the course curriculum so you have an idea of what to expect in this course. Now, some of these topics may seem intimidating at first, but they are all connected and they are all key components that make you a top level developer. We are going to go step by step, working on real life problems, writing code, practicing so that we can feel confident with each one of these topics. Now, the first part of the course is going to cover SSH. And in this SSH section we're going to learn about the SSH command, how to access remote computers, how to connect to a server that is in another part of the world. We're going to learn about encryption, about symmetrical and asymmetrical encryption, as well as hashing.
00:00:56.126 - 00:01:45.034, Speaker A: And we're also going to learn about SSH keys, about generating SSh keys, what public and private keys are, and how to manage them on the server. We're going to have some fun exercises where your app was just deleted off of a server in the middle of the night and you have to move all your project files back onto the server using sshdez. And we're also going to set up GitHub with Ssh. After a nice short section to start us off, we're then going to dive into a big, big topic of performance optimization. And this is so big that I've divided this into three parts. The first part will be network optimizations. We're going to talk about how we can minimize our files and improve delivery of our application.
00:01:45.034 - 00:02:46.070, Speaker A: And then we're going to learn about front end optimizations, about the critical render path, how to improve it so our website can load fast. We're going to learn about progressive web apps and about optimizing code. And we're going to help Keiko Corp. Actually improve their company website as well as their robo friends app. We're going to make a progressive web app that works offline and can even be submitted to the app store using just JavaScript, HTML and CSS. But we're also going to learn about interesting topics like code splitting and making react and redux applications fast through smart rendering. We'll then finish our complete understanding of performance optimizations by working on the backend optimizations, talking about content delivery networks, scaling databases, compressing our responses, caching, and finally load balancing, where we'll implement a load balancer and actually do some load testing on our project.
00:02:46.070 - 00:03:42.700, Speaker A: By the end of it, you're going to be a performance guru. We are then going to get into react and redux, the most popular frontend libraries to build single page applications. We'll first have a nice introduction to react if this is your first time learning it. And then we're going to quickly dive into redux talking about state management and how to structure your apps so that they can grow. And we also add a nice small section on bundling, on using the latest webpack, as well as an up and comer like parcel to bundle our files and make our production bundle optimized. By the end of it, you're going to feel comfortable with React Redux, as well as setting up your projects with things like webback. We then get into a topic that is so important, but also often forgotten when you're first starting out testing.
00:03:42.700 - 00:04:50.708, Speaker A: Companies love testing, and if you know how to test how to write unit tests, integration tests, you write better software. We're going to start off by learning about the testing landscape in the current web developer world, what tools to use, what libraries there are, how to set everything up. Then we're going to work with Jest, one of the top libraries to use for testing to write synchronous as well as asynchronous tests, write mocks, and have coverage reports. We're then going to dive into writing tests for our react app and making sure that we use things like snapshot testing and enzyme to write smart tests that avoid bugs in our applications. By the end of it, you're going to know the entire testing landscape and feel comfortable writing any tests that come your way. We then dive into one of the hottest topics coming out of last year's web developer environment, typescript. We're going to learn about static typing and why JavaScript didn't have static typing and instead is dynamically typed.
00:04:50.708 - 00:05:35.036, Speaker A: And then we're going to learn how to use typescript, what types there are and how to add them to your project. We're then going to finally add typescript into our react project and see how to add it to your own projects by the end. Once again, you'll master this topic. From there we dive into a short section on on single page applications. We're going to talk about server side rendering, the original way to display websites, why it was useful and why it still may be useful, and some companies still need it. We're then going to talk about single page applications and client side rendering. Again, the benefits and pros when you want to implement one over the other.
00:05:35.036 - 00:06:39.740, Speaker A: I'm going to show you how to implement server side rendering in react, and again what the pros and cons are of each one. We're then going to dive in quickly into next js, a library that allows us to write server side dynamic applications very nicely. By the end, you'll be ready to make decisions on whether you want a single page app or a server side rendered application for your project. From there, we dive into one of my favorite topics, security. We're going to cover a diverse range of topics, including front end security where we talk about cross site scripting injection attacks like SQL injections, and we'll actually practice those to see how they work. We're going to talk about back end security and what the best practices are in order for us to manage sensitive data. From there, we learned also a few ethical hacking techniques so that when we can protect ourselves when we're building our app, so that you feel confident by the end that you are building secure applications using the latest tips and tricks.
00:06:39.740 - 00:07:26.354, Speaker A: And then we get into Docker, a tool that's going to absolutely amaze you. We're going to learn about containers and how containers have now revolutionized how companies structure their applications. We're actually going to write Docker files and create our own containers. And then we're going to use Docker compose to compose a redis server, a postgres database, and an API server all into one so that they all run from one command by the end of it. We're going to feel very comfortable with Docker whenever we deploy our applications. We then start learning about a new database. Redis is one of the most popular and often used databases that is a key value storage.
00:07:26.354 - 00:08:29.388, Speaker A: We'll first dive into the topic of databases and the type of databases that we have. From there, we'll spin up our own redis server, learn how to use Redis, how to use the Redis CLI so that we're able to use Redis now for caching to make our websites faster, as well as for session management, something that we'll cover in the next topic. Using our Smartbrain app, we're going to create an entire dynamic part of the website that is user management. We're going to start off by creating a new profile page and using this profile page, we're going to learn about session based authentication where cookies would be used, and also about token authentication such as using JWT tokens. We're going to learn about each one of those, what the pros and cons are of each. And then we're actually going to implement a secure authentication flow that you can implement in any app that you choose. We're going to use redis for session management so that we have protected routes.
00:08:29.388 - 00:09:26.760, Speaker A: And this way anytime we have a sign in functionality or we have members, we can use this system knowing that it's secure and it follows best practices. Yes, we still have more topics. This course is quite extensive. We then are going to talk about AWS, what Amazon Web Services is, and also what infrastructure as a service and platform as a service has done in terms of allowing companies to really scale or work as efficiently as Google or Amazon or Microsoft. And then we're going to learn about this exciting serverless technology called AWS Lambda, which allows us to run just simple functions in the cloud. And we're going to use the serverless framework to actually implement AWS Lambda into our smartbrain application. By the end of it, you're going to feel confident working with AWS and creating functions that live in the cloud.
00:09:26.760 - 00:10:48.146, Speaker A: After we've tied everything together and created the overall picture of how to write good software, good applications, we're then going to talk about how to actually create good processes, how to actually deploy to production. We're going to talk about good continuous integration practices, and then also about continuous delivery and continuous deployment so that when you are put on a project, you know how to implement good practices and good tools like Circle CI to make sure that from the start, your developer team has the right tools and the right processes in place to be successful. To write applications with less bugs and cleaner code. And then a little extra bits area where I talk about some of my personal experiences and opinion. I talk about code analysis and what to do when you first start off on a project where you have a ton of files and you didn't write the code yourself. We're going to talk about tips and tricks to really optimize that. I'm going to talk a bit about best practices, things that we couldn't include in the other sections, and then a couple other little extra bits so that by the end of it, by the end of the entire course, all of these things will make sense to you.
00:10:48.146 - 00:11:15.000, Speaker A: You'll be able to implement all of these things into your own projects, into your own company, and you'll know how each and every one of them are connected. But most of all, by the end of it, you're going to learn things that took me years and years to learn. In the next video, your first day of work is finally going to start a Keiko corp. Enjoy the projects, enjoy the exercises. We're going to be building a lot of fun things. Have fun and enjoy the ride.
