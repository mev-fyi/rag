00:00:00.960 - 00:01:41.800, Speaker A: What does advanced JavaScript mean? Everyone has a different idea of what advanced means. In order to make sure that the course can be enjoyed by everybody, I have structured the course in a unique way so that although everyone will start at different levels of knowledge, you will all end up at the same place in the end. Let's have a look. This is our course outline, and the course starts off with the foundations to make sure that we have those building blocks in place to learn best practices, advanced topics and how to write clean code. We'll start diving quite deep into things like the JavaScript engine, the runtime, talking about interpreters, compilers, JIT compilers, going to talk about all these topics, some of them quite advanced, and then dive deep into the language itself, talking about some of the key terms that you may have heard but not fully understood, like execution context, lexical environment, dynamic versus lexical scope. And once we're done with the foundations, and we are for sure ready for more advanced topics, we start getting into types in JavaScript, talking about statically versus dynamically typed languages, about type, coercion, pass by reference, pass by value, and then we're going to talk about something really important, the two pillars, something that really makes JavaScript powerful. And these two pillars are going to be closures and prototypal inheritance.
00:01:41.800 - 00:02:25.176, Speaker A: Now you may know these topics, but we're going to go dive deep and understand why these two topics are really powerful in making us a great programmer. Along the way we're going to talk about some other topics as well. But all of this is for us to be set up to talk about the programming paradigms. This is where it gets fun. We take all the knowledge that we have built up until now to talk about ways to structure our code, organize our code and write beautiful programs. We're going to talk about the two main ways to structure our code. One is object oriented programming and the other one functional programming.
00:02:25.176 - 00:03:34.550, Speaker A: And we're going to dive deep and talk about each of these topics and also talk about composition versus inheritance. By the end of it you're going to learn some paradigms that have taken years and years, decades for programmers to learn what these good practices are and to end it all off. I have some extra sections to go beyond and learn about important topics like asynchronous JavaScript modules in JavaScript, and go over the history of modules, and also a topic that often gets forgotten about error handling and how to properly do it. And there might be a small data structure section as well. In the end, all of this is a path for you to become a top 10% JavaScript developer. The idea is that we're starting off with building our pyramid with the fundamentals and going up that pyramid each step of the way. If on one of the videos you find the topic too hard or too advanced, I have included an appendix section which teaches you the basic JavaScript topics for a beginner.
00:03:34.550 - 00:04:26.954, Speaker A: This way, no matter what year level, you have a way to learn from each of the videos and reference an easier video in the appendix if you need more explanation. For advanced programmers, some of the beginning sections may seem too easy for you, but I recommend you hang in there as each section builds on top of the other and you will learn things along the way, I promise you. Now, to get the most out of this course, you should follow the lessons in order since you may gain an insight or two. Even if you thought oh leave me alone Andre, I already know this stuff. Okay, now that you have an idea of the outline, let's talk about what it means to succeed in this course. First, make sure you use our online discord community to communicate with fellow students. Its like a classroom.
00:04:26.954 - 00:05:05.642, Speaker A: Ask questions, do coding challenges, talk about coding exercises. When it comes to programming, there is nothing better than asking questions and helping others. This is the most active developer community on Udemy, with over a thousand developers online at any one time. Two anytime you feel like you are just watching a video and arent understanding a topic, stop what you are doing, take a break and come back to a problem. You wont be able to finish this course in one week. If you do it properly, it will take you about a month to finish everything. So take your time.
00:05:05.642 - 00:05:36.340, Speaker A: This isnt a sprint, its a marathon. Finally, try to complete the full course instead of just parts of it. Most lessons are tied into one another so that they flow and we keep building this pyramid of knowledge. We will start from the very basic and go into more and more advanced topics. Alright, enough talk. I think it's time for us to start the course and get ready to be considered a top 10% JavaScript developer. Let's get started and see you in the next section.
