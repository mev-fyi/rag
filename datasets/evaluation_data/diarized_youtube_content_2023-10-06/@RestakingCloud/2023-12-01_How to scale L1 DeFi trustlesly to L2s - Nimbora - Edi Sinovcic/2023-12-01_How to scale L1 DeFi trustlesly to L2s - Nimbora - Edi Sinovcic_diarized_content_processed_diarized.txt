00:00:00.440 - 00:00:38.362, Speaker A: So today I'm going to talk about in Bora, basically, how do we scale l one DeFi trustlessly from L2 s and so on. We call it carpooling for DeFi, but we'll get into it. So, like a bit of history on my side. I kind of started like the core dev in Ethereum foundation back in 2017, worked on Socrates, which is this toolbox for Zksnarks on Ethereum and so on, and then switched to solidity team to help there and so on, build different stuff on that stack. Most kind of the focus was always on how do we improve user experience for the end user so they can kind of use this and so on. Then the defi summer started. Then, you know, like, obviously we all jumped on the defi kind of side of things.
00:00:38.362 - 00:01:17.194, Speaker A: And, you know, we founded this company called Charles, built a bunch of LSD's, played with stuff and so on. But kind of ZK was always this on top territory that I wanted to tap into. And that's why, you know, I decided to go like all in ZK and build a component called Space Shard. We are working with Starkware a lot, we are working with some others and so on. But the core idea is how can we leverage this cell two s to actually scale Ethereum? What we were promised basically back in the day, that ethereum will be the world computer. And how can we leverage it? And I will talk how like with Nimora, we do that. Does anybody remember sharding here, the fully sharding roadmap 64 shards will scale everything.
00:01:17.194 - 00:01:54.066, Speaker A: Gaming will be on one chains and others and so on. And then after that, it's like, oh no, 2020. No, Italic said no, like roll up. Searching crowd map. Why did we do that? Was sharding too complex? Because like recently we see a lot of stuff going on that is kind of going in direction. Okay, ZK sharding now, you know, are we basically just reinventing the wheel so we can maybe take vc money again? Well, you know, I will take that as an open question, but the whole idea is with roll up, we again have sharding and the architectures that we had in the past here. Obviously, we have both three layer and two layer architectures.
00:01:54.066 - 00:02:33.614, Speaker A: The main difference is that with three layers, you have a roll up layer above the Ethereum and then you have app specific privacy chains, gaming and so on with two layer architecture. Everything kind of finalized directly on Ethereum. So isn't this kind of the same issue, what we had with Ethereum? Sharding and so on. So we have like a lot of sharding. Basically both execution and state is broken into multiple shards, which is the same with roll ups now. So did we do anything? Did we really move in the right direction? Because with sharding we had much more tpS, much more execution and so on. And now with roll ups we are talking like single digit, maybe two digit, basically DP's.
00:02:33.614 - 00:03:03.270, Speaker A: Are we getting somewhere? Well I think we are. So we'll deep dive into that. So like obviously roll up centric roll up. Actually sharding it again kind of, but it's not. When we think about the market currently still we are in optimistic phase, which means basically that optimistic roll ups, even without the security that we need to scale kind of on l one and exit, using Ethereum as a security layer, most of the market is still there arbitrarily. Optimism and so on. Optimism even doesn't have a fraud proof, which is kind of insane when you think about it.
00:03:03.270 - 00:03:36.784, Speaker A: Like it's become acceptable. But why? So users want cheap transactions, want scalable things, want to use defi on these l two s because they don't have money to pay for the transaction fee. Imagine going to some developed country or somewhere and saying to the guy, yeah, if you go to Ethereum stake with some of the LSD protocols, something, you have to pay the $40 fee. He has dollar 20 in a wallet or dollar 30. It's kind of insane when you think about it. Obviously value lock goes up and some people are like claiming it's a bull market. I don't believe though.
00:03:36.784 - 00:04:06.236, Speaker A: So. But yeah, maybe we have some bulls here or no, we don't have bulls, but let's go back to the main issue. So obviously with sharding we had this like cross shard, like roll up, like roadmap and so on. We had a beacon chain where you finalize the whole thing and so on. What happened with bridges? You know, roll ups are again the same issue. And then we have this l two, l two communication, which we do through trusted bridges. We had multi chain hack and some others hack and so on.
00:04:06.236 - 00:04:39.744, Speaker A: Kind of the whole thing is broken because if users have to go through l one back, well they have to pay the gas fee. If you want to bridge from, let's say starknet to Zksync, if you go like trustlessly, you have to go through l one. But that's not really feasible, you know, that's not how we can scale a thing. Basically like the gas cost spiked recently and so on. So we've seen that really this is not the way to go. But what we need to choose here is two out of three, we can use real transfers, we can make trustless, kind of bridging and so on. And like the third option is not touching l one.
00:04:39.744 - 00:05:38.526, Speaker A: We decided to go fully trustless and we want to do real transfers because recent drama with layer zero and so on, with Lido and so on, we have seen that this wrapped tokens don't really scale and won't scale long term. You either have one, one basically bridge that takes it all, which doesn't really work like that, or you have multiple bridges and multiple different wrapped assets around one thing, which again doesn't work because you know, it breaks basically quit, it breaks composability and so on. But then I'm talking about scaling ethereum, making cheaper for the users. Users can pay this and I'm saying okay, but you should go to l one. So what do we do then? How do we give users access to l one defi from l two s that is fully trustless? Well we do basically pulled routing plus defi that we call Nibora. Let me get into it. So imagine a use case where I have some meat, I'm a user, I'm allowed to, I have some meat and I want to basically guarantee the biggest API I want I can get for that.
00:05:38.526 - 00:06:25.260, Speaker A: But basically it's like I don't want to take a lot of risk. Let's say I want to stake with lite. So what I can do is go to l one, you know, stake it there and so on, or like change it, exchange it to onodex or something. But what if I have a friend that wants to do that and another friend, another friend. Could we kind of join together and do it at once and share the cost? Well that's not what Nimbora does. Basically we do card pulling for Defi, we join together and we do same action completely trustlessly, but by joining and doing in batches. So how it works basically under the hood is we have vaults on their twos where users say ok, I want to stake some like eat with lido and then they join the pool and that pool gets filled until there is enough users in a batch to basically share the cost.
00:06:25.260 - 00:06:57.696, Speaker A: When it's full we bridge it basically to l one completely trustlessly, where the canonical bridges, stake it with Lido and bring it back. Any questions? So now this is kind of like hopefully Internet will work. This is the demo. So basically this is use case. Let's say you want to borrow some like with liquidity, for example, integration. So we did one of the integrations, this is the alpha version of it is you have LUSD stablecoin. How many of you know what liquid is? Okay, nice.
00:06:57.696 - 00:07:27.700, Speaker A: So for those who don't, basically the whole idea of liquidity is that you can trustlessly borrow LUSD stablecoin against your reit. So basically you don't have to sell your reit to get stables or whatever, but you can borrow against that. How do you do that? Is you go to mainnet, you open something that they call a troll and so on, and then you can borrow against that. Well, what's the issue there? You have to have at least $2,000 to do so. Most of the people are priced out of that. Gas cost on top of that and so on. It's really, really like, it's a huge amount of money.
00:07:27.700 - 00:07:51.336, Speaker A: You have to have to borrow some like stable coins. You know, it's first world problem, but not really if you live somewhere else. So what we did is we opened this like communal troughs, which means basically that we pre opened the two things. One basically has higher collateral ratio. This is less risk. And the other basically has lower collateral ratio. So you can borrow against that, but directly on l two and as a fraction of the cost.
00:07:51.336 - 00:08:16.144, Speaker A: So currently what we can see on the demo here is user chooses basically to borrow against a troll that has in this case like the price go up, went up. So basically it's a bit bigger, it's 300%. So we say, okay, we want to participate that batch. We want to borrow directly from Stark. And this is on Starknet like LUsd for it. And then we say, okay, sure, sounds good. Let's do 0.05
00:08:16.144 - 00:08:41.916, Speaker A: basically. And how much we'll get? Oh, we'll get 29.389 lUsd. And then we say, okay, we don't care because we can wait for some time because we want this to be the cheapest option. Sure, sounds good. We'll pay like basically smaller amount, like $8 or like in the case in the future it will be like $2 and so on. And basically if we decide to that we don't care about that.
00:08:41.916 - 00:09:08.564, Speaker A: We can wait for six to 8 hours for finalization layer one, plus some buffer for batch to fill. But if you want to do it faster, we can pay the rest of the batch. So let's say in a batch we have five users and there are only three users in the batch. And we want to finalize it and make it basically execute immediately. We basically just pay for the rest to basically in the batch. So it's kind of like communal. Basically, the more users join it, the cheaper it gets.
00:09:08.564 - 00:09:41.090, Speaker A: It's kind of magic of ZK. And this basically can use with the trustlessness of canonical bridges to me paying it. And then obviously l one defi that is basically there. So when you do this, obviously you borrow for the user, you interact with the wallet, you supply the 0.05 e, you know, you just confirm with the wallet on L2, obviously the gas cost here is a bit lower than on Mainnet. And that's it. That's basically the magic, you borrowed it, you submitted a transaction to this, and it is not part of the kind of batch going to Mainnet.
00:09:41.090 - 00:10:17.254, Speaker A: So what if it's the future hold what we are aiming with this. One of the biggest problems we encounter building all these l one, l two s and so on, is l one, l two communication. So users want to use l 1d, find a fraction of the cost and l two s. Developers want to build different strategies and so on, but they can because it's too complex. How do you do this asynchronous stuff? How do you do this batches relaying, using the canonical bridges, how does live messaging work and so on. This is what we saw. We try to create an SDK to abstract all these things from the strategies from the developers, so they can build different strategies that come composable.
00:10:17.254 - 00:10:54.650, Speaker A: Part of the strategy can be just build like stake with Lido and then lp to curve afterwards. Or it can be stake with Lido and then lp on the Dex on l two. But for the user it has to be seamless, it has to be one click like North Star. In the future, where we want to go is this is an urn program where you just click because of the account subtraction, the wallet is not there, you don't have to manage it actively like you have to voa and so on. And for the end user is just one click. We charge the future in the future, like users just future yield, we don't judge gas cost. So like in this case, you'd be a user in like some developing country or somewhere.
00:10:54.650 - 00:11:35.670, Speaker A: You join this batch trustlessly, we pay the gas up front for you, but you decide because of this, you lock the asset for some time, let's say three months or whatever, because this is an earned program. And then out of the yield has been generating on top of that asset we charge a percentage of that and repay the gas cost. We have a linear curve. If you want to exit faster. Obviously you have to pay some penalties but if you want to keep it longer, well, it's free and you earn money on top of it. It's kind of magic if you think about it. It's kind of web two experience on the rails of web3 with a construction and completely abstract and then opening all the new possibilities of l one, l two strategies and so on it's becoming unified block space.
00:11:35.670 - 00:12:01.586, Speaker A: It's not one thing. It's basically. It's not two chains or three chains or thousands of chains it's basically one unified block space well, we think this is the future like we are going towards we need to solve basically we solved scaling kind of now we need to solve ux part of it. So hopefully you can join us and feel free to join us and ask, you know, ask questions. This is our Nike Nimbora chat. We're in Alpha. So happy to get your feedback on this.
00:12:01.586 - 00:12:12.234, Speaker A: We are inviting strategies with both users to test this and give us feedback. And let's make this ethereum thing real world computer like finally what we promised kind of ten years ago. Thank you.
