00:00:00.360 - 00:00:25.234, Speaker A: Okay. Okay. Happy Friday, everyone. We are here with PwC, not the price water Cooper's house, but programmable withdrawal credential. Right? So, Vincent, Derek, are we going to talk about a router rest taking router?
00:00:27.074 - 00:00:37.186, Speaker B: So, I mean, I think this is an, you know, an interesting topic of conversation. It's, you know, spoken about a lot, you know, withdrawal credential based restaking.
00:00:37.370 - 00:00:41.674, Speaker A: Do you want to share the slide first? You know.
00:00:41.754 - 00:00:43.570, Speaker B: Yeah, yeah, yeah, yeah. Let's do it.
00:00:43.682 - 00:01:23.018, Speaker A: Yeah. So, yeah, so let's talk about primarily what is the restaking order when it. Where it came from? Because we were talking to hundreds of people from all kind of facets. Risk taking protocols, rest taking staking protocols, services, l one blockchains, l two s, you know, capital providers. You want to get exposure like the DeFi protocols who want to figure it out, how to get this kind of a. This the new primitive of how to re utilize the state e to value economic power, bandwidth for other kind of stuff. Right.
00:01:23.018 - 00:01:48.414, Speaker A: How can we bridge build on top of this? And there are, there are hard questions that we were like, you know, we as you all know that we are also behind the rest taking cloud. And we get this kind of question. There are like in a multiple ways a rest taking can be implemented. One is the withdrawal route. One is a state replication route. Is the rest taking cloud. But then there are markets can be formed around it.
00:01:48.414 - 00:02:35.070, Speaker A: So one is a route and there's a markets and, you know, could be node operations. Just simply reinforce that for node operations. Could be useful, more strategy based staking for restaking. So that's what we see. This kind of a new restake staking tokens which, where they put the restake earnings at the first higher beyond the staked earnings of the inflation rewards. So we see this kind of abstraction going on. But then it brings a lot of what do you call what we ask the question like, how can we take control of our restaked earnings? That's what we earned.
00:02:35.070 - 00:03:08.316, Speaker A: And say that, can we revoke someone who is actually said that I will do risk taking for you, but then the optimal utilization is not there. But to say like, can I revoke that approval? Something that you do, right. You give an approval, you give it. Revoking approval in standard and crypto, that's a smart contract stands for. But how many times you can give an approval? I mean, I'm stopping what you guys think. Why we doing what we're doing? It's not something that we came up because this is a p one product. It's a base infrastructure product, it's a neutral stack, it's not something that's commercial.
00:03:08.316 - 00:03:10.764, Speaker A: So why we're doing this?
00:03:11.264 - 00:03:43.086, Speaker C: Well, I think what's super interesting here is it follows a lot of the other products that we've been building and put together where it's just increasing optionality for the users. And even though optionality sometimes can confuse people, they just want to set path. Doing so at a base layer like this allows people to create the exact path that they want and really optimize their assets for whatever it is that.
00:03:43.110 - 00:05:08.944, Speaker B: They'Re looking to do whilst retaining full ownership of their assets. This is the key tenant. Proof of neutrality is all about offering credibly neutral infrastructure. And the credible neutrality comes from visibility on chain record of, you know, and a chain of custody of what exactly is taking place with your assets and whether that be crypto asset in a smart contract or whether it be an asset. On the Ethereum consensus layer, the, you know, users are hitting the wall because, you know, like you said, you know, sometimes optionality can be confusing, but you know, not having the optionality to back out is also, it causes some issues. But what we want to say is that everybody is saying, okay, well there's all kinds of protocols that are being sprung up on top of a validator balance on the Ethereum consensus layer, but you normally have to make a choice right from the start which protocol to go into, and there's many protocols out there, you kind of say okay, well I'm going to go for this protocol and it's going to fix my withdrawal credentials. If I want to change that, I can exit and then I have to exit the validator queue on the ethereum consensus and then I have to come back with a new life.
00:05:08.944 - 00:05:33.234, Speaker B: And we'll get into those technical details in a sec as to why that is. That's an Ethereum consensus layer rule here. This is about retaining full control over your assets, but also getting the. Allowing you to have exposure to the protocols and the applications that matter to you, but whilst holding them to account through the on chain metrics.
00:05:34.334 - 00:06:04.970, Speaker A: In a nice way to put it, the p one stacks are always an antidote for any kind of centralizing vectors. So it's always there you want to take control back. And this is the way that you can build a free open. It's a very neutral stack, putting back control back to the user with a rage grid always 24 7365 days. But the optionality is great. You can just take, you can grow that to a scale, but it's always the underlying the base layer. The base engine is always.
00:06:05.082 - 00:06:27.734, Speaker B: Yeah, yeah, I think this is a good point, actually. It's a nice way to put it. Antidote for centralizing vector forces. Imagine there's a protocol that you've approved that is made your, you know, that has made your Ethereum stake liquid. You know, if they are exceeding 30, 33% of the Ethereum, you know, network, you can just remove your approval and this is what we want to talk about today.
00:06:28.234 - 00:06:33.574, Speaker A: Exactly. That's, that's great. You know. Wow, that's, that's amazing. Yeah.
00:06:35.034 - 00:07:25.498, Speaker B: All right, shall we get stuck in and just like, just talk about this in, you know, people are probably thinking, what the heck are they like, you know, we need to get more into some details. I think. Let's jump in. Yeah, right. Okay, so the idea here is that users have the ability to control, okay, so users have a facility in which they can extend the incoming ETH into withdrawal credentials and redirect it to other places. So that might be a restaking protocol, it might be a defi protocol, it might be a bridge, it could be more than that. So here the numbers will.
00:07:25.498 - 00:07:47.774, Speaker B: We'll get into that in a bit. It's actually, there's an initial proposal, but further research and development is actually taking place here. But every validator has a 32 ETH effective balance. Right. And that can change in the future. And this is why it's an active area of research. You know, there's proposals for 2048 ETH effective balance.
00:07:48.474 - 00:08:23.320, Speaker A: So just to interrupt that, it's an effective balance on a consensus layer. If you don't know what is an effective balance, that's basically the maximum amount of stake weight for given BLS key as a validator in an Ethereum consensus scheme. Right. Consent application, you can have the BLS key balance of 3000 or 4000. But at the moment the consensus will only accept up to 32 as an effective voting power. So that's a utility rate, that's the stakeholder that it takes. But there is a proposal for 2048.
00:08:23.320 - 00:08:33.808, Speaker A: If it comes through, then it comes through. But that's why we keep that effective balance is the one that is here but can change. Is that correct? When people doesn't know like what is an effective balance or the head, you say?
00:08:33.856 - 00:09:33.128, Speaker B: Yeah, yeah, absolutely. I mean, yeah, people just talk about balances in general and most of the time they refer to the active balance of that validator. Yeah, but yeah, in terms of your voting, the basis on which rewards are issued to the validators on the effective balance, because otherwise you would have compounding effects, really. And so what this allows is the ability to extend approvals to the ETH inbound. So we have, like, we'll go into it like we have a number of ways that ETH can come inbound to a BLS key. And there are, you know, and that will be either from the consensus layer or from user actions. And that can be, that can be, that approval can be given to other protocols that can have a lean on any kind of problems that are taking place, any kind of action that the user takes.
00:09:33.128 - 00:10:45.986, Speaker B: So we have some endless possibilities on DeFi primitives that can be built on top of this and we'll get into that in a bit. But this is all built on top of the pon stack, which is completely neutral. And it allows validators to get a universal credit rating with reconciliation guarantees that we'll get, you know, these are like, these, these things will break them down as we get through it, but they're very, very powerful primitives for all kinds of new applications. So to just go through withdrawal credentials and the announcement of the withdrawal credentials, there are two types of withdrawal credentials for a validator on the Ethereum consensus layer, the initial withdrawal credentials that validators would set up. Um, when the beacon chain was first launched, it was PLS based withdrawal credentials since then, and a new type of withdrawal credential was added, zero x zero one, which is now the most common withdrawal credential for a variety of reasons. You can't actually withdraw money to a BLS key. If you want to exit the Ethereum chain, you have to go, you have to.
00:10:45.986 - 00:10:56.574, Speaker B: If, even if you have BLS withdrawal credentials, you have to convert them into my contract or an EOA withdrawal credential in order to get your ETH out of the chain.
00:10:58.114 - 00:11:18.394, Speaker A: That withdraw the withdrawal credential is a zero zero one on a mainnet Ethereum. So, you know, because it's, you mentioned smart contract in UiA, we can create an EOA smart in a zero zero one address anywhere. But you can, you can get it because Eoa is the EoA. But if you have a smart contract that's in different chain modes, what's going to happen?
00:11:19.574 - 00:11:37.862, Speaker B: Oh, yeah, so, yeah, yeah, so, yeah, so the, the credentials on the, on, yeah, so ethereum is the, is the merging of two chains. You got the consensus layer and the execution layer and one, you know, and since layer is using BLS credentials, whereas the. Whereas execution layer credentials.
00:11:37.918 - 00:11:42.834, Speaker A: Yeah, yeah. It's limited to a chain id and a zero one address specific.
00:11:44.114 - 00:11:49.914, Speaker B: Yeah, you can't withdraw to. Yeah, you can't withdraw to guerrilla, you know, you can't get Mainnet. Mainnet.
00:11:49.954 - 00:11:56.426, Speaker A: Yeah. It could be smart contract. Right. So just like it just to be very much that one. Yeah, yeah, yeah.
00:11:56.490 - 00:12:24.994, Speaker B: I mean, typically. Yeah, yeah. So it can, yeah, 100% it can be a smart contract address. The specification of Ethereum will pay out unconditionally to that address. But smart contracts are really, really interesting as withdrawal credentials. And that's what we'll step into in a bit. But the key thing here is that when a validator is registered, the withdrawal credentials of that validator are accompanied.
00:12:24.994 - 00:13:33.232, Speaker B: The registration and those withdrawal credentials for the entire lifecycle of the validator cannot change. And this is where the problem where people are hitting the wall is that, you know, that withdrawal credential, once it's set, it's very fixed in place and it's unmovable, which doesn't flexibility for actions that the user might want to take. There are lots of restaking and non restaking applications that could use validator state e, which is very sticky and doesn't move very easily. The fact that it is fixed doesn't allow a lot of optionality for users on the consensus layer, even solo stakers. So a solo staker might want to be a solo staker in the long term, but from time to time they may want to opt in to an application that is launching on the Ethereum execution layer. And this is what the programmable withdrawal credentials will change. So we can get into that.
00:13:33.232 - 00:14:31.174, Speaker B: Right. So what we're doing here is we're not proposing any kind of new EIP. We're reusing the Zero x zero one smart contract based withdrawal credentials to offer users programmable withdrawal credentials. By default, users will be in full control. They will have sole and exclusive rights to claim the ethan or, you know, any kind of ERC 20 tokens that are coming into their programmable withdrawal credentials, but they have the flexibility to approve another protocol that has, that can have a claim on the inbound funds into that withdrawal credentials. If the user wants user fully in control here, they need to do their due diligence on the protocol that they're approving. But having said that, once they are comfortable with approving a particular protocol that may give them access to, you know, other really cool things.
00:14:31.174 - 00:15:31.086, Speaker B: So just a bit more detail on the validated life cycle. When a user deposits ETH to the Ethereum deposit contract on the executioner, this is where the registration actually starts. Even though the registration of a validator is recorded on the Ethereum execution layer, sorry, consensus layer. The actual starting point is the execution layer, and that is sending funds to the Ethereum deposit contract. Ethereum deposit contract takes at least one ETH in deposits and you can fund your validator through like 32 tranches of one ETH if you wanted to. But the first ETH sent to the deposit contract with a validator, public key, withdrawal credentials and signed message. That is the withdrawal credentials that will be taken and associated with that BLS key and that is fixed.
00:15:31.086 - 00:16:02.510, Speaker B: Like I said, for the lifecycle of the validator, it needs 32 e to get activated, the minimum balance to get activated and become available to participate in the staking application of the Ethereum consensus line. You know, it can stay active as long as it doesn't violate any core protocol rules, or it may get kicked forcibly, or it may voluntarily exit the chain in order to cease validates operations and recover the unstaked ETH. Right.
00:16:02.622 - 00:16:16.734, Speaker A: So the reason that we are talking about the state of a validator is important because the BLS key will remain on consensus layer ledger forever. Even if it exit, anyone can send money to that BLS key and it will get swept back.
00:16:18.114 - 00:16:42.702, Speaker B: Yeah. Right. So that, that validator list is an append only list, which is true. So that's why the, you know, even, even though there's only, there's 900,000 validators active on the, on the Ethereum consensus layer. But the validator indexes that are being assigned are over a million because it's just an append only list. But that's right. In terms of, um, you know, uh, the, the state being part of the consensus layer.
00:16:42.718 - 00:16:42.886, Speaker A: Yeah.
00:16:42.910 - 00:17:06.014, Speaker B: If anybody sent money to a blit, even if the validator is not active, the act, you know, active and effective balance of that validate is zero. It will get swept back to the withdrawal credentials on the execution layer, um, which actually provides some really interesting, um, uh, for, uh, well, the civil attacks. Go on, expand.
00:17:06.954 - 00:17:22.694, Speaker A: I mean, you cannot have the state repeated like you have a deposit. You can register once, but you cannot re register the same Bls key once you exit. You cannot come back on the same route. You have to register. We register with a new BLS key.
00:17:23.074 - 00:17:47.000, Speaker B: That's true. Yeah, that's true. That's true. And there is an entry and an exit queue, so you cannot, and that is to obviously protect the chain from, you know, a large, you know, actor that has a lot of ETH, that, that tries to set up a lot of validators to enter the chain, attack it and then leave. But yeah, there's the simple resistance. You cannot as well, you know, re register your credentials. Once it's set, it's set.
00:17:47.000 - 00:19:08.294, Speaker B: But any money, whether it be from consensus layer or a like further deposit to the ethereum deposit contract beyond the 32 ETH required, that will just get, just go back to the withdrawal credentials and there's really cool things that you can do on top of that. So what we want to do is show you the programmable draw credentials in action. So you have the Ethereum deposit contracts referred to here as the EDC. So what you have is the restaking router offers the programmable credentials. Now the restaking router is on top of the proof of neutrality registry and simply Alice comes along and says, look, I'm going to go and register, or I have registered a BLS key on the consensus layer. I can prove that was me and then assigns a representative an Ethereum account on the execution layer that will act on behalf of the BLS key and that will come in handy later for the programmability. So once the ETH is sent to the Ethereum deposit contract, locking in the withdrawal credentials, the consensus layer will record that.
00:19:08.294 - 00:19:45.088, Speaker B: And if it's assigned to the restaking rotor by default, Alice will be in full control of any ETH coming into those withdrawal credentials. And she has a claim facility that brings all of her income from running a validator, or more than one validator to Alice. But Alice can extend approvals to other protocols. So those protocols can, they can do a number of interesting things with those approvals we will get.
00:19:45.136 - 00:20:42.716, Speaker A: What are those in, what are those like if you go back, so want to take a step back and say that, you know, you have this kind of Ethereum deposit contract and consensus layer. This is completely different, right? And Alice has some money might will be coming at some point of time, you know, but that is only can come from an active validator state, right? So if you're going to come and interacting with a restaking router, you need to create an account on a restaking router to recognize you. And that account will have all the details. We're going to get into that one. But that's what you see the create account and the restricting router will reconcile. Okay, you are indeed someone who I can manage, I can give you something to do with the router because you have an active validator in consensus layer. That's what you're basically explaining here in the left hand side and Alice is in the middle and say, hey router, I want to create an account.
00:20:42.716 - 00:21:27.054, Speaker A: I want you to basically be this kind of the call processor for me to interact with the restaking protocols. Rest taking router is a very agnostic mechanism that only deals with the approvals and reconciliation. It doesn't really take care of, it doesn't really have any kind of bias which rest taking protocol that you're going to opt in, what is the risk and preferences of that risk taking protocol? And it's their utilities, right. We're going to get into those things. But just to remember this is a very important point. You may see the risk taking protocol, the logos of risk taking cloud, but it could be an eigen layer, it could be someone else, it could be anyone else, right. It could be completely new parties and nobody else.
00:21:27.054 - 00:21:51.666, Speaker A: So we're just making it very easy to understand the approvals. Rest taking router. That's it. Any number of retaking order and now we're going to talk about how many. You know, what are the bandwidth that you can expand with your 32 ETH, what are the ability, what are the opportunities that you have to go with this kind of different protocols. It's all subjective. It's completely outside of this restriction router.
00:21:51.666 - 00:21:52.974, Speaker A: That makes sense.
00:21:53.514 - 00:22:19.884, Speaker C: So I have a question and maybe you guys are answering this in a different way, but it just kind of point blank. So if somebody comes in and they register they're part of this restaking router. I see that there's multiple layers as approvals here. Could somebody say approve some for restaking cloud approved some for another protocol? And can they split up a single validator into the pull approvals on multiple protocols.
00:22:20.784 - 00:22:48.244, Speaker A: There you go. So you have like a multiple approvals. It will all map to the validator credential. So you can have 1000 approvals, one validator, one validator credential. We can give 1000 approvals to thousand validator at once. The batch it like for example if you're lido, if you the withdrawal credential owner is a Lido dial, right. And now you can the Lido dial, you know the withdrawal credential owner gives it all of that approvals goes in.
00:22:48.244 - 00:23:26.276, Speaker A: But you can just choose what are those? How many valid is that you want to approve. Now this we gonna get into that as a withdrawal credential owner could be a smart contract, it can delegate that. You know who can create this account, who can pre register with the restricted order and who can give the approval. So you can actually see the creating account could be done by node runner, right? This is different. And the approvals are managed by the withdrawal credential. Manager because the withdrawal credential is on execution layer zero x zero one account that we explained before. So it's something that you can do from the smart contracts, but you can actually delegate who can register it.
00:23:26.276 - 00:23:39.304, Speaker A: So pre registration, registration, approvals, everything is modular. Any number of protocols. You can do it, you can rework at any time. So it's everything just getting super automated, super programmable. Does that make sense?
00:23:39.764 - 00:23:54.642, Speaker C: Yeah, no, that totally makes sense. So it's really people with a validator, it becomes much more of a liquid asset that they can start to use within defi rather than just being something sitting there on the consensus layer. It's like really opening things up.
00:23:54.698 - 00:24:02.698, Speaker A: We'll see that. Is that just a liquid asset or. It's compounding, you know. Yeah, base asset.
00:24:02.746 - 00:24:13.778, Speaker B: But the liquid asset. The liquid asset is definitely, yeah, it's definitely valid. You could, you could build much simpler liquid staking protocols on top of this, you know. Yeah, I mean, revenues.
00:24:13.826 - 00:24:20.240, Speaker A: You have other things. You have other things, right? You have a lot of other stuff because it's all tethered to the validator. Yeah. Cool. Yep.
00:24:20.392 - 00:24:21.124, Speaker C: Cool.
00:24:22.184 - 00:24:26.240, Speaker A: Okay, maybe now we're getting into the skeleton, right?
00:24:26.352 - 00:24:28.884, Speaker B: Yeah, yeah, that's right.
00:24:29.824 - 00:24:31.524, Speaker A: It won't get out of the hands.
00:24:33.584 - 00:25:23.444, Speaker B: Not, not too much, not too much, not too much. So inbounds we've got left side is the imbalance is where, you know, in bounds to the withdrawal credentials. That is like consensus layer rewards for producing a block to stations, sync committee rewards, you know. And as we said before, you could have, in theory you can have a consensus layer, active balance 3000 ETH. But the consensus layer actually only cares about the 32 ETH stake weight. Um, that's why eurofixed a balance is no more than that. And as of Shanghai, any balance, active balance above 32 on a validator BLS key is swept back to the Ethereum execution layer as liquid e.
00:25:23.444 - 00:26:16.890, Speaker B: So, you know, often the ETH that's being swept back to withdraw credentials and execution layer are simply just like I said, attestation rewards and the day to day operations of a validator. So you'll get 0.0 something ETH being swept back. But additionally, any balance above 32. So if you send ETH to a BLS key on the ethereum deposit contract and the valid data happens to have already a balance of 32, it will just come back really nicely. It's not a feature that I believe is used very extensively in the wild at the moment, but I think with what we're about to discuss, I think it will become used quite wildly for repaying debts and other things, you know, so you can have, you can avoid liquidations and do, and very, you know, very interesting dynamics here outbound. So you know, the not owner.
00:26:16.890 - 00:26:47.464, Speaker B: So we have this concept where, you know, whoever's owning the validator is the not owner. So by default with the programmer water credentials, the owner of the validator is going to be, you know, whether it's a protocol and shared to other users or it's a solo staker, you know, this is all 100% compatible with solo stakers. And all of the tooling out there, all of the, you know, the standard tooling will work. Nothing special needs to be done here. But if there are approvals, some of the outbounds will go via approvals for.
00:26:48.324 - 00:27:00.460, Speaker A: Can you take a step back? What is the concept of a not? If you go back to the earlier slide like, you know, what is a not honor? Is that the, the BLS key or something else?
00:27:00.532 - 00:27:37.316, Speaker B: Just like you know, not in, like you know, it's the, in knots. Do you have knots being used in nautical settings, climbing settings? You're basically tying something to something else. So what you're doing is you're tying an ethereum execution layer address that acts as a representative. It is called a representative. In the proof of neutrality stack, that representative is associated with a validator. It's with a validator, BLS credentials. And associated with that you may have some other metadata.
00:27:37.316 - 00:28:14.752, Speaker B: So you can for example, assign a fee recipient which should receive any additional rewards outside of the base rewards that you're getting from your node. So in your node you have a suggested fee recipient, but on the execution layer if your validator has signed into the PO and stack with a single sign on and you're participating in other applications, there is flexibility to set additional fee recipients. But equally you may be required by using a certain protocol to have a fixed fee recipient. That is all there, right?
00:28:14.808 - 00:28:32.704, Speaker A: Right. So the not is the connection between a validator state on a consensus layer and a replica replicated state on its execution there. So this is the one own that is actually tying it together. Is there any oracle here?
00:28:33.804 - 00:29:05.614, Speaker B: Not a, nope, no oracle of any sort. It's the user asset and it's, you know, and it's ethereum. They don't need to, they don't need to use an oracle really, especially with the PLS precompile that's coming. So yeah, no oracle. Yeah, so you have a lifecycle that's coming. So lifecycle that manages this. So the lifecycle status just tracks so if you want to know whether the programmable draw credentials are configured, you're going to be checking the life status.
00:29:05.614 - 00:30:01.686, Speaker B: So zero lifecycle status means nothing's ever happened with this validator, it's never seen in the registry. You can register it and that still gives you full control of validator. Two is when you're issuing approvals and three is when you have an exit but the state is there permanently. Just like the Ethereum consensus layer, you know that the data is always appendix. That gives you some context really if we slice it up so the different elements of, or the key concepts here in the program of wardrobe credentials you have, you know, on one slice you have the approvals, on another slice you have the count creation and on the other the credible neutral piece that's powering. This is the proof of neutrality registry that will take care of all the lifecycle. You create an account within the restaking router and then you can issue approval to the various recipients.
00:30:01.686 - 00:30:14.582, Speaker B: And then like as Derek was asking, this might give you a bit more like visual context, how you can slice it up in any way that you decide is appropriate for the protocol you're interacting with.
00:30:14.718 - 00:31:02.364, Speaker A: So the pon proposal registry, or we can call validated registry of the replicated validated registry from the consensus layer which will have the complete state management, right? So that's the neutral stack that has like, you know, 0123 unbegan registered approvals. Exit. So even if you exit the same way that we explained before, you know, if you send some BLS key to a consensus layer, even if you validate or exit the BlS key and it state it's there, right? So that's why you go back and send more money to an exit validator. We'll just write back. So the peon registry is like some similar kind of a mechanism that will keep a ledger for what is the status of a given validator at a point of time. So you cannot manipulate it.
00:31:03.144 - 00:31:20.630, Speaker B: Yes. You have this data that is available to everyone, right? Any protocol. So any protocol can, and this is something on a drive like is like the approvals, the active approvals and the total amount is accessible for anyone in any protocol, right?
00:31:20.742 - 00:31:54.144, Speaker A: Yeah, yeah. And also you can create BLS, general Bls key like out of thin air. It's just because you have a BlS key doesn't mean that you have a validator. Just because you have, just because of your bls associated with a validator doesn't mean that you have an active validator, right? So it's really figuring out. Do you really have ethanol stake deed active? That's something that we can use it for in Excel markets to give you more revenue or more earnings. And is that something reusable? Does that make sense, Derek? Like, you know.
00:31:56.924 - 00:32:46.684, Speaker C: Yeah, it sounds like what's really going on here is even though a validator can, can come in and this ETH at stake can be reused, it's not just taking the validator as the asset itself, it's actually tracking these balances. It's keeping track of what that validator state is on the consensus layer and then making a replication of that and then bringing it to the execution layer. So that if say there's slashing or leakage or whatever it might be in that actual base asset, that will reflect in the execution layer within the different protocols or whatever it might be that's actually using that not, or that valid data that is located staked in the consensus layer.
00:32:47.464 - 00:33:09.464, Speaker A: You nailed it. Because we are talking about withdrawal credentials, withdrawal based on rest taking. Alice comes in and says, hey guys, I have withdrawal credentials. I have 32 Ethan withdrawal credential. Because Alice exit the money sitting there and I have vlsky. I can show that I have validator, the same address, my withdrawal credential of 32 NASA. That's not possible here.
00:33:09.464 - 00:33:45.030, Speaker A: We don't really care about what the withdrawal credential has today. But what is the withdrawal credential is associated with the validator and consensus layer. Then it has some value because it's just earning some money that's actively staked Eid. So withdrawal credential is a mapping mechanism that you can actually come and then reconcile. So withdrawal based restaking is having its own pros and cons. We're just trying to make that very trackable, very modular, neutral. So basically it could be used as an interface for giving, you know, multiple approvals in a different, different ways.
00:33:45.222 - 00:33:56.214, Speaker B: But anyone can report in theory, right? Anyone can report if the validators exits, right? So you may have like active approvals, but like you might try to be sneaky and exit the consensus layer, right. Anyone can see that, right? And report.
00:33:56.294 - 00:34:05.794, Speaker A: Yeah, but what if the validator is not active? Like, you know, it's not an active validator in a sense that not the active eligibility, but like it's a leaky validator.
00:34:06.734 - 00:34:28.543, Speaker C: So, so I'd be curious. You guys are talking about this whole idea of being able to report balances. It'd be good to see like a clear example of what that would be and the advantages for somebody to report or how they'd report. And like what does that pipeline look like? And what does that even mean? Because reporting, I know, is something where.
00:34:31.083 - 00:34:56.938, Speaker A: You basically take a state route of a consensus layer of a validator, just basically a snapshot of the validator from that chain. So you keep a distance. Like you can only take a snapshot of the staterock from last ten blocks or something like that. And then you immediately inject that into the smart contracts. It comes from a chain, it comes from consensus. It's a proof of consensus. Nobody can tamper it.
00:34:56.938 - 00:35:23.392, Speaker A: It's a known information from the chain. There you go. So now you can calculate, is that validator is active, is leaky, is this something that has an effective balance of 32 or less than 32? If there are only two ways. So we explained that in the first 2nd slide, what are the ways that you can reduce the balance, either leaky or getting slashed, right. You will never release a balance in a state deed. So because you cannot withdraw that in.
00:35:23.408 - 00:35:53.622, Speaker B: Any other way, that makes sense up to the applications what they want to accept, right. They might say a validator with 28 effective balance is okay, right? The withdrawal credential, like you said, it's just a mapping, it's just taking care of that base. Like mapping and saying, there is a validator on ethereum, you as a protocol, as a smart contract, you don't have to worry about what's happening on consensus layer. You just have, you can use that ETH at stake for your protocol.
00:35:53.798 - 00:35:57.194, Speaker A: Right? Cool. Makes sense.
00:35:57.854 - 00:36:26.470, Speaker C: Yeah, no, no, that makes sense. So I mean, what I'm understanding is this whole idea of reporting is it can be advantageous for the validator themselves if they want to report, because balance increases, that means they get more usability in these protocols. But it can also be go the other way. Say that, say that this validator is leaking or this validator is exited. Somebody might say, hey, I don't want this in my protocol anymore. They can report that, balance, that validation.
00:36:26.662 - 00:36:56.076, Speaker A: Let me give you a naive example here. So you know the credit score that we have it. So when you, when you actually go for credit card or something in real life, like, you know, you have to open a profile for the first credit card, right? And then upon all that, you did not open that one, first one, there is no credit score. So nobody gonna give you any kind of loans, right? Once you have that credit files open, and then there's a lot of criteria. You need to be 18 years old, you need this, you need to have that, blah, blah, blah. You need to have an SSN all those kind of things. Right.
00:36:56.076 - 00:37:41.654, Speaker A: And then you actively manage the credit score because that is the basis of how other institutions and the other markets will give you credit lines for you, right. Let it be getting a mortgage, let it be getting credit card, let it be getting an education loan, anything, car loan. Any kind of things are tethered to that kind of credit score that you're building up. Right. So every single time you add more and more spending into that credit score, that's kind of reporting, right? You do in real life. So this is the same thing for the validators. The more the reporting comes in, the more credit score is getting better and better and the other people can actually give you more and more opportunity to engage in the market.
00:37:41.654 - 00:37:51.914, Speaker A: So, for example, you can get more credit lines, you can offer some lending positions and things like. But it's in reverse order. But let's, let's get into that. We are going to explain that process because it's a really good question.
00:37:52.334 - 00:37:54.118, Speaker C: Yeah, great.
00:37:54.166 - 00:38:01.714, Speaker A: Yeah, that's interesting. Yeah, we're not going to take over that. All protocols are supported. All validators are supported. You did not mention that when Vincent.
00:38:02.534 - 00:38:08.078, Speaker B: I mean, well, but it's like, you know, anything, anything.
00:38:08.126 - 00:38:18.534, Speaker C: It's not, I mean, I know that, you know, all ETH Max is here, but it sounds like this is something that could work with any validator in any ecosystem to start to reuse that stake.
00:38:20.194 - 00:38:46.372, Speaker B: Yeah. For, for things way beyond Ethereum, but inside of Ethereum as well, you know, but also outside too. You know, this, this is really scaling the, the ether. So. Okay, let's have a look at what, what might happen here if an approval is issued. Right. So user will be interacting with a, you know, a programmable withdrawal credential as there is.
00:38:46.428 - 00:38:49.504, Speaker A: So you're talking about the left hand side? So you're talking about the left hand side.
00:38:49.924 - 00:38:50.948, Speaker B: Yeah, yeah, yeah.
00:38:50.996 - 00:38:51.580, Speaker A: Can you see my.
00:38:51.612 - 00:38:52.724, Speaker B: I'm not sure you can see my mouse.
00:38:52.764 - 00:38:54.104, Speaker A: Yeah, we can.
00:38:54.724 - 00:39:30.684, Speaker B: Okay, cool, cool, cool. So they from there can issue an approval for however much ether. Comfortable exposing to certain approvals. Now what's interesting is that users may accrue, you know, maybe, I don't know, not always debt, but like, let's say, like, let's say they're debt. Let's say you want to. Okay, Matt, I want to mint a USDC coin, right? So, but I want to. I want to do it with ETH.
00:39:30.684 - 00:39:35.264, Speaker B: Right. Normally you need to over collateralize. Right?
00:39:35.774 - 00:39:37.954, Speaker A: You want to get a USDC and lose it.
00:39:39.054 - 00:40:04.142, Speaker B: Yeah, no, I don't want to lose it. I don't want to lose my ETH. Right. Not just the USDC is the, you know, but as an alternative for getting liquidate. If you're approaching a liquidation threshold, for example, you can send money via any, via the ethereum deposit contract, especially just specify a BLS public key. Um, yes, you can do that.
00:40:04.198 - 00:40:05.454, Speaker A: Yes, yes, you can do that.
00:40:05.494 - 00:40:05.758, Speaker B: Yeah.
00:40:05.806 - 00:40:10.670, Speaker A: The top of the top of that lawn will be through the PLS key. Oh my God. That's super easy.
00:40:10.702 - 00:40:12.846, Speaker B: Right, right. It would just get swept back.
00:40:12.910 - 00:40:14.006, Speaker A: It just gets swept back.
00:40:14.110 - 00:40:29.438, Speaker B: And these protocols have, you know, you know, have the ability to claim, uh, and cover the debt. And uh, you get, you know, you're, you get to, you know, continue with rate, you retain your 32 e, but you're paying your debts. Right? So wait a minute, so you take.
00:40:29.486 - 00:40:34.246, Speaker A: You could, you could have a thousand applications plugged into this router.
00:40:34.310 - 00:40:34.646, Speaker B: Yeah.
00:40:34.710 - 00:40:39.874, Speaker A: And you basically top up in one single route. Oh, that is so cool.
00:40:40.334 - 00:40:41.214, Speaker B: That's really interesting.
00:40:41.334 - 00:40:43.994, Speaker A: Right? So the, so is this.
00:40:44.454 - 00:41:13.030, Speaker C: So just so I can kind of understand, I guess, the mechanism, not to get too technical here, but when somebody says, I approve protocol one, I approve protocol two. Are they doing it based off of percentages of the validator or is it based off of ETH? What does that look like? Because then when they pop up, when it tops up, is it all coming out of, if there's slashing or whatever, it comes out of all of them in proportion or do you set priority? What does this whole thing look like here?
00:41:13.102 - 00:41:20.154, Speaker A: I told you this will get out of hand. You want to take it?
00:41:21.214 - 00:41:22.874, Speaker B: No, no, go for it, Matt.
00:41:23.494 - 00:41:28.760, Speaker A: Right. So we're going to give you more color to that in the next slide.
00:41:28.912 - 00:41:30.960, Speaker C: So keep jumping the gun. Sorry.
00:41:31.152 - 00:42:19.356, Speaker A: So you have like a 32 ETH and then you can reuse that 32 e technically infinite times. So every protocol has their own risk engine. Like, you know, for, for example, if you come to rest taking cloud k two takes about 24 eats for the validator, and then it will just get you this kind of principle protected rest taking for other kind of SVP positions or the node delegations, yada, yada, yada. You go to eigen layer, then they do this kind of slashable balances on give to other kind of node operations. But what if you give to a bridge lending? So bridge want to have, I want to get a bridge and the liquidity need to be there. I need to borrow like about 2 million ETH from you. And then I borrow 3 million ETH and it's a withdrawal credential, for example, lido here.
00:42:19.356 - 00:42:54.238, Speaker A: Okay, so we're going to get into that one in next one, because Lido has like about 30% or rocket pool has like a 20% and, or in anyone. So they say like, oh, can you give me x amount of ETH? I'm going to give you 3% for that one in a year. And they can just like, okay, I'll give you the maximum upper bound is four, 4 million ETH. And then, boom, and you get like in a 2 million ETH and you pay for it. And liquidity that you do it, you actively utilize that liquidity and do the bridges. Now you can have like, you know, the, the liquidity for the bridges bootstrap by this kind of ETH at stake. But you pay a convenience yield.
00:42:54.238 - 00:43:21.722, Speaker A: That's how in the finance you have this kind of, you put an asset, you get something. The convenience yield is much higher than you know, you're trading that from for someone else. So you keep the asset and it just re utilize to create a new asset class. And then you reset it at the market and you pay a fee for that as a credit line. So you, you borrow a credit line, you can have thousand different credit lines. You have an ave compound kind of things. And so like, you give me x amount of money for lending markets, my lending, how the lending market operates.
00:43:21.722 - 00:43:46.134, Speaker A: You all know that we have a collateralized ratio, we have liquidation threshold, blah, blah, blah. The principle is protected and I'm going to lend it for 8%, but I'm going to give you 5% back. Boom, you have a bootstrap lending market now for a billion dollar ready to go. And you have a roll up comes in. I want you something. I want to create an enshrine lending markets or enshrine liquidity. Can you borrow that? I'll pay you two to 3%.
00:43:46.134 - 00:44:11.606, Speaker A: But the cool thing here is like, as we said, all the protocols, all the debt, all the approvals are reconcilable at a one unified manner. And we get into that details. So I just don't want to blow up your mind. Now, the risk taking router is literally making, everything is like, if you have one ETH, it can create ten e a year, no problem. But it depends. It comes with the risk and risk and rewards. Yeah, true.
00:44:11.630 - 00:44:22.654, Speaker B: Of course. Of course this is not without any. Yeah, but it could complement existing protocols. Like for example, like, I'm just going to pick a random protocol rocket pull. Right. The validators could.
00:44:25.274 - 00:44:26.906, Speaker A: Next slide. You want to go to the next slide.
00:44:26.930 - 00:44:27.274, Speaker B: Yeah, yeah.
00:44:27.314 - 00:44:28.494, Speaker A: It has this kind of.
00:44:30.634 - 00:44:31.546, Speaker B: Okay. Okay.
00:44:31.610 - 00:44:31.946, Speaker A: Yeah.
00:44:32.010 - 00:44:32.858, Speaker B: Let's go.
00:44:33.026 - 00:44:36.174, Speaker A: So you can see more visually, right, what we're talking about. Yeah.
00:44:38.074 - 00:44:49.070, Speaker B: Rocketball could issue on the. Oh, yeah. Issue or lend ETH to roll ups. Right. Credit lines to roll ups.
00:44:49.102 - 00:44:49.382, Speaker A: Yeah.
00:44:49.438 - 00:44:57.166, Speaker B: And, you know, charge the. What's the interest on that.
00:44:57.350 - 00:44:57.734, Speaker A: Yeah.
00:44:57.774 - 00:44:59.754, Speaker B: And repay that back to the re holders.
00:45:01.694 - 00:45:26.056, Speaker A: And they can basically say that, you know, we will revoke that approval. So this is like the approvals will be given by the withdrawal credential manager. Right. It's not done by, you know, you can do as if you are the restaker. If you are the staker and the withdrawal credential manager, then you can give the approvals, but this can be delegated to withdraw credential manager given approval. But registration, as we said, can be done by no runner and things like that. But this is like a more of a social rule that how much you want to.
00:45:26.056 - 00:45:46.116, Speaker A: What is the risk? But as you can see that some of them are green and amber and red. The risk profile could be different. What kind of market that you want to use your restake assets at a given point of time. So where you have active debt and the debt claim. So if you have a debt, you also have revenue. Right. So whenever you give someone to reuse it, you're getting something in return.
00:45:46.116 - 00:46:25.874, Speaker A: So you have revenue and the revenue will reconcile the debt. So the more it gets you reutilized, the more revenue comes in. Depends on the risk profile of those markets that you're engaged in. Your debt can also get. But if you're taking a self loan, then you can actually underwrite your own interest payment from the revenue that you're collecting from other protocols. So basically any kind of rest taking protocol, any kind of liquid staking protocols, who is participating in a restaking say that anyone who has been liquid staked with me will get an LSE, but we will have an enshrine, a CDP borrow facility. You can withdraw dollars out of that.
00:46:27.134 - 00:46:35.326, Speaker B: It makes total sense. Like why do, why do you want to, why do you want to spend your ETH or why do you want to spend your bitcoin? It's better to take a credit line on your own asset, right?
00:46:35.430 - 00:46:38.014, Speaker A: Exactly, exactly, exactly.
00:46:39.394 - 00:47:28.502, Speaker C: So if I'm understanding this correctly, so if I understand this correctly, say that there's a validator. I just kind of want to run through an example and they're, you know, perfect example here. There's restaking, one rest taking to bridge. They're lending out their ethat stake to all of these validators. Now if I'm a protocol maybe, and I want to see what kind of risk is actually on this. Like you call it a credit score, they can look at all the places that this eat that steak is currently being used and decide if that's something that they want to bring in or accept as collateral, except as eat that steak. Because I could see it, you know, yes, theoretically it could go 1000, 2000, infinite amount of protocols it could be reused in.
00:47:28.502 - 00:47:53.474, Speaker C: But if they're all slashing it a little bit or saying that they're not optimally running, that could be wiped out very quickly. And for a protocol to accept that, it might go fast. But that said, there might be ten or 2030 protocols that it could be a part of. And they're all very minimal amounts of impact on that validator. And when they're minimal, it can keep expanding more and more and more and more.
00:47:53.594 - 00:47:57.304, Speaker B: Yeah, you know, obligations. Right, right.
00:47:57.464 - 00:48:28.260, Speaker A: But the cool thing here is you can actually get the credit score to a validator level, to manager level, that's a protocol level, or to a user level that, who actually holds an LP of that, you know, the liquid staking protocol LP. Like for example, if you have a de or something like in stakeouts, you can basically give a credit score for that user because his de is attached to certain validator you can actually reconcile on chain. And now you have a derived credit score, you know what I'm saying?
00:48:28.292 - 00:48:32.396, Speaker B: So like in an index, in an index of validators, right?
00:48:32.460 - 00:49:32.042, Speaker A: Let me put, let me put this in a reverse order, right? You are, you are a valid, you have an, a bundler, you have this kind of account abstraction. You're offering a savings account enshrined in the valid as a thing and say that, oh, this is the savings account with a 3% dollar interest. Boom. Right? So nothing to do there. What you do is like, oh, all you can do is like if you put some money that will route to a restaking protocol and that will go and create an LSE tokens and it will automatically restake with the restricting router and then we are part of this kind of restriction router approvals, right? So now you basically giving that USD from the enshrined CDP position that I said earlier. Now the money that has actually came in has been state as a state teeth and then being given multiple approvals with a restricting router. Now you have like in a ten different markets, which is like you can take a very risk averse model, give only for the rest taking cloud or something like that, or money market and things like.
00:49:32.042 - 00:50:36.344, Speaker A: Or you can want to take a little bit a greater risk, like in any kind of withdrawal based slashing, things like that. Or you want to give, but you know, that how much you, how much you need to get an exposure to give that 3% interest offset to the wallet. So now any kind of on ramp, if you want to get a billion users onto the blockchain from a roll up, you can just basically do that through an incentivized manner, just putting that asset into ETH and staked and restake it. So the defi markets and other restaking markets can give you, you know, a revenue. So basically, like, you know, if you are, you know, you get this kind of a contract, like in a yearly revenue line, you just sell it airtime units, like in a spectrum that we normally see. The spectrum, the 5g bandwidth is being sold in pieces of pieces, and then it gets resold to whoever wants it. So the government gets it back.
00:50:36.344 - 00:51:17.474, Speaker A: So these are standard way of like, you know, the auctions. But we're not talking about the auctions here, but we're just saying that how this kind of reseller's market will directly drive the revenue to the first, the user who is basically the owner of the ETH, the stake ETH. So the more market that you expose, the more revenue that you get. So if you are someone who's in the middle and say that, hey, I allow you to deposit ETH, but, you know, we'll keep that in the dollar value and then I'll give you 3% on top of it. All I do is like a smart contract, just interact with the restaking and the risk taking router will really make this ETH state to be available for all kind of other market economics. That make sense?
00:51:20.094 - 00:51:22.030, Speaker B: Yes, I'm really.
00:51:22.102 - 00:51:26.390, Speaker A: Derek. Derek, is that making sense for you?
00:51:26.542 - 00:51:34.752, Speaker C: Yeah, it makes sense. You know, I think as more and more of this progresses and people start to carve out their own use cases for it.
00:51:34.838 - 00:51:35.420, Speaker A: Yeah.
00:51:35.572 - 00:51:38.956, Speaker C: You know, it's just, it's. Again, that's. That's what we're talking about at the beginning, right?
00:51:38.980 - 00:51:39.164, Speaker A: It's.
00:51:39.204 - 00:51:46.064, Speaker C: It's an open field. It's really, it's opening up possibilities for additional protocols, different types of protocols to be built.
00:51:46.364 - 00:52:25.480, Speaker A: Anyone can build any kind of rest taking markets, and anyone can build anyone, any kind of markets based on the restrictive right without doing any heavy lifting of, hey, I want to get a billion dollar into TVL and let me offer like about 30 million points or whatever it is. You know, but that's, that's good. The points are good to bring the users. That's, that's a positive sum. But what I am saying here is like the economic costs associated with that. So we want any kid who is coming for a need global hacktown, right? Let's put that in a perspective. Could bring a resticking market of their own.
00:52:25.480 - 00:52:56.598, Speaker A: They can own it and they will make these ideas proliferate. And if that idea is that you call as a product that actually has a use case, what people want to use it, that's an innovation. An idea is not an innovation. Remember this a working product that actually help people. Life is an innovation. So anything that moves the needle, let it make it available in a way that is plug and play, very modular. It just make everything on chain.
00:52:56.598 - 00:52:59.374, Speaker A: That's what the risk router does. That makes sense.
00:52:59.994 - 00:53:00.418, Speaker C: Yeah.
00:53:00.466 - 00:53:41.068, Speaker B: And let's not forget, like in the western world, we take for granted the banking systems that we have access to, you know, but in a lot of, you know, large portion of the world population don't have access to banks. And some people may, you know, may have more crypto or, you know, than they do in it, like in a bank account, or they may not have a bank account, right? And like you said, if you can build like a retaking application, let's say you can mint the US dollar for, you know, on the basis of steak teeth. This could change lives of, you know, many people. So. And we have some, you know, really interesting chats with some people, like El Dorado and, you know, really cool guys that are just doing good things for the little guy, you know, so it's really refreshing, you know?
00:53:41.156 - 00:53:48.664, Speaker A: Yeah. 70% of the world still use the pillow banking. You put the money under the pillow. That's the world.
00:53:49.124 - 00:53:50.784, Speaker B: I don't blame, I don't blame.
00:53:51.084 - 00:54:05.434, Speaker A: Yeah, because even the banks are there, they don't trust it because they don't know what's going to happen. So the systems are not really great. So that's where, that's where the blockchain is all about. That's what the smart contracts are all about. We want to make this global financial inclusion. Right. Make it available for everyone.
00:54:05.434 - 00:54:06.174, Speaker A: Yeah.
00:54:09.234 - 00:54:21.274, Speaker B: So what about. So how do we find this tokenized stake weight then? And, yeah, you know, like, how does it relate to rewards?
00:54:22.174 - 00:55:13.210, Speaker A: So basically, like, you know, we explained before, the. The stake weight is an important atomic units in a consensus layer. You have a BLS key, you have an active balance, effective balance, blah, blah, blah. But the tokenized stake weight is a very important metrics for the pro validated reversal rewarding power for that single application called the consensus mechanism. So if you are in a consensus mechanism and if you are a proposer, if you're in a tester and it depends on your stake weight that you will be get, you have a much more better probability to become a proposal, right? If you are like 18 e, there's a stake weight, you less likely to be on that one. So you know, if you, if you get to a single slot finality and things like, then you will be super comedy and all these things that we are, that we are discussing. The reason is the stake weight can only goes down if you are not active in the consensus application, right.
00:55:13.210 - 00:55:53.592, Speaker A: Validation process. So that actually get a derived behavior from a tokenized stake rather than you looking on all the balances. You basically arrange this kind of, the one way to look at is the proof of stake is like in control theory and intelligent, right. The control theory is like feedback loop that you basically try to control who is the agent, what is doing and then you reward them associated with the, what's the work they have performed. That's why you get some, some sort of like, you know, small, teeny tiny amount of ETH for attestation. And also like, you know, a comparative in a comparatively better e than a proposal. I'm not talking about the proposal, the e that you get paid on the MEV, but there's a proposal rewards on the consensus layer.
00:55:53.592 - 00:56:47.972, Speaker A: Proposing a new slot in the consensus layer block, right? So it's always a little bit more than what's in attestation rewards, right? So now you have this kind of tokenized takeaways. Actually get a constrained environment if you want to restake it, if you want to get a unit account, take the tokenized stakewait. You are tokenizing the stake weight of an active staked ETH validator and make a ledger and then make it available for other parties to use it as they want to. And the user always given approval, they know what it is being used for. You send money to you, the consensus that you know what is being useful. The single application is used for staking. If you're restaking, you know what it's been used for, how much approval that you want to give? You want to give 16 in a tokenized stake weight for lending market.
00:56:47.972 - 00:57:19.802, Speaker A: That's great. You want to give 32 or 24 worth of the restaking cloud or eigen layer or any kind of approvals, that's fine. It's up to you how many approvals that you want to take it, how much you want to do it. But at a given point of time each approvals will have this kind of a tokenized weight per validator that you have. If you have like many validators, then it will derive that aggregated balance as the user balance tokenized stake weight. Right. So if your user has like 1000 validator, that's your tokenized stake weight.
00:57:19.802 - 00:57:56.644, Speaker A: If you have one validator, if you have then a half a validator, you have like a portion of validator basically because you know, you have some LP position through LST network or something like that, you have a portion of that validate. Right. Maybe Derek knows that while we're talking because it's kind of a unit accounting, that's a stakeholder offer. But not everyone has that. But anyway, even if you're a stake pool, you have this kind of a portion of LP, even if a validator has it. So you can always redistribute this money that you're earning to the user who actually put the, and this is one of the biggest question that we get over and over. How do we redistribute this? Oh, let's, let's sprinkle it all over the place.
00:57:56.644 - 00:58:04.114, Speaker A: No no, no, you can actually reconcile it. Just everything will just goes automatically because the token actually, I think what helps.
00:58:04.654 - 00:58:08.634, Speaker B: What helps is the hooks, right. Is the, when you give an approval.
00:58:09.734 - 00:58:15.406, Speaker A: I want to call restycle router actions. You want to call hooks? Yeah. Great. Okay.
00:58:15.470 - 00:58:38.310, Speaker B: We're thinking about actually. Yeah, yeah, sure. So you know, this is the basis that like, you know, you should approval to a protocol either, either via some kind of protocol interaction or just, you know, a simple extension and the protocol will receive a notification and say hey, you know, approval has been received and the same is like with the revoke. So when the approval is revoked, simple checks. Are there any debts?
00:58:38.342 - 00:58:39.126, Speaker A: No. Cool.
00:58:39.230 - 00:58:42.714, Speaker B: It's your asset. Feel free to leave anytime.
00:58:43.334 - 00:58:53.684, Speaker A: Yeah, it's funny, I'm holding the safe. It's always good with me. I love this safe. They have this kind of shadow on them, right? Can we have a shadow speaker?
00:58:55.184 - 00:59:00.480, Speaker B: Yeah, yeah, yeah, yeah, that's, that, that's pretty cool. Yeah.
00:59:00.552 - 00:59:05.384, Speaker A: Delegated approvals. You can delegate approvals. You can, you can allow someone else to do that approvals, right?
00:59:05.424 - 00:59:49.920, Speaker B: Yeah, yeah, absolutely. Absolutely. And I think that's important in some protocols really where, where the, the validators are funded by a number of liquidity providers. So, yeah, so you know, to, you know, this is more of like a summary of what we've discussed, you know, user being in control, you know, like this is just an example approval amount for like, restaking cloud. But, you know, the approvals we discussed can be, you know, a lot more than that. And revoking is there claiming it. So, you know, you might be wondering, well, if I approve, you know, if I am participating in a retaking protocol, you know, maybe the underlying principles at stake, but maybe the sweeps and the attestation rewards are not claimable by me.
00:59:49.920 - 01:00:03.112, Speaker B: So, you know, that that is there, of course. And you can claim, you know, you can claim the inbound assets to that as long as there's no debts on the, on the approvals. Right. So all kinds of new primitives are there.
01:00:03.288 - 01:00:14.124, Speaker A: I love to see how this bridges and money markets work. So can we, is it possible that we can just show this kind of a value flow somewhere in the door IO or something like that? Is it possible?
01:00:15.084 - 01:00:17.544, Speaker B: Yeah. Yeah. Where should we start?
01:00:18.204 - 01:00:43.024, Speaker A: I want, I have some rocket pool e that I want to, I want to give, like, you know, give to someone who actually want to do the bridging. And I want to get like some nice fee for that. Or I have some de from LST markets. I want to get some ETH for that, too. I have some key ETH, so I get like, constant rewards. I have a basket of liquid staking tokens. How do I get it? I'm going, I'm going vegan now.
01:00:44.754 - 01:00:47.058, Speaker B: Right? Well, I'll say lst degen.
01:00:47.106 - 01:00:53.174, Speaker A: Right, right, but it could be like, where we going? Yeah, symbol. Symbol validator too, right?
01:00:55.114 - 01:01:00.650, Speaker B: Yeah. So we have, so lst. So we have, like, okay, so we have a validator, right?
01:01:00.722 - 01:01:11.838, Speaker A: Just to. Just to set the scene. This is only about, like, we just talking about a particular use case for rocket pool or D or Keith or something like that. But it could be just the validator, right? It's in the validated balance, too.
01:01:12.026 - 01:01:17.874, Speaker C: So what's, what use case are you guys building out here? Like, what, what problem are we solving with this use case?
01:01:19.574 - 01:01:21.514, Speaker B: This is just like we're playing around.
01:01:21.974 - 01:01:35.694, Speaker A: Yeah, we're just playing around. We're just playing around. How do you bootstrap a bridge? Liquidity for a billion dollar out of the box and without paying anyone. Right. So the bridge normally has to pay for the liquidity here and there. And let's get it. So if you want to eat liquidity.
01:01:35.694 - 01:01:49.414, Speaker A: And how do I bootstrap my bridge? Um, between, you know, multiple roll ups. I'm a solar. I just need some bridge liquidity. So I can do trades here and there, maybe, whatever it is. But I will pay you, man. You just give me liquidity. That can be, you know, backed by ETH.
01:01:49.794 - 01:01:51.290, Speaker C: Okay, got it. Thank you.
01:01:51.402 - 01:02:03.574, Speaker A: Okay. Yeah. Intent, right? Intent is always like, you need money. What the solar can do without money? Nothing. Oh, you can, but at the moment they cannot.
01:02:06.084 - 01:03:16.944, Speaker B: So we have, let's say we're in the confines, users in the confines of some like, let's say it's ethereum or some other l one. And then there's some like, you know, l two that the user wants to go to. So well, some kind of like Defi protocol l two, right. L two s all have liquidity problems, don't they? You know, they all need, in order to interact with any protocol at a base, you need some kind of a gas token to interact with smart contracts. Then you need like, you know, tokens to do things within the actual defi ecosystem on the l two or the l one or whatever it is, right? So this is what you're trying to say is like, you know, the, you know, so user may have a, they may have a validator that is configured with programmable withdrawal credentials. They may mint like they may, they may have their, you know, their ETH and all that sort of thing. But they can also lend as a credit line to a bridge.
01:03:16.944 - 01:03:31.714, Speaker B: They can lend, they can, they can offer a lending facility on that ETH, right? So you here. So you can approve, approve bridge lending.
01:03:32.614 - 01:03:33.714, Speaker A: Lending.
01:03:36.614 - 01:04:36.534, Speaker B: Right. Is this making, is making sense. Approved bridge lending facility. So this is the user that is interacting with. Okay, maybe, maybe this is, so the validator is connected to programmable wardrobe credentials, right? So they, the user will, you know, the Degen will approve the bridge lending facility. Bridge, you know, will receive this approval and they can, you know, they have a right, they can extend a credit line here every time those tokens. So that will mint some coins right on this l two side.
01:04:36.534 - 01:04:43.434, Speaker B: And every time somebody interacts with the token faucet, a usage fee is paid back to the user.
01:04:48.074 - 01:04:49.534, Speaker A: That's a convenience yield.
01:04:57.194 - 01:05:01.706, Speaker B: I mean this wouldn't take very long to build, would it?
01:05:01.890 - 01:05:22.766, Speaker A: Nah, just get the bridge and plug it in and say, ask for some lending approval. All you need to get an approval, go to, go to the DAO and say like, can you give an approval? And it's like, yeah, how much? You will give 3%. That's it we're going to do now. Only going to be used for a certain purpose and you only give approval for the protocol. Looking at the protocol. And the protocol is only for bridging. With the bridging.
01:05:22.766 - 01:05:44.064, Speaker A: If you lose money on that bridging, then that's a risk. Right? So it comes with the risk of, like, you know, if you lose that kind of money, then it needs to be bridge back. The bridge. The bridge can go under, under, under underwater, but then they cannot be. You're not. You're not really underwriting the bridge. You're basically making the bridge liquidity here.
01:05:44.064 - 01:06:01.184, Speaker A: It's. It really depends on what you want to approve. If you want to approve the bridge operation, that's as we stake the operations SVP level of approval. You don't want to do that here. You're basically giving a liquidity lending. So it's a very. It's a very specific lending here, just to just be clear.
01:06:01.184 - 01:06:01.840, Speaker A: Well.
01:06:01.992 - 01:06:02.848, Speaker B: Well, Norm.
01:06:02.896 - 01:06:03.120, Speaker A: Yeah.
01:06:03.152 - 01:06:16.236, Speaker B: Because normally, like, a bridge would have, like, some honey pot here, right? And normally no going after this honey pot. Right. But this is a credit line, which is something different. This is what the banks do day to day.
01:06:16.420 - 01:06:38.098, Speaker A: Yeah, but then the liquidity is being backed up by the ret facility. But that doesn't mean that the bridge operations are backed up. That requires SVP level protection from k two or something. So these are two different things. Right. You're creating liquidity out of ETH. So what you're seeing here is like a totally different protocol, Derek.
01:06:38.098 - 01:07:12.276, Speaker A: This is like, you know, you. You're drawing credit line from a restake teeth and creating like, a new kind of markets immediately to bootstrap, you know, the old kind of defi operations, rather than paying 10,000 people. So it's a very capital inefficient manner. How do you operate a bridge? How do you operate anything? You have to pay a lot of people. So here it is like, you have readily available eve that he can borrow and he can create a liquidity and he operate it. And people who are bridging, they will give you the token. You're basically liquidity in a provider like the bridge.
01:07:12.276 - 01:07:24.624, Speaker A: And you offer that, and then here you have a service cost, and you pay back service cost from here, but you have an ETH backed token that has a liquidity that can reconcile between the chains. That make sense?
01:07:26.124 - 01:07:30.484, Speaker C: Yeah, no, it does. It makes it in a volume.
01:07:30.524 - 01:07:56.480, Speaker A: You make a lot of money. It doesn't really make money, like ten years or 28, but it's just like, this is like you bootstrap a billion dollars. Bootstrap, like, in $100 million. The bridges don't really need to do any kids can do in a hackathon and then just put the contracts and the contracts is great. Boom, you give an approval and that's the only thing that can be useful. It cannot be used for anything else. And you can revoke the approval as a withdrawal credential manager, you can rework that, but that's a very important factor.
01:07:56.480 - 01:08:07.168, Speaker A: Rest taking router will allow the rework, the approval. So the bridge, the liquidity token isn't worth nothing, so they cannot do anything interesting.
01:08:07.216 - 01:08:07.924, Speaker C: Okay.
01:08:09.664 - 01:08:18.644, Speaker A: Yeah. Uniswap can be like, if you have a uniswap pool that people has to give their approvals, right, to do the trading, otherwise it's gonna be traded.
01:08:20.984 - 01:08:24.667, Speaker B: But they can get the tokens back anytime. You know, it's the same thing.
01:08:24.715 - 01:08:25.343, Speaker A: Yeah.
01:08:28.363 - 01:08:29.383, Speaker B: Very interesting.
01:08:32.763 - 01:09:23.614, Speaker A: There are a lot of other things to do. So the interesting thing is now you see the existing LSD protocols or existing validators has immediately opened n number of marketplaces with the rest of your router. They don't really have to change their withdrawal credential. They don't really have to go and do some other things. Anyone, anyone who is also part of a risk taking protocol, who has given risk taking, a first, preferred, preferred withdrawal rights or whatever you want to call it, that has been, it doesn't really matter. You can actually participate, any validator, any ETH stakeholders can participate in any of this kind of a new primitives that is emerging or multiple restaking protocols at the same time. If and if you are a restaking, if you are, if you are part of the rest of.
01:09:23.614 - 01:09:49.754, Speaker A: So that's what Vincent was showing. Can we go back to the first slide, Vincent, like, you know, create an account, create a credit score here. That's the one, yes. Yeah, that's the one you created. It creates a register, the credentials, you will see that. And then once you are in the second router, you have n number of approvals, n number of protocols, as much as risk that you want to take it. Right.
01:09:49.754 - 01:10:06.946, Speaker A: So it's, it's really, it's really like up to the user, and always the user has the control. You can rage. Good, you can rework it. And if you go to the claim, go to the claim part, the. The slide that was showing the. No, the next one. So next one.
01:10:06.946 - 01:10:19.084, Speaker A: The number. Yeah. Is that clear now, Derek? Like, you know, the. The active debts and the debt claim and user claim. So even if you have some sort of a debt outstanding, you also have revenue. So you can actually pay out from that.
01:10:20.304 - 01:10:32.160, Speaker C: Yeah, no, yeah, it makes sense. It kind of creates this equilibrium there that makes it. Yeah, yeah, exactly. It can just keep, keep going. Really?
01:10:32.312 - 01:11:02.964, Speaker A: Yeah. You know, either the bond markets operates like that, you decide put $1 in and it creates this kind of market of that, and that $1 in will create $6 worth of value because the equity markets will go up. When stock markets crash, people actually go and buy the bond. Bond markets crash it just like bond market doesn't really crash. Like, God's sake don't crash it. If the interest rate is lower, you actually go to the stock markets higher. But the stock market is actually created from the lendings, created from this kind of a base money supply.
01:11:02.964 - 01:11:46.726, Speaker A: And that's how the equities actually form. You know, you borrow some money from the bank and then you create a, you know, you have this operation, you create a company and that has an equity and that will get listed, blah, blah, blah. It has this kind of value accrual mechanism. But all the thing is the, you know, the nervous system of any kind of economy is the credit lines. And the credit lines need a safe asset. And if you can create an asset as a safe asset class, you can actually use this for, you know, multiple layers and you can create this kind of a veneer of this economic layer. Wrapping all the other networks now restricting router will also enable to give approvals for any other networks.
01:11:46.726 - 01:11:53.914, Speaker A: No problem. Not only Ethereum, any roll ups or anything like that, because it's a, it's a state replication technology. Right.
01:11:58.794 - 01:12:03.094, Speaker B: And we can do this from, we can program these credentials from your node. Right?
01:12:03.554 - 01:12:06.374, Speaker A: Ah, any plus I'm gonna stay back.
01:12:07.514 - 01:12:08.298, Speaker B: Yeah.
01:12:08.466 - 01:12:10.294, Speaker A: So it's not stopping anywhere.
01:12:11.194 - 01:13:00.534, Speaker B: No. So you know, concerns about security may come to mind, but users are able to actually interact with the restaking routes of the program will withdraw credentials simply via their node. So it will stay within the confine of that. You don't expose any keys to user interface, it's just a configuration, it's just an additional piece of software that's installed on the node. Like another consensus client or MEV boost, similar to that, the code is all open source and users can slice up their withdrawal credentials as they wish. In the approvals, they can expose the server to do it remotely. It's up to you what your security appetite is and how you want to air gap it, etcetera.
01:13:00.534 - 01:13:21.574, Speaker B: And it understands how to interact with ethereum execution layers. You can do all kinds of smart contract interactions with it. And protocols can build their own modules, bridges can build modules for me. So you can extend those credit lines out and create all these new kinds of markets from a single validator. Really interesting.
01:13:21.994 - 01:13:48.054, Speaker C: So just in very simple terms, I'm curious what the process would be for a validator to do this. It seems like it'd be quick, it'd be easy, but if somebody wanted to, you know, I know that the protocols will develop to accept this sort of thing, but from the validator side, if I'm a solo staker and I want to get involved with these protocols, what are my steps?
01:13:49.394 - 01:14:16.044, Speaker B: You need to be registered in the proof of neutrality validator registry. So Mev like at the base layer already takes care of that. It's just a simple case of paying for the gas to register on the smart contract. So you connect the Mev to your builder API. There are no keys ever exposed to the MEV plus software validator keys.
01:14:16.744 - 01:14:41.554, Speaker A: If I have an MEV plus module in MPC or any kind of signer mechanism for RPC or anything like that, can I get revenue directly? Can I do that? Like you know just to give an approval calling the receipt router from my, you know, securing player. Like if there's a module anyone can actually create a module and then you add it for restricting router approval. Right?
01:14:42.174 - 01:14:47.074, Speaker B: Yeah, yeah. Just think of it like an App Store for your validator. You just download the module that you need.
01:14:47.474 - 01:14:50.642, Speaker A: We have like four apps. Four apps running on top of it right now.
01:14:50.698 - 01:14:59.282, Speaker B: Yeah, yeah, yeah absolutely. And you know and counting and people, people build their own in the community. It's you know very extensible and they're more.
01:14:59.458 - 01:15:26.034, Speaker A: It is, it is already like available for DVT's and things like they are integrating a couple of DVD's already integrated like now you can actually use it out of the box. Yeah. You have more tutorial sections going to come in and so that's something that's there. But the Me plus is a standalone system. Again it's part of the proof of neutrality stack so yeah, anyone can build module and add it.
01:15:26.734 - 01:15:30.034, Speaker B: Yeah, MIT so your peaks.
01:15:30.334 - 01:15:39.406, Speaker A: Yeah, yeah, yeah. Right. So where are we going with this when this is will be available any.
01:15:39.430 - 01:15:51.934, Speaker B: Places we need to. Let's get some, let's get some feedback from people and let's, you know it's, it's actually the proofing charge stack is already there so the programmer will withdraw. Credentials are a simple module on top of that.
01:15:52.594 - 01:16:50.576, Speaker A: So anyone can actually use this to build new era of loyalty scheme for social media if they want to and then the operations that the, their data will not go down if they go down, right. So the kind of time they will not, they will not go off that the scheme gets restaked or I'm particularly excited to build new kind of markets. For example, borrow facilities out of that, lending, bridging liquidities out of this. Like, you know, preconfirmations can be much more faster. You know, any kind of intense, intense infrastructure could be like it's extremely capital efficient. As to always can, don't really have to pay for the LP's now they can just simply ask this kind of Eid based liquidity and then they will pay, they know. So it's kind of a put this kind of p and l the core structure, right? What is your cost to operate the business that's more important.
01:16:50.576 - 01:17:30.054, Speaker A: So you have more predictability to increase your revenue as a business. Or if you're protocol and you can build the P two P markets, you can build all kind of things. What do you have is like you have an, if you think about token markets, about 2018 20 billion, like you know, just remove this kind of coins, ethan bitcoin and this kind of centralized issued coins, like USDT. We need more blue chip products, blue chip tokens to come in. Blue chip markets to come in. We need have more composable financial markets than only the economic at some point scale. We cannot just have this kind of fragmentation of liquidity because you have to pay someone.
01:17:30.054 - 01:18:00.384, Speaker A: It's the grieving cost is very high. So rather we can reuse the Yeet state and then pay back revenue. And then you have the credit lines and again available for all the roll ups. And this will get arbitrary roll ups and op stack roll ups and z kissing roll ups and all these kind of things. You can, you can, you can create unique, unique markets. You can also build new kind of applications like prover markets, ZK, verifiable compute. If you want to, if you want to restake some sort of operations with that, give those specialized restaking protocol.
01:18:00.384 - 01:18:24.260, Speaker A: But hey, think about this one. If you want to use a restake security, you don't really have to really worry about, oh, I have to go to that protocol and I have to go and bribe all the parties inside and do that. No, you want to have restrict security, good. At a restrict router, the market will give you that. You want to have more coordinated fashion. If you want to have like in a k two, you can go there. If you want to have ligand layer guys, you can go there, no problem.
01:18:24.260 - 01:18:51.644, Speaker A: But this will create a very open and fair market for any kind of restake utilities, you name it. Whatever you want to build it, you can build it. You want to get a restake security, that's where you go. Restrict rider. You're a validator. You want to give approvals for, you know, each and every stick markets. You have absolute freedom to do whatever you want and to make any kind of earnings without any upper bound period.
01:18:51.644 - 01:19:08.734, Speaker A: No one can stop you. No one can grieve you. No one can take your money from your withdrawal credentials just because you give it to them. One approval, you can revoke it anytime. You can control it. Any amount that you want to give, you are in control as a user for your money. It's your money.
01:19:08.734 - 01:19:36.464, Speaker A: No one can take it away. That's crypto. That's the fundamental principle that we are in the crypto. Otherwise, just go and deposit to bank of America or somewhere else. Sit back. All right, we're gonna. Are we going to talk about this? We have something coming up in Denver, right? So maybe we give more feedback and.
01:19:36.464 - 01:19:39.308, Speaker A: Restaking house. Yeah.
01:19:39.396 - 01:19:39.684, Speaker B: Yeah.
01:19:39.724 - 01:19:52.544, Speaker C: I think, you know, we're looking at putting a small event together in Denver. Restaking house. And it'd be great to. Great to hear people's feedback on this and get some people working on it and testing and playing around in this space.
01:19:53.204 - 01:20:02.764, Speaker A: Cool. Cool. All right. Restaking router open and free world for restaked markets. Thank you, guys. That's a py. I like it.
01:20:02.764 - 01:20:04.092, Speaker A: Thanks. Cool. Bye.
