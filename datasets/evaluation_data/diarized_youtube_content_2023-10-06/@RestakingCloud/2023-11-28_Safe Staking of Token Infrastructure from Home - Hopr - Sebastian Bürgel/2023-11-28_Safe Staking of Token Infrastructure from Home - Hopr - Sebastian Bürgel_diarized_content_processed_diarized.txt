00:00:01.400 - 00:00:51.004, Speaker A: My name is Sebastian. I'm founder of HopR. We work on privacy and not restaking. And who here has used safe, previously called gnosisafe? Cool, because I'm going to take you a bit on a deep dive on that journey. And while you wonder how that makes sense, I'm going to talk about not ETH staking, but token staking. Because I think there's a whole lot of token based projects out there and the whole maturity of that whole ecosystem of token staking is way less mature than all the value added services restaking, all the fanciness that we have in the ETH space. And frankly, I think there's a bunch of business opportunities that I hope somebody, maybe in this audience pursues because it will make all our lives easier.
00:00:51.004 - 00:01:20.648, Speaker A: All right, but before we get there, let me start with the value proposition. Ethereum is here to make people free and not rich. And I do think that it's worth highlighting as we talk about restaking money, middleware services and stuff. This is not a technical exercise. This is not a financial exercise. This is primarily a technical revolution that is based on the values of where it can take us. There's no other value proposition that the web3 holds.
00:01:20.648 - 00:02:00.704, Speaker A: You could have made money faster, you could have made Ponzis faster, you could have get rugged faster in the world before. But the value proposition of a world that brings more resilience to the individual is something that is unique to the web3. Now, to get there, and this is something that's talked about quite a bit, we need credible neutrality, but on the way to get there, we need censorship, resistance, right? And only that. And as a means to an end, do we need decentralization. So decentralization in and by itself, in my eyes, is not the goal. It is a means to an end. But that one is not alone.
00:02:00.704 - 00:03:26.850, Speaker A: It also needs privacy, because your decentralized wonder world doesn't help you so much if somebody can track you every step that you take in the web3, and that's what we work on at Hopper. I will only talk about that briefly to give you some context before I get into the staking infrastructure that we work on. So yeah, all of this little side remark needs to be safe. Right now I focus for a few minutes on the privacy part to give you some context of what we work on on Hopper, before I deep dive into the staking infrastructure and how we propose to make it safe, before I walk you through an implementation and a quick demo of how that looks like as a hopefully kickoff point of further discussions on how token staking infrastructure can be made safer than it is today. So, first of all, we have this naive little wonderland where supposedly anons are interfacing peer to peer infrastructure. And as the word peer to peer suggests, you are connecting and thereby exposing yourself to other peers in the network. And, yeah, unfortunately, that happens over the Internet, which has been designed with protocols such as TCP IP, which unfortunately never had privacy in mind when people designed that.
00:03:26.850 - 00:04:13.486, Speaker A: So that my little computer can talk to your little computer. That was wonderful. And, yeah, one little artifact that was created along the way and creates all sorts of problem is called an IP address, but there's metadata beyond that which can be used to de anonymize or supposedly anon users and link, in case of Ethereum or crypto applications. They are various different accounts and link their accounts to real world identities, which I find to be a bug. So we solved that. You can imagine it. So there's a network in between the user in this infrastructure, you might call it middleware, that is unlinking the individual from other peers in a network.
00:04:13.486 - 00:04:56.624, Speaker A: Now, very quickly, how does this work? We have a decentralized packet relay network where data packets are hopping along paths through the network. And for the ones here who are familiar with Tor, yes, so far there is literally no difference compared to Tor, but of course there is one. So we will zoom in one level. So we look at one of these hopper nodes where data packets are hopping around and thereby obfuscating where data came from and where it goes to, and we see something that Tor does not do. So hopper nodes are mixing traffic and thereby has having stronger trust assumptions than Tor. So on Tor, you hope that the first and last node are not colluding. Otherwise, you can correlate where traffic came from and where it goes to.
00:04:56.624 - 00:05:29.394, Speaker A: In mixnets like Hopper, you have indistinguishable liquid packets, which are transformed by these mixed nodes and then shuffled and sent out in different order. So even if I'm your ISP and I see absolutely every packet going into your router and coming out, I cannot link incoming outgoing traffic, and that leads to stronger trusts. Now, I told you, we'll talk about staking. This has absolutely nothing to do with staking. Where does that come in? You guessed it. We're talking about the web3. Why would you run a node? Yes, because you can earn money with it.
00:05:29.394 - 00:06:23.864, Speaker A: So, briefly, how does this work? You see a packet hopping on top along this path of various relayers. You see that these onion encryption shells, also similar to Tor, are being taken off on every step. And we see on the bottom how the incentives are moving kind of in parallel with this data packet and what we have designed there is what we call proof of relay. So a downstream node is returning an acknowledgement in form of a key to you. And only when you have access to this key can you unlock a payment. So that basically provides a bottom up incentive structure, which to me, for well designed web3 networks, you have to have bottom up incentives with, without any oversight, network or overlord who are watching if we're doing a good job. So this is a system that bottom up makes sure that you forward a packet.
00:06:23.864 - 00:07:06.940, Speaker A: If you are being a good girl or good boy and did your job, you get a key, you get money. The more you relay, the more you earn. Now, that is where staking comes in, because what I didn't talk about so much in depth that this is a payment channel network. And therefore we have nodes which are securing funds and doing a task very much, of course, like ETH stakers, right? You perform a task which is securing ETH blocks and whatnot, and you secure funds. Now let's talk about the other side, right? So I talked about privacy a bit. Let's talk about decentralization. So I see a lot of approaches which look like this.
00:07:06.940 - 00:08:24.282, Speaker A: Like this is literally an anonymized because I don't want to dunk on anyone a copy from the docs of a nine digit in a bear market cap project where people are basically telling you to spin off some digitalocean instances, copy, paste key files around, copy, paste passwords around to access that. There's basically no security best practices in place, and I am waiting for some really nasty explanations to happen on that side. Big problem here is probably these entire projects would go down. So that's bad. Now there's a better solution, and we all know about it, right? So, little shout out to our friends here at Dubnote, homestaking, right? Homestaking is great, but if you think about it, you might have a dubnod or home staker that looks in a, it stands in a dusty place somewhere under your sofa. When was the last time that you actually consciously upgraded some firmware? Yeah, so of course there's the approach that you auto update. But then again, we know that's not a great approach because somebody could ship you malicious updates.
00:08:24.282 - 00:09:05.594, Speaker A: And if you want to do that yourself, well, chances are that you don't really secure your assets in the most secure fashion. Right? So I like home staking. I want to provide an environment that makes staking safe not just for professional operators, but also for homestakers, whose dub node, like mine, looks like this and is in a place where the sun rarely shines. Now, how do we do that? We designed a system that separates basically the two functions that I talked about. We have the work that is being performed by the node, and we have the financial parts. And, yeah, these are basically two very different jobs. Right.
00:09:05.594 - 00:09:39.404, Speaker A: So one is to secure assets, and the other one is to run infrastructure and, like, earn token, because, again, I focus on token based infrastructure. So the setup of your. Of your node is obviously highly automated, and it has to be always on. Yeah, whereas the safe and this is again, the basic. The basics of our design that I'll dive into now has to be highly secure and mostly offline. Right. You don't actually care about this thing being online all the time because you just want to grant capabilities to your node as is exactly needed.
00:09:39.404 - 00:10:14.484, Speaker A: And, yeah, so these two things is something that we first of all separate. Right? So previously that was all kind of put into a node. We separate these two, and this is made easier because we are not the first ones who are thinking about granting capabilities to some external smart contract or entity. There is the Gnosis Guild folks who work on Zodiac. So our work is based out of this zodiac permissioning modules. And. Yeah, that's what we use to grant from your safe.
00:10:14.484 - 00:10:45.054, Speaker A: Exactly. The capabilities that you want your node to have and granted. Exactly, exactly. The financial exposure that you are fine with your node having. Because obviously there's a trade off, right? If you just don't want to give a shit and have your node just running by itself and take all its decisions, you can do it. You can just limit the financial impact and the less capabilities you give your note, the more frequently you might need to step in to do stuff manually. Now, I'll dive a little bit deeper into the technical setup, but don't worry, it will not take longer than five minutes.
00:10:45.054 - 00:11:13.482, Speaker A: So you can run, of course, more than one node. So if you're a professional node operator, that's maybe kind of handy as well. So how does this work? The safe has owners. That's what makes it a multisig. Right? So these are typically separate EOA hardware wallets, or maybe you have a custodian involved, whatever. There's this node management module, which grants kind of short circuits some capabilities of your. Of your safe.
00:11:13.482 - 00:12:01.922, Speaker A: Specifically, it short circuits the multisig capabilities of your node. So, of course, you have to be careful with that one, right, because you could have a single account that drains your entire safe in the worst case. And then we have our nodes, all of which have what we call a chain key. We call it chain key because we also have another key that we use for the packet relay capabilities within hopper that I talked about before. So for deploying that, there's a stake factory. So yeah, basically there's a safe proxy factory on the left, which is how you normally deploy safe. So whenever you use the safe, this is basically deployed out of a proxy contract, the proxy factory contract, which deploys a singleton for you.
00:12:01.922 - 00:12:39.798, Speaker A: We do the same thing then on the. Yeah, on the module side. So we deploy a unique module proxy for each of you. It's an upgradeable proxy that you, as the owner of the safe, can upgrade if you want to. Yeah. So finally, how does this thing operate after you deployed it? So you have an admin, which by default is deployed as a one on one, which manages your nodesafe and which also manages the node management module. And then you have your chain keys, which again corresponds to potentially multiple nodes that you manage.
00:12:39.798 - 00:13:08.386, Speaker A: If you're a professional node operator, that might be handy. And you can call a variety of contracts, including multisign for convenience purposes. So this is all basically to make our life easier and to separate the capabilities. Cool. And with that, I would like to demo briefly what we built here, how this works in practice. For the ones who are interested in token staking, you can check out our GitHub. It's a Monorepo.
00:13:08.386 - 00:13:29.888, Speaker A: Yes, it looks a bit big. That's why I gave you the direct link here. Please feel free to copy it, get inspired by it, look at it and whatnot. Of course, we are supporters of free and open source software. So if you look at safe, you will find that safe is actually not just a smart contract. And that's where it gets a little bit tricky. Tricky.
00:13:29.888 - 00:14:26.684, Speaker A: So safe is of course a set of smart contracts and a module in our case, but it's also a web UI, it's also a bunch of services. So for example, there's a transaction manager service which is taking off chain signatures, aggregating them. In our case, I think we've been the first team who runs this whole safe infrastructure on premise ourselves, and we built a kind of custom feature reduced thing that is specific purpose. So the safe infrastructure is of course general purpose because it's great, it's used for all sorts of stuff. We build a specific purpose implementation here and let's see if video embedded works. So you see our custom UI, which you connect just like the normal UI to your web browser. We create a safe, which again, of course, looks a little bit different than the normal safe flow.
00:14:26.684 - 00:14:55.210, Speaker A: We start the staking, right? So we started, we have a gated network, which requires you to have a hopper NFT some community incentivization. We fund our safe with Xdai and Hopper. By the way, this is on gnosis chain. That's why this was Xdai and not ETH. And now the user is choosing their nodes. So again, we work with dub nodes, so make it convenient for users. In this example, we walked through a docker installation.
00:14:55.210 - 00:15:39.914, Speaker A: Just because you can have it all in one machine, like bunch of startup parameters, they don't really matter. This is basically startup parameters, just like your ETH staking node. And the important thing is now that these two things. So the hopper node that is running and we see here it does a bunch of things upon started, needs to be hooked up to the safe. So we're starting the management UI of node and we are basically as a next step now connecting that safe to the node. Right. So that's a both sided link that you need to establish, because the safe needs to know, hey, what's the node to which a delegate work? And the node needs to know, hey, what's the safe that I need to listen to.
00:15:39.914 - 00:16:09.688, Speaker A: So that's what's being happening. And finally we set it the allowance, right? So that's basically saying, how much financial exposure do I trust my node with? And the lower you set that number, the more frequently you come back here and upgrade that. And yeah, that's basically the setup. So what you see now is just a normal operation behind the scenes of a hopper node. This looks very technical. It's very specific to the hopper protocol for packet relay infrastructure. You can imagine that very much like an ETH node.
00:16:09.688 - 00:16:51.746, Speaker A: And what we're showing here is how a hopper packet is being relayed. Remember how this animation that the hopper ball was hopping around and somebody was earning funds? This is what we'll see here. So a message is being sent, like from the left node, across this right node, back to the left node. It's a little bit pointless, but it just should visualize how you earn funds by running a hopper node. So we'll see that we gained some what we call tickets. So there is a ticket that was earned for which the user earned hopper tokens. And.
00:16:51.746 - 00:17:18.334, Speaker A: Yeah, so that's our setup, which again comprised more than you see. It's a custom made UI. It's the standard transaction service running in the background. It is the module. The module is easily extended. So if you have different projects disregarding what token based project you work on, feel free to get inspired by that. We try to keep it as general purpose as possible to make it easily adjustable to other projects.
00:17:18.334 - 00:18:21.512, Speaker A: And with that, I'm stuck on a screen which wants to keep going and going on the, on the presentation. But anyway, that was, yeah, pretty much my last slide. I am not a Mac user, as you can see. Yeah, finally there's one last slide that I actually did want to show, which is, why would you do that? Why would you change token based infrastructure projects? People all have their stuff ready. I know, why would you change to a completely different system? And my answer is, because you're not by yourself. You're in an ecosystem that is actually raised quite some funding and has a bunch of successful projects out there which you can easily composably interact with. So if you want to have an accounting solution that's integrated, if you want to have a simulation tool that's integrated, if you want to have some reporting tool, that to me is the power of safe.
00:18:21.512 - 00:18:58.504, Speaker A: It's not just that it's secure, it's powerful that you have other infrastructure around yourself. And yeah, with that I would finish here and I would just encourage everyone to think about how can we make token infrastructure about as great as ETH staking infrastructure. Again, there's a lot left to be done. There's no restaking there in this whole ecosystem. If you think this is a crowded space, there's lots of work to be caught up on the token staking infrastructure. If you look at that, you will feel that that whole space is very much in its infancy. Lots left to be done.
00:18:58.504 - 00:19:00.144, Speaker A: Thank you so much. And safe staking.
