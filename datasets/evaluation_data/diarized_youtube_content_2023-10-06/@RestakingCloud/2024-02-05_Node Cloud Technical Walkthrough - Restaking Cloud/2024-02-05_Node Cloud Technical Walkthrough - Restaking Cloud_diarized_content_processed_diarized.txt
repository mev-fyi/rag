00:00:00.640 - 00:00:01.180, Speaker A: Yes.
00:00:03.814 - 00:01:02.270, Speaker B: All right. Hey guys, LFG first of Feb, we've got another walkthrough to go through today at more of a technical code walkthrough on node cloud and the preferred node feature coming to restacking cloud. We previously did a walk through describing more high level non technical details on the node cloud. So check that out on the restaking cloud, YouTube, if you haven't already, to get a bit more context of the stuff that we're going to discuss today. We have some slides just to reference whilst we're going through this. But you know, if you want sort of non technical details on certain things, definitely check out that video. And we're going to go through how you can participate in the node cloud through MeV.
00:01:02.270 - 00:02:33.316, Speaker B: So that is going to be really interesting and Ronnie will talk through that. The important thing is that PNO and the node cloud is going to offer decentralized node running as a service node runners for hire backed by slashable ETH security. So we have this concept of K two users that have liquid delegations that they can redelegate to preferred node operators, and node operators can then offer their services, node running services for whatever they want with any network possible, in any network that is set up within the node cloud. So no networks can separately get ETH security and they can get ETH stake and then also get the node runners that they need for their operations, for their rest, taking applications, that's like potentially $72 billion backing node runners. So it's a pretty interesting, pretty interesting offering. So let's have a look and let's talk through. So what we have previously talked about in the previous walkthrough is how this conceptually works.
00:02:33.316 - 00:02:49.952, Speaker B: So what we're going to do today in the code, we're going to show this is implemented, this is going on Testnet soon, and it's going to be a case of how do you create a knetwork and how do you, as a node runner that is natively delegated to K two, how do you participate in the node cloud feature?
00:02:50.128 - 00:02:51.728, Speaker A: Can I ask a question here?
00:02:51.896 - 00:02:52.960, Speaker B: Yeah, yeah, please.
00:02:53.112 - 00:03:17.464, Speaker A: What is knetwork? What is a PNO? So like, you know, people don't know many of this. Like there are three or four things here, like delegations and PNO and knetwork. How do I get my money, who I am? Like, you know, something would, would really help just going through because we're going to have a lot of stuff related to the particular actors, right?
00:03:18.124 - 00:03:55.440, Speaker B: Yeah, that's true. Yeah, that's very true. So node runners on Ethereum that are running Ethereum validators for the Ethereum consensus layer. They can offer their stake for rest taking applications through k two. So they do that through native delegation features. So we have an Mev software that users will use to perform that native delegation from the consensus layer to the Ethereum execution layer. If you haven't checked out our docs, we have the restaking cloud docs.
00:03:55.440 - 00:04:37.958, Speaker B: You can learn how to install this software and do the native delegation right from your machine. So that's making your stake available for other applications to use. You can secure more than just Ethereum. So then rest taking applications might say, right, okay, well I need node runners as well. So I then want to engage in my application. I'm going to engage what we call preferred node operators from the node cloud. So you go to the node cloud and you go to node runners that are preferred node operators and they have at least one native delegation.
00:04:37.958 - 00:05:26.474, Speaker B: So they're running at least one Ethereum validator and they will then offer their services for knetworks. So K networks, they want pianos to run their software. It can be an application, it could be a roll up, it could be a whole host of things. And maybe they want specific node operators or they don't care, which as long as people are running it. And they will offer in exchange some reward for running that software on the basis that slashable ETH is given for the K network. The liquid delegations is like you have k two stake in the k two pool. That is liquid as a delegation that you can point towards specific node operators.
00:05:26.474 - 00:05:30.314, Speaker B: It's kind of like a signaling is how we like to describe it.
00:05:30.394 - 00:05:44.664, Speaker A: So it can basically say that I have a native delegations or I have some LST deposits as well. Can I do the liquid delegation with both balances from k two?
00:05:47.444 - 00:05:50.092, Speaker B: You may have an LST balance as well.
00:05:50.188 - 00:06:25.310, Speaker A: Yeah, so I have, I'm an old runner. Right, okay. And you know, I am part of rocket pool, I'm part of Stakehouse, I'm part of, you know, lido stick and router, I'm part of DVT's. But I may also have this kind of liquid version of that same tokens that's sitting with me. So I would love to have my ETH validator asset to be replicated through the native delegation. But I also have this kind of ERC 20 token that's sitting and that if that is accepted as LST, I also have that balance. So one is a registry balance, one is in an lp balance in k two right.
00:06:25.310 - 00:07:13.980, Speaker A: So it's like it may, it basically takes the stake weight. So how do you, is it possible for me to combine all the balances in one and then say that I have 10,000 ETH with me and that came from all kind of directions and I want to do 100 to one p and o that I like it. I want to sprinkle another 200 for another DVT cluster because I really believe that these guys are having mission and they want to do some operations in Africa. So I really want to support that. So I can have all this kind of a very um, you know, cross pollination or like I can just take my decisions based on what I, what my preferences are. 20% of my delegations goes to here or one, 1% here, 2% there. I don't really have to do all of my balances to delegation.
00:07:13.980 - 00:07:22.024, Speaker A: Is that all kind of possibilities? Like similarly, how do you do the delegations, like very liquid? Is it possible or is it just a very limited.
00:07:22.924 - 00:08:03.118, Speaker B: Yeah, no, what you're describing is possible. So to answer the first question. So what you get is unified, like ETH balance within k two. That represents a validator. So your balance will get unified and it will be then used within liquid delegations and split in a way that you decide. So for example, if you deposit two st, into, into k two, right, you're going to get a unified ETH balance from that token. And that is your upper bound for your liquid delegation.
00:08:03.118 - 00:08:21.396, Speaker B: So you can slice it how you want, but you only have a fixed capacity of how much you can fix liquid delegation capacity. And if you want more liquid delegation, you just need to add it. You need to just either natively delegate a validator or, you know, bring more tokens. Yeah.
00:08:21.460 - 00:08:59.116, Speaker A: So if I, if I understood correctly that then if, yeah, if I have a liquid version of some stake deed somewhere, it only has this kind of mapping to an ECDC address. Right. So I just give approval and then that's basically part of the k two. But the native delegation is like, it's added to the k two, but you just still need to give an approval from your signing key. Right. Delegate here, delegate there. Or is it basically like you have this kind of interface for liquid delegation with a k two so you don't really have to worry about it? I just want to make sure that the whole thing will actually make it easier.
00:08:59.116 - 00:09:01.944, Speaker A: Or do I need to go back every single time?
00:09:02.564 - 00:09:26.444, Speaker B: No, I think, well, that's the key thing here about the unified ETH balance is that there can be many sources and you know, yeah, okay, so there can be many, but the k two protocol is going to abstract away any kind of differences in these, you know, into these inputs.
00:09:26.824 - 00:09:45.866, Speaker A: So the node cloud is a very different, it's a standalone protocol, but it just use the existing, the proposal registry, the validator register that we have, and the k two speaking pool balances it has. So it's kind of a very composable nature, right. Once a state is available on execution layer, you can reuse it and that's what you're talking about.
00:09:45.890 - 00:10:37.346, Speaker B: Yeah, correct, correct. Under a single address. Yeah, that's correct. Yeah. So for example, with the proposal registry you can, so the proposal registry is just about having an on chain representation for your validator. So of course in the consensus layer they have BLS cryptography, which is not compatible with the ethereum execution layer. But what you can do is you can assign a representative to that validator that can execute transactions on behalf of you, but it's all unified under a single ECDSA address, rather than having to do operations for every single BLs key, k two is going to, and the rest, taking cloud is just going to simplify that alongside the pon infrastructure, which is the neutral infrastructure that is there, that is the proposal registry.
00:10:37.346 - 00:11:27.738, Speaker B: The proposal registry is doing nothing, like I said, other than just validator representation, and there's no fee for that or anything like that. You just register your validator once it's a single sign on. Think of it like this, Google, you can have a single sign onto an infinite number of websites on the web, and that user experience has, has a lot of, you can do a lot of interesting things with that, and it's the same here. So you register your validator, or validator's plural. Like you could be a node operator with 10,000 validators. You register in the proposed registry and then they are available under the representative address to use in different kinds of applications. And the applications are appearing on a daily basis and it's fully extensible by the community.
00:11:27.738 - 00:11:41.634, Speaker B: They can build their own modules on top of this, on top of this primitive PBS can reuse this registry rather than having ten different relays with ten different databases on registrations. You just sync the sink a chain.
00:11:42.214 - 00:11:49.422, Speaker A: If you want to do some preconformation, you can do that too. Like any kind of supply chains, any kind of signing operations, any kind of things, right?
00:11:49.558 - 00:12:13.484, Speaker B: Yeah, exactly. And it's under a single balance. So in K two you have that single unified ETH balance. So like whether you're bringing, you know, the different intro sources that I was saying, like whether you bring STD's or whether you're natively delegating your validator stake, you end up with a single unified restaked balance that then is available for liquid delegations. And that's where we are literally with node cloud.
00:12:13.784 - 00:12:40.852, Speaker A: Yeah, literally it's running like a single sign on. But then you have this kind of, in a standard way of you just give this hierarchical user roles, right, in an organization, right? But now you can create your own rules, which kind of people can come in and who can do it and what kind of route. But that's, that's truly arbitrary for the validator registry, but the node cloud actually use that validator registry already available and unified state balance available from the k two.
00:12:40.988 - 00:12:45.644, Speaker B: So it is really, it's like a rules engine. You can do rules engines on top, right?
00:12:45.724 - 00:13:02.956, Speaker A: So yeah, policy engine for the roles and you know, so you have this kind of roles, right, in a standard server architecture in computers and networking. And that's what you have the policy engine, what you can do, what you cannot do, where you want to go and things like that. Yeah, it's an application.
00:13:03.020 - 00:13:52.308, Speaker B: Exactly. And like some people might be thinking about like application directory, you know, you know, the ad. Yeah, it's very common in standard organizations. And you know, you have like a single switch where you can, you know, you can just like, you know, there are, there are many interesting applications that you can build on top of it. But once the proposal is registered that can, has a single sign on to any kind of applications like the node cloud. And these, these validators, sorry, these node operators, because it's under the single ETH address, they then can work on many protocols and they have on chain reputation. So you have reputation from the validators that you're running already on ethereum consensus layer, consensus layer is monitoring many things, penalizing you for not doing things that you're supposed to do.
00:13:52.308 - 00:14:51.498, Speaker B: And then you then have, if you're now offering your services through node cloud to other K networks, then you have other reputation data points. And if you basically what can happen is we talked about the k networks. They ask node operators to run some software for their network. And obviously in the ideal scenario, everybody's honest, or not just honest, but everybody has a perfect computer with a perfect Internet connection and a perfect power source. But the realities of doing this in a distributed way all across the world, in all kinds of countries where even power is not stable, things can happen, nodes can go offline. So depending on the K network, they can inject the subjective rules for slashing. So pnos preferred operators will get paid for doing a job.
00:14:51.498 - 00:15:25.734, Speaker B: But if they don't, if there's some kind of issue that fits in the criteria of slashing for a K network, then they may lose some of their ETH, right? So knetworks are getting paid in ETH here. But the upside is bigger than the downside. In general, with all these decentralized systems, you're either on decentralized proof of stake systems, you're either online doing a job, earning money or you're not. So that gives a bit of an overview of that.
00:15:26.114 - 00:16:16.372, Speaker A: It's kind of a repulling security from the one large ethereum to multiple node runners, and then they are reinforcing their operations for that. And so that we have signaling from 1000 delegators, we have derived 10,000 either of delegations, we hire us. You can see all of our historical, how the performance if you get slashed or not, everything is on chain, so the reputation is coming from there. Everything is smart contracts. You don't really have to worry about it, any kind of manipulations. But the cool thing here is the node networks, with a single validator, they can receive any number of delegations they want, right? So the barrier to entry is super low. You know, anyone can give any kind of delegation signaling and, but in return there's an incentive.
00:16:16.372 - 00:16:33.156, Speaker A: You know, you share the rewards between the delegators and you. But the K networks know that who they are hiring, they have absolute peace of mind. If something goes wrong there and someone will slash it, they get their money and they can kick them out and all kind of things. We're going to talk about all these things in the code walkthrough. I understand, but just like it's pretty.
00:16:33.180 - 00:16:41.264, Speaker B: Interesting, but this, this is a first for Ethereum, right? It's quite common in other proof of stake trains for this to, you know.
00:16:41.304 - 00:17:15.224, Speaker A: But this is a within one chain. Within one chain. But we basically for n number of networks. So normally this kind of delegations are restricted to one network. So that's called the proof of stake chain. But what we're doing here is like n number of operations can be docked into Ethereum and Ethereum is just basically starting this kind of a, in a proliferation of a trustless economic guarantee can be delivered to any kind of operations that requires, you know, universal access.
00:17:20.164 - 00:18:02.474, Speaker B: Right, right. Okay, so I guess, I guess, you know, it might be a nice time to talk about. Okay, so like we need, so if a K network would like node operators to work for their network and run some software, you need to spin up a K network. So what do you need in that? In that, right. So you know, you make an on chain transaction, you make an on chain transaction and you spin up a K network. Now you know, if you, if you're following along with the code, you can see that it's going to deploy a fund switch, right? So if we go back to the slides that is talking about this. So pretty simple.
00:18:02.474 - 00:18:51.986, Speaker B: So you have at a global level, you have preferred node operators. So how you become a preferred node operator. So the finer details will be coming in, right? But there is a criteria to become a noidal proof. So you need to have at least at the time of speaking, it's looking at at least one native delegation. So that might get tweaked, but that is a criteria to become eligible for PNO. And then there might be some kind of other selection criteria, but then at some point you transition to piano status, so that in the no cloud you have that, that status. Right, you're good to go.
00:18:51.986 - 00:20:20.654, Speaker B: Now, K network will come along and say they need pnos and they will make two decisions, as we mentioned here in this, they will either have a requirement for whatever reason, whether it's regulatory or not, they may say, well, we have to select and curate the list of node operators, that's fine, but by default it's going to be open, right? So anyone can, once the k network is set up and there are some configuration parameters that will set the k network active. So once the k network is active, then node operators can come in. If it's not manually curating node operators, as you can see from this diagram, there is a degree of separation between the liquid delegators. You know, here, you know, you can interchange redelegation with liquid delegation. That's not a problem. So there's a degree of separation between those, the, you know, the k two balance, the unified ETH balance, that and the k network. So liquid delegators, they only care about good node operators, pnos, good preferred node, right? If you signal, if you signal for a specific preferred node operator, they're going to go and work for n number of k networks and if they do a good job, you're going to get a cut of rewards.
00:20:20.654 - 00:21:04.658, Speaker B: So you want to seek out really good node operators because it affects your potential earnings. There is no lower bound on your earnings. You could earn nothing by doing this, but then there's no upper bound. Equally, it's up to you for, you know, to kind of, you know, you don't have to be super active as a liquid delegator. You know, you can be passive, but you know, if you're not earning you can just undelegate any time, right? That's not a problem. You can, you can undelegate anytime. There might be some restrictions on some temporal rule on, you know, you know, liquid delegating to another node operator, you know, so that, you know, that that is, that is just a, an important role of the mechanism.
00:21:04.658 - 00:22:02.994, Speaker B: But you can remove the delegation anytime, you know, if a node operator is being slashed, if they get kicked, then, you know, you don't have your, your liquid delegation doesn't have to stay in a node operator. But in this payment processing contract you can think of this as a fund splitter and that is part of your care network when you, when you, when you spend on your network. So what you can do as a care network is obviously pay. You can just drop rewards arbitrarily in this contract. And it knows who the node operators, all of the redelegations, it takes snapshots which we can go through. So that takes fund split factory, that is simply deploying fund splitters for debtors which are known as k networks. And this we have a distribution which distributes 20% to prefer not operators and 80% to the, to the liquid delegators.
00:22:02.994 - 00:22:50.306, Speaker B: All taken care of like in terms of the, you know, and you could, and you can have different, different fund splitters. That's not a problem with different logic. But this is giving you the debate template that is needed to figure out how do I get the list of pianos, how do I get the list of liquid delegates? And, you know, give them all the pro rata shares that, that they should be getting for their various roles in the system. So the contract is pretty simple in that respect. From time to time rewards are distributed. That does a checkpoint on a distribution. And the liquid delegation balances are snapshots from time to time whenever they are updated.
00:22:50.306 - 00:23:56.094, Speaker B: Similar to the, there is a, there is an ERC 20 votes contract out there. So if you're familiar with that, there's a snapshotting there that will snapshot your balance from time to time. So in a similar way, the liquid delegations will work and you're going to claim from the liquid delegation bucket your rewards or you're going to claim from the preferred node operator rewards. Like I said, as a K network, if the node operator is not performing, then what you have is you have as a K network is you have a lien on, you have a lean on ETH yield from k two. What happens is whenever a liquid delegation takes place, we have opting in logic here. I'll just cover that before I go into liquid delegation. Like I said, either the K network is opened and the gatekeeping is not enabled, and you can basically opt into that K network.
00:23:56.094 - 00:24:06.678, Speaker B: You decide as a preferred node operator which networks you want to work for, and you can work for as many networks as possible, and you have the same liquid delegation balance.
00:24:06.846 - 00:25:11.074, Speaker A: So the thing is, what you're saying is both have an agency, like knitter has a full agency to decide what the opt in is, permissionless or optin has some sort of criteria they want to enforce, but they can say it's open for anyone. Any P and o can be joined, but the PNO has a full agency here on behalf of the delegators to choose what is the best interest for them to run a machine. And just because the knetwork is accepting any everyone, PNO is not guaranteed to join them. So throw some really good incentive for the PNOs to join your network and run it. You get Yeeth protected node operators and you know, remember a knife can have n number of node operators in their network. And out of that maybe 10% or 20% is the, the PNOS. 80, 80% of the other node operators could be completely from outside.
00:25:11.074 - 00:25:38.242, Speaker A: It doesn't really matter. So it's like very, you know, plug and play. There is no requirement that your entire network has to be PNO backed or something like you can definitely do that. You can simply run an l, one blockchain just with a PNO. That's great. You can just run the entire committee for your roll ups with the PNO. You can just run entire sequencing operations with just 100% dedicated with a PNL, that's fine.
00:25:38.242 - 00:25:44.822, Speaker A: But you can also just hire pNOS 20% of your network, right?
00:25:44.878 - 00:26:09.570, Speaker B: But yes, you could. I mean they wouldn't be as strong, right? But maybe in time they would be. Maybe you can have like a strategy where you may start with, you may hire the pianos, which may be an initial, like higher upfront cost, but you may transition to your native. Like if it's a roll up, you might, or a sequencer, you might transition to like some native elevators, or you may have a mix, right? So like, you know, they're like fall backs or, you know, it's interesting, you.
00:26:09.602 - 00:26:48.538, Speaker A: Don'T want to have a roll up token at the beginning, but you could have a roll up token as the go. So you just start with the p and operations at the beginning. And then you say, now you bring your roll up token. You can say that, yeah. You still need some sort of a pno kind of protected operation, so you get some sort of a degree of, you know, e back deficiency. Now what you get it is like, you know, you have a very step in stone bootstrapping and to set up your things, spin it up and get your economics played out in really well. You know, test it out in any way that you want to.
00:26:48.538 - 00:27:04.538, Speaker A: The piano operations are great for anyone who wants a machine. It doesn't really need to be a blockchain. It doesn't really need to be a roll up. It could be anything. It could be something like an MPC network need to be restored in operations. And then. Yeah, okay, this is the, this is the committee for the MPC network.
00:27:04.538 - 00:27:21.474, Speaker A: Great. And if that is a DKG committee and my DKG public key is here and all these operations have been, you know, monitored and I'm using for decryption service. I want to onboard 100,000 users to my wallet. Right. Boom. If they want to decrypt the. They don't want to.
00:27:21.474 - 00:27:38.488, Speaker A: I don't want them to be, you know, worried about the seed phrase and everything. Go ahead, use MPC network. It's already restricted. If they don't deliver that service, they're going to get slashed. There's a p and L. So the PNO note operations is just simply a machine operator running a software for any kind of operations. Right.
00:27:38.488 - 00:27:44.844, Speaker A: It could be anything, could be little as like, you know, selling an oracle. It could be like a liquidator board. It could be anything that you want.
00:27:45.624 - 00:27:46.056, Speaker B: P two.
00:27:46.080 - 00:27:46.624, Speaker A: P trading.
00:27:46.664 - 00:27:47.440, Speaker B: Right. As well.
00:27:47.472 - 00:28:01.794, Speaker A: Right, right. A trading terminal. Right, yeah, if you, if you. That's what. So, yeah, p two P terminals. Like for example, you want to have an on chain order book with an off chain, sorry, off chain order book. And on chain settlement, you can have this kind of order book.
00:28:01.794 - 00:28:32.954, Speaker A: Terminals, you know, multiple peoples are coming in and their operations are, you know, restaken say if they don't follow some sort of a medianized price range that we are dictating, then they're in a manipulating. They'll get slashed and they'll be, get kicked out. All kinds of operations can be done this way, but it's really, the design space is wide open. The thing it is, you don't really have to do the heavy lifting. All you need to do, put your business logic plug and play, you know, write it and point your API endpoint. That's all you got to do, and they will run it for you.
00:28:35.334 - 00:28:41.766, Speaker B: So it's like, I mean, this is, this is one of the most. Bootstrapping. It just falls into the category of bootstrapping. Right?
00:28:41.830 - 00:28:43.054, Speaker A: Yes. Yeah, yeah, yeah.
00:28:43.174 - 00:28:45.634, Speaker B: Like, and that's a hard thing to do at the start.
00:28:45.934 - 00:28:48.874, Speaker A: Yeah, yeah. Pay as you go, pay as you grow.
00:28:50.524 - 00:28:59.372, Speaker B: Okay. Right. Okay, okay. Right. This is good. This is very good. So liquid delegations.
00:28:59.372 - 00:30:15.914, Speaker B: Right? So in order to, in order to liquidate, in order to liquid delegate to a preferred node operator, you have a delegated approval given to the K network. And that says that you are signaling for, um, to back a pNo, you know, for a node operator. And you, you back it with a claim to, to ETH, right? So you're saying this guy is a good guy and I, I can vouch for it with, with ETH, you know, and if they don't, then obviously there are, you know, that will get adjusted over time and, you know, that reputation will become really, really critical on chain. Um, and, uh, you know, you'll be able to see, you know, without just taking claims on face value. You know, you might have a, you know, if you, if you are a network and you're like, okay, or do I hire x node runner or y node runner, they're saying they're making these claims. Uh, yes, obviously you can have a, you know, like a real world, you know, service level agreement. But you know, even better than that is if you have on chain reputation that you can query at, you know, twelve second by twelve second, you can see exactly what the node operator is doing.
00:30:15.914 - 00:31:15.648, Speaker B: This basically allows the K networks to record debt and the lean contract will track aggregate PNO slashing. So node operators will have their slashing tracked so that if the slashing exceeds the historical earnings of the PNR, they will get kicked. So it is important to keep, this is important from, and this is achievable for most node operators. The K networks want the node cloud to basically offer preferred noid operators that have a really, really high standard of service, right. Especially from the day one. Right. So basically it's permissionless, of course, permissionless entry, permissionless exit.
00:31:15.648 - 00:32:06.214, Speaker B: This is a core tenant of any protocol at Blocktoplab. But those first critical days, like you can permissionlessly come in, but you need to prove yourself. So otherwise you will get kicked very fast. So running a good operations from the start and continuously, will it be important to the success as P and O and also for the liquid delegates, right, so that they don't have to change their liquid delegations. Too many times. Like I said, the rules around slashing will be dictated by the key network and they inject that into their middleware. So the middleware that we have, we already have variants of that that you can read about on our docs as well.
00:32:06.214 - 00:32:58.506, Speaker B: And that will be used for the node cloud as well. So in the rest taking cloud docs, you can get a feel for what that's like, how you will inject your own custom logic. We have other walkthroughs as well, but there is information on how you can inject it, the different sources of data that you can use, how to spin it up and run it, how to run a reporter as well. Right? So the, you know, the reporting is permissionless as well. This is what a K network is also, you know, paying for. So this is why, this is why there is a, there is a cost to opening, you know, slashable security. And they are basically paying reporters to watch their network not only at a global security level, but at a local localized preferred November operator level.
00:32:58.506 - 00:34:17.564, Speaker B: And these reporters that will come in and submit reports either at the K network level or higher, they are actually keeping the system in check and obviously are getting paid a fee to do so. So you could be all of the actors in the system that we described, or you could be one of them or two of them, but every actor in the system has got a role and a reactor is permissionless in the system, really. So I think that's really interesting. You can redelegate from your balance and because of the so node cloud will use hooks in order to notify the K network that basically a delegation has been received. And that is what allows K network to track the slashing. And can say like, well, if the node operator has, like, you know, has had slashable defenses, they can, they've got a claim to, in the rules, they've got a claim to e, right. But only if there are violations and the preferred node operator has done something.
00:34:17.564 - 00:35:37.446, Speaker B: The rules are, you know, the slashing rules will be known upfront, so node operators will opt in with full knowledge of what is required of them, you know, ahead of time. So, YoU KNow, at least, you know, it's not going to be a surprise. And you cannot be slashed if you're not part of a particular k network as a piano, you know, you cannot be part of, you know, you can be part of one pnO k network and then get slashed for something that, you know, that isn't happening in, completely happening in a separate network that's definitely not going to be not going to be the case really. So that's, that's, you know, so that will cover the slashing side of things. Do you think we should get into how node operators will manage their pianos? Should we give like an intro into this? So there is going to be a new mev module. So we've already had the native delegation module that's been a success. There's been over $650 million in native delegation to k two.
00:35:37.446 - 00:37:01.296, Speaker B: So another protocol within restaking cloud and the PNO module will be for the node cloud and it will allow node operators to actually manage their registrations within specific k networks. They will be able to do liquid delegations, whether it be to themselves or other participants in the node cloud claiming the rewards, any kind of redelegations, activations, all this kind of stuff that is all going to be automated and configurated inside of the PNO module. It's a nice comfortable interface because it's at the node level, your keys are not being exposed. It just sits and works in the background and extracts away a lot of the knowledge that's normally required to interact with a specific smart contract suite. It's just more plug and play. So if you have already native delegations, then switching this, turning this module online will not be much more complex than doing that really, but with the ability to do certain granular operations from the servers that are inside of the module itself. Should we go through the.
00:37:01.296 - 00:37:06.204, Speaker B: Ronnie, do you want to take people through the PNO module?
00:37:07.844 - 00:37:18.304, Speaker A: Yeah, the PNM module is just basically making things much more fluid for an auto operators. Right. So they can actually do all this kind of interactions, actions from the secure environment. Right.
00:37:19.844 - 00:37:31.984, Speaker B: Node operators prefer this. This is, this is, this is the preferred approach in, like you said, in doing it in a secure environment. It's, it's, yeah.
00:37:33.504 - 00:37:34.924, Speaker A: All right, let's see it.
00:37:36.424 - 00:37:48.364, Speaker B: Awesome. I'll stop sharing my screen. Would that be okay, Ronnie?
00:37:52.744 - 00:38:01.668, Speaker C: Yes, I am just sharing that particular. Can you see my screen?
00:38:01.756 - 00:38:03.544, Speaker B: Awesome. Yep, yep.
00:38:04.324 - 00:38:37.944, Speaker C: Okay. Just on a high level as a node operator similar to k two, we have a module for Pno four plus and we've configured it such that as a PNL module. Unlike the native delegation module, you can connect this module to your plus software and run it alongside your node without the need for the builder API or with the builder API.
00:38:39.884 - 00:38:41.944, Speaker A: Can I get this from in DAP node?
00:38:42.884 - 00:39:00.904, Speaker C: Yes. So essentially that there are no specific requirements to a specific client or configuration type. So this module ideally would once connected to plus can work for any node or client type. Just to also support client diversity as well in the network.
00:39:01.484 - 00:39:01.900, Speaker A: All right.
00:39:01.932 - 00:40:33.636, Speaker C: Okay, so we're presenting like a very lean version of the piano module for now, which has a core, a key functionality of having to redelegate your natively delegated balance from k two to this liquid pool. And so as a module on start, you have the option to provide beacon and execution node URL flags and an auto redelegate flag. The idea behind this is we seek to make so as a node operator that has natively delegated a couple of keys. Like we have people that are getting thousands, almost 10,000 keys. You would have a native delegation capacity within your liquid pools. And so with this capacity you could apportion some ETH to preferred node operators of your choosing. Having started a node operator module to, to prioritize or preference yourself, there's this auto redelegate flag that on boot up the node operator module would redelegate any available balance for your natively delegated allocation to yourself within this piano protocol.
00:40:33.636 - 00:41:37.494, Speaker C: So just on the high level we have these flags available from the first release. And on boot up as a module we would start by checking your flag configs and you would of course need a wallet key. The idea with a shared environment variable is with this module for best more or less for best experience or best output with plus or IDP package with k two. Adding this module gives node operators an added advantage, because plus with k two has added features where you could claim rewards, natively delegate and then also even exits or withdraw your validator, all with requests to the module on your node. Similarly, these modules emit events through plus where for instance a claim.
00:41:38.674 - 00:42:33.220, Speaker B: So is it like with the consensus clients or even the execution client, they have local servers and you can query certain data points, but it's up to you whether you want to expose that externally if you want to. For example, it should be possible to maybe via an app, whether it's like the Beacon chain app or like your own custom app, you could like on the go claim rewards, right? And the good thing is you don't have to like you wouldn't have the signer on your phone, right? You're just triggering an endpoint to your local node that you set up securely and that has the, like the signer and everything injected there securely on your node and that can do the transaction to the smart contract to claim rewards and, and perhaps you need that money for, I don't know, I don't know, maybe you're buying groceries with it. I don't know what you need. But the point is that it's possible, right?
00:42:33.372 - 00:43:21.772, Speaker C: Yes, that's correct. And all you could contain everything within your machine and not expose it externally. Just maybe you have a shared network locally which you run operations where certain participants can claim from running or having access to your node. That too is doable. It just makes the whole process much more simple and automated from your secured node system. Similarly, with the way plus is configured this, there are events that can trigger notifications to other modules. And we believe this piano module can leverage events like reward claiming to process redelegation if your, the balance has increased, for instance.
00:43:21.772 - 00:43:24.044, Speaker C: So from the get go, the more.
00:43:24.084 - 00:44:10.838, Speaker B: Wait, wait, wait, wait, wait, wait, wait, wait, wait. You can't drop a bombshell like that and not, wait a second. So you're saying, okay, you're saying that you, okay, so on the natively delegation side, right, you have natively delegated to the k two, which is one protocol in the rest taking cloud. Now you're earning rewards from that. Then you can redeposit that back into the k two to get a larger unified ETH balance. Then that increases your available liquid delegation balance and you can liquid delegates to some node operators in the node cloud and you increase your rewards. So you're increasing your rewards in both protocol at the same time.
00:44:10.838 - 00:44:44.136, Speaker B: But it's like, it's possible to do this from MeV because like you said, they all communicate via the core. They can talk to each other via messaging, right? So they can ignore messages or they can subscribe to messages. And you're saying like basically one module can say, hey, I've increased the K two balance and the PNO module might say, great, I'm going to liquid delegate to my favorite node operator and you earn more rewards on both sides. Okay, okay, okay, okay.
00:44:44.240 - 00:46:45.632, Speaker C: So depending on, ideally, depending on how you configure these modules, you won't have to even like intervene in the is processing, and you can have a structure where you have this consistent revenue flow to your preferred node operators, even from your node operations on your keys itself. So on the get go, this module would of course start these, these configurations, and there will be a need for a wallet key to perform these on chain transactions. The idea is, even with these modules, which we have put out there, the native delegation module, if you do have a wallet specific for all your on chain interactions, you can share the same wallet key environment, or you can pass specific wallets for each of these modules to perform these operations. So once this is configured, you have a server, as Vincent had mentioned, the k two native delegation has a server to perform other on chain activities. But similarly for piano you have this server available to you to redelegate any balance either from your k two liquidity or your native delegation to any node operator, but also to self as well. So the background tasks running within this module is the epoch following by the module on your beacon node to redelegate to self any available balance to your own node operator address within the registry. As I've mentioned, if you do have just a connection by beacon node URL, you won't need to have your MVPleus software specifically configured for builder proposals, you can just use this head tracking event or for many who may have already configured plus as a proxy software to their node.
00:46:45.632 - 00:48:18.714, Speaker C: These registration messages that emit from your node periodically are used by Lex Ed native delegation module, but also can be captured by the piano module to redelegate any available balance if available. So just quickly to give you a rough idea of what redelegating your balance would look like. So the idea is just to have your balance working in some form without it sitting idle. So the idea is to attain your available delegation so far from you being a node operator, calculate like your capacity to delegate the amount of ease you've provided a security within the protocol, and then see if there's any balance left that hasn't been redelegated. Bear in mind, these are all operations that would happen on chain execution layer, operations that will happen once you set the auto redelegate flag. And in simplicity, if there are any balances available to delegate, the module would redelegate to yourself the available balance within your native delegation capacity. So on the higher scale, this is one of the base features coming out with the very first few releases and the potential functionality to leverage off of the native delegation module and the builder API to automate redelegations if possible.
00:48:19.974 - 00:49:19.094, Speaker B: Do you think like, so that, so that covers the liquid delegation. So in the future, do you think we can, we can also automate like. So obviously there's two sides to this coin. There is the liquid delegations for the node operators and then there is like opting into the like different k networks, right? So I guess either they can have like a preference sheet, so they might have like, they might have like a not preference sheet, but a preference file. They might list out in that file all of the K networks that they're happy to opt into. And that is like, you know, that can be like reloading, right? So if you make changes to the file, it can reload that file without you know, without restarting the module. But equally we could also have a server where you basically say, yeah, I've just seen this new K network come online, let's go to that one, offer the services there.
00:49:19.094 - 00:49:50.374, Speaker B: And I guess as well, it's not impossible to even have the, if you opt into a specific K network, it might say, okay, well here's the software you need to download. And you can either run that in an automated way in plus, or basically be redirected to download it somewhere else. Right. So like in terms of, this is a great, like what I'm talking about is a distribution channel here using plus, these kind of possibilities are there.
00:49:51.074 - 00:49:51.618, Speaker C: Yeah.
00:49:51.706 - 00:49:54.146, Speaker B: And even via smart contract coordination, right?
00:49:54.290 - 00:50:23.182, Speaker C: That's correct. Even your filing, you could specify some, some ratios to which you want to apportion, your liquidity to the different pianos you want to apportion. And feel free to change if possible, and possibly any available balance, you can batch these delegations to the appropriate note operators and those specific ratios. That's also doable. This module.
00:50:23.358 - 00:50:53.002, Speaker A: So this is for. Yeah, the delegation. This is what I'm thinking is like, you know, a p and o could be a p and O. Like I'm a preferred not operator. I have x amount of tokenized stake weight on k two. And you know, I basically delegated half of it to myself. And then I just said like, you know, I'll just do the half of it to some others.
00:50:53.002 - 00:51:07.254, Speaker A: Right. So I'm a delegator, I could self delegate. I can also delegate to somebody else, but I'm also a piano, so all kind of combinations can come in. Because an actor could take multiple roles.
00:51:08.674 - 00:51:12.054, Speaker C: Yeah, that's, that's, that's true. Yeah, that's correct.
00:51:12.874 - 00:52:23.342, Speaker A: Interesting, because a lot of node runners run their machine for, you know, multiple kind of, how do I say this? Multiple economic groups. I would say that means like for example, you take stake ly or stake, you know, p two, p and in stones and all this kind of like in a big, big node runners, they are offering node running as a service. They could be serving Lido, they could be serving a solo sticker, they could be serving an institutions, they could be serving that. But then, you know, all of them are associated with some BLS keys, right? And then it depends on the earnings. So some contractual rule, if you are serving for some staking pool, like a rocket pool or you know, lido kind of stuff, sometime you may have some obligation that you cannot take other kind of economic choices without the approval of that, the Dao. So it's the dao own, for example. The Dao owns it, right? So dao need to give a go ahead and then only the node operators can actually restake or opt in for other kind of stuff.
00:52:23.342 - 00:52:59.728, Speaker A: But as a nod operator, they can register it. They can, they are who they are, right? Their reputation is independent from different actors. They are providing the service. And if I'm. If I'm an operator, I'm serving all this kind of guys, though I may not be able to bring all of my not operator, you know, serving validators into my, you know, balance. As a p and o, people still know who I am and then I can still start like, you know, this is my business. I'm a PNO operations.
00:52:59.728 - 00:53:13.314, Speaker A: If I'm just. I'm using air cords. Dao because Lido. Dao because Lido is like in a very established business model. Model curating high performing node operators, right? And that's how they do it. So. Oh, yes.
00:53:13.314 - 00:53:50.858, Speaker A: But I cannot bring any kind of validators from Lido without the approval of the route. That's great. But I can, like I'm an auto operator, you can actually see all my history. I'm a known actor, I'm setting up this and you can delegate to me, you know, how I run the business. My history and reputation is tethered to me. And anyone can now delegate to my PNL operations and they will receive the rewards automatically. Now, I may have an institutional services on the other side, so I'm just offering, not running service to some of the institutions, they can just give it to me.
00:53:50.858 - 00:54:31.998, Speaker A: That's their choice. So it's really the user choices to which Nord operators they are delegating and they're getting the rewards. Nord operator is just doing their work running a machine. And if they have their own money, and then it's their own money, and they can self, self delegate. So end of the day, this kind of withdrawal rights, who is the ultimate holder or the rights holder is basically the guys who actually have economic agency, full agency on the rights, on the stake. But the P and O is getting all kind of the reputation derived reputation from Ethereum network. If they're doing good, if they have done great, that's great.
00:54:31.998 - 00:55:47.624, Speaker A: But the reputation could also be very subjective. So in this case, you are a very heavy weight node operators that we explained. But you could be a teeny tiny note operator, right? A single solo sticker. You're running a DAC node, you want to set up something, you're in Argentina, shall I say Argentina? But I don't know, I'm not Argentina, right? Or someone from Africa. And you know, a lot of services that they really need decentralized security, right? So they want to, they want to onboard a lot of crypto on ramps and off rams or providing image security maybe, you know, a kind of, some sort of services like, you know, providing like helium kind of thing, Iot devices, you name it, AI running in a, you know, just run a mitral on a cloud computing and providing in small AI llm for your own things, like for your own languages and things like anything can be like reinforced and provide an MPC services for onboarding, that kind of trustless self custody things. But what do you need? You want an approachability and say, hey, I'm an ethereum node runner, I have some other small machine. But you know what, I could help you.
00:55:47.624 - 00:56:27.706, Speaker A: I could reinforce your business. You just give it to me and then I'll just write a profile. This is what I'm writing for, and I'm serving particularly to bringing this kind of financial inclusion for Argentina or in Africa or elsewhere. But I have the, I am the first. This is called the last mile delivery to the value chain. So I am the connector to all the services. I know I can make an informed decision about what they're doing and impact, and it can write up small write up, right? And they put it on now ethereum delegators can just simply signal it, yes, we want that to be, you know, to happen.
00:56:27.706 - 00:57:13.514, Speaker A: So it's just a beacon of economic proliferation of decentralized technologies. So nobody should stay at the bay and say that we want to do it, but we don't have it fast. So this is like one of the key element of the node cloud. It's really a cloud anyone could have. At least one validator can register free for PNL, but your opportunity is unbounded. The more creative, the more active, the more assertive, more aligned you are to support the decentralized feature, support anything that will help people to have self custard assets or blockchain enabled services or web3 enabled services. Could be nfts, could be social, it could be running a small machines, it could be IoT.
00:57:13.514 - 00:57:38.580, Speaker A: You have a place that you can come and ask for delegations and they will be readily available. You have 70 billion worth of ETH readily available and people will give it to you. And this, the whole supply chain is completely flushless. So the delegations who are made is liquid. That means they don't have to worry about you're going to do something bad. And then they will lose the money. There are a lot of protections there.
00:57:38.580 - 00:57:43.304, Speaker A: Am I making sense here? Like, I'm just trying to give you the picture how this is going to be working.
00:57:43.904 - 00:57:56.936, Speaker B: It really feels like it's leveling the playing field for anyone to start a node running business. Like you said, you could be a solo staker. Right. And you can have values that people align with and people can support you. Right. And you can start to grow your business. Right.
00:57:56.936 - 00:58:07.124, Speaker B: It could be, you could then, you know, from the incoming, you can set up more, you know, more operations from that. So I think that's, that's really interesting.
00:58:08.344 - 00:58:12.074, Speaker A: Incentive alignment for long tail actors to grow.
00:58:12.154 - 00:58:16.174, Speaker B: Right, right, right. Exactly. Yeah. Exactly.
00:58:16.594 - 00:58:17.362, Speaker A: Okay.
00:58:17.498 - 00:58:18.454, Speaker B: Which is great.
00:58:19.794 - 00:58:26.854, Speaker A: Anything else? Any questions? Liquid delegations for liquid yield. Right?
00:58:29.434 - 00:58:33.294, Speaker B: Yeah, yeah, yeah, that's, I like that. It's a nice way to summarize it.
00:58:34.434 - 00:58:49.274, Speaker A: All right, so if there is nothing, then we're going to, going to wrap it up and we'll see. People can just go and download piano soon on our docs. There'll be enough information and maybe, plus we'll get the new release and it's expanding.
00:58:49.814 - 00:58:53.234, Speaker B: Yeah. And we'll see people on the next walkthrough, which will be soon.
00:58:54.174 - 00:58:59.994, Speaker A: Oh, I can't be more excited about that one. All right, cool. Thank you, guys.
00:59:00.694 - 00:59:03.014, Speaker C: Thank you. Bye.
