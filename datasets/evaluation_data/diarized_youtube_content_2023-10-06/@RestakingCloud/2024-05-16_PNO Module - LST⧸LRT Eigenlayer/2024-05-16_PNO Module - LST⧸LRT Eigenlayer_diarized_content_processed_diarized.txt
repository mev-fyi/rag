00:00:03.880 - 00:00:42.640, Speaker A: Nice. Okay. Hey, guys. Myself and Matt here are back with another walkthrough. Just buy a side chat about preferred node operations. What does that mean? How you can take advantage of it, especially if you're a user of an LST protocol, an LRT protocol. What does that look like in terms of opening new restaking markets? So this is a conversation that will intersect many things.
00:00:42.640 - 00:01:14.468, Speaker A: It will intersect liquid staking, restaking, restaking markets, slashable security, all these good things. So we want to really talk about, so if we go into it, in summary, we want to talk about this preference based stake delegations. So how as an owner of state ETH, can you express preference for a node operator that it's going to work in a restake market for a restaking application?
00:01:14.636 - 00:01:18.224, Speaker B: What is a preference? Like, how do you define a preference, if I may?
00:01:19.164 - 00:02:08.464, Speaker A: Yeah. There's multiple approaches to do this. You can do anything from issuing a statement that is kind of like a sandbox for what somebody that receives a preference can do anything from that to signaling. So you can signal and back with, in this case, with capital, an entity that is reliable, you know, trustworthy, all these other things as an entity that's going to work for, you know, work with your capital to grow that, to access more, more yield. In the long run, that's what you want to do. You want to put your capital to work your stake teeth.
00:02:08.624 - 00:02:23.144, Speaker B: Okay, so if I get this right, a preference, like, I'm just going to use a very wide non concept is like the intent and things like. So it's not an intent because intent is like you just give one time and then someone actually fulfilled that, right?
00:02:23.444 - 00:02:25.364, Speaker A: Yeah, that's a partial transaction.
00:02:25.524 - 00:03:04.702, Speaker B: It's like a prompt, like, you know, you give. But this is like what he's saying, the preferences, I. You're giving an assigned right to a third party. In return, they will, they will do it as based on what's your preferred outcome should be. And that preferred outcome is like, you know, in this case, it's like, hey, I'm gonna give you the steak, I'm gonna give you my eat, and you stake it with the Ethereum. And then you also do XYZ for me. And it's like, yeah, we will do it, but you don't know they will do it or not.
00:03:04.702 - 00:03:41.906, Speaker B: And there's a lot of if and if. So the preference is more of like, you know, very generic statements that you can encode. So the reason that you don't know what you, you know, would, what if they will not, you know, the, the path dependency diversion happens. You say like, you know, oh, they're not doing it. How do you enforce your preference? Because you already given the preference and you give the capital. So now you need to, as you said, the signaling, you need to prove you're indeed the owner. You're into the ultimate, you know, the, the owner or the principal agent rights.
00:03:41.906 - 00:04:29.274, Speaker B: The agencies fall back to you. You could enforce your preference at any given point of time if you can prove you're indeed the owner. That, who have expressed that preference in this case is like when you give to a staking pool, you will get an a deposit token that is called an LST or an LRT in this case. Right? So a degree backward before it become a stake and you have an LSD and there are protocols that actually do this kind of preference for, you know, you will only get the asset. And then once you have an asset at stake, you get encoder preferences, like stakeouts that, that has like you can actually, you know, do the preferences as much as you want because it's not like backward, it's like much forward, like restate.
00:04:29.594 - 00:04:30.762, Speaker A: Yeah, yeah, yeah.
00:04:30.898 - 00:04:55.974, Speaker B: You can have an LRT and Lst. LST. So the, the preferences could also be layered upon. I don't want to get into. Too much into the generality of, of the preference, but end of the day if you want to enforce a preference, you need to prove you're indeed the person who has a right to overwrite a preference that has been, you know, encoded in the first place.
00:04:57.834 - 00:05:45.164, Speaker A: Yeah, absolutely, absolutely. So different protocols, you can do that via protocols or directly yourself. Different protocols will spin up on this. A non restricting example in the DeFi world is to give your, rather than creating a liquidity position directly in Uniswap, you may give your capital to a protocol that will do that on behalf of you and you express your preference on how the ranges should be managed. There's range based management, so it's no different here. You're expressing a preference on how the capital should be used, which node operators that you want your capital to be used by, and which networks they need to be working in. Right.
00:05:46.224 - 00:06:29.710, Speaker B: This is actually a good point that you mentioned about the range you want to set. You're indeed in the same pool, but you can actually give your LP's through to a range manager in a Uniswap v three and say that you define the rules and then this actually going to get me better returns on my LP's. But there's a small caveat here. In a normal defi is kind of like you can reach good if they don't do that. Yeah, that's like a very limited preference that you're still giving. Like it's a one time statement, but in the delegation it's kind of voting analogy. Like, you know, of course the preference actually came from the statement from the Beijing.
00:06:29.710 - 00:07:38.540, Speaker B: We can look into that later. But the thing it is like how do you, how do you make in a representative governance, you, you choose an election, you choose a leader, and to choosing a leader, there should be an election, a delegate, right? So you choose a delegate and the cost of choosing someone to do something for you is always more expensive than doing that once or two. Like the delegate will vote and on behalf of you, they will exercise the voting power that's accumulated all kind of stuff. So in the earlier example that you said the LP's has been given to a manager, a range manager, and if they are not performing, he can rage quickly. But the preference is a bit more than that. You can still, let's assume that you're given a, an amount, let's say a million dollar right into a call processor rights, some sort of smart contract. You know, strategy says that I will do XYz, right? And I will do XYZ if the price goes up.
00:07:38.540 - 00:08:35.594, Speaker B: And I will always, always follow this market, I will follow the emission rates of ETH, I will follow the better extended markets. But you think they're not doing, they're not up for the job, or you think you're better to give this to someone else and they can manage this in a better way, but you still need to keep the original service provider that you have engaged for doing partial work, or they can still do whatever they want to, but you still have the control to optimize it. And that's the beauty. The thing it is, you can still enjoy the range is not performing well. It's not preferred outcome that you're expecting. They're doing everything they can, but it's not good. So in a very naive way to think about is like you and me having some money in a bank account, right? And I put like one hundred k and you put like 150k.
00:08:35.594 - 00:09:37.194, Speaker B: Both of them are protected by whatever the, you know, the FidIQ and all this kind of stuff. And a year later, the bank have a lot of services they offer. They have some trading, they have some isa, they have some, you know, stock markets, investments, mutual funds, but that's just the bands they're providing. But you think like, I'm not sure about this but you know, I can opt into all this kind of stuff and this is like if you're part of this and we will, we will do, we will manage your money and then you have your wealth manager from the bank and yada yada, yada, but your relationship starts that you are using the banks for. The first preference is manage your assets there right in a balance sheet. Now you want to give an extended right to a different asset manager. Your wealth is still sitting in a bank of America and I have appointed someone who can manage it behalf of me and I've, you know, he's going to give better traders and things like that.
00:09:37.194 - 00:10:18.324, Speaker B: I know the risk but I have pointed someone or I myself is going to trade with my money and a year later my 100k has become two hundred k. And your 150k only made like 25 175. But we both use the same bank as base. Right. So this is like the preferences. Like how can you optimize your existing capital that you state with in a multiple layered service providers not rage quitting. You can still enjoy the benefits but you can still enforce your preference rights and you can get closer to your preferred outcome and everybody's preference is different.
00:10:18.824 - 00:10:21.284, Speaker A: True, very very true.
00:10:22.424 - 00:10:45.724, Speaker B: Yeah. So everybody's winning. Like the service provider here, they get their money. They're just doing, they're trying to optimize it. But you know the users can still add additional layers but in that time those earnings goes to them directly. Where I said the BofA, if I do the trading, those comes to me. You know, maybe I'm earning with my cap.
00:10:45.724 - 00:11:01.996, Speaker B: But you still manage the capital. I still authenticate my account balance with the service provider and say that the traders know that. Yeah, okay. Indeed he has a bank account. It's been in our system, it's plugged in. We can get the money whenever it needed. I can give you some leverage here and there.
00:11:01.996 - 00:11:04.504, Speaker B: I can give you more services and all this kind of stuff.
00:11:05.204 - 00:11:07.464, Speaker A: Nice, nice, nice, nice.
00:11:08.084 - 00:11:13.464, Speaker B: Okay cool. We're getting, we're getting like a little bit.
00:11:14.564 - 00:12:14.574, Speaker A: Yeah. No, no, but it's good. So in summary, right, we're just saying that we have, that PNO has the ability to offer the rest of applications e slashable security for outside networks. So that's the benefit. You have the state eth that is being made available for outside networks and those outside networks are willing to pay some utilization fee for that capital that's been given to preferred node operators. So a user is not directly allocating that to any, any given network. They're allocating it to operators, and if the operators are not performing as expected, that is an adjustment that will require an adjustment of the earnings, basically.
00:12:14.574 - 00:13:46.580, Speaker A: So something you mentioned a few seconds ago, Matt, was about authentication, and I think it's a really important point is how do you authenticate balances in the system so that services can be offered to that state? We have a visualization here if we go lower level. So what is happening at the chain level on ethereum, and we think about what is happening here when staked ETH is being registered. So you have an ethereum deposit contract that will register BLS credentials on the consensus layer with a minimum of one ETH deposit. So in most cases the validators are being registered and activated with a 32 e balance, but you only need one ETH. So that is just like to record credentials. Then consensus layer, once it receives the minimum required induction balance, will go through the process of activating that validator. And we will add the consensus layer, will add that validator to the append only list of the so you have a validator list and that validator will exist in the consensus layer.
00:13:46.580 - 00:15:03.224, Speaker A: State consensus layer will track, will then activate that validator to do work for the application consensus layer. There is voluntary exit here in that process, and consensus layer is managing all of that within its boundaries. So authentication on the Ethereum virtual machine is about making that stake available for use inside of the execution lamb. So execute. So what you have here is a single direction of communication at the start when the validator is registered on the consensus layer and ETH is attached to that BLS balance. That is a one way communication from the deposit contract into the consensus layer, which will then vote on the incoming deposit, add the validator to the validator list, and then that validator can perform activities based on that state ETH, but that is not replicated back to the ethereum execution lamp. So that is now taken care of by a credibly neutral stack.
00:15:03.224 - 00:15:30.638, Speaker A: Proof neutrality has a proposal registry which is a single sign on for all of the validators on the consensus layer. So it's basically a look up table for validators with a status. And the validators in that list are either active or removed from time to time when they become inactive on the consensus layer. So any updates on the consensus layer will reflect on the proposal registry.
00:15:30.806 - 00:16:08.430, Speaker B: So would you say that this is more or less like, you know, an open banking where if your banking credentials, the financial data is accessible by third parties, and that third party protocols can use it to deliver better financial services for the customer that we all benefit from it. And there's a lot of other, there's a lot of benefits like challenger banks and things like, the key part is like you get this kind of aggregated results and you have authenticated data and you can pin it back to a user who is who and what is what. In this case, it's like the validator registry that gives this whole thing on the EVM.
00:16:08.622 - 00:16:48.002, Speaker A: Yeah, yeah. So open banking is a great innovation. It's a really good point. It's the ability to sync all of your banking accounts into a single location. Like you said, for a variety of reasons, fintech Challenger banks are able to leverage that information to provide services for people to manage their money more easily. There's a whole host of other benefits to that. The proposal registry is that open API, other smart contracts can actually interact with validators.
00:16:48.002 - 00:18:16.756, Speaker A: We're talking about the programmability of validators here, and basically anyone able to hook into the proposal registry in order to understand what is the aggregate amount of staked ETH that can be remarketed outside and which validators it comes from. You can pull that, you can do all kinds of things on top of this, but this is the open API layer looking up ethereum validators. I think it's, I think it's a really good point, though. So in the so validator authentication forms this basis, so validator authentication in the proposed registry, which we're saying is analogous to the open banking layer, that forms the basis of what is required for the notepad piano operations to work. So every validator that is authenticated in the proposal registry increases the delegatable balance. When you're expressing your preferences, you're doing that through a delegation to a preferred node operator. So that's what we're calling the piano now.
00:18:16.756 - 00:19:09.730, Speaker A: You can only express your preferences on the basis of balances that have been authenticated from the consensus layer. So this allows you to build applications without. So the authentication part is in part based on the, we have the beacon block route in the EVM, we have all that nice magic EIP 4788, we have all that stuff there. And that ensures that the data can be made available in a smart contract without having to use proofs all the time. So once it's authenticated, then you get an aggregate balance from all of the validators that have been authenticated, and you can use that balance elsewhere in as simple as using an ERC 20 balance. We've seen all kinds of applications on top of the ERC 20 standard, so.
00:19:09.882 - 00:19:45.476, Speaker B: But there's a difference this is authenticated, mapped, and it's kept in real time and on EVM regardless of what is the history. So you always get this kind of, even you taking AP 478, it just gives a stateroom. But this is like more granular level. Like each and every validator entire lifecycle has been encoding to a registry. And you will get that. The latest tip, latest balance, like, you know, how do you know that the latest tip of chain rights and it just kept, kept appending, appending. So the history is aggregated and appended all the time.
00:19:45.476 - 00:20:33.004, Speaker B: Effective balance is there, there are certain rules if you want to add it to a registry, there are certain health reasons, like if you think it, I'm just falling back to the open bank. If you're like someone who's like, you know that some sort of constraints and things like you still have that, but you will not be able to get some certain services. So this gives more programmability, more rich service that you could provide to the stakers and those representing those stake tokens. And that's more important and one degree backward. You will get into that for sure. I know that, but just want to mention it, just when you have this kind of completely eat stake authenticator, you can remap into other kind of assets that you mended for those things before or afterwards.
00:20:34.144 - 00:21:12.642, Speaker A: Well, yeah, so if you, if you're holding a token, absolutely. This is a really important point. If you're holding a token that represents a validator stake on consensus layer somewhere. So we're talking LST lrTs, where the underlying ETH has gone to the Ethereum deposit contract and created validators, whether it's created in a pool. So you hold a token that ultimately represents a stake in a validator somewhere on the consensus layer, and therefore you hold the right to authenticate the validators associated with that token into the proposed registry.
00:21:12.738 - 00:21:38.710, Speaker B: You can have isolated slashing within a staking pool because you can just, you know, curate the set of the validators and just give the LRT tokens to the positive and just extend those things. And then you can only slash them. You can have partial delegations, you can have partial slashing or isolate slashing and things like you can have your own pools. And because you have all the ledger has been replicated here.
00:21:38.902 - 00:21:48.234, Speaker A: Yeah, let's talk about that. Let's talk about the origination of a slashing. That's really important to understand.
00:21:48.574 - 00:21:57.354, Speaker B: Maybe better that you explain what's the key difference between NLST and LRT? There's not much, there's only one or two. What is the difference between LST and LRT?
00:21:57.774 - 00:22:49.074, Speaker A: Yeah, so an LST takes ETH and uses it for a single purpose, and that is to create validators on the Ethereum consensus layer. And often those validators are pooled and the yield is socialized amongst all the token holders. You get a midnight airdrop and that kind of thing. The capital has only a single use case there. An LRT aims to make the e 30 staked available for other restaking markets. But as of yet, we have not seen as of yet. I would say a lot of LRTs are mainly behaving like LSts at the moment.
00:22:49.454 - 00:22:58.994, Speaker B: Only difference would be that you give a preference with a commitment from a protocol says that we would definitely get you additional yield.
00:23:01.014 - 00:23:14.418, Speaker A: Yes, but it's not specified how and where. And ultimately the LRT token holders don't have a seat at the table sometimes to express that preference of where it should be. Um, right.
00:23:14.586 - 00:23:23.814, Speaker B: You used like for example in a rocket pool, an Reth holder, an auto operator could indeed do rest taking as of today.
00:23:24.474 - 00:23:25.210, Speaker A: Yeah.
00:23:25.362 - 00:23:55.654, Speaker B: If the rocket pull dial is not going to enforce a slashing from their side, that they do run and then they can get slashed. Right. But it's in a similar way that I'm just taking the rocket versa as an example. And Lido, if the lido allow slashing can be injected and then given approval, they have the LRT. They just become risk taking friendly.
00:23:55.814 - 00:24:09.160, Speaker A: So this is like a protocol, like not a protocol upgrade, but it's a kind of, you can, you know, an LST can upgrade its status, you know, pretty easily with the, you know, just a proposal, a DAO proposal.
00:24:09.352 - 00:24:47.034, Speaker B: Yeah. So any protocol that has a withdrawal custody, like you have an access to that eve could be given to someone else and to disperse the rest of them. And all you need to remap the validators who did that. So this is why I said like, not operators of the rocket pool, because they have all the rocket pool not operators registered, they have the users running that. And then if they net preferred, not operators and things like that, if they're doing a rest taking note operator, they could indeed. They could indeed. Like, you know, anyone could actually participate in the restaking.
00:24:47.034 - 00:25:30.198, Speaker B: Re is a different story. But now you could, if there's a slashing is incoming rocket pool can just forfeit the re that belongs to the NAR operator rights or the RPL and things. But at the moment, you know, they will get slashed because of this single utility that you mentioned. Because it's the, it's more of a DAO decision that, do you want to have one single yield or you want to have multiple yield, multiple tiers? Yeah, yeah, yeah. So the LRT, LST is, from an architecture perspective, not very different. You just need to approve a slashing window. And if you can get.
00:25:30.198 - 00:25:41.834, Speaker B: That's why we enabling this. Like, anyone can upgrade an LST to LRT, you know, rest taking feature. I'm sorry saying NLRT's, but LST's could actually capture the rest taking market.
00:25:42.214 - 00:25:46.854, Speaker A: Right. And boost their yields. Right. So break past that 3% barrier, you know.
00:25:46.934 - 00:26:14.794, Speaker B: Yes. And you can enable the window and you can remap who has participated and how much to participate. This is the preferences that we're coming back into. And it's. But we're looking in this presentation, we might be looking specifically in the Eigen, because Eigen is one of the rest taking market enabler, where there's a lot of LST protocols docking into the eigen. And Eigen is doing that kind of slashing window for them.
00:26:14.954 - 00:27:12.932, Speaker A: So, yeah, so they are basically saying, yes, they're basically saying by starting out as an LRT token, we have ETH stake on the Ethereum consensus layer with an approval for ETH based slashing of, you know, for any, any offenses that, you know, they're known up front. The list of, like the. Normally it is very well defined in, for example, a proof of stake system, what actions will lead to the reduction of a balance. And normally it's not the entire balance. We've not seen any Ethereum validator lose its entire balance. Yet. Most of the time, if there is an issue like offline penalties being applied to a validator, they will.
00:27:12.932 - 00:27:56.704, Speaker A: You have this leak concept and an LRT saying that the ETH is slashable under certain conditions, whatever that is agreed with the markets that they opt into. And so this is no different for an LSP to say, okay, well, if an approval is issued, or any protocol says they'll give additional slashing approvals, then that will open up different restaking markets. And it's all on chain, all verifiable, the flow of the capital here. So we're basically giving any protocol a restaking factory here.
00:27:58.164 - 00:28:13.132, Speaker B: But things get actually very murky if you have an exogenous comedy or someone who can slash capital holders eth. Right. Without having any kind of skin of.
00:28:13.148 - 00:28:36.388, Speaker A: The game balances restrictions. Well, yeah. So what is the origination of us, of a slashing? Right. It's a delegation here. So a protocol can decide its, what is its appetite for risk here by controlling the amount of delegations it issues. It might have 10,000 ETH worth of delegations, but, you know, 500 is given at the start.
00:28:36.556 - 00:28:37.304, Speaker B: Yeah.
00:28:37.704 - 00:28:42.404, Speaker A: Which will define the slashing the existing risks.
00:28:43.944 - 00:28:48.364, Speaker B: Yes, go ahead.
00:28:49.664 - 00:29:58.474, Speaker A: Yeah, no, that makes sense. Cool. So, yeah, we can talk about Eigen based examples here. So this is along the lines of what we were talking about already, how you define an LRP token, how they're minted, etcetera. So we looking at Eigen layer as a restaking market enabler with a demand for custody of assets so that the ETH being withdrawn from the consensus layer is slashed on the way out for any sort offenses that occurred whilst participating in the various markets that are available. But that is not going to be the only restaking market out there. And the question comes is how this can be opened up to other restaking markets like P and O for the additional yield.
00:29:58.474 - 00:30:54.294, Speaker A: It's maximizing the capital efficiency here and putting the money to work in as many places as possible. So again, with an approval based approach, further markets can be opened and protocols are in control of the delegations here with the ability of the LRT token holders, for example, to be able to express preferences in the piano based markets. So typically what is happening with an Eigen based smart contract system is you have capital that is staked through eigenpods. Sorry, just 1 second. Now there is a restriction on the Eigen layer. So Eigen have an eigenpod manager, which is a factory contract called all the eigenpods. Each eigenpod creates its withdrawal credentials.
00:30:54.294 - 00:30:56.204, Speaker A: So it's a withdrawal credential factory.
00:30:56.374 - 00:30:56.992, Speaker B: What is.
00:30:57.088 - 00:31:06.684, Speaker A: Well, yeah, I'd say it's a withdrawal credential factory for allocating ETH.
00:31:07.104 - 00:31:12.280, Speaker B: And it is a smart contract address. That's what you're saying?
00:31:12.472 - 00:31:14.964, Speaker A: Yeah, correct, correct, correct. Yeah.
00:31:15.384 - 00:31:21.120, Speaker B: Have an EOA address as a withdrawal credential and then do bunch of approvals on top of it.
00:31:21.152 - 00:31:36.624, Speaker A: Right, right, correct, correct. Yeah, yeah, absolutely. So it offers programmability. It's, you know, and. Yeah. So that opens it up to restate markers, which is. Which is useful.
00:31:36.624 - 00:32:10.816, Speaker A: There are some conditions within the item protocol that the pods have to inform the main protocol contract, the pod manager factory. So it has to inform it about balance changes balance. You know, there's this balance sinking. So the pod manager just tracks for every Eigen pod the total ETH shares that are associated with the pod that have been restaked. Interestingly, the partial withdrawals are not restakable at this point.
00:32:11.000 - 00:32:19.524, Speaker B: What is the share, what do you mean by share? Yes. I do not hear any kind of share mechanism in staking with this.
00:32:20.384 - 00:32:53.924, Speaker A: Yeah, yeah, it's kind of. It's. It's a. It's something internal to Eigen, and Eigen is tracking. So for a validator that's created through an eigenpod, and the withdrawal credentials are assigned to that eigenpod address. The pod manager, the factory that created the pod will represent those that restate eth as it has a share tracking mechanism. So.
00:32:55.704 - 00:33:31.004, Speaker B: When you say share, is that a share of old? Like, I'm just trying to understand the share mechanism here a little bit better. Yeah, I don't know you know about it, but just like, just trying to get to the normal definitions of a shares is like you have 100 shares has been issued, and out of that you have 20 shares. Is that so? Or is it just arbitrary numbers? Say that you have x amount of shares of what? Like, of what is the share is that.
00:33:31.304 - 00:33:59.234, Speaker A: It's a pseudo eth balance. It's supposed to represent the e three staked in an eigenpod. So it's not really a. Yeah, there's no share relative to, you know, the total amount of each staked in the protocol or anything like that? I know exactly what you're. Yeah. What you mean, but no, this is more of a representation of an ETH balance. So it's not really strictly classes a share in the traditional thinking.
00:33:59.394 - 00:34:04.174, Speaker B: Yeah, the shares, then you have this kind of solvency rules can comes in, right. In the form of verification.
00:34:04.744 - 00:34:14.528, Speaker A: Yeah, exactly. Exactly. It's more. It's more like your delegation capacity as a pseudo balance.
00:34:14.576 - 00:34:49.964, Speaker B: So, yeah, okay, fine. That's, that's great. So related to what? So you have balance of someone. So you have my account balance in one bank and two bank. And you can actually have my whole, you know, wealth balance, but you can actually have like, a single account balance in a one bank, or you can have a single account balance in an account category, like checking account change account, blah, blah, blah. Like, what is that pseudo account balance tether to? Related to? Is that a credential?
00:34:50.984 - 00:34:53.084, Speaker A: Uh, it's tethered to an icon pod.
00:34:55.104 - 00:35:08.594, Speaker B: Oh, okay. So you have a smart contract address generated by a factory, and you have pseudo eth balance that you can. Curious pseudo eth balance to that smart contract address.
00:35:08.894 - 00:35:10.190, Speaker A: Yeah, yeah, yeah.
00:35:10.262 - 00:35:12.034, Speaker B: Okay, okay, now I get it.
00:35:13.574 - 00:36:03.616, Speaker A: But there is a limitation in that. So Eigen will say that you cannot deploy more than one pot for an Ethereum wallet. So every eigenpot is it as a pot owner and in an LRT protocol, this is a smart contract. So LRT smart contracts are eigenpart owners. But an LLT protocol, for various reasons, may want to deploy more than one eigenpod for customer fund tracking, whatever the reason is. So there, they have to use and get around restrictions in eigen layer by having. By having, like, proxy contracts to eigenpods.
00:36:03.616 - 00:36:32.134, Speaker A: So they. An LRT protocol can own multiple eigenpods via sub child contracts. So they, you know, they have to deploy, you know, the pod owner has to deploy like a little child owner 1234. And then each child owner can deploy its own podcast, and they're tracked by the eigenpot manager. So it gets, you know, sometimes a bit tricky to track the balances here.
00:36:32.914 - 00:36:55.874, Speaker B: It's like you have hundred save noticesafe addresses being deployed from the same era, and then each noisesave approve is connected to, like, each nosy safe has some eat balance. In this case, noises if actually have eat.
00:36:56.494 - 00:36:57.274, Speaker A: Yeah.
00:36:57.654 - 00:37:03.194, Speaker B: Let's assume that every nosy save has some sort of a pseudo balance attached to it.
00:37:03.494 - 00:37:04.414, Speaker A: Right, right.
00:37:04.574 - 00:37:12.744, Speaker B: And you have this kind of a hierarchical mapping, but you could actually tether it into one address, and you can actually have multiple.
00:37:12.854 - 00:37:14.508, Speaker A: So true. Like a shadow owners.
00:37:14.556 - 00:37:19.132, Speaker B: Yeah, right, right. That's a bit analogy. Yeah. Cool, cool, cool.
00:37:19.268 - 00:37:52.890, Speaker A: Yeah. So ultimately, these, the LRT protocol that has. That is a smart contract owner of these pods, that. That is the one that is managing the funds, but they cannot directly access the funds of the eigenpods. There is. There is delegation requirements and requirements for any capital coming out of an eigenpod to go via delayed withdrawal router. And that is enforced for all the posh withdrawals.
00:37:52.890 - 00:38:08.502, Speaker A: So all of the rewards earned by a validator are not being restaked. They have to be withdrawn. There is no inside of the icon pod. There is no attribution of shares for partial withdrawal. The only thing getting restaked is the.
00:38:08.518 - 00:38:18.554, Speaker B: Base 32 ETH, which is the same for every eigenpod. Or is the withdrawal router is specific to each and every eigenpod?
00:38:19.054 - 00:38:35.374, Speaker A: No, it's for every pod deployed at the Eigen protocol layer. So it's an ETH pool for ETH that is coming out of the system. The Eigen system. That's regardless of. Yeah.
00:38:35.874 - 00:38:40.414, Speaker B: All money actually goes into this withdrawal router. Single withdrawal.
00:38:40.874 - 00:39:24.784, Speaker A: That's where the sausage is coming out. So the ETH is going into. The ETH is going into the consensus layer via however many pods are deployed. You know, there's n number of pods deployed. So e goes via the pod as a proxy into the ethereum deposit contract, which goes into the consensus layer. But on the way out it's pooled and a delay of seven days is enforced, presumably, and I'm only making a presumption because we don't work for eigens, is that that will be used for slashing later to put everything in one place.
00:39:25.984 - 00:39:38.964, Speaker B: How does the sweeps actually can go there? It's going to be extremely hard to track the sweep amount if you pull it between credentials.
00:39:40.784 - 00:39:55.964, Speaker A: Yeah. So you basically, so the, well, the consensus layer data is stripped off and basically a queue of withdrawals is created. So it is just saying. So at the eigenpod level, once the.
00:39:57.704 - 00:40:05.256, Speaker B: Demand actually goes there, or just only the exit amount or all the amount, whatever the ETH is coming out, any.
00:40:05.320 - 00:40:33.544, Speaker A: From the consensus layer will go there. So if the validator has completely terminated operations on consensus a, everything will go into that. But the partial withdrawals will go there as well. But that's moved from the eigenpard into the delayed withdrawal router. If you get a partial cpo 0.05 e, the Eigenpod will say, okay, would later draw router mat is due 0.05 e in x amount of days time.
00:40:33.544 - 00:41:28.834, Speaker A: The LRT protocol, actually. So LRT protocols are spinning up the pods in the first place. And I've seen some protocols like they'll pre prepare the pods, so they'll try, and when the gas is low they'll try and spin up like 100 empty pods or something like that. Then later on they'll get utilized, ETH will flow through. It's interesting because you can actually bypass the pods and send the Eth directly to the Ethereum deposit contract. There is, the pod is just a proxy to the ethereum deposit contract. It's not recording any data saying, like there's no record saying, oh, I processed the deposit of BLS key, blah, blah, blah.
00:41:28.834 - 00:42:08.668, Speaker A: So it is, it is merely, all the part is saying is thank you for the ETh, I will send it to the deposit contract. It's just forwarding and. Yeah, so then after that one needs to, there's an operation called verify withdrawal credentials. So you invoke Eigen beacon oracle. So there is an oracle that you ask for the generation of proofs on beacon state routes. So they have their own, it's not a chain level proof. It's called a beacon oracle, not chain level it.
00:42:08.668 - 00:42:21.172, Speaker A: And yeah, that will verify it's an injected proof. Yeah. Correct, correct, correct. Yeah. On some, some withdrawal, yeah, some consensus day.
00:42:21.308 - 00:42:27.384, Speaker B: So how do you make use of this thing, which is very much wall guarding.
00:42:30.644 - 00:42:33.324, Speaker A: Like in terms of creating new markets.
00:42:33.444 - 00:42:34.144, Speaker B: Yeah.
00:42:35.284 - 00:42:48.236, Speaker A: So you know, simply, um, your, so your loyalty protocol, uh, would give an approval to a contract that can add liens. Uh, and you still need to get.
00:42:48.260 - 00:42:51.744, Speaker B: An authenticated yield balance. You need to track it.
00:42:52.524 - 00:42:53.916, Speaker A: Yeah. Right.
00:42:54.100 - 00:42:56.100, Speaker B: Well, out of thin air.
00:42:56.132 - 00:42:56.348, Speaker A: Yes.
00:42:56.396 - 00:43:00.454, Speaker B: Like that goes every rules in the smart contract in crypto.
00:43:00.874 - 00:44:01.470, Speaker A: Yeah, no, no, definitely. Well, yeah, delegations is on the basis of a delegatable balance. So it's kind of, you know, you know, in a similar way, you can create a validator if you, if you do, if you do a deposit on, you know, the Ethereum execution side, you can, you can create a validator on the consensus layer side. If you authenticate a balance, if you authenticate a consensus layer validator, then it creates on the execution layer delegatable balance and that delegateable balance can actually be used. That's like a capacity. So the more validates are authenticated, the more delegations that are possible, which means more earning potential. So if an LRT protocol has 100,000 ethics, but only 2000, you know, only 3200 ETH is authenticated, that is its delegateable balance and will cap its earnings.
00:44:01.470 - 00:44:22.098, Speaker A: Right. Compared to all of the validators in an LLC protocol are authenticated. So that is this side here. Right. But approvals can be issued independently. Approval says that I want to opt in into the piano markets and my LRT users will be able to delegate once there is delegatable balance. Right.
00:44:22.098 - 00:44:26.330, Speaker A: So that is what is authenticated here in the proposal registry.
00:44:26.362 - 00:45:34.782, Speaker B: Sorry, delegation, what I'm reading from you is just like, there is no special thing here. It just, you have x amount of ERC 20 tokens minted that has some connection to withdrawal credential or set of withdrawal credential that has, could have y amount of ETH at stake in consensus layer because it could different, different amounts. Now you, unless that you have an authenticated balance, that map back into that withdrawal credentials and the validator balances, you cannot have a proof of solvency for the ERC 20 tokens that has been minted in Ethereum execution layer. There are a lot of rules. Like, you know, there's a lot of inflate, there's inflated minting can happen. Like that's, you said that there's delay on eigenpour deployment, there's delay on approvals coming in. Some of them must not.
00:45:34.782 - 00:46:34.684, Speaker B: So you really cannot rely on any of the data on the manager, on the shares or the pseudo balance. You must authenticate the validator, which close lidar symbols to any other withdrawal credential as per the consensus layer rule. If you can authenticate, you can actually allow them to give an approval. So you really want to have a replicated ledger for the validator and their relationship to a withdrawal credential or the smart contract address in this case, because a withdrawal credential could also be EOA. So in this case we just filtering it out for smart contracts and then asking them to give an approval for giving the ETH for slash. So these are two different things. Like the, for the, in order to perform the delegation, the delegation could be performed by, natively by the protocol if they can authenticate how much their balance sheet is with the validators.
00:46:34.684 - 00:47:09.684, Speaker B: Now if when they were going to get a balance sheet, then the subsequent LRT or LST tokens can also enforce the delegations. That's really cool. Now you have dual preferences, right. The right back to the ultimate beneficial owner. Now how the slashing could be done because the LST tokens could deposit in a vanilla vault and say that, oh, you slash me. But they don't really have to do that in a delegation. They can, they only need to delegate and it could be slashed from the underlying ETh when it comes out.
00:47:09.684 - 00:47:27.424, Speaker B: That's more beneficial for, and you can actually expand your rest taking market to multiple, you know, level. The slashing at the first cases could go. That's, that's where the destaking is all about, right. The restaking protocol should approve the slashing, correct?
00:47:28.004 - 00:47:29.704, Speaker A: Yes, correct.
00:47:30.804 - 00:47:44.064, Speaker B: Otherwise it's an ERC slashing. You don't want that you can delegate with the ERC, enforce the delegation through the ERC representation token, but the slashing must be approved by the protocol that with the withdrawal credential owner. Is that correct?
00:47:44.644 - 00:48:14.806, Speaker A: Yeah, that's correct. That's correct. And that approval will basically check for any debts when ETH has been claimed. So you know, there could be thousands of pods and you're claiming e whatever the ETH has been claimed, partial, full, whatever, you know, that, you know, the debts are checked. Um, and uh, that is paid and then the, the rest stays with the, the protocol just like um. Uh, yeah, this is what we're saying here. So there's an ETh claim, you know, you may have approved from rt k two.
00:48:14.806 - 00:48:17.154, Speaker A: You know, there's all these kind of different protocol.
00:48:17.774 - 00:48:20.630, Speaker B: You know, the slashing rules before like, you know.
00:48:20.662 - 00:48:21.062, Speaker A: Yes, correct.
00:48:21.078 - 00:48:36.362, Speaker B: Before you, the delegation made like some of the slashing need. The whole delegated amount could be given as an approval, that doesn't mean that they can take all the money. No approved comes in. Some of them doesn't really need all the slashes. But you can really control the levers are like through the delegation, you can undelegate any time.
00:48:36.418 - 00:48:41.442, Speaker A: Right, exactly, exactly. That's really important. There's always an opt out. Always.
00:48:41.498 - 00:48:43.266, Speaker B: Yes, yes, yes.
00:48:43.450 - 00:48:44.774, Speaker A: So that's really important.
00:48:46.074 - 00:48:47.374, Speaker B: Cool, thank you.
00:48:49.214 - 00:49:33.268, Speaker A: So we can actually look at a case study taking for example ether five. So they have eth or they have RaPD eth as well, which is existing on some l two s. So this really does scale to l two s. If you have an LFT balance on a L2 for example, wrapped eth now as well, you can do your delegations there, um, with the, you know, as long as the, there is a authenticated validator as on the l one. And, and you can just issue the, the delegations on the l two and make your earnings from there as well. So that's not a problem here.
00:49:33.396 - 00:49:38.704, Speaker B: Well if you are doing it with the pon registry, you can actually read that from any l two because it's a registry contract.
00:49:39.364 - 00:49:42.100, Speaker A: Yes, correct, correct, correct. Simple read operation.
00:49:42.172 - 00:50:12.744, Speaker B: Yeah, yeah. And then you only need to give a slashing approval on the domain specific. So if you give that, still your slashing is, as I said, the delegation is the one that is controlling where you going to give it. So your lsts can flow to any l two s or any roll ups. And then if you just add it in op stack, Connell, like you giving an op stack and then you can approval, you can actually get that ETH from there on. And that's basically like a delayed claim. But you can submit a claim there.
00:50:12.744 - 00:50:33.978, Speaker B: You can also delegate when the only delegation can happen at the protocol level or by the ultimate beneficial owner of the stake, which is the LSTLRT token holders. If they, if they, you know, if I'm the LSTLRt token holder and I have like 10,000 either, it's like hey, protocol, I want to be retake my 10,000 eth, nobody can stop me, it's my eth.
00:50:34.026 - 00:50:37.474, Speaker A: No, no, no, whatever the slashing comes.
00:50:37.514 - 00:50:53.364, Speaker B: From my delegation, just take it from me, no problem. But I'm going to earn from that. That's my isolated delegation. And the protocols say that, oh, this slashing, this delegation came from this users, we can, will not give you that either. Fine, now you can get it.
00:50:57.544 - 00:50:59.800, Speaker A: Yeah, yeah. Agreed, agreed.
00:50:59.872 - 00:51:03.324, Speaker B: How does this work? Tell me how the interface works. This is pretty cool.
00:51:03.944 - 00:51:34.334, Speaker A: Yeah, I'm sorry. Yeah, like I said, there's some restrictions on the Eigen protocol side for how many pods you can deploy by a single address. So, EFI have been creative with. They have this concept of a node manager. So a node, node manager and node smart contracts. A node smart contract owns an eigenpod, but the node is managed by the node manager. So this node manager smart contract owns all the pods.
00:51:34.334 - 00:52:17.412, Speaker A: Sorry, can own and manage all the pods. But from an eigen perspective, the Eigen pods will individually point to individual node contracts and then be co managed there from. From the top. So top level, who can claim the ETH, who can partially or fully, who can exit the validators, manage the. All that stuff that is this guy here, the known manager, smart contracts, and any ETH. So any consensus layer ETH coming into the pods will get pulled via this node managed contract, which will. So like we said, the LLC protocol is paying for all the gas here.
00:52:17.412 - 00:53:02.244, Speaker A: It's paying for all the gas to prove the withdrawals, verify the withdrawal credentials, withdraw the ETH. Right. That gets moved when the ETH is being claimed, like partially ETH, and the full fully unstaked ETH that will get moved to the Eigen layer, delayed withdrawal credentials, and then later the LRT protocol will come back and pay for some additional gas to bring that into their protocol. So in the case of ethylene going into their liquidity pool. So the liquidity pool is there for receiving ETH from the creation of the ETH token. So it basically has a faucet when there's inbound money from outside, so not on the Eigen side. When there's money from users, it goes into liquidity pool and ETH is minted there.
00:53:02.244 - 00:54:10.668, Speaker A: And then when the ETH is burned, the liquidity pool is paying out withdrawal NFT holders. And that liquidity pool is topped up by the ETH coming from the consensus layer, which goes into the pods, pods that are managed by ether, by, via the node managed smart contracts, which owns all the different filed accounts, and they have their own. There's about 37,000, I think, validators on the ether five side. And, yeah, the idea would be for either the protocol to authenticate those validators or the LLT holders will be able to do that, because it is, you know, there is a mapping from pod to either by node manager smart contracts. So that's completely doable. So, yeah, so we spoke a fair amount about how things are working under the hood. This is just more technical details on that.
00:54:10.668 - 00:55:08.704, Speaker A: We have references to the implementations on Etherscan where these things can be sort of cross verified against. And like we said, that the pod manager is really just a withdrawal credential factory, which then will pull all the eth coming out of those pods into a, you know, delayed withdrawal router in the end. So what if. How do I basically. So we spoke about expressing preferences and, you know, various examples are given. You know, like you said, or, you know, one person might put 100,000 in a bank account, another person might put 150. But just because they put more money in the bank account doesn't mean they're going to earn more, right? So, you know, your, your expectations are not being reached, right? So you've parked for capital.
00:55:08.704 - 00:56:03.124, Speaker A: You don't feel like, you know, it's working for you. What is the way to boost this, right? And if you are parking your Ethan, I don't know, call it FLRT token, and they're not restaking or participating in all of the markets that they could be participating in, what do I do? Can I create a withdrawal NFT? Can I burn the token? How do I get my EtH back? And then where do I go next? And there's all kind of weird, all these different hoops that I have to jump through in order to actually restake my ether. Is there a simpler way of doing this, is the question really, so that we can get restaked capital in maybe some other form? How do we see this?
00:56:04.904 - 00:56:48.544, Speaker B: You're talking about a very aggregation, like, there's a fragmentation of LRT's and then you want to have, like, this could be analogous to checking account switching and open banking. Or, or you could have like the mint kind of like, you know, service providers, like fintech service providers. That's who provide you kind of, you, you know, aggregated. And they give you some sort of a score to you and then say, like, okay, you have this, this, this. These are in our network. We can give you some specific access to some products and we can aggregate all your balances. So you may have some tokens in e, some tokens in resi, some tokens in FE, some tokens in exe, some tokens in satter.
00:56:48.544 - 00:57:35.198, Speaker B: I don't know, a lot of, lot of tokens. If you can give me the mix and lp share, we would give you a combined exposure to a restaking market where other node operators can compete to get your delegations. So now you're literally like going for, you know, the optimized earnings from the restaking without taking much headaches on how to manage your underlying LRT's does that make sense? You muted cool.
00:57:35.246 - 00:57:38.686, Speaker A: So that definitely makes sense. Definitely makes sense.
00:57:38.870 - 00:58:16.974, Speaker B: And that could be for meanwhile this LRT's are pooled. You could actually allow this could be used for additional lending markets and things like that. Or all of this value that is capturing not only from the rest, taking from the lending for other kind of stuff. It will be prorated back towards you. So you have, let's say LRT is like two lrts and three LRT's a three. The water you eat, your convenience yield is getting more and more over the period of time if you just use this concept. Okay, makes sense.
00:58:21.834 - 00:59:12.944, Speaker A: What is pretty cool here is for the protocols that are participating in the PNO markets is that the is the ability to express preferences with the capital being held. So you may LRT tokens may change hands and the new recipient of the tokens may be very happy with the current configuration of delegations to pianos. But equally they may feel the performance is not as good. So they're kind of like a board, like a board of company. And the board might say, okay, well, things are going well, the company is being well run, but maybe things can be updated.
00:59:13.284 - 00:59:49.556, Speaker B: So you can always update your preferences if it's not the out, if the preferred outcome has not been met. You can enforce your preferences at any given point of time. That's what you're saying. And you can still share it. You can still share the delegations, but you can enforce your preferences as you are at any given point of time. That, that's the, you don't really have to rage quit, but you can still have like your own voice and your voice, that's cool. I mean the cost of, the cost of shared garnished lP's and things like you always have this kind of a dilution.
00:59:49.556 - 01:00:29.958, Speaker B: You always have the kind of like, you know, what is the, you never get a preferred outcome, not even close to 70%. You know, it's like, yeah, but what if I can optimize myself, right? That's the world. Capitalism is also all about that, right? You born it, but you could become anyone. You want freedom. So this is like, okay, you are here, you have some base allocation, but just like you could optimize it. And that's a statement. And doesn't mean that you have given to a service provider that you have to, you cannot do anything, you're not out of option.
01:00:29.958 - 01:01:29.952, Speaker B: You can, you always have an opportunity to optimize, to enforce your preferences. You can always go grow. But I had a question on the last slide then right right, this one or no, no, the one that, the slide before that you mentioned, nds and this thing is have a large pool. If a dex or an intent provider just basically going to borrow it. Like you have this kind of, if you want to have an order book, an RFQ should be preferred, not operative, quote unquote. And you delegate to that and they could have their LP's to get the delegations, the tokens. And you can, you know, you can have all this kind of a new kind of the intent based networks can be deployed and use this kind of one large pool of tokens and you get not only the rest taking security, but also the LP and then you pay for them.
01:01:29.952 - 01:01:38.384, Speaker B: So you have the LP's, you can give the LP's, you can borrow it from there. But now your LP hold is also securing your operations.
01:01:40.164 - 01:01:41.028, Speaker A: Yeah, yeah.
01:01:41.076 - 01:02:39.554, Speaker B: These are very lightweight operations like in rfqs and things like you don't really have to go to an intermediate, you can just directly do that operations here and then you pay them two ways. Like your LP returns is based on your volume and trading and things like that, but you're restaking it and just like in some sort of a meter right in your points or like not the points for cards like this, like real token accruals that you can redeem it later on. So that's cool because we see a lot of hybrid model of like you know, int in order books to get to two l, two s. And you can have like a shared deposits, you can have this deposit could be used for multiple l, two s. And you can do the bridges, you can have bridging liquidity from this and you know, and the bridges basically restake by the same LP's. And then you have the liquidity there. They get both, you get the revenue, they also get being an LP, but they also get the restaking revenue from that.
01:02:40.774 - 01:02:41.714, Speaker A: Pretty nice.
01:02:42.054 - 01:03:11.084, Speaker B: I just thought about it and he said like it, just because of the preferential delegation, you enforce it, right? The underlying tokens can enforce the restaking and which means the protocol who are actually allowing the deposits and accepting the deposit. LSTs can also enjoy the restakable security from there and they indeed return that benefit back to the user who are part of the community.
01:03:13.024 - 01:03:50.004, Speaker A: Nice. It's more user aligned. That's much, much better. Much better. So there's software available to make this more streamlined and available to validators for running additional software for the, the new restacking markets, but also to authenticate the balances if needs be. You know, that's the piano activation stuff. It's a layer, it's called MeV plus.
01:03:50.004 - 01:04:01.420, Speaker A: And it's a layer that allows programmability of validators that I think it will become quite an important part of the ecosystem. Really here, sorry.
01:04:01.572 - 01:04:06.464, Speaker B: This is base route. Like you can authenticate yourself, right, right.
01:04:07.204 - 01:04:14.344, Speaker A: But if you're part of a protocol, liquid protocol, then your token holders can also do the.
01:04:17.204 - 01:04:41.750, Speaker B: So all the LRT protocols can simply prove that, authenticate their balances on the peon proposed registry. Or you can initiate a solo sticker, just use a me plus. You could also, if you are an LRT protocol, you can assign someone to do that job for you. Authentication just from a normal operator side, but this is the base route, like permissionless, but just like you can also take.
01:04:41.862 - 01:04:53.554, Speaker A: That is good one to mention solo stakers are not normally participating in the restaking markets at this point. You know, like if you're a DaP node user, how can you participate in restaking, you know.
01:04:56.854 - 01:04:59.070, Speaker B: Inner module is available on DApnot.
01:04:59.262 - 01:05:29.764, Speaker A: Right, exactly. Yeah, exactly. So, you know, it's this just case for the long tail user and does not leave, you know, anyone excluded because there's not, you know, if the solo stakers are excluded from restaking and all these future earning opportunities, it's not good for the network because they may be inclined to unstake their validator. So that doesn't help the strength of the network. But yeah, this was a, yeah, I think this was a good discussion.
01:05:31.104 - 01:05:35.840, Speaker B: And I think PNL are available in Holisky, not in Mainnet, but you can test it out.
01:05:36.032 - 01:05:36.784, Speaker A: Yeah, correct.
01:05:36.864 - 01:05:43.264, Speaker B: Authentication can happen much more faster. Right, the PN proposed registry, correct, correct.
01:05:43.304 - 01:05:43.924, Speaker A: Yep.
01:05:45.504 - 01:06:18.784, Speaker B: So there might be some, some of the validators will actually get like, you know, you can have a designated authenticator for that. Just onboarding, just like your bank is connecting with an open banking, all the customers get benefit from that. Just like your LRT's can authenticate balance the validators and all the LRT token holders can benefit from additional earning potential for their, you know, tokens and will be accepted regardless on any chains. And l two s that is getting bridged, you can actually enforce it.
01:06:20.584 - 01:06:23.224, Speaker A: Yeah, exactly. That's correct.
01:06:23.384 - 01:06:26.720, Speaker B: Nice. All right, thank you.
01:06:26.872 - 01:06:31.504, Speaker A: Awesome. Yeah, see you guys on the next walkthrough. Bye.
