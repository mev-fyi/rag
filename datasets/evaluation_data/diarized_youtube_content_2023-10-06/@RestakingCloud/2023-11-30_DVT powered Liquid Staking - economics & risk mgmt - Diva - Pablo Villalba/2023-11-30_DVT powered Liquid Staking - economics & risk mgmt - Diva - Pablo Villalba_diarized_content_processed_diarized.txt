00:00:00.640 - 00:00:55.500, Speaker A: Today I'm going to talk about liquid staking, and especially permissionless liquid staking, and it's possible to role in restaking, and we're going to look a little bit into the risks of that. So I am a co founder of Diva. Diva is an unstoppable liquid staking protocol, and basically what it does is it delivers the same functionality as Lido, but with a completely permissionless node operator set. So you have on one side the familiar liquid stakers where you can deposit ETH, receive DB, and that works exactly like Steth, it's replaceable. But the new part here is that while other solutions, like centralized exchanges in Lido, rely on appointing node operators, in Diva, what we do is we allow anybody to run a node. The operations are powered by cryptography, not by governance, and are always secured by collateral. So anybody can join by simply spinning up a node.
00:00:55.500 - 00:01:38.750, Speaker A: So there's essentially three ways to use DbEth. You could simply hold it and get 4% rewards from the network. You could take that liquid staking token and degen things on Defi. So lend LP, whatever, or you can run a node and get higher rewards because the stakers are paying you as an operator. So you always have this choice of do I want to be liquid or do I want to lock it? So in this way you, you can already start to see how this, there's this idea of security. I'm locking my assets, I am locking my DB to run a node and provide security while I'm enabling a use case of liquid staking. So this is kind of an interesting primitive, and this can evolve into the thought of restaking.
00:01:38.750 - 00:02:07.502, Speaker A: So before that, diva today is pre launch. There's already $40 million approx. In pre launch deposits to kind of help this launch. There's hundreds of testnet nodes, 4000 delegates on the DAO. The way I like to think about this is originally there's the gold standard, which is ethereum proof of stake. Anybody can join, you need to have 32 ETH, but it kind of assumes a lot. It assumes that you're able to have the money, that you're going to lock it and operate.
00:02:07.502 - 00:02:55.128, Speaker A: And luckily we have a few solo stakers in this room. I can recognize you, but there's not enough, and that is because it's still very hard. So rocket pool made that a little simpler by giving single nodes the ability to post less ETH, to do only eight or ten ETH and get more from the network, but it's still run by single nodes. So what diva does is it uses distributed validation to cut things into smaller pieces and allow anybody to join from one ETH instead of ten or 32. So it will be launching in Q 120 24. Kind of the way you can think about it is liquid staking, like lido, that's economically trustless, like rocket pool and permissionless. And it adds DVt to kind of make the operations much more efficient and fault tolerant.
00:02:55.128 - 00:03:33.556, Speaker A: And remember, when you don't have DVT, what you're doing is you're saying, I'm giving this to different people, but I'm trusting, well, I'm delegating to different operators. And if any of those fail, if that key is lost, that would have an impact on the network. So what distributed validation does is it gives you this fault tolerance. Now, multiple people are doing this together as a team. By lowering the bond to one ETH, we're unlocking much more diversity. Today, most of the beacon chain nodes are run in high GDP regions. So this is very important to revert, because without it, we're not really fulfilling the decentralization dream of Ethereum.
00:03:33.556 - 00:04:23.944, Speaker A: And if you look at who has one ETH, at least there's more than ten people that will be able to participate in validator without not doing it today. So how does distributed validation work? And we will connect this through restaking very soon. But the keys never come together. Every time there's a new validator on Ethereum, what we're doing is we're saying 16 different people are going to create keys and together they're going to sign as a team. Now, the cool thing about this is if anybody's offline, the rest can still work. So I always visualize it as there's this office with 16 employees, and even if somebody's constantly missing, that doesn't affect that the office can open every day, can perform fully because everybody's covering the rest. This is secure and trust minimized based on cryptography, but also kind of using crypto economic incentives.
00:04:23.944 - 00:05:07.154, Speaker A: So for those of you more technical, this is the design. And I'm going to show why it's important to have this kind of trust, minimize non custodial design. Because every time we're giving somebody our funds or we're putting an intermediary layer that has custody of funds or validators, that creates risks. So the way it works in diva is if you're a liquid staker, you can deposit ETH and withdraw divith, like mint Divith. And that's basically receipt token that happens between you and the smart contract. It's permissionless and the smart contract creates a validator now and then, and it designates different operators in the network. So 16 of them are running each validator.
00:05:07.154 - 00:06:17.256, Speaker A: And when you're doing this, you know that they're collateralized because the diva smart contract keeps sanguina guarantee from each one to ensure that they're doing their operations. So you can always rely on this design to deliver the right incentives for everybody. You can make sure that they're going to run the validators, and you can make sure that your DB will keep increasing in value. Other protocols have oracles to kind of communicate things like updates in value. And what we're trying to do in Divi is even remove those oracles with the new potential zero knowledge cryptography by having proofs that kind of don't rely on any individual human. So everything you're seeing here is not dependent on the DAO, is not dependent on somebody voting or some committee is completely trustless the way Ethereum staking is supposed to be. So how does that extrapolate to restaking? Well, today the models we've seen with tools like Eigen layer rely on taking custody of funds or kind of introducing themselves as a middleware with a withdrawal address for validators.
00:06:17.256 - 00:07:15.844, Speaker A: So you can either deposit your lsts like your STE, your reth in the future, maybe DVTH, or your validator. And what they're doing is they're saying, okay, I will be an intermediary, and if you do things right, then I will pass through the funds to you, but if not, I will have this ability to withdraw the funds. But this is actually very dangerous because when we have a setup like this, what could happen is that this could be subject to governance. It could be that governance arbitrarily upgrades these bridge and kind of collects the funds. It could also exert pressure over withholding those ETH and not routing them to the right people. And how is that calculated? That would be necessarily calculated by some sort of oracle, unless those oracles are completely trustless. This introduces risks for everybody participating for the validator, participating for the depositor, even for the protocols that are relying on that from their security.
00:07:15.844 - 00:08:15.144, Speaker A: So what we're exploring with k two is a potentially different model where we use or trust minimize architecture, which is now done for staking. And these operators are providing security to this ethereum validators by constantly doing something good into how can we use that existing set of operators to also power a restaking consensus? And ideally for me this would be something that's non custodial where we simply use the kind of economic security that we already built in, that is already powering a validator to power. Also potential risk taking consensus. So the advantage that this has is that you wouldn't need to deposit an LST, there wouldn't be a risk of funds being withdrawn. And the worst that you could do is, well, yeah, kind of sign badly and have a loss of rewards. So this needs to be explored further. But I think there's potential for better and safer restricting models that are more aligned with Ethereum.
00:08:15.144 - 00:09:16.324, Speaker A: The advantage of using distributed validation as well is that because diva, by the way, diva means distributed validation. That's the name. But what it does is it relies on a consensus of different nodes sign in together, and only when you have a supermajority, that signature is valid. So this drastically reduces the risk for things like going offline or slashing, and it compounds the benefits of diversity and slashing protection. So today we already have this image in the staking ecosystem, where we have kind of centralization into mostly permission models. So Lido is relying on a permission model today, Coinbase, figment, binance, and others. So I think it's very important to keep working on trust minimized architectures where everybody can participate and where we're not relying on governance or entities to tell us how things should work.
00:09:16.324 - 00:10:14.386, Speaker A: So, yeah, basically we need more resilient alternatives because the future of Ethereum is at stake. Today we have really good primitives, but without the right economic incentives, we will end up in inevitably centralizing again. So that's a little bit, my pitch is we should move away from this custodial intermediary models into something where operators are more providing services to different networks. But maybe, yeah, maybe doing that through consensus, through information, through rewards, instead of through kind of custodial slashing risks. So for anybody curious about what we went through, you can run a diva node very easily. We're now on Testnet, so today you can install this docker package, diva client you can run in your machine. It syncs to a normal ETH node.
00:10:14.386 - 00:10:52.962, Speaker A: You could deposit some ETH collateral to activate the validators. Right now it's testnet. But the idea is that once you go to testnet, to mainnet, this will generate higher rewards with all the DVT protections, offline slashing protections and the reward smoothing that is much better than solo staking. So it looks like this. Anybody curious? I'm happy to walk you through how this works for a node operator, but the basic idea is that diva is taking extends. If you usually have 32 ETH you only need one ETH in dwam. If you have a one keeper validator.
00:10:52.962 - 00:11:42.034, Speaker A: We turn that into something distributed with 16. We use consensus. There's more staking rewards, there's liquid staking, and it uses MPc DKG instead of the traditional simple signatures. So yeah, I'm excited for the ecosystem to be having these conversations and exploring models. I think there is potential for 100% safe restaken architecture that doesn't introduce new centralizing risks or new economic incentives for centralization. So yeah, excited to keep talking about it. And yeah, I have this other slide which is, I think for me, what ethereum alignment means is avoiding whitelists, multi sigs, oracles, guardians, daofis, and really going back to the principle of permissionless, collateralized, immutable, diverse and decentralized.
00:11:42.034 - 00:12:22.138, Speaker A: So yeah, play with it. We're in testnet. Happy to take feedback. Another thing you can do in diva staking is if you would like to support the launch, we now have this enzyme initiative where you can deposit STE to earn diva allocations. It's very important for a protocol like an LST to launch with some TVL, so the DAO is incentivizing this. You have now this ability to deposit your steth to earn ETH rewards and diva rewards. Or if you prefer to keep it on ETH, you can also post it just ETH to kind of help with that TVL, and that helps bootstrap this ecosystem instead of starting from scratch.
00:12:22.138 - 00:12:23.834, Speaker A: So thank you very much.
