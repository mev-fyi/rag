00:00:05.450 - 00:00:50.006, Speaker A: Welcome to zero knowledge. I'm your host, Anna Rose. In this podcast, we will be exploring the latest in zero knowledge research and the decentralized web, as well as new paradigms that promise to change the way we interact and transact online. This week, I catch up with Adrian Brink, one of the founders of Anoma. Anoma is a new protocol for multi asset privacy and end party bartering. We chat about his previous work in the space and then dive into the new project. We talk about their aim to create a system that allows any digital asset to function as a means of exchange or payment, and what kind of projects or ideas Anoma could enable.
00:00:50.006 - 00:01:26.018, Speaker A: Before we start in, I want to let you know about the next upcoming ZK sessions. Event happens on June 23, and the topic will be all about dows NFTs and novel funding mechanisms. One of the goals is to find out if and how we may be able to incorporate privacy and ZK ideas into these new systems. I will also be hosting an interactive community discussion about how the ZK community could potentially start using some of these tools. Event happens, as mentioned, on June 23. I've added the link in the show notes and I hope to see you there. Next up, I want to thank this week's sponsor, EY Blockchain.
00:01:26.018 - 00:01:59.166, Speaker A: EY is committed to building a better working world on the public ethereum blockchain with robust privacy technologies, technologies like Zero Knowledge proofs. EY believes blockchain technology will be the glue that knits together a productive global business ecosystem. To learn more about their products and services, visit them at blockchain ey.com or check out EY's open source contributions@github.com slash EY blockchain. I've added both links in the show notes. So thank you again, EY, for sponsoring the Zero Knowledge podcast.
00:01:59.166 - 00:02:16.002, Speaker A: Now here is my interview with Adrian. So today I am talking with Adrian Brink, one of the founders of Anoma, which is a new protocol for multi asset privacy and end party bartering. Welcome to the show, Adrian.
00:02:16.066 - 00:02:17.206, Speaker B: Well, thank you for having me.
00:02:17.308 - 00:02:25.850, Speaker A: So Adrian, you've been in the space for a while. I think we've known each other for at least three years, but at the same time, this is actually the first time I have you on the show.
00:02:25.920 - 00:02:27.786, Speaker B: I believe that is true, yes.
00:02:27.888 - 00:02:42.702, Speaker A: So before we start in on Anoma, let's do a little background on you. Where did you start in in Blockchain? I think we met at the first ZK summit. The first, like, back in 2018. So you're clearly there already. Yeah. Tell us where you started.
00:02:42.836 - 00:03:22.446, Speaker B: So I wrote my graduate thesis in computer science on Evoting on Blockchains, and this was at the time of the Katalan independence referendum. And I'm personally not a huge fan of independence movements, but I thought it'd be neat if the Katalan people can have a way to have censorship resistant Evoting systems. And I built on Ethereum at the time. And of course, any computer scientist listening right now will know evoting is the thing that no one wants to touch in computer science because everyone believes it's completely insecure. For some reason. We put the financial system on computers, but no one trusted enough to put voting systems on computers. Still funny to me, but yeah.
00:03:22.446 - 00:03:41.042, Speaker B: So I built this, and as part of the research background research, I came across, tenement consensus actually dove into this. And then I ended up joining Cosmos as, like, the third engineer, third core protocol engineer. Mostly because I had written Jay that I know how to code and whether he needs any help building it, because I thought it was a neat project.
00:03:41.096 - 00:03:43.362, Speaker A: It was early. What year are we talking?
00:03:43.496 - 00:03:45.682, Speaker B: This must have been like, 2017, I think.
00:03:45.736 - 00:03:48.226, Speaker A: Okay. Was the project already launched?
00:03:48.338 - 00:04:15.438, Speaker B: No, this was just about the time of the fundraiser. I think I joined, like, a week after the fundraiser. From there, built up the entire Cosmos stack. Helped out there a lot afterwards. We launched Cryptium labs as a validator we were like, one of the very first Validators. And this also know my two current founders from our and Chris because we all work in Cosmos at the time. So we built up Cryptium Labs as our answer to no one knows how to run these things.
00:04:15.438 - 00:04:47.670, Speaker B: No one knows how to run proof of stake. And the people that build it are clearly the most qualified to also run it in practice. So we sold that company earlier this year to Course One. But also it turns out that validation is honestly not that interesting on the long run because it's mostly racking up servers and data centers, and we always love doing research and protocol engineering. So we ended up for probably a good two years being the second core dev team on Tezos, shipping all major upgrades while we were there. So we scaled this to 15 people, and we took everyone with us to work on Anomal, which we launched earlier this year.
00:04:47.740 - 00:05:03.446, Speaker A: You mentioned your two co founders, Awa and Chris. Awa has been on the show, I think, once during a combo episode like which I did in an event. So really short interview. And Chris Goes definitely was on the show last year talking about IBC.
00:05:03.558 - 00:05:10.526, Speaker B: Yeah, Chris is the lead author around the IBC protocol. Also worked on Sentiment Consensus for a long time. And of course, it's with stick system.
00:05:10.628 - 00:05:13.706, Speaker A: Was it the three of you at Cryptium or just you and Awa at Cryptium?
00:05:13.738 - 00:05:14.878, Speaker B: No, it was the three of us as well.
00:05:14.884 - 00:05:18.066, Speaker A: Oh, it was okay. So this is a long standing founding team.
00:05:18.168 - 00:05:20.914, Speaker B: Yeah, no, we've built at this .3 companies.
00:05:21.032 - 00:05:43.414, Speaker A: I should also, as an aside, say the Xeronout Validator is actually an investor in Enoma, but when we did that investment, we were kind of an early stage investor. I know since then there's been quite a bit of development. And that's what I hope to jump into today with you. So let's dive into this new protocol for multi asset privacy. What in a nutshell is Anoma.
00:05:43.542 - 00:06:19.446, Speaker B: So in a nutshell, Anoma is a protocol fundamentally designed differently than the existing smart contract platforms like Ethereum. Also the existing chains like Bitcoin, for example, anoma is fundamentally asset agnostic. It doesn't care. It doesn't have a specific base layer asset. Of course there's a proof of stake asset, but you can, for example, pay transaction fees also in other assets that you bring onto the platform. So Anoma fundamentally makes the choice that the world is going to be interoperable. We don't know necessarily via which protocols, although we have good ideas there.
00:06:19.446 - 00:06:42.742, Speaker B: But assets will flow free of state machines, and Anoma is there to enable people to have multi asset privacy for whatever assets they want to bring and to allow them to be traded in a very flexible manner, which is derived from a protocol called the Wyivandex protocol, which is backing the protocol behind OpenSea. By the way, no one knows about the protocol because it doesn't have a token. Chris wrote this a long time ago.
00:06:42.816 - 00:06:44.382, Speaker A: What's the name again? Can you say that?
00:06:44.436 - 00:06:45.898, Speaker B: The Yvonne Dex protocol.
00:06:45.994 - 00:06:47.690, Speaker A: Yvonnex Protocol.
00:06:47.770 - 00:06:48.702, Speaker B: Yvonne, yeah.
00:06:48.756 - 00:06:53.870, Speaker A: Yvern Dex. Okay, cool, cool. We'll put that in the show notes for interested listeners then.
00:06:54.020 - 00:07:19.030, Speaker B: Yeah. And also architecture just Anoa makes quite a few different choices. So it's built around fast fan altogether. BFT, it uses fractal scaling. Like, we don't believe that there needs to be one value asset that rules all state machines. I think this is very unlikely to appear in practice anyway. It seems very unlikely that we move world commerce into the Ethereum Valley asset, no matter how scalable it is on a technical side.
00:07:19.030 - 00:08:05.782, Speaker B: It's just not how humans socially work. We don't have a one world government for the same reason. So Anoma scales fractally that there can be many different instances and different geographies run by different people, but they all interoperate with each other. And assets can flow within Anoma as well as from Enorma to other systems and into Anoma. And you can just use these assets to privately pay someone, to just shield your assets, to make your own assets without transferring them private. And it also allows you to have these very complex state transitions where, for example, you want to trade a CryptoKitty for a concert ticket in Barcelona for some BTC, for some ETH, and in noma, you can atomically settle all of them. And I think maybe the last thing here is also that we fundamentally believe that zero knowledge groups are going to be big and privacy is a fundamental human right.
00:08:05.782 - 00:08:31.214, Speaker B: So what people can do actually, is deploy their own validity predicates. And those validity predicates can do a lot of things. Whether this is they can be like, for example, new private bartering circuit, new private trading circuit, a new privacy preserving transfer protocol. But developers can write these, and we're building a language called jubix, which compiles down to zero knowledge proofs, which makes this very convenient, so developers can deploy their own village predicates as well.
00:08:31.332 - 00:08:34.946, Speaker A: There's so much to go into in everything you just said.
00:08:35.128 - 00:08:36.386, Speaker B: I'm sorry about that.
00:08:36.488 - 00:09:03.142, Speaker A: Let's take one thing that stood out to me here was the fractal scaling, this idea of various ecosystems, various blockchains. This sounds a lot like the cosmos ideal and this concept of IBC. And I know Chris worked on that. So I'm wondering, what is the connection in your mind between the way you're thinking about this fractal scaling and what you were working on at cosmos and what Chris was working on at IBC?
00:09:03.286 - 00:09:21.022, Speaker B: Yeah, so, I mean, Chris is the lead architect on the IBC protocol, and IBC is a fantastic protocol. I have to say, I think people don't really understand this, but IBC isn't tied to cosmos. IBC will work between NIA and polkadot and anoma and like a it's a bridging idea, right?
00:09:21.076 - 00:09:24.106, Speaker A: Isn't it? Isn't it sort of like a form of a bridge?
00:09:24.218 - 00:09:47.122, Speaker B: It's not a bridge in itself. It's just a way to describe how data gets transferred between proof carrying data gets transferred between two blockchains and how it gets authenticated. You can think of this more like TCP IP, where it's just the protocol that describes how a packet from polkadot that's authenticated with the polkadot values that can be read and interpreted on the near side and vice versa.
00:09:47.186 - 00:09:50.642, Speaker A: It doesn't involve creating, like, clients on each of the chains.
00:09:50.706 - 00:09:54.250, Speaker B: So that is a requirement for the protocol that you have efficient, like clients.
00:09:54.590 - 00:09:55.750, Speaker A: You do have like clients.
00:09:55.830 - 00:10:37.042, Speaker B: Yes. So that's a requirement. In order to be able to instantiate the protocol, you need to have efficient, light clients on either side because otherwise the communication complexity blows up. But, yeah, so anoma doesn't take the view that anoma isn't a routing hub for assets. Anoma is just a protocol where people can use their assets initially very much for privacy reasons. So for multi asset privacy, anoma will be the very first solution, I think, in the world where you can have a unified privacy set between all assets. When you think about things like zcash and monero, the reason why they have a really hard time getting traction is because while they provide privacy, they tie it into a very specific asset.
00:10:37.042 - 00:10:42.406, Speaker B: And I don't want to pay for coffee in ZEC or monero tokens, although.
00:10:42.438 - 00:10:44.490, Speaker A: Apparently there are places that are accepting that.
00:10:44.560 - 00:11:22.722, Speaker B: Yes, sort of this weird thing where room 77 in Berlin was accepting bitcoin for burgers. It's like a weird novelty, but it's not going to be the thing that gains traction. So with anoma, you get, for the first time, multi asset privacy, where, to an external observer, it's indistinguishable whether you are buying coffee, using USDT or selling a house for $100 million. So all assets have the same privacy guarantees. And you can sort of think of the multi asset tool pool, which does this as an extension to Sapling, right. Where Sapling shields sender recipient an amount. The multi asset pool also shields asset identifier.
00:11:22.866 - 00:11:38.186, Speaker A: Is there actual computational stuff? Is it more than just transactions that are happening in this privacy setting? What I mean is, is there private computation? Is there some sort of more than just account balance changes? Is there something else?
00:11:38.288 - 00:11:54.634, Speaker B: The multi asset trill pool is just one specific validity predicate in Onoma. So there can be many more. You can deploy others that do more private computation, but the multi asset chiller pool specifically doesn't do private computation. It just does proof checking that account balances that you aren't.
00:11:54.682 - 00:12:03.266, Speaker A: Inflating tokens, let's talk a little bit about its connection to Sapling, because you're using part of Sapling in your construction of this, right?
00:12:03.368 - 00:12:22.406, Speaker B: Yes. So this is an extension of Sapling. Sapling is great. There's no reason to throw away Sapling. I don't understand why a lot of the privacy tech that tries to do this on Ethereum doesn't do this. But Sapling has amazing features like viewing keys and spending keys and so on. So I'm a big fan of Sapling.
00:12:22.406 - 00:12:24.150, Speaker B: So this is an extension to Sapling.
00:12:24.230 - 00:12:33.942, Speaker A: Got it. But did you redeploy it then? Is the idea that you're going to take that code and redo it? You're not actually connecting to the existing live Sapling on Zcash?
00:12:34.006 - 00:13:07.926, Speaker B: Oh, no, not at all. We're just using the code, and the code is being redeployed. So the extended code, the multi asset trail pool, is being redeployed. This also means that we have to do a new trusted setup, which we're going to start sometime this summer. Depending on where the research goes, we also may do like a plunge P Lookup trusted setup at the same time so that we get a universal proof string. So because one of the ideas behind I knowma is that people are able to write their own zero knowledge circuits using duvex, and it's very inconvenient to deploy a zero knowledge proof application if you have to redo a trusted setup every time.
00:13:08.108 - 00:13:08.674, Speaker A: Agreed.
00:13:08.722 - 00:13:15.174, Speaker B: So hopefully we can get around this with Punk Lookup, and then people can just write private applications and deploy them directly.
00:13:15.302 - 00:13:39.518, Speaker A: If anyone wants to learn more about trusted setups, last year I did a series of episodes all about all of the trusted setups that have happened so far, and I think since then there's at least Plumo, which I actually work on and help out the team with. So that's another trusted setup. If ever anyone wants to try one of these out, they're kind of annoying, but also kind of awesome because you're like, deep in the tech, you're actually contributing to real privacy.
00:13:39.694 - 00:13:54.386, Speaker B: Honestly, I think the biggest thing with private setups is mostly that you want a large number of disjoint participants and that you ideally don't want to have to redo them. So if you can honestly get an efficient, universal, trusted setup, that'd be very convenient.
00:13:54.498 - 00:14:18.622, Speaker A: Totally. Let's go into the Bartering system. This idea of I think you hinted at it in the intro to Anoma, but you talked about different assets. So Bartering, that idea of trading the milk for the flour, like object for object, but with no dollar in between, tell me a little bit about what that looks like.
00:14:18.756 - 00:15:00.102, Speaker B: Yeah. So this is very hard to build in other imperative kind of systems, like the EVM, for example, because the account model isn't structured the right way, but with Anoma, the way the account model is constructed is that all changes to the state are happening first. So the state changes are applied first, and then all involved accounts simply get the resulting state and can verify whether they're okay with it or not. And then they say yes, no on the state changes, which makes the computation to do state changes to lots and lots of accounts very, very efficient because you can do all the sort of verification of the state changes in each account fully in parallel.
00:15:00.166 - 00:15:00.586, Speaker A: Okay.
00:15:00.688 - 00:15:38.322, Speaker B: Because they're not dependent on each other. Right. Like, when you think about this in a traditional system, you have this step by step executionary, sort of go like, well, contract One does some execution steps and then calls contract two, that does some. In our normal, this all just happens, all state changes first, and then everyone gets called whether they're okay with the resulting state. This allows us to build an incredibly flexible endpoint debatering system. And what I mean here with end party bartering is the example, for example, is let's say Alice has some BTC and one's ETH. Bob has ETH and know dots, and Charlie has dots and wants BTC.
00:15:38.322 - 00:16:03.780, Speaker B: Traditionally, there's no way to settle all three desires at the same time and recalling them intents. So there's no way to settle all three intents at the same time. But with a noma, we can just take all three of them and settle them directly, thereby removing the need to have one liquid pair that everyone connects. Right? Like, traditionally, the way this is solved is everyone just has a liquid pair against USDT. And when you want to do this kind of three party trade, you all go via USDT to settle this.
00:16:04.310 - 00:16:14.100, Speaker A: I have a question here about prices and how you define this stuff. Are you deeply connected? Do you have an oracle? Are you pegging this to something?
00:16:15.030 - 00:16:46.110, Speaker B: Right, so this comes to the way assets flow into anoma anoma fundamentally interoperable so assets flow via IBC or some other interoperability protocol. Really doesn't actually matter what the interoperability protocol are. So now you have an asset in Anoma, and there you just define at what price for your individual intent you're willing to settle this or to trade it. And then there's a role called matchmaker that looks at all the hundreds of thousands of intents flowing through a system and sees which ones can be combined together and settle on chain.
00:16:46.610 - 00:16:52.702, Speaker A: Is there a base currency then? Is there like a base value that you can peg this to?
00:16:52.836 - 00:17:15.106, Speaker B: No, this is not pegged at all. Like when you think about when I'm submitting my intent, I have BTC and I want ETH. I'm saying I'm willing to trade it at this price or better. And someone else may say they're willing to trade ETH for BTC at this price or better. And then these intents are starting to flow through the system, and a matchmaker will look at them and go like, well, these two are compatible. Let me combine them and settle them on chain.
00:17:15.218 - 00:17:26.074, Speaker A: That's one to one though. That's like ETH. BTC. BTC. ETH. But when you talk about bartering and including these other assets and you're bundling them, how do you assume the value?
00:17:26.272 - 00:18:06.822, Speaker B: Right? This is why I also like the tagline of undefining money. We don't need this form of base currency. So if you have the intent BTC for ETH that has some exchange rate effectively attached to it that the user sets and then you have another intent that says ETH for Dots that also has an exchange rate and a third intent that says Dots for BTC. So everyone has their own defined exchange rate, effectively, at which point they're willing to trade. And so if you see three of them, you don't have to settle them one by one. You can just say, well, settling all three of them at the same time gives everyone what they want at a price that's equal or better than what they said they were willing to take. And the best part here is this doesn't stop at three.
00:18:06.822 - 00:18:27.274, Speaker B: This goes to you can be 1000 people, you can be trading the most random assets like you can be trading local currencies, you can be trading commitments to climate change, you can be trading like CO2 certificates because they don't need to be tied into underlying base currency. This is an incredibly generalized system that allows people to do business with other people effectively.
00:18:27.402 - 00:18:45.570, Speaker A: I know that in a previous episode we did with Martin Kupelmann from Gnosis, we talked about this concept of coincidence of wants because they have this cow protocol and when I was going through mentioned, I saw that you mentioned you don't follow that model. It's not coincidence of wants that you're.
00:18:46.710 - 00:19:21.294, Speaker B: So I don't know how Gnosis uses this, but we just don't rely on the fact that two people have to have exactly the same coincidence of once. It can be three or n people that collectively have an overlapping set of, like where they all coincide in terms of what intents they have. Yeah, in traditional market this is always two way that if I want to trade a chicken for a cow, I have to find someone that has exactly the inverse without noma, you don't. You can find sort of a group of people that collectively settles everyone's if.
00:19:21.332 - 00:19:28.802, Speaker A: Like, what if I wanted to unload a terrible dog coin and nobody wants it? What happens then?
00:19:28.856 - 00:19:33.810, Speaker B: You will never get settled. Like if no one ever wants to buy the thing you're selling, okay, so.
00:19:33.960 - 00:19:37.954, Speaker A: You can put it there, but no one's going to ever take you up on it.
00:19:37.992 - 00:20:11.162, Speaker B: Exactly. Okay, maybe also, I guess a note on the architecture here then. So in Anoma, there are hundreds of millions of intents possibly flowing through a system, but they never settled on chain. Only those that actually have get matched with other intents get settled on chain. Which means that, for example, the way a market maker would operate is they probably quote a new price every half second or so and they just send them as intents so they keep updating their latest viable price and then someone can pick it up and oh, I like this. I like the price you're currently quoting.
00:20:11.226 - 00:20:26.962, Speaker A: I'll settle this on chain as sort of a person offering. You want to participate in this? Do you offer two things like what you want and what you're giving? Or do you offer what you're giving and what a selection of things you would accept back?
00:20:27.016 - 00:20:59.850, Speaker B: You can do both. This is completely up to you. You can because you can think of intents like a function that just says what state transitions you're willing to accept. So you can say, I'm willing to accept two tickets for Imagine Dragon concert in Barcelona, or three blue crypto punks or ABDC or combination of all of them. But it's up to you. So when you write your intent, you say you write a acceptance function that says, I am willing to accept. And in the function, you just define what you're willing to accept.
00:20:59.930 - 00:21:00.366, Speaker A: Cool.
00:21:00.468 - 00:21:25.880, Speaker B: Which means the cool thing is this goes way beyond trading. It means that you can start having things like we collectively agree to, and only if, let's say, a certain percentage of the network agrees to with 1% of our transaction fees, commit to sequestering CO2 from the atmosphere, for example. So you can do these very generalized collective commitments is what we're calling them.
00:21:26.570 - 00:21:35.894, Speaker A: The thing is that taking carbon out of the ecosystem, that would be some like, I know that there's a protocol that actually does that, I think, in the Cosmos ecosystem where oh, region.
00:21:35.942 - 00:21:43.382, Speaker B: Yeah, they do it differently, though. They try to map over. They try to identify who's doing well in terms of environmental damage.
00:21:43.446 - 00:21:55.710, Speaker A: Oh, I see. Okay. So say there were, though, these credits. You'd still need a second entity to issue those somehow, and those would maybe be like I'm trying to picture what that example looks like.
00:21:55.780 - 00:22:22.010, Speaker B: Anoma doesn't do asset issuance. I mean, you could if you wanted to, but this is really not what the protocol is good at. Things like ethereum are great at asset issuance. And Anoma just provides the ability, once you have these assets, to effectively come to agreement over them. To come to agreement with using these assets, like CO2 sequestering is far away, really. And we need a bunch more infrastructure, more supply chains need to be on blockchains. This data needs to be available.
00:22:22.010 - 00:22:24.326, Speaker B: We need better oracle systems.
00:22:24.518 - 00:22:26.682, Speaker A: But it could eventually maybe be in it.
00:22:26.736 - 00:22:40.014, Speaker B: Oh, absolutely. Eventually. This is the goal. Once we this is the goal. The global economy on hundreds of millions of different blockchains and data can flow freely between them. We can design amazing computation to incentivize right behaviors for people.
00:22:40.132 - 00:22:48.114, Speaker A: Does it sort of fall into the category of a Dex? Do you think of it in that space, or is it something else?
00:22:48.232 - 00:23:33.546, Speaker B: So if you wanted to think of this very simply in terms of early things that you can do with Onoma at launch, you can, for one, think of this as a mixer, kind of like an interchange mixer, almost, because you can get perfect privacy for all connected assets without having to transfer them. Right. The multi asset tube also just provides them if you transfer them to yourself. And secondly, you can kind of think of this like a dex, but not really. The Dex is like the simplest of applications that can be built on. So, like, you can build a dex on Anoma, and the protocol supports this fully. But long term, this is much more than just a like, this is a way to come to agreement over arbitrary state transition functions rather than just like I want to trade a bitcoin.
00:23:33.658 - 00:23:41.730, Speaker A: Got it. Is it based on and maybe you already mentioned this, but is it a proof of stake protocol in itself? Does it have a validator group?
00:23:41.800 - 00:23:43.458, Speaker B: Yes, Anoma is proof of stake and.
00:23:43.464 - 00:23:45.086, Speaker A: It'S based on tendermint?
00:23:45.118 - 00:24:08.678, Speaker B: I guess so. Not the proof of stake system. So it uses tendermint consensus. Okay, albight, we're probably going to swap this after launch at some point, either to Honey Badger or Heterogeneous Paxus, but yeah, so it's not built on any of the existing stacks. This is all written from scratch. We just happen to use Tenement consensus. Because, honestly, tenement is a fantastic consensus algorithm, and I still think it's stupid that everyone is trying to reinvent consensus.
00:24:08.774 - 00:24:09.290, Speaker A: Makes sense.
00:24:09.360 - 00:24:15.230, Speaker B: Like, you're not gaining that much in 2017, we had a weird time where you could rate certain consensus algorithms.
00:24:15.970 - 00:24:34.530, Speaker A: Very strange, but so you're going to have a validator community. Is this validator community a full fledged decentralized is that part of it very decentralized? Or do you have any sort of smaller groups that are kind of born out of that?
00:24:34.680 - 00:24:59.450, Speaker B: No. So Anoma is a full base layer. It's a layer one. There is a validator set of probably 100 or more people that runs a decentralized protocol, the Anomal protocol, they may also run matchmakers and order book operators at the same time. But yeah, it's a fundamental base layer running a proof stick system in order to provide private digital asset agnostic cache and end party bartering to anyone that wants to use it.
00:24:59.520 - 00:25:19.860, Speaker A: Got it. The reason I'm kind of asking is like, I recently completed a series, a spontaneous series of L Two episodes. And I recently was thinking, like, who isn't an L Two? So I was wondering if you maybe would eventually sort of alter this validation to not just be a validator on a base chain, but also some sort of connection point.
00:25:20.870 - 00:26:05.082, Speaker B: Yeah, I mean, I have fairly strong opinions on L Two S and how they make the thing is pretty much everything is these things will just be connected to each other. Currently, we live in this world where everyone is trying to build their own walled garden, right? Like the cosmos, people are trying to build their own walled garden. Ethereum people are trying to build their own walled garden. The pocket of people are trying to do exactly the same and everyone says Interoperability? Yes, but only within my walled garden. And it's sort of like AOL in the early days of the internet saying my interoperability is by far the best in my own walled garden. And I think this makes absolutely no sense long term. Long term, you're just going to have probably thousands, if not hundreds of thousands of blockchains that all just freely communicate with each other because they're all going to build around modern faster and Ltbft.
00:26:05.082 - 00:26:14.286, Speaker B: And then the distinction between what is an L Two and what is an l One that just can connect to other things is becoming very thin, really very blurred.
00:26:14.398 - 00:26:15.134, Speaker A: Totally.
00:26:15.262 - 00:26:34.698, Speaker B: So my opinion, l Two S are taking all the disadvantages of building on top of an existing system. So you're inheriting a lot of the engineering deficits, but in terms of usability, you're gaining very little over just being an interoperable L One. So I think that over time, a lot of things will become just like independent L Ones.
00:26:34.864 - 00:26:55.710, Speaker A: I feel like there is more and more there's this question of like, we know that L Two S and other L ones bridge to other L Ones are actually different and they do offer different pricing, they offer different capabilities, but they're kind of trying to solve similar problems. So it's not completely clear yet if one of these models is necessarily going to win.
00:26:55.860 - 00:27:33.130, Speaker B: I think the main thing is that people really think at the moment that you either win or you lose. But I think the general pie that we're looking at is way larger than most people can imagine. And it's not going to be, does Ethereum win against Bitcoin? It's going to be, well, we can all coexist because we all have unique offerings. And on the l Two side, to me, in L Two, the main thing is that you're giving up, that you deriving security from some L One. So. You don't have your own security. And early on, people always assumed that no one was going to be willing to move their ETH, for example, into a different L one, because all of a sudden you have a totally different security model.
00:27:33.130 - 00:28:02.310, Speaker B: But I think that most people really don't care because most L ones just have very good security. So the advantages to being like an L two that's tied into having to put up state routes in Ethereum, there are a lot of disadvantages because your engineering freedom just goes down by a lot. And I'm not sure that the user base will care because from a UX perspective, whether you move into an L two on top of Ethereum or into a different L One is going to be the same. You're going to go via some bridge.
00:28:03.130 - 00:28:38.020, Speaker A: I want to go back to privacy. And we did already talk a little bit about using Sapling, that a lot of this stuff would be private. But I kind of want to revisit now that we understand a little bit more how the bartering system works and all of that, how does the privacy actually work? Is it just this is all happening in a shielded way or is there like, parts that are very private and parts that are not? I know this has always been a question about when you're doing sort of asset transferring, you may not be able to have perfect privacy on every level. So I'm curious about where is the privacy exactly?
00:28:38.630 - 00:29:22.330, Speaker B: Yeah, so it depends on which validity predicate account you're using. Right? Like the multi asset chill pool is just one of many validity predicates that can exist in normal. Okay, so with the multi asset chill pool, you're gaining pretty much perfect transfer privacy or mixing privacy, whichever way you want to look at this. But for example, for trading, we are currently writing private trading circuits as well, where maybe some information is hidden, but others is public, which you need in order to discover counterparties. Over time, people can deploy more and more different validity predicates that have different privacy guarantees maybe, or that may not even be privacy preserving because they want to solve some other thing that they want to have, like an automatic market maker as a validity predicate. This works too. Like, you don't have to have privacy.
00:29:22.330 - 00:30:15.982, Speaker B: These are just validity predicates that users get to interact with. Of course, we have an intent gossip system where people say, well, I'd like to, for example, trade a bitcoin for an ETH, for example. And there the question becomes how much are people revealing before that trade gets settled? And I think honestly, over the long run, the way this will work is that most trades happen physically, like most actual commerce happens physically. And so the way you do it is that you don't announce to the world that I'm willing to buy like a bitcoin from you, but rather that we communicate and agree on prices automatically but over a local network connection and then just end up settling it. And at that point you can just fully privately settle this even so, do you start having private subnets effectively where you may not announce all your intents? Or maybe only as you advance further in the automatic negotiation do you start revealing more and more information, but not to everyone, just at a point to point level at that point.
00:30:16.036 - 00:30:19.634, Speaker A: Is that kind of like a private OTC then? That's what that sounds like a little bit.
00:30:19.672 - 00:30:21.074, Speaker B: I guess you could look at it this way.
00:30:21.112 - 00:30:49.782, Speaker A: That's a fair point but so you use this term validity predicate and then you say one example of a validity predicate is the bartering, like basically the multi asset shielded. So you sort of mentioned another validity predicate would be like an AMM construction or maybe an order book based dex or something like this or maybe fix that then because I think just the terminology of that isn't completely clear to me what goes under that category.
00:30:49.926 - 00:31:24.386, Speaker B: Yeah, so validity predicate is every account in the system is associated with a validity predicate. So for example, when you hold like the native asset Xan on anoma, you hold this in an account and your account has a validity predicate attached to it. And this validity predicate in its very simplest form may say you need to have spent authorization from a private key in order to move this. But then you can also start upgrading them and say well if I move under $100 then I can sort of sign this with this key and if I want to move a million dollars I need to sign with three different keys.
00:31:24.498 - 00:31:29.878, Speaker A: But these are not the Snarks, right? These are not like the Snark is with it the proof.
00:31:29.974 - 00:32:16.182, Speaker B: No, exactly. So the verifier for example, you could also say that you wanted to have some like your validity predicate should only accept a specific proof and then what you deploy as your own validity predicate is a verifier for that proof. This is the way the multi asset chill pool is implemented. The verifier for the proof of the multi asset chill pool is deployed as an account on anoma. And so whenever you want to send an asset via the multi asset chill pool you submit a proof to that ability predicate to that account which then verifies it and says yes or no. Which means there can be many multi acid chill pools for example, and we can seamlessly upgrade them as well because you can have multiassid chill pool two, multi acid chill pool three as separate validity predicates in the system.
00:32:16.236 - 00:32:21.394, Speaker A: In that case though, could you have a validity predicate model where there is no privacy using anoma?
00:32:21.442 - 00:32:21.942, Speaker B: Absolutely.
00:32:22.076 - 00:32:30.362, Speaker A: So it's not forced. The privacy is more like in the example in this first validity predicate that you're working on that's one of the key things.
00:32:30.416 - 00:32:30.730, Speaker B: Exactly.
00:32:30.800 - 00:32:31.722, Speaker A: Yeah, got it.
00:32:31.776 - 00:33:02.166, Speaker B: For example, also maybe this is more clear, like the way Bitcoin is bridged into a noma is that Bitcoin is hard because not an efficient like client. But let's say polkadot is bridged into a noma because they have an efficient like client. The dot token is just its own validity predicate, its own account in the system. And the dot account in the system has a validity predicate that can verify a like client proof from polkadot and verifies whenever you want to send like a dot between two accounts in Anomal that the supply is preserved, for example.
00:33:02.348 - 00:33:10.182, Speaker A: Got it. Is there anywhere else where you are working or including privacy in the stack?
00:33:10.326 - 00:34:06.202, Speaker B: So yes, otherwise maybe not necessarily long term privacy, but at least short term privacy which you need for front running prevention. So we're also building a protocol called Furvio, which is a distributed key generation protocol, which effectively means that the validator set of Anoma jointly construct the public key. And every Validair locally has a key share that they can use to decrypt with their shard. And once you combine enough decryption shares, you get the end result, which is a decrypted transaction. So when you submit a transaction on other systems, what happens is that you're giving up information like a block proposal or someone watching the Mempool has an asymmetric information advantage over you because for example, you may have said, I am willing to trade this asset. This is now public before it gets included in the block, before it's finalized in a block. So what happens in Anoma is that users encrypt transactions against this common shared public key of the validator set.
00:34:06.202 - 00:34:33.074, Speaker B: And then in blocks, blocks only order encrypted transactions. So as a validator as a block proposer, I see a bunch of encrypted transactions and I go like, well, they all can pay for fees, let me put them into a block and then they're in a block, but I have no idea what these transactions do. And then in the next block, in block N plus one, the validator set jointly decrypts all those encrypted transactions and then they get executed. Meaning that no one can frontrun you.
00:34:33.112 - 00:34:49.270, Speaker A: But they're already queued up. I guess, like the queuing part, the part where you're putting them towards being in the block, it's unclear what's in it. Therefore you can't have this minor extractable value mev flashbot scenario where miners are basically getting in front of it.
00:34:49.340 - 00:34:58.150, Speaker B: Yeah, by the time you see what a transaction does, it's already ordered and you can't retroactively change the ordering anymore or inject like your own transactions.
00:34:58.230 - 00:35:16.526, Speaker A: But I'm thinking of it like a queue, but maybe it's not exactly like that. At what stage is the actual stuff encrypted before it's decryption? At what stage does it get included? Is it still encrypted when it gets included? Or is it like at the moment of inclusion? This is what I'm trying to figure out.
00:35:16.628 - 00:35:50.794, Speaker B: Think about this this way, right? So there's a valid at the Anomal network. A shared public key is known because validate generates them every 24 hours or so. So as a user, I want to send a transaction, not even an intent, I just directly want to move some tokens from account A to account B. I as a user, I construct this transaction and I encrypt it against the public key before I submit this to any full node. And then I submit an encrypted transaction to a full node, which puts it in the mempool, which only says, well, this thing can pay fees right now because that information is still available, but it doesn't see at all what the transaction does.
00:35:50.832 - 00:35:51.370, Speaker A: Got it.
00:35:51.440 - 00:36:36.182, Speaker B: Then let's say we're at block ten right now. So this is in the mempool. The block proposal for block Ten goes, well, I have a bunch of encrypted transactions here and let me just put them all in a block. Then the valid head comes to agreements, reaches BFT agreement on it and says, well, block ten is now finalized and it includes these encrypted transactions. And then as soon as this is in a block validators that follow the protocol rules have to start submitting decryption shares for these transactions to each other. And then in block N plus one, the next block proposal will include all the decryption shares or not encryption shares. They will just use all the decryption shares and include the decrypted transactions, but not for ordering, but rather for execution.
00:36:36.326 - 00:36:42.910, Speaker A: Isn't new cipher's whole thing distributed key generation? I feel like it is, but I don't know if it's ever been used.
00:36:42.980 - 00:37:20.860, Speaker B: In this context, it's different. So new cipher I think allows you to generate keys that are held by multiple parties, but more with the use case of being able to hold like a bitcoin key that's shared between a lot of parties with Favio in Anoma, this isn't that model because the purpose is that the decryption thresholds follow the BFT thresholds. Right. You need two thirds honest majority for BFT and you have the same requirement for the decryption part, which means that not any individual validator can front run the system.
00:37:21.230 - 00:37:28.602, Speaker A: But it does sound a lot like the work that I know Dev and Sunny are doing at Osmosis. Are you working? We are working with connection point.
00:37:28.656 - 00:37:31.018, Speaker B: We're working with Seeka on the protocol. Yeah.
00:37:31.184 - 00:37:59.638, Speaker A: The reason I say actually pretty recently we did an event with the Cosmos ecosystem highlighting some of the privacy related projects that are there. I'll add a link to also there like to Devs talk there because there there's some visuals that kind of illustrate some of this as well. At what stage is this? Is this a protocol on paper? Is this a oh, this is fully implemented. Cool. Okay, so this is something that you have seen engineered and this is actually working?
00:37:59.724 - 00:38:25.706, Speaker B: Yeah. This is not theoretical. This may work in five years. This is like, no, this works right now. And this just needs to get integrated into a base layer. The problem is this is almost impossible to retrofit into existing base layers because it fundamentally changes the way execution flow works. Which is also one of the other reasons why with Anoma, it was never really an option, even if I'd liked other ecosystems, to build this on top of another layer.
00:38:25.706 - 00:38:41.074, Speaker B: One, because fundamentally the way we structure transaction execution, transaction submission, all the gossiping part, it's not retrofittable into existing base layers. It's like fundamentally a different architectural choice that allows us to build very different.
00:38:41.112 - 00:38:46.722, Speaker A: Applications, but couldn't like, an existing POS system do like a major upgrade where they incorporate something like this?
00:38:46.776 - 00:38:53.270, Speaker B: Of course, every POS system can become any other POS system. There's nothing stopping us because this is all open source.
00:38:53.770 - 00:38:57.800, Speaker A: Although Validators might not love it and all of the tooling might not work.
00:38:58.730 - 00:39:10.666, Speaker B: It's like the same way, yes, Google can become Facebook. That is true. The technology isn't rocket science, but most people don't do it because you have to maintain legacy and your community may not like it.
00:39:10.688 - 00:39:20.078, Speaker A: That mean. Is there any work like this being done for proof of work systems? Because we're thinking of this as like validators building this.
00:39:20.164 - 00:39:35.406, Speaker B: So this doesn't work for proof of work because fundamentally in proof of work, you don't know who the miners are. Like upfront. Like in proof of Stake, we have a list of these are all the public keys that are the validators. And we need this because every validator needs to generate private key shots.
00:39:35.518 - 00:39:38.846, Speaker A: Yes, this is a very proof of stake solution.
00:39:38.958 - 00:40:19.006, Speaker B: This is also like why proof of work, I think will exist for very simple applications for a long time. Because it's interesting. I think Bitcoin is cool in the sense that we have a global stable clock, for example, that's hard to bias. But the innovations are going to come in proof of stake because the protocols are more flexible. So one thing about Ferrio is it also provides really secure randomness in the sense that it doesn't require VDFS with special hard, which unbiaseable randomness. But out of running this distributed key generation protocol, you also get secure randomness, which you currently aren't using. It's just the way that it works in the cryptographic.
00:40:19.006 - 00:40:20.370, Speaker B: Protocol just also gives you this.
00:40:20.440 - 00:40:21.060, Speaker A: Cool.
00:40:21.750 - 00:40:28.838, Speaker B: So I don't have an application in mind yet to build on a Nomad that uses this, but it is available.
00:40:29.004 - 00:40:35.510, Speaker A: Nice. That's very useful. I wonder if you could use that back into something that's like at the core.
00:40:36.090 - 00:40:41.942, Speaker B: Yeah, I mean, other consensus algorithms use randomness to select validators. I'm not a big fan of it.
00:40:41.996 - 00:40:44.282, Speaker A: Okay, it won't be that.
00:40:44.336 - 00:40:49.930, Speaker B: Maybe later on you can use this also in the proof of stake system and the consensus mechanism.
00:40:50.990 - 00:41:15.878, Speaker A: I know that at some point in the last half hour or so you mentioned Intent Gossip. I kind of want to bring that back up and talk about that in this context of the Bartering system and all of these multiple pools. Because gossip, as we've understood, is sort of like message passing, right? It's sending a message out and having it be repeated. But how does it work in this system? Is it different?
00:41:16.044 - 00:42:04.290, Speaker B: Yes. Well, okay, let me explain the way the Intent Gossip system works. So as a matchmaking system, so in our normal, people can't just only submit transactions that directly hit the chain, but they can also submit intents things that they need to coordinate with other people effectively. This may be a trade or an agreement to try to fight climate change to incorporate cost of carbon. It's arbitrary what intents people can submit. And the way these intents work is that they float around in a gossip system for these intents before they get settled on chain, and then people look at them and there's incentive there for people to match different intents that are matchable with each other. This also comes in really handy though, given the upgrade system that Anoma uses.
00:42:04.290 - 00:42:58.502, Speaker B: So it scales fractally and it upgrades fractally, meaning that we don't have these binary switchovers that all existing systems have. And that really suck in my opinion, because in a binary upgrade system, your software either, like today, the new software comes active and controls 100 million, but you have no testing outside of test environments. But there was no slow ramping up of value being tested on the new protocol version. Right, with Anoma, the way Anoma upgrades is that you deploy a new protocol version, anyone can deploy a new protocol version and over time, assets can slowly migrate into the new version. Right, because fractal instances are interoperable with each other. So from the main ledger you launch prototype two slowly assets migrate. If a lot of assets migrate, then you can do the final binary switch over where you migrate all the remaining state with you.
00:42:58.502 - 00:43:04.902, Speaker B: Right. So this is how Anoma upgrades but the Intent Gossip system works globally over.
00:43:04.956 - 00:43:08.642, Speaker A: All instances, even if it's previous versions.
00:43:08.786 - 00:43:10.918, Speaker B: Even if it's previous or future versions.
00:43:11.014 - 00:43:14.522, Speaker A: Does that mean like, trades can actually happen across that as well?
00:43:14.656 - 00:43:35.338, Speaker B: Yes, trades can also happen between instance, between fractal instances, which means you have liquidity between because otherwise you have the problem that your liquidity is fundamentally tied to your fractal instance. So the upgrades almost always have to be binary in that case. But in nomi, you don't enforce into this, you just get one global gossip layer for all instances.
00:43:35.434 - 00:43:44.946, Speaker A: I think I forgot to ask this, but we talked a little bit about the like, clients, but are all of the instances running like clients? Is that how you'd kind of imagine it?
00:43:45.128 - 00:44:33.246, Speaker B: Yes, like they connect to each other via currently most likely IBC, because it's honestly like an asset agnostic protocol that just works well, but honestly, I'm struggling with this a little bit with I think the way people currently think about these systems is like, oh, interoperability protocols are specifically tied to existing things. And that's entirely not the point of interoperability protocols. They're meant to neutrally connect things so no one will support whatever interoperability protocols come out. If there are better protocols, like UDP, for example, a different protocol from the Internet stack, if that comes out in two years, anomaly is happy to support it because we just care about using well designed, well specified interoperability protocols. And yeah, so fractal instances also connect by the same interoperability protocols.
00:44:33.438 - 00:44:49.190, Speaker A: Can fractal instances also be different types of blockchains? Like, could there be a UTXO one, an account model one? Is there variations on these or do they have to have at least some baseline consistency?
00:44:49.530 - 00:45:16.094, Speaker B: So the anomal protocol can probably change quite fundamentally, but I don't think it could change to UTXO a different account model because a lot of the transaction execution flow and the way privacy works is just tied to this account model, to this very generalized account model. Also, I don't see a reason why you would want to do this. UTXO seems clearly worse. Same for the existing account models with imperative execution.
00:45:16.222 - 00:45:22.718, Speaker A: Okay, so let's talk then about different types of account models. And is anoma built like ethereum.
00:45:22.814 - 00:46:15.394, Speaker B: First off, there are accounts, let's say, this way, but like something like NIA or even Pocketed is much closer to Ethereum than Anoma is. All these systems have accounts. And for example, the way smart contracts on NIA work is also it's like this imperative execution, right? Like you invoke a smart contract, you invoke an account with code in NIA, and it sort of starts with the first instruction, goes to a second, goes to a third, maybe tries to call a smart contract, maybe this is a synchronous or asynchronous call, but it's fundamentally top to bottom. What happens in Anoma is more that the state changes are computed first and then they're passed into all validity predicates at the same time. And these validity predicates really don't do computation in that sense. They do verification whether they are happy with a state change. So they don't go, let me call next contract, let me then do five plus five.
00:46:15.394 - 00:46:24.326, Speaker B: They go, this is the resulting state. Am I happy with this? Am I happy that I lost a bitcoin and received ten ETH? That's the model.
00:46:24.428 - 00:46:29.958, Speaker A: And there's this validity predicate that's submitted alongside each. Is it in each account, or is.
00:46:29.964 - 00:46:31.814, Speaker B: It in every account has a validity predicate?
00:46:31.862 - 00:46:37.370, Speaker A: Okay, is that submitted or is that the verification side of things? That's what's used for verification.
00:46:37.790 - 00:46:49.822, Speaker B: So when someone creates an account, like when an account is created, a validity predicate has to be attached to that account, and then that validity predicate can do verification, like is invoked when that account is invoked as well.
00:46:49.876 - 00:46:53.866, Speaker A: How does the Ethereum one work, then that one's more like writing.
00:46:53.978 - 00:47:24.458, Speaker B: So in Ethereum, I call an account and then you also invoke the smart contract, the code in the account. Right. But the code more goes like it doesn't see the resulting state. It just tries to do five plus five, call separate contract, move a token somewhere. It does imperative computation, whereas in Anoma, it's more of a functional system to some extent. You can think of this kind of like Ethereum is imperative and anoma it's more functional in terms of how the accounts work.
00:47:24.624 - 00:47:37.230, Speaker A: So at what stage is the Enoma project today? Are we talking it's on testnet? It's still like modules that are kind of like being put together. Is it like, where are we at?
00:47:37.380 - 00:48:13.638, Speaker B: Yeah. So maybe one important note here to start off with is Anoma is pretty far along. This is like not a researchy kind of idea where we trying to figure out whether this works in practice or not. All the research is done and it works and it's mostly focused on implementation at this point. So we are currently running the first internal test nets. Hopefully we're starting to have public testnets in the next four weeks or so, like the first public testnets and then probably incentivized testnets later this year as the stack gets more and more testing. Yeah, this is where we are timing wise.
00:48:13.734 - 00:48:20.634, Speaker A: What do you imagine? Maybe it's too early to say this, but do you imagine sort of a first use case that you're going to highlight or work towards?
00:48:20.832 - 00:49:07.370, Speaker B: Yeah, I think one of the first use cases is certainly going to be this multi asset chill pool and just giving people incredibly good privacy guarantees irrespective of what asset they hold. I think really people underestimate this. This is currently completely impossible to do in our space. Like, if you have a CryptoKitty and you want to shield your CryptoKitty, that just doesn't work. It's impossible with our noma, your CryptoKitty can live in the exactly same privacy set as your USDT coffee payments. So I think that's absolutely going to be one of the first use cases providing people really good privacy no matter what the assets they hold and then later use cases. I can see a number of things appearing whether this is around trading, around AMMs, I think actually around private bartering a lot.
00:49:07.370 - 00:49:11.974, Speaker B: I think just being able to write more validity predicates or more private circuits.
00:49:12.022 - 00:49:27.214, Speaker A: I have one little like I'm going to take one step back for one SEC because the CryptoKitty example just made me think of a question. If it's an Ethereum based CryptoKitty, does it get locked somehow in Ethereum in order to enter Anoma or is that kind of how it would work?
00:49:27.252 - 00:49:50.470, Speaker B: Yeah, I mean, this is how bridges work generally, right? That the way you move an asset across a bridge is that you lock it against the Valdez set of the receiving side. They then mint it for you. And then the nice thing is, if anyone else wants to go back, they can also. And the Valdez, you burn it on your Noma site, and the Valdez, that unlocks it on the Ethereum side. I think at some point, we should do, like, a whole episode around how Bridging works.
00:49:50.540 - 00:49:57.978, Speaker A: For sure. That is actually so on the docket. Like, Bridging as a topic has come up so often over the last little while.
00:49:58.064 - 00:50:01.900, Speaker B: I can give you a sneak peek there. Yeah, I don't think Bridging makes a lot of money.
00:50:02.910 - 00:50:04.202, Speaker A: How do you know that?
00:50:04.336 - 00:50:31.986, Speaker B: Because Bridging anomal to near, there's no work involved. It's like you just send a bunch of data that exists on both chains to each other. No one is going to charge a 1% fee to move an asset from a NOMADone. For legacy chains, this may be different. So, like, for bitcoin ETH monero zcash NFTs maybe Depends where the NFTs live. So if the NFTs live on Ethereum, maybe. But if they live on near, like, moving data between near and Anomalous trivial whoa.
00:50:32.098 - 00:50:50.186, Speaker A: Okay. Yeah. This is a topic we're at the end of the episode, so we won't be able to cover it this time. But it is really it's good to highlight it now. Cool. Okay. So listen, Adrian, thank you so much for coming on the show and sharing all of this work and thinking around Anoma and the project.
00:50:50.186 - 00:50:55.246, Speaker A: Can people already get involved, learn about it, go somewhere? Where should they go?
00:50:55.348 - 00:51:15.022, Speaker B: Yeah, absolutely. So Anoma Network is the first place to stop. We have the research block up there, so a lot of the underlying tech is explained in it, and we're releasing more and more explanations for how all the stack works. There's the white paper as well, which explains Anoma in a very comprehensive way. I'm a big fan. It's not that long. It's, like, eight pages.
00:51:15.086 - 00:51:19.398, Speaker A: Yeah, it's a bit longer than that. I think it was 14 pages. I recently looked at it.
00:51:19.484 - 00:51:33.514, Speaker B: Maybe it may be 14. Anyway, don't tell them. Get them hooked first. And yeah, so we're always looking for good engineers. If you're interested in privacy, bring privacy to the masses. Bring privacy to all assets. Reach out to me.
00:51:33.514 - 00:51:47.790, Speaker B: You can reach me, Adrian, at Anoma network. You can also find us on Twitter under Network. Yeah, and I mean, public testings are coming, so join the discord. They're going to come in the next four weeks or so. So looking forward to it.
00:51:47.860 - 00:51:50.798, Speaker A: Very cool. So thanks again, Adrian, for coming on the show.
00:51:50.884 - 00:51:52.062, Speaker B: Thank you for having me.
00:51:52.196 - 00:51:58.730, Speaker A: I also want to say thank you to the podcast producer, Andre, the podcast editor, Henrik, and to our listeners. Thanks for listening.
