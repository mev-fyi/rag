00:00:05.450 - 00:00:52.246, Speaker A: Welcome to zero knowledge. I'm your host, Anna Rose. In this podcast, we will be exploring the latest in zero knowledge research and the decentralized web, as well as new paradigms that promise to change the way we interact and transact online. This week, I chat with Awa, co founder of Anoma and Namada. We talk about her background in crypto analytics, her shift to working on infrastructure and privacy tech, and how the Anoma project came to be. She also introduces us to Namada, a separate but related network. We go through all the various cryptographic pieces that their team has been developing, many of which have been presented at the ZK Summit, Zkhack and in our ZK study clubs.
00:00:52.246 - 00:01:30.850, Speaker A: We then discuss how these fit into Nomada and in the future, into the Enoma protocol. But before we kick off, I just want to share an announcement from one of our partners on the latest CK Summit, the Web Three Foundation. They are hosting an in person event called Subzero in Lisbon at the end of this month. It's a polka dot developer conference. This year's edition will bring together the global polka dot community and provide an open introduction to those looking to learn more about substrate polka dot's framework for building custom blockchains. I've added the link in the show notes where you can learn more and apply. I also want to let you know that there is a new Zkhack multi week event coming up, starting on November 22.
00:01:30.850 - 00:01:47.322, Speaker A: If you haven't been to any of the previous ones, it's a series of workshops spread out over four weeks with puzzle hacking competitions. Be sure to sign up for our kickoff event and jump into ZK puzzle hacking and workshops with us now, Tanya will share a little bit about this week's sponsor.
00:01:47.466 - 00:02:23.830, Speaker B: Today's episode is sponsored by Alio. Alio is a new layer one blockchain that achieves the programmability of ethereum, the privacy of Zcash, and the scalability of a rollup. If you're interested in building private applications, then check out Alio's programming language called Leo. Leo enables non cryptographers to harness the power of ZKPs to deploy decentralized exchanges, hidden information, games, regulated stablecoins, and more. Visit Leo lang.org to start building that's Leo la n g.org. You can also join Alio's, incentivized testnet three by downloading and running a snark OS node.
00:02:23.830 - 00:02:34.110, Speaker B: No signup is necessary to participate. For questions, join their discord@alio.org discord. So thanks again, Alio. And now here's our episode.
00:02:37.330 - 00:02:41.774, Speaker A: So today I'm here with Awa, co founder of Anoma and Nemada. Welcome to the show.
00:02:41.812 - 00:02:43.582, Speaker C: Awa thanks for having me.
00:02:43.716 - 00:03:17.014, Speaker A: I'm very excited to be having you on the show. I've had two of your co founders on there's, three of you who are co founders of Anoma Nemata. I've had Christopher Goes years ago talking about IBC More and Adrian Brink last year telling us about Enoma, sort of the first time we talked about it. So, yeah, it's great to sort of have you join as well, I do want to say right off the bat that I'm an investor in Anoma Longstanding through ZK Validator, and I also like to consider Anoma this like a team. I constantly partner on so many things. Like we've done. ZK summit.
00:03:17.014 - 00:03:46.946, Speaker A: Zkhack. You sponsor the show. And anyway, it's just really great to have you on. And I'm very excited to actually catch up, even for my own understanding. There's been so much that's happened since that last episode with Adrian in terms of cryptographic builds and new libraries and announcements. And I think what I want to do with this episode is generally bring it all together. Before this episode, we talked about how you'd never been on the show, but actually, awa, you have been on the show before, so you were on this is such a funny episode.
00:03:46.946 - 00:04:04.218, Speaker A: So I did this episode, the ZCON Zero like, combo episode where I interviewed twelve people. So I did the same thing with Strad just recently. There were so many great people on that episode that it's just because we did such small interviews, I think a lot of people don't really remember.
00:04:04.304 - 00:04:09.466, Speaker C: I clearly don't remember Blake forgot. But yes, I was interviewed at yeah.
00:04:09.568 - 00:04:24.206, Speaker A: Yes. But what I want to do with the beginning of this interview is definitely understand a little bit about your journey, like, what were you working on before and what led you to actually work on Anoma and Nomada and the problems that you're trying to solve and generally, like, working in the privacy space.
00:04:24.388 - 00:05:02.202, Speaker C: Yeah. So the way I got started with this entire decentralized space was, I guess, less common compared to everyone else you have on this show. Actually, my first job in the space was at Channelysis. Maybe some listeners here do not know about Channelysis, but actually ChannelIs knows a lot about all your listeners for certain. So it was a very interesting introduction to it. What I was doing there was that towards the end of my graduate thesis, I was looking for data sets to analyze back then in ML, and I came into just a company called Genalysis. They were doing developing tools to de anonymize blockchains.
00:05:02.202 - 00:05:42.442, Speaker C: This is basically the business model, and I wrote a couple of papers on how you could use them out to denomize bitcoin. So it was a really cool intro to this space because it made it very clear how much privacy was lacking in the base layers and how much you could do by deploying some basic statistic analysis or not even very fancy tools or algorithms to extract a lot of data about individuals and entities that were using blockchains. I kind of wish I could sponsor people to Internet analysis before they touch any blockchain, because I think then we'll want privacy much quicker or a lot less people will be using this for serious things.
00:05:42.576 - 00:05:54.960, Speaker A: Wow. It was almost like that was your first foray in and a major eye opener it sounds like this also colored a lot of the work that you did after. Tell me, after you left Chainalysis, though, what did you do next?
00:05:55.330 - 00:07:02.610, Speaker C: So towards the end, I kind of realized that I started to follow more ethereum. That's how I came across with Cosmos and Tenderman back then. And I kind of wanted to be more involved in the actual development of the protocols. This is because the thing that motivated me the most about technology that really led me to choose to be more involved in layer ones is that I'm into this entire space because I kind of want to bring in systems and applications that do not further exploitative paradigms that we currently have, especially in Web Two. Like, we have all the systems that basically give a few parties a disproportionate amount of access and disproportionate amount of power and leverage of users, individual data, or a bunch of other things. And I kind of wanted to pursue a path where I could actually start building things and contribute to building systems that can bring alternatives to these exploitative paradigms. So then I realized that doing data analysis and looking to analysis was probably not the most way to have a big impact.
00:07:02.610 - 00:07:12.390, Speaker C: And then I saw that still the state of protocols was in very early stage. Like, back then, proof of stake was still, like, theoretical concept.
00:07:12.970 - 00:07:15.170, Speaker A: What year are you talking here? 2017.
00:07:15.250 - 00:07:19.318, Speaker C: You're talking about was the end of 2017, beginning of 2018. Right.
00:07:19.404 - 00:07:27.878, Speaker A: I think that's when we met. Right. I think it was right around that time at full node that we would have first crossed paths had you left the company then or were you sort of like, in the process of leaving?
00:07:27.974 - 00:07:45.258, Speaker C: I was still part of Genosis, didn't leave yet until I decided to be more involved with Cosmos. And then for Cosmos, I was just involved in pretty limited capacity part time. And that's where I met Adrian and Chris. And then the history follows.
00:07:45.354 - 00:07:52.334, Speaker A: Cool. But before you did Anoma, you did have another project together. The three of you. Tell me a little bit about being a Validator.
00:07:52.462 - 00:08:16.214, Speaker C: Yeah, the entire thing is that so I met Adrian and Christopher at Cosmos or Pendaman. And in summer 2018, Cosmos was supposed to launch, and it was not very clear whether there would be enough competent Validators to operate the network admin. And this was still I mean, in summer 2018, proof of stake was still a very early concept.
00:08:16.262 - 00:08:16.614, Speaker A: Totally.
00:08:16.662 - 00:08:56.210, Speaker C: It was theoretically going to work. Like, nowadays, it's completely given all new chains that launch are following the standard of proof of stake. But back then, it was not so obvious, and there was definitely not a very developed landscape and ecosystem of different Validators. So together we kind of decided to start a Validator called Crypton Labs. This is how I also moved to Switzerland and why we picked Switzerland as well. And the Anecdote that maybe adrian Skipped is that actually we are the only Validator that is kind of considered national security critical for cool. So like it is part of the critical infrastructure of a bunch of Swiss banks.
00:08:56.290 - 00:08:56.678, Speaker A: Wow.
00:08:56.764 - 00:09:11.114, Speaker C: So the story is that one day agent was going to a data center and then he ran into a few tanks that were just doing some kind of they were just doing some training and testing how they would defend this data center in case something happened.
00:09:11.232 - 00:09:20.030, Speaker A: Whoa. But wait, it wasn't data security just because of that you guys were in the data center? Was it like there might have been other things there as well?
00:09:20.180 - 00:09:26.978, Speaker C: It was because there are a bunch of nationwide critical financial infrastructure I see that also uses that data center.
00:09:27.064 - 00:09:27.474, Speaker A: Oh cool.
00:09:27.512 - 00:09:32.574, Speaker C: And then that was just like entire group was being defended and secured by the military.
00:09:32.622 - 00:09:33.220, Speaker A: Wow.
00:09:33.910 - 00:10:07.210, Speaker C: But anyways, crypton labs, proof of stake validator. It was actually the first organization or company that we started, the three of us. And it was a Proof of Stake Validator that focused a lot on security over things. Those things mattered. Nowadays everything is on AWS and we were the few that actually run as much physical infrastructure as possible. So Bare Metal as use as much physical HSMs as possible. And we focused on operating networks that we consider technically interesting and novel.
00:10:07.210 - 00:10:08.800, Speaker C: So a lot of layer ones.
00:10:09.170 - 00:10:41.482, Speaker A: That was a very different time for the Validator community though. I mean, I've spoken to Brian Crane about that too, which is like back when it first started, there wasn't really a clear business model. It was just so unsure if this would be something that could be a business that would be sustainable. So a lot of the people doing it were kind of just experimenting, trying it out, like seeing how it went. How was that? I mean, in your case, were you all still working somewhere else? I know Chris was still doing IBC research and stuff like that at the time.
00:10:41.536 - 00:11:16.610, Speaker C: That's right, yeah. And Adrian was still part of Cosmos. Later on he joined Web Three before being more involved. But I was working on it basically full time. Okay, so the end of Crypto Labs was just that over time, it was really cool to be part of operating infrastructure and the networks of layer ones. But sometime in the middle we kind of realized that we wanted to be more involved with more protocol research and also getting more into some areas like cryptographies and large proofs. Back then, I think 2019 was the Cameron explosion of Ckt.
00:11:16.610 - 00:11:22.310, Speaker C: So by then, for example, specifically to that field is when we started Metastate.
00:11:22.650 - 00:11:40.090, Speaker A: And I remember that it was like, this is a Validator. And yet there's this really crypto heavy blog. I actually remember I'd always posted on ZK Mesh, which I'm going to plug right now, by the way. ZK Mesh is a monthly newsletter that's still out where we put the latest research. I'll put a link to that if anyone.
00:11:40.240 - 00:11:51.402, Speaker C: I remember ZK Mesh did feature some of the articles that we posted on Metastate's blog. This is the company name. Yeah, those with example proc by Hand was one a very popular one, totally.
00:11:51.466 - 00:12:20.262, Speaker A: But yeah, I remember that and I remember thinking like this is an interesting Pivot sort of for a validator I mean around the same time I started ZK Validator actually and we fully leaned into like we're just promoting, talking about and championing this new technology. But tell me kind of from Metastate to was Cryptium becoming Heliax or was Metastate becoming heliax in a way so.
00:12:20.316 - 00:13:15.434, Speaker C: Actually Cryptium was just a Validator and you just stayed that way? We started Metastate as an independent company and the thesis behind Metastate was just that. We're Not Very Clear On Ahead Of Time, what Would Be The Business Model Behind Metastate, but We Kind Of Bet On The People who Are Able to Write Novel Layer One Protocols build Them And Operate Them and Maintain them. Plus that we're knowledgeable among three particular fields which were distributed systems and consensus PLCs programming languages and cryptography, especially in the Ziki piece will be able to make money in the future assuming that those four pillars were going to be crucial for any team that in the future will be if all of this is going to replace financial system then a team that has this kind of knowledge and expertise would not have issues making any money. So that was like the story behind Metastate and our purpose with it and.
00:13:15.472 - 00:13:22.170, Speaker A: Did it become heliax or did you kind of start something new with learnings from Metastate?
00:13:22.910 - 00:13:36.770, Speaker C: Actually the team that was a Metastate towards the end of 2020, officially on the 1 February was the one that was brought to Helix. Okay, so I think you could consider that Metastate pivoted towards Helix. We started with a team of 15 cool.
00:13:36.920 - 00:13:52.086, Speaker A: And that group, it was a research group like you were creating content, you're building sort of like this knowledge base, talent base in a way. Were you building something then too? Were you already experimenting or was it more like a research group?
00:13:52.268 - 00:13:56.354, Speaker C: No, we actually built all major protocol upgrades on Tezos.
00:13:56.482 - 00:14:04.214, Speaker A: Oh yeah, this is maybe something to mention because Tezos was a strong connecting point. You were really involved in that community after being involved in Cosmos.
00:14:04.262 - 00:14:10.614, Speaker C: Eh, I think it was more because actually Tezos was the first proof of stake network that launched.
00:14:10.662 - 00:14:11.114, Speaker A: Oh yeah, true.
00:14:11.152 - 00:14:23.262, Speaker C: They had a very unique like their own proof of stake model but it did go live in summer 2018. So that's when we started Crypto man, we kind of decided to just operate that to see how it goes.
00:14:23.316 - 00:14:23.870, Speaker A: Got it.
00:14:23.940 - 00:14:55.242, Speaker C: That's how we got connected to the Tezos ecosystem and we did get some grants from the Tezos Foundation to build on to further some of the research that they were also interested in all the areas on PLTs, the KPS and Consensus that we're doing, they were interested in as well. But at the same time, we also worked together with the core development team and build some of the major changes that upgraded life billion worth of value, good governance process.
00:14:55.376 - 00:14:57.894, Speaker A: Damn, that's wild.
00:14:57.942 - 00:15:46.918, Speaker C: But this is just to show that I think our background is more like it's actually very full stack in the sense of you see a lot of teams nowadays that are Estellar in cryptography. You see a lot of teams that are stellar in layer ones and some that are really stellar in application. But I think what is very unique about Helix as a team is that we have everything from operating networks from the validator side to writing, extending layer ones to application building like DApps and everything. And this has also translated a lot into today's Heliox because we're building Helix as an organization that is vertically integrated. So we're not building only layer one. Launch it and know, now go have fun, build applications and interfaces. We actually say later with Nomada, for example, it's not just the protocol and then the tooling and everything around ecosystem.
00:15:46.918 - 00:15:53.658, Speaker C: It's also being released with at least one end user interface so people don't have to rely on the command line.
00:15:53.744 - 00:16:21.160, Speaker A: Got it. And actually, I think it's a really good moment for us to define these different groups that we keep kind of mentioning. So when I introduced you, you were the co founder of Anoma Nomada. So we've mentioned this a little bit. But Heliax, so heliax is a company full of great engineers with all of this experience. What is today just a note, like when I had Adrian on a year and a half ago, we talked about Anoma. So how do you define what Anoma actually is?
00:16:22.410 - 00:16:32.822, Speaker C: So Anoma is the name of the protocol. It is one of the protocols that we're building. The other one is nomada. It is also protocol. So there is no company organization.
00:16:32.966 - 00:16:41.900, Speaker A: Okay. Do they interact? Like, are they connected? Is Anoma going to be, I don't know, some protocol underpinning what Nomada does?
00:16:42.430 - 00:16:46.830, Speaker C: So first I'd like to just give an updated definition of what Anoma is just on a high level.
00:16:46.900 - 00:16:47.470, Speaker A: Sure.
00:16:47.620 - 00:17:13.362, Speaker C: Just to position the entire thing. So actually Anoma is just new novel general architecture to how you build blockchains. We refer to it as a generation three. So it's a general architecture. It has a lot of association with privacy, but it's actually not a privacy blockchain in that sense. It is just on the privacy side. It allows you to expose really good privacy, bezeman primitives for application developers.
00:17:13.362 - 00:17:30.198, Speaker C: But the right way to think about Anoma is that it is just the next evolution in how you're going to build layer ones to later on support applications with different properties. So novel applications cannot build an existing blockchains or the same applications, but fully decentralized.
00:17:30.374 - 00:17:39.310, Speaker A: And then at the same time, though, would you then categorize this as something like substrate? Is it the builder or is it like the Cosmos SDK?
00:17:40.130 - 00:18:15.766, Speaker C: No. If we're back in 2015 and we only had bitcoin protocols and cryptocurrency protocols, like we call them, we call this group as crypto Settlement. And then Vitalik came and know, I can try to do a few cool applications of bitcoin, but honestly, it doesn't work. It is all clunky as fuck, and this is just not usable. So here I proposed Ethereum, which is just a new way of building blockchains. So anomaly, it is the same, but today Anoma is just proposing a new way of thinking about how you build the base layer, on top of which you can build applications.
00:18:15.958 - 00:18:25.100, Speaker A: Is it sort of like the way bitcoin goes from UTXO to account model? Are you going from account model to new account model or privacy account?
00:18:25.490 - 00:18:59.240, Speaker C: No. So actually, the right progression I'm just going to tell you the entire evolution of protocols in a nutshell. Okay, I think is that we look at the first generation marked by bitcoin as scriptable settlement. So scriptable settlement is actually really good for building cryptocurrencies with different flavors and privacy guarantees. Like with that. You see monero zcash venture cold stuff. What a lot of people don't know in history is that with bitcoin script, you can actually build other DApps and applications like color coins, namecoin, bitcoin, stock change.
00:18:59.240 - 00:19:38.414, Speaker C: However, the issue is that you can build it and it works. But the issue is that applications will always have trade offs and they will always look clunky and hard to use. So actually, Vitalik speaks about this problem in the Ethereum white paper, and that gave the room for him to introduce an entire new paradigm, which is what we call programmable settlement. So it adds more specificity and you're able to program more logic at the settlement layer. And this is what gives birth to better versions of color coins, which is the modern ERC 20 or to namecoin, which is the modern ENS, way more usable, way more widespread.
00:19:38.462 - 00:19:38.626, Speaker A: Right?
00:19:38.648 - 00:20:17.138, Speaker C: Yeah. And it also gave birth to a new era of new applications that it was way too hard to build on the script doors that were maybe impossible. And those are things like NFTs, DEXes, AMMS, NFT, Marketplaces, DAOs, a lot of very interesting applications that you see today. And then ever since Ethereum, if you look into all the layer ones that were launched, ever since, we call them basically programmable sediment plus plus. And this is because if you look at them, in essence, the model that they introduce for application developers is still the same. It's still this imperative model. Smart contracts call them differently, but it's the same.
00:20:17.138 - 00:20:43.846, Speaker C: But they come with different improvements in some particular areas, like, it's faster, it's more scalable. In some areas, it is more private, comes with different consensus, different civil resistance mechanisms switch from proof of work to proof of stake. But if you look at them and also the applications that build today, they're basically the same. So this is why you consider everything ever since Ethereum launched as programmer settlement plus plus.
00:20:43.948 - 00:20:52.910, Speaker A: Okay? And what is Enoma doing different? And maybe you wanted to clarify that because does it use a sort of UTXO type model but does it better?
00:20:53.060 - 00:21:57.970, Speaker C: That is actually not so important. The background to why Anoma is the third generation is that how we got to Anoma, right? How we got to today's architecture of Anoma and it is because we looked at some of the most advanced applications in Ethereum world but it generalizes to any other programmer settlement system applications is that they all follow a very similar pattern. And you will also see that it has a bunch of downsides like a lot of centralization points. So every application in Ethereum think of for example, all the layer twos, think of cowswap, think of OpenSea, the NFT Marketplace, they all follow the pattern where the user has an intent. So an intent is just a sign message that they send somehow to an application. The sign transaction on authorization that intent is scattered by at the moment. A lot of applications make this visible by a single operating database that usually becomes centralization point that does some kind of compute to output a state transition on Ethereum and that gets finally settled on Ethereum.
00:21:57.970 - 00:23:19.542, Speaker C: So this is, like, the common pattern of most interesting applications on Ethereum that, at the moment, the best you can do is to follow this thing where okay, you have the single operating database that gathers the intense dustin. Compute that becomes actually decentralization point and checkpoint and it comes with all the issues and kind of becomes the Russian point with this entire technology. But there are currently two paths where you either go for the dYdX approach where you just launch layer one to decentralize just that part, which comes with a lot of complexity but it is an easy way to fix today the problem or you go for the other approach where you are ready to operate a very large organization like Coinbase and everything. And I guess OpenSeas might go for that approach as well. But the main point is that how does the Noma fit into all of this? And actually this is the background of how we came to the conclusion of what do applications need before they need a blockchain. And the main point is that if you want to do counterparty discovery so any application that needs kind of party discovery where you do not yet know who your other parties are and what it is you're settling with, this is needed for basically any application including DEXes and Marketplaces.
00:23:19.686 - 00:23:24.794, Speaker A: Does it affect your ability to do an intention the way you describe that because you don't know who your counterparty.
00:23:24.842 - 00:23:28.218, Speaker C: Is today, there is no way of doing decentralized counterparty.
00:23:28.314 - 00:23:28.910, Speaker A: Okay.
00:23:29.060 - 00:23:35.518, Speaker C: Outside of you have always a trusted party where you're selling the intents and they're going to try to do and.
00:23:35.524 - 00:23:43.380, Speaker A: Here you're thinking like an order book, a little bit like you say, I want to buy this at this amount, and you're waiting for someone to sell it to you at that amount.
00:23:44.310 - 00:24:17.370, Speaker C: Not exactly. So I'm going to get that to those design principles in a bit. But the main point of phenomena and why we think of it as the third generation is primarily that it is one architecture. Think of it as like ethereum, but it's just a different protocol at many levels in how it's constructed. And this protocol has the bandage that allows you to do decentralized counterparty discovery. It supports intents, decentralized counterparty discovery, distributed solving, and MultiChain settlement. So it also has settlement part.
00:24:17.440 - 00:24:38.658, Speaker A: So it's just like a different way of thinking about it, decentralized counterparty. Like, it's sort of introducing almost like a different paradigm on how you would then build applications. On top of it, you have these different tools. Okay, now I have to ask, is Namada not using that too? Is it not using these principles, or is it just tackling a different problem?
00:24:38.824 - 00:25:40.706, Speaker C: So actually anomalous architecture for applications. Okay, but we kind of realized that early this year. So the story of why we decided to actually release the matter sooner is because there are some parts of anoma component wise, think of consensus, think of tyga and some of the other components that were still in development. And there were also a lot of features that were already ready that we could just deploy it into an application or into a layer, one that could provide a lot of utility today. And there are a lot of parts, like, for example, the base ledger, the validity predicate system, especially the MASP, the entire thing that allows multi asset agnostic part. A lot of these things actually were ready, and we really wanted to launch Namada sooner just because we need a protocol that allows you to gain privacy without caring about what assets you use as a monetary policy. Okay, now more than ever, especially with the recent events, let me sort of rephrase.
00:25:40.738 - 00:25:50.390, Speaker A: What I think you're saying here is like, you've been building, and we're going to talk about this like a bunch of different cryptography pieces. We haven't always understood how they fit together when they've been released.
00:25:50.470 - 00:25:50.970, Speaker C: That's right.
00:25:51.040 - 00:26:05.630, Speaker A: Great research papers, very interesting. But we're like, okay, why exactly are they doing that? So now what you're saying is you have a few of those pieces in a state where you could release something, but you don't necessarily have all the pieces you would need to build out full Enoma. Is this true?
00:26:05.780 - 00:26:06.606, Speaker C: As of today?
00:26:06.708 - 00:26:13.540, Speaker A: Okay, so then is Nevada sort of like your Canary network then? Is it like your first and then there's going to be another one.
00:26:14.150 - 00:26:21.186, Speaker C: The thing about Nemada is that I think the closest case in layer one's world is polkadot with Kusama.
00:26:21.218 - 00:26:21.558, Speaker A: Okay.
00:26:21.644 - 00:26:53.374, Speaker C: But it is actually different because no matter is its own layer one with its own scope feature set, which is layer one proof of stake protocol that provides interchange asset agnostic privacy. So that's the purpose of Nomada. It did start from an earlier version of Anoma. So it does come with some features that developers, they look closely. It's basically introduction or like a stepping stone towards Anoma. In the future, however, Namata is going to just leave as its own chain. It would not have an upgrade path necessarily to Anoma.
00:26:53.374 - 00:28:04.920, Speaker C: However, it will be a really more intuitive and more immediate introduction to a lot of concepts that later on will be useful to understand Anoma, practically speaking, looking at how the landscape is today with users, especially with certain aspects around interoperability, like cross chain transfers and all these things. IBC and bridges, a lot of bridge exploits. I kind of feel like we're still in early stages, even with concepts that we've been talking about for years by now. So I kind of feel like we need to launch a network as well, where you prove that there are better designs for ethereum bridges, trustless ethereum bridges, and there are good ways of leveraging great protocols like AVC for applications you can get on other blockchains that you cannot get on the base chain. So I think of Nomada as a more intuitive, immediate entry point to a lot of these concepts of interoperability, but also protocols that are asset agnostic. So it doesn't matter what the native assets are. It's more about the protocol provides you utility, and then you decide which assets want to benefit from privacy or want to live where.
00:28:05.450 - 00:28:29.326, Speaker A: And I think we're going to get into this a little bit later. But because it's a privacy focused project and because it's like dealing in interoperability and privacy, you are trying to build up in a way like that shielded pool, the candidates, the participants, the assets that live in the sort of shielded environment. Because the more that's in there, the less easy it is to figure out who's who. Is that also part of it.
00:28:29.348 - 00:28:31.290, Speaker C: Did you feel like this is part of Namata?
00:28:31.370 - 00:28:41.518, Speaker A: Yeah. Is that why? But that's what I'm wondering. Did you sort of feel like if we don't start building this up, if we wait until everything's perfect and release it, you're going to have to start then to build up those type of pools?
00:28:41.534 - 00:29:22.714, Speaker C: Actually, no, it's quite independent. If you need to take away two major features that Nomada brings to the table today, that really no other protocols brought so far. The first one is just the idea that all assets share one Anonymity set. This is enabled by the MASP plus two upgrades that include the convert circuit. And this allows you to have one. Shielded set for anything, including doesn't matter with the denomination and the origin of the asset. So think of like in the shield set, the native asset, tokens from Cosmos, tokens from Osmosis from Ethereum, NFTs, they all will be part of the SIM set.
00:29:22.714 - 00:29:57.622, Speaker C: So this what means is that the anonymities will not be weakened or fragmented and then the privacy guarantees are going to be the same for all assets. Because the issue that you have with when you do not have something like unificial asset is that if your asset has very low transactional volume, it is actually quite trivial to the anonymize. It by just monitoring the entries and exits. So maybe this is very small, but if all assets share the same, then an NFT that has a lot of volume looks the same as a transaction that pays gas fees.
00:29:57.686 - 00:30:02.958, Speaker A: Yeah. Although it's always at the movement outside of the shielded environment that becomes the problem.
00:30:03.044 - 00:30:03.646, Speaker C: That's correct.
00:30:03.748 - 00:30:04.014, Speaker A: Yeah.
00:30:04.052 - 00:30:50.150, Speaker C: So this is dancing Ruby, just that the point to the shield set to Namata that will still be transparent. And then if the origin chain is transparent, which is the case for most layer one, then that also becomes a place where observers can observe, can get a lot of information. But if you interact within the shield set, so as soon as you make it to the shield set, people will not be able to connect it once it exits, unless you do some kind of a usability error or you send it to the same account on Ethereum or something like that. So that linkability is broken. And as long as you are within the digital set, which you can also just use to do any kind of transactions with all your assets in the shieldless set, there won't be no transaction graph will just be removed.
00:30:50.310 - 00:30:55.134, Speaker A: Do you imagine actually any computation happening within that space, though in nemada, as.
00:30:55.172 - 00:30:57.242, Speaker C: In just like arbitrary computation?
00:30:57.306 - 00:31:01.578, Speaker A: Yeah. Or is it more for the transfer, more for the pool?
00:31:01.674 - 00:31:29.758, Speaker C: It is possible. Actually, some interesting application that we have been experimenting with recently, and this was inspired by a conversation that Christopher ghost had with Dev Aria from Osmosis. Is that actually Namata as a protocol, and we're not releasing this with version one, but this is really cool and we could do this, is that you can actually use Namata as front end to create shielded actions on other OOH.
00:31:29.874 - 00:31:31.446, Speaker A: Because it's IBC enabled.
00:31:31.478 - 00:32:11.106, Speaker C: Maybe because it's IBC enabled, you have some of the asset pool the assets already there, there's no linkability for there's going to be. So for example, and this is how you work with Osmosis, the way you use this is that imagine that you want to do a trade on Osmosis and Osmosis is transparent chain. So everything that happens there is kept transparent. But what you can do is via nomada the shielded pool, you can authorize an action of trade those two assets on osmosis. And then this package gets transmitted over IVC to Osmosis. That trade happens and it gets back to the shield pool.
00:32:11.138 - 00:32:17.074, Speaker A: Just the info that it happened, just like a message that it has happened or some sort of token.
00:32:17.122 - 00:32:56.434, Speaker C: In this case, if, for example, the tokens, the initial token say a shielded die on Namara wants to be swapped for Osmo on Osmosis, then the shield of Dai is sent from Namara to Osmosis via, in this case, support. Just think of Ethereum then because I'm not sure if Osmosis supports Dai. But anyways, you want to try Dai for USDC. So you have already in a pre step, hold Dai on Namata. And this is in the shield set. So it's fully private. With that account, you authorize a trade on Ethereum, this Getax application on Ethereum that allows you to trade Dai for USDC.
00:32:56.434 - 00:33:12.966, Speaker C: But you trigger that action by sending the message on Namata that is being transmitted by the trustless Ethereum bridge that we built. And that triggers the action on Ethereum. Then that results in the USDC that you send back in the shield pool.
00:33:12.998 - 00:33:17.718, Speaker A: And it gets shielded again on that return. But nobody knows. Kind of the there's no linkability.
00:33:17.814 - 00:33:51.490, Speaker C: Even if you get you can see how much USDC has been swapped for die on Ethereum. That's transparent. And you can also see that there's some USDC being moved over the bridge to no matter going to the shield set. But that's it. This is like a really cool application that can build using no matter just more to answer your question of at the moment, we don't think we're going to make you can deploy validity predicates in no matter. But I think the main purpose is to focus on interchange asset agnostic privacy. So, like, start with getting people used to the idea that assets can be decoupled from the protocols.
00:33:51.490 - 00:34:04.346, Speaker C: You can get privacy without having to buy in into the monetary policy. You can usually can pay for your milk privately, even if you don't pricing milk using SEC or bitcoin, no matter how much we love SEC.
00:34:04.448 - 00:34:22.046, Speaker A: Yeah, fair. One thing we sort of hinted at, but we didn't go through yet, is the different pieces of cryptography that have been developed. And I kind of want to ask you as we go through this, which parts are in Nemada and which maybe all of them are and also go a little bit into that.
00:34:22.068 - 00:34:22.814, Speaker C: Not all of them are.
00:34:22.852 - 00:34:46.070, Speaker A: Oh, not all of them. So I want to start with one vampire, joshua Fitzgerald. I think that's how you say his name, right? Yes. Joshua Fitzgerald had presented this at ZK Summit Seven in Amsterdam. And I remember because there's a lot of awesome names that come out of the anoma. Nomada, there's a reason why we name.
00:34:46.140 - 00:34:49.770, Speaker C: Some components of ours. And vampire is definitely one that's going to keep its name.
00:34:49.840 - 00:34:58.810, Speaker A: Okay, so Vampire, let's talk about what that is. It's a language. Right. And I kind of wondered, is it a DSL for writing?
00:35:00.190 - 00:35:15.774, Speaker C: Not exactly. So a way we can look at this and then some people from compilers Bergamot just might kill me because it depends of which abstraction you take from what part. Okay, but you on one hand have DSLs in higher level languages through which you can write circuits.
00:35:15.902 - 00:35:16.530, Speaker A: That's it.
00:35:16.600 - 00:35:46.458, Speaker C: So think of, for example, Circadies, think of Circum, like a lot of high level languages and DSLs, I think Leo will still be from Alio will also be part of this category. And then you have in the end proof systems like Plonk, Risk, Five, et cetera. And in the middle sits Vampire. So Vampire is the intermediate representation that allows you to basically transform the higher level languages in DSLs into something that any proof system can understand.
00:35:46.624 - 00:35:51.642, Speaker A: So it's not native just to the kind of circuits that you're using then?
00:35:51.696 - 00:36:33.818, Speaker C: No. Okay, so Vampire and this is why we wanted to have its own name, its own memes and Brand is completely agnostic. So we build it in a way as like we thought that it would be really high leverage to bring in this part of the entire tooling for writing circuits in ZKP world because there is just no standard. And by having this, it will allow us to basically make all higher level languages be able to compile down to different proof systems independent of what proof systems are available today and in the future. So it is completely intended to be a kind of standard, but a neutral tool that auto ecosystems, languages and builders can fully benefit from.
00:36:33.904 - 00:36:50.750, Speaker A: Got it. Do you have a DSL as well, or would you imagine people writing? I don't know if they have to, but if they're trying to write the circuits in your system, would they then use a different DSL? Could they use leo and vampire?
00:36:51.330 - 00:37:21.370, Speaker C: So we are for the full vertical integration for just because applications on Anoma don't look the same as applications on programmable settlement architectures. We actually are building a high level language called Juvix. I think you guys have spoken about this on a different podcast. It didn't make a lot of sense. But the way Juvix integrates is juvix is a high level language for writing applications on Anomal. I see, so it's for all kinds of applications, ones that handle private state or not private state or a good transparent state.
00:37:21.440 - 00:37:26.966, Speaker A: So you would write in Juvix and then Vampire would convert it? Or would you not need Vampire?
00:37:27.078 - 00:37:46.634, Speaker C: Oh, you do need no, it's integrated with Vampire. So if you want to write certain applications that require, for example, custom circuits, you will be able to do that directly on Jubix as a higher level language then goes to a Vampire and then it gets compiled onto the corresponding proof system as the application needs.
00:37:46.772 - 00:37:52.466, Speaker A: The next thing I want to ask about is Tyga. I actually have the name and I have no notes because I don't know.
00:37:52.488 - 00:38:03.170, Speaker C: Anything about what is yeah, yeah. So Tiger is actually the unified execution environment of Anoma. Think of it as like the state machine of Anoma.
00:38:03.250 - 00:38:05.798, Speaker A: Does Nemada have that or not?
00:38:05.884 - 00:38:07.858, Speaker C: Nomada does not come with Tiger.
00:38:08.034 - 00:38:15.622, Speaker A: So Tiger is a anoma only. Actually going back juvix would be used for n vampire. Would that be for both Anoma and Nomada?
00:38:15.686 - 00:38:49.422, Speaker C: So for Nomada we actually don't need it because the circuit has been written, it's the MASP circuit and we just have been upgrading it. We didn't use the tools for this. Parts of it I often compare to Zexi and very Zexi. Okay, so just a little bit background story of why Tiger and how it relates to norma. Why is it specific to Noma's architecture? So Anomalous architecture has this unique design principle which is it is Intent centric. So users do not sign transactions. Users sign which end state they will be happy with.
00:38:49.496 - 00:38:49.830, Speaker A: Okay.
00:38:49.900 - 00:39:09.258, Speaker C: And that end state can be like a fixed value, it can be ranges, can be whatever, but they do not pre authorize an execution trace, which is what you do with Ethereum programmable settlement architectures. So they only sign for I'm happy with a state where I have -1000 e and plus one bitcoin. This is what an intent is.
00:39:09.424 - 00:39:11.520, Speaker A: It's not derivatives though, is it.
00:39:13.410 - 00:39:13.966, Speaker C: Because.
00:39:14.068 - 00:39:22.846, Speaker A: That idea of the range and the wish it's often like I just think of derivatives as like a bet on the future. It hitting a certain moment and then.
00:39:22.868 - 00:40:07.326, Speaker C: Something you can't totally build applications like that using the Intent system. It's actually going to be much better to use Intent system than how currently some of these derivative marketplaces and applications are built. Yeah, but the main point is that that is like a big part of how we designed Anoma and there is no auto protocol that is intent based at the moment. And how that relates to Tyga is that so we want Intents to be able to be fully private, also fully transparent depending on the application. And we look at it as like when you define an Intent, if it's fully transparent then this is just WASM code. It gets executed, it gets WASM. You don't need fancy cryptography for that.
00:40:07.326 - 00:40:32.630, Speaker C: But there will be applications which will require different privacy levels for the same application. So at the moment with Tyco we'll be able to support transparent shielded and in the future private Intents. The transparent Intents are just like you can read what the contents are with the shielded Intents, the who is kept private but the what is kept transparent. And this is the best we can do with the ZKPs at the moment.
00:40:32.700 - 00:40:37.990, Speaker A: But you just said that this private one, is there one where both are kept private or no, that's right.
00:40:38.060 - 00:41:13.922, Speaker C: But that relies on some fancy fully homomorphic encryption and we're looking into how long it will take until that is actually usable in this system. But there's actually a lot of things we can already build with combining transparent and shielded state. And that relates to Tiger. So Tiger is able to basically take intents no matter what part is transparent, shielded or private and then execute those. So the background of Tyga is not ethereum is fully transparent. Let's make it fully private or fully shielded. The background of Tiger is what do application builders need.
00:41:13.922 - 00:41:28.898, Speaker C: And for some applications, like a Dao, you will need parts of it to be transparent. Think of, for example, the results of the tallying of a latest vote, but parts of it to be fully private. Like for example, the individual's votes. So don't need to be transparent.
00:41:29.074 - 00:41:35.974, Speaker A: Interesting. Okay, I want to keep moving on to another project, furview a DKG protocol.
00:41:36.102 - 00:41:36.730, Speaker C: Yes.
00:41:36.880 - 00:41:41.034, Speaker A: Where does that fit in and is it in Anoma and Pneumata or only Anoma?
00:41:41.082 - 00:41:41.950, Speaker C: This can be in both.
00:41:42.020 - 00:41:42.590, Speaker A: Okay.
00:41:42.740 - 00:42:33.070, Speaker C: Yeah. So on an anomala and this relates as well to this entire thing about architecture further is just a mechanism that the protocol exposes application builders that makes it really easy to do programmable batching and a bunch of other properties. Like, for example, the Threshold Decryption scheme just removes the ability for validators or observers of the mempo, the transaction mempool to basically do mev or front running because they gain access to that information ahead of time. So purview on Anoma is two things. The thing that the ability for validators to do mev or people who observe the transaction mempool. Here mev will refer to the mev that you can get by gaining access to information ahead of others. So like this informational asymmetry.
00:42:33.070 - 00:43:20.890, Speaker C: And the other part is that it allows you to do a bunch of cool things like say for an application, I want a batch to be this many blocks. This is cool for building applications that allow you to, for example, cowswap on anoma benefits a lot from batches. Any application that where you want to gather, for example, votes, or you want to gather bits from an auction, benefits from this kind of batching, where you're going to keep the intents from the users. Encrypted on the blockchain, but encrypted. And they're only going to get decrypted at the same time, depending on how long the batch is. The only implementation that I know of that's closest to be released on a layer one is Favio, which is our implementation. And the paper was released this year.
00:43:20.890 - 00:43:38.302, Speaker C: It was a collaboration between Joe and okay, but we were the team actually Fervor was started metastate and not at Helix, and we just continued building it. So to my knowledge, it's the only implementation of this kind of scheme that allows you to prevent me from validators and observers of the transaction mempool.
00:43:38.366 - 00:43:44.770, Speaker A: So how built is like you're saying it's already going to be used in Namada. Is it finished?
00:43:45.270 - 00:44:14.962, Speaker C: So I'm just going to come through that. But no matter, we are probably going to leave it out for a protocol upgrade for no matter after mainnet. This is mostly not because Fervi is not ready as a mechanism. It's actually because the mechanism is implemented very closely with consensus. And there is a part on Namada that relies on Avci. So this is tenement core spec that is not ready. And so we were thinking of just deploying preview in a future protocol upgrade of Nomada.
00:44:15.046 - 00:44:23.070, Speaker A: So you talked about batching and helping prevent mev or change mev basically. But first of all, what is it and how is it working in this context?
00:44:23.750 - 00:45:04.990, Speaker C: Right. The intuition is the following. So when you have transactions, they all go to the mempole, right? So far all transactions are just transparent. Like anyone who just takes a look into the current mempos of any blockchain, they can see a lot of stuff in there and that information can be front branch. So like for example, before you craft a block, then you look into what transactions are available, reorder them in the way that you benefit to you the most and everything. Right? So the way Fairview removes that ability is that transactions, before they make it into the mempool, they are encrypted against validators public keys.
00:45:05.490 - 00:45:25.306, Speaker A: Because I talked about this with Dave and Sonny in our interview on Osmosis. We talked about this decryption and I sort of understood all that. But why are we using the term DKG for this? Because to me that distributed key generation. It's breaking up a key into multiple things. Right. So this is where I get kind of confused.
00:45:25.438 - 00:45:41.962, Speaker C: This is just a component in the protocol and it's closest to DKG protocols. But I wouldn't know why we're using this otherwise. So Fervier has two parts. Like one part is DKG protocol part and the other part is the threshold decryption part.
00:45:42.016 - 00:45:46.666, Speaker A: Oh, I see. Okay. There's something in the technique maybe that's yeah, yeah.
00:45:46.688 - 00:46:02.030, Speaker C: But I'm sure like DKG is a family of protocols within cryptography that's not only used, it's not specific to Fairview and from running protection and stuff like that because your protocol is also used in other schemes for other see, I see.
00:46:02.180 - 00:46:26.440, Speaker A: You just mentioned a trustless bridge to Ethereum, right. Are you doing? Work on Mean Chris. Having worked on IBC, I feel like, I think when I had him on last, we talked about what would private bridges look like. Very theoretical, but yeah. Are you working on that? Is that part of the sort of strategy of Anoma Nomada to have that?
00:46:26.890 - 00:47:16.898, Speaker C: So the very first versions of Anoma will benefit from users can transfer their assets from auto chains to Anoma and then they just benefit from the kind of features and permittees that exposes. With Nomada, this is actually more straightforward. We actually need this because we're not presenting Nomada as a chain that creates new assets. It's more about when you have assets that are created in auto transparent chains. How do you retrofit privacy? How do you benefit from the privacy of Nomada? Independent of what assets you want to hold, you want to use. So in order to make that possible in today's world, for any chain that supports modern, Fast, finality and BFD chains like think of for example, any chain that is built using the customer SDK supports IBC. So that's compatible with the IBC protocol.
00:47:16.898 - 00:47:26.790, Speaker C: And that is actually the most preferred design for how you do Bridging because you do not have any trust assumptions even on the real layers.
00:47:26.870 - 00:47:31.030, Speaker A: This is the Cryptographic bridge, straight up. Both sides have like clients.
00:47:31.110 - 00:47:59.186, Speaker C: You don't even need fancy decay bridge for any of this. You basically just have a light client on both sides. That's it. So that would be the best. But sadly, not all chains that are used today with a lot of assets support personality. So an example for that is Ethereum. And the goal was that we really wanted to make privacy accessible for all the people who are using Ethereum and have totally different tokens, including NFTs and Ethereum.
00:47:59.186 - 00:48:41.250, Speaker C: So we looked at the different propositions of like bridge designs and there's a lot of things that Nomad accelerate. There's a lot of bridge constructions out there, but we actually decided to build our own. This is a custom bridge design because once prioritized the security for the end users with assurance for the people who use this bridge above everything else. And it actually doesn't come at a huge like the transactions are still really fast, it doesn't really come with a latest to trade off. So this bridge designed on a high level. The way it works is that validators on Namata will also have to operate a full node on Ethereum.
00:48:41.670 - 00:49:00.600, Speaker A: I see. Is the reason that you decided to build your own a result of some of the hacks that happened in the last year? Was it sort of like instead of working with a partner that maybe you have a little bit less control over, you would want to build it yourself? Or was it more just that efficiency or that customization that you wanted?
00:49:00.970 - 00:49:43.842, Speaker C: We would have made this decision regardless of the exploits. Exploits were predictable, to be honest. But the issues in a higher level with the issue that you have when you use something like Nomad or XLR is that you do not have control of what happens in event of an exploit. You do not have any control of what happens in there. And these are usually operated by another entity. So that's another layer of security through which the users have to reason through. And if anything happens, how does the buckets get fixed? How does it get upgraded? They can at any point add arbitrary controls or freeze the assets over the bridge.
00:49:43.842 - 00:49:55.990, Speaker C: This just adds a lot more complexity to the end user and allows us to remove a lot of our ability to add extra security guarantees.
00:49:56.150 - 00:49:59.820, Speaker A: What do you have to build to actually build this? What are you building?
00:50:00.430 - 00:50:01.494, Speaker C: The Ethereum bridge?
00:50:01.542 - 00:50:04.382, Speaker A: Yeah. Do you have to build an Ethereum, like, something on the Ethereum side?
00:50:04.436 - 00:50:15.214, Speaker C: We have to deploy a bunch of smart contracts in. Yeah. And then the bridge protocol is a bunch of restcode integrated with Nomada. And we're going to also use it later for Enoma.
00:50:15.262 - 00:50:15.666, Speaker A: Okay.
00:50:15.768 - 00:50:30.658, Speaker C: So once it's built, it's kind of cool. And this design is actually generalizable to bridge into other protocols. So I think the design is actually very similar to you may not know this. We actually proposed a bridge to Zcash.
00:50:30.754 - 00:50:31.414, Speaker A: Oh, yeah.
00:50:31.532 - 00:50:35.046, Speaker C: It was published on Zcash Governance and Zcash Forum. Something like that.
00:50:35.068 - 00:50:48.730, Speaker A: I think Chris mentioned this at the ZK Summit Eight, actually, who also gave a talk. I'll also link that in the show notes and stuff. But okay, so they'd have to build it, though, in that case, right? Like, they'd have to build the bridge part.
00:50:48.800 - 00:50:50.058, Speaker C: You could build it ourselves or you.
00:50:50.064 - 00:50:54.830, Speaker A: Could build it yourself, but in their case, there's no smart contract platform. So it's not like you can just trust us. Deploy it.
00:50:54.900 - 00:51:07.262, Speaker C: Actually, that's a good point. I think for Zikashi would be a little bit different. But for example, for any other chain that is programal settlement but does not support IBC, then we could build something very similar to what we built for Ethereum.
00:51:07.326 - 00:51:07.698, Speaker A: Interesting.
00:51:07.784 - 00:51:08.958, Speaker C: Just enable the bridge.
00:51:09.054 - 00:51:19.686, Speaker A: In the case of the Ethereum One, are you acting then as a bit of a roll up? Are you like a privacy roll up? I love those words. Keep blending together.
00:51:19.788 - 00:51:24.470, Speaker C: Once shielded actions are enabled, it's basically like a shielded roll up.
00:51:24.540 - 00:51:25.158, Speaker A: Okay.
00:51:25.324 - 00:51:34.710, Speaker C: But it actually provides privacy. It's not like a Ziggy roll up in the sense I think Ziggy roll ups actually provide you a lot of scalability, but it's not so much privacy.
00:51:34.790 - 00:51:55.630, Speaker A: This is now leading me to also digging more into Nomada. And that's what I want to do next because I want to talk about the multi asset shielded pool and Nomada and the rollout and all that stuff. But now I'm curious. You had sort of mentioned that it won't have or like anoma is the whole thing consensus execution, all of that? Does Nomada have its own consensus?
00:51:56.290 - 00:52:28.218, Speaker C: Nomada uses just modern BFT kind of main consensus. It does use a really novel proof of stake mechanism. So it comes with a bunch of innovations around, for example, how the fees are distributed. It follows an advanced version of the F one fee distribution model. It allows you to when you receive proof of stake rewards, you do not have to withdraw them and then restake them. That creates a lot of transaction spend. The protocol just like, autocompounds it, unless you want to unbound them and then do something with it.
00:52:28.304 - 00:52:43.782, Speaker A: Okay, but there will be a full, validator set for yeah, it's a easily one. Okay, so then that way it's maybe a little different than some of the roll ups which are relying on Ethereum as their shared security. In this case it isn't.
00:52:43.946 - 00:53:06.594, Speaker C: Nomada is layer one but with a specific purpose. But Anoma is more a general architecture for building DApps. However, it is one architecture where it is agnostic to how you deploy it. So what we're building is the layer one party. We're going to aim to deploy the layer one. But you can actually leverage Anoma as a layer 1.5 or leverage anomaly as a layer two on Ethereum.
00:53:06.642 - 00:53:10.638, Speaker A: For example, if you just do you have to just strip out you don't need the consensus.
00:53:10.834 - 00:53:34.546, Speaker C: No, you don't have to strip out anything. It really depends on what it is the application wants. So layer one would be just an intent would just start and then die at the end, finish, be finalized and settled on Anoma. Right. Fully on chain from beginning, from the intended till it makes its consensus and it's fully written and ledger. So that would be anomalous layer one. Anomalous layer 1.5
00:53:34.546 - 00:54:22.986, Speaker C: is think of it as if you want application like Openc, Gitcoin, Cowswap, you want to decentralize a very specific component. Like in the case of layer two is a sequencer. That's usually what's centralized in the case of Cowswap is you want to make the servers permissionless. So you don't want to be the party the whitelist solvers. In the case of OpenSea, you want to decentralize entire part of kind of part of discovery how which traits are made and matched. In the case of Gitcoin, you want to decentralize a lot of things because at the moment the sad thing about programmable settlement is that really cool applications like cryptic funding just what Gitcoin offers. A big part of it happens off band and only the final payments from the multisig get settled in Ethereum.
00:54:22.986 - 00:54:52.806, Speaker C: Right. That's a chain for such a beautiful application. So in the case Gitcoin you will be able to build QF but fully decentralized. So if your applications that you just want to decentralize to a certain part or benefit from Anoma for a specific component of your application, then the way you would use this is that you use Anoma until it creates a transaction for Ethereum and then that transaction makes it to Ethereum get settled there via the theorem bridge. So that would be Anoma as a layer 1.5.
00:54:52.908 - 00:55:05.546, Speaker A: Okay. Going to Enoma as layer two. But then do you still like because I always think of L two S as not I mean, I know they have committees and sequencers and stuff like that, but they don't need the full validator sets.
00:55:05.658 - 00:55:49.338, Speaker C: Right, right. So L two S only makes sense if you want to rent Ethereum Security. In the case of Anomalous layer 1.5, the transaction still gets settled on Ethereum. But if you wanted to rent Ethereum Security, what that means is that you trust Ethereum's validators or miners more than you trust other chains and Anoma as a layer to an Ethereum, the way it will look like is that it comes with a verifier of the entire state transition that happened on Anoma. But that only makes sense if you want to grant Ethereum security. I think there's a lot of confusion around what L two S are for and what they really give you.
00:55:49.338 - 00:56:04.980, Speaker C: And I think that the most compelling case for applications Anoma and why Anoma will make sense of layer two is really if you wanted to get the extra security guarantees of Ethereum to verify that state is actually valid. Okay, but you can do that.
00:56:05.830 - 00:56:46.814, Speaker A: All right, I want to do a little bit more on mean, we've definitely talked a lot about the pieces that are making up Namada, but the part we didn't go that deep into yet is the multi asset shielded pool. I guess we did talk about it maybe early on, but I think that's the thing that I think people are going to be able to play with already and we can talk maybe a bit about the values and the ideas that it's trying to actually promote by existing. And I think that was like if I think back to the earlier episode I did with Adrian, I think that was the primary thing that we talked about. It was this multi asset, the bartering system.
00:56:47.012 - 00:57:11.250, Speaker C: I relistened to that episode and I thought, wow, Adrian basically preached Namata just like back then. But yes, the bartering applications, entire things that he mentioned today would just be example applications you can build using Anoma. But this entire asset agnostic world, multi chain world with privacy that is completely brought up to you with Namada.
00:57:11.330 - 00:57:23.210, Speaker A: All right, so let's talk a little bit about this multi asset shielded pool. What is like we're going to define it now, but it's kind of already been defined in the episode. But what does that look like for a user?
00:57:23.550 - 00:57:32.062, Speaker C: So the mobile chiller pool is cryptography wise. It is a custom circuit and it has been upgraded a couple of times to enable a bunch of other features on it.
00:57:32.116 - 00:57:33.774, Speaker A: And this is based on Sapling, right?
00:57:33.812 - 00:58:26.190, Speaker C: This is a custom the initial code base was Sapling and then we just customized it two more times. On one hand, what it means for the user is that when you make shield transfers on Namada, all these assets will be sharing the same shielded set. This is analogous to Anonymity set. So when you make a shield transfer with the Nam native token or with a CryptoKitty or with Dai USDC, with Atoms or Osmo, it will all look indistinguishable from like any other transaction. And this is an important property so that you do not lose privacy guarantees in case you are transacting with an asset that is very unique or has low volume. So, for example, some NFTs there's just. So many of them.
00:58:26.190 - 00:58:38.274, Speaker C: Well, they're pretty unique actually. So in those cases, one transfer in the modia Shillet pool in the Shillet set actually benefits from the synchronized guarantees as any other transfer.
00:58:38.472 - 00:58:55.826, Speaker A: Having watched the and again, I'm going to add this in the show notes, but I watched Chris's talk at CK Summit Eight, and there he kind of talked about the way that you define these different objects in the multi asset shielded pool is just by creating, you have basically a new category of type of token.
00:58:55.938 - 00:58:59.062, Speaker C: Oh yeah, that's the technicality of how the circuit works.
00:58:59.116 - 00:59:14.206, Speaker A: But what I don't understand is with an NFT, is each one a unique token or what if it's an NFT in a set? Because if you think about it, you need a price, like a floor price for the set. In a way I got confused on that one.
00:59:14.388 - 00:59:31.422, Speaker C: So the way things this is maybe the unintuitive part. It's like actually within the shielded set, there is a UTXO model that keeps track of the assets, but it doesn't care about the denominations of the assets. So the asset type part is like a big change in the MSP.
00:59:31.486 - 00:59:49.198, Speaker A: And I think another thing that kind of came to my mind and this sort of speaks to the same question though. It's like the oracle. How do you define prices of these different assets that are coming into this space if there's a full marketplace within it and things are being swapped and intentions.
00:59:49.394 - 01:00:04.362, Speaker C: So you cannot actually do anything further than transferring set. So it is not a no no just for transfers, just a shield set, one unified one that is shared among any kind of asset.
01:00:04.426 - 01:00:30.358, Speaker A: I see. So this is really like because you would move an asset maybe from Ethereum over the trustless bridge into Nemada, you could move lots of things into it. You could transfer them in that space to other people, I guess, or to other wallets of yours, and then you could bring it back out. There's no price exchange. And this is maybe where this is? Yeah. Okay, then you don't need an Oracle. That's fine.
01:00:30.358 - 01:00:40.038, Speaker A: Then actually the asset type, maybe this is a detail here, but are asset types each kind of like ERC, 20?
01:00:40.124 - 01:00:43.178, Speaker C: It doesn't matter which asset types you send there.
01:00:43.264 - 01:00:54.222, Speaker A: But more the question is like, does Die have an asset type associated with it that all Die would use? Or is it like it always has like a new value. Every time something new is sent in, it has a new value?
01:00:54.356 - 01:00:57.710, Speaker C: I'm not sure, but I'm also not sure it matters.
01:00:58.370 - 01:01:32.620, Speaker A: Okay, yeah, fair. Well, I guess it's something I can ask Chris at some point. So everything we've talked about though, so far, this is still like, I think the distinction of nomada. Is there's multiple assets that can be used, but what else? Is there any other innovation that's coming along with such a development? Because right now it sort of sounds a little bit like solutions we've already seen where you just move things into a private space and then move them around. Yeah. Is there anything else that's kind of coming with Nomada that we can look out for?
01:01:33.230 - 01:02:25.478, Speaker C: So something that is pretty exciting about Nomada is that users can get rewarded for using shielded transactions over transparent ones. And this is in alignment with our vision of the other tagline of Nomada is privacy as a public good. The way we look at philosophically at the shield set is that privacy is actually not a feature, it is more of a public good that it is non excludable. So nobody should be able to be prevented from accessing privacy features. And on the other hand, it is also antiviral. So the more people actually use and contribute to the shield set, the more privacy guarantees individuals get. So how does Nomada fund privacy public good? It leverages some mechanisms in the MSP that allows the naval shield pool incentives.
01:02:25.478 - 01:02:46.926, Speaker C: So a portion of the protocol inflation is actually directed to fund shield transfers and it is calculated based on how effectively you're contributing to the shielded set. So it is not made to encourage spamming and the rewards are calculated based on which assets are sent to the shield asset and also how long it has stayed.
01:02:46.958 - 01:02:52.702, Speaker A: There are some assets going to be better rewarded than others that's to be the permanent.
01:02:52.766 - 01:02:59.970, Speaker C: But definitely the MSP is programmed in a way where we can determine what is rewarded based on what parameters.
01:03:00.050 - 01:03:07.458, Speaker A: Cool. Is there also sort of like a strategy to expand the shielded set or use bridges into other privacy networks?
01:03:07.554 - 01:04:16.478, Speaker C: The way I look at this is that independent of what assets you like and then which layer ones they come from, they can all be part of the same set. So on one hand, biodiversity, it allows you to create more larger sets even if you do not necessarily like the same kind of assets. So that's one way of looking at how you expand the set. But then a feature next step is that actually privacy sets or shielded sets are competitive. So if there is one that has there's a really large anonymity set, then a new one that has gone is going to have a hard time competing totally and it has this network effect of you're going to get privacy guarantees in the larger set. So there's no really an incentive to go to the short to the small one over this one. And this is where our research into private bridging and private IVC comes into play because we would like to enable shielded sets to be able to leave in different layer ones depending on which security model they prefer what they use to want to do, but without actually having this competitive effect on the shielded set.
01:04:16.478 - 01:04:25.890, Speaker C: So if we enable private bridges and private IBC, then all shielded sets would actually be shared independent of which layer one they're part of.
01:04:25.960 - 01:04:56.490, Speaker A: But that's that sort of challenge of these privacy sort of shielded pools or Anonymity sets is like if you were to create a lot of these privacy networks that don't connect, then each one is going to have to bootstrap that on top of whatever like a validator set and a user base and all these things. The smaller number in the Anonymity set, the less anonymous people are because if there's four people and they're doing things, you can kind of figure out who those four might be.
01:04:56.640 - 01:06:08.402, Speaker C: And actually this all comes into play of to the initial question Anna, you asked me about how does Anoma and no matter relate. And we're trying to get to that, but we haven't really answered that. Right. So actually Anoma's long term vision is that we strive for a multi chain world where even Anoma instances scale fractally and we want to push for this vision that we call homogeneous architecture and heterogeneous security. This means that protocols and applications become just standard and they can be ported across different security domains that are not standard. This white heterogeneous security because in a world where applications and base protocols are the same everywhere, the only thing that is going to matter is going to be who do you trust? So what is the token? What is the governance around this and who is the validator set or the miners? That is what composes the security domain and it depends on the application and on the user. But I can totally see a world where for financial transactions some people might trust more the ethereum security model than they trust their local security model.
01:06:08.402 - 01:06:50.734, Speaker C: Whereas in other cases think of for example in Berlin, some businesses might trust more the Berlin security model over the one from current one that is a little bit fuzzy, where I think it's a pseudo front end to Visa, Mastercard and a bunch of financial institutions. Actually, Nomada is a first fractal instance of a Noma. So you can think of it as another layer one. It should show you that over time there's going to be different fractal instances. Some of them might specialize and then pursue different paths to Anoma. But it is just a stepping stone to this multi chain world of homogeneous architecture and heterogeneous security.
01:06:50.932 - 01:07:20.474, Speaker A: Cool. Nice. So thanks so much for sharing this sort of like breakdown of the differences and sort of the general landscape. There's always a lot of work coming from the Anoma crowd and crew. So I hope this helped people also to understand where those different pieces live and how they work together and what we're going to already see with Nemada and what we are still waiting for with Anoma. Do you have anything else you want to maybe share with the audience? I know that there's like possibly a trusted setup coming or something.
01:07:20.592 - 01:08:02.774, Speaker C: All right. There are a few things I can share with regards to Namata, which is the most immediate thing, is that we're going to do trusted setup. It's just because the MSP needs its own parameters. And there will be announcements coming up soon, and then we also be doing public testnets as well, so watch out for those. And with anoma I'm pretty excited to start seeing next year some first testnets that kind of show. You really the overall architecture transparent way with a few applications, and then it will really demonstrate. It will allow you to kind of imagine what are the differences in application and how do they benefit from this overall architecture that's so different.
01:08:02.892 - 01:08:08.406, Speaker A: Cool. All right, well, thank you so much Awa, for coming on the show and sharing with us all of this.
01:08:08.508 - 01:08:09.718, Speaker C: Thanks so much for having me.
01:08:09.804 - 01:08:16.610, Speaker A: I want to say thank you to the ZK podcast team, tanya, Rachel, and Henrik, and to our listeners. Thanks for listening.
