00:00:05.450 - 00:00:44.746, Speaker A: Welcome to zero knowledge. I'm your host, Anna Rose. In this podcast, we will be exploring the latest in zero knowledge research and the decentralized web, as well as new paradigms that promise to change the way we interact and transact online. You. This week I catch up with Ismail Coffee from Celestia. We do a deep dive into the data availability question and learn how Celestia aims to provide a data availability and consensus chain for L two S to use. Before we start in, I just want to highlight the upcoming Gitcoin Clr matching round starting December 1.
00:00:44.746 - 00:01:29.378, Speaker A: You may have heard me mention these rounds before on the podcast. We do have a grant up for the Zero Knowledge podcast and as always, I so appreciate these donations. But this time around I want to highlight a ZK Focus side round that the ZK Validator and other great ZK focused teams will be contributing to. So this is a side matching round focused on ZK tools and projects. If you're working on open source ZK focused tech or tools, including learning material or documentation, if you don't have VC funding or a token yet, then you would be eligible for this side round. If you want to get some initial funding directly from the community and from the matching pool, be sure to head to Gitcoin and create your grant today. When choosing the tags for your grant, be sure to choose the option ZK Tech and add yourself to our side round.
00:01:29.378 - 00:01:56.334, Speaker A: I'm definitely looking forward to learning more about the emerging ZK projects with this experiment. With quadratic voting, I've added a link in the show notes to the grants as well as some info about how the quadratic matching actually works. Also, just as an aside, we are now coming into the last week of the Zkhack event. It has been so much fun to do this. There's a whole community forming around it. If you haven't already checked it out, please do. And as part of the ZK Hack event, we will be hosting a ZK Job Fair.
00:01:56.334 - 00:02:28.474, Speaker A: This is happening tomorrow, December 2, and this is great for any interested job seekers or participants in the Zkhack. Be sure to check it out if you want to get to know hiring teams and get to know the community a little bit better. I also want to thank this week's sponsor, Aztec. Aztec aims to be the privacy layer for Ethereum. They believe that unlocking programmable privacy is the next frontier for blockchains. Aztec is the first zero knowledge roll up built from the ground up for anonymous payments and DeFi transactions. Recently, Aztec hosted a workshop as part of the ZK Hack event.
00:02:28.474 - 00:02:52.370, Speaker A: They did a two hour workshop focused on Aztec Connect. So I'll add the link to this in the show notes. If you want to try out the technology that Aztec is building, be sure to head over to ZK Money. There you can join thousands of people already sending funds privately on ethereum. That's zkmoney or ZK money. So thank you again, Aztec. Now here's my interview with Ismail.
00:02:52.370 - 00:03:01.138, Speaker A: So today I'm here with Ismail Coffee from Celestia. Welcome to the show, Ismail.
00:03:01.314 - 00:03:04.614, Speaker B: Hello, Anna. Thank you. Pleasure to be here.
00:03:04.732 - 00:03:17.494, Speaker A: So last year we actually had John Adler on the show, and in that episode, we chatted about fuel and something called lazy ledger. Lazy ledger, as I understand, has evolved to become Celestia.
00:03:17.622 - 00:03:18.154, Speaker B: That's correct.
00:03:18.192 - 00:04:04.394, Speaker A: So we have covered sort of some of the basics about lazy ledger and that idea and what Celestia is. But one of the reasons I'm very excited to have you on the show today is I believe that the sort of vision for this data availability module or unit in this ecosystem is becoming so much more relevant today. I remember that interview, and I remember it seemed kind of theoretical, and I was like, I didn't really understand why this was so important. And in the last year, I've really started to understand that. So, yeah, I'm very much looking forward to digging into this project. But before we do that, why don't we learn a little bit about you? How long have you been in the space? What first got you started?
00:04:04.592 - 00:04:43.400, Speaker B: Sure. I think the first time I actually worked on something related was at Dpfl in Switzerland. So, like my previous job, I was just a humble software engineer at the Research institute, and I got kind of bored, so I joined a lab called Decentralized Distributed Systems, did this at EPFL, and we worked on, among other things, funnily about on bitcoin scalability and privacy enhancing. Like, previously, I was like a full stack engineer, and then I worked on the full stack that is used in Encrypto now.
00:04:44.410 - 00:04:44.870, Speaker A: Cool.
00:04:44.940 - 00:05:04.298, Speaker B: Yeah. But it was very academic. This was let me think, I think it was 2015, maybe 2015 16. Yeah. But it was very academic. So I was like a research engineer that wasn't doing a PhD or something. I worked on prototypes that were used then in papers, like in academic publications, essentially.
00:05:04.474 - 00:05:12.754, Speaker A: But then you made a leap at some point into, I guess, Web three stuff. So what was that transition? Where did you first jump in?
00:05:12.792 - 00:05:38.902, Speaker B: So the first real jump into moving away from that academic point of view was at Tenement. So I joined Tenement in this whole last year. Feels like the time feels so weird. But I think it was 2018. Yeah, I'm pretty sure it was 2018 and stayed there roughly like one and a half years until shortly after launch of the Cosmos Hub.
00:05:38.966 - 00:05:53.130, Speaker A: Yeah, very cool. I've always understood the Celestia project as kind of originating in the Cosmos ecosystem. And this sort of makes sense, maybe. Tell me about the origin of Celestia or what was lazy ledger previously.
00:05:53.210 - 00:06:46.030, Speaker B: Yeah, so actually it originates more in the ethereum ecosystem, I would say, because we always perceived as a Cosmos only project. But that's actually not right. I mean, we use tenement, and we very much are part of the Cosmos ecosystem. That's 100% true. But the idea stems from a research paper that Vitalik Butterin and Mustaf Albasa, my co founder, wrote in also 2018 about fraud proofs. And then they realized some data availability layer is needed and the mechanism we use in lazy ledger or now Celestia is like the erasure coding and all this is already laid out in that paper. So I would say the original ideas come from how do we scale ethereum, essentially.
00:06:46.030 - 00:07:20.630, Speaker B: That later led to after I joined, we explored different consensus engines, we looked into substrate, we looked into tenement. In the end, we ended up with tenement. And I think that's why we are perceived as a Cosmos project. But in like Celestia itself is much larger than just only Cosmos projects because you can deploy essentially any execution layer on top of it. Right.
00:07:20.780 - 00:07:21.526, Speaker A: Interesting.
00:07:21.708 - 00:07:34.606, Speaker B: So data availability is a problem that all rollups face and all, basically. It's a component that is needed in this modular stack, essentially. And it's a Cosmos project, but not.
00:07:34.628 - 00:07:43.790, Speaker A: Only got it and it sounds like your co founders, john is a co founder and Mustafa, who you just mentioned. Are there other co founders?
00:07:44.310 - 00:08:07.574, Speaker B: No, there's Mustafa Albasam, who came up with the idea, essentially, and John Adler, who I think was like one of the first who write up how roll ups would work on ethereum. And that's it. We have Nick White. Who's? Our CEO. He's not officially a founder, but I would definitely count him on that level for sure. He's a very technical person.
00:08:07.772 - 00:08:15.290, Speaker A: Nice. Okay, so that's the team. And would you say John and Mustafa, were they coming more from the ethereum side?
00:08:15.440 - 00:08:45.134, Speaker B: Absolutely, yeah. I think in the beginning I often face the challenge that I think tenement is a bit of a paradigm shift in the sense that previously in blockchains, you have all these reorgs and you don't have immediate finality and all. So John and Mustafa certainly come from either bitcoin or ethereum that ecosystems and that point of view, but now they're very familiar with Cosmos tendermint and all this.
00:08:45.192 - 00:09:13.162, Speaker A: Got it. So let's start to dig into the problem that Celestia aims to solve, and that is data availability. I think to do this, it might be useful to explore kind of like some of the words that are used around this topic, like state, state transition, execution environments versus consensus on a blockchain. So why don't we start with state and state transition? How would you define those two things? How are they different?
00:09:13.216 - 00:09:57.210, Speaker B: So I won't go a formal definition, but rather an example, I think, like state, for instance, is account balances. It's like something that everyone can easily understand, right? Like, you have account balances, and these account balances are mercurialized into a mercury, and that gives you the so called state route, right? And state transitions are transactions that modify that state, like for instance, move tokens or coins from one account to the other. So one account balance reduces, the other increases, and that is a state transition. And then this gets, again, like the state gets updated and this also updates then the state route.
00:09:58.110 - 00:10:04.270, Speaker A: Now let's talk a little bit about what is the execution environment and what is consensus.
00:10:04.610 - 00:10:05.070, Speaker B: Right.
00:10:05.140 - 00:10:09.486, Speaker A: And maybe where does the state transition live and where does the state live?
00:10:09.668 - 00:10:42.966, Speaker B: Sure, in almost every blockchain the state lives on chain essentially in the sense that the validators of that chain, they take these state transitions or transactions and apply them or we say also execute them. And that's what the execution environment or execution means. And in Celestia essentially, this paradigm shifts a bit in the sense that execution gets outsourced. So to say it is done in another blockchain, essentially.
00:10:43.078 - 00:10:46.650, Speaker A: Okay, you mentioned validators, but I guess miners in a proof of work system.
00:10:46.720 - 00:10:49.030, Speaker B: Miners validators block producers.
00:10:49.110 - 00:10:59.950, Speaker A: Yeah, they're just writing the current state onto the blockchain. Exactly. Where is the state transition found, though? How do you actually map that?
00:11:00.100 - 00:11:29.906, Speaker B: So in a block, what is a block? In a blockchain it usually has a header and it has block data. Right. Which are the actual transactions that then inform the state transitions. And these transactions live in the block data and the state is something that the miners block producers validators, they compute and how it materializes in the block is only in the header in the state root.
00:11:30.098 - 00:11:46.382, Speaker A: Now let's talk a little bit about consensus, though. So you put state into the execution environment. That's the writing of the block. So this would be like the miners and the validators making decisions on which chain they're following. Right, you're right. Yeah. I think that distinction needs to be made clear.
00:11:46.382 - 00:11:58.210, Speaker A: We've talked about this before on the show when we talked about ETH two and they're separating that out, that consensus execution. But I want to understand sort of how you're thinking about that. So, yeah, what is the consensus action?
00:11:58.630 - 00:12:30.166, Speaker B: The consensus action is literally like a bunch of machines reaching consensus on a value. And that value here is you could think of it as reaching consensus on the header, essentially. Right. Like what is the next block? The header is a summary of that or the header hash. So what consensus gives you is an ordering of the chain, like ordering of the blocks, essentially and also of the transactions or the data as well. Right. It's an ordering of the blocks.
00:12:30.358 - 00:12:56.934, Speaker A: Nice. And so that's a really good distinction. And the reason I wanted to do a few of these definitions first is the word data availability. Data could mean lots of things. I know it's confusing and I have definitely been confused in the past about what data availability means. When we talk about the data availability problem, which part of this is the data that we're concerned about or that we don't have.
00:12:57.132 - 00:13:04.210, Speaker B: So the data that we're concerned about is the state transitions, the transactions in the block.
00:13:04.290 - 00:13:04.790, Speaker A: I see.
00:13:04.860 - 00:13:32.202, Speaker B: Because Light clients, if you think of light clients, they do not download these. The whole purpose of light client is that they only follow the headers and only care of transactions they care about but not every transaction. That's what full nodes do. Right. So the data availability problem is mostly about how can a light client follow these headers but at the same time cannot be fooled in the sense that a block producer cannot hide the transactions.
00:13:32.346 - 00:13:34.466, Speaker A: From them or the history of the.
00:13:34.488 - 00:14:19.626, Speaker B: Transactions or the history of the transactions. Right. If we think of tendermint, a full node also downloads all the consensus messages which are votes. Essentially a block proposer proposes a summary of the block essentially. And then there are several rounds which are details of the consensus. But essentially there are signatures of like hey, I saw this and I confirmed this is my view and two of these and then a commit and to do this, to be able to do this, they also download all the transactions so they have the transactions in their mempool. But the block proposer also gossips their view of the block in Hennemint, at least their view of the block to every other validator.
00:14:19.626 - 00:14:27.810, Speaker B: So full nodes and validators download the header and download the state transitions, all of them.
00:14:27.880 - 00:15:01.660, Speaker A: Got it. And the reason I said sort of archival node, I mean, I think in Ethereum, in Cosmos, when we think about a lot of the l ones and a node operator, a minor, a validator, they are actually downloading all of this in just sort of it's happening automatically. They will have the history and they will have all straight state transitions. So then I guess the question becomes like why do they need something like Celestia? If the node providers already have like, why would they need another data availability option?
00:15:02.290 - 00:15:50.154, Speaker B: Right. I think the difference in Celestia is that you get for instance, as a light client, you can have the same guarantee as if you downloaded the block like a full node does. As you said, they have the history, they have on each height of the blockchain, they have the whole data. In Celestia you get the same guarantees as if you do this without doing it. And it's not some magic cryptography. It's a very simple technique and it's probabilistic and sampling based. So basically how it works is that light clients randomly sample the block and with each sample they get a higher assurance that the whole data is available to them to be downloaded without actually downloading it only like a tiny portion of it.
00:15:50.272 - 00:16:16.906, Speaker A: Got it. But would you use Celestia with existing l ones? Would you use it with Ethereum? Because light clients, to me, within an ecosystem, within a blockchain, if a blockchain also provides a light client they often have a link back to their own full nodes somehow. So are you for those l ones or are you more for the l two S, the roll ups, the sort of connector chains?
00:16:16.958 - 00:17:11.490, Speaker B: Yeah, that's a very interesting question. I mean, the main benefit of focusing on one thing only, which is like data availability, makes it that you can use this module for wherever it's needed. The main focus that we have is to enable roll ups and to give these roll ups the consensus they need because they don't do consensus themselves. Like a roll up, just dumps the data or just dumps the block onto a layer one and then uses that for the consensus instead. But you touched on something interesting because you can also use it for other layer one roll ups. For instance, we're talking to several projects that are, for instance, ZK roll ups. How they currently solve data availability is they have a closed committee that attests to the data essentially.
00:17:11.650 - 00:17:13.542, Speaker A: Although I think it depends on the roll up.
00:17:13.596 - 00:18:18.022, Speaker B: But yeah, depends on the roll up maybe. Yeah, there are different solutions to this but it's somehow solved off chain for them. And I think the most common approach, at least as I know, is to have a committee or something that just attachs to the data and Celestia could be used as a module for them in the sense that it could be used kind of as a data availability oracle. So the Celestia validator set could attest for like a big ZK rollout for instance, on Ethereum. It could attest that their data is actually available on Celestia and could put these attestations on chain on Ethereum, basically a bunch of signatures that attest this specific data. In celestial we have the concept of a namespace because like the merkel tree we use to mercurialize the data, think of it as like a domain separated namespace, merkel tree. And so their specific data would be attested on an Ethereum smart contract.
00:18:18.022 - 00:18:29.322, Speaker B: And then clients of that roll up can read these attestations and then they can be sure that the data is actually available for them to recompute the whole chain. Essentially.
00:18:29.466 - 00:18:41.714, Speaker A: This sort of gets into and this is what I think most of the show is going to be about what is Celestia doing that has access to this stuff you sort of talk about you stick the data on.
00:18:41.912 - 00:18:42.418, Speaker B: Yeah.
00:18:42.504 - 00:19:01.290, Speaker A: And then Celestia creates a proof on a main chain potentially that that data is correct. But can you from that proof actually decipher the data or is it more that they'd have to go then to the Celestia blockchain and from there you could potentially walk back all of this data and see the state transition.
00:19:02.030 - 00:19:26.378, Speaker B: I mean, there's two ways how this could work. One is that a subnet gives them the data and they additionally have the attestations and they can verify that this matches. And another way is kind of a backup solution where, yeah, roll up clients could actually go to Celestia and download the data from there. That's true. Both is cool.
00:19:26.404 - 00:19:49.218, Speaker A: Cool. Okay, let's now do a big dive into Celestia itself. I feel like this has been a little bit of my own questions and preambles of setting the stage, and I think I'm going to actually revisit some of these questions as we go through this. So Celestia is an L one using Tendermint as a consensus engine, I guess you're built with the Cosmos SDK.
00:19:49.314 - 00:20:04.170, Speaker B: Yes. So we need some state on our layer one as well, because it's a proof of stake chain. So there's some execution happening, but there's a very limited amount, limited basically to the proof of stake logic itself. And for that, we use the Cosmos SDK.
00:20:04.330 - 00:20:36.230, Speaker A: Okay. And so you are an L one. You're a blockchain in its own right, but it's a very specific blockchain with a very specific purpose. And so I guess this fits into that idea of many modules focused on different parts, kind of rebuilding, like a larger computer like structure. So, yeah, tell me exactly what Celestia does. I mean, we've mentioned data availability and stuff like that, but I'm trying to picture it in this sea of other modules, how are other blockchains interacting with Celestia?
00:20:36.570 - 00:21:04.798, Speaker B: So, I mean, other blockchains all have their own business logic, their own execution, their own state machine, so to say. Right. And Celestia provides to them essentially the ordering of the blocks of these state machines and the data availability of these state machines as well. Like, not the data availability of the state machines, but the data availability of the data that then is executed on these state machines.
00:21:04.894 - 00:21:14.142, Speaker A: Would Celestia then be holding kind of the state transitions or the state or something of a number of different blockchains?
00:21:14.206 - 00:21:14.482, Speaker B: Yes.
00:21:14.536 - 00:21:24.758, Speaker A: And how does that work? Is it a storage chain, then? What is actually happening in Celestia? Maybe paint a bit of a picture for us.
00:21:24.844 - 00:21:42.814, Speaker B: Sure. So, first of all, yes, it would hold the state transitions of these other blockchains. So the transactions, the actual data, it would not hold the state, because for holding the state itself, it would need to understand how to execute these transactions. And Celestia does not do that.
00:21:43.012 - 00:21:46.186, Speaker A: That's business logic of the business logic.
00:21:46.218 - 00:22:06.774, Speaker B: Of the other blockchain. Exactly. And what Celestia does is it takes the data, orders it, and makes sure that the data is available. And it doesn't mean only that it's like downloadable. It's actually dispersed to the network. This is guaranteed by data availability proofs, which are basically the sampling technique that I described before.
00:22:06.892 - 00:22:37.310, Speaker A: I see. But you have your own validator set and a consensus module. You're also writing blocks to a blockchain. Yes. Let's just picture there's like, three other blockchains L ones or maybe like two L ones and a ZK roll up are using Celestia. Are you keeping these in any sort of separate form. Are they just like extra data on this blockchain that the validators are just sort of like consistently writing into these blocks?
00:22:37.650 - 00:23:29.962, Speaker B: First of all, the main model how these other chains would use Celestia is I wouldn't call these other chains a layer one, although I described how ZK rollups that use ethereum could use Celestia. The main way Celestia will be used, though, is that the other chain does not have its own consensus. So that's different from a layer one, right? It uses the consensus of Celestia only and only does execution. So roll ups only do execution while Celestia does the consensus and data availability for these rollups. So these roll ups, as I said, are not necessarily layer ones. Usually they're not for sure because they don't have their own consensus. But we call them like virtual side chains because they are a blockchain without consensus.
00:23:29.962 - 00:24:20.474, Speaker B: They produce blocks, right? And they dump these blocks, for instance, onto Celestia. And you ask if the different roll ups would be separated on our layer one on Celestia. So what Celestia does is take the data of these chains and puts them into a mercury, which kind of separates and sorts them by their namespace. So every application or every chain on top of Celestia has its own namespace and the merkel tree, where the data gets merklized, separates them per namespace and sorts them per namespace. So the end result is still one short merkel route, but each roll up has its own subtree.
00:24:20.602 - 00:25:04.478, Speaker A: Got it. Okay, so now you are really focused more on the roll up. And maybe we can explore this a little bit because earlier on you had sort of said that an L one could potentially use. But here it sounds like the focus is going to be more on roll upside chains that don't have their own consensus. In this case, is Celestia then just acting as the base chain? Like in the ethereum model with roll ups, you have ethereum as it is with all of these roll ups, kind of using it as the proving. It's basically just like writing proofs to the ledger of ethereum. And because ethereum is immutable, it sort of makes that fixed in time and immutable as well.
00:25:04.478 - 00:25:14.514, Speaker A: Borrowing the security. In this case, do you see Celestia as sort of focused on being that borrowed security but not doing the other stuff that ethereum does?
00:25:14.712 - 00:25:58.426, Speaker B: You could say yes, yeah. I mean, the main difference between how rollups use ethereum and rollups would use Celestia is that Celestia does not have an execution environment where they can I mean, for instance, zCare rollups would post their validity proofs onto ethereum and there's like a smart contract that would validate those, right? And in Celestia, they would just put the data and the validity proofs onto Celestia. But the validity proofs would need to be verified locally because there's no execution environment on the main. The only difference between the two different modes is on Celestia there's no execution environment, while on Ethereum there's an execution environment enshrined.
00:25:58.458 - 00:26:11.166, Speaker A: So to see I see. And it's sort of like on Ethereum you'd have to write the smart contract to do the verification. In the case of Celestia, you are just sort of like you are locking it in, but you're not necessarily verifying its correctness.
00:26:11.278 - 00:26:24.754, Speaker B: Yeah, you're locking in the data and the validity proofs. But the verification needs to happen somewhere else which is again, then outsourced somehow to the roll up and could happen locally.
00:26:24.802 - 00:27:04.770, Speaker A: For instance, what is the agent that does that? What is the in between Celestia and these roll ups? We've talked a little bit about these kind of connector agents. In the case of polkadot, you have the Collater and I don't know if you'd say this for Cosmos, but you do have like the IBC relayers. You have people who are running bridges, basically these agents. And then there's actually the agent between the ZK rollup and the Ethereum main chain. So there's an agent running a client on both sides basically keeping track of it. So what is the agent in Celestia? I'm kind of always thinking of it as like a person or a computer, but what are they doing?
00:27:04.920 - 00:27:47.794, Speaker B: So in Celestia's case it's much simpler because it's not a two way bridge. You don't have a client of both chains running Celestia is agnostic to all these rollups. Essentially, it does not know what the data means that the rollups give it. But the roll up itself runs a client of the Celestia main chain. So of course it could be like a relayer. But I think the base case will just be that the sequencer itself runs a client of the Celestia main chain and follows the headers and everything. And then it takes the roll ups data and submits a transaction to Celestia pays for the inclusion of the data.
00:27:47.794 - 00:28:21.594, Speaker B: And that's nothing. There's not more going on between that and Celestia. In the case of just rollups, in the case that you mentioned previously where Ethereum rollups could use Celestia as a data availability layer, there would be slightly different there. Additionally, validators of the Celestia main chain would submit Attestations to Ethereum but they would not directly interact with the roll up.
00:28:21.712 - 00:28:35.194, Speaker A: Okay. It's interesting. So the roll up would send something to Celestia. Celestia would send something to the main chain. And would the roll up ever look at that main chain thing? Would it analyze what's been written to the Ethereum main chain?
00:28:35.242 - 00:28:52.242, Speaker B: Yes. The idea is that the roll up clients in the case of Ethereum, the roll up clients would read the Attestation and see that a smart contract attested like verified the signatures of the validators of the Celestia chain.
00:28:52.386 - 00:28:53.030, Speaker A: Got it?
00:28:53.100 - 00:29:04.090, Speaker B: Yeah. There's basically two modes of operation. One is the simple case where roll ups would use Celestia directly. And then there's this thing where Ethereum is in between, so to say.
00:29:04.160 - 00:29:29.490, Speaker A: And that's the thing about the term roll ups is, I mean, so far very Ethereum focused. But what you're talking about is potentially like non Ethereum roll ups just flying in space with no consensus algorithm, walking into Celestia, using that as its consensus versus working with ZK rollups, working on Ethereum already, the floating roll up that has no base chain, it has no consensus mechanism.
00:29:30.870 - 00:29:36.186, Speaker B: Yeah, it has a consensus mechanism. It is the Celestia consensus, essentially.
00:29:36.238 - 00:29:46.642, Speaker A: Okay, okay. But I'm more like curious, who are these projects? Is this more like theoretically now roll ups could be built on top of Celestia?
00:29:46.706 - 00:29:47.334, Speaker B: Yeah, exactly.
00:29:47.452 - 00:29:50.902, Speaker A: It's not like there's existing projects that would lock into Celestia.
00:29:50.966 - 00:29:54.860, Speaker B: Not yet. First we're going to launch and then there Will.
00:29:56.030 - 00:29:57.786, Speaker A: Okay. Okay, got it.
00:29:57.808 - 00:30:21.342, Speaker B: Yeah. I mean, it is not just theoretical because we are seeing roll ups on Ethereum. Why wouldn't they exist? In the Celestia case, it's a very similar approach, but much cheaper because of gas costs. I'm very sure that people will play around with this and actually deploy high value applications on top of Celestia.
00:30:21.486 - 00:30:37.558, Speaker A: And in the case of these sort of roll ups built directly on Celestia, they get the data availability benefits. They have a chance to actually potentially grab some data from your blockchain that would help them attest to the validity or be able to roll it back or something like that.
00:30:37.564 - 00:31:07.794, Speaker B: Exactly. It actually even provides stronger security because the likelians of the roll up, they do not even need to trust the validator set of the celestial main chain for attestations. They can verify the data availability locally themselves. So it's like they have a view. In their view, the data is available. They do not need the signature of a validator or like two thirds of the validators of Celestia for them. They can do that, but they don't have to.
00:31:07.794 - 00:31:20.610, Speaker B: They can just trust them to actually publish data and then verify it themselves. So it gives them almost the same, or literally very close to the same security guarantees as full nodes without being full nodes.
00:31:20.690 - 00:31:41.850, Speaker A: Cool. But then going back to that Ethereum case with an Ethereum based CK roll up, you are solving a problem that is missing for them right now. They don't have, as far as I understand, the data availability issue of roll ups you mentioned are currently being fixed. They're being taken care of by these committees or by sort of these maybe imperfect.
00:31:43.150 - 00:32:01.038, Speaker B: My understanding is there's two ways to that. Currently Ethereum roll ups guarantee data availability is one, they have these closed committees that attest like permission committees that attest to the data availability or the data ends up on Ethereum itself, which is like super expensive.
00:32:01.214 - 00:32:08.898, Speaker A: What you're offering is like here's almost like a standardized way of getting data availability for all of these different roll ups. That's a lot cheaper, I'm assuming.
00:32:08.994 - 00:32:09.398, Speaker B: Exactly.
00:32:09.484 - 00:32:10.434, Speaker A: Is it a lot cheaper?
00:32:10.482 - 00:32:10.838, Speaker B: Exactly.
00:32:10.924 - 00:32:15.778, Speaker A: How do you make it cheaper though? You're still writing something to the main chain.
00:32:15.954 - 00:32:40.894, Speaker B: Why I think it will be a lot cheaper is mainly because the Celestia main chain is much simpler and focused on that particular use case only you're not competing with the state execution of potentially hundreds and thousands of smart contracts. It's literally just data availability and nothing else. While on Ethereum you will always compete with the smart contracts that are deployed on Ethereum, obviously.
00:32:41.012 - 00:32:53.166, Speaker A: But in your case you just talked about this sort of circle, right? Like the roll up posting to Celestia, Celestia posting to Ethereum. So that post from Celestia to Ethereum, is that going to be expensive?
00:32:53.278 - 00:32:54.580, Speaker B: That's a good question.
00:32:55.690 - 00:32:57.506, Speaker A: Is that still theoretical?
00:32:57.698 - 00:33:10.086, Speaker B: No, it's not that expensive, probably it depends on how you optimize it. But it won't be that expensive because you can post these Attestations, not on every block.
00:33:10.118 - 00:33:13.514, Speaker A: For instance, can you pool together a lot of different roll ups too?
00:33:13.552 - 00:33:58.978, Speaker B: Yeah, you can batch a bunch of Attestations together as well. But I think the main trick is that it is not the data that you post, it is literally just a bunch of signatures. A bunch of signatures and merkel roots. And that's way cheaper than posting the data on Ethereum. I mean, if the Ethereum price continues going up and gas price continue going up, then of mean at some point everything will be expensive. Yeah, but I think there's a lot of optimizations you can do. For instance like threshold signatures or batching it even more or only posting updates if the validator set on the Celestia chain changes more than some certain threshold.
00:33:58.978 - 00:34:16.222, Speaker B: So there's like a lot of optimizations that can be done even if the gas costs continue to rise. And I mean the hope is that also Ethereum will continue to scale to some extent in the foreseeable future that the gas costs will at least to some extent, go down as well.
00:34:16.356 - 00:34:37.278, Speaker A: Yeah. Going back to the first example though, where there's actually roll ups directly locked into Celestia, do you need those to be built with the Cosmos SDK? Do they need to be compatible somehow with Celestia or could it be built with anything? Could it be like substrate based standalone chains also locking in?
00:34:37.384 - 00:35:35.858, Speaker B: Again, very interesting question. So first of all, no, they don't need to be built on the Cosmos SDK. The second point why it's interesting is it's actually very difficult to make the SDK state fraud provable okay, I won't go into details how state fraud proofs work, but it's just difficult to make these possible in the Cosmos SDK, because the Cosmos SDK is not a very specific, well defined and constrained execution environment like the EVM. But it's literally you can think of it as a library with a bunch of modules where you can write your business logic in Go, mainly in Go, and you can do whatever you want. One transaction could literally touch all the states that is there. And it could be very expensive. And that makes it very difficult for this one transaction if there was a fraud proof to make it fraud proofable.
00:35:35.954 - 00:35:39.654, Speaker A: I see. When you say fraud proof, you're talking about, like, the optimistic roll up style.
00:35:39.782 - 00:35:40.266, Speaker B: Yes.
00:35:40.368 - 00:35:49.462, Speaker A: Are you saying, like, so the optimistic roll up model where you'd post and then roll back, that's hard to do in the Cosmos SDK?
00:35:49.606 - 00:36:34.554, Speaker B: It's not the rollback that's difficult. That's super easy. What is difficult is yeah, because the execution environment is literally you can write any go code you want and touch every state in the state tree if you wanted to. And things are heavily underpriced in the Cosmos SDK, like, in terms of there's also a notion of gas and things are underpriced. So it's not that it's impossible to do, but it is in its current form difficult to make it such that a light client can receive a proof and verify that proof by executing literally just one transaction. Because that one transaction could touch all the state. Okay, so that's the difficult part.
00:36:34.554 - 00:36:36.058, Speaker B: It's not the rollback that's difficult.
00:36:36.144 - 00:36:46.254, Speaker A: But why are you bringing up fraud proof in this question? So the question was this is what I'm confused about. I had asked, like, could you use the Cosmos SDK? And then you mentioned fraud proofs. And I'm not sure why.
00:36:46.372 - 00:37:31.674, Speaker B: I can explain why. Because we are currently looking into using something else as the default execution environment than the Cosmos SDK, which is easier to fraud proof. So we're eyeballing with the EVM, essentially, and different EVM based existing solutions. And one that is very tempting is Arbitram's VM, essentially, because they do not use this general state fraud proofs, but they use what is called an interactive verification game. And there we know how to do state fraud proofs because this interactive verification game, first of all, it uses DVM. This is more constrained. It's very clearly defined.
00:37:31.674 - 00:38:17.146, Speaker B: It's a very constrained, clear execution environment. And second, the way these fraud proofs work, these detective verification games, they boiled down to a single execution step. So, like, single opcode step in the EVM. And this sounds much more feasible short term than making the Cosmos SDK. Now, fraud provable, it's still our goal, and I think it would be still nice to have Cosmos SDK chains as roll ups. But in the end, we will use whatever is more feasible short term and then add more and more execution environments. So you mentioned substrate and all these yeah, we want all these execution environments as roll ups on top of Celestia as well.
00:38:17.146 - 00:38:32.014, Speaker B: But we have to start somewhere. And we wanted to focus on the Cosmos SDK as the default execution environment, but we're currently eyeballing more with EVM based execution environments as a starting point.
00:38:32.132 - 00:38:55.506, Speaker A: Got it. Because of this limitation. But why care about the optimistic? Why not just focus on the ZK roll up format? Is it because you want variability? You want to give people options to do the optimistic? Or is it because you actually see that as being more of, like, a fitting system that works with Celestia?
00:38:55.698 - 00:39:58.774, Speaker B: I mean, the original idea was not to use Celestia in combination with Ethereum, but the original idea was that you have this client side execution, which is now what we basically call roll ups, where the roll up does the execution. So I think that's always been the plan and will continue to be the plan. But as I said, several ZK rollout projects reached out to us, or several roller projects that build on top of ethereum reached out to us and are exploring different data availability options. And Celestia is one of those. So why we're not focusing solely on this is mainly because, yeah, it's one use case for Celestia, and it's not the only use case. If I had to choose between one or the other, I would rather try to build only the roll up case, like the roll up on top of Celestia case, because that's potentially much more scalable than the one that uses Ethereum midterm.
00:39:58.822 - 00:40:36.658, Speaker A: I get that, but still, you just said the original question was what kind of environment are these sort of side chain roll ups that would attach to Celestia? Cosmos SDK was your first choice, but now Arbitrum is what you're eyeing. Is this because they have EVM compatibility already very figured out, and you just like to bring in an EVM style like extra chain or the real question I'm asking now is why Arbitrum and not Zksync or something like that, like some ZK roll up? Those both exist. They both have environments that you could lock into Celestia. Why an optimistic?
00:40:36.754 - 00:40:58.270, Speaker B: I think short term, that these optimistic rollups are much more mature already, I see, in the sense that you can literally easily deploy everything. And NZCA roll ups are evolving very quickly. But I think at the current time, it's still better to focus on optimistic rollups because it just works right.
00:40:58.340 - 00:41:09.330, Speaker A: Fair. And the data availability issue of both optimistic roll ups and ZK roll ups are equal. I guess it's not that one has easier time with data availability. Okay.
00:41:09.400 - 00:41:14.500, Speaker B: I mean, everyone needs data availability. People are slowly realizing it. And that's great.
00:41:15.670 - 00:41:18.040, Speaker A: Yeah. Because you guys have been talking about it for a while.
00:41:18.570 - 00:41:22.182, Speaker B: Mustafa was, like, way ahead of his time with that.
00:41:22.236 - 00:41:49.390, Speaker A: That's cool. All right. Well, actually, this helps a lot. So then I think that also answers the question of what kinds of base infrastructure frameworks would be used. And when you say you are maybe eyeing substrate for the future, it's almost like, what would they need to be able to lock into your system? Would they need to be able to do fraud proofs? Or would they need to be able to do, I don't know, something else before they could do that?
00:41:49.540 - 00:42:19.670, Speaker B: So they basically would need two things. One is that usually currently in the non modular paradigm, execution environments are coupled with the consensus. So you need to decouple those and then replace whatever consensus with just dump the block onto Celestia. And the second thing you need is either validity proofs or like some sort of state fraud proofs, which currently the options are interactive verification games or general state fraud proofs.
00:42:20.330 - 00:42:55.990, Speaker A: Do you feel like? I mean, the Celestia project sounds so much like the Celestia main chain that hub it does start to have echoes of I mean, already we talked about the comparison to Ethereum, but it sounds a little bit like the relay chain as well. In polkadot where relay chain has all the parachains locked into it and the relay chain is the primary source of consensus. Do you see yourselves as building an ecosystem a little bit in that model where multiple subchains lock into Celestia and there develops an ecosystem there in some way?
00:42:56.060 - 00:43:26.670, Speaker B: Yes, absolutely. On the other hand, it's potentially much larger than these existing solutions because the chain doesn't do execution. It's literally not limited to for instance, I think the relay chain has a limited number of execution slots for a reason, and you would basically have infinite execution slots on Celestia. So that's the main difference. So, yes, but potentially it could be much larger.
00:43:28.050 - 00:43:30.138, Speaker A: Is that okay to say ambitious?
00:43:30.234 - 00:43:33.780, Speaker B: Well, I must be shilling a little bit, right?
00:43:37.190 - 00:44:29.474, Speaker A: I think that was after the Cosmoverse event a few weeks ago. I remember having a conversation about Celestia and the way it's sort of evolving into this. Like it could actually be this very how do I describe it? It could end up touching a lot of different blockchains because of its very focused nature. It's not trying to solve a lot of problems, it's solving one problem very, very well. And if other chains could use that, then they would do it. One thought I had, though, is in the previous episode, actually, I think the episode that aired just before this one, I talked with Billy from the ICF and there they talked about this interchange security. I don't know if you saw that talk too, where they're talking about these future iterations of what the Cosmos hub could look like or what a Cosmos zone could look like, where they also propose that a little bit.
00:44:29.474 - 00:44:52.506, Speaker A: This idea that the consensus lives in this zone, but then these side chains kind of lock in and use the consensus, but do more specific roles themselves. Where do you place Celestia in that conversation? Do you see them as sort of following what you guys have laid out? Do you see it as competition? Do you see yourselves as maybe the first example of it?
00:44:52.688 - 00:45:31.846, Speaker B: I would say it's kind of complementary to each other in the sense that shared security on the Hub. Yeah, shared security on the Hub to some extent. I mean, it's heavily simplified now, but to some extent is more similar to how the relay chain and polkadot provides shared security. Because, again, the main difference between Celestia and the Hub doing shared security is that the validators of the Hub would need to do the execution of the other would need to know exactly what are we validating? What is this other chain doing? They would need to validate the execution as well, the state. That's the main difference.
00:45:31.948 - 00:45:37.346, Speaker A: They're kind of running the two node system then, like the node on the Hub and the node on the other chain.
00:45:37.458 - 00:45:37.926, Speaker B: Exactly.
00:45:38.028 - 00:45:51.098, Speaker A: And in your case you're not. So they're running a celestial node within theirs, I guess it's a very light node, probably not super heavy, so it's not hard to add to whatever mechanism they already have for execution.
00:45:51.194 - 00:46:16.110, Speaker B: Yeah, it's also permissionless. Whenever it's live, you can just go and deploy your roll up. You don't need any governance proposals or anything else. It's literally how I envision it. It's very far away currently, but how I envision it is you press a button, you code your smart contract or you code your business logic. Then you press a button and you have like a life network.
00:46:16.190 - 00:46:41.520, Speaker A: That's it. This is a question I probably should have asked earlier in the interview, but I realized I didn't and that I want to kind of just revisit quickly the light clients, where they are and what they're for. When we talked about this kind of early on, this idea of a light client not knowing the full state and you were saying that Celestia could actually help with that, maybe. Can you paint a picture of a light client where it lives and how it would actually use?
00:46:43.490 - 00:47:41.694, Speaker B: I mean, a light client in its cores, as I said, it just downloads the headers and maybe some state like subset of the state that it cares about. In Celestia, a light client can additionally do what is called data availability sampling which gives it the guarantee that the full block is there and is available. And this is like a similar guarantee as if they have downloaded the whole block themselves. So where does such a lite client live? For instance, a roll up sequencer, which is like a full node in the rollup sense could run a celestial lite client, do data availability sampling and only post the roll up blocks onto Celestia. So basically it would run a light client instead of like a Celestia full node. Right. And a light client of the roll up could either be on the peer to peer layer of the roll up itself.
00:47:41.694 - 00:48:19.626, Speaker B: We could think of it as like a subnetwork having its own peer to peer layer and then following headers. But these headers could be verified on the Celestia chain because the headers are also posted on the Celestia chain. So they could be like you can verify as a light client yourself that the header was actually included on the Celestia chain by verifying like a merca proof. And another option is that the Light clients could, instead of using the roll up speed API layer, they could download the headers directly from the Celestia chain and do data availability sampling, or they could download a subset of the data they care about or something.
00:48:19.728 - 00:48:22.860, Speaker A: Yeah, interesting. Yeah, that was so many options.
00:48:23.250 - 00:48:23.646, Speaker B: It was.
00:48:23.668 - 00:48:46.198, Speaker A: The second case that I was curious about was how those Light clients of these roll ups actually would work. So when we were talking about these multi chain universes and potentially transfers between these different networks, you are built on the Cosmos SDK. I'm assuming you'll have IBC enabled. Maybe not. Would you?
00:48:46.284 - 00:49:07.274, Speaker B: I would like that. The Celestia main chain has hard coded a few IPC connections. And I think I mean, this is all not set in stone red yet, but I would assume that we launch with an IPC connection to the Cosmos hub as well as to Osmosis and that's it.
00:49:07.392 - 00:49:17.710, Speaker A: Okay, but what would that be for? Would that be for sending Celestia tokens there to trade or something? Or would it be because there's no need for tokens to come to Celestia, is there?
00:49:17.780 - 00:49:25.550, Speaker B: That's true. Yeah. I mean, the connection to the Hub would be that also to us Moses are literally just to provide liquidity.
00:49:25.970 - 00:49:26.458, Speaker A: I see.
00:49:26.484 - 00:49:33.074, Speaker B: And have an easy onboarding experience from atom holders for it.
00:49:33.112 - 00:49:33.714, Speaker A: Got it.
00:49:33.832 - 00:49:49.462, Speaker B: And there would be in the case that we launched with the Ethereum rollups using Celestia, then there would be a one directional unidirectional bridge to Ethereum. Right. It's also a bridge in some true.
00:49:49.596 - 00:50:13.358, Speaker A: But you don't need bridges to any of these chains that use Celestia. You don't actually need that. And then I guess the other question is let's think more about general purpose bridges, things that are meant to be sort of these connector hubs. They're not IBC. They use often different mechanisms. They might not be in Cosmos. I mean, optics or axilar are kind of coming to mind.
00:50:13.358 - 00:50:27.270, Speaker A: So these types of projects, do they need any sort of data availability? Will they interact with Celestia in any way? Or are these completely like I might actually be talking about completely different parts of this network.
00:50:28.810 - 00:50:52.830, Speaker B: That's a very good question. Again, I'm not sure if these bridge providers also first of all, this ecosystem of bridge providers is exploding, and I'm not completely following all of them. There's so many. There's Axelr. I don't know. There's so many different chains that will launch in the next few months and there will basically be bridges between other chains. Totally.
00:50:52.830 - 00:51:25.734, Speaker B: I'm not sure they will need data availability because some of them are their own chains. They need data availability as a concept. But if they launch their own consensus networks, they do not inherently need Celestia or like data availability. But I think for us it could be interesting or not for us, but for that future ecosystem of rollups that will exist on top of Celestia. They could use these bridge providers to connect between these rollups between each other.
00:51:25.932 - 00:51:31.818, Speaker A: Yeah, I wonder I guess you would just have a record on Celestia that happened.
00:51:31.904 - 00:52:05.330, Speaker B: Well, that's a very difficult question. I guess it depends exactly how the mechanism it will depend on the mechanism of these bridge providers. There could be a record of something happened on Celestia. I mean, if you boil it down to like if you abstract away enough, you could think of Celestia as a publish subscribe mechanism. You publish data and you can subscribe to a particular namespace and get that data so that somewhere these bridge providers could benefit from that for sure. But I cannot foresee how it will look like.
00:52:05.480 - 00:52:49.170, Speaker A: I have sort of a follow up to that though, is do you yourselves ever see yourselves as acting as any sort of bridge? And I know that would add more complexity, it would change this whole idea of the single mission. But since you would have all of these things locked into you and actually when you think of ethereum and the roll ups, that is something that Ethereum somewhat provides already, maybe in a very inefficient way. But you can move things from the roll up to ethereum and then from ethereum to another roll up. Do you ever see yourself I mean, just even saying that out loud just is so clunky and goth and gas guzzling that it hurts a little bit. But could you ever imagine yourself also acting as a bit of a bridge?
00:52:49.910 - 00:52:58.630, Speaker B: I don't think so. I mean, in the Ethereum case, as you said, you move basically ether to those roll ups, lock it in there and move it back.
00:52:58.700 - 00:53:10.054, Speaker A: But it's also if you do trades on those roll ups, you could move whatever equivalent into ethereum and then off to another roll up. To me, I see that as like a very clunky bridge in a way.
00:53:10.172 - 00:53:25.914, Speaker B: So I don't think we will do this because it would require the celestial main chain to have some sort of execution environment. Right? And that defeats the whole purpose. So I don't think they will do that. But maybe this could be a roll.
00:53:25.962 - 00:53:47.202, Speaker A: Up or maybe you partner with a bridge. So there's like the preferred bridge and maybe some of the data is actually properly articulated within Celestia because you've worked out some coexistence with some bridge protocol for the rollups that are deployed on Celestia. Anyway, just an idea.
00:53:47.256 - 00:54:21.230, Speaker B: Yeah, that could happen. Or it could be like some form of roll up could act as like a Bridging provider itself. The tricky part there is that the composability of roll ups, depending on how they do fraud proofs, it will take longer for them to have what's it called? You have this fraud proof window. Usually it's like a week or something. And if you combine these, the Bridging provider itself would be a roll up. Yeah, that would be a bit tricky. I think these Bridging providers would rather be their own chain or something on Ethereum or I don't know.
00:54:21.230 - 00:54:21.774, Speaker B: Yeah.
00:54:21.892 - 00:54:29.118, Speaker A: Be agnostic. Yeah. To me, I see them as floating not on Ethereum, but like kind of floating in space, just connecting a lot of these other networks.
00:54:29.134 - 00:54:32.210, Speaker B: Yeah, it makes more sense. So probably they will run their own chain.
00:54:32.630 - 00:54:41.510, Speaker A: Yeah. But they're also doing that single purpose thing. It is actually just a bridge. Often it's not trying to also provide data availability.
00:54:42.010 - 00:54:49.042, Speaker B: Yeah, I like that a lot because it underlines this new paradigm of modular, like the modular blockchain stack.
00:54:49.186 - 00:55:09.278, Speaker A: So I think we're close to the end of the interview. We're almost out of time, but I want to understand a little bit about where you're at. Where is the project? Know you mentioned that there might be in the future some sort of connection to Ethereum and the roll ups, but yeah. Are you live? Are you going to be live? What's the state?
00:55:09.444 - 00:55:45.322, Speaker B: So we're currently doing an offsite in Berlin. The whole team came together to crunch away PRS and code. And next week we plan to launch a small internal testnet which we call DevNet. And I guess, depending on how this goes, three to six months from that, I guess rather three months from that, we will launch the first public testnet where we will also invite other people to participate. And then we will launch an incentivized testnet and then launch cool.
00:55:45.456 - 00:55:48.186, Speaker A: Are you going to follow the sort of game of stakes model?
00:55:48.288 - 00:56:07.854, Speaker B: I think so. We didn't think about how to do that incentivized testnet yet, and I think it would be nice if there were some Celestia specific challenges in there. But I guess, yeah, we would rather follow that game of stakes style incentivized testnet that was pioneered in Cosmos.
00:56:07.902 - 00:56:08.850, Speaker A: Yeah, very cool.
00:56:09.000 - 00:56:37.158, Speaker B: And in terms of development, so we had like a first MVP where we had a prototype where you can do data availability sampling and we're currently reworking that for the DevNet. It will have similar features, but instead we previously modified a lot of the tenement code and now we use tenement more as a black box and augmented, like the storage and the peer to peer part that is new. Will add it on top instead of intend them in directly.
00:56:37.254 - 00:57:03.440, Speaker A: Cool. Cool. So, Ismail, I want to say thank you so much for coming on the show and sharing with us the story of Celestia, what it aims to do, where it's at, and also thank you so much for letting me ask you all of these questions about data availability and how this sort of space works. I feel like I now have a much deeper understanding of the project. And yes, sorry it took me two sessions with two of you to get there, but thanks.
00:57:03.890 - 00:57:09.190, Speaker B: Thank you so much as well. Been a pleasure and fun and big fan of the show.
00:57:09.340 - 00:57:16.370, Speaker A: Thanks. So I want to say thank you to the podcast editor, Henrik, the podcast producer, Tanya, and to our listeners, thanks for listening.
