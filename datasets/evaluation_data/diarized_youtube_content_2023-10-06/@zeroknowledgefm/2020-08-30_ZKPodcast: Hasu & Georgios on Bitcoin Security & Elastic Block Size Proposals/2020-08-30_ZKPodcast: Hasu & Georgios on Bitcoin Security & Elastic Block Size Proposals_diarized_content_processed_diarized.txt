00:00:07.130 - 00:01:05.874, Speaker A: Welcome to Zero Knowledge, a podcast where we talk about the latest in zero knowledge research and the decentralized web. The show is hosted by me, Anna and me Frederick. This week, guest co host Giorgios and I chat with Hasu, an independent crypto researcher who is focused on bitcoin and ethereum economics and security. We talk about the history of elastic block size proposals in bitcoin and some of the new proposals now making their way into Ethereum. But before we start in, I want to say thank you to this week's sponsor, Trail of Bits the initial release of Yvault contained a bug that could be manipulated by an attacker to drain most, if not all, of the pool's assets. Trail of bits found this bug and quickly reported it to the Y Vault team. They were able to secure the roughly 400k USD held in the system.
00:01:05.874 - 00:01:51.322, Speaker A: This bug, which was luckily caught, highlights the risk stemming from increased complexity caused by composition in the DFI space, as described in their recent blog post entitled Accidentally stepping on a DFI Lego. DFI composability is hard. For example, if you integrate multiple tokens, any one token could compromise the security of your entire platform. On the other hand, if you integrate multiple platforms, your protocol could suffer from complex interactions. If this is a relevant topic to you or the project you work on, reach out to Trail of bits to arrange a security assessment or sign up for their Ethereum security office hours. I've added a link in the show note to the blog post as well as their website. So thank you again, trail of bits.
00:01:51.322 - 00:02:09.650, Speaker A: And now here's our interview with Hasu. So this week, I welcome back Giorgios to the show. He's here partly as a guest and partly as a guest host, while Frederick is still off bringing Polkadot to life. So welcome, Giorgios.
00:02:09.810 - 00:02:11.750, Speaker B: Hi Anna. Thank you for having me.
00:02:11.900 - 00:02:16.520, Speaker A: So tell me, Giorgios, what is new since the last time you've been on the show?
00:02:16.970 - 00:02:40.606, Speaker C: Previously, I was operating independently, also working with companies that wanted my services, and recently I joined Paradigm as a research partner to work closely with the fund's portfolio companies. And as a general disclaimer, everything I say in this podcast is my views and my views only and does not represent the fund.
00:02:40.788 - 00:02:50.062, Speaker A: Sounds good. So today's guest is Hasu or Hasufly? Hasufi. What's your handle?
00:02:50.126 - 00:02:51.490, Speaker B: Just Hasu is fine.
00:02:51.640 - 00:03:01.362, Speaker A: Okay, cool. So Hasu is an independent crypto researcher who's focused on bitcoin and ethereum economics and security. So welcome to the show, Hasu.
00:03:01.426 - 00:03:03.218, Speaker B: Hi Anna. Hi George.
00:03:03.394 - 00:03:33.300, Speaker A: So somebody on Twitter this was a tweet sent it at us a while back. Somebody pointed out that podcast hosts tend to start the episode with, when did you first learn about bitcoin? And that might not be interesting for most people. Right. But actually, in this particular case, I'm quite curious about your origin story. Like, where do you come from? What part of the world got you into this space?
00:03:34.230 - 00:04:14.938, Speaker B: Yeah, I can give you the short rundown, sure. So I start way back. So I dropped out of university to play online poker professionally. Cool. Did that for almost a decade, and that's where I came into contact with computer science for the first time as we built proprietary training software for online poker. And at the time, I used bitcoin occasionally, but I didn't really look into it, I just used it, which is probably pretty rare. And then when poker was kind of dying around 2017, 18, then I was looking for a new challenge.
00:04:14.938 - 00:04:58.182, Speaker B: And that's the first time I really looked into bitcoin. I mean, the first time I really looked like, beneath the surface, it clicked pretty soon for me. So I obviously wish I would have done it sooner, but I was in the fortunate position, really, to put all my time into studying crypto. From that point on, I didn't really have to have to work for a few years, so I could just sink all my time into that. And the Twitter and medium made it really easy to build an audience at the same time. So it's almost like you get paid for learning as long as you're willing to tweet about it and write about it a little. That's.
00:04:58.182 - 00:05:02.174, Speaker B: I think social media makes learning so much easier and so much more fun.
00:05:02.212 - 00:05:17.618, Speaker A: And totally, I completely identify with this. I mean, this podcast has been a learning experience for myself, I think also for Frederick. But you're right, being able to create something at the same time has so many more benefits than maybe just learning on your own.
00:05:17.784 - 00:05:37.270, Speaker B: Yeah, I realized that by playing poker that I enjoy teaching more than playing. So for the last years, I didn't really play much myself anymore. I was focused on developing software for studying and analysis, and I had some players that I coached pretty actively.
00:05:37.850 - 00:05:44.010, Speaker A: Cool. You just said that poker died. I actually don't know anything about this. How did poker die?
00:05:44.670 - 00:06:16.466, Speaker B: So, yeah, all games that are played for money and that are not purely chance, but have some skill component, they have a natural life cycle where there's this incentive for good players to invest a lot into getting better. So they do, but the bad players don't really get better. So you have this widening gap between the bad players who finance the whole poker economy and the good players and. Yeah. So that's how games basically come to.
00:06:16.488 - 00:06:21.286, Speaker A: An end, because it's no longer worth it for people to get good, I guess.
00:06:21.388 - 00:06:55.378, Speaker B: Yeah, because there's not enough new inflow of money because it's no fun anymore for bet players just because they lose so fast. And this was really accelerated dramatically by the rise of machine learning. Wow. That's what we worked with as well, every online poker player nowadays. I mean, this is what chess computers, for example, have been based on for a long time. But, yeah, you have the same for poker. So anyone who plays online poker for any meaningful amount of money today, they study all day using machine learning tools just to get better.
00:06:55.378 - 00:06:56.050, Speaker B: Pretty much.
00:06:56.120 - 00:07:22.934, Speaker A: Wow. I mean, that's a whole world I don't know that much about. But this is interesting. I want to ask you now, we know your story kind of from poker to bitcoin, really? But you just first got into bitcoin, but now I definitely know of you more through your interactions with the ethereum community. Would you say it's bitcoin and ethereum for you now, or are you also involved in other projects?
00:07:23.062 - 00:07:36.298, Speaker B: I would say it's bitcoin and ethereum. I started out mostly focusing on bitcoin, but nowadays that's a lot of stuff that I like a lot about Ethereum. More and more of my research has been focused on that lately.
00:07:36.474 - 00:07:37.102, Speaker A: Okay.
00:07:37.236 - 00:07:52.898, Speaker B: And I feel like it reflects you have this synergy effect as well there. So if we study something that happens in Ethereum, like we did with eip one five nine, there's always something to take away from for bitcoin as well.
00:07:53.064 - 00:08:06.630, Speaker A: Okay. You're one of these. I mean, I know a few researchers that have their foot in both of these ecosystems. Do you find the balancing act a challenge? Do you get shouted at from both sides, or are you pretty much embraced?
00:08:08.010 - 00:08:26.240, Speaker B: Yeah, you may be embraced less than someone who lives in only one of the worlds, but overall, I feel like, especially now that I guess it's more popular now than last year to be interested in Ethereum as well. So, yeah, it's not really a problem.
00:08:26.930 - 00:08:49.350, Speaker A: So let's move on to the topic that we have planned for this episode, which is we're going to be looking at this elastic block size proposals and how they stack up, I guess. So why don't you start Giorgio's, because you have that first question. So, yeah, why don't I throw it to you, Giorgio's, to sort of get this conversation started.
00:08:49.500 - 00:08:49.814, Speaker B: Yeah.
00:08:49.852 - 00:09:03.818, Speaker C: Thank you, Anna. So, haso, I guess we can start by talking about why do we want blocks to not be too big, but also not too small? Why does the block size, yeah, the.
00:09:03.824 - 00:09:34.334, Speaker B: Block size is probably like the most discussed metric. So there are really three reasons why. Three downsides to larger blocks. Also, larger blocks increase validation costs for users, and they hurt fairness. Fairness is a term that we will get into in a minute. And they also heard fee revenue that is necessary to secure the network. I start by explaining validation costs.
00:09:34.334 - 00:10:30.614, Speaker B: Bitcoin is basically a replicated database, right? And the state of that database is who owns which coins this info stored in the Utxo set. And where bitcoin diverges from a traditional database is in a who can write to the chain via proof of work, but also who can validate the state? Because only when you, when you know whether a coin you receive is actually in the correct state and is recognized by the rest of the network, only then you know that basically you actually received a coin on bitcoin that you can trust. This is equivalent to being a root user of a database compared to, let's say, interacting with a database via trusted middleman. Because that trusted middleman can really tell you anything they want.
00:10:30.652 - 00:10:34.310, Speaker A: Right, like in the traditional kind of computer setup.
00:10:34.650 - 00:11:38.410, Speaker B: Exactly, yeah. And to compute the state like the latest state of bitcoin, you need to run the state transition function on all previous transactions from Genesis. This requires downloading everything that has ever happened on bitcoin and then running signature verification and a bunch of other validity checks on these transactions. And the larger blocks get, the more data there is to download and process for a new node that wants to come online in bitcoin, and that also wants to stay in sync with the blockchain as it grows. So the larger the blocks, the more there is to validate and the higher the cost of being a root user of that database becomes. And I guess George can say a bit more about that. But most of, quote unquote, innovation in other blockchains, or a lot of it actually comes down to tinkering with this one metric, the validation cost.
00:11:38.410 - 00:11:47.440, Speaker B: So a lot of what is sold as scalability is actually introducing new trust assumptions by jacking up the validation cost.
00:11:48.130 - 00:12:28.266, Speaker C: Yeah, exactly. And typically users forget, or other creators of the exchange forget, that it is very important to be able to validate the state yourself, because otherwise you are exactly as you said earlier, you would be relying on other middlemen to serve you the state. And in the end, these middlemen, they're not providing any proof that the state they are serving you is the correct one. So, for example, today, infura does not provide any further proof, any metal proof, for example, which says that this transaction was actually included. It's just an API that you trust to give you the information.
00:12:28.368 - 00:12:38.122, Speaker A: And a light client wouldn't be able to actually verify this type of level of transaction.
00:12:38.266 - 00:13:19.210, Speaker C: So a light client can do that. Although connecting to infuria, you're not connecting as a light client. You're just asking a server for some arbitrary information. But also in the context of light clients, you change the security assumption from previously, where it was that you're validating all state transitions and that you know that this state is actually valid. You're changing it to the SPV assumption, which in bitcoin, this is called simple payment verification, which means that you're trusting the proof of work only and you're not trusting the actual state transition function to be applied correctly.
00:13:19.630 - 00:13:24.426, Speaker A: But so what you just described. So these are the downsides of the large blocks.
00:13:24.538 - 00:13:26.334, Speaker B: The first one of them, yeah.
00:13:26.532 - 00:13:30.026, Speaker A: Okay. What's the next downside of a large block?
00:13:30.138 - 00:14:01.290, Speaker B: Well, large blocks hurt fairness between miners, all proof of work coins want this property called fairness, which basically says that for every hash a minor computes, they should get the same reward. So a minor who provides 1% of hashes should get 1% of rewards, and another miner who maybe provides 30% of hashes should get 30% of the rewards. So it's really about this proportion proportionality.
00:14:01.950 - 00:14:10.830, Speaker A: But would that not happen with a large block? Is it like too much? Do the proportions get changed because they're large?
00:14:10.900 - 00:15:04.438, Speaker B: Yes, exactly. So larger blocks benefit larger miners because of the propagation delay of blocks during mining. You can think of the propagation delay as an unfair advantage because a larger miner can mine on their blocks immediately, whereas it needs to propagate to everyone else first before they can mine on it. So using the example of the 30% hash rate miner, 70% of the time, the large miner has to wait for someone else's block to arrive for him in order to start mining on it. Whereas the smaller miner, with only 1% of hash rate, needs to wait 99% of the time for the block to process. And that's why, basically, if you're the 30% minor, then basically 30% of the time you have a propagation delay of zero. And this is really amplified by the block size.
00:15:04.438 - 00:15:09.950, Speaker B: The larger blocks are, the longer they take to propagate, and the more it hurts fairness.
00:15:10.370 - 00:15:24.706, Speaker C: Just to clarify by what has meant that by propagation time of zero, because if you have 30% of the time, if you are the miner, you don't need to propagate it to anyone. You have the block, so the propagation time is zero because you already have.
00:15:24.728 - 00:15:39.890, Speaker B: The block, so you still have to propagate if you want other miners to converge with your blockchain, but you can build on it immediately, whereas everyone else can build it in zero plus propagation delay.
00:15:40.050 - 00:15:43.978, Speaker A: All right, are those all of the downsides of the large blocks, or are there other things?
00:15:44.064 - 00:16:34.170, Speaker B: Well, the third one is that larger blocks hurt fee revenue, which in some networks are required for security, such as in bitcoin. In bitcoin, the block subsidy is supposed to decrease over time, and then one day fees are supposed to pay for security alone. But fees in bitcoin are the result of block space supply and demand. And users are only willing to pay fees if it helps them get priority over some other users. If there's ever too much supply of block space so that anyone who wants in can get in, then there's no bidding for priority. So if you have really large blocks, you set yourself up for this scenario where there may not be the congestion necessary to create fees. And without fees, there's no security.
00:16:34.170 - 00:16:42.394, Speaker B: Without security, there's no demand to use the network and so on. So there's really a security death spiral there.
00:16:42.512 - 00:16:48.858, Speaker A: It's almost like it's become too efficient. Yes, I know that that's usually like, but in this case, it's a negative.
00:16:49.034 - 00:16:49.662, Speaker B: Yeah, right.
00:16:49.716 - 00:17:04.654, Speaker C: Yeah, but Hasu, to be clear, this only applies on chains where the block subsidy eventually goes away, such as bitcoin. Do you think that this could become a potential problem for Ethereum?
00:17:04.782 - 00:17:32.030, Speaker B: No, I don't think that's. No, Ethereum, based on its design, cannot have this problem because they are set up to have a permanent block subsidy. They will always have enough of an incentive for the blockchain to move forward. They don't rely on transaction fees. In fact, as we'll see a bit later when we talk about ERP one five nine, the fees will not even go to miners. Most of the time, they will simply be burned.
00:17:32.530 - 00:17:44.622, Speaker A: So now I think you've covered the kind of challenges or problems with the large block, the two large blocks. What's wrong with small blocks on the other side of the coin?
00:17:44.766 - 00:18:48.406, Speaker B: Well, the big problem when blocks are too small is that transacting is too expensive and too prohibitive for users. So we discussed previously how large blocks can push users toward trusted third parties in the example of infura, or, well, straight up using banks or exchanges. But the same is true when transacting is too expensive, when blocks are too small. So really the transaction cost and the validation cost, they are two sides of the same coin, basically two costs of using bitcoin or using Ethereum. So it really doesn't help you much if you can lower one of the two costs to zero at the expense of raising this other cost super high, because the user still has to bear both of the costs anyway. So you want to keep them in some kind of balance, I guess. Yeah.
00:18:48.406 - 00:19:54.170, Speaker B: So what really happens if the base chain doesn't have a lot of capacity for users? Then these users will either not use cryptocurrencies, so there's really no welfare benefit for them at all on no utility from the chain, or they use a trusted provider such as centralized exchange. And this problem is not really circumvented by layer two solutions either, since all known layer two solutions, at least for bitcoin, and I'm not sure about Ethereum. So relying on George just there, they always depend on this assumption that the base layer is available for dispute resolution. So in other words, the assumption that you can always get a transaction in at the base layer at a reasonable price. But if the fees on layer one for an uncooperative close in the lightning network, for example, are $100, then you really can't use the lightning network for anything less than $100 without becoming vulnerable to griefing attacks.
00:19:54.590 - 00:20:23.026, Speaker C: I guess a detail on this is that bitcoin's layer two design space is only around things involving fraud proofs. While the Ethereum, let's say ecosystem, has support for utilizing validity proofs, whether that is a stark or a snark, or who knows what else in the future. So this is also nice because it's relevant to the ZK podcast after all.
00:20:23.208 - 00:20:31.126, Speaker A: I love how Giorgio, you're the one who's always bringing it back to the ZK. I forget, but yeah, cool.
00:20:31.308 - 00:20:52.798, Speaker C: And so, for example, in Ethereum's zk roll up solutions, which is currently one of the big things happening, there's no need to get a dispute transaction within some amount of time. So this kind of danger does not exist if you use Azure knowledge proof based layer two.
00:20:52.884 - 00:20:53.646, Speaker B: I see.
00:20:53.748 - 00:20:57.390, Speaker A: Are there any other disadvantages to the small blocks?
00:20:58.050 - 00:21:00.366, Speaker B: No, I think that's pretty much it.
00:21:00.548 - 00:21:24.198, Speaker A: Cool. So I have a follow up because I just realized as we're going through this sort of large block versus small block comparison, I'm not actually particularly familiar as to where does bitcoin fall, where does ethereum fall, and where do any of the other protocols that maybe we've talked about on this show fall? Is there a spectrum, and can you place protocols across that?
00:21:24.364 - 00:22:25.302, Speaker B: Yes. So bitcoin and Ethereum are actually very hard to compare because they don't have the same bottleneck for scalability and validation. So I think that bitcoin's block size is actually larger than ethereum's, which if you ask someone on crypto Twitter, they would probably like, 99% would say that ethereum's block size is larger per like, let's say per hour or something. Right. However, the bottleneck in Ethereum is really the state growth, because transactions in Ethereum can, they can affect the state in very complex ways, and every transaction can trigger really an unlimited amount of state updates. So it's much more complex, I think, to replay this as well. Whereas in bitcoin, in bitcoin I think the bottleneck is signature verification.
00:22:25.302 - 00:22:30.550, Speaker B: But I will defer also to you, Georgia's on this.
00:22:30.720 - 00:23:40.446, Speaker C: Yeah. I guess a more concrete way to compare the two is that when you make a bitcoin transaction, you specify, I want to destroy this, this and that Utxo, and I want to create this or these new Utxos. So the system already knows what kind of state will be touched before and after the transaction gets executed. So it allows you to do a lot of more optimizations around it. While in Ethereum you cannot know the full result of the computation because as you're executing, different things might happen, because your contract call might call another smart contract and that calls another smart contract and so on. That plus the fact that all of these contract interactions on bitcoin, it eventually is just a list of Utxos which says that these are the unspent transactions and these are the ones which may be used for future payments. While for Ethereum, the state is a bunch of addresses which have some storage, and each one has its own different logic and so on and so forth.
00:23:40.446 - 00:23:51.990, Speaker C: So it really is, the additional state verification cost for Ethereum is a direct result of its Ritz statefulness.
00:23:52.490 - 00:24:05.050, Speaker A: For any of the other protocols that are coming out or that have come out, is block size something that's deeply debated or considered, or is there sort of a standard that's kind of being used for these new systems?
00:24:05.390 - 00:24:26.942, Speaker B: In my view that there's really no, I'm not aware of any blockchain that goes for lower validation cost that goes on this side of the spectrum. No one wants to beat bitcoin or Ethereum in that regard. They all go for more throughput at the expense of validation cost.
00:24:26.996 - 00:24:28.962, Speaker A: So a bit on the smaller side.
00:24:29.096 - 00:24:30.242, Speaker B: No, on the bigger side.
00:24:30.296 - 00:24:32.802, Speaker A: On the bigger side. Oh, so then a bit on the bigger side.
00:24:32.936 - 00:24:44.946, Speaker C: And also, if you look at basically all of the chains that are being validated by professional proof of stake validators, which. Anna, I understand that you also have the zka validator.
00:24:44.978 - 00:24:45.880, Speaker A: That I do.
00:24:47.870 - 00:25:31.826, Speaker C: Yes. All of these chains, they do not have nodes which are easy to sync on your laptop or even on a home server. Typically they require many more computer. So you can think that the end user of the bitcoin or Ethereum node is the average Joe, while the end user of the proof of stake high performance blockchain is the proof of stake validator. And the user is expected to get the data via trusted endpoint. So it's almost as if there's a different kind of market being targeted by the CIC.
00:25:31.938 - 00:25:49.994, Speaker A: Okay, so then let's look closer at the specific bitcoin scenario. Has there been a debate between smaller blocks and larger blocks? How long has that been going on? Is this a forever thing that I'm just stumbling in on?
00:25:50.192 - 00:25:52.202, Speaker B: Yeah, it has been going on forever.
00:25:52.346 - 00:26:07.058, Speaker C: Okay, so why don't you walk us through a few of the past bitcoin block size proposals, whether they were formally stated in a bit or just discussed on, and maybe we can talk about that a little more.
00:26:07.144 - 00:26:39.162, Speaker B: Yeah, so the block size is probably the most richly debated part of bitcoin for the reasons that we mentioned. It really like, whether you prefer larger blocks or smaller blocks comes down to what you envision bitcoin to be in the future, what your assumptions about the world are like how bitcoin should compete with other payment systems, mainly basically where you see it's product market fit. Right. And that's where all of this debate comes down to.
00:26:39.296 - 00:26:45.818, Speaker A: So you're kind of talking, I guess, here about the bitcoin as store of value versus bitcoin as a transaction medium.
00:26:45.994 - 00:26:47.280, Speaker B: Yeah, pretty much.
00:26:47.890 - 00:27:01.086, Speaker A: If people think it should just stay like you should buy it and hold it, then maybe it doesn't matter how fast or good or cheap it is to do the transactions. Whereas if you want to use it as payment, then it has different requirements.
00:27:01.278 - 00:27:15.190, Speaker B: Yeah, exactly. And this long going debate then ultimately led to the fork or like the creation of bitcoin cash as an altcoin in 2017.
00:27:15.770 - 00:27:28.806, Speaker A: I don't think we've ever really touched on that on the show. And actually, since we're talking about it, who wanted what bitcoin core versus bitcoin cash? Is that the differentiation.
00:27:28.918 - 00:28:44.980, Speaker B: We have a short overview prepared over the different proposals, and then I think it will be a bit more clear what different people wanted after going through them. Okay, so the original block size limit was added by Satoshi in 2010, but the limit was introduced in secret. And it also didn't really matter until 2013 because there was a secondary limit in place on the number of database locks. And this limit effectively kept the block size somewhere between half a megabyte and zero point 75 megabyte. And in 2013, this limit that no one was really aware even existed, it actually accidentally caused a chain split in bitcoin, one of, I believe, three major bugs that happened in bitcoin that were exploited or triggered accidentally. And in reaction to that, then the lock limit was removed, and the 1 mb limit was the new official limit. So it was pretty much an unofficial limit before that time.
00:28:44.980 - 00:30:09.438, Speaker B: But ever, like, during this whole time, there were proposals to change the limit to various numbers, starting with bit 100 by Jeff Garzig. And he suggested that miners can vote on the block size within a range from one to 32 megabytes. So you basically give miners the power to decide how large blocks should be. I mean, this was all pretty early, but nowadays, we know that this has some incentive incompatibility issues for the reasons that we talked about earlier. So, if you allow miners to make the blocks as large as they want, then you give the larger miners the power to get an unfair advantage over smaller miners, and you give better connected nodes, better connected mining pools, an advantage over more poorly connected ones. So, for example, it would have been extremely difficult for european or us based mining pools to compete with chinese mining pools, like if 80 or 90% of hash rate were in China. And then you increase the block size and increase the already high propagation delay even further, then you effectively make it.
00:30:09.438 - 00:30:49.302, Speaker B: You lock mining into China. At that point, you say, okay, mining is going to stay in China because we are going to make it impossible for non chinese mining pools to compete. And this was followed by Bib 101, by Gavin Andresen, and he suggested to increase the block size to eight megabytes. And then I think starting in 2016, it was supposed to double every two years. And this is kind of the first time that we see this algorithmic increase. So this proposal later turned into bitcoin XT, by the way, a failed hard fork attempt.
00:30:49.446 - 00:30:55.246, Speaker A: So I was curious, as you're going through it, so did BIP 100 go through?
00:30:55.348 - 00:31:00.574, Speaker B: No, none of these went through that we are going to talk about went through.
00:31:00.612 - 00:31:08.418, Speaker A: Okay. And BIP 101, they proposed it. Some people were into it. And that caused this fork, I think.
00:31:08.424 - 00:31:12.350, Speaker B: It was a few years later, actually, that it was spun into bitcoin Xt.
00:31:12.510 - 00:31:12.978, Speaker A: Okay.
00:31:13.064 - 00:31:42.638, Speaker B: But there was no popular support for bitcoin XT. And that's why, basically the hard fork attempt failed. And I don't know if you've read this famous blog post by Mike Hearn, the resolution of the bitcoin experiment. But that's when he resigned from being a bitcoin developer. And basically he handed in his resignation because of this.
00:31:42.724 - 00:31:44.846, Speaker A: Because of the BIP 101.
00:31:45.028 - 00:32:08.614, Speaker B: Yeah, exactly. Because bitcoin Xt. Now, he was like a big proponent of this. So he wanted this to succeed first in bitcoin and then in bitcoin XT. But bitcoin XT failed. It did not have popular support. And he blamed it on, I think, censorship on bitcoin talk or whatever.
00:32:08.614 - 00:32:39.600, Speaker B: Right. This was a big topic back then. BIP 102 by Jeff Garzick was suggested to increase the block size to two megabytes. I think this was one of the precursors that led to the segwit two X proposal later, which was supposed to be a compromise between those parties who wanted an increase to two megabytes and those who wanted Segwit activated. But yeah, it did not have popular support.
00:32:40.610 - 00:32:45.886, Speaker A: What were the year differences between this? Like BIP 100 to BIP 101 to BIP 102?
00:32:45.988 - 00:32:55.602, Speaker B: That's a good question. I think BIP 100 was very early. Ten or eleven. No, the bip system did not exist back then. I don't know when it was created, actually.
00:32:55.736 - 00:33:00.310, Speaker A: But I'm just wondering, are they like coming out every two years, five years ish?
00:33:00.970 - 00:33:03.282, Speaker B: This is bitcoin's procpower.
00:33:03.426 - 00:33:20.106, Speaker A: Okay. That comes up every time. What I find interesting here, though, realize I'm really living outside of the bitcoin world. But was there no other bips between these? It was just BIP 100 to BIP 101 to BIp 102. And they're all about the same thing.
00:33:20.288 - 00:33:26.074, Speaker B: No, I think they are actually organized by topic. Right, I see.
00:33:26.112 - 00:33:26.410, Speaker A: Okay.
00:33:26.480 - 00:33:30.090, Speaker B: Like, if you made a bip today, you could get like a number in the high hundreds.
00:33:30.170 - 00:33:30.960, Speaker A: I see.
00:33:31.410 - 00:33:32.350, Speaker B: What do you want to do?
00:33:32.420 - 00:33:36.914, Speaker A: Okay, got it. So that's why these were all the ones around the block size.
00:33:37.112 - 00:33:39.394, Speaker B: I think so, yes, I think so.
00:33:39.512 - 00:33:40.180, Speaker A: Okay.
00:33:40.790 - 00:33:57.286, Speaker C: The addition of new opcodes and all of that. Adding new opcodes or changing has been going through the BIp procedure. So it's not like only the block size is discussed in bips, but it's the most, let's say, contentious thing, usually.
00:33:57.388 - 00:33:59.930, Speaker A: So now I'm curious to hear, what was the last one?
00:34:00.080 - 00:34:41.942, Speaker B: Oh, there are a few. Oh, actually, Peter Willer, who is, I guess, today known as one of the most prolific developers in the bitcoin core camp, which is the standard implementation of bitcoin. And you could say the bitcoin core won, like, the popular vote during the block size war to be the stewards of the main bitcoin implementation, the main bitcoin software that everyone uses. You also had a proposal to increase the block size by actually around 18% annually. So he introduced, or he. And I think was it, and Jason. Yeah.
00:34:41.942 - 00:35:06.270, Speaker B: So they both made proposals that rely on what we now would call a technological constant. So the idea is that consumer hardware and bandwidth always increase or improve over time, so we can increase the block size because the validation cost actually goes down over time. So we can always max that out if we want.
00:35:06.340 - 00:35:09.806, Speaker A: They'd kind of counterbalance themselves and end up at a similar level.
00:35:09.908 - 00:35:41.734, Speaker B: Right, exactly. So at least that is the case if you ignore the third benefit of larger blocks, or like, I guess, one and a half of them, because the unfairness property still exists, but it also goes down over time as miners become better connected. Now there's proprietary software, or even. There's even very good public software. The miners are. They don't really. I'm not super informed on this, but they don't really propagate the blocks over the bitcoin network.
00:35:41.734 - 00:36:18.162, Speaker B: I don't think. I think they have their own blocks, their own network for propagating blocks that is highly optimized. And the final one that was then activated, the only change to the block size limit after Satoshi added it in 2010 was the Segwit update, introduced in 2016, activated in 2017, and it actually increased the max block size to around two and a half megabytes. Achieves this via an extension block. So that is the only time the block size was ever changed.
00:36:18.306 - 00:36:24.374, Speaker A: So then what? Bitcoin cash was smaller. Did it keep the original size?
00:36:24.492 - 00:36:55.794, Speaker B: No. The bitcoin cash proponents were pushing for larger blocks, whereas I see bitcoin, what we now know is, like bitcoin, or still know as bitcoin camp, they were pushing for the block size actually to stay the same. And then there was actually the I to this day, don't really understand why sequit had this block size increase. I mean, I wasn't around at the time, but I know that I would have resisted that pretty hard, actually.
00:36:55.992 - 00:37:04.414, Speaker C: So, Hashu, why would you be against segwit or not against segwit, but against the block size increase in segwit.
00:37:04.462 - 00:37:51.202, Speaker B: Oh, yeah. I would have been against the block size increase because I think we should not. Like bitcoin has this assumption that the chain needs to be always congested. So there's enough fees to pay for security. And I think it's very dangerous to increase the block size until we know that this condition is satisfied almost all of the time. And it really wasn't. So nowadays, fees are still like eleven years into bitcoin, and let's say another eleven years before the block subsidy is pretty small, and the fees are still very small in bitcoin and far from enough to pay for security.
00:37:51.336 - 00:37:52.226, Speaker A: Oh, wow.
00:37:52.408 - 00:38:02.390, Speaker B: So they really threw a wrench in this developing block space market where users were actually paying or willing to pay fees.
00:38:03.210 - 00:38:09.850, Speaker A: And you're talking about bitcoin core here. You're talking about the segwit, the one that sort of most people will be using.
00:38:09.920 - 00:38:12.250, Speaker B: Yeah. Right. Today, unfortunately.
00:38:12.670 - 00:38:20.186, Speaker A: So wait, back to that, though. Was bitcoin cash bigger then? So that's an even larger block size.
00:38:20.368 - 00:38:23.246, Speaker C: Bitcoin cash raised the block size? Yes.
00:38:23.348 - 00:38:23.710, Speaker A: Okay.
00:38:23.780 - 00:38:27.402, Speaker B: I think to around. Was it eight megabytes initially?
00:38:27.546 - 00:38:31.150, Speaker A: Like that first or earlier proposal similar to this.
00:38:31.220 - 00:39:05.290, Speaker B: Now they are in the range of like 32. Even inside the bitcoin cash camp, there was later another hard fork, another group of people that split off, which was bitcoin Sv, Satoshi's vision, because they wanted even larger blocks. Right. So bitcoin cash and bitcoin are more similar in that thinking nowadays, what a safe block size limit looks like than bitcoin Sv, which they want their blocks to be like a gigabyte.
00:39:06.990 - 00:39:38.150, Speaker C: So far, we talked about only constant changes, basically, or things which do not take other inputs from the system. They just say, either we set the block size to be this number, or we say, make the block size grow with this percentage via the technological constant. Are there any other proposals which take into account other inputs, such as minded preferences to change the block size and so on? And could you talk to us a bit about them?
00:39:38.220 - 00:40:35.878, Speaker B: Yeah. So blocks, like we discussed how they need to be the right size, but it's very hard to get that number right. And further, what this right size is can vary dramatically based on external conditions. And I give you a few examples for that. So hardware and bandwidth can improve, and then the validation cost will go down, and maybe a block size that was unattainable a few years ago might be fine today, or transaction fees are higher than what we deem is enough to pay for security, and then we could safely increase the size without killing that security. Or the demand to transact is lower than the supply of block space. And then we are really in that scenario where there are no fees, no security, and we want to lower the block size and hence the supply to create this artificial congestion in order to bootstrap security.
00:40:35.878 - 00:41:52.670, Speaker B: Again, yeah, you have this weird problem where you want the block size to be something different based on different conditions. And another popular one, that one that actually received a lot of attention back then was, so what if there's burst demand to transact right now because of a specific market event? So let's say there's like demand to transact, let's say five megabyte or ten megabytes for a short time on the bitcoin network. But it can't really support this. And it wouldn't be like if we allowed this, it would be neither bad for security because maybe the fees are already high enough, or it wouldn't be bad for validation costs, because in the grand scheme of things, like over a year of blocks in the blockchain, maybe like a few ten megabyte blocks, they don't make a huge difference. Right. So they don't really increase the validation cost very much. So there has always been this wish to be able to support burst demand, so you can make blocks selectively bigger for some time in order to satisfy that demand without increasing it permanently.
00:41:52.670 - 00:42:09.750, Speaker B: And that's like all of these things kind of culminate in this idea of elastic block size proposals. And this is a second class of proposals where the block size changes dynamically based on external conditions.
00:42:10.170 - 00:42:18.520, Speaker A: And does this lead us a little bit into kind of the conversation about Ethereum and this EIP 1559?
00:42:19.210 - 00:42:19.958, Speaker B: Absolutely.
00:42:20.124 - 00:42:50.370, Speaker A: Very cool, because that's sort of where I wanted to. I know that one of the things that we definitely want to cover in this episode is this EIP. So EIP being Ethereum improvement proposal, we actually did an episode a while back on that whole process and the governance around it. So you just defined this, the elastic block sized proposals. So you would say that this particular proposal is that the EIP 1559 is an elastic block size proposal.
00:42:52.230 - 00:43:35.162, Speaker B: Yes. EIP one five nine is, among other things, an elastic block size proposal, but it didn't start there. So there are two proposals to cover in bitcoin and then that were not implemented. And then there's ERP one five nine in ethereum that is about to be implemented. That is the first one in the major protocols to actually go into production with an idea like this. So there was one proposal in bitcoin in 2015 that actually got the number BIP 105, and it would introduce a new secondary hard cap for the block size of eight megabytes. And then you allow miners to vote for larger blocks.
00:43:35.162 - 00:44:47.778, Speaker B: But how this differs from the previous proposals, where the miners simply vote, the miners can simply vote however they want, is there's one difference here, and it is that miners pay for larger blocks with paying a higher difficulty. So basically, they need to mine more hashes in order to. If they want to make a block that votes for higher block size, then this block needs to meet a higher difficulty target. The idea here is simply that miners need to pay a cost to increase the block size, and that prevents the larger miners from just jacking up the block size arbitrarily, because it would be expensive to them to do that and no longer in their own interest. But it would be in the interest of any miner to do this when there's actually user demand to fill these blocks with transactions that pay real fees. However, the proposal, BiB 105 was, unfortunately, pretty flawed because there's this delay between where a miner pays a cost to make blocks bigger and the blocks actually becoming bigger. So he actually makes the blocks bigger for other miners.
00:44:47.778 - 00:45:48.140, Speaker B: And, yeah, that's a pretty flawed mechanism. It's the collective incentive problem, pretty much. So, as a miner, you want blocks maybe to be bigger, but you don't want to be the one paying for it. And the paying with difficulty itself. This concept is also flawed, since if more hashes are required to find the next block, or let's say miners don't release a block that satisfies, like the current difficulty target but not the one that they want to vote for, then it's even a drag on the block size in some way, because the blocks will come in slower, like at longer intervals, because miners don't publish their blocks immediately. So 105 was not implemented, but there was a second proposal called flexcap that was actually more popular. But weirdly enough, this was also before our time in crypto, but it also suffered from the same problem.
00:45:48.140 - 00:46:43.710, Speaker B: Instead of paying with difficulty, the miners would pay by deferring. They would basically not claim part of the block reward for that block, and that block reward would go into a pool, and basically, there would be like, a rolling 2016 block window that determines how large blocks can be. And if whenever miners withhold or don't claim a block part of the block reward, then the max block size goes up. And if miners remove money from that pool and they claim it back, then basically the limit goes down. But this suffered from the exact same problem as Lip 105, because, again, the miners need to be able to increase the block size immediately, otherwise you have this collective action problem. Yeah. So this brings us pretty much to EIP 1559, because 1559 is.
00:46:43.710 - 00:46:57.860, Speaker B: It does not reference any of the bitcoin proposals, but it achieves a similar thing in a much better and more incentive compatible way, as the bitcoin proposals wanted to.
00:46:58.630 - 00:47:05.682, Speaker A: But it was probably influenced by that previous, like, even though it was a different network. Do you think a lot of the people who were thinking about.
00:47:05.736 - 00:47:27.034, Speaker C: I don't think that's true. So in all of our previous research in the AP 1559, we never found any reference to any of the bitcoin elastic block size proposals, which kind of highlights the segregation between the bitcoin and ethereum communities and how they should talk more to each other in order to not have overlapping words.
00:47:27.072 - 00:47:30.970, Speaker A: They reached the same conclusion in a way, but had to go a long way around.
00:47:31.040 - 00:47:40.026, Speaker C: Not so much the same conclusion, but more so that some discussions could have been skipped because they've already been done in the bitcoin mailing.
00:47:40.058 - 00:47:40.590, Speaker A: Got it.
00:47:40.660 - 00:47:47.746, Speaker C: But hasu, could you explain to us in a few sentences what is EIP 1559 and how it works?
00:47:47.848 - 00:48:22.778, Speaker B: Yeah. So in EIP 1559, you have also a long term gas limit. Gas is how a block size is measured. In Ethereum, it's not measured in the same term as in bitcoin, of 10 million gas per block. And this was recently changed, but we will ignore this for now. And then you have a short term cap of 20 million gas per block. So this really means that the block size can go up to 20 million gas per block, and the miners can decide themselves the size of the block they want to mine immediately.
00:48:22.778 - 00:48:59.398, Speaker B: But there is a fee that miners need to pay in order to fill these blocks. And this fee, which is called the base fee, it changes based on the distance of the recent block size to the target, long term target block size. So you can imagine that there's now a fee that you need to pay as a miner, and the miners then recoup this fee fully from the user. So as a user, you can just imagine there's now a fee that you need to pay, and the fee is no longer set by supply and demand, but it's set by the protocol.
00:48:59.494 - 00:49:02.700, Speaker A: Does this just look like higher gas prices to people?
00:49:03.630 - 00:49:07.702, Speaker B: No, I don't think so. Okay, you disagree?
00:49:07.846 - 00:49:22.222, Speaker C: Well, the thing is that if miners keep mining blocks with more than the 10 million gas, gas prices, indeed, like on a notional basis, they do go up about that.
00:49:22.276 - 00:50:12.794, Speaker B: The way that the fee works is whenever the last block was above 10 million gas, it was larger than that. Then the base fee will increase for the next block. And whenever the recent blocks were below 10 million gas utilization, then the base fee would go down. So you can think of it like this. If there are a lot of blocks mined below the utilization limit, then the base fee would effectively go to zero. And then it costs nothing to transact, same as it would in bitcoin when the blocks are not full. But if we mine for a time blocks that are larger than 10 million gas, then the fee would increase in order to discourage transactional demand and basically encourage miners to mine blocks again that are smaller.
00:50:12.794 - 00:50:19.006, Speaker B: So the utilization level of blocks is always around 10 million gas in the long term.
00:50:19.118 - 00:50:33.126, Speaker A: I see. I think, my question, I think the misunderstanding that I just had was this fee, the word fee that you're using, this is the fee affecting the miner themselves. The miner pays a fee in order to have access. So this isn't the fee that the.
00:50:33.148 - 00:50:35.590, Speaker B: End user, it is the same fee.
00:50:35.930 - 00:50:36.342, Speaker A: Okay.
00:50:36.396 - 00:51:03.214, Speaker B: So the fee actually gets burned. So it basically works like this. In order to put a transaction in the block, the miner must burn a certain amount of ETH. And that amount of ETH is determined by the base fee. And of course, the miner doesn't want to, like, they don't want to put in any transactions that are not worth it to them. So they only include transactions where the user actually pays that fee high enough.
00:51:03.332 - 00:51:13.262, Speaker A: But that's the question. Does the gas fee need to be high enough for them to then sync and burn that fee for them to actually do this action?
00:51:13.326 - 00:51:29.258, Speaker B: Yes. The protocol sets the fee and the users need to pay this fee. And it does no longer depend on supply and demand, at least not directly, but on the distance from the previous blocks to what they. The target level.
00:51:29.344 - 00:51:33.500, Speaker A: Okay. That was actually the connection I was looking to better understand.
00:51:35.150 - 00:51:52.400, Speaker B: Yeah. So the interesting part here also is that the fee does not go to miners. No other blockchain does this pretty much, but the fee is burned. And that is necessary because if the miners got the fee, then.
00:51:54.390 - 00:52:34.862, Speaker C: They would be able to add their own transactions in a block with no cost. And that would result in them inflating, like pushing up the base fee because they would be creating full blocks at no cost because all the fees go back to them. And then this would be bad for other users because they would need to pay a higher fee than they would be paying before, while with the base fee being burned. This means that if a miner tries to add fake transactions in the block in an effort to prop up the base fee, they have to pay for it and there's no way for them to work around it.
00:52:34.996 - 00:53:28.030, Speaker B: Yeah, George was exactly right. If you have a minimum fee in the network, then you can't give the control over this minimum fee to miners. Otherwise they will just use it to jack up the cost for users by including their own transactions. So you have to charge miners this fee, and that's what ERP one five nine does by burning it. And that forces the miner to recoup the cost from the user. And this is also why this proposal could not be copied and implemented one to one on bitcoin, because bitcoin relies on fees going to miners to secure the network, but Ethereum does not. Ethereum can afford to burn the transaction fee because it has a permanent block reward or block subsidy that will secure the network.
00:53:28.450 - 00:53:36.770, Speaker A: So from the perspective of the user, what does EIP 1559 actually mean for them?
00:53:36.920 - 00:54:27.620, Speaker B: The scope of EIP 1559 is pretty large, and it goes way beyond the scope of these smaller proposals in bitcoin. So first there's the slack mechanism that is the word of the Ethereum community, for some blocks can be larger as long as others are smaller. This is this thing with reacting to burst demand, but that's pretty much where the similarity ends, because ERP one five nine secondary introduces a new way of how users even interact with the block space market in the first place. In bitcoin, you have something called a first price auction. So users publish their transaction together with the bid for inclusion. When a block comes in and that bid is high enough to be included, then you get in. Otherwise you might wait.
00:54:27.620 - 00:55:34.386, Speaker B: It's really pretty unintuitive user experience, because outside of, well, I guess outside of bitcoin, people are not really used to bidding for something as simple as inclusion in a block. And the way that ERP one five nine changes that is you have this base fee that every user pays in the block, and it's the same for everyone. And the base fee is also known ahead of time for the next block. So you can quote the user a price, and if the user is willing to pay that, then unless there's like a burst of demand that blocks will fill up, then this fee will always be enough to get into the next block. So it's way more similar to going on Amazon being quoted a price and buying it, than having to speculate how much others are going to bid. So it really removes some of that complexity there. Third is because the transaction fees are burned, it cements ether as the fee paying asset on Ethereum.
00:55:34.386 - 00:56:08.578, Speaker B: And this is more important than it may sound, because all blockchains have this problem of, it's called economic abstraction, where basically the main asset is abstracted out from the market in the sense that the users can pay miners in any currency they want. So, for example, in bitcoin, if you have a transaction stuck, then you can use something, it's called a transaction accelerator, and you can pay with PayPal to bump your transaction fee even after you've already submitted it.
00:56:08.744 - 00:56:12.654, Speaker C: Yeah, this is called the child pays for parent transaction.
00:56:12.782 - 00:56:13.460, Speaker A: Okay.
00:56:14.710 - 00:56:25.910, Speaker B: If it's just a transaction accelerator, then the pool would simply mine your transaction, even if it has a lower fee because you paid like $10 on PayPal or whatever.
00:56:25.980 - 00:56:28.054, Speaker C: Oh, because you paid the pool directly, you mean.
00:56:28.092 - 00:57:07.582, Speaker B: Yeah, exactly. So that's how the transaction accelerators work. Yeah, but I mean, if this happens on a large scale, then this would be really bad for the native token. And in the case of Ethereum, of any asset, really, it's bad because anything that or any asset or any network that has a block subsidy, it prints this asset that it then gives to miners. And if the less this asset is worth, then the less it can spend on security. So Ethereum really wants ether to be worth a lot. So basically it has to print less ether in order to secure the network.
00:57:07.582 - 00:57:53.266, Speaker B: And this is what the fee burning gives you. It ensures that fees can only be paid in ether because, well, the miners need to burn ether in order to even process a transaction. And finally, I mean, we already covered this a lot, so I keep it very short, but it untangles network security from transaction fees. This is something that Ethereum does in general. So Ethereum has like a permanent block subsidy that pays the miners and gives them an incentive to move the blockchain forward and stabilizes consensus. So they really don't need these additional transaction fees to subsidize miners. This would just mean overpaying for security if the block subsidy is already enough.
00:57:53.266 - 00:58:21.210, Speaker B: So they can just say, hey, okay, maybe 2% per year or maybe 1% per year is enough to pay miners. And then if there are any fees on top of that, then we just burn those. And, well, we don't really know how high fees are going to be, but we don't need to. Maybe fees are like, maybe we burn 3% of ether per year and pay -2% of ether, then we'd have an effective, like, there would actually be less ether year after year. So that is also possible.
00:58:21.360 - 00:58:27.246, Speaker A: But is that good or bad? Does it matter? Is this a good thing?
00:58:27.348 - 00:58:32.314, Speaker B: I think that's a good thing. It's basically like paying all ether holders a dividend.
00:58:32.442 - 00:58:32.830, Speaker A: Okay.
00:58:32.900 - 00:58:41.166, Speaker B: But it works like stock buybacks, for example, that got a lot of attention. And stock buybacks are like, they are similar to just paying a dividend.
00:58:41.278 - 00:58:41.746, Speaker A: Okay?
00:58:41.848 - 00:59:19.098, Speaker B: So if you hold an asset that there's a force or like a party out there that buys some of that asset every year and then burns it, then that's good for you, because there's like a constant bid in this market. That's why I really like ERP one five nine. Personally. I mean, I like all of those things. But I think it's great that how the Ethereum community values consensus stability and has this permanent block reward, but it still doesn't mean that there's higher inflation than in bitcoin just because you don't know how much fees are going to be burned.
00:59:19.274 - 00:59:43.126, Speaker C: So Hasu, so far you did us walkthrough from bitcoin proposals. Now, we talked about EIP 1559 in the context of ethereum, but I'd like us to go back to bitcoin, and I know that you have some ideas. Last proposal in the works, which you could perhaps share some details with us.
00:59:43.228 - 01:00:59.418, Speaker B: Yeah. So all of the elastic block size mechanisms that we discussed, including the ones on bitcoin, they're always focused on preserving fairness and serving burst demand in the network. Those are two of the three reasons that we covered why blocks can't be too large, but they never covered the third one, which is that we need sufficient fee revenue, at least on bitcoin. So Ethereum is immune to this, but bitcoin isn't because of how it is set up. And that's why you and me have been looking for only a brief period so far, but looking into a different kind of elastic block size mechanism that would selectively lower the block size instead of increasing it to satisfy this condition, that the bitcoin network must be in permanent congestion. And the idea is to observe fees paid to miners, and if that is below a certain level, then the protocol would lower the maximum block size to slightly undershoot the observed demand to transact. And that's how we would create congestion and ensure more healthy level of fees to miners.
01:00:59.514 - 01:01:00.350, Speaker A: Oh, cool.
01:01:00.500 - 01:01:21.446, Speaker C: Like the way that I thought about hassles you should kind of embrace congestion as a good thing rather than trying to remove it from existence. You have to have healthy congestion in order to have a stable chain. And that is how you want to kind of target design your mechanisms around.
01:01:21.548 - 01:02:10.582, Speaker B: Yeah, and this mechanism would be compatible with other mechanisms that may be adverse demand. It just also observes that there's a minimum level of congestion. But if there's a lot of demand and fees are higher than they need to be in order to pay for security, then the block size could still increase on the upside, but if the fees are too low, then it could also increase on the downside. And that is really the new part of this mechanism. So we briefly touched on this. Miners can't really charge what we would call monopoly prices. They can't set their own prices because when they don't include a transaction with a fee that they don't deem high enough, then there's always a next miner who might include it.
01:02:10.582 - 01:03:08.118, Speaker B: And this is really good for censorship resistance in bitcoin because basically it puts the number of miners that need to collude with each other at a very high level before they can permanently censor you. If like a small number of miners censor you, then most they can do is delay your transaction. But the downside of this is that they can't set their own prices. So this would simply be a mechanism to break this collective action problem where one miner can't set a minimum fee for users without another miner, like then coming in and farming these transactions for themselves. We are still very early with this, and there might be problems that we haven't yet discovered. So, I mean, if anyone wants to collaborate on this idea, then please reach out to Georgia or me because, yeah, we would love to find more people who are interested in this.
01:03:08.284 - 01:03:20.314, Speaker A: Nice. I have this question of, like, what's next for both of you, but I feel like you've answered at least part of what's next. Is there anything else that you're working on that we should keep our eyes open for?
01:03:20.512 - 01:03:46.866, Speaker B: No. I mean, I write an article every other week for derivative insights. So if you want to follow that, then usually it's enough to follow me on Twitter. We also launched a podcast recently. It's called the Uncommon Core podcast. Do it with Suzu, who's also my co author at Derrybit Insights. Yeah, so I'd love if you could check that out.
01:03:47.048 - 01:03:53.366, Speaker A: Very cool. Thanks for sharing that with us. And Hasu, really nice to meet you. Thanks for coming on the show.
01:03:53.468 - 01:04:00.838, Speaker B: Yeah, it's one of my favorite podcasts in crypto. So I'm so happy to be invited here. Thanks for having me.
01:04:00.924 - 01:04:10.314, Speaker A: Yeah. Thank you so much for walking us through all this. And Giorgios, thank you for returning and guest hosting, guest being again, always a pleasure.
01:04:10.362 - 01:04:10.666, Speaker B: Anna.
01:04:10.698 - 01:04:15.370, Speaker A: Thank you very much. All right. And to our listeners, thanks for listening.
