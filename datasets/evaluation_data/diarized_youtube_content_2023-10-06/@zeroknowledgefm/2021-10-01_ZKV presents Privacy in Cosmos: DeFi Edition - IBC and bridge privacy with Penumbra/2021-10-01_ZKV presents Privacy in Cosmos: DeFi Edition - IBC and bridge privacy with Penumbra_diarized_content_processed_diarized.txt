00:00:00.250 - 00:01:19.266, Speaker A: My name is Henry, I work on Penumbra and I'm going to be giving everyone kind of an update on the project as well as some thoughts about IBC and bridge privacy. So for the agenda of what we're going to be talking about, the first point is kind of an overview of what Penumbra is and then what we're building. And from that some thoughts of this kind of general problem of shielding value flows and that leading into some interesting directions for building private bridges. So that's kind of the overview of the talk. So just to dive into the first part there, what is Penumbra? So Penumbra is trying to build a system to allow private trading in any crypto asset. And what that consists of in a little bit more detail is two parts. The first part being this cross chain shielded pool and the second part being a private dex that operates within that shielded pool.
00:01:19.266 - 00:02:40.830, Speaker A: So you could maybe think of this as trying to come from the opposite direction rather than saying oh, we have this trading mechanism and then it's leaking information. So we need to sort of hide information in Penumbra, sort of starting from the other direction of saying like how do we build this completely private ledger that has trading integrated into it? So what that looks like is on the left we have this whole beautiful multi chain ecosystem in Cosmos that's all mostly transparent. And the way that Penumbra is going to work is when you do an IBC transfer to Penumbra, you're actually going to shield the value that you send in. So everything within the Penumbra zone is fully shielded and people can do all of the things that they might like to do on a proof of stake network transacting. They can do private staking, they can swap or they can market make and that's all completely shielded. So there's sort of four main parts of that. The first being this private transaction system.
00:02:40.830 - 00:04:08.138, Speaker A: So we're using a Zcash style design that records value in notes, which you can think of as being sort of like shielded UTXOs, but extended to support any asset and to support more complex functionality than just sending funds between different addresses. So the way that this works essentially is that instead of having this big public chain state where everybody has all of the same global view of this information and there's transactions that change it, instead the public state is only commitments to these nodes which you can think of sort of being these little state fragments. And really what's happening is that every user has their own kind of private fragment of the chain state, which is the funds they control and so on. And when they make a transaction they're going to prove that their updates to their state fragments are honest. And so this gives really good privacy because all of these sort of state updates are completely shielded. But it also means that you have a bit of a different data architecture, right? You can't just sort of query a node and find out what your account balance is. So there's a bit of complexity to manage there.
00:04:08.138 - 00:04:41.794, Speaker A: But the upshot is you have no opt in privacy. There's no accounts, there's no long term identity. All you see when you're looking at this chain is just that some transactions are happening. But even in the transactions that are committed to the state, you don't actually see any details. So it's not necessary to kind of, oh, we need to encrypt this transaction until it can be committed because the transaction itself just shouldn't have any public information in it. So that's the transaction part. The next part of this is private staking.
00:04:41.794 - 00:06:01.578, Speaker A: So this is a really big deal. If you ever wanted to build a private proof of stake network, you need to have private staking or else you're forcing the people who are the stakeholders in the system to choose between having privacy and that's supposed to be the point of the system or participating in governance or security or whatever. But you run into this immediate issue of like, how do you pay out rewards without knowing what the delegations are? And to fix that, we designed a new staking system which actually treats this unbonded stake and bonded stake as basically two distinct assets rather than as two states of the same asset. So you track the bonded stake using these native delegator tokens, aka staking derivatives or liquid. Staking tokens is another name that people use. I think delegator tokens is a much better name, but that's just my opinion. And the cool thing about this mechanism is that you have an exchange rate that effectively prices in the staking rewards since Genesis.
00:06:01.578 - 00:06:56.398, Speaker A: And so using just that exchange rate, you can get the same economic effect, but you can eliminate the actual staking rewards and that allows having delegation privacy because these delegator tokens are just like any other token. It's in the same shielded pool. You could even send them over IBC or whatever. So that's the staking component. The third out of these four components is private swaps. So there's a system that we designed called Zswap, which is a two phase protocol for doing sealed bid batch swaps. And if these two phases in the first phase, there's a burn phase where someone who wants to swap funds is going to privately burn all of their input funds and encrypt the amounts that they burned to the validators.
00:06:56.398 - 00:08:05.590, Speaker A: The validators are then going to sum up the encrypted amounts and decrypt only the batch total and use that to execute against the AMM and compute a clear impress. And I'll get into a little bit more details on that later in the shielded value flow section. Once they've done that, the people who were participating earlier are now in this mint phase where they can privately mint the output funds and they just prove consistency with this clearing price and the inputs. And so this is really cool because unlike just saying, oh, we're going to encrypt this until it's committed so that nobody can see it until it's too late to do anything about it or something, the actual individual trade amounts are not disclosed ever. Only the batch total is disclosed. So if you're on this very rare trading pair or something and you're the only one in the batch, then maybe that's still something to worry about. But as long as there are other people who are trading at the same time, your trade, it's not just hidden until it's committed, but it's hidden forever.
00:08:05.590 - 00:09:17.322, Speaker A: So I think that that's a much better privacy story from the market taker perspective, but it's also pretty interesting from the market maker perspective. So this is this private market making component on Penumbra. We're going to use the same concentrated liquidity mechanism as Uniswap B Three, although obviously the implementation is quite different. And what's cool about this mechanism is that people can create positions that operate only in a particular price range and by building a collection of positions, they can approximate whatever trading function they want. So you can have kind of like a market allocation of liquidity. And the really cool difference between Penumbra and a system like Univ Three on Ethereum is that the positions are still public, but they're anonymously created out of value. That's in the shielded pool and there's nothing that is in the position that identifies it as being connected to a specific trader.
00:09:17.322 - 00:10:45.450, Speaker A: And so what that means is that if you're an active market maker and you have some kind of strategy for how to do the most effective way to deploy your liquidity, you can do that. And as long as you're a little bit careful about it, you can protect your strategies. It's just not possible for someone to say like, oh, I'm going to open up a Block Explorer and look up who are the top ten most successful LPs and I'm going to clone their strategy because you can't sort of see which inventory is corresponding to which trader. And this actually gets at something that I think is missing from a lot of mev discussions, which is that there's this focus on sort of protecting the execution because this is sort of the first order consequence of leaking all this information. It's the thing that's being exploited right now. But if we look into the future, I think a much better perspective is to think, oh, well, all of these markets are also markets in information, and when we reveal any information about a transaction, we're potentially revealing value to other people. And so the solution isn't just to try to kind of only hide things until they're committed, but actually to just see how much you can hide forever.
00:10:45.450 - 00:12:07.190, Speaker A: So that's a little bit of a digression, but this is sort of the overview of what Penumbra is a really brief update on what we're building, since some of the audience might have heard some kind of earlier ideas of this. Since then, we started working on Node and client implementation and the transaction system. And then next up we're going to work on building out a proof of concept for the Staking system and the IBC integration and actually try and get a sort of basic version of all of these before nailing down all of the rest of the crypto just so we're getting everything right. So that's where we're at right now. But of more general interest to the panel is this idea of shielding value flows that I think is a really interesting way to frame the problem of bridge privacy. So here's this kind of general picture. We have two value pools, and this is not even necessarily something that's explicitly recorded as part of the chain state, but just think of some kind of like logical pool of value, and there's these transactions that move value between these two pools.
00:12:07.190 - 00:13:31.182, Speaker A: And our general problem is like, how do we hide information about these individual transactions but still reveal information about the value pools? And the details of that are going to depend on kind of like, exactly what kind of situation we're in. So if we look at some examples of this problem, here's one that shows up in Penumbra, which is delegation pools. So you have this kind of logical pool of here's all this unbonded stake, and then here's stake that's bonded to a particular validator. And there's a bunch of transactions where maybe people are doing delegations, maybe they're doing undelegations. And since we want delegation privacy, we want to hide these sort of individual delegation amounts because we don't want someone to be able to just correlate, oh, delegation undelegation. I can link these two transactions, but we still need to know what the voting power is. So how do you hide these individual delegation amounts but still reveal the voting power? Obviously, if you publish the voting power after every transaction, you can just look and see and figure out, oh, it increased by this amount.
00:13:31.182 - 00:14:07.340, Speaker A: So that that's what was in this transaction. So there's kind of a trade off there. Another example of this is private governance. So you can think of a logical pool as being like, oh, we have delegation tokens or voting or rights or whatever. We have these voting transactions, and then we're going to end up with like, here's a pool of yes votes. Maybe there'd also be a pool of no votes. And in this context, there's like, how do you hide individual votes while revealing the governance outcomes? So this one has like a pretty well known solution, which is like, you just count the votes at the end.
00:14:07.340 - 00:15:31.334, Speaker A: So this is kind of an easy case. Another one that also shows up in Penumbra is when you're doing swaps, you want to be able to sort of have value flowing between the shielded pool and the AMM reserves. How do you hide trade amounts but reveal the AMM reserves? This one's very hard, and there's like some nice papers by Tarun and Guillermo on it. And then the last example that's sort of most relevant here is like, private bridges. So now you have two chains, and how do you hide transfer amounts while revealing the chain solvency? So you definitely want to have some kind of public accountability and insight into what the kind of outstanding balance of payments is between these two chains in order to sort of just have a sense of what's going on and to prevent someone from kind of if there was a fault on either chain, you want that fault to be isolated. So these are all sort of like different examples of this problem. There's sort of two fundamental strategies that you can use for this.
00:15:31.334 - 00:16:25.730, Speaker A: The first one is splitting flows, and the second is batching flows. So for the first one, splitting flows, the idea is basically, okay, you have some amount, you split the amount into a bunch of randomized sub amounts and put those into different transactions. But this gives you a really very highly contingent privacy benefit because you're only going to get some kind of statistical privacy. You're relying on, oh, it's going to be hard for someone to correlate these different amounts. This only works when the transactions are otherwise indistinguishable. So if your transaction has an account Identifier in it, for instance, there's no point in doing this because someone can just say, well, they go to the same account, so they're linked. And it only works with really careful user behavior.
00:16:25.730 - 00:16:43.994, Speaker A: Maybe this is behavior that's kind of automated by them, a user agent, like a wallet or, you know, if they don't wait long enough or something, like know, maybe all this goes away. So this is like a kind of it's a thing that you can do.
00:16:44.032 - 00:17:04.530, Speaker B: And if you're henry, just FYI, we should probably jump in. I know you have one more slide. Yeah, I wanted to invite James and Belsi to at least click the link and I'll add you when Henry's finished. But yeah, do you want to finish? I know that there's the second slide to this, so maybe we can finish then.
00:17:04.680 - 00:17:52.130, Speaker A: The second part of this is like batching flows. So that's where the idea is. Okay, suppose we had some kind of integer valued encryption scheme where you could have additively, homomorphic ciphertexts, Verifiable ciphertext, so you can prove that things were honestly constructed and you can do threshold decryption. Well, now you can batch flows across different transactions because the validators can basically sum up the ciphertext and then jointly decrypt only the total. So for different scenarios, you get different trade offs. Happy to kind of jump into the panel discussion.
00:17:54.390 - 00:17:56.206, Speaker B: To explore a little bit more.
00:17:56.328 - 00:17:57.046, Speaker A: Yeah.
00:17:57.228 - 00:17:57.622, Speaker C: Cool.
00:17:57.676 - 00:18:24.560, Speaker B: Thank you so much for this talk. And for this rundown showcase of how we can think about privacy in zones and also privacy in bridges and across these things. So I want to introduce or bring on Belsi and James who are going to be our co panelists for this short Q A. James, do you want to quickly say who you are? We don't have a ton of time, so be as brief as you can.
00:18:24.930 - 00:18:33.382, Speaker D: No worries. I'm James Prestwich. I work on cross chain transactions and Bridging, particularly in EVN, Bitcoin and other chains.
00:18:33.546 - 00:18:35.250, Speaker B: Very cool. And Belsi.
00:18:36.070 - 00:18:46.440, Speaker C: Hi, I'm Belsi and I guess I'm here because I submitted a project on in hack Atom over the summer. So I'm pretty new to the Cosmos community.
00:18:47.530 - 00:19:06.010, Speaker B: But I think actually yeah. Belsi, the reason that we wanted to invite you is you actually had an interesting use case for using IBC in the privacy context. Would you be able to just quickly tell us a little bit about what that project was? Am I saying that mean?
00:19:06.080 - 00:20:10.430, Speaker C: I've not really pronounced it. So Surtex is basically a project that demonstrates sort of different use cases for Credential management over IBC. So the use cases that I demonstrated was sort of a credential that could be CERTEX itself is just a zone that just stores credentials and then the idea is different zones would interact with it and whatever gets published there could be private. So for example, if an identity has just been created for say, someone who wants to prove that they have been vaccinated to go to a restaurant, then that could just be a public sort of credential because they'll just create a new one every time they go somewhere else. Whereas the second use case is where an identity needs to be sort of a continuation. So like education or employment records that would be published on Certix but it would still be encrypted.
00:20:10.850 - 00:20:18.660, Speaker B: Very cool. I don't know. Henry, do you feel like was this use case, does that fall into any of the categories that you had in mind there?
00:20:20.310 - 00:20:31.320, Speaker A: I guess I think of that more as being along the lines of a kind of like anonymous credential then.
00:20:35.850 - 00:20:36.166, Speaker C: Kind.
00:20:36.188 - 00:21:24.162, Speaker A: Of I get so I would think of like okay, you have like one class of problems which is about the kind of like authentication and authorization in an anonymous way. And then in the other case you have a bunch of problems that are about sort of managing flows of fungible value and I think you end up, although there's kind of technical overlap, like a lot of anonymous Credential systems are going to be using similar primitives. I think that the the problem shape is like a little bit different because like, you know, it's not like there's a balance of outstanding vaccine passports.
00:21:24.226 - 00:21:35.210, Speaker C: Right, yeah, right. I think what you were mentioning is a little bit more like sort of macro in terms of the state of the chains, whereas this is very user centric.
00:21:36.510 - 00:22:11.526, Speaker B: But I wondered, I mean, one of the ideas that we wanted to explore here was the idea of privacy in this cross chain world and what kinds of privacy could go over bridges. So, Henry, you just sort of mentioned the value privacy, and I think that's the focus of a lot of this. But information privacy, data privacy, doesn't that expand a little bit past that? Like messages, basically? How are those dealt with in that kind of cross chain realm? James I don't know if you want to say, well, I was going to.
00:22:11.548 - 00:22:35.760, Speaker D: Point out that we can kind of split these up into meat space problems like credentialing and cash and then the wholly on chain problems, which are information privacy transactions on chain and transactions between chain. And both of these are very hard. But there is, like, a big separation in what information you want to reveal for each class of.
00:22:41.240 - 00:22:43.012, Speaker B: Oh, go ahead, Henry. Sorry.
00:22:43.146 - 00:23:49.180, Speaker A: I think the sort of individual sort of transfer of information is sometimes easier because it can be a little bit more isolated, whereas a lot of the problems that show up with this kind of, like I think macro scale is like a good way to put it. The problem is that you want to have there's a trade off, right, between, like, I need to know some kind of aggregate state about this big thing, but I don't want to have really individualized information about particular actions. And so you have to have this kind of trade off of at what point do you transition from a kind of privacy model to a public accountability model? And how do you avoid having the kind of necessary public accountability leak information about individuals instead of just about aggregate behavior?
00:23:51.280 - 00:24:17.060, Speaker B: I kind of want to ask a question about specific maybe to cosmos versus other types of bridges. Are there advantages to using IBC for privacy? Or would you say, like, all bridge like objects are equal in this regard? James might have opinions because he builds.
00:24:18.680 - 00:24:48.460, Speaker D: Do have I've been known to have opinions once in a while. But I think, roughly speaking, most bridge like things are going to be equivalent. There's going to be variation in latency and in security model and all of these things. IBC is, generally speaking, a very good cross chain bridge. The main difference here isn't going to be what bridge you're using. It's going to be how are you embedding that private information in the cross chain transaction?
00:24:50.660 - 00:26:24.750, Speaker A: One thing that I think is maybe good to clarify is that when people talk about, like, oh, I'm doing an IBC transfer, right, there's kind of this shorthand where different logical layers get conflated. And so you have at the base level, IBC is just like a messaging protocol that allows two state machines to communicate about updates. And then on top of that, there's like a fungible token transfer spec that allows people to transfer tokens in a particular way. Right. Basically you lock up your funds on chain A, chain B, sees this, mints some bearer tokens, then you can redeem those later and unlock the ones on chain A. And that's a protocol that's built on top of IBC, but because it's the one that everyone uses, it gets kind of just used as this shorthand for like, oh, we do an IBC transfer, but you can actually build both kind of sort of half private and fully private variants of that. So what we're doing with Penumbra is we're actually building a kind of half private variant of Fungible token transfers, where instead of saying, like, oh, you specify this destination address that the chain should publicly mint new coins to.
00:26:24.750 - 00:26:33.600, Speaker A: We just specify a bundle of data that's like some new shielded data to add into the chain that's going to be consistent with the locked files.
00:26:34.420 - 00:26:42.710, Speaker B: And is this shielded across the bridge? It's injected in a shielded form, so.
00:26:43.960 - 00:27:14.184, Speaker A: The data that gets injected into penumbra is shielded. But because it's coming from a transparent chain, what this reveals basically is the amount and type of the value and the account. And so that's still linkable. If you can link accounts, there's also a possibility to correlate the values. If you had privacy on both ends.
00:27:14.232 - 00:27:19.212, Speaker B: Yeah, I was about to two penumbras. What happens in that case?
00:27:19.266 - 00:28:17.330, Speaker A: There's sort of two levels that you could do. The first level, which is just like the most basic level, is actually already better. You're going to get rid of the addresses and only have public amounts. And so that's still a risk because someone can correlate amounts. But it's potentially harder to do that than to also have this kind of key of like, oh, which addresses are using which funds, and if you wanted to do more privacy than that, then you could use this kind. Of homomorphic threshold crypto to batch up amounts from different IBC transfers and then have those be sort of committed in batches where only this sort of batch amount is revealed. So I can say, like, oh, I know of the last five transactions, it sums up to a net flow of whatever.
00:28:17.330 - 00:29:01.970, Speaker A: And then you have this kind of privacy versus latency trade off, where the longer the batching interval is in theory, the sort of more you can put in the batch and the better privacy you get. But I think there's actually this kind of nonlinear privacy trade off there because the longer the latency is, the less usable the system is. And so you can build the most theoretically private thing, but if nobody uses it, you have no anonymity set. So that's another interesting trade off with batching, is like, you don't actually want to impose too much on the user experience.
00:29:03.460 - 00:29:46.430, Speaker D: Yeah, we actually see this in high latency bridges today. A lot of them have essentially like fast liquidity systems. So we've talked about FDI and things like that where a liquidity provider comes along, sees the user's high latency transaction and pays it out early. So that can only be done on transparent bridges because we have to reveal information about the user's transaction to these liquidity providers. So high latency private bridges will probably provide a much worse user experience with respect to liquidity, high cost of capital. But if privacy is important to your use case, you're going to use them.
00:29:48.320 - 00:30:34.888, Speaker B: Just in the example, Henry, that these two kinds of ways of keeping privacy. One where you actually see the amounts. I mean, what this makes me think of, I mean, obviously if you can see amounts on either side, I feel like that's a reveal. But it does make me think a little bit of like mixers where they just decide an amount and maybe that's a bit like what you meant by batching or they force a particular amount and then hold it for a while. Could the bridges ever use their maybe they're too instant, but could you ever use bridges to delay some, speed some up, maybe almost create like a mini tornado in that transaction space? That's basically what I had in mind there with the sort of fixed amounts.
00:30:35.064 - 00:32:21.376, Speaker A: But I think that a better way. So one of the interesting things about having Penumbra as this kind of semi private or like it's half penumbra is private, but the counterparty chain is transparent, is that if you use Penumbra as the intermediary for a transfer between two transparent chains, then you can potentially do much better than you would otherwise. And one interesting thing that's kind of like, okay, why would you have private dex and a shielded pool together is like two projects instead of one? The interesting thing is that if you don't have a way to transfer value kind of or transmute value internally to a shielded pool, then you actually don't have one shielded pool. You have N shielded pools with one for each asset. If someone moves in like atoms and then moves out atoms, then you know that it must have been an atom transfer that came in. But if you have the ability to do trading in a shielded way, then you can imagine a transfer where, for instance, someone moves atoms into Penumbra and then they trade their atoms for regen and then they move those regen over to the regen chain. It's much harder to do a kind of like amount based correlation because it's not just that you have to just look at a single kind of set of possible inputs, but you have to look at all of the inputs of every type with every combination of price that could have happened.
00:32:21.376 - 00:32:28.320, Speaker A: And so you potentially get this much more combinatorial explosion of statistical correlation.
00:32:31.620 - 00:32:46.680, Speaker B: What are the things that you worry would be leaked? I think you kind of went through a list of this in your talk, but I kind of wanted to talk about that, like the things that one would need to worry about being leaked in any of these transactions.
00:32:48.300 - 00:32:56.296, Speaker A: Maybe it's too big question like transactions like across bridges or across bridges where.
00:32:56.318 - 00:33:08.350, Speaker B: You'Re attempting to basically keep them private in an IBC context almost. What are the edge cases where people could actually discover something? What are people looking for to crack this?
00:33:09.780 - 00:34:30.068, Speaker A: So the unfortunate thing about having a transparent chain is that it means that every user has to be fully responsible for their own privacy. And there's this dynamic of like, you have to get lucky every time, but Chainalysis only has to get lucky once to get one thing that they can link to you. Yeah. So I think what would probably be helpful is having some kind of automated user agent or something that could help people prepare transactions that would use randomized sub amounts, maybe spread over time and just try to automate a lot of the kind of careful behaviors. But in the long term, I think that the shift that needs to happen is a shift from this idea of like, everything is transparent by default to a shift where everything is private by default. Because if the ledger is not private, you're fighting this sisyphean battle and it's not going to work.
00:34:30.234 - 00:34:56.510, Speaker D: That interesting thing there is that we're not shooting for perfect privacy for everyone all the time. A sufficiently motivated attacker is going to be able to de anonymize people. There's no way for all users to be perfect. What we're trying to do is make it so expensive to do it to everyone that nobody can do mass data collection. We're trying to make it so that the average user is safe all the time.
00:34:58.400 - 00:35:04.000, Speaker B: I wonder if James and Henry might have different intentions here, but we might have to take it into the chat.
00:35:04.160 - 00:35:10.772, Speaker E: I think that's quite a nice note for us to end on and we're going to have to move on to the next part of the event.
00:35:10.906 - 00:35:11.204, Speaker C: Cool.
00:35:11.242 - 00:35:16.130, Speaker E: So thanks guys for taking part. That was really interesting and I'm sorry to have to cut it short again.
