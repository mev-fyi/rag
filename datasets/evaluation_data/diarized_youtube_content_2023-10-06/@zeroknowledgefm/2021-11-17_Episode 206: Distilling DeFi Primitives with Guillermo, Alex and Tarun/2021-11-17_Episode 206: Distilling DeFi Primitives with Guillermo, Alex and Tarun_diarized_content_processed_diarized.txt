00:00:05.450 - 00:00:49.674, Speaker A: Welcome to zero knowledge. I'm your host, Anna Rose. In this podcast, we will be exploring the latest in zero knowledge research and the decentralized web, as well as new paradigms that promise to change the way we interact and transact online. This week, Guillermo Angeris and Alex Evans return to the show to chat about the research that they, along with Tarun, have been putting out over the last year. We explore the methodology behind their work on Cfmms, AMMS and related primitives. We also dive into some of their recent findings and what they are looking forward to working on in the future. Before we kick off, I also want to remind you about the Zkhack Online event.
00:00:49.674 - 00:01:18.222, Speaker A: Zkhack consists of weekly workshops about key ZK tools and an advanced puzzle competition. There is a fantastic community forming around this event, so do jump in. I've added the link to the site in the Show Notes. You can sign up there and find out more about the program. Hope to see you there. Also, if you're looking to get into the ZK space professionally, we are hosting a ZK Jobs Fair happening on December 2 as part of the overall ZK hack event. The ZK Jobs Fair will be featuring some of the top hiring teams in ZK.
00:01:18.222 - 00:01:50.122, Speaker A: This gives you the chance to meet them in a more casual setting as you're applying, so you may want to check it out. You can also check out the ZK Jobs Board where you can find ads from these teams looking to hire. The links for all of these can be found in the Show Notes. Today's episode is sponsored by Aztec. Aztec aims to be the privacy layer for Ethereum. They believe that unlocking programmable privacy is the next frontier for blockchains. Aztec is the first Zero Knowledge roll up built from the ground up for anonymous payments and DeFi transactions.
00:01:50.122 - 00:02:25.082, Speaker A: If you want to protect your payments, you should join the thousands of users already sending funds privately on Zkmoney. That's ZK money. We've added the link in the Show Notes. So thank you again, Aztec, for sponsoring this episode. Now here is my conversation with Tarun, Guillermo and Alex. So today I'm talking with Guillermo, Alex and our sometimes co host, Tarun. Tarun, I think for this episode you're going to be a little bit more like a guest because what we're going to be talking about is the work that the three of you have been doing over the last, I don't know, year or two.
00:02:25.082 - 00:02:29.194, Speaker A: So, yeah, I want to welcome back Guillermo and Alex to the show. Welcome, guys.
00:02:29.312 - 00:02:29.706, Speaker B: Thank you.
00:02:29.728 - 00:02:30.730, Speaker C: It's awesome being back.
00:02:30.800 - 00:02:31.834, Speaker D: Thanks for having us.
00:02:31.952 - 00:02:43.858, Speaker A: So both of you have been on the show before, but I know a lot has kind of happened since those episodes. Alex, you were on, I think, almost two years ago. I'd love to hear what you've been up to in that time.
00:02:43.944 - 00:02:58.270, Speaker D: Oh, my life has taken a turn for the worse oh, no. I've now come to a place where we're writing one paper a month with these two, mainly as punishment, but also as entertainment.
00:02:58.350 - 00:03:02.998, Speaker A: What about you, Guillermo? You were on the show, actually, earlier this year. What have you been up to since then?
00:03:03.084 - 00:03:34.974, Speaker C: Yeah, so for the most part well, I mean, as with these two, I've just been writing a bunch of weird, sick and twisted papers. But I've technically come to the conclusion that at some point I should finish my PhD. And one of my two professors has also come to a similar conclusion, although the other one is yet to be convinced. So hopefully by March I'll be defending and presenting the whole diddly dude of physics that almost nobody, I guess, from the show probably has ever heard of. For the better, in fact, I would say. Okay, but that's the plan, at least so far. Fingers crossed.
00:03:35.102 - 00:03:49.126, Speaker A: Very cool. Let's talk a little bit about the research you've been doing and maybe before we jump into the specifics, what is this research for? Why are you producing one piece of research every month and who's paying attention to it?
00:03:49.148 - 00:03:51.126, Speaker C: I think it's a question for Tarun, actually.
00:03:51.308 - 00:05:10.190, Speaker B: Yeah, so, I mean, I think we started working on kind of research in this vein, realistically, in 2019. And part of the thing that I guess I had seen and it took me a while to convince Guillermo, but I think he eventually believed me was that there was kind of this thing that was happening in DFI. That really resembled kind of the early days of AI pre ImageNet, like basically like 2008 to 2011, where a lot of the important research was actually done outside of academia. And not only was it done outside of academia, a lot of the kind of rigorous stuff, the theory was also sort of started outside of academia, not just like the like, hey, we ran a bunch of experiments and we could predict X thing at 99.8% instead of 99.5, which is like 90% of machine learning papers nowadays. And I think there's a thing where there was all this stuff happening and there are all these very counterintuitive things going on where there is something like Uniswap, which to someone from Finance and certainly like SBF Sam from FTX and CMS and all these trader people were always shitting on Uniswap on Twitter.
00:05:10.190 - 00:05:52.922, Speaker B: And part of the thing that more careful observers who are looking at the on chain data kind of noticed was that there was actually quite a crazy amount of usage and people weren't losing as much money as one might naively think. And I think that just led us down the rabbit hole of like, hey, this stuff that looks kind of like on the surface, like it shouldn't work or it's stupid in some way, actually seems to be working in practice. So there must be some more fundamental reason for why that is. And around that same time I met Alex randomly. And he was also doing the same thing, he kind of believed sort of the same thing. He'd been, like, writing these. He was probably the only formal Ish paper on MakerDAO at that time.
00:05:52.922 - 00:05:54.990, Speaker B: So this is like early 2019.
00:05:55.570 - 00:06:26.886, Speaker D: No, it's right. I ran into Tarun at his office. They would host a number of events there. And I'd heard of him from actually another guest on the show, Akis, who had mentioned him as somebody who really knew his leap on mathematics. And as some of the listeners who have seen Tarun might know, he does stick out in a crowd. And so I approached him with that research and turns out he was working on very similar things at the time. I think he was doing some credit risk analysis for compound, which was somewhat analogous using actually much more efficient and useful techniques than the ones I was using.
00:06:26.886 - 00:06:59.700, Speaker D: Hence the emphasis on the Ish. And then with automated market makers, turns out we were asking very similar questions. In fact, I'd written a whole paper that Guillermo and Tarun had sort of answered the same question that I was going after in one appendix and two paragraphs, which is a common theme in our work. We'll get into that soon of me writing very long and complicated things to which Guillermo will respond with a paragraph replicating the result in a simpler way. But that's sort of the origin. I think we were working on very similar things around the same time and couldn't beat them, so I joined them.
00:07:00.630 - 00:07:24.346, Speaker A: Nice. Okay, so your starting point is, like, sort of the CfMM and AMMS and exploring these I guess when you talk about uniswap being, I guess, one of the first DAPs you were really looking into, like, why does this thing work? What are the properties? But do you feel like, has that expanded from AMMS or do you still see that as the core focus of most of your work?
00:07:24.448 - 00:08:09.378, Speaker C: So at the end of the day, Cfmms or AMMS very generally are like one very particularly nice class of things to study. And as one can imagine, the problem with research papers is that you always end up with more questions than you actually answer. In fact, this is almost universally true. And if it's not true, then you haven't written a research paper. It's like you wrote something, you wrote an essay instead of a research paper. So in some sense, I guess, kind of stepping back and going pretty a layer higher to the meta, it's that we've kind of realized that there's a bunch of products that people want to replicate on chain, a bunch of financial products that all have these interesting properties like options and all these things. And most people kind of come at it from a very traditional finance angle.
00:08:09.378 - 00:09:03.222, Speaker C: And that's simply because of the fact that that's what people are trained in. And there's these simple notions that we all know and love about options. For example, this is a very specific example, but CFMS give you kind of a weird perspective on how to actually do things on chain. In some sense they're like a very natural, let's call it a primitive, a DeFi primitive, if we may, that lets you do a bunch of things that don't seem intuitively obvious how to do on chain, but give you a very natural framework to think about. So in the previous case, one such case is options, right? It seems kind of weird and you have to do these complicated mechanisms that require Oracles and all these things. But the case of Cfmms actually gives you kind of a natural way of constructing roughly the same object without the use of Oracles. So Cfmms are kind know, the way we think about it is you have this class, like this very large set of items that you can do on chain.
00:09:03.222 - 00:09:50.086, Speaker C: And Cfmms are a particular set of items that's very surprisingly large. It's a very large class, it's kind of actually shocking. And our research highlights just how shocking it is, how large that set is, even though it looks like a very specific instance, then you can do of things you can do on chain without using Oracles. I don't know if that kind of made sense, but the point is it's this very natural framework for which to think about. What are the things that we can replicate without using Oracles on chain? It's not the set of all things you can replicate without using Oracles, but it's a large class. And our point is there's some boundaries around this set of items one can replicate. And our research kind of pokes at the boundaries repeatedly of like how much is it, how much can we actually subsume within this umbrella of constant function market makers or whatever.
00:09:50.188 - 00:10:00.666, Speaker A: So are you finding though, things that don't work in them as well? Are there some examples that you could already say we tried, this won't work, we're going to have to rely on?
00:10:00.848 - 00:10:43.734, Speaker D: A very simple example would be just in the example Guillermo just mentioned, we have one of our more recent papers. This is now two papers ago. Replicating Monotonic Payoffs Without Oracles describes a class of, for instance, payoffs that users may desire that are fairly popular, for instance, regular call options and so forth, that have unbounded upside and are convex. And we can get into what that means. But you can't do that just simply without an Oracle. You need either full collateralization, which is very inefficient, or you require an Oracle in order to do that. Turns out actually that things that don't require Oracles, and this is maybe the big thesis or idea of a lot of this work turns out to be quite broad.
00:10:43.734 - 00:11:39.260, Speaker D: So you can do short of that almost anything. For instance, you clip the payoff at some upper bound, you'll be able to do that without an Oracle and maybe even taking a step back. Why is this a useful exercise to begin with? That is that Oracles are perhaps the main source of both financial and technical complexity in DeFi and turns out that they expand the surface of vulnerabilities quite significantly for on chain financial contracts. So if you look a lot of the exploits that have happened and Guillermo has a recent thread on this, a lot of them are related Oracles. And so it's in fact a useful exercise not just theoretically, which is our primary motivation, to be candid, but also practically in terms of how do we design systems. The exercise of how do we minimize use of Oracles and how much damage can we do without them is, I think, to us something practitioners in DeFi and beyond should be asking.
00:11:39.630 - 00:11:50.990, Speaker A: When you mentioned that the fact that there's an Oracle could lead to exploits, is it mostly like arbitrage opportunities or when you say exploit here, I want to understand a little bit more what you mean.
00:11:51.140 - 00:13:01.186, Speaker B: I mean, there's a bunch of different types of ways that this can happen. I think the simplest ones are where you have another product that does a non reversible transaction. So when I say a non reversible transaction, I mean something like a liquidation, where once the transaction is through, there's not really a way to put back that capital indirectly. Right? So a trade in an AMM, if you're willing to take the fee, is reversible in that I can trade back and forth and get it back to the same initial price. But there are a whole notion of transactions that are irreversible in finance. And that's usually when it's something like a liquidation or some type of settlement, final settlement, and whenever those occur, and those are dependent on an oracle price, on some notion of price of the asset such that it triggers, such an event, then it can at times become much more valuable to manipulate the price calculation rather than try to enter into that financial product. And so manipulating the price calculation can either be done by manipulating the Oracle directly or manipulating sort of the inputs to the Oracle.
00:13:01.186 - 00:14:19.434, Speaker B: So the recent cream attack and the almost ave attack are effectively Oracle manipulation attacks, where in a flash loan you manipulate an Oracle, cause a liquidation, and then sort of take the other side with that indirectly. I mean, it's a lot more complicated for those assets, but the assets that were used in both of those. But Oracles are certainly a source of vulnerabilities. And I think one of the reasons unisop stood out to us in 2019 was really this fact that somehow, in spite of there being no Oracle, it was able to effectively induce market participants to make it a good Oracle where there's enough arbitraries trading against it that the cost of manipulation is extremely expensive. Whereas protocols that try to be explicit Oracles like Uma, none of them had a couple other properties. One is they had to artificially create this notion of the cost of corruptibility was expensive, right? You either do it by having a token forcing people to stake, but you don't really give them financial upside in an asset they might already value, like ETH, whereas in uniswap people were earning ETH and stablecoins. And that was like one big difference between that and sort of the other Oracle systems.
00:14:19.434 - 00:15:19.298, Speaker B: The other thing is that other Oracle systems act more like legal courts than they do like blockchains because they rely on all sorts of challenge games. And you could view the Uma Oracle as not that different than an optimistic roll up in some ways. And I don't mean that necessarily positively. In Ethereum, like in other blockchains, it's actually great for a bunch of reasons, but in Ethereum the way that doing these kind of post event resolutions is just extremely, extremely annoying. And I think in other blockchains some of the more complicated designs are actually going to be more user friendly because I think people just don't like having this. When people submit a transaction to Ethereum, they want to say, okay, I submit it, it's confirmed, I never have to think about it again. Right? The problem with Oracles that have sort of post trade settlement is that you submit the transaction, you see it got confirmed in the block, but then you also have to keep watching the blockchain for another ten blocks before you decide, okay, it's actually in.
00:15:19.298 - 00:15:33.686, Speaker B: And for better or worse, this is an industry of degen, so it's not like they're actually really going to want to do that. Right? This is no knock against the Uma design, I think it's just that it doesn't work as well on Ethereum. I think it's actually not a bad design somewhere else.
00:15:33.868 - 00:16:32.966, Speaker D: It turns out that our work explains in some ways where that design is or some version of that design is necessary. And then it turns out that these problems can't be avoided for certain financial applications. It's just that some applications, in fact very many applications, don't need that sort of complexity at all. So one way to think about it, just to make it really clear, is the types of guarantees that you have in Oracle dependent systems are of the form either property X holds. In other words, I don't get liquidated unless the price falls below a certain amount or the Oracle has failed, which in the case of Uma, falls down to the cost of corruption versus the profit from corruption and some equation holding between those two. And that requires that sort of security assumption to hold in order for your property whatever desirable property your system to hold. And in the work on Cfmms as well as related systems, the assumption is either property X holds.
00:16:32.966 - 00:17:07.318, Speaker D: In other words, in this state of the world, this user gets the same payoff as this option or some other property holds, such as the portfolio's 50 50 balance between two assets or whatever else, or somebody has a very significant arbitrage opportunity that they've left on the table and haven't exploited, which is a much stronger assumption to make, right? Which is there's free money somewhere and somebody's going to pick it up. And if they haven't, then I can't make any guarantees about my system. But if they have, here's what I can say about what the user will get or whatever other property I'm interested in.
00:17:07.404 - 00:17:30.202, Speaker C: Yeah, maybe. The Tweet long summary goes something like cfmms, in our admittedly biased opinion, are a particularly natural way of thinking of financial instruments or replicating financial instruments on the blockchain. Without Oracles, they might not be the space of all things, but they are a very surprisingly large section of it, right?
00:17:30.256 - 00:17:45.786, Speaker B: Not zero. I think like the SBFs and people like that who ran exchanges, centralized exchanges, one of the reasons they couldn't kind of believe this was true is everyone thought the space of such things was zero. Like it was empty, like there were no such applications.
00:17:45.818 - 00:17:46.218, Speaker D: Right.
00:17:46.324 - 00:18:02.738, Speaker B: Unisop was the first thing that proved that, hey, the set's not empty. But then, since then, basically, you could think of what we're doing as trying to find the largest surface convex hollow in some bad joke manner of the set of all of these mechanisms.
00:18:02.914 - 00:18:12.620, Speaker A: What I still want to understand though is who is this research for? Are protocols asking you like, hey, can you look at my CfMM, can you look at my model?
00:18:13.310 - 00:19:21.146, Speaker B: It started more out of pure intellectual curiosity also, I guess my company was certainly like, we use these types of things within how we simulate stuff, but it also started from like, hey, there's actually something bigger here. And over time, the more we started writing these papers, the more random people on the internet would message and be like, hey, I'm building this thing based on your paper. Or like, hey, I'm going to do this other thing based on your paper. And over time it became much more clear that by going this route, we were sort of actually opening up the space for other people who maybe were not so mathematically sophisticated, but were your usual D Five developer, like, 19 year old, lives in Asia somewhere kid. And this was kind of a way for them to kind of find new things to do. And then when mev happened, it became much more clear why people really liked our papers, because no one else knew how to write the formula for what the optimal Arbitrage was. And so the flashbots discord is filled with lots of random anons pasting our papers back and forth.
00:19:21.338 - 00:19:59.050, Speaker A: This actually speaks to something. This is this idea. And I think we're starting to notice this more and more where researchers, academics or not, are putting research out into the world. And sometimes there's like these groups that are forming around this research and those are becoming in a way the next generation of projects. It's very much not the way I've understood this kind of progress in the past, like working more inside, potentially in labs or what have you. Still kind of keeping it a little bit to yourself until it's ready. Here, it's like as it's being built, there's teams forming around some of these ideas, I think Flashbots as an example.
00:19:59.050 - 00:20:20.690, Speaker A: We had them on the show a while back and I just think the idea of forming this research group just around open public research it's so organic and I think it's really powerful. It's not something you guys could push though can you? You can't predict or have you been able to find teams to build out any of these ideas or test them out?
00:20:20.840 - 00:21:19.358, Speaker B: Yes, the answer to that is definitely okay, you have I think the bigger thing is it wasn't clear when we started this that that would be the direction things would go. I think when we started it, it was all of us were just like how does this make sense? But also there should be some there was just this inkling or feeling that, hey, look, in the 1970s, sort of when options pricing theory first was developed, the options market was basically nonexistent. It only existed in legal contracts. And people were basically like when they had options, they were like employee stock options or warrants. They were not like traded options on equities. But the idea that there existed a model to price things is actually what caused plus electronic markets is what really caused the options market to boom. Once people had sort of a lingua FRACA to use for deciding what it meant to hold x amount of risk people were able to use these as risk more.
00:21:19.358 - 00:21:52.254, Speaker B: Of course things blow up model doesn't work all the time. Yada yada yada, whatever. Those are the devils left to the user. But the point is that there clearly was some new theory here and we were just more convinced that it was like this intellectually curious thing. And all the people in cryptocurrency land are really always focused on these distributed systems or cryptography guarantees, but they kind of always leave it as a, quote, exercise to the reader all of the economic or crypto economic things. I mean, just look at the chainlink paper, for instance. Right.
00:21:52.254 - 00:22:22.906, Speaker B: It doesn't really specify what the true economics are not knocked to them, but they probably still figure that out soon. But I think that the main point is that there is clearly some new type of way of thinking about quant finance here. That due to the idea that settlement is sort of instant, amongst other things. And I think that was where it started, was that kind of curiosity, which probably was true for a lot of people in the bear market who were looking at the stuff because there were only ten of us.
00:22:23.008 - 00:22:25.866, Speaker C: Yeah, we all know each other now.
00:22:25.968 - 00:22:26.282, Speaker A: True.
00:22:26.336 - 00:22:32.650, Speaker C: And we all DM each other constantly and try to nerd snipe each other. So at this point, it's like a weird click of random people.
00:22:32.800 - 00:22:42.478, Speaker A: Okay, but tell me more about the builders that you are finding. Are you actually sourcing these things? Are you saying, like, I just published this paper. We need a like, how do you even do that?
00:22:42.564 - 00:22:44.260, Speaker D: So people come out of the.
00:22:46.710 - 00:22:47.122, Speaker A: Like.
00:22:47.176 - 00:23:54.040, Speaker D: On Twitter and so forth, and we won't know their names very often, and you'll find that people can go very deep and understand very concretely how things work. Sometimes not so much, to be candid, but very often these ideas are mostly theoretical. You see, the papers are mostly what Guillermo's PhD advisor, who I recently met, calls street fighting mathematics of just essentially little cute things that we do. And here's this thing, like it or not, here's how it works. And there's a lot of work that needs to go to take that from a theoretical idea to actual code and something that's implementable in practice. And so these people will ask all the right questions about how this thing will work and all that. One team, for instance, that's working on the replicating market makers paper which Guillermo, in very high level terms rehearsed earlier, essentially went through that exercise and are currently going through that exercise of taking sort of a fairly abstract academic idea and turning it into an implementable project that users can actually interact with and get the types of guarantees that, at least in theory, are possible.
00:23:54.040 - 00:24:25.410, Speaker D: And that obviously requires a lot of engineering work, it requires a lot of security work, and maybe some of the mathematical properties help you there. But of course, what they look like in the scary, horrible, twisted world of the EVM and solidity is very different. And so we don't claim credit. These are these teams work, and we've been helpful to the extent that we can. But of course, these are brilliant engineers, developers and so forth that are really sort of pulling the weight here, to be fair.
00:24:25.480 - 00:25:48.774, Speaker B: Also, this is also true with ZKPs and consensus protocols, right, where the original paper is a very far cry away from what the actual implemented thing looks like, right? But it gives you sort of a North Star, but it's a very lossy North Star. And as you try to chase this rainbow metaphorically, well, that was a bad metaphor, but as you try to kind of follow this guide, you realize, hey, I'm getting finer and finer resolution, and like, oh, I missed this thing, or, I missed this other thing. I missed this other thing. And you kind of only learn that stuff from actually trying to build these things or write code that does what they're supposed to do. And I think that's sort of the next step from this type of stuff. But it's almost the same in my mind as the people who are writing the early ZKP papers where it was more this curiosity as to can you actually get succinctness, can you actually get non interactivity? Can you actually get these random polynomials to not be in a field whose order is more than the number of particles in the universe? Dot, dot, dot, dot, dot, right? And these things always start with the kernel of that. All of the AI and machine learning stuff people do started with this kernel of like actually, I believe, just throw more hardware and increase the size of this stuff and don't care about proving the formal math.
00:25:48.774 - 00:25:54.350, Speaker B: I'm much to Guillermo Chagrin because he's around more of the shills in Stanford, unfortunately.
00:25:54.930 - 00:26:20.840, Speaker A: It's interesting because it's almost like I mean, especially looking back at some of that early work, it does sometimes feel like through the curiosity, solutions are offered but the problems haven't been defined. Can you can kind of figure out what is the problem we're trying to solve with this? But it's like there's so many interesting properties in this solution that you're looking to see if it fits other problems afterwards. I don't know if it's like that at all in the work you're doing.
00:26:21.290 - 00:27:13.846, Speaker B: I think for DeFi it's a lot. One thing I would say is different is a lot of times our papers are fast follow to like hey, someone did something in practice that they have no justification for and there's no reason it should work. But we kind of started trying to write out the math and then all of a sudden it's like, okay, there's clearly some reason it should work and here's the reason. It resembles more of the relationship between physics and math, right, where physics finds something that completely is non sequitur to a mathematician and then mathematicians spend 50 years and try to create the theory for it, try to create the oh, we have to invent some new type of math to do it here. It's much more pedestrian. It's more like there's got to be something that's working. The space of things that it could be is quite small because blockchains kind of restrict the actual execution and state and everything of the system.
00:27:13.846 - 00:27:37.278, Speaker B: There's only certain types of users, et cetera. But I think some of our papers are predictive. Some are sort of retrospective. But in some ways I think one thing that's been very clear is that people who are like economists and applied math people and people from machine learning, people who kind of hate crypto, normally they read our papers and like them because they write them in a language that they understand.
00:27:37.444 - 00:28:04.854, Speaker D: That's an optimistic version of it. There's also another type of paper which is perhaps our most popular, certainly to that group, also typically our most simple, which is just us being the really annoying, stupid people at the back of a room and somebody coming to us. With a solution. Or the most recent example is this paper we wrote on liveness failures on blockchain. So actually our most qualitative paper are the ones we've written and it came.
00:28:04.892 - 00:28:08.854, Speaker B: Out of it's really slightly better than a blog post.
00:28:09.052 - 00:28:11.414, Speaker D: Yeah, I think that's one way to say it.
00:28:11.532 - 00:28:19.738, Speaker C: I think that the technical term is called an academic shit post, is what I believe is the actual technical term. It's written in tech, but that's about all you can say.
00:28:19.824 - 00:29:44.134, Speaker D: Okay, but essentially the premise of that, and maybe this is a good segue into that work here briefly, so we can touch on it, is we're just getting a lot of DMs and talking to really smart people that are building things, let's say on non e chains that are a little faster and cheaper to build on. And very often we'll hear this pitch of like, hey, here's this thing that works on Ethereum, call it a lending protocol, call it an options protocol, and we'll just rip out the CfMM and add an order book and we're going to have a much better system in so doing. And so this paper is saying more like, whoa, not so fast. Not saying that that's a bad idea, but here are some trade offs potentially to consider. And in particular, one of the things we point out is sometimes we have liveness failures on blockchains and that was no more acute than in Solana. And so this kind of leads into Tarun's point of we just notice an event and we're like, well, what happened here? What are some underlying dynamics to consider? And in this case we noticed that in order to align the prices of Cfmms with an external market after a liveness failure, you only need to do one really big transaction. And computationally that one transaction is just as complex and expensive as a smaller transaction, as opposed to on an order book where if the price moves against you in a really big way, or in uniswap V three, the price moves against you in a big way.
00:29:44.134 - 00:30:34.690, Speaker D: You have to cross multiple ticks and that's much more expensive to execute or you need to clear significantly more orders in order to walk the book to the new price. And so once the blockchain regains liveness, that requires users to submit much more expensive transactions at a period where everybody's rushing for instance, to clear their liquidations, to execute certain transactions for safekeeping. And that creates an environment where you're much more vulnerable, for instance, to very significant price moves that negatively affect your returns as a liquidity provider to these AMMS. So certainly we like the capital efficiency and we like the flexibility of these types of designs and are excited to see them proliferate in places where transaction costs are cheaper. But fundamentally what we're saying in this paper is that there are trade offs to that and those trade offs need to be considered in the design of these protocols.
00:30:34.850 - 00:31:04.350, Speaker A: Interesting. And that paper you're talking about, it's like Liveness on Solana. You're looking at what is the effect of Liveness where I guess if Liveness goes down, is that what you say? If Liveness disappears, what happens to these? I guess you're looking at the two different systems, right? Like order book and CfMM and comparing yes, effectively. To me, it's kind of like an awesome case study you got to examine. Or could you have predicted or did you need this to happen to say, like, oh, this is going to happen?
00:31:04.420 - 00:31:47.646, Speaker B: Let's put this way. All the math in the paper, for the most part, I mean, minus a couple of little technical nuances, was already stuff we'd written a long time ago. In fact, we have this one paper that basically is like the God paper and has all of this stuff, but I feel like no one has actually ever read it because everyone who keeps on giving. Yeah, I feel like every single thing I work on now, just like somehow I'm referencing that paper all the time, but basically it became sort of clear that it's not like the math was new as much as it was like, what's the actual story for what this thing that happened was? Using the existing framework, the stories are.
00:31:47.668 - 00:32:02.434, Speaker D: Typically ones Tarun uncovers, which is also descriptive of his role. We jokingly call him our Pi, and sometimes the math will all be there, but there's no story around it. And Rune is our fearless leader in that regard.
00:32:02.632 - 00:32:12.162, Speaker C: Yeah. And we're like, Tarun, please fill in Tarun autocomplete whatever the GitHub code AI thing is. That's Tarun for us, in stories, you just like, Copilot.
00:32:12.306 - 00:32:13.074, Speaker B: Copilot.
00:32:13.122 - 00:32:32.970, Speaker C: Yeah, there we go. It's the copilot. So we have a Tarun Copilot AI, where here we message a telegram group, and then Tarun goes and fills in all of these nice little gaps and being like, oh, this beautiful story about how it all works. It's like, oh, my God, you're totally right. I almost convinced myself that it's exactly what the paper was about. At the end of the day.
00:32:33.040 - 00:32:38.480, Speaker A: Can you share some other examples of that? What other kind of storytelling type papers have you done?
00:32:39.010 - 00:32:49.986, Speaker C: Like Zurin said, there's the God Paper. Or as I like to call it, the Gold Mine. Or the Gift that keeps on giving. And it's this weird paper that she has, a hilarious title. It's kind of silly, but it's called when does the tail wag the dog?
00:32:50.088 - 00:32:50.786, Speaker A: Okay.
00:32:50.968 - 00:33:21.550, Speaker C: And I think it's called Curvature and Market Making is the Subtitle, or something like that. That was the first the OG storytelling paper. It's like we realized that at a certain point. What became the most liquid exchange for a bunch of random tokens, it wasn't Coinbase. It certainly wasn't FTX. No, it was like uniswap V two. And so Turin and Alex had been talking about this, and it was this at the beginning, it was a little bit of a complicated story because we were like, oh, we have all these things that we want to show and all this.
00:33:21.550 - 00:33:55.446, Speaker C: What's the largest trade you can make in order to incur? After which LPs start losing money, right? And things like that. These kind of like things that we all knew and wanted, or at least had some idea that if you make if a trader trades really large trades against you, you kind of end up losing money and all of these things. So that was the original storytelling paper where I think the original paper started at. What did it start at, guys? Do you remember? It was like eight pages or ten pages. And then I think, if I recall correctly, the last posting on Archive was about 45.
00:33:55.548 - 00:33:57.782, Speaker A: Whoa, big story.
00:33:57.916 - 00:34:45.000, Speaker C: Yeah, truly big story. But it's kind of fun because it turns out that paper predicted a bunch of weird results that we ended up writing. But that was the original one where we tell a story about, oh, look, why do you need yield farm? Why did yield farming become so interesting and useful? And it's like, well, it's because LPs were used to kind of losing money if they weren't careful about things exploding. But it's like yield farming kind of helps you out with that. And so it has this effect, it has all of these qualitative, but mathematical you can write them down effects downstream for LPs and for traders and so on and so forth. And it was kind of the paper that outlined, using very basic math, exactly how these things came into play. And then it told you things like, okay, how much do you have to incentivize a pool in order to keep LPs happy? And all of these things.
00:34:45.000 - 00:34:49.798, Speaker C: But that was the OG story paper, I think, and it's still the gift that keeps on giving.
00:34:49.884 - 00:35:45.894, Speaker B: I think the meta narrative is like, when we started, it was like, okay, everything was on centralized exchanges, but there was this kind of niche thing that was somehow growing. And the initial idea was like, okay, well, clearly the centralized exchanges are way better for the user, so these secondary exchanges must be for people who really need them. And so most of the arbitrage must be coming from people who see the price on centralized exchange being different than the price on the DeFi exchange. And the centralized exchange is almost as if it's like an oracle. It's like the perfect price, but the DeFi exchange is this kind of like shitty price, but people who have no other way of getting the asset have to go there. And so we started with this model of, oh, like, how do these things work? Assuming there exists some sort of infinitely liquid external market. And then as the market progressed, it just became more and more natural to say, hey, look, wait, these markets are growing faster than Coinbase and FTX.
00:35:45.894 - 00:36:02.606, Speaker B: Like coinbase and FTX. Their volumes are flatlining and uniswaps and sushi swaps and stuff are mooning. There must now be some other market structure thing that happened. And our initial paper kind of doesn't capture that, right? It only captures the case when it's sort of the secondary or shittier market.
00:36:02.708 - 00:36:03.214, Speaker A: Okay?
00:36:03.332 - 00:36:40.490, Speaker B: But when it's the main one, then there's this kind of this question of like oh, well, what happens when these DeFi things are actually dominating the centralized thing? And that's a very different question and you have to come up with a new way of framing it. But the math is not very hard. In fact, Guillermo usually just yells at Alex and I anytime we try to do any math that undergrad first year barely can take a derivative type of student could use, which is like a sort of philosophy of his advisor of like keep it simple, extremely simple, stupid any of the more complicated math.
00:36:41.090 - 00:37:48.942, Speaker D: He's seen some things, to be fair to him. Seven pages of differential equations that I sent him and I got a virtual slap in the face and grabbed me by the shoulders and shook me. And we do for the listeners spam Guillermo enough to the point where he's become quite annoyed, I think, of these types of but it is a typical approach, right? Like, we'll see something like what Tarun is describing, which is, look, it looks like these Cfmms are willing the centralized exchanges to obey their price as opposed to the other way around. Or we're seeing all these people design these private in air quote Cfmms. Do they work or do they not? And very often the first order approximation is just brute forcing an answer to the question that this type of phenomenon poses. And it is typically very ugly. And I think the approach that hopefully works over the long term is to simplify it as much as possible to the point where it's accessible to a wider audience.
00:37:48.942 - 00:37:53.054, Speaker D: And Guillermo in our group is kind of tasked with doing that, as annoying.
00:37:53.102 - 00:38:50.706, Speaker B: As it is, to be fair. I think that is sort of the part of the reason that I think people from other disciplines are able to read this stuff. I think one of the problems I oftentimes had when I was an outside person and was reading cryptography research like bodezero knowledge proof stuff and proof of stake stuff is it's almost written in a purposely, like fuck you, reader, you're too dumb nave. The way these papers are written is obscuring. Oftentimes I feel like is overcomplicated to obscure that it's actually a simple result totally. Or like extremely long something that in math would be like a one line to express. Someone wants to write it as an algorithm and now you have to do the reverse engineering as the reader to try to understand oh, they really just meant use this concentration inequality instead of run this algorithm with randomly on random input.
00:38:50.706 - 00:39:02.780, Speaker B: So somehow I think coming from outside of this space also for all three of us, made us not necessarily like the writing style often found.
00:39:03.630 - 00:39:22.720, Speaker A: I want to ask a little bit more about this storytelling, though. The mev paper that you you there you're kind of going outside of some of I mean, I think you're going a little bit outside of the CfMM, maybe not actually, but is that a storytelling one, or is that prescriptive? And maybe you can talk a little bit about that.
00:39:23.170 - 00:40:27.326, Speaker C: Yeah, so the mev paper essentially let's talk about the mev paper. So the mev paper essentially says, like, look, miners get a bunch of bundles, which the bundles themselves or something tell you something like, look, I want my transaction placed before and after another transaction, like some whale trade on uniswap. So it's called a sandwich, or I want my transaction placed right before it or whatever. And the question, of course, that miners have is, okay, I have this huge thing of this number of bundles. How do I optimally accept bundles such that, A, they don't interfere with each other? Because that's kind of silly, and B very importantly, is how to do that in order to maximize my profit. So right now, people, we're coming up with all kinds of complicated heuristics and all this kind of stuff. It turns out there's a very, very simple kind of framework to think about these problems called mixed integer, I guess linear programming in this case, where essentially you have a bunch of constraints, and you say, okay, subject to these constraints, which is you can't have a sandwich transaction and also something coming after it that requires it be immediately after transaction.
00:40:27.326 - 00:41:19.942, Speaker C: Essentially, you can't have these bundles interacting too much and B, that the bundles are actually fit in the places that they're supposed to be placed. So those are your constraints. Then you want to maximize what? Well, you want to maximize your total profit from including these bundles as a minor. But this kind know, maybe stepping back from that, that's what one might call a somewhat storytelling paper in the sense of, know, all of this is a note, and it's five pages long, and it's really not that complicated. So why are we making it that complicated but kind of stepping back from that? This is what Alex and I guess my advisor Stephen Boyd calls street fighting mathematics. It's this notion that at the end of the day, all of these problems are actually fairly straightforward. Look, it does take a lot of thought to get them down to this very simple looking shape, and in fact, we've gotten knocked for it a few times by reviewers, which I continue to completely ignore and just continue with my stuff.
00:41:19.942 - 00:42:24.266, Speaker C: But the point is, there's a set of pretty common mathematics that doesn't require that much, sophistication and you have these problems that look very complicated at the surface, and they kind of are complicated if you think of all the details and everything at the same time. But the point of math and computer science and all this stuff is abstracting, a very, very clean, simple solution from these problems. And sure, it requires a little bit of math, but at the end of the day, it's all actually shockingly simple. And so our rabbit hole has been CfMM, simply because it's kind of been an interesting thing of ours. But I guess maybe probably by the end of the year, you'll probably be stepping back and leaving people with a set of open questions and kind of moving on to these more adjacent fields. Because Cfmms sure find they're interesting and they're great and they're like, whatever, we've done all this research about them, but at the end of the day, they're yet another tool in the toolbox to do things that we want to do. And that's kind of the purpose of our research is not so much the point of here are Cfmms, here is all the cool things about them.
00:42:24.266 - 00:42:42.270, Speaker C: Like, yeah, that's fine and that's a great consequence, but it's not the point, right? The point is to do useful things. And that happened to be a useful case. It's now kind of, I think, personally reaching the end of its life in terms of truly novel, interesting solutions. But there are many, many more fields like it.
00:42:42.340 - 00:43:09.946, Speaker A: Yeah, I mean, actually, you were on the show previously to look like we were talking mostly about private AMMS and are they possible and what are techniques to do that? Are you also looking though, at these intersections? So you're saying like, oh, there's these other problem spaces. Mev is a very well known one. But are you ever thinking about what do they actually do to each other? I mean, privacy and AMMS, there you see, it like that was part of the work. But yeah. Are you also doing that with mev or maybe some other things.
00:43:10.048 - 00:43:51.974, Speaker B: One thing to say about the liveness paper and the differential privacy paper basically show that in order to get certain properties or avoid certain bad scenarios, you actually do have to reason about how the consensus protocol interacts with the application. So in the liveness case, it really boils down to like your choice of mechanism for liquidity provision is actually implicitly reliant on some sort of bound on the maximum time the network goes down and the maximum price deviation. You might not think about that when you're designing the application. You're just like, I'm writing an order book. How do I have a FIFO queue? How do I do this type of order? How do I do an iceberg order?
00:43:52.012 - 00:43:54.662, Speaker A: Because you're not expecting the network to go down, I guess.
00:43:54.716 - 00:44:35.058, Speaker B: Exactly right. Or in the privacy case you're like, oh great, I'm going to hide the balances. I'm going to hide the balances so no one can figure everything out. And then you're not thinking of the threat model of, well, okay, what if the person who's actually trying to de anonymize you is also a validator, also a minor, right? And in some sense, a lot of our more recent work. I think personally, the paper I'm most proud of from our thing is definitely the differential privacy thing. But that's just my because it kind of exemplifies this fact that you can't really design these things without thinking about consensus at some point. There are just certain properties that will eventually be that.
00:44:35.058 - 00:44:53.020, Speaker B: And for uniswap, it did get kind of lucky that it took so long for mev to happen, right? Like, if there was so much mev at the beginning when uniswap started, I think it would have actually been much harder to bootstrap or people to understand how to use the mechanism without getting blown out of the water.
00:44:54.110 - 00:45:22.750, Speaker A: One thing maybe to note, though, the paper you just referenced, the differential privacy is not the work we talked about with Guillermo. So there was an evolution, right? Like, or was the first one that you did much more like, here's why people's approaches are wrong. So a bit of story, and here's a few ideas. Maybe you can talk a little bit about that journey and that evolution of your thinking into this, I guess, more specked out solution of differential privacy.
00:45:22.830 - 00:46:10.254, Speaker C: Yeah, it was kind of a one two punch, and it was actually not intentionally a one two punch. But the point was, the original paper that we talked about, I think March of this year essentially said, look, here's the deal. You can't just willynilly hide things from the user and from anyone snooping around and then expect that, in fact, that actually confers you privacy when you're interacting with a CfMM. It was kind of a simple result. It was pretty short, this notion that a lot of people had intuitively, but it speced out exactly how the attack would play out. And then we just kind of gave a few simple paragraphs stating, look, here are some cases where the proof fails. One is, okay, if you batch a bunch of transactions together, then people can't tell them apart.
00:46:10.254 - 00:46:58.866, Speaker C: Then congratulations, that's one. Number two is if you add kind of noise to the prize. So if you present the user with a price that isn't actually exactly quite the price of the CfMM, then it's a little harder for them to reconstruct up to a certain degree. The more noise, of course, the worse it could be for LPs or the user, but the harder it is for them to infer the underlying prices, and therefore the harder it is for them to infer what trades have happened. And so that was the first one, and it kind of said, look, the approaches here, it's not obvious, right? The problem isn't an obvious one. It isn't just simply add a ZKP to uniswap and be done with it, and then we were left with this horrible, sick and twisted itch of being like, okay, this is great. We've just told you that you can't do this, but can you actually do this in some way that makes sense?
00:46:58.968 - 00:46:59.234, Speaker A: Yeah.
00:46:59.272 - 00:46:59.474, Speaker B: Right.
00:46:59.512 - 00:47:04.194, Speaker C: And this is Tarun's answer was a differential privacy paper.
00:47:04.392 - 00:48:07.846, Speaker B: Yeah. So around the time that we wrote this paper, actually, Anna and I were both in Austin at that time during the snowstorm. Yeah, this was right after the snowstorm, actually, and we put out that paper and I had basically, by happenstance, kind of been like a little annoyed that we didn't find some simple trick like a Buzfeed article way of getting around the Impossibility theorem. Like one easy trick that makes this wrong. But I happened to run into this paper by Pure Happenstance by Nika Huglatub and Roughgarden and someone else that kind of introduced me to this whole new world of things that people were working on in terms of privacy versus utility trade offs. So there's kind of this idea for any learning algorithm and so we can make the uniswap you could think of the uniswap price algorithm as a learning algorithm. It's learning in a very dumb sense.
00:48:07.846 - 00:49:08.860, Speaker B: It's not like a very sophisticated learning algorithm, but it is something that's sort of like learning how to update the price as a function of the reserves. There's this kind of natural trade off in machine learning that people in cryptography, in cryptocurrency don't think of a lot, which is this utility versus privacy trade off. If I add in a bunch of noise to blind your data, will I also make any function of your data worse? So, like, if I randomize your height, well, maybe I preserve the mean height over everyone, but I kind of mess up the variance of the height or I mess up other statistics of the height if I had like a table of people's heights. And in some sense there's always this trade off you effectively can't get out of it. And going down that line of research just kind of led me through how people in sort of machine learning think about this stuff, which then I found over time, over many months of agony, a way to adapt it to this.
00:49:09.310 - 00:49:17.600, Speaker A: Interesting. Just just one side question. Why in machine learning do you use these? Like, what are they for? Exactly?
00:49:17.970 - 00:49:59.798, Speaker B: So the best example is the US census. So the US census collects a lot of data, right? And there's tons of sociology researchers and people who do that type of stuff historically have relied on the census for data. But then people have shown these kind of attacks where people can de anonymize people's individual census items based on the average that is produced. So let's say someone gives you the average of the height of a certain area, and it happened to be an area where someone lived that was 7ft foot tall, you could effectively infer if their data was in the data set. Or so in some sense, the exceptions.
00:49:59.894 - 00:50:01.434, Speaker A: The unusual ones, yes.
00:50:01.472 - 00:50:36.726, Speaker B: And those are the people who oftentimes value their privacy the most. So there's kind of this weird thing where that happened. Then the US. Census was like, okay, we're going to use these privacy techniques. And now sociologists are a little pissed because they didn't know how to be fair, all they learned how to do is import our library, call our library on census data. I don't think they really checked carefully the math they were doing and how sensitive it was to noise. But the point is, there's a lot of times where someone can take a data set and augment it with external data, a data set that's anonymized and then deanonymize it.
00:50:36.726 - 00:50:59.130, Speaker B: So there's this famous example in New York where Uber had to provide New York City with all the Uber trips, but they were anonymized. And then someone found another data set related to Uber coupons or something. And then they joined it, and they were able to de anonymize because the one was de anonymized. One was anonymized.
00:50:59.290 - 00:50:59.614, Speaker A: Wow.
00:50:59.652 - 00:51:14.226, Speaker B: And so then they found all these and this actually, I forget if it was the Elliot Spitzer thing or if it was like some other sex scandal, but they did find this politician who was constantly going this one strip club. And that was like a big the.
00:51:14.248 - 00:52:05.602, Speaker C: Other famous example, which is actually really it's kind of what started kind of kicked off this whole field was Netflix in 2008 had a very famous Kaggle challenge. They had a very famous challenge was, can you predict what movies people are going to like given their previous ratings or something like that? And this data set was completely public, right? And it was a big data set. And some researchers went through, and essentially what they did was they just using mind you, this is ridiculous, right? Like, just using people's preferences for movies, they were able to de anonymize. I can't remember the exact number, but it's like either a quarter or a half or something. Of all people watching, this is, again, mind You, Netflix movies in eight, right? Like, think about that. They were able to de anonymize something like half of the or a quarter of the data set just from their movie preferences and combining it with some other data set.
00:52:05.736 - 00:52:06.660, Speaker A: That's crazy.
00:52:07.350 - 00:52:15.618, Speaker C: We joke that it's some esoteric mathematical thing, but at the end of the day, actually, it turns out to be hilariously simple, and you can run it on a laptop and do some real damage.
00:52:15.714 - 00:52:28.842, Speaker A: But where the differential privacy? Where was that first thought of or implemented within a machine learning context, if you like? Was it that census one? I mean, I think you've given great.
00:52:28.896 - 00:52:58.100, Speaker B: Examples of Apple because they were like the biggest proponent. So in iPhones, a lot of the data you send to Apple servers is encoded in a differentially private manner. I don't know about which things are and aren't. I haven't actually read their docs carefully enough, but they were the first big tech company to invest a lot into it. Their whole claims of being really good about privacy are about this. But of course, they have other things that are not so good. So let's not try to make Lionize anyone.
00:52:58.100 - 00:53:17.546, Speaker B: But the point is that basically when things started moving to the cloud in 2006, I think Apple was the first one to be like, no, we're only putting stuff on AWS servers if it's differentially private, because fuck AWS. It actually, ironically, wasn't about protecting a user. It was about protecting someone else from taking the data of your user and.
00:53:17.568 - 00:53:20.662, Speaker A: That wasn't you and using it for their purposes.
00:53:20.726 - 00:53:50.440, Speaker B: Wow. But the idea here is that this utility versus privacy tradeoff is like, say I have a machine learning algorithm that takes your ratings, right? Like what Guillermo said. And it can perfectly predict your ratings, but it leaks information about you versus something where I add noise and now I ruin the prediction quality. Its prediction goes from being perfect to, like, 75% accurate, but your privacy has gone up. Right. So that's the thing you should be thinking in your head. That's why the Netflix example might be the cleanest one.
00:53:51.450 - 00:53:57.410, Speaker A: Now, let's hear then how is differential privacy actually used in our context?
00:53:57.570 - 00:54:22.250, Speaker B: So imagine you have someone who has a machine learning algorithm where they can try to predict where the whale order is. So let's say there's like a thousand trades of size. One. So it's like one guiller coin for one Alex coin. And then there's the whale, guillermo who's ah. I want to ape into thousand. I'm gonna trade a thousand guiller coins for sorry, Alex.
00:54:22.410 - 00:54:23.586, Speaker C: I'd ape into Alex, too.
00:54:23.608 - 00:54:24.206, Speaker B: Don't worry.
00:54:24.318 - 00:54:26.094, Speaker C: Trust me, much more valuable.
00:54:26.142 - 00:55:04.286, Speaker B: That sounded a lot worse once I said it. The idea is the people who have this very small trade size, the one coin size, they all want to actually be in front of the person who is the 1000 trade size, because once the person who trades the size of 1000 trades, they will push the price up a lot. Right. And all the people who are like, the small fries will get kind of way worse price impact. But from the whale's perspective, you actually are like, hey, I just want to be fairly priced. I don't care where I get put. I just want it to be fair.
00:55:04.286 - 00:55:19.138, Speaker B: Right. And so the whale is the one who's trading their privacy in some ways because they just stick out like a sore thumb. Their trade size is way bigger than everyone else's. So statistically, people can try to say, like, oh, I know this is a whale's order. I'm going to front run them.
00:55:19.224 - 00:55:24.974, Speaker A: And this is the exception we were talking about before. I guess this is the exceptional result. That's very visible.
00:55:25.102 - 00:56:19.366, Speaker B: Right? And in. Trading that's much more common, right? Like, when there's a liquidation, there's just like a million mev bots and searchers trying to chase it, right? And they all have small size relative to the thing that's getting liquidated. So this type of scenario is extremely common in finance, even more so than in this sociological data type of scenario. And so the idea is like privacy. Well, what does privacy mean to the whale? Well, it means that somehow they can still get the same amount of quantity, the thousand orders, but it's going to get interspersed. So imagine if now I cut up the trade of size thousand into 100 pieces of size ten, and then I randomly intersperse them amongst the other trades of size one. Do they get a better price? And how easy is it for someone to front run every single one of their size ten orders? Because I'm adding some entropy by cutting up the orders and splitting them.
00:56:19.366 - 00:56:44.986, Speaker B: That's increasing my privacy. But I'm making my price impact worse in some sense because I'm splitting up my trades, and I might have had more. It could be worse. And so that's sort of the trade off that we kind of analyze and show that if consensus can provide a source of randomness for doing this kind of chopping up and permuting action, then you can achieve kind of these types of privacy guarantees.
00:56:45.098 - 00:56:52.330, Speaker A: When you talk about cutting them up, though, are you cutting, like, would it be cut up in equal sizes, or is this also somehow, like, random?
00:56:52.410 - 00:57:29.014, Speaker B: No, that's a good point. That's a very nuanced detail that Guillermo asked me about five times when I because it was like which is, no, you actually do sample from an unknown distribution a way to cut up the randomness. Not only does it randomly cut up the pieces into different sizes, but it also does it in such a way that the distribution over how it cuts them up is not known. That's the very key, crucial part. Otherwise, if someone knows the distribution, they could simulate it and try to say, like, oh, this is the most likely cutting.
00:57:29.142 - 00:57:36.720, Speaker A: But how would you keep that private? How would that not be known when you're talking, like, open source? Isn't it kind of there?
00:57:37.330 - 00:57:57.250, Speaker B: Provided you have an input source of randomness that you trust, like a VDF or a VRF, you can sample from this distribution of how to cut things up in a differentially private manner itself, right. The root security detail will end up being like, does your VRF or VDF actually give you enough entropy?
00:57:57.410 - 00:57:58.230, Speaker A: I got it.
00:57:58.300 - 00:58:12.010, Speaker B: So that's why consensus is important to this, right? It's an application that takes advantage of the randomness guarantees of consensus. But this is another situation where the application layer has to interact with the actual blockchain.
00:58:12.430 - 00:58:24.190, Speaker A: So, I mean, the example you gave was focused on the whale and this exceptional amount. But are you actually imagining this running on all amounts, even if they aren't exceptional.
00:58:25.010 - 00:59:06.010, Speaker C: So the idea is that that would be well a there's kind of a trade off for the user, right? For the whale I keep saying exceptional, I mean outlier. Yeah, exactly right. So for most users, the trade off is the following it's zero because they're just going to trade anyways, right? The trade off is either there's kind of two, there's one at the exceptional user level and there's one at the base layer level of actually the CFM itself is going to have some sort of price impact. That's different. But at the whale level you have a slider that says how much privacy do I want versus how much do I care that this thing just gets executed and doesn't cost me personally. So there is a cost in some sense. The point that Toruno is making is that there's a cost to privacy.
00:59:06.010 - 00:59:37.858, Speaker C: It's a cost in a very literal sense of at the end of the day you're paying for that whether you want to or not, right. You can choose to not pay for it. But now you've traded off your entire privacy which could impact your actual trade. Exactly. So you either eat up the cost in the trade or you eat up the cost in privacy and take your pick. Right? There's a slider there and that's fine. But at the end of the day there's not really an obvious way of making them together and certainly there isn't one obvious and immediate extension because of the paper that we were previously talking about.
00:59:37.858 - 00:59:40.870, Speaker C: At the end of the day, you can't have your cake and eat it too.
00:59:40.940 - 00:59:58.918, Speaker A: This is interesting. So it isn't blanket differential privacy across the board, but more of an optional differential privacy. And I imagine you've explored this, but are there any other edges or leaks that could come out of this that are not covered by the differential privacy slider?
00:59:59.094 - 01:00:29.570, Speaker C: So there are some one case that we've made previously which is kind of interesting and also requires kind of control of the consensus layer, although you could implement it later, is one thing that would actually just immediately improve privacy, is just simply matching orders off chain. So you could imagine that there's a bit on a contract header that if that bit is one, what it does is it immediately starts some algorithm. So when the block is minted, part of consensus requires you match orders prior to including them in the CFM.
01:00:29.930 - 01:00:30.246, Speaker B: Right?
01:00:30.268 - 01:01:02.058, Speaker C: So the idea is like look, Alice and Bob trade in opposite directions and then there's like whale, I don't know, Willie, whatever, who trades in some other direction. The point is you match everyone's orders off, right? And then it's kind of if no one can see the amounts and privacy is preserved in some right in the CfMM itself and then Willie just uses the remaining part of whatever's left over to trade against the CfMM and of know. Here's the deal. Willie loses, right? But everyone else is pretty much safe.
01:01:02.154 - 01:01:02.718, Speaker A: Got it.
01:01:02.804 - 01:01:16.722, Speaker D: Assuming you obviously trust the aggregator. So there's some off chain operator that is collecting these trades and matching them. They offset and there's some secure way of communicating with them, which I would love to see it if somebody has it, but it does assume that.
01:01:16.856 - 01:01:29.974, Speaker C: Exactly. But at the end of the day, it's all trade offs, right? There's not an obvious, like it's not a bomb proof box, but it does seem to be at least somewhat watertight. Maybe that's the statement.
01:01:30.102 - 01:01:39.930, Speaker A: So that paper came out, I don't know, two months ago or so. Have you seen anyone try to do it or play with it, actually, like implementing it?
01:01:40.000 - 01:01:48.334, Speaker B: Osmosis, they're the ones who are going to who are actually going to Osmosis and Penumbra, they're both going to actually try to implement it.
01:01:48.452 - 01:01:49.120, Speaker A: Amazing.
01:01:49.650 - 01:02:23.238, Speaker D: I mean, just as we said earlier, these are mostly theoretical ideas and taking them to practice in particular, this one, is going to require some really talented people, I think the Osmosis and Henry at Penumbra and these folks from Brilliant. And so if somebody's going to do it, they're going to do it. But it certainly is not all there. In fact, very far from it. These are just high level ideas with horrible constants and so forth. They give you a vague idea of a set of trade offs that one should consider, but doesn't tell you what types of parameters you should select or how you should actually implement these types of systems in production.
01:02:23.334 - 01:02:33.178, Speaker A: It also sounds like in that mean, I'd be so curious to see if they know new problem spaces or maybe new solutions too, through that.
01:02:33.344 - 01:03:06.770, Speaker B: Yeah, for sure. I mean, one of the things Henry seemed most excited about this was like he was like, I don't care about the constants. Snarks still have the worst constants. If you read the papers, like a lot of the original snark papers have just horrendous hidden exponential constants. And over time, people in practice, I would say Ariel and Zach's research program, at least for me as an outsider, if I were to describe this something, it's like literally just reducing every single constant that is in all the original Snark papers to something practical.
01:03:06.930 - 01:03:09.250, Speaker A: You mean plonk? Like what they've done with plonk?
01:03:09.330 - 01:03:27.146, Speaker B: Yeah, all the entire lookup FF plunk. All these things are like, if you read them carefully, are just like, constant reduction mechanisms, which is the type of thing that you do when you're actually doing engineering and not, like, armchair math.
01:03:27.258 - 01:03:42.466, Speaker C: In some yeah, when you're what I like to call doing real people things, as opposed to, like, fictional, made up world fantasy that we do when writing papers. Like 90% I mean, 10% of it is actually useful, but at the end of the day, it's storytelling, as we like to call it.
01:03:42.568 - 01:04:03.034, Speaker A: Well, I am so excited to hear that people are now experimenting with this. It's awesome to hear this. So I think to wrap up this episode, what I would like to hear from each of you is actually a space or topic, something that you haven't yet explored, where you see your research potentially going towards. So Alex, why don't we start with you?
01:04:03.152 - 01:05:10.986, Speaker D: The honest answer here is that and you know, the answer, because we've been chatting about it, is that we've been looking a lot at Zka and we're so early in that exploration where the directions are less clear. We're really interested in ZK more generally, right? But some areas where we can be useful and our work can potentially be constructive out the gate are more in application areas, as well as some of the things Troon described in terms of acceleration of certain things and maybe some more practical examples of how these things can be used. The economics of ZK systems, there's very little work sort of know. There's now all these roll ups, there's now all these private layer ones, right? What are the different types of economic arrangements between the agents in these networks? And those are areas where we can maybe do damage out the gate, but then we're certain there's much deeper and more sophisticated problems that we'll encounter as we pursue that exploration, as there were in Cfmms and mev and Staking and lending protocols that we discovered in that work. But the realities were very early in that exploration.
01:05:11.178 - 01:05:15.934, Speaker A: Very cool. All right, Tarun, what about you two.
01:05:15.972 - 01:06:13.700, Speaker B: Main things to your point about there being a lot of cart before the horse? I kind of think like a lot of the cryptography ZK stuff is a little cart before the horse, and that's not necessarily bad, but we're going to have all of these private networks with smart contracts soon. TM and like the Alio, Translucents, all these types of people, for sure. But I guess I think that there's not really any applications that exist, to be honest, other than transfers. Like, yes, we want private smart contracts, we want private smart contracts. We don't really have that many applications. And as kind of our CfMM thing shows, there's kind of this thing where you need to figure out how to design applications, where you partition the private part from the public part, and you're able to cleanly, abstractly, separate. The two of those and then consider the set of applications, financial applications you can build conditional on there being a clean separation between public and private data.
01:06:13.700 - 01:06:59.182, Speaker B: And I think that is sort of the realm of things that I want to really understand more carefully. And then, of course, mev. I think one thing about mev is it's like a great meme, but I do think in general, the research has been quite muddled, partially due to marketing, partially due to other things. I think fair sequencing as a thing is very half baked in a lot of ways and doesn't kind of reveal all of its warts to the average end user. At the same time, I also think mev has not been theoretically described. I think there's been some work. Like, Phil has a recent paper that kind of tries to get at things, but everything is very brute force.
01:06:59.182 - 01:07:44.566, Speaker B: It's like use formal verification or do something. And there's no actual mathematical theory that has any sort of aesthetic beauty that has shown up. Everything's very ugly or extremely it doesn't really get to the meat of the system, which is like, hey, we introduce this type of behavior. The economic equilibrium changes amongst the agents, and the new equilibrium has all of these different properties that are very different from the fully honest, non rational user case. Right. Somehow we don't have a story like that. We only have this thing of like, hey, I can do this kind of not very easy to explain mathematically thing, and maybe we find that you can make a profit.
01:07:44.566 - 01:08:30.714, Speaker B: Well, that's not like, much of a story, right, that doesn't really actually tell you what's going on amongst all participants. And so getting to something like that, that's less brute force, I think, and less computer science focused because I think, no offense, the computer science parts of mev are kind of boring in a lot of ways. They really don't illustrate the reason that people are having these big shooting wars. When I say shooting wars, I mean like data center wars and colocating next to certain miners doing X, Y, or Z, right? People don't do that stuff just because of a computer science reason alone. Right. There has to be some sort of like it's like finance. Like, why do you build a microwave towers? Well, there's like, a certain equilibrium that occurs once they actually exist.
01:08:30.714 - 01:08:47.830, Speaker B: You change the equilibrium. Right. And in some sense, that's what's happening. And yet people want to just focus on kind of like the kind of boring details. To me, boring. At least there's no aesthetics to it. People should have some sense of aesthetics when they write papers.
01:08:47.830 - 01:08:53.478, Speaker B: I don't know whether Guillermo is laughing at me or with you.
01:08:53.564 - 01:09:37.198, Speaker C: Yeah, I think to install the phrase aesthetics because I have this weird joke that I like to say, and I apologize because it might offend, in fact, some of my colleagues. But there are three fields in ranked order that have probably the worst aesthetics I've seen, and they're in exactly the following order. It is physicists, and I can say this because I'm a physicist. This one I can say without offending people. And it's because if you go read most physics papers absolutely illegible, even if you're, like, in the field, and often what ends up happening is you go and redeve everyone's results. Then right immediately after is economists. Actually, there's some cases, very special cases where they have good aesthetics, but almost universally completely illogical.
01:09:37.198 - 01:10:06.190, Speaker C: And furthermore, they often depend on parameters that you can't even measure. So they say something like, oh, the number of or the proportion of informed versus uninformed traders, and it's like, okay, good luck measuring that, looking at market data. And you can, you can come up with models and all this crap, but at the end of the day, it's like, whatever. And number three. And these are kind of the most impenetrable, and I apologize. It's computer scientists, okay, specifically theoretical computer scientists. Some algorithms papers are okay, but for the most part, almost universally illogical.
01:10:06.190 - 01:10:55.530, Speaker C: And the reason why is this kind of feeds into why I think our work is interesting is at the end of the day, there is kind of one kernel of important distilled knowledge that comes from a paper. And you should write a paper thinking very explicitly about this. And it's hard. It's really hard, because it means you end up rewriting your paper a bunch of times and you end up reworking a bunch of all of these things that at the end of the day you're like, yeah, of course, that's obvious. It's immediate from this long 50 paragraph description of the algorithm, right? Kind of what we were talking about previously. But I think the point of our research now is we like to find good and clean abstractions that explain things simply. And of course, we landed in this interesting case, which was Cfmms.
01:10:55.530 - 01:12:03.938, Speaker C: But there are so many more problems that have, in some sense, have this heuristic that if a human can intuit the behavior of a system, then that system, it's probably simple enough that you can describe it simply as well. And so I think the kind of taking the meta level here as we kind of go forward, the point is finding these pockets of things that people care about and things that people find interesting, and describing them using very simple language. And at the end of the day, it's almost universally very simple. Like, if you could work out some calculation for it, why the hell is it not simple? You don't need a sat solver to describe X or Y or Z. You could just write down a three paragraph definition from which all of these results follow. Again, we landed in Cfmms as being a particularly one such abstraction. But at the end of the day, there's millions of these things that people are kind of hinting at, and we're all slowly but surely, like, churning through, but no one's really sat down and it's hard work, right? No one's really sat down and put in the hours to be like all of these results are in fact just consequences of X, right? X here could be many things.
01:12:03.938 - 01:12:46.334, Speaker C: It could be some framework for finding out how protocols interact with mev in a simple way that is clear. It could be the same case with privacy. What can you say? What must private protocols have in order for those things? To even be real and all of these things. So I guess that's kind of where we landed. And this is the threat of all of our work at the end of the day. But we're looking forward to moving past, I guess, maybe like what I guess this trio is now known for, which is cfmms into broader spaces that are hopefully at least as if not more interesting as this area we've been exploring for the past two years.
01:12:46.452 - 01:12:57.990, Speaker A: Very cool. All right, I want to say thank you so much for walking us through all of this research, kind of landing on where you're going. I'm so excited to see what comes next. So thanks.
01:12:58.140 - 01:12:58.886, Speaker B: Thank you.
01:12:58.988 - 01:13:00.230, Speaker C: Thank you for having us.
01:13:00.380 - 01:13:07.570, Speaker A: And I want to say thank you to the podcast producer, Tanya, the podcast editor, Henrik, and to our listeners. Thanks for listening.
