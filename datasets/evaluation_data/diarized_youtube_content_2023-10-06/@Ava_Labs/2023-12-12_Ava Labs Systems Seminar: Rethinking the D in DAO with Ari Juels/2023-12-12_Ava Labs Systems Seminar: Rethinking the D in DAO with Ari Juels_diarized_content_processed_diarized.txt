00:00:10.650 - 00:00:53.566, Speaker A: Hello, everyone. Welcome back to another week of system seminars with avalabs. Today we are joined by Cornell professor and chief scientist at Chainlink Labs, who is here to talk about his recent publication that is currently in submission, revolving around Dow decentralization. Okay, thank you. Yeah, I'm afraid I've done a bit of a bait and switch here. I was going to talk originally mainly about tees, and I will talk somewhat about tes in the course of this presentation, but my focus today is going to be on dows. This presentation is hot off the presses, and the paper I'm going to be talking about appeared just a month ago with co authors you see listed here.
00:00:53.566 - 00:01:56.020, Speaker A: James Owskin and Andres Fabrega were the principal co authors of the paper. And you can find the paper at the URL given there at the bottom of the screen and in the QR code. There's been a lot of buz about daos recently, and you may or may not be aware of the many uses to which daos have been put. I'm sure everyone here has heard of maker, which is a Dao that manages a defi protocol for lending and a stablecoin. There's bitdao, which is essentially a community run investment fund. Avocado Dao, which is a gaming guild. One of the things that they do is acquire in item gain objects, magic swords, and so on and so forth, represented as nfts, which they can then lend out to guild members.
00:01:56.020 - 00:02:48.930, Speaker A: They're basically a play to earn community. Another is pleaserdao, which has a portfolio of culturally significant nfts, including the famous doge NFT, which they tokenized. There's Constitution Dao, which, again, I'm sure most people have heard of. I'm going to talk about Constitution Dao a little later in the context of Dao privacy. But in a nutshell, Constitution Dao drew together a community of people who wanted to buy a physical copy of the US constitution at auction. They bid at Sotheby's and they lost. And I'll talk about the significance of their losing and how we might remedy some of the problems that may have been responsible for their failure to win the copy of the constitution at auction.
00:02:48.930 - 00:03:49.610, Speaker A: And then there are some really bizarre daos, like Dave Dao, which is a DAO that organizes a community of people whose first name is Dave, or some variant thereof. So lots of different uses for daos. DaO, as, again, I'm sure most of you are aware, stands for decentralized autonomous organization. The a in DAO has a pretty clear meaning autonomy refers to the fact that DAO runs in a smart contract on a blockchain. The term organization is more or less of self evident significance. The challenging word to define, I think, and the focus of my talk today is going to be the d in DAO. The decentralization decentralization has multiple layers in blockchain systems, starting, of course, with the consensus layer, which ideally involves the participation of a diverse set of entities.
00:03:49.610 - 00:04:50.650, Speaker A: We define decentralization in terms of the diversity of the set of entities and the fairness of the protocol, the degree to which different entities can participate, and so on and so forth. The question of who is creating and maintaining code in a blockchain system also has a bearing on or reflects the degree to which it's centralized or decentralized. You have just a few core developers. You can argue that the system suffers from a form of centralization. A form of centralization or decentralization that people tend to focus on in blockchain systems is asset ownership. The extent to which asset ownership is concentrated, in particular among, or how large the set of entities is among which asset ownership is concentrated. What I'm going to focus on today, though, is governance, which intersects, as we'll see, with asset ownership.
00:04:50.650 - 00:05:53.360, Speaker A: And I'm going to assume here that we're talking about a DAO smart contract that doesn't have any bugs, doesn't have any backdoors. I'm going to assume that the DAO is working as advertised and ask questions of governance, assuming that the DAO is properly functional in this sense. In this case, important decisions hinge on the outcome of voting or elections. To motivate the talk, let's consider a simple example. Suppose we have a couple of daos, Minodao and whale Dao, whose asset distribution looks like this. Each slice in one of these pie charts represents an address, an on chain address, and the size of the slice reflects the number of tokens held in that address. So the thickness of a slice corresponds to the fraction of asset ownership in a particular address.
00:05:53.360 - 00:07:08.390, Speaker A: A natural question to ask here is which of these two dows is the more centralized or decentralized? And you would probably answer, or at least your knee jerk response might be that Minodao, of course, is the more decentralized Dow. After all, token ownership is spread more evenly, more equitably, among the addresses on chain. But is it really? One thing that we all know is that it's possible for one person or one entity to control multiple addresses. So in fact, this may be the reality that whale Dao has a high degree of asset ownership. Concentration assets are owned by essentially only five entities here, but Minodao is actually worse in the sense that a lion's share of its addresses are controlled by a single individual. So it may actually be the case, despite superficial appearances, that minodao is the more centralized and whaledow is the more decentralized. Okay, well, you might say that's a corner case.
00:07:08.390 - 00:08:28.350, Speaker A: Let's suppose that we've got one address per person, so the reality corresponds more closely to what the pie charts here reflect. Now, which is the more decentralized? Well, Minodao, of course, but is it really? Let's suppose that a yes no vote is taking place, and let's suppose that the outcome of the vote is determined by the majority choice. If the majority vote yes, then the outcome will be yes, and otherwise no. And I should mention, we're going to assume no minimum voting threshold here, that the outcome of the vote is decided irrespective of how many people participate in the election. But let's suppose that 97 out of 100 total minnow Dow voters don't actually participate in the vote. The reality then is that only three entities in Minodao are deciding the outcome of the voter election, as opposed to potentially five in Whaledao. So it's conceivable here that Minodao is actually the more centralized.
00:08:28.350 - 00:09:31.810, Speaker A: And again, despite superficial appearances, there are in fact a host of reasons why Minodao may in fact be more centralized than whaledeck. For example, it may be that a majority of Minodao voters are bribed to vote yes. In that case, there's a single puppet master, if you will, whoever's doing the bribing, essentially controlling the outcome of the vote here. Or let's suppose that all Minodao voters have an aligned financial instrument, interest. Rather, suppose they all belong to the same investment club. You can argue again that Minodao is, in some sense fairly centralized. So what does decentralization mean? Informally, one would characterize decentralization in terms of the diversity of viewpoints contributing to the outcome in a vote.
00:09:31.810 - 00:10:27.746, Speaker A: Another way in which this is often couched is in terms of credible neutrality. Often see that term used in connection with decentralized governance. The most common way to measure decentralization today is in terms of entropy, which I'll define in a bit. And this notion of entropy is closely related to some measures of equality or inequality in governance and wealth that you may already be familiar with or control. The Nakamoto index is one example. This is a metric proposed, I think, by Balaji Srinivasan the Nakamoto index is the smallest number of individuals required to take control of a system. Another metric closely related to entropy is the genie coefficient.
00:10:27.746 - 00:11:39.270, Speaker A: The genie coefficient is a measure of wealth inequality. It's usually measured at the granularity of a nation. So here you see a map of the world where countries are shaded according to their genie indices. And so you'll see, for instance, a relatively low genie index indicating a high degree of wealth equality in Europe and a high genie index indicating disparities in wealth in the southern half of Africa. I said that the Genie index and Nakamoto index are closely related to this notion of entropy. So what is entropy in the context of asset distribution in a DaO? Well, let's suppose that we pick a token uniformly random from the total set of tokens in the Dow denote by p sub I the probability that we hit address I when we make this selection. Then we compute the entropy over the resulting probability distribution using this well known formula.
00:11:39.270 - 00:12:39.194, Speaker A: This is just the Shannon entropy Minodao, if we compute its entropy, is going to have higher entropy than whaledao, and superficially, higher entropy seems to correspond to a higher degree of decentralization. The fact that assets are more evenly spread among addresses in minodao corresponds to higher entropy. But entropy is insensitive to a few critical things potentially going on in a DaO. One is this phenomenon that I described earlier of potential address concentration. Entropy is not going to tell you whether a host of addresses are owned by a single individual, and consequently you have a high degree of centralization. Entropy is also insensitive to what I would refer to as apathy. This other phenomenon I described according which voters may choose not to vote.
00:12:39.194 - 00:13:38.174, Speaker A: They may not vote because they're indifferent to the outcome of an election. It's common, in fact, in daos for voters not to vote. In our paper, we use the term inactivity whale to describe this typically large collection of voters and corresponding tokens that are not participating in the governance process. Entropy is also insensitive to things like bribery. Another phenomenon that I mentioned a little while ago that can contribute to centralization, the fact that voters are being bribed, of course, is not going to be reflected in the distribution of tokens in a death. In general, strong alignment among voters or among addresses is a centralizing phenomenon. So entropy doesn't quite cut it as a measure of Dow decentralization.
00:13:38.174 - 00:14:54.810, Speaker A: What does our paper we introduce a new concept that we call voting block entropy, a variant on entropy which looks like this to describe voting block entropy, and we refer to it. I should mention the refer to it as vibe, that vbe we pronounce vibe. To describe vibe, I first have to talk a bit about utility functions. Let's suppose that elections are binary, as they typically are. People are voting yes or no, so the outcome of the election is either yes or no. We can define a utility function over a player, by which I mean a voter or an address, an election, and a particular outcome in terms of the benefit to a given player p of a particular outcome in the election. We assume, for simplicity in our paper you can generalize away this assumption, but we assume symmetry in utilities as a player's utility or benefit associated with a yes vote is the additive inverse of the benefit associated with a no vote.
00:14:54.810 - 00:15:59.310, Speaker A: The intuition behind vibe is that before computing entropy, we first cluster voters by their utility functions across elections. So computing vibe is a two step process. We cluster voters by their utility functions across some set capital e of elections. We compute vibe with respect to a particular set of elections. So we have this clustering process that results in addresses and or users being clustered, and then we compute entropy over the clusters that have resulted from our over the clusters resulting from this process over utility functions, and that is vibe. How are we doing this clustering? In our paper, we rely on a relatively simple clustering function called epsilon Toc. ToC stands for threshold ordinal clustering.
00:15:59.310 - 00:17:14.230, Speaker A: In a given election, we can bucket a player's utility categorize a player's utility into one of three buckets. Either the player strongly or has a strong or somewhat has some preference for the outcome of yes or the player prefers a no outcome, or a player is relatively apathetic. By apathetic, I mean that the player's utility associated with a yes outcome, and by symmetry a no outcome is at most some small value epsilon. We can define a vector of preferences, trinary preferences, of this form, across a set of elections for a given player. This capital U, sub EP and Epsilon ToC, then is defined as follows. What this formula basically says is that two players belong in the same cluster if their primary preference vectors are identical. Let me give you an example.
00:17:14.230 - 00:17:45.886, Speaker A: This will help clarify how Epsilon TOC works. Suppose that a DAO is about to hold a retreat, and participants in the DAO are voting on what food should be served at the retreat. Well, the voters here, players are going to have different preferences with respect to different foods. So, for instance, Alice and Bob feel strongly that oranges should be served. They like oranges, whereas carol hates oranges. Everybody loves bananas. Carol dislikes chocolate and dislikes granola bars.
00:17:45.886 - 00:18:31.710, Speaker A: You'll see that Alice and Bob have differing opinions about chocolate and granola, but their opinions are kind of tepid. They're relatively apathetic about these two things. In this case, epsilon Toc would cluster Alice and Bob together. The utility vectors are identical. Either they feel the same way if their preferences are relatively strong, or they're apathetic about one food or the other. And Carol belongs in a different cluster because her utility vector differs from that of Alice and Bob. One thing you may have noticed here is that vibe is a latent variable, by which I mean we don't actually know voters'utilities.
00:18:31.710 - 00:19:30.578, Speaker A: In fact, it's often the case that voters don't know their own utilities, and your feelings about oranges may change from day to day. So we really can't reason in the real world about utilities directly. So you might ask, what good is vibe? If we can't directly measure utilities, then how can we reason about vibe at all? Or what good is it to think in terms of vibe? There are two answers to this question. The first is that although we can't directly measure vibe, vibe is a latent variable. We can measure something I'll call observable vibe, which is very closely related, gives us a good estimate in particular of epsilon ToC under a small but reasonable assumption. Let me explain that assumption. So go back to our example here, right.
00:19:30.578 - 00:20:31.430, Speaker A: We've got various utilities associated with different players and foods. How are the players here going to vote, given their utilities? Well, where players feel strongly, if a player really wants to see a particular food appear at the Dow retreat, then the player is going to vote in favor of that food and vice versa. Carol here, for instance, is voting against oranges. But where a player feels tepidly about something, it's just not worth the effort of voting. So Alice and Bob are unlikely to vote either for or against chocolate or granola. And so the way that players are voting here gives us an excellent handle on Epsilon Toc. Assuming that an apathetic player doesn't vote, assuming that apathy is reflected in a failure to vote, we actually get an exact measure of Epsilon Toc.
00:20:31.430 - 00:21:24.002, Speaker A: And so you can see, just based on how they vote, we would still cluster Alice and Bob together and place Carol in a distinct cluster of her own. That's the first answer to this question. What good is VbE as a latent variable? Well, we've got this observable variant that we can actually measure directly. The second answer to this question is that vibe, even as a paper concept, actually offers us some very useful guidance. It offers guidance that's useful to those creating and those running and those participating in doubts. Talk a bit about that guidance. In our paper, we actually identify eight lessons about Dow decentralization that you can derive by thinking about Dow decentralization through the lens of VBE.
00:21:24.002 - 00:22:31.550, Speaker A: I'm not going to have time to talk about all eight, so let me just talk about a few first, vote delegation intuitively, you might expect that delegation decreases decentralization. That's a centralizing phenomenon. Why is that? Well, what delegation involves is you're handing your voting power over to somebody else, and what most players do is hand their voting power over to some whale. Consequently, you would expect that delegation increases the effective size of whales when viewed from the perspective of governance at least, and therefore decreases decentralization. But if you think about this in terms of vibe, what may actually be happening is the following yes, tokens are being assigned to whales, but where are those tokens coming from? They're coming from a bigger whale still, namely this inactivity whale I described earlier. Remember I said that most participants in dows don't vote. They constitute part of this huge sleeping whale.
00:22:31.550 - 00:23:45.726, Speaker A: When tokens get reassigned from the inactivity whale to other whales, in many cases they'll result in a more even voting distribution and therefore higher vibe, which is to say, higher decentralization. In short, the lesson here is that if you have a big inactivity whale, delegation may actually be good for decentralization. And this is quite counterintuitive. A second lesson regards voting privacy. What does privacy have to do with decentralization? Well, there's a well known phenomenon in herding that social scientists refer to well known phenomenon voting that social scientists refer to as herding, which is where voters tend to vote in the same way that their neighbors or highly reputable people vote. For example, in a recent survey paper by Sharma et al. Some Dow participants were interviewed and some of them reported that they voted in a particular way because they wanted to avoid reputational damage.
00:23:45.726 - 00:24:42.258, Speaker A: So you see a quotation here from one of the interviewees saying, I didn't want to vote against the proposal because basically my reputation would be damaged. Well, if everyone is voting the same way, then they're basically just causing some whale to grow in size effectively. In terms of governance, that is so lack of privacy. The fact that people need to worry about their reputations causes voting alignment and therefore lowers BBE, lowers decentralization. There's an obvious remedy to this problem, which is to make ballots secret, right? And in fact, this feature was recently introduced to Snapshot, the most popular platform for Dao voting. Today, they introduced a feature they call shielded voting. Unfortunately, shielded voting provides only temporary privacy.
00:24:42.258 - 00:25:43.590, Speaker A: It conceals ballots until a vote is tallied, at which point the ballots get revealed. So there's still a risk of reputational damage. And I suspect that the reason they do this is that it's technically easier to provide this form of ephemeral privacy, considerably easier than to provide persistent privacy. But the lesson we learn by thinking about this phenomenon in terms of vibe is that persistent ballot privacy would be very useful for improving decentralization. And this is a feature that I would hope snapshot will develop over the long term. The third and final lesson, or actually pair of lessons I want to talk about, regards bribery of voters today, most dows are just not very decentralized according to any measure, whether it be entropy or vibe or something else. They're typically controlled by a few whales.
00:25:43.590 - 00:26:41.112, Speaker A: So actually the risk of bribery is probably pretty low. These whales may just be cutting backroom deals, but as dows improve their decentralization, voting outcomes are going to rely increasingly on the ballots of many participants. When that happens, systemic vote buying is going to become a risk. If you want to swing an election dependent on the choices of many voters, then you need to influence the choices of many voters. And that's why systemic risk vote buying becomes a risk under these circumstances. And there are essentially three reasons why vote buying poses a threat. The first is that although vote buying is illegal in political elections, it turns out that it's actually legal in shareholder holder voting.
00:26:41.112 - 00:27:46.028, Speaker A: You can buy proxy votes legally, and in fact, there's even a company that has set up a marketplace for proxy votes at the shareholder vote exchange. So while I'm not an attorney, I would guess that vote buying is actually legal in. A second reason that vote buying would seem to constitute a threat is that, as you are all well aware, web three has a history of monetizing pretty much anything that can be monetized. That includes transaction ordering in the form of minor maximal extractable value, includes your friends, friends, tech. It includes digital cash. Basically anything under the sun that can be turned into can be exploited for profit has been in web three. The third reason that vote buying constitutes a threat is that while smart contracts are great for setting up dows, they're also very helpful for attacking daos, in the sense that they can facilitate vote buying.
00:27:46.028 - 00:28:47.990, Speaker A: This is not true of political elections, but it is true of Dow votes, because Dao votes are digitally signed, and therefore they can be verified by smart contracts. I'm going to talk about this issue at length. Now. The question is, how practical is Dao vote buying? And it turns out to be quite practical, and quite practical in a confidential way, as I will explain now, I'm going to talk about an idea called a dark dao. Dark Dows are something that my group at Cornell Tech thanks. In particular the interest of my former student Phil, Diane has been there's something we've been exploring for about five years now. We first published a blog post in 2018 about the dark Dow concept and some coverage of this idea in Coindesk at the time.
00:28:47.990 - 00:29:59.900, Speaker A: But five years ago, while we built a prototype, it was a very crude prototype. The dark Dow that we built 2018 wasn't actually dark, for instance. But what is a dark Dow? Dark Dow is, according to the definition that we proposed in our original blog post, a decentralized cartel. Or just think of it as a smart contract, or Dow that buys on chain votes from a target, Dow opaquely meaning confidentially in the dark. The reason that dark dows can arise is that there's a pervasive assumption in essentially all blockchain systems that keys are equivalent to identities. What do I mean by this? I mean that if a user, like Alice Canonical user, has a private key, SK Suba, we assume that any transaction signed with this private key has been authorized by the user. Any transaction signed with SK Suba has been authorized by Alice, assuming, of course, that her key hasn't been stolen.
00:29:59.900 - 00:30:59.600, Speaker A: But this assumption can be broken, and it can be broken in particular through a mechanism that we refer to as key encumbrance. Key encumbrance is control of a user's private key by some program sitting in a trusted execution environment or sitting with a multiparty computation committee. But I'm going to focus on trust execution environments. Let me explain briefly what a trust execution environment is. I assume that many of you know, so I'll just give a 32nd primer here. Trust execution environment is typically a hardware supported system environment called an enclave, in which a program can execute with a couple of important security properties. The first is integrity.
00:30:59.600 - 00:32:29.820, Speaker A: The program can't be tampered with by any other process on the host in which it's executing, even by the operating system or by the owner of the physical system in which it's running. This property is very much like the integrity property for smart contracts. Smart contracts can't be altered after the fact, unless, of course, there's some pre programmed mechanism for mutability. The second property that tes confer that smart contracts don't have is confidentiality. In principle, if your Te is working correctly again, the operating system, the owner of the host other processes, cannot learn any secret state in this program X. Now there are a lot of provisos here which I'm not going to get into regarding side channel attacks, the many vulnerabilities found in Intel SGX, and so on and so forth. But assuming that Te is function correctly, you have these two properties and you have a functionality called attestation in certain tes, like intel SGX, whereby a program can generate an assertion consumable by a third party stating that an instance of that particular program is running on a te, and this instance can be bound to a particular key pair.
00:32:29.820 - 00:33:49.640, Speaker A: So by receiving this attestation, third party here knows that an instance of program X is running, and that that program X holds a particular private key, in this case SK suba. Well, as I mentioned, key encumbrance means that a key nominally belonging to a user is under the control of a program running in this type of environment. And if this is the case, then the program can implement a policy for use of that key and declare that policy to a third person in essentially provable way. So, for instance, Alice's key here might be in the control of a program X, which tells potential bribers if I'm given a sufficient bribe to vote this way for a particular choice c, I'll then sign a ballot for c, guaranteed. And you know that I'm going to vote as declared, because I'm running in a tE. One important feature of key encumbrance, as I've described it, is that it's not visible on chain. You may see Dow tokens, for instance, sent from an exchange to an address a.
00:33:49.640 - 00:34:49.660, Speaker A: You know that the address a has some corresponding private key, at least notionally belongs to a user, but it may be that that private key is sitting in a tE. There's no way to determine that simply by viewing on chain activity. Given an encumbered key, we can construct a dark DAO protocol as follows. Let's suppose we have a briber named Barbara here. Barbara can declare that she's willing to pay a dollar for a vote in her favor. Maybe she's running for the Security Council of the Dow or something, wants to gather votes such that she'll be elected to the security Council. A user with an encumbered key then can generate an attestation saying, if you give me a dollar as promised, I'll vote for you, and upon receiving the money, it will automatically sign a ballot, in this case, in Barbara's favor.
00:34:49.660 - 00:35:44.400, Speaker A: The fact that the key is encumbered here, that program X is running in a te, ensures fair exchange. What I mean by fair exchange is that Barbara will get her vote if and only if she pays the money she's promising. Additionally, Alice can't do sneaky things like revote. Many Dow voting protocols allow user to change her mind after the fact and cast a fresh ballot that overrides any previous one. Alice can't do that if her program is encumbered by if her key is encumbered by a program that prohibits revoting, which is something that Barbara would want to see if she's going to pay a bribe to Alice. But the program X can otherwise allow Alice to use her key. However, she if she wants to transfer money to Bob, that's perfectly fine.
00:35:44.400 - 00:36:23.050, Speaker A: We get confidentiality here in the sense that the only activity that's visible on chain in this exchange is the payment made by Barbara. The fact that bribery has occurred is completely visible, invisible, excuse me, on chain. It's private. It's happening off chain. And in fact, as you'll see when I describe the architecture of the dark Daoi prototype, the payment may be happening on a blockchain different from the one in which the DaO vote. That is the subject of the bribery is taking place. Let me talk a bit about that prototype.
00:36:23.050 - 00:37:07.320, Speaker A: So we built a prototype darkdow that works for attacks on daos running in Ethereum. But the back end of this darkdow runs in the Oasis Sapphire paradigm. Sapphire is a Te blockchain. It allows users to access a network of tes. And because it's a blockchain, it not only provides TE access, but also ensures that those tes are live, provides essentially the same liveness properties as conventional blockchains. It also happens to be nice and easy to use and very inexpensive. I'll give you some figures on the cost a little later.
00:37:07.320 - 00:37:48.520, Speaker A: Our darkdou is designed to work with snapshot. As I mentioned, snapshot is the most popular platform for DaO voting today, and snapshot happens to accept off chain signed ballots. So our architecture supports off chain signing of ballots. Well, this system is all well and good. This prototype that we've designed is a fully functional end to end Darkdao, but it's a little hard to use. Some users may not be familiar with Oasis, for instance. So we've also prototyped a second darkdow that we call Darkdow light designed specifically for ease of use.
00:37:48.520 - 00:39:05.958, Speaker A: The idea here is one that is of considerably more general interest. I'll explain what I mean by that in a moment. What the DarkDow light does is take a token from the target Dow, the Dow that's being attacked, and separate the two rights in that token from one another. A Dao token both represents an investment in the DAO and gives a user the right to vote. In DaO elections, those two rights can be separated, and that's exactly what our light darkdow prototype does. So what it does is accept a deposit of a token in the target dark dow, and it basically carves off the right to vote from that token, and it places this hived off voting right in a pool of voting rights. And then it takes the investment portion of that token and represents it separately as a derivative token that we call a DD token.
00:39:05.958 - 00:39:54.158, Speaker A: DD stands for dark Dow. So as I said, the voting rights hived off from any deposited target Dow tokens go into this pool and those votes get auctioned off to bribers on a per election basis. The DD token, this derivative token, is redeemable for the original DAO token. As I said, it represents the investment in the DAO. And additionally, if you own the DD token, you receive a share of the funds collected from bribers when the vote buying pool is auctioned off. So you both get investment in the target Dow and monetary benefit from bribery in the target Dow significantly. Remember, I said this is designed for ease of use.
00:39:54.158 - 00:40:30.982, Speaker A: This dark Dow significantly. DD tokens are just ordinary ERC 20s, so they can be traded like any other token on exchanges. On uniswap, for instance. The cost of this ease of use is somewhat weaker. Confidentiality and the way that confidentiality gets weakened is a little complicated, so I'm not going to get into that. But that's the trade off represented in the dark doubtlight. Well, I mentioned that I would talk about the monetary cost of transactions in oasis more broadly.
00:40:30.982 - 00:41:25.690, Speaker A: As you'll see, the cost of running a darkdown Ethereum is relatively high, but the operations needed in Ethereum are infrequent, so that cost can be amortized. Oasis is dirt cheap, and in our darkdown, most of the transactions have taken place in Oasis. Now, we included this table in our paper. Somebody picked it up and tweeted about it in what ended up being a fairly popular tweet. Observing that our paper mentioned Oasis 27 times, apparently, and concluding that sapphire paratigm is, quote, essential infrastructure for web three. This is not quite the conclusion I would come to in reading our paper, after all, we're using Oasis to attack smart contracts and ethereum. But this is not entirely off the mark.
00:41:25.690 - 00:42:26.506, Speaker A: There is actually a positive message in our work. In particular, Oasis sapphire is good for creating new, privacy preserving financial instruments. I mentioned that our darkdow like construction is of more general interest. This is what I mean. Basically, what the dark Dow and the darkdow light are doing is creating new financial instruments by splitting up existing ones and amalgamating some of the derivative pieces. One of the beneficial uses of the tools that we've constructed is for private dows. Remember I mentioned at the beginning of the talk this constitution Dow, where a bunch of community members got together and pooled funds with the objective of purchasing this physical copy of the US constitutional auction.
00:42:26.506 - 00:43:18.670, Speaker A: They raised a substantial amount of money. They raised $47 million, but they were outbid at Sotheby's by some billionaire. Many ascribe their failure to win the constitution at auction to the fact that the fundraising process was completely transparent. So competitors at auction knew in advance what their bidding limit was going to be, what their bidding cap was going to be. Well, if you were to use a dark Dow style variant of the Constitution Dow, you could conceal your fundraising amount selectively. You might reveal the fact that you'd raised a lot of money, but not, for instance, reveal the specific figure. We've released code for both of our darkdows at the GitHub repository you see pointed to here.
00:43:18.670 - 00:44:29.780, Speaker A: You might ask, well, this is attack code. Why are you releasing this publicly? Our rationale is that, as I mentioned earlier, darkdows pose little threat to daos in the short term because daos are fairly centralized today. But we think they pose a serious threat in the long term. And our hope in releasing the code is to clarify for the community the contours of the threat and to make it clear that dark dows are a real and practical threat to the ecosystem. Additionally, as I mentioned, the tools we've developed are useful for beneficial goals like privacy preserving dows of the constitution, Dow flavor. Additionally, we've been working on a countermeasure to dark Dows and to key encumbrance more generally that we call complete knowledge. And here you see a snapshot of a paper we released a couple of months ago, my group and former group members and Vitalik Buterin.
00:44:29.780 - 00:45:19.232, Speaker A: The idea in complete knowledge is to ensure for a given key that somebody knows the key explicitly. So, for instance, if Alice is going to participate in a DAO, she might prove that her key SK Suba is known to her, or at least to somebody else, because if a key is known to somebody explicitly, it can't be encumbered. Even if a program has a parent control of the key, if it's known externally, a user can override the program. How do you generate a proof of this kind? How do you show that a key is known to somebody? We can fight fire with fire. Specifically, we can fight Tes. With Tes. We can have a key encumbered by.
00:45:19.232 - 00:46:05.200, Speaker A: We shouldn't use the term encumbered controlled by a program that will attest that it actually revealed the key, and therefore the key can't be encumbered. So the key is useless for bribery. If Barbara knows that Alice knows her key. SK Subet Barbara has no assurance that, or knows that she has no assurance that Alice isn't going to override a ballot generated in Barbara's favor. Now, unfortunately, complete knowledge, for various reasons I won't get into, is not quite ready for primetime, but it is practical. For instance, we've implemented a prototype that works for mobile phones. We prototyped it for Android handsets, but it will work equally well for iPhones.
00:46:05.200 - 00:47:32.720, Speaker A: If you're interested in learning more about our research, I would suggest visiting the website of the initiative for cryptocurrencies and contracts under whose aegis this research has taken place. Ic three, as it's known, was co founded by your CEO Gunsira along with me. Let me wrap up by actually showing you, assuming everything works, a short demo of our light dark Dow. Hold on just a second here. Okay. Let me know if you're not able to hear this. I don't think we can hear it.
00:47:32.720 - 00:47:45.740, Speaker A: Okay. Mmm. All right, let me try something else.
00:48:01.800 - 00:48:49.300, Speaker B: And I'm going to explain the tokenized Darkdow light demo. And to recap the tokenized darkdow. Hello, my name is James, and I'm going to explain the tokenized Darkdow light demo. And to recap the tokenized darkdow, the point of it is to enable users to participate in a darkdow without having to handle key encumbrance themselves. So it takes DaO tokens. We have some test ones here, and it separates the ownership of the DAO token from the ability to vote with it. And what tokenized Darkdow does is rather than having the darkdow vote on behalf of users, the Darkdow contract will create and manage its own encumbered keys.
00:48:49.300 - 00:49:41.220, Speaker B: So we've deployed some test contracts on a development network to kind of demonstrate this. And the way it works is we have these Dow tokens, but let's say we don't really care how they are voted and we just want to make a little bit of extra money with them by selling them, selling the votes for every proposal that happens. So we want to participate in this darkdow. And the way to do this is we will first ask the Darkdow for a deposit address. So this means inside the te, it will generate its own fresh private key and let us know which address it corresponds to. So we will then transfer some Dow tokens from our account to this dark Dow controlled ethereum account. And from outside observers, it only looks like a regular ERC 20 transfer.
00:49:41.220 - 00:50:08.924, Speaker B: And in fact, we can do multiple ones. It doesn't even matter how this transfer is done. It could be done through a trade or something like that. And again, this just looks like a fresh Ethereum account. And now it has some Dow Tokens in it. But now we would like to prove to the darkdow that we've made this deposit because it's on Oasis, it doesn't have access to the Ethereum network directly. So we will submit what's called a state proof.
00:50:08.924 - 00:51:08.770, Speaker B: Every Ethereum block has a state tree in it. And we will show through a Merkel proof that our Deposit account now has 225 Dow tokens in it. And once we've proved to the dark Dow that we've submitted those, we can also get some mint authorization to mint some DD Tokens. And the DD token is the token derivative, and it's Redeemable for the Dow tokens that we've just submitted, plus any bribes that are accumulated in the darkdow. So now that the DarkDow knows that it controls these Dow Tokens, it can sell the votes from this Account on every proposal. And so for every proposal, it will start an auction for the votes and sell the votes to the highest bidder. And so in that way, the darkdow will accumulate bribe money over time.
00:51:08.770 - 00:52:07.860, Speaker B: And so the token holders of the DD token will eventually want to redeem their DD Token for the underlying Dow Token, plus any accumulated bribes. So to go the other direction, they will first burn their DD Tokens Opposite of Minting. And when they do that, they can prove to the Darkdoub contract that they've burned those and that they're out of circulation. And so they're claiming the Underlying. And then, so now the Darkdou Contract knows that it owes US our Dow Tokens back, and so we will ask it to sign a transaction to send these Dow Tokens back to uS. Now one caveat is the DarkDow Controlled account doesn't have any ether in it. So we do have to fund the account before it can send its transaction because it has to pay the gas fee.
00:52:07.860 - 00:52:38.370, Speaker B: So we will get the signed transaction from the DarkDow contract, then we will fund the account with some ether, and then we will submit the signed transaction that we got to send these dow tokens back to us. And we have some stuff to account for race conditions, and you can read about that in our paper. But hopefully that gives a little bit more of a demonstration of how a tokenized arcdao would look like. Thank you.
00:52:41.060 - 00:53:04.810, Speaker C: Okay, and to be clear, this isn't just a pretty graphical demo of the system. There are actual transactions happening on the back end, in development networks, on Ethereum and in oasis. I think we have just a few minutes for questions or wrap up. I'll leave it to you, Jacob, to determine how we use the remaining time.
00:53:05.500 - 00:53:07.370, Speaker A: Yeah, does anyone have any questions?
00:53:12.140 - 00:53:23.420, Speaker D: I have a question. How do you guarantee that Dow token contract is limited to just voting as a functionality?
00:53:24.000 - 00:53:52.950, Speaker C: Yeah, so that's what encumbrance does, right. The program X here in the te gets to determine exactly how Alice's key gets used. And as I mentioned, it will allow Alice to use the key for any purpose other than voting in an election to which she has committed to producing a ballot as a result of bribery. So that program can exercise a fine grained form of control over Alice's key.
00:53:54.940 - 00:53:58.280, Speaker D: Other than transferring the DAO token?
00:53:59.580 - 00:54:07.020, Speaker C: Other than anything that will interfere with her commitment to generating a vote on Barbara's behalf.
00:54:08.640 - 00:54:15.432, Speaker D: Okay, fine grained control of how private keys could be used, essentially.
00:54:15.576 - 00:54:15.932, Speaker A: Right.
00:54:15.986 - 00:54:25.504, Speaker C: Of how the private key gets used. Right. And it's the private key that controls Alice's tokens, but you still lose your.
00:54:25.542 - 00:54:33.764, Speaker D: Private if the DAO gets hacked. Well, you said the assumption is DAO is secure. Okay, yeah.
00:54:33.802 - 00:55:13.170, Speaker C: So I'm assuming that the DAO contract can't be hacked, and I'm assuming also that the te can't be hacked. The latter is a stronger assumption in general, I would say, than the former. Tes have numerous vulnerabilities disclosed, but intel SGX in particular, which is the one we're using here. But under those assumptions, the program X, as I said, has full control over Alice's key, and therefore can ensure that she casts the ballot for Barbara as promised, but otherwise allows her free use of her private key.
00:55:15.780 - 00:55:40.810, Speaker D: So I have another question. So where te is located, who controls the te, and what is the infrastructure te has some cost to run, especially with the cloud based tes. So I want to know, what do you think about this?
00:55:41.340 - 00:56:40.910, Speaker C: Well, it depends on what infrastructure the TE is running in. We're not using cloud based tes in our demo. We're using the Oasis Sapphire paraton, which is a Te based blockchain. So we get the benefits of the tes executing in a blockchain, for instance, the liveness assurances and the costs are as I described, and we have this table in our paper giving the costs in terms of denominated in the oasis cryptocurrency, which is called rose, but we also give us dollar equivalents. So if you take a look at that, you'll get a sense of what the cost for running a darkdow is on the oasis side, and then there's some cost also on the Ethereum side. In the case of the Darkdow light, we have to have a DD token contract, so we give the cost in ether and us dollar equivalents of setting up the contract and transacting with it.
00:56:41.520 - 00:56:53.650, Speaker D: So what happens after the vote? So, I assume that Alice cannot extract the sk of a from the Te, am I correct?
00:56:54.500 - 00:57:31.496, Speaker C: You could have a policy according to which, after she has used her key to generate a ballot, she can remove her key from the Te, but once her key has been extracted from the te, it can no longer be encumbered, because at that point, she knows the key, but the policy enforced by the program x, can be arbitrarily flexible, up to the point of providing assurances for Barbara that she's going to get the ballot she's paid for with her bribe.
00:57:31.608 - 00:57:33.150, Speaker D: Okay, thank you.
00:57:36.560 - 00:57:43.390, Speaker A: I think we are at time, so thank you, Professor Joles, for coming to talk to us. It was a pleasure, and we hope you have a great day.
