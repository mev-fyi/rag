00:00:02.810 - 00:00:52.718, Speaker A: Please give a warm welcome to Alex from Basslane Labs. Thank you. Thank you. My name is Alex Swatz. I'm the co founder and CEO of Fastlane Labs. And today I'm going to be talking about what's really like one of my biggest passions in Defi. When people think of MeV and they think of searchers, there's this concept of bots, and these bots are back ends running an infrastructure somewhere that are calculating optimal paths or routes or doing graph theory stuff, and that's cool, but that's actually predominantly an ethereum phenomenon on many other chains, on the majority of other chains even, we're actually seeing more and more of these calculations, more and more of the actual solving being handled at the smart contract level.
00:00:52.718 - 00:01:43.070, Speaker A: And so what I want to do today is talk about this on chain solving, which is smart contract based solving, which is taking the computation that searchers originally back in the day were doing in the back end and putting it on chain. So when we think of off chain solving ads all in the back end, lots of paths, lots of calculations. But the key is that it's very simulation dependent. Like you're running simulations, you're getting state data, but you're calculating the optimal path, the optimal swap, the optimal fulfillment, depending on whatever type of MeV or intent you're fulfilling. Off chain, then you're submitting it on chain through a relay. With on chain solving, there are no simulations necessary. You are literally just waiting for a signal or even just spamming, which is a huge problem, but you're just waiting for a signal, and then you're calculating everything in flight in real time on chain.
00:01:43.070 - 00:02:28.854, Speaker A: There's some downsides to this. There's reasons why Ethereum has been slow to adopt this newer paradigm of solving that we've seen proliferate on other ecosystems. The biggest one, the main one, is that it is less gas efficient. If you are having to check 20 different uniswap pools to see which one is the best path for you to swap in, that's going to be 20 times more gas, roughly, than if you were to check just one that you had pre calculated ahead of time at your back end. You also may or may not get huge gas costs on reverts. If you have to check 20 different pools and then you can't find profit on any of them, you might still revert and you might still have to pay gas, which is definitely a downside. One of the biggest issues with onchain solving is that there's faster alpha decay.
00:02:28.854 - 00:02:58.020, Speaker A: If you've got edge. Other people can see more of it because they can see your smart contract. There's also difficulties with inventory management, because if you're doing on chain solving, you don't really know what the result is going to be ahead of time. It's a non binary result. There's more dimensionality to the outcome, and there's also larger exploitable surface. You can't really simulate everything as thoroughly as you would want to, which makes it a little bit easier to attack. But there are some really nice benefits.
00:02:58.020 - 00:03:28.218, Speaker A: One of the optimal benefits, like in my mind, the biggest one, is that you're always going to do the best thing if you're searching on chain. If you're solving on chain, you will always be looking at the data at that time. You don't have to worry about any of your data being stale. You don't have to worry about being wrong in a reorg. You don't have to worry about any sort of unreliable simulations. You don't have to wait on a guarantee on a builder like no trust assumptions. Now, don't get me wrong, builder guarantees are great because they can add value, but they're not a prerequisite.
00:03:28.218 - 00:04:09.286, Speaker A: They're not a prerequisite. There's also huge benefits from atomic composability. When you're doing on chain solving, you can take two solutions, have one of them solve, and then another one can run right underneath it, and maybe it can find some leftovers or something that the first one missed. There's actually a ton of money to be made by just literally just going after other solvers sloppy seconds. When it comes to Mev, there's like a lot of bots on l two s that live for that. In my mind, another huge benefit is programmable execution. Especially once you start looking at the operation layer, you gain the ability to have users and solvers interact together inside of a single transaction with Ike operations.
00:04:09.286 - 00:04:53.914, Speaker A: And when you're doing on chain solving, you can literally, in real time, check back and forth. Solver have I met these conditions? User no intent, still not fulfilled. Solver all right, what about this? You gain a lot of composability for on the fly, solving that is going to be really critical, not just for execution quality for users, but for solvers being able to give competitive quotes without having to give too much risk or too much uncertainty on their end, because they can verify in real time too, if, let's say, for instance, they're receiving a swap. So why do it? Because honestly, you're going to have to. This is the future. It's already the future in most places, and it's becoming more and more of a future. Even on Ethereum main net.
00:04:53.914 - 00:05:27.746, Speaker A: The number one reason why people resort to on chain solving is because they have uncertainty about the state, about the values of reserves in different pools, about the prices at any given time. And when you don't know things, you have to solve in real time. At the smart contract level, you also might not know about sequencing priority. Like maybe you'll be first, maybe that you'll be second. Maybe the sequencer or solver or builder will put you at the very bottom. You don't really know. And so when you do on chain solving, you can make sure that regardless of where you end up, you'll always do the optimal strategy.
00:05:27.746 - 00:06:02.878, Speaker A: This also is reorg proof, which in my mind is actually a huge benefit. Like not having to worry about a reorg undoing your play or your strategy and ending up with some really hard to hedge result. It's a huge benefit. There are three factors that are driving these reasons for on chain solving proliferation. The first, and this is what's really pushing this on Ethereum mainnet right now, private transactions. If you are trying to solve or catch like Mev, you're back running on private transactions. You don't know what they are.
00:06:02.878 - 00:06:51.390, Speaker A: That's state uncertainty. That means you will benefit from handling some of your solving on chain. Now, trick is actually ending up underneath them, behind them, towards the bottom of the block. But there's a lot of value to capture by being like an on chain solver for private transactions, parallel execution, anything involving state lock is another huge driver for on chain solving. And then just in general, as block times speed up and as it becomes harder and harder to get up to date state, because the blocks are just coming out continuously, on chain solving becomes more and more profitable, and it's actually not that hard. I've got some examples here of some different ways that I went about doing it. A lot of these exchanges and Dexes will actually make it really easy for you to do it.
00:06:51.390 - 00:07:25.370, Speaker A: A lot of people have said, oh, there's no closed form solution for uniswap V three. Technically that's true. Like, you don't really know how much liquidity there is in a tick, except you actually do, because uniswap V three has a liquidity oracle. So you can actually see exactly how much liquidity there was at the beginning of the block. And every step along the way, there's a lot of really subtle ways to go about solving on chain. It's a very different skill set than when you just throw a binary search at a whole bunch of different paths or graphs. But it is something that is very exciting.
00:07:25.370 - 00:07:45.858, Speaker A: You can even do stat Arp. Before I started Fastlane, I actually was a searcher myself. A bottom of block stat arb bot. Probabilistic was actually the very last thing I ever built. I never got to turn it on. This was my last project. One of these days I will eventually go back and turn it on, but not anytime soon, probably.
00:07:45.858 - 00:08:12.074, Speaker A: But even with statar, all you have to do for this program, all you do is you just take the prices on binance. Those are the inputs. That's it. We calculate all of the SKus from the inventory on chain. We calculate all of the deltas with the decentralized exchanges on chain. You can handle all of these things on chain, and it's just like this really novel way of going about it. You can spam this.
00:08:12.074 - 00:08:40.846, Speaker A: That's not a good thing. Please don't spam. But you could if you wanted to. And it's just a way to capture things in an uncertain environment so that you can get in front of other people. Now, at Fastlane, we actually also are big believers of solution verification on chain. So the actual Fastlane entry point smart contract actually verifies that searchers or solvers paid their bids at the smart contract level. Every MEV transaction on polygon is actually going through this smart contract.
00:08:40.846 - 00:09:03.398, Speaker A: It's actually really simple. We just see the balance before, then we run the searchers transaction, then we see the balance after. And if they didn't pay their bid, if our balance didn't grow by the amount of the bid, then we revert their transaction, and we just go on to the next one for Polygon. The blocks are too fast. We cannot simulate reliably. We can try. It would be like 99% accurate, but it would be gameable.
00:09:03.398 - 00:09:19.406, Speaker A: This is not gameable. This is smart contract logic. It's decentralized, it's trustless, and we think that's the future. The problem with the future is spam. Spam is the single greatest threat in my mind to blockchain liveness. It has taken out polygon. I lost a lot of money when it did.
00:09:19.406 - 00:09:45.160, Speaker A: That's actually the origin story for Fastlane. As a relay, Solana has been taken out multiple times by spam. And the thing with spam is that spam transactions typically are on chain solving transactions. It's when you don't know about the state, and so you just spam a lot. You're trying to end up behind some sort of state delta. Like someone might do something that changes the state. You want to be the first transaction that captures it.
00:09:45.160 - 00:10:13.466, Speaker A: And in that type of situation, because you don't know you're just going to spam. And so there's a few factors at play. The biggest one is how many transactions you send out. But that's also a relative thing. Like if you send out 1000 spam transactions, but your competitor sends out like 10,000 spam transactions, then your ODs aren't very good. But if your competitor sends out five and you send out ten, your ODs are great. So a lot of these things are relative.
00:10:13.466 - 00:11:12.306, Speaker A: The math is a little bit more complex than people would intuit, naturally, but there's a lot to be taken into account. One of the other things I think is really important is that whenever you're doing any sort of on chain spammable solving, which is where you're trying to capture the MEV, optimistically thinking there might be MEV, you have to keep in mind that profit, like the MEV, profit tends to be correlated with gas prices. If you've been in the MEV industry for a while, you know, as gas prices go up, MEV also tends to go up. Gas prices are also highly correlated with volatility, like all three of them. Like volatility tends to create more MEV, which tends to create more gas prices. And it's all related. But what's interesting is that fee markets like 1559 aren't that ideal for handling this kind of thing, because even though the transaction fees might increase, the profit from spamming increases even more.
00:11:12.306 - 00:12:10.214, Speaker A: And it's like one of these situations where a fee market just by itself is great at disincentivizing, but you want a deterministic fee market. You want to really, in order to actually stop spam, you have to bring the chance of winning down to zero. And that's what MeV relays do, which, if you think about it, are actually just like ultra dynamic fee markets. There are some interesting side effects and some interesting games that have developed due to how on chain solving has been happening on L2s. One of the ones that I got really deep into myself before I stopped solving was bottom of the block. We actually like to call it top of the bottom of the block, because you want to be underneath, where the presumed users would be. Like if someone may send a transaction, you actually want to go below them, beneath them, so that if their transaction creates Mev that you can capture it you don't want to be in front of them, but there's other people that also want the same thing.
00:12:10.214 - 00:12:39.546, Speaker A: And so this led to this really interesting game that was happening on Polygon two years ago. It was really just like me and this other team. I'm sure it's more complex now, but back then, it was literally a PGA to get the top of the bottom of the block. I called it a micro PGA. It's a term I literally made up. Someone will come up with a better word for it soon, I'm sure. But it's just this really fascinating thing where it's like you're pgaing, but you don't want to actually get too high, because then you will end up in front of the user, which defeats the entire purpose.
00:12:39.546 - 00:13:15.190, Speaker A: So, yeah, there's lots of really interesting games and vectors that have to do with how the spam plays out. On chain solving also unlocks some really novel solutions. One of the most powerful things that it unlocks. And this actually segues perfectly into the last panel. Builders can provide a lot of value, not just for users, but also for solvers. For solvers that do on chain solving. If you think back to the on chain stat Arp, the only input for this call was the binance price feeds.
00:13:15.190 - 00:14:01.930, Speaker A: And so if you're looking at like a solver contract, or just the solver in general, that's looking to fulfill and swap intent for a user, or just capture MeV, they can actually have a builder put in the binance prices for them as like a trusted oracle. And that decreases their need to even be fast or even have latency. And removing latency altogether from the solver side of the equation by just having relays inject the important critical data for them, is very, very powerful. It increases the total throughput of the system dramatically. It decreases the latency centralization for searchers. And in my mind, it's like one of the biggest benefits that builders can provide and that users indirectly benefit from, too. There are some open issues.
00:14:01.930 - 00:14:41.426, Speaker A: The biggest one is the protection of the alpha. The more you put on chain, the easier it is for someone to read your bytecode. There are some very clever ways that you can use to obfuscate your bytecode. I'm not going to say what they are, because the people who told me them will hate me forever if I do. I've talked to a few different searchers. I had one, some other people have had one. It's a very important thing, and I would say that that's probably the single biggest hurdle for switching to an on chain solving model is learning how to actually protect your bytecode.
00:14:41.426 - 00:15:30.870, Speaker A: Every solution I've looked at requires use of assembly. You're going to want to really get ingrained with some assembly, do some bit shifting, maybe some zor type stuff, lots of ways to go about it, but all of them are fairly complex, and that's in my mind, the biggest hurdle for on chain solving. UX is also shifted. One of the interesting things with on chain solving is that you don't really know the outcome ahead of time. And so even though you can get robust execution like confidence by stacking multiple solutions on top of each other, which is what we do at Fastlane. With both Polygon Fastlane and Atlas, which is our app layer MeV minimization, you still don't know for sure what the execution outcome is going to be. You're confident that it's going to be good, but you don't know exactly what it'll be.
00:15:30.870 - 00:16:33.050, Speaker A: And that does have the potential for some UX implications for some apps. But there are also some solutions underway that could help mitigate or outright prevent that. Solver sophistication is another hurdle. One of the interesting things is that when you're looking at the spam style of on chain solving, technically speaking, you're kind of doing a gas like stat aRb. I put the term stat ARb in quotes because it's not really stat ARb, but in this case you're trying to basically calculate how much to spam, which is in a sense costing you the native gas token, and you also have an expectation of how much profit there might be in the MeV you capture, which may be the native gas token, in which case it's not really that stat RB, but there's still some statistics involved, especially when you factor in your competitors, and you generally do want to get a good idea of how much they're going to spam too. But ideally we don't have any spam. Ideally, Mev relays will remove all spam from the system, and I think that's like the world that we should really drive to.
00:16:33.050 - 00:17:18.546, Speaker A: The other big issue with on chain solving is that when you start gating auctions off chain, then you lose the ability to have x post bids where you know the value when you submit the bid. When you start combining on chain solving with off chain auctioneering, you do run into an issue where it becomes hard to really know the full value of winning, because you actually don't know that until it executes in real time. Now on really low gas cost chains. You can actually do the entire thing fully on chain. You could even run the entire auction on chain. That's one of the things that we're super excited about for Atlas. But on Ethereum mainnet, that might be very cost prohibitive.
00:17:18.546 - 00:17:53.710, Speaker A: But yeah, so that is the presentation. If you haven't had a chance to read the Atlas white paper yet, I really recommend you do it. We strongly believe that on chain solving is the next paradigm. Like all of you have seen the rapid adoption of these MeV boost, Mev share, et cetera. And on every other chain, this is already the default. And so as we are looking at bringing on chain solving to Ethereum, Atlas is the perfect example of that, because it is an app layer version. Like we were talking in the last panel about how apps do have a lot of order flow.
00:17:53.710 - 00:18:38.780, Speaker A: There are some UX reasons why the apps can't directly send order flow to builders, because basically the front ends can't forcibly change the user's RPC without getting a really nasty alert. But there are ways around that, such as with operations in EMP 712. And so as the technology evolves, which is what Atlas is, we think that that's really going to start introducing a new level of on chain solving. Atomic composability, intent fulfillment, MEV retainment, all these really cool things that I think have been missing from Ethereum for a while. And we're super excited to be bringing all that back to Mainnet. But yeah. Any questions? Thank you.
